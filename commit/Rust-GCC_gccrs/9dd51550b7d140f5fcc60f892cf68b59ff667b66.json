{"sha": "9dd51550b7d140f5fcc60f892cf68b59ff667b66", "node_id": "C_kwDOANBUbNoAKDlkZDUxNTUwYjdkMTQwZjVmY2M2MGY4OTJjZjY4YjU5ZmY2NjdiNjY", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-03-10T08:31:31Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-03-13T16:25:23Z"}, "message": "RISC-V: Remove RVV intrinsic API test\n\nThe API test is too huge and hard to maintain, we gonna find another way\nto do that.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.target/riscv/rvv/base/vaadd_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vv_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vv_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vv_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vv_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vv_tu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vv_tu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vv_tum-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vv_tum-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vv_tum-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vv_tumu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vv_tumu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vv_tumu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_mu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_mu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_mu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_mu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_mu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_mu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_tu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_tu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_tu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_tu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_tu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_tu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_tum_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_tum_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_tum_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_tum_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_tum_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_tum_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_tumu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_tumu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_tumu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_tumu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_tumu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaadd_vx_tumu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vv_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vv_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vv_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vv_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vv_tu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vv_tu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vv_tum-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vv_tum-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vv_tum-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vv_tumu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vv_tumu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vv_tumu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_mu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_mu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_mu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_mu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_mu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_mu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_tu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_tu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_tu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_tu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_tu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_tu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_tum_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_tum_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_tum_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_tum_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_tum_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_tum_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_tumu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_tumu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_tumu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_tumu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_tumu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vaaddu_vx_tumu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vadc_vvm-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vadc_vvm-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vadc_vvm-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vadc_vvm_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vadc_vvm_tu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vadc_vvm_tu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vadc_vxm_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vadc_vxm_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vadc_vxm_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vadc_vxm_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vadc_vxm_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vadc_vxm_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vadc_vxm_tu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vadc_vxm_tu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vadc_vxm_tu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vadc_vxm_tu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vadc_vxm_tu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vadc_vxm_tu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vv_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vv_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vv_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vv_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vv_tu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vv_tu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vv_tum-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vv_tum-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vv_tum-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vv_tumu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vv_tumu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vv_tumu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_mu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_mu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_mu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_mu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_mu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_mu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_tu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_tu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_tu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_tu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_tu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_tu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_tum_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_tum_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_tum_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_tum_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_tum_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_tum_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_tumu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_tumu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_tumu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_tumu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_tumu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vadd_vx_tumu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vv_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vv_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vv_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vv_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vv_tu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vv_tu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vv_tum-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vv_tum-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vv_tum-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vv_tumu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vv_tumu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vv_tumu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_mu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_mu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_mu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_mu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_mu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_mu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_tu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_tu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_tu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_tu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_tu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_tu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_tum_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_tum_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_tum_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_tum_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_tum_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_tum_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_tumu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_tumu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_tumu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_tumu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_tumu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vand_vx_tumu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vv_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vv_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vv_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vv_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vv_tu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vv_tu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vv_tum-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vv_tum-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vv_tum-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vv_tumu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vv_tumu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vv_tumu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_mu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_mu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_mu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_mu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_mu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_mu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_tu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_tu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_tu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_tu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_tu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_tu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_tum_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_tum_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_tum_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_tum_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_tum_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_tum_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_tumu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_tumu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_tumu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_tumu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_tumu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasub_vx_tumu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vv_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vv_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vv_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vv_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vv_tu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vv_tu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vv_tum-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vv_tum-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vv_tum-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vv_tumu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vv_tumu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vv_tumu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_mu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_mu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_mu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_mu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_mu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_mu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_tu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_tu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_tu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_tu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_tu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_tu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_tum_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_tum_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_tum_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_tum_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_tum_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_tum_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_tumu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_tumu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_tumu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_tumu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_tumu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vasubu_vx_tumu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vv_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vv_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vv_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vv_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vv_tu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vv_tu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vv_tum-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vv_tum-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vv_tum-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vv_tumu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vv_tumu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vv_tumu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_mu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_mu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_mu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_mu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_mu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_mu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_tu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_tu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_tu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_tu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_tu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_tu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_tum_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_tum_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_tum_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_tum_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_tum_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_tum_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_tumu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_tumu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_tumu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_tumu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_tumu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdiv_vx_tumu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vv_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vv_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vv_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vv_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vv_tu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vv_tu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vv_tum-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vv_tum-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vv_tum-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vv_tumu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vv_tumu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vv_tumu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_mu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_mu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_mu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_mu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_mu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_mu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_tu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_tu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_tu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_tu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_tu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_tu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_tum_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_tum_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_tum_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_tum_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_tum_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_tum_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_tumu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_tumu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_tumu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_tumu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_tumu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vdivu_vx_tumu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vle-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vle_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vle_tum-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vle_tumu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei16-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei16-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei16-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei16_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei16_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei16_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei16_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei16_tu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei16_tu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei16_tum-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei16_tum-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei16_tum-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei16_tumu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei16_tumu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei16_tumu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei32_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei32_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei32_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei32_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei32_tu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei32_tu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei32_tum-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei32_tum-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei32_tum-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei32_tumu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei32_tumu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei32_tumu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei64_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei64_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei64_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei64_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei64_tu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei64_tu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei64_tum-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei64_tum-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei64_tum-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei64_tumu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei64_tumu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei64_tumu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei8-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei8-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei8-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei8_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei8_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei8_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei8_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei8_tu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei8_tu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei8_tum-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei8_tum-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei8_tum-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei8_tumu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei8_tumu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vloxei8_tumu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vlse-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vlse_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vlse_tum-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vlse_tumu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei16-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei16-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei16-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei16_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei16_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei16_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei16_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei16_tu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei16_tu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei16_tum-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei16_tum-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei16_tum-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei16_tumu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei16_tumu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei16_tumu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei32_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei32_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei32_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei32_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei32_tu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei32_tu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei32_tum-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei32_tum-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei32_tum-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei32_tumu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei32_tumu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei32_tumu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei64_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei64_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei64_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei64_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei64_tu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei64_tu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei64_tum-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei64_tum-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei64_tum-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei64_tumu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei64_tumu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei64_tumu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei8-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei8-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei8-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei8_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei8_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei8_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei8_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei8_tu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei8_tu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei8_tum-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei8_tum-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei8_tum-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei8_tumu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei8_tumu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vluxei8_tumu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vv_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vv_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vv_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vv_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vv_tu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vv_tu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vv_tum-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vv_tum-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vv_tum-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vv_tumu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vv_tumu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vv_tumu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_mu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_mu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_mu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_mu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_mu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_mu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_tu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_tu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_tu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_tu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_tu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_tu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_tum_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_tum_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_tum_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_tum_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_tum_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_tum_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_tumu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_tumu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_tumu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_tumu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_tumu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmacc_vx_tumu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadc_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadc_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadc_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadc_vvm-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadc_vvm-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadc_vvm-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadc_vx_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadc_vx_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadc_vx_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadc_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadc_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadc_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadc_vxm_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadc_vxm_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadc_vxm_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadc_vxm_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadc_vxm_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadc_vxm_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vv_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vv_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vv_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vv_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vv_tu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vv_tu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vv_tum-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vv_tum-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vv_tum-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vv_tumu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vv_tumu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vv_tumu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vx_mu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vx_mu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vx_mu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vx_tu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vx_tu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vx_tu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vx_tum_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vx_tum_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vx_tum_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vx_tumu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vx_tumu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmadd_vx_tumu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vv_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vv_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vv_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vv_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vv_tu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vv_tu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vv_tum-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vv_tum-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vv_tum-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vv_tumu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vv_tumu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vv_tumu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_mu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_mu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_mu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_mu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_mu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_mu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_tu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_tu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_tu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_tu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_tu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_tu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_tum_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_tum_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_tum_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_tum_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_tum_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_tum_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_tumu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_tumu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_tumu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_tumu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_tumu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmax_vx_tumu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vv_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vv_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vv_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vv_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vv_tu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vv_tu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vv_tum-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vv_tum-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vv_tum-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vv_tumu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vv_tumu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vv_tumu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_mu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_mu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_mu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_mu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_mu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_mu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_tu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_tu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_tu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_tu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_tu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_tu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_tum_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_tum_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_tum_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_tum_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_tum_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_tum_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_tumu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_tumu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_tumu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_tumu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_tumu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmaxu_vx_tumu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmerge_vvm-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmerge_vvm-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmerge_vvm-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmerge_vvm-4.C: Removed.\n\t* g++.target/riscv/rvv/base/vmerge_vvm-5.C: Removed.\n\t* g++.target/riscv/rvv/base/vmerge_vvm-6.C: Removed.\n\t* g++.target/riscv/rvv/base/vmerge_vvm_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmerge_vvm_tu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmerge_vvm_tu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmerge_vvm_tu-4.C: Removed.\n\t* g++.target/riscv/rvv/base/vmerge_vvm_tu-5.C: Removed.\n\t* g++.target/riscv/rvv/base/vmerge_vvm_tu-6.C: Removed.\n\t* g++.target/riscv/rvv/base/vmerge_vxm_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmerge_vxm_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmerge_vxm_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmerge_vxm_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmerge_vxm_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmerge_vxm_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmerge_vxm_tu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmerge_vxm_tu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmerge_vxm_tu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmerge_vxm_tu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmerge_vxm_tu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmerge_vxm_tu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vv_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vv_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vv_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vv_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vv_tu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vv_tu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vv_tum-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vv_tum-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vv_tum-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vv_tumu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vv_tumu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vv_tumu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_mu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_mu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_mu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_mu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_mu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_mu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_tu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_tu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_tu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_tu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_tu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_tu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_tum_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_tum_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_tum_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_tum_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_tum_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_tum_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_tumu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_tumu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_tumu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_tumu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_tumu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmin_vx_tumu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vv_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vv_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vv_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vv_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vv_tu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vv_tu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vv_tum-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vv_tum-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vv_tum-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vv_tumu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vv_tumu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vv_tumu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_mu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_mu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_mu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_mu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_mu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_mu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_tu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_tu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_tu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_tu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_tu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_tu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_tum_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_tum_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_tum_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_tum_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_tum_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_tum_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_tumu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_tumu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_tumu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_tumu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_tumu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vminu_vx_tumu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsbc_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsbc_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsbc_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsbc_vvm-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsbc_vvm-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsbc_vvm-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsbc_vx_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsbc_vx_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsbc_vx_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsbc_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsbc_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsbc_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsbc_vxm_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsbc_vxm_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsbc_vxm_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsbc_vxm_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsbc_vxm_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsbc_vxm_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vv_m-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vv_m-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vv_m-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vv_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vv_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vv_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vx_m_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vx_m_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vx_m_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vx_m_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vx_m_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vx_m_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vx_mu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vx_mu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vx_mu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vx_mu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vx_mu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vx_mu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vx_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vx_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vx_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmseq_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vv_m-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vv_m-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vv_m-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vv_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vv_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vv_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vx_m_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vx_m_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vx_m_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vx_m_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vx_m_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vx_m_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vx_mu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vx_mu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vx_mu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vx_mu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vx_mu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vx_mu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vx_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vx_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vx_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsge_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vv_m-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vv_m-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vv_m-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vv_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vv_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vv_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vx_m_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vx_m_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vx_m_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vx_m_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vx_m_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vx_m_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vx_mu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vx_mu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vx_mu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vx_mu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vx_mu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vx_mu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vx_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vx_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vx_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgeu_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vv_m-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vv_m-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vv_m-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vv_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vv_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vv_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vx_m_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vx_m_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vx_m_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vx_m_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vx_m_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vx_m_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vx_mu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vx_mu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vx_mu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vx_mu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vx_mu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vx_mu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vx_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vx_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vx_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgt_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vv_m-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vv_m-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vv_m-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vv_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vv_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vv_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vx_m_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vx_m_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vx_m_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vx_m_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vx_m_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vx_m_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vx_mu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vx_mu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vx_mu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vx_mu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vx_mu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vx_mu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vx_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vx_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vx_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsgtu_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vv_m-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vv_m-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vv_m-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vv_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vv_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vv_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vx_m_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vx_m_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vx_m_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vx_m_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vx_m_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vx_m_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vx_mu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vx_mu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vx_mu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vx_mu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vx_mu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vx_mu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vx_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vx_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vx_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsle_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vv_m-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vv_m-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vv_m-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vv_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vv_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vv_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vx_m_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vx_m_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vx_m_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vx_m_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vx_m_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vx_m_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vx_mu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vx_mu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vx_mu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vx_mu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vx_mu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vx_mu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vx_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vx_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vx_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsleu_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vv_m-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vv_m-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vv_m-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vv_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vv_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vv_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vx_m_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vx_m_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vx_m_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vx_m_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vx_m_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vx_m_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vx_mu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vx_mu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vx_mu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vx_mu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vx_mu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vx_mu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vx_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vx_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vx_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmslt_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vv_m-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vv_m-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vv_m-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vv_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vv_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vv_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vx_m_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vx_m_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vx_m_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vx_m_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vx_m_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vx_m_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vx_mu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vx_mu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vx_mu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vx_mu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vx_mu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vx_mu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vx_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vx_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vx_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsltu_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vv_m-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vv_m-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vv_m-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vv_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vv_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vv_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vx_m_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vx_m_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vx_m_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vx_m_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vx_m_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vx_m_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vx_mu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vx_mu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vx_mu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vx_mu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vx_mu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vx_mu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vx_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vx_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vx_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmsne_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vv_mu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vv_mu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vv_mu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vv_tu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vv_tu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vv_tu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vv_tum-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vv_tum-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vv_tum-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vv_tumu-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vv_tumu-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vv_tumu-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_mu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_mu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_mu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_mu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_mu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_mu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_tu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_tu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_tu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_tu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_tu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_tu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_tum_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_tum_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_tum_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_tum_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_tum_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_tum_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_tumu_rv32-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_tumu_rv32-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_tumu_rv32-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_tumu_rv64-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_tumu_rv64-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmul_vx_tumu_rv64-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmulh_vv-1.C: Removed.\n\t* g++.target/riscv/rvv/base/vmulh_vv-2.C: Removed.\n\t* g++.target/riscv/rvv/base/vmulh_vv-3.C: Removed.\n\t* g++.target/riscv/rvv/base/vmulh_v\u2026", "tree": {"sha": "ee7789524ab9f4af52873006b0383ca7b0e64f1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee7789524ab9f4af52873006b0383ca7b0e64f1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9dd51550b7d140f5fcc60f892cf68b59ff667b66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dd51550b7d140f5fcc60f892cf68b59ff667b66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dd51550b7d140f5fcc60f892cf68b59ff667b66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dd51550b7d140f5fcc60f892cf68b59ff667b66/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}], "stats": {"total": 1232113, "additions": 0, "deletions": 1232113}, "files": [{"sha": "c75b9398e6be334b129a3a91b2e7e4a9c4e0e3f3", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vv-1.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,314 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd(vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd(vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd(vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd(vint8m1_t op1,vint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd(vint8m2_t op1,vint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd(vint8m4_t op1,vint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd(vint8m8_t op1,vint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd(vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd(vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd(vint16m1_t op1,vint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd(vint16m2_t op1,vint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd(vint16m4_t op1,vint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd(vint16m8_t op1,vint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd(vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd(vint32m1_t op1,vint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd(vint32m2_t op1,vint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd(vint32m4_t op1,vint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd(vint32m8_t op1,vint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd(vint64m1_t op1,vint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd(vint64m2_t op1,vint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd(vint64m4_t op1,vint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd(vint64m8_t op1,vint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint8mf8_t test___riscv_vaadd(vbool64_t mask,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd(vbool32_t mask,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd(vbool16_t mask,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd(vbool8_t mask,vint8m1_t op1,vint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd(vbool4_t mask,vint8m2_t op1,vint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd(vbool2_t mask,vint8m4_t op1,vint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd(vbool1_t mask,vint8m8_t op1,vint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd(vbool64_t mask,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd(vbool32_t mask,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd(vbool16_t mask,vint16m1_t op1,vint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd(vbool8_t mask,vint16m2_t op1,vint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd(vbool4_t mask,vint16m4_t op1,vint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd(vbool2_t mask,vint16m8_t op1,vint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd(vbool64_t mask,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd(vbool32_t mask,vint32m1_t op1,vint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd(vbool16_t mask,vint32m2_t op1,vint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd(vbool8_t mask,vint32m4_t op1,vint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd(vbool4_t mask,vint32m8_t op1,vint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd(vbool64_t mask,vint64m1_t op1,vint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd(vbool32_t mask,vint64m2_t op1,vint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd(vbool16_t mask,vint64m4_t op1,vint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd(vbool8_t mask,vint64m8_t op1,vint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "e78f7c1daa619b1f9e629cea8afa22358ad85fc0", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vv-2.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,314 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd(vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd(vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd(vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd(vint8m1_t op1,vint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd(vint8m2_t op1,vint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd(vint8m4_t op1,vint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd(vint8m8_t op1,vint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd(vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd(vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd(vint16m1_t op1,vint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd(vint16m2_t op1,vint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd(vint16m4_t op1,vint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd(vint16m8_t op1,vint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd(vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd(vint32m1_t op1,vint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd(vint32m2_t op1,vint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd(vint32m4_t op1,vint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd(vint32m8_t op1,vint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd(vint64m1_t op1,vint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd(vint64m2_t op1,vint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd(vint64m4_t op1,vint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd(vint64m8_t op1,vint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint8mf8_t test___riscv_vaadd(vbool64_t mask,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd(vbool32_t mask,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd(vbool16_t mask,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd(vbool8_t mask,vint8m1_t op1,vint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd(vbool4_t mask,vint8m2_t op1,vint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd(vbool2_t mask,vint8m4_t op1,vint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd(vbool1_t mask,vint8m8_t op1,vint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd(vbool64_t mask,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd(vbool32_t mask,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd(vbool16_t mask,vint16m1_t op1,vint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd(vbool8_t mask,vint16m2_t op1,vint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd(vbool4_t mask,vint16m4_t op1,vint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd(vbool2_t mask,vint16m8_t op1,vint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd(vbool64_t mask,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd(vbool32_t mask,vint32m1_t op1,vint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd(vbool16_t mask,vint32m2_t op1,vint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd(vbool8_t mask,vint32m4_t op1,vint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd(vbool4_t mask,vint32m8_t op1,vint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd(vbool64_t mask,vint64m1_t op1,vint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd(vbool32_t mask,vint64m2_t op1,vint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd(vbool16_t mask,vint64m4_t op1,vint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd(vbool8_t mask,vint64m8_t op1,vint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "6b83c1f028a8d7c9eae0357a62694a1b8b8618c0", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vv-3.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,314 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd(vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd(vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd(vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd(vint8m1_t op1,vint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd(vint8m2_t op1,vint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd(vint8m4_t op1,vint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd(vint8m8_t op1,vint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd(vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd(vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd(vint16m1_t op1,vint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd(vint16m2_t op1,vint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd(vint16m4_t op1,vint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd(vint16m8_t op1,vint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd(vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd(vint32m1_t op1,vint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd(vint32m2_t op1,vint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd(vint32m4_t op1,vint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd(vint32m8_t op1,vint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd(vint64m1_t op1,vint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd(vint64m2_t op1,vint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd(vint64m4_t op1,vint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd(vint64m8_t op1,vint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint8mf8_t test___riscv_vaadd(vbool64_t mask,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd(vbool32_t mask,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd(vbool16_t mask,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd(vbool8_t mask,vint8m1_t op1,vint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd(vbool4_t mask,vint8m2_t op1,vint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd(vbool2_t mask,vint8m4_t op1,vint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd(vbool1_t mask,vint8m8_t op1,vint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd(vbool64_t mask,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd(vbool32_t mask,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd(vbool16_t mask,vint16m1_t op1,vint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd(vbool8_t mask,vint16m2_t op1,vint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd(vbool4_t mask,vint16m4_t op1,vint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd(vbool2_t mask,vint16m8_t op1,vint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd(vbool64_t mask,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd(vbool32_t mask,vint32m1_t op1,vint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd(vbool16_t mask,vint32m2_t op1,vint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd(vbool8_t mask,vint32m4_t op1,vint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd(vbool4_t mask,vint32m8_t op1,vint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd(vbool64_t mask,vint64m1_t op1,vint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd(vbool32_t mask,vint64m2_t op1,vint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd(vbool16_t mask,vint64m4_t op1,vint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd(vbool8_t mask,vint64m8_t op1,vint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "9c010d8952a556e09b2876ae566e6b1e097f66d3", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vv_mu-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_mu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_mu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_mu-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_mu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_mu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_mu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_mu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,vint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_mu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,vint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_mu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,vint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_mu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,vint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_mu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_mu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_mu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,vint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_mu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,vint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_mu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,vint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_mu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,vint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_mu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_mu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,vint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_mu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,vint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_mu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,vint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_mu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,vint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_mu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,vint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_mu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,vint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_mu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,vint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_mu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,vint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "bd26d023fb01a7e36adb1ca7d55b86a1b6722247", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vv_mu-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_mu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_mu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_mu-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_mu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_mu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_mu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_mu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,vint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_mu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,vint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_mu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,vint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_mu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,vint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_mu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_mu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_mu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,vint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_mu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,vint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_mu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,vint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_mu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,vint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_mu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_mu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,vint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_mu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,vint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_mu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,vint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_mu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,vint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_mu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,vint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_mu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,vint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_mu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,vint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_mu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,vint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "6e94030534945660a90f815fd0db5b41c6f90cdb", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vv_mu-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_mu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_mu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_mu-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_mu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_mu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_mu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_mu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,vint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_mu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,vint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_mu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,vint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_mu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,vint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_mu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_mu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_mu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,vint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_mu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,vint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_mu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,vint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_mu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,vint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_mu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_mu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,vint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_mu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,vint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_mu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,vint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_mu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,vint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_mu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,vint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_mu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,vint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_mu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,vint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_mu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,vint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "139489edbb3f96d83c3f3f7bb374a31020323450", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vv_tu-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tu-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tu(vint8mf8_t merge,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tu(vint8mf4_t merge,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tu(vint8mf2_t merge,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tu(vint8m1_t merge,vint8m1_t op1,vint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tu(vint8m2_t merge,vint8m2_t op1,vint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tu(vint8m4_t merge,vint8m4_t op1,vint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tu(vint8m8_t merge,vint8m8_t op1,vint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tu(vint16mf4_t merge,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tu(vint16mf2_t merge,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tu(vint16m1_t merge,vint16m1_t op1,vint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tu(vint16m2_t merge,vint16m2_t op1,vint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tu(vint16m4_t merge,vint16m4_t op1,vint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tu(vint16m8_t merge,vint16m8_t op1,vint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tu(vint32mf2_t merge,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tu(vint32m1_t merge,vint32m1_t op1,vint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tu(vint32m2_t merge,vint32m2_t op1,vint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tu(vint32m4_t merge,vint32m4_t op1,vint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tu(vint32m8_t merge,vint32m8_t op1,vint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tu(vint64m1_t merge,vint64m1_t op1,vint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tu(vint64m2_t merge,vint64m2_t op1,vint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tu(vint64m4_t merge,vint64m4_t op1,vint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tu(vint64m8_t merge,vint64m8_t op1,vint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "8a35625fcad5139ba1870d02c2487d5345f378b0", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vv_tu-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tu-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tu(vint8mf8_t merge,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tu(vint8mf4_t merge,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tu(vint8mf2_t merge,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tu(vint8m1_t merge,vint8m1_t op1,vint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tu(vint8m2_t merge,vint8m2_t op1,vint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tu(vint8m4_t merge,vint8m4_t op1,vint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tu(vint8m8_t merge,vint8m8_t op1,vint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tu(vint16mf4_t merge,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tu(vint16mf2_t merge,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tu(vint16m1_t merge,vint16m1_t op1,vint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tu(vint16m2_t merge,vint16m2_t op1,vint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tu(vint16m4_t merge,vint16m4_t op1,vint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tu(vint16m8_t merge,vint16m8_t op1,vint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tu(vint32mf2_t merge,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tu(vint32m1_t merge,vint32m1_t op1,vint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tu(vint32m2_t merge,vint32m2_t op1,vint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tu(vint32m4_t merge,vint32m4_t op1,vint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tu(vint32m8_t merge,vint32m8_t op1,vint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tu(vint64m1_t merge,vint64m1_t op1,vint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tu(vint64m2_t merge,vint64m2_t op1,vint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tu(vint64m4_t merge,vint64m4_t op1,vint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tu(vint64m8_t merge,vint64m8_t op1,vint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "aab36ce2bfc001349d827c04089ddded93577c4b", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vv_tu-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tu-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tu(vint8mf8_t merge,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tu(vint8mf4_t merge,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tu(vint8mf2_t merge,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tu(vint8m1_t merge,vint8m1_t op1,vint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tu(vint8m2_t merge,vint8m2_t op1,vint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tu(vint8m4_t merge,vint8m4_t op1,vint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tu(vint8m8_t merge,vint8m8_t op1,vint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tu(vint16mf4_t merge,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tu(vint16mf2_t merge,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tu(vint16m1_t merge,vint16m1_t op1,vint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tu(vint16m2_t merge,vint16m2_t op1,vint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tu(vint16m4_t merge,vint16m4_t op1,vint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tu(vint16m8_t merge,vint16m8_t op1,vint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tu(vint32mf2_t merge,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tu(vint32m1_t merge,vint32m1_t op1,vint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tu(vint32m2_t merge,vint32m2_t op1,vint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tu(vint32m4_t merge,vint32m4_t op1,vint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tu(vint32m8_t merge,vint32m8_t op1,vint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tu(vint64m1_t merge,vint64m1_t op1,vint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tu(vint64m2_t merge,vint64m2_t op1,vint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tu(vint64m4_t merge,vint64m4_t op1,vint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tu(vint64m8_t merge,vint64m8_t op1,vint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "e7aa8505c4293f1cd545ea180f81bff58ef9e7bc", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vv_tum-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tum-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tum-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tum-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tum(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tum(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tum(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tum(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,vint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tum(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,vint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tum(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,vint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tum(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,vint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tum(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tum(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tum(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,vint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tum(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,vint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tum(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,vint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tum(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,vint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tum(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tum(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,vint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tum(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,vint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tum(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,vint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tum(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,vint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tum(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,vint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tum(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,vint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tum(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,vint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tum(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,vint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "146e552e4db4b7502dfd877ecae7ba6f924eb014", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vv_tum-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tum-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tum-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tum-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tum(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tum(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tum(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tum(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,vint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tum(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,vint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tum(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,vint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tum(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,vint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tum(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tum(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tum(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,vint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tum(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,vint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tum(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,vint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tum(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,vint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tum(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tum(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,vint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tum(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,vint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tum(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,vint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tum(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,vint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tum(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,vint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tum(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,vint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tum(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,vint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tum(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,vint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "0b9b02052a66f36ef34d407b00b956cd074c5e07", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vv_tum-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tum-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tum-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tum-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tum(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tum(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tum(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tum(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,vint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tum(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,vint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tum(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,vint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tum(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,vint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tum(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tum(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tum(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,vint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tum(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,vint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tum(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,vint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tum(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,vint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tum(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tum(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,vint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tum(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,vint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tum(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,vint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tum(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,vint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tum(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,vint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tum(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,vint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tum(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,vint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tum(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,vint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "1805fbe3605c0029929654f29c739cec03a0d807", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vv_tumu-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tumu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tumu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tumu-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tumu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tumu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tumu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tumu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,vint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tumu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,vint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tumu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,vint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tumu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,vint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tumu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tumu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tumu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,vint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tumu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,vint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tumu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,vint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tumu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,vint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tumu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tumu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,vint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tumu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,vint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tumu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,vint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tumu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,vint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tumu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,vint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tumu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,vint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tumu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,vint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tumu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,vint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "4bdac037d26d96540d66ec7afae167c32e329667", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vv_tumu-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tumu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tumu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tumu-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tumu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tumu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tumu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tumu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,vint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tumu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,vint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tumu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,vint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tumu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,vint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tumu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tumu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tumu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,vint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tumu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,vint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tumu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,vint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tumu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,vint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tumu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tumu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,vint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tumu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,vint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tumu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,vint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tumu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,vint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tumu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,vint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tumu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,vint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tumu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,vint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tumu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,vint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "0f6709e0ff49ea0c0e5d69b6d25a20296dd68f9e", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vv_tumu-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tumu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tumu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vv_tumu-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tumu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tumu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tumu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tumu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,vint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tumu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,vint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tumu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,vint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tumu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,vint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tumu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tumu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tumu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,vint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tumu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,vint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tumu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,vint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tumu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,vint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tumu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tumu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,vint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tumu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,vint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tumu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,vint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tumu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,vint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tumu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,vint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tumu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,vint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tumu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,vint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tumu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,vint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "388d76b999279071cdd5b2078a990e8d55254722", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_mu_rv32-1.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_mu_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_mu_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_mu_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,157 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_mu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_mu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_mu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_mu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_mu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_mu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_mu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_mu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_mu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_mu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_mu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_mu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_mu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_mu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_mu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_mu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_mu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_mu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_mu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_mu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_mu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_mu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 4 } } */"}, {"sha": "f175c03680a6ae3e8c6a828190827ee4f34d1d8e", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_mu_rv32-2.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_mu_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_mu_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_mu_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,157 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_mu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_mu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_mu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_mu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_mu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_mu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_mu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_mu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_mu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_mu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_mu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_mu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_mu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_mu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_mu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_mu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_mu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_mu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_mu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_mu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_mu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_mu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 4 } } */"}, {"sha": "de16b8101265601e229a339df12fb192a09a9b9b", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_mu_rv32-3.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_mu_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_mu_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_mu_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,157 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_mu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_mu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_mu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_mu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_mu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_mu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_mu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_mu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_mu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_mu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_mu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_mu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_mu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_mu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_mu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_mu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_mu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_mu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_mu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_mu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_mu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_mu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 4 } } */"}, {"sha": "b3d6fb6853b5a764edfae8ee4616087076684b52", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_mu_rv64-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_mu_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_mu_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_mu_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_mu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_mu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_mu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_mu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_mu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_mu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_mu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_mu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_mu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_mu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_mu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_mu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_mu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_mu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_mu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_mu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_mu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_mu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_mu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_mu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_mu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_mu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "dd799deeb9e4a0279835ccf170dd05e9c97e0db6", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_mu_rv64-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_mu_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_mu_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_mu_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_mu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_mu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_mu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_mu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_mu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_mu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_mu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_mu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_mu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_mu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_mu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_mu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_mu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_mu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_mu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_mu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_mu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_mu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_mu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_mu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_mu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_mu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "c2a7cdf6d544c39815313906c4ab9be4735d5b02", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_mu_rv64-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_mu_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_mu_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_mu_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_mu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_mu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_mu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_mu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_mu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_mu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_mu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_mu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_mu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_mu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_mu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_mu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_mu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_mu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_mu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_mu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_mu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_mu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_mu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_mu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_mu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_mu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "4c25dd303ecce04c61fc96e506c551c61bc9d822", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_rv32-1.C", "status": "removed", "additions": 0, "deletions": 308, "changes": 308, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,308 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd(vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd(vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd(vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd(vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd(vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd(vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd(vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd(vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd(vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd(vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd(vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd(vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd(vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd(vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd(vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd(vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd(vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd(vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd(vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd(vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd(vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd(vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint8mf8_t test___riscv_vaadd(vbool64_t mask,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd(vbool32_t mask,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd(vbool16_t mask,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd(vbool8_t mask,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd(vbool4_t mask,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd(vbool2_t mask,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd(vbool1_t mask,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd(vbool64_t mask,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd(vbool32_t mask,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd(vbool16_t mask,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd(vbool8_t mask,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd(vbool4_t mask,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd(vbool2_t mask,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd(vbool64_t mask,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd(vbool32_t mask,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd(vbool16_t mask,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd(vbool8_t mask,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd(vbool4_t mask,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd(vbool64_t mask,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd(vbool32_t mask,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd(vbool16_t mask,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd(vbool8_t mask,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 4 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 4 } } */"}, {"sha": "31dbc2021bad64f02965d93a05700f728a885a3b", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_rv32-2.C", "status": "removed", "additions": 0, "deletions": 308, "changes": 308, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,308 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd(vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd(vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd(vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd(vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd(vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd(vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd(vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd(vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd(vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd(vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd(vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd(vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd(vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd(vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd(vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd(vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd(vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd(vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd(vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd(vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd(vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd(vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint8mf8_t test___riscv_vaadd(vbool64_t mask,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd(vbool32_t mask,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd(vbool16_t mask,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd(vbool8_t mask,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd(vbool4_t mask,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd(vbool2_t mask,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd(vbool1_t mask,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd(vbool64_t mask,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd(vbool32_t mask,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd(vbool16_t mask,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd(vbool8_t mask,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd(vbool4_t mask,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd(vbool2_t mask,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd(vbool64_t mask,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd(vbool32_t mask,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd(vbool16_t mask,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd(vbool8_t mask,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd(vbool4_t mask,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd(vbool64_t mask,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd(vbool32_t mask,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd(vbool16_t mask,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd(vbool8_t mask,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 4 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 4 } } */"}, {"sha": "c7d40fd2413336db0389e7ba17a74a832f313a4a", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_rv32-3.C", "status": "removed", "additions": 0, "deletions": 308, "changes": 308, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,308 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd(vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd(vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd(vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd(vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd(vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd(vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd(vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd(vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd(vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd(vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd(vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd(vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd(vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd(vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd(vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd(vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd(vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd(vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd(vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd(vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd(vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd(vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint8mf8_t test___riscv_vaadd(vbool64_t mask,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd(vbool32_t mask,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd(vbool16_t mask,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd(vbool8_t mask,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd(vbool4_t mask,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd(vbool2_t mask,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd(vbool1_t mask,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd(vbool64_t mask,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd(vbool32_t mask,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd(vbool16_t mask,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd(vbool8_t mask,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd(vbool4_t mask,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd(vbool2_t mask,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd(vbool64_t mask,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd(vbool32_t mask,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd(vbool16_t mask,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd(vbool8_t mask,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd(vbool4_t mask,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd(vbool64_t mask,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd(vbool32_t mask,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd(vbool16_t mask,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd(vbool8_t mask,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 4 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 4 } } */"}, {"sha": "d7563cc668936173bde4cc062fc06eb89ee72a36", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_rv64-1.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,314 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd(vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd(vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd(vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd(vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd(vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd(vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd(vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd(vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd(vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd(vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd(vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd(vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd(vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd(vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd(vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd(vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd(vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd(vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd(vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd(vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd(vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd(vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,vl);\n-}\n-\n-\n-vint8mf8_t test___riscv_vaadd(vbool64_t mask,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd(vbool32_t mask,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd(vbool16_t mask,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd(vbool8_t mask,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd(vbool4_t mask,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd(vbool2_t mask,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd(vbool1_t mask,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd(vbool64_t mask,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd(vbool32_t mask,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd(vbool16_t mask,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd(vbool8_t mask,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd(vbool4_t mask,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd(vbool2_t mask,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd(vbool64_t mask,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd(vbool32_t mask,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd(vbool16_t mask,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd(vbool8_t mask,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd(vbool4_t mask,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd(vbool64_t mask,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd(vbool32_t mask,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd(vbool16_t mask,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd(vbool8_t mask,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "0b570d389aafa54596fb1c09e40142a43b2cd053", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_rv64-2.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,314 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd(vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd(vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd(vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd(vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd(vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd(vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd(vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd(vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd(vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd(vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd(vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd(vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd(vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd(vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd(vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd(vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd(vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd(vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd(vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd(vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd(vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd(vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,31);\n-}\n-\n-\n-vint8mf8_t test___riscv_vaadd(vbool64_t mask,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd(vbool32_t mask,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd(vbool16_t mask,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd(vbool8_t mask,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd(vbool4_t mask,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd(vbool2_t mask,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd(vbool1_t mask,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd(vbool64_t mask,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd(vbool32_t mask,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd(vbool16_t mask,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd(vbool8_t mask,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd(vbool4_t mask,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd(vbool2_t mask,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd(vbool64_t mask,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd(vbool32_t mask,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd(vbool16_t mask,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd(vbool8_t mask,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd(vbool4_t mask,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd(vbool64_t mask,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd(vbool32_t mask,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd(vbool16_t mask,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd(vbool8_t mask,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "6a45b4a871c04131ef4fd7f4a032045704699cca", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_rv64-3.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,314 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd(vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd(vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd(vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd(vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd(vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd(vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd(vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd(vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd(vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd(vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd(vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd(vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd(vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd(vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd(vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd(vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd(vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd(vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd(vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd(vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd(vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd(vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(op1,op2,32);\n-}\n-\n-\n-vint8mf8_t test___riscv_vaadd(vbool64_t mask,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd(vbool32_t mask,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd(vbool16_t mask,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd(vbool8_t mask,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd(vbool4_t mask,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd(vbool2_t mask,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd(vbool1_t mask,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd(vbool64_t mask,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd(vbool32_t mask,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd(vbool16_t mask,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd(vbool8_t mask,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd(vbool4_t mask,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd(vbool2_t mask,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd(vbool64_t mask,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd(vbool32_t mask,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd(vbool16_t mask,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd(vbool8_t mask,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd(vbool4_t mask,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd(vbool64_t mask,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd(vbool32_t mask,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd(vbool16_t mask,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd(vbool8_t mask,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd(mask,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "9690378266f4973f6db24a2104ff02b4c5222f10", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_tu_rv32-1.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tu_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tu_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tu_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,157 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tu(vint8mf8_t merge,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tu(vint8mf4_t merge,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tu(vint8mf2_t merge,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tu(vint8m1_t merge,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tu(vint8m2_t merge,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tu(vint8m4_t merge,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tu(vint8m8_t merge,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tu(vint16mf4_t merge,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tu(vint16mf2_t merge,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tu(vint16m1_t merge,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tu(vint16m2_t merge,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tu(vint16m4_t merge,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tu(vint16m8_t merge,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tu(vint32mf2_t merge,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tu(vint32m1_t merge,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tu(vint32m2_t merge,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tu(vint32m4_t merge,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tu(vint32m8_t merge,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tu(vint64m1_t merge,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tu(vint64m2_t merge,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tu(vint64m4_t merge,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tu(vint64m8_t merge,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 4 } } */"}, {"sha": "9a55587dc89b1c9b8d9f35ff6029412f762850ae", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_tu_rv32-2.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tu_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tu_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tu_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,157 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tu(vint8mf8_t merge,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tu(vint8mf4_t merge,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tu(vint8mf2_t merge,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tu(vint8m1_t merge,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tu(vint8m2_t merge,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tu(vint8m4_t merge,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tu(vint8m8_t merge,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tu(vint16mf4_t merge,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tu(vint16mf2_t merge,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tu(vint16m1_t merge,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tu(vint16m2_t merge,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tu(vint16m4_t merge,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tu(vint16m8_t merge,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tu(vint32mf2_t merge,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tu(vint32m1_t merge,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tu(vint32m2_t merge,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tu(vint32m4_t merge,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tu(vint32m8_t merge,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tu(vint64m1_t merge,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tu(vint64m2_t merge,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tu(vint64m4_t merge,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tu(vint64m8_t merge,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 4 } } */"}, {"sha": "35667cdc0bd900316df877a36b2c467a66747828", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_tu_rv32-3.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tu_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tu_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tu_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,157 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tu(vint8mf8_t merge,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tu(vint8mf4_t merge,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tu(vint8mf2_t merge,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tu(vint8m1_t merge,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tu(vint8m2_t merge,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tu(vint8m4_t merge,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tu(vint8m8_t merge,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tu(vint16mf4_t merge,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tu(vint16mf2_t merge,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tu(vint16m1_t merge,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tu(vint16m2_t merge,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tu(vint16m4_t merge,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tu(vint16m8_t merge,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tu(vint32mf2_t merge,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tu(vint32m1_t merge,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tu(vint32m2_t merge,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tu(vint32m4_t merge,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tu(vint32m8_t merge,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tu(vint64m1_t merge,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tu(vint64m2_t merge,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tu(vint64m4_t merge,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tu(vint64m8_t merge,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 4 } } */"}, {"sha": "5688a273da19daf67d40dc92285f74c68e56931e", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_tu_rv64-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tu_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tu_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tu_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tu(vint8mf8_t merge,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tu(vint8mf4_t merge,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tu(vint8mf2_t merge,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tu(vint8m1_t merge,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tu(vint8m2_t merge,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tu(vint8m4_t merge,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tu(vint8m8_t merge,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tu(vint16mf4_t merge,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tu(vint16mf2_t merge,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tu(vint16m1_t merge,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tu(vint16m2_t merge,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tu(vint16m4_t merge,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tu(vint16m8_t merge,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tu(vint32mf2_t merge,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tu(vint32m1_t merge,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tu(vint32m2_t merge,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tu(vint32m4_t merge,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tu(vint32m8_t merge,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tu(vint64m1_t merge,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tu(vint64m2_t merge,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tu(vint64m4_t merge,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tu(vint64m8_t merge,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */"}, {"sha": "a2c4618d56d4f578982a35eb3f4f87e23f77540a", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_tu_rv64-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tu_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tu_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tu_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tu(vint8mf8_t merge,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tu(vint8mf4_t merge,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tu(vint8mf2_t merge,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tu(vint8m1_t merge,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tu(vint8m2_t merge,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tu(vint8m4_t merge,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tu(vint8m8_t merge,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tu(vint16mf4_t merge,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tu(vint16mf2_t merge,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tu(vint16m1_t merge,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tu(vint16m2_t merge,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tu(vint16m4_t merge,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tu(vint16m8_t merge,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tu(vint32mf2_t merge,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tu(vint32m1_t merge,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tu(vint32m2_t merge,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tu(vint32m4_t merge,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tu(vint32m8_t merge,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tu(vint64m1_t merge,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tu(vint64m2_t merge,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tu(vint64m4_t merge,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tu(vint64m8_t merge,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */"}, {"sha": "0d69aee787818e221dcc6329c06e9dddf889c509", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_tu_rv64-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tu_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tu_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tu_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tu(vint8mf8_t merge,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tu(vint8mf4_t merge,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tu(vint8mf2_t merge,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tu(vint8m1_t merge,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tu(vint8m2_t merge,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tu(vint8m4_t merge,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tu(vint8m8_t merge,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tu(vint16mf4_t merge,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tu(vint16mf2_t merge,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tu(vint16m1_t merge,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tu(vint16m2_t merge,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tu(vint16m4_t merge,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tu(vint16m8_t merge,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tu(vint32mf2_t merge,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tu(vint32m1_t merge,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tu(vint32m2_t merge,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tu(vint32m4_t merge,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tu(vint32m8_t merge,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tu(vint64m1_t merge,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tu(vint64m2_t merge,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tu(vint64m4_t merge,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tu(vint64m8_t merge,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tu(merge,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */"}, {"sha": "f5a3ee73a584abd06500a637f4528ee98e525957", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_tum_rv32-1.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tum_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tum_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tum_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,157 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tum(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tum(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tum(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tum(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tum(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tum(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tum(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tum(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tum(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tum(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tum(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tum(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tum(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tum(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tum(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tum(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tum(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tum(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tum(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tum(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tum(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tum(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 4 } } */"}, {"sha": "94e4912c60240ff738e4f19a975bf27d1b31cdcf", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_tum_rv32-2.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tum_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tum_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tum_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,157 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tum(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tum(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tum(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tum(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tum(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tum(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tum(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tum(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tum(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tum(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tum(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tum(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tum(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tum(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tum(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tum(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tum(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tum(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tum(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tum(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tum(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tum(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 4 } } */"}, {"sha": "11db3a8ab571031f941c30df88f22c4f58278a56", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_tum_rv32-3.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tum_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tum_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tum_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,157 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tum(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tum(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tum(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tum(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tum(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tum(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tum(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tum(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tum(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tum(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tum(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tum(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tum(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tum(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tum(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tum(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tum(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tum(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tum(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tum(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tum(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tum(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 4 } } */"}, {"sha": "7613259525c79e3543a5f7021b55f6c16901bcf6", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_tum_rv64-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tum_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tum_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tum_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tum(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tum(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tum(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tum(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tum(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tum(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tum(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tum(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tum(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tum(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tum(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tum(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tum(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tum(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tum(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tum(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tum(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tum(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tum(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tum(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tum(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tum(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "005e790f84c32caedccb7988afa57653308ee3d5", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_tum_rv64-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tum_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tum_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tum_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tum(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tum(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tum(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tum(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tum(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tum(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tum(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tum(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tum(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tum(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tum(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tum(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tum(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tum(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tum(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tum(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tum(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tum(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tum(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tum(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tum(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tum(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "2b97d49c5baa5bae5fc70ed27b61f126336dfc06", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_tum_rv64-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tum_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tum_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tum_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tum(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tum(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tum(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tum(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tum(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tum(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tum(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tum(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tum(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tum(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tum(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tum(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tum(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tum(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tum(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tum(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tum(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tum(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tum(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tum(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tum(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tum(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "3f9e1596d9da330b0a2fd4076edbc6d84f14cde5", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_tumu_rv32-1.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tumu_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tumu_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tumu_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,157 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tumu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tumu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tumu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tumu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tumu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tumu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tumu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tumu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tumu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tumu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tumu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tumu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tumu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tumu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tumu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tumu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tumu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tumu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tumu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tumu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tumu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tumu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 4 } } */"}, {"sha": "0bcbb47b5a2d12f0207161458eaed11bbe26d07c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_tumu_rv32-2.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tumu_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tumu_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tumu_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,157 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tumu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tumu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tumu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tumu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tumu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tumu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tumu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tumu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tumu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tumu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tumu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tumu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tumu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tumu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tumu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tumu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tumu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tumu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tumu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tumu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tumu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tumu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 4 } } */"}, {"sha": "abb7abe67516bed1d0e61bf3bbb27328075f02c5", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_tumu_rv32-3.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tumu_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tumu_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tumu_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,157 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tumu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tumu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tumu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tumu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tumu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tumu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tumu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tumu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tumu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tumu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tumu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tumu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tumu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tumu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tumu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tumu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tumu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tumu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tumu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tumu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tumu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tumu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaadd\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 4 } } */"}, {"sha": "f4935c4c2492f8f3b8125985523c69a44e323117", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_tumu_rv64-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tumu_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tumu_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tumu_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tumu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tumu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tumu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tumu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tumu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tumu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tumu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tumu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tumu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tumu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tumu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tumu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tumu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tumu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tumu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tumu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tumu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tumu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tumu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tumu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tumu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tumu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "9efea57754bac397ab3da4396b9954e1a9068c55", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_tumu_rv64-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tumu_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tumu_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tumu_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tumu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tumu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tumu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tumu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tumu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tumu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tumu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tumu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tumu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tumu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tumu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tumu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tumu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tumu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tumu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tumu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tumu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tumu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tumu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tumu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tumu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tumu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "0ec73931b4fa287fe7e47a736c23c8b9e6ada276", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaadd_vx_tumu_rv64-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tumu_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tumu_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaadd_vx_tumu_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vaadd_tumu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8mf4_t test___riscv_vaadd_tumu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8mf2_t test___riscv_vaadd_tumu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m1_t test___riscv_vaadd_tumu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m2_t test___riscv_vaadd_tumu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m4_t test___riscv_vaadd_tumu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint8m8_t test___riscv_vaadd_tumu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,int8_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16mf4_t test___riscv_vaadd_tumu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16mf2_t test___riscv_vaadd_tumu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m1_t test___riscv_vaadd_tumu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m2_t test___riscv_vaadd_tumu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m4_t test___riscv_vaadd_tumu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint16m8_t test___riscv_vaadd_tumu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,int16_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32mf2_t test___riscv_vaadd_tumu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m1_t test___riscv_vaadd_tumu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m2_t test___riscv_vaadd_tumu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m4_t test___riscv_vaadd_tumu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint32m8_t test___riscv_vaadd_tumu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,int32_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m1_t test___riscv_vaadd_tumu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m2_t test___riscv_vaadd_tumu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m4_t test___riscv_vaadd_tumu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vint64m8_t test___riscv_vaadd_tumu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,int64_t op2,size_t vl)\n-{\n-    return __riscv_vaadd_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vaadd\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "d9dba2e3217cc28f7241043526772697423e07c2", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vv-1.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,314 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu(vuint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu(vuint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu(vuint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu(vuint8m1_t op1,vuint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu(vuint8m2_t op1,vuint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu(vuint8m4_t op1,vuint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu(vuint8m8_t op1,vuint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu(vuint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu(vuint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu(vuint16m1_t op1,vuint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu(vuint16m2_t op1,vuint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu(vuint16m4_t op1,vuint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu(vuint16m8_t op1,vuint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu(vuint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu(vuint32m1_t op1,vuint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu(vuint32m2_t op1,vuint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu(vuint32m4_t op1,vuint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu(vuint32m8_t op1,vuint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu(vuint64m1_t op1,vuint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu(vuint64m2_t op1,vuint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu(vuint64m4_t op1,vuint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu(vuint64m8_t op1,vuint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint8mf8_t test___riscv_vaaddu(vbool64_t mask,vuint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu(vbool32_t mask,vuint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu(vbool16_t mask,vuint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu(vbool8_t mask,vuint8m1_t op1,vuint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu(vbool4_t mask,vuint8m2_t op1,vuint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu(vbool2_t mask,vuint8m4_t op1,vuint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu(vbool1_t mask,vuint8m8_t op1,vuint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu(vbool64_t mask,vuint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu(vbool32_t mask,vuint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu(vbool16_t mask,vuint16m1_t op1,vuint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu(vbool8_t mask,vuint16m2_t op1,vuint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu(vbool4_t mask,vuint16m4_t op1,vuint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu(vbool2_t mask,vuint16m8_t op1,vuint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu(vbool64_t mask,vuint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu(vbool32_t mask,vuint32m1_t op1,vuint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu(vbool16_t mask,vuint32m2_t op1,vuint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu(vbool8_t mask,vuint32m4_t op1,vuint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu(vbool4_t mask,vuint32m8_t op1,vuint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu(vbool64_t mask,vuint64m1_t op1,vuint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu(vbool32_t mask,vuint64m2_t op1,vuint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu(vbool16_t mask,vuint64m4_t op1,vuint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu(vbool8_t mask,vuint64m8_t op1,vuint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "d28213dae20afe0847e323be9dd11fd814f8429f", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vv-2.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,314 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu(vuint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu(vuint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu(vuint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu(vuint8m1_t op1,vuint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu(vuint8m2_t op1,vuint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu(vuint8m4_t op1,vuint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu(vuint8m8_t op1,vuint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu(vuint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu(vuint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu(vuint16m1_t op1,vuint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu(vuint16m2_t op1,vuint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu(vuint16m4_t op1,vuint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu(vuint16m8_t op1,vuint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu(vuint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu(vuint32m1_t op1,vuint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu(vuint32m2_t op1,vuint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu(vuint32m4_t op1,vuint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu(vuint32m8_t op1,vuint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu(vuint64m1_t op1,vuint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu(vuint64m2_t op1,vuint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu(vuint64m4_t op1,vuint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu(vuint64m8_t op1,vuint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint8mf8_t test___riscv_vaaddu(vbool64_t mask,vuint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu(vbool32_t mask,vuint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu(vbool16_t mask,vuint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu(vbool8_t mask,vuint8m1_t op1,vuint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu(vbool4_t mask,vuint8m2_t op1,vuint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu(vbool2_t mask,vuint8m4_t op1,vuint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu(vbool1_t mask,vuint8m8_t op1,vuint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu(vbool64_t mask,vuint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu(vbool32_t mask,vuint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu(vbool16_t mask,vuint16m1_t op1,vuint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu(vbool8_t mask,vuint16m2_t op1,vuint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu(vbool4_t mask,vuint16m4_t op1,vuint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu(vbool2_t mask,vuint16m8_t op1,vuint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu(vbool64_t mask,vuint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu(vbool32_t mask,vuint32m1_t op1,vuint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu(vbool16_t mask,vuint32m2_t op1,vuint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu(vbool8_t mask,vuint32m4_t op1,vuint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu(vbool4_t mask,vuint32m8_t op1,vuint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu(vbool64_t mask,vuint64m1_t op1,vuint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu(vbool32_t mask,vuint64m2_t op1,vuint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu(vbool16_t mask,vuint64m4_t op1,vuint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu(vbool8_t mask,vuint64m8_t op1,vuint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "06666e8502676b7bba9cacc1946e03aa5eec5f32", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vv-3.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,314 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu(vuint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu(vuint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu(vuint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu(vuint8m1_t op1,vuint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu(vuint8m2_t op1,vuint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu(vuint8m4_t op1,vuint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu(vuint8m8_t op1,vuint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu(vuint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu(vuint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu(vuint16m1_t op1,vuint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu(vuint16m2_t op1,vuint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu(vuint16m4_t op1,vuint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu(vuint16m8_t op1,vuint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu(vuint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu(vuint32m1_t op1,vuint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu(vuint32m2_t op1,vuint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu(vuint32m4_t op1,vuint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu(vuint32m8_t op1,vuint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu(vuint64m1_t op1,vuint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu(vuint64m2_t op1,vuint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu(vuint64m4_t op1,vuint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu(vuint64m8_t op1,vuint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint8mf8_t test___riscv_vaaddu(vbool64_t mask,vuint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu(vbool32_t mask,vuint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu(vbool16_t mask,vuint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu(vbool8_t mask,vuint8m1_t op1,vuint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu(vbool4_t mask,vuint8m2_t op1,vuint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu(vbool2_t mask,vuint8m4_t op1,vuint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu(vbool1_t mask,vuint8m8_t op1,vuint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu(vbool64_t mask,vuint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu(vbool32_t mask,vuint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu(vbool16_t mask,vuint16m1_t op1,vuint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu(vbool8_t mask,vuint16m2_t op1,vuint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu(vbool4_t mask,vuint16m4_t op1,vuint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu(vbool2_t mask,vuint16m8_t op1,vuint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu(vbool64_t mask,vuint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu(vbool32_t mask,vuint32m1_t op1,vuint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu(vbool16_t mask,vuint32m2_t op1,vuint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu(vbool8_t mask,vuint32m4_t op1,vuint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu(vbool4_t mask,vuint32m8_t op1,vuint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu(vbool64_t mask,vuint64m1_t op1,vuint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu(vbool32_t mask,vuint64m2_t op1,vuint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu(vbool16_t mask,vuint64m4_t op1,vuint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu(vbool8_t mask,vuint64m8_t op1,vuint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "8be1e4489fc04c5108bab63aa84c04f4d7626a77", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vv_mu-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_mu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_mu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_mu-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_mu(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_mu(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_mu(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_mu(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,vuint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_mu(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,vuint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_mu(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,vuint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_mu(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,vuint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_mu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_mu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_mu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,vuint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_mu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,vuint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_mu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,vuint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_mu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,vuint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_mu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_mu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,vuint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_mu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,vuint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_mu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,vuint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_mu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,vuint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_mu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,vuint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_mu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,vuint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_mu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,vuint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_mu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,vuint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "29722592ce85f150e57c677a447d71052d829fa6", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vv_mu-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_mu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_mu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_mu-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_mu(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_mu(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_mu(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_mu(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,vuint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_mu(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,vuint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_mu(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,vuint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_mu(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,vuint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_mu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_mu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_mu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,vuint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_mu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,vuint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_mu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,vuint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_mu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,vuint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_mu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_mu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,vuint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_mu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,vuint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_mu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,vuint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_mu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,vuint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_mu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,vuint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_mu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,vuint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_mu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,vuint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_mu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,vuint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "7ca6ee61faa4685dd78862eefe9aba6023793603", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vv_mu-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_mu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_mu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_mu-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_mu(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_mu(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_mu(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_mu(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,vuint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_mu(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,vuint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_mu(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,vuint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_mu(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,vuint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_mu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_mu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_mu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,vuint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_mu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,vuint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_mu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,vuint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_mu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,vuint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_mu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_mu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,vuint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_mu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,vuint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_mu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,vuint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_mu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,vuint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_mu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,vuint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_mu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,vuint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_mu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,vuint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_mu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,vuint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "51fcff705d6457b75de4383126fed8b58292b923", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vv_tu-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tu-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tu(vuint8mf8_t merge,vuint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tu(vuint8mf4_t merge,vuint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tu(vuint8mf2_t merge,vuint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tu(vuint8m1_t merge,vuint8m1_t op1,vuint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tu(vuint8m2_t merge,vuint8m2_t op1,vuint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tu(vuint8m4_t merge,vuint8m4_t op1,vuint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tu(vuint8m8_t merge,vuint8m8_t op1,vuint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tu(vuint16mf4_t merge,vuint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tu(vuint16mf2_t merge,vuint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tu(vuint16m1_t merge,vuint16m1_t op1,vuint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tu(vuint16m2_t merge,vuint16m2_t op1,vuint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tu(vuint16m4_t merge,vuint16m4_t op1,vuint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tu(vuint16m8_t merge,vuint16m8_t op1,vuint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tu(vuint32mf2_t merge,vuint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tu(vuint32m1_t merge,vuint32m1_t op1,vuint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tu(vuint32m2_t merge,vuint32m2_t op1,vuint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tu(vuint32m4_t merge,vuint32m4_t op1,vuint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tu(vuint32m8_t merge,vuint32m8_t op1,vuint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tu(vuint64m1_t merge,vuint64m1_t op1,vuint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tu(vuint64m2_t merge,vuint64m2_t op1,vuint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tu(vuint64m4_t merge,vuint64m4_t op1,vuint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tu(vuint64m8_t merge,vuint64m8_t op1,vuint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "04fbad9475c6d451a5f7219016465c7c12c49214", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vv_tu-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tu-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tu(vuint8mf8_t merge,vuint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tu(vuint8mf4_t merge,vuint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tu(vuint8mf2_t merge,vuint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tu(vuint8m1_t merge,vuint8m1_t op1,vuint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tu(vuint8m2_t merge,vuint8m2_t op1,vuint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tu(vuint8m4_t merge,vuint8m4_t op1,vuint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tu(vuint8m8_t merge,vuint8m8_t op1,vuint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tu(vuint16mf4_t merge,vuint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tu(vuint16mf2_t merge,vuint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tu(vuint16m1_t merge,vuint16m1_t op1,vuint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tu(vuint16m2_t merge,vuint16m2_t op1,vuint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tu(vuint16m4_t merge,vuint16m4_t op1,vuint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tu(vuint16m8_t merge,vuint16m8_t op1,vuint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tu(vuint32mf2_t merge,vuint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tu(vuint32m1_t merge,vuint32m1_t op1,vuint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tu(vuint32m2_t merge,vuint32m2_t op1,vuint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tu(vuint32m4_t merge,vuint32m4_t op1,vuint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tu(vuint32m8_t merge,vuint32m8_t op1,vuint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tu(vuint64m1_t merge,vuint64m1_t op1,vuint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tu(vuint64m2_t merge,vuint64m2_t op1,vuint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tu(vuint64m4_t merge,vuint64m4_t op1,vuint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tu(vuint64m8_t merge,vuint64m8_t op1,vuint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "9c69687717094bd9ae214063d6796a044ee60fd6", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vv_tu-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tu-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tu(vuint8mf8_t merge,vuint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tu(vuint8mf4_t merge,vuint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tu(vuint8mf2_t merge,vuint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tu(vuint8m1_t merge,vuint8m1_t op1,vuint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tu(vuint8m2_t merge,vuint8m2_t op1,vuint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tu(vuint8m4_t merge,vuint8m4_t op1,vuint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tu(vuint8m8_t merge,vuint8m8_t op1,vuint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tu(vuint16mf4_t merge,vuint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tu(vuint16mf2_t merge,vuint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tu(vuint16m1_t merge,vuint16m1_t op1,vuint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tu(vuint16m2_t merge,vuint16m2_t op1,vuint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tu(vuint16m4_t merge,vuint16m4_t op1,vuint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tu(vuint16m8_t merge,vuint16m8_t op1,vuint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tu(vuint32mf2_t merge,vuint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tu(vuint32m1_t merge,vuint32m1_t op1,vuint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tu(vuint32m2_t merge,vuint32m2_t op1,vuint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tu(vuint32m4_t merge,vuint32m4_t op1,vuint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tu(vuint32m8_t merge,vuint32m8_t op1,vuint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tu(vuint64m1_t merge,vuint64m1_t op1,vuint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tu(vuint64m2_t merge,vuint64m2_t op1,vuint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tu(vuint64m4_t merge,vuint64m4_t op1,vuint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tu(vuint64m8_t merge,vuint64m8_t op1,vuint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "7254b2ba0708c1f3aeee7dc1789ed0f46d047b84", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vv_tum-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tum-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tum-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tum-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tum(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tum(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tum(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tum(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,vuint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tum(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,vuint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tum(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,vuint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tum(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,vuint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tum(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tum(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tum(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,vuint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tum(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,vuint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tum(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,vuint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tum(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,vuint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tum(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tum(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,vuint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tum(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,vuint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tum(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,vuint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tum(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,vuint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tum(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,vuint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tum(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,vuint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tum(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,vuint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tum(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,vuint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "5dddd1519a4c09be28f240b30a7cd729f1d57607", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vv_tum-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tum-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tum-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tum-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tum(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tum(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tum(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tum(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,vuint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tum(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,vuint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tum(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,vuint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tum(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,vuint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tum(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tum(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tum(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,vuint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tum(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,vuint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tum(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,vuint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tum(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,vuint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tum(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tum(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,vuint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tum(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,vuint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tum(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,vuint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tum(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,vuint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tum(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,vuint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tum(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,vuint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tum(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,vuint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tum(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,vuint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "6af411df3e225538981ec2d37a0a2e51be5a5b60", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vv_tum-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tum-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tum-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tum-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tum(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tum(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tum(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tum(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,vuint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tum(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,vuint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tum(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,vuint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tum(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,vuint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tum(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tum(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tum(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,vuint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tum(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,vuint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tum(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,vuint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tum(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,vuint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tum(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tum(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,vuint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tum(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,vuint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tum(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,vuint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tum(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,vuint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tum(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,vuint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tum(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,vuint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tum(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,vuint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tum(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,vuint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "a6a8481c69b7edf84857611260719a6a211b2d71", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vv_tumu-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tumu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tumu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tumu-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,vuint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,vuint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tumu(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,vuint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tumu(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,vuint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,vuint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,vuint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,vuint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tumu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,vuint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,vuint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,vuint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,vuint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,vuint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,vuint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,vuint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,vuint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,vuint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "1ee33cad46af4c6defcf59ee26a3e913b1b269ca", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vv_tumu-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tumu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tumu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tumu-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,vuint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,vuint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tumu(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,vuint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tumu(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,vuint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,vuint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,vuint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,vuint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tumu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,vuint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,vuint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,vuint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,vuint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,vuint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,vuint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,vuint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,vuint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,vuint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "a50cc0586fdfbf9b3e6fe11c3055206f0ed4caa2", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vv_tumu-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tumu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tumu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vv_tumu-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,vuint8m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,vuint8m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tumu(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,vuint8m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tumu(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,vuint8m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,vuint16m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,vuint16m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,vuint16m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tumu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,vuint16m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,vuint32m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,vuint32m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,vuint32m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,vuint32m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,vuint64m1_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,vuint64m2_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,vuint64m4_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,vuint64m8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "dec97374e33eb8ca63e0027071a783d6b49d238b", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_mu_rv32-1.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_mu_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_mu_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_mu_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,157 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_mu(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_mu(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_mu(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_mu(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_mu(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_mu(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_mu(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_mu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_mu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_mu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_mu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_mu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_mu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_mu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_mu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_mu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_mu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_mu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_mu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_mu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_mu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_mu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 4 } } */"}, {"sha": "5479933e29c379483d2421247009eddeaacbe54c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_mu_rv32-2.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_mu_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_mu_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_mu_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,157 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_mu(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_mu(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_mu(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_mu(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_mu(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_mu(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_mu(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_mu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_mu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_mu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_mu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_mu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_mu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_mu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_mu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_mu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_mu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_mu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_mu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_mu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_mu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_mu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 4 } } */"}, {"sha": "0728ed3007e114f1f4ab8dc9c410661795dca96f", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_mu_rv32-3.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_mu_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_mu_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_mu_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,157 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_mu(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_mu(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_mu(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_mu(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_mu(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_mu(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_mu(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_mu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_mu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_mu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_mu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_mu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_mu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_mu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_mu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_mu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_mu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_mu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_mu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_mu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_mu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_mu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 4 } } */"}, {"sha": "6ed2a82ef6b977aa1807929102cf09af24da6a2b", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_mu_rv64-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_mu_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_mu_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_mu_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_mu(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_mu(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_mu(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_mu(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_mu(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_mu(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_mu(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_mu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_mu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_mu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_mu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_mu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_mu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_mu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_mu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_mu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_mu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_mu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_mu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_mu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_mu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_mu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "4068f6dd7b2747101f53438efd7bfd5ce7391570", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_mu_rv64-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_mu_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_mu_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_mu_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_mu(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_mu(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_mu(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_mu(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_mu(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_mu(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_mu(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_mu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_mu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_mu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_mu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_mu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_mu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_mu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_mu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_mu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_mu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_mu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_mu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_mu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_mu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_mu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "7d0fdc59947da19bde10529b0d995e3350fc7f44", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_mu_rv64-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_mu_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_mu_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_mu_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_mu(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_mu(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_mu(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_mu(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_mu(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_mu(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_mu(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_mu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_mu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_mu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_mu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_mu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_mu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_mu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_mu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_mu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_mu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_mu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_mu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_mu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_mu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_mu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_mu(mask,merge,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "770a2956211bf8adb4fb09098821bd00ef506e84", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_rv32-1.C", "status": "removed", "additions": 0, "deletions": 308, "changes": 308, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,308 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu(vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu(vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu(vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu(vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu(vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu(vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu(vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu(vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu(vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu(vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu(vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu(vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu(vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu(vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu(vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu(vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu(vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu(vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu(vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu(vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu(vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu(vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint8mf8_t test___riscv_vaaddu(vbool64_t mask,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu(vbool32_t mask,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu(vbool16_t mask,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu(vbool8_t mask,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu(vbool4_t mask,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu(vbool2_t mask,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu(vbool1_t mask,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu(vbool64_t mask,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu(vbool32_t mask,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu(vbool16_t mask,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu(vbool8_t mask,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu(vbool4_t mask,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu(vbool2_t mask,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu(vbool64_t mask,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu(vbool32_t mask,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu(vbool16_t mask,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu(vbool8_t mask,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu(vbool4_t mask,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu(vbool64_t mask,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu(vbool32_t mask,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu(vbool16_t mask,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu(vbool8_t mask,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 4 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 4 } } */"}, {"sha": "33a0e9df1b4c1ea2112ccc22686ca6efa1e7aed0", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_rv32-2.C", "status": "removed", "additions": 0, "deletions": 308, "changes": 308, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,308 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu(vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu(vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu(vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu(vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu(vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu(vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu(vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu(vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu(vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu(vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu(vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu(vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu(vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu(vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu(vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu(vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu(vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu(vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu(vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu(vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu(vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu(vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint8mf8_t test___riscv_vaaddu(vbool64_t mask,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu(vbool32_t mask,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu(vbool16_t mask,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu(vbool8_t mask,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu(vbool4_t mask,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu(vbool2_t mask,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu(vbool1_t mask,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu(vbool64_t mask,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu(vbool32_t mask,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu(vbool16_t mask,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu(vbool8_t mask,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu(vbool4_t mask,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu(vbool2_t mask,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu(vbool64_t mask,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu(vbool32_t mask,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu(vbool16_t mask,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu(vbool8_t mask,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu(vbool4_t mask,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu(vbool64_t mask,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu(vbool32_t mask,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu(vbool16_t mask,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu(vbool8_t mask,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 4 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 4 } } */"}, {"sha": "2d5999e5a36ded7b83ec8b7141145c9037de2029", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_rv32-3.C", "status": "removed", "additions": 0, "deletions": 308, "changes": 308, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,308 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu(vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu(vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu(vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu(vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu(vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu(vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu(vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu(vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu(vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu(vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu(vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu(vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu(vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu(vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu(vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu(vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu(vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu(vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu(vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu(vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu(vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu(vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint8mf8_t test___riscv_vaaddu(vbool64_t mask,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu(vbool32_t mask,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu(vbool16_t mask,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu(vbool8_t mask,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu(vbool4_t mask,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu(vbool2_t mask,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu(vbool1_t mask,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu(vbool64_t mask,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu(vbool32_t mask,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu(vbool16_t mask,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu(vbool8_t mask,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu(vbool4_t mask,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu(vbool2_t mask,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu(vbool64_t mask,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu(vbool32_t mask,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu(vbool16_t mask,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu(vbool8_t mask,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu(vbool4_t mask,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu(vbool64_t mask,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu(vbool32_t mask,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu(vbool16_t mask,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu(vbool8_t mask,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 4 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 4 } } */"}, {"sha": "44a8fb54add97c8f2e6b13b0fc27690db7a6cc9f", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_rv64-1.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,314 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu(vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu(vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu(vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu(vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu(vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu(vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu(vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu(vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu(vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu(vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu(vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu(vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu(vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu(vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu(vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu(vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu(vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu(vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu(vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu(vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu(vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu(vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,vl);\n-}\n-\n-\n-vuint8mf8_t test___riscv_vaaddu(vbool64_t mask,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu(vbool32_t mask,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu(vbool16_t mask,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu(vbool8_t mask,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu(vbool4_t mask,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu(vbool2_t mask,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu(vbool1_t mask,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu(vbool64_t mask,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu(vbool32_t mask,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu(vbool16_t mask,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu(vbool8_t mask,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu(vbool4_t mask,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu(vbool2_t mask,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu(vbool64_t mask,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu(vbool32_t mask,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu(vbool16_t mask,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu(vbool8_t mask,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu(vbool4_t mask,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu(vbool64_t mask,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu(vbool32_t mask,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu(vbool16_t mask,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu(vbool8_t mask,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "bb97d0afc915f279f42dcab35fc061a8ccfe68c4", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_rv64-2.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,314 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu(vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu(vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu(vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu(vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu(vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu(vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu(vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu(vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu(vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu(vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu(vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu(vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu(vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu(vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu(vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu(vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu(vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu(vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu(vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu(vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu(vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu(vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,31);\n-}\n-\n-\n-vuint8mf8_t test___riscv_vaaddu(vbool64_t mask,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu(vbool32_t mask,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu(vbool16_t mask,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu(vbool8_t mask,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu(vbool4_t mask,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu(vbool2_t mask,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu(vbool1_t mask,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu(vbool64_t mask,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu(vbool32_t mask,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu(vbool16_t mask,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu(vbool8_t mask,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu(vbool4_t mask,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu(vbool2_t mask,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu(vbool64_t mask,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu(vbool32_t mask,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu(vbool16_t mask,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu(vbool8_t mask,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu(vbool4_t mask,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu(vbool64_t mask,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu(vbool32_t mask,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu(vbool16_t mask,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu(vbool8_t mask,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "896d290c1cd064f8702cf73ec53d756fd45ed471", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_rv64-3.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,314 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu(vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu(vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu(vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu(vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu(vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu(vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu(vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu(vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu(vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu(vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu(vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu(vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu(vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu(vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu(vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu(vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu(vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu(vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu(vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu(vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu(vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu(vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(op1,op2,32);\n-}\n-\n-\n-vuint8mf8_t test___riscv_vaaddu(vbool64_t mask,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu(vbool32_t mask,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu(vbool16_t mask,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu(vbool8_t mask,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu(vbool4_t mask,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu(vbool2_t mask,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu(vbool1_t mask,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu(vbool64_t mask,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu(vbool32_t mask,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu(vbool16_t mask,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu(vbool8_t mask,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu(vbool4_t mask,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu(vbool2_t mask,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu(vbool64_t mask,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu(vbool32_t mask,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu(vbool16_t mask,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu(vbool8_t mask,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu(vbool4_t mask,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu(vbool64_t mask,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu(vbool32_t mask,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu(vbool16_t mask,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu(vbool8_t mask,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu(mask,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "d97f3d53ab6fca49c88fd4efc018d8ad7c0526c8", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_tu_rv32-1.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tu_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tu_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tu_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,157 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tu(vuint8mf8_t merge,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tu(vuint8mf4_t merge,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tu(vuint8mf2_t merge,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tu(vuint8m1_t merge,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tu(vuint8m2_t merge,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tu(vuint8m4_t merge,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tu(vuint8m8_t merge,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tu(vuint16mf4_t merge,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tu(vuint16mf2_t merge,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tu(vuint16m1_t merge,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tu(vuint16m2_t merge,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tu(vuint16m4_t merge,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tu(vuint16m8_t merge,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tu(vuint32mf2_t merge,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tu(vuint32m1_t merge,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tu(vuint32m2_t merge,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tu(vuint32m4_t merge,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tu(vuint32m8_t merge,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tu(vuint64m1_t merge,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tu(vuint64m2_t merge,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tu(vuint64m4_t merge,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tu(vuint64m8_t merge,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 4 } } */"}, {"sha": "c18a7fdd821dcde4eeb49ee7ee85bbc14a70b92b", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_tu_rv32-2.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tu_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tu_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tu_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,157 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tu(vuint8mf8_t merge,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tu(vuint8mf4_t merge,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tu(vuint8mf2_t merge,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tu(vuint8m1_t merge,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tu(vuint8m2_t merge,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tu(vuint8m4_t merge,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tu(vuint8m8_t merge,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tu(vuint16mf4_t merge,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tu(vuint16mf2_t merge,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tu(vuint16m1_t merge,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tu(vuint16m2_t merge,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tu(vuint16m4_t merge,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tu(vuint16m8_t merge,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tu(vuint32mf2_t merge,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tu(vuint32m1_t merge,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tu(vuint32m2_t merge,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tu(vuint32m4_t merge,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tu(vuint32m8_t merge,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tu(vuint64m1_t merge,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tu(vuint64m2_t merge,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tu(vuint64m4_t merge,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tu(vuint64m8_t merge,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 4 } } */"}, {"sha": "a847b9331a1ce561bdc07679198120606571bf92", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_tu_rv32-3.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tu_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tu_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tu_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,157 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tu(vuint8mf8_t merge,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tu(vuint8mf4_t merge,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tu(vuint8mf2_t merge,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tu(vuint8m1_t merge,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tu(vuint8m2_t merge,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tu(vuint8m4_t merge,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tu(vuint8m8_t merge,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tu(vuint16mf4_t merge,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tu(vuint16mf2_t merge,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tu(vuint16m1_t merge,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tu(vuint16m2_t merge,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tu(vuint16m4_t merge,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tu(vuint16m8_t merge,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tu(vuint32mf2_t merge,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tu(vuint32m1_t merge,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tu(vuint32m2_t merge,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tu(vuint32m4_t merge,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tu(vuint32m8_t merge,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tu(vuint64m1_t merge,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tu(vuint64m2_t merge,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tu(vuint64m4_t merge,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tu(vuint64m8_t merge,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 4 } } */"}, {"sha": "564ced73981cccba1e254475b31147e4c51afee5", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_tu_rv64-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tu_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tu_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tu_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tu(vuint8mf8_t merge,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tu(vuint8mf4_t merge,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tu(vuint8mf2_t merge,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tu(vuint8m1_t merge,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tu(vuint8m2_t merge,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tu(vuint8m4_t merge,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tu(vuint8m8_t merge,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tu(vuint16mf4_t merge,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tu(vuint16mf2_t merge,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tu(vuint16m1_t merge,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tu(vuint16m2_t merge,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tu(vuint16m4_t merge,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tu(vuint16m8_t merge,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tu(vuint32mf2_t merge,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tu(vuint32m1_t merge,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tu(vuint32m2_t merge,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tu(vuint32m4_t merge,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tu(vuint32m8_t merge,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tu(vuint64m1_t merge,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tu(vuint64m2_t merge,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tu(vuint64m4_t merge,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tu(vuint64m8_t merge,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */"}, {"sha": "20f99e37464303b757ed955ac4a29289afeb4676", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_tu_rv64-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tu_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tu_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tu_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tu(vuint8mf8_t merge,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tu(vuint8mf4_t merge,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tu(vuint8mf2_t merge,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tu(vuint8m1_t merge,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tu(vuint8m2_t merge,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tu(vuint8m4_t merge,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tu(vuint8m8_t merge,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tu(vuint16mf4_t merge,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tu(vuint16mf2_t merge,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tu(vuint16m1_t merge,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tu(vuint16m2_t merge,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tu(vuint16m4_t merge,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tu(vuint16m8_t merge,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tu(vuint32mf2_t merge,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tu(vuint32m1_t merge,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tu(vuint32m2_t merge,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tu(vuint32m4_t merge,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tu(vuint32m8_t merge,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tu(vuint64m1_t merge,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tu(vuint64m2_t merge,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tu(vuint64m4_t merge,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tu(vuint64m8_t merge,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */"}, {"sha": "29ced5abf3dc147af7f572260127b4309e733296", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_tu_rv64-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tu_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tu_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tu_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tu(vuint8mf8_t merge,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tu(vuint8mf4_t merge,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tu(vuint8mf2_t merge,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tu(vuint8m1_t merge,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tu(vuint8m2_t merge,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tu(vuint8m4_t merge,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tu(vuint8m8_t merge,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tu(vuint16mf4_t merge,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tu(vuint16mf2_t merge,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tu(vuint16m1_t merge,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tu(vuint16m2_t merge,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tu(vuint16m4_t merge,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tu(vuint16m8_t merge,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tu(vuint32mf2_t merge,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tu(vuint32m1_t merge,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tu(vuint32m2_t merge,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tu(vuint32m4_t merge,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tu(vuint32m8_t merge,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tu(vuint64m1_t merge,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tu(vuint64m2_t merge,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tu(vuint64m4_t merge,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tu(vuint64m8_t merge,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tu(merge,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\\s+} 1 } } */"}, {"sha": "c618ac33d8d6006357bc5cb6ecc2c49524cc7acb", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_tum_rv32-1.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tum_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tum_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tum_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,157 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tum(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tum(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tum(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tum(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tum(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tum(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tum(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tum(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tum(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tum(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tum(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tum(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tum(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tum(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tum(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tum(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tum(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tum(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tum(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tum(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tum(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tum(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 4 } } */"}, {"sha": "1372f7622eb77289fdc4362ce7b31600eb99c065", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_tum_rv32-2.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tum_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tum_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tum_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,157 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tum(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tum(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tum(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tum(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tum(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tum(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tum(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tum(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tum(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tum(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tum(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tum(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tum(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tum(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tum(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tum(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tum(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tum(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tum(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tum(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tum(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tum(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 4 } } */"}, {"sha": "0cc289531d81d16176464d398d50fa31b453ff88", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_tum_rv32-3.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tum_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tum_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tum_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,157 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tum(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tum(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tum(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tum(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tum(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tum(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tum(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tum(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tum(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tum(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tum(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tum(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tum(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tum(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tum(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tum(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tum(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tum(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tum(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tum(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tum(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tum(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 4 } } */"}, {"sha": "c0f6bb1d7e895f051bebac397ff54944120eef30", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_tum_rv64-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tum_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tum_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tum_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tum(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tum(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tum(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tum(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tum(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tum(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tum(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tum(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tum(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tum(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tum(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tum(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tum(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tum(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tum(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tum(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tum(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tum(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tum(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tum(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tum(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tum(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "6f2f6dc90a92954d05e7dc5014cf0556a1310335", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_tum_rv64-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tum_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tum_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tum_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tum(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tum(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tum(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tum(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tum(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tum(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tum(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tum(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tum(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tum(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tum(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tum(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tum(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tum(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tum(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tum(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tum(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tum(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tum(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tum(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tum(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tum(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "2be2180505291708ec27f7bc50f3f227812ecd16", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_tum_rv64-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tum_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tum_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tum_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tum(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tum(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tum(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tum(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tum(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tum(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tum(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tum(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tum(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tum(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tum(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tum(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tum(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tum(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tum(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tum(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tum(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tum(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tum(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tum(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tum(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tum(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tum(mask,merge,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "5d22e62242c0e603e13783bce96c68dc1ec7fa7a", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_tumu_rv32-1.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tumu_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tumu_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tumu_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,157 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tumu(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tumu(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tumu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 4 } } */"}, {"sha": "ff306a174e950609596b148c65f46a20d021eca8", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_tumu_rv32-2.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tumu_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tumu_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tumu_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,157 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tumu(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tumu(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tumu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 4 } } */"}, {"sha": "4f8a9e9512fb67c75ef7faee292ff5d55df72379", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_tumu_rv32-3.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tumu_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tumu_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tumu_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,157 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tumu(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tumu(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tumu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vaaddu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 4 } } */"}, {"sha": "1db3175949702ab35abcecb24f3f07840db16e93", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_tumu_rv64-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tumu_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tumu_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tumu_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tumu(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tumu(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tumu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "f64f8aa9a3fa1068c44d690ce6ec520e097cbcd7", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_tumu_rv64-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tumu_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tumu_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tumu_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tumu(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tumu(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tumu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "cdf5ad23cd75ac20cdd0ca682e3ab3b1a1701138", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vaaddu_vx_tumu_rv64-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tumu_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tumu_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvaaddu_vx_tumu_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,160 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vuint8mf8_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint8mf8_t merge,vuint8mf8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint8mf4_t merge,vuint8mf4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint8mf2_t merge,vuint8mf2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m1_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint8m1_t merge,vuint8m1_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m2_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint8m2_t merge,vuint8m2_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m4_t test___riscv_vaaddu_tumu(vbool2_t mask,vuint8m4_t merge,vuint8m4_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint8m8_t test___riscv_vaaddu_tumu(vbool1_t mask,vuint8m8_t merge,vuint8m8_t op1,uint8_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint16mf4_t merge,vuint16mf4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint16mf2_t merge,vuint16mf2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m1_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint16m1_t merge,vuint16m1_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m2_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint16m2_t merge,vuint16m2_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m4_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint16m4_t merge,vuint16m4_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint16m8_t test___riscv_vaaddu_tumu(vbool2_t mask,vuint16m8_t merge,vuint16m8_t op1,uint16_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint32mf2_t merge,vuint32mf2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m1_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint32m1_t merge,vuint32m1_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m2_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint32m2_t merge,vuint32m2_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m4_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint32m4_t merge,vuint32m4_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint32m8_t test___riscv_vaaddu_tumu(vbool4_t mask,vuint32m8_t merge,vuint32m8_t op1,uint32_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m1_t test___riscv_vaaddu_tumu(vbool64_t mask,vuint64m1_t merge,vuint64m1_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m2_t test___riscv_vaaddu_tumu(vbool32_t mask,vuint64m2_t merge,vuint64m2_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m4_t test___riscv_vaaddu_tumu(vbool16_t mask,vuint64m4_t merge,vuint64m4_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-vuint64m8_t test___riscv_vaaddu_tumu(vbool8_t mask,vuint64m8_t merge,vuint64m8_t op1,uint64_t op2,size_t vl)\n-{\n-    return __riscv_vaaddu_tumu(mask,merge,op1,op2,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vaaddu\\.vx\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "049b57fbd780bb13d11c83f0462464306a342889", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadc_vvm-1.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vvm-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vvm-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vvm-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,292 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vadc(vint8mf8_t op1,vint8mf8_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint8mf4_t test___riscv_vadc(vint8mf4_t op1,vint8mf4_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint8mf2_t test___riscv_vadc(vint8mf2_t op1,vint8mf2_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint8m1_t test___riscv_vadc(vint8m1_t op1,vint8m1_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint8m2_t test___riscv_vadc(vint8m2_t op1,vint8m2_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint8m4_t test___riscv_vadc(vint8m4_t op1,vint8m4_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint8m8_t test___riscv_vadc(vint8m8_t op1,vint8m8_t op2,vbool1_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint16mf4_t test___riscv_vadc(vint16mf4_t op1,vint16mf4_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint16mf2_t test___riscv_vadc(vint16mf2_t op1,vint16mf2_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint16m1_t test___riscv_vadc(vint16m1_t op1,vint16m1_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint16m2_t test___riscv_vadc(vint16m2_t op1,vint16m2_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint16m4_t test___riscv_vadc(vint16m4_t op1,vint16m4_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint16m8_t test___riscv_vadc(vint16m8_t op1,vint16m8_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint32mf2_t test___riscv_vadc(vint32mf2_t op1,vint32mf2_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint32m1_t test___riscv_vadc(vint32m1_t op1,vint32m1_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint32m2_t test___riscv_vadc(vint32m2_t op1,vint32m2_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint32m4_t test___riscv_vadc(vint32m4_t op1,vint32m4_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint32m8_t test___riscv_vadc(vint32m8_t op1,vint32m8_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint64m1_t test___riscv_vadc(vint64m1_t op1,vint64m1_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint64m2_t test___riscv_vadc(vint64m2_t op1,vint64m2_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint64m4_t test___riscv_vadc(vint64m4_t op1,vint64m4_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint64m8_t test___riscv_vadc(vint64m8_t op1,vint64m8_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint8mf8_t test___riscv_vadc(vuint8mf8_t op1,vuint8mf8_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vadc(vuint8mf4_t op1,vuint8mf4_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vadc(vuint8mf2_t op1,vuint8mf2_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint8m1_t test___riscv_vadc(vuint8m1_t op1,vuint8m1_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint8m2_t test___riscv_vadc(vuint8m2_t op1,vuint8m2_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint8m4_t test___riscv_vadc(vuint8m4_t op1,vuint8m4_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint8m8_t test___riscv_vadc(vuint8m8_t op1,vuint8m8_t op2,vbool1_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vadc(vuint16mf4_t op1,vuint16mf4_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vadc(vuint16mf2_t op1,vuint16mf2_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint16m1_t test___riscv_vadc(vuint16m1_t op1,vuint16m1_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint16m2_t test___riscv_vadc(vuint16m2_t op1,vuint16m2_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint16m4_t test___riscv_vadc(vuint16m4_t op1,vuint16m4_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint16m8_t test___riscv_vadc(vuint16m8_t op1,vuint16m8_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vadc(vuint32mf2_t op1,vuint32mf2_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint32m1_t test___riscv_vadc(vuint32m1_t op1,vuint32m1_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint32m2_t test___riscv_vadc(vuint32m2_t op1,vuint32m2_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint32m4_t test___riscv_vadc(vuint32m4_t op1,vuint32m4_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint32m8_t test___riscv_vadc(vuint32m8_t op1,vuint32m8_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint64m1_t test___riscv_vadc(vuint64m1_t op1,vuint64m1_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint64m2_t test___riscv_vadc(vuint64m2_t op1,vuint64m2_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint64m4_t test___riscv_vadc(vuint64m4_t op1,vuint64m4_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint64m8_t test___riscv_vadc(vuint64m8_t op1,vuint64m8_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "d1798cb181c554dee816882f2abdbcb680aaf3bd", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadc_vvm-2.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vvm-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vvm-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vvm-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,292 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vadc(vint8mf8_t op1,vint8mf8_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint8mf4_t test___riscv_vadc(vint8mf4_t op1,vint8mf4_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint8mf2_t test___riscv_vadc(vint8mf2_t op1,vint8mf2_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint8m1_t test___riscv_vadc(vint8m1_t op1,vint8m1_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint8m2_t test___riscv_vadc(vint8m2_t op1,vint8m2_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint8m4_t test___riscv_vadc(vint8m4_t op1,vint8m4_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint8m8_t test___riscv_vadc(vint8m8_t op1,vint8m8_t op2,vbool1_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint16mf4_t test___riscv_vadc(vint16mf4_t op1,vint16mf4_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint16mf2_t test___riscv_vadc(vint16mf2_t op1,vint16mf2_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint16m1_t test___riscv_vadc(vint16m1_t op1,vint16m1_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint16m2_t test___riscv_vadc(vint16m2_t op1,vint16m2_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint16m4_t test___riscv_vadc(vint16m4_t op1,vint16m4_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint16m8_t test___riscv_vadc(vint16m8_t op1,vint16m8_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint32mf2_t test___riscv_vadc(vint32mf2_t op1,vint32mf2_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint32m1_t test___riscv_vadc(vint32m1_t op1,vint32m1_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint32m2_t test___riscv_vadc(vint32m2_t op1,vint32m2_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint32m4_t test___riscv_vadc(vint32m4_t op1,vint32m4_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint32m8_t test___riscv_vadc(vint32m8_t op1,vint32m8_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint64m1_t test___riscv_vadc(vint64m1_t op1,vint64m1_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint64m2_t test___riscv_vadc(vint64m2_t op1,vint64m2_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint64m4_t test___riscv_vadc(vint64m4_t op1,vint64m4_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint64m8_t test___riscv_vadc(vint64m8_t op1,vint64m8_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint8mf8_t test___riscv_vadc(vuint8mf8_t op1,vuint8mf8_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vadc(vuint8mf4_t op1,vuint8mf4_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vadc(vuint8mf2_t op1,vuint8mf2_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint8m1_t test___riscv_vadc(vuint8m1_t op1,vuint8m1_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint8m2_t test___riscv_vadc(vuint8m2_t op1,vuint8m2_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint8m4_t test___riscv_vadc(vuint8m4_t op1,vuint8m4_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint8m8_t test___riscv_vadc(vuint8m8_t op1,vuint8m8_t op2,vbool1_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vadc(vuint16mf4_t op1,vuint16mf4_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vadc(vuint16mf2_t op1,vuint16mf2_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint16m1_t test___riscv_vadc(vuint16m1_t op1,vuint16m1_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint16m2_t test___riscv_vadc(vuint16m2_t op1,vuint16m2_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint16m4_t test___riscv_vadc(vuint16m4_t op1,vuint16m4_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint16m8_t test___riscv_vadc(vuint16m8_t op1,vuint16m8_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vadc(vuint32mf2_t op1,vuint32mf2_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint32m1_t test___riscv_vadc(vuint32m1_t op1,vuint32m1_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint32m2_t test___riscv_vadc(vuint32m2_t op1,vuint32m2_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint32m4_t test___riscv_vadc(vuint32m4_t op1,vuint32m4_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint32m8_t test___riscv_vadc(vuint32m8_t op1,vuint32m8_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint64m1_t test___riscv_vadc(vuint64m1_t op1,vuint64m1_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint64m2_t test___riscv_vadc(vuint64m2_t op1,vuint64m2_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint64m4_t test___riscv_vadc(vuint64m4_t op1,vuint64m4_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint64m8_t test___riscv_vadc(vuint64m8_t op1,vuint64m8_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "1367c6e1deb3364f96166f2a500cfec3ead11de2", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadc_vvm-3.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vvm-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vvm-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vvm-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,292 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vadc(vint8mf8_t op1,vint8mf8_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint8mf4_t test___riscv_vadc(vint8mf4_t op1,vint8mf4_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint8mf2_t test___riscv_vadc(vint8mf2_t op1,vint8mf2_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint8m1_t test___riscv_vadc(vint8m1_t op1,vint8m1_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint8m2_t test___riscv_vadc(vint8m2_t op1,vint8m2_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint8m4_t test___riscv_vadc(vint8m4_t op1,vint8m4_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint8m8_t test___riscv_vadc(vint8m8_t op1,vint8m8_t op2,vbool1_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint16mf4_t test___riscv_vadc(vint16mf4_t op1,vint16mf4_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint16mf2_t test___riscv_vadc(vint16mf2_t op1,vint16mf2_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint16m1_t test___riscv_vadc(vint16m1_t op1,vint16m1_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint16m2_t test___riscv_vadc(vint16m2_t op1,vint16m2_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint16m4_t test___riscv_vadc(vint16m4_t op1,vint16m4_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint16m8_t test___riscv_vadc(vint16m8_t op1,vint16m8_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint32mf2_t test___riscv_vadc(vint32mf2_t op1,vint32mf2_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint32m1_t test___riscv_vadc(vint32m1_t op1,vint32m1_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint32m2_t test___riscv_vadc(vint32m2_t op1,vint32m2_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint32m4_t test___riscv_vadc(vint32m4_t op1,vint32m4_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint32m8_t test___riscv_vadc(vint32m8_t op1,vint32m8_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint64m1_t test___riscv_vadc(vint64m1_t op1,vint64m1_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint64m2_t test___riscv_vadc(vint64m2_t op1,vint64m2_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint64m4_t test___riscv_vadc(vint64m4_t op1,vint64m4_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint64m8_t test___riscv_vadc(vint64m8_t op1,vint64m8_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint8mf8_t test___riscv_vadc(vuint8mf8_t op1,vuint8mf8_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vadc(vuint8mf4_t op1,vuint8mf4_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vadc(vuint8mf2_t op1,vuint8mf2_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint8m1_t test___riscv_vadc(vuint8m1_t op1,vuint8m1_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint8m2_t test___riscv_vadc(vuint8m2_t op1,vuint8m2_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint8m4_t test___riscv_vadc(vuint8m4_t op1,vuint8m4_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint8m8_t test___riscv_vadc(vuint8m8_t op1,vuint8m8_t op2,vbool1_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vadc(vuint16mf4_t op1,vuint16mf4_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vadc(vuint16mf2_t op1,vuint16mf2_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint16m1_t test___riscv_vadc(vuint16m1_t op1,vuint16m1_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint16m2_t test___riscv_vadc(vuint16m2_t op1,vuint16m2_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint16m4_t test___riscv_vadc(vuint16m4_t op1,vuint16m4_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint16m8_t test___riscv_vadc(vuint16m8_t op1,vuint16m8_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vadc(vuint32mf2_t op1,vuint32mf2_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint32m1_t test___riscv_vadc(vuint32m1_t op1,vuint32m1_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint32m2_t test___riscv_vadc(vuint32m2_t op1,vuint32m2_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint32m4_t test___riscv_vadc(vuint32m4_t op1,vuint32m4_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint32m8_t test___riscv_vadc(vuint32m8_t op1,vuint32m8_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint64m1_t test___riscv_vadc(vuint64m1_t op1,vuint64m1_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint64m2_t test___riscv_vadc(vuint64m2_t op1,vuint64m2_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint64m4_t test___riscv_vadc(vuint64m4_t op1,vuint64m4_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint64m8_t test___riscv_vadc(vuint64m8_t op1,vuint64m8_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "a4fe7cc8816ebad0afdac8c5367d20e2f26df412", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadc_vvm_tu-1.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vvm_tu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vvm_tu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vvm_tu-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,292 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test____riscv_vadc_tu(vint8mf8_t maskedoff,vint8mf8_t op1,vint8mf8_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vint8mf4_t test____riscv_vadc_tu(vint8mf4_t maskedoff,vint8mf4_t op1,vint8mf4_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vint8mf2_t test____riscv_vadc_tu(vint8mf2_t maskedoff,vint8mf2_t op1,vint8mf2_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vint8m1_t test____riscv_vadc_tu(vint8m1_t maskedoff,vint8m1_t op1,vint8m1_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vint8m2_t test____riscv_vadc_tu(vint8m2_t maskedoff,vint8m2_t op1,vint8m2_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vint8m4_t test____riscv_vadc_tu(vint8m4_t maskedoff,vint8m4_t op1,vint8m4_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vint8m8_t test____riscv_vadc_tu(vint8m8_t maskedoff,vint8m8_t op1,vint8m8_t op2,vbool1_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vint16mf4_t test____riscv_vadc_tu(vint16mf4_t maskedoff,vint16mf4_t op1,vint16mf4_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vint16mf2_t test____riscv_vadc_tu(vint16mf2_t maskedoff,vint16mf2_t op1,vint16mf2_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vint16m1_t test____riscv_vadc_tu(vint16m1_t maskedoff,vint16m1_t op1,vint16m1_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vint16m2_t test____riscv_vadc_tu(vint16m2_t maskedoff,vint16m2_t op1,vint16m2_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vint16m4_t test____riscv_vadc_tu(vint16m4_t maskedoff,vint16m4_t op1,vint16m4_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vint16m8_t test____riscv_vadc_tu(vint16m8_t maskedoff,vint16m8_t op1,vint16m8_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vint32mf2_t test____riscv_vadc_tu(vint32mf2_t maskedoff,vint32mf2_t op1,vint32mf2_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vint32m1_t test____riscv_vadc_tu(vint32m1_t maskedoff,vint32m1_t op1,vint32m1_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vint32m2_t test____riscv_vadc_tu(vint32m2_t maskedoff,vint32m2_t op1,vint32m2_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vint32m4_t test____riscv_vadc_tu(vint32m4_t maskedoff,vint32m4_t op1,vint32m4_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vint32m8_t test____riscv_vadc_tu(vint32m8_t maskedoff,vint32m8_t op1,vint32m8_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vint64m1_t test____riscv_vadc_tu(vint64m1_t maskedoff,vint64m1_t op1,vint64m1_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vint64m2_t test____riscv_vadc_tu(vint64m2_t maskedoff,vint64m2_t op1,vint64m2_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vint64m4_t test____riscv_vadc_tu(vint64m4_t maskedoff,vint64m4_t op1,vint64m4_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vint64m8_t test____riscv_vadc_tu(vint64m8_t maskedoff,vint64m8_t op1,vint64m8_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vuint8mf8_t test____riscv_vadc_tu(vuint8mf8_t maskedoff,vuint8mf8_t op1,vuint8mf8_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vuint8mf4_t test____riscv_vadc_tu(vuint8mf4_t maskedoff,vuint8mf4_t op1,vuint8mf4_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vuint8mf2_t test____riscv_vadc_tu(vuint8mf2_t maskedoff,vuint8mf2_t op1,vuint8mf2_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vuint8m1_t test____riscv_vadc_tu(vuint8m1_t maskedoff,vuint8m1_t op1,vuint8m1_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vuint8m2_t test____riscv_vadc_tu(vuint8m2_t maskedoff,vuint8m2_t op1,vuint8m2_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vuint8m4_t test____riscv_vadc_tu(vuint8m4_t maskedoff,vuint8m4_t op1,vuint8m4_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vuint8m8_t test____riscv_vadc_tu(vuint8m8_t maskedoff,vuint8m8_t op1,vuint8m8_t op2,vbool1_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vuint16mf4_t test____riscv_vadc_tu(vuint16mf4_t maskedoff,vuint16mf4_t op1,vuint16mf4_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vuint16mf2_t test____riscv_vadc_tu(vuint16mf2_t maskedoff,vuint16mf2_t op1,vuint16mf2_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vuint16m1_t test____riscv_vadc_tu(vuint16m1_t maskedoff,vuint16m1_t op1,vuint16m1_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vuint16m2_t test____riscv_vadc_tu(vuint16m2_t maskedoff,vuint16m2_t op1,vuint16m2_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vuint16m4_t test____riscv_vadc_tu(vuint16m4_t maskedoff,vuint16m4_t op1,vuint16m4_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vuint16m8_t test____riscv_vadc_tu(vuint16m8_t maskedoff,vuint16m8_t op1,vuint16m8_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vuint32mf2_t test____riscv_vadc_tu(vuint32mf2_t maskedoff,vuint32mf2_t op1,vuint32mf2_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vuint32m1_t test____riscv_vadc_tu(vuint32m1_t maskedoff,vuint32m1_t op1,vuint32m1_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vuint32m2_t test____riscv_vadc_tu(vuint32m2_t maskedoff,vuint32m2_t op1,vuint32m2_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vuint32m4_t test____riscv_vadc_tu(vuint32m4_t maskedoff,vuint32m4_t op1,vuint32m4_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vuint32m8_t test____riscv_vadc_tu(vuint32m8_t maskedoff,vuint32m8_t op1,vuint32m8_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vuint64m1_t test____riscv_vadc_tu(vuint64m1_t maskedoff,vuint64m1_t op1,vuint64m1_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vuint64m2_t test____riscv_vadc_tu(vuint64m2_t maskedoff,vuint64m2_t op1,vuint64m2_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vuint64m4_t test____riscv_vadc_tu(vuint64m4_t maskedoff,vuint64m4_t op1,vuint64m4_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-vuint64m8_t test____riscv_vadc_tu(vuint64m8_t maskedoff,vuint64m8_t op1,vuint64m8_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "941bb79e9a0e8ba5e05ee2dd2d03be983540f9df", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadc_vvm_tu-2.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vvm_tu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vvm_tu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vvm_tu-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,292 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test____riscv_vadc_tu(vint8mf8_t maskedoff,vint8mf8_t op1,vint8mf8_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vint8mf4_t test____riscv_vadc_tu(vint8mf4_t maskedoff,vint8mf4_t op1,vint8mf4_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vint8mf2_t test____riscv_vadc_tu(vint8mf2_t maskedoff,vint8mf2_t op1,vint8mf2_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vint8m1_t test____riscv_vadc_tu(vint8m1_t maskedoff,vint8m1_t op1,vint8m1_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vint8m2_t test____riscv_vadc_tu(vint8m2_t maskedoff,vint8m2_t op1,vint8m2_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vint8m4_t test____riscv_vadc_tu(vint8m4_t maskedoff,vint8m4_t op1,vint8m4_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vint8m8_t test____riscv_vadc_tu(vint8m8_t maskedoff,vint8m8_t op1,vint8m8_t op2,vbool1_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vint16mf4_t test____riscv_vadc_tu(vint16mf4_t maskedoff,vint16mf4_t op1,vint16mf4_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vint16mf2_t test____riscv_vadc_tu(vint16mf2_t maskedoff,vint16mf2_t op1,vint16mf2_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vint16m1_t test____riscv_vadc_tu(vint16m1_t maskedoff,vint16m1_t op1,vint16m1_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vint16m2_t test____riscv_vadc_tu(vint16m2_t maskedoff,vint16m2_t op1,vint16m2_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vint16m4_t test____riscv_vadc_tu(vint16m4_t maskedoff,vint16m4_t op1,vint16m4_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vint16m8_t test____riscv_vadc_tu(vint16m8_t maskedoff,vint16m8_t op1,vint16m8_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vint32mf2_t test____riscv_vadc_tu(vint32mf2_t maskedoff,vint32mf2_t op1,vint32mf2_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vint32m1_t test____riscv_vadc_tu(vint32m1_t maskedoff,vint32m1_t op1,vint32m1_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vint32m2_t test____riscv_vadc_tu(vint32m2_t maskedoff,vint32m2_t op1,vint32m2_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vint32m4_t test____riscv_vadc_tu(vint32m4_t maskedoff,vint32m4_t op1,vint32m4_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vint32m8_t test____riscv_vadc_tu(vint32m8_t maskedoff,vint32m8_t op1,vint32m8_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vint64m1_t test____riscv_vadc_tu(vint64m1_t maskedoff,vint64m1_t op1,vint64m1_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vint64m2_t test____riscv_vadc_tu(vint64m2_t maskedoff,vint64m2_t op1,vint64m2_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vint64m4_t test____riscv_vadc_tu(vint64m4_t maskedoff,vint64m4_t op1,vint64m4_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vint64m8_t test____riscv_vadc_tu(vint64m8_t maskedoff,vint64m8_t op1,vint64m8_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vuint8mf8_t test____riscv_vadc_tu(vuint8mf8_t maskedoff,vuint8mf8_t op1,vuint8mf8_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vuint8mf4_t test____riscv_vadc_tu(vuint8mf4_t maskedoff,vuint8mf4_t op1,vuint8mf4_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vuint8mf2_t test____riscv_vadc_tu(vuint8mf2_t maskedoff,vuint8mf2_t op1,vuint8mf2_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vuint8m1_t test____riscv_vadc_tu(vuint8m1_t maskedoff,vuint8m1_t op1,vuint8m1_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vuint8m2_t test____riscv_vadc_tu(vuint8m2_t maskedoff,vuint8m2_t op1,vuint8m2_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vuint8m4_t test____riscv_vadc_tu(vuint8m4_t maskedoff,vuint8m4_t op1,vuint8m4_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vuint8m8_t test____riscv_vadc_tu(vuint8m8_t maskedoff,vuint8m8_t op1,vuint8m8_t op2,vbool1_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vuint16mf4_t test____riscv_vadc_tu(vuint16mf4_t maskedoff,vuint16mf4_t op1,vuint16mf4_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vuint16mf2_t test____riscv_vadc_tu(vuint16mf2_t maskedoff,vuint16mf2_t op1,vuint16mf2_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vuint16m1_t test____riscv_vadc_tu(vuint16m1_t maskedoff,vuint16m1_t op1,vuint16m1_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vuint16m2_t test____riscv_vadc_tu(vuint16m2_t maskedoff,vuint16m2_t op1,vuint16m2_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vuint16m4_t test____riscv_vadc_tu(vuint16m4_t maskedoff,vuint16m4_t op1,vuint16m4_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vuint16m8_t test____riscv_vadc_tu(vuint16m8_t maskedoff,vuint16m8_t op1,vuint16m8_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vuint32mf2_t test____riscv_vadc_tu(vuint32mf2_t maskedoff,vuint32mf2_t op1,vuint32mf2_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vuint32m1_t test____riscv_vadc_tu(vuint32m1_t maskedoff,vuint32m1_t op1,vuint32m1_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vuint32m2_t test____riscv_vadc_tu(vuint32m2_t maskedoff,vuint32m2_t op1,vuint32m2_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vuint32m4_t test____riscv_vadc_tu(vuint32m4_t maskedoff,vuint32m4_t op1,vuint32m4_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vuint32m8_t test____riscv_vadc_tu(vuint32m8_t maskedoff,vuint32m8_t op1,vuint32m8_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vuint64m1_t test____riscv_vadc_tu(vuint64m1_t maskedoff,vuint64m1_t op1,vuint64m1_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vuint64m2_t test____riscv_vadc_tu(vuint64m2_t maskedoff,vuint64m2_t op1,vuint64m2_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vuint64m4_t test____riscv_vadc_tu(vuint64m4_t maskedoff,vuint64m4_t op1,vuint64m4_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-vuint64m8_t test____riscv_vadc_tu(vuint64m8_t maskedoff,vuint64m8_t op1,vuint64m8_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "501ccfe3f32ec45e724b2596b2358a0099e1a9e0", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadc_vvm_tu-3.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vvm_tu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vvm_tu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vvm_tu-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,292 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test____riscv_vadc_tu(vint8mf8_t maskedoff,vint8mf8_t op1,vint8mf8_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vint8mf4_t test____riscv_vadc_tu(vint8mf4_t maskedoff,vint8mf4_t op1,vint8mf4_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vint8mf2_t test____riscv_vadc_tu(vint8mf2_t maskedoff,vint8mf2_t op1,vint8mf2_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vint8m1_t test____riscv_vadc_tu(vint8m1_t maskedoff,vint8m1_t op1,vint8m1_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vint8m2_t test____riscv_vadc_tu(vint8m2_t maskedoff,vint8m2_t op1,vint8m2_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vint8m4_t test____riscv_vadc_tu(vint8m4_t maskedoff,vint8m4_t op1,vint8m4_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vint8m8_t test____riscv_vadc_tu(vint8m8_t maskedoff,vint8m8_t op1,vint8m8_t op2,vbool1_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vint16mf4_t test____riscv_vadc_tu(vint16mf4_t maskedoff,vint16mf4_t op1,vint16mf4_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vint16mf2_t test____riscv_vadc_tu(vint16mf2_t maskedoff,vint16mf2_t op1,vint16mf2_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vint16m1_t test____riscv_vadc_tu(vint16m1_t maskedoff,vint16m1_t op1,vint16m1_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vint16m2_t test____riscv_vadc_tu(vint16m2_t maskedoff,vint16m2_t op1,vint16m2_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vint16m4_t test____riscv_vadc_tu(vint16m4_t maskedoff,vint16m4_t op1,vint16m4_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vint16m8_t test____riscv_vadc_tu(vint16m8_t maskedoff,vint16m8_t op1,vint16m8_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vint32mf2_t test____riscv_vadc_tu(vint32mf2_t maskedoff,vint32mf2_t op1,vint32mf2_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vint32m1_t test____riscv_vadc_tu(vint32m1_t maskedoff,vint32m1_t op1,vint32m1_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vint32m2_t test____riscv_vadc_tu(vint32m2_t maskedoff,vint32m2_t op1,vint32m2_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vint32m4_t test____riscv_vadc_tu(vint32m4_t maskedoff,vint32m4_t op1,vint32m4_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vint32m8_t test____riscv_vadc_tu(vint32m8_t maskedoff,vint32m8_t op1,vint32m8_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vint64m1_t test____riscv_vadc_tu(vint64m1_t maskedoff,vint64m1_t op1,vint64m1_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vint64m2_t test____riscv_vadc_tu(vint64m2_t maskedoff,vint64m2_t op1,vint64m2_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vint64m4_t test____riscv_vadc_tu(vint64m4_t maskedoff,vint64m4_t op1,vint64m4_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vint64m8_t test____riscv_vadc_tu(vint64m8_t maskedoff,vint64m8_t op1,vint64m8_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vuint8mf8_t test____riscv_vadc_tu(vuint8mf8_t maskedoff,vuint8mf8_t op1,vuint8mf8_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vuint8mf4_t test____riscv_vadc_tu(vuint8mf4_t maskedoff,vuint8mf4_t op1,vuint8mf4_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vuint8mf2_t test____riscv_vadc_tu(vuint8mf2_t maskedoff,vuint8mf2_t op1,vuint8mf2_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vuint8m1_t test____riscv_vadc_tu(vuint8m1_t maskedoff,vuint8m1_t op1,vuint8m1_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vuint8m2_t test____riscv_vadc_tu(vuint8m2_t maskedoff,vuint8m2_t op1,vuint8m2_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vuint8m4_t test____riscv_vadc_tu(vuint8m4_t maskedoff,vuint8m4_t op1,vuint8m4_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vuint8m8_t test____riscv_vadc_tu(vuint8m8_t maskedoff,vuint8m8_t op1,vuint8m8_t op2,vbool1_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vuint16mf4_t test____riscv_vadc_tu(vuint16mf4_t maskedoff,vuint16mf4_t op1,vuint16mf4_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vuint16mf2_t test____riscv_vadc_tu(vuint16mf2_t maskedoff,vuint16mf2_t op1,vuint16mf2_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vuint16m1_t test____riscv_vadc_tu(vuint16m1_t maskedoff,vuint16m1_t op1,vuint16m1_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vuint16m2_t test____riscv_vadc_tu(vuint16m2_t maskedoff,vuint16m2_t op1,vuint16m2_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vuint16m4_t test____riscv_vadc_tu(vuint16m4_t maskedoff,vuint16m4_t op1,vuint16m4_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vuint16m8_t test____riscv_vadc_tu(vuint16m8_t maskedoff,vuint16m8_t op1,vuint16m8_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vuint32mf2_t test____riscv_vadc_tu(vuint32mf2_t maskedoff,vuint32mf2_t op1,vuint32mf2_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vuint32m1_t test____riscv_vadc_tu(vuint32m1_t maskedoff,vuint32m1_t op1,vuint32m1_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vuint32m2_t test____riscv_vadc_tu(vuint32m2_t maskedoff,vuint32m2_t op1,vuint32m2_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vuint32m4_t test____riscv_vadc_tu(vuint32m4_t maskedoff,vuint32m4_t op1,vuint32m4_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vuint32m8_t test____riscv_vadc_tu(vuint32m8_t maskedoff,vuint32m8_t op1,vuint32m8_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vuint64m1_t test____riscv_vadc_tu(vuint64m1_t maskedoff,vuint64m1_t op1,vuint64m1_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vuint64m2_t test____riscv_vadc_tu(vuint64m2_t maskedoff,vuint64m2_t op1,vuint64m2_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vuint64m4_t test____riscv_vadc_tu(vuint64m4_t maskedoff,vuint64m4_t op1,vuint64m4_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-vuint64m8_t test____riscv_vadc_tu(vuint64m8_t maskedoff,vuint64m8_t op1,vuint64m8_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc_tu(maskedoff,op1,op2,carryin,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "dda88d2322b181febe8d9e8134d7c6e98daf0a59", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadc_vxm_rv32-1.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,289 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vadc(vint8mf8_t op1,int8_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint8mf4_t test___riscv_vadc(vint8mf4_t op1,int8_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint8mf2_t test___riscv_vadc(vint8mf2_t op1,int8_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint8m1_t test___riscv_vadc(vint8m1_t op1,int8_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint8m2_t test___riscv_vadc(vint8m2_t op1,int8_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint8m4_t test___riscv_vadc(vint8m4_t op1,int8_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint8m8_t test___riscv_vadc(vint8m8_t op1,int8_t op2,vbool1_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint16mf4_t test___riscv_vadc(vint16mf4_t op1,int16_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint16mf2_t test___riscv_vadc(vint16mf2_t op1,int16_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint16m1_t test___riscv_vadc(vint16m1_t op1,int16_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint16m2_t test___riscv_vadc(vint16m2_t op1,int16_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint16m4_t test___riscv_vadc(vint16m4_t op1,int16_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint16m8_t test___riscv_vadc(vint16m8_t op1,int16_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint32mf2_t test___riscv_vadc(vint32mf2_t op1,int32_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint32m1_t test___riscv_vadc(vint32m1_t op1,int32_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint32m2_t test___riscv_vadc(vint32m2_t op1,int32_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint32m4_t test___riscv_vadc(vint32m4_t op1,int32_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint32m8_t test___riscv_vadc(vint32m8_t op1,int32_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint64m1_t test___riscv_vadc(vint64m1_t op1,int64_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint64m2_t test___riscv_vadc(vint64m2_t op1,int64_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint64m4_t test___riscv_vadc(vint64m4_t op1,int64_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vint64m8_t test___riscv_vadc(vint64m8_t op1,int64_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint8mf8_t test___riscv_vadc(vuint8mf8_t op1,uint8_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vadc(vuint8mf4_t op1,uint8_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vadc(vuint8mf2_t op1,uint8_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint8m1_t test___riscv_vadc(vuint8m1_t op1,uint8_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint8m2_t test___riscv_vadc(vuint8m2_t op1,uint8_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint8m4_t test___riscv_vadc(vuint8m4_t op1,uint8_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint8m8_t test___riscv_vadc(vuint8m8_t op1,uint8_t op2,vbool1_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vadc(vuint16mf4_t op1,uint16_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vadc(vuint16mf2_t op1,uint16_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint16m1_t test___riscv_vadc(vuint16m1_t op1,uint16_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint16m2_t test___riscv_vadc(vuint16m2_t op1,uint16_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint16m4_t test___riscv_vadc(vuint16m4_t op1,uint16_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint16m8_t test___riscv_vadc(vuint16m8_t op1,uint16_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vadc(vuint32mf2_t op1,uint32_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint32m1_t test___riscv_vadc(vuint32m1_t op1,uint32_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint32m2_t test___riscv_vadc(vuint32m2_t op1,uint32_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint32m4_t test___riscv_vadc(vuint32m4_t op1,uint32_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint32m8_t test___riscv_vadc(vuint32m8_t op1,uint32_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint64m1_t test___riscv_vadc(vuint64m1_t op1,uint64_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint64m2_t test___riscv_vadc(vuint64m2_t op1,uint64_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint64m4_t test___riscv_vadc(vuint64m4_t op1,uint64_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-vuint64m8_t test___riscv_vadc(vuint64m8_t op1,uint64_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,vl);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 8 } } */"}, {"sha": "f15dbdd1f5381e4a9586d11140091bb32c5239f1", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadc_vxm_rv32-2.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,289 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vadc(vint8mf8_t op1,int8_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint8mf4_t test___riscv_vadc(vint8mf4_t op1,int8_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint8mf2_t test___riscv_vadc(vint8mf2_t op1,int8_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint8m1_t test___riscv_vadc(vint8m1_t op1,int8_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint8m2_t test___riscv_vadc(vint8m2_t op1,int8_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint8m4_t test___riscv_vadc(vint8m4_t op1,int8_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint8m8_t test___riscv_vadc(vint8m8_t op1,int8_t op2,vbool1_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint16mf4_t test___riscv_vadc(vint16mf4_t op1,int16_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint16mf2_t test___riscv_vadc(vint16mf2_t op1,int16_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint16m1_t test___riscv_vadc(vint16m1_t op1,int16_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint16m2_t test___riscv_vadc(vint16m2_t op1,int16_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint16m4_t test___riscv_vadc(vint16m4_t op1,int16_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint16m8_t test___riscv_vadc(vint16m8_t op1,int16_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint32mf2_t test___riscv_vadc(vint32mf2_t op1,int32_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint32m1_t test___riscv_vadc(vint32m1_t op1,int32_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint32m2_t test___riscv_vadc(vint32m2_t op1,int32_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint32m4_t test___riscv_vadc(vint32m4_t op1,int32_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint32m8_t test___riscv_vadc(vint32m8_t op1,int32_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint64m1_t test___riscv_vadc(vint64m1_t op1,int64_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint64m2_t test___riscv_vadc(vint64m2_t op1,int64_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint64m4_t test___riscv_vadc(vint64m4_t op1,int64_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vint64m8_t test___riscv_vadc(vint64m8_t op1,int64_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint8mf8_t test___riscv_vadc(vuint8mf8_t op1,uint8_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vadc(vuint8mf4_t op1,uint8_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vadc(vuint8mf2_t op1,uint8_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint8m1_t test___riscv_vadc(vuint8m1_t op1,uint8_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint8m2_t test___riscv_vadc(vuint8m2_t op1,uint8_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint8m4_t test___riscv_vadc(vuint8m4_t op1,uint8_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint8m8_t test___riscv_vadc(vuint8m8_t op1,uint8_t op2,vbool1_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vadc(vuint16mf4_t op1,uint16_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vadc(vuint16mf2_t op1,uint16_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint16m1_t test___riscv_vadc(vuint16m1_t op1,uint16_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint16m2_t test___riscv_vadc(vuint16m2_t op1,uint16_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint16m4_t test___riscv_vadc(vuint16m4_t op1,uint16_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint16m8_t test___riscv_vadc(vuint16m8_t op1,uint16_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vadc(vuint32mf2_t op1,uint32_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint32m1_t test___riscv_vadc(vuint32m1_t op1,uint32_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint32m2_t test___riscv_vadc(vuint32m2_t op1,uint32_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint32m4_t test___riscv_vadc(vuint32m4_t op1,uint32_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint32m8_t test___riscv_vadc(vuint32m8_t op1,uint32_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint64m1_t test___riscv_vadc(vuint64m1_t op1,uint64_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint64m2_t test___riscv_vadc(vuint64m2_t op1,uint64_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint64m4_t test___riscv_vadc(vuint64m4_t op1,uint64_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-vuint64m8_t test___riscv_vadc(vuint64m8_t op1,uint64_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,31);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 8 } } */"}, {"sha": "6671f0cb19ee8fc86f580556e4864e89dc19dca6", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadc_vxm_rv32-3.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc", "patch": "@@ -1,289 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n-\n-#include \"riscv_vector.h\"\n-\n-vint8mf8_t test___riscv_vadc(vint8mf8_t op1,int8_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint8mf4_t test___riscv_vadc(vint8mf4_t op1,int8_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint8mf2_t test___riscv_vadc(vint8mf2_t op1,int8_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint8m1_t test___riscv_vadc(vint8m1_t op1,int8_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint8m2_t test___riscv_vadc(vint8m2_t op1,int8_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint8m4_t test___riscv_vadc(vint8m4_t op1,int8_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint8m8_t test___riscv_vadc(vint8m8_t op1,int8_t op2,vbool1_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint16mf4_t test___riscv_vadc(vint16mf4_t op1,int16_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint16mf2_t test___riscv_vadc(vint16mf2_t op1,int16_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint16m1_t test___riscv_vadc(vint16m1_t op1,int16_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint16m2_t test___riscv_vadc(vint16m2_t op1,int16_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint16m4_t test___riscv_vadc(vint16m4_t op1,int16_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint16m8_t test___riscv_vadc(vint16m8_t op1,int16_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint32mf2_t test___riscv_vadc(vint32mf2_t op1,int32_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint32m1_t test___riscv_vadc(vint32m1_t op1,int32_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint32m2_t test___riscv_vadc(vint32m2_t op1,int32_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint32m4_t test___riscv_vadc(vint32m4_t op1,int32_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint32m8_t test___riscv_vadc(vint32m8_t op1,int32_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint64m1_t test___riscv_vadc(vint64m1_t op1,int64_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint64m2_t test___riscv_vadc(vint64m2_t op1,int64_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint64m4_t test___riscv_vadc(vint64m4_t op1,int64_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vint64m8_t test___riscv_vadc(vint64m8_t op1,int64_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint8mf8_t test___riscv_vadc(vuint8mf8_t op1,uint8_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint8mf4_t test___riscv_vadc(vuint8mf4_t op1,uint8_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint8mf2_t test___riscv_vadc(vuint8mf2_t op1,uint8_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint8m1_t test___riscv_vadc(vuint8m1_t op1,uint8_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint8m2_t test___riscv_vadc(vuint8m2_t op1,uint8_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint8m4_t test___riscv_vadc(vuint8m4_t op1,uint8_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint8m8_t test___riscv_vadc(vuint8m8_t op1,uint8_t op2,vbool1_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint16mf4_t test___riscv_vadc(vuint16mf4_t op1,uint16_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint16mf2_t test___riscv_vadc(vuint16mf2_t op1,uint16_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint16m1_t test___riscv_vadc(vuint16m1_t op1,uint16_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint16m2_t test___riscv_vadc(vuint16m2_t op1,uint16_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint16m4_t test___riscv_vadc(vuint16m4_t op1,uint16_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint16m8_t test___riscv_vadc(vuint16m8_t op1,uint16_t op2,vbool2_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint32mf2_t test___riscv_vadc(vuint32mf2_t op1,uint32_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint32m1_t test___riscv_vadc(vuint32m1_t op1,uint32_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint32m2_t test___riscv_vadc(vuint32m2_t op1,uint32_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint32m4_t test___riscv_vadc(vuint32m4_t op1,uint32_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint32m8_t test___riscv_vadc(vuint32m8_t op1,uint32_t op2,vbool4_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint64m1_t test___riscv_vadc(vuint64m1_t op1,uint64_t op2,vbool64_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint64m2_t test___riscv_vadc(vuint64m2_t op1,uint64_t op2,vbool32_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint64m4_t test___riscv_vadc(vuint64m4_t op1,uint64_t op2,vbool16_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-vuint64m8_t test___riscv_vadc(vuint64m8_t op1,uint64_t op2,vbool8_t carryin,size_t vl)\n-{\n-    return __riscv_vadc(op1,op2,carryin,32);\n-}\n-\n-\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vadc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n-/* { dg-final { scan-assembler-times {vadc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 8 } } */"}, {"sha": "e44ab9428c30b89aa072fab14ebd6e22fed7754a", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadc_vxm_rv64-1.C", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "304a70922ba4d8e7d7281e352899ca86d4d15efa", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadc_vxm_rv64-2.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "60618b5e49bf4735861ec57596d0a4e920f0cd41", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadc_vxm_rv64-3.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "f290720169a62d1d27609c99c42f8e2a9e72382c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadc_vxm_tu_rv32-1.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_tu_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_tu_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_tu_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "b04fc74e2a69a4c4866568d391133a959a7b29bb", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadc_vxm_tu_rv32-2.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_tu_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_tu_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_tu_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "ce0fc4d43c3c433b774c79f92f429131c4891797", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadc_vxm_tu_rv32-3.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_tu_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_tu_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_tu_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "59f5a81b9b0be3ea5ace8cef222d56bee0f9880c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadc_vxm_tu_rv64-1.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_tu_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_tu_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_tu_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "b44e2195599bf32dc39d2ef9878c4e433a900297", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadc_vxm_tu_rv64-2.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_tu_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_tu_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_tu_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "ed58ccf439d96e868058813500fc4e8938374d31", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadc_vxm_tu_rv64-3.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_tu_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_tu_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadc_vxm_tu_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "01cd34b941e397f269a2f648f0040c8c2cd231e9", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vv-1.C", "status": "removed", "additions": 0, "deletions": 578, "changes": 578, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "8c1a89896e73655dcac3ed2602d7954b8babda25", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vv-2.C", "status": "removed", "additions": 0, "deletions": 578, "changes": 578, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "845830f873a28578d4dc0b6081f390799680ee4d", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vv-3.C", "status": "removed", "additions": 0, "deletions": 578, "changes": 578, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "e45e4a58f50d6140c944bf3ab8f25e859b1d07b4", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vv_mu-1.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_mu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_mu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_mu-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "3f4c07f276af512dc2dad21fbcaecd4724f9e006", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vv_mu-2.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_mu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_mu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_mu-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "76fffe8884cf6e7f4f9c14a38ddcfe7083cf7677", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vv_mu-3.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_mu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_mu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_mu-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "44f588b79497d5a5acdb24182bb3c0f26d5ade03", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vv_tu-1.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tu-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "f17abdd19e1e7c755c90f6643c41b46c75919b06", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vv_tu-2.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tu-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "5829459efd8383bd9e1b5a4c911414f162c932fa", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vv_tu-3.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tu-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "c2677284eba84589e2a46c0699d90c160532dca3", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vv_tum-1.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tum-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tum-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tum-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "8a0c4450eb675cf5f7fcb7ba36c331d3f3bcd0d6", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vv_tum-2.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tum-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tum-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tum-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "b20997f28c8a11fb01fd3234a7a75da7313d33a6", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vv_tum-3.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tum-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tum-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tum-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "87b5ea3dc90de51d4a756e37e6035e63f6481c4d", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vv_tumu-1.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tumu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tumu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tumu-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "49f25b25662d7a6ba1a16698e9bf1ae7108d579f", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vv_tumu-2.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tumu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tumu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tumu-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "10f312314d60a8610caf7ab8a653a4108a0bd743", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vv_tumu-3.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tumu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tumu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vv_tumu-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "24c5d51a289790bceaf60cfe3ff1676d15548bc6", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_mu_rv32-1.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_mu_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_mu_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_mu_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "7f296881f5eaf84d2653e1cb2d5e06830ce6263b", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_mu_rv32-2.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_mu_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_mu_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_mu_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "f56c55a2154530b30597fec241ee7738016bdf40", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_mu_rv32-3.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_mu_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_mu_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_mu_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "973751af9b8370fe5ad5dfe527f675a9f5758349", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_mu_rv64-1.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_mu_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_mu_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_mu_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "23e5a4604ec1ae82cabd78b8a9e6ff1dd8acf432", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_mu_rv64-2.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_mu_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_mu_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_mu_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "d9addcc16760d27d8ba1b9d207c10c0af69439de", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_mu_rv64-3.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_mu_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_mu_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_mu_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "486d80fd2e410a59e8cbc557fcc82a0fbfa02c01", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_rv32-1.C", "status": "removed", "additions": 0, "deletions": 572, "changes": 572, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "57df9c7b74e7c1eba3377b7750b3a480d2ac6057", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_rv32-2.C", "status": "removed", "additions": 0, "deletions": 572, "changes": 572, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "5b3fc3da4f541e3a5b41ccb4c693cd0cdb2e875a", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_rv32-3.C", "status": "removed", "additions": 0, "deletions": 572, "changes": 572, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "0d52c4ac0a4ba51aba09127ebf19b5b5649967a3", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_rv64-1.C", "status": "removed", "additions": 0, "deletions": 578, "changes": 578, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "cbed2852b8202ec0b1d872046e9ec89ec954128d", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_rv64-2.C", "status": "removed", "additions": 0, "deletions": 578, "changes": 578, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "a1f5e59044364d65a1ae7302231cac8373c49ff9", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_rv64-3.C", "status": "removed", "additions": 0, "deletions": 578, "changes": 578, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "95c078f379819ef3012e2afd24e771d01802ea2b", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_tu_rv32-1.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tu_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tu_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tu_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "fb3e812499af97387fdbecdade0f3cf16378cd40", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_tu_rv32-2.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tu_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tu_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tu_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "44aed96a6c9076781067afbbcb3c590abe03fea7", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_tu_rv32-3.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tu_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tu_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tu_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "9d525139ed872838838faee8bf1e61a736b0b6b5", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_tu_rv64-1.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tu_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tu_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tu_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "0eaab87d547092855237ef92a03179d1211dc63c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_tu_rv64-2.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tu_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tu_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tu_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "d933b7fdeb9db3578ee517fa609220698472caaf", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_tu_rv64-3.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tu_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tu_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tu_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "4f43005659e9a36753331cf8dc03870fb44dd4e1", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_tum_rv32-1.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tum_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tum_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tum_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "3af29aaaef1320f1a78398c7cc6d35cd8edaec1b", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_tum_rv32-2.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tum_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tum_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tum_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "db3f0f10cde3a73bed2134cc752d8f9b1dda146b", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_tum_rv32-3.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tum_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tum_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tum_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "3b3377f3458002ecca3494a46530914b0e55589e", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_tum_rv64-1.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tum_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tum_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tum_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "ece9f1a14fc1a0f6a7152d3bc78c8cf5ef212abb", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_tum_rv64-2.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tum_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tum_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tum_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "56f7c5d56124e3454c2b675d47ae45812ac2a532", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_tum_rv64-3.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tum_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tum_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tum_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "91b816f125defc45d56052ba8a887fae57ba5f2f", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_tumu_rv32-1.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tumu_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tumu_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tumu_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "65655949df64f3a790072c773826852a7e306367", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_tumu_rv32-2.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tumu_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tumu_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tumu_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "8013027670d368255345be955af48b94fd3bb2e5", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_tumu_rv32-3.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tumu_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tumu_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tumu_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "e33ae90a3c6adfa7e26814d0fad74b77521f6cdd", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_tumu_rv64-1.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tumu_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tumu_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tumu_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "560b9d355f596e4baffcb405963e74c5e15901f8", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_tumu_rv64-2.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tumu_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tumu_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tumu_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "2ff074ac4093c6cc037b711fd2ddd8be0e464bea", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vadd_vx_tumu_rv64-3.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tumu_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tumu_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvadd_vx_tumu_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "f229e55d6d15292278479c93b2688bdb9e392cb0", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vv-1.C", "status": "removed", "additions": 0, "deletions": 578, "changes": 578, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "d538f3e842b85595e66aadc5e295db96b302254c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vv-2.C", "status": "removed", "additions": 0, "deletions": 578, "changes": 578, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "56597b83db04c7e72636ce43ce60356337b048b1", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vv-3.C", "status": "removed", "additions": 0, "deletions": 578, "changes": 578, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "bd969f72f405133cedc0a4af62c5b0bd04b40b3d", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vv_mu-1.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_mu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_mu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_mu-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "5b63c72d0d4ca91b6fe28926476fadab0b341b14", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vv_mu-2.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_mu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_mu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_mu-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "236c7ee1203786f9e6dd7dfa89a0c31f6a61d89e", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vv_mu-3.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_mu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_mu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_mu-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "0e6b84d5dbb2b51cb17b7a666611635868249e6a", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vv_tu-1.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tu-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "6a6a8158766598b849f46794d4097cb994cd6ffe", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vv_tu-2.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tu-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "af641afae3c354e45b7fe4586c0faf4fd9252a9f", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vv_tu-3.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tu-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "c462026cf1a048ed527b74e3a6f2835f6c21303d", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vv_tum-1.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tum-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tum-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tum-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "511396994d2075043c65158d14e3812cff7ec93d", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vv_tum-2.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tum-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tum-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tum-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "f8d7d8edc3d917b149a948a7dec4af345b06b3fb", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vv_tum-3.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tum-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tum-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tum-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "9e32e1ef995ea18cec519de7117cf5b9d42fb51c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vv_tumu-1.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tumu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tumu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tumu-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "e4b043aee09fd94a96fc8cc86d55b8afa0d753d2", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vv_tumu-2.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tumu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tumu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tumu-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "3694fa97375ab4678f7078c4fbfe99a452a64223", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vv_tumu-3.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tumu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tumu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vv_tumu-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "678e4f4a14aa84e8019888d369a03106bd51449a", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_mu_rv32-1.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_mu_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_mu_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_mu_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "51642687f92c7386647b3ff0832b9537d7f3a86f", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_mu_rv32-2.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_mu_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_mu_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_mu_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "d76463994968db61aa653145fd0f3460edf27bad", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_mu_rv32-3.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_mu_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_mu_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_mu_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "f0935c0570b86eb463293c2d3dfe360152b80db8", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_mu_rv64-1.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_mu_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_mu_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_mu_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "b5b3b45558d12a048d841b0ab70d13fbc68c3b74", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_mu_rv64-2.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_mu_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_mu_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_mu_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "90eb92c28722b4f7ecbf458361c1910ad5f1facf", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_mu_rv64-3.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_mu_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_mu_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_mu_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "0539eb128d65c7252aabfbcd0ea47c511a0af205", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_rv32-1.C", "status": "removed", "additions": 0, "deletions": 572, "changes": 572, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "77f0e6c65bab76a4ce77113ea1b2fff80676b0ea", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_rv32-2.C", "status": "removed", "additions": 0, "deletions": 572, "changes": 572, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "fdc0e459685b0800fb6d2ed593d52eb6aaca8b56", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_rv32-3.C", "status": "removed", "additions": 0, "deletions": 572, "changes": 572, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "7bfaf00cd32ae63c7335d0f9cc84515e18adb019", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_rv64-1.C", "status": "removed", "additions": 0, "deletions": 578, "changes": 578, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "6ad13c699b6710b4c5418a8d288159e766d13873", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_rv64-2.C", "status": "removed", "additions": 0, "deletions": 578, "changes": 578, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "ecc45a78f87a834b5082da4506da6b706f8c9d5a", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_rv64-3.C", "status": "removed", "additions": 0, "deletions": 578, "changes": 578, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "f100e0db77bf2fc26dabbeb90ebb4b793db78588", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_tu_rv32-1.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tu_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tu_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tu_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "47b4591d41f911d66b7825979f8f538f34da03a5", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_tu_rv32-2.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tu_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tu_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tu_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "eea61848961441c2979abacf86152626e6fd3ee8", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_tu_rv32-3.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tu_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tu_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tu_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "92cf8ffd9af420e8950813cf956dfe28c2037eb0", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_tu_rv64-1.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tu_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tu_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tu_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "626570f62489ad1863de843d0db3666dbaa53aae", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_tu_rv64-2.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tu_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tu_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tu_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "435dae26b544c06a7dff2b8e6294658dc825861c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_tu_rv64-3.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tu_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tu_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tu_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "c4b680d90af2633fd1e2cb3f9775e17a3126cf3c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_tum_rv32-1.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tum_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tum_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tum_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "8efac1c7efb4020deda613b4f21d5df63e9504b1", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_tum_rv32-2.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tum_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tum_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tum_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "31a443beccaadf36bb2274e4b03cd9599649f93a", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_tum_rv32-3.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tum_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tum_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tum_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "e8ccf7251a1cd6c483ceb5c2c15ddd0776098a76", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_tum_rv64-1.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tum_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tum_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tum_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "4d3661dd8b67fcb040ff3a43e50231b7036983df", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_tum_rv64-2.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tum_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tum_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tum_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "916cc3e7fea071c17aef7ea97cdeae26cc4e2acc", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_tum_rv64-3.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tum_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tum_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tum_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "c4eddda9c23b0602dc25ccd7e1680819f985853e", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_tumu_rv32-1.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tumu_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tumu_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tumu_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "1e4a7e7f7800c2a4dfb40888708ad411df08aa11", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_tumu_rv32-2.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tumu_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tumu_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tumu_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "603394d4ef494cc0df728cdf2e1c9e44e12e8ae1", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_tumu_rv32-3.C", "status": "removed", "additions": 0, "deletions": 289, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tumu_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tumu_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tumu_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "02cc9708842a697efd6382e178af830a183aceb7", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_tumu_rv64-1.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tumu_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tumu_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tumu_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "4c0131a7a3da12d1d66e51c7641f3bf6ebba0c7d", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_tumu_rv64-2.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tumu_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tumu_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tumu_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "a6e2143454b9b52a4aac842a711795a31e9739dd", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vand_vx_tumu_rv64-3.C", "status": "removed", "additions": 0, "deletions": 292, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tumu_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tumu_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvand_vx_tumu_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "3356152500091a5b16980d9ddeb63d3f65695045", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vv-1.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "f32450a15707347d46e624b87a6a21c6c0ee0c90", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vv-2.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "b85db0b5f37e2c1a22cc6c3b42a7360145c9c69d", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vv-3.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "8c5af9cff747a497fc6ee5cc09eeae087ab828a8", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vv_mu-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_mu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_mu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_mu-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "3a0fba7b198dd11f0df14bcd0cf04c058d033d31", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vv_mu-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_mu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_mu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_mu-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "cd5fc3afa9037a395734281a6926ed76771d38d8", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vv_mu-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_mu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_mu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_mu-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "0e89b7db03db53e66ff83da620c0a634677c1f97", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vv_tu-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tu-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "4050f05de533d7538d68d3893f0227aad58ef895", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vv_tu-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tu-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "b2faf9c447430e4e56c719b8e7f2f6e18b9574ec", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vv_tu-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tu-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "a47deff72ea5196c5a1df080f81126fddde09aa2", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vv_tum-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tum-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tum-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tum-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "f7f84dd50d3b9a52aee905d9a90d597ed9c0fda6", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vv_tum-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tum-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tum-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tum-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "3a19bb029ca0158ac706e2426ff231339e128dbd", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vv_tum-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tum-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tum-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tum-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "de661474cd963bd778b01d2c1cf287daa0437b6b", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vv_tumu-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tumu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tumu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tumu-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "ac23eed3077ca14d1429e4f3bdcf55a40265a1d6", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vv_tumu-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tumu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tumu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tumu-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "1e5f10800a1c385d1a4b8b1b69b393b885763abb", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vv_tumu-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tumu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tumu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vv_tumu-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "25872bd58dc807c8b25b425a13b9fe4cfa0cd35b", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_mu_rv32-1.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_mu_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_mu_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_mu_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "1e9eb73ff9fd07db75521a8e029854f17e2d5da2", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_mu_rv32-2.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_mu_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_mu_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_mu_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "31169efd66e45cbc33c88391074eb4719a5ca44f", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_mu_rv32-3.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_mu_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_mu_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_mu_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "be307bdbda60abee9f12620e394ca6de5aecf60a", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_mu_rv64-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_mu_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_mu_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_mu_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "d31f5dfb459e15e0f93294a4a3f03bce92252cb0", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_mu_rv64-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_mu_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_mu_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_mu_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "2506722628cf2b4f600ca2ed3a6b1cc744729c61", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_mu_rv64-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_mu_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_mu_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_mu_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "c1b83a4881b5d7430cb0e3c0848eb9c430fdd340", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_rv32-1.C", "status": "removed", "additions": 0, "deletions": 308, "changes": 308, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "86536aab664160163748bf17ed5370c7ac2d9071", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_rv32-2.C", "status": "removed", "additions": 0, "deletions": 308, "changes": 308, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "1b07de06197870a9122f4e06070bb419c9eba3d2", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_rv32-3.C", "status": "removed", "additions": 0, "deletions": 308, "changes": 308, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "bb4e59cce997909f1a268998e8d0040439358153", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_rv64-1.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "28ecc232ef348c6dcbc4f89eff2587e967c0bb6e", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_rv64-2.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "f896e3ec52728cfaa4cc994f7612b44da3734137", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_rv64-3.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "b2f01b079d5689a679beed0f01418fd7ea85010d", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_tu_rv32-1.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tu_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tu_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tu_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "8754a0a8213c22c4130e0aed7e7cad06e45b5888", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_tu_rv32-2.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tu_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tu_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tu_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "2b57624687ca6047d0fd76eb3a9cf11f00fd52d6", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_tu_rv32-3.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tu_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tu_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tu_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "d838aae8378e6d83a1cb2373d92ae4000e8ed6a9", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_tu_rv64-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tu_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tu_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tu_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "edfd6ad6219f2abb1b5b1049e4b617af1b56fc64", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_tu_rv64-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tu_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tu_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tu_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "84293f8bfc46ef9cb87587902c4ef8aa07b8b77b", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_tu_rv64-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tu_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tu_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tu_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "c42e662da7d24f93bb6d12e69c60b12cc1f638b9", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_tum_rv32-1.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tum_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tum_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tum_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "357b91a76b46f39650e4ed08892f4526fb8e7829", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_tum_rv32-2.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tum_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tum_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tum_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "565522d3ba0e84873d95cd318016228105742d27", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_tum_rv32-3.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tum_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tum_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tum_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "2c3fdc9b5699010190b0d172a6f3e3fec5c34187", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_tum_rv64-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tum_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tum_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tum_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "140f3304f1e15f46ccb6c11c2bf8cec2bc677b65", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_tum_rv64-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tum_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tum_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tum_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "059ca0fa3f53fd544c4718f4279fc74b56f06e79", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_tum_rv64-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tum_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tum_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tum_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "cbeb17e85678eb9799d70d56cd8020b7aca1e601", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_tumu_rv32-1.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tumu_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tumu_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tumu_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "ac3cc209f4cceba758bbc031f6830285d1f51232", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_tumu_rv32-2.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tumu_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tumu_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tumu_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "b674cec2b23c474fbb8efa9619489ea40f50a72d", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_tumu_rv32-3.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tumu_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tumu_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tumu_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "36216c603e52813e8772cb87fdc5c9f0ef76b37a", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_tumu_rv64-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tumu_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tumu_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tumu_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "3002d4e00896f51209f16cdeb5cb1158ca2c711e", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_tumu_rv64-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tumu_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tumu_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tumu_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "c4d5f42ddc721ad108f3e6cd7193c265fb54aa73", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasub_vx_tumu_rv64-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tumu_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tumu_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasub_vx_tumu_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "f305e2b42d2d90b9b424331a69f29e4912069604", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vv-1.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "bbe86e6bb3f293c20c315a3821718e9165fe8d86", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vv-2.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "ca94fe4c6887fbcbde826a404d25374fe1fa96cc", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vv-3.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "9e0357ee38d2f1e3fd399ae256601cc157c8480c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vv_mu-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_mu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_mu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_mu-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "6d44bba35c320794964fad8652b1bcf4a23eda53", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vv_mu-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_mu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_mu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_mu-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "f19bca8b2ccca54183189a641e6161afefa41265", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vv_mu-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_mu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_mu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_mu-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "5abf481b2e7e9bc6b11d3d8b2b12f5143a8d8853", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vv_tu-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tu-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "333a1913e1a044fa7b718df0138a1e3097eea017", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vv_tu-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tu-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "fa52ae7f5e4a6d891c6f70a51c7cbf19a4446cbd", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vv_tu-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tu-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "a11672a82a6dd4c6e1426a5b0e0b73b9280832cc", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vv_tum-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tum-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tum-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tum-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "4962e837600ea16c9f9a8a79ebd65fbf86fa55b4", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vv_tum-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tum-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tum-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tum-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "986a9fa5bdc0ec8adb60a5be8a1f4494650afa9a", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vv_tum-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tum-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tum-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tum-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "576d4ce48cf75e0722481ec413b03a40436a2dca", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vv_tumu-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tumu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tumu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tumu-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "edf26215583aa3996b5ddfaa2b8d2b04384eff71", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vv_tumu-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tumu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tumu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tumu-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "f5d5304959f7f9cc63fd854a26c56c7373241405", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vv_tumu-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tumu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tumu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vv_tumu-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "8436c7dc49bf00ed22a1a570408c3ac25e9050e9", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_mu_rv32-1.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_mu_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_mu_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_mu_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "4dd4e5a16c1fafb1dd0d7b66cacde9ed1411a39e", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_mu_rv32-2.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_mu_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_mu_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_mu_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "80a8a6af095ab4a687befa1f465a6caf506f4767", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_mu_rv32-3.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_mu_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_mu_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_mu_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "6f9b7a617563a8aac40d06d783cd84e6454a336c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_mu_rv64-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_mu_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_mu_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_mu_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "e13ae7afde013ca6a0a1e7d4d2a5c9511b10f0b4", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_mu_rv64-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_mu_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_mu_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_mu_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "fd7df2589c3d2e56a9582c8e5a2531920f0863ed", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_mu_rv64-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_mu_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_mu_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_mu_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "d7e28d32e8fcc8a7602fad778b5820bbf993844d", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_rv32-1.C", "status": "removed", "additions": 0, "deletions": 308, "changes": 308, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "9f9aa8f094189a16da68446733e3effc1024b653", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_rv32-2.C", "status": "removed", "additions": 0, "deletions": 308, "changes": 308, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "a9ef8ef5f88bb7debf179d8a57e30210862e8261", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_rv32-3.C", "status": "removed", "additions": 0, "deletions": 308, "changes": 308, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "f14f9092cecb58554f2d25602e9144e1df4d668f", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_rv64-1.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "f5973b745a8697fc8b16b9a13ea56149b8f6765f", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_rv64-2.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "8499474e0c669b44b3fb4ef52128a26259e521b7", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_rv64-3.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "9792987f17902224a8eff386e1410eec341e254c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_tu_rv32-1.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tu_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tu_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tu_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "ce61a1b649c0c52ccbbfccb10e851399297c3e3d", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_tu_rv32-2.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tu_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tu_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tu_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "10474108f957ad14b4807d6bce6824bdc83037dd", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_tu_rv32-3.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tu_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tu_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tu_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "82b8abaf1047131bf3167f43305ffae376804e11", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_tu_rv64-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tu_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tu_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tu_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "5a04c4f922553c0b1e8e7d672f646bba6e94831b", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_tu_rv64-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tu_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tu_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tu_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "84fd6954280c9c0cdd4c40403edab6767b5a5d69", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_tu_rv64-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tu_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tu_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tu_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "c3a731c5d7402db9dd1f6778f36b19ebe8632454", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_tum_rv32-1.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tum_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tum_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tum_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "aeb278e2bbd46a0ea3b864779a8471fbf3111024", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_tum_rv32-2.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tum_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tum_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tum_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "a6bb55e8f7d8ef3a24928a71e154e71b778a817a", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_tum_rv32-3.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tum_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tum_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tum_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "2f9e84af963417382d49e5d58c76bd3e02a35f49", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_tum_rv64-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tum_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tum_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tum_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "8ffa6b33e064b9c65205a0dddcca4fca977c352b", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_tum_rv64-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tum_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tum_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tum_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "998c5578a8c11233c6b26e322f8957ae6c95bd1d", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_tum_rv64-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tum_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tum_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tum_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "7f42c73421c50d741efb5619cdfaeaf2568ccc03", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_tumu_rv32-1.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tumu_rv32-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tumu_rv32-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tumu_rv32-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "2fff3e42aab4d60139bdbb023ac93520dd90ac07", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_tumu_rv32-2.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tumu_rv32-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tumu_rv32-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tumu_rv32-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "93aeb82b3e215361da50015d51382207dd018a06", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_tumu_rv32-3.C", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tumu_rv32-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tumu_rv32-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tumu_rv32-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "816d519cfb866b89630dea57289f7b6934b3f912", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_tumu_rv64-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tumu_rv64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tumu_rv64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tumu_rv64-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "04ae7a4beb2c635cf183efc22bf1dc9343ae1394", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_tumu_rv64-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tumu_rv64-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tumu_rv64-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tumu_rv64-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "9d7576b18e4dd77ba8ade5887f8a75dfe164c725", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vasubu_vx_tumu_rv64-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tumu_rv64-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tumu_rv64-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvasubu_vx_tumu_rv64-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "e036b22cb7777294a78c45d2e264c142d838ebf2", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vdiv_vv-1.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "4637c1ee896c79cd47b8ba661f19f6f512a741f6", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vdiv_vv-2.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "a3a10e3ee743fca21b353685fde290d8fd41c73e", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vdiv_vv-3.C", "status": "removed", "additions": 0, "deletions": 314, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "1c360873884c02a9117d451c73e5a995ecf492b1", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vdiv_vv_mu-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_mu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_mu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_mu-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "5c68fb19e2bb7d8b311301a95f7d796eac418c55", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vdiv_vv_mu-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_mu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_mu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_mu-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "7a5bb9d5d81631e21508de3728658c8bc60033be", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vdiv_vv_mu-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_mu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_mu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_mu-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "9c16987e8af977cceb5d3374bb3547be72dc08d6", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vdiv_vv_tu-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_tu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_tu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_tu-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "6ac84213b7ef7aeab2267206321db7920548e3a0", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vdiv_vv_tu-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_tu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_tu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_tu-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "5160a3e887498b555ff6b3bc8b8f7115e373b7d1", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vdiv_vv_tu-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_tu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_tu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_tu-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "b551f1bf96c0e9c60a1b839b92e8d8a9fd24a6ca", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vdiv_vv_tum-1.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_tum-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_tum-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_tum-1.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "ca33263613bca98807a9ec8777bac77edd992cbd", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vdiv_vv_tum-2.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_tum-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_tum-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_tum-2.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}, {"sha": "7de1de8397e4ed8feb9779df5bca384314e9eabd", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vdiv_vv_tum-3.C", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_tum-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f6eba35b9f06d35ff7bea81969fe905a5584bdc/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_tum-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvdiv_vv_tum-3.C?ref=6f6eba35b9f06d35ff7bea81969fe905a5584bdc"}]}