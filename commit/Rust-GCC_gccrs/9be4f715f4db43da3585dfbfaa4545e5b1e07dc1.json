{"sha": "9be4f715f4db43da3585dfbfaa4545e5b1e07dc1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJlNGY3MTVmNGRiNDNkYTM1ODVkZmJmYWE0NTQ1ZTViMWUwN2RjMQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-11-12T21:07:04Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-11-12T21:07:04Z"}, "message": "re PR c/67784 (Incorrect parsing when using declarations in for loops and typedefs)\n\n\tPR c/67784\n\t* c-parser.c (c_parser_for_statement): Reclassify the token in\n\ta correct scope.\n\n\t* gcc.dg/pr67784-1.c: New test.\n\t* gcc.dg/pr67784-2.c: New test.\n\nFrom-SVN: r230273", "tree": {"sha": "d50942375e98f825bc9225724db1d802d970c51b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d50942375e98f825bc9225724db1d802d970c51b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9be4f715f4db43da3585dfbfaa4545e5b1e07dc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9be4f715f4db43da3585dfbfaa4545e5b1e07dc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9be4f715f4db43da3585dfbfaa4545e5b1e07dc1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9be4f715f4db43da3585dfbfaa4545e5b1e07dc1/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3f9bdfc332ffa04eeb42af53d371eed9410f1320", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f9bdfc332ffa04eeb42af53d371eed9410f1320", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f9bdfc332ffa04eeb42af53d371eed9410f1320"}], "stats": {"total": 135, "additions": 135, "deletions": 0}, "files": [{"sha": "0191b455398197e579f1734dd4da634f5b1e3c4e", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9be4f715f4db43da3585dfbfaa4545e5b1e07dc1/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9be4f715f4db43da3585dfbfaa4545e5b1e07dc1/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=9be4f715f4db43da3585dfbfaa4545e5b1e07dc1", "patch": "@@ -1,3 +1,9 @@\n+2015-11-12  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/67784\n+\t* c-parser.c (c_parser_for_statement): Reclassify the token in\n+\ta correct scope.\n+\n 2015-11-11  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/68107"}, {"sha": "89498254b7858725c001137aa7c25dd38a62499c", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9be4f715f4db43da3585dfbfaa4545e5b1e07dc1/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9be4f715f4db43da3585dfbfaa4545e5b1e07dc1/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=9be4f715f4db43da3585dfbfaa4545e5b1e07dc1", "patch": "@@ -5749,6 +5749,21 @@ c_parser_for_statement (c_parser *parser, bool ivdep)\n     c_finish_loop (loc, cond, incr, body, c_break_label, c_cont_label, true);\n   add_stmt (c_end_compound_stmt (loc, block, flag_isoc99 || c_dialect_objc ()));\n \n+  /* We might need to reclassify any previously-lexed identifier, e.g.\n+     when we've left a for loop with an if-statement without else in the\n+     body - we might have used a wrong scope for the token.  See PR67784.  */\n+  if (c_parser_next_token_is (parser, CPP_NAME))\n+    {\n+      c_token *token = c_parser_peek_token (parser);\n+      tree decl = lookup_name (token->value);\n+      if (decl == NULL_TREE)\n+\t;\n+      else if (TREE_CODE (decl) == TYPE_DECL)\n+\ttoken->id_kind = C_ID_TYPENAME;\n+      else if (VAR_P (decl))\n+\ttoken->id_kind = C_ID_ID;\n+    }\n+\n   token_indent_info next_tinfo\n     = get_token_indent_info (c_parser_peek_token (parser));\n   warn_for_misleading_indentation (for_tinfo, body_tinfo, next_tinfo);"}, {"sha": "ac1aa6c649842def9b07f08359222bb09b9dac15", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9be4f715f4db43da3585dfbfaa4545e5b1e07dc1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9be4f715f4db43da3585dfbfaa4545e5b1e07dc1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9be4f715f4db43da3585dfbfaa4545e5b1e07dc1", "patch": "@@ -1,3 +1,9 @@\n+2015-11-12  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/67784\n+\t* gcc.dg/pr67784-1.c: New test.\n+\t* gcc.dg/pr67784-2.c: New test.\n+\n 2015-11-12  Martin Liska  <mliska@suse.cz>\n \n \t* gcc.dg/ipa/pr68035.c: New test."}, {"sha": "d5e85fc0c8b56e68d87ebc47cf8d519c2493f64a", "filename": "gcc/testsuite/gcc.dg/pr67784-1.c", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9be4f715f4db43da3585dfbfaa4545e5b1e07dc1/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67784-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9be4f715f4db43da3585dfbfaa4545e5b1e07dc1/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67784-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67784-1.c?ref=9be4f715f4db43da3585dfbfaa4545e5b1e07dc1", "patch": "@@ -0,0 +1,54 @@\n+/* PR c/67784 */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+typedef int T;\n+\n+void\n+fn1 (void)\n+{\n+  for (int T;;)\n+    if (1)\n+      ;\n+  T *x;\n+}\n+\n+void\n+fn2 (void)\n+{\n+  for (int T;;)\n+    if (1)\n+      T = 1;\n+  T *x;\n+}\n+\n+void\n+fn3 (void)\n+{\n+  for (int T;;)\n+    if (1)\n+      {\n+      }\n+  T *x;\n+}\n+\n+void\n+fn4 (void)\n+{\n+  for (int T;;)\n+    if (1)\n+L:\n+      ;\n+  T *x;\n+}\n+\n+void\n+fn5 (void)\n+{\n+  for (int T;;)\n+    if (1)\n+      ;\n+    else\n+      ;\n+  T *x;\n+}"}, {"sha": "de3b1c89a89cd267bba0327be0d6728bdac8b605", "filename": "gcc/testsuite/gcc.dg/pr67784-2.c", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9be4f715f4db43da3585dfbfaa4545e5b1e07dc1/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67784-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9be4f715f4db43da3585dfbfaa4545e5b1e07dc1/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67784-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67784-2.c?ref=9be4f715f4db43da3585dfbfaa4545e5b1e07dc1", "patch": "@@ -0,0 +1,54 @@\n+/* PR c/67784 */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+int T;\n+\n+void\n+fn1 (void)\n+{\n+  for (typedef int T;;) /* { dg-error \"declaration of non-variable\" } */\n+    if (1)\n+      ;\n+  T *x; /* { dg-error \"undeclared\" } */\n+}\n+\n+void\n+fn2 (void)\n+{\n+  for (typedef int T;;) /* { dg-error \"declaration of non-variable\" } */\n+    if (1)\n+      T = 1; /* { dg-error \"expected expression\" } */\n+  T *x; /* { dg-error \"undeclared\" } */\n+}\n+\n+void\n+fn3 (void)\n+{\n+  for (typedef int T;;) /* { dg-error \"declaration of non-variable\" } */\n+    if (1)\n+      {\n+      }\n+  T *x; /* { dg-error \"undeclared\" } */\n+}\n+\n+void\n+fn4 (void)\n+{\n+  for (typedef int T;;) /* { dg-error \"declaration of non-variable\" } */\n+    if (1)\n+L:\n+      ;\n+  T *x; /* { dg-error \"undeclared\" } */\n+}\n+\n+void\n+fn5 (void)\n+{\n+  for (typedef int T;;) /* { dg-error \"declaration of non-variable\" } */\n+    if (1)\n+      ;\n+    else\n+      ;\n+  T *x; /* { dg-error \"undeclared\" } */\n+}"}]}