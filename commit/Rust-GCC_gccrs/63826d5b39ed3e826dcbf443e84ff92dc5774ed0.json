{"sha": "63826d5b39ed3e826dcbf443e84ff92dc5774ed0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM4MjZkNWIzOWVkM2U4MjZkY2JmNDQzZTg0ZmY5MmRjNTc3NGVkMA==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2002-05-13T19:10:16Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2002-05-13T19:10:16Z"}, "message": "gcc.c (SWITCH_TAKES_ARG): Remove 'V'.\n\n\t* gcc.c (SWITCH_TAKES_ARG): Remove 'V'.\n\t(translate_options): Remove 'V'.\n\t(process_command): Similarly.\ndoc:\n\t* invoke.texi: Remove documentation of 'V'.\n\nFrom-SVN: r53425", "tree": {"sha": "c32bb1a53d72b0109c54224f1e88048c3b87480f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c32bb1a53d72b0109c54224f1e88048c3b87480f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63826d5b39ed3e826dcbf443e84ff92dc5774ed0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63826d5b39ed3e826dcbf443e84ff92dc5774ed0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63826d5b39ed3e826dcbf443e84ff92dc5774ed0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63826d5b39ed3e826dcbf443e84ff92dc5774ed0/comments", "author": null, "committer": null, "parents": [{"sha": "15dee6bf0a245aa8858db024989b5887b5fbc561", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15dee6bf0a245aa8858db024989b5887b5fbc561", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15dee6bf0a245aa8858db024989b5887b5fbc561"}], "stats": {"total": 84, "additions": 17, "deletions": 67}, "files": [{"sha": "2ebc0bdd9f8075c9a2eec5f461bff3d6d078c319", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63826d5b39ed3e826dcbf443e84ff92dc5774ed0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63826d5b39ed3e826dcbf443e84ff92dc5774ed0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=63826d5b39ed3e826dcbf443e84ff92dc5774ed0", "patch": "@@ -1,3 +1,11 @@\n+2002-05-13  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* gcc.c (SWITCH_TAKES_ARG): Remove 'V'.\n+\t(translate_options): Remove 'V'.\n+\t(process_command): Similarly.\n+doc:\n+\t* invoke.texi: Remove documentation of 'V'.\n+\n 2002-05-13  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* config/s390/linux.h: Revert 2002-04-22 changes."}, {"sha": "001ab25b5f8f43a2e9f3e5bc65cdba3cddf2dc0f", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 21, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63826d5b39ed3e826dcbf443e84ff92dc5774ed0/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63826d5b39ed3e826dcbf443e84ff92dc5774ed0/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=63826d5b39ed3e826dcbf443e84ff92dc5774ed0", "patch": "@@ -322,7 +322,7 @@ in the following sections.\n @c I wrote this xref this way to avoid overfull hbox. -- rms\n @xref{Target Options}.\n @gccoptlist{\n--b @var{machine}  -V @var{version}}\n+-b @var{machine}}\n \n @item Machine Dependent Options\n @xref{Submodel Options,,Hardware Models and Configurations}.\n@@ -4756,40 +4756,26 @@ would specify @option{-b i386v} to run that cross compiler.\n \n When you do not specify @option{-b}, it normally means to compile for\n the same type of machine that you are using.\n-\n-@item -V @var{version}\n-@opindex V\n-The argument @var{version} specifies which version of GCC to run.\n-This is useful when multiple versions are installed.  For example,\n-@var{version} might be @samp{2.0}, meaning to run GCC version 2.0.\n-\n-The default version, when you do not specify @option{-V}, is the last\n-version of GCC that you installed.\n @end table\n \n-The @option{-b} and @option{-V} options actually work by controlling part of\n+The @option{-b} option actually works by controlling part of\n the file name used for the executable files and libraries used for\n compilation.  A given version of GCC, for a given target machine, is\n normally kept in the directory @file{/usr/local/lib/gcc-lib/@var{machine}/@var{version}}.\n \n-Thus, sites can customize the effect of @option{-b} or @option{-V} either by\n+Thus, sites can customize the effect of @option{-b} either by\n changing the names of these directories or adding alternate names (or\n symbolic links).  If in directory @file{/usr/local/lib/gcc-lib/} the\n file @file{80386} is a link to the file @file{i386v}, then @option{-b\n 80386} becomes an alias for @option{-b i386v}.\n \n-In one respect, the @option{-b} or @option{-V} do not completely change\n+In one respect, @option{-b} does not completely change\n to a different compiler: the top-level driver program @command{gcc}\n that you originally invoked continues to run and invoke the other\n executables (preprocessor, compiler per se, assembler and linker)\n that do the real work.  However, since no real work is done in the\n driver program, it usually does not matter that the driver program\n-in use is not the one for the specified target.  It is common for the\n-interface to the other executables to change incompatibly between\n-compiler versions, so unless the version specified is very close to that\n-of the driver (for example, @option{-V 3.0} with a driver program from GCC\n-version 3.0.1), use of @option{-V} may not work; for example, using\n-@option{-V 2.95.2} will not work with a driver program from GCC 3.0.\n+in use is not the one for the specified target.\n \n The only way that the driver program depends on the target machine is\n in the parsing and handling of special machine-specific options.\n@@ -4807,8 +4793,7 @@ different targets or versions, under different names.\n For example, if the driver for version 2.0 is installed as @command{ogcc}\n and that for version 2.1 is installed as @command{gcc}, then the command\n @command{gcc} will use version 2.1 by default, while @command{ogcc} will use\n-2.0 by default.  However, you can choose either version with either\n-command with the @option{-V} option.\n+2.0 by default.\n \n @node Submodel Options\n @section Hardware Models and Configurations"}, {"sha": "f673812888ec7b33c6287a8edf2cfae43e69ad47", "filename": "gcc/gcc.c", "status": "modified", "additions": 3, "deletions": 46, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63826d5b39ed3e826dcbf443e84ff92dc5774ed0/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63826d5b39ed3e826dcbf443e84ff92dc5774ed0/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=63826d5b39ed3e826dcbf443e84ff92dc5774ed0", "patch": "@@ -745,8 +745,7 @@ static struct user_specs *user_specs_head, *user_specs_tail;\n   ((CHAR) == 'D' || (CHAR) == 'U' || (CHAR) == 'o' \\\n    || (CHAR) == 'e' || (CHAR) == 'T' || (CHAR) == 'u' \\\n    || (CHAR) == 'I' || (CHAR) == 'm' || (CHAR) == 'x' \\\n-   || (CHAR) == 'L' || (CHAR) == 'A' || (CHAR) == 'V' \\\n-   || (CHAR) == 'B' || (CHAR) == 'b')\n+   || (CHAR) == 'L' || (CHAR) == 'A' || (CHAR) == 'B' || (CHAR) == 'b')\n \n #ifndef SWITCH_TAKES_ARG\n #define SWITCH_TAKES_ARG(CHAR) DEFAULT_SWITCH_TAKES_ARG(CHAR)\n@@ -1185,7 +1184,7 @@ translate_options (argcp, argvp)\n \t    nskip += SWITCH_TAKES_ARG (c) - (p[1] != 0);\n \t  else if (WORD_SWITCH_TAKES_ARG (p))\n \t    nskip += WORD_SWITCH_TAKES_ARG (p);\n-\t  else if ((c == 'B' || c == 'b' || c == 'V' || c == 'x')\n+\t  else if ((c == 'B' || c == 'b' || c == 'x')\n \t\t   && p[1] == 0)\n \t    nskip += 1;\n \t  else if (! strcmp (p, \"Xlinker\"))\n@@ -3606,48 +3605,6 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n \t      verbose_flag++;\n \t      break;\n \n-\t    case 'V':\n-\t      n_switches++;\n-\t      if (p[1] == 0 && i + 1 == argc)\n-\t\tfatal (\"argument to `-V' is missing\");\n-\t      if (p[1] == 0)\n-\t\tspec_version = argv[++i];\n-\t      else\n-\t\tspec_version = p + 1;\n-\t      compiler_version = spec_version;\n-\t      warn_std_ptr = &warn_std;\n-\n-\t      /* Validate the version number.  Use the same checks\n-\t\t done when inserting it into a spec.\n-\n-\t\t The format of the version string is\n-\t\t ([^0-9]*-)?[0-9]+[.][0-9]+([.][0-9]+)?([- ].*)?  */\n-\t      {\n-\t\tconst char *v = compiler_version;\n-\n-\t\t/* Ignore leading non-digits.  i.e. \"foo-\" in \"foo-2.7.2\".  */\n-\t\twhile (! ISDIGIT (*v))\n-\t\t  v++;\n-\n-\t\tif (v > compiler_version && v[-1] != '-')\n-\t\t  fatal (\"invalid version number format\");\n-\n-\t\t/* Set V after the first period.  */\n-\t\twhile (ISDIGIT (*v))\n-\t\t  v++;\n-\n-\t\tif (*v != '.')\n-\t\t  fatal (\"invalid version number format\");\n-\n-\t\tv++;\n-\t\twhile (ISDIGIT (*v))\n-\t\t  v++;\n-\n-\t\tif (*v != 0 && *v != ' ' && *v != '.' && *v != '-')\n-\t\t  fatal (\"invalid version number format\");\n-\t      }\n-\t      break;\n-\n \t    case 'S':\n \t    case 'c':\n \t      if (p[1] == 0)\n@@ -4005,7 +3962,7 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n \t  else\n \t    {\n \t      char ch = switches[n_switches].part1[0];\n-\t      if (ch == 'V' || ch == 'b' || ch == 'B')\n+\t      if (ch == 'b' || ch == 'B')\n \t\tswitches[n_switches].validated = 1;\n \t    }\n \t  n_switches++;"}]}