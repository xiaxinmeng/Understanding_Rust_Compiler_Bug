{"sha": "cff72ef4e2ff8d5775470a8a01a6d9760d2c70be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZmNzJlZjRlMmZmOGQ1Nzc1NDcwYThhMDFhNmQ5NzYwZDJjNzBiZQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-09-07T09:01:38Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-09-07T09:01:38Z"}, "message": "libgomp.texi: Add OpenMP Implementation Status\n\nlibgomp/\n\t* libgomp.texi (Enabling OpenMP): Refer to OMP spec in general\n\tnot to 4.5; link to new section.\n\t(OpenMP Implementation Status): New.", "tree": {"sha": "eda82969defc3d02185dddc4d33525ac3a0bfaf5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eda82969defc3d02185dddc4d33525ac3a0bfaf5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cff72ef4e2ff8d5775470a8a01a6d9760d2c70be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cff72ef4e2ff8d5775470a8a01a6d9760d2c70be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cff72ef4e2ff8d5775470a8a01a6d9760d2c70be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cff72ef4e2ff8d5775470a8a01a6d9760d2c70be/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13beaf9e8d2d8264c0ad8f6504793fdcf26f3f73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13beaf9e8d2d8264c0ad8f6504793fdcf26f3f73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13beaf9e8d2d8264c0ad8f6504793fdcf26f3f73"}], "stats": {"total": 111, "additions": 108, "deletions": 3}, "files": [{"sha": "0ae9c3260ff533edf474b158b3b31701add307ca", "filename": "libgomp/libgomp.texi", "status": "modified", "additions": 108, "deletions": 3, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cff72ef4e2ff8d5775470a8a01a6d9760d2c70be/libgomp%2Flibgomp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cff72ef4e2ff8d5775470a8a01a6d9760d2c70be/libgomp%2Flibgomp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.texi?ref=cff72ef4e2ff8d5775470a8a01a6d9760d2c70be", "patch": "@@ -95,6 +95,7 @@ changed to GNU Offloading and Multi Processing Runtime Library.\n @comment\n @menu\n * Enabling OpenMP::            How to enable OpenMP for your applications.\n+* OpenMP Implementation Status:: List of implemented features by OpenMP version\n * OpenMP Runtime Library Routines: Runtime Library Routines.\n                                The OpenMP runtime application programming\n                                interface.\n@@ -141,9 +142,113 @@ flag @command{-fopenmp} must be specified.  This enables the OpenMP directive\n arranges for automatic linking of the OpenMP runtime library \n (@ref{Runtime Library Routines}).\n \n-A complete description of all OpenMP directives accepted may be found in \n-the @uref{https://www.openmp.org, OpenMP Application Program Interface} manual,\n-version 4.5.\n+A complete description of all OpenMP directives may be found in the\n+@uref{https://www.openmp.org, OpenMP Application Program Interface} manuals.\n+See also @ref{OpenMP Implementation Status}.\n+\n+\n+@c ---------------------------------------------------------------------\n+@c OpenMP Implementation Status\n+@c ---------------------------------------------------------------------\n+\n+@node OpenMP Implementation Status\n+@chapter OpenMP Implementation Status\n+\n+@menu\n+* OpenMP 4.5:: Feature completion status to 4.5 specification\n+* OpenMP 5.0:: Feature completion status to 5.0 specification\n+* OpenMP 5.1:: Feature completion status to 5.1 specification\n+@end menu\n+\n+The @code{_OPENMP} preprocessor macro and Fortran's @code{openmp_version}\n+parameter, provided by @code{omp_lib.h} and the @code{omp_lib} module, have\n+the value @code{201511} (i.e. OpenMP 4.5).\n+\n+@node OpenMP 4.5\n+@section OpenMP 4.5\n+\n+The OpenMP 4.5 specification is fully supported.\n+\n+@node OpenMP 5.0\n+@section OpenMP 5.0\n+\n+Partial support of the OpenMP 5.0 specification. The OMPT and the OMPD\n+interfaces are unsupported.\n+\n+@node OpenMP 5.1\n+@section OpenMP 5.1\n+\n+@unnumberedsubsec New features listed in Appendix B of the OpenMP specification\n+\n+@multitable @columnfractions .60 .10 .25\n+@headitem Description @tab Status @tab Comments\n+@item OpenMP directive as C++ attribute specifiers @tab Y @tab\n+@item @code{omp_all_memory} reserved locator @tab N @tab\n+@item @emph{target_device trait} in OpenMP Context @tab N @tab\n+@item @code{target_device} selector set in context selectors @tab N @tab\n+@item C/C++'s @code{declare variante} directive: elision support of\n+      preprocessed code @tab N @tab\n+@item @code{declare variante}: new clauses @code{adjust_args} and\n+      @code{append_args} @tab N @tab\n+@item @code{dispatch} construct @tab N @tab\n+@item device-specific ICV settings the environment variables @tab N @tab\n+@item assume directive @tab N @tab\n+@item @code{nothing} directive @tab Y @tab\n+@item @code{error} directive @tab Y @tab\n+@item @code{masked} construct @tab Y @tab\n+@item @code{scope} directive @tab Y @tab\n+@item Loop transformation constructs @tab N @tab\n+@item @code{strict} modifier in the @code{grainsize} and @code{num_tasks}\n+      clauses of the taskloop construct @tab Y @tab\n+@item @code{align} clause/modifier in @code{allocate} directive/clause\n+      and @code{allocator} directive @tab N @tab\n+@item @code{thread_limit} clause to @code{target} construct @tab N @tab\n+@item @code{has_device_addr} clause to @code{target} construct @tab N @tab\n+@item iterators in @code{target update} motion clauses and @code{map}\n+      clauses @tab N @tab\n+@item indirect calls to the device version of a procedure or function in\n+      @code{target} regions @tab N @tab\n+@item @code{interop} directive @tab N @tab\n+@item @code{omp_interop_t} object support in runtime routines @tab N @tab\n+@item @code{nowait} clause in @code{taskwait} directive @tab N @tab\n+@item Extensions to the @code{atomic} directive @tab N @tab\n+@item @code{seq_cst} clause on a @code{flush} construct @tab Y @tab\n+@item @code{inoutset} argument to the @code{depend} clause @tab N @tab\n+@item @code{private} and @code{firstprivate} argument to @code{default}\n+      clause in C and C++ @tab N @tab\n+@item @code{present} argument to @code{defaultmap} clause @tab N @tab\n+@item @code{omp_set_num_teams}, @code{omp_set_teams_thread_limit},\n+      @code{omp_get_max_teams}, @code{omp_get_teams_thread_limit} runtime\n+      routines @tab N @tab\n+@item @code{omp_target_is_accessible} runtime routine @tab N @tab\n+@item @code{omp_target_memcpy_async} and @code{omp_target_memcpy_rect_async}\n+      runtime routines @tab N @tab\n+@item @code{omp_get_mapped_ptr} runtime routine @tab N @tab\n+@item @code{omp_calloc}, @code{omp_realloc}, @code{omp_aligned_alloc} and\n+      @code{omp_aligned_calloc} runtime routines @tab N @tab\n+@item @code{omp_alloctrait_key_t} enum: @code{omp_atv_serialized} added,\n+      @code{omp_atv_default} changed @tab Y @tab\n+@item @code{omp_display_env} runtime routine @tab P\n+      @tab Not inside @code{target} regions\n+@item @code{ompt_scope_endpoint_t} enum: @code{ompt_scope_beginend} @tab N @tab\n+@item @code{ompt_sync_region_t} enum additions @tab N @tab\n+@item @code{ompt_state_t} enum: @code{ompt_state_wait_barrier_implementation}\n+      and @code{ompt_state_wait_barrier_teams} @tab N @tab\n+@item @code{ompt_callback_target_data_op_emi_t},\n+      @code{ompt_callback_target_emi_t}, @code{ompt_callback_target_map_emi_t}\n+      and @code{ompt_callback_target_submit_emi_t} @tab N @tab\n+@item @code{ompt_callback_error_t} type @tab N @tab\n+@item @code{OMP_PLACES} syntax was extension @tab N @tab\n+@item @code{OMP_NUM_TEAMS} and @code{OMP_TEAMS_THREAD_LIMIT} environment\n+      variables @tab N @tab\n+@end multitable\n+\n+@unnumberedsubsec Other new OpenMP 5.1 features\n+\n+@multitable @columnfractions .60 .10 .25\n+@headitem Description @tab Status @tab Comments\n+@item Suppport of strictly structured blocks in Fortran @tab N @tab\n+@end multitable\n \n \n @c ---------------------------------------------------------------------"}]}