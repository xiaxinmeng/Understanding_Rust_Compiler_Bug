{"sha": "d408c5dad6a60c641458957794429e9f226ce857", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQwOGM1ZGFkNmE2MGM2NDE0NTg5NTc3OTQ0MjllOWYyMjZjZTg1Nw==", "commit": {"author": {"name": "Kresten Krab Thorup", "email": "krab@gcc.gnu.org", "date": "1993-04-12T15:44:02Z"}, "committer": {"name": "Kresten Krab Thorup", "email": "krab@gcc.gnu.org", "date": "1993-04-12T15:44:02Z"}, "message": "(__objc_init_install_dtable,\n\n__objc_install_dtable_for_class): Call to\n__objc_resolve_class_links moved to the latter.\n\nFrom-SVN: r4093", "tree": {"sha": "2f796e74005f80f1b4d7da2274d53d2e60d7274d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f796e74005f80f1b4d7da2274d53d2e60d7274d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d408c5dad6a60c641458957794429e9f226ce857", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d408c5dad6a60c641458957794429e9f226ce857", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d408c5dad6a60c641458957794429e9f226ce857", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d408c5dad6a60c641458957794429e9f226ce857/comments", "author": null, "committer": null, "parents": [{"sha": "eca33b05fb46941c04c51613333afbeb08b8744c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eca33b05fb46941c04c51613333afbeb08b8744c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eca33b05fb46941c04c51613333afbeb08b8744c"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "301313d9f4766ef08f579d05ae730ea2b1ca2faa", "filename": "gcc/objc/sendmsg.c", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d408c5dad6a60c641458957794429e9f226ce857/gcc%2Fobjc%2Fsendmsg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d408c5dad6a60c641458957794429e9f226ce857/gcc%2Fobjc%2Fsendmsg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fsendmsg.c?ref=d408c5dad6a60c641458957794429e9f226ce857", "patch": "@@ -77,6 +77,12 @@ get_imp (Class_t class, SEL sel)\n #endif\n }\n \n+__inline__ BOOL\n+__objc_responds_to (id object, SEL sel)\n+{\n+  return get_imp (object->class_pointer, sel) != __objc_missing_method;\n+}\n+\n /* This is the lookup function.  All entries in the table are either a \n    valid method *or* one of `__objc_missing_method' which calls\n    forward:: etc, or `__objc_init_install_dtable' which installs the\n@@ -139,11 +145,6 @@ static void __objc_init_install_dtable(id receiver, SEL op)\n   void* args;\n   void* result;\n \n-  /* If the class has not yet had it's class links resolved, we must \n-     re-compute all class links */\n-  if(!CLS_ISRESOLV(receiver->class_pointer))\n-    __objc_resolve_class_links();\n-\n   /* This may happen, if the programmer has taken the address of a \n      method before the dtable was initialized... too bad for him! */\n   if(receiver->class_pointer->dtable != __objc_uninstalled_dtable)\n@@ -232,10 +233,17 @@ static void\n __objc_install_dispatch_table_for_class (Class_t class)\n {\n #ifdef OBJC_SPARSE_LOOKUP\n-  Class_t super = class->super_class;\n+  Class_t super;\n   MethodList_t mlist;\n   int counter;\n \n+  /* If the class has not yet had it's class links resolved, we must \n+     re-compute all class links */\n+  if(!CLS_ISRESOLV(class))\n+    __objc_resolve_class_links();\n+\n+  super = class->super_class;\n+\n   if (super != 0 && (super->dtable == __objc_uninstalled_dtable))\n     __objc_install_dispatch_table_for_class (super);\n "}]}