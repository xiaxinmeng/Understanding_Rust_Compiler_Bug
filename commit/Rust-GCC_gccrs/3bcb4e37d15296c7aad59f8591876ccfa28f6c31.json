{"sha": "3bcb4e37d15296c7aad59f8591876ccfa28f6c31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JjYjRlMzdkMTUyOTZjN2FhZDU5Zjg1OTE4NzZjY2ZhMjhmNmMzMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2004-06-11T03:26:31Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2004-06-11T03:26:31Z"}, "message": "gimplify.c (gimplify_modify_expr): Don't force a temporary of an aggregate_value_p type.\n\n        * gimplify.c (gimplify_modify_expr): Don't force a temporary\n        of an aggregate_value_p type.\n\nFrom-SVN: r82959", "tree": {"sha": "286dfd310c69cb69eb51a600c9b4516f6e965fb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/286dfd310c69cb69eb51a600c9b4516f6e965fb7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bcb4e37d15296c7aad59f8591876ccfa28f6c31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bcb4e37d15296c7aad59f8591876ccfa28f6c31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bcb4e37d15296c7aad59f8591876ccfa28f6c31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bcb4e37d15296c7aad59f8591876ccfa28f6c31/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3100d647250b4209a601763e7887936d25899f3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3100d647250b4209a601763e7887936d25899f3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3100d647250b4209a601763e7887936d25899f3f"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "9628c84dffdfd7f9171b204a160f88ab4588c81f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bcb4e37d15296c7aad59f8591876ccfa28f6c31/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bcb4e37d15296c7aad59f8591876ccfa28f6c31/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3bcb4e37d15296c7aad59f8591876ccfa28f6c31", "patch": "@@ -1,3 +1,8 @@\n+2004-06-10  Jason Merrill  <jason@redhat.com>\n+\n+\t* gimplify.c (gimplify_modify_expr): Don't force a temporary\n+\tof an aggregate_value_p type.\n+\n 2004-06-10  Jeff Law  <law@redhat.com>\n \n \t* fold-const.c (fold_inf_compare): Avoid creating non-gimple"}, {"sha": "a4b9c702e284dc0b6ae68152fc2e6415720bc0a8", "filename": "gcc/gimplify.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bcb4e37d15296c7aad59f8591876ccfa28f6c31/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bcb4e37d15296c7aad59f8591876ccfa28f6c31/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=3bcb4e37d15296c7aad59f8591876ccfa28f6c31", "patch": "@@ -2493,12 +2493,16 @@ gimplify_modify_expr (tree *expr_p, tree *pre_p, tree *post_p, bool want_value)\n \n \t FIXME this should be handled by the is_gimple_rhs predicate.  */\n \n-      if (TREE_CODE (*from_p) == CALL_EXPR\n-\t  || (flag_non_call_exceptions && tree_could_trap_p (*from_p))\n-\t  /* If we're dealing with a renamable type, either source or dest\n-\t     must be a renamed variable.  */\n-\t  || (is_gimple_reg_type (TREE_TYPE (*from_p))\n-\t      && !is_gimple_reg (*to_p)))\n+      if (aggregate_value_p (TREE_TYPE (*from_p), NULL_TREE))\n+\t/* Don't force a temp of a large aggregate type; the copy could be\n+\t   arbitrarily expensive.  Instead we will generate a V_MAY_DEF for\n+\t   the assignment.  */;\n+      else if (TREE_CODE (*from_p) == CALL_EXPR\n+\t       || (flag_non_call_exceptions && tree_could_trap_p (*from_p))\n+\t       /* If we're dealing with a renamable type, either source or dest\n+\t\t  must be a renamed variable.  */\n+\t       || (is_gimple_reg_type (TREE_TYPE (*from_p))\n+\t\t   && !is_gimple_reg (*to_p)))\n \tgimplify_expr (from_p, pre_p, post_p, is_gimple_val, fb_rvalue);\n \n       /* If the value being copied is of variable width, expose the length"}]}