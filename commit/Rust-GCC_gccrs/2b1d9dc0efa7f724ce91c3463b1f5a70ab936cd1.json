{"sha": "2b1d9dc0efa7f724ce91c3463b1f5a70ab936cd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmIxZDlkYzBlZmE3ZjcyNGNlOTFjMzQ2M2IxZjVhNzBhYjkzNmNkMQ==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@redhat.com", "date": "2001-07-10T03:50:25Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2001-07-10T03:50:25Z"}, "message": "basic-block.h (tree_node): Forward declare if needed.\n\n2001-07-09  Diego Novillo  <dnovillo@redhat.com>\n\n\t* basic-block.h (tree_node): Forward declare if needed.\n\t(struct basic_block_def): Add fields 'head_tree' and 'end_tree'.\n\t(BLOCK_HEAD_TREE): Define.\n\t(BLOCK_END_TREE): Define.\n\t(struct loops): Rename field 'tree' to 'tree_root'.\n\t* flow.c (entry_exit_blocks): Add initializers for 'head_tree' and\n\t'end_tree'.\n\t(flow_loops_tree_build): Rename reference to field 'tree' to\n\t'tree_root'.\n\t(flow_loops_level_compute): Ditto.\n\t* predict.c (estimate_bb_frequencies): Ditto.\n\t* tree.h (struct tree_common): Add field 'aux'.\n\nFrom-SVN: r43886", "tree": {"sha": "6798316b89ab69c995e28b442a4782b978b2535b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6798316b89ab69c995e28b442a4782b978b2535b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b1d9dc0efa7f724ce91c3463b1f5a70ab936cd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b1d9dc0efa7f724ce91c3463b1f5a70ab936cd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b1d9dc0efa7f724ce91c3463b1f5a70ab936cd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b1d9dc0efa7f724ce91c3463b1f5a70ab936cd1/comments", "author": null, "committer": null, "parents": [{"sha": "70bdc2ff0aa08ce5166cd202074100eea97a653d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70bdc2ff0aa08ce5166cd202074100eea97a653d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70bdc2ff0aa08ce5166cd202074100eea97a653d"}], "stats": {"total": 42, "additions": 37, "deletions": 5}, "files": [{"sha": "f1379c1a876bb633f9e7d4096d1b633b491ed587", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b1d9dc0efa7f724ce91c3463b1f5a70ab936cd1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b1d9dc0efa7f724ce91c3463b1f5a70ab936cd1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2b1d9dc0efa7f724ce91c3463b1f5a70ab936cd1", "patch": "@@ -1,3 +1,18 @@\n+2001-07-09  Diego Novillo  <dnovillo@redhat.com>\n+\n+\t* basic-block.h (tree_node): Forward declare if needed.\n+\t(struct basic_block_def): Add fields 'head_tree' and 'end_tree'.\n+\t(BLOCK_HEAD_TREE): Define.\n+\t(BLOCK_END_TREE): Define.\n+\t(struct loops): Rename field 'tree' to 'tree_root'.\n+\t* flow.c (entry_exit_blocks): Add initializers for 'head_tree' and \n+\t'end_tree'.\n+\t(flow_loops_tree_build): Rename reference to field 'tree' to\n+\t'tree_root'.\n+\t(flow_loops_level_compute): Ditto.\n+\t* predict.c (estimate_bb_frequencies): Ditto.\n+\t* tree.h (struct tree_common): Add field 'aux'.\n+\n 2001-07-09  Stan Shebs  <shebs@apple.com>\n \n \t* config/darwin.c (darwin_encode_section_info): Don't mark any"}, {"sha": "5a2088ece5f59391f1029ad24a830fe500122338", "filename": "gcc/basic-block.h", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b1d9dc0efa7f724ce91c3463b1f5a70ab936cd1/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b1d9dc0efa7f724ce91c3463b1f5a70ab936cd1/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=2b1d9dc0efa7f724ce91c3463b1f5a70ab936cd1", "patch": "@@ -26,6 +26,11 @@ Boston, MA 02111-1307, USA.  */\n #include \"varray.h\"\n #include \"partition.h\"\n \n+#ifndef TREE_CODE\n+union tree_node;\n+#define tree union tree_node *\n+#endif\n+\n /* Head of register set linked list.  */\n typedef bitmap_head regset_head;\n /* A pointer to a regset_head.  */\n@@ -174,6 +179,10 @@ typedef struct basic_block_def {\n   /* The first and last insns of the block.  */\n   rtx head, end;\n \n+  /* The first and last trees of the block.  */\n+  tree head_tree;\n+  tree end_tree;\n+\n   /* The edges into and out of the block.  */\n   edge pred, succ;\n \n@@ -247,6 +256,9 @@ extern regset regs_live_at_setjmp;\n #define BLOCK_HEAD(B)      (BASIC_BLOCK (B)->head)\n #define BLOCK_END(B)       (BASIC_BLOCK (B)->end)\n \n+#define BLOCK_HEAD_TREE(B) (BASIC_BLOCK (B)->head_tree)\n+#define BLOCK_END_TREE(B) (BASIC_BLOCK (B)->end_tree)\n+\n /* Special block numbers [markers] for entry and exit.  */\n #define ENTRY_BLOCK (-1)\n #define EXIT_BLOCK (-2)\n@@ -433,7 +445,7 @@ struct loops\n   struct loop *array;\n \n   /* Pointer to root of loop heirachy tree.  */\n-  struct loop *tree;\n+  struct loop *tree_root;\n \n   /* Information derived from the CFG.  */\n   struct cfg"}, {"sha": "784d21dc7c536913779613121f7f26cabb56f524", "filename": "gcc/flow.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b1d9dc0efa7f724ce91c3463b1f5a70ab936cd1/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b1d9dc0efa7f724ce91c3463b1f5a70ab936cd1/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=2b1d9dc0efa7f724ce91c3463b1f5a70ab936cd1", "patch": "@@ -195,6 +195,8 @@ varray_type basic_block_info;\n struct basic_block_def entry_exit_blocks[2]\n = {{NULL,\t\t\t/* head */\n     NULL,\t\t\t/* end */\n+    NULL,\t\t\t/* head_tree */\n+    NULL,\t\t\t/* end_tree */\n     NULL,\t\t\t/* pred */\n     NULL,\t\t\t/* succ */\n     NULL,\t\t\t/* local_set */\n@@ -210,6 +212,8 @@ struct basic_block_def entry_exit_blocks[2]\n   {\n     NULL,\t\t\t/* head */\n     NULL,\t\t\t/* end */\n+    NULL,\t\t\t/* head_tree */\n+    NULL,\t\t\t/* end_tree */\n     NULL,\t\t\t/* pred */\n     NULL,\t\t\t/* succ */\n     NULL,\t\t\t/* local_set */\n@@ -8718,8 +8722,8 @@ flow_loops_tree_build (loops)\n   /* Root the loop hierarchy tree with the first loop found.\n      Since we used a depth first search this should be the\n      outermost loop.  */\n-  loops->tree = &loops->array[0];\n-  loops->tree->outer = loops->tree->inner = loops->tree->next = NULL;\n+  loops->tree_root = &loops->array[0];\n+  loops->tree_root->outer = loops->tree_root->inner = loops->tree_root->next = NULL;\n \n   /* Add the remaining loops to the tree.  */\n   for (i = 1; i < num_loops; i++)\n@@ -8773,7 +8777,7 @@ flow_loops_level_compute (loops)\n   int levels = 0;\n \n   /* Traverse all the outer level loops.  */\n-  for (loop = loops->tree; loop; loop = loop->next)\n+  for (loop = loops->tree_root; loop; loop = loop->next)\n     {\n       level = flow_loop_level_compute (loop, 1);\n       if (level > levels)"}, {"sha": "9fed0c9820c9c049388c373d4ff5fdac028099c4", "filename": "gcc/predict.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b1d9dc0efa7f724ce91c3463b1f5a70ab936cd1/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b1d9dc0efa7f724ce91c3463b1f5a70ab936cd1/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=2b1d9dc0efa7f724ce91c3463b1f5a70ab936cd1", "patch": "@@ -806,7 +806,7 @@ estimate_bb_frequencies (loops)\n     }\n   /* First compute probabilities locally for each loop from innermost\n      to outermost to examine probabilities for back edges.  */\n-  estimate_loops_at_level (loops->tree);\n+  estimate_loops_at_level (loops->tree_root);\n \n   /* Now fake loop around whole function to finalize probabilities.  */\n   for (i = 0; i < n_basic_blocks; i++)"}, {"sha": "4becd00ab82560a11207b4583d2f762037260bc0", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b1d9dc0efa7f724ce91c3463b1f5a70ab936cd1/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b1d9dc0efa7f724ce91c3463b1f5a70ab936cd1/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=2b1d9dc0efa7f724ce91c3463b1f5a70ab936cd1", "patch": "@@ -130,6 +130,7 @@ struct tree_common\n {\n   union tree_node *chain;\n   union tree_node *type;\n+  void *aux;\n   ENUM_BITFIELD(tree_code) code : 8;\n   unsigned side_effects_flag : 1;\n   unsigned constant_flag : 1;"}]}