{"sha": "9e0e11bfe4af10bef0a326b926f36a1546ee4882", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUwZTExYmZlNGFmMTBiZWYwYTMyNmI5MjZmMzZhMTU0NmVlNDg4Mg==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@redhat.com", "date": "2001-09-02T01:14:45Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2001-09-02T01:14:45Z"}, "message": "expr.c (push_block): Make sane use of STACK_GROWS_DOWNWARD.\n\n\t* expr.c (push_block): Make sane use of STACK_GROWS_DOWNWARD.\n\t(emit_push_insn): Use specified padding direction when\n\tSTACK_PUSH_CODE is POST_INC.\n\nFrom-SVN: r45352", "tree": {"sha": "0f1fa75843bc922de60b8216492c90d6b82eeece", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f1fa75843bc922de60b8216492c90d6b82eeece"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e0e11bfe4af10bef0a326b926f36a1546ee4882", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e0e11bfe4af10bef0a326b926f36a1546ee4882", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e0e11bfe4af10bef0a326b926f36a1546ee4882", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e0e11bfe4af10bef0a326b926f36a1546ee4882/comments", "author": null, "committer": null, "parents": [{"sha": "e27e731daa7966bf10323d61618706d3aaa44b99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e27e731daa7966bf10323d61618706d3aaa44b99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e27e731daa7966bf10323d61618706d3aaa44b99"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "260f09facada7e79112375fad04fb6d103563a30", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e0e11bfe4af10bef0a326b926f36a1546ee4882/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e0e11bfe4af10bef0a326b926f36a1546ee4882/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e0e11bfe4af10bef0a326b926f36a1546ee4882", "patch": "@@ -1,5 +1,9 @@\n 2001-09-01  Geoffrey Keating  <geoffk@redhat.com>\n \n+\t* expr.c (push_block): Make sane use of STACK_GROWS_DOWNWARD.\n+\t(emit_push_insn): Use specified padding direction when\n+\tSTACK_PUSH_CODE is POST_INC.\n+\n \t* config/stormy16/stormy16.h (DWARF2_UNWIND_INFO): Define to 0.\n \n 2001-09-01  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>"}, {"sha": "e8774e46f6c94ec749bf64e08f07e3a991b48262", "filename": "gcc/expr.c", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e0e11bfe4af10bef0a326b926f36a1546ee4882/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e0e11bfe4af10bef0a326b926f36a1546ee4882/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=9e0e11bfe4af10bef0a326b926f36a1546ee4882", "patch": "@@ -3102,18 +3102,11 @@ push_block (size, extra, below)\n     }\n \n #ifndef STACK_GROWS_DOWNWARD\n-#ifdef ARGS_GROW_DOWNWARD\n-  if (!ACCUMULATE_OUTGOING_ARGS)\n-#else\n   if (0)\n-#endif\n #else\n   if (1)\n #endif\n     {\n-      /* Return the lowest stack address when STACK or ARGS grow downward and\n-\t we are not aaccumulating outgoing arguments (the c4x port uses such\n-\t conventions).  */\n       temp = virtual_outgoing_args_rtx;\n       if (extra != 0 && below)\n \ttemp = plus_constant (temp, extra);\n@@ -3273,8 +3266,9 @@ emit_push_insn (x, mode, type, size, align, partial, reg, extra,\n      Default is below for small data on big-endian machines; else above.  */\n   enum direction where_pad = FUNCTION_ARG_PADDING (mode, type);\n \n-  /* Invert direction if stack is post-update.  */\n-  if (STACK_PUSH_CODE == POST_INC || STACK_PUSH_CODE == POST_DEC)\n+  /* Invert direction if stack is post-decrement. \n+     FIXME: why?  */\n+  if (STACK_PUSH_CODE == POST_DEC)\n     if (where_pad != none)\n       where_pad = (where_pad == downward ? upward : downward);\n "}]}