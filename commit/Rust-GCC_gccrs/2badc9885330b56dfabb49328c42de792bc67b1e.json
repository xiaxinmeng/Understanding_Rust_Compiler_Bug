{"sha": "2badc9885330b56dfabb49328c42de792bc67b1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJhZGM5ODg1MzMwYjU2ZGZhYmI0OTMyOGM0MmRlNzkyYmM2N2IxZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2020-05-05T10:31:26Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2020-05-05T10:39:09Z"}, "message": "Do not put incomplete CONSTRUCTORs into static memory\n\nThe CONSTRUCTOR_NO_CLEARING flag was invented to avoid generating a memset\nfor  CONSTRUCTORS that lack elements, but it turns out that the gimplifier\ncan generate a memcpy for them instead, which is worse performance-wise,\nso this prevents it from doing that for them.\n\n\t* gimplify.c (gimplify_init_constructor): Do not put the constructor\n\tinto static memory if it is not complete.", "tree": {"sha": "b22c407697e40808090e2657de0ce0508a9a6f99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b22c407697e40808090e2657de0ce0508a9a6f99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2badc9885330b56dfabb49328c42de792bc67b1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2badc9885330b56dfabb49328c42de792bc67b1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2badc9885330b56dfabb49328c42de792bc67b1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2badc9885330b56dfabb49328c42de792bc67b1e/comments", "author": null, "committer": null, "parents": [{"sha": "0424a5ece5307cc22bbc0fe97edf4707d7a798ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0424a5ece5307cc22bbc0fe97edf4707d7a798ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0424a5ece5307cc22bbc0fe97edf4707d7a798ed"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "73634780e0f8bbc0dd3d81c14adba77a2ba2d0dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2badc9885330b56dfabb49328c42de792bc67b1e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2badc9885330b56dfabb49328c42de792bc67b1e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2badc9885330b56dfabb49328c42de792bc67b1e", "patch": "@@ -1,3 +1,8 @@\n+2020-05-05  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gimplify.c (gimplify_init_constructor): Do not put the constructor\n+\tinto static memory if it is not complete.\n+\n 2020-05-05  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/94949"}, {"sha": "7807e30fb2e32b1f83832233400d41304da2f3e9", "filename": "gcc/gimplify.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2badc9885330b56dfabb49328c42de792bc67b1e/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2badc9885330b56dfabb49328c42de792bc67b1e/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=2badc9885330b56dfabb49328c42de792bc67b1e", "patch": "@@ -4995,8 +4995,8 @@ gimplify_init_constructor (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p,\n \t   all-zero initializers (which aren't big enough to merit\n \t   clearing), and don't try to make bitwise copies of\n \t   TREE_ADDRESSABLE types.  */\n-\n \tif (valid_const_initializer\n+\t    && complete_p\n \t    && !(cleared || num_nonzero_elements == 0)\n \t    && !TREE_ADDRESSABLE (type))\n \t  {"}, {"sha": "7f973949a7fd31cefdf55881110d4058e96b0fcb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2badc9885330b56dfabb49328c42de792bc67b1e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2badc9885330b56dfabb49328c42de792bc67b1e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2badc9885330b56dfabb49328c42de792bc67b1e", "patch": "@@ -1,3 +1,7 @@\n+2020-05-05  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/aggr29.adb: New test.\n+\n 2020-05-05  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/94949"}, {"sha": "c82a6f4c768e850046d574a3dc590672328ccb85", "filename": "gcc/testsuite/gnat.dg/aggr29.adb", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2badc9885330b56dfabb49328c42de792bc67b1e/gcc%2Ftestsuite%2Fgnat.dg%2Faggr29.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2badc9885330b56dfabb49328c42de792bc67b1e/gcc%2Ftestsuite%2Fgnat.dg%2Faggr29.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faggr29.adb?ref=2badc9885330b56dfabb49328c42de792bc67b1e", "patch": "@@ -0,0 +1,12 @@\n+-- { dg-do compile }\n+-- { dg-options \"-fdump-tree-gimple\" }\n+\n+with Ada.Streams; use Ada.Streams;\n+\n+procedure Aggr29 is\n+  A : aliased Stream_Element_Array := (1 .. 512 => <>);\n+begin\n+  null;\n+end;\n+\n+-- { dg-final { scan-tree-dump-not \"a___UNC = \\\\*\" \"gimple\" } }"}]}