{"sha": "94160706d800e90b93bb60cf76a8a852f04af501", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQxNjA3MDZkODAwZTkwYjkzYmI2MGNmNzZhOGE4NTJmMDRhZjUwMQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1991-12-01T05:07:32Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1991-12-01T05:07:32Z"}, "message": "entered into RCS\n\nFrom-SVN: r89", "tree": {"sha": "95bf1a576d44d26dfa7707e38825f53f62af9b6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95bf1a576d44d26dfa7707e38825f53f62af9b6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94160706d800e90b93bb60cf76a8a852f04af501", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94160706d800e90b93bb60cf76a8a852f04af501", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94160706d800e90b93bb60cf76a8a852f04af501", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94160706d800e90b93bb60cf76a8a852f04af501/comments", "author": null, "committer": null, "parents": [{"sha": "fe3ec4f798ceea52e1b542b481670b83c12347fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe3ec4f798ceea52e1b542b481670b83c12347fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe3ec4f798ceea52e1b542b481670b83c12347fd"}], "stats": {"total": 105, "additions": 104, "deletions": 1}, "files": [{"sha": "9e3141c2a9dfd5b4ed8462e8bee5d0dddea5add6", "filename": "gcc/config/i860/bsd-gas.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94160706d800e90b93bb60cf76a8a852f04af501/gcc%2Fconfig%2Fi860%2Fbsd-gas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94160706d800e90b93bb60cf76a8a852f04af501/gcc%2Fconfig%2Fi860%2Fbsd-gas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi860%2Fbsd-gas.h?ref=94160706d800e90b93bb60cf76a8a852f04af501", "patch": "@@ -1,4 +1,4 @@\n-#include \"tm-i860b.h\"\n+#include \"i860b.h\"\n \n #undef ASCII_DATA_ASM_OP\n #define ASCII_DATA_ASM_OP \".ascii\""}, {"sha": "e9fabdb11182580726fcb725c99cd39a70e55be0", "filename": "gcc/config/m68k/isi-nfp.h", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94160706d800e90b93bb60cf76a8a852f04af501/gcc%2Fconfig%2Fm68k%2Fisi-nfp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94160706d800e90b93bb60cf76a8a852f04af501/gcc%2Fconfig%2Fm68k%2Fisi-nfp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fisi-nfp.h?ref=94160706d800e90b93bb60cf76a8a852f04af501", "patch": "@@ -0,0 +1,5 @@\n+/* Define target machine as an ISI 68000/68020 with no 68881.  */\n+\n+#define TARGET_DEFAULT 5\n+\n+#include \"isi.h\""}, {"sha": "81a0c735307a88dfedf00f94cc444233fd6f276d", "filename": "gcc/config/m68k/newsgas.h", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94160706d800e90b93bb60cf76a8a852f04af501/gcc%2Fconfig%2Fm68k%2Fnewsgas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94160706d800e90b93bb60cf76a8a852f04af501/gcc%2Fconfig%2Fm68k%2Fnewsgas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fnewsgas.h?ref=94160706d800e90b93bb60cf76a8a852f04af501", "patch": "@@ -0,0 +1,7 @@\n+/* In Sony versions before 3.0, use the GNU Assembler, because the\n+   system's assembler has no way to assemble the difference of two\n+   labels for the displacement in a switch-dispatch instruction.  */  \n+\n+#define USE_GAS\n+\n+#include \"news.h\""}, {"sha": "e6e9ee7efd1a2b4e47cd90c652eec319facdfddc", "filename": "gcc/config/m68k/sun3mach.h", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94160706d800e90b93bb60cf76a8a852f04af501/gcc%2Fconfig%2Fm68k%2Fsun3mach.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94160706d800e90b93bb60cf76a8a852f04af501/gcc%2Fconfig%2Fm68k%2Fsun3mach.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fsun3mach.h?ref=94160706d800e90b93bb60cf76a8a852f04af501", "patch": "@@ -0,0 +1,11 @@\n+#include \"sun3.h\"\n+\n+#undef CPP_PREDEFINES\n+#define CPP_PREDEFINES \"-Dmc68000 -Dsun -Dsun3 -Dunix -DMACH -DCMU -DMTXINU -DBIT_MSF -DBYTE_MSF\"\n+\n+/* Specify extra dir to search for include files.  */\n+#define SYSTEM_INCLUDE_DIR \"/usr/mach/include\"\n+\n+/* LINK_SPEC is needed only for Sunos 4.  */\n+\n+#undef LINK_SPEC"}, {"sha": "bff17ae6bb860da653236de7ae823ee1c5835747", "filename": "gcc/config/m68k/sun3n.h", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94160706d800e90b93bb60cf76a8a852f04af501/gcc%2Fconfig%2Fm68k%2Fsun3n.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94160706d800e90b93bb60cf76a8a852f04af501/gcc%2Fconfig%2Fm68k%2Fsun3n.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fsun3n.h?ref=94160706d800e90b93bb60cf76a8a852f04af501", "patch": "@@ -0,0 +1,5 @@\n+/* Define target machine as a Sun 3 with no 68881.  */\n+\n+#define TARGET_DEFAULT 5\n+\n+#include \"sun3.h\""}, {"sha": "917a4e499eda964cf1cfba93feb8dc528697f75a", "filename": "gcc/config/m68k/sun3n3.h", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94160706d800e90b93bb60cf76a8a852f04af501/gcc%2Fconfig%2Fm68k%2Fsun3n3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94160706d800e90b93bb60cf76a8a852f04af501/gcc%2Fconfig%2Fm68k%2Fsun3n3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fsun3n3.h?ref=94160706d800e90b93bb60cf76a8a852f04af501", "patch": "@@ -0,0 +1,5 @@\n+#include \"sun3n.h\"\n+\n+/* LINK_SPEC is needed only for Sunos 4.  */\n+\n+#undef LINK_SPEC"}, {"sha": "e245abc5ae94c13be53645986b0ce8dc5ce32cf6", "filename": "gcc/config/m68k/sun3o3.h", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94160706d800e90b93bb60cf76a8a852f04af501/gcc%2Fconfig%2Fm68k%2Fsun3o3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94160706d800e90b93bb60cf76a8a852f04af501/gcc%2Fconfig%2Fm68k%2Fsun3o3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fsun3o3.h?ref=94160706d800e90b93bb60cf76a8a852f04af501", "patch": "@@ -0,0 +1,5 @@\n+#include \"sun3.h\"\n+\n+/* LINK_SPEC is needed only for Sunos 4.  */\n+\n+#undef LINK_SPEC"}, {"sha": "999329b15eb879f0c301ba88492b52fdd28cd5df", "filename": "gcc/config/vax/vaxv.h", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94160706d800e90b93bb60cf76a8a852f04af501/gcc%2Fconfig%2Fvax%2Fvaxv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94160706d800e90b93bb60cf76a8a852f04af501/gcc%2Fconfig%2Fvax%2Fvaxv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvaxv.h?ref=94160706d800e90b93bb60cf76a8a852f04af501", "patch": "@@ -0,0 +1,65 @@\n+/* Definitions of target machine for GNU compiler.  Vax sysV version.\n+   Copyright (C) 1988 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+#include \"vax.h\"\n+\n+/* Cope with these under SysV */\n+\n+#define SCCS_DIRECTIVE\n+\n+/* Output #ident as a .ident.  */\n+\n+#define ASM_OUTPUT_IDENT(FILE, NAME) fprintf (FILE, \"\\t.ident \\\"%s\\\"\\n\", NAME);\n+\n+#undef DBX_DEBUGGING_INFO\n+#define SDB_DEBUGGING_INFO\n+\n+#undef LIB_SPEC\n+\n+/* The .file command should always begin the output.  */\n+#undef ASM_FILE_START\n+#define ASM_FILE_START(FILE) \\\n+output_file_directive ((FILE), main_input_filename)\n+\n+#undef ASM_OUTPUT_ALIGN\n+#define ASM_OUTPUT_ALIGN(FILE,LOG) \\\n+  fprintf(FILE, \"\\t.align %d\\n\", 1 << (LOG))\n+\n+#undef ASM_OUTPUT_LOCAL\n+#define ASM_OUTPUT_LOCAL(FILE,NAME,SIZE,ROUNDED)\t\\\n+( data_section (),\t\t\t\t\t\\\n+  assemble_name ((FILE), (NAME)),\t\t\t\\\n+  fprintf ((FILE), \":\\n\\t.space %u\\n\", (ROUNDED)))\n+\n+#define ASM_OUTPUT_ASCII(FILE,PTR,LEN)\t\t\t\\\n+{\t\t\t\t\t\t\t\\\n+  unsigned char *s;\t\t\t\t\t\t\\\n+  int i;\t\t\t\t\t\t\\\n+  for (i = 0, s = (PTR); i < (LEN); s++, i++)\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      if ((i % 8) == 0)\t\t\t\t\t\\\n+\tfputs (\"\\n\\t.byte\\t\", (FILE));\t\t\t\\\n+      fprintf ((FILE), \"%s0x%x\", (i%8?\",\":\"\"), (unsigned)*s); \\\n+    }\t\t\t\t\t\t\t\\\n+  fputs (\"\\n\", (FILE));\t\t\t\t\t\\\n+}\n+\n+#undef ASM_OUTPUT_DOUBLE\n+#define ASM_OUTPUT_DOUBLE(FILE,VALUE)  \\\n+  fprintf (FILE, \"\\t.double 0d%.20e\\n\", (VALUE))"}]}