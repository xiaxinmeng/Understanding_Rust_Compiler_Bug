{"sha": "be1ed94f8986cde1e96ba95187ea27784a39298b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUxZWQ5NGY4OTg2Y2RlMWU5NmJhOTUxODdlYTI3Nzg0YTM5Mjk4Yg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-09-14T18:29:43Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-09-14T18:29:43Z"}, "message": "fixinc.math: New file to fix math.h on some systems.\n\n        * fixinc.math: New file to fix math.h on some systems.\n        * configure.in (freebsd, netbsd): Use fixinc.math on these\n        systems.\n        * configure: Rebuilt.\nShould fix struct exception problems for freebsd, netbsd.  Can be used\nfor others.\n\nFrom-SVN: r15436", "tree": {"sha": "2f46defb88c43a24aaeb8ff191e6a7d195386c5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f46defb88c43a24aaeb8ff191e6a7d195386c5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be1ed94f8986cde1e96ba95187ea27784a39298b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be1ed94f8986cde1e96ba95187ea27784a39298b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be1ed94f8986cde1e96ba95187ea27784a39298b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be1ed94f8986cde1e96ba95187ea27784a39298b/comments", "author": null, "committer": null, "parents": [{"sha": "124da27518339cca241634edd70a89126450c78e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/124da27518339cca241634edd70a89126450c78e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/124da27518339cca241634edd70a89126450c78e"}], "stats": {"total": 183, "additions": 147, "deletions": 36}, "files": [{"sha": "9e7f88915406feea98dfee13994384fd289773dc", "filename": "gcc/configure", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be1ed94f8986cde1e96ba95187ea27784a39298b/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be1ed94f8986cde1e96ba95187ea27784a39298b/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=be1ed94f8986cde1e96ba95187ea27784a39298b", "patch": "@@ -1927,8 +1927,8 @@ for machine in $build $host $target; do\n \t\ttm_file=arm/netbsd.h\n \t\txm_file=arm/xm-netbsd.h\n \t\ttmake_file=arm/t-netbsd\n-\t\t# On NetBSD, the headers are already okay.\n-\t\tfixincludes=Makefile.in\n+\t\t# On NetBSD, the headers are already okay, except for math.h.\n+\t\tfixincludes=fixinc.math\n \t\tuse_collect2=yes\n \t\t;;\n \tarm-*-linux-gnuaout*)\t\t# ARM Linux\n@@ -2303,8 +2303,8 @@ for machine in $build $host $target; do\n \ti[3456]86-*-freebsdelf*)\n \t\ttm_file=\"i386/i386.h i386/att.h linux.h i386/freebsd-elf.h i386/perform.h\"\n \t\txm_file=i386/xm-freebsd.h\n-\t\t# On FreeBSD, the headers are already ok.\n-\t\tfixincludes=Makefile.in\n+\t\t# On FreeBSD, the headers are already ok, except for math.h.\n+\t\tfixincludes=fixinc.math\n \t\ttmake_file=i386/t-freebsd\n \t\tgas=yes\n \t\tgnu_ld=yes\n@@ -2313,15 +2313,15 @@ for machine in $build $host $target; do\n \ti[3456]86-*-freebsd*)\n \t\ttm_file=i386/freebsd.h\n \t\txm_file=i386/xm-freebsd.h\n-\t\t# On FreeBSD, the headers are already ok.\n-\t\tfixincludes=Makefile.in\n+\t\t# On FreeBSD, the headers are already ok, except for math.h\n+\t\tfixincludes=fixinc.math\n \t\ttmake_file=i386/t-freebsd\n \t\t;;\n \ti[3456]86-*-netbsd*)\n \t\ttm_file=i386/netbsd.h\n \t\txm_file=i386/xm-netbsd.h\n-\t\t# On NetBSD, the headers are already okay.\n-\t\tfixincludes=Makefile.in\n+\t\t# On NetBSD, the headers are already okay, except for math.h.\n+\t\tfixincludes=fixinc.math\n \t\ttmake_file=t-netbsd\n \t\t;;\n \ti[3456]86-*-coff*)\n@@ -2978,8 +2978,8 @@ for machine in $build $host $target; do\n \tm68k-*-netbsd*)\n \t\ttm_file=m68k/netbsd.h\n \t\txm_file=m68k/xm-netbsd.h\n-\t\t# On NetBSD, the headers are already okay.\n-\t\tfixincludes=Makefile.in\n+\t\t# On NetBSD, the headers are already okay, except for math.h.\n+\t\tfixincludes=fixinc.math\n \t\ttmake_file=t-netbsd\n \t\t;;\n \tm68k-*-sysv3*)\t\t\t# Motorola m68k's running system V.3\n@@ -3277,8 +3277,8 @@ for machine in $build $host $target; do\n \tmips-dec-netbsd*)                  # Decstation running NetBSD\n \t\ttm_file=mips/netbsd.h\n \t\txm_file=mips/xm-netbsd.h\n-\t\t# On NetBSD, the headers are already okay.\n-\t\tfixincludes=Makefile.in\n+\t\t# On NetBSD, the headers are already okay, except for math.h.\n+\t\tfixincludes=fixinc.math\n \t\ttmake_file=t-netbsd\n \t\t;;\n \tmips-sony-bsd* | mips-sony-newsos*)\t# Sony NEWS 3600 or risc/news.\n@@ -3597,8 +3597,8 @@ for machine in $build $host $target; do\n \tns32k-pc532-netbsd*)\n \t\ttm_file=ns32k/netbsd.h\n \t\txm_file=ns32k/xm-netbsd.h\n-\t\t# On NetBSD, the headers are already okay.\n-\t\tfixincludes=Makefile.in\n+\t\t# On NetBSD, the headers are already okay, except for math.h.\n+\t\tfixincludes=fixinc.math\n \t\ttmake_file=t-netbsd\n \t\t;;\n         pdp11-*-bsd)\n@@ -3827,8 +3827,8 @@ for machine in $build $host $target; do\n \tsparc-*-netbsd*)\n \t\ttm_file=sparc/netbsd.h\n \t\txm_file=sparc/xm-netbsd.h\n-\t\t# On NetBSD, the headers are already okay.\n-\t\tfixincludes=Makefile.in\n+\t\t# On NetBSD, the headers are already okay, except for math.h.\n+\t\tfixincludes=fixinc.math\n \t\ttmake_file=t-netbsd\n \t\t;;\n \tsparc-*-bsd*)\n@@ -3969,8 +3969,8 @@ for machine in $build $host $target; do\n \tvax-*-netbsd*)\n \t\ttm_file=\"${tm_file} netbsd.h vax/netbsd.h\"\n \t\txm_file=\"${xm_file} xm-netbsd.h\"\n-\t\t# On NetBSD, the headers are already okay.\n-\t\tfixincludes=Makefile.in\n+\t\t# On NetBSD, the headers are already okay, except for math.h.\n+\t\tfixincludes=fixinc.math\n \t\ttmake_file=t-netbsd\n \t\tfloat_format=vax\n \t\t;;"}, {"sha": "27d562ba390de76a22293d890ed16b6de3a0e671", "filename": "gcc/configure.in", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be1ed94f8986cde1e96ba95187ea27784a39298b/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be1ed94f8986cde1e96ba95187ea27784a39298b/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=be1ed94f8986cde1e96ba95187ea27784a39298b", "patch": "@@ -413,8 +413,8 @@ for machine in $build $host $target; do\n \t\ttm_file=arm/netbsd.h\n \t\txm_file=arm/xm-netbsd.h\n \t\ttmake_file=arm/t-netbsd\n-\t\t# On NetBSD, the headers are already okay.\n-\t\tfixincludes=Makefile.in\n+\t\t# On NetBSD, the headers are already okay, except for math.h.\n+\t\tfixincludes=fixinc.math\n \t\tuse_collect2=yes\n \t\t;;\n \tarm-*-linux-gnuaout*)\t\t# ARM Linux\n@@ -789,8 +789,8 @@ for machine in $build $host $target; do\n \ti[[3456]]86-*-freebsdelf*)\n \t\ttm_file=\"i386/i386.h i386/att.h linux.h i386/freebsd-elf.h i386/perform.h\"\n \t\txm_file=i386/xm-freebsd.h\n-\t\t# On FreeBSD, the headers are already ok.\n-\t\tfixincludes=Makefile.in\n+\t\t# On FreeBSD, the headers are already ok, except for math.h.\n+\t\tfixincludes=fixinc.math\n \t\ttmake_file=i386/t-freebsd\n \t\tgas=yes\n \t\tgnu_ld=yes\n@@ -799,15 +799,15 @@ for machine in $build $host $target; do\n \ti[[3456]]86-*-freebsd*)\n \t\ttm_file=i386/freebsd.h\n \t\txm_file=i386/xm-freebsd.h\n-\t\t# On FreeBSD, the headers are already ok.\n-\t\tfixincludes=Makefile.in\n+\t\t# On FreeBSD, the headers are already ok, except for math.h.\n+\t\tfixincludes=fixinc.math\n \t\ttmake_file=i386/t-freebsd\n \t\t;;\n \ti[[3456]]86-*-netbsd*)\n \t\ttm_file=i386/netbsd.h\n \t\txm_file=i386/xm-netbsd.h\n-\t\t# On NetBSD, the headers are already okay.\n-\t\tfixincludes=Makefile.in\n+\t\t# On NetBSD, the headers are already okay, except for math.h.\n+\t\tfixincludes=fixinc.math\n \t\ttmake_file=t-netbsd\n \t\t;;\n \ti[[3456]]86-*-coff*)\n@@ -1464,8 +1464,8 @@ for machine in $build $host $target; do\n \tm68k-*-netbsd*)\n \t\ttm_file=m68k/netbsd.h\n \t\txm_file=m68k/xm-netbsd.h\n-\t\t# On NetBSD, the headers are already okay.\n-\t\tfixincludes=Makefile.in\n+\t\t# On NetBSD, the headers are already okay, except for math.h.\n+\t\tfixincludes=fixinc.math\n \t\ttmake_file=t-netbsd\n \t\t;;\n \tm68k-*-sysv3*)\t\t\t# Motorola m68k's running system V.3\n@@ -1763,8 +1763,8 @@ for machine in $build $host $target; do\n \tmips-dec-netbsd*)                  # Decstation running NetBSD\n \t\ttm_file=mips/netbsd.h\n \t\txm_file=mips/xm-netbsd.h\n-\t\t# On NetBSD, the headers are already okay.\n-\t\tfixincludes=Makefile.in\n+\t\t# On NetBSD, the headers are already okay, except for math.h.\n+\t\tfixincludes=fixinc.math\n \t\ttmake_file=t-netbsd\n \t\t;;\n \tmips-sony-bsd* | mips-sony-newsos*)\t# Sony NEWS 3600 or risc/news.\n@@ -2083,8 +2083,8 @@ for machine in $build $host $target; do\n \tns32k-pc532-netbsd*)\n \t\ttm_file=ns32k/netbsd.h\n \t\txm_file=ns32k/xm-netbsd.h\n-\t\t# On NetBSD, the headers are already okay.\n-\t\tfixincludes=Makefile.in\n+\t\t# On NetBSD, the headers are already okay, except for math.h.\n+\t\tfixincludes=fixinc.math\n \t\ttmake_file=t-netbsd\n \t\t;;\n         pdp11-*-bsd)\n@@ -2313,8 +2313,8 @@ for machine in $build $host $target; do\n \tsparc-*-netbsd*)\n \t\ttm_file=sparc/netbsd.h\n \t\txm_file=sparc/xm-netbsd.h\n-\t\t# On NetBSD, the headers are already okay.\n-\t\tfixincludes=Makefile.in\n+\t\t# On NetBSD, the headers are already okay, except for math.h.\n+\t\tfixincludes=fixinc.math\n \t\ttmake_file=t-netbsd\n \t\t;;\n \tsparc-*-bsd*)\n@@ -2455,8 +2455,8 @@ for machine in $build $host $target; do\n \tvax-*-netbsd*)\n \t\ttm_file=\"${tm_file} netbsd.h vax/netbsd.h\"\n \t\txm_file=\"${xm_file} xm-netbsd.h\"\n-\t\t# On NetBSD, the headers are already okay.\n-\t\tfixincludes=Makefile.in\n+\t\t# On NetBSD, the headers are already okay, except for math.h.\n+\t\tfixincludes=fixinc.math\n \t\ttmake_file=t-netbsd\n \t\tfloat_format=vax\n \t\t;;"}, {"sha": "02652aa387bd4816f6ca7db9b02182eb8632e75c", "filename": "gcc/fixinc.math", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be1ed94f8986cde1e96ba95187ea27784a39298b/gcc%2Ffixinc.math", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be1ed94f8986cde1e96ba95187ea27784a39298b/gcc%2Ffixinc.math", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc.math?ref=be1ed94f8986cde1e96ba95187ea27784a39298b", "patch": "@@ -0,0 +1,111 @@\n+#! /bin/sh\n+# Fix struct exception in /usr/include/math.h.\n+#\n+# We expect several systems which did not need fixincludes in the past\n+# to need to fix just math.h.  So we created a separate fixinc.mathh\n+# script to fix just that problem.\n+# See README-fixinc for more information.\n+\n+# Directory containing the original header files.\n+# (This was named INCLUDES, but that conflicts with a name in Makefile.in.)\n+INPUT=${2-${INPUT-/usr/include}}\n+\n+# Directory in which to store the results.\n+LIB=${1?\"fixincludes: output directory not specified\"}\n+\n+# Define PWDCMD as a command to use to get the working dir\n+# in the form that we want.\n+PWDCMD=pwd\n+case \"`pwd`\" in\n+//*)\n+\t# On an Apollo, discard everything before `/usr'.\n+\tPWDCMD=\"eval pwd | sed -e 's,.*/usr/,/usr/,'\"\n+\t;;\n+esac\n+\n+# Original directory.\n+ORIGDIR=`${PWDCMD}`\n+\n+# Make sure it exists.\n+if [ ! -d $LIB ]; then\n+  mkdir $LIB || exit 1\n+fi\n+\n+# Make LIB absolute only if needed to avoid problems with the amd.\n+case $LIB in\n+/*)\n+\t;;\n+*)\n+\tcd $LIB; LIB=`${PWDCMD}`\n+\t;;\n+esac\n+\n+# Fail if no arg to specify a directory for the output.\n+if [ x$1 = x ]\n+then echo fixincludes: no output directory specified\n+exit 1\n+fi\n+\n+echo Building fixed headers in ${LIB}\n+\n+# Determine whether this system has symbolic links.\n+if ln -s X $LIB/ShouldNotExist 2>/dev/null; then\n+  rm -f $LIB/ShouldNotExist\n+  LINKS=true\n+elif ln -s X /tmp/ShouldNotExist 2>/dev/null; then\n+  rm -f /tmp/ShouldNotExist\n+  LINKS=true\n+else\n+  LINKS=false\n+fi\n+\n+cd ${INPUT}\n+\n+# Some math.h files define struct exception, which conflicts with\n+# the class exception defined in the C++ file std/stdexcept.h.  We\n+# redefine it to __math_exception.  This is not a great fix, but I\n+# haven't been able to think of anything better.\n+file=math.h\n+if [ -r $file ] && [ ! -r ${LIB}/$file ]; then\n+  cp $file ${LIB}/$file >/dev/null 2>&1 || echo \"Can't copy $file\"\n+  chmod +w ${LIB}/$file 2>/dev/null\n+  chmod a+r ${LIB}/$file 2>/dev/null\n+fi\n+\n+if [ -r ${LIB}/$file ]; then\n+  echo Fixing $file, exception\n+  sed -e '/struct exception/i\\\n+#ifdef __cplusplus\\\n+#define exception __math_exception\\\n+#endif\\\n+'\\\n+      -e '/struct exception/a\\\n+#ifdef __cplusplus\\\n+#undef exception\\\n+#endif\\\n+' ${LIB}/$file > ${LIB}/${file}.sed\n+  rm -f ${LIB}/$file; mv ${LIB}/${file}.sed ${LIB}/$file\n+  if egrep 'matherr()' ${LIB}/$file >/dev/null 2>&1; then\n+    sed -e '/matherr/i\\\n+#ifdef __cplusplus\\\n+#define exception __math_exception\\\n+#endif\\\n+'\\\n+        -e '/matherr/a\\\n+#ifdef __cplusplus\\\n+#undef exception\\\n+#endif\\\n+' ${LIB}/$file > ${LIB}/${file}.sed\n+    rm -f ${LIB}/$file; mv ${LIB}/${file}.sed ${LIB}/$file\n+  fi\n+  if cmp $file ${LIB}/$file >/dev/null 2>&1; then\n+    rm -f ${LIB}/$file\n+  else\n+    # Find any include directives that use \"file\".\n+    for include in `egrep '^[       ]*#[    ]*include[      ]*\"[^/]' ${LIB}/$file | sed -e 's/^[    ]*#[    ]*include[      ]*\"\\([^\"]*\\)\".*$/\\1/'`; do\n+      dir=`echo $file | sed -e s'|/[^/]*$||'`\n+      required=\"$required ${INPUT} $dir/$include ${LIB}/$dir/$include\"\n+    done\n+  fi\n+fi\n+exit 0"}]}