{"sha": "5a1a3e5e4da52ceddcf6adfcbd088fcc40535771", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWExYTNlNWU0ZGE1MmNlZGRjZjZhZGZjYmQwODhmY2M0MDUzNTc3MQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-03-05T17:34:16Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-03-05T17:34:16Z"}, "message": "cfg.c (dump_flow_info): Warn about profile mismatches.\n\n\t* cfg.c (dump_flow_info): Warn about profile mismatches.\n\t* cfgrtl.c (verify_flow_info): Few aditional sanity checks.\n\t(purge_dead_edges): Remove REG_BR_PROB notes on simplejumps.\n\nFrom-SVN: r50320", "tree": {"sha": "4c6b7e31c08d36c2ce332bfd0f07dda9240944d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c6b7e31c08d36c2ce332bfd0f07dda9240944d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a1a3e5e4da52ceddcf6adfcbd088fcc40535771", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a1a3e5e4da52ceddcf6adfcbd088fcc40535771", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a1a3e5e4da52ceddcf6adfcbd088fcc40535771", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a1a3e5e4da52ceddcf6adfcbd088fcc40535771/comments", "author": null, "committer": null, "parents": [{"sha": "7ce5e9df40a2fd32c5c1189e2548ac54e7fe3587", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ce5e9df40a2fd32c5c1189e2548ac54e7fe3587", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ce5e9df40a2fd32c5c1189e2548ac54e7fe3587"}], "stats": {"total": 93, "additions": 92, "deletions": 1}, "files": [{"sha": "fac38921ebd61ab21fca63f18943b573abc76ee5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a1a3e5e4da52ceddcf6adfcbd088fcc40535771/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a1a3e5e4da52ceddcf6adfcbd088fcc40535771/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a1a3e5e4da52ceddcf6adfcbd088fcc40535771", "patch": "@@ -1,3 +1,9 @@\n+Tue Mar  5 18:31:27 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cfg.c (dump_flow_info): Warn about profile mismatches.\n+\t* cfgrtl.c (verify_flow_info): Few aditional sanity checks.\n+\t(purge_dead_edges): Remove REG_BR_PROB notes on simplejumps.\n+\n 2002-03-05  Jakub Jelinek  <jakub@redhat.com>\n \n \t* expmed.c (emit_store_flag): Don't test BITS_PER_WORD * 2"}, {"sha": "433d10accf90744bb8827a524f8021b37a544c64", "filename": "gcc/cfg.c", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a1a3e5e4da52ceddcf6adfcbd088fcc40535771/gcc%2Fcfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a1a3e5e4da52ceddcf6adfcbd088fcc40535771/gcc%2Fcfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfg.c?ref=5a1a3e5e4da52ceddcf6adfcbd088fcc40535771", "patch": "@@ -505,8 +505,10 @@ dump_flow_info (file)\n   fprintf (file, \"\\n%d basic blocks, %d edges.\\n\", n_basic_blocks, n_edges);\n   for (i = 0; i < n_basic_blocks; i++)\n     {\n-      basic_block bb = BASIC_BLOCK (i);\n+      basic_block bb = BASIC_BLOCK (i), dom_bb;\n       edge e;\n+      int sum;\n+      gcov_type lsum;\n \n       fprintf (file, \"\\nBasic block %d: first insn %d, last %d, \",\n \t       i, INSN_UID (bb->head), INSN_UID (bb->end));\n@@ -529,6 +531,37 @@ dump_flow_info (file)\n       dump_regset (bb->global_live_at_end, file);\n \n       putc ('\\n', file);\n+\n+      /* Check the consistency of profile information.  We can't do that\n+\t in verify_flow_info, as the counts may get invalid for incompletely\n+\t solved graphs, later elliminating of conditionals or roundoff errors.\n+\t It is still practical to have them reported for debugging of simple\n+\t testcases.  */\n+      sum = 0;\n+      for (e = bb->succ; e; e = e->succ_next)\n+\tsum += e->probability;\n+      if (bb->succ && abs (sum - REG_BR_PROB_BASE) > 100)\n+\tfprintf (file, \"Invalid sum of outgoing probabilities %.1f%%\\n\",\n+\t\t sum * 100.0 / REG_BR_PROB_BASE);\n+      sum = 0;\n+      for (e = bb->pred; e; e = e->pred_next)\n+\tsum += EDGE_FREQUENCY (e);\n+      if (abs (sum - bb->frequency) > 100)\n+\tfprintf (file,\n+\t\t \"Invalid sum of incomming frequencies %i, should be %i\\n\",\n+\t\t sum, bb->frequency);\n+      lsum = 0;\n+      for (e = bb->pred; e; e = e->pred_next)\n+\tlsum += e->count;\n+      if (lsum - bb->count > 100 || lsum - bb->count < -100)\n+\tfprintf (file, \"Invalid sum of incomming counts %i, should be %i\\n\",\n+\t\t (int)lsum, (int)bb->count);\n+      lsum = 0;\n+      for (e = bb->succ; e; e = e->succ_next)\n+\tlsum += e->count;\n+      if (bb->succ && (lsum - bb->count > 100 || lsum - bb->count < -100))\n+\tfprintf (file, \"Invalid sum of incomming counts %i, should be %i\\n\",\n+\t\t (int)lsum, (int)bb->count);\n     }\n \n   putc ('\\n', file);"}, {"sha": "151502087ac003d12918941337b6c37c606e9f07", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a1a3e5e4da52ceddcf6adfcbd088fcc40535771/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a1a3e5e4da52ceddcf6adfcbd088fcc40535771/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=5a1a3e5e4da52ceddcf6adfcbd088fcc40535771", "patch": "@@ -1651,7 +1651,36 @@ verify_flow_info ()\n       basic_block bb = BASIC_BLOCK (i);\n       int has_fallthru = 0;\n       edge e;\n+      rtx note;\n \n+      if (INSN_P (bb->end)\n+\t  && (note = find_reg_note (bb->end, REG_BR_PROB, NULL_RTX)))\n+\t{\n+\t  if (!any_condjump_p (bb->end))\n+\t    {\n+\t      error (\"verify_flow_info: REG_BR_PROB on non-condjump\",\n+\t\t     bb->index);\n+\t      err = 1;\n+\t    }\n+\t  if (INTVAL (XEXP (note, 0)) != BRANCH_EDGE (bb)->probability)\n+\t    {\n+\t      error (\"verify_flow_info: REG_BR_PROB does not match cfg %i %i\",\n+\t\t     INTVAL (XEXP (note, 0)), BRANCH_EDGE (bb)->probability);\n+\t      err = 1;\n+\t    }\n+\t}\n+      if (bb->count < 0)\n+        {\n+          error (\"verify_flow_info: Wrong count of block %i %i\",\n+\t         bb->index, (int)bb->count);\n+          err = 1;\n+        }\n+      if (bb->frequency < 0)\n+        {\n+          error (\"verify_flow_info: Wrong frequency of block %i %i\",\n+\t         bb->index, bb->frequency);\n+          err = 1;\n+        }\n       for (e = bb->succ; e; e = e->succ_next)\n \t{\n \t  if (last_visited [e->dest->index + 2] == bb)\n@@ -1660,6 +1689,18 @@ verify_flow_info ()\n \t\t     e->src->index, e->dest->index);\n \t      err = 1;\n \t    }\n+\t  if (e->probability < 0 || e->probability > REG_BR_PROB_BASE)\n+\t    {\n+\t      error (\"verify_flow_info: Wrong probability of edge %i->%i %i\",\n+\t\t     e->src->index, e->dest->index, e->probability);\n+\t      err = 1;\n+\t    }\n+\t  if (e->count < 0)\n+\t    {\n+\t      error (\"verify_flow_info: Wrong count of edge %i->%i %i\",\n+\t\t     e->src->index, e->dest->index, (int)e->count);\n+\t      err = 1;\n+\t    }\n \n \t  last_visited [e->dest->index + 2] = bb;\n \n@@ -1935,6 +1976,17 @@ purge_dead_edges (bb)\n \t  && !simplejump_p (insn))\n \treturn false;\n \n+      /* Branch probability/prediction notes are defined only for\n+\t condjumps.  We've possibly turned condjump into simplejump.  */\n+      if (simplejump_p (insn))\n+\t{\n+\t  note = find_reg_note (insn, REG_BR_PROB, NULL);\n+\t  if (note)\n+\t    remove_note (insn, note);\n+\t  while ((note = find_reg_note (insn, REG_BR_PRED, NULL)))\n+\t    remove_note (insn, note);\n+\t}\n+\n       for (e = bb->succ; e; e = next)\n \t{\n \t  next = e->succ_next;"}]}