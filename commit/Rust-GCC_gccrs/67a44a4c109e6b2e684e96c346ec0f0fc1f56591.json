{"sha": "67a44a4c109e6b2e684e96c346ec0f0fc1f56591", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdhNDRhNGMxMDllNmIyZTY4NGU5NmMzNDZlYzBmMGZjMWY1NjU5MQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-03-10T08:09:25Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-10T13:35:01Z"}, "message": "[Ada] Implement AI12-0162 Memberships and Unchecked_Unions\n\n2020-06-10  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch4.adb (Expand_N_In): Use an expression with actions to\n\tinsert the PE raise statement for the Unchecked_Union case.", "tree": {"sha": "cfa61f97e3a0d27256514dcc03fa965dcf299b47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cfa61f97e3a0d27256514dcc03fa965dcf299b47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67a44a4c109e6b2e684e96c346ec0f0fc1f56591", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67a44a4c109e6b2e684e96c346ec0f0fc1f56591", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67a44a4c109e6b2e684e96c346ec0f0fc1f56591", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67a44a4c109e6b2e684e96c346ec0f0fc1f56591/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e156631a27d599f118ef2d384c6974172cd0c74d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e156631a27d599f118ef2d384c6974172cd0c74d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e156631a27d599f118ef2d384c6974172cd0c74d"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "d416c06a8fe8965b4c6baa781a1d55562c5c2d4e", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67a44a4c109e6b2e684e96c346ec0f0fc1f56591/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67a44a4c109e6b2e684e96c346ec0f0fc1f56591/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=67a44a4c109e6b2e684e96c346ec0f0fc1f56591", "patch": "@@ -6527,23 +6527,24 @@ package body Exp_Ch4 is\n \n                goto Leave;\n \n-            --  Ada 2005 (AI-216): Program_Error is raised when evaluating\n-            --  a membership test if the subtype mark denotes a constrained\n-            --  Unchecked_Union subtype and the expression lacks inferable\n-            --  discriminants.\n+            --  Ada 2005 (AI95-0216 amended by AI12-0162): Program_Error is\n+            --  raised when evaluating an individual membership test if the\n+            --  subtype mark denotes a constrained Unchecked_Union subtype\n+            --  and the expression lacks inferable discriminants.\n \n             elsif Is_Unchecked_Union (Base_Type (Typ))\n               and then Is_Constrained (Typ)\n               and then not Has_Inferable_Discriminants (Lop)\n             then\n-               Insert_Action (N,\n-                 Make_Raise_Program_Error (Loc,\n-                   Reason => PE_Unchecked_Union_Restriction));\n-\n-               --  Prevent Gigi from generating incorrect code by rewriting the\n-               --  test as False. What is this undocumented thing about ???\n+               Rewrite (N,\n+                 Make_Expression_With_Actions (Loc,\n+                   Actions    =>\n+                     New_List (Make_Raise_Program_Error (Loc,\n+                       Reason => PE_Unchecked_Union_Restriction)),\n+                   Expression =>\n+                     New_Occurrence_Of (Standard_False, Loc)));\n+               Analyze_And_Resolve (N, Restyp);\n \n-               Rewrite (N, New_Occurrence_Of (Standard_False, Loc));\n                goto Leave;\n             end if;\n "}]}