{"sha": "e9c9d12236905df71cc9d5132d9fb632fb8f269e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTljOWQxMjIzNjkwNWRmNzFjYzlkNTEzMmQ5ZmI2MzJmYjhmMjY5ZQ==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2011-08-29T12:56:22Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T12:56:22Z"}, "message": "s-stposu.adb (Allocate_Any_Controlled): Reimplement the mechanism which accounts for size vs alignment issues and...\n\n2011-08-29  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* s-stposu.adb (Allocate_Any_Controlled): Reimplement the mechanism\n\twhich accounts for size vs alignment issues and calculates the size of\n\tthe list header.\n\t(Deallocate_Any_Controlled): Ditto.\n\t(Nearest_Multiple_Rounded_Up): New routine.\n\nFrom-SVN: r178218", "tree": {"sha": "b33454031b68ec2466ea87b1e2491a78d2f32494", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b33454031b68ec2466ea87b1e2491a78d2f32494"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9c9d12236905df71cc9d5132d9fb632fb8f269e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9c9d12236905df71cc9d5132d9fb632fb8f269e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9c9d12236905df71cc9d5132d9fb632fb8f269e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9c9d12236905df71cc9d5132d9fb632fb8f269e/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "09fae88db5dd9b8ce4d7cc774eac42921da851e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09fae88db5dd9b8ce4d7cc774eac42921da851e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09fae88db5dd9b8ce4d7cc774eac42921da851e5"}], "stats": {"total": 56, "additions": 46, "deletions": 10}, "files": [{"sha": "5ff1db5bc1258b47dd64ed03700e2b4dc686b055", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9c9d12236905df71cc9d5132d9fb632fb8f269e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9c9d12236905df71cc9d5132d9fb632fb8f269e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e9c9d12236905df71cc9d5132d9fb632fb8f269e", "patch": "@@ -1,3 +1,11 @@\n+2011-08-29  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* s-stposu.adb (Allocate_Any_Controlled): Reimplement the mechanism\n+\twhich accounts for size vs alignment issues and calculates the size of\n+\tthe list header.\n+\t(Deallocate_Any_Controlled): Ditto.\n+\t(Nearest_Multiple_Rounded_Up): New routine.\n+\n 2011-08-29  Tristan Gingold  <gingold@adacore.com>\n \n \t* a-exstat.adb (String_To_EO): Do no set Cleanup_Flag."}, {"sha": "d52625f983f62501e45eaa01b51f992fb6586480", "filename": "gcc/ada/s-stposu.adb", "status": "modified", "additions": 38, "deletions": 10, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9c9d12236905df71cc9d5132d9fb632fb8f269e/gcc%2Fada%2Fs-stposu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9c9d12236905df71cc9d5132d9fb632fb8f269e/gcc%2Fada%2Fs-stposu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stposu.adb?ref=e9c9d12236905df71cc9d5132d9fb632fb8f269e", "patch": "@@ -46,6 +46,12 @@ package body System.Storage_Pools.Subpools is\n    procedure Detach (N : not null SP_Node_Ptr);\n    --  Unhook a subpool node from an arbitrary subpool list\n \n+   function Nearest_Multiple_Rounded_Up\n+     (Size      : Storage_Count;\n+      Alignment : Storage_Count) return Storage_Count;\n+   --  Given arbitrary values of storage size and alignment, calculate the\n+   --  nearest multiple of the alignment rounded up where size can fit.\n+\n    --------------\n    -- Allocate --\n    --------------\n@@ -191,11 +197,10 @@ package body System.Storage_Pools.Subpools is\n          --  Account for possible padding space before the header due to a\n          --  larger alignment.\n \n-         if Alignment > Header_Size then\n-            Header_And_Padding := Alignment;\n-         else\n-            Header_And_Padding := Header_Size;\n-         end if;\n+         Header_And_Padding :=\n+           Nearest_Multiple_Rounded_Up\n+             (Size      => Header_Size,\n+              Alignment => Alignment);\n \n          N_Size := Storage_Size + Header_And_Padding;\n \n@@ -307,11 +312,14 @@ package body System.Storage_Pools.Subpools is\n       --  Step 1: Detachment\n \n       if Is_Controlled then\n-         if Alignment > Header_Size then\n-            Header_And_Padding := Alignment;\n-         else\n-            Header_And_Padding := Header_Size;\n-         end if;\n+\n+         --  Account for possible padding space before the header due to a\n+         --  larger alignment.\n+\n+         Header_And_Padding :=\n+           Nearest_Multiple_Rounded_Up\n+             (Size      => Header_Size,\n+              Alignment => Alignment);\n \n          --    N_Addr  N_Ptr           Addr (from input)\n          --    |       |               |\n@@ -497,6 +505,26 @@ package body System.Storage_Pools.Subpools is\n       Pool.Subpools.Prev := Pool.Subpools'Unchecked_Access;\n    end Initialize_Pool;\n \n+   ---------------------------------\n+   -- Nearest_Multiple_Rounded_Up --\n+   ---------------------------------\n+\n+   function Nearest_Multiple_Rounded_Up\n+     (Size      : Storage_Count;\n+      Alignment : Storage_Count) return Storage_Count\n+   is\n+   begin\n+      if Size mod Alignment = 0 then\n+         return Size;\n+\n+      --  Add enough padding to reach the nearest multiple of the alignment\n+      --  rounding up.\n+\n+      else\n+         return ((Size + Alignment - 1) / Alignment) * Alignment;\n+      end if;\n+   end Nearest_Multiple_Rounded_Up;\n+\n    ---------------------\n    -- Pool_Of_Subpool --\n    ---------------------"}]}