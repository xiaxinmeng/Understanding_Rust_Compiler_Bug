{"sha": "bfa21a28ea5b3a5f6f524eaf95d67d0104ca6438", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZhMjFhMjhlYTViM2E1ZjZmNTI0ZWFmOTVkNjdkMDEwNGNhNjQzOA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-02-05T05:09:38Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-02-05T05:09:38Z"}, "message": "file-format.exp (gcc_target_object_format): Use ${tool}_target_compile, not gcc_target_compile.\n\n\t* lib/file-format.exp (gcc_target_object_format): Use\n\t${tool}_target_compile, not gcc_target_compile.\n\t* lib/target-supports.exp (check_alias_available): Likewise.\n\t(check_gc_sections_available): Likewise.\n\t* g++.dg/ext/attrib10.C: Use dg-require-alias.\n\t* g++.old-deja/g++.ext/attrib5.C: Use dg-require-weak and\n\tdg-require-alias.\n\nFrom-SVN: r77295", "tree": {"sha": "e693092ee81459e84b54018f56e66aaafa87f274", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e693092ee81459e84b54018f56e66aaafa87f274"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bfa21a28ea5b3a5f6f524eaf95d67d0104ca6438", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfa21a28ea5b3a5f6f524eaf95d67d0104ca6438", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfa21a28ea5b3a5f6f524eaf95d67d0104ca6438", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfa21a28ea5b3a5f6f524eaf95d67d0104ca6438/comments", "author": null, "committer": null, "parents": [{"sha": "f63fd68bebbc08a1ebb2579692fc48aeeeceb74f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f63fd68bebbc08a1ebb2579692fc48aeeeceb74f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f63fd68bebbc08a1ebb2579692fc48aeeeceb74f"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "6c3db3e87af43edaadcc034aeaf20db4f2745c96", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfa21a28ea5b3a5f6f524eaf95d67d0104ca6438/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfa21a28ea5b3a5f6f524eaf95d67d0104ca6438/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bfa21a28ea5b3a5f6f524eaf95d67d0104ca6438", "patch": "@@ -3,6 +3,16 @@\n \tPR c++/13086\n \t* g++.dg/warn/incomplete1.C: Remove xfail.\n \n+2004-02-04  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* lib/file-format.exp (gcc_target_object_format): Use\n+\t${tool}_target_compile, not gcc_target_compile.\n+\t* lib/target-supports.exp (check_alias_available): Likewise.\n+\t(check_gc_sections_available): Likewise.\n+\t* g++.dg/ext/attrib10.C: Use dg-require-alias.\n+\t* g++.old-deja/g++.ext/attrib5.C: Use dg-require-weak and\n+\tdg-require-alias.\n+\n 2004-02-04  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/13969"}, {"sha": "99459c78242ad3d1e5bd9ce79eb1fb1fd19c178d", "filename": "gcc/testsuite/g++.dg/ext/attrib10.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfa21a28ea5b3a5f6f524eaf95d67d0104ca6438/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfa21a28ea5b3a5f6f524eaf95d67d0104ca6438/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib10.C?ref=bfa21a28ea5b3a5f6f524eaf95d67d0104ca6438", "patch": "@@ -1,4 +1,5 @@\n // PR c++/12795\n+// { dg-require-alias \"\" }\n \n void foo()\n {"}, {"sha": "545f12803b0e32f0b1161a4a0678dcb528bbe6d9", "filename": "gcc/testsuite/g++.old-deja/g++.ext/attrib5.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfa21a28ea5b3a5f6f524eaf95d67d0104ca6438/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fattrib5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfa21a28ea5b3a5f6f524eaf95d67d0104ca6438/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fattrib5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fattrib5.C?ref=bfa21a28ea5b3a5f6f524eaf95d67d0104ca6438", "patch": "@@ -1,5 +1,7 @@\n-// { dg-do run { xfail alpha*-dec-osf* *-*-hms i?86-pc-cygwin *-*-coff hppa2*-hp-hpux11* } }\n+// { dg-do run { xfail alpha*-dec-osf* *-*-hms i?86-pc-cygwin *-*-coff } }\n // Test that attributes weak and alias coexist.\n+// { dg-require-weak \"\" }\n+// { dg-require-alias \"\" }\n \n extern \"C\" {\n   void f () __attribute__((weak, alias (\"_f\")));"}, {"sha": "ab69f9306144c204436bbab71c0e42010bd2a63d", "filename": "gcc/testsuite/lib/file-format.exp", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfa21a28ea5b3a5f6f524eaf95d67d0104ca6438/gcc%2Ftestsuite%2Flib%2Ffile-format.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfa21a28ea5b3a5f6f524eaf95d67d0104ca6438/gcc%2Ftestsuite%2Flib%2Ffile-format.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ffile-format.exp?ref=bfa21a28ea5b3a5f6f524eaf95d67d0104ca6438", "patch": "@@ -24,6 +24,7 @@\n \n proc gcc_target_object_format { } { \n     global gcc_target_object_format_saved\n+    global tool\n \n     if [info exists gcc_target_object_format_saved] {\n         verbose \"gcc_target_object_format returning saved $gcc_target_object_format_saved\" 2\n@@ -33,7 +34,7 @@ proc gcc_target_object_format { } {\n         puts $open_file \"void foo(void) { }\"\n         close $open_file\n         \n-        gcc_target_compile objfmtst.c objfmtst.o object \"\"\n+        ${tool}_target_compile objfmtst.c objfmtst.o object \"\"\n         \n \tcatch {\n           set output [exec $objdump_name --file-headers objfmtst.o ]"}, {"sha": "33d72fd9520703ad5b2632cf1d127c68a53205c8", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfa21a28ea5b3a5f6f524eaf95d67d0104ca6438/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfa21a28ea5b3a5f6f524eaf95d67d0104ca6438/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=bfa21a28ea5b3a5f6f524eaf95d67d0104ca6438", "patch": "@@ -99,7 +99,8 @@ proc check_visibility_available { } {\n \n proc check_alias_available { } {\n     global alias_available_saved\n-    \n+    global tool\n+\n     if [info exists alias_available_saved] {\n         verbose \"check_alias_available  returning saved $alias_available_saved\" 2\n     } else {\n@@ -110,7 +111,7 @@ proc check_alias_available { } {\n \t# about the program.\n \tputs $f \"void g() {} void f() __attribute__((alias(\\\"g\\\")));\"\n \tclose $f\n-\tset lines [gcc_target_compile \"tmp.c\" \"tmp.o\" object \"\"]\n+\tset lines [${tool}_target_compile \"tmp.c\" \"tmp.o\" object \"\"]\n \tfile delete \"tmp.c\"\n \n \tif [string match \"\" $lines] then {\n@@ -148,10 +149,11 @@ proc check_alias_available { } {\n \n proc check_gc_sections_available { } {\n     global gc_sections_available_saved\n+    global tool\n \n     if {![info exists gc_sections_available_saved]} {\n \t# Check if the ld used by gcc supports --gc-sections.\n-\tset gcc_ld [lindex [gcc_target_compile \"-print-prog-name=ld\" \"\" \"none\" \"\"] 0]\n+\tset gcc_ld [lindex [${tool}_target_compile \"-print-prog-name=ld\" \"\" \"none\" \"\"] 0]\n \tset ld_output [remote_exec host \"$gcc_ld\" \"--help\"]\n \tif { [ string first \"--gc-sections\" $ld_output ] >= 0 } {\n \t    set gc_sections_available_saved 1"}]}