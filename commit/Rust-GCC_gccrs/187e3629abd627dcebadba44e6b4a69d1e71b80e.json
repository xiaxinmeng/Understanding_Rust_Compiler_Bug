{"sha": "187e3629abd627dcebadba44e6b4a69d1e71b80e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg3ZTM2MjlhYmQ2MjdkY2ViYWRiYTQ0ZTZiNGE2OWQxZTcxYjgwZQ==", "commit": {"author": {"name": "Michael Eager", "email": "eager@eagercon.com", "date": "2010-10-13T02:27:42Z"}, "committer": {"name": "Michael Eager", "email": "eager@gcc.gnu.org", "date": "2010-10-13T02:27:42Z"}, "message": "re PR testsuite/45856 (gcc.c-torture/execute/cmpsf-1.c/cmpsi-2.c failed on x86-64)\n\nPR 45856\n\nFrom-SVN: r165410", "tree": {"sha": "251ed84e0f5706a6fc433c9b78653341128f5375", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/251ed84e0f5706a6fc433c9b78653341128f5375"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/187e3629abd627dcebadba44e6b4a69d1e71b80e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/187e3629abd627dcebadba44e6b4a69d1e71b80e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/187e3629abd627dcebadba44e6b4a69d1e71b80e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/187e3629abd627dcebadba44e6b4a69d1e71b80e/comments", "author": {"login": "eagerm", "id": 945532, "node_id": "MDQ6VXNlcjk0NTUzMg==", "avatar_url": "https://avatars.githubusercontent.com/u/945532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eagerm", "html_url": "https://github.com/eagerm", "followers_url": "https://api.github.com/users/eagerm/followers", "following_url": "https://api.github.com/users/eagerm/following{/other_user}", "gists_url": "https://api.github.com/users/eagerm/gists{/gist_id}", "starred_url": "https://api.github.com/users/eagerm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eagerm/subscriptions", "organizations_url": "https://api.github.com/users/eagerm/orgs", "repos_url": "https://api.github.com/users/eagerm/repos", "events_url": "https://api.github.com/users/eagerm/events{/privacy}", "received_events_url": "https://api.github.com/users/eagerm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b0453850dfd87a95c6ab04d5cce21169e19db107", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0453850dfd87a95c6ab04d5cce21169e19db107", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0453850dfd87a95c6ab04d5cce21169e19db107"}], "stats": {"total": 164, "additions": 85, "deletions": 79}, "files": [{"sha": "72f281c0eaaab2932722901c3613fa0d059d6153", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/187e3629abd627dcebadba44e6b4a69d1e71b80e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/187e3629abd627dcebadba44e6b4a69d1e71b80e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=187e3629abd627dcebadba44e6b4a69d1e71b80e", "patch": "@@ -1,3 +1,9 @@\n+2010-10-12  Michael Eager  <eager@eagercon.com>\n+\n+\tPR testsuite/45856\n+\t* gcc.c-torture/execute/cmpsi-2.c: Use int, not long.\n+\t* gcc.c-torture/execute/cmpsf-1.c: Use float, regen correct table.\n+\n 2010-10-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/45636"}, {"sha": "87886c6de5768595f06ad1ee90893cea8b039fbe", "filename": "gcc/testsuite/gcc.c-torture/execute/cmpsf-1.c", "status": "modified", "additions": 66, "deletions": 66, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/187e3629abd627dcebadba44e6b4a69d1e71b80e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcmpsf-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/187e3629abd627dcebadba44e6b4a69d1e71b80e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcmpsf-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcmpsf-1.c?ref=187e3629abd627dcebadba44e6b4a69d1e71b80e", "patch": "@@ -65,70 +65,70 @@ float args[] =\n \n int correct_results[] =\n {\n-  T, F, F, T, F, T, F, T, F, T,\n-  F, T, T, F, F, T, T, F, F, T,\n-  F, T, F, T, T, F, T, F, F, T,\n-  F, T, T, F, F, T, T, F, F, T,\n-  F, T, F, T, T, F, T, F, F, T,\n-  F, T, F, T, T, F, T, F, F, T,\n-  F, T, T, F, F, T, T, F, F, T,\n-  F, T, F, T, T, F, T, F, F, T,\n-  F, T, F, T, T, F, F, T, T, F,\n-  T, F, F, T, F, T, F, T, F, T,\n-  F, T, F, T, T, F, T, F, F, T,\n-  F, T, T, F, F, T, T, F, F, T,\n-  F, T, F, T, T, F, T, F, F, T,\n-  F, T, F, T, T, F, T, F, F, T,\n-  F, T, T, F, F, T, T, F, F, T,\n-  F, T, F, T, T, F, T, F, F, T,\n-  F, T, T, F, F, T, F, T, T, F,\n-  F, T, T, F, F, T, F, T, T, F,\n-  T, F, F, T, F, T, F, T, F, T,\n-  F, T, T, F, F, T, F, T, T, F,\n-  F, T, F, T, T, F, F, T, T, F,\n-  F, T, F, T, T, F, F, T, T, F,\n-  F, T, T, F, F, T, F, T, T, F,\n-  F, T, F, T, T, F, F, T, T, F,\n-  F, T, F, T, T, F, F, T, T, F,\n-  F, T, F, T, T, F, F, T, T, F,\n-  F, T, F, T, T, F, T, F, F, T,\n-  T, F, F, T, F, T, F, T, F, T,\n-  F, T, F, T, T, F, T, F, F, T,\n-  F, T, F, T, T, F, T, F, F, T,\n-  F, T, F, T, T, F, F, T, T, F,\n-  F, T, F, T, T, F, T, F, F, T,\n-  F, T, T, F, F, T, F, T, T, F,\n-  F, T, T, F, F, T, F, T, T, F,\n-  F, T, T, F, F, T, T, F, F, T,\n-  F, T, T, F, F, T, F, T, T, F,\n-  T, F, F, T, F, T, F, T, F, T,\n-  F, T, T, F, F, T, T, F, F, T,\n-  F, T, T, F, F, T, F, T, T, F,\n-  F, T, T, F, F, T, T, F, F, T,\n-  F, T, T, F, F, T, F, T, T, F,\n-  F, T, T, F, F, T, F, T, T, F,\n-  F, T, T, F, F, T, T, F, F, T,\n-  F, T, T, F, F, T, F, T, T, F,\n-  F, T, F, T, T, F, F, T, T, F,\n-  T, F, F, T, F, T, F, T, F, T,\n-  F, T, T, F, F, T, F, T, T, F,\n-  F, T, T, F, F, T, T, F, F, T,\n-  F, T, F, T, T, F, F, T, T, F,\n-  F, T, F, T, T, F, F, T, T, F,\n-  F, T, F, T, T, F, T, F, F, T,\n-  F, T, T, F, F, T, T, F, F, T,\n-  F, T, F, T, T, F, T, F, F, T,\n-  F, T, F, T, T, F, T, F, F, T,\n-  T, F, F, T, F, T, F, T, F, T,\n-  F, T, F, T, T, F, T, F, F, T,\n-  F, T, T, F, F, T, F, T, T, F,\n-  F, T, T, F, F, T, F, T, T, F,\n-  F, T, T, F, F, T, T, F, F, T,\n-  F, T, T, F, F, T, F, T, T, F,\n-  F, T, F, T, T, F, F, T, T, F,\n-  F, T, F, T, T, F, F, T, T, F,\n-  F, T, T, F, F, T, F, T, T, F,\n-  T, F, F, T, F, T, F, T, F, T\n+ T, F, F, T, F, T,                                             \n+ F, T, T, F, F, T,                                             \n+ F, T, F, T, T, F,                                             \n+ F, T, T, F, F, T,                                             \n+ F, T, T, F, F, T,                                             \n+ F, T, T, F, F, T,                                             \n+ F, T, T, F, F, T,                                             \n+ F, T, F, T, T, F,                                             \n+ F, T, F, T, T, F,                                             \n+ T, F, F, T, F, T,                                             \n+ F, T, F, T, T, F,                                             \n+ F, T, T, F, F, T,                                             \n+ F, T, F, T, T, F,                                             \n+ F, T, F, T, T, F,                                             \n+ F, T, T, F, F, T,                                             \n+ F, T, F, T, T, F,                                             \n+ F, T, T, F, F, T,                                             \n+ F, T, T, F, F, T,                                             \n+ T, F, F, T, F, T,                                             \n+ F, T, T, F, F, T,                                             \n+ F, T, T, F, F, T,                                             \n+ F, T, T, F, F, T,                                             \n+ F, T, T, F, F, T,                                             \n+ F, T, F, T, T, F,                                             \n+ F, T, F, T, T, F,                                             \n+ F, T, F, T, T, F,\n+ F, T, F, T, T, F,\n+ T, F, F, T, F, T,\n+ F, T, F, T, T, F,\n+ F, T, F, T, T, F,\n+ F, T, F, T, T, F,\n+ F, T, F, T, T, F,\n+ F, T, F, T, T, F,\n+ F, T, T, F, F, T,\n+ F, T, F, T, T, F,\n+ F, T, T, F, F, T,\n+ T, F, F, T, F, T,\n+ F, T, T, F, F, T,\n+ F, T, T, F, F, T,\n+ F, T, F, T, T, F,\n+ F, T, F, T, T, F,\n+ F, T, T, F, F, T,\n+ F, T, F, T, T, F,\n+ F, T, T, F, F, T,\n+ F, T, F, T, T, F,\n+ T, F, F, T, F, T,\n+ F, T, T, F, F, T,\n+ F, T, F, T, T, F,\n+ F, T, F, T, T, F,\n+ F, T, F, T, T, F,\n+ F, T, F, T, T, F,\n+ F, T, T, F, F, T,\n+ F, T, F, T, T, F,\n+ F, T, F, T, T, F,\n+ T, F, F, T, F, T,\n+ F, T, F, T, T, F,\n+ F, T, T, F, F, T,\n+ F, T, T, F, F, T,\n+ F, T, T, F, F, T,\n+ F, T, T, F, F, T,\n+ F, T, T, F, F, T,\n+ F, T, T, F, F, T,\n+ F, T, T, F, F, T,\n+ T, F, F, T, F, T,\n };\n \n int\n@@ -138,10 +138,10 @@ main (void)\n \n   for (i = 0; i < 8; i++)\n     {\n-      long arg0 = args[i];\n+      float arg0 = args[i];\n       for (j = 0; j < 8; j++)\n \t{\n-\t  long arg1 = args[j];\n+\t  float arg1 = args[j];\n \n \t  if (feq (arg0, arg1) != *res++)\n \t    abort ();"}, {"sha": "62832a9bffc5fb114a83ae4c26a118a817eca0c0", "filename": "gcc/testsuite/gcc.c-torture/execute/cmpsi-2.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/187e3629abd627dcebadba44e6b4a69d1e71b80e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcmpsi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/187e3629abd627dcebadba44e6b4a69d1e71b80e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcmpsi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcmpsi-2.c?ref=187e3629abd627dcebadba44e6b4a69d1e71b80e", "patch": "@@ -1,87 +1,87 @@\n #define F 140\n #define T 13\n \n-feq (long x, long y)\n+feq (int x, int y)\n {\n   if (x == y)\n     return T;\n   else\n     return F;\n }\n \n-fne (long x, long y)\n+fne (int x, int y)\n {\n   if (x != y)\n     return T;\n   else\n     return F;\n }\n \n-flt (long x, long y)\n+flt (int x, int y)\n {\n   if (x < y)\n     return T;\n   else\n     return F;\n }\n \n-fge (long x, long y)\n+fge (int x, int y)\n {\n   if (x >= y)\n     return T;\n   else\n     return F;\n }\n \n-fgt (long x, long y)\n+fgt (int x, int y)\n {\n   if (x > y)\n     return T;\n   else\n     return F;\n }\n \n-fle (long x, long y)\n+fle (int x, int y)\n {\n   if (x <= y)\n     return T;\n   else\n     return F;\n }\n \n-fltu (unsigned long x, unsigned long y)\n+fltu (unsigned int x, unsigned int y)\n {\n   if (x < y)\n     return T;\n   else\n     return F;\n }\n \n-fgeu (unsigned long x, unsigned long y)\n+fgeu (unsigned int x, unsigned int y)\n {\n   if (x >= y)\n     return T;\n   else\n     return F;\n }\n \n-fgtu (unsigned long x, unsigned long y)\n+fgtu (unsigned int x, unsigned int y)\n {\n   if (x > y)\n     return T;\n   else\n     return F;\n }\n \n-fleu (unsigned long x, unsigned long y)\n+fleu (unsigned int x, unsigned int y)\n {\n   if (x <= y)\n     return T;\n   else\n     return F;\n }\n \n-long args[] =\n+unsigned int args[] =\n {\n   0L,\n   1L,\n@@ -168,10 +168,10 @@ main (void)\n \n   for (i = 0; i < 8; i++)\n     {\n-      long arg0 = args[i];\n+      unsigned int arg0 = args[i];\n       for (j = 0; j < 8; j++)\n \t{\n-\t  long arg1 = args[j];\n+\t  unsigned int arg1 = args[j];\n \n \t  if (feq (arg0, arg1) != *res++)\n \t    abort ();"}]}