{"sha": "ab807569b6233bc5226dda1e67504d7d09114529", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI4MDc1NjliNjIzM2JjNTIyNmRkYTFlNjc1MDRkN2QwOTExNDUyOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-01-02T17:53:28Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-01-02T17:53:28Z"}, "message": "DR 1359 PR c++/51675\n\n\tDR 1359\n\tPR c++/51675\n\t* method.c (walk_field_subobs): Don't check for uninitialized\n\tfields in a union.\n\t(synthesized_method_walk): Check here.\n\nFrom-SVN: r182810", "tree": {"sha": "2c8e3f5c52a1207402ee89b81e619127e92c0ab3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c8e3f5c52a1207402ee89b81e619127e92c0ab3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab807569b6233bc5226dda1e67504d7d09114529", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab807569b6233bc5226dda1e67504d7d09114529", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab807569b6233bc5226dda1e67504d7d09114529", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab807569b6233bc5226dda1e67504d7d09114529/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d28c2dcd712c9c79f8608c136f977f5d925886ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d28c2dcd712c9c79f8608c136f977f5d925886ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d28c2dcd712c9c79f8608c136f977f5d925886ea"}], "stats": {"total": 43, "additions": 39, "deletions": 4}, "files": [{"sha": "9eb688263a77fcd3cf5cbb3653476f23280ed750", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab807569b6233bc5226dda1e67504d7d09114529/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab807569b6233bc5226dda1e67504d7d09114529/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ab807569b6233bc5226dda1e67504d7d09114529", "patch": "@@ -1,5 +1,11 @@\n 2012-01-02  Jason Merrill  <jason@redhat.com>\n \n+\tDR 1359\n+\tPR c++/51675\n+\t* method.c (walk_field_subobs): Don't check for uninitialized\n+\tfields in a union.\n+\t(synthesized_method_walk): Check here.\n+\n \tDR 325\n \tPR c++/51666\n \t* parser.c (cp_parser_cache_defarg): Split out..."}, {"sha": "cf2a713aa2a8f3437370d9ee79e155c3ccdd4c60", "filename": "gcc/cp/method.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab807569b6233bc5226dda1e67504d7d09114529/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab807569b6233bc5226dda1e67504d7d09114529/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=ab807569b6233bc5226dda1e67504d7d09114529", "patch": "@@ -1063,7 +1063,8 @@ walk_field_subobs (tree fields, tree fnname, special_function_kind sfk,\n \t  /* For an implicitly-defined default constructor to be constexpr,\n \t     every member must have a user-provided default constructor or\n \t     an explicit initializer.  */\n-\t  if (constexpr_p && !CLASS_TYPE_P (mem_type))\n+\t  if (constexpr_p && !CLASS_TYPE_P (mem_type)\n+\t      && TREE_CODE (DECL_CONTEXT (field)) != UNION_TYPE)\n \t    {\n \t      *constexpr_p = false;\n \t      if (msg)\n@@ -1208,12 +1209,19 @@ synthesized_method_walk (tree ctype, special_function_kind sfk, bool const_p,\n      resolution, so a constructor can be trivial even if it would otherwise\n      call a non-trivial constructor.  */\n   if (expected_trivial\n-      && !diag\n       && (!copy_arg_p || cxx_dialect < cxx0x))\n     {\n       if (constexpr_p && sfk == sfk_constructor)\n-\t*constexpr_p = trivial_default_constructor_is_constexpr (ctype);\n-      return;\n+\t{\n+\t  bool cx = trivial_default_constructor_is_constexpr (ctype);\n+\t  *constexpr_p = cx;\n+\t  if (diag && !cx && TREE_CODE (ctype) == UNION_TYPE)\n+\t    /* A trivial constructor doesn't have any NSDMI.  */\n+\t    inform (input_location, \"defaulted default constructor does \"\n+\t\t    \"not initialize any non-static data member\");\n+\t}\n+      if (!diag)\n+\treturn;\n     }\n \n   ++cp_unevaluated_operand;"}, {"sha": "79d43fac075858c15682f114dfc236b6a7462582", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab807569b6233bc5226dda1e67504d7d09114529/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab807569b6233bc5226dda1e67504d7d09114529/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ab807569b6233bc5226dda1e67504d7d09114529", "patch": "@@ -1,5 +1,8 @@\n 2012-01-02  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/51675\n+\t* g++.dg/cpp0x/constexpr-union2.C: New.\n+\n \tPR c++/51666\n \t* g++.dg/cpp0x/nsdmi-defer5.C: New.\n "}, {"sha": "0bf2aa7e2bc5d725a72580510bf32113b2a9e2d9", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-union2.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab807569b6233bc5226dda1e67504d7d09114529/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab807569b6233bc5226dda1e67504d7d09114529/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union2.C?ref=ab807569b6233bc5226dda1e67504d7d09114529", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/51675\n+// { dg-options -std=c++0x }\n+\n+union foo\n+{\n+  int x = 0;\n+  short y;\n+\n+  constexpr foo() = default;\n+};\n+\n+union bar\n+{\n+  int x;\n+  short y;\n+\n+  constexpr bar() = default;\t// { dg-error \"constexpr\" }\n+};"}]}