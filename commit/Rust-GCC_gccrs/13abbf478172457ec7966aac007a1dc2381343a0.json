{"sha": "13abbf478172457ec7966aac007a1dc2381343a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNhYmJmNDc4MTcyNDU3ZWM3OTY2YWFjMDA3YTFkYzIzODEzNDNhMA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-10-07T09:18:39Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-10-07T09:18:39Z"}, "message": "Warning fixes:\n\n        * Makefile.in (keyword.h): Add -L KR-C -F ', 0' flags to gperf.\n        (keyword.h): Regenerate using gperf 2.7.1 (19981006 egcs).\n\nFrom-SVN: r22882", "tree": {"sha": "fe2d46cbcd407c9eed0bfaa44814ac78011f1f03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe2d46cbcd407c9eed0bfaa44814ac78011f1f03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13abbf478172457ec7966aac007a1dc2381343a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13abbf478172457ec7966aac007a1dc2381343a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13abbf478172457ec7966aac007a1dc2381343a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13abbf478172457ec7966aac007a1dc2381343a0/comments", "author": null, "committer": null, "parents": [{"sha": "07181a20e3a5aeadc977a241bbb088ee969cdc43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07181a20e3a5aeadc977a241bbb088ee969cdc43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07181a20e3a5aeadc977a241bbb088ee969cdc43"}], "stats": {"total": 194, "additions": 106, "deletions": 88}, "files": [{"sha": "c38e0adbd3eed9f68c58636ae7104caa431d760f", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13abbf478172457ec7966aac007a1dc2381343a0/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13abbf478172457ec7966aac007a1dc2381343a0/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=13abbf478172457ec7966aac007a1dc2381343a0", "patch": "@@ -1,3 +1,8 @@\n+Wed Oct  7 12:10:48 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (keyword.h): Add -L KR-C -F ', 0' flags to gperf.\n+\t(keyword.h): Regenerate using gperf 2.7.1 (19981006 egcs).\n+\n Wed Sep 30 20:53:51 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* jcf-write.c (OP2, OP4): Use \"_i\", not \"_I\" to avoid problems on"}, {"sha": "efe7ef1bf008a0b822f8e260f59e830a93b619b3", "filename": "gcc/java/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13abbf478172457ec7966aac007a1dc2381343a0/gcc%2Fjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13abbf478172457ec7966aac007a1dc2381343a0/gcc%2Fjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMakefile.in?ref=13abbf478172457ec7966aac007a1dc2381343a0", "patch": "@@ -240,7 +240,7 @@ $(PARSE_SCAN_C):  $(srcdir)/parse-scan.y $(srcdir)/lex.c $(PARSE_H) \\\n lex.c: keyword.h lex.h\n \n keyword.h: keyword.gperf\n-\tgperf -p -t -j1 -i 1 -g -o -N java_keyword -k1,3,$$ \\\n+\tgperf -L KR-C -F ', 0' -p -t -j1 -i 1 -g -o -N java_keyword -k1,3,$$ \\\n \tkeyword.gperf > keyword.h\n \n # These exist for maintenance purposes."}, {"sha": "745399f79111496b2000492edff3845d3022dcd1", "filename": "gcc/java/keyword.h", "status": "modified", "additions": 100, "deletions": 87, "changes": 187, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13abbf478172457ec7966aac007a1dc2381343a0/gcc%2Fjava%2Fkeyword.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13abbf478172457ec7966aac007a1dc2381343a0/gcc%2Fjava%2Fkeyword.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fkeyword.h?ref=13abbf478172457ec7966aac007a1dc2381343a0", "patch": "@@ -1,6 +1,6 @@\n-/* C code produced by gperf version 2.5 (GNU C++ version) */\n-/* Command-line: gperf -p -t -j1 -i 1 -g -o -N java_keyword -k1,3,$ keyword.gperf  */\n-/* Keyword definitions for the GNU compiler for the Java(TM) language.\n+/* KR-C code produced by gperf version 2.7.1 (19981006 egcs) */\n+/* Command-line: gperf -L KR-C -F , 0 -p -t -j1 -i 1 -g -o -N java_keyword -k1,3,$ keyword.gperf  */\n+/* Keyword definition for the GNU compiler for the Java(TM) language.\n    Copyright (C) 1997, 1998 Free Software Foundation, Inc.\n    Contributed by Alexandre Petit-Bianco (apbianco@cygnus.com)\n \n@@ -35,46 +35,59 @@ struct java_keyword { char *name; int token; };\n /* maximum key range = 81, duplicates = 0 */\n \n #ifdef __GNUC__\n-inline\n+__inline\n #endif\n static unsigned int\n hash (str, len)\n      register char *str;\n-     register int unsigned len;\n+     register unsigned int len;\n {\n   static unsigned char asso_values[] =\n     {\n-     87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-     87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-     87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-     87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-     87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-     87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-     87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-     87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-     87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n-     87, 87, 87, 87, 87, 87, 87, 18, 37, 38,\n-     27,  1, 30,  3, 12,  8, 87,  2, 11, 87,\n-      8,  1,  5, 87, 24,  1,  1, 30,  2, 36,\n-     87,  1, 87, 87, 87, 87, 87, 87,\n+      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n+      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n+      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n+      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n+      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n+      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n+      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n+      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n+      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n+      87, 87, 87, 87, 87, 87, 87, 18, 37, 38,\n+      27,  1, 30,  3, 12,  8, 87,  2, 11, 87,\n+       8,  1,  5, 87, 24,  1,  1, 30,  2, 36,\n+      87,  1, 87, 87, 87, 87, 87, 87, 87, 87,\n+      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n+      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n+      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n+      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n+      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n+      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n+      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n+      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n+      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n+      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n+      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n+      87, 87, 87, 87, 87, 87, 87, 87, 87, 87,\n+      87, 87, 87, 87, 87, 87\n     };\n   register int hval = len;\n \n   switch (hval)\n     {\n       default:\n       case 3:\n-        hval += asso_values[str[2]];\n+        hval += asso_values[(unsigned char)str[2]];\n       case 2:\n       case 1:\n-        hval += asso_values[str[0]];\n+        hval += asso_values[(unsigned char)str[0]];\n         break;\n     }\n-  return hval + asso_values[str[len - 1]];\n+  return hval + asso_values[(unsigned char)str[len - 1]];\n }\n \n #ifdef __GNUC__\n-inline\n+__inline\n #endif\n struct java_keyword *\n java_keyword (str, len)\n@@ -83,70 +96,70 @@ java_keyword (str, len)\n {\n   static struct java_keyword wordlist[] =\n     {\n-      {\"\",}, {\"\",}, {\"\",}, {\"\",}, {\"\",}, {\"\",}, \n-      {\"try\",  TRY_TK},\n-      {\"else\",  ELSE_TK},\n-      {\"short\",  SHORT_TK},\n-      {\"goto\",  GOTO_TK},\n-      {\"extends\",  EXTENDS_TK},\n-      {\"\",}, {\"\",}, \n-      {\"int\",  INT_TK},\n-      {\"this\",  THIS_TK},\n-      {\"\",}, \n-      {\"native\",  NATIVE_TK},\n-      {\"\",}, {\"\",}, \n-      {\"interface\",  INTERFACE_TK},\n-      {\"import\",  IMPORT_TK},\n-      {\"private\",  PRIVATE_TK},\n-      {\"volatile\",  VOLATILE_TK},\n-      {\"\",}, \n-      {\"implements\",  IMPLEMENTS_TK},\n-      {\"\",}, \n-      {\"long\",  LONG_TK},\n-      {\"switch\",  SWITCH_TK},\n-      {\"abstract\",  ABSTRACT_TK},\n-      {\"transient\",  TRANSIENT_TK},\n-      {\"do\",  DO_TK},\n-      {\"\",}, \n-      {\"throws\",  THROWS_TK},\n-      {\"\",}, \n-      {\"null\",  NULL_TK},\n-      {\"super\",  SUPER_TK},\n-      {\"true\",  TRUE_TK},\n-      {\"float\",  FLOAT_TK},\n-      {\"\",}, \n-      {\"return\",  RETURN_TK},\n-      {\"if\",  IF_TK},\n-      {\"void\",  VOID_TK},\n-      {\"protected\",  PROTECTED_TK},\n-      {\"byte\",  BYTE_TK},\n-      {\"case\",  CASE_TK},\n-      {\"break\",  BREAK_TK},\n-      {\"finally\",  FINALLY_TK},\n-      {\"false\",  FALSE_TK},\n-      {\"synchronized\",  SYNCHRONIZED_TK},\n-      {\"instanceof\",  INSTANCEOF_TK},\n-      {\"while\",  WHILE_TK},\n-      {\"package\",  PACKAGE_TK},\n-      {\"const\",  CONST_TK},\n-      {\"boolean\",  BOOLEAN_TK},\n-      {\"final\",  FINAL_TK},\n-      {\"continue\",  CONTINUE_TK},\n-      {\"catch\",  CATCH_TK},\n-      {\"\",}, {\"\",}, {\"\",}, {\"\",}, {\"\",}, \n-      {\"class\",  CLASS_TK},\n-      {\"static\",  STATIC_TK},\n-      {\"double\",  DOUBLE_TK},\n-      {\"default\",  DEFAULT_TK},\n-      {\"throw\",  THROW_TK},\n-      {\"\",}, {\"\",}, {\"\",}, {\"\",}, {\"\",}, {\"\",}, {\"\",}, {\"\",}, {\"\",}, \n-      {\"\",}, {\"\",}, {\"\",}, {\"\",}, {\"\",}, \n-      {\"for\",  FOR_TK},\n-      {\"\",}, \n-      {\"new\",  NEW_TK},\n-      {\"char\",  CHAR_TK},\n-      {\"\",}, \n-      {\"public\",  PUBLIC_TK},\n+      {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0},\n+      {\"try\", TRY_TK},\n+      {\"else\", ELSE_TK},\n+      {\"short\", SHORT_TK},\n+      {\"goto\", GOTO_TK},\n+      {\"extends\", EXTENDS_TK},\n+      {\"\", 0}, {\"\", 0},\n+      {\"int\", INT_TK},\n+      {\"this\", THIS_TK},\n+      {\"\", 0},\n+      {\"native\", NATIVE_TK},\n+      {\"\", 0}, {\"\", 0},\n+      {\"interface\", INTERFACE_TK},\n+      {\"import\", IMPORT_TK},\n+      {\"private\", PRIVATE_TK},\n+      {\"volatile\", VOLATILE_TK},\n+      {\"\", 0},\n+      {\"implements\", IMPLEMENTS_TK},\n+      {\"\", 0},\n+      {\"long\", LONG_TK},\n+      {\"switch\", SWITCH_TK},\n+      {\"abstract\", ABSTRACT_TK},\n+      {\"transient\", TRANSIENT_TK},\n+      {\"do\", DO_TK},\n+      {\"\", 0},\n+      {\"throws\", THROWS_TK},\n+      {\"\", 0},\n+      {\"null\", NULL_TK},\n+      {\"super\", SUPER_TK},\n+      {\"true\", TRUE_TK},\n+      {\"float\", FLOAT_TK},\n+      {\"\", 0},\n+      {\"return\", RETURN_TK},\n+      {\"if\", IF_TK},\n+      {\"void\", VOID_TK},\n+      {\"protected\", PROTECTED_TK},\n+      {\"byte\", BYTE_TK},\n+      {\"case\", CASE_TK},\n+      {\"break\", BREAK_TK},\n+      {\"finally\", FINALLY_TK},\n+      {\"false\", FALSE_TK},\n+      {\"synchronized\", SYNCHRONIZED_TK},\n+      {\"instanceof\", INSTANCEOF_TK},\n+      {\"while\", WHILE_TK},\n+      {\"package\", PACKAGE_TK},\n+      {\"const\", CONST_TK},\n+      {\"boolean\", BOOLEAN_TK},\n+      {\"final\", FINAL_TK},\n+      {\"continue\", CONTINUE_TK},\n+      {\"catch\", CATCH_TK},\n+      {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0},\n+      {\"class\", CLASS_TK},\n+      {\"static\", STATIC_TK},\n+      {\"double\", DOUBLE_TK},\n+      {\"default\", DEFAULT_TK},\n+      {\"throw\", THROW_TK},\n+      {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0},\n+      {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0}, {\"\", 0},\n+      {\"for\", FOR_TK},\n+      {\"\", 0},\n+      {\"new\", NEW_TK},\n+      {\"char\", CHAR_TK},\n+      {\"\", 0},\n+      {\"public\", PUBLIC_TK}\n     };\n \n   if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)\n@@ -157,7 +170,7 @@ java_keyword (str, len)\n         {\n           register char *s = wordlist[key].name;\n \n-          if (*s == *str && !strcmp (str + 1, s + 1))\n+          if (*str == *s && !strcmp (str + 1, s + 1))\n             return &wordlist[key];\n         }\n     }"}]}