{"sha": "64e28767d3508601e9c2c826248515d2b4622d1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRlMjg3NjdkMzUwODYwMWU5YzJjODI2MjQ4NTE1ZDJiNDYyMmQxYg==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-11-17T22:31:06Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-11-17T22:31:06Z"}, "message": "Initial revision\n\nFrom-SVN: r8490", "tree": {"sha": "62e28a6953c7887f9124aab7db6b9a4ac08460b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62e28a6953c7887f9124aab7db6b9a4ac08460b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64e28767d3508601e9c2c826248515d2b4622d1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64e28767d3508601e9c2c826248515d2b4622d1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64e28767d3508601e9c2c826248515d2b4622d1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64e28767d3508601e9c2c826248515d2b4622d1b/comments", "author": null, "committer": null, "parents": [{"sha": "ec2c907ae8bc195be96fa51ce81ab2b53a6d94ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec2c907ae8bc195be96fa51ce81ab2b53a6d94ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec2c907ae8bc195be96fa51ce81ab2b53a6d94ae"}], "stats": {"total": 76, "additions": 76, "deletions": 0}, "files": [{"sha": "667f162a3f8633cb38aaefc9523c14229bfee128", "filename": "gcc/config/i386/vsta.h", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64e28767d3508601e9c2c826248515d2b4622d1b/gcc%2Fconfig%2Fi386%2Fvsta.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64e28767d3508601e9c2c826248515d2b4622d1b/gcc%2Fconfig%2Fi386%2Fvsta.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fvsta.h?ref=64e28767d3508601e9c2c826248515d2b4622d1b", "patch": "@@ -0,0 +1,76 @@\n+/* Configuration for an i386 running VSTa micro-kernel.\n+   Copyright (C) 1994 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+#define YES_UNDERSCORES\n+\n+#include \"i386/gas.h\"\n+\n+#ifdef CPP_PREDEFINES\n+#undef CPP_PREDEFINES\n+#endif\n+#define CPP_PREDEFINES \"-Dunix -Di386 -DVSTA \\\n+  -Asystem(unix) -Asystem(vsta) -Acpu(i386) -Amachine(i386)\"\n+\n+#undef EXTRA_SECTIONS\n+#define EXTRA_SECTIONS in_ctor, in_dtor\n+\n+#undef EXTRA_SECTION_FUNCTIONS\n+#define EXTRA_SECTION_FUNCTIONS\t\t\t\t\t\\\n+  CTOR_SECTION_FUNCTION\t\t\t\t\t\t\\\n+  DTOR_SECTION_FUNCTION\n+\n+#define CTOR_SECTION_FUNCTION\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+ctor_section ()\t\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  if (in_section != in_ctor)\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      fprintf (asm_out_file, \"\\t.section .ctor\\n\");\t\t\\\n+      in_section = in_ctor;\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+}\n+\n+#define DTOR_SECTION_FUNCTION\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+dtor_section ()\t\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  if (in_section != in_dtor)\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      fprintf (asm_out_file, \"\\t.section .dtor\\n\");\t\t\\\n+      in_section = in_dtor;\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+}\n+\n+#define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\\\n+  do {\t\t\t\t\t\t\\\n+    ctor_section ();\t\t\t\t\\\n+    fprintf (FILE, \"%s\\t\", ASM_LONG);\t\t\\\n+    assemble_name (FILE, NAME);\t\t\t\\\n+    fprintf (FILE, \"\\n\");\t\t\t\\\n+  } while (0)\n+\n+#define ASM_OUTPUT_DESTRUCTOR(FILE,NAME)       \t\\\n+  do {\t\t\t\t\t\t\\\n+    dtor_section ();                   \t\t\\\n+    fprintf (FILE, \"%s\\t\", ASM_LONG);\t\t\\\n+    assemble_name (FILE, NAME);              \t\\\n+    fprintf (FILE, \"\\n\");\t\t\t\\\n+  } while (0)\n+\n+"}]}