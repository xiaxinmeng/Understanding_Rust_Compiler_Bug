{"sha": "de3aebffe98c425f6368c44d32e72450139176fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUzYWViZmZlOThjNDI1ZjYzNjhjNDRkMzJlNzI0NTAxMzkxNzZmYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-02-04T22:38:48Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-02-04T22:38:48Z"}, "message": "dwarf2.h (enum dwarf_source_language): Add DW_LANG_Fortran03 and DW_LANG_Fortran08.\n\ninclude/\n\t* dwarf2.h (enum dwarf_source_language): Add DW_LANG_Fortran03\n\tand DW_LANG_Fortran08.\ngcc/\n\t* dwarf2out.c (is_fortran): Also return true for DW_LANG_Fortran03\n\tor DW_LANG_Fortran08.\n\t(lower_bound_default): Return 1 for DW_LANG_Fortran03 or\n\tDW_LANG_Fortran08.\n\t(gen_compile_unit_die): Handle \"GNU Fortran2003\" and\n\t\"GNU Fortran2008\" language strings.\n\t* dbxout.c (get_lang_number): Use lang_GNU_Fortran.\n\t* langhooks.h (lang_GNU_Fortran): New prototype.\n\t* langhooks.c (lang_GNU_Fortran): New function.\n\t* config/rs6000/rs6000.c (rs6000_output_function_epilogue): Use\n\tlang_GNU_Fortran.\ngcc/fortran/\n\t* options.c: Include langhooks.h.\n\t(gfc_post_options): Change lang_hooks.name based on\n\tselected -std= mode.\n\nFrom-SVN: r220422", "tree": {"sha": "fc831ba012d14081b0a59fc329cfc207bc7d16aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc831ba012d14081b0a59fc329cfc207bc7d16aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de3aebffe98c425f6368c44d32e72450139176fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de3aebffe98c425f6368c44d32e72450139176fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de3aebffe98c425f6368c44d32e72450139176fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de3aebffe98c425f6368c44d32e72450139176fa/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a6bc87d334fa5eed69acda9813cbf369dcdf9cf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6bc87d334fa5eed69acda9813cbf369dcdf9cf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6bc87d334fa5eed69acda9813cbf369dcdf9cf2"}], "stats": {"total": 69, "additions": 63, "deletions": 6}, "files": [{"sha": "b90fc402d447e692f0c1d202d28a501465e7ca1f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de3aebffe98c425f6368c44d32e72450139176fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de3aebffe98c425f6368c44d32e72450139176fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de3aebffe98c425f6368c44d32e72450139176fa", "patch": "@@ -1,3 +1,17 @@\n+2015-02-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* dwarf2out.c (is_fortran): Also return true for DW_LANG_Fortran03\n+\tor DW_LANG_Fortran08.\n+\t(lower_bound_default): Return 1 for DW_LANG_Fortran03 or\n+\tDW_LANG_Fortran08.\n+\t(gen_compile_unit_die): Handle \"GNU Fortran2003\" and\n+\t\"GNU Fortran2008\" language strings.\n+\t* dbxout.c (get_lang_number): Use lang_GNU_Fortran.\n+\t* langhooks.h (lang_GNU_Fortran): New prototype.\n+\t* langhooks.c (lang_GNU_Fortran): New function.\n+\t* config/rs6000/rs6000.c (rs6000_output_function_epilogue): Use\n+\tlang_GNU_Fortran.\n+\n 2015-02-04  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/sparc/sparc.c (RTX_OK_FOR_OFFSET_P): Fix off-by-one error."}, {"sha": "356955ab8bbdb8c9225dd2773d94570425f882ef", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de3aebffe98c425f6368c44d32e72450139176fa/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de3aebffe98c425f6368c44d32e72450139176fa/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=de3aebffe98c425f6368c44d32e72450139176fa", "patch": "@@ -25537,7 +25537,7 @@ rs6000_output_function_epilogue (FILE *file,\n \t  || ! strcmp (language_string, \"libgccjit\"))\n \ti = 0;\n       else if (! strcmp (language_string, \"GNU F77\")\n-\t       || ! strcmp (language_string, \"GNU Fortran\"))\n+\t       || lang_GNU_Fortran ())\n \ti = 1;\n       else if (! strcmp (language_string, \"GNU Pascal\"))\n \ti = 2;"}, {"sha": "758c1c439fabc5d4affc69723001d1a440a8a15e", "filename": "gcc/dbxout.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de3aebffe98c425f6368c44d32e72450139176fa/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de3aebffe98c425f6368c44d32e72450139176fa/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=de3aebffe98c425f6368c44d32e72450139176fa", "patch": "@@ -967,7 +967,7 @@ get_lang_number (void)\n     return N_SO_CC;\n   else if (strcmp (language_string, \"GNU F77\") == 0)\n     return N_SO_FORTRAN;\n-  else if (strcmp (language_string, \"GNU Fortran\") == 0)\n+  else if (lang_GNU_Fortran ())\n     return N_SO_FORTRAN90; /* CHECKME */\n   else if (strcmp (language_string, \"GNU Pascal\") == 0)\n     return N_SO_PASCAL;"}, {"sha": "db82710ecfb368534db8969a1293fe060c602e1f", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de3aebffe98c425f6368c44d32e72450139176fa/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de3aebffe98c425f6368c44d32e72450139176fa/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=de3aebffe98c425f6368c44d32e72450139176fa", "patch": "@@ -4736,7 +4736,9 @@ is_fortran (void)\n \n   return (lang == DW_LANG_Fortran77\n \t  || lang == DW_LANG_Fortran90\n-\t  || lang == DW_LANG_Fortran95);\n+\t  || lang == DW_LANG_Fortran95\n+\t  || lang == DW_LANG_Fortran03\n+\t  || lang == DW_LANG_Fortran08);\n }\n \n /* Return TRUE if the language is Ada.  */\n@@ -16725,6 +16727,8 @@ lower_bound_default (void)\n     case DW_LANG_Fortran77:\n     case DW_LANG_Fortran90:\n     case DW_LANG_Fortran95:\n+    case DW_LANG_Fortran03:\n+    case DW_LANG_Fortran08:\n       return 1;\n     case DW_LANG_UPC:\n     case DW_LANG_D:\n@@ -19786,8 +19790,17 @@ gen_compile_unit_die (const char *filename)\n     {\n       if (strcmp (language_string, \"GNU Ada\") == 0)\n \tlanguage = DW_LANG_Ada95;\n-      else if (strcmp (language_string, \"GNU Fortran\") == 0)\n-\tlanguage = DW_LANG_Fortran95;\n+      else if (strncmp (language_string, \"GNU Fortran\", 11) == 0)\n+\t{\n+\t  language = DW_LANG_Fortran95;\n+\t  if (dwarf_version >= 5 /* || !dwarf_strict */)\n+\t    {\n+\t      if (strcmp (language_string, \"GNU Fortran2003\") == 0)\n+\t\tlanguage = DW_LANG_Fortran03;\n+\t      else if (strcmp (language_string, \"GNU Fortran2008\") == 0)\n+\t\tlanguage = DW_LANG_Fortran08;\n+\t    }\n+\t}\n       else if (strcmp (language_string, \"GNU Java\") == 0)\n \tlanguage = DW_LANG_Java;\n       else if (strcmp (language_string, \"GNU Objective-C\") == 0)\n@@ -19801,7 +19814,7 @@ gen_compile_unit_die (const char *filename)\n \t}\n     }\n   /* Use a degraded Fortran setting in strict DWARF2 so is_fortran works.  */\n-  else if (strcmp (language_string, \"GNU Fortran\") == 0)\n+  else if (strncmp (language_string, \"GNU Fortran\", 11) == 0)\n     language = DW_LANG_Fortran90;\n \n   add_AT_unsigned (die, DW_AT_language, language);\n@@ -19811,6 +19824,8 @@ gen_compile_unit_die (const char *filename)\n     case DW_LANG_Fortran77:\n     case DW_LANG_Fortran90:\n     case DW_LANG_Fortran95:\n+    case DW_LANG_Fortran03:\n+    case DW_LANG_Fortran08:\n       /* Fortran has case insensitive identifiers and the front-end\n \t lowercases everything.  */\n       add_AT_unsigned (die, DW_AT_identifier_case, DW_ID_down_case);"}, {"sha": "35504e3dd0ba8706b0a402ed3be565015d5bc5cd", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de3aebffe98c425f6368c44d32e72450139176fa/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de3aebffe98c425f6368c44d32e72450139176fa/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=de3aebffe98c425f6368c44d32e72450139176fa", "patch": "@@ -1,3 +1,9 @@\n+2015-02-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* options.c: Include langhooks.h.\n+\t(gfc_post_options): Change lang_hooks.name based on\n+\tselected -std= mode.\n+\n 2015-02-03  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \t* intrinsic.texi (CO_ASSOCIATED): c_prt_1 should be c_ptr_1."}, {"sha": "1262ccc19aa019cde26ee4912dd0b1e719e830d0", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de3aebffe98c425f6368c44d32e72450139176fa/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de3aebffe98c425f6368c44d32e72450139176fa/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=de3aebffe98c425f6368c44d32e72450139176fa", "patch": "@@ -43,6 +43,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cpp.h\"\n #include \"diagnostic.h\"\t/* For global_dc.  */\n #include \"tm.h\"\n+#include \"langhooks.h\"\n \n gfc_option_t gfc_option;\n \n@@ -398,6 +399,11 @@ gfc_post_options (const char **pfilename)\n \n   gfc_cpp_post_options ();\n \n+  if (gfc_option.allow_std & GFC_STD_F2008)\n+    lang_hooks.name = \"GNU Fortran2008\";\n+  else if (gfc_option.allow_std & GFC_STD_F2003)\n+    lang_hooks.name = \"GNU Fortran2003\";\n+\n   return gfc_cpp_preprocess_only ();\n }\n "}, {"sha": "74f83519c543da299330a4d276010f63c749dd1f", "filename": "gcc/langhooks.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de3aebffe98c425f6368c44d32e72450139176fa/gcc%2Flanghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de3aebffe98c425f6368c44d32e72450139176fa/gcc%2Flanghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.c?ref=de3aebffe98c425f6368c44d32e72450139176fa", "patch": "@@ -731,3 +731,11 @@ lang_GNU_CXX (void)\n {\n   return strncmp (lang_hooks.name, \"GNU C++\", 7) == 0;\n }\n+\n+/* Returns true if the current lang_hooks represents the GNU Fortran frontend.  */\n+\n+bool\n+lang_GNU_Fortran (void)\n+{\n+  return strncmp (lang_hooks.name, \"GNU Fortran\", 11) == 0;\n+}"}, {"sha": "4039e8f737edf3d679411f2105d8fb6c3318d94d", "filename": "gcc/langhooks.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de3aebffe98c425f6368c44d32e72450139176fa/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de3aebffe98c425f6368c44d32e72450139176fa/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=de3aebffe98c425f6368c44d32e72450139176fa", "patch": "@@ -509,5 +509,6 @@ extern tree add_builtin_type (const char *name, tree type);\n \n extern bool lang_GNU_C (void);\n extern bool lang_GNU_CXX (void);\n+extern bool lang_GNU_Fortran (void);\n  \n #endif /* GCC_LANG_HOOKS_H */"}, {"sha": "4f455c08f15447ba805bafd10927e7e131403727", "filename": "include/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de3aebffe98c425f6368c44d32e72450139176fa/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de3aebffe98c425f6368c44d32e72450139176fa/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=de3aebffe98c425f6368c44d32e72450139176fa", "patch": "@@ -1,3 +1,8 @@\n+2015-02-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* dwarf2.h (enum dwarf_source_language): Add DW_LANG_Fortran03\n+\tand DW_LANG_Fortran08.\n+\n 2015-01-15  Thomas Schwinge  <thomas@codesourcery.com>\n \t    Julian Brown  <julian@codesourcery.com>\n \t    James Norris  <jnorris@codesourcery.com>"}, {"sha": "e05955cad4695f944ff0326f753276279f9e04c8", "filename": "include/dwarf2.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de3aebffe98c425f6368c44d32e72450139176fa/include%2Fdwarf2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de3aebffe98c425f6368c44d32e72450139176fa/include%2Fdwarf2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fdwarf2.h?ref=de3aebffe98c425f6368c44d32e72450139176fa", "patch": "@@ -312,6 +312,8 @@ enum dwarf_source_language\n     DW_LANG_C_plus_plus_11 = 0x001a, /* dwarf5.20141029.pdf DRAFT */\n     DW_LANG_C11 = 0x001d,\n     DW_LANG_C_plus_plus_14 = 0x0021,\n+    DW_LANG_Fortran03 = 0x0022,\n+    DW_LANG_Fortran08 = 0x0023,\n \n     DW_LANG_lo_user = 0x8000,\t/* Implementation-defined range start.  */\n     DW_LANG_hi_user = 0xffff,\t/* Implementation-defined range start.  */"}]}