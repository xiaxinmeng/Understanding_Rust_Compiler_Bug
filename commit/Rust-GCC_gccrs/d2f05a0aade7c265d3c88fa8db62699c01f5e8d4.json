{"sha": "d2f05a0aade7c265d3c88fa8db62699c01f5e8d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJmMDVhMGFhZGU3YzI2NWQzYzg4ZmE4ZGI2MjY5OWMwMWY1ZThkNA==", "commit": {"author": {"name": "Klaus Kaempf", "email": "kkaempf@progis.de", "date": "1998-02-01T12:01:18Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-02-01T12:01:18Z"}, "message": "* cccp.c (main): Predefine __VMS_VER on VMS.\n\nFrom-SVN: r17578", "tree": {"sha": "33abd0b57be208d1dfe350db29d24fb64cdc83eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33abd0b57be208d1dfe350db29d24fb64cdc83eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2f05a0aade7c265d3c88fa8db62699c01f5e8d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2f05a0aade7c265d3c88fa8db62699c01f5e8d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2f05a0aade7c265d3c88fa8db62699c01f5e8d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2f05a0aade7c265d3c88fa8db62699c01f5e8d4/comments", "author": null, "committer": null, "parents": [{"sha": "f8dac6eb3f71d5810ff9c8b417d52e0d0a76fe3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8dac6eb3f71d5810ff9c8b417d52e0d0a76fe3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8dac6eb3f71d5810ff9c8b417d52e0d0a76fe3d"}], "stats": {"total": 63, "additions": 63, "deletions": 0}, "files": [{"sha": "bdc6709da2c14e9602df1f9e0860de497a98efe9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2f05a0aade7c265d3c88fa8db62699c01f5e8d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2f05a0aade7c265d3c88fa8db62699c01f5e8d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d2f05a0aade7c265d3c88fa8db62699c01f5e8d4", "patch": "@@ -1,3 +1,7 @@\n+Sun Feb  1 13:01:15 1998  Klaus Kaempf  <kkaempf@progis.de>\n+\n+\t* cccp.c (main): Predefine __VMS_VER on VMS.\n+\n Sun Feb  1 12:39:53 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* expr.c (get_inner_reference): Use sbitsizetype for type sizes."}, {"sha": "c394ea2ecc20df3eb5167a2979f1bb1b1fe0fae2", "filename": "gcc/cccp.c", "status": "modified", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2f05a0aade7c265d3c88fa8db62699c01f5e8d4/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2f05a0aade7c265d3c88fa8db62699c01f5e8d4/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=d2f05a0aade7c265d3c88fa8db62699c01f5e8d4", "patch": "@@ -130,6 +130,8 @@ extern char *getenv ();\n /* VMS-specific definitions */\n #ifdef VMS\n #include <descrip.h>\n+#include <ssdef.h>\n+#include <syidef.h>\n #define open(fname,mode,prot)\tVMS_open (fname,mode,prot)\n #define fopen(fname,mode)\tVMS_fopen (fname,mode)\n #define freopen(fname,mode,ofile) VMS_freopen (fname,mode,ofile)\n@@ -1732,6 +1734,63 @@ main (argc, argv)\n \n   if (!inhibit_predefs) {\n     char *p = (char *) alloca (strlen (predefs) + 1);\n+\n+#ifdef VMS\n+    struct dsc$descriptor_s lcl_name;\n+    struct item_list {\n+      unsigned short length;  /* input length */\n+      unsigned short code;    /* item code */   \n+      unsigned long dptr;     /* data ptr */\n+      unsigned long lptr;     /* output length ptr */\n+    };\n+\n+    unsigned long syi_length;\n+    char syi_data[16];\n+\n+    struct item_list items[] = {\n+      { 16, SYI$_VERSION, 0, 0 },\n+      { 0, 0, 0, 0 }\n+    };\n+\n+    items[0].dptr = (unsigned long)syi_data;\n+    items[0].lptr = (unsigned long)(&syi_length);\n+\n+    if (SYS$GETSYIW (0, 0, 0, items, NULL, NULL, NULL, NULL) == SS$_NORMAL)\n+      {\n+\tunsigned long vms_version_value;\n+\tchar *vers;\n+\n+\tvers = syi_data;\n+\tvms_version_value = 0;\n+\n+\tif (*vers == 'V')\n+\t  vers++;\n+\tif (isdigit (*vers))\n+\t  {\n+\t    vms_version_value = (*vers - '0') * 10000000;\n+\t  }\n+\tvers++;\n+\tif (*vers == '.')\n+\t  {\n+\t    vers++;\n+\t    if (isdigit (*vers))\n+\t      {\n+\t\tvms_version_value += (*vers - '0') * 100000;\n+\t      }\n+\t  }\n+\n+\tif (vms_version_value > 0)\n+\t  {\n+\t    char versbuf[32];\n+\n+\t    sprintf (versbuf, \"__VMS_VER=%08ld\", vms_version_value);\n+\t    if (debug_output)\n+\t      output_line_directive (fp, &outbuf, 0, same_file);\n+\t    make_definition (versbuf, &outbuf);\n+\t  }\n+      }\n+#endif\n+\n     strcpy (p, predefs);\n     while (*p) {\n       char *q;"}]}