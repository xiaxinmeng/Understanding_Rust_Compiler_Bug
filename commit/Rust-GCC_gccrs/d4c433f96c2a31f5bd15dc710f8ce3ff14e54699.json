{"sha": "d4c433f96c2a31f5bd15dc710f8ce3ff14e54699", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRjNDMzZjk2YzJhMzFmNWJkMTVkYzcxMGY4Y2UzZmYxNGU1NDY5OQ==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2011-02-19T01:42:17Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2011-02-19T01:42:17Z"}, "message": "Updated comments - no change in code\n\nFrom-SVN: r170298", "tree": {"sha": "0ccc89fe6cccce803a9f9432fd4c34fe2d7852d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ccc89fe6cccce803a9f9432fd4c34fe2d7852d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4c433f96c2a31f5bd15dc710f8ce3ff14e54699", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4c433f96c2a31f5bd15dc710f8ce3ff14e54699", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4c433f96c2a31f5bd15dc710f8ce3ff14e54699", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4c433f96c2a31f5bd15dc710f8ce3ff14e54699/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f6c51fa7a10e886688c49e3bae655ac20914d1bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6c51fa7a10e886688c49e3bae655ac20914d1bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6c51fa7a10e886688c49e3bae655ac20914d1bf"}], "stats": {"total": 128, "additions": 76, "deletions": 52}, "files": [{"sha": "8e76292fd88e29b5d564f83ef2276cf1f608b8b7", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4c433f96c2a31f5bd15dc710f8ce3ff14e54699/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4c433f96c2a31f5bd15dc710f8ce3ff14e54699/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=d4c433f96c2a31f5bd15dc710f8ce3ff14e54699", "patch": "@@ -1,3 +1,12 @@\n+2011-01-19  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc-act.c: Updated comments.\n+\t* objc-next-runtime-abi-02.c: Same.\n+\t* objc-runtime-shared-support.c: Same.\n+\t* objc-runtime-hooks.h: Same.\n+\t* objc-act.h: Same.\n+\t* objc-gnu-runtime-abi-01.c: Same.\n+\n 2011-01-19  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc-gnu-runtime-abi-01.c (objc_generate_v1_gnu_metadata): Do"}, {"sha": "0e32c23515e3509d41d38509af1305cd75d2d325", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 31, "deletions": 29, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4c433f96c2a31f5bd15dc710f8ce3ff14e54699/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4c433f96c2a31f5bd15dc710f8ce3ff14e54699/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=d4c433f96c2a31f5bd15dc710f8ce3ff14e54699", "patch": "@@ -6553,6 +6553,7 @@ start_class (enum tree_code code, tree class_name, tree super_name,\n \t    {\n \t      tree name = TREE_PURPOSE (attribute);\n \t      \n+\t      /* TODO: Document what the objc_exception attribute is/does.  */\n \t      /* We handle the 'deprecated' and (undocumented) 'objc_exception'\n \t\t attributes.  */\n \t      if (is_attribute_p  (\"deprecated\", name))\n@@ -7505,10 +7506,6 @@ objc_gen_property_data (tree klass, tree class_methods)\n       /* @dynamic property - nothing to check or synthesize.  */\n       if (PROPERTY_DYNAMIC (x))\n \tcontinue;\n-  /* Add any property that is declared in the interface, but undeclared in the\n-     implementation to thie implementation. These are the 'dynamic' properties.\n-  \n-  objc_v2_merge_dynamic_property ();*/\n       \n       /* @synthesize property - need to synthesize the accessors.  */\n       if (PROPERTY_IVAR_NAME (x))\n@@ -7771,7 +7768,6 @@ objc_declare_protocols (tree names, tree attributes)\n \t  add_protocol (protocol);\n \t  PROTOCOL_DEFINED (protocol) = 0;\n \t  PROTOCOL_FORWARD_DECL (protocol) = NULL_TREE;\n-/*\t  PROTOCOL_V2_FORWARD_DECL (protocol) = NULL_TREE;*/\n \t  \n \t  if (attributes)\n \t    {\n@@ -7824,7 +7820,6 @@ start_protocol (enum tree_code code, tree name, tree list, tree attributes)\n       add_protocol (protocol);\n       PROTOCOL_DEFINED (protocol) = 1;\n       PROTOCOL_FORWARD_DECL (protocol) = NULL_TREE;\n-/*      PROTOCOL_V2_FORWARD_DECL (protocol) = NULL_TREE;*/\n \n       check_protocol_recursively (protocol, list);\n     }\n@@ -8466,10 +8461,11 @@ void\n objc_clear_super_receiver (void)\n {\n   if (objc_method_context\n-      && UOBJC_SUPER_scope == objc_get_current_scope ()) {\n-    UOBJC_SUPER_decl = 0;\n-    UOBJC_SUPER_scope = 0;\n-  }\n+      && UOBJC_SUPER_scope == objc_get_current_scope ())\n+    {\n+      UOBJC_SUPER_decl = 0;\n+      UOBJC_SUPER_scope = 0;\n+    }\n }\n \n void\n@@ -10357,26 +10353,32 @@ encode_field_decl (tree field_decl, int curtype, int format)\n     encode_type (TREE_TYPE (field_decl), curtype, format);\n }\n \n-/* This routine encodes the attribute of the input PROPERTY according to following\n-   formula:\n-\n-Property attributes are stored as a comma-delimited C string. The simple attributes \n-readonly and copies are encoded as single characters. The parametrized attributes, \n-getter=name, setter=name, and ivar=name, are encoded as single characters, followed \n-by an identifier. Property types are also encoded as a parametrized attribute. The \n-characters used to encode these attributes are defined by the following enumeration:\n-\n-enum PropertyAttributes {\n-    kPropertyReadOnly = 'r',                    // property is read-only.\n-    kPropertyCopies = 'c',                      // property is a copy of the value last assigned\n-    kPropertyGetter = 'g',                      // followed by getter selector name\n-    kPropertySetter = 's',                      // followed by setter selector name\n-    kPropertyInstanceVariable = 'i'     \t// followed by instance variable  name\n-    kPropertyType = 't'                         // followed by old-style type encoding.\n-};\n-\n-*/\n+/* This routine encodes the attribute of the input PROPERTY according\n+   to following formula:\n+\n+   Property attributes are stored as a comma-delimited C string.\n+   Simple attributes such as readonly are encoded as single\n+   character. The parametrized attributes, getter=name and\n+   setter=name, are encoded as a single character followed by an\n+   identifier.  Property types are also encoded as a parametrized\n+   attribute.  The characters used to encode these attributes are\n+   defined by the following enumeration:\n+\n+   enum PropertyAttributes {\n+     kPropertyReadOnly = 'R',\n+     kPropertyBycopy = 'C',\n+     kPropertyByref = '&',\n+     kPropertyDynamic = 'D',\n+     kPropertyGetter = 'G',\n+     kPropertySetter = 'S',\n+     kPropertyInstanceVariable = 'V',\n+     kPropertyType = 't',\n+     kPropertyWeak = 'W',\n+     kPropertyStrong = 'S',\n+     kPropertyNonAtomic = 'N'\n+   };\n \n+   FIXME: Update the implementation to match.  */\n tree\n objc_v2_encode_prop_attr (tree property)\n {"}, {"sha": "54f067fac076c2c1b7fbcf97f5063854cfb87fa2", "filename": "gcc/objc/objc-act.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4c433f96c2a31f5bd15dc710f8ce3ff14e54699/gcc%2Fobjc%2Fobjc-act.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4c433f96c2a31f5bd15dc710f8ce3ff14e54699/gcc%2Fobjc%2Fobjc-act.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.h?ref=d4c433f96c2a31f5bd15dc710f8ce3ff14e54699", "patch": "@@ -165,6 +165,7 @@ typedef enum objc_property_assign_semantics {\n #define CLASS_PROTOCOL_LIST(CLASS) TREE_VEC_ELT (TYPE_LANG_SLOT_1 (CLASS), 4)\n #define TOTAL_CLASS_RAW_IVARS(CLASS) TREE_VEC_ELT (TYPE_LANG_SLOT_1 (CLASS), 5)\n \n+/* FIXME */\n #define CLASS_HAS_EXCEPTION_ATTR(CLASS) ((CLASS)->type.lang_flag_0)\n \n #define PROTOCOL_NAME(CLASS) ((CLASS)->type.name)\n@@ -396,6 +397,7 @@ enum objc_tree_index\n     OCTI_GET_PROPERTY_STRUCT_DECL,\n     OCTI_SET_PROPERTY_STRUCT_DECL,\n \n+    /* TODO: Add comment.  */\n     /* \"V1\" stuff.  */\n     OCTI_V1_PROP_LIST_TEMPL,\n     OCTI_V1_PROP_NAME_ATTR_CHAIN,\n@@ -586,6 +588,7 @@ extern GTY(()) tree objc_global_trees[OCTI_MAX];\n #define objc_setPropertyStruct_decl \\\n \t\t\t\tobjc_global_trees[OCTI_SET_PROPERTY_STRUCT_DECL]\n \n+/* TODO: Add comment.  */\n /* V1 stuff.  */\n #define objc_prop_list_ptr\tobjc_global_trees[OCTI_V1_PROP_LIST_TEMPL]\n #define prop_names_attr_chain\tobjc_global_trees[OCTI_V1_PROP_NAME_ATTR_CHAIN]"}, {"sha": "e2a3ce7b339e455aa81b883a949d85fa6b5d8988", "filename": "gcc/objc/objc-gnu-runtime-abi-01.c", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4c433f96c2a31f5bd15dc710f8ce3ff14e54699/gcc%2Fobjc%2Fobjc-gnu-runtime-abi-01.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4c433f96c2a31f5bd15dc710f8ce3ff14e54699/gcc%2Fobjc%2Fobjc-gnu-runtime-abi-01.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-gnu-runtime-abi-01.c?ref=d4c433f96c2a31f5bd15dc710f8ce3ff14e54699", "patch": "@@ -1,4 +1,4 @@\n-/* GNU Runtime (ABI-0/1) private.\n+/* GNU Runtime ABI version 8\n    Copyright (C) 2011 Free Software Foundation, Inc.\n    Contributed by Iain Sandoe (split from objc-act.c)\n \n@@ -83,6 +83,7 @@ along with GCC; see the file COPYING3.  If not see\n   if (VERS)\t\t\t\t\t\t\t\t\\\n     DECL_ATTRIBUTES (DECL) = build_tree_list ((VERS), (KIND));\n \n+/* FIXME: Remove this macro, not needed.  */\n #ifndef TARGET_64BIT\n #define TARGET_64BIT 0\n #endif\n@@ -143,6 +144,10 @@ objc_gnu_runtime_abi_01_init (objc_runtime_hooks *rthooks)\n       flag_objc_sjlj_exceptions = 0;\n     }\n \n+  /* TODO: Complain if -fobjc-abi-version=N was used.  */\n+\n+  /* TODO: Complain if -fobj-nilcheck was used.  */\n+\n   rthooks->initialize = gnu_runtime_01_initialize;\n   rthooks->default_constant_string_class_name = DEF_CONSTANT_STRING_CLASS_NAME;\n   rthooks->tag_getclass = TAG_GETCLASS;\n@@ -573,7 +578,8 @@ gnu_runtime_abi_01_get_class_reference (tree ident)\n \t\t\t\t\t\t(IDENTIFIER_LENGTH (ident) + 1,\n \t\t\t\t\t\t IDENTIFIER_POINTER (ident)));\n \n-/*      assemble_external (objc_get_class_decl);*/\n+  /* FIXME: Do we need this assemble_external() ? */\n+  /* assemble_external (objc_get_class_decl);*/\n   return build_function_call (input_location, objc_get_class_decl, params);\n }\n \n@@ -794,7 +800,7 @@ gnu_runtime_abi_01_get_protocol_reference (location_t loc, tree p)\n   return expr;\n }\n \n-/* For ABI 0/1 and IVAR is just a fixed offset in the class struct.  */\n+/* For ABI 8 an IVAR is just a fixed offset in the class struct.  */\n \n static tree\n gnu_runtime_abi_01_build_ivar_ref (location_t loc ATTRIBUTE_UNUSED, \n@@ -837,7 +843,8 @@ gnu_runtime_abi_01_get_category_super_ref (location_t loc ATTRIBUTE_UNUSED,\n \n   add_class_reference (super_name);\n   super_class = (inst_meth ? objc_get_class_decl : objc_get_meta_class_decl);\n-/* assemble_external (super_class);*/\n+  /* FIXME: Do we need this assemble_external() ? */\n+  /* assemble_external (super_class);*/\n   super_name = my_build_string_pointer (IDENTIFIER_LENGTH (super_name) + 1,\n \t\t\t\t\tIDENTIFIER_POINTER (super_name));\n   /* super_class = get_{meta_}class(\"CLASS_SUPER_NAME\");  */\n@@ -1475,16 +1482,10 @@ generate_category (struct imp_entry *impent)\n      long instance_size;\n      struct objc_ivar_list *ivars;\n      struct objc_method_list *methods;\n-     if (flag_next_runtime)\n-       struct objc_cache *cache;\n-     else {\n-       struct sarray *dtable;\n-       struct objc_class *subclass_list;\n-       struct objc_class *sibling_class;\n-     }\n+     struct sarray *dtable;\n+     struct objc_class *subclass_list;\n+     struct objc_class *sibling_class;\n      struct objc_protocol_list *protocols;\n-     if (flag_next_runtime)\n-       void *sel_id;\n      void *gc_object_type;\n    };  */\n \n@@ -1542,6 +1543,7 @@ build_shared_structure_initializer (tree type, tree isa, tree super,\n       CONSTRUCTOR_APPEND_ELT (v, NULL_TREE, expr);\n     }\n \n+  /* FIXME: Remove NeXT runtime code.  */\n   if (flag_next_runtime)\n     {\n       ltyp = build_pointer_type (xref_tag (RECORD_TYPE,\n@@ -1573,6 +1575,7 @@ build_shared_structure_initializer (tree type, tree isa, tree super,\n       CONSTRUCTOR_APPEND_ELT (v, NULL_TREE, expr);\n     }\n \n+  /* FIXME: Remove NeXT runtime code.  */\n   if (flag_next_runtime)\n     /* sel_id = NULL */\n     CONSTRUCTOR_APPEND_ELT (v, NULL_TREE, build_int_cst (NULL_TREE, 0));\n@@ -1864,6 +1867,7 @@ generate_static_references (void)\n   char buf[BUFSIZE];\n   VEC(constructor_elt,gc) *decls = NULL;\n \n+  /* FIXME: Remove NeXT runtime code.  */\n   if (flag_next_runtime)\n     gcc_unreachable ();\n \n@@ -1991,6 +1995,7 @@ build_objc_symtab_template (void)\n   /* short cat_def_cnt; */\n   add_field_decl (short_integer_type_node, \"cat_def_cnt\", &chain);\n \n+  /* FIXME: Remove.  */\n   if (TARGET_64BIT)\n     add_field_decl (integer_type_node, \"_explicit_padder\", &chain);\n \n@@ -2037,15 +2042,20 @@ init_objc_symtab (tree type)\n \n   CONSTRUCTOR_APPEND_ELT (v, NULL_TREE, \n \t\t\t  build_int_cst (short_integer_type_node, cat_count));\n+\n+  /* FIXME: Remove.  */\n   if (TARGET_64BIT)\n     CONSTRUCTOR_APPEND_ELT (v, NULL_TREE,\n \t\t\t  build_int_cst (integer_type_node, 0));\n \n   /* cls_def = { ..., { &Foo, &Bar, ...}, ... } */\n \n   field = TYPE_FIELDS (type);\n+\n+  /* FIXME: Remove.  */\n   if (TARGET_64BIT)\n     field = DECL_CHAIN (field);\n+\n   field = DECL_CHAIN (DECL_CHAIN (DECL_CHAIN (DECL_CHAIN (field))));\n \n   CONSTRUCTOR_APPEND_ELT (v, NULL_TREE, init_def_list (TREE_TYPE (field)));"}, {"sha": "6bfa3a2d99a9f6ad7c65551801395c45217cc6f3", "filename": "gcc/objc/objc-next-runtime-abi-02.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4c433f96c2a31f5bd15dc710f8ce3ff14e54699/gcc%2Fobjc%2Fobjc-next-runtime-abi-02.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4c433f96c2a31f5bd15dc710f8ce3ff14e54699/gcc%2Fobjc%2Fobjc-next-runtime-abi-02.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-next-runtime-abi-02.c?ref=d4c433f96c2a31f5bd15dc710f8ce3ff14e54699", "patch": "@@ -22,14 +22,8 @@ along with GCC; see the file COPYING3.  If not see\n \n /* The NeXT ABI2 is used for m64 implementations on Darwin/OSX machines.\n    \n-   This version is intended to match (logically) output of Apple's 4.2.1\n-   compiler.\n-   \n-   References:\n-   FSF GCC branches/apple/trunk.\n-   objc4-371.2 Open Source release (Apple Computer). (objc-runtime-new.h)\n-   gcc_42-5664 Apple Local modifications to GCC (Apple Computer).\n-*/\n+   This version is intended to match (logically) the output of Apple's\n+   4.2.1 compiler.  */\n \n #include \"config.h\"\n #include \"system.h\""}, {"sha": "b325e75f9bcb0e2c574c6df99e31eedb75e55ff4", "filename": "gcc/objc/objc-runtime-hooks.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4c433f96c2a31f5bd15dc710f8ce3ff14e54699/gcc%2Fobjc%2Fobjc-runtime-hooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4c433f96c2a31f5bd15dc710f8ce3ff14e54699/gcc%2Fobjc%2Fobjc-runtime-hooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-runtime-hooks.h?ref=d4c433f96c2a31f5bd15dc710f8ce3ff14e54699", "patch": "@@ -25,16 +25,19 @@ along with GCC; see the file COPYING3.  If not see\n \n /* Objective-C supports several runtime library variants: \n \n-   \"GNU\" runtime selected by -fgnu-runtime (currently at API version 1).\n+   \"GNU\" runtime selected by -fgnu-runtime (currently at ABI version 8).\n    \"NeXT\" runtime (selected by -fnext-runtime) and installed on OSX/Darwin\n    systems at API version 1 (for m32 code) and version 2 (for m64 code).\n    \n    The runtimes require different data types/layouts, method call mechanisms\n    and so on, and the purpose of this interface is to abstract such\n    differences from the parser's perspective.  */\n \n+/* TODO: Do we want the initial underscore ? */\n typedef struct _objc_runtime_hooks_r \n {\n+  /* TODO: Expand comments in this file.  */\n+\n   /* Initialize for this runtime.  */\n   void (*initialize) (void);\n   const char *default_constant_string_class_name;"}, {"sha": "8dca6ccae9f2b7c54825cd9dd89ae463ff9f630f", "filename": "gcc/objc/objc-runtime-shared-support.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4c433f96c2a31f5bd15dc710f8ce3ff14e54699/gcc%2Fobjc%2Fobjc-runtime-shared-support.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4c433f96c2a31f5bd15dc710f8ce3ff14e54699/gcc%2Fobjc%2Fobjc-runtime-shared-support.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-runtime-shared-support.c?ref=d4c433f96c2a31f5bd15dc710f8ce3ff14e54699", "patch": "@@ -507,7 +507,10 @@ build_module_descriptor (long vers, tree attr)\n \n   /* Create an instance of \"_objc_module\".  */\n   UOBJC_MODULES_decl = start_var_decl (objc_module_template,\n-\t\t\tflag_next_runtime ? \"_OBJC_Module\" :  \"_OBJC_Module\");\n+\t\t\t\t       /* FIXME - why the conditional\n+\t\t\t\t\t  if the symbol is the\n+\t\t\t\t\t  same.  */\n+\t\t\t\t       flag_next_runtime ? \"_OBJC_Module\" :  \"_OBJC_Module\");\n \n   /* This is the root of the metadata for defined classes and categories, it\n      is referenced by the runtime and, therefore, needed.  */"}]}