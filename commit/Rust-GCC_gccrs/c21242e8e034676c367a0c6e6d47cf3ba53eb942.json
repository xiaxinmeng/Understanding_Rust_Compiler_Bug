{"sha": "c21242e8e034676c367a0c6e6d47cf3ba53eb942", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzIxMjQyZThlMDM0Njc2YzM2N2EwYzZlNmQ0N2NmM2JhNTNlYjk0Mg==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-04-23T17:25:30Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-04-23T17:25:30Z"}, "message": "re PR target/16641 (fr30-elf-gcc compiler error when building newlib-1.12.0)\n\n\n\tPR target/16641\n\t* config/fr30/fr30.h (GO_IF_LEGITIMATE_ADDRESS): Check REGNO for\n\tSTACK_POINTER_RTX and FRAME_POINTER_RTX instead of comparing the\n\trtx to stack_pointer_rtx or frame_pointer_rtx directly.\n\nFrom-SVN: r113196", "tree": {"sha": "0d32abba51b6bac5470dd72eea1134db52dd3fc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d32abba51b6bac5470dd72eea1134db52dd3fc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c21242e8e034676c367a0c6e6d47cf3ba53eb942", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c21242e8e034676c367a0c6e6d47cf3ba53eb942", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c21242e8e034676c367a0c6e6d47cf3ba53eb942", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c21242e8e034676c367a0c6e6d47cf3ba53eb942/comments", "author": null, "committer": null, "parents": [{"sha": "05a2763ef32d20ad24b7e03907c566dbc80d5c7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05a2763ef32d20ad24b7e03907c566dbc80d5c7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05a2763ef32d20ad24b7e03907c566dbc80d5c7b"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "f93061dd5866287274c07d669067e54f76767ac2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21242e8e034676c367a0c6e6d47cf3ba53eb942/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21242e8e034676c367a0c6e6d47cf3ba53eb942/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c21242e8e034676c367a0c6e6d47cf3ba53eb942", "patch": "@@ -1,3 +1,10 @@\n+2006-04-23  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR target/16641\n+\t* config/fr30/fr30.h (GO_IF_LEGITIMATE_ADDRESS): Check REGNO for\n+\tSTACK_POINTER_RTX and FRAME_POINTER_RTX instead of comparing the\n+\trtx to stack_pointer_rtx or frame_pointer_rtx directly.\n+\n 2006-04-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* fold-const.c (range_predecessor): Use operand_equal_p"}, {"sha": "0901649c3120b3b93def83eed05f7a392fc0d633", "filename": "gcc/config/fr30/fr30.h", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21242e8e034676c367a0c6e6d47cf3ba53eb942/gcc%2Fconfig%2Ffr30%2Ffr30.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21242e8e034676c367a0c6e6d47cf3ba53eb942/gcc%2Fconfig%2Ffr30%2Ffr30.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.h?ref=c21242e8e034676c367a0c6e6d47cf3ba53eb942", "patch": "@@ -842,13 +842,15 @@ do\t\t\t\t\t\t\t\t\t\t\\\n         goto LABEL;\t\t\t\t\t\t\t\\\n       if (GET_CODE (X) == PLUS\t\t\t\t\t\t\\\n \t  && ((MODE) == SImode || (MODE) == SFmode)\t\t\t\\\n-\t  && XEXP (X, 0) == stack_pointer_rtx\t\t\t\t\\\n+\t  && GET_CODE (XEXP (X, 0)) == REG\t\t\t\t\\\n+          && REGNO (XEXP (X, 0)) == STACK_POINTER_REGNUM\t\t\\\n \t  && GET_CODE (XEXP (X, 1)) == CONST_INT\t\t\t\\\n \t  && IN_RANGE (INTVAL (XEXP (X, 1)), 0, (1 <<  6) - 4))\t\t\\\n \tgoto LABEL;\t\t\t\t\t\t\t\\\n       if (GET_CODE (X) == PLUS\t\t\t\t\t\t\\\n \t  && ((MODE) == SImode || (MODE) == SFmode)\t\t\t\\\n-\t  && XEXP (X, 0) == frame_pointer_rtx\t\t\t\t\\\n+\t  && GET_CODE (XEXP (X, 0)) == REG\t\t\t\t\\\n+          && REGNO (XEXP (X, 0)) == FRAME_POINTER_REGNUM\t\t\\\n \t  && GET_CODE (XEXP (X, 1)) == CONST_INT\t\t\t\\\n \t  && IN_RANGE (INTVAL (XEXP (X, 1)), -(1 << 9), (1 <<  9) - 4))\t\\\n         goto LABEL;\t\t\t\t\t\t\t\\\n@@ -862,15 +864,16 @@ do\t\t\t\t\t\t\t\t\t\t\\\n         goto LABEL;\t\t\t\t\t\t\t\\\n       if (GET_CODE (X) == PLUS\t\t\t\t\t\t\\\n \t  && ((MODE) == SImode || (MODE) == SFmode)\t\t\t\\\n-\t  && XEXP (X, 0) == stack_pointer_rtx\t\t\t\t\\\n+\t  && GET_CODE (XEXP (X, 0)) == REG\t\t\t\t\\\n+          && REGNO (XEXP (X, 0)) == STACK_POINTER_REGNUM\t\t\\\n \t  && GET_CODE (XEXP (X, 1)) == CONST_INT\t\t\t\\\n \t  && IN_RANGE (INTVAL (XEXP (X, 1)), 0, (1 <<  6) - 4))\t\t\\\n \tgoto LABEL;\t\t\t\t\t\t\t\\\n       if (GET_CODE (X) == PLUS\t\t\t\t\t\t\\\n \t  && ((MODE) == SImode || (MODE) == SFmode)\t\t\t\\\n-\t  && GET_CODE (XEXP (X, 0)) == REG \\\n-          && (REGNO (XEXP (X, 0)) == FRAME_POINTER_REGNUM \\\n-           || REGNO (XEXP (X, 0)) == ARG_POINTER_REGNUM) \\\n+\t  && GET_CODE (XEXP (X, 0)) == REG\t\t\t\t\\\n+          && (REGNO (XEXP (X, 0)) == FRAME_POINTER_REGNUM\t\t\\\n+\t      || REGNO (XEXP (X, 0)) == ARG_POINTER_REGNUM)\t\t\\\n \t  && GET_CODE (XEXP (X, 1)) == CONST_INT\t\t\t\\\n \t  && IN_RANGE (INTVAL (XEXP (X, 1)), -(1 << 9), (1 <<  9) - 4))\t\\\n         goto LABEL;\t\t\t\t\t\t\t\\"}]}