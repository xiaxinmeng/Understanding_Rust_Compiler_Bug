{"sha": "1041111f19849da29117a0e962ce7ad5262a4403", "node_id": "C_kwDOANBUbNoAKDEwNDExMTFmMTk4NDlkYTI5MTE3YTBlOTYyY2U3YWQ1MjYyYTQ0MDM", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2020-07-14T06:45:32Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-09-23T09:05:02Z"}, "message": "AVX512FP16: Add expander for fmahf4\n\ngcc/ChangeLog:\n\n\t* config/i386/sse.md (FMAMODEM): extend to handle FP16.\n\t(VFH_SF_AVX512VL): Extend to handle HFmode.\n\t(VF_SF_AVX512VL): Deleted.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/i386/avx512fp16-fma-1.c: New test.\n\t* gcc.target/i386/avx512fp16vl-fma-1.c: New test.\n\t* gcc.target/i386/avx512fp16vl-fma-vectorize-1.c: New test.", "tree": {"sha": "3166e0f85f41172131e95375d0caf072755b9973", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3166e0f85f41172131e95375d0caf072755b9973"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1041111f19849da29117a0e962ce7ad5262a4403", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1041111f19849da29117a0e962ce7ad5262a4403", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1041111f19849da29117a0e962ce7ad5262a4403", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1041111f19849da29117a0e962ce7ad5262a4403/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb8d916eef53327d922f5301bc2ce29735fb7e24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb8d916eef53327d922f5301bc2ce29735fb7e24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb8d916eef53327d922f5301bc2ce29735fb7e24"}], "stats": {"total": 195, "additions": 190, "deletions": 5}, "files": [{"sha": "1ca95984afc6b7430b89f6344f72b26c17474a15", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1041111f19849da29117a0e962ce7ad5262a4403/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1041111f19849da29117a0e962ce7ad5262a4403/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=1041111f19849da29117a0e962ce7ad5262a4403", "patch": "@@ -4650,7 +4650,11 @@\n    (V8SF \"TARGET_FMA || TARGET_FMA4 || TARGET_AVX512VL\")\n    (V4DF \"TARGET_FMA || TARGET_FMA4 || TARGET_AVX512VL\")\n    (V16SF \"TARGET_AVX512F\")\n-   (V8DF \"TARGET_AVX512F\")])\n+   (V8DF \"TARGET_AVX512F\")\n+   (HF \"TARGET_AVX512FP16\")\n+   (V8HF \"TARGET_AVX512FP16 && TARGET_AVX512VL\")\n+   (V16HF \"TARGET_AVX512FP16 && TARGET_AVX512VL\")\n+   (V32HF \"TARGET_AVX512FP16\")])\n \n (define_expand \"fma<mode>4\"\n   [(set (match_operand:FMAMODEM 0 \"register_operand\")\n@@ -4758,14 +4762,11 @@\n    (set_attr \"mode\" \"<MODE>\")])\n \n ;; Suppose AVX-512F as baseline\n-(define_mode_iterator VF_SF_AVX512VL\n-  [SF V16SF (V8SF \"TARGET_AVX512VL\") (V4SF \"TARGET_AVX512VL\")\n-   DF V8DF (V4DF \"TARGET_AVX512VL\") (V2DF \"TARGET_AVX512VL\")])\n-\n (define_mode_iterator VFH_SF_AVX512VL\n   [(V32HF \"TARGET_AVX512FP16\")\n    (V16HF \"TARGET_AVX512FP16 && TARGET_AVX512VL\")\n    (V8HF \"TARGET_AVX512FP16 && TARGET_AVX512VL\")\n+   (HF \"TARGET_AVX512FP16\")\n    SF V16SF (V8SF \"TARGET_AVX512VL\") (V4SF \"TARGET_AVX512VL\")\n    DF V8DF (V4DF \"TARGET_AVX512VL\") (V2DF \"TARGET_AVX512VL\")])\n "}, {"sha": "d78d76298388b981c6c67ae5655289d933f05f69", "filename": "gcc/testsuite/gcc.target/i386/avx512fp16-fma-1.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1041111f19849da29117a0e962ce7ad5262a4403/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512fp16-fma-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1041111f19849da29117a0e962ce7ad5262a4403/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512fp16-fma-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512fp16-fma-1.c?ref=1041111f19849da29117a0e962ce7ad5262a4403", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Ofast -mavx512fp16\" } */\n+\n+typedef _Float16 v32hf __attribute__ ((__vector_size__ (64)));\n+\n+_Float16\n+foo1 (_Float16 a, _Float16 b, _Float16 c)\n+{\n+  return a * b + c;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132sh\\[^\\n\\r\\]*xmm\\[0-9\\]\" 1 } } */\n+\n+_Float16\n+foo2 (_Float16 a, _Float16 b, _Float16 c)\n+{\n+  return -a * b + c;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vfnmadd132sh\\[^\\n\\r\\]*xmm\\[0-9\\]\" 1 } } */\n+\n+_Float16\n+foo3 (_Float16 a, _Float16 b, _Float16 c)\n+{\n+  return a * b - c;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vfmsub132sh\\[^\\n\\r\\]*xmm\\[0-9\\]\" 1 } } */\n+\n+_Float16\n+foo4 (_Float16 a, _Float16 b, _Float16 c)\n+{\n+  return -a * b - c;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vfnmsub132sh\\[^\\n\\r\\]*xmm\\[0-9\\]\" 1 } } */\n+\n+v32hf\n+foo5 (v32hf a, v32hf b, v32hf c)\n+{\n+  return a * b + c;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132ph\\[^\\n\\r\\]*zmm\\[0-9\\]\" 1 } } */\n+\n+v32hf\n+foo6 (v32hf a, v32hf b, v32hf c)\n+{\n+  return -a * b + c;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vfnmadd132ph\\[^\\n\\r\\]*zmm\\[0-9\\]\" 1 } } */\n+\n+v32hf\n+foo7 (v32hf a, v32hf b, v32hf c)\n+{\n+  return a * b - c;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vfmsub132ph\\[^\\n\\r\\]*zmm\\[0-9\\]\" 1 } } */\n+\n+v32hf\n+foo8 (v32hf a, v32hf b, v32hf c)\n+{\n+  return -a * b - c;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vfnmsub132ph\\[^\\n\\r\\]*zmm\\[0-9\\]\" 1 } } */\n+"}, {"sha": "1a832f37d6ca38284ffb569c0713af8b162e2213", "filename": "gcc/testsuite/gcc.target/i386/avx512fp16vl-fma-1.c", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1041111f19849da29117a0e962ce7ad5262a4403/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512fp16vl-fma-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1041111f19849da29117a0e962ce7ad5262a4403/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512fp16vl-fma-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512fp16vl-fma-1.c?ref=1041111f19849da29117a0e962ce7ad5262a4403", "patch": "@@ -0,0 +1,70 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Ofast -mavx512fp16 -mavx512vl\" } */\n+\n+typedef _Float16 v8hf __attribute__ ((__vector_size__ (16)));\n+typedef _Float16 v16hf __attribute__ ((__vector_size__ (32)));\n+\n+v8hf\n+foo1 (v8hf a, v8hf b, v8hf c)\n+{\n+  return a * b + c;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132ph\\[^\\n\\r\\]*xmm\\[0-9\\]\" 1 } } */\n+\n+v8hf\n+foo2 (v8hf a, v8hf b, v8hf c)\n+{\n+  return -a * b + c;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vfnmadd132ph\\[^\\n\\r\\]*xmm\\[0-9\\]\" 1 } } */\n+\n+v8hf\n+foo3 (v8hf a, v8hf b, v8hf c)\n+{\n+  return a * b - c;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vfmsub132ph\\[^\\n\\r\\]*xmm\\[0-9\\]\" 1 } } */\n+\n+v8hf\n+foo4 (v8hf a, v8hf b, v8hf c)\n+{\n+  return -a * b - c;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vfnmsub132ph\\[^\\n\\r\\]*xmm\\[0-9\\]\" 1 } } */\n+\n+v16hf\n+foo5 (v16hf a, v16hf b, v16hf c)\n+{\n+  return a * b + c;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132ph\\[^\\n\\r\\]*ymm\\[0-9\\]\" 1 } } */\n+\n+v16hf\n+foo6 (v16hf a, v16hf b, v16hf c)\n+{\n+  return -a * b + c;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vfnmadd132ph\\[^\\n\\r\\]*ymm\\[0-9\\]\" 1 } } */\n+\n+v16hf\n+foo7 (v16hf a, v16hf b, v16hf c)\n+{\n+  return a * b - c;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vfmsub132ph\\[^\\n\\r\\]*ymm\\[0-9\\]\" 1 } } */\n+\n+v16hf\n+foo8 (v16hf a, v16hf b, v16hf c)\n+{\n+  return -a * b - c;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vfnmsub132ph\\[^\\n\\r\\]*ymm\\[0-9\\]\" 1 } } */\n+"}, {"sha": "d0b8bec34f1cda7d37c6e1fe9c72e8e50c3aadbc", "filename": "gcc/testsuite/gcc.target/i386/avx512fp16vl-fma-vectorize-1.c", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1041111f19849da29117a0e962ce7ad5262a4403/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512fp16vl-fma-vectorize-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1041111f19849da29117a0e962ce7ad5262a4403/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512fp16vl-fma-vectorize-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512fp16vl-fma-vectorize-1.c?ref=1041111f19849da29117a0e962ce7ad5262a4403", "patch": "@@ -0,0 +1,45 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Ofast -mavx512fp16 -mavx512vl\" } */\n+\n+typedef _Float16 v8hf __attribute__ ((__vector_size__ (16)));\n+typedef _Float16 v16hf __attribute__ ((__vector_size__ (32)));\n+\n+void\n+foo1 (_Float16* __restrict pa, _Float16* __restrict pb,\n+      _Float16* __restrict pc, _Float16* __restrict pd)\n+{\n+  for (int i = 0; i != 8; i++)\n+    pd[i] = pa[i] * pb[i] + pc[i];\n+}\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132ph\\[^\\n\\r\\]*xmm\\[0-9\\]\" 1 } } */\n+\n+void\n+foo2 (_Float16* __restrict pa, _Float16* __restrict pb,\n+      _Float16* __restrict pc, _Float16* __restrict pd)\n+{\n+    for (int i = 0; i != 8; i++)\n+    pd[i] = -pa[i] * pb[i] + pc[i];\n+}\n+\n+/* { dg-final { scan-assembler-times \"vfnmadd132ph\\[^\\n\\r\\]*xmm\\[0-9\\]\" 1 } } */\n+\n+void\n+foo3 (_Float16* __restrict pa, _Float16* __restrict pb,\n+      _Float16* __restrict pc, _Float16* __restrict pd)\n+{\n+  for (int i = 0; i != 8; i++)\n+    pd[i] = pa[i] * pb[i] - pc[i];\n+}\n+\n+/* { dg-final { scan-assembler-times \"vfmsub132ph\\[^\\n\\r\\]*xmm\\[0-9\\]\" 1 } } */\n+\n+void\n+foo4 (_Float16* __restrict pa, _Float16* __restrict pb,\n+      _Float16* __restrict pc, _Float16* __restrict pd)\n+{\n+  for (int i = 0; i != 8; i++)\n+    pd[i] = -pa[i] * pb[i] - pc[i];\n+}\n+\n+/* { dg-final { scan-assembler-times \"vfnmsub132ph\\[^\\n\\r\\]*xmm\\[0-9\\]\" 1 } } */"}]}