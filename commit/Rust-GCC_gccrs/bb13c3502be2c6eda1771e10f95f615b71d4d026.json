{"sha": "bb13c3502be2c6eda1771e10f95f615b71d4d026", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIxM2MzNTAyYmUyYzZlZGExNzcxZTEwZjk1ZjYxNWI3MWQ0ZDAyNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-10-03T20:32:44Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-10-03T20:32:44Z"}, "message": "* runtime/memory.c (allocate_size): Malloc 1 byte if size == 0.\n\nFrom-SVN: r104909", "tree": {"sha": "a71732c1bc92fbe913952fb458a564c313a1acb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a71732c1bc92fbe913952fb458a564c313a1acb4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb13c3502be2c6eda1771e10f95f615b71d4d026", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb13c3502be2c6eda1771e10f95f615b71d4d026", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb13c3502be2c6eda1771e10f95f615b71d4d026", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb13c3502be2c6eda1771e10f95f615b71d4d026/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "01406f868c6a0e1918ba13307e630219b33e2365", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01406f868c6a0e1918ba13307e630219b33e2365", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01406f868c6a0e1918ba13307e630219b33e2365"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "16bef477a50bf94d8edb839e41a85475547c5274", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb13c3502be2c6eda1771e10f95f615b71d4d026/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb13c3502be2c6eda1771e10f95f615b71d4d026/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=bb13c3502be2c6eda1771e10f95f615b71d4d026", "patch": "@@ -1,3 +1,7 @@\n+2005-10-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* runtime/memory.c (allocate_size): Malloc 1 byte if size == 0.\n+\n 2005-10-03  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR libfortran/19308"}, {"sha": "d52319f4f3aa07c2a089714ebbd004e6d5bf7b78", "filename": "libgfortran/runtime/memory.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb13c3502be2c6eda1771e10f95f615b71d4d026/libgfortran%2Fruntime%2Fmemory.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb13c3502be2c6eda1771e10f95f615b71d4d026/libgfortran%2Fruntime%2Fmemory.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fmemory.c?ref=bb13c3502be2c6eda1771e10f95f615b71d4d026", "patch": "@@ -182,7 +182,7 @@ allocate_size (void **mem, size_t size, GFC_INTEGER_4 * stat)\n   if (!mem)\n     runtime_error (\"Internal: NULL mem pointer in ALLOCATE.\");\n \n-  newmem = malloc (size);\n+  newmem = malloc (size ? size : 1);\n   if (!newmem)\n     {\n       if (stat)"}]}