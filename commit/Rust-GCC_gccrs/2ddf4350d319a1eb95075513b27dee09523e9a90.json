{"sha": "2ddf4350d319a1eb95075513b27dee09523e9a90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRkZjQzNTBkMzE5YTFlYjk1MDc1NTEzYjI3ZGVlMDk1MjNlOWE5MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-06-19T18:37:41Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-06-19T18:37:41Z"}, "message": "re PR c++/66585 (Internal compiler error when initialize field with lambda)\n\n\tPR c++/66585\n\t* pt.c (instantiate_class_template_1): Clear\n\tcp_unevaluated_operand and c_inhibit_evaluation_warnings.\n\nFrom-SVN: r224684", "tree": {"sha": "7a2145ee447eb80e37fa6eb1419696168d76664a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a2145ee447eb80e37fa6eb1419696168d76664a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ddf4350d319a1eb95075513b27dee09523e9a90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ddf4350d319a1eb95075513b27dee09523e9a90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ddf4350d319a1eb95075513b27dee09523e9a90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ddf4350d319a1eb95075513b27dee09523e9a90/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "62245e6f7ed68c9c387418827612d719fdc63830", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62245e6f7ed68c9c387418827612d719fdc63830", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62245e6f7ed68c9c387418827612d719fdc63830"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "080d3e11e79ff1c79b21f1b18ccbcba9e92bbb5f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ddf4350d319a1eb95075513b27dee09523e9a90/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ddf4350d319a1eb95075513b27dee09523e9a90/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2ddf4350d319a1eb95075513b27dee09523e9a90", "patch": "@@ -1,3 +1,9 @@\n+2015-06-18  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/66585\n+\t* pt.c (instantiate_class_template_1): Clear\n+\tcp_unevaluated_operand and c_inhibit_evaluation_warnings.\n+\n 2015-06-19  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/65880"}, {"sha": "efb90e46f0fe1bed2c0f769585cb5f2623d5165a", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ddf4350d319a1eb95075513b27dee09523e9a90/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ddf4350d319a1eb95075513b27dee09523e9a90/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=2ddf4350d319a1eb95075513b27dee09523e9a90", "patch": "@@ -9215,12 +9215,20 @@ instantiate_class_template_1 (tree type)\n      it now.  */\n   push_deferring_access_checks (dk_no_deferred);\n \n+  int saved_unevaluated_operand = cp_unevaluated_operand;\n+  int saved_inhibit_evaluation_warnings = c_inhibit_evaluation_warnings;\n+\n   fn_context = decl_function_context (TYPE_MAIN_DECL (type));\n   /* Also avoid push_to_top_level for a lambda in an NSDMI.  */\n   if (!fn_context && LAMBDA_TYPE_P (type) && TYPE_CLASS_SCOPE_P (type))\n     fn_context = error_mark_node;\n   if (!fn_context)\n     push_to_top_level ();\n+  else\n+    {\n+      cp_unevaluated_operand = 0;\n+      c_inhibit_evaluation_warnings = 0;\n+    }\n   /* Use #pragma pack from the template context.  */\n   saved_maximum_field_alignment = maximum_field_alignment;\n   maximum_field_alignment = TYPE_PRECISION (pattern);\n@@ -9636,6 +9644,14 @@ instantiate_class_template_1 (tree type)\n \t}\n     }\n \n+  if (fn_context)\n+    {\n+      /* Restore these before substituting into the lambda capture\n+\t initializers.  */\n+      cp_unevaluated_operand = saved_unevaluated_operand;\n+      c_inhibit_evaluation_warnings = saved_inhibit_evaluation_warnings;\n+    }\n+\n   if (tree expr = CLASSTYPE_LAMBDA_EXPR (type))\n     {\n       tree decl = lambda_function (type);"}, {"sha": "8c0adfad45f557839f7769dfd9caaee3b66cfd63", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-nsdmi8.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ddf4350d319a1eb95075513b27dee09523e9a90/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-nsdmi8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ddf4350d319a1eb95075513b27dee09523e9a90/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-nsdmi8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-nsdmi8.C?ref=2ddf4350d319a1eb95075513b27dee09523e9a90", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/66585\n+// { dg-do compile { target c++11 } }\n+\n+class A {\n+  template <typename, typename> using _Requires = int;\n+\n+public:\n+  template <typename _Functor, typename = _Requires<_Functor, void>>\n+  A(_Functor);\n+};\n+template <class T> class B {\n+  A f = [](T) {};\n+};\n+\n+B<int> a;"}]}