{"sha": "e4fd5b87bf37f1a58194897e10fae8132470f84a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRmZDViODdiZjM3ZjFhNTgxOTQ4OTdlMTBmYWU4MTMyNDcwZjg0YQ==", "commit": {"author": {"name": "Douglas Gregor", "email": "doug.gregor@gmail.com", "date": "2007-11-07T23:37:29Z"}, "committer": {"name": "Doug Gregor", "email": "dgregor@gcc.gnu.org", "date": "2007-11-07T23:37:29Z"}, "message": "re PR c++/33045 ([c++0x] Incorrect decltype result for function calls.)\n\n2007-11-07  Douglas Gregor  <doug.gregor@gmail.com>\n\n\tPR c++/33045\n\tPR c++/33837\n\tPR c++/33838\n\t* semantics.c (finish_decltype_type): See through INDIRECT_REFs.\n\tBe careful with ERROR_MARK_NODEs.\n\t* parser.c (cp_parser_check_access_in_redeclaration): Handle NULL\n\targument.\n\t\n2007-11-07  Douglas Gregor  <doug.gregor@gmail.com>\n\n\tPR c++/33045\n\tPR c++/33837\n\tPR c++/33838\n\t* g++.dg/cpp0x/decltype-33837.C: New.\n\t* g++.dg/cpp0x/decltype-refbug.C: New.\n\t* g++.dg/cpp0x/decltype-33838.C: New.\n\nFrom-SVN: r129975", "tree": {"sha": "574bfa372c1500897f79a6972c7271c01ea484be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/574bfa372c1500897f79a6972c7271c01ea484be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4fd5b87bf37f1a58194897e10fae8132470f84a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4fd5b87bf37f1a58194897e10fae8132470f84a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4fd5b87bf37f1a58194897e10fae8132470f84a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4fd5b87bf37f1a58194897e10fae8132470f84a/comments", "author": {"login": "DougGregor", "id": 989428, "node_id": "MDQ6VXNlcjk4OTQyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/989428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DougGregor", "html_url": "https://github.com/DougGregor", "followers_url": "https://api.github.com/users/DougGregor/followers", "following_url": "https://api.github.com/users/DougGregor/following{/other_user}", "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}", "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions", "organizations_url": "https://api.github.com/users/DougGregor/orgs", "repos_url": "https://api.github.com/users/DougGregor/repos", "events_url": "https://api.github.com/users/DougGregor/events{/privacy}", "received_events_url": "https://api.github.com/users/DougGregor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4a54716a857f614647b249bc91345f58c18d2c68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a54716a857f614647b249bc91345f58c18d2c68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a54716a857f614647b249bc91345f58c18d2c68"}], "stats": {"total": 67, "additions": 65, "deletions": 2}, "files": [{"sha": "a294e7626202017edd168f0685450e72d98ca4e3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4fd5b87bf37f1a58194897e10fae8132470f84a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4fd5b87bf37f1a58194897e10fae8132470f84a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e4fd5b87bf37f1a58194897e10fae8132470f84a", "patch": "@@ -1,3 +1,13 @@\n+2007-11-07  Douglas Gregor  <doug.gregor@gmail.com>\n+\n+\tPR c++/33045\n+\tPR c++/33837\n+\tPR c++/33838\n+\t* semantics.c (finish_decltype_type): See through INDIRECT_REFs.\n+\tBe careful with ERROR_MARK_NODEs.\n+\t* parser.c (cp_parser_check_access_in_redeclaration): Handle NULL\n+\targument.\n+\n 2007-11-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/33501"}, {"sha": "41cb26e5e0fd862ecd00f9656ef2962dec7502fb", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4fd5b87bf37f1a58194897e10fae8132470f84a/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4fd5b87bf37f1a58194897e10fae8132470f84a/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=e4fd5b87bf37f1a58194897e10fae8132470f84a", "patch": "@@ -17858,7 +17858,7 @@ cp_parser_check_class_key (enum tag_types class_key, tree type)\n static void\n cp_parser_check_access_in_redeclaration (tree decl)\n {\n-  if (!CLASS_TYPE_P (TREE_TYPE (decl)))\n+  if (!decl || !CLASS_TYPE_P (TREE_TYPE (decl)))\n     return;\n \n   if ((TREE_PRIVATE (decl)"}, {"sha": "a27b33e4911490b61083ea64ca83573f36ae3653", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4fd5b87bf37f1a58194897e10fae8132470f84a/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4fd5b87bf37f1a58194897e10fae8132470f84a/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=e4fd5b87bf37f1a58194897e10fae8132470f84a", "patch": "@@ -4049,6 +4049,9 @@ finish_decltype_type (tree expr, bool id_expression_or_member_access_p)\n   tree orig_expr = expr;\n   tree type;\n \n+  if (!expr || error_operand_p (expr))\n+    return error_mark_node;\n+\n   if (type_dependent_expression_p (expr))\n     {\n       type = make_aggr_type (DECLTYPE_TYPE);\n@@ -4147,6 +4150,15 @@ finish_decltype_type (tree expr, bool id_expression_or_member_access_p)\n     {\n       tree fndecl;\n \n+      /* Expressions of reference type are sometimes wrapped in\n+         INDIRECT_REFs.  INDIRECT_REFs are just internal compiler\n+         representation, not part of the language, so we have to look\n+         through them.  */\n+      if (TREE_CODE (expr) == INDIRECT_REF\n+          && TREE_CODE (TREE_TYPE (TREE_OPERAND (expr, 0)))\n+  \t  == REFERENCE_TYPE)\n+        expr = TREE_OPERAND (expr, 0);\n+\n       if (TREE_CODE (expr) == CALL_EXPR\n           && (fndecl = get_callee_fndecl (expr))\n           && (fndecl != error_mark_node))\n@@ -4176,7 +4188,9 @@ finish_decltype_type (tree expr, bool id_expression_or_member_access_p)\n                  decltype(e) is defined as T&, otherwise decltype(e) is\n                  defined as T.  */\n               type = TREE_TYPE (expr);\n-              if (expr == current_class_ptr)\n+              if (type == error_mark_node)\n+                return error_mark_node;\n+              else if (expr == current_class_ptr)\n                 /* If the expression is just \"this\", we want the\n                    cv-unqualified pointer for the \"this\" type.  */\n                 type = TYPE_MAIN_VARIANT (type);"}, {"sha": "063d20f97ce13ae48c52823cbac7cff82bd81d47", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4fd5b87bf37f1a58194897e10fae8132470f84a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4fd5b87bf37f1a58194897e10fae8132470f84a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e4fd5b87bf37f1a58194897e10fae8132470f84a", "patch": "@@ -1,3 +1,12 @@\n+2007-11-07  Douglas Gregor  <doug.gregor@gmail.com>\n+\n+\tPR c++/33045\n+\tPR c++/33837\n+\tPR c++/33838\n+\t* g++.dg/cpp0x/decltype-33837.C: New.\n+\t* g++.dg/cpp0x/decltype-refbug.C: New.\n+\t* g++.dg/cpp0x/decltype-33838.C: New.\n+\n 2007-11-07  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* gcc.c-torture/compile/20071107-1.c: New test."}, {"sha": "35689fbc279352fcc15d2a5f435be2a2b645b64a", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype-33837.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4fd5b87bf37f1a58194897e10fae8132470f84a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-33837.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4fd5b87bf37f1a58194897e10fae8132470f84a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-33837.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-33837.C?ref=e4fd5b87bf37f1a58194897e10fae8132470f84a", "patch": "@@ -0,0 +1,7 @@\n+// { dg-options -std=c++0x }\n+// PR c++/33837\n+void foo()\n+{\n+  __decltype (A::foo()); // { dg-error \"was not declared|expected initializer\" }\n+  __decltype (B); // { dg-error \"was not declared\" }\n+}"}, {"sha": "260a0d1cf09c55bf1b32ae0adcc5300e60d0b261", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype-33838.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4fd5b87bf37f1a58194897e10fae8132470f84a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-33838.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4fd5b87bf37f1a58194897e10fae8132470f84a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-33838.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-33838.C?ref=e4fd5b87bf37f1a58194897e10fae8132470f84a", "patch": "@@ -0,0 +1,6 @@\n+// { dg-options -std=c++0x }\n+// PR c++/33838\n+template<typename T> struct A\n+{\n+  __decltype (T* foo()); // { dg-error \"expected|no arguments|accept\" }\n+};"}, {"sha": "8e3c824072450661469b43d6d1740b3a209a0712", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype-refbug.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4fd5b87bf37f1a58194897e10fae8132470f84a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-refbug.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4fd5b87bf37f1a58194897e10fae8132470f84a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-refbug.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-refbug.C?ref=e4fd5b87bf37f1a58194897e10fae8132470f84a", "patch": "@@ -0,0 +1,17 @@\n+// { dg-options \"-std=c++0x\" }\n+// PR c++/33045\n+int && f ();\n+\n+template<typename T, typename U>\n+struct is_same\n+{\n+  static const bool value = false;\n+};\n+\n+template<typename T>\n+struct is_same<T, T>\n+{\n+  static const bool value = true;\n+};\n+\n+static_assert(is_same<decltype(f()), int&&>::value, \"decltype of rvalue reference\");"}]}