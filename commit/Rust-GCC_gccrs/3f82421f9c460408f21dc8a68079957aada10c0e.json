{"sha": "3f82421f9c460408f21dc8a68079957aada10c0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Y4MjQyMWY5YzQ2MDQwOGYyMWRjOGE2ODA3OTk1N2FhZGExMGMwZQ==", "commit": {"author": {"name": "Pat Haugen", "email": "pthaugen@us.ibm.com", "date": "2011-02-11T20:52:55Z"}, "committer": {"name": "Pat Haugen", "email": "pthaugen@gcc.gnu.org", "date": "2011-02-11T20:52:55Z"}, "message": "re PR rtl-optimization/47614 (cpu2000 benchmark 301.apsi fails with revision 169782)\n\n\tPR rtl-optimization/47614\n\t* rtl.h (check_for_inc_dec): Declare.\n\t* dse.c (check_for_inc_dec): Externalize...\n\t* postreload.c (reload_cse_simplify): ...use it before deleting stmt.\n\t(reload_cse_simplify_operands): Don't simplify opnds with side effects.\n\n\t* testsuite/gfortran.dg/pr47614.f: New.\n\nFrom-SVN: r170059", "tree": {"sha": "7fab30b82e8b3e6630893a048325c907c25d1e18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7fab30b82e8b3e6630893a048325c907c25d1e18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f82421f9c460408f21dc8a68079957aada10c0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f82421f9c460408f21dc8a68079957aada10c0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f82421f9c460408f21dc8a68079957aada10c0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f82421f9c460408f21dc8a68079957aada10c0e/comments", "author": null, "committer": null, "parents": [{"sha": "f33d8408d08064367b0f8d9d29c46dbd1585f95e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f33d8408d08064367b0f8d9d29c46dbd1585f95e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f33d8408d08064367b0f8d9d29c46dbd1585f95e"}], "stats": {"total": 59, "additions": 58, "deletions": 1}, "files": [{"sha": "92f3ddb9dfd1ced6093d1b46cf52e7cb9cc407dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f82421f9c460408f21dc8a68079957aada10c0e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f82421f9c460408f21dc8a68079957aada10c0e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3f82421f9c460408f21dc8a68079957aada10c0e", "patch": "@@ -1,3 +1,11 @@\n+2011-02-11  Pat Haugen <pthaugen@us.ibm.com>\n+\n+\tPR rtl-optimization/47614\n+\t* rtl.h (check_for_inc_dec): Declare.\n+\t* dse.c (check_for_inc_dec): Externalize...\n+\t* postreload.c (reload_cse_simplify): ...use it before deleting stmt.\n+\t(reload_cse_simplify_operands): Don't simplify opnds with side effects.\n+\n 2011-02-11  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR driver/47678"}, {"sha": "8e9b6454e390ff7caba8a55e6c34470b27c1ccfd", "filename": "gcc/dse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f82421f9c460408f21dc8a68079957aada10c0e/gcc%2Fdse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f82421f9c460408f21dc8a68079957aada10c0e/gcc%2Fdse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdse.c?ref=3f82421f9c460408f21dc8a68079957aada10c0e", "patch": "@@ -830,7 +830,7 @@ emit_inc_dec_insn_before (rtx mem ATTRIBUTE_UNUSED,\n /* Before we delete INSN, make sure that the auto inc/dec, if it is\n    there, is split into a separate insn.  */\n \n-static void\n+void\n check_for_inc_dec (rtx insn)\n {\n   rtx note = find_reg_note (insn, REG_INC, NULL_RTX);"}, {"sha": "a4234102301433b9c6a9f299dcd3f01a2b487853", "filename": "gcc/postreload.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f82421f9c460408f21dc8a68079957aada10c0e/gcc%2Fpostreload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f82421f9c460408f21dc8a68079957aada10c0e/gcc%2Fpostreload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload.c?ref=3f82421f9c460408f21dc8a68079957aada10c0e", "patch": "@@ -112,6 +112,7 @@ reload_cse_simplify (rtx insn, rtx testreg)\n \t  if (REG_P (value)\n \t      && ! REG_FUNCTION_VALUE_P (value))\n \t    value = 0;\n+\t  check_for_inc_dec (insn);\n \t  delete_insn_and_edges (insn);\n \t  return;\n \t}\n@@ -163,6 +164,7 @@ reload_cse_simplify (rtx insn, rtx testreg)\n \n       if (i < 0)\n \t{\n+\t  check_for_inc_dec (insn);\n \t  delete_insn_and_edges (insn);\n \t  /* We're done with this insn.  */\n \t  return;\n@@ -476,6 +478,8 @@ reload_cse_simplify_operands (rtx insn, rtx testreg)\n \t    continue;\n \t}\n #endif /* LOAD_EXTEND_OP */\n+      if (side_effects_p (op))\n+\tcontinue;\n       v = cselib_lookup (op, recog_data.operand_mode[i], 0, VOIDmode);\n       if (! v)\n \tcontinue;"}, {"sha": "e5c6e38302055b7fb4096ba2c5d3cba6d78b00bb", "filename": "gcc/rtl.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f82421f9c460408f21dc8a68079957aada10c0e/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f82421f9c460408f21dc8a68079957aada10c0e/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=3f82421f9c460408f21dc8a68079957aada10c0e", "patch": "@@ -2302,6 +2302,9 @@ extern int cse_main (rtx, int);\n extern int exp_equiv_p (const_rtx, const_rtx, int, bool);\n extern unsigned hash_rtx (const_rtx x, enum machine_mode, int *, int *, bool);\n \n+/* In dse.c */\n+extern void check_for_inc_dec (rtx insn);\n+\n /* In jump.c */\n extern int comparison_dominates_p (enum rtx_code, enum rtx_code);\n extern int condjump_p (const_rtx);"}, {"sha": "d680a16d3097d92c8411905c90fc56cbbe1b0c17", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f82421f9c460408f21dc8a68079957aada10c0e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f82421f9c460408f21dc8a68079957aada10c0e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3f82421f9c460408f21dc8a68079957aada10c0e", "patch": "@@ -1,3 +1,8 @@\n+2011-02-11  Pat Haugen <pthaugen@us.ibm.com>\n+\n+\tPR rtl-optimization/47614\n+\t* gfortran.dg/pr47614.f: New.\n+\n 2011-02-11  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR driver/47678"}, {"sha": "52f14c0c17b091869c62b64d40fd0972166dcaad", "filename": "gcc/testsuite/gfortran.dg/pr47614.f", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f82421f9c460408f21dc8a68079957aada10c0e/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr47614.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f82421f9c460408f21dc8a68079957aada10c0e/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr47614.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr47614.f?ref=3f82421f9c460408f21dc8a68079957aada10c0e", "patch": "@@ -0,0 +1,37 @@\n+! { dg-do run { target { powerpc*-*-* } } }\n+! { dg-skip-if \"\" { powerpc*-*-darwin* } { \"*\" } { \"\" } }\n+! { dg-options \"-O3 -funroll-loops -ffast-math -mcpu=power4\" }\n+\n+\n+      SUBROUTINE SFCPAR(ZET,NZ,ZMH,TSL,TMES)\n+      IMPLICIT REAL*8 (A-H, O-Z)\n+      REAL*8 ZET(*)\n+\n+      ZS=MAX(TSL*ZMH,ZET(2))\n+\n+      DO 10 K=2,NZ\n+         KLEV=K-1\n+         IF(ZS.LE.ZET(K)) GO TO 20\n+ 10   CONTINUE\n+\n+ 20   CONTINUE\n+      TMES=ZET(KLEV+1)\n+      \n+      RETURN\n+      END\n+\n+      program pr47614\n+\treal*8 ar1(10),d1,d2,d3\n+\tinteger i\n+\n+\td1 = 2.0\n+\td2 = 3.0\n+\td3 = 3.0\n+\tdo 50 i=1,10\n+\t  ar1(i) = d1\n+\t  d1 = d1 + 2.0\n+ 50\tcontinue\n+\n+\tcall sfcpar(ar1,10,d2,d3,d1)\n+\tif (d1.ne.10.0) call abort()\n+      end"}]}