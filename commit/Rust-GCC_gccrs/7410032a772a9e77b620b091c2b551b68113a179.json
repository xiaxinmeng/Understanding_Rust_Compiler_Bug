{"sha": "7410032a772a9e77b620b091c2b551b68113a179", "node_id": "C_kwDOANBUbNoAKDc0MTAwMzJhNzcyYTllNzdiNjIwYjA5MWMyYjU1MWI2ODExM2ExNzk", "commit": {"author": {"name": "Eugene Rozenfeld", "email": "erozen@microsoft.com", "date": "2022-12-07T01:05:18Z"}, "committer": {"name": "Eugene Rozenfeld", "email": "erozen@microsoft.com", "date": "2022-12-08T19:52:10Z"}, "message": "Fix count comparison in ipa-cp\n\nThe existing comparison was incorrect for non-PRECISE counts\n(e.g., AFDO): we could end up with a 0 base_count, which could\nlead to asserts, e.g., in good_cloning_opportunity_p.\n\nTested on x86_64-pc-linux-gnu.\n\ngcc/ChangeLog:\n\tPR ipa/108000\n\t* ipa-cp.cc (ipcp_propagate_stage): Fix profile count comparison\n\ngcc/testsuite\n\t* gcc.dg/tree-prof/pr108000.c: Regression test", "tree": {"sha": "0f771e1f43d98e4e0110f389de513fb47a002bce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f771e1f43d98e4e0110f389de513fb47a002bce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7410032a772a9e77b620b091c2b551b68113a179", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7410032a772a9e77b620b091c2b551b68113a179", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7410032a772a9e77b620b091c2b551b68113a179", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7410032a772a9e77b620b091c2b551b68113a179/comments", "author": {"login": "erozenfeld", "id": 10624223, "node_id": "MDQ6VXNlcjEwNjI0MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/10624223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erozenfeld", "html_url": "https://github.com/erozenfeld", "followers_url": "https://api.github.com/users/erozenfeld/followers", "following_url": "https://api.github.com/users/erozenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/erozenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/erozenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erozenfeld/subscriptions", "organizations_url": "https://api.github.com/users/erozenfeld/orgs", "repos_url": "https://api.github.com/users/erozenfeld/repos", "events_url": "https://api.github.com/users/erozenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/erozenfeld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erozenfeld", "id": 10624223, "node_id": "MDQ6VXNlcjEwNjI0MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/10624223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erozenfeld", "html_url": "https://github.com/erozenfeld", "followers_url": "https://api.github.com/users/erozenfeld/followers", "following_url": "https://api.github.com/users/erozenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/erozenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/erozenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erozenfeld/subscriptions", "organizations_url": "https://api.github.com/users/erozenfeld/orgs", "repos_url": "https://api.github.com/users/erozenfeld/repos", "events_url": "https://api.github.com/users/erozenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/erozenfeld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ddfe794405a514824382e96b1047d3195af23cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ddfe794405a514824382e96b1047d3195af23cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ddfe794405a514824382e96b1047d3195af23cc"}], "stats": {"total": 95, "additions": 94, "deletions": 1}, "files": [{"sha": "cc031ebed0fecfc49760c7f126f1300db856994e", "filename": "gcc/ipa-cp.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7410032a772a9e77b620b091c2b551b68113a179/gcc%2Fipa-cp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7410032a772a9e77b620b091c2b551b68113a179/gcc%2Fipa-cp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.cc?ref=7410032a772a9e77b620b091c2b551b68113a179", "patch": "@@ -4225,7 +4225,7 @@ ipcp_propagate_stage (class ipa_topo_info *topo)\n \tfor (cgraph_edge *cs = node->callees; cs; cs = cs->next_callee)\n \t  {\n \t    profile_count count = cs->count.ipa ();\n-\t    if (!(count > profile_count::zero ()))\n+\t    if (!count.nonzero_p ())\n \t      continue;\n \n \t    enum availability avail;"}, {"sha": "c59ea799748e0f5ed06fa7c9d60298954916fc58", "filename": "gcc/testsuite/gcc.dg/tree-prof/pr108000.c", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7410032a772a9e77b620b091c2b551b68113a179/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr108000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7410032a772a9e77b620b091c2b551b68113a179/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr108000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr108000.c?ref=7410032a772a9e77b620b091c2b551b68113a179", "patch": "@@ -0,0 +1,93 @@\n+/* { dg-options \"-O2\" } */\n+\n+#include <stdlib.h>\n+\n+volatile int flag;\n+const int array_size = 10;\n+int* array;\n+int iterations = 10000000;\n+\n+#define BAR(num) \\\n+int __attribute__((noinline)) \\\n+bar##num (int i, int j) \\\n+{ \\\n+  if (i == 0) \\\n+    return 2*num - 1; \\\n+  else \\\n+    return 2*num; \\\n+}\n+\n+BAR(1)\n+BAR(2)\n+BAR(3)\n+BAR(4)\n+BAR(5)\n+BAR(6)\n+BAR(7)\n+BAR(8)\n+BAR(9)\n+BAR(10)\n+BAR(11)\n+BAR(12)\n+BAR(13)\n+BAR(14)\n+BAR(15)\n+BAR(16)\n+BAR(17)\n+BAR(18)\n+BAR(19)\n+\n+int __attribute__((noinline))\n+foo ()\n+{\n+  switch (flag)\n+  {\n+\tcase 1:\n+\t\treturn bar1 (0, 0);\n+\tcase 2:\n+\t\treturn bar2 (0, 0);\n+\tcase 3:\n+\t\treturn bar3 (0, 0);\n+\tcase 4:\n+\t\treturn bar4 (0, 0);\n+\tcase 5:\n+\t\treturn bar5 (0, 0);\n+\tcase 6:\n+\t\treturn bar6 (0, 0);\n+\tcase 7:\n+\t\treturn bar7 (0, 0);\n+\tcase 8:\n+\t\treturn bar8 (0, 0);\n+\tcase 9:\n+\t\treturn bar9 (0, 0);\n+\tcase 10:\n+\t\treturn bar10 (0, 0);\n+\tcase 11:\n+\t\treturn bar11 (0, 0);\n+\tcase 12:\n+\t\treturn bar12 (0, 0);\n+\tcase 13:\n+\t\treturn bar13 (0, 0);\n+\tcase 14:\n+\t\treturn bar14 (0, 0);\n+\tcase 15:\n+\t\treturn bar15 (0, 0);\n+\tcase 16:\n+\t\treturn bar16 (0, 0);\n+\tcase 17:\n+\t\treturn bar17 (0, 0);\n+\tcase 18:\n+\t\treturn bar18 (0, 0);\n+\tdefault:\n+\t\treturn bar19(0, 0);\n+  }\n+}\n+\n+int\n+main ()\n+{\n+  flag = 0;\n+  array = calloc(array_size, sizeof(int));\n+  for (int i = 0, j = 0; i < iterations; ++i, j = (j + 1) % 10)\n+    array[j] = foo ();\n+}"}]}