{"sha": "ffa45bed5e9211c7d2ee242f63fd6c3118248177", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZhNDViZWQ1ZTkyMTFjN2QyZWUyNDJmNjNmZDZjMzExODI0ODE3Nw==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-04-30T09:08:15Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-04-30T09:08:15Z"}, "message": "Typecheck the default type on TypeParam", "tree": {"sha": "1bb611fac5beb16efedec02339b18402b8c4a93a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bb611fac5beb16efedec02339b18402b8c4a93a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffa45bed5e9211c7d2ee242f63fd6c3118248177", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffa45bed5e9211c7d2ee242f63fd6c3118248177", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffa45bed5e9211c7d2ee242f63fd6c3118248177", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffa45bed5e9211c7d2ee242f63fd6c3118248177/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "682cae549a4eb29857f49fe72cf130e2ee577d8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/682cae549a4eb29857f49fe72cf130e2ee577d8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/682cae549a4eb29857f49fe72cf130e2ee577d8c"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "dbbc74397d156ad1d06d0cbf5f240ce8b008a275", "filename": "gcc/rust/hir/tree/rust-hir-item.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa45bed5e9211c7d2ee242f63fd6c3118248177/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa45bed5e9211c7d2ee242f63fd6c3118248177/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h?ref=ffa45bed5e9211c7d2ee242f63fd6c3118248177", "patch": "@@ -111,6 +111,12 @@ class TypeParam : public GenericParam\n \n   Identifier get_type_representation () const { return type_representation; }\n \n+  std::unique_ptr<Type> &get_type ()\n+  {\n+    rust_assert (type != nullptr);\n+    return type;\n+  }\n+\n protected:\n   // Clone function implementation as (not pure) virtual method\n   TypeParam *clone_generic_param_impl () const override"}, {"sha": "70b9cfae9b25d70a4467c501ffe3e71c8c7b90c2", "filename": "gcc/rust/typecheck/rust-hir-type-check-type.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa45bed5e9211c7d2ee242f63fd6c3118248177/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-type.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa45bed5e9211c7d2ee242f63fd6c3118248177/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-type.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-type.h?ref=ffa45bed5e9211c7d2ee242f63fd6c3118248177", "patch": "@@ -253,6 +253,11 @@ class TypeResolveGenericParam : public TypeCheckBase\n \n   void visit (HIR::TypeParam &param) override\n   {\n+    TyTy::BaseType *default_ty_param = nullptr;\n+    if (param.has_type ())\n+      {\n+\tdefault_ty_param = TypeCheckType::Resolve (param.get_type ().get ());\n+      }\n     resolved = new TyTy::ParamType (param.get_type_representation (),\n \t\t\t\t    param.get_mappings ().get_hirid (), param);\n   }"}]}