{"sha": "2f4f7de787e5844515d27b2269fc472f95a9916a", "node_id": "C_kwDOANBUbNoAKDJmNGY3ZGU3ODdlNTg0NDUxNWQyN2IyMjY5ZmM0NzJmOTVhOTkxNmE", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2022-03-11T20:51:34Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2022-05-24T16:05:07Z"}, "message": "x86: Document -mcet-switch\n\nWhen -fcf-protection=branch is used, the compiler will generate jump\ntables for switch statements where the indirect jump is prefixed with\nthe NOTRACK prefix, so it can jump to non-ENDBR targets.  Since the\nindirect jump targets are generated by the compiler and stored in\nread-only memory, this does not result in a direct loss of hardening.\nBut if the jump table index is attacker-controlled, the indirect jump\nmay not be constrained by CET.\n\nDocument -mcet-switch to generate jump tables for switch statements with\nENDBR and skip the NOTRACK prefix for indirect jump.  This option should\nbe used when the NOTRACK prefix is disabled.\n\n\tPR target/104816\n\t* config/i386/i386.opt: Remove Undocumented.\n\t* doc/invoke.texi: Document -mcet-switch.", "tree": {"sha": "c1fe8a2d06e4412c1dbaa7534c7c2bcc7e4862bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1fe8a2d06e4412c1dbaa7534c7c2bcc7e4862bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f4f7de787e5844515d27b2269fc472f95a9916a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f4f7de787e5844515d27b2269fc472f95a9916a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f4f7de787e5844515d27b2269fc472f95a9916a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f4f7de787e5844515d27b2269fc472f95a9916a/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cde52d3a2d02d037da53e6974d5e39021030b346", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cde52d3a2d02d037da53e6974d5e39021030b346", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cde52d3a2d02d037da53e6974d5e39021030b346"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "0dbaacb57ed2ff3be676c6250592ca842dd2f8a7", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f4f7de787e5844515d27b2269fc472f95a9916a/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f4f7de787e5844515d27b2269fc472f95a9916a/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=2f4f7de787e5844515d27b2269fc472f95a9916a", "patch": "@@ -1047,7 +1047,7 @@ Enable shadow stack built-in functions from Control-flow Enforcement\n Technology (CET).\n \n mcet-switch\n-Target Undocumented Var(flag_cet_switch) Init(0)\n+Target Var(flag_cet_switch) Init(0)\n Turn on CET instrumentation for switch statements that use a jump table and\n an indirect jump.\n "}, {"sha": "a2f85f0a4ead0298c7ed345cae6a356e7a0d4118", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f4f7de787e5844515d27b2269fc472f95a9916a/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f4f7de787e5844515d27b2269fc472f95a9916a/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=2f4f7de787e5844515d27b2269fc472f95a9916a", "patch": "@@ -1425,7 +1425,8 @@ See RS/6000 and PowerPC Options.\n -msse4a  -m3dnow  -m3dnowa  -mpopcnt  -mabm  -mbmi  -mtbm  -mfma4  -mxop @gol\n -madx  -mlzcnt  -mbmi2  -mfxsr  -mxsave  -mxsaveopt  -mrtm  -mhle  -mlwp @gol\n -mmwaitx  -mclzero  -mpku  -mthreads  -mgfni  -mvaes  -mwaitpkg @gol\n--mshstk -mmanual-endbr -mforce-indirect-call  -mavx512vbmi2 -mavx512bf16 -menqcmd @gol\n+-mshstk -mmanual-endbr -mcet-switch -mforce-indirect-call @gol\n+-mavx512vbmi2 -mavx512bf16 -menqcmd @gol\n -mvpclmulqdq  -mavx512bitalg  -mmovdiri  -mmovdir64b  -mavx512vpopcntdq @gol\n -mavx5124fmaps  -mavx512vnni  -mavx5124vnniw  -mprfchw  -mrdpid @gol\n -mrdseed  -msgx -mavx512vp2intersect -mserialize -mtsxldtrk@gol\n@@ -32724,6 +32725,17 @@ function attribute. This is useful when used with the option\n @option{-fcf-protection=branch} to control ENDBR insertion at the\n function entry.\n \n+@item -mcet-switch\n+@opindex mcet-switch\n+By default, CET instrumentation is turned off on switch statements that\n+use a jump table and indirect branch track is disabled.  Since jump\n+tables are stored in read-only memory, this does not result in a direct\n+loss of hardening.  But if the jump table index is attacker-controlled,\n+the indirect jump may not be constrained by CET.  This option turns on\n+CET instrumentation to enable indirect branch track for switch statements\n+with jump tables which leads to the jump targets reachable via any indirect\n+jumps.\n+\n @item -mcall-ms2sysv-xlogues\n @opindex mcall-ms2sysv-xlogues\n @opindex mno-call-ms2sysv-xlogues"}]}