{"sha": "08a53a2eda8886d406c497595d57ba09aaf5893e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhhNTNhMmVkYTg4ODZkNDA2YzQ5NzU5NWQ1N2JhMDlhYWY1ODkzZQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-10-12T11:20:35Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-10-12T11:20:35Z"}, "message": "Add missing return to uninitialized_default_construct_n\n\n\t* include/bits/stl_uninitialized.h\n\t(__uninitialized_default_novalue_n_1<true>): Add missing return.\n\t* testsuite/20_util/specialized_algorithms/memory_management_tools/\n\t1.cc: Check return values of uninitialized_xxx_n algorithms.\n\nFrom-SVN: r241033", "tree": {"sha": "454e01b4f7f05e44f72c7667dc6fa46326e4ae3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/454e01b4f7f05e44f72c7667dc6fa46326e4ae3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08a53a2eda8886d406c497595d57ba09aaf5893e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08a53a2eda8886d406c497595d57ba09aaf5893e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08a53a2eda8886d406c497595d57ba09aaf5893e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08a53a2eda8886d406c497595d57ba09aaf5893e/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40571365a0c2d084a8f30d0cd6969d8c15e89792", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40571365a0c2d084a8f30d0cd6969d8c15e89792", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40571365a0c2d084a8f30d0cd6969d8c15e89792"}], "stats": {"total": 40, "additions": 27, "deletions": 13}, "files": [{"sha": "c02bbf03a9a1d9225887ea094d226b55093dca69", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08a53a2eda8886d406c497595d57ba09aaf5893e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08a53a2eda8886d406c497595d57ba09aaf5893e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=08a53a2eda8886d406c497595d57ba09aaf5893e", "patch": "@@ -1,5 +1,10 @@\n 2016-10-12  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/stl_uninitialized.h\n+\t(__uninitialized_default_novalue_n_1<true>): Add missing return.\n+\t* testsuite/20_util/specialized_algorithms/memory_management_tools/\n+\t1.cc: Check return values of uninitialized_xxx_n algorithms.\n+\n \t* libsupc++/nested_exception.h (throw_with_nested): Remove return.\n \n \t* doc/xml/manual/intro.xml: Document LWG 2442 status."}, {"sha": "07370c90aaba21373f15d357a869d2f06888070d", "filename": "libstdc++-v3/include/bits/stl_uninitialized.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08a53a2eda8886d406c497595d57ba09aaf5893e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_uninitialized.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08a53a2eda8886d406c497595d57ba09aaf5893e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_uninitialized.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_uninitialized.h?ref=08a53a2eda8886d406c497595d57ba09aaf5893e", "patch": "@@ -705,8 +705,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       template<typename _ForwardIterator, typename _Size>\n \tstatic _ForwardIterator\n \t__uninit_default_novalue_n(_ForwardIterator __first, _Size __n)\n-\t{\n-\t}\n+\t{ return std::next(__first, __n); }\n     };\n \n   // __uninitialized_default_novalue"}, {"sha": "a86e61a2234f21e8413a49bf816364e06b8b453c", "filename": "libstdc++-v3/testsuite/20_util/specialized_algorithms/memory_management_tools/1.cc", "status": "modified", "additions": 21, "deletions": 11, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08a53a2eda8886d406c497595d57ba09aaf5893e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Fmemory_management_tools%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08a53a2eda8886d406c497595d57ba09aaf5893e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Fmemory_management_tools%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Fmemory_management_tools%2F1.cc?ref=08a53a2eda8886d406c497595d57ba09aaf5893e", "patch": "@@ -74,15 +74,17 @@ void test02()\n void test03()\n {\n   char test_data[] = \"123456\";\n-  std::uninitialized_default_construct_n(std::begin(test_data), 6);\n+  auto end = std::uninitialized_default_construct_n(std::begin(test_data), 6);\n   VERIFY(std::string(test_data) == \"123456\");\n+  VERIFY( end == test_data + 6 );\n }\n \n void test04()\n {\n   char test_data[] = \"123456\";\n-  std::uninitialized_value_construct_n(std::begin(test_data), 6);\n-  VERIFY(std::string(test_data, 6) == std::string(\"\\0\\0\\0\\0\\0\\0\", 6));\n+  auto end = std::uninitialized_value_construct_n(std::begin(test_data), 5);\n+  VERIFY(std::string(test_data, 6) == std::string(\"\\0\\0\\0\\0\\0\" \"6\", 6));\n+  VERIFY( end == test_data + 5 );\n }\n \n void test05()\n@@ -112,8 +114,9 @@ void test07()\n   del_count = 0;\n   DelCount* x = (DelCount*)malloc(sizeof(DelCount)*10);\n   for (int i = 0; i < 10; ++i) new (x+i) DelCount;\n-  std::destroy_n(x, 10);\n+  auto end = std::destroy_n(x, 10);\n   VERIFY(del_count == 10);\n+  VERIFY( end == x + 10 );\n   del_count = 0;\n   free(x);\n }\n@@ -127,7 +130,8 @@ void test08()\n   std::uninitialized_move(source.begin(), source.end(), target);\n   for (const auto& x : source) VERIFY(!x);\n   for (int i = 0; i < 10; ++i) VERIFY(bool(*(target+i)));\n-  std::destroy_n(target, 10);\n+  auto end = std::destroy_n(target, 10);\n+  VERIFY( end == target + 10 );\n   free(target);\n }\n \n@@ -137,10 +141,13 @@ void test09()\n   for (int i = 0; i < 10; ++i) source.push_back(std::make_unique<int>(i));\n   std::unique_ptr<int>* target =\n     (std::unique_ptr<int>*)malloc(sizeof(std::unique_ptr<int>)*10);\n-  std::uninitialized_move_n(source.begin(), 10, target);\n+  auto end = std::uninitialized_move_n(source.begin(), 10, target);\n+  VERIFY( end.first == source.begin() + 10 );\n+  VERIFY( end.second == target + 10 );\n   for (const auto& x : source) VERIFY(!x);\n   for (int i = 0; i < 10; ++i) VERIFY(bool(*(target+i)));\n-  std::destroy_n(target, 10);\n+  auto end2 = std::destroy_n(target, 10);\n+  VERIFY( end2 == target + 10 );\n   free(target);\n }\n \n@@ -156,7 +163,8 @@ void test11()\n {\n   char* x = (char*)malloc(sizeof(char)*10);\n   for (int i = 0; i < 10; ++i) new (x+i) char;\n-  std::destroy_n(x, 10);\n+  auto end = std::destroy_n(x, 10);\n+  VERIFY( end == x + 10 );\n   free(x);\n }\n \n@@ -285,10 +293,12 @@ void test19()\n {\n   char test_source[] = \"123456\";\n   char test_target[] = \"000000\";\n-  std::uninitialized_move_n(std::begin(test_source),\n-\t\t\t    6,\n-\t\t\t    test_target);\n+  auto end = std::uninitialized_move_n(std::begin(test_source),\n+                                       6,\n+                                       test_target);\n   VERIFY(std::string(test_target) == \"123456\");\n+  VERIFY( end.first == test_source + 6 );\n+  VERIFY( end.second == test_target + 6 );\n }\n \n int main()"}]}