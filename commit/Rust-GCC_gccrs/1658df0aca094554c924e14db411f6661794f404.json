{"sha": "1658df0aca094554c924e14db411f6661794f404", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY1OGRmMGFjYTA5NDU1NGM5MjRlMTRkYjQxMWY2NjYxNzk0ZjQwNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-01-25T11:20:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-01-25T11:20:29Z"}, "message": "eh5.C: New test.\n\n\t* g++.old-deja/g++.other/eh5.C: New test.\n\t* g++.old-deja/g++.other/sibcall2.C: New test.\n\t* g++.old-deja/g++.other/array9.C: New test.\n\t* g++.old-deja/g++.other/typename2.C: New test.\n\t* g++.old-deja/g++.other/crash60.C: New test.\n\t* g++.old-deja/g++.other/conv9.C: New test.\n\t* g++.old-deja/g++.other/mangle10.C: New test.\n\t* g++.old-deja/g++.other/unchanging1.C: New test.\n\t* g++.old-deja/g++.other/exprstmt1.C: New test.\n\t* g++.old-deja/g++.other/inline23.C: New test.\n\t* g++.old-deja/g++.eh/ia64-1.C: New test.\n\t* g++.old-deja/g++.other/dwarf2-1.C: New test.\n\t* g++.old-deja/g++.other/mangle11.C: New test.\n\t* g++.old-deja/g++.other/reload1.C: New test.\n\t* g++.old-deja/g++.other/static20.C: New test.\n\t* g++.old-deja/g++.other/local-alloc1.C: New test.\n\t* g++.old-deja/g++.other/conv8.C: New test.\n\t* g++.old-deja/g++.other/stmtexpr2.C: New test.\n\t* g++.old-deja/g++.other/storeexpr1.C: New test.\n\t* g++.old-deja/g++.other/storeexpr2.C: New test.\n\t* g++.dg/eh/template2.C: New test.\n\t* g++.dg/warn/weak1.C: New test.\n\nFrom-SVN: r49211", "tree": {"sha": "9e1d45885bc11c5b68c1cd9d25b7f0827594a9c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e1d45885bc11c5b68c1cd9d25b7f0827594a9c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1658df0aca094554c924e14db411f6661794f404", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1658df0aca094554c924e14db411f6661794f404", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1658df0aca094554c924e14db411f6661794f404", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1658df0aca094554c924e14db411f6661794f404/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b5b59800c2d3d0f7fbafb86f1e518d93f0ef5b47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5b59800c2d3d0f7fbafb86f1e518d93f0ef5b47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5b59800c2d3d0f7fbafb86f1e518d93f0ef5b47"}], "stats": {"total": 695, "additions": 695, "deletions": 0}, "files": [{"sha": "a81e931503ba2b14550f1d44b08893e6c823851d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1658df0aca094554c924e14db411f6661794f404", "patch": "@@ -1,3 +1,28 @@\n+2002-01-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.old-deja/g++.other/eh5.C: New test.\n+\t* g++.old-deja/g++.other/sibcall2.C: New test.\n+\t* g++.old-deja/g++.other/array9.C: New test.\n+\t* g++.old-deja/g++.other/typename2.C: New test.\n+\t* g++.old-deja/g++.other/crash60.C: New test.\n+\t* g++.old-deja/g++.other/conv9.C: New test.\n+\t* g++.old-deja/g++.other/mangle10.C: New test.\n+\t* g++.old-deja/g++.other/unchanging1.C: New test.\n+\t* g++.old-deja/g++.other/exprstmt1.C: New test.\n+\t* g++.old-deja/g++.other/inline23.C: New test.\n+\t* g++.old-deja/g++.eh/ia64-1.C: New test.\n+\t* g++.old-deja/g++.other/dwarf2-1.C: New test.\n+\t* g++.old-deja/g++.other/mangle11.C: New test.\n+\t* g++.old-deja/g++.other/reload1.C: New test.\n+\t* g++.old-deja/g++.other/static20.C: New test.\n+\t* g++.old-deja/g++.other/local-alloc1.C: New test.\n+\t* g++.old-deja/g++.other/conv8.C: New test.\n+\t* g++.old-deja/g++.other/stmtexpr2.C: New test.\n+\t* g++.old-deja/g++.other/storeexpr1.C: New test.\n+\t* g++.old-deja/g++.other/storeexpr2.C: New test.\n+\t* g++.dg/eh/template2.C: New test.\n+\t* g++.dg/warn/weak1.C: New test.\n+\n 2002-01-25  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* lib/scanasm.exp (scan-assembler-dem, scan-assembler-dem-not):"}, {"sha": "ed389328677cd3442823e95f2849582c1001be10", "filename": "gcc/testsuite/g++.dg/eh/template2.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Ftemplate2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Ftemplate2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Ftemplate2.C?ref=1658df0aca094554c924e14db411f6661794f404", "patch": "@@ -0,0 +1,19 @@\n+// { dg-do compile }\n+// { dg-options -O2 }\n+\n+template<class T> struct O {\n+  O(T *p) : q(p) { }\n+  T *q;\n+};\n+struct W {\n+  virtual ~W();\n+};\n+struct S : public W {\n+  S (int *);\n+};\n+W *bar(int);\n+S::S (int *x)\n+{\n+  for (int *p = x; *p; p++)\n+    O<W> i (bar (*p));\n+}"}, {"sha": "192f6dcdf263100684d1156a3fdb584f21978369", "filename": "gcc/testsuite/g++.dg/warn/weak1.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fweak1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fweak1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fweak1.C?ref=1658df0aca094554c924e14db411f6661794f404", "patch": "@@ -0,0 +1,12 @@\n+// { dg-do run }\n+\n+extern void foo (void) __attribute__ ((weak));\n+\n+int\n+main ()\n+{\n+  if (&foo)\n+    foo ();\n+\n+  return 0;\n+}"}, {"sha": "441c0c13898db8a869aec7bdc0da860abb1c849f", "filename": "gcc/testsuite/g++.old-deja/g++.eh/ia64-1.C", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fia64-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fia64-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fia64-1.C?ref=1658df0aca094554c924e14db411f6661794f404", "patch": "@@ -0,0 +1,72 @@\n+// Special g++ Options: -O2\n+\n+#include <exception>\n+\n+using namespace std;\n+\n+extern \"C\" void abort();\n+\n+int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9;\n+int j0, j1, j2, j3, j4, j5, j6, j7, j8, j9;\n+int k0, k1, k2, k3, k4, k5, k6, k7, k8, k9;\n+int l0, l1, l2, l3, l4, l5, l6, l7, l8, l9;\n+#define A(x,y,n) register int *x##n = &y##n;\n+#define B(x,y) \\\n+  A(x,y,0) A(x,y,1) A(x,y,2) A(x,y,3) A(x,y,4) \\\n+  A(x,y,5) A(x,y,6) A(x,y,7) A(x,y,8) A(x,y,9)\n+#define C(x,n) asm volatile (\"\" : \"=r\" (x##n) : \"0\" (x##n));\n+#define D(x) \\\n+  C(x,0) C(x,1) C(x,2) C(x,3) C(x,4) \\\n+  C(x,5) C(x,6) C(x,7) C(x,8) C(x,9)\n+#define E(x,y,n) if (x##n != &y##n) abort ();\n+#define F(x,y) \\\n+  E(x,y,0) E(x,y,1) E(x,y,2) E(x,y,3) E(x,y,4) \\\n+  E(x,y,5) E(x,y,6) E(x,y,7) E(x,y,8) E(x,y,9)\n+\n+void bar(long a0, long a1, long a2, long a3, long a4)\n+{\n+}\n+\n+void foo(long a0, long a1, long a2, long a3, long a4)\n+{\n+  A(p,l,0) A(p,l,1) A(p,l,2)\n+  C(p,0) C(p,1) C(p,2)\n+  bar (0, 1, 2, 3, 4);\n+  if (a0 == 0)\n+    throw exception();\n+  C(p,0) C(p,1) C(p,2)\n+  E(p,l,0) E(p,l,1) E(p,l,2)\n+}\n+\n+void test(void)\n+{\n+  A(p,l,0) A(p,l,1) A(p,l,2) A(p,l,3) A(p,l,4) A(p,l,5) A(p,l,6)\n+  C(p,0) C(p,1) C(p,2) C(p,3) C(p,4) C(p,5) C(p,6)\n+  try {\n+    foo(0, 1, 2, 3, 4);\n+  } catch (exception) {}\n+  C(p,0) C(p,1) C(p,2) C(p,3) C(p,4) C(p,5) C(p,6)\n+  E(p,l,0) E(p,l,1) E(p,l,2) E(p,l,3) E(p,l,4) E(p,l,5) E(p,l,6)\n+}\n+\n+int main()\n+{\n+  B(x,i)\n+  B(y,j)\n+  B(z,k)\n+  A(p,l,0) A(p,l,1) A(p,l,2) A(p,l,3)\n+  D(x)\n+  D(y)\n+  D(z)\n+  C(p,0) C(p,1) C(p,2) C(p,3)\n+  test();\n+  D(x)\n+  D(y)\n+  D(z)\n+  C(p,0) C(p,1) C(p,2) C(p,3)\n+  F(x,i)\n+  F(y,j)\n+  F(z,k)\n+  E(p,l,0) E(p,l,1) E(p,l,2) E(p,l,3)\n+  return 0;\n+}"}, {"sha": "7864c9b1f169ded874e843ebd4394dc653aeceb8", "filename": "gcc/testsuite/g++.old-deja/g++.other/array9.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Farray9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Farray9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Farray9.C?ref=1658df0aca094554c924e14db411f6661794f404", "patch": "@@ -0,0 +1,6 @@\n+// Build don't link:\n+\n+template <class T> class A {\n+  T *d;\n+  public: void f() { (T[10])d; }\n+};"}, {"sha": "9ab3b7421fd55a3228262188cad28dab0f589c52", "filename": "gcc/testsuite/g++.old-deja/g++.other/conv8.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fconv8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fconv8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fconv8.C?ref=1658df0aca094554c924e14db411f6661794f404", "patch": "@@ -0,0 +1,31 @@\n+// Build don't link:\n+// Origin: Jakub Jelinek <jakub@redhat.com>\n+\n+class bar\n+{\n+public:\n+    bar();\n+    virtual ~bar();\n+    static void a();\n+};\n+\n+class baz : public bar\n+{\n+};\n+\n+class foo : virtual public baz\n+{\n+public:\n+    static void a();\n+    void b();\n+};\n+\n+typedef void (bar::*T)();\n+T d;\n+\n+void foo::a()\n+{\n+    typedef void(foo::*t)();\n+    t c = & foo::b;\n+    d = (T) c;\t\t\t// WARNING - pointer to member cast\n+}"}, {"sha": "4fd022b5ed0f9bd64ba0fd8a9d5f92b5d8ca23a8", "filename": "gcc/testsuite/g++.old-deja/g++.other/conv9.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fconv9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fconv9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fconv9.C?ref=1658df0aca094554c924e14db411f6661794f404", "patch": "@@ -0,0 +1,31 @@\n+// Build don't link:\n+\n+struct\n+Foo\n+{\n+public:\n+  typedef void* (*copier_fn)(void const*);\n+  void foo() const;\n+  void bar(char const*, void const*) const;\n+private:\n+  struct\n+  Bar\n+  {\n+    char const* key;\n+    void const* item;\n+  };\n+};\n+\n+void\n+Foo::foo() const\n+{\n+  Bar* cp = 0;\n+  copier_fn copyfn = 0;\n+\n+  bar(cp->key, cp->item);\n+  bar(cp->key, (copyfn) ? (*copyfn)(cp) : 0);\n+  bar(cp->key, (copyfn) ? (*copyfn)(0) : 0);\n+\n+  bar(cp->key, (copyfn) ? (*copyfn)(0) : cp->item);\n+  bar(cp->key, (copyfn) ? (*copyfn)(cp) : cp->item);\n+}"}, {"sha": "55266749b555925c575ef89bd1b3989423f262fb", "filename": "gcc/testsuite/g++.old-deja/g++.other/crash60.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash60.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash60.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash60.C?ref=1658df0aca094554c924e14db411f6661794f404", "patch": "@@ -0,0 +1,7 @@\n+// Build don't link:\n+\n+void foo ()\n+{\n+  int e;\n+  e := e;\t// ERROR - parse error\n+}"}, {"sha": "24c8a4d43279f2d3bdeebd6fb38a076aef1afa73", "filename": "gcc/testsuite/g++.old-deja/g++.other/dwarf2-1.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdwarf2-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdwarf2-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdwarf2-1.C?ref=1658df0aca094554c924e14db411f6661794f404", "patch": "@@ -0,0 +1,11 @@\n+// Build don't link:\n+// Special g++ Options: -gdwarf-2 -O0\n+\n+int foo()\n+{\n+  int a = 1;\n+  int b = 1;\n+  int e[a][b];\n+  e[0][0] = 0;\n+  return e[a-1][b-1];\n+}"}, {"sha": "9d0acf439c95f6dc8c547e8c0e811f8274f0c0af", "filename": "gcc/testsuite/g++.old-deja/g++.other/eh5.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Feh5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Feh5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Feh5.C?ref=1658df0aca094554c924e14db411f6661794f404", "patch": "@@ -0,0 +1,34 @@\n+// Build don't link:\n+// Special g++ Options: -O2\n+\n+struct X {};\n+\n+struct Y\n+{\n+  Y();\n+  virtual ~Y();\n+};\n+\n+struct Z\n+{\n+  int f (const int *x);\n+  int g;\n+};\n+\n+inline int\n+operator<< (Z &os, int x)\n+{\n+  os.f (&x);\n+  return os.g;\n+}\n+\n+void foo (Z &a, X *b, X &c)\n+{\n+  X *d = b;\n+  int e = 0;\n+  Z &f = a;\n+  if (!(f << e))\n+    do { do { } while (&c == 0); throw Y(); } while (0);\n+  do { } while (&d == 0);\n+  do { } while (&c == 0);\n+}"}, {"sha": "028ddaddd6d8551a5930b5e5fee95d143dc31c81", "filename": "gcc/testsuite/g++.old-deja/g++.other/exprstmt1.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fexprstmt1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fexprstmt1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fexprstmt1.C?ref=1658df0aca094554c924e14db411f6661794f404", "patch": "@@ -0,0 +1,23 @@\n+// Special g++ Options: -O\n+\n+int main()\n+{\n+  unsigned int x = 1381237248;\n+\n+  if (sizeof (x) != 4)\n+    return 0;\n+\n+  x =\n+    ({\n+      unsigned int y = x;\n+      ({\n+        unsigned int z = y;\n+        (unsigned int)\n+          ((((unsigned int)z & (unsigned int)0x000000ffUL) << 24)\n+           | (((unsigned int)z & (unsigned int)0x0000ff00UL) << 8)\n+           | (((unsigned int)z & (unsigned int)0x00ff0000UL) >> 8)\n+           | (((unsigned int)z & (unsigned int)0xff000000UL) >> 24));\n+       });\n+     });\n+  return x != 152658;\n+}"}, {"sha": "3a323e02298331d87f942352e58781e69a59ee4a", "filename": "gcc/testsuite/g++.old-deja/g++.other/inline23.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline23.C?ref=1658df0aca094554c924e14db411f6661794f404", "patch": "@@ -0,0 +1,28 @@\n+// Build don't run:\n+\n+struct B\n+{\n+  virtual ~B() {}\n+};\n+\n+struct A : public B\n+{\n+  ~A();\n+  void foo(void);\n+  void bar(void);\n+};\n+\n+inline void A::foo(void)\n+{\n+  static int i;\n+  i++;\n+}\n+\n+void A::bar()\n+{\n+  foo();\n+}\n+\n+int main()\n+{\n+}"}, {"sha": "d58b9b71289dc9e1ce68ad4ce2bf6a25d055bbc0", "filename": "gcc/testsuite/g++.old-deja/g++.other/local-alloc1.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flocal-alloc1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flocal-alloc1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flocal-alloc1.C?ref=1658df0aca094554c924e14db411f6661794f404", "patch": "@@ -0,0 +1,16 @@\n+// Build don't link:\n+// Origin: Jakub Jelinek <jakub@redhat.com>\n+// Special g++ Options: -O0 -fpic\n+\n+struct bar {\n+  bar() {}\n+  double x[3];\n+};\n+\n+static bar y[4];\n+\n+void foo(int z)\n+{\n+  bar w;\n+  y[z] = w;\n+}"}, {"sha": "8d5bb48a2129b09606d6fc3b2cffde8c6c1204b5", "filename": "gcc/testsuite/g++.old-deja/g++.other/mangle10.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fmangle10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fmangle10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fmangle10.C?ref=1658df0aca094554c924e14db411f6661794f404", "patch": "@@ -0,0 +1,26 @@\n+// Build don't link:\n+\n+template<int T>\n+struct A {\n+  char *a;\n+  A (const char* x)\n+  {\n+    a = (char*) x;\n+  }\n+};\n+\n+template<int U, int V, class T>\n+struct B {\n+  T a[V-U+1];\n+  friend A<V-U+1> f (B const &x)\n+  {\n+    return A<V-U+1> ((char*) x.a);\n+  }\n+};\n+\n+const int a = 8;\n+\n+typedef B<1,a,int> C;\n+struct D {\n+  C x;\n+};"}, {"sha": "d77a4b548de8eaef657e4d5d8c882639e3bff8e5", "filename": "gcc/testsuite/g++.old-deja/g++.other/mangle11.C", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fmangle11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fmangle11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fmangle11.C?ref=1658df0aca094554c924e14db411f6661794f404", "patch": "@@ -0,0 +1,41 @@\n+struct foo {\n+  static int bar ()\n+  {\n+    int i;\n+    static int baz = 1;\n+    {\n+      static int baz = 2;\n+      i = baz++;\n+    }\n+    {\n+      struct baz {\n+        static int m ()\n+        {\n+          static int n;\n+          return n += 10;\n+        }\n+      };\n+      baz a;\n+      i += a.m ();\n+    }\n+    {\n+      static int baz = 3;\n+      i += baz;\n+      baz += 30;\n+    }\n+    i += baz;\n+    baz += 60;\n+    return i;\n+  }\n+};\n+\n+int main ()\n+{\n+  foo x;\n+\n+  if (x.bar () != 16)\n+    return 1;\n+  if (x.bar() != 117)\n+    return 1;\n+  return 0;\n+}"}, {"sha": "4ad0d6838838c3f480aae2eef19a92be2f674133", "filename": "gcc/testsuite/g++.old-deja/g++.other/reload1.C", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Freload1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Freload1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Freload1.C?ref=1658df0aca094554c924e14db411f6661794f404", "patch": "@@ -0,0 +1,46 @@\n+extern \"C\" void abort ();\n+\n+struct A {\n+  unsigned long long u;\n+} *a;\n+\n+struct B {\n+  unsigned long long v;\n+  unsigned long long w ()\n+  {\n+    return a->u - v;\n+  }\n+} b;\n+\n+struct C {\n+  static unsigned long long x;\n+  static void y (unsigned long long z);\n+};\n+\n+unsigned long long C::x = 0;\n+\n+int main ()\n+{\n+  a = new A;\n+  b.v = 333418;\n+  a->u = 1132270;\n+  C::x = 0;\n+  C::y (799016);\n+}\n+\n+void foo (unsigned long long a, unsigned long long b, unsigned long long c)\n+{\n+}\n+\n+void C::y (unsigned long long z)\n+{\n+  unsigned long long c = b.w () - x;\n+  if (z < b.w ())\n+    {\n+      if ((long long) c < 0)\n+\t{\n+\t  foo (b.w (), a->u, b.v);\n+\t  abort ();\n+\t}\n+    }\n+}"}, {"sha": "0248574b52177ba12c31ddc6e60b29a432c02a5e", "filename": "gcc/testsuite/g++.old-deja/g++.other/sibcall2.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsibcall2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsibcall2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsibcall2.C?ref=1658df0aca094554c924e14db411f6661794f404", "patch": "@@ -0,0 +1,19 @@\n+// Build don't link:\n+// Special g++ Options: -O2 -foptimize-sibling-calls -fno-exceptions\n+\n+struct X\n+{\n+  const char *c() const { return b; };\n+  char *b;\n+};\n+extern \"C\" int f (const char *);\n+struct A\n+{\n+   X x;\n+   void y();\n+};\n+void A::y()\n+{\n+  const char *const a[] = { x.c() };\n+  f (a[0]);\n+}"}, {"sha": "08db2db6e97469613ab883a9d90f713bfdb47dc0", "filename": "gcc/testsuite/g++.old-deja/g++.other/static20.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstatic20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstatic20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstatic20.C?ref=1658df0aca094554c924e14db411f6661794f404", "patch": "@@ -0,0 +1,13 @@\n+// Build don't run:\n+struct foo\n+{\n+  foo() {};\n+  ~foo() {};\n+  void func() { static foo x; };\n+};\n+\n+int main()\n+{\n+   foo f;\n+   return 0;\n+}"}, {"sha": "3b35fd3a443497a3b32ed23510f0d19e98fbe8cc", "filename": "gcc/testsuite/g++.old-deja/g++.other/stmtexpr2.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstmtexpr2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstmtexpr2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstmtexpr2.C?ref=1658df0aca094554c924e14db411f6661794f404", "patch": "@@ -0,0 +1,9 @@\n+// Build don't link:\n+// Special g++ Options: -O2\n+// Origin: Jakub Jelinek <jakub@redhat.com>\n+\n+void bar(int);\n+void foo(int x)\n+{\n+  bar(({ int y; y = x; }));\n+}"}, {"sha": "ea7c3527835590883743e8fc4dbbc0177cbf7ead", "filename": "gcc/testsuite/g++.old-deja/g++.other/store-expr1.C", "status": "added", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstore-expr1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstore-expr1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstore-expr1.C?ref=1658df0aca094554c924e14db411f6661794f404", "patch": "@@ -0,0 +1,87 @@\n+// Skip if not target: i?86-*-*\n+// Special g++ Options: -mcpu=i686 -O2 -fpic\n+class G {};\n+\n+struct N {\n+  N *a;\n+};\n+\n+struct V {\n+  typedef N *W;\n+  W *m, *n;\n+  int s() const { return int(n - m); }\n+  const W &operator[](int x) const { return *(m + x); }\n+};\n+\n+struct H;\n+\n+struct J {\n+  N *c;\n+  H *d;\n+  J(N *x, H *y) : c(x), d(y) {}\n+};\n+\n+struct K {\n+  const N *c;\n+  const H *d;\n+  K(const N *x, const H *y) : c(x), d(y) {}\n+  K(const J &x) : c(x.c), d(x.d) {}\n+};\n+\n+struct H {\n+  V e;\n+  int f;\n+\n+  J u()\n+  {\n+    for (int x = 0; x < e.s(); ++x)\n+      if (e[x])\n+        return J(e[x], this);\n+    return v();\n+  }\n+  J v() { return J((N*)64, this); }\n+};\n+\n+struct I {\n+  H d;\n+  J u() { return d.u(); }\n+  J v() { return d.v(); }\n+};\n+\n+struct bar {\n+  virtual ~bar() {}\n+};\n+\n+struct E {\n+  K g;\n+  E(K x) : g(x) {}\n+};\n+\n+struct foo : public bar {\n+  K h;\n+  E i;\n+  foo(const K x, const E &y) : h(x), i(y) {}\n+};\n+\n+struct A {\n+  I *l;\n+  foo *baz() const;\n+};\n+\n+foo *A::baz() const\n+{\n+  return new foo(l->u(), E(l->v()));\n+}\n+\n+A x;\n+I i;\n+foo *f;\n+\n+int main ()\n+{\n+  x.l = &i;\n+  f = x.baz();\n+  if (f->h.c != f->i.g.c || f->h.d != f->i.g.d)\n+    return 1;\n+  return 0;\n+}"}, {"sha": "8724e19fdb5b0f7718a2a96f2d464ea32bf91e4e", "filename": "gcc/testsuite/g++.old-deja/g++.other/store-expr2.C", "status": "added", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstore-expr2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstore-expr2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstore-expr2.C?ref=1658df0aca094554c924e14db411f6661794f404", "patch": "@@ -0,0 +1,87 @@\n+// Skip if not target: i?86-*-*\n+// Special g++ Options: -mcpu=i686 -O2\n+class G {};\n+\n+struct N {\n+  N *a;\n+};\n+\n+struct V {\n+  typedef N *W;\n+  W *m, *n;\n+  int s() const { return int(n - m); }\n+  const W &operator[](int x) const { return *(m + x); }\n+};\n+\n+struct H;\n+\n+struct J {\n+  N *c;\n+  H *d;\n+  J(N *x, H *y) : c(x), d(y) {}\n+};\n+\n+struct K {\n+  const N *c;\n+  const H *d;\n+  K(const N *x, const H *y) : c(x), d(y) {}\n+  K(const J &x) : c(x.c), d(x.d) {}\n+};\n+\n+struct H {\n+  V e;\n+  int f;\n+\n+  J u()\n+  {\n+    for (int x = 0; x < e.s(); ++x)\n+      if (e[x])\n+        return J(e[x], this);\n+    return v();\n+  }\n+  J v() { return J((N*)64, this); }\n+};\n+\n+struct I {\n+  H d;\n+  J u() { return d.u(); }\n+  J v() { return d.v(); }\n+};\n+\n+struct bar {\n+  virtual ~bar() {}\n+};\n+\n+struct E {\n+  K g;\n+  E(K x) : g(x) {}\n+};\n+\n+struct foo : public bar {\n+  K h;\n+  E i;\n+  foo(const K x, const E &y) : h(x), i(y) {}\n+};\n+\n+struct A {\n+  I *l;\n+  foo *baz() const;\n+};\n+\n+foo *A::baz() const\n+{\n+  return new foo(l->u(), E(l->v()));\n+}\n+\n+A x;\n+I i;\n+foo *f;\n+\n+int main ()\n+{\n+  x.l = &i;\n+  f = x.baz();\n+  if (f->h.c != f->i.g.c || f->h.d != f->i.g.d)\n+    return 1;\n+  return 0;\n+}"}, {"sha": "78df7b213de9159f9881f5b61c515f4682262fa3", "filename": "gcc/testsuite/g++.old-deja/g++.other/typename2.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Ftypename2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Ftypename2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Ftypename2.C?ref=1658df0aca094554c924e14db411f6661794f404", "patch": "@@ -0,0 +1,7 @@\n+// Build don't link:\n+\n+template<typename T>\n+void f()\n+{\n+  typename T::u;  // ERROR - declare anything\n+}"}, {"sha": "6bad7a45ccda27969b6081d4d73992601b5d6d25", "filename": "gcc/testsuite/g++.old-deja/g++.other/unchanging1.C", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Funchanging1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1658df0aca094554c924e14db411f6661794f404/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Funchanging1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Funchanging1.C?ref=1658df0aca094554c924e14db411f6661794f404", "patch": "@@ -0,0 +1,45 @@\n+// Special g++ Options: -O2\n+\n+#include <iostream>\n+#include <complex>\n+\n+using namespace std;\n+\n+class A {\n+protected:\n+  int a;\n+  complex<double> *b;\n+public:\n+  A(int n);\n+  inline complex<double>& operator[] (int x);\n+};\n+\n+A::A(int n)\n+{\n+  a = n;\n+  b = new complex<double>[a];\n+  for (int i=0; i<a; i++) b[i] = complex<double>(0.0,0.0);\n+}\n+\n+inline complex<double>& A::operator[](int x)\n+{\n+  if (x < 0 || x >= a)\n+    cout << \"x error\" << endl;\n+  return b[x];\n+}\n+\n+void foo ()\n+{\n+  int n = 5;\n+  A *o = new A(n);\n+  A *p = new A(n);\n+  for (int i = 0; i < n; i++) {\n+    cout << i << endl;\n+    (*o)[i] *= complex<double>((*p)[i].real(), (*p)[i].imag());\n+  }\n+}\n+\n+int main()\n+{\n+  foo();\n+}"}]}