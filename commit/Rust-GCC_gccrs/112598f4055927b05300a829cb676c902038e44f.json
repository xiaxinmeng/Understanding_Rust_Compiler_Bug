{"sha": "112598f4055927b05300a829cb676c902038e44f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTEyNTk4ZjQwNTU5MjdiMDUzMDBhODI5Y2I2NzZjOTAyMDM4ZTQ0Zg==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@bothner.com", "date": "2006-06-01T16:36:25Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2006-06-01T16:36:25Z"}, "message": "Suppress extra '#1 <built-in> or '#1 <command line>' on -dD output.\n\n\t* c-opts.c (finish_options): Use internal line 0 for <command-line>.\n\t* c-ppoutput.c (cb_define): Don't increment line 0.\n\nFrom-SVN: r114311", "tree": {"sha": "a8b5d4d47331052cd02606b8c8ac601713785275", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8b5d4d47331052cd02606b8c8ac601713785275"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/112598f4055927b05300a829cb676c902038e44f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/112598f4055927b05300a829cb676c902038e44f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/112598f4055927b05300a829cb676c902038e44f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/112598f4055927b05300a829cb676c902038e44f/comments", "author": null, "committer": null, "parents": [{"sha": "45a82bd9573cb4b385dca060f340d535b2c04e5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45a82bd9573cb4b385dca060f340d535b2c04e5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45a82bd9573cb4b385dca060f340d535b2c04e5f"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "c02569ed92eec2e8da7e1444ca216db19ce8933f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/112598f4055927b05300a829cb676c902038e44f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/112598f4055927b05300a829cb676c902038e44f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=112598f4055927b05300a829cb676c902038e44f", "patch": "@@ -1,3 +1,9 @@\n+2006-06-01  Per Bothner  <bothner@bothner.com>\n+\n+\tSuppress extra '#1 <built-in> or '#1 <command line>' on -dD output.\n+\t* c-opts.c (finish_options): Use internal line 0 for <command-line>.\n+\t* c-ppoutput.c (cb_define): Don't increment line 0.\n+\n 2006-06-01  Pete Steinmetz  <steinmtz@us.ibm.com>\n \n \t* doc/invoke.texi: Add cpu_type power6."}, {"sha": "2937b7995cd8670926b379e269ce9ffb4ceb160d", "filename": "gcc/c-opts.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/112598f4055927b05300a829cb676c902038e44f/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/112598f4055927b05300a829cb676c902038e44f/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=112598f4055927b05300a829cb676c902038e44f", "patch": "@@ -1373,7 +1373,10 @@ finish_options (void)\n \t their acceptance on the -std= setting.  */\n       cpp_opts->warn_dollars = (cpp_opts->pedantic && !cpp_opts->c99);\n \n-      cpp_change_file (parse_in, LC_RENAME, _(\"<command line>\"));\n+      cb_file_change (parse_in,\n+\t\t      linemap_add (&line_table, LC_RENAME, 0,\n+\t\t\t\t   _(\"<command-line>\"), 0));\n+\n       for (i = 0; i < deferred_count; i++)\n \t{\n \t  struct deferred_opt *opt = &deferred_opts[i];"}, {"sha": "10540b7f1251faa61672f1ff4579c5d6d67ecf9d", "filename": "gcc/c-ppoutput.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/112598f4055927b05300a829cb676c902038e44f/gcc%2Fc-ppoutput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/112598f4055927b05300a829cb676c902038e44f/gcc%2Fc-ppoutput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-ppoutput.c?ref=112598f4055927b05300a829cb676c902038e44f", "patch": "@@ -324,7 +324,8 @@ cb_define (cpp_reader *pfile, source_location line, cpp_hashnode *node)\n     fputs ((const char *) NODE_NAME (node), print.outf);\n \n   putc ('\\n', print.outf);\n-  print.src_line++;\n+  if (linemap_lookup (&line_table, line)->to_line != 0)\n+    print.src_line++;\n }\n \n static void"}]}