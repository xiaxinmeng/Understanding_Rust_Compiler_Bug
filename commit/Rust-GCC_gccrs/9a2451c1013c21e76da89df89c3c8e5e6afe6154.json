{"sha": "9a2451c1013c21e76da89df89c3c8e5e6afe6154", "node_id": "C_kwDOANBUbNoAKDlhMjQ1MWMxMDEzYzIxZTc2ZGE4OWRmODljM2M4ZTVlNmFmZTYxNTQ", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-12-17T17:58:09Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-01-05T13:47:00Z"}, "message": "libstdc++: Compare match_results for failed regex_match\n\nThe regex_match_debug testsuite helper doesn't compare the\nstd::match_results objects after a failed match, but it should do. The\nstandard says that the effects of a failed match on the match-results\nare unspecified, except that [conditions testable by operator==]. So we\ncan check that the two sets of results compare equal even if the match\nfailed.\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/util/testsuite_regex.h (regex_match_debug): Compare\n\tresults even if the match failed.", "tree": {"sha": "616b8ac2ce33d6f7f449761a8471d8f4404f08c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/616b8ac2ce33d6f7f449761a8471d8f4404f08c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a2451c1013c21e76da89df89c3c8e5e6afe6154", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a2451c1013c21e76da89df89c3c8e5e6afe6154", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a2451c1013c21e76da89df89c3c8e5e6afe6154", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a2451c1013c21e76da89df89c3c8e5e6afe6154/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "260a5334ee963f66745d0cb98316ee831737b22d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/260a5334ee963f66745d0cb98316ee831737b22d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/260a5334ee963f66745d0cb98316ee831737b22d"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "f2bb068024d8ca0ee5b6e79cc0f1bcb5d186f3e5", "filename": "libstdc++-v3/testsuite/util/testsuite_regex.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a2451c1013c21e76da89df89c3c8e5e6afe6154/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_regex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a2451c1013c21e76da89df89c3c8e5e6afe6154/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_regex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_regex.h?ref=9a2451c1013c21e76da89df89c3c8e5e6afe6154", "patch": "@@ -150,8 +150,7 @@ namespace __gnu_test\n       auto __res2 = __regex_algo_impl<_Bi_iter, _Alloc, _Ch_type, _Rx_traits,\n \t   _RegexExecutorPolicy::_S_alternate, true>\n \t(__s, __e, __mm, __re, __flags);\n-      // __m is unspecified if return value is false.\n-      if (__res1 == __res2 && (!__res1 || __m == __mm))\n+      if (__res1 == __res2 && __m == __mm)\n \treturn __res1;\n       throw std::exception();\n     }"}]}