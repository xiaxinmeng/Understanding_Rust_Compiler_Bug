{"sha": "66096911fd4c37da10f7ddf3388867acf29451ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjYwOTY5MTFmZDRjMzdkYTEwZjdkZGYzMzg4ODY3YWNmMjk0NTFlZQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2009-08-12T14:26:42Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-08-12T14:26:42Z"}, "message": "Undo changes to the PDR representation.\n\n2009-08-11  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-interchange.c (compute_array_size): Remove use of\n\tPDR_DATA_CONTAINER.\n\t* graphite-poly.c (new_poly_dr): Remove argument data_container.\n\tDo not initialize PDR_DATA_CONTAINER.\n\t(print_pdr): Do not print PDR_DATA_CONTAINER.\n\t* graphite-poly.h (struct poly_dr): Remove data_container field.\n\t(PDR_DATA_CONTAINER): Removed.\n\t* graphite-sese-to-poly.c (pdr_add_data_dimensions): Remove use of\n\tPDR_DATA_CONTAINER.\n\t(build_poly_dr): Same.\n\nFrom-SVN: r150689", "tree": {"sha": "6dc43a4bb5b95b0c2043a3ae6d3e1a5142f09e5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6dc43a4bb5b95b0c2043a3ae6d3e1a5142f09e5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66096911fd4c37da10f7ddf3388867acf29451ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66096911fd4c37da10f7ddf3388867acf29451ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66096911fd4c37da10f7ddf3388867acf29451ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66096911fd4c37da10f7ddf3388867acf29451ee/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "273c5dd38b7aa69f9e8b653399fd0d1203c1d5d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/273c5dd38b7aa69f9e8b653399fd0d1203c1d5d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/273c5dd38b7aa69f9e8b653399fd0d1203c1d5d9"}], "stats": {"total": 72, "additions": 38, "deletions": 34}, "files": [{"sha": "29213ee05a195414eda557414d304200651d9996", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66096911fd4c37da10f7ddf3388867acf29451ee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66096911fd4c37da10f7ddf3388867acf29451ee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=66096911fd4c37da10f7ddf3388867acf29451ee", "patch": "@@ -1,3 +1,16 @@\n+2009-08-12  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-interchange.c (compute_array_size): Remove use of\n+\tPDR_DATA_CONTAINER.\n+\t* graphite-poly.c (new_poly_dr): Remove argument data_container.\n+\tDo not initialize PDR_DATA_CONTAINER.\n+\t(print_pdr): Do not print PDR_DATA_CONTAINER.\n+\t* graphite-poly.h (struct poly_dr): Remove data_container field.\n+\t(PDR_DATA_CONTAINER): Removed.\n+\t* graphite-sese-to-poly.c (pdr_add_data_dimensions): Remove use of\n+\tPDR_DATA_CONTAINER.\n+\t(build_poly_dr): Same.\n+\n 2009-08-12  Konrad Trifunovic  <konrad.trifunovic@gmail.com>\n \t    Sebastian Pop  <sebastian.pop@amd.com>\n "}, {"sha": "55dc550a190c447f4ed85227ec5735153064f6fb", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66096911fd4c37da10f7ddf3388867acf29451ee/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66096911fd4c37da10f7ddf3388867acf29451ee/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=66096911fd4c37da10f7ddf3388867acf29451ee", "patch": "@@ -1,3 +1,16 @@\n+2009-08-11  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-interchange.c (compute_array_size): Remove use of\n+\tPDR_DATA_CONTAINER.\n+\t* graphite-poly.c (new_poly_dr): Remove argument data_container.\n+\tDo not initialize PDR_DATA_CONTAINER.\n+\t(print_pdr): Do not print PDR_DATA_CONTAINER.\n+\t* graphite-poly.h (struct poly_dr): Remove data_container field.\n+\t(PDR_DATA_CONTAINER): Removed.\n+\t* graphite-sese-to-poly.c (pdr_add_data_dimensions): Remove use of\n+\tPDR_DATA_CONTAINER.\n+\t(build_poly_dr): Same.\n+\n 2009-08-11  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* testsuite/gcc.dg/graphite/interchange-9.c: New."}, {"sha": "382c5fae8344438dc86b2efc0efed68b6d90cd5d", "filename": "gcc/graphite-interchange.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66096911fd4c37da10f7ddf3388867acf29451ee/gcc%2Fgraphite-interchange.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66096911fd4c37da10f7ddf3388867acf29451ee/gcc%2Fgraphite-interchange.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-interchange.c?ref=66096911fd4c37da10f7ddf3388867acf29451ee", "patch": "@@ -174,7 +174,7 @@ compute_array_size_poly (poly_dr_p pdr, ppl_dimension_type sub_dim, Value array_\n static void\n compute_array_size (poly_dr_p pdr, ppl_dimension_type sub_dim, Value array_size)\n {\n-  ppl_Pointset_Powerset_C_Polyhedron_t data_container = PDR_DATA_CONTAINER (pdr);\n+  ppl_Pointset_Powerset_C_Polyhedron_t data_container = PDR_ACCESSES (pdr);\n   ppl_Pointset_Powerset_C_Polyhedron_iterator_t it, end;\n   Value val;\n "}, {"sha": "b7c53e144e8fd7e1913114f8270dd628a6bb03ee", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66096911fd4c37da10f7ddf3388867acf29451ee/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66096911fd4c37da10f7ddf3388867acf29451ee/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=66096911fd4c37da10f7ddf3388867acf29451ee", "patch": "@@ -269,14 +269,12 @@ apply_poly_transforms (scop_p scop)\n void\n new_poly_dr (poly_bb_p pbb,\n \t     ppl_Pointset_Powerset_C_Polyhedron_t accesses,\n-\t     ppl_Pointset_Powerset_C_Polyhedron_t data_container,\n \t     enum POLY_DR_TYPE type, void *cdr)\n {\n   poly_dr_p pdr = XNEW (struct poly_dr);\n \n   PDR_PBB (pdr) = pbb;\n   PDR_ACCESSES (pdr) = accesses;\n-  PDR_DATA_CONTAINER (pdr) = data_container;\n   PDR_TYPE (pdr) = type;\n   PDR_CDR (pdr) = cdr;\n   VEC_safe_push (poly_dr_p, heap, PBB_DRS (pbb), pdr);\n@@ -288,8 +286,6 @@ void\n free_poly_dr (poly_dr_p pdr)\n {\n   ppl_delete_Pointset_Powerset_C_Polyhedron (PDR_ACCESSES (pdr));\n-  ppl_delete_Pointset_Powerset_C_Polyhedron (PDR_DATA_CONTAINER (pdr));\n-\n   XDELETE (pdr);\n }\n \n@@ -390,11 +386,6 @@ print_pdr (FILE *file, poly_dr_p pdr)\n   ppl_print_powerset_matrix (file, PDR_ACCESSES (pdr));\n   fprintf (file, \")\\n\");\n \n-  fprintf (file, \"data container (\\n\");\n-  print_pdr_access_layout (file, pdr);\n-  ppl_print_powerset_matrix (file, PDR_DATA_CONTAINER (pdr));\n-  fprintf (file, \")\\n\");\n-\n   fprintf (file, \")\\n\");\n }\n "}, {"sha": "c6d902a34debfc30dea3f760f747afd74ff0890e", "filename": "gcc/graphite-poly.h", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66096911fd4c37da10f7ddf3388867acf29451ee/gcc%2Fgraphite-poly.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66096911fd4c37da10f7ddf3388867acf29451ee/gcc%2Fgraphite-poly.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.h?ref=66096911fd4c37da10f7ddf3388867acf29451ee", "patch": "@@ -101,12 +101,8 @@ struct poly_dr\n      | 0   0   0   1   0   0  -5     =  0\n      |-1   0   0   0   1   0   0     =  0\n      | 0  -1  -1   0   0   1   0     =  0\n-\n-     The constraints on the data container A[1335][123] are:\n-\n-     | i   j   k   a   s0  s1  1\n-     | 0   0   0   0   1   0   0     >= 0\n-     | 0   0   0   0   0   1   0     >= 0\n+     | 0   0   0   0   1   0   0     >= 0  # The last four lines describe the\n+     | 0   0   0   0   0   1   0     >= 0  # array size.\n      | 0   0   0   0  -1   0 1335    >= 0\n      | 0   0   0   0   0  -1 123     >= 0\n \n@@ -132,17 +128,14 @@ struct poly_dr\n      | i   j   k   a   1\n      | 0   0   0  -1   15  = 0 */\n   ppl_Pointset_Powerset_C_Polyhedron_t accesses;\n-  ppl_Pointset_Powerset_C_Polyhedron_t data_container;\n };\n \n #define PDR_CDR(PDR) (PDR->compiler_dr)\n #define PDR_PBB(PDR) (PDR->pbb)\n #define PDR_TYPE(PDR) (PDR->type)\n #define PDR_ACCESSES(PDR) (PDR->accesses)\n-#define PDR_DATA_CONTAINER(PDR) (PDR->data_container)\n \n void new_poly_dr (poly_bb_p, ppl_Pointset_Powerset_C_Polyhedron_t,\n-\t\t  ppl_Pointset_Powerset_C_Polyhedron_t,\n \t\t  enum POLY_DR_TYPE, void *);\n void free_poly_dr (poly_dr_p);\n void debug_pdr (poly_dr_p);"}, {"sha": "c6d82eeaa46978bc876ae859e91a71b1a61f53c5", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 9, "deletions": 15, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66096911fd4c37da10f7ddf3388867acf29451ee/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66096911fd4c37da10f7ddf3388867acf29451ee/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=66096911fd4c37da10f7ddf3388867acf29451ee", "patch": "@@ -1643,12 +1643,12 @@ pdr_add_memory_accesses (ppl_Polyhedron_t accesses, data_reference_p dr,\n }\n \n /* Add constrains representing the size of the accessed data to the\n-   DATA_CONTAINER polyhedron.  ACCESSP_NB_DIMS is the dimension of the\n-   DATA_CONTAINER polyhedron, DOM_NB_DIMS is the dimension of the iteration\n+   ACCESSES polyhedron.  ACCESSP_NB_DIMS is the dimension of the\n+   ACCESSES polyhedron, DOM_NB_DIMS is the dimension of the iteration\n    domain.  */\n \n static void\n-pdr_add_data_dimensions (ppl_Polyhedron_t data_container, data_reference_p dr,\n+pdr_add_data_dimensions (ppl_Polyhedron_t accesses, data_reference_p dr,\n \t\t\t ppl_dimension_type accessp_nb_dims,\n \t\t\t ppl_dimension_type dom_nb_dims)\n {\n@@ -1674,7 +1674,7 @@ pdr_add_data_dimensions (ppl_Polyhedron_t data_container, data_reference_p dr,\n       ppl_new_Linear_Expression_with_dimension (&expr, accessp_nb_dims);\n       ppl_set_coef (expr, subscript, 1);\n       ppl_new_Constraint (&cstr, expr, PPL_CONSTRAINT_TYPE_GREATER_OR_EQUAL);\n-      ppl_Polyhedron_add_constraint (data_container, cstr);\n+      ppl_Polyhedron_add_constraint (accesses, cstr);\n       ppl_delete_Linear_Expression (expr);\n       ppl_delete_Constraint (cstr);\n \n@@ -1692,7 +1692,7 @@ pdr_add_data_dimensions (ppl_Polyhedron_t data_container, data_reference_p dr,\n \tppl_set_inhomogeneous (expr, int_cst_value (array_size) / elt_size);\n \n       ppl_new_Constraint (&cstr, expr, PPL_CONSTRAINT_TYPE_GREATER_OR_EQUAL);\n-      ppl_Polyhedron_add_constraint (data_container, cstr);\n+      ppl_Polyhedron_add_constraint (accesses, cstr);\n       ppl_delete_Linear_Expression (expr);\n       ppl_delete_Constraint (cstr);\n \n@@ -1705,8 +1705,8 @@ pdr_add_data_dimensions (ppl_Polyhedron_t data_container, data_reference_p dr,\n static void\n build_poly_dr (data_reference_p dr, poly_bb_p pbb)\n {\n-  ppl_Polyhedron_t accesses, data_container;\n-  ppl_Pointset_Powerset_C_Polyhedron_t accesses_ps, data_container_ps;\n+  ppl_Polyhedron_t accesses;\n+  ppl_Pointset_Powerset_C_Polyhedron_t accesses_ps;\n   ppl_dimension_type dom_nb_dims;\n   ppl_dimension_type accessp_nb_dims;\n \n@@ -1715,21 +1715,15 @@ build_poly_dr (data_reference_p dr, poly_bb_p pbb)\n   accessp_nb_dims = dom_nb_dims + 1 + DR_NUM_DIMENSIONS (dr);\n \n   ppl_new_C_Polyhedron_from_space_dimension (&accesses, accessp_nb_dims, 0);\n-  ppl_new_C_Polyhedron_from_space_dimension (&data_container,\n-\t\t\t\t\t     accessp_nb_dims, 0);\n \n   pdr_add_alias_set (accesses, dr, accessp_nb_dims, dom_nb_dims);\n   pdr_add_memory_accesses (accesses, dr, accessp_nb_dims, dom_nb_dims, pbb);\n-  pdr_add_data_dimensions (data_container, dr, accessp_nb_dims, dom_nb_dims);\n+  pdr_add_data_dimensions (accesses, dr, accessp_nb_dims, dom_nb_dims);\n \n   ppl_new_Pointset_Powerset_C_Polyhedron_from_C_Polyhedron (&accesses_ps,\n \t\t\t\t\t\t\t    accesses);\n-  ppl_new_Pointset_Powerset_C_Polyhedron_from_C_Polyhedron (&data_container_ps,\n-\t\t\t\t\t\t\t    data_container);\n   ppl_delete_Polyhedron (accesses);\n-  ppl_delete_Polyhedron (data_container);\n-  new_poly_dr (pbb, accesses_ps, data_container_ps,\n-\t       DR_IS_READ (dr) ? PDR_READ : PDR_WRITE, dr);\n+  new_poly_dr (pbb, accesses_ps, DR_IS_READ (dr) ? PDR_READ : PDR_WRITE, dr);\n }\n \n /* Group each data reference in DRS with it's alias set num.  */"}]}