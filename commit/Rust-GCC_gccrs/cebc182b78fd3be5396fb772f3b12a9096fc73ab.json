{"sha": "cebc182b78fd3be5396fb772f3b12a9096fc73ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ViYzE4MmI3OGZkM2JlNTM5NmZiNzcyZjNiMTJhOTA5NmZjNzNhYg==", "commit": {"author": {"name": "Oleg Endo", "email": "oleg.endo@t-online.de", "date": "2011-11-29T22:52:55Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2011-11-29T22:52:55Z"}, "message": "re PR target/51337 (SH Target: Various testsuite ICEs for -m2a -O0)\n\n\tPR target/51337\n\t* config/sh/sh.c (sh_secondary_reload): Add case when FPUL\n\tregister is being loaded from a pseudo in memory.\n\nFrom-SVN: r181823", "tree": {"sha": "5639d088a2f5f63acca0dd6a1e63d257f94ac8c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5639d088a2f5f63acca0dd6a1e63d257f94ac8c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cebc182b78fd3be5396fb772f3b12a9096fc73ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cebc182b78fd3be5396fb772f3b12a9096fc73ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cebc182b78fd3be5396fb772f3b12a9096fc73ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cebc182b78fd3be5396fb772f3b12a9096fc73ab/comments", "author": {"login": "olegendo", "id": 1380209, "node_id": "MDQ6VXNlcjEzODAyMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1380209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olegendo", "html_url": "https://github.com/olegendo", "followers_url": "https://api.github.com/users/olegendo/followers", "following_url": "https://api.github.com/users/olegendo/following{/other_user}", "gists_url": "https://api.github.com/users/olegendo/gists{/gist_id}", "starred_url": "https://api.github.com/users/olegendo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olegendo/subscriptions", "organizations_url": "https://api.github.com/users/olegendo/orgs", "repos_url": "https://api.github.com/users/olegendo/repos", "events_url": "https://api.github.com/users/olegendo/events{/privacy}", "received_events_url": "https://api.github.com/users/olegendo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "08ee945e0b945fd2797c8bb7524d79dc73a9b6bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08ee945e0b945fd2797c8bb7524d79dc73a9b6bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08ee945e0b945fd2797c8bb7524d79dc73a9b6bd"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "587a627ce061cf533be22df2fe8fc0b29ccafb28", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cebc182b78fd3be5396fb772f3b12a9096fc73ab/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cebc182b78fd3be5396fb772f3b12a9096fc73ab/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cebc182b78fd3be5396fb772f3b12a9096fc73ab", "patch": "@@ -1,3 +1,9 @@\n+2011-11-29  Oleg Endo  <oleg.endo@t-online.de>\n+\n+\tPR target/51337\n+\t* config/sh/sh.c (sh_secondary_reload): Add case when FPUL\n+\tregister is being loaded from a pseudo in memory.\n+\n 2011-11-29  DJ Delorie  <dj@redhat.com>\n \n \t* config.gcc (rl78-*-elf): New case."}, {"sha": "870c39f2602b3351a34ac64626adfba35689eea4", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cebc182b78fd3be5396fb772f3b12a9096fc73ab/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cebc182b78fd3be5396fb772f3b12a9096fc73ab/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=cebc182b78fd3be5396fb772f3b12a9096fc73ab", "patch": "@@ -12432,6 +12432,14 @@ sh_secondary_reload (bool in_p, rtx x, reg_class_t rclass_i,\n   if (rclass != GENERAL_REGS && REG_P (x)\n       && TARGET_REGISTER_P (REGNO (x)))\n     return GENERAL_REGS;\n+\n+ /* If here fall back to loading FPUL register through general registers.\n+    This case can happen when movsi_ie insn is picked initially to\n+    load/store the FPUL register from/to another register, and then the\n+    other register is allocated on the stack.  */\n+  if (rclass == FPUL_REGS && true_regnum (x) == -1)\n+    return GENERAL_REGS;\n+\n   return NO_REGS;\n }\n "}]}