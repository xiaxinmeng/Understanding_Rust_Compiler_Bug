{"sha": "a4b31d5807f2bc67c8999b3d53369cf2a5c6e1ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRiMzFkNTgwN2YyYmM2N2M4OTk5YjNkNTMzNjljZjJhNWM2ZTFlYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-09-27T21:18:26Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-09-27T21:18:26Z"}, "message": "optabs: Don't reuse target for multi-word expansions if it overlaps operand(s) [PR97073]\n\nThe following testcase is miscompiled on i686-linux, because\nwe try to expand a double-word bitwise logic operation with op0\nbeing a (mem:DI u) and target (mem:DI u+4), i.e. partial overlap, and\nthus end up with:\n\tmovl\t4(%esp), %eax\n\tandl\tu, %eax\n\tmovl\t%eax, u+4\n! movl u+4, %eax optimized out\n\tandl\t8(%esp), %eax\n\tmovl\t%eax, u+8\nrather than with the desired:\n\tmovl\t4(%esp), %edx\n\tmovl\t8(%esp), %eax\n\tandl\tu, %edx\n\tandl\tu+4, %eax\n\tmovl\t%eax, u+8\n\tmovl\t%edx, u+4\nbecause the store of the first word to target overwrites the second word of\nthe operand.\nexpand_binop for this (and several similar places) already check for target\n== op0 or target == op1, this patch just adds reg_overlap_mentioned_p calls\nnext to it.\nPedantically, at least for some of these it might be sufficient to force\na different target if there is overlap but target is not rtx_equal_p to\nthe operand (e.g. in this bitwise logical case, but e.g. not in the shift\ncases where there is reordering), though that would go against the\npreexisting target == op? checks and the rationale that REG_EQUAL notes in\nthat case isn't correct.\n\n2020-09-27  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/97073\n\t* optabs.c (expand_binop, expand_absneg_bit, expand_unop,\n\texpand_copysign_bit): Check reg_overlap_mentioned_p between target\n\tand operand(s) and if it returns true, force a pseudo as target.\n\n\t* gcc.c-torture/execute/pr97073.c: New test.", "tree": {"sha": "2e466f36d011ea467377a00864f33d6609f609ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e466f36d011ea467377a00864f33d6609f609ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4b31d5807f2bc67c8999b3d53369cf2a5c6e1ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4b31d5807f2bc67c8999b3d53369cf2a5c6e1ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4b31d5807f2bc67c8999b3d53369cf2a5c6e1ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4b31d5807f2bc67c8999b3d53369cf2a5c6e1ec/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c11f25fb8bc3eaed35a90eece9d2f9444373513", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c11f25fb8bc3eaed35a90eece9d2f9444373513", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c11f25fb8bc3eaed35a90eece9d2f9444373513"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "8ad7f4bef21ad4d05fd92ff3f3ef48216e26b04f", "filename": "gcc/optabs.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b31d5807f2bc67c8999b3d53369cf2a5c6e1ec/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b31d5807f2bc67c8999b3d53369cf2a5c6e1ec/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=a4b31d5807f2bc67c8999b3d53369cf2a5c6e1ec", "patch": "@@ -1395,6 +1395,8 @@ expand_binop (machine_mode mode, optab binoptab, rtx op0, rtx op1,\n       if (target == 0\n \t  || target == op0\n \t  || target == op1\n+\t  || reg_overlap_mentioned_p (target, op0)\n+\t  || reg_overlap_mentioned_p (target, op1)\n \t  || !valid_multiword_target_p (target))\n \ttarget = gen_reg_rtx (int_mode);\n \n@@ -1475,6 +1477,8 @@ expand_binop (machine_mode mode, optab binoptab, rtx op0, rtx op1,\n \t  if (target == 0\n \t      || target == op0\n \t      || target == op1\n+\t      || reg_overlap_mentioned_p (target, op0)\n+\t      || reg_overlap_mentioned_p (target, op1)\n \t      || !valid_multiword_target_p (target))\n \t    target = gen_reg_rtx (int_mode);\n \n@@ -1533,6 +1537,8 @@ expand_binop (machine_mode mode, optab binoptab, rtx op0, rtx op1,\n \t  || target == op0\n \t  || target == op1\n \t  || !REG_P (target)\n+\t  || reg_overlap_mentioned_p (target, op0)\n+\t  || reg_overlap_mentioned_p (target, op1)\n \t  || !valid_multiword_target_p (target))\n \ttarget = gen_reg_rtx (int_mode);\n \n@@ -2670,6 +2676,7 @@ expand_absneg_bit (enum rtx_code code, scalar_float_mode mode,\n \n   if (target == 0\n       || target == op0\n+      || reg_overlap_mentioned_p (target, op0)\n       || (nwords > 1 && !valid_multiword_target_p (target)))\n     target = gen_reg_rtx (mode);\n \n@@ -2951,7 +2958,10 @@ expand_unop (machine_mode mode, optab unoptab, rtx op0, rtx target,\n       int i;\n       rtx_insn *insns;\n \n-      if (target == 0 || target == op0 || !valid_multiword_target_p (target))\n+      if (target == 0\n+\t  || target == op0\n+\t  || reg_overlap_mentioned_p (target, op0)\n+\t  || !valid_multiword_target_p (target))\n \ttarget = gen_reg_rtx (int_mode);\n \n       start_sequence ();\n@@ -3472,6 +3482,8 @@ expand_copysign_bit (scalar_float_mode mode, rtx op0, rtx op1, rtx target,\n   if (target == 0\n       || target == op0\n       || target == op1\n+      || reg_overlap_mentioned_p (target, op0)\n+      || reg_overlap_mentioned_p (target, op1)\n       || (nwords > 1 && !valid_multiword_target_p (target)))\n     target = gen_reg_rtx (mode);\n "}, {"sha": "1955e6b8bd258960da03a75522e185b37985318c", "filename": "gcc/testsuite/gcc.c-torture/execute/pr97073.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b31d5807f2bc67c8999b3d53369cf2a5c6e1ec/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr97073.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b31d5807f2bc67c8999b3d53369cf2a5c6e1ec/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr97073.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr97073.c?ref=a4b31d5807f2bc67c8999b3d53369cf2a5c6e1ec", "patch": "@@ -0,0 +1,21 @@\n+/* PR middle-end/97073 */\n+/* { dg-additional-options \"-mno-stv\" { target i?86-*-* x86_64-*-* } } */\n+\n+typedef unsigned long long L;\n+union U { L i; struct T { unsigned k; L l; } j; } u;\n+\n+__attribute__((noinline,noclone)) void\n+foo (L x)\n+{\n+  u.j.l = u.i & x;\n+}\n+\n+int\n+main ()\n+{\n+  u.i = 5;\n+  foo (-1ULL);\n+  if (u.j.l != 5)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}