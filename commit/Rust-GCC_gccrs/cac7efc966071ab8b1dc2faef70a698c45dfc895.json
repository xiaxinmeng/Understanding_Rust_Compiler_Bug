{"sha": "cac7efc966071ab8b1dc2faef70a698c45dfc895", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FjN2VmYzk2NjA3MWFiOGIxZGMyZmFlZjcwYTY5OGM0NWRmYzg5NQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-14T05:16:18Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-14T05:16:18Z"}, "message": "Release cache while holding thread lock.\n\nDon't bother to hold thread lock while allocating cache.\n\nFrom-SVN: r167784", "tree": {"sha": "0663c9cf06648a1067ddd04373651e98c79fa524", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0663c9cf06648a1067ddd04373651e98c79fa524"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cac7efc966071ab8b1dc2faef70a698c45dfc895", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cac7efc966071ab8b1dc2faef70a698c45dfc895", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cac7efc966071ab8b1dc2faef70a698c45dfc895", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cac7efc966071ab8b1dc2faef70a698c45dfc895/comments", "author": null, "committer": null, "parents": [{"sha": "3a9ed12a583c79068fbd60f1314bed397f79d25f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a9ed12a583c79068fbd60f1314bed397f79d25f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a9ed12a583c79068fbd60f1314bed397f79d25f"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "55aa3e36fb9a83fcc1e61a8282d2b051ecdf98ad", "filename": "libgo/runtime/go-go.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cac7efc966071ab8b1dc2faef70a698c45dfc895/libgo%2Fruntime%2Fgo-go.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cac7efc966071ab8b1dc2faef70a698c45dfc895/libgo%2Fruntime%2Fgo-go.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-go.c?ref=cac7efc966071ab8b1dc2faef70a698c45dfc895", "patch": "@@ -107,11 +107,11 @@ remove_current_thread (void)\n   if (list_entry->next != NULL)\n     list_entry->next->prev = list_entry->prev;\n \n+  runtime_MCache_ReleaseAll (mcache);\n+\n   i = pthread_mutex_unlock (&__go_thread_ids_lock);\n   __go_assert (i == 0);\n \n-  runtime_MCache_ReleaseAll (mcache);\n-\n   runtime_lock (&runtime_mheap);\n   mstats.heap_alloc += mcache->local_alloc;\n   mstats.heap_objects += mcache->local_objects;\n@@ -225,14 +225,13 @@ __go_go (void (*pfn) (void*), void *arg)\n \n   newm->list_entry = list_entry;\n \n+  newm->mcache = runtime_allocmcache ();\n+\n   /* Add the thread to the list of all threads, marked as tentative\n      since it is not yet ready to go.  */\n   i = pthread_mutex_lock (&__go_thread_ids_lock);\n   __go_assert (i == 0);\n \n-  /* We use __go_thread_ids_lock as a lock for mheap.cachealloc.  */\n-  newm->mcache = runtime_allocmcache ();\n-\n   if (__go_all_thread_ids != NULL)\n     __go_all_thread_ids->prev = list_entry;\n   list_entry->next = __go_all_thread_ids;"}]}