{"sha": "68162a976669a165633f4905f0ab1d60962b0666", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjgxNjJhOTc2NjY5YTE2NTYzM2Y0OTA1ZjBhYjFkNjA5NjJiMDY2Ng==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@airs.com", "date": "2006-01-07T22:23:27Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2006-01-07T22:23:27Z"}, "message": "re PR target/25662 (Unrecognizable insn with -O on PPC)\n\n2005-01-07  Ian Lance Taylor  <ian@airs.com>\n            David Edelsohn  <edelsohn@gnu.org>\n\n        PR rtl-optimization/25662\n        * optabs.c (simplify_expand_binop): Use simplify_binary_operation\n        for constant operands instead of simplify_gen_binary.\n        * simplify-rtx.c (simplify_gen_binary): Swap commutative operands\n        after trying simplify_binary_operation\n\nCo-Authored-By: David Edelsohn <edelsohn@gnu.org>\n\nFrom-SVN: r109456", "tree": {"sha": "1fe479be7d0037272b7c2cdc78e67963de5da542", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fe479be7d0037272b7c2cdc78e67963de5da542"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68162a976669a165633f4905f0ab1d60962b0666", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68162a976669a165633f4905f0ab1d60962b0666", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68162a976669a165633f4905f0ab1d60962b0666", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68162a976669a165633f4905f0ab1d60962b0666/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8c7ffa93a8988b2e10d7b49913f55201575d3ca5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c7ffa93a8988b2e10d7b49913f55201575d3ca5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c7ffa93a8988b2e10d7b49913f55201575d3ca5"}], "stats": {"total": 30, "additions": 22, "deletions": 8}, "files": [{"sha": "f4a023ca0029b6640d3825c88cabd0ec3d41d607", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68162a976669a165633f4905f0ab1d60962b0666/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68162a976669a165633f4905f0ab1d60962b0666/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68162a976669a165633f4905f0ab1d60962b0666", "patch": "@@ -1,3 +1,12 @@\n+2005-01-07  Ian Lance Taylor  <ian@airs.com>\n+\t    David Edelsohn  <edelsohn@gnu.org>\n+\n+\tPR rtl-optimization/25662\n+\t* optabs.c (simplify_expand_binop): Use simplify_binary_operation\n+\tfor constant operands instead of simplify_gen_binary.\n+\t* simplify-rtx.c (simplify_gen_binary): Swap commutative operands\n+\tafter trying simplify_binary_operation\n+\n 2006-01-06  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* tree.c (iterative_hash_expr): Hash decls based on UID."}, {"sha": "349a922a7dd3150cb7d0d43365d207c440da9386", "filename": "gcc/optabs.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68162a976669a165633f4905f0ab1d60962b0666/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68162a976669a165633f4905f0ab1d60962b0666/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=68162a976669a165633f4905f0ab1d60962b0666", "patch": "@@ -427,9 +427,14 @@ simplify_expand_binop (enum machine_mode mode, optab binoptab,\n \t\t       enum optab_methods methods)\n {\n   if (CONSTANT_P (op0) && CONSTANT_P (op1))\n-    return simplify_gen_binary (binoptab->code, mode, op0, op1);\n-  else\n-    return expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods);\n+    {\n+      rtx x = simplify_binary_operation (binoptab->code, mode, op0, op1);\n+\n+      if (x)\n+\treturn x;\n+    }\n+\n+  return expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods);\n }\n \n /* Like simplify_expand_binop, but always put the result in TARGET."}, {"sha": "5a5c5ca96683a8819009dae0770090684610535c", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68162a976669a165633f4905f0ab1d60962b0666/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68162a976669a165633f4905f0ab1d60962b0666/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=68162a976669a165633f4905f0ab1d60962b0666", "patch": "@@ -114,16 +114,16 @@ simplify_gen_binary (enum rtx_code code, enum machine_mode mode, rtx op0,\n {\n   rtx tem;\n \n-  /* Put complex operands first and constants second if commutative.  */\n-  if (GET_RTX_CLASS (code) == RTX_COMM_ARITH\n-      && swap_commutative_operands_p (op0, op1))\n-    tem = op0, op0 = op1, op1 = tem;\n-\n   /* If this simplifies, do it.  */\n   tem = simplify_binary_operation (code, mode, op0, op1);\n   if (tem)\n     return tem;\n \n+  /* Put complex operands first and constants second if commutative.  */\n+  if (GET_RTX_CLASS (code) == RTX_COMM_ARITH\n+      && swap_commutative_operands_p (op0, op1))\n+    tem = op0, op0 = op1, op1 = tem;\n+\n   return gen_rtx_fmt_ee (code, mode, op0, op1);\n }\n \f"}]}