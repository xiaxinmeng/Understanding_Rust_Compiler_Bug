{"sha": "7d4a2fb0d447052ad39ac104dd6915116c091c22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q0YTJmYjBkNDQ3MDUyYWQzOWFjMTA0ZGQ2OTE1MTE2YzA5MWMyMg==", "commit": {"author": {"name": "James A. Morrison", "email": "phython@gcc.gnu.org", "date": "2005-11-07T06:54:52Z"}, "committer": {"name": "James A. Morrison", "email": "phython@gcc.gnu.org", "date": "2005-11-07T06:54:52Z"}, "message": "re PR ada/21952 (Annoying \"attribute directive ignored\" warnings)\n\n2005-11-07  James A. Morrison  <phython@gcc.gnu.org>\n\n        PR treelang/21952\n        * treetree.c (LANG_HOOKS_ATTRIBUTE_TABLE): Set to\n        treelang_attribute_table.\n        (handle_attribute): New function.\n        (treelang_attribute_table): New attribute table.\n\nFrom-SVN: r106582", "tree": {"sha": "87a99f56a55ad99e365d332992dc0743c4f5c904", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87a99f56a55ad99e365d332992dc0743c4f5c904"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d4a2fb0d447052ad39ac104dd6915116c091c22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d4a2fb0d447052ad39ac104dd6915116c091c22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d4a2fb0d447052ad39ac104dd6915116c091c22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d4a2fb0d447052ad39ac104dd6915116c091c22/comments", "author": null, "committer": null, "parents": [{"sha": "96c993a8902b5579e463de5aa60855ee304bfce6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96c993a8902b5579e463de5aa60855ee304bfce6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96c993a8902b5579e463de5aa60855ee304bfce6"}], "stats": {"total": 43, "additions": 41, "deletions": 2}, "files": [{"sha": "d38a8a2252e0f782cc03e5b05fb8fee1528859d6", "filename": "gcc/treelang/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d4a2fb0d447052ad39ac104dd6915116c091c22/gcc%2Ftreelang%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d4a2fb0d447052ad39ac104dd6915116c091c22/gcc%2Ftreelang%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FChangeLog?ref=7d4a2fb0d447052ad39ac104dd6915116c091c22", "patch": "@@ -1,3 +1,11 @@\n+2005-11-07  James A. Morrison  <phython@gcc.gnu.org>\n+\n+\tPR treelang/21952\n+\t* treetree.c (LANG_HOOKS_ATTRIBUTE_TABLE): Set to\n+\ttreelang_attribute_table.\n+\t(handle_attribute): New function.\n+\t(treelang_attribute_table): New attribute table.\n+\n 2005-09-23  Rafael \u00c1vila de Esp\u00edndola  <rafael.espindola@gmail.com>\n \n \t* parse.y : Changed pointer declaration from \"type* var\" to \"type *var\""}, {"sha": "b783dedcabec72bc680ff9ed865e5eda20bb305b", "filename": "gcc/treelang/treetree.c", "status": "modified", "additions": 33, "deletions": 2, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d4a2fb0d447052ad39ac104dd6915116c091c22/gcc%2Ftreelang%2Ftreetree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d4a2fb0d447052ad39ac104dd6915116c091c22/gcc%2Ftreelang%2Ftreetree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2Ftreetree.c?ref=7d4a2fb0d447052ad39ac104dd6915116c091c22", "patch": "@@ -139,8 +139,10 @@ static tree* getstmtlist (void);\n \n /* Langhooks.  */\n static tree builtin_function (const char *name, tree type, int function_code,\n-\t\t  enum built_in_class class, const char *library_name,\n-\t\t  tree attrs);\n+\t\t\t      enum built_in_class class,\n+\t\t\t      const char *library_name,\n+\t\t\t      tree attrs);\n+extern const struct attribute_spec treelang_attribute_table[];\n static tree getdecls (void);\n static int global_bindings_p (void);\n static void insert_block (tree);\n@@ -166,6 +168,8 @@ static void treelang_expand_function (tree fndecl);\n #define LANG_HOOKS_TYPE_FOR_SIZE tree_lang_type_for_size\n #undef LANG_HOOKS_PARSE_FILE\n #define LANG_HOOKS_PARSE_FILE treelang_parse_file\n+#undef LANG_HOOKS_ATTRIBUTE_TABLE\n+#define LANG_HOOKS_ATTRIBUTE_TABLE treelang_attribute_table\n \n #undef LANG_HOOKS_CALLGRAPH_EXPAND_FUNCTION\n #define LANG_HOOKS_CALLGRAPH_EXPAND_FUNCTION treelang_expand_function\n@@ -1194,6 +1198,33 @@ treelang_init_decl_processing (void)\n   pedantic_lvalues = pedantic;\n }\n \n+static tree\n+handle_attribute (tree *node, tree name, tree ARG_UNUSED (args),\n+\t\t  int ARG_UNUSED (flags), bool *no_add_attrs)\n+{\n+  if (TREE_CODE (*node) == FUNCTION_DECL)\n+    {\n+      if (strcmp (IDENTIFIER_POINTER (name), \"const\") == 0)\n+\tTREE_READONLY (*node) = 1;\n+      if (strcmp (IDENTIFIER_POINTER (name), \"nothrow\") == 0)\n+\tTREE_NOTHROW (*node) = 1;\n+    }\n+  else\n+    {\n+      warning (OPT_Wattributes, \"%qD attribute ignored\", name);\n+      *no_add_attrs = true;\n+    }\n+\n+  return NULL_TREE;\n+}\n+\n+const struct attribute_spec treelang_attribute_table[] =\n+{\n+  { \"const\", 0, 0, true, false, false, handle_attribute },\n+  { \"nothrow\", 0, 0, true, false, false, handle_attribute },\n+  { NULL, 0, 0, false, false, false, NULL },\n+};\n+\n /* Return a definition for a builtin function named NAME and whose data type\n    is TYPE.  TYPE should be a function type with argument types.\n    FUNCTION_CODE tells later passes how to compile calls to this function."}]}