{"sha": "698bad8d4832f1c1250b253d655d8fb537a3d31d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk4YmFkOGQ0ODMyZjFjMTI1MGIyNTNkNjU1ZDhmYjUzN2EzZDMxZA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-07-13T20:37:46Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-07-13T20:41:49Z"}, "message": "testsuite: scan-lang-dump-times & scan-lang-dump-not\n\nSigh, last week's success at not breaking things failed with an\nincorrect 'fix' this morning.  Let's reduce my confusion by making\nlib/scanlang.exp the same on trunk as modules.\n\n\tgcc/testsuite/\n\t* lib/scanlang.exp (scan-lang-dump): Fix breakage.\n\t(scan-lang-dump-times, scan-lang-dump-not): New.", "tree": {"sha": "d673ab26b693aff5c1163211d90abcd267dcc4da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d673ab26b693aff5c1163211d90abcd267dcc4da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/698bad8d4832f1c1250b253d655d8fb537a3d31d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/698bad8d4832f1c1250b253d655d8fb537a3d31d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/698bad8d4832f1c1250b253d655d8fb537a3d31d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/698bad8d4832f1c1250b253d655d8fb537a3d31d/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b12638ba3f00a0c54811d81245128f58b2c2a64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b12638ba3f00a0c54811d81245128f58b2c2a64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b12638ba3f00a0c54811d81245128f58b2c2a64"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "b85ec68166606129c4adb54f8c08a51c9ccdf4b8", "filename": "gcc/testsuite/lib/scanlang.exp", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/698bad8d4832f1c1250b253d655d8fb537a3d31d/gcc%2Ftestsuite%2Flib%2Fscanlang.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/698bad8d4832f1c1250b253d655d8fb537a3d31d/gcc%2Ftestsuite%2Flib%2Fscanlang.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscanlang.exp?ref=698bad8d4832f1c1250b253d655d8fb537a3d31d", "patch": "@@ -35,6 +35,56 @@ proc scan-lang-dump { args } {\n \terror \"scan-lang-dump: too many arguments\"\n \treturn\n     }\n+    if { [llength $args] >= 3 } {\n+\tscan-dump \"lang\" [lindex $args 0] \\\n+\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]l.[lindex $args 1]\" \"\" [lindex $args 2]\n+    } else {\n+\tscan-dump \"lang\" [lindex $args 0] \\\n+\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]l.[lindex $args 1]\" \"\"\n+    }\n+}\n+\n+# Call pass if pattern is present given number of times, otherwise fail.\n+# Argument 0 is the regexp to match\n+# Argument 1 is number of times the regexp must be found\n+# Argument 2 is the name of the dumped tree pass\n+# Argument 3 handles expected failures and the like\n+proc scan-lang-dump-times { args } {\n+\n+    if { [llength $args] < 3 } {\n+\terror \"scan-lang-dump-times: too few arguments\"\n+\treturn\n+    }\n+    if { [llength $args] > 4 } {\n+\terror \"scan-lang-dump-times: too many arguments\"\n+\treturn\n+    }\n+    if { [llength $args] >= 4 } {\n+\tscan-dump-times \"lang\" [lindex $args 0] [lindex $args 1] \\\n+\t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]l.[lindex $args 2]\" \"\" \\\n+\t\t\t[lindex $args 3]\n+    } else {\n+\tscan-dump-times \"lang\" [lindex $args 0] [lindex $args 1] \\\n+\t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]l.[lindex $args 2]\" \"\"\n+    }\n+}\n+\n+# Utility for scanning compiler result, invoked via dg-final.\n+# Call pass if pattern is not present, otherwise fail.\n+#\n+# Argument 0 is the regexp to match\n+# Argument 1 is the name of the dumped lang pass\n+# Argument 2 handles expected failures and the like\n+proc scan-lang-dump-not { args } {\n+\n+    if { [llength $args] < 2 } {\n+\terror \"scan-lang-dump-not: too few arguments\"\n+\treturn\n+    }\n+    if { [llength $args] > 3 } {\n+\terror \"scan-lang-dump-not: too many arguments\"\n+\treturn\n+    }\n     if { [llength $args] >= 3 } {\n \tscan-dump-not \"lang\" [lindex $args 0] \\\n \t    \"\\[0-9\\]\\[0-9\\]\\[0-9\\]l.[lindex $args 1]\" \"\" \\"}]}