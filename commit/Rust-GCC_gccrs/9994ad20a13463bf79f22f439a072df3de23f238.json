{"sha": "9994ad20a13463bf79f22f439a072df3de23f238", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk5NGFkMjBhMTM0NjNiZjc5ZjIyZjQzOWEwNzJkZjNkZTIzZjIzOA==", "commit": {"author": {"name": "Kito Cheng", "email": "kito@0xlab.org", "date": "2014-09-16T05:24:31Z"}, "committer": {"name": "Chung-Ju Wu", "email": "jasonwucj@gcc.gnu.org", "date": "2014-09-16T05:24:31Z"}, "message": "Clean up useless initialization for IRA if using LRA.\n\ngcc/\n\t* ira.c (ira): Don't initialize ira_spilled_reg_stack_slots and\n\tira_spilled_reg_stack_slots_num if using lra.\n\t(do_reload): Remove release ira_spilled_reg_stack_slots part.\n\t* ira-color.c (ira_sort_regnos_for_alter_reg): Add assertion to\n\tmake sure not using lra.\n\t(ira_reuse_stack_slot): Likewise.\n\t(ira_mark_new_stack_slot): Likewise.\n\nFrom-SVN: r215286", "tree": {"sha": "888fab7a9d704ecd3cc31759ba700f627ea476f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/888fab7a9d704ecd3cc31759ba700f627ea476f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9994ad20a13463bf79f22f439a072df3de23f238", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9994ad20a13463bf79f22f439a072df3de23f238", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9994ad20a13463bf79f22f439a072df3de23f238", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9994ad20a13463bf79f22f439a072df3de23f238/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a86507b29ec2520c70b12c84f4e6c1098f1a3fc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a86507b29ec2520c70b12c84f4e6c1098f1a3fc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a86507b29ec2520c70b12c84f4e6c1098f1a3fc0"}], "stats": {"total": 37, "additions": 26, "deletions": 11}, "files": [{"sha": "86544e2e5d1c030b1e75be938ca2a0b90ce8409a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9994ad20a13463bf79f22f439a072df3de23f238/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9994ad20a13463bf79f22f439a072df3de23f238/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9994ad20a13463bf79f22f439a072df3de23f238", "patch": "@@ -1,3 +1,13 @@\n+2014-09-16  Kito Cheng  <kito@0xlab.org>\n+\n+\t* ira.c (ira): Don't initialize ira_spilled_reg_stack_slots and\n+\tira_spilled_reg_stack_slots_num if using lra.\n+\t(do_reload): Remove release ira_spilled_reg_stack_slots part.\n+\t* ira-color.c (ira_sort_regnos_for_alter_reg): Add assertion to\n+\tmake sure not using lra.\n+\t(ira_reuse_stack_slot): Likewise.\n+\t(ira_mark_new_stack_slot): Likewise.\n+\n 2014-09-15  Andi Kleen  <ak@linux.intel.com>\n \n \t* function.c (allocate_struct_function): Force"}, {"sha": "6846567b78fa0151388b3272f961fe6f10331e6f", "filename": "gcc/ira-color.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9994ad20a13463bf79f22f439a072df3de23f238/gcc%2Fira-color.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9994ad20a13463bf79f22f439a072df3de23f238/gcc%2Fira-color.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-color.c?ref=9994ad20a13463bf79f22f439a072df3de23f238", "patch": "@@ -4067,6 +4067,8 @@ ira_sort_regnos_for_alter_reg (int *pseudo_regnos, int n,\n   ira_allocno_iterator ai;\n   ira_allocno_t *spilled_coalesced_allocnos;\n \n+  ira_assert (! ira_use_lra_p);\n+\n   /* Set up allocnos can be coalesced.  */\n   coloring_allocno_bitmap = ira_allocate_bitmap ();\n   for (i = 0; i < n; i++)\n@@ -4416,6 +4418,8 @@ ira_reuse_stack_slot (int regno, unsigned int inherent_size,\n   bitmap_iterator bi;\n   struct ira_spilled_reg_stack_slot *slot = NULL;\n \n+  ira_assert (! ira_use_lra_p);\n+\n   ira_assert (inherent_size == PSEUDO_REGNO_BYTES (regno)\n \t      && inherent_size <= total_size\n \t      && ALLOCNO_HARD_REGNO (allocno) < 0);\n@@ -4528,6 +4532,8 @@ ira_mark_new_stack_slot (rtx x, int regno, unsigned int total_size)\n   int slot_num;\n   ira_allocno_t allocno;\n \n+  ira_assert (! ira_use_lra_p);\n+\n   ira_assert (PSEUDO_REGNO_BYTES (regno) <= total_size);\n   allocno = ira_regno_allocno_map[regno];\n   slot_num = -ALLOCNO_HARD_REGNO (allocno) - 2;"}, {"sha": "f377f7da6743d462430abbda39f0c0d586f9ac99", "filename": "gcc/ira.c", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9994ad20a13463bf79f22f439a072df3de23f238/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9994ad20a13463bf79f22f439a072df3de23f238/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=9994ad20a13463bf79f22f439a072df3de23f238", "patch": "@@ -5260,14 +5260,16 @@ ira (FILE *f)\n #ifdef ENABLE_IRA_CHECKING\n       print_redundant_copies ();\n #endif\n-\n-      ira_spilled_reg_stack_slots_num = 0;\n-      ira_spilled_reg_stack_slots\n-\t= ((struct ira_spilled_reg_stack_slot *)\n-\t   ira_allocate (max_regno\n-\t\t\t * sizeof (struct ira_spilled_reg_stack_slot)));\n-      memset (ira_spilled_reg_stack_slots, 0,\n-\t      max_regno * sizeof (struct ira_spilled_reg_stack_slot));\n+      if (! ira_use_lra_p)\n+\t{\n+\t  ira_spilled_reg_stack_slots_num = 0;\n+\t  ira_spilled_reg_stack_slots\n+\t    = ((struct ira_spilled_reg_stack_slot *)\n+\t       ira_allocate (max_regno\n+\t\t\t     * sizeof (struct ira_spilled_reg_stack_slot)));\n+\t  memset (ira_spilled_reg_stack_slots, 0,\n+\t\t  max_regno * sizeof (struct ira_spilled_reg_stack_slot));\n+\t}\n     }\n   allocate_initial_values ();\n \n@@ -5303,9 +5305,6 @@ do_reload (void)\n       FOR_ALL_BB_FN (bb, cfun)\n \tbb->loop_father = NULL;\n       current_loops = NULL;\n-      \n-      if (ira_conflicts_p)\n-\tira_free (ira_spilled_reg_stack_slots);\n \n       ira_destroy ();\n "}]}