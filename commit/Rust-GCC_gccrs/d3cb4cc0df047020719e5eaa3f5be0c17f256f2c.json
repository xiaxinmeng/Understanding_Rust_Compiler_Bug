{"sha": "d3cb4cc0df047020719e5eaa3f5be0c17f256f2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNjYjRjYzBkZjA0NzAyMDcxOWU1ZWFhM2Y1YmUwYzE3ZjI1NmYyYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T10:02:08Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T10:02:08Z"}, "message": "[multiple changes]\n\n2011-08-29  Matthew Heaney  <heaney@adacore.com>\n\n\t* a-comutr.adb, a-cimutr.adb, a-cbmutr.adb (Splice_Subtree): Only check\n\tfor sibling when common parent.\n\n2011-08-29  Thomas Quinot  <quinot@adacore.com>\n\n\t* get_scos.adb: Literals of Pragma_Id are pragma names prefixed with\n\t\"pragma_\".\n\n2011-08-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): Enable freeze actions\n\tfor the return type when in ASIS mode.\n\n2011-08-29  Vincent Celier  <celier@adacore.com>\n\n\t* make.adb (Gnatmake): Get the default search dirs, then the target\n\tparameters after getting the Builder switches, as the Builder switches\n\tmay include --RTS= and that could change the default search dirs.\n\n2011-08-29  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch7.adb (Make_Adjust_Call): Rewrite to mimic the structure of\n\tMake_Final_Call. Move the processing for class-wide types before the\n\tprocessing for derivations from [Limited_]Controlled.\n\t(Make_Final_Call): Move the processing for class-wide types before the\n\tprocessing for derivations from [Limited_]Controlled.\n\t* s-stposu.adb (Allocate_Any_Controlled): Correct the membership check.\n\tAdd code to account for alignments larger than the list header. Add a\n\tcomment illustrating the structure of the allocated object + padding +\n\theader.\n\t(Deallocate_Any_Controlled): Add code to account for alignments larger\n\tthan the list header.\n\n2011-08-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sinfo.ads, sinfo.adb: New node kind\n\tN_Formal_Incomplete_Type_Definition, related flags.\n\tpar-ch12.adb (P_Formal_Type_Declaration, G_Formal_Type_Definition):\n\tParse formal incomplete types.\n\t* sem.adb (Analyze): Formal_Incomplete_Type_Definitions are handled in\n\tsem_ch12.\n\t* sem_ch7.adb (Analyze_Package_Specification, Unit_Requires_Body):\n\tFormal incomplete types do not need completion.\n\t* sem_ch12.adb (Analyze_Formal_Incomplete_Type,\n\tValidate_Incomplete_Type_Instance): New procedures to handle formal\n\tincomplete types.\n\t* freeze.adb (Freeze_Entity): Do not freeze the subtype of an actual\n\tthat corresponds to a formal incomplete type.\n\t* sprint.adb: Handle formal incomplete type declarations.\n\t* exp_util.adb (Insert_Actions): An incomplete_type_definition is not\n\tan insertion point.\n\nFrom-SVN: r178184", "tree": {"sha": "abc00a0f2d80da97f7ea687746ed421e73d91083", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/abc00a0f2d80da97f7ea687746ed421e73d91083"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/comments", "author": null, "committer": null, "parents": [{"sha": "d3f70b35df36f20ad887de0adc150d0b3dd186cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3f70b35df36f20ad887de0adc150d0b3dd186cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3f70b35df36f20ad887de0adc150d0b3dd186cc"}], "stats": {"total": 653, "additions": 488, "deletions": 165}, "files": [{"sha": "608b8c03f3bb66932ada9b99442bc930c2f42345", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d3cb4cc0df047020719e5eaa3f5be0c17f256f2c", "patch": "@@ -1,3 +1,57 @@\n+2011-08-29  Matthew Heaney  <heaney@adacore.com>\n+\n+\t* a-comutr.adb, a-cimutr.adb, a-cbmutr.adb (Splice_Subtree): Only check\n+\tfor sibling when common parent.\n+\n+2011-08-29  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* get_scos.adb: Literals of Pragma_Id are pragma names prefixed with\n+\t\"pragma_\".\n+\n+2011-08-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): Enable freeze actions\n+\tfor the return type when in ASIS mode.\n+\n+2011-08-29  Vincent Celier  <celier@adacore.com>\n+\n+\t* make.adb (Gnatmake): Get the default search dirs, then the target\n+\tparameters after getting the Builder switches, as the Builder switches\n+\tmay include --RTS= and that could change the default search dirs.\n+\n+2011-08-29  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch7.adb (Make_Adjust_Call): Rewrite to mimic the structure of\n+\tMake_Final_Call. Move the processing for class-wide types before the\n+\tprocessing for derivations from [Limited_]Controlled.\n+\t(Make_Final_Call): Move the processing for class-wide types before the\n+\tprocessing for derivations from [Limited_]Controlled.\n+\t* s-stposu.adb (Allocate_Any_Controlled): Correct the membership check.\n+\tAdd code to account for alignments larger than the list header. Add a\n+\tcomment illustrating the structure of the allocated object + padding +\n+\theader.\n+\t(Deallocate_Any_Controlled): Add code to account for alignments larger\n+\tthan the list header.\n+\n+2011-08-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sinfo.ads, sinfo.adb: New node kind\n+\tN_Formal_Incomplete_Type_Definition, related flags.\n+\tpar-ch12.adb (P_Formal_Type_Declaration, G_Formal_Type_Definition):\n+\tParse formal incomplete types.\n+\t* sem.adb (Analyze): Formal_Incomplete_Type_Definitions are handled in\n+\tsem_ch12.\n+\t* sem_ch7.adb (Analyze_Package_Specification, Unit_Requires_Body):\n+\tFormal incomplete types do not need completion.\n+\t* sem_ch12.adb (Analyze_Formal_Incomplete_Type,\n+\tValidate_Incomplete_Type_Instance): New procedures to handle formal\n+\tincomplete types.\n+\t* freeze.adb (Freeze_Entity): Do not freeze the subtype of an actual\n+\tthat corresponds to a formal incomplete type.\n+\t* sprint.adb: Handle formal incomplete type declarations.\n+\t* exp_util.adb (Insert_Actions): An incomplete_type_definition is not\n+\tan insertion point.\n+\n 2011-08-29  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* a-fihema.ads, a-fihema.adb: Unit removed."}, {"sha": "da642611a94f52da5c8ee25c15be8e9570739fca", "filename": "gcc/ada/a-cbmutr.adb", "status": "modified", "additions": 33, "deletions": 11, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fa-cbmutr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fa-cbmutr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbmutr.adb?ref=d3cb4cc0df047020719e5eaa3f5be0c17f256f2c", "patch": "@@ -2676,13 +2676,18 @@ package body Ada.Containers.Bounded_Multiway_Trees is\n       end if;\n \n       if Target'Address = Source'Address then\n-         if Before = No_Element then\n-            if Target.Nodes (Position.Node).Next <= 0 then  -- last child\n+         if Target.Nodes (Position.Node).Parent = Parent.Node then\n+            if Before = No_Element then\n+               if Target.Nodes (Position.Node).Next <= 0 then  -- last child\n+                  return;\n+               end if;\n+\n+            elsif Position.Node = Before.Node then\n                return;\n-            end if;\n \n-         elsif Position.Node = Before.Node then\n-            return;\n+            elsif Target.Nodes (Position.Node).Next = Before.Node then\n+               return;\n+            end if;\n          end if;\n \n          if Target.Busy > 0 then\n@@ -2769,13 +2774,18 @@ package body Ada.Containers.Bounded_Multiway_Trees is\n          raise Constraint_Error with \"Position cursor designates root\";\n       end if;\n \n-      if Before = No_Element then\n-         if Container.Nodes (Position.Node).Next <= 0 then  -- last child\n+      if Container.Nodes (Position.Node).Parent = Parent.Node then\n+         if Before = No_Element then\n+            if Container.Nodes (Position.Node).Next <= 0 then  -- last child\n+               return;\n+            end if;\n+\n+         elsif Position.Node = Before.Node then\n             return;\n-         end if;\n \n-      elsif Position.Node = Before.Node then\n-         return;\n+         elsif Container.Nodes (Position.Node).Next = Before.Node then\n+            return;\n+         end if;\n       end if;\n \n       if Container.Busy > 0 then\n@@ -2809,6 +2819,11 @@ package body Ada.Containers.Bounded_Multiway_Trees is\n       Target_Count   : Count_Type;\n \n    begin\n+      --  This is a utility operation to do the heavy lifting associated with\n+      --  splicing a subtree from one tree to another. Note that \"splicing\"\n+      --  is a bit of a misnomer here in the case of a bounded tree, because\n+      --  the elements must be copied from the source to the target.\n+\n       if Target.Count > Target.Capacity - Source_Count then\n          raise Capacity_Error  -- ???\n            with \"Source count exceeds available storage on Target\";\n@@ -2830,6 +2845,8 @@ package body Ada.Containers.Bounded_Multiway_Trees is\n \n       pragma Assert (Target_Count = Source_Count);\n \n+      --  Now link the newly-allocated subtree into the target.\n+\n       Insert_Subtree_Node\n         (Container => Target,\n          Subtree   => Target_Subtree,\n@@ -2838,14 +2855,19 @@ package body Ada.Containers.Bounded_Multiway_Trees is\n \n       Target.Count := Target.Count + Target_Count;\n \n+      --  The manipulation of the Target container is complete. Now we remove\n+      --  the subtree from the Source container.\n+\n+      Remove_Subtree (Source, Position);  -- unlink the subtree\n+\n       --  As with Copy_Subtree, operation Deallocate_Subtree returns a count of\n       --  the number of nodes it deallocates, but it works by incrementing the\n       --  value passed in. We must therefore initialize the count before\n       --  calling it.\n \n       Source_Count := 0;\n \n-      Deallocate_Children (Source, Position, Source_Count);\n+      Deallocate_Subtree (Source, Position, Source_Count);\n       pragma Assert (Source_Count = Target_Count);\n \n       Source.Count := Source.Count - Source_Count;"}, {"sha": "add76057d73dddaa9379a2e8d64a4b9241873f37", "filename": "gcc/ada/a-cimutr.adb", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fa-cimutr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fa-cimutr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cimutr.adb?ref=d3cb4cc0df047020719e5eaa3f5be0c17f256f2c", "patch": "@@ -2101,10 +2101,14 @@ package body Ada.Containers.Indefinite_Multiway_Trees is\n       end if;\n \n       if Target'Address = Source'Address then\n-         if Position.Node = Before.Node\n-           or else Position.Node.Next = Before.Node\n-         then\n-            return;\n+         if Position.Node.Parent = Parent.Node then\n+            if Position.Node = Before.Node then\n+               return;\n+            end if;\n+\n+            if Position.Node.Next = Before.Node then\n+               return;\n+            end if;\n          end if;\n \n          if Target.Busy > 0 then\n@@ -2199,10 +2203,14 @@ package body Ada.Containers.Indefinite_Multiway_Trees is\n          raise Constraint_Error with \"Position cursor designates root\";\n       end if;\n \n-      if Position.Node = Before.Node\n-        or else Position.Node.Next = Before.Node\n-      then\n-         return;\n+      if Position.Node.Parent = Parent.Node then\n+         if Position.Node = Before.Node then\n+            return;\n+         end if;\n+\n+         if Position.Node.Next = Before.Node then\n+            return;\n+         end if;\n       end if;\n \n       if Container.Busy > 0 then"}, {"sha": "b5132f95c4642e3046ab02f75322a287438954cb", "filename": "gcc/ada/a-comutr.adb", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fa-comutr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fa-comutr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-comutr.adb?ref=d3cb4cc0df047020719e5eaa3f5be0c17f256f2c", "patch": "@@ -2147,10 +2147,14 @@ package body Ada.Containers.Multiway_Trees is\n       end if;\n \n       if Target'Address = Source'Address then\n-         if Position.Node = Before.Node\n-           or else Position.Node.Next = Before.Node\n-         then\n-            return;\n+         if Position.Node.Parent = Parent.Node then\n+            if Position.Node = Before.Node then\n+               return;\n+            end if;\n+\n+            if Position.Node.Next = Before.Node then\n+               return;\n+            end if;\n          end if;\n \n          if Target.Busy > 0 then\n@@ -2245,10 +2249,14 @@ package body Ada.Containers.Multiway_Trees is\n          raise Constraint_Error with \"Position cursor designates root\";\n       end if;\n \n-      if Position.Node = Before.Node\n-        or else Position.Node.Next = Before.Node\n-      then\n-         return;\n+      if Position.Node.Parent = Parent.Node then\n+         if Position.Node = Before.Node then\n+            return;\n+         end if;\n+\n+         if Position.Node.Next = Before.Node then\n+            return;\n+         end if;\n       end if;\n \n       if Container.Busy > 0 then"}, {"sha": "9ba5f6ecc56b56d6d6e57e493c550f8daa01a61c", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 25, "deletions": 33, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=d3cb4cc0df047020719e5eaa3f5be0c17f256f2c", "patch": "@@ -4560,19 +4560,10 @@ package body Exp_Ch7 is\n             Adj_Id := Find_Prim_Op (Utyp, TSS_Deep_Adjust);\n          end if;\n \n-      --  For types that are both controlled and have controlled components,\n-      --  generate a call to Deep_Adjust.\n-\n-      elsif Is_Controlled (Utyp)\n-        and then Has_Controlled_Component (Utyp)\n-      then\n-         Adj_Id := Find_Prim_Op (Utyp, TSS_Deep_Adjust);\n-\n-      --  For types that are not controlled themselves, but contain controlled\n-      --  components or can be extended by types with controlled components,\n-      --  create a call to Deep_Adjust.\n+      --  Class-wide types, interfaces and types with controlled components\n \n       elsif Is_Class_Wide_Type (Typ)\n+        or else Is_Interface (Typ)\n         or else Has_Controlled_Component (Utyp)\n       then\n          if Is_Tagged_Type (Utyp) then\n@@ -4581,11 +4572,22 @@ package body Exp_Ch7 is\n             Adj_Id := TSS (Utyp, TSS_Deep_Adjust);\n          end if;\n \n-      --  For types that are derived from Controlled and do not have controlled\n-      --  components, build a call to Adjust.\n+      --  Derivations from [Limited_]Controlled\n+\n+      elsif Is_Controlled (Utyp) then\n+         if Has_Controlled_Component (Utyp) then\n+            Adj_Id := Find_Prim_Op (Utyp, TSS_Deep_Adjust);\n+         else\n+            Adj_Id := Find_Prim_Op (Utyp, Name_Of (Adjust_Case));\n+         end if;\n+\n+      --  Tagged types\n+\n+      elsif Is_Tagged_Type (Utyp) then\n+         Adj_Id := Find_Prim_Op (Utyp, TSS_Deep_Adjust);\n \n       else\n-         Adj_Id := Find_Prim_Op (Utyp, Name_Of (Adjust_Case));\n+         raise Program_Error;\n       end if;\n \n       if Present (Adj_Id) then\n@@ -5493,8 +5495,6 @@ package body Exp_Ch7 is\n       --  have discriminants and contain variant parts. Generate:\n       --\n       --    begin\n-      --       Root_Controlled (V).Finalized := False;\n-      --\n       --       begin\n       --          [Deep_]Adjust (V.Comp_1);\n       --       exception\n@@ -5559,10 +5559,6 @@ package body Exp_Ch7 is\n       --       Raised : Boolean := False;\n       --\n       --    begin\n-      --       if Root_Controlled (V).Finalized then\n-      --          return;\n-      --       end if;\n-      --\n       --       if F then\n       --          begin\n       --             Finalize (V);  --  If applicable\n@@ -5626,8 +5622,6 @@ package body Exp_Ch7 is\n       --             end if;\n       --       end;\n       --\n-      --       Root_Controlled (V).Finalized := True;\n-      --\n       --       if Raised then\n       --          Raise_From_Controlled_Object (E, Abort);\n       --       end if;\n@@ -6040,8 +6034,6 @@ package body Exp_Ch7 is\n          --       Raised : Boolean := False;\n \n          --    begin\n-         --       Root_Controlled (V).Finalized := False;\n-\n          --       <adjust statements>\n \n          --       if Raised then\n@@ -6846,15 +6838,6 @@ package body Exp_Ch7 is\n             Fin_Id := Find_Prim_Op (Utyp, TSS_Deep_Finalize);\n          end if;\n \n-      --  Derivations from [Limited_]Controlled\n-\n-      elsif Is_Controlled (Utyp) then\n-         if Has_Controlled_Component (Utyp) then\n-            Fin_Id := Find_Prim_Op (Utyp, TSS_Deep_Finalize);\n-         else\n-            Fin_Id := Find_Prim_Op (Utyp, Name_Of (Finalize_Case));\n-         end if;\n-\n       --  Class-wide types, interfaces and types with controlled components\n \n       elsif Is_Class_Wide_Type (Typ)\n@@ -6867,6 +6850,15 @@ package body Exp_Ch7 is\n             Fin_Id := TSS (Utyp, TSS_Deep_Finalize);\n          end if;\n \n+      --  Derivations from [Limited_]Controlled\n+\n+      elsif Is_Controlled (Utyp) then\n+         if Has_Controlled_Component (Utyp) then\n+            Fin_Id := Find_Prim_Op (Utyp, TSS_Deep_Finalize);\n+         else\n+            Fin_Id := Find_Prim_Op (Utyp, Name_Of (Finalize_Case));\n+         end if;\n+\n       --  Tagged types\n \n       elsif Is_Tagged_Type (Utyp) then"}, {"sha": "e06b9e075a490c026d32b3b429a3bbcde6c47756", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=d3cb4cc0df047020719e5eaa3f5be0c17f256f2c", "patch": "@@ -3349,6 +3349,7 @@ package body Exp_Util is\n                N_Formal_Ordinary_Fixed_Point_Definition |\n                N_Formal_Package_Declaration             |\n                N_Formal_Private_Type_Definition         |\n+               N_Formal_Incomplete_Type_Definition      |\n                N_Formal_Signed_Integer_Type_Definition  |\n                N_Function_Call                          |\n                N_Function_Specification                 |"}, {"sha": "3d366fd3c0921bdb737feba2576d05941ae4bcd7", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=d3cb4cc0df047020719e5eaa3f5be0c17f256f2c", "patch": "@@ -1259,6 +1259,13 @@ package body Freeze is\n \n                End_Package_Scope (E);\n \n+               if Is_Generic_Instance (E)\n+                 and then Has_Delayed_Freeze (E)\n+               then\n+                  Set_Has_Delayed_Freeze (E, False);\n+                  Expand_N_Package_Declaration (Unit_Declaration_Node (E));\n+               end if;\n+\n             elsif Ekind (E) in Task_Kind\n               and then\n                 (Nkind (Parent (E)) = N_Task_Type_Declaration\n@@ -2297,6 +2304,17 @@ package body Freeze is\n       elsif Inside_A_Generic and then External_Ref_In_Generic (Test_E) then\n          return No_List;\n \n+      --  AI05-0213: a formal incomplete type does not freeze the actual.\n+      --  In the instance, the same applies to the subtype that renames\n+      --  the actual.\n+\n+      elsif Is_Private_Type (E)\n+        and then Is_Generic_Actual_Type (E)\n+        and then No (Full_View (Base_Type (E)))\n+        and then Ada_Version >= Ada_2012\n+      then\n+         return No_List;\n+\n       --  Do not freeze a global entity within an inner scope created during\n       --  expansion. A call to subprogram E within some internal procedure\n       --  (a stream attribute for example) might require freezing E, but the\n@@ -2385,6 +2403,7 @@ package body Freeze is\n                if Nkind (Ritem) = N_Aspect_Specification\n                  and then Entity (Ritem) = E\n                  and then Is_Delayed_Aspect (Ritem)\n+                 and then Scope (E) = Current_Scope\n                then\n                   Aitem := Aspect_Rep_Item (Ritem);\n "}, {"sha": "923eb35e0727f24eaf4b7d28caa07c84104ae6cf", "filename": "gcc/ada/get_scos.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fget_scos.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fget_scos.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fget_scos.adb?ref=d3cb4cc0df047020719e5eaa3f5be0c17f256f2c", "patch": "@@ -306,7 +306,8 @@ begin\n                            Skipc;\n \n                            begin\n-                              Pid := Pragma_Id'Value (Buf (1 .. N));\n+                              Pid :=\n+                                Pragma_Id'Value (\"pragma_\" & Buf (1 .. N));\n                            exception\n                               when Constraint_Error =>\n "}, {"sha": "470f4d6a3928c6806caaa9dd2cf53b1d467d78f9", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=d3cb4cc0df047020719e5eaa3f5be0c17f256f2c", "patch": "@@ -5908,7 +5908,7 @@ package body Make is\n          --  are not supposed to change.\n \n          Osint.Source_File_Data (Cache => True);\n-         Osint.Add_Default_Search_Dirs;\n+\n          Queue_Library_Project_Sources;\n       end if;\n \n@@ -5931,17 +5931,6 @@ package body Make is\n            (\"nothing to do for a main project that is externally built\");\n       end if;\n \n-      --  Get the target parameters, which are only needed for a couple of\n-      --  cases in gnatmake. Protect against an exception, such as the case of\n-      --  system.ads missing from the library, and fail gracefully.\n-\n-      begin\n-         Targparm.Get_Target_Parameters;\n-      exception\n-         when Unrecoverable_Error =>\n-            Make_Failed (\"*** make failed.\");\n-      end;\n-\n       --  Special processing for VM targets\n \n       if Targparm.VM_Target /= No_VM then\n@@ -6116,7 +6105,28 @@ package body Make is\n             Compute_Builder  => Is_First_Main,\n             Current_Work_Dir => Current_Work_Dir.all);\n \n-         Is_First_Main := False;\n+         if Is_First_Main then\n+            --  Put the default source dirs in the source path only now,\n+            --  so that we take the correct ones in the case when --RTS= is\n+            --  specified in the Builder switches.\n+\n+            Osint.Add_Default_Search_Dirs;\n+\n+            --  Get the target parameters, which are only needed for a couple\n+            --  of cases in gnatmake. Protect against an exception, such as the\n+            --  case of system.ads missing from the library, and fail\n+            --  gracefully.\n+\n+            begin\n+               Targparm.Get_Target_Parameters;\n+            exception\n+               when Unrecoverable_Error =>\n+                  Make_Failed (\"*** make failed.\");\n+            end;\n+\n+            Is_First_Main := False;\n+         end if;\n+\n          Executable_Obsolete := False;\n \n          Compute_Executable"}, {"sha": "a7e5242683924769b116c70ef4ab608a800231c0", "filename": "gcc/ada/par-ch12.adb", "status": "modified", "additions": 46, "deletions": 4, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fpar-ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fpar-ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch12.adb?ref=d3cb4cc0df047020719e5eaa3f5be0c17f256f2c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -531,10 +531,39 @@ package body Ch12 is\n            (Decl_Node, P_Known_Discriminant_Part_Opt);\n       end if;\n \n-      T_Is;\n+      if Token = Tok_Semicolon then\n+\n+         --  Ada2012 :  incomplete formal type\n+\n+         Scan; -- past semicolon\n+\n+         if Ada_Version < Ada_2012 then\n+            Error_Msg_N\n+              (\"`formal incomplete type` is an Ada 2012 feature\", Decl_Node);\n+            Error_Msg_N\n+              (\"\\unit must be compiled with -gnat2012 switch\", Decl_Node);\n+         end if;\n+\n+         Set_Formal_Type_Definition\n+           (Decl_Node,\n+             New_Node (N_Formal_Incomplete_Type_Definition, Token_Ptr));\n+         return Decl_Node;\n+\n+      else\n+         T_Is;\n+      end if;\n \n       Def_Node := P_Formal_Type_Definition;\n \n+      if Nkind (Def_Node) = N_Formal_Incomplete_Type_Definition\n+        and then Ada_Version < Ada_2012\n+      then\n+         Error_Msg_N\n+           (\"`formal incomplete type` is an Ada 2012 feature\", Decl_Node);\n+         Error_Msg_N\n+           (\"\\unit must be compiled with -gnat2012 switch\", Decl_Node);\n+      end if;\n+\n       if Def_Node /= Error then\n          Set_Formal_Type_Definition (Decl_Node, Def_Node);\n          P_Aspect_Specifications (Decl_Node);\n@@ -563,6 +592,7 @@ package body Ch12 is\n \n    --  FORMAL_TYPE_DEFINITION ::=\n    --    FORMAL_PRIVATE_TYPE_DEFINITION\n+   --  | FORMAL_INCOMPLETE_TYPE_DEFINITION\n    --  | FORMAL_DERIVED_TYPE_DEFINITION\n    --  | FORMAL_DISCRETE_TYPE_DEFINITION\n    --  | FORMAL_SIGNED_INTEGER_TYPE_DEFINITION\n@@ -704,10 +734,22 @@ package body Ch12 is\n                return Error;\n             end if;\n \n-         when Tok_Private |\n-              Tok_Tagged  =>\n+         when Tok_Private  =>\n             return P_Formal_Private_Type_Definition;\n \n+         when  Tok_Tagged  =>\n+            if Next_Token_Is (Tok_Semicolon) then\n+               Typedef_Node :=\n+                 New_Node (N_Formal_Incomplete_Type_Definition, Token_Ptr);\n+               Set_Tagged_Present (Typedef_Node);\n+\n+               Scan;  --  past tagged\n+               return Typedef_Node;\n+\n+            else\n+               return P_Formal_Private_Type_Definition;\n+            end if;\n+\n          when Tok_Range =>\n             return P_Formal_Signed_Integer_Type_Definition;\n "}, {"sha": "0e67bba3402259b2c226f0a5d7179d9ab72a5d4f", "filename": "gcc/ada/s-stposu.adb", "status": "modified", "additions": 60, "deletions": 17, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fs-stposu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fs-stposu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stposu.adb?ref=d3cb4cc0df047020719e5eaa3f5be0c17f256f2c", "patch": "@@ -91,18 +91,19 @@ package body System.Storage_Pools.Subpools is\n       Alignment       : System.Storage_Elements.Storage_Count;\n       Is_Controlled   : Boolean := True)\n    is\n-      --  ??? This membership test gives the wrong result when Pool has\n-      --  subpools.\n-\n       Is_Subpool_Allocation : constant Boolean :=\n-                                Pool in Root_Storage_Pool_With_Subpools;\n+                                Pool in Root_Storage_Pool_With_Subpools'Class;\n \n       Master  : Finalization_Master_Ptr := null;\n       N_Addr  : Address;\n       N_Ptr   : FM_Node_Ptr;\n       N_Size  : Storage_Count;\n       Subpool : Subpool_Handle := null;\n \n+      Header_And_Padding : Storage_Offset;\n+      --  This offset includes the size of a FM_Node plus any additional\n+      --  padding due to a larger alignment.\n+\n    begin\n       --  Step 1: Pool-related runtime checks\n \n@@ -165,7 +166,7 @@ package body System.Storage_Pools.Subpools is\n          Master := Context_Master;\n       end if;\n \n-      --  Step 2: Master-related runtime checks\n+      --  Step 2: Master-related runtime checks and size calculations\n \n       --  Allocation of a descendant from [Limited_]Controlled, a class-wide\n       --  object or a record with controlled components.\n@@ -179,9 +180,17 @@ package body System.Storage_Pools.Subpools is\n             raise Program_Error with \"allocation after finalization started\";\n          end if;\n \n-         --  The size must acount for the hidden header preceding the object\n+         --  The size must acount for the hidden header preceding the object.\n+         --  Account for possible padding space before the header due to a\n+         --  larger alignment.\n+\n+         if Alignment > Header_Size then\n+            Header_And_Padding := Alignment;\n+         else\n+            Header_And_Padding := Header_Size;\n+         end if;\n \n-         N_Size := Storage_Size + Header_Size;\n+         N_Size := Storage_Size + Header_And_Padding;\n \n       --  Non-controlled allocation\n \n@@ -211,9 +220,23 @@ package body System.Storage_Pools.Subpools is\n       if Is_Controlled then\n \n          --  Map the allocated memory into a FM_Node record. This converts the\n-         --  top of the allocated bits into a list header.\n-\n-         N_Ptr := Address_To_FM_Node_Ptr (N_Addr);\n+         --  top of the allocated bits into a list header. If there is padding\n+         --  due to larger alignment, the header is placed right next to the\n+         --  object:\n+\n+         --    N_Addr  N_Ptr\n+         --    |       |\n+         --    V       V\n+         --    +-------+---------------+----------------------+\n+         --    |Padding|    Header     |        Object        |\n+         --    +-------+---------------+----------------------+\n+         --    ^       ^               ^\n+         --    |       +- Header_Size -+\n+         --    |                       |\n+         --    +- Header_And_Padding --+\n+\n+         N_Ptr :=\n+           Address_To_FM_Node_Ptr (N_Addr + Header_And_Padding - Header_Size);\n \n          --  Check whether primitive Finalize_Address is available. If it is\n          --  not, then either the expansion of the designated type failed or\n@@ -233,7 +256,7 @@ package body System.Storage_Pools.Subpools is\n          --  Move the address from the hidden list header to the start of the\n          --  object. This operation effectively hides the list header.\n \n-         Addr := N_Addr + Header_Offset;\n+         Addr := N_Addr + Header_And_Padding;\n       else\n          Addr := N_Addr;\n       end if;\n@@ -273,30 +296,50 @@ package body System.Storage_Pools.Subpools is\n       N_Ptr  : FM_Node_Ptr;\n       N_Size : Storage_Count;\n \n+      Header_And_Padding : Storage_Offset;\n+      --  This offset includes the size of a FM_Node plus any additional\n+      --  padding due to a larger alignment.\n+\n    begin\n       --  Step 1: Detachment\n \n       if Is_Controlled then\n+         if Alignment > Header_Size then\n+            Header_And_Padding := Alignment;\n+         else\n+            Header_And_Padding := Header_Size;\n+         end if;\n \n-         --  Move the address from the object to the beginning of the list\n-         --  header.\n-\n-         N_Addr := Addr - Header_Offset;\n+         --    N_Addr  N_Ptr           Addr (from input)\n+         --    |       |               |\n+         --    V       V               V\n+         --    +-------+---------------+----------------------+\n+         --    |Padding|    Header     |        Object        |\n+         --    +-------+---------------+----------------------+\n+         --    ^       ^               ^\n+         --    |       +- Header_Size -+\n+         --    |                       |\n+         --    +- Header_And_Padding --+\n \n          --  Convert the bits preceding the object into a list header\n \n-         N_Ptr := Address_To_FM_Node_Ptr (N_Addr);\n+         N_Ptr := Address_To_FM_Node_Ptr (Addr - Header_Size);\n \n          --  Detach the object from the related finalization master. This\n          --  action does not need to know the prior context used during\n          --  allocation.\n \n          Detach (N_Ptr);\n \n+         --  Move the address from the object to the beginning of the list\n+         --  header.\n+\n+         N_Addr := Addr - Header_And_Padding;\n+\n          --  The size of the deallocated object must include the size of the\n          --  hidden list header.\n \n-         N_Size := Storage_Size + Header_Size;\n+         N_Size := Storage_Size + Header_And_Padding;\n       else\n          N_Addr := Addr;\n          N_Size := Storage_Size;"}, {"sha": "be0c907f71ae7b543a11a4ca965f7368a6598c87", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=d3cb4cc0df047020719e5eaa3f5be0c17f256f2c", "patch": "@@ -674,6 +674,7 @@ package body Sem is\n            N_Formal_Modular_Type_Definition         |\n            N_Formal_Ordinary_Fixed_Point_Definition |\n            N_Formal_Private_Type_Definition         |\n+           N_Formal_Incomplete_Type_Definition      |\n            N_Formal_Signed_Integer_Type_Definition  |\n            N_Function_Specification                 |\n            N_Generic_Association                    |"}, {"sha": "9e10682bb2406309298055411fb0b863c40fa0f1", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 144, "deletions": 66, "changes": 210, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=d3cb4cc0df047020719e5eaa3f5be0c17f256f2c", "patch": "@@ -342,6 +342,9 @@ package body Sem_Ch12 is\n       Def : Node_Id);\n    --  Creates a new private type, which does not require completion\n \n+   procedure Analyze_Formal_Incomplete_Type (T   : Entity_Id; Def : Node_Id);\n+   --  Ada2012 : Creates a new incomplete type, whose actual does not freeze.\n+\n    procedure Analyze_Generic_Formal_Part (N : Node_Id);\n \n    procedure Analyze_Generic_Access_Type (T : Entity_Id; Def : Node_Id);\n@@ -1300,9 +1303,14 @@ package body Sem_Ch12 is\n                        Assoc);\n \n                      --  An instantiation is a freeze point for the actuals,\n-                     --  unless this is a rewritten formal package.\n+                     --  unless this is a rewritten formal package, and\n+                     --  unless it is an Ada2012 formal incomplete type.\n \n-                     if Nkind (I_Node) /= N_Formal_Package_Declaration then\n+                     if Nkind (I_Node) /= N_Formal_Package_Declaration\n+                       and then\n+                         Ekind (Defining_Identifier (Analyzed_Formal)) /=\n+                           E_Incomplete_Type\n+                     then\n                         Append_Elmt (Entity (Match), Actual_Types);\n                      end if;\n                   end if;\n@@ -2361,6 +2369,26 @@ package body Sem_Ch12 is\n       Set_RM_Size   (T, RM_Size (Standard_Integer));\n    end Analyze_Formal_Private_Type;\n \n+   ------------------------------------\n+   -- Analyze_Formal_Incomplete_Type --\n+   ------------------------------------\n+\n+   procedure Analyze_Formal_Incomplete_Type\n+     (T   : Entity_Id;\n+      Def : Node_Id)\n+   is\n+   begin\n+      Enter_Name (T);\n+      Set_Ekind (T, E_Incomplete_Type);\n+      Set_Etype (T, T);\n+\n+      if Tagged_Present (Def) then\n+         Set_Is_Tagged_Type (T);\n+         Make_Class_Wide_Type (T);\n+         Set_Direct_Primitive_Operations (T, New_Elmt_List);\n+      end if;\n+   end Analyze_Formal_Incomplete_Type;\n+\n    ----------------------------------------\n    -- Analyze_Formal_Signed_Integer_Type --\n    ----------------------------------------\n@@ -2594,6 +2622,9 @@ package body Sem_Ch12 is\n          when N_Formal_Derived_Type_Definition         =>\n             Analyze_Formal_Derived_Type (N, T, Def);\n \n+         when N_Formal_Incomplete_Type_Definition         =>\n+            Analyze_Formal_Incomplete_Type (T, Def);\n+\n          when N_Formal_Discrete_Type_Definition        =>\n             Analyze_Formal_Discrete_Type (T, Def);\n \n@@ -9447,9 +9478,13 @@ package body Sem_Ch12 is\n       procedure Validate_Access_Type_Instance;\n       procedure Validate_Derived_Type_Instance;\n       procedure Validate_Derived_Interface_Type_Instance;\n+      procedure Validate_Discriminated_Formal_Type;\n       procedure Validate_Interface_Type_Instance;\n       procedure Validate_Private_Type_Instance;\n+      procedure Validate_Incomplete_Type_Instance;\n       --  These procedures perform validation tests for the named case\n+      --  Validate_Discriminated_Formal_Type is shared by formal private\n+      --  types and Ada2012 formal incomplete types.\n \n       function Subtypes_Match (Gen_T, Act_T : Entity_Id) return Boolean;\n       --  Check that base types are the same and that the subtypes match\n@@ -10272,73 +10307,17 @@ package body Sem_Ch12 is\n          end if;\n       end Validate_Derived_Type_Instance;\n \n-      --------------------------------------\n-      -- Validate_Interface_Type_Instance --\n-      --------------------------------------\n-\n-      procedure Validate_Interface_Type_Instance is\n-      begin\n-         if not Is_Interface (Act_T) then\n-            Error_Msg_NE\n-              (\"actual for formal interface type must be an interface\",\n-                Actual, Gen_T);\n-\n-         elsif Is_Limited_Type (Act_T) /= Is_Limited_Type (A_Gen_T)\n-           or else\n-             Is_Task_Interface (A_Gen_T) /= Is_Task_Interface (Act_T)\n-           or else\n-             Is_Protected_Interface (A_Gen_T) /=\n-               Is_Protected_Interface (Act_T)\n-           or else\n-             Is_Synchronized_Interface (A_Gen_T) /=\n-               Is_Synchronized_Interface (Act_T)\n-         then\n-            Error_Msg_NE\n-              (\"actual for interface& does not match (RM 12.5.5(4))\",\n-               Actual, Gen_T);\n-         end if;\n-      end Validate_Interface_Type_Instance;\n-\n-      ------------------------------------\n-      -- Validate_Private_Type_Instance --\n-      ------------------------------------\n+      ----------------------------------------\n+      -- Validate_Discriminated_Formal_Type --\n+      ----------------------------------------\n \n-      procedure Validate_Private_Type_Instance is\n+      procedure Validate_Discriminated_Formal_Type is\n          Formal_Discr : Entity_Id;\n          Actual_Discr : Entity_Id;\n          Formal_Subt  : Entity_Id;\n \n       begin\n-         if Is_Limited_Type (Act_T)\n-           and then not Is_Limited_Type (A_Gen_T)\n-         then\n-            Error_Msg_NE\n-              (\"actual for non-limited & cannot be a limited type\", Actual,\n-               Gen_T);\n-            Explain_Limited_Type (Act_T, Actual);\n-            Abandon_Instantiation (Actual);\n-\n-         elsif Known_To_Have_Preelab_Init (A_Gen_T)\n-           and then not Has_Preelaborable_Initialization (Act_T)\n-         then\n-            Error_Msg_NE\n-              (\"actual for & must have preelaborable initialization\", Actual,\n-               Gen_T);\n-\n-         elsif Is_Indefinite_Subtype (Act_T)\n-            and then not Is_Indefinite_Subtype (A_Gen_T)\n-            and then Ada_Version >= Ada_95\n-         then\n-            Error_Msg_NE\n-              (\"actual for & must be a definite subtype\", Actual, Gen_T);\n-\n-         elsif not Is_Tagged_Type (Act_T)\n-           and then Is_Tagged_Type (A_Gen_T)\n-         then\n-            Error_Msg_NE\n-              (\"actual for & must be a tagged type\", Actual, Gen_T);\n-\n-         elsif Has_Discriminants (A_Gen_T) then\n+         if Has_Discriminants (A_Gen_T) then\n             if not Has_Discriminants (Act_T) then\n                Error_Msg_NE\n                  (\"actual for & must have discriminants\", Actual, Gen_T);\n@@ -10403,9 +10382,89 @@ package body Sem_Ch12 is\n                   Abandon_Instantiation (Actual);\n                end if;\n             end if;\n+         end if;\n+      end Validate_Discriminated_Formal_Type;\n+\n+      ---------------------------------------\n+      -- Validate_Incomplete_Type_Instance --\n+      ---------------------------------------\n \n+      procedure Validate_Incomplete_Type_Instance is\n+      begin\n+         if not Is_Tagged_Type (Act_T)\n+           and then Is_Tagged_Type (A_Gen_T)\n+         then\n+            Error_Msg_NE\n+              (\"actual for & must be a tagged type\", Actual, Gen_T);\n+         end if;\n+\n+         Validate_Discriminated_Formal_Type;\n+      end Validate_Incomplete_Type_Instance;\n+\n+      --------------------------------------\n+      -- Validate_Interface_Type_Instance --\n+      --------------------------------------\n+\n+      procedure Validate_Interface_Type_Instance is\n+      begin\n+         if not Is_Interface (Act_T) then\n+            Error_Msg_NE\n+              (\"actual for formal interface type must be an interface\",\n+                Actual, Gen_T);\n+\n+         elsif Is_Limited_Type (Act_T) /= Is_Limited_Type (A_Gen_T)\n+           or else\n+             Is_Task_Interface (A_Gen_T) /= Is_Task_Interface (Act_T)\n+           or else\n+             Is_Protected_Interface (A_Gen_T) /=\n+               Is_Protected_Interface (Act_T)\n+           or else\n+             Is_Synchronized_Interface (A_Gen_T) /=\n+               Is_Synchronized_Interface (Act_T)\n+         then\n+            Error_Msg_NE\n+              (\"actual for interface& does not match (RM 12.5.5(4))\",\n+               Actual, Gen_T);\n          end if;\n+      end Validate_Interface_Type_Instance;\n+\n+      ------------------------------------\n+      -- Validate_Private_Type_Instance --\n+      ------------------------------------\n \n+      procedure Validate_Private_Type_Instance is\n+      begin\n+         if Is_Limited_Type (Act_T)\n+           and then not Is_Limited_Type (A_Gen_T)\n+         then\n+            Error_Msg_NE\n+              (\"actual for non-limited & cannot be a limited type\", Actual,\n+               Gen_T);\n+            Explain_Limited_Type (Act_T, Actual);\n+            Abandon_Instantiation (Actual);\n+\n+         elsif Known_To_Have_Preelab_Init (A_Gen_T)\n+           and then not Has_Preelaborable_Initialization (Act_T)\n+         then\n+            Error_Msg_NE\n+              (\"actual for & must have preelaborable initialization\", Actual,\n+               Gen_T);\n+\n+         elsif Is_Indefinite_Subtype (Act_T)\n+            and then not Is_Indefinite_Subtype (A_Gen_T)\n+            and then Ada_Version >= Ada_95\n+         then\n+            Error_Msg_NE\n+              (\"actual for & must be a definite subtype\", Actual, Gen_T);\n+\n+         elsif not Is_Tagged_Type (Act_T)\n+           and then Is_Tagged_Type (A_Gen_T)\n+         then\n+            Error_Msg_NE\n+              (\"actual for & must be a tagged type\", Actual, Gen_T);\n+         end if;\n+\n+         Validate_Discriminated_Formal_Type;\n          Ancestor := Gen_T;\n       end Validate_Private_Type_Instance;\n \n@@ -10463,7 +10522,13 @@ package body Sem_Ch12 is\n                       and then\n                          Ekind (Root_Type (Act_T)) = E_Incomplete_Type)\n          then\n-            if Is_Class_Wide_Type (Act_T)\n+            --  If the formal is an incomplete type, the actual can be\n+            --  incomplete as well.\n+\n+            if Ekind (A_Gen_T) = E_Incomplete_Type then\n+               null;\n+\n+            elsif Is_Class_Wide_Type (Act_T)\n               or else No (Full_View (Act_T))\n             then\n                Error_Msg_N (\"premature use of incomplete type\", Actual);\n@@ -10486,7 +10551,14 @@ package body Sem_Ch12 is\n            and then not Is_Derived_Type (Act_T)\n            and then No (Full_View (Root_Type (Act_T)))\n          then\n-            Error_Msg_N (\"premature use of private type\", Actual);\n+            --  If the formal is an incomplete type, the actual can be\n+            --  private or incomplete as well.\n+\n+            if Ekind (A_Gen_T) = E_Incomplete_Type then\n+               null;\n+            else\n+               Error_Msg_N (\"premature use of private type\", Actual);\n+            end if;\n \n          elsif Has_Private_Component (Act_T) then\n             Error_Msg_N\n@@ -10528,6 +10600,9 @@ package body Sem_Ch12 is\n             when N_Formal_Private_Type_Definition =>\n                Validate_Private_Type_Instance;\n \n+            when N_Formal_Incomplete_Type_Definition =>\n+               Validate_Incomplete_Type_Instance;\n+\n             when N_Formal_Derived_Type_Definition =>\n                Validate_Derived_Type_Instance;\n \n@@ -10642,7 +10717,10 @@ package body Sem_Ch12 is\n             Set_Generic_Parent_Type (Decl_Node, Ancestor);\n          end if;\n \n-      elsif Nkind (Def) = N_Formal_Private_Type_Definition then\n+      elsif Nkind_In (Def,\n+        N_Formal_Private_Type_Definition,\n+        N_Formal_Incomplete_Type_Definition)\n+      then\n          Set_Generic_Parent_Type (Decl_Node, A_Gen_T);\n       end if;\n "}, {"sha": "13e4a6ac051713fc090fed1d1e2aac2f5baaba14", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=d3cb4cc0df047020719e5eaa3f5be0c17f256f2c", "patch": "@@ -2344,10 +2344,12 @@ package body Sem_Ch6 is\n          --  expand the freeze actions that include the bodies. In particular,\n          --  extra formals for accessibility or for return-in-place may need\n          --  to be generated. Freeze nodes, if any, are inserted before the\n-         --  current body.\n+         --  current body. These freeze actions are also needed in ASIS mode\n+         --  to enable the proper back-annotations.\n \n          if not Is_Frozen (Spec_Id)\n-           and then Expander_Active\n+           and then\n+             (Expander_Active or else ASIS_Mode)\n          then\n             --  Force the generation of its freezing node to ensure proper\n             --  management of access types in the backend."}, {"sha": "471d0f8aa85e6cb2af82a10073e3aab38d8b55cc", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=d3cb4cc0df047020719e5eaa3f5be0c17f256f2c", "patch": "@@ -1195,9 +1195,11 @@ package body Sem_Ch7 is\n       while Present (E) loop\n \n          --  Check on incomplete types\n+         --  AI05-213 : a formal incomplete type has no completion.\n \n          if Ekind (E) = E_Incomplete_Type\n            and then No (Full_View (E))\n+           and then not Is_Generic_Type (E)\n          then\n             Error_Msg_N (\"no declaration in visible part for incomplete}\", E);\n          end if;\n@@ -2585,7 +2587,9 @@ package body Sem_Ch7 is\n                and then Unit_Requires_Body (E))\n \n            or else\n-             (Ekind (E) = E_Incomplete_Type and then No (Full_View (E)))\n+             (Ekind (E) = E_Incomplete_Type\n+               and then No (Full_View (E))\n+               and then not Is_Generic_Type (E))\n \n            or else\n             ((Ekind (E) = E_Task_Type or else"}, {"sha": "d1f00676284a203938bc6990773da8671d9a67c9", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=d3cb4cc0df047020719e5eaa3f5be0c17f256f2c", "patch": "@@ -2930,6 +2930,7 @@ package body Sinfo is\n       (N : Node_Id) return Boolean is\n    begin\n       pragma Assert (False\n+        or else NT (N).Nkind = N_Formal_Incomplete_Type_Definition\n         or else NT (N).Nkind = N_Formal_Private_Type_Definition\n         or else NT (N).Nkind = N_Incomplete_Type_Declaration\n         or else NT (N).Nkind = N_Private_Type_Declaration\n@@ -5971,6 +5972,7 @@ package body Sinfo is\n       (N : Node_Id; Val : Boolean := True) is\n    begin\n       pragma Assert (False\n+        or else NT (N).Nkind = N_Formal_Incomplete_Type_Definition\n         or else NT (N).Nkind = N_Formal_Private_Type_Definition\n         or else NT (N).Nkind = N_Incomplete_Type_Declaration\n         or else NT (N).Nkind = N_Private_Type_Declaration"}, {"sha": "07f532e4bdc8c76387f39a7911b9f4d932f95fee", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=d3cb4cc0df047020719e5eaa3f5be0c17f256f2c", "patch": "@@ -6209,6 +6209,7 @@ package Sinfo is\n       --    type DEFINING_IDENTIFIER [DISCRIMINANT_PART]\n       --      is FORMAL_TYPE_DEFINITION\n       --        [ASPECT_SPECIFICATIONS];\n+      --  | type DEFINING_IDENTIFIER [DISCRIMINANT_PART] [is tagged]\n \n       --  N_Formal_Type_Declaration\n       --  Sloc points to TYPE\n@@ -6234,6 +6235,12 @@ package Sinfo is\n       --  | FORMAL_ARRAY_TYPE_DEFINITION\n       --  | FORMAL_ACCESS_TYPE_DEFINITION\n       --  | FORMAL_INTERFACE_TYPE_DEFINITION\n+      --  | FORMAL_INCOMPLETE_TYPE_DEFINITION\n+\n+      --  The Ada2012 syntax introduces two new non-terminals;\n+      --  Formal_[Complete_| Incomplete_] Type_Declaration just to introduce\n+      --  the later category. Here we introduce an incomplete type definition\n+      --  in order to preserve as much as possible the existing structure.\n \n       ---------------------------------------------\n       -- 12.5.1  Formal Private Type Definition --\n@@ -6268,6 +6275,17 @@ package Sinfo is\n       --  Synchronized_Present (Flag7)\n       --  Interface_List (List2) (set to No_List if none)\n \n+      ------------------------------------------------\n+      -- 12.5.1  Formal Incomplete  Type Definition --\n+      ------------------------------------------------\n+\n+      --  FORMAL_INCOMPLETE_TYPE_DEFINITION ::=\n+      --  [tagged]\n+\n+      --  N_Formal_Incomplete_Type_Definition\n+      --  Sloc points to identifier of parent\n+      --  Tagged_Present (Flag15)\n+\n       ---------------------------------------------\n       -- 12.5.2  Formal Discrete Type Definition --\n       ---------------------------------------------\n@@ -7805,6 +7823,7 @@ package Sinfo is\n       N_Formal_Ordinary_Fixed_Point_Definition,\n       N_Formal_Package_Declaration,\n       N_Formal_Private_Type_Definition,\n+      N_Formal_Incomplete_Type_Definition,\n       N_Formal_Signed_Integer_Type_Definition,\n       N_Freeze_Entity,\n       N_Generic_Association,\n@@ -11320,6 +11339,13 @@ package Sinfo is\n         4 => False,   --  unused\n         5 => False),  --  unused\n \n+     N_Formal_Incomplete_Type_Definition =>\n+       (1 => False,   --  unused\n+        2 => False,   --  unused\n+        3 => False,   --  unused\n+        4 => False,   --  unused\n+        5 => False),  --  unused\n+\n      N_Formal_Derived_Type_Definition =>\n        (1 => False,   --  unused\n         2 => True,    --  Interface_List (List2)"}, {"sha": "0ccd8c2d01a0a572d87a170d29123d823871c812", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cb4cc0df047020719e5eaa3f5be0c17f256f2c/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=d3cb4cc0df047020719e5eaa3f5be0c17f256f2c", "patch": "@@ -1801,6 +1801,11 @@ package body Sprint is\n \n             Write_Str_With_Col_Check_Sloc (\"private\");\n \n+         when N_Formal_Incomplete_Type_Definition =>\n+            if Tagged_Present (Node) then\n+               Write_Str_With_Col_Check (\"is tagged \");\n+            end if;\n+\n          when N_Formal_Signed_Integer_Type_Definition =>\n             Write_Str_With_Col_Check_Sloc (\"range <>\");\n \n@@ -1814,7 +1819,12 @@ package body Sprint is\n                Write_Str_With_Col_Check (\"(<>)\");\n             end if;\n \n-            Write_Str_With_Col_Check (\" is \");\n+            if Nkind (Formal_Type_Definition (Node)) /=\n+                N_Formal_Incomplete_Type_Definition\n+            then\n+               Write_Str_With_Col_Check (\" is \");\n+            end if;\n+\n             Sprint_Node (Formal_Type_Definition (Node));\n             Write_Char (';');\n "}]}