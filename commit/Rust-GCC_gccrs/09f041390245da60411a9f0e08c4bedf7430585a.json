{"sha": "09f041390245da60411a9f0e08c4bedf7430585a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDlmMDQxMzkwMjQ1ZGE2MDQxMWE5ZjBlMDhjNGJlZGY3NDMwNTg1YQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2020-04-13T21:31:44Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2020-04-13T21:31:44Z"}, "message": "PR c/92326 - wrong bound in zero-length array diagnostics\n\ngcc/c-family/ChangeLog:\n\n\tPR c/92326\n\t* c-pretty-print.c (c_pretty_printer::direct_abstract_declarator): Avoid\n\tprinting array bound for flexible array members.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c/92326\n\t* c-c++-common/Warray-bounds-8.c: New test.\n\t* gcc.dg/Warray-bounds-46.c: Adjust expected format of flexible array\n\tmemebrs in diagnostics.\n\t* gcc.dg/Warray-bounds-49.c: Same.", "tree": {"sha": "b94dcbb1e95bc2b7de4d5b757fc0c9f825ffe3c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b94dcbb1e95bc2b7de4d5b757fc0c9f825ffe3c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09f041390245da60411a9f0e08c4bedf7430585a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09f041390245da60411a9f0e08c4bedf7430585a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09f041390245da60411a9f0e08c4bedf7430585a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09f041390245da60411a9f0e08c4bedf7430585a/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1dcb779916502a44b4ae67d6bf60eb59474bd78c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dcb779916502a44b4ae67d6bf60eb59474bd78c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dcb779916502a44b4ae67d6bf60eb59474bd78c"}], "stats": {"total": 82, "additions": 60, "deletions": 22}, "files": [{"sha": "d0569d71803dce8baeb50d00392d5232e7123656", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09f041390245da60411a9f0e08c4bedf7430585a/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09f041390245da60411a9f0e08c4bedf7430585a/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=09f041390245da60411a9f0e08c4bedf7430585a", "patch": "@@ -1,3 +1,9 @@\n+2020-04-13  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/92326\n+\t* c-pretty-print.c (c_pretty_printer::direct_abstract_declarator): Avoid\n+\tprinting array bound for flexible array members.\n+\n 2020-04-13  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* c-cppbuiltin.c (c_cpp_builtins): Update coroutines builtin"}, {"sha": "eccb63096fd063ba00da1bf3fa0ed7d778b379da", "filename": "gcc/c-family/c-pretty-print.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09f041390245da60411a9f0e08c4bedf7430585a/gcc%2Fc-family%2Fc-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09f041390245da60411a9f0e08c4bedf7430585a/gcc%2Fc-family%2Fc-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pretty-print.c?ref=09f041390245da60411a9f0e08c4bedf7430585a", "patch": "@@ -593,7 +593,9 @@ c_pretty_printer::direct_abstract_declarator (tree t)\n \t\texpression (fold_build2 (PLUS_EXPR, type, maxval,\n \t\t\t\t\t build_int_cst (type, 1)));\n \t    }\n-\t  else\n+\t  else if (TYPE_SIZE (t))\n+\t    /* Print zero for zero-length arrays but not for flexible\n+\t       array members whose TYPE_SIZE is null.  */\n \t    pp_string (this, \"0\");\n \t}\n       pp_c_right_bracket (this);"}, {"sha": "723d4841016559e85b0b59f66d9cd4587d913708", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09f041390245da60411a9f0e08c4bedf7430585a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09f041390245da60411a9f0e08c4bedf7430585a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=09f041390245da60411a9f0e08c4bedf7430585a", "patch": "@@ -1,3 +1,11 @@\n+2020-04-13  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/92326\n+\t* c-c++-common/Warray-bounds-8.c: New test.\n+\t* gcc.dg/Warray-bounds-46.c: Adjust expected format of flexible array\n+\tmemebrs in diagnostics.\n+\t* gcc.dg/Warray-bounds-49.c: Same.\n+\n 2020-04-13  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/94521"}, {"sha": "64202ddd5dfd9da6220f324548a9befda6f7ebaa", "filename": "gcc/testsuite/c-c++-common/Warray-bounds-8.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09f041390245da60411a9f0e08c4bedf7430585a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWarray-bounds-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09f041390245da60411a9f0e08c4bedf7430585a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWarray-bounds-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWarray-bounds-8.c?ref=09f041390245da60411a9f0e08c4bedf7430585a", "patch": "@@ -0,0 +1,22 @@\n+/* PR c/92326 - wrong bound in zero-length array diagnostics\n+   { dg-do compile }\n+   { dg-options \"-O2 -Wall\" } */\n+\n+extern int a0[0];\n+extern int ax[];\n+\n+void warn_global_array (void)\n+{\n+  a0[0] = 0;        // { dg-warning \"array bounds of 'int *\\\\\\[0]'\" }\n+  ax[-1] = 0;       // { dg-warning \"array bounds of 'int *\\\\\\[]'\" }\n+}\n+\n+\n+struct S0 { int n, a0[0]; } s0;\n+struct Sx { int n, ax[]; } sx = { 0 };\n+\n+void warn_member_array (void)\n+{\n+  s0.a0[0] = 0;     // { dg-warning \"array bounds of 'int *\\\\\\[0]'\" }\n+  sx.ax[0] = 0;     // { dg-warning \"array bounds of 'int *\\\\\\[]'\" }\n+}"}, {"sha": "9078c6f5998093fadf715893365a080ad17b9a98", "filename": "gcc/testsuite/gcc.dg/Warray-bounds-46.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09f041390245da60411a9f0e08c4bedf7430585a/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-46.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09f041390245da60411a9f0e08c4bedf7430585a/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-46.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-46.c?ref=09f041390245da60411a9f0e08c4bedf7430585a", "patch": "@@ -95,13 +95,13 @@ void strcpy_global_array (void)\n   /* GMA2 is external but because it's an array its definition in another\n      translation unit may not provide an initializer for the flexible array\n      member.  Verify that a warning is issued for access to it.  */\n-  T (gma2[0].ax, 1);      // { dg-warning \"'strcpy' offset \\\\\\[157, 158] from the object at 'gma2' is out of the bounds of referenced subobject 'ax' with type 'char\\\\\\[0]' at offset 157\" }\n-  T (gma2[0].ax, 7);      // { dg-warning \"'strcpy' offset \\\\\\[157, 164] from the object at 'gma2' is out of the bounds of referenced subobject 'ax' with type 'char\\\\\\[0]' at offset 157\" }\n+  T (gma2[0].ax, 1);      // { dg-warning \"'strcpy' offset \\\\\\[157, 158] from the object at 'gma2' is out of the bounds of referenced subobject 'ax' with type 'char\\\\\\[]' at offset 157\" }\n+  T (gma2[0].ax, 7);      // { dg-warning \"'strcpy' offset \\\\\\[157, 164] from the object at 'gma2' is out of the bounds of referenced subobject 'ax' with type 'char\\\\\\[]' at offset 157\" }\n \n-  /* IGMA_ is internal and provides on definition for the flexible array\n-     member.  Verify that a warnin is issued for out-of-bounds accesses\n+  /* IGMA2_ is internal and provides no definition for the flexible array\n+     member.  Verify that a warning is issued for out-of-bounds accesses\n      to it.  */\n-  T (igma2_[0].ax, 1);    // { dg-warning \"'strcpy' offset \\\\\\[157, 158] from the object at 'igma2_' is out of the bounds of referenced subobject 'ax' with type 'char\\\\\\[0]' at offset 157\" }\n+  T (igma2_[0].ax, 1);    // { dg-warning \"'strcpy' offset \\\\\\[157, 158] from the object at 'igma2_' is out of the bounds of referenced subobject 'ax' with type 'char\\\\\\[]' at offset 157\" }\n \n   T (igma_3.ax, 0);\n   T (igma_3.ax, 1);\n@@ -134,7 +134,7 @@ void strcpy_local (void)\n   T (lma.a17, 16);\n   T (lma.a17, 17);        // { dg-warning \"'strcpy' offset 157 from the object at 'lma' is out of the bounds of referenced subobject 'a17' with type 'char\\\\\\[17]' at offset 140\" }\n \n-  T (lma.ax, 0);          // { dg-warning \"'strcpy' offset 157 from the object at 'lma' is out of the bounds of referenced subobject 'ax' with type 'char\\\\\\[0]' at offset 157\" }\n+  T (lma.ax, 0);          // { dg-warning \"'strcpy' offset 157 from the object at 'lma' is out of the bounds of referenced subobject 'ax' with type 'char\\\\\\[]' at offset 157\" }\n }\n \n \n@@ -191,11 +191,11 @@ void strcpy_ref (struct MA17 *pma)\n      array.  The warning assumes that PMA doesn't point to the last element\n      of the array which could in theory have nonzero elements without\n      overlapping other objects.  */\n-  T (pma[1].ax, 0);       // { dg-warning \"'strcpy' offset 314 from the object at 'pma' is out of the bounds of referenced subobject 'ax' with type 'char\\\\\\[0]' at offset 314\" }\n-  T ((pma + 1)->ax, 1);   // { dg-warning \"'strcpy' offset \\\\\\[314, 315] from the object at 'pma' is out of the bounds of referenced subobject 'ax' with type 'char\\\\\\[0]' at offset 314\" }\n-  T ((pma + 1)[1].ax, 2); // { dg-warning \"'strcpy' offset \\\\\\[471, 473] from the object at 'pma' is out of the bounds of referenced subobject 'ax' with type 'char\\\\\\[0]' at offset 471\" }\n-  T ((*(pma + 2)).ax, 2); // { dg-warning \"'strcpy' offset \\\\\\[471, 473] from the object at 'pma' is out of the bounds of referenced subobject 'ax' with type 'char\\\\\\[0]' at offset 471\" }\n-  T (pma[3].ax, 9);       // { dg-warning \"'strcpy' offset \\\\\\[628, 637] from the object at 'pma' is out of the bounds of referenced subobject 'ax' with type 'char\\\\\\[0]' at offset 628\" }\n+  T (pma[1].ax, 0);       // { dg-warning \"'strcpy' offset 314 from the object at 'pma' is out of the bounds of referenced subobject 'ax' with type 'char\\\\\\[]' at offset 314\" }\n+  T ((pma + 1)->ax, 1);   // { dg-warning \"'strcpy' offset \\\\\\[314, 315] from the object at 'pma' is out of the bounds of referenced subobject 'ax' with type 'char\\\\\\[]' at offset 314\" }\n+  T ((pma + 1)[1].ax, 2); // { dg-warning \"'strcpy' offset \\\\\\[471, 473] from the object at 'pma' is out of the bounds of referenced subobject 'ax' with type 'char\\\\\\[]' at offset 471\" }\n+  T ((*(pma + 2)).ax, 2); // { dg-warning \"'strcpy' offset \\\\\\[471, 473] from the object at 'pma' is out of the bounds of referenced subobject 'ax' with type 'char\\\\\\[]' at offset 471\" }\n+  T (pma[3].ax, 9);       // { dg-warning \"'strcpy' offset \\\\\\[628, 637] from the object at 'pma' is out of the bounds of referenced subobject 'ax' with type 'char\\\\\\[]' at offset 628\" }\n \n   T (pma[-1].a1, 0);\n   T (pma[-1].a1, 1);      // { dg-warning \"'strcpy' offset -152 from the object at 'pma' is out of the bounds of referenced subobject 'a1' with type 'char\\\\\\[1]' at offset -153\" }"}, {"sha": "f271dd526b841e739919c873bcf039e7cd1241a2", "filename": "gcc/testsuite/gcc.dg/Warray-bounds-49.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09f041390245da60411a9f0e08c4bedf7430585a/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-49.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09f041390245da60411a9f0e08c4bedf7430585a/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-49.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-49.c?ref=09f041390245da60411a9f0e08c4bedf7430585a", "patch": "@@ -17,7 +17,7 @@ void test_a0 (void)\n   // The first three elements fit in the tail padding.\n   a0.a2[0] = 0; a0.a2[1] = 1; a0.a2[2] = 2;\n \n-  a0.a2[3] = 3;     // { dg-warning \"array subscript 3 is above array bounds of 'short int\\\\\\[0]'\" }\n+  a0.a2[3] = 3;     // { dg-warning \"array subscript 3 is above array bounds of 'short int\\\\\\[]'\" }\n }\n \n \n@@ -27,7 +27,7 @@ void test_a1 (void)\n {\n   a1.a2[0] = 0; a1.a2[1] = 1; a1.a2[2] = 2;\n \n-  a1.a2[3] = 3;     // { dg-warning \"array subscript 3 is above array bounds of 'short int\\\\\\[0]'\" }\n+  a1.a2[3] = 3;     // { dg-warning \"array subscript 3 is above array bounds of 'short int\\\\\\[]'\" }\n }\n \n \n@@ -37,7 +37,7 @@ void test_a2 (void)\n {\n   a2.a2[0] = 0; a2.a2[1] = 1; a2.a2[2] = 2;\n \n-  a2.a2[3] = 3;     // { dg-warning \"array subscript 3 is above array bounds of 'short int\\\\\\[0]'\" }\n+  a2.a2[3] = 3;     // { dg-warning \"array subscript 3 is above array bounds of 'short int\\\\\\[]'\" }\n }\n \n \n@@ -47,7 +47,7 @@ void test_a3 (void)\n {\n   a3.a2[0] = 0; a3.a2[1] = 1; a3.a2[2] = 2;\n \n-  a3.a2[3] = 3;     // { dg-warning \"array subscript 3 is above array bounds of 'short int\\\\\\[0]'\" }\n+  a3.a2[3] = 3;     // { dg-warning \"array subscript 3 is above array bounds of 'short int\\\\\\[]'\" }\n }\n \n \n@@ -57,7 +57,7 @@ void test_a4 (void)\n {\n   a4.a2[0] = 0; a4.a2[1] = 1; a4.a2[2] = 2; a4.a2[3] = 3;\n \n-  a4.a2[4] = 4;     // { dg-warning \"array subscript 4 is above array bounds of 'short int\\\\\\[0]'\" }\n+  a4.a2[4] = 4;     // { dg-warning \"array subscript 4 is above array bounds of 'short int\\\\\\[]'\" }\n }\n \n \n@@ -67,7 +67,7 @@ void test_a5 (void)\n {\n   a5.a2[0] = 0; a5.a2[1] = 1; a5.a2[2] = 2; a5.a2[3] = 3; a5.a2[4] = 4;\n \n-  a5.a2[5] = 5;     // { dg-warning \"array subscript 5 is above array bounds of 'short int\\\\\\[0]'\" }\n+  a5.a2[5] = 5;     // { dg-warning \"array subscript 5 is above array bounds of 'short int\\\\\\[]'\" }\n }\n \n \n@@ -78,7 +78,7 @@ void test_a6 (void)\n   a6.a2[0] = 0; a6.a2[1] = 1; a6.a2[2] = 2; a6.a2[3] = 3; a6.a2[4] = 4;\n   a6.a2[5] = 5;\n \n-  a6.a2[6] = 6;     // { dg-warning \"array subscript 6 is above array bounds of 'short int\\\\\\[0]'\" }\n+  a6.a2[6] = 6;     // { dg-warning \"array subscript 6 is above array bounds of 'short int\\\\\\[]'\" }\n }\n \n \n@@ -89,7 +89,7 @@ void test_a7 (void)\n   a7.a2[0] = 0; a7.a2[1] = 1; a7.a2[2] = 2; a7.a2[3] = 3; a7.a2[4] = 4;\n   a7.a2[5] = 5; a7.a2[5] = 5; a7.a2[6] = 6;\n \n-  a7.a2[7] = 7;     // { dg-warning \"array subscript 7 is above array bounds of 'short int\\\\\\[0]'\" }\n+  a7.a2[7] = 7;     // { dg-warning \"array subscript 7 is above array bounds of 'short int\\\\\\[]'\" }\n }\n \n \n@@ -100,7 +100,7 @@ void test_a8 (void)\n   a8.a2[0] = 0; a8.a2[1] = 1; a8.a2[2] = 2; a8.a2[3] = 3; a8.a2[4] = 4;\n   a8.a2[5] = 5; a8.a2[5] = 5; a8.a2[6] = 6; a8.a2[7] = 7;\n \n-  a8.a2[8] = 8;     // { dg-warning \"array subscript 8 is above array bounds of 'short int\\\\\\[0]'\" }\n+  a8.a2[8] = 8;     // { dg-warning \"array subscript 8 is above array bounds of 'short int\\\\\\[]'\" }\n }\n \n \n@@ -111,5 +111,5 @@ void test_a9 (void)\n   a8.a2[0] = 8; a8.a2[1] = 7; a8.a2[2] = 6; a8.a2[3] = 5; a8.a2[4] = 4;\n   a8.a2[5] = 3; a8.a2[5] = 2; a8.a2[6] = 1; a8.a2[7] = 0;\n \n-  a8.a2[9] = 8;     // { dg-warning \"array subscript 9 is above array bounds of 'short int\\\\\\[0]'\" }\n+  a8.a2[9] = 8;     // { dg-warning \"array subscript 9 is above array bounds of 'short int\\\\\\[]'\" }\n }"}]}