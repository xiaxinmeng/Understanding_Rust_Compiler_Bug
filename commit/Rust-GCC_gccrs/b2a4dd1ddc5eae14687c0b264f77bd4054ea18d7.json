{"sha": "b2a4dd1ddc5eae14687c0b264f77bd4054ea18d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJhNGRkMWRkYzVlYWUxNDY4N2MwYjI2NGY3N2JkNDA1NGVhMThkNw==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2016-03-24T11:29:27Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2016-03-24T11:29:27Z"}, "message": "Add goacc/uninit-if-clause.{c,f95}\n\n2016-03-24  Tom de Vries  <tom@codesourcery.com>\n\n\t* c-c++-common/goacc/uninit-if-clause.c: New test.\n\t* gfortran.dg/goacc/uninit-if-clause.f95: New test.\n\nFrom-SVN: r234451", "tree": {"sha": "81f705e503d19e6c3ac92f68a3aa0b6586c67ca8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81f705e503d19e6c3ac92f68a3aa0b6586c67ca8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2a4dd1ddc5eae14687c0b264f77bd4054ea18d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2a4dd1ddc5eae14687c0b264f77bd4054ea18d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2a4dd1ddc5eae14687c0b264f77bd4054ea18d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2a4dd1ddc5eae14687c0b264f77bd4054ea18d7/comments", "author": null, "committer": null, "parents": [{"sha": "72e7cd6e8ba6465010d4c97cab893d7f36cf72cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72e7cd6e8ba6465010d4c97cab893d7f36cf72cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72e7cd6e8ba6465010d4c97cab893d7f36cf72cb"}], "stats": {"total": 63, "additions": 63, "deletions": 0}, "files": [{"sha": "01c6f2f10c99b9fe926af1b2c3c3e9a673a1212e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2a4dd1ddc5eae14687c0b264f77bd4054ea18d7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2a4dd1ddc5eae14687c0b264f77bd4054ea18d7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b2a4dd1ddc5eae14687c0b264f77bd4054ea18d7", "patch": "@@ -1,3 +1,8 @@\n+2016-03-24  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* c-c++-common/goacc/uninit-if-clause.c: New test.\n+\t* gfortran.dg/goacc/uninit-if-clause.f95: New test.\n+\n 2016-03-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/70290"}, {"sha": "55caa4c2c7fca3e6ed1fb23759d0fbf55d3b91c8", "filename": "gcc/testsuite/c-c++-common/goacc/uninit-if-clause.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2a4dd1ddc5eae14687c0b264f77bd4054ea18d7/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Funinit-if-clause.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2a4dd1ddc5eae14687c0b264f77bd4054ea18d7/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Funinit-if-clause.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Funinit-if-clause.c?ref=b2a4dd1ddc5eae14687c0b264f77bd4054ea18d7", "patch": "@@ -0,0 +1,38 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-Wuninitialized\" } */\n+/* { dg-excess-errors \"PR70392\" { xfail c++ } } */\n+\n+#include <stdbool.h>\n+\n+int\n+main (void)\n+{\n+  int l, l2, l3, l4;\n+  bool b, b2, b3, b4;\n+  int i, i2;\n+\n+  #pragma acc parallel if(l) /* { dg-warning \"is used uninitialized in this function\" } */\n+  ;\n+\n+  #pragma acc parallel if(b) /* { dg-warning \"is used uninitialized in this function\" \"\" { xfail c++ } } */\n+  ;\n+\n+  #pragma acc kernels if(l2) /* { dg-warning \"is used uninitialized in this function\" } */\n+  ;\n+\n+  #pragma acc kernels if(b2) /* { dg-warning \"is used uninitialized in this function\" \"\" { xfail c++ } } */\n+  ;\n+\n+  #pragma acc data if(l3) /* { dg-warning \"is used uninitialized in this function\" } */\n+  ;\n+\n+  #pragma acc data if(b3) /* { dg-warning \"is used uninitialized in this function\" \"\" { xfail c++ } } */\n+  ;\n+\n+  #pragma acc update if(l4) self(i) /* { dg-warning \"is used uninitialized in this function\" } */\n+  ;\n+\n+  #pragma acc update if(b4) self(i2) /* { dg-warning \"is used uninitialized in this function\" \"\" { xfail c++ } } */\n+  ;\n+\n+}"}, {"sha": "60dc53e7850f6b1235b7c9ee6376604bcbc50c66", "filename": "gcc/testsuite/gfortran.dg/goacc/uninit-if-clause.f95", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2a4dd1ddc5eae14687c0b264f77bd4054ea18d7/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Funinit-if-clause.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2a4dd1ddc5eae14687c0b264f77bd4054ea18d7/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Funinit-if-clause.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Funinit-if-clause.f95?ref=b2a4dd1ddc5eae14687c0b264f77bd4054ea18d7", "patch": "@@ -0,0 +1,20 @@\n+! { dg-do compile }\n+! { dg-additional-options \"-Wuninitialized\" }\n+\n+program test\n+  implicit none\n+  logical :: b, b2, b3, b4\n+  integer :: data, data2\n+\n+  !$acc parallel if(b) ! { dg-warning \"is used uninitialized in this function\" }\n+  !$acc end parallel\n+\n+  !$acc kernels if(b2) ! { dg-warning \"is used uninitialized in this function\" }\n+  !$acc end kernels\n+\n+  !$acc data if(b3) ! { dg-warning \"is used uninitialized in this function\" }\n+  !$acc end data\n+\n+  !$acc update if(b4) self(data2) ! { dg-warning \"is used uninitialized in this function\" }\n+\n+end program test"}]}