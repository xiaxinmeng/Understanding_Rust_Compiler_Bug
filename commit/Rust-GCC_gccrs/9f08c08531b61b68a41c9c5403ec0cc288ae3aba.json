{"sha": "9f08c08531b61b68a41c9c5403ec0cc288ae3aba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWYwOGMwODUzMWI2MWI2OGE0MWM5YzU0MDNlYzBjYzI4OGFlM2FiYQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2021-02-25T16:30:17Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2021-02-25T16:58:26Z"}, "message": "c++tools: Make NETWORKING define check consistent [PR 98318]\n\nPR98318 also pointed out that the NETWORKING #define was being checked\nwith both #if and #ifdef.  Let's consistently use one form.\n\n\tc++tools/\n\t* server.cc: Use #if NETWORKING not #ifdef, to be consistent\n\twith elsewhere.", "tree": {"sha": "a5918bb76626a060c98cedc89823c3e3a858e8e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5918bb76626a060c98cedc89823c3e3a858e8e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f08c08531b61b68a41c9c5403ec0cc288ae3aba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f08c08531b61b68a41c9c5403ec0cc288ae3aba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f08c08531b61b68a41c9c5403ec0cc288ae3aba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f08c08531b61b68a41c9c5403ec0cc288ae3aba/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a47cec4ca7302e65f63490ad7f251c5a469bc0e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a47cec4ca7302e65f63490ad7f251c5a469bc0e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a47cec4ca7302e65f63490ad7f251c5a469bc0e0"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "21c7d468aa0294e0c4b5c1f47de84cfd6328e60e", "filename": "c++tools/server.cc", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f08c08531b61b68a41c9c5403ec0cc288ae3aba/c%2B%2Btools%2Fserver.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f08c08531b61b68a41c9c5403ec0cc288ae3aba/c%2B%2Btools%2Fserver.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fserver.cc?ref=9f08c08531b61b68a41c9c5403ec0cc288ae3aba", "patch": "@@ -63,7 +63,7 @@ along with GCC; see the file COPYING3.  If not see\n #include <getopt.h>\n \n // Select or epoll\n-#ifdef NETWORKING\n+#if NETWORKING\n #ifdef HAVE_EPOLL\n /* epoll_create, epoll_ctl, epoll_pwait  */\n #include <sys/epoll.h>\n@@ -91,7 +91,7 @@ along with GCC; see the file COPYING3.  If not see\n #define DIR_SEPARATOR '/'\n #endif\n \n-#ifdef NETWORKING\n+#if NETWORKING\n struct netmask {\n   in6_addr addr;\n   unsigned bits;\n@@ -161,7 +161,7 @@ static bool flag_xlate = false;\n /* Root binary directory.  */\n static const char *flag_root = \"gcm.cache\";\n \n-#ifdef NETWORKING\n+#if NETWORKING\n static netmask_set_t netmask_set;\n \n static netmask_vec_t accept_addrs;\n@@ -233,7 +233,7 @@ error (const char *msg, ...)\n   exit (1);\n }\n \n-#ifdef NETWORKING\n+#if NETWORKING\n /* Progress messages to the user.  */\n static bool ATTRIBUTE_PRINTF_1 ATTRIBUTE_COLD\n noisy (const char *fmt, ...)\n@@ -414,7 +414,7 @@ process_args (int argc, char **argv)\n   return optind;\n }\n \n-#ifdef NETWORKING\n+#if NETWORKING\n \n /* Manipulate the EPOLL state, or do nothing, if there is epoll.  */\n \n@@ -871,7 +871,7 @@ main (int argc, char *argv[])\n   /* Ignore sigpipe, so read/write get an error.  */\n   signal (SIGPIPE, SIG_IGN);\n #endif\n-#ifdef NETWORKING\n+#if NETWORKING\n #ifdef SIGINT\n   signal (SIGINT, kill_signal);\n #endif\n@@ -935,7 +935,7 @@ main (int argc, char *argv[])\n     }\n #endif\n \n-#ifdef NETWORKING\n+#if NETWORKING\n   if (sock_fd >= 0)\n     {\n       server (name[0] != '=', sock_fd, &r);"}]}