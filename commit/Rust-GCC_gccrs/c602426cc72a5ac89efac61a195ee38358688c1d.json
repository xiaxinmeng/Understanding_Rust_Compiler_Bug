{"sha": "c602426cc72a5ac89efac61a195ee38358688c1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzYwMjQyNmNjNzJhNWFjODllZmFjNjFhMTk1ZWUzODM1ODY4OGMxZA==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2020-02-28T16:35:05Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2020-10-14T14:18:58Z"}, "message": "Tigthen flag_pic processing in vxworks_override_options\n\nThis fixes spurious complaints about PIC mode not supported\nfrom \"gcc --help=...\", on VxWorks without -mrtp. The spurious message\nis emitted by vxworks_override_options, called with flag_pic == -1\nwhen we're running for --help.\n\nThe change simply adjusts the check testing for \"we're generating pic code\"\nto \"flag_pic > 0\" instead of just \"flag_pic\". We're not generating code at\nall when reaching here with -1.\n\ngcc/ChangeLog:\n\n2020-10-14  Olivier Hainque  <hainque@adacore.com>\n\n\t* config/vxworks.c (vxworks_override_options): Guard pic checks with\n\tflag_pic > 0 instead of just flag_pic.", "tree": {"sha": "71f50264d9b5116be4e26ac4316d540ea093dfe6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71f50264d9b5116be4e26ac4316d540ea093dfe6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c602426cc72a5ac89efac61a195ee38358688c1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c602426cc72a5ac89efac61a195ee38358688c1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c602426cc72a5ac89efac61a195ee38358688c1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c602426cc72a5ac89efac61a195ee38358688c1d/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "143384686241627bd96a5f7509aee3a8291280a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/143384686241627bd96a5f7509aee3a8291280a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/143384686241627bd96a5f7509aee3a8291280a5"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "ca0f5de12a7426eb7472913314bf3b438ae41f5c", "filename": "gcc/config/vxworks.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c602426cc72a5ac89efac61a195ee38358688c1d/gcc%2Fconfig%2Fvxworks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c602426cc72a5ac89efac61a195ee38358688c1d/gcc%2Fconfig%2Fvxworks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxworks.c?ref=c602426cc72a5ac89efac61a195ee38358688c1d", "patch": "@@ -154,8 +154,10 @@ vxworks_override_options (void)\n   targetm.have_ctors_dtors = \n     TARGET_VXWORKS_HAVE_CTORS_DTORS || HAVE_INITFINI_ARRAY_SUPPORT;\n \n-  /* PIC is only supported for RTPs.  */\n-  if (flag_pic && !TARGET_VXWORKS_RTP)\n+  /* PIC is only supported for RTPs.  flags_pic might be < 0 here, in\n+     contexts where the corresponding switches are not processed,\n+     e.g. from --help.  We are not generating code in such cases.  */\n+  if (flag_pic > 0 && !TARGET_VXWORKS_RTP)\n     error (\"PIC is only supported for RTPs\");\n \n   /* VxWorks comes with non-gdb debuggers which only support strict"}]}