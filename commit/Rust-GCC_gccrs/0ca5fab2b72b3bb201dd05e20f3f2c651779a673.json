{"sha": "0ca5fab2b72b3bb201dd05e20f3f2c651779a673", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNhNWZhYjJiNzJiM2JiMjAxZGQwNWUyMGYzZjJjNjUxNzc5YTY3Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-10-27T13:57:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-10-27T13:57:10Z"}, "message": "Resync.\n\nFrom-SVN: r89679", "tree": {"sha": "c97b2806e3d9a8bc352d56eadad3b3fe33a1bf81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c97b2806e3d9a8bc352d56eadad3b3fe33a1bf81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ca5fab2b72b3bb201dd05e20f3f2c651779a673", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ca5fab2b72b3bb201dd05e20f3f2c651779a673", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ca5fab2b72b3bb201dd05e20f3f2c651779a673", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ca5fab2b72b3bb201dd05e20f3f2c651779a673/comments", "author": null, "committer": null, "parents": [{"sha": "f142e9fab708f504623b901a33dfc696c6a4d57d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f142e9fab708f504623b901a33dfc696c6a4d57d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f142e9fab708f504623b901a33dfc696c6a4d57d"}], "stats": {"total": 390, "additions": 390, "deletions": 0}, "files": [{"sha": "5e5280edeba0c608ca8fd1c64db8ce58317595b6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 390, "deletions": 0, "changes": 390, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ca5fab2b72b3bb201dd05e20f3f2c651779a673/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ca5fab2b72b3bb201dd05e20f3f2c651779a673/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0ca5fab2b72b3bb201dd05e20f3f2c651779a673", "patch": "@@ -1,3 +1,393 @@\n+2004-10-26  Vincent Celier  <celier@gnat.com>\n+\t    Thomas Quinot   <quinot@act-europe.fr>\n+\n+\t* g-socthi-vms.adb, g-socthi-mingw.adb, g-socthi-vxworks.ads:\n+\t(C_Writev): Change MSG_Forced_Flags to Constants.MSG_Forced_Flags as\n+\tthere is no use of GNAT.Sockets.Constants.\n+\tRemove remaining pragma Import for C_Write\n+\tRemove C_Read and C_Write from internal implementation unit\n+\tGNAT.Sockets.Thin, as their usage for sockets is non-portable (using\n+\tthe read and write functions from the system runtime library is fine\n+\ton UNIX but won't work under Windows).\n+\n+\t* g-socket.adb: (Abort_Selector): Use C_Send instead of C_Write.\n+\t(Check_Selector): Use C_Recv instead of C_Read.\n+\tSelectors are the GNAT.Sockets abstraction to perform a select()\n+\tcall on a set of descriptors. To allow abortion of an ongoing\n+\tselect operation, some data is written to a dedicated socket that\n+\tis always monitored.\n+\tUnder Windows, the write and read library functions cannot operate\n+\ton sockets, so we need to use send and recv instead, which is portable\n+\tacross all supported platforms.\n+\n+\t* g-socthi.ads: Remove C_Read and C_Write from internal implementation\n+\tunit GNAT.Sockets.Thin, as their usage for sockets is non-portable\n+\t(using the read and write functions from the system runtime library is\n+\tfine on UNIX but won't work under Windows).\n+\n+2004-10-26  Nicolas Setton  <setton@act-europe.fr>\n+\n+\t* mlib-tgt-darwin.adb: New file.\n+\n+\t* mlib-tgt-tru64.adb, mlib-tgt-aix.adb, mlib-tgt-irix.adb,\n+\tmlib-tgt-hpux.adb, mlib-tgt-linux.adb, mlib-tgt-solaris.adb,\n+\tmlib-tgt-vms-alpha.adb, mlib-tgt-vms-ia64.adb,\n+\tmlib-tgt-mingw.adb, mlib-tgt-vxworks.adb (Archive_Indexer_Options): New\n+\tsubprogram body.\n+\n+\t* Makefile.in: Add support for building shared libraries under Darwin.\n+\t(EXTRA_GNATRTL_NONTASKING_OBJS, ppc-vxworks): Add s-vxwexc.o, containing\n+\tthe low level EH init subprogram to be called from __gnat_initialize.\n+\n+\t* mlib-tgt.ads, mlib-tgt.adb (Archive_Indexer_Options): New subprogram,\n+\tindicates which options to pass to the archive indexer.\n+\n+\t* mlib-utl.adb: Add support for calling ranlib with additional\n+\toptions. This is needed for instance under Mac OS X.\n+\t(Ranlib_Options): New global variable, used to store the potential\n+\toptions to pass to ranlib.\n+\t(Ar): Use Ranlib_Options when spawning ranlib.\n+\t(Initialize): Set the value of ranlib option.\n+\n+2004-10-26  Olivier Hainque  <hainque@act-europe.fr>\n+\n+\t* s-parame-linux.adb (Minimum_Stack_Size): Adjust to return 12K\n+\tinstead of 8K, to reflect the real potential needs for stack-checking\n+\tin the ZCX case.\n+\n+2004-10-26  Pascal Obry  <obry@gnat.com>\n+\n+\t* s-parame-mingw.adb (Default_Stack_Size): Add some comments.\n+\n+\t* s-taprop-mingw.adb (Create_Task): Set initial stack size to 1024. On\n+\tWindows only the initial thread stack size can be set so it is good to\n+\tstart we a low stack size.\n+\tThe OS will adjust the size as needed.\n+\n+2004-10-26  Olivier Hainque  <hainque@act-europe.fr>\n+\t    Nicolas Setton  <setton@act-europe.fr>\n+\n+\t* expect.c, adaint.c, link.c, sysdep.c (unix sections): Guard with\n+\t\"__unix__\" instead of \"unix\".\n+\tThe latter is implicitly defined by gcc3.2 but not by gcc >= 3.4, so the\n+\tsections were just mistakenly ignored. The former is\n+\timplicitely defined by gcc2.8, gcc3.2 and gcc3.4.\n+\tUpdate #ifdef preprocessor macro to detect the symbol __hpux__ instead\n+\tof hpux. This prevents an unwanted definition of the symbol\n+\tconvert_addresses in adaint.o.\n+\n+2004-10-26  Gary Dismukes  <dismukes@gnat.com>\n+\n+\t* a-exexpr.adb (Setup_Key): Change initial value to 16#DEAD#, for\n+\tcompatibility with type Unwind_Word on 16-bit targets such as AAMP.\n+\n+2004-10-26  Cyrille Comar  <comar@act-europe.fr>\n+\n+\t* a-filico.ads, a-filico.adb: fix incorrect header.\n+\n+2004-10-26  Javier Miranda  <miranda@gnat.com>\n+\n+\t* a-ststio.ads: Fix typo in identifier\n+\n+2004-10-26  Thomas Quinot  <quinot@act-europe.fr>\n+\n+\t* sem_ch4.adb: Minor reformatting.\n+\n+2004-10-26  Ed Schonberg  <schonberg@gnat.com>\n+\n+\t* checks.adb (Expr_Known_Valid): If floating-point validity checks are\n+\tenabled, check the result of unary and binary operations when the\n+\texpression is the right-hand side of an assignment.\n+\n+2004-10-26  Vincent Celier  <celier@gnat.com>\n+\n+\t* clean.adb (Delete): Do not output warnings when in quiet output and\n+\tnot in verbose mode.\n+\t(Force_Deletions): New Boolean flag, defaulted to False\n+\t(Delete): Only delete a file if it is writable, and when\n+\tForce_Deletions is True.\n+\t(Parse_Cmd_Line): New switch -f: set Force_Deletions to True\n+\t(Usage): Line for new switch -f\n+\t(Clean_Directory): Use GNAT.OS_Lib.Set_Writable instead of rolling our\n+\town.\n+\n+2004-10-26  Eric Botcazou  <ebotcazou@act-europe.fr>\n+\n+\t* decl.c (gnat_to_gnu_field): Use the type of the inner object for a\n+\tJM type only if its size matches that of the wrapper.  When a size is\n+\tprescribed and the field is not aliased, remove the wrapper of a JM\n+\ttype only if the size is not greater than that of the packed array.\n+\t(gnat_to_gnu_entity): Change the extension of packed array wrappers\n+\tfrom LJM to JM.\n+\n+2004-10-26  Geert Bosch  <bosch@gnat.com>\n+\n+\t* eval_fat.adb (Eps_Model,Eps_Denorm): Remove, no longer used.\n+\t(Succ): Re-implement using Scaling, Exponent and Ceiling attributes.\n+\t(Pred): Implement in terms of Succ.\n+\n+2004-10-26  Ed Schonberg  <schonberg@gnat.com>\n+\n+\t* exp_aggr.adb (Safe_Component): An aggregate component that is an\n+\tunchecked conversion is safe for in-place use if the expression of the\n+\tconversion is safe.\n+\t(Expand_Array_Aggregate): An aggregate that initializes an allocator may\n+\tbe expandable in place even if the aggregate does not come from source.\n+\t(Convert_Array_Aggr_In_Allocator): New procedure to initialize the\n+\tdesignated object of an allocator in place, rather than building it\n+\tfirst on the stack. The previous scheme forces a full copy of the array,\n+\tand may be altogether unsusable if the size of the array is too large\n+\tfor stack allocation.\n+\n+2004-10-26  Robert Dewar  <dewar@gnat.com>\n+\n+\t* exp_ch4.adb (Expand_N_Op_Eq): Make sure we expand a loop for array\n+\tcompares if the component is atomic.\n+\n+\t* exp_ch5.adb (Expand_Assign_Array): Make sure we expand a loop for\n+\tarray assignment if the component type is atomic.\n+\n+2004-10-26  Ed Schonberg  <schonberg@gnat.com>\n+\t    Eric Botcazou  <ebotcazou@act-europe.fr>\n+\n+\t* exp_ch6.adb (Expand_Actuals): If the actual for an in-out parameter\n+\tis aliased and is a by_reference type, do not pass by copy.\n+\t(Expand_N_Function_Call) <Rhs_Of_Assign_Or_Decl>: New function to\n+\tdetect whether the call is in the right side of an assignment or\n+\tthe expression of an object declaration.  Recurse on component\n+\tassociation within aggregates.\n+\tCall it in the condition that determines whether the temporary is\n+\tnecessary for correct stack-checking.\n+\n+2004-10-26  Thomas Quinot  <quinot@act-europe.fr>\n+\n+\t* exp_dist.adb (Build_General_Calling_Stubs): New formal parameter\n+\tRACW_Type, used in the PolyORB version.\n+\tRename RCI_Info to RCI_Locator, for consistency between the PolyORB\n+\tversion and the GARLIC version.\n+\n+\t* snames.ads, snames.adb, s-parint.ads, s-parint.adb: \n+\tRename RCI_Info to RCI_Locator for better consistency between the\n+\tGARLIC and PolyORB versions of the distributed systems annex.\n+\t(DSA_Implementation_Name): This enumeration lists the possible\n+\timplementations of the Partition Communication Subsystem for the\n+\tDistributed Systems Annex (DSA). The three available implementations\n+\tare the dummy stub implementation (No_DSA), and two versions based on\n+\ttwo different distribution runtime libraries: GARLIC and PolyORB. Both\n+\tthe GARLIC PCS and the PolyORB PCS are part of the GLADE distribution\n+\ttechnology.\n+\tChange the literal GLADE_DSA to GARLIC_DSA to accurately describe\n+\tthat organization.\n+\n+\t* rtsfind.ads: Rename RCI_Info to RCI_Locator for better consistency\n+\tbetween the GARLIC and PolyORB versions of the distributed systems\n+\tannex.\n+\tRemove RE_Unbounded_Reclaim_Pool since it is unused.\n+\n+2004-10-26  Gary Dismukes  <dismukes@gnat.com>\n+\n+\t* gnat1drv.adb: Suppress calling the back end when\n+\tFrontend_Layout_On_Target is true.\n+\n+2004-10-26  Thomas Quinot  <quinot@act-europe.fr>\n+\n+\t* g-os_lib.ads, g-os_lib.adb (Set_Executable, Set_Writable,\n+\tSet_Read_Only): New subprograms.\n+\tThese new routines allow the user to set or unset the Owner execute\n+\tand Owner write permission flags on a file.\n+\n+\t* makegpr.adb, mlib.adb, mlib-prj.adb: Use\n+\tGNAT.OS_Lib.Set_Executable instead of rolling our own.\n+\n+2004-10-26  Matthew Gingell  <gingell@gnat.com>\n+\n+\t* i-cpp.ads, i-cpp.adb: Change layout of VTable for new C++ ABI.\n+\n+2004-10-26  Pascal Obry  <obry@gnat.com>\n+\n+\t* init.c (__gnat_error_handler) [Win32]: Instead of trying to read the\n+\tmemory before the faulting page we properly test the process read\n+\taccess for this address using appropriate Win32 routine.\n+\t(HPUX sections): guard with \"__hpux__\" instead of \"hpux\".\n+\n+2004-10-26  Robert Dewar  <dewar@gnat.com>\n+\n+\t* lib-xref.adb (Generate_Reference): Don't complain about reference to\n+\tentry parameter if pragma Unreferenced set, since we do not properly\n+\thandle the case of multiple parameters.\n+\n+2004-10-26  Vincent Celier  <celier@gnat.com>\n+\n+\t* prj-env.adb: (Contains_ALI_Files): New Boolean function\n+\t(Ada_Objects_Path.Add): For a library project, add to the object path\n+\tthe library directory only if there is no object directory or if the\n+\tlibrary directory contains ALI files.\n+\t(Set_Ada_Paths.Add.Recursive_Add): Ditto\n+\n+2004-10-26  Vincent Celier  <celier@gnat.com>\n+\n+\t* prj-nmsc.adb (Language_Independent_Check): Do not forbid virtual\n+\textension of library projects.\n+\n+\t* prj-part.adb: If env var ADA_PROJECT_PATH is not defined, project\n+\tpath defaults to \".:<prefix>/lib/gnat\".\n+\t(Parse): For an extending all project, allow direct import of a project\n+\tthat is virtually extended.\n+\n+\t* prj-proc.adb (Imported_Or_Extended_Project_From): If a project with\n+\tthe specified name is directly imported, return its ID. Otherwise, if\n+\tan extension of this project is imported, return the ID of the\n+\textension.\n+\n+2004-10-26  Robert Dewar  <dewar@gnat.com>\n+\n+\t* s-arit64.adb: (Le3): New function, used by Scaled_Divide\n+\t(Sub3): New procedure, used by Scaled_Divide\n+\t(Scaled_Divide): Substantial rewrite, avoid duplicated code, and also\n+\tcorrect more than one instance of failure to propagate carries\n+\tcorrectly.\n+\t(Double_Divide): Handle overflow case of largest negative number\n+\tdivided by minus one.\n+\n+\t* s-arit64.ads (Double_Divide): Document that overflow can occur in\n+\tthe case of a quotient value out of range.\n+\tFix comments.\n+\n+2004-10-26  Robert Dewar  <dewar@gnat.com>\n+\n+\t* s-bitops.adb (Bit_Eq): Remove redundant check.\n+\n+\t* s-bitops.ads: Minor comment updates\n+\tChange some occurrences of Address to System.Address\n+\n+\t* s-carsi8.ads: Fix minor cut-and-paste error in comments\n+\n+2004-10-26  Ed Schonberg  <schonberg@gnat.com>\n+\n+\t* sem_attr.adb (Resolve_Attribute, case 'Access): Apply proper\n+\taccessibility check to prefix that is a protected operation.\n+\n+2004-10-26  Ed Schonberg  <schonberg@gnat.com>\n+\n+\t* sem_ch10.adb (Optional_Subunit): If file of expected subunit is\n+\tempty, post message on stub.\n+\n+2004-10-26  Ed Schonberg  <schonberg@gnat.com>\n+\t    Javier Miranda  <miranda@gnat.com>\n+\n+\t* sem_ch12.adb (In_Main_Context): Predicate to determine whether the\n+\tcurrent instance appears within a unit that is directly in the context\n+\tof the main unit.\n+\tUsed to determine whether the body of the instance should be analyzed\n+\timmediately after its spec, to make its subprogram bodies available\n+\tfor front-end inlining.\n+\t(Analyze_Formal_Array_Type): Cleanup condition that checks that range\n+\tconstraint is not allowed on the component type (AARM 12.5.3(3))\n+\n+2004-10-26  Cyrille Comar  <comar@act-europe.fr>\n+\n+\t* sem_ch13.adb (Analyze_Attribute_Definition_Clause, case\n+\t'Storage_Pool): enhance, document & limit detection of non-sharable\n+\tinternal pools.\n+\n+\t* impunit.adb: Make System.Pool_Global and System.Pool_Local visible.\n+\n+\t* s-pooglo.ads: Add more documentation now that this pool is properly\n+\tdocumented.\n+\n+2004-10-26  Ed Schonberg  <schonberg@gnat.com>\n+\n+\t* sem_ch3.adb (Complete_Private_Subtype): If the full view is a task\n+\tor protected type with discriminants, do not constrain the\n+\tcorresponding record type if the subtype declaration has no\n+\tdiscriminant constraints. This can be the case in source code, or in\n+\tthe subtype declaration created to rename an actual type within an\n+\tinstantiation.\n+\n+2004-10-26  Ed Schonberg  <schonberg@gnat.com>\n+\n+\t* sem_ch6.adb (Analyze_Subprogram_Body): If body is a subunit for a\n+\tdifferent kind of stub (possibly wrong name for file), do not check\n+\tfor conformance.\n+\t(Uses_Secondary_Stack): New subsidiary to Build_Body_To_Inline. If body\n+\tincludes call to some function that returns an unconstrained type, do\n+\tnot inline.\n+\n+2004-10-26  Ed Schonberg  <schonberg@gnat.com>\n+\n+\t* sem_elab.adb (Check_Elab_Call): Do not check a call that does not\n+\tappear in the code for the main unit. Dependencies among units in the\n+\tcontext of the main unit are established when those other units are\n+\tcompiled. Otherwise spurious elaboration constraints can generate\n+\tincorrect elaboration circularities.\n+\n+2004-10-26  Thomas Quinot  <quinot@act-europe.fr>\n+\t    Ed Schonberg   <schonberg@gnat.com>\n+\n+\t* sem_util.adb (Is_Aliased_View): Defend against the case where this\n+\tsubprogram is called with a parameter that is not an object name. This\n+\tsituation arises for some cases of illegal code, which is diagnosed\n+\tlater, and in this case it is wrong to call Is_Aliased, as that might\n+\tcause a compiler crash.\n+\t(Explain_Limited_Type): Refine previous fix to include\n+\tinherited components of derived types, to provide complete information.\n+\n+\t* exp_ch9.adb (Set_Privals): Set the Ekind of the actual object that\n+\tis the prival for a protected object.\n+\tIt is necessary to mark this entity as a variable, in addition to\n+\tflagging it as Aliased, because Sem_Util.Is_Aliased_View has been\n+\tmodified to avoid checking the Aliased flag on entities that are not\n+\tobjects. (Checking that flag for non-objects is erroneous and could\n+\tlead to a compiler crash).\n+\n+2004-10-26  Robert Dewar  <dewar@gnat.com>\n+\n+\t* s-fatgen.adb (Pred): Fix redundant test for X > 0.0, since if\n+\tX_Frac = 0.5, then we know that the number X must be positive.\n+\t(Succ): Remove the same redundant test, and also fix the primary test\n+\tto test for X_Frac = -0.5 (used to be 0.5) which is clearly wrong.\n+\tMinor reformatting\n+\t(Decompose): Add fuller comments to spec\n+\n+2004-10-26  Pascal Obry  <obry@gnat.com>\n+\n+\t* tracebak.c (IS_BAD_PTR): Use IsBadCodePtr on Win32 to check for ptr\n+\tvalidity (process must have read access). Set to 0 in all other cases.\n+\t(STOP_FRAME): Now check for ptr validity to avoid a segmentation\n+\tviolation on Win32.\n+\t(VALID_STACK_FRAME): Check for ptr validity on Win32 to avoid a\n+\tsegmentation violation.\n+\n+2004-10-26  Eric Botcazou  <ebotcazou@act-europe.fr>\n+\n+\t* trans.c (call_to_gnu): For an (in-)out parameter passed by reference\n+\twhose type is a constructed subtype of an aliased object with an\n+\tunconstrained nominal subtype, convert the actual to the constructed\n+\tsubtype before taking its address.\n+\n+2004-10-26  Vincent Celier  <celier@gnat.com>\n+\n+\t* a-dirval.ads, a-dirval.adb, a-dirval-vms.adb, a-dirval-mingw.adb\n+\t(Is_Path_Name_Case_Sensitive): New function\n+\n+\t* a-direct.adb (To_Lower_If_Case_Insensitive): New procedure\n+\t(Base_Name, Simple_Name, Current_Directory, Compose,\n+\tContaining_Directory, Full_Name): Call To_Lower_If_Case_Insensitive on\n+\tthe result.\n+\n+2004-10-26  Cyrille Comar    <comar@act-europe.fr>\n+\t    Vasiliy Fofanov  <fofanov@act-europe.fr>\n+\t    Vincent Celier   <celier@gnat.com>\n+\n+\t* gnat_ugn.texi: Generalize \"finding memory problems\" section into a\n+\t\"memory management issues\" section and document some of the useful\n+\tmemory pools provided as part of the GNAT library.\n+\tRemove \"virtual\" from declaration of A::method2 in\n+\tthe simple example of Ada/C++ mixed system.\n+\tLibrary Projects may be virtually extended: their virtual extensions\n+\tare not Library Projects.\n+\tAdded section on extending project hierarchies.\n+\n 2004-10-19  Aaron W. LaFramboise  <aaronavay62@aaronwl.com>\n \n \t* adaint.c (__gnat_get_libraries_from_registry): Cast value"}]}