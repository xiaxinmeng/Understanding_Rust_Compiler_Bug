{"sha": "30f399ee9318bcb44e3e2debde086303157a347d", "node_id": "C_kwDOANBUbNoAKDMwZjM5OWVlOTMxOGJjYjQ0ZTNlMmRlYmRlMDg2MzAzMTU3YTM0N2Q", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2022-11-23T02:10:19Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2022-11-23T02:10:19Z"}, "message": "Revert \"configure: Implement --enable-host-bind-now\"\n\nThis reverts commit 258d7149f92f19380c9f7763618d62408c064e60.", "tree": {"sha": "a187b2e4bcfa9277983d2fa35fb5af088c4a3a87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a187b2e4bcfa9277983d2fa35fb5af088c4a3a87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30f399ee9318bcb44e3e2debde086303157a347d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30f399ee9318bcb44e3e2debde086303157a347d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30f399ee9318bcb44e3e2debde086303157a347d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30f399ee9318bcb44e3e2debde086303157a347d/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "258d7149f92f19380c9f7763618d62408c064e60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/258d7149f92f19380c9f7763618d62408c064e60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/258d7149f92f19380c9f7763618d62408c064e60"}], "stats": {"total": 88, "additions": 5, "deletions": 83}, "files": [{"sha": "88087009383998664596de2673905dc543a57c5c", "filename": "c++tools/configure", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f399ee9318bcb44e3e2debde086303157a347d/c%2B%2Btools%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f399ee9318bcb44e3e2debde086303157a347d/c%2B%2Btools%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fconfigure?ref=30f399ee9318bcb44e3e2debde086303157a347d", "patch": "@@ -628,7 +628,6 @@ EGREP\n GREP\n CXXCPP\n LD_PICFLAG\n-enable_host_bind_now\n PICFLAG\n MAINTAINER\n CXX_AUX_TOOLS\n@@ -703,7 +702,6 @@ enable_maintainer_mode\n enable_checking\n enable_default_pie\n enable_host_pie\n-enable_host_bind_now\n with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n@@ -1338,7 +1336,6 @@ Optional Features:\n                           yes,no,all,none,release.\n   --enable-default-pie    enable Position Independent Executable as default\n   --enable-host-pie       build host code as PIE\n-  --enable-host-bind-now  link host code as BIND_NOW\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -3010,14 +3007,6 @@ fi\n \n \n \n-# Enable --enable-host-bind-now\n-# Check whether --enable-host-bind-now was given.\n-if test \"${enable_host_bind_now+set}\" = set; then :\n-  enableval=$enable_host_bind_now; LD_PICFLAG=\"$LD_PICFLAG -Wl,-z,now\"\n-fi\n-\n-\n-\n \n # Check if O_CLOEXEC is defined by fcntl\n "}, {"sha": "1e42689f2ebde47da462f3379d3e215c60ba43ba", "filename": "c++tools/configure.ac", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f399ee9318bcb44e3e2debde086303157a347d/c%2B%2Btools%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f399ee9318bcb44e3e2debde086303157a347d/c%2B%2Btools%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fconfigure.ac?ref=30f399ee9318bcb44e3e2debde086303157a347d", "patch": "@@ -110,13 +110,6 @@ AC_ARG_ENABLE(host-pie,\n \t\t[build host code as PIE])],\n [PICFLAG=-fPIE; LD_PICFLAG=-pie], [])\n AC_SUBST(PICFLAG)\n-\n-# Enable --enable-host-bind-now\n-AC_ARG_ENABLE(host-bind-now,\n-[AS_HELP_STRING([--enable-host-bind-now],\n-       [link host code as BIND_NOW])],\n-[LD_PICFLAG=\"$LD_PICFLAG -Wl,-z,now\"], [])\n-AC_SUBST(enable_host_bind_now)\n AC_SUBST(LD_PICFLAG)\n \n # Check if O_CLOEXEC is defined by fcntl"}, {"sha": "f631830386d8b58bae91698dfa206cc9fe87cc68", "filename": "gcc/configure", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f399ee9318bcb44e3e2debde086303157a347d/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f399ee9318bcb44e3e2debde086303157a347d/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=30f399ee9318bcb44e3e2debde086303157a347d", "patch": "@@ -635,7 +635,6 @@ CET_HOST_FLAGS\n LD_PICFLAG\n PICFLAG\n enable_default_pie\n-enable_host_bind_now\n enable_host_pie\n enable_host_shared\n enable_plugin\n@@ -1027,7 +1026,6 @@ enable_version_specific_runtime_libs\n enable_plugin\n enable_host_shared\n enable_host_pie\n-enable_host_bind_now\n enable_libquadmath_support\n with_linker_hash_style\n with_diagnostics_color\n@@ -1791,7 +1789,6 @@ Optional Features:\n   --enable-plugin         enable plugin support\n   --enable-host-shared    build host code as shared libraries\n   --enable-host-pie       build host code as PIE\n-  --enable-host-bind-now  link host code as BIND_NOW\n   --disable-libquadmath-support\n                           disable libquadmath support for Fortran\n   --enable-default-pie    enable Position Independent Executable as default\n@@ -19715,7 +19712,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19730 \"configure\"\n+#line 19727 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -19821,7 +19818,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19836 \"configure\"\n+#line 19833 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -31963,14 +31960,6 @@ fi\n \n \n \n-# Enable --enable-host-bind-now\n-# Check whether --enable-host-bind-now was given.\n-if test \"${enable_host_bind_now+set}\" = set; then :\n-  enableval=$enable_host_bind_now;\n-fi\n-\n-\n-\n # Check whether --enable-libquadmath-support was given.\n if test \"${enable_libquadmath_support+set}\" = set; then :\n   enableval=$enable_libquadmath_support; ENABLE_LIBQUADMATH_SUPPORT=$enableval\n@@ -32157,8 +32146,6 @@ else\n   PICFLAG=\n fi\n \n-\n-\n if test x$enable_host_pie = xyes; then\n   LD_PICFLAG=-pie\n elif test x$gcc_cv_no_pie = xyes; then\n@@ -32167,9 +32154,6 @@ else\n   LD_PICFLAG=\n fi\n \n-if test x$enable_host_bind_now = xyes; then\n-  LD_PICFLAG=\"$LD_PICFLAG -Wl,-z,now\"\n-fi\n \n \n "}, {"sha": "f5b23b92df1fcb7f6de55e090a4a51296e0cbb80", "filename": "gcc/configure.ac", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f399ee9318bcb44e3e2debde086303157a347d/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f399ee9318bcb44e3e2debde086303157a347d/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=30f399ee9318bcb44e3e2debde086303157a347d", "patch": "@@ -7373,12 +7373,6 @@ AC_ARG_ENABLE(host-pie,\n \t\t[build host code as PIE])])\n AC_SUBST(enable_host_pie)\n \n-# Enable --enable-host-bind-now\n-AC_ARG_ENABLE(host-bind-now,\n-[AS_HELP_STRING([--enable-host-bind-now],\n-\t\t[link host code as BIND_NOW])])\n-AC_SUBST(enable_host_bind_now)\n-\n AC_ARG_ENABLE(libquadmath-support,\n [AS_HELP_STRING([--disable-libquadmath-support],\n   [disable libquadmath support for Fortran])],\n@@ -7520,8 +7514,6 @@ else\n   PICFLAG=\n fi\n \n-AC_SUBST([PICFLAG])\n-\n if test x$enable_host_pie = xyes; then\n   LD_PICFLAG=-pie\n elif test x$gcc_cv_no_pie = xyes; then\n@@ -7530,10 +7522,7 @@ else\n   LD_PICFLAG=\n fi\n \n-if test x$enable_host_bind_now = xyes; then\n-  LD_PICFLAG=\"$LD_PICFLAG -Wl,-z,now\"\n-fi\n-\n+AC_SUBST([PICFLAG])\n AC_SUBST([LD_PICFLAG])\n \n # Enable Intel CET on Intel CET enabled host if jit is enabled."}, {"sha": "b91fbe0216c875ed4cb94be62511d4013aed913d", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f399ee9318bcb44e3e2debde086303157a347d/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f399ee9318bcb44e3e2debde086303157a347d/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=30f399ee9318bcb44e3e2debde086303157a347d", "patch": "@@ -1046,12 +1046,6 @@ protection against Return Oriented Programming (ROP) attacks.\n in which case @option{-fPIC} is used when compiling, and @option{-pie} when\n linking.\n \n-@item --enable-host-bind-now\n-Specify that the @emph{host} executables should be linked with the option\n-@option{-Wl,-z,now}, which means that the dynamic linker will resolve all\n-symbols when the executables are started, and that in turn allows RELRO to\n-mark the GOT read-only, resulting in better security.\n-\n @item @anchor{with-gnu-as}--with-gnu-as\n Specify that the compiler should assume that the\n assembler it finds is the GNU assembler.  However, this does not modify"}, {"sha": "d522bd24c9575910b31c717d8f3a98fa6a1083af", "filename": "lto-plugin/configure", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f399ee9318bcb44e3e2debde086303157a347d/lto-plugin%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f399ee9318bcb44e3e2debde086303157a347d/lto-plugin%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Fconfigure?ref=30f399ee9318bcb44e3e2debde086303157a347d", "patch": "@@ -663,7 +663,6 @@ accel_dir_suffix\n gcc_build_dir\n CET_HOST_FLAGS\n ac_lto_plugin_ldflags\n-enable_host_bind_now\n ac_lto_plugin_warn_cflags\n EGREP\n GREP\n@@ -779,7 +778,6 @@ enable_maintainer_mode\n with_libiberty\n enable_dependency_tracking\n enable_largefile\n-enable_host_bind_now\n enable_cet\n with_gcc_major_version_only\n enable_shared\n@@ -1427,7 +1425,6 @@ Optional Features:\n   --disable-dependency-tracking\n                           speeds up one-time build\n   --disable-largefile     omit support for large files\n-  --enable-host-bind-now  link host code as BIND_NOW\n   --enable-cet            enable Intel CET in host libraries [default=auto]\n   --enable-shared[=PKGS]  build shared libraries [default=yes]\n   --enable-static[=PKGS]  build static libraries [default=yes]\n@@ -5672,19 +5669,6 @@ if test \"x$have_static_libgcc\" = xyes; then\n    ac_lto_plugin_ldflags=\"-Wc,-static-libgcc\"\n fi\n \n-# Enable --enable-host-bind-now\n-# Check whether --enable-host-bind-now was given.\n-if test \"${enable_host_bind_now+set}\" = set; then :\n-  enableval=$enable_host_bind_now;\n-fi\n-\n-\n-\n-if test x$enable_host_bind_now = xyes; then\n-  ac_lto_plugin_ldflags=\"$ac_lto_plugin_ldflags -Wl,-z,now\"\n-fi\n-\n-\n \n  # Check whether --enable-cet was given.\n if test \"${enable_cet+set}\" = set; then :\n@@ -12150,7 +12134,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12165 \"configure\"\n+#line 12137 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12256,7 +12240,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12271 \"configure\"\n+#line 12243 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "0a7202782ae432373e94757208797d52ba50c0cc", "filename": "lto-plugin/configure.ac", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f399ee9318bcb44e3e2debde086303157a347d/lto-plugin%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f399ee9318bcb44e3e2debde086303157a347d/lto-plugin%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Fconfigure.ac?ref=30f399ee9318bcb44e3e2debde086303157a347d", "patch": "@@ -25,17 +25,6 @@ LDFLAGS=\"$saved_LDFLAGS\"\n if test \"x$have_static_libgcc\" = xyes; then\n    ac_lto_plugin_ldflags=\"-Wc,-static-libgcc\"\n fi\n-\n-# Enable --enable-host-bind-now\n-AC_ARG_ENABLE(host-bind-now,\n-[AS_HELP_STRING([--enable-host-bind-now],\n-       [link host code as BIND_NOW])])\n-AC_SUBST(enable_host_bind_now)\n-\n-if test x$enable_host_bind_now = xyes; then\n-  ac_lto_plugin_ldflags=\"$ac_lto_plugin_ldflags -Wl,-z,now\"\n-fi\n-\n AC_SUBST(ac_lto_plugin_ldflags)\n \n GCC_CET_HOST_FLAGS(CET_HOST_FLAGS)"}]}