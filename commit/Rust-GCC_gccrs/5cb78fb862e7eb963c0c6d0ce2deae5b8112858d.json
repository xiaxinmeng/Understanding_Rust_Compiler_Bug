{"sha": "5cb78fb862e7eb963c0c6d0ce2deae5b8112858d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNiNzhmYjg2MmU3ZWI5NjNjMGM2ZDBjZTJkZWFlNWI4MTEyODU4ZA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-01-11T08:51:18Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-01-11T08:51:18Z"}, "message": "[Ada] Illegal protected calls in inherited pre/postconditions\n\nAI12-0166 specifies that it is illegal for a pre/postcondition of a\nprotected operation to contain an internal call to a protected function.\nThis patch completes the implementation of this rule in the case the\ncondition is inherited from a classwide condition of an abstract operation\nof an interface type.\n\nCompiling inheritpo.adb must yield:\n\n   inheritpo.ads:9:04: instantiation error at line 6\n   inheritpo.ads:9:04: internal call to \"F\" cannot appear\n      in inherited precondition of protected operation \"P\"\n   inheritpo.ads:9:04: instantiation error at line 7\n   inheritpo.ads:9:04: internal call to \"F\" cannot appear\n      in inherited precondition of protected operation \"P\"\n\n--\npackage InheritPO is\n\n   type T is limited interface;\n   function F (X : T) return Boolean is abstract;\n   procedure P (X : in out T) is abstract with\n     Pre'Class  => X.F,\n     Post'Class => X.F;\n\n   protected type PT is new T with\n     overriding function F return Boolean;\n     overriding procedure P;\n   end PT;\n\nend InheritPO;\n----\npackage body InheritPO is\n   protected body PT is\n     function F return Boolean is begin return True; end;\n     procedure P is begin null; end;\n   end PT;\nend InheritPO;\n\n2018-01-11  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch3.adb (Add_Internal_Interface_Entities): When checking the\n\tlegality of an inherited operation that may require overriding, ignore\n\tprimitive_wrappers that correspond to explicit operations that override\n\tan interface primitive.\n\n\t* exp_util.adb (Build_Class_Wide_Expression, Replace_Entity): If the\n\toperation to which the class-wide expression applies is a protected op.\n\twith a primitive_wrapper, verify that the updated inherited expression\n\tdoes not contain an internal call to a protected function.  This\n\tcompletes the implementation of AI12-0166.\n\nFrom-SVN: r256491", "tree": {"sha": "d38aa5ce709ef20817faa445aac7be4a27f8c5e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d38aa5ce709ef20817faa445aac7be4a27f8c5e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cb78fb862e7eb963c0c6d0ce2deae5b8112858d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cb78fb862e7eb963c0c6d0ce2deae5b8112858d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cb78fb862e7eb963c0c6d0ce2deae5b8112858d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cb78fb862e7eb963c0c6d0ce2deae5b8112858d/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "94ce49419aef75f3414edcaeba89e63c6c3be320", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94ce49419aef75f3414edcaeba89e63c6c3be320", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94ce49419aef75f3414edcaeba89e63c6c3be320"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "1d1933368899dd3f3986942328d71c24827aa7c6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cb78fb862e7eb963c0c6d0ce2deae5b8112858d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cb78fb862e7eb963c0c6d0ce2deae5b8112858d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5cb78fb862e7eb963c0c6d0ce2deae5b8112858d", "patch": "@@ -1,3 +1,15 @@\n+2018-01-11  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Add_Internal_Interface_Entities): When checking the\n+\tlegality of an inherited operation that may require overriding, ignore\n+\tprimitive_wrappers that correspond to explicit operations that override\n+\tan interface primitive.\n+\t* exp_util.adb (Build_Class_Wide_Expression, Replace_Entity): If the\n+\toperation to which the class-wide expression applies is a protected op.\n+\twith a primitive_wrapper, verify that the updated inherited expression\n+\tdoes not contain an internal call to a protected function.  This\n+\tcompletes the implementation of AI12-0166.\n+\n 2018-01-11  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* ali.adb: Document the remaining letters available for ALI lines."}, {"sha": "058bfe4658b63e2ff860285ebc892f015c89c79d", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cb78fb862e7eb963c0c6d0ce2deae5b8112858d/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cb78fb862e7eb963c0c6d0ce2deae5b8112858d/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=5cb78fb862e7eb963c0c6d0ce2deae5b8112858d", "patch": "@@ -1129,6 +1129,24 @@ package body Exp_Util is\n             if Present (New_E) then\n                Rewrite (N, New_Occurrence_Of (New_E, Sloc (N)));\n \n+               --  Implement rule in AI12-0166: a precondition for a\n+               --  protected operation cannot include an internal call to\n+               --  a protected function of the type. In the case of an\n+               --  inherited condition for an overriding operation, both the\n+               --  operation and the function are given by primitive wrappers.\n+\n+               if Ekind (New_E) = E_Function\n+                 and then Is_Primitive_Wrapper (New_E)\n+                 and then Is_Primitive_Wrapper (Subp)\n+                 and then Scope (Subp) = Scope (New_E)\n+               then\n+                  Error_Msg_Node_2 := Wrapped_Entity (Subp);\n+                  Error_Msg_NE\n+                    (\"internal call to& cannot appear in inherited \"\n+                     & \"precondition of protected operation&\",\n+                       N, Wrapped_Entity (New_E));\n+               end if;\n+\n                --  If the entity is an overridden primitive and we are not\n                --  in GNATprove mode, we must build a wrapper for the current\n                --  inherited operation. If the reference is the prefix of an"}, {"sha": "0e898223725d35ddb3165ed2c173995c26944f82", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cb78fb862e7eb963c0c6d0ce2deae5b8112858d/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cb78fb862e7eb963c0c6d0ce2deae5b8112858d/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=5cb78fb862e7eb963c0c6d0ce2deae5b8112858d", "patch": "@@ -1732,6 +1732,9 @@ package body Sem_Ch3 is\n                   --  nonconforming preconditions in both an ancestor and\n                   --  a progenitor operation.\n \n+                  --  If the operation is a primitive wrapper it is an explicit\n+                  --  (overriding) operqtion and all is fine.\n+\n                   if Present (Anc)\n                     and then Has_Non_Trivial_Precondition (Anc)\n                     and then Has_Non_Trivial_Precondition (Iface_Prim)\n@@ -1742,10 +1745,11 @@ package body Sem_Ch3 is\n                            and then Nkind (Parent (Prim)) =\n                                       N_Procedure_Specification\n                            and then Null_Present (Parent (Prim)))\n+                       or else Is_Primitive_Wrapper (Prim)\n                      then\n                         null;\n \n-                     --  The inherited operation must be overridden\n+                     --  The operation is inherited and must be overridden.\n \n                      elsif not Comes_From_Source (Prim) then\n                         Error_Msg_NE"}]}