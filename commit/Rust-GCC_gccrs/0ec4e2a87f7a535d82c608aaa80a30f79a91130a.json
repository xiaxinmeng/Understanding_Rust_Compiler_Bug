{"sha": "0ec4e2a87f7a535d82c608aaa80a30f79a91130a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVjNGUyYTg3ZjdhNTM1ZDgyYzYwOGFhYTgwYTMwZjc5YTkxMTMwYQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2002-02-13T04:00:27Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2002-02-13T04:00:27Z"}, "message": "rs6000.md: Use predicate altivec_register_operand for altivec_lvx* and altivec_stvx*.\n\n2002-02-12  Aldy Hernandez  <aldyh@redhat.com>\n\n        * config/rs6000/rs6000.md: Use predicate altivec_register_operand\n        for altivec_lvx* and altivec_stvx*.\n        (\"*movv4si_internal\"): Add constraint for loading from GPRs.\n        (\"*movv8hi_internal1\"): Same.\n        (\"*movv16qi_internal1\"): Same.\n        (\"*movv4sf_internal1\"): Same.\n\n        * config/rs6000/rs6000.c (altivec_register_operand): New.\n\n        * config/rs6000/rs6000.h (PREDICATE_CODES): Add\n        altivec_register_operand.\n\nFrom-SVN: r49719", "tree": {"sha": "b273fa6d1de0b590710e7bae57623e816837c1df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b273fa6d1de0b590710e7bae57623e816837c1df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ec4e2a87f7a535d82c608aaa80a30f79a91130a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ec4e2a87f7a535d82c608aaa80a30f79a91130a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ec4e2a87f7a535d82c608aaa80a30f79a91130a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ec4e2a87f7a535d82c608aaa80a30f79a91130a/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b007569d7cc8b1235b74c59f7e989cbc41612ab8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b007569d7cc8b1235b74c59f7e989cbc41612ab8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b007569d7cc8b1235b74c59f7e989cbc41612ab8"}], "stats": {"total": 84, "additions": 60, "deletions": 24}, "files": [{"sha": "18ff1932a73c3b6eb35089dc1889a3c072a11687", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ec4e2a87f7a535d82c608aaa80a30f79a91130a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ec4e2a87f7a535d82c608aaa80a30f79a91130a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0ec4e2a87f7a535d82c608aaa80a30f79a91130a", "patch": "@@ -1,3 +1,17 @@\n+2002-02-12  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * config/rs6000/rs6000.md: Use predicate altivec_register_operand\n+        for altivec_lvx* and altivec_stvx*.\n+        (\"*movv4si_internal\"): Add constraint for loading from GPRs.\n+        (\"*movv8hi_internal1\"): Same.\n+        (\"*movv16qi_internal1\"): Same.\n+        (\"*movv4sf_internal1\"): Same.\n+\n+        * config/rs6000/rs6000.c (altivec_register_operand): New.\n+\n+        * config/rs6000/rs6000.h (PREDICATE_CODES): Add\n+        altivec_register_operand.\n+\n 2002-02-13  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* config/mmix/mmix.c (mmix_assemble_integer) <case 4>: Don't"}, {"sha": "bbd3a525bd4c79e3f4c603193ab36927696652f7", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ec4e2a87f7a535d82c608aaa80a30f79a91130a/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ec4e2a87f7a535d82c608aaa80a30f79a91130a/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=0ec4e2a87f7a535d82c608aaa80a30f79a91130a", "patch": "@@ -710,6 +710,19 @@ count_register_operand (op, mode)\n   return 0;\n }\n \n+/* Returns 1 if op is an altivec register.  */\n+int\n+altivec_register_operand (op, mode)\n+     rtx op;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n+{\n+  \n+  return (register_operand (op, mode)\n+\t  && (GET_CODE (op) != REG\n+\t      || REGNO (op) > FIRST_PSEUDO_REGISTER\n+\t      || ALTIVEC_REGNO_P (REGNO (op))));\n+}\n+\n int\n xer_operand (op, mode)\n      rtx op;"}, {"sha": "ebbede46205bd866ad6b4e5388a02fc2a0486dd3", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ec4e2a87f7a535d82c608aaa80a30f79a91130a/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ec4e2a87f7a535d82c608aaa80a30f79a91130a/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=0ec4e2a87f7a535d82c608aaa80a30f79a91130a", "patch": "@@ -2762,6 +2762,7 @@ extern char rs6000_reg_names[][8];\t/* register names (0 vs. %r0).  */\n \t\t\t\tGT, LEU, LTU, GEU, GTU}},\t\t   \\\n   {\"boolean_operator\", {AND, IOR, XOR}},\t\t\t\t   \\\n   {\"boolean_or_operator\", {IOR, XOR}},\t\t\t\t\t   \\\n+  {\"altivec_register_operand\", {REG}},\t                                   \\\n   {\"min_max_operator\", {SMIN, SMAX, UMIN, UMAX}},\n \n /* uncomment for disabling the corresponding default options */"}, {"sha": "2f49d03d8d5cc79f5078b648c58e4c6f254e0155", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 32, "deletions": 24, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ec4e2a87f7a535d82c608aaa80a30f79a91130a/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ec4e2a87f7a535d82c608aaa80a30f79a91130a/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=0ec4e2a87f7a535d82c608aaa80a30f79a91130a", "patch": "@@ -13871,28 +13871,28 @@\n \n ;; Generic LVX load instruction.\n (define_insn \"altivec_lvx_4si\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n+  [(set (match_operand:V4SI 0 \"altivec_register_operand\" \"=v\")\n \t(match_operand:V4SI 1 \"memory_operand\" \"m\"))]\n   \"TARGET_ALTIVEC\"\n   \"lvx %0,%y1\"\n   [(set_attr \"type\" \"vecload\")])\n \n (define_insn \"altivec_lvx_8hi\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n+  [(set (match_operand:V8HI 0 \"altivec_register_operand\" \"=v\")\n \t(match_operand:V8HI 1 \"memory_operand\" \"m\"))]\n   \"TARGET_ALTIVEC\"\n   \"lvx %0,%y1\"\n   [(set_attr \"type\" \"vecload\")])\n \n (define_insn \"altivec_lvx_16qi\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n+  [(set (match_operand:V16QI 0 \"altivec_register_operand\" \"=v\")\n \t(match_operand:V16QI 1 \"memory_operand\" \"m\"))]\n   \"TARGET_ALTIVEC\"\n   \"lvx %0,%y1\"\n   [(set_attr \"type\" \"vecload\")])\n \n (define_insn \"altivec_lvx_4sf\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n+  [(set (match_operand:V4SF 0 \"altivec_register_operand\" \"=v\")\n \t(match_operand:V4SF 1 \"memory_operand\" \"m\"))]\n   \"TARGET_ALTIVEC\"\n   \"lvx %0,%y1\"\n@@ -13901,28 +13901,28 @@\n ;; Generic STVX store instruction.\n (define_insn \"altivec_stvx_4si\"\n   [(set (match_operand:V4SI 0 \"memory_operand\" \"=m\")\n-\t(match_operand:V4SI 1 \"register_operand\" \"v\"))]\n+\t(match_operand:V4SI 1 \"altivec_register_operand\" \"v\"))]\n   \"TARGET_ALTIVEC\"\n   \"stvx %1,%y0\"\n   [(set_attr \"type\" \"vecstore\")])\n \n (define_insn \"altivec_stvx_8hi\"\n   [(set (match_operand:V8HI 0 \"memory_operand\" \"=m\")\n-\t(match_operand:V8HI 1 \"register_operand\" \"v\"))]\n+\t(match_operand:V8HI 1 \"altivec_register_operand\" \"v\"))]\n   \"TARGET_ALTIVEC\"\n   \"stvx %1,%y0\"\n   [(set_attr \"type\" \"vecstore\")])\n \n (define_insn \"altivec_stvx_16qi\"\n   [(set (match_operand:V16QI 0 \"memory_operand\" \"=m\")\n-\t(match_operand:V16QI 1 \"register_operand\" \"v\"))]\n+\t(match_operand:V16QI 1 \"altivec_register_operand\" \"v\"))]\n   \"TARGET_ALTIVEC\"\n   \"stvx %1,%y0\"\n   [(set_attr \"type\" \"vecstore\")])\n \n (define_insn \"altivec_stvx_4sf\"\n   [(set (match_operand:V4SF 0 \"memory_operand\" \"=m\")\n-\t(match_operand:V4SF 1 \"register_operand\" \"v\"))]\n+\t(match_operand:V4SF 1 \"altivec_register_operand\" \"v\"))]\n   \"TARGET_ALTIVEC\"\n   \"stvx %1,%y0\"\n   [(set_attr \"type\" \"vecstore\")])\n@@ -13935,14 +13935,16 @@\n   \"{ rs6000_emit_move (operands[0], operands[1], V4SImode); DONE; }\")\n \n (define_insn \"*movv4si_internal\"\n-  [(set (match_operand:V4SI 0 \"nonimmediate_operand\" \"=m,v,v\")\n-\t(match_operand:V4SI 1 \"input_operand\" \"v,m,v\"))]\n+  [(set (match_operand:V4SI 0 \"nonimmediate_operand\" \"=m,v,v,m\")\n+\t(match_operand:V4SI 1 \"input_operand\" \"v,m,v,r\"))]\n   \"TARGET_ALTIVEC\"\n   \"@\n    stvx %1,%y0\n    lvx %0,%y1\n-   vor %0,%1,%1\"\n-  [(set_attr \"type\" \"altivec\")])\n+   vor %0,%1,%1\n+   stw%U0 %1,%0\\;stw %L1,%L0\\;stw %Y1,%Y0\\;stw %Z1,%Z0\"\n+  [(set_attr \"type\" \"altivec\")\n+   (set_attr \"length\" \"*,*,*,16\")])\n \n (define_expand \"movv8hi\"\n   [(set (match_operand:V8HI 0 \"nonimmediate_operand\" \"\")\n@@ -13951,14 +13953,16 @@\n   \"{ rs6000_emit_move (operands[0], operands[1], V8HImode); DONE; }\")\n \n (define_insn \"*movv8hi_internal1\"\n-  [(set (match_operand:V8HI 0 \"nonimmediate_operand\" \"=m,v,v\")\n-\t(match_operand:V8HI 1 \"input_operand\" \"v,m,v\"))]\n+  [(set (match_operand:V8HI 0 \"nonimmediate_operand\" \"=m,v,v,m\")\n+\t(match_operand:V8HI 1 \"input_operand\" \"v,m,v,r\"))]\n   \"TARGET_ALTIVEC\"\n   \"@\n    stvx %1,%y0\n    lvx %0,%y1\n-   vor %0,%1,%1\"\n-  [(set_attr \"type\" \"altivec\")])\n+   vor %0,%1,%1\n+   stw%U0 %1,%0\\;stw %L1,%L0\\;stw %Y1,%Y0\\;stw %Z1,%Z0\"\n+  [(set_attr \"type\" \"altivec\")\n+   (set_attr \"length\" \"*,*,*,16\")])\n \n (define_expand \"movv16qi\"\n   [(set (match_operand:V16QI 0 \"nonimmediate_operand\" \"\")\n@@ -13967,14 +13971,16 @@\n   \"{ rs6000_emit_move (operands[0], operands[1], V16QImode); DONE; }\")\n \n (define_insn \"*movv16qi_internal1\"\n-  [(set (match_operand:V16QI 0 \"nonimmediate_operand\" \"=m,v,v\")\n-\t(match_operand:V16QI 1 \"input_operand\" \"v,m,v\"))]\n+  [(set (match_operand:V16QI 0 \"nonimmediate_operand\" \"=m,v,v,m\")\n+\t(match_operand:V16QI 1 \"input_operand\" \"v,m,v,r\"))]\n   \"TARGET_ALTIVEC\"\n   \"@\n    stvx %1,%y0\n    lvx %0,%y1\n-   vor %0,%1,%1\"\n-  [(set_attr \"type\" \"altivec\")])\n+   vor %0,%1,%1\n+  stw%U0 %1,%0\\;stw %L1,%L0\\;stw %Y1,%Y0\\;stw %Z1,%Z0\"\n+  [(set_attr \"type\" \"altivec\")\n+   (set_attr \"length\" \"*,*,*,16\")])\n \n (define_expand \"movv4sf\"\n   [(set (match_operand:V4SF 0 \"nonimmediate_operand\" \"\")\n@@ -13983,14 +13989,16 @@\n   \"{ rs6000_emit_move (operands[0], operands[1], V4SFmode); DONE; }\")\n \n (define_insn \"*movv4sf_internal1\"\n-  [(set (match_operand:V4SF 0 \"nonimmediate_operand\" \"=m,v,v\")\n-\t(match_operand:V4SF 1 \"input_operand\" \"v,m,v\"))]\n+  [(set (match_operand:V4SF 0 \"nonimmediate_operand\" \"=m,v,v,m\")\n+\t(match_operand:V4SF 1 \"input_operand\" \"v,m,v,r\"))]\n   \"TARGET_ALTIVEC\"\n   \"@\n    stvx %1,%y0\n    lvx %0,%y1\n-   vor %0,%1,%1\"\n-  [(set_attr \"type\" \"altivec\")])\n+   vor %0,%1,%1\n+   stw%U0 %1,%0\\;stw %L1,%L0\\;stw %Y1,%Y0\\;stw %Z1,%Z0\"\n+  [(set_attr \"type\" \"altivec\")\n+   (set_attr \"length\" \"*,*,*,16\")])\n \n (define_insn \"*set_vrsave_internal\"\n   [(match_parallel 0 \"vrsave_operation\""}]}