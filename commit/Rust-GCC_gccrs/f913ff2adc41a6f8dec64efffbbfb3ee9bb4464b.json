{"sha": "f913ff2adc41a6f8dec64efffbbfb3ee9bb4464b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjkxM2ZmMmFkYzQxYTZmOGRlYzY0ZWZmZmJiZmIzZWU5YmI0NDY0Yg==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-04-07T23:52:03Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-04-07T23:52:03Z"}, "message": "re PR middle-end/82976 (Error: non-trivial conversion at assignment since r254526)\n\n2018-04-07  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\tAndrew Pinski <pinsika@gcc.gnu.org>\n\n\tPR middle-end/82976\n\t* match.pd: Use constant_boolean_node of correct type instead of\n\tboolean_true_node or boolean_false_node for simplifying\n\tpointer comparisons to zero.\n\n2018-04-07  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR middle-end/82976\n\t* gfortran.dg/realloc_on_assign_16a.f90: New test.\n\n\nCo-Authored-By: Andrew Pinski <pinskia@gcc.gnu.org>\n\nFrom-SVN: r259212", "tree": {"sha": "2a8701b4c6ab1c4378abbf0c65d5ddf552ee37cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a8701b4c6ab1c4378abbf0c65d5ddf552ee37cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f913ff2adc41a6f8dec64efffbbfb3ee9bb4464b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f913ff2adc41a6f8dec64efffbbfb3ee9bb4464b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f913ff2adc41a6f8dec64efffbbfb3ee9bb4464b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f913ff2adc41a6f8dec64efffbbfb3ee9bb4464b/comments", "author": null, "committer": null, "parents": [{"sha": "7c75d64658039682e0d2bd73c81b0adc88677115", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c75d64658039682e0d2bd73c81b0adc88677115", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c75d64658039682e0d2bd73c81b0adc88677115"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "2430cce09688d51b6e6bf11a967243c0ddc9a2e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f913ff2adc41a6f8dec64efffbbfb3ee9bb4464b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f913ff2adc41a6f8dec64efffbbfb3ee9bb4464b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f913ff2adc41a6f8dec64efffbbfb3ee9bb4464b", "patch": "@@ -1,3 +1,11 @@\n+2018-04-07  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\tAndrew Pinski <pinsika@gcc.gnu.org>\n+\n+\tPR middle-end/82976\n+\t* match.pd: Use constant_boolean_node of correct type instead of\n+\tboolean_true_node or boolean_false_node for simplifying\n+\tpointer comparisons to zero.\n+\n 2018-04-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/80021"}, {"sha": "1bbf09f96f0162864363bc997d3c0c72de401d30", "filename": "gcc/match.pd", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f913ff2adc41a6f8dec64efffbbfb3ee9bb4464b/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f913ff2adc41a6f8dec64efffbbfb3ee9bb4464b/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=f913ff2adc41a6f8dec64efffbbfb3ee9bb4464b", "patch": "@@ -3700,7 +3700,7 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n   (neeq @0 @1)\n   (if (POINTER_TYPE_P (TREE_TYPE (@0))\n        && ptrs_compare_unequal (@0, @1))\n-   { neeq == EQ_EXPR ? boolean_false_node : boolean_true_node; })))\n+   { constant_boolean_node (neeq != EQ_EXPR, type); })))\n \n /* PR70920: Transform (intptr_t)x eq/ne CST to x eq/ne (typeof x) CST.\n    and (typeof ptr_cst) x eq/ne ptr_cst to x eq/ne (typeof x) CST."}, {"sha": "08a80f15e9935bbeaf577a5a3cda57455b65fa0d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f913ff2adc41a6f8dec64efffbbfb3ee9bb4464b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f913ff2adc41a6f8dec64efffbbfb3ee9bb4464b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f913ff2adc41a6f8dec64efffbbfb3ee9bb4464b", "patch": "@@ -1,3 +1,8 @@\n+2018-04-07  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR middle-end/82976\n+\t* gfortran.dg/realloc_on_assign_16a.f90: New test.\n+\n 2018-04-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/85257"}, {"sha": "9d16d6caf717f2bbfcead5b7e84af129e79f4691", "filename": "gcc/testsuite/gfortran.dg/realloc_on_assign_16a.f90", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f913ff2adc41a6f8dec64efffbbfb3ee9bb4464b/gcc%2Ftestsuite%2Fgfortran.dg%2Frealloc_on_assign_16a.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f913ff2adc41a6f8dec64efffbbfb3ee9bb4464b/gcc%2Ftestsuite%2Fgfortran.dg%2Frealloc_on_assign_16a.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Frealloc_on_assign_16a.f90?ref=f913ff2adc41a6f8dec64efffbbfb3ee9bb4464b", "patch": "@@ -0,0 +1,29 @@\n+! { dg-do compile }\n+! { dg-options \"-Ofast -fno-tree-forwprop\" }\n+! Test that PR 82976 is fixed, this used to ICE.\n+!\n+! Contributed by Stefan Mauerberger  <stefan.mauerberger@gmail.com>\n+!\n+PROGRAM main\n+    !USE MPI\n+\n+    TYPE :: test_typ\n+        REAL, ALLOCATABLE :: a(:)\n+    END TYPE\n+\n+    TYPE(test_typ) :: xx, yy\n+    TYPE(test_typ), ALLOCATABLE :: conc(:)\n+\n+    !CALL MPI_INIT(i)\n+\n+    xx = test_typ( [1.0,2.0] )\n+    yy = test_typ( [4.0,4.9] )\n+\n+    conc = [ xx, yy ]\n+\n+    if (any (int (10.0*conc(1)%a) .ne. [10,20])) STOP 1\n+    if (any (int (10.0*conc(2)%a) .ne. [40,49])) STOP 2\n+\n+    !CALL MPI_FINALIZE(i)\n+\n+END PROGRAM main"}]}