{"sha": "b779e6bf0b7cf03a96bc68a31be7d39ca383f645", "node_id": "C_kwDOANBUbNoAKGI3NzllNmJmMGI3Y2YwM2E5NmJjNjhhMzFiZTdkMzljYTM4M2Y2NDU", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-13T20:59:03Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-14T08:35:05Z"}, "message": "Revert \"sphinx: add --with-sphinx-build\"\n\nThis reverts commit 1f5a932e89b0c2c4a7af7f849ca2e2e3dbf329e0.", "tree": {"sha": "f95ec94e633e9cdbf542fd8206c079e6a7d20c0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f95ec94e633e9cdbf542fd8206c079e6a7d20c0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b779e6bf0b7cf03a96bc68a31be7d39ca383f645", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b779e6bf0b7cf03a96bc68a31be7d39ca383f645", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b779e6bf0b7cf03a96bc68a31be7d39ca383f645", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6e95a12a032defdbbe3b497aef35f7228653d76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6e95a12a032defdbbe3b497aef35f7228653d76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6e95a12a032defdbbe3b497aef35f7228653d76"}], "stats": {"total": 585, "additions": 82, "deletions": 503}, "files": [{"sha": "92432c3ba6798a64812270af5aabf37fd614d5ca", "filename": "gcc/Makefile.in", "status": "modified", "additions": 19, "deletions": 20, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=b779e6bf0b7cf03a96bc68a31be7d39ca383f645", "patch": "@@ -765,7 +765,6 @@ INSTALL_HEADERS=install-headers install-mkheaders\n \n # Control whether manpages generated by sphinx-build can be rebuilt.\n SPHINX_BUILD = @SPHINX_BUILD@\n-HAS_SPHINX_BUILD = @HAS_SPHINX_BUILD@\n \n # Additional directories of header files to run fixincludes on.\n # These should be directories searched automatically by default\n@@ -3276,7 +3275,7 @@ install-no-fixedincludes:\n \n # Remake the info files.\n \n-doc: $(HAS_SPHINX_BUILD)\n+doc: $(SPHINX_BUILD)\n \n INFOFILES = doc/gcc/info/texinfo/gcc.info \\\n \t    doc/gccint/info/texinfo/gccint.info \\\n@@ -3295,19 +3294,19 @@ PDFFILES = doc/gcc/pdf/latex/gcc.pdf doc/gccint/pdf/latex/gccint.pdf doc/install\n pdf:: $(PDFFILES) lang.pdf\n \n doc/gcc/pdf/latex/gcc.pdf: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_docdir)/gcc BUILDDIR=$(objdir)/doc/gcc/pdf SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_docdir)/gcc BUILDDIR=$(objdir)/doc/gcc/pdf\n \n doc/gccint/pdf/latex/gccint.pdf: $(SPHINX_FILES) s-tm-rst-in\n-\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_docdir)/gccint BUILDDIR=$(objdir)/doc/gccint/pdf SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_docdir)/gccint BUILDDIR=$(objdir)/doc/gccint/pdf\n \n doc/install/pdf/latex/install.pdf: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_docdir)/install BUILDDIR=$(objdir)/doc/install/pdf SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_docdir)/install BUILDDIR=$(objdir)/doc/install/pdf\n \n doc/cpp/pdf/latex/cpp.pdf: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_docdir)/cpp BUILDDIR=$(objdir)/doc/cpp/pdf SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_docdir)/cpp BUILDDIR=$(objdir)/doc/cpp/pdf\n \n doc/cppinternals/pdf/latex/cppinternals.pdf: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_docdir)/cppinternals BUILDDIR=$(objdir)/doc/cppinternals/pdf SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_docdir)/cppinternals BUILDDIR=$(objdir)/doc/cppinternals/pdf\n \n # List the directories or single hmtl files which are installed by\n # install-html. The lang.html file triggers language fragments to build\n@@ -3323,19 +3322,19 @@ HTMLS = doc/gcc/html/html/index.html doc/gccint/html/html/index.html doc/install\n html:: $(HTMLS) lang.html\n \n doc/gcc/html/html/index.html: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_docdir)/gcc BUILDDIR=$(objdir)/doc/gcc/html SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_docdir)/gcc BUILDDIR=$(objdir)/doc/gcc/html\n \n doc/gccint/html/html/index.html: $(SPHINX_FILES) s-tm-rst-in\n-\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_docdir)/gccint BUILDDIR=$(objdir)/doc/gccint/html SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_docdir)/gccint BUILDDIR=$(objdir)/doc/gccint/html\n \n doc/install/html/html/index.html: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_docdir)/install BUILDDIR=$(objdir)/doc/install/html SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_docdir)/install BUILDDIR=$(objdir)/doc/install/html\n \n doc/cpp/html/html/index.html: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_docdir)/cpp BUILDDIR=$(objdir)/doc/cpp/html SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_docdir)/cpp BUILDDIR=$(objdir)/doc/cpp/html\n \n doc/cppinternals/html/html/index.html: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_docdir)/cppinternals BUILDDIR=$(objdir)/doc/cppinternals/html SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_docdir)/cppinternals BUILDDIR=$(objdir)/doc/cppinternals/html\n \n MANFILES = doc/gcc/man/man/gcc.1 doc/cpp/man/man/cpp.1 \\\n \t   doc/gcc/man/man/gfdl.7 doc/gcc/man/man/gpl.7 \\\n@@ -3352,14 +3351,14 @@ man: $(MANFILES) lang.man @GENINSRC@ srcman lang.srcman\n srcman: $(MANFILES)\n \t-cp -p $^ $(srcdir)/doc\n \n-has-sphinx-build: man info\n+sphinx-build: man info\n \n RST_FILES:=$(shell find $(srcdir) -name *.rst -or -name *.rst.in)\n SPHINX_CONFIG_FILES:=$(shell find $(srcdir)/.. -name conf.py) $(srcdir)/../doc/baseconf.py\n SPHINX_FILES:=$(RST_FILES) $(SPHINX_CONFIG_FILES)\n \n doc/gcc/man/man/gcc.1: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc man SOURCEDIR=$(abs_docdir)/gcc BUILDDIR=$(objdir)/doc/gcc/man SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc man SOURCEDIR=$(abs_docdir)/gcc BUILDDIR=$(objdir)/doc/gcc/man\n \n doc/gcc/man/man/gcov.1: doc/gcc/man/man/gcc.1\n doc/gcc/man/man/gcov-tool.1: doc/gcc/man/man/gcc.1\n@@ -3370,22 +3369,22 @@ doc/gcc/man/man/gpl.7: doc/gcc/man/man/gcc.1\n doc/gcc/man/man/fsf-funding.7: doc/gcc/man/man/gcc.1\n \n doc/cpp/man/man/cpp.1: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc man SOURCEDIR=$(abs_docdir)/cpp BUILDDIR=$(objdir)/doc/cpp/man SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc man SOURCEDIR=$(abs_docdir)/cpp BUILDDIR=$(objdir)/doc/cpp/man\n \n doc/gcc/info/texinfo/gcc.info: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc info SOURCEDIR=$(abs_docdir)/gcc BUILDDIR=$(objdir)/doc/gcc/info SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc info SOURCEDIR=$(abs_docdir)/gcc BUILDDIR=$(objdir)/doc/gcc/info\n \n doc/gccint/info/texinfo/gccint.info: $(SPHINX_FILES) s-tm-rst-in\n-\t+ make -C $(srcdir)/../doc info SOURCEDIR=$(abs_docdir)/gccint BUILDDIR=$(objdir)/doc/gccint/info SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc info SOURCEDIR=$(abs_docdir)/gccint BUILDDIR=$(objdir)/doc/gccint/info\n \n doc/cpp/info/texinfo/cpp.info: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc info SOURCEDIR=$(abs_docdir)/cpp BUILDDIR=$(objdir)/doc/cpp/info SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc info SOURCEDIR=$(abs_docdir)/cpp BUILDDIR=$(objdir)/doc/cpp/info\n \n doc/cppinternals/info/texinfo/cppinternals.info: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc info SOURCEDIR=$(abs_docdir)/cppinternals BUILDDIR=$(objdir)/doc/cppinternals/info SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc info SOURCEDIR=$(abs_docdir)/cppinternals BUILDDIR=$(objdir)/doc/cppinternals/info\n \n doc/install/info/texinfo/install.info: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc info SOURCEDIR=$(abs_docdir)/install BUILDDIR=$(objdir)/doc/install/info SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc info SOURCEDIR=$(abs_docdir)/install BUILDDIR=$(objdir)/doc/install/info\n \n #\f\n # Deletion of files made during compilation."}, {"sha": "71a26e526277d45d0cf0160634d86a76804425be", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=b779e6bf0b7cf03a96bc68a31be7d39ca383f645", "patch": "@@ -809,18 +809,18 @@ ada.tags: force\n # Generate documentation.\n \n doc/gnat_ugn/info/texinfo/gnat_ugn.info: $(SPHINX_FILES)\n-\t+ if [ x$(HAS_SPHINX_BUILD) = xhas-sphinx-build ]; then \\\n-\t  make -C $(srcdir)/../doc info SOURCEDIR=$(abs_srcdir)/ada/doc/gnat_ugn BUILDDIR=$(objdir)/doc/gnat_ugn/info SPHINXBUILD=$(SPHINX_BUILD); \\\n+\t+ if [ x$(SPHINX_BUILD) = xsphinx-build ]; then \\\n+\t  make -C $(srcdir)/../doc info SOURCEDIR=$(abs_srcdir)/ada/doc/gnat_ugn BUILDDIR=$(objdir)/doc/gnat_ugn/info; \\\n \telse true; fi\n \n doc/gnat_rm/info/texinfo/gnat_rm.info: $(SPHINX_FILES)\n-\t+ if [ x$(HAS_SPHINX_BUILD) = xhas-sphinx-build ]; then \\\n-\t  make -C $(srcdir)/../doc info SOURCEDIR=$(abs_srcdir)/ada/doc/gnat_rm BUILDDIR=$(objdir)/doc/gnat_rm/info SPHINXBUILD=$(SPHINX_BUILD); \\\n+\t+ if [ x$(SPHINX_BUILD) = xsphinx-build ]; then \\\n+\t  make -C $(srcdir)/../doc info SOURCEDIR=$(abs_srcdir)/ada/doc/gnat_rm BUILDDIR=$(objdir)/doc/gnat_rm/info; \\\n \telse true; fi\n \n doc/gnat-style/info/texinfo/gnat-style.info: $(SPHINX_FILES)\n-\t+ if [ x$(HAS_SPHINX_BUILD) = xhas-sphinx-build ]; then \\\n-\t  make -C $(srcdir)/../doc info SOURCEDIR=$(abs_srcdir)/ada/doc/gnat-style BUILDDIR=$(objdir)/doc/gnat-style/info SPHINXBUILD=$(SPHINX_BUILD); \\\n+\t+ if [ x$(SPHINX_BUILD) = xsphinx-build ]; then \\\n+\t  make -C $(srcdir)/../doc info SOURCEDIR=$(abs_srcdir)/ada/doc/gnat-style BUILDDIR=$(objdir)/doc/gnat-style/info; \\\n \telse true; fi\n \n ADA_INFOFILES = doc/gnat_ugn/info/texinfo/gnat_ugn.info \\\n@@ -855,13 +855,13 @@ ADA_PDFFILES = doc/gnat_ugn/pdf/latex/gnat_ugn.pdf\\\n ada.pdf: $(ADA_PDFFILES)\n \n doc/gnat_ugn/pdf/latex/gnat_ugn.pdf: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_srcdir)/ada/doc/gnat_ugn BUILDDIR=$(objdir)/doc/gnat_ugn/pdf SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_srcdir)/ada/doc/gnat_ugn BUILDDIR=$(objdir)/doc/gnat_ugn/pdf\n \n doc/gnat_rm/pdf/latex/gnat_rm.pdf: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_srcdir)/ada/doc/gnat_rm BUILDDIR=$(objdir)/doc/gnat_rm/pdf SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_srcdir)/ada/doc/gnat_rm BUILDDIR=$(objdir)/doc/gnat_rm/pdf\n \n doc/gnat-style/pdf/latex/gnat-style.pdf: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_srcdir)/ada/doc/gnat-style BUILDDIR=$(objdir)/doc/gnat-style/pdf SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_srcdir)/ada/doc/gnat-style BUILDDIR=$(objdir)/doc/gnat-style/pdf\n \n ada.install-pdf: $(ADA_PDFFILES)\n \t@$(NORMAL_INSTALL)\n@@ -876,13 +876,13 @@ ada.install-pdf: $(ADA_PDFFILES)\n ada.html: doc/gnat_ugn/html/html/index.html doc/gnat_rm/html/html/index.html doc/gnat-style/html/html/index.html\n \n doc/gnat_ugn/html/html/index.html: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_srcdir)/ada/doc/gnat_ugn BUILDDIR=$(objdir)/doc/gnat_ugn/html SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_srcdir)/ada/doc/gnat_ugn BUILDDIR=$(objdir)/doc/gnat_ugn/html\n \n doc/gnat_rm/html/html/index.html: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_srcdir)/ada/doc/gnat_rm BUILDDIR=$(objdir)/doc/gnat_rm/html SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_srcdir)/ada/doc/gnat_rm BUILDDIR=$(objdir)/doc/gnat_rm/html\n \n doc/gnat-style/html/html/index.html: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_srcdir)/ada/doc/gnat-style BUILDDIR=$(objdir)/doc/gnat-style/html SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_srcdir)/ada/doc/gnat-style BUILDDIR=$(objdir)/doc/gnat-style/html\n \n ada.install-html:\n "}, {"sha": "ca1169f1c21f3e2841e9c37f70e8784e3d6701a8", "filename": "gcc/configure", "status": "modified", "additions": 4, "deletions": 34, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=b779e6bf0b7cf03a96bc68a31be7d39ca383f645", "patch": "@@ -807,9 +807,7 @@ AR\n NM\n BISON\n FLEX\n-HAS_SPHINX_BUILD\n SPHINX_BUILD\n-CONFIGURE_SPHINX_BUILD\n GENERATED_MANPAGES\n BUILD_INFO\n MAKEINFO\n@@ -984,7 +982,6 @@ with_changes_root_url\n enable_languages\n with_multilib_list\n with_multilib_generator\n-with_sphinx_build\n with_zstd\n with_zstd_include\n with_zstd_lib\n@@ -1839,7 +1836,6 @@ Optional Packages:\n                           SH and x86-64 only)\n   --with-multilib-generator\n                           Multi-libs configuration string (RISC-V only)\n-  --with-sphinx-build=    Use sphinx-build from a given path\n   --with-zstd=PATH        specify prefix directory for installed zstd library.\n                           Equivalent to --with-zstd-include=PATH/include plus\n                           --with-zstd-lib=PATH/lib\n@@ -8810,34 +8806,12 @@ $as_echo \"no\" >&6; }\n fi\n \n \n-\n-# Check whether --with-sphinx-build was given.\n-if test \"${with_sphinx_build+set}\" = set; then :\n-  withval=$with_sphinx_build; CONFIGURE_SPHINX_BUILD=$withval\n-else\n-  CONFIGURE_SPHINX_BUILD=\n-\n-fi\n-\n-\n-\n # See if sphinx-build has been installed and is modern enough\n # that we can use it.\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sphinx-build\" >&5\n $as_echo_n \"checking for sphinx-build... \" >&6; }\n-sphinx=sphinx-build\n-if test x${CONFIGURE_SPHINX_BUILD} != x ; then\n-  sphinx=${CONFIGURE_SPHINX_BUILD}\n-fi\n-\n-tempdir=build.$$\n-source=source.$$\n-mkdir $source\n-grep 'needs_sphinx =' ${srcdir}/../doc/baseconf.py > $source/conf.py\n-touch $source/index.rst\n-if ${sphinx} $source $tempdir >/dev/null 2>&1; then\n-  SPHINX_BUILD=${sphinx}\n-  HAS_SPHINX_BUILD=has-sphinx-build\n+if sphinx-build -j auto -h &>/dev/null ; then\n+  SPHINX_BUILD=sphinx-build\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n $as_echo \"yes\" >&6; }\n else\n@@ -8850,11 +8824,7 @@ $as_echo \"$as_me: WARNING:\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n $as_echo \"no\" >&6; }\n   SPHINX_BUILD=\n-  HAS_SPHINX_BUILD=\n fi\n-rm -rf $tempdir\n-rm -rf $source\n-\n \n \n MISSING=\"${CONFIG_SHELL-/bin/sh} $ac_aux_dir/missing\"\n@@ -19762,7 +19732,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19765 \"configure\"\n+#line 19735 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -19868,7 +19838,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19871 \"configure\"\n+#line 19841 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "f1de29e65b1e3e280e83fd10d3eba0580d2216e2", "filename": "gcc/configure.ac", "status": "modified", "additions": 2, "deletions": 25, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=b779e6bf0b7cf03a96bc68a31be7d39ca383f645", "patch": "@@ -1253,43 +1253,20 @@ else\n fi\n AC_SUBST(GENERATED_MANPAGES)\n \n-AC_ARG_WITH(sphinx-build,\n-  [AS_HELP_STRING([--with-sphinx-build=],\n-                  [Use sphinx-build from a given path])],\n-  [CONFIGURE_SPHINX_BUILD=$withval],\n-  [CONFIGURE_SPHINX_BUILD=]\n-)\n-AC_SUBST(CONFIGURE_SPHINX_BUILD)\n-\n # See if sphinx-build has been installed and is modern enough\n # that we can use it.\n AC_MSG_CHECKING([for sphinx-build])\n-sphinx=sphinx-build\n-if test x${CONFIGURE_SPHINX_BUILD} != x ; then\n-  sphinx=${CONFIGURE_SPHINX_BUILD}\n-fi\n-\n-tempdir=build.$$\n-source=source.$$\n-mkdir $source\n-grep 'needs_sphinx =' ${srcdir}/../doc/baseconf.py > $source/conf.py\n-touch $source/index.rst\n-if ${sphinx} $source $tempdir >/dev/null 2>&1; then\n-  SPHINX_BUILD=${sphinx}\n-  HAS_SPHINX_BUILD=has-sphinx-build\n+if sphinx-build -j auto -h &>/dev/null ; then\n+  SPHINX_BUILD=sphinx-build\n   AC_MSG_RESULT(yes)\n else\n   AC_MSG_WARN([\n   *** sphinx-build is missing or too old.\n   *** Info and man pages documentation will not be built.])\n   AC_MSG_RESULT(no)\n   SPHINX_BUILD=\n-  HAS_SPHINX_BUILD=\n fi\n-rm -rf $tempdir\n-rm -rf $source\n AC_SUBST(SPHINX_BUILD)\n-AC_SUBST(HAS_SPHINX_BUILD)\n \n MISSING=\"${CONFIG_SHELL-/bin/sh} $ac_aux_dir/missing\"\n "}, {"sha": "87178e37145e088616b1bac9770d624d3c09724b", "filename": "gcc/d/Make-lang.in", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/gcc%2Fd%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/gcc%2Fd%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FMake-lang.in?ref=b779e6bf0b7cf03a96bc68a31be7d39ca383f645", "patch": "@@ -237,15 +237,15 @@ d21$(exeext): $(D_ALL_OBJS) attribs.o $(BACKEND) $(LIBDEPS) $(d.prev)\n \n # Documentation.\n doc/gdc/info/texinfo/gdc.info: $(SPHINX_FILES)\n-\t+ if [ x$(HAS_SPHINX_BUILD) = xhas-sphinx-build ]; then \\\n-\t  make -C $(srcdir)/../doc info SOURCEDIR=$(abs_srcdir)/d/doc BUILDDIR=$(objdir)/doc/gdc/info SPHINXBUILD=$(SPHINX_BUILD); \\\n+\t+ if [ x$(SPHINX_BUILD) = xsphinx-build ]; then \\\n+\t  make -C $(srcdir)/../doc info SOURCEDIR=$(abs_srcdir)/d/doc BUILDDIR=$(objdir)/doc/gdc/info; \\\n \telse true; fi\n \n doc/gdc.pdf: $(D_TEXI_FILES)\n \t$(TEXI2PDF) -I $(abs_docdir) -I $(abs_docdir)/include -o $@ $<\n \n doc/gdc/html/html/index.html: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_srcdir)/d/doc BUILDDIR=$(objdir)/doc/gdc/html SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_srcdir)/d/doc BUILDDIR=$(objdir)/doc/gdc/html\n # Build hooks.\n \n d.all.cross: gdc-cross$(exeext)\n@@ -271,7 +271,7 @@ d.srcman: doc/gdc/man/man/gdc.1\n \t-cp -p $^ $(srcdir)/doc\n \n doc/gdc/man/man/gdc.1: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc man SOURCEDIR=$(abs_srcdir)/d/doc BUILDDIR=$(objdir)/doc/gdc/man SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc man SOURCEDIR=$(abs_srcdir)/d/doc BUILDDIR=$(objdir)/doc/gdc/man\n \n # 'make check' in gcc/ looks for check-d, as do all toplevel D-related\n # check targets.  However, our DejaGNU framework requires 'check-gdc' as its\n@@ -304,7 +304,7 @@ d.install-plugin:\n d.install-info: $(DESTDIR)$(infodir)/gdc.info\n \n doc/gdc/pdf/latex/gdc.pdf: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_srcdir)/d/doc BUILDDIR=$(objdir)/doc/gdc/pdf SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_srcdir)/d/doc BUILDDIR=$(objdir)/doc/gdc/pdf\n \n $(DESTDIR)$(infodir)/gdc.info: doc/gdc/info/texinfo/gdc.info installdirs\n \t-rm -f $@"}, {"sha": "17c0474215d31ba428dc5ab175c59c1875594735", "filename": "gcc/fortran/Make-lang.in", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/gcc%2Ffortran%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/gcc%2Ffortran%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FMake-lang.in?ref=b779e6bf0b7cf03a96bc68a31be7d39ca383f645", "patch": "@@ -119,8 +119,8 @@ fortran.tags: force\n fortran.info: doc/gfortran/info/texinfo/gfortran.info doc/gfc-internals/info/texinfo/gfc-internals.info\n \n doc/gfortran/info/texinfo/gfortran.info: $(SPHINX_FILES)\n-\t+ if [ x$(HAS_SPHINX_BUILD) = xhas-sphinx-build ]; then \\\n-\t  make -C $(srcdir)/../doc info SOURCEDIR=$(abs_srcdir)/fortran/doc/gfortran BUILDDIR=$(objdir)/doc/gfortran/info SPHINXBUILD=$(SPHINX_BUILD); \\\n+\t+ if [ x$(SPHINX_BUILD) = xsphinx-build ]; then \\\n+\t  make -C $(srcdir)/../doc info SOURCEDIR=$(abs_srcdir)/fortran/doc/gfortran BUILDDIR=$(objdir)/doc/gfortran/info; \\\n \telse true; fi\n \n F95_HTMLFILES = doc/fortran/html/html/index.html\n@@ -161,7 +161,7 @@ fortran.install-pdf: $(F95_PDFFILES)\n F95_MANFILES = doc/gfortran/man/man/gfortran.1\n \n doc/gfortran/man/man/gfortran.1: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc man SOURCEDIR=$(abs_srcdir)/fortran/doc/gfortran BUILDDIR=$(objdir)/doc/gfortran/man SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc man SOURCEDIR=$(abs_srcdir)/fortran/doc/gfortran BUILDDIR=$(objdir)/doc/gfortran/man\n \n fortran.man: $(F95_MANFILES)\n \n@@ -183,22 +183,22 @@ check_gfortran_parallelize = 10000\n selftest-fortran:\n \n doc/fortran/pdf/latex/gfortran.pdf: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_srcdir)/fortran/doc/gfortran BUILDDIR=$(objdir)/doc/fortran/pdf SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_srcdir)/fortran/doc/gfortran BUILDDIR=$(objdir)/doc/fortran/pdf\n \n doc/fortran/html/html/index.html: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_srcdir)/fortran/doc/gfortran BUILDDIR=$(objdir)/doc/fortran/html SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_srcdir)/fortran/doc/gfortran BUILDDIR=$(objdir)/doc/fortran/html\n \n # GFORTRAN internals documentation.\n doc/gfc-internals/info/texinfo/gfc-internals.info: $(SPHINX_FILES)\n-\t+ if [ x$(HAS_SPHINX_BUILD) = xhas-sphinx-build ]; then \\\n-\t  make -C $(srcdir)/../doc info SOURCEDIR=$(abs_srcdir)/fortran/doc/gfc-internals BUILDDIR=$(objdir)/doc/gfc-internals/info SPHINXBUILD=$(SPHINX_BUILD); \\\n+\t+ if [ x$(SPHINX_BUILD) = xsphinx-build ]; then \\\n+\t  make -C $(srcdir)/../doc info SOURCEDIR=$(abs_srcdir)/fortran/doc/gfc-internals BUILDDIR=$(objdir)/doc/gfc-internals/info; \\\n \telse true; fi\n \n doc/gfc-internals/pdf/latex/gfc-internals.pdf: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_srcdir)/fortran/doc/gfc-internals BUILDDIR=$(objdir)/doc/gfc-internals/pdf SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_srcdir)/fortran/doc/gfc-internals BUILDDIR=$(objdir)/doc/gfc-internals/pdf\n \n doc/gfc-internals/html/html/index.html: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_srcdir)/fortran/doc/gfc-internals BUILDDIR=$(objdir)/doc/gfc-internals/html SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_srcdir)/fortran/doc/gfc-internals BUILDDIR=$(objdir)/doc/gfc-internals/html\n \n # Create or recreate the gfortran private include file directory.\n install-finclude-dir: installdirs"}, {"sha": "e5de16f858084d129932d9f9edd949d4a0de54fe", "filename": "gcc/go/Make-lang.in", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/gcc%2Fgo%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/gcc%2Fgo%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FMake-lang.in?ref=b779e6bf0b7cf03a96bc68a31be7d39ca383f645", "patch": "@@ -89,15 +89,15 @@ go1$(exeext): $(GO_OBJS) attribs.o $(BACKEND) $(LIBDEPS) $(go.prev)\n # Documentation.\n \n doc/gccgo/info/texinfo/gccgo.info: $(SPHINX_FILES)\n-\t+ if [ x$(HAS_SPHINX_BUILD) = xhas-sphinx-build ]; then \\\n-\t  make -C $(srcdir)/../doc info SOURCEDIR=$(abs_srcdir)/go/doc/ BUILDDIR=$(objdir)/doc/gccgo/info SPHINXBUILD=$(SPHINX_BUILD); \\\n+\t+ if [ x$(SPHINX_BUILD) = xsphinx-build ]; then \\\n+\t  make -C $(srcdir)/../doc info SOURCEDIR=$(abs_srcdir)/go/doc/ BUILDDIR=$(objdir)/doc/gccgo/info; \\\n \telse true; fi\n \n doc/gccgo/pdf/latex/gccgo.pdf: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_srcdir)/go/doc/ BUILDDIR=$(objdir)/doc/gccgo/pdf SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_srcdir)/go/doc/ BUILDDIR=$(objdir)/doc/gccgo/pdf\n \n doc/gccgo/html/html/index.html: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_srcdir)/go/doc/ BUILDDIR=$(objdir)/doc/gccgo/html SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_srcdir)/go/doc/ BUILDDIR=$(objdir)/doc/gccgo/html\n \n # Build hooks.\n \n@@ -126,7 +126,7 @@ go.srcman: doc/gccgo/man/man/gccgo.1\n \t-cp -p $^ $(srcdir)/doc\n \n doc/gccgo/man/man/gccgo.1: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc man SOURCEDIR=$(abs_srcdir)/go/doc BUILDDIR=$(objdir)/doc/gccgo/man SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc man SOURCEDIR=$(abs_srcdir)/go/doc BUILDDIR=$(objdir)/doc/gccgo/man\n \n lang_checks += check-go\n lang_checks_parallelized += check-go"}, {"sha": "a9aee905f2c90eb7bcc243c5e8b03582b089edb0", "filename": "gcc/jit/Make-lang.in", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/gcc%2Fjit%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/gcc%2Fjit%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2FMake-lang.in?ref=b779e6bf0b7cf03a96bc68a31be7d39ca383f645", "patch": "@@ -244,8 +244,8 @@ jit.install-pdf: jit.texinfo.install-pdf\n jit.info: doc/libgccjit/info/texinfo/libgccjit.info\n \n doc/libgccjit/info/texinfo/libgccjit.info: $(SPHINX_FILES)\n-\t+ if [ x$(HAS_SPHINX_BUILD) = xhas-sphinx-build ]; then \\\n-\t  make -C $(srcdir)/../doc info SOURCEDIR=$(abs_srcdir)/jit/doc/ BUILDDIR=$(objdir)/doc/libgccjit/info SPHINXBUILD=$(SPHINX_BUILD); \\\n+\t+ if [ x$(SPHINX_BUILD) = xsphinx-build ]; then \\\n+\t  make -C $(srcdir)/../doc info SOURCEDIR=$(abs_srcdir)/jit/doc/ BUILDDIR=$(objdir)/doc/libgccjit/info; \\\n \telse true; fi\n \n jit.install-info: $(DESTDIR)$(infodir)/libgccjit.info\n@@ -255,7 +255,7 @@ $(DESTDIR)$(infodir)/libgccjit.info: doc/libgccjit/info/texinfo/libgccjit.info i\n \t-$(INSTALL_DATA) $< $@\n \n doc/libgccjit/html/html/index.html: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_srcdir)/jit/doc/ BUILDDIR=$(objdir)/doc/libgccjit/html SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_srcdir)/jit/doc/ BUILDDIR=$(objdir)/doc/libgccjit/html\n \n jit.texinfo.install-html: doc/libgccjit/html/html/index.html\n \t@$(NORMAL_INSTALL)\n@@ -276,7 +276,7 @@ jit.texinfo.install-html: doc/libgccjit/html/html/index.html\n \n \n doc/libgccjit/pdf/latex/libgccjit.pdf: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_srcdir)/jit/doc/ BUILDDIR=$(objdir)/doc/libgccjit/pdf SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_srcdir)/jit/doc/ BUILDDIR=$(objdir)/doc/libgccjit/pdf\n \n jit.texinfo.install-pdf: doc/libgccjit.pdf\n \t@$(NORMAL_INSTALL)\n@@ -295,7 +295,7 @@ SPHINX_BUILD_DIR=jit/sphinx-build\n jit.sphinx.html:\n \t$(mkinstalldirs) $(SPHINX_BUILD_DIR)\n \t(cd $(srcdir)/jit/docs && \\\n-\t  make html BUILDDIR=$(PWD)/$(SPHINX_BUILD_DIR) ) SPHINXBUILD=$(SPHINX_BUILD)\n+\t  make html BUILDDIR=$(PWD)/$(SPHINX_BUILD_DIR) )\n \n jit_htmldir=$(htmldir)/jit\n \n@@ -316,7 +316,7 @@ jit.sphinx.pdf: $(SPHINX_BUILD_DIR)/latex/libgccjit.pdf\n $(SPHINX_BUILD_DIR)/latex/libgccjit.pdf:\n \t$(mkinstalldirs) $(SPHINX_BUILD_DIR)\n \t(cd $(srcdir)/jit/docs && \\\n-\t  make latexpdf BUILDDIR=$(PWD)/$(SPHINX_BUILD_DIR) ) SPHINXBUILD=$(SPHINX_BUILD)\n+\t  make latexpdf BUILDDIR=$(PWD)/$(SPHINX_BUILD_DIR) )\n \n jit.sphinx.install-pdf: $(SPHINX_BUILD_DIR)/latex/libgccjit.pdf\n \t@$(NORMAL_INSTALL)\n@@ -336,7 +336,7 @@ jit.tags:\n jit.man: doc/libgccjit/man/man/libgccjit.1\n \n doc/libgccjit/man/man/libgccjit.1: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc man SOURCEDIR=$(abs_srcdir)/jit/doc/ BUILDDIR=$(objdir)/doc/libgccjit/man SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc man SOURCEDIR=$(abs_srcdir)/jit/doc/ BUILDDIR=$(objdir)/doc/libgccjit/man\n \n jit.srcman:\n "}, {"sha": "14849a061cccafeb6ad5c5a679b1e261ec499b6a", "filename": "libgomp/Makefile.in", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/libgomp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/libgomp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FMakefile.in?ref=b779e6bf0b7cf03a96bc68a31be7d39ca383f645", "patch": "@@ -400,7 +400,6 @@ SECTION_LDFLAGS = @SECTION_LDFLAGS@\n SED = @SED@\n SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n-SPHINX_BUILD = @SPHINX_BUILD@\n STRIP = @STRIP@\n VERSION = @VERSION@\n XCFLAGS = @XCFLAGS@\n@@ -794,10 +793,10 @@ distclean-libtool:\n \t-rm -f libtool config.lt\n \n doc/pdf/latex/libgomp.pdf: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_srcdir)/doc BUILDDIR=$(abs_doc_builddir)/pdf SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_srcdir)/doc BUILDDIR=$(abs_doc_builddir)/pdf\n \n doc/html/html/index.html: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_srcdir)/doc BUILDDIR=$(abs_doc_builddir)/html SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_srcdir)/doc BUILDDIR=$(abs_doc_builddir)/html\n \n uninstall-info-am:\n \t@$(PRE_UNINSTALL)\n@@ -1304,7 +1303,7 @@ stamp-geninsrc: doc/info/texinfo/libgomp.info\n \t@touch $@\n \n doc/info/texinfo/libgomp.info: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc info SOURCEDIR=$(abs_srcdir)/doc BUILDDIR=$(abs_doc_builddir)/info SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc info SOURCEDIR=$(abs_srcdir)/doc BUILDDIR=$(abs_doc_builddir)/info\n \n # target overrides\n -include $(tmake_file)"}, {"sha": "45a769eb10a4294be62a872a844c021b419513a9", "filename": "libgomp/configure", "status": "modified", "additions": 2, "deletions": 54, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/libgomp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/libgomp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure?ref=b779e6bf0b7cf03a96bc68a31be7d39ca383f645", "patch": "@@ -635,9 +635,6 @@ am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n get_gcc_base_ver\n-HAS_SPHINX_BUILD\n-SPHINX_BUILD\n-CONFIGURE_SPHINX_BUILD\n OMP_DEPEND_KIND\n OMP_NEST_LOCK_25_KIND\n OMP_LOCK_25_KIND\n@@ -829,7 +826,6 @@ enable_linux_futex\n enable_tls\n enable_symvers\n enable_cet\n-with_sphinx_build\n with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n@@ -1498,7 +1494,6 @@ Optional Packages:\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n-  --with-sphinx-build=    Use sphinx-build from a given path\n   --with-gcc-major-version-only\n                           use only GCC major number in filesystem paths\n \n@@ -11423,7 +11418,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11426 \"configure\"\n+#line 11421 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11529,7 +11524,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11532 \"configure\"\n+#line 11527 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -16877,53 +16872,6 @@ fi\n \n CFLAGS=\"$save_CFLAGS\"\n \n-\n-# Check whether --with-sphinx-build was given.\n-if test \"${with_sphinx_build+set}\" = set; then :\n-  withval=$with_sphinx_build; CONFIGURE_SPHINX_BUILD=$withval\n-else\n-  CONFIGURE_SPHINX_BUILD=\n-\n-fi\n-\n-\n-\n-# See if sphinx-build has been installed and is modern enough\n-# that we can use it.\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sphinx-build\" >&5\n-$as_echo_n \"checking for sphinx-build... \" >&6; }\n-sphinx=sphinx-build\n-if test x${CONFIGURE_SPHINX_BUILD} != x ; then\n-  sphinx=${CONFIGURE_SPHINX_BUILD}\n-fi\n-\n-tempdir=build.$$\n-source=source.$$\n-mkdir $source\n-grep 'needs_sphinx =' ${srcdir}/../doc/baseconf.py > $source/conf.py\n-touch $source/index.rst\n-if ${sphinx} $source $tempdir >/dev/null 2>&1; then\n-  SPHINX_BUILD=${sphinx}\n-  HAS_SPHINX_BUILD=has-sphinx-build\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n-$as_echo \"yes\" >&6; }\n-else\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING:\n-  *** sphinx-build is missing or too old.\n-  *** Info and man pages documentation will not be built.\" >&5\n-$as_echo \"$as_me: WARNING:\n-  *** sphinx-build is missing or too old.\n-  *** Info and man pages documentation will not be built.\" >&2;}\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n-$as_echo \"no\" >&6; }\n-  SPHINX_BUILD=\n-  HAS_SPHINX_BUILD=\n-fi\n-rm -rf $tempdir\n-rm -rf $source\n-\n-\n-\n # Determine what GCC version number to use in filesystem paths.\n \n   get_gcc_base_ver=\"cat\""}, {"sha": "a9b1f3973f7b64b8a3e7ba2e2b4abe4f62f35bcf", "filename": "libgomp/configure.ac", "status": "modified", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/libgomp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/libgomp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure.ac?ref=b779e6bf0b7cf03a96bc68a31be7d39ca383f645", "patch": "@@ -469,44 +469,6 @@ AC_SUBST(OMP_NEST_LOCK_25_KIND)\n AC_SUBST(OMP_DEPEND_KIND)\n CFLAGS=\"$save_CFLAGS\"\n \n-AC_ARG_WITH(sphinx-build,\n-  [AS_HELP_STRING([--with-sphinx-build=],\n-                  [Use sphinx-build from a given path])],\n-  [CONFIGURE_SPHINX_BUILD=$withval],\n-  [CONFIGURE_SPHINX_BUILD=]\n-)\n-AC_SUBST(CONFIGURE_SPHINX_BUILD)\n-\n-# See if sphinx-build has been installed and is modern enough\n-# that we can use it.\n-AC_MSG_CHECKING([for sphinx-build])\n-sphinx=sphinx-build\n-if test x${CONFIGURE_SPHINX_BUILD} != x ; then\n-  sphinx=${CONFIGURE_SPHINX_BUILD}\n-fi\n-\n-tempdir=build.$$\n-source=source.$$\n-mkdir $source\n-grep 'needs_sphinx =' ${srcdir}/../doc/baseconf.py > $source/conf.py\n-touch $source/index.rst\n-if ${sphinx} $source $tempdir >/dev/null 2>&1; then\n-  SPHINX_BUILD=${sphinx}\n-  HAS_SPHINX_BUILD=has-sphinx-build\n-  AC_MSG_RESULT(yes)\n-else\n-  AC_MSG_WARN([\n-  *** sphinx-build is missing or too old.\n-  *** Info and man pages documentation will not be built.])\n-  AC_MSG_RESULT(no)\n-  SPHINX_BUILD=\n-  HAS_SPHINX_BUILD=\n-fi\n-rm -rf $tempdir\n-rm -rf $source\n-AC_SUBST(SPHINX_BUILD)\n-AC_SUBST(HAS_SPHINX_BUILD)\n-\n # Determine what GCC version number to use in filesystem paths.\n GCC_BASE_VER\n "}, {"sha": "dfd5f757ab5354681266f86de8c61222058837a6", "filename": "libiberty/Makefile.in", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/libiberty%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/libiberty%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FMakefile.in?ref=b779e6bf0b7cf03a96bc68a31be7d39ca383f645", "patch": "@@ -73,10 +73,6 @@ TESTLIB = ./testlib.a\n \n LIBOBJS = @LIBOBJS@\n \n-# Control whether manpages generated by sphinx-build can be rebuilt.\n-SPHINX_BUILD = @SPHINX_BUILD@\n-HAS_SPHINX_BUILD = @HAS_SPHINX_BUILD@\n-\n # A configuration can specify extra .o files that should be included,\n # even if they are in libc. (Perhaps the libc version is buggy.)\n EXTRA_OFILES = \n@@ -357,13 +353,13 @@ SPHINX_CONFIG_FILES:=$(srcdir)/doc/conf.py $(srcdir)/../doc/baseconf.py\n SPHINX_FILES:=$(RST_FILES) $(SPHINX_CONFIG_FILES)\n \n doc/texinfo/libiberty.info: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc info SOURCEDIR=$(abs_docdir) BUILDDIR=$(abs_doc_builddir)/info SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc info SOURCEDIR=$(abs_docdir) BUILDDIR=$(abs_doc_builddir)/info\n \n doc/pdf/latex/libiberty.pdf: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_docdir) BUILDDIR=$(abs_doc_builddir)/pdf SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_docdir) BUILDDIR=$(abs_doc_builddir)/pdf\n \n doc/html/html/index.html: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_docdir) BUILDDIR=$(abs_doc_builddir)/html SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_docdir) BUILDDIR=$(abs_doc_builddir)/html\n \n @MAINT@$(srcdir)/functions.texi : stamp-functions\n @MAINT@\t@true"}, {"sha": "860f981fa18354dfec7d23461079e9ebb8d388a4", "filename": "libiberty/configure", "status": "modified", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=b779e6bf0b7cf03a96bc68a31be7d39ca383f645", "patch": "@@ -663,9 +663,6 @@ ETAGS\n NOTMAINT\n MAINT\n libiberty_topdir\n-HAS_SPHINX_BUILD\n-SPHINX_BUILD\n-CONFIGURE_SPHINX_BUILD\n target_alias\n host_alias\n build_alias\n@@ -711,7 +708,6 @@ with_target_subdir\n with_build_subdir\n with_cross_host\n with_newlib\n-with_sphinx_build\n enable_maintainer_mode\n enable_multilib\n enable_install_libiberty\n@@ -1353,7 +1349,6 @@ Optional Packages:\n   --with-build-subdir=SUBDIR       Configuring in a subdirectory for build\n   --with-cross-host=HOST           Configuring with a cross compiler\n   --with-newlib                    Configuring with newlib\n-  --with-sphinx-build=    Use sphinx-build from a given path\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -2496,53 +2491,6 @@ if test \"${with_newlib+set}\" = set; then :\n fi\n \n \n-\n-# Check whether --with-sphinx-build was given.\n-if test \"${with_sphinx_build+set}\" = set; then :\n-  withval=$with_sphinx_build; CONFIGURE_SPHINX_BUILD=$withval\n-else\n-  CONFIGURE_SPHINX_BUILD=\n-\n-fi\n-\n-\n-\n-# See if sphinx-build has been installed and is modern enough\n-# that we can use it.\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sphinx-build\" >&5\n-$as_echo_n \"checking for sphinx-build... \" >&6; }\n-sphinx=sphinx-build\n-if test x${CONFIGURE_SPHINX_BUILD} != x ; then\n-  sphinx=${CONFIGURE_SPHINX_BUILD}\n-fi\n-\n-tempdir=build.$$\n-source=source.$$\n-mkdir $source\n-grep 'needs_sphinx =' ${srcdir}/../doc/baseconf.py > $source/conf.py\n-touch $source/index.rst\n-if ${sphinx} $source $tempdir >/dev/null 2>&1; then\n-  SPHINX_BUILD=${sphinx}\n-  HAS_SPHINX_BUILD=has-sphinx-build\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n-$as_echo \"yes\" >&6; }\n-else\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING:\n-  *** sphinx-build is missing or too old.\n-  *** Info and man pages documentation will not be built.\" >&5\n-$as_echo \"$as_me: WARNING:\n-  *** sphinx-build is missing or too old.\n-  *** Info and man pages documentation will not be built.\" >&2;}\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n-$as_echo \"no\" >&6; }\n-  SPHINX_BUILD=\n-  HAS_SPHINX_BUILD=\n-fi\n-rm -rf $tempdir\n-rm -rf $source\n-\n-\n-\n if test \"${srcdir}\" = \".\"; then\n   if test -n \"${with_build_subdir}\"; then\n     libiberty_topdir=\"${srcdir}/../..\""}, {"sha": "28d996f9cf7b7c84247a81b0fbcb3a1ae6adcb9e", "filename": "libiberty/configure.ac", "status": "modified", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/libiberty%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/libiberty%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.ac?ref=b779e6bf0b7cf03a96bc68a31be7d39ca383f645", "patch": "@@ -20,44 +20,6 @@ AC_ARG_WITH(cross-host,\n AC_ARG_WITH(newlib,\n [  --with-newlib                    Configuring with newlib])\n \n-AC_ARG_WITH(sphinx-build,\n-  [AS_HELP_STRING([--with-sphinx-build=],\n-                  [Use sphinx-build from a given path])],\n-  [CONFIGURE_SPHINX_BUILD=$withval],\n-  [CONFIGURE_SPHINX_BUILD=]\n-)\n-AC_SUBST(CONFIGURE_SPHINX_BUILD)\n-\n-# See if sphinx-build has been installed and is modern enough\n-# that we can use it.\n-AC_MSG_CHECKING([for sphinx-build])\n-sphinx=sphinx-build\n-if test x${CONFIGURE_SPHINX_BUILD} != x ; then\n-  sphinx=${CONFIGURE_SPHINX_BUILD}\n-fi\n-\n-tempdir=build.$$\n-source=source.$$\n-mkdir $source\n-grep 'needs_sphinx =' ${srcdir}/../doc/baseconf.py > $source/conf.py\n-touch $source/index.rst\n-if ${sphinx} $source $tempdir >/dev/null 2>&1; then\n-  SPHINX_BUILD=${sphinx}\n-  HAS_SPHINX_BUILD=has-sphinx-build\n-  AC_MSG_RESULT(yes)\n-else\n-  AC_MSG_WARN([\n-  *** sphinx-build is missing or too old.\n-  *** Info and man pages documentation will not be built.])\n-  AC_MSG_RESULT(no)\n-  SPHINX_BUILD=\n-  HAS_SPHINX_BUILD=\n-fi\n-rm -rf $tempdir\n-rm -rf $source\n-AC_SUBST(SPHINX_BUILD)\n-AC_SUBST(HAS_SPHINX_BUILD)\n-\n if test \"${srcdir}\" = \".\"; then\n   if test -n \"${with_build_subdir}\"; then\n     libiberty_topdir=\"${srcdir}/../..\""}, {"sha": "d2f34b05fa6b36bac6ce3dd2b2d9321f5b380e3e", "filename": "libitm/Makefile.in", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/libitm%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/libitm%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FMakefile.in?ref=b779e6bf0b7cf03a96bc68a31be7d39ca383f645", "patch": "@@ -346,7 +346,6 @@ SECTION_LDFLAGS = @SECTION_LDFLAGS@\n SED = @SED@\n SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n-SPHINX_BUILD = @SPHINX_BUILD@\n STRIP = @STRIP@\n VERSION = @VERSION@\n XCFLAGS = @XCFLAGS@\n@@ -643,10 +642,10 @@ distclean-libtool:\n \t-rm -f libtool config.lt\n \n doc/pdf/latex/libitm.pdf: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_srcdir)/doc BUILDDIR=$(abs_doc_builddir)/pdf SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_srcdir)/doc BUILDDIR=$(abs_doc_builddir)/pdf\n \n doc/html/html/index.html: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_srcdir)/doc BUILDDIR=$(abs_doc_builddir)/html SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_srcdir)/doc BUILDDIR=$(abs_doc_builddir)/html\n \n uninstall-html-am:\n \t@$(NORMAL_UNINSTALL)\n@@ -1121,7 +1120,7 @@ stamp-geninsrc: doc/info/texinfo/libitm.info\n \t@touch $@\n \n doc/info/texinfo/libitm.info: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc info SOURCEDIR=$(abs_srcdir)/doc BUILDDIR=$(abs_doc_builddir)/info SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc info SOURCEDIR=$(abs_srcdir)/doc BUILDDIR=$(abs_doc_builddir)/info\n \n # GNU Make needs to see an explicit $(MAKE) variable in the command it\n # runs to enable its job server during parallel builds.  Hence the"}, {"sha": "6230c04dd24abc4bb384a8d4b21b13053d595f43", "filename": "libitm/configure", "status": "modified", "additions": 2, "deletions": 54, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/libitm%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/libitm%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure?ref=b779e6bf0b7cf03a96bc68a31be7d39ca383f645", "patch": "@@ -633,9 +633,6 @@ am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n get_gcc_base_ver\n-HAS_SPHINX_BUILD\n-SPHINX_BUILD\n-CONFIGURE_SPHINX_BUILD\n ARCH_FUTEX_FALSE\n ARCH_FUTEX_TRUE\n ARCH_X86_AVX_FALSE\n@@ -819,7 +816,6 @@ enable_tls\n enable_symvers\n enable_werror\n enable_cet\n-with_sphinx_build\n with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n@@ -1485,7 +1481,6 @@ Optional Packages:\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n-  --with-sphinx-build=    Use sphinx-build from a given path\n   --with-gcc-major-version-only\n                           use only GCC major number in filesystem paths\n \n@@ -12087,7 +12082,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12090 \"configure\"\n+#line 12085 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12193,7 +12188,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12196 \"configure\"\n+#line 12191 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18055,53 +18050,6 @@ else\n fi\n \n \n-\n-# Check whether --with-sphinx-build was given.\n-if test \"${with_sphinx_build+set}\" = set; then :\n-  withval=$with_sphinx_build; CONFIGURE_SPHINX_BUILD=$withval\n-else\n-  CONFIGURE_SPHINX_BUILD=\n-\n-fi\n-\n-\n-\n-# See if sphinx-build has been installed and is modern enough\n-# that we can use it.\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sphinx-build\" >&5\n-$as_echo_n \"checking for sphinx-build... \" >&6; }\n-sphinx=sphinx-build\n-if test x${CONFIGURE_SPHINX_BUILD} != x ; then\n-  sphinx=${CONFIGURE_SPHINX_BUILD}\n-fi\n-\n-tempdir=build.$$\n-source=source.$$\n-mkdir $source\n-grep 'needs_sphinx =' ${srcdir}/../doc/baseconf.py > $source/conf.py\n-touch $source/index.rst\n-if ${sphinx} $source $tempdir >/dev/null 2>&1; then\n-  SPHINX_BUILD=${sphinx}\n-  HAS_SPHINX_BUILD=has-sphinx-build\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n-$as_echo \"yes\" >&6; }\n-else\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING:\n-  *** sphinx-build is missing or too old.\n-  *** Info and man pages documentation will not be built.\" >&5\n-$as_echo \"$as_me: WARNING:\n-  *** sphinx-build is missing or too old.\n-  *** Info and man pages documentation will not be built.\" >&2;}\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n-$as_echo \"no\" >&6; }\n-  SPHINX_BUILD=\n-  HAS_SPHINX_BUILD=\n-fi\n-rm -rf $tempdir\n-rm -rf $source\n-\n-\n-\n # Determine what GCC version number to use in filesystem paths.\n \n   get_gcc_base_ver=\"cat\""}, {"sha": "78a682376d943753f4cfb23ef7328467a5ed1ba1", "filename": "libitm/configure.ac", "status": "modified", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/libitm%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/libitm%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure.ac?ref=b779e6bf0b7cf03a96bc68a31be7d39ca383f645", "patch": "@@ -301,44 +301,6 @@ AM_CONDITIONAL([ARCH_X86], [test \"$ARCH\" = x86])\n AM_CONDITIONAL([ARCH_X86_AVX], [test \"$libitm_cv_as_avx\" = yes])\n AM_CONDITIONAL([ARCH_FUTEX], [test $enable_linux_futex = yes])\n \n-AC_ARG_WITH(sphinx-build,\n-  [AS_HELP_STRING([--with-sphinx-build=],\n-                  [Use sphinx-build from a given path])],\n-  [CONFIGURE_SPHINX_BUILD=$withval],\n-  [CONFIGURE_SPHINX_BUILD=]\n-)\n-AC_SUBST(CONFIGURE_SPHINX_BUILD)\n-\n-# See if sphinx-build has been installed and is modern enough\n-# that we can use it.\n-AC_MSG_CHECKING([for sphinx-build])\n-sphinx=sphinx-build\n-if test x${CONFIGURE_SPHINX_BUILD} != x ; then\n-  sphinx=${CONFIGURE_SPHINX_BUILD}\n-fi\n-\n-tempdir=build.$$\n-source=source.$$\n-mkdir $source\n-grep 'needs_sphinx =' ${srcdir}/../doc/baseconf.py > $source/conf.py\n-touch $source/index.rst\n-if ${sphinx} $source $tempdir >/dev/null 2>&1; then\n-  SPHINX_BUILD=${sphinx}\n-  HAS_SPHINX_BUILD=has-sphinx-build\n-  AC_MSG_RESULT(yes)\n-else\n-  AC_MSG_WARN([\n-  *** sphinx-build is missing or too old.\n-  *** Info and man pages documentation will not be built.])\n-  AC_MSG_RESULT(no)\n-  SPHINX_BUILD=\n-  HAS_SPHINX_BUILD=\n-fi\n-rm -rf $tempdir\n-rm -rf $source\n-AC_SUBST(SPHINX_BUILD)\n-AC_SUBST(HAS_SPHINX_BUILD)\n-\n # Determine what GCC version number to use in filesystem paths.\n GCC_BASE_VER\n "}, {"sha": "259ef2a5f4b3ab9b3206ac0c02da5f421cbb4753", "filename": "libquadmath/Makefile.in", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/libquadmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/libquadmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2FMakefile.in?ref=b779e6bf0b7cf03a96bc68a31be7d39ca383f645", "patch": "@@ -346,7 +346,6 @@ REPORT_BUGS_TO = @REPORT_BUGS_TO@\n SED = @SED@\n SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n-SPHINX_BUILD = @SPHINX_BUILD@\n STRIP = @STRIP@\n VERSION = @VERSION@\n XCFLAGS = @XCFLAGS@\n@@ -951,10 +950,10 @@ distclean-libtool:\n \t-rm -f libtool config.lt\n \n doc/pdf/latex/libquadmath.pdf: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_srcdir)/doc BUILDDIR=$(abs_doc_builddir)/pdf SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc latexpdf SOURCEDIR=$(abs_srcdir)/doc BUILDDIR=$(abs_doc_builddir)/pdf\n \n doc/html/html/index.html: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_srcdir)/doc BUILDDIR=$(abs_doc_builddir)/html SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc html SOURCEDIR=$(abs_srcdir)/doc BUILDDIR=$(abs_doc_builddir)/html\n \n uninstall-html-am:\n \t@$(NORMAL_UNINSTALL)\n@@ -1374,7 +1373,7 @@ SPHINX_FILES:=$(RST_FILES) $(SPHINX_CONFIG_FILES)\n export BUGURL=$(REPORT_BUGS_TO)\n \n doc/info/texinfo/libquadmath.info: $(SPHINX_FILES)\n-\t+ make -C $(srcdir)/../doc info SOURCEDIR=$(abs_srcdir)/doc BUILDDIR=$(abs_doc_builddir)/info SPHINXBUILD=$(SPHINX_BUILD)\n+\t+ make -C $(srcdir)/../doc info SOURCEDIR=$(abs_srcdir)/doc BUILDDIR=$(abs_doc_builddir)/info\n \n # GNU Make needs to see an explicit $(MAKE) variable in the command it\n # runs to enable its job server during parallel builds.  Hence the"}, {"sha": "958fb876c5b17d8cd0ef8403b0ea45e1e112d3fe", "filename": "libquadmath/configure", "status": "modified", "additions": 3, "deletions": 55, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/libquadmath%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/libquadmath%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Fconfigure?ref=b779e6bf0b7cf03a96bc68a31be7d39ca383f645", "patch": "@@ -633,9 +633,6 @@ am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n get_gcc_base_ver\n-HAS_SPHINX_BUILD\n-SPHINX_BUILD\n-CONFIGURE_SPHINX_BUILD\n GENINSRC_FALSE\n GENINSRC_TRUE\n XCFLAGS\n@@ -793,7 +790,6 @@ with_toolexeclibdir\n enable_symvers\n enable_cet\n enable_generated_files_in_srcdir\n-with_sphinx_build\n with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n@@ -1459,7 +1455,6 @@ Optional Packages:\n   --with-toolexeclibdir=DIR\n                           install libraries built with a cross compiler within\n                           DIR\n-  --with-sphinx-build=    Use sphinx-build from a given path\n   --with-gcc-major-version-only\n                           use only GCC major number in filesystem paths\n \n@@ -4698,7 +4693,7 @@ fi\n     REPORT_BUGS_TEXI=\n     ;;\n   *)\n-    REPORT_BUGS_TO=\"$BUGURL\"\n+    REPORT_BUGS_TO=\"<$BUGURL>\"\n     REPORT_BUGS_TEXI=@uref{`echo \"$BUGURL\" | sed 's/@/@@/g'`}\n     ;;\n   esac;\n@@ -10835,7 +10830,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10838 \"configure\"\n+#line 10833 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10941,7 +10936,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10944 \"configure\"\n+#line 10939 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13272,53 +13267,6 @@ else\n fi\n \n \n-\n-# Check whether --with-sphinx-build was given.\n-if test \"${with_sphinx_build+set}\" = set; then :\n-  withval=$with_sphinx_build; CONFIGURE_SPHINX_BUILD=$withval\n-else\n-  CONFIGURE_SPHINX_BUILD=\n-\n-fi\n-\n-\n-\n-# See if sphinx-build has been installed and is modern enough\n-# that we can use it.\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sphinx-build\" >&5\n-$as_echo_n \"checking for sphinx-build... \" >&6; }\n-sphinx=sphinx-build\n-if test x${CONFIGURE_SPHINX_BUILD} != x ; then\n-  sphinx=${CONFIGURE_SPHINX_BUILD}\n-fi\n-\n-tempdir=build.$$\n-source=source.$$\n-mkdir $source\n-grep 'needs_sphinx =' ${srcdir}/../doc/baseconf.py > $source/conf.py\n-touch $source/index.rst\n-if ${sphinx} $source $tempdir >/dev/null 2>&1; then\n-  SPHINX_BUILD=${sphinx}\n-  HAS_SPHINX_BUILD=has-sphinx-build\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n-$as_echo \"yes\" >&6; }\n-else\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING:\n-  *** sphinx-build is missing or too old.\n-  *** Info and man pages documentation will not be built.\" >&5\n-$as_echo \"$as_me: WARNING:\n-  *** sphinx-build is missing or too old.\n-  *** Info and man pages documentation will not be built.\" >&2;}\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n-$as_echo \"no\" >&6; }\n-  SPHINX_BUILD=\n-  HAS_SPHINX_BUILD=\n-fi\n-rm -rf $tempdir\n-rm -rf $source\n-\n-\n-\n # Determine what GCC version number to use in filesystem paths.\n \n   get_gcc_base_ver=\"cat\""}, {"sha": "eec4084a45f62226671197bd5c6949002a599fa2", "filename": "libquadmath/configure.ac", "status": "modified", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/libquadmath%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b779e6bf0b7cf03a96bc68a31be7d39ca383f645/libquadmath%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Fconfigure.ac?ref=b779e6bf0b7cf03a96bc68a31be7d39ca383f645", "patch": "@@ -394,44 +394,6 @@ AS_HELP_STRING([--enable-generated-files-in-srcdir],\n AC_MSG_RESULT($enable_generated_files_in_srcdir)\n AM_CONDITIONAL(GENINSRC, test \"$enable_generated_files_in_srcdir\" = yes)\n \n-AC_ARG_WITH(sphinx-build,\n-  [AS_HELP_STRING([--with-sphinx-build=],\n-                  [Use sphinx-build from a given path])],\n-  [CONFIGURE_SPHINX_BUILD=$withval],\n-  [CONFIGURE_SPHINX_BUILD=]\n-)\n-AC_SUBST(CONFIGURE_SPHINX_BUILD)\n-\n-# See if sphinx-build has been installed and is modern enough\n-# that we can use it.\n-AC_MSG_CHECKING([for sphinx-build])\n-sphinx=sphinx-build\n-if test x${CONFIGURE_SPHINX_BUILD} != x ; then\n-  sphinx=${CONFIGURE_SPHINX_BUILD}\n-fi\n-\n-tempdir=build.$$\n-source=source.$$\n-mkdir $source\n-grep 'needs_sphinx =' ${srcdir}/../doc/baseconf.py > $source/conf.py\n-touch $source/index.rst\n-if ${sphinx} $source $tempdir >/dev/null 2>&1; then\n-  SPHINX_BUILD=${sphinx}\n-  HAS_SPHINX_BUILD=has-sphinx-build\n-  AC_MSG_RESULT(yes)\n-else\n-  AC_MSG_WARN([\n-  *** sphinx-build is missing or too old.\n-  *** Info and man pages documentation will not be built.])\n-  AC_MSG_RESULT(no)\n-  SPHINX_BUILD=\n-  HAS_SPHINX_BUILD=\n-fi\n-rm -rf $tempdir\n-rm -rf $source\n-AC_SUBST(SPHINX_BUILD)\n-AC_SUBST(HAS_SPHINX_BUILD)\n-\n # Determine what GCC version number to use in filesystem paths.\n GCC_BASE_VER\n "}]}