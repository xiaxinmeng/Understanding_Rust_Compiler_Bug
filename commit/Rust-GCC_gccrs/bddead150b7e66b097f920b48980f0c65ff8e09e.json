{"sha": "bddead150b7e66b097f920b48980f0c65ff8e09e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRkZWFkMTUwYjdlNjZiMDk3ZjkyMGI0ODk4MGYwYzY1ZmY4ZTA5ZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-02-22T09:32:35Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-02-22T09:32:35Z"}, "message": "re PR middle-end/37448 (cannot compile big function)\n\n2016-02-22  Richard Biener  <rguenther@suse.de>\n\n\tPR ipa/37448\n\t* ipa-inline-transform.c (inline_call): When not updating\n\toverall summaries adjust self size by the growth estimate.\n\t* ipa-inline.c (inline_to_all_callers_1): Add to the callers\n\thash-set, do not update overall summaries here.  Renamed from ...\n\t(inline_to_all_callers): ... this which is now wrapping the\n\tabove and performing delayed overall summary update.\n\t(early_inline_small_functions): Delay updating of the overall\n\tsummary.\n\nFrom-SVN: r233598", "tree": {"sha": "5ac6f9056926a53719d7f72d459009fd358327cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ac6f9056926a53719d7f72d459009fd358327cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bddead150b7e66b097f920b48980f0c65ff8e09e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bddead150b7e66b097f920b48980f0c65ff8e09e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bddead150b7e66b097f920b48980f0c65ff8e09e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bddead150b7e66b097f920b48980f0c65ff8e09e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f97374a73fbd90651c925386234329d65d59ce80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f97374a73fbd90651c925386234329d65d59ce80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f97374a73fbd90651c925386234329d65d59ce80"}], "stats": {"total": 54, "additions": 49, "deletions": 5}, "files": [{"sha": "b28ed8887f8cc16fedda689f4f29ff0b2dcd536f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bddead150b7e66b097f920b48980f0c65ff8e09e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bddead150b7e66b097f920b48980f0c65ff8e09e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bddead150b7e66b097f920b48980f0c65ff8e09e", "patch": "@@ -1,3 +1,15 @@\n+2016-02-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/37448\n+\t* ipa-inline-transform.c (inline_call): When not updating\n+\toverall summaries adjust self size by the growth estimate.\n+\t* ipa-inline.c (inline_to_all_callers_1): Add to the callers\n+\thash-set, do not update overall summaries here.  Renamed from ...\n+\t(inline_to_all_callers): ... this which is now wrapping the\n+\tabove and performing delayed overall summary update.\n+\t(early_inline_small_functions): Delay updating of the overall\n+\tsummary.\n+\n 2016-02-21  Markus Trippelsdorf  <markus@trippelsdorf.de>\n \n \t* tree-chkp.c (chkp_mark_invalid_bounds_walker): Initialize"}, {"sha": "5dc0b5af2875e9f6096e0e058484b0e83785c826", "filename": "gcc/ipa-inline-transform.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bddead150b7e66b097f920b48980f0c65ff8e09e/gcc%2Fipa-inline-transform.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bddead150b7e66b097f920b48980f0c65ff8e09e/gcc%2Fipa-inline-transform.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-transform.c?ref=bddead150b7e66b097f920b48980f0c65ff8e09e", "patch": "@@ -301,9 +301,11 @@ inline_call (struct cgraph_edge *e, bool update_original,\n   struct cgraph_node *callee = e->callee->ultimate_alias_target ();\n   bool new_edges_found = false;\n \n+  int estimated_growth = 0;\n+  if (! update_overall_summary)\n+    estimated_growth = estimate_edge_growth (e);\n   /* This is used only for assert bellow.  */\n #if 0\n-  int estimated_growth = estimate_edge_growth (e);\n   bool predicated = inline_edge_summary (e)->predicate != NULL;\n #endif\n \n@@ -373,7 +375,13 @@ inline_call (struct cgraph_edge *e, bool update_original,\n     new_edges_found = ipa_propagate_indirect_call_infos (curr, new_edges);\n   check_speculations (e->callee);\n   if (update_overall_summary)\n-   inline_update_overall_summary (to);\n+    inline_update_overall_summary (to);\n+  else\n+    /* Update self size by the estimate so overall function growth limits\n+       work for further inlining into this function.  Before inlining\n+       the function we inlined to again we expect the caller to update\n+       the overall summary.  */\n+    inline_summaries->get (to)->size += estimated_growth;\n   new_size = inline_summaries->get (to)->size;\n \n   if (callee->calls_comdat_local)"}, {"sha": "57a45883d8978e1b27c384dac426b1bc9a9399e9", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bddead150b7e66b097f920b48980f0c65ff8e09e/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bddead150b7e66b097f920b48980f0c65ff8e09e/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=bddead150b7e66b097f920b48980f0c65ff8e09e", "patch": "@@ -2163,7 +2163,8 @@ flatten_function (struct cgraph_node *node, bool early)\n    recursion.  */\n \n static bool\n-inline_to_all_callers (struct cgraph_node *node, void *data)\n+inline_to_all_callers_1 (struct cgraph_node *node, void *data,\n+\t\t\t hash_set<cgraph_node *> *callers)\n {\n   int *num_calls = (int *)data;\n   bool callee_removed = false;\n@@ -2193,7 +2194,10 @@ inline_to_all_callers (struct cgraph_node *node, void *data)\n \t\t   inline_summaries->get (node->callers->caller)->size);\n \t}\n \n-      inline_call (node->callers, true, NULL, NULL, true, &callee_removed);\n+      /* Remember which callers we inlined to, delaying updating the\n+\t overall summary.  */\n+      callers->add (node->callers->caller);\n+      inline_call (node->callers, true, NULL, NULL, false, &callee_removed);\n       if (dump_file)\n \tfprintf (dump_file,\n \t\t \" Inlined into %s which now has %i size\\n\",\n@@ -2211,6 +2215,23 @@ inline_to_all_callers (struct cgraph_node *node, void *data)\n   return false;\n }\n \n+/* Wrapper around inline_to_all_callers_1 doing delayed overall summary\n+   update.  */\n+\n+static bool\n+inline_to_all_callers (struct cgraph_node *node, void *data)\n+{\n+  hash_set<cgraph_node *> callers;\n+  bool res = inline_to_all_callers_1 (node, data, &callers);\n+  /* Perform the delayed update of the overall summary of all callers\n+     processed.  This avoids quadratic behavior in the cases where\n+     we have a lot of calls to the same function.  */\n+  for (hash_set<cgraph_node *>::iterator i = callers.begin ();\n+       i != callers.end (); ++i)\n+    inline_update_overall_summary (*i);\n+  return res;\n+}\n+\n /* Output overall time estimate.  */\n static void\n dump_overall_stats (void)\n@@ -2590,10 +2611,13 @@ early_inline_small_functions (struct cgraph_node *node)\n \tfprintf (dump_file, \" Inlining %s into %s.\\n\",\n \t\t xstrdup_for_dump (callee->name ()),\n \t\t xstrdup_for_dump (e->caller->name ()));\n-      inline_call (e, true, NULL, NULL, true);\n+      inline_call (e, true, NULL, NULL, false);\n       inlined = true;\n     }\n \n+  if (inlined)\n+    inline_update_overall_summary (node);\n+\n   return inlined;\n }\n "}]}