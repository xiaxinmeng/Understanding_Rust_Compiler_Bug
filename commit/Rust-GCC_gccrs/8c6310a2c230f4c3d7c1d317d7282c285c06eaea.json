{"sha": "8c6310a2c230f4c3d7c1d317d7282c285c06eaea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM2MzEwYTJjMjMwZjRjM2Q3YzFkMzE3ZDcyODJjMjg1YzA2ZWFlYQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2018-08-01T13:20:22Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-08-01T13:20:22Z"}, "message": "[libgomp, nvptx] Add cuda-lib.def\n\n2018-08-01  Tom de Vries  <tdevries@suse.de>\n\n\t* plugin/cuda-lib.def: New file.  Factor out of ...\n\t* plugin/plugin-nvptx.c (CUDA_CALLS): ... here.\n\t(struct cuda_lib_s, init_cuda_lib): Include cuda-lib.def instead of\n\tusing CUDA_CALLS.\n\nFrom-SVN: r263208", "tree": {"sha": "11201003bb68107b8e6ae573d575228a49a4ade2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11201003bb68107b8e6ae573d575228a49a4ade2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c6310a2c230f4c3d7c1d317d7282c285c06eaea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c6310a2c230f4c3d7c1d317d7282c285c06eaea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c6310a2c230f4c3d7c1d317d7282c285c06eaea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c6310a2c230f4c3d7c1d317d7282c285c06eaea/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5ebbb72c205cff26072a2f381a3fe92e26ab8257", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ebbb72c205cff26072a2f381a3fe92e26ab8257", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ebbb72c205cff26072a2f381a3fe92e26ab8257"}], "stats": {"total": 104, "additions": 55, "deletions": 49}, "files": [{"sha": "5ac69e85a99e3032aa4779cb25d151dbae8bc738", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c6310a2c230f4c3d7c1d317d7282c285c06eaea/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c6310a2c230f4c3d7c1d317d7282c285c06eaea/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=8c6310a2c230f4c3d7c1d317d7282c285c06eaea", "patch": "@@ -1,3 +1,10 @@\n+2018-08-01  Tom de Vries  <tdevries@suse.de>\n+\n+\t* plugin/cuda-lib.def: New file.  Factor out of ...\n+\t* plugin/plugin-nvptx.c (CUDA_CALLS): ... here.\n+\t(struct cuda_lib_s, init_cuda_lib): Include cuda-lib.def instead of\n+\tusing CUDA_CALLS.\n+\n 2018-07-31  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \tRevert 'AsyncI/O patch committed'."}, {"sha": "be8e3b3ec4d6baf25a68cc2a532b3bd410856f8c", "filename": "libgomp/plugin/cuda-lib.def", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c6310a2c230f4c3d7c1d317d7282c285c06eaea/libgomp%2Fplugin%2Fcuda-lib.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c6310a2c230f4c3d7c1d317d7282c285c06eaea/libgomp%2Fplugin%2Fcuda-lib.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fcuda-lib.def?ref=8c6310a2c230f4c3d7c1d317d7282c285c06eaea", "patch": "@@ -0,0 +1,46 @@\n+CUDA_ONE_CALL (cuCtxCreate)\n+CUDA_ONE_CALL (cuCtxDestroy)\n+CUDA_ONE_CALL (cuCtxGetCurrent)\n+CUDA_ONE_CALL (cuCtxGetDevice)\n+CUDA_ONE_CALL (cuCtxPopCurrent)\n+CUDA_ONE_CALL (cuCtxPushCurrent)\n+CUDA_ONE_CALL (cuCtxSynchronize)\n+CUDA_ONE_CALL (cuDeviceGet)\n+CUDA_ONE_CALL (cuDeviceGetAttribute)\n+CUDA_ONE_CALL (cuDeviceGetCount)\n+CUDA_ONE_CALL (cuEventCreate)\n+CUDA_ONE_CALL (cuEventDestroy)\n+CUDA_ONE_CALL (cuEventElapsedTime)\n+CUDA_ONE_CALL (cuEventQuery)\n+CUDA_ONE_CALL (cuEventRecord)\n+CUDA_ONE_CALL (cuEventSynchronize)\n+CUDA_ONE_CALL (cuFuncGetAttribute)\n+CUDA_ONE_CALL (cuGetErrorString)\n+CUDA_ONE_CALL (cuInit)\n+CUDA_ONE_CALL (cuLaunchKernel)\n+CUDA_ONE_CALL (cuLinkAddData)\n+CUDA_ONE_CALL (cuLinkComplete)\n+CUDA_ONE_CALL (cuLinkCreate)\n+CUDA_ONE_CALL (cuLinkDestroy)\n+CUDA_ONE_CALL (cuMemAlloc)\n+CUDA_ONE_CALL (cuMemAllocHost)\n+CUDA_ONE_CALL (cuMemcpy)\n+CUDA_ONE_CALL (cuMemcpyDtoDAsync)\n+CUDA_ONE_CALL (cuMemcpyDtoH)\n+CUDA_ONE_CALL (cuMemcpyDtoHAsync)\n+CUDA_ONE_CALL (cuMemcpyHtoD)\n+CUDA_ONE_CALL (cuMemcpyHtoDAsync)\n+CUDA_ONE_CALL (cuMemFree)\n+CUDA_ONE_CALL (cuMemFreeHost)\n+CUDA_ONE_CALL (cuMemGetAddressRange)\n+CUDA_ONE_CALL (cuMemHostGetDevicePointer)\n+CUDA_ONE_CALL (cuModuleGetFunction)\n+CUDA_ONE_CALL (cuModuleGetGlobal)\n+CUDA_ONE_CALL (cuModuleLoad)\n+CUDA_ONE_CALL (cuModuleLoadData)\n+CUDA_ONE_CALL (cuModuleUnload)\n+CUDA_ONE_CALL (cuStreamCreate)\n+CUDA_ONE_CALL (cuStreamDestroy)\n+CUDA_ONE_CALL (cuStreamQuery)\n+CUDA_ONE_CALL (cuStreamSynchronize)\n+CUDA_ONE_CALL (cuStreamWaitEvent)"}, {"sha": "83176ce07a028a26f39adbc3759b9c9a92ccac2b", "filename": "libgomp/plugin/plugin-nvptx.c", "status": "modified", "additions": 2, "deletions": 49, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c6310a2c230f4c3d7c1d317d7282c285c06eaea/libgomp%2Fplugin%2Fplugin-nvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c6310a2c230f4c3d7c1d317d7282c285c06eaea/libgomp%2Fplugin%2Fplugin-nvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-nvptx.c?ref=8c6310a2c230f4c3d7c1d317d7282c285c06eaea", "patch": "@@ -52,57 +52,10 @@\n #if PLUGIN_NVPTX_DYNAMIC\n # include <dlfcn.h>\n \n-# define CUDA_CALLS \\\n-CUDA_ONE_CALL (cuCtxCreate)\t\t\\\n-CUDA_ONE_CALL (cuCtxDestroy)\t\t\\\n-CUDA_ONE_CALL (cuCtxGetCurrent)\t\t\\\n-CUDA_ONE_CALL (cuCtxGetDevice)\t\t\\\n-CUDA_ONE_CALL (cuCtxPopCurrent)\t\t\\\n-CUDA_ONE_CALL (cuCtxPushCurrent)\t\\\n-CUDA_ONE_CALL (cuCtxSynchronize)\t\\\n-CUDA_ONE_CALL (cuDeviceGet)\t\t\\\n-CUDA_ONE_CALL (cuDeviceGetAttribute)\t\\\n-CUDA_ONE_CALL (cuDeviceGetCount)\t\\\n-CUDA_ONE_CALL (cuEventCreate)\t\t\\\n-CUDA_ONE_CALL (cuEventDestroy)\t\t\\\n-CUDA_ONE_CALL (cuEventElapsedTime)\t\\\n-CUDA_ONE_CALL (cuEventQuery)\t\t\\\n-CUDA_ONE_CALL (cuEventRecord)\t\t\\\n-CUDA_ONE_CALL (cuEventSynchronize)\t\\\n-CUDA_ONE_CALL (cuFuncGetAttribute)\t\\\n-CUDA_ONE_CALL (cuGetErrorString)\t\\\n-CUDA_ONE_CALL (cuInit)\t\t\t\\\n-CUDA_ONE_CALL (cuLaunchKernel)\t\t\\\n-CUDA_ONE_CALL (cuLinkAddData)\t\t\\\n-CUDA_ONE_CALL (cuLinkComplete)\t\t\\\n-CUDA_ONE_CALL (cuLinkCreate)\t\t\\\n-CUDA_ONE_CALL (cuLinkDestroy)\t\t\\\n-CUDA_ONE_CALL (cuMemAlloc)\t\t\\\n-CUDA_ONE_CALL (cuMemAllocHost)\t\t\\\n-CUDA_ONE_CALL (cuMemcpy)\t\t\\\n-CUDA_ONE_CALL (cuMemcpyDtoDAsync)\t\\\n-CUDA_ONE_CALL (cuMemcpyDtoH)\t\t\\\n-CUDA_ONE_CALL (cuMemcpyDtoHAsync)\t\\\n-CUDA_ONE_CALL (cuMemcpyHtoD)\t\t\\\n-CUDA_ONE_CALL (cuMemcpyHtoDAsync)\t\\\n-CUDA_ONE_CALL (cuMemFree)\t\t\\\n-CUDA_ONE_CALL (cuMemFreeHost)\t\t\\\n-CUDA_ONE_CALL (cuMemGetAddressRange)\t\\\n-CUDA_ONE_CALL (cuMemHostGetDevicePointer)\\\n-CUDA_ONE_CALL (cuModuleGetFunction)\t\\\n-CUDA_ONE_CALL (cuModuleGetGlobal)\t\\\n-CUDA_ONE_CALL (cuModuleLoad)\t\t\\\n-CUDA_ONE_CALL (cuModuleLoadData)\t\\\n-CUDA_ONE_CALL (cuModuleUnload)\t\t\\\n-CUDA_ONE_CALL (cuStreamCreate)\t\t\\\n-CUDA_ONE_CALL (cuStreamDestroy)\t\t\\\n-CUDA_ONE_CALL (cuStreamQuery)\t\t\\\n-CUDA_ONE_CALL (cuStreamSynchronize)\t\\\n-CUDA_ONE_CALL (cuStreamWaitEvent)\n # define CUDA_ONE_CALL(call) \\\n   __typeof (call) *call;\n struct cuda_lib_s {\n-  CUDA_CALLS\n+#include \"cuda-lib.def\"\n } cuda_lib;\n \n /* -1 if init_cuda_lib has not been called yet, false\n@@ -127,7 +80,7 @@ init_cuda_lib (void)\n   cuda_lib.call = dlsym (h, #call);\t\\\n   if (cuda_lib.call == NULL)\t\t\\\n     return false;\n-  CUDA_CALLS\n+#include \"cuda-lib.def\"\n   cuda_lib_inited = true;\n   return true;\n }"}]}