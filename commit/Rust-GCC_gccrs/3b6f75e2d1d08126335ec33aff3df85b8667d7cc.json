{"sha": "3b6f75e2d1d08126335ec33aff3df85b8667d7cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I2Zjc1ZTJkMWQwODEyNjMzNWVjMzNhZmYzZGY4NWI4NjY3ZDdjYw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-12-19T02:01:45Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-12-19T02:01:45Z"}, "message": "(emit_block_move): When call emit_libary_call for bcopy,\n\npass arguments using correct types and modes.\n(emit_push_insn, expand_assignment): Likewise.\n(clear_storage, store_expr): Likewise for memset and bzero.\n(store_constructor): Likewise for memset.\n\nFrom-SVN: r10808", "tree": {"sha": "3b0fe6731a7af0f9c3f2e4205d9aa426d7d86e9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b0fe6731a7af0f9c3f2e4205d9aa426d7d86e9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b6f75e2d1d08126335ec33aff3df85b8667d7cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b6f75e2d1d08126335ec33aff3df85b8667d7cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b6f75e2d1d08126335ec33aff3df85b8667d7cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b6f75e2d1d08126335ec33aff3df85b8667d7cc/comments", "author": null, "committer": null, "parents": [{"sha": "3ea4ff2e264ccf1b5f3c63657f7fbca9894339ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ea4ff2e264ccf1b5f3c63657f7fbca9894339ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ea4ff2e264ccf1b5f3c63657f7fbca9894339ab"}], "stats": {"total": 48, "additions": 30, "deletions": 18}, "files": [{"sha": "fb415c6d05d75f0fd17c7edc166f2837342ecf01", "filename": "gcc/expr.c", "status": "modified", "additions": 30, "deletions": 18, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b6f75e2d1d08126335ec33aff3df85b8667d7cc/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b6f75e2d1d08126335ec33aff3df85b8667d7cc/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=3b6f75e2d1d08126335ec33aff3df85b8667d7cc", "patch": "@@ -1685,9 +1685,9 @@ emit_block_move (x, y, size, align)\n       emit_library_call (bcopy_libfunc, 0,\n \t\t\t VOIDmode, 3, XEXP (y, 0), Pmode,\n \t\t\t XEXP (x, 0), Pmode,\n-\t\t\t convert_to_mode (TYPE_MODE (sizetype), size,\n-\t\t\t\t\t  TREE_UNSIGNED (sizetype)),\n-\t\t\t TYPE_MODE (sizetype));\n+\t\t\t convert_to_mode (TYPE_MODE (integer_type_node), size,\n+\t\t\t\t\t  TREE_UNSIGNED (integer_type_node)),\n+\t\t\t TYPE_MODE (integer_type_node));\n #endif\n     }\n }\n@@ -1841,17 +1841,19 @@ clear_storage (object, size)\n #ifdef TARGET_MEM_FUNCTIONS\n       emit_library_call (memset_libfunc, 0,\n \t\t\t VOIDmode, 3,\n-\t\t\t XEXP (object, 0), Pmode, const0_rtx, ptr_mode,\n+\t\t\t XEXP (object, 0), Pmode,\n+\t\t\t const0_rtx, TYPE_MODE (integer_type_node),\n \t\t\t convert_to_mode (TYPE_MODE (sizetype),\n \t\t\t\t\t  size, TREE_UNSIGNED (sizetype)),\n \t\t\t TYPE_MODE (sizetype));\n #else\n       emit_library_call (bzero_libfunc, 0,\n \t\t\t VOIDmode, 2,\n \t\t\t XEXP (object, 0), Pmode,\t\n-\t\t\t convert_to_mode (TYPE_MODE (sizetype),\n-\t\t\t\t\t  size, TREE_UNSIGNED (sizetype)),\n-\t\t\t TYPE_MODE (sizetype));\n+\t\t\t convert_to_mode (TYPE_MODE (integer_type_node),\n+\t\t\t\t\t  size,\n+\t\t\t\t\t  TREE_UNSIGNED (integer_type_node)),\n+\t\t\t TYPE_MODE (integer_type_node));\n #endif\n     }\n   else\n@@ -2321,9 +2323,10 @@ emit_push_insn (x, mode, type, size, align, partial, reg, extra,\n #else\n \t  emit_library_call (bcopy_libfunc, 0,\n \t\t\t     VOIDmode, 3, XEXP (xinner, 0), Pmode, temp, Pmode,\n-\t\t\t     convert_to_mode (TYPE_MODE (sizetype),\n-\t\t\t\t\t      size, TREE_UNSIGNED (sizetype)),\n-\t\t\t     TYPE_MODE (sizetype));\n+\t\t\t     convert_to_mode (TYPE_MODE (integer_type_node),\n+\t\t\t\t\t      size,\n+\t\t\t\t\t      TREE_UNSIGNED (integer_type_node)),\n+\t\t\t     TYPE_MODE (integer_type_node));\n #endif\n \t  OK_DEFER_POP;\n \t}\n@@ -2642,9 +2645,9 @@ expand_assignment (to, from, want_value, suggest_reg)\n       emit_library_call (bcopy_libfunc, 0,\n \t\t\t VOIDmode, 3, XEXP (from_rtx, 0), Pmode,\n \t\t\t XEXP (to_rtx, 0), Pmode,\n-\t\t\t convert_to_mode (TYPE_MODE (sizetype),\n-\t\t\t\t\t  size, TREE_UNSIGNED (sizetype)),\n-\t\t\t TYPE_MODE (sizetype));\n+\t\t\t convert_to_mode (TYPE_MODE (integer_type_node),\n+\t\t\t\t\t  size, TREE_UNSIGNED (integer_type_node)),\n+\t\t\t TYPE_MODE (integer_type_node));\n #endif\n \n       preserve_temp_slots (to_rtx);\n@@ -2921,11 +2924,20 @@ store_expr (exp, target, want_value)\n \t      if (size != const0_rtx)\n \t\t{\n #ifdef TARGET_MEM_FUNCTIONS\n-\t\t  emit_library_call (memset_libfunc, 0, VOIDmode, 3, addr,\n-\t\t\t\t     Pmode, const0_rtx, Pmode, size, ptr_mode);\n+\t\t  emit_library_call (memset_libfunc, 0, VOIDmode, 3,\n+\t\t\t\t     addr, Pmode,\n+\t\t\t\t     const0_rtx, TYPE_MODE (integer_type_node),\n+\t\t\t\t     convert_to_mode (TYPE_MODE (sizetype),\n+\t\t\t\t\t\t      size,\n+\t\t\t\t\t\t      TREE_UNSIGNED (sizetype)),\n+\t\t\t\t     TYPE_MODE (sizetype));\n #else\n \t\t  emit_library_call (bzero_libfunc, 0, VOIDmode, 2,\n-\t\t\t\t     addr, Pmode, size, ptr_mode);\n+\t\t\t\t     addr, Pmode,\n+\t\t\t\t     convert_to_mode (TYPE_MODE (integer_type_node),\n+\t\t\t\t\t\t      size,\n+\t\t\t\t\t\t      TREE_UNSIGNED (integer_type_node)),\n+\t\t\t\t     TYPE_MODE (integer_type_node));\n #endif\n \t\t}\n \n@@ -3308,9 +3320,9 @@ store_constructor (exp, target)\n \t\t\t\t VOIDmode, 3,\n \t\t\t\t plus_constant (XEXP (targetx, 0), startb),\n \t\t\t\t Pmode,\n-\t\t\t\t constm1_rtx, Pmode,\n+\t\t\t\t constm1_rtx, TYPE_MODE (integer_type_node),\n \t\t\t\t GEN_INT ((endb - startb) / BITS_PER_UNIT),\n-\t\t\t\t Pmode);\n+\t\t\t\t TYPE_MODE (sizetype));\n \t    }\n \t  else\n #endif"}]}