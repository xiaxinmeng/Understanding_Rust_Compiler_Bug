{"sha": "b9b8c6ae3902b5ce95a5be7368068ce9092cf4c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjliOGM2YWUzOTAyYjVjZTk1YTViZTczNjgwNjhjZTkwOTJjZjRjNA==", "commit": {"author": {"name": "Xinliang David Li", "email": "davidxl@google.com", "date": "2011-11-07T07:43:46Z"}, "committer": {"name": "Xinliang David Li", "email": "davidxl@gcc.gnu.org", "date": "2011-11-07T07:43:46Z"}, "message": "make __stl_prime_list in comdat\n\nFrom-SVN: r181071", "tree": {"sha": "0b7fa6e4b7ade15d01a90d893bbbb7b6b7ef36a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b7fa6e4b7ade15d01a90d893bbbb7b6b7ef36a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9b8c6ae3902b5ce95a5be7368068ce9092cf4c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9b8c6ae3902b5ce95a5be7368068ce9092cf4c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9b8c6ae3902b5ce95a5be7368068ce9092cf4c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9b8c6ae3902b5ce95a5be7368068ce9092cf4c4/comments", "author": {"login": "vns-mn", "id": 57157229, "node_id": "MDQ6VXNlcjU3MTU3MjI5", "avatar_url": "https://avatars.githubusercontent.com/u/57157229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vns-mn", "html_url": "https://github.com/vns-mn", "followers_url": "https://api.github.com/users/vns-mn/followers", "following_url": "https://api.github.com/users/vns-mn/following{/other_user}", "gists_url": "https://api.github.com/users/vns-mn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vns-mn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vns-mn/subscriptions", "organizations_url": "https://api.github.com/users/vns-mn/orgs", "repos_url": "https://api.github.com/users/vns-mn/repos", "events_url": "https://api.github.com/users/vns-mn/events{/privacy}", "received_events_url": "https://api.github.com/users/vns-mn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e97764b893b1ff42f7197d26583c15028c41c06e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e97764b893b1ff42f7197d26583c15028c41c06e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e97764b893b1ff42f7197d26583c15028c41c06e"}], "stats": {"total": 31, "additions": 27, "deletions": 4}, "files": [{"sha": "299bee971136a9d89409ce21e57eae987e406542", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9b8c6ae3902b5ce95a5be7368068ce9092cf4c4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9b8c6ae3902b5ce95a5be7368068ce9092cf4c4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b9b8c6ae3902b5ce95a5be7368068ce9092cf4c4", "patch": "@@ -1,3 +1,8 @@\n+2011-11-07  Xinliang David Li  <davidxl@google.com>\n+\n+\t* include/backward/hashtable.h: Make __stl_prime_list\n+\tin comdat section.\n+\n 2011-11-07  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* include/bits/basic_string.h (basic_string::at): Move adjacent to other"}, {"sha": "dbba097d130ee629650aabaa023c1db26c5b0ecd", "filename": "libstdc++-v3/include/backward/hashtable.h", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9b8c6ae3902b5ce95a5be7368068ce9092cf4c4/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fhashtable.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9b8c6ae3902b5ce95a5be7368068ce9092cf4c4/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fhashtable.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fhashtable.h?ref=b9b8c6ae3902b5ce95a5be7368068ce9092cf4c4", "patch": "@@ -209,7 +209,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // Note: assumes long is at least 32 bits.\n   enum { _S_num_primes = 29 };\n \n-  static const unsigned long __stl_prime_list[_S_num_primes] =\n+  template<typename _PrimeType>\n+    struct _Hashtable_prime_list\n+    {\n+      static const _PrimeType  __stl_prime_list[_S_num_primes];\n+\n+      static const _PrimeType*\n+      _S_get_prime_list();\n+    };\n+\n+  template<typename _PrimeType> const _PrimeType\n+  _Hashtable_prime_list<_PrimeType>::__stl_prime_list[_S_num_primes] =\n     {\n       5ul,          53ul,         97ul,         193ul,       389ul,\n       769ul,        1543ul,       3079ul,       6151ul,      12289ul,\n@@ -219,11 +229,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       805306457ul,  1610612741ul, 3221225473ul, 4294967291ul\n     };\n \n+ template<class _PrimeType> inline const _PrimeType*\n+ _Hashtable_prime_list<_PrimeType>::_S_get_prime_list()\n+ {\n+   return __stl_prime_list;\n+ }\n+\n   inline unsigned long\n   __stl_next_prime(unsigned long __n)\n   {\n-    const unsigned long* __first = __stl_prime_list;\n-    const unsigned long* __last = __stl_prime_list + (int)_S_num_primes;\n+    const unsigned long* __first = _Hashtable_prime_list<unsigned long>::_S_get_prime_list();\n+    const unsigned long* __last = __first + (int)_S_num_primes;\n     const unsigned long* pos = std::lower_bound(__first, __last, __n);\n     return pos == __last ? *(__last - 1) : *pos;\n   }\n@@ -417,7 +433,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       size_type\n       max_bucket_count() const\n-      { return __stl_prime_list[(int)_S_num_primes - 1]; }\n+      { return _Hashtable_prime_list<unsigned long>::\n+               _S_get_prime_list()[(int)_S_num_primes - 1];\n+      }\n \n       size_type\n       elems_in_bucket(size_type __bucket) const"}]}