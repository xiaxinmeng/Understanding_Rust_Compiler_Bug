{"sha": "1804faa419c5a5ce91e60a5d67acd1e28c318944", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgwNGZhYTQxOWM1YTVjZTkxZTYwYTVkNjdhY2QxZTI4YzMxODk0NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-05-02T08:55:03Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-05-02T08:55:03Z"}, "message": "[multiple changes]\n\n2017-05-02  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch3.adb (Build_Initialization_Call): Generate a null\n\tstatement if the initialization call is a null procedure, as\n\tcan happen with a controlled type with no explicit Initialize\n\tprocedure, or an array of such.\n\t* exp_ch7.adb (Process_Object_Declaration): For a type with\n\tcontrolled components that has a trivial Initialize procedure,\n\tinsert declaration for finalization counter after object\n\tdeclaration itself.\n\t(Make_Deep_Array_Body, Build_Initialize_statements): Do not create\n\tfinalization block and attendant declarations if component has\n\ta trivial Initialize procedure.\n\t(Make_Init_Call): Do not generate a call if controlled type has\n\ta trivial Initialize procedure.\n\n2017-05-02  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* g-forstr.ads (Data): Move Format component last.\n\t* g-forstr.adb (\"+\"): Adjust for above change.\n\t* g-rewdat.ads (Buffer): Move Buffer, Current, Pattern and Value last.\n\t* g-sechas.ads (Context): Move Key last.\n\t* g-socket.ads (Service_Entry_Type): Move Aliases last.\n\t* s-fileio.adb (Temp_File_Record): Move Name last.\n\t* s-regexp.adb (Regexp_Value): Move Case_Sensitive last.\n\t* xr_tabls.ads (Project_File): Move Src_Dir and Obj_Dir last.\n\n2017-05-02  Jerome Lambourg  <lambourg@adacore.com>\n\n\t* bindusg.adb, bindgen.adb, gnatbind.adb, opt.ads: Remove the -nognarl\n\tswitch introduced recently. finally not needed.\n\n2017-05-02  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch6.adb (Analyze_Null_Procedure): Set the\n\tCorresponding_Body link for a null procedure declaration.\n\nFrom-SVN: r247475", "tree": {"sha": "085ab1697c03fcae6f94d6adac74fa3b098fb621", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/085ab1697c03fcae6f94d6adac74fa3b098fb621"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1804faa419c5a5ce91e60a5d67acd1e28c318944", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1804faa419c5a5ce91e60a5d67acd1e28c318944", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1804faa419c5a5ce91e60a5d67acd1e28c318944", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1804faa419c5a5ce91e60a5d67acd1e28c318944/comments", "author": null, "committer": null, "parents": [{"sha": "62d40a7a4e9d8e16149d274f1370bd3024eb2bd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62d40a7a4e9d8e16149d274f1370bd3024eb2bd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62d40a7a4e9d8e16149d274f1370bd3024eb2bd5"}], "stats": {"total": 158, "additions": 114, "deletions": 44}, "files": [{"sha": "38b35fd7b02dd9a008bf8a117c580e123a93263b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1804faa419c5a5ce91e60a5d67acd1e28c318944", "patch": "@@ -1,3 +1,40 @@\n+2017-05-02  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch3.adb (Build_Initialization_Call): Generate a null\n+\tstatement if the initialization call is a null procedure, as\n+\tcan happen with a controlled type with no explicit Initialize\n+\tprocedure, or an array of such.\n+\t* exp_ch7.adb (Process_Object_Declaration): For a type with\n+\tcontrolled components that has a trivial Initialize procedure,\n+\tinsert declaration for finalization counter after object\n+\tdeclaration itself.\n+\t(Make_Deep_Array_Body, Build_Initialize_statements): Do not create\n+\tfinalization block and attendant declarations if component has\n+\ta trivial Initialize procedure.\n+\t(Make_Init_Call): Do not generate a call if controlled type has\n+\ta trivial Initialize procedure.\n+\n+2017-05-02  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* g-forstr.ads (Data): Move Format component last.\n+\t* g-forstr.adb (\"+\"): Adjust for above change.\n+\t* g-rewdat.ads (Buffer): Move Buffer, Current, Pattern and Value last.\n+\t* g-sechas.ads (Context): Move Key last.\n+\t* g-socket.ads (Service_Entry_Type): Move Aliases last.\n+\t* s-fileio.adb (Temp_File_Record): Move Name last.\n+\t* s-regexp.adb (Regexp_Value): Move Case_Sensitive last.\n+\t* xr_tabls.ads (Project_File): Move Src_Dir and Obj_Dir last.\n+\n+2017-05-02  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* bindusg.adb, bindgen.adb, gnatbind.adb, opt.ads: Remove the -nognarl\n+\tswitch introduced recently. finally not needed.\n+\n+2017-05-02  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Null_Procedure): Set the\n+\tCorresponding_Body link for a null procedure declaration.\n+\n 2017-05-02  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* atree.h (Flag290): Add missing terminating parenthesis."}, {"sha": "59b43e0c27ebbda45957a01618e4cccceafb95f7", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=1804faa419c5a5ce91e60a5d67acd1e28c318944", "patch": "@@ -2853,9 +2853,7 @@ package body Bindgen is\n          --  used: System.OS_Interface should always be used by any tasking\n          --  application.\n \n-         if not Opt.No_Libgnarl then\n-            Check_Package (With_GNARL, \"system.os_interface%s\");\n-         end if;\n+         Check_Package (With_GNARL, \"system.os_interface%s\");\n \n          --  Ditto for the use of restricted tasking\n "}, {"sha": "6cf7710219eb888d300e6b1375d00c06fb1cb4ec", "filename": "gcc/ada/bindusg.adb", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fbindusg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fbindusg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindusg.adb?ref=1804faa419c5a5ce91e60a5d67acd1e28c318944", "patch": "@@ -178,11 +178,6 @@ package body Bindusg is\n       Write_Line\n         (\"  -n        No Ada main program (foreign main routine)\");\n \n-      --  Line for -nognarl\n-\n-      Write_Line\n-        (\"  -nognarl  Don't use libgnarl when writing linker instructions\");\n-\n       --  Line for -nostdinc\n \n       Write_Line"}, {"sha": "899accd3012070726d0fbcaad9b2c5201fb010b4", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=1804faa419c5a5ce91e60a5d67acd1e28c318944", "patch": "@@ -1431,6 +1431,15 @@ package body Exp_Ch3 is\n \n       if Is_Null_Init_Proc (Proc) and then not Init_Or_Norm_Scalars then\n          return Empty_List;\n+\n+      --  Nothing to do for an array of controlled components that have only\n+      --  the inherited Initialize primitive. This is a useful optimization\n+      --  for CodePeer.\n+\n+      elsif Is_Trivial_Subprogram (Proc)\n+        and then Is_Array_Type (Full_Init_Type)\n+      then\n+         return New_List (Make_Null_Statement (Loc));\n       end if;\n \n       --  Use the [underlying] full view when dealing with a private type. This"}, {"sha": "d25ad63f87a8777dff2abe31c12cca40a917e30f", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=1804faa419c5a5ce91e60a5d67acd1e28c318944", "patch": "@@ -2945,6 +2945,14 @@ package body Exp_Ch7 is\n             Find_Last_Init (Count_Ins, Body_Ins);\n          end if;\n \n+         --  If the Initialize function is null or trivial, the call will have\n+         --  been replaced with a null statement, in which case place counter\n+         --  declaration after object declaration itself.\n+\n+         if No (Count_Ins) then\n+            Count_Ins := Decl;\n+         end if;\n+\n          Insert_After (Count_Ins, Inc_Decl);\n          Analyze (Inc_Decl);\n \n@@ -6144,7 +6152,12 @@ package body Exp_Ch7 is\n \n          Init_Call := Build_Initialization_Call;\n \n-         if Present (Init_Call) then\n+         --  Only create finalization block if there is a non-trivial\n+         --  call to initialization.\n+\n+         if Present (Init_Call)\n+           and then Nkind (Init_Call) /= N_Null_Statement\n+         then\n             Init_Loop :=\n               Make_Block_Statement (Loc,\n                 Handled_Statement_Sequence =>\n@@ -6351,6 +6364,15 @@ package body Exp_Ch7 is\n           Handled_Statement_Sequence =>\n             Make_Handled_Sequence_Of_Statements (Loc, Statements => Stmts)));\n \n+      --  If there are no calls to component initialization, indicate that\n+      --  the procedure is trivial, so prevent calls to it.\n+\n+      if Is_Empty_List (Stmts)\n+        or else Nkind (First (Stmts)) = N_Null_Statement\n+      then\n+         Set_Is_Trivial_Subprogram (Proc_Id);\n+      end if;\n+\n       return Proc_Id;\n    end Make_Deep_Proc;\n \n@@ -8180,6 +8202,18 @@ package body Exp_Ch7 is\n          Check_Visibly_Controlled (Initialize_Case, Typ, Proc, Ref);\n       end if;\n \n+      --  If initialization procedure for an array of controlled objects is\n+      --  trivial, do not generate a useless call to it.\n+\n+      if (Is_Array_Type (Utyp) and then Is_Trivial_Subprogram (Proc))\n+        or else\n+          (not Comes_From_Source (Proc)\n+            and then Present (Alias (Proc))\n+            and then Is_Trivial_Subprogram (Alias (Proc)))\n+      then\n+         return Make_Null_Statement (Loc);\n+      end if;\n+\n       --  The object reference may need another conversion depending on the\n       --  type of the formal and that of the actual.\n "}, {"sha": "21ed66ec6f5e1b34b05722616b971fd7707f411f", "filename": "gcc/ada/g-forstr.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fg-forstr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fg-forstr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-forstr.adb?ref=1804faa419c5a5ce91e60a5d67acd1e28c318944", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2014-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2014-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -130,8 +130,8 @@ package body GNAT.Formatted_String is\n    begin\n       return Formatted_String'\n         (Finalization.Controlled with\n-           D => new Data'(Format'Length, 1, Format, 1,\n-             Null_Unbounded_String, 0, 0, (0, 0)));\n+           D => new Data'(Format'Length, 1, 1,\n+             Null_Unbounded_String, 0, 0, (0, 0), Format));\n    end \"+\";\n \n    ---------"}, {"sha": "165440c0e9cc80446f6aff4a00d8a0db715b586b", "filename": "gcc/ada/g-forstr.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fg-forstr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fg-forstr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-forstr.ads?ref=1804faa419c5a5ce91e60a5d67acd1e28c318944", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---           Copyright (C) 2014-2016, Free Software Foundation, Inc.        --\n+--           Copyright (C) 2014-2017, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -287,12 +287,12 @@ private\n \n    type Data (Size : Natural) is record\n       Ref_Count    : Natural := 1;\n-      Format       : String (1 .. Size); -- the format string\n       Index        : Positive := 1;      -- format index for next value\n       Result       : Unbounded_String;   -- current value\n       Current      : Natural;            -- the current format number\n       Stored_Value : Natural := 0;       -- number of stored values in Stack\n       Stack        : I_Vars;\n+      Format       : String (1 .. Size); -- the format string\n    end record;\n \n    type Data_Access is access Data;"}, {"sha": "994b3eeae2e8989f38455738616e1c0fb86cf43c", "filename": "gcc/ada/g-rewdat.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fg-rewdat.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fg-rewdat.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-rewdat.ads?ref=1804faa419c5a5ce91e60a5d67acd1e28c318944", "patch": "@@ -5,7 +5,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 2014, Free Software Foundation, Inc.            --\n+--           Copyright (C) 2014-2017, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -128,6 +128,12 @@ private\n    type Buffer\n      (Size, Size_Pattern, Size_Value : Stream_Element_Offset) is\n    limited record\n+      Pos_C : Stream_Element_Offset; -- last valid element in Current\n+      Pos_B : Stream_Element_Offset; -- last valid element in Buffer\n+\n+      Next  : Buffer_Ref;\n+      --  A link to another rewriter if any\n+\n       Buffer : Stream_Element_Array (1 .. Size);\n       --  Fully prepared/rewritten data waiting to be output\n \n@@ -141,12 +147,6 @@ private\n \n       Value : Stream_Element_Array (1 .. Size_Value);\n       --  The value the pattern is replaced by\n-\n-      Pos_C : Stream_Element_Offset; -- last valid element in Current\n-      Pos_B : Stream_Element_Offset; -- last valid element in Buffer\n-\n-      Next  : Buffer_Ref;\n-      --  A link to another rewriter if any\n    end record;\n \n end GNAT.Rewrite_Data;"}, {"sha": "99e48e6a6b6e01ce3afd088f3ed7231f36ea6a66", "filename": "gcc/ada/g-sechas.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fg-sechas.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fg-sechas.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sechas.ads?ref=1804faa419c5a5ce91e60a5d67acd1e28c318944", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2009-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2009-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -208,14 +208,14 @@ package GNAT.Secure_Hashes is\n       --  KL is 0 for a normal hash context, > 0 for HMAC\n \n       type Context (KL : Key_Length := 0) is record\n-         Key : Stream_Element_Array (1 .. KL);\n-         --  HMAC key\n-\n          H_State : Hash_State.State (0 .. State_Words - 1) := Initial_State;\n          --  Function-specific state\n \n          M_State : Message_State (Block_Length);\n          --  Function-independent state (block buffer)\n+\n+         Key : Stream_Element_Array (1 .. KL);\n+         --  HMAC key\n       end record;\n \n       Initial_Context : constant Context (KL => 0) := (others => <>);"}, {"sha": "d16310a76d23dfd866e1842ccd7456c9c4570283", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=1804faa419c5a5ce91e60a5d67acd1e28c318944", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2016, AdaCore                     --\n+--                     Copyright (C) 2001-2017, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1268,9 +1268,9 @@ private\n \n    type Service_Entry_Type (Aliases_Length : Natural) is record\n       Official : Name_Type;\n-      Aliases  : Name_Array (1 .. Aliases_Length);\n       Port     : Port_Type;\n       Protocol : Name_Type;\n+      Aliases  : Name_Array (1 .. Aliases_Length);\n    end record;\n \n    type Request_Flag_Type is mod 2 ** 8;"}, {"sha": "6c778bb597e8d8767f64f4777f2023d39c2b9070", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=1804faa419c5a5ce91e60a5d67acd1e28c318944", "patch": "@@ -447,9 +447,6 @@ procedure Gnatbind is\n          elsif Argv (2 .. Argv'Last) = \"nostdinc\" then\n             Opt.No_Stdinc := True;\n \n-         elsif Argv (2 .. Argv'Last) = \"nognarl\" then\n-            Opt.No_Libgnarl := True;\n-\n          --  -static\n \n          elsif Argv (2 .. Argv'Last) = \"static\" then"}, {"sha": "ee7b555177749dac5f2ede038a89a9e535c5ef26", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=1804faa419c5a5ce91e60a5d67acd1e28c318944", "patch": "@@ -1147,10 +1147,6 @@ package Opt is\n    --  GNATMAKE, GNATBIND, GNATFIND, GNATXREF\n    --  Set to True if no default library search dirs added to search list.\n \n-   No_Libgnarl : Boolean := False;\n-   --  GNATBIND\n-   --  Set to True if libgnarl is not available in the runtime.\n-\n    No_Strict_Aliasing : Boolean := False;\n    --  GNAT\n    --  Set True if pragma No_Strict_Aliasing with no parameters encountered."}, {"sha": "6c449389fd81599742badedeb0d580ce596d509e", "filename": "gcc/ada/s-fileio.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fs-fileio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fs-fileio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.adb?ref=1804faa419c5a5ce91e60a5d67acd1e28c318944", "patch": "@@ -63,8 +63,8 @@ package body System.File_IO is\n \n    type Temp_File_Record is record\n       File : AFCB_Ptr;\n-      Name : String (1 .. max_path_len + 1);\n       Next : aliased Temp_File_Record_Ptr;\n+      Name : String (1 .. max_path_len + 1);\n    end record;\n    --  One of these is allocated for each temporary file created\n "}, {"sha": "58a63a2a5c5e80ba5d279b70752beed643e8465b", "filename": "gcc/ada/s-regexp.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fs-regexp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fs-regexp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-regexp.adb?ref=1804faa419c5a5ce91e60a5d67acd1e28c318944", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2016, AdaCore                     --\n+--                     Copyright (C) 1999-2017, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -68,9 +68,9 @@ package body System.Regexp is\n       Num_States    : State_Index) is\n    record\n       Map            : Mapping;\n+      Case_Sensitive : Boolean;\n       States         : Regexp_Array (1 .. Num_States, 0 .. Alphabet_Size);\n       Is_Final       : Boolean_Array (1 .. Num_States);\n-      Case_Sensitive : Boolean;\n    end record;\n    --  Deterministic finite-state machine\n "}, {"sha": "760487ffb88caefeedfc54c8fa470f9500b18792", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=1804faa419c5a5ce91e60a5d67acd1e28c318944", "patch": "@@ -1450,14 +1450,19 @@ package body Sem_Ch6 is\n \n          Is_Completion := False;\n \n+         --  Link the body to the null procedure spec\n+\n+         if Nkind (N) = N_Subprogram_Declaration then\n+            Set_Corresponding_Body (N, Defining_Entity (Null_Body));\n+         end if;\n+\n          --  Null procedures are always inlined, but generic formal subprograms\n          --  which appear as such in the internal instance of formal packages,\n          --  need no completion and are not marked Inline.\n \n          if Expander_Active\n            and then Nkind (N) /= N_Formal_Concrete_Subprogram_Declaration\n          then\n-            Set_Corresponding_Body (N, Defining_Entity (Null_Body));\n             Set_Body_To_Inline (N, Null_Body);\n             Set_Is_Inlined (Designator);\n          end if;"}, {"sha": "71d2ce23ea1ea8a5ce642b08e96182ceeb318da0", "filename": "gcc/ada/xr_tabls.ads", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fxr_tabls.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1804faa419c5a5ce91e60a5d67acd1e28c318944/gcc%2Fada%2Fxr_tabls.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxr_tabls.ads?ref=1804faa419c5a5ce91e60a5d67acd1e28c318944", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1998-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -292,12 +292,11 @@ package Xr_Tabls is\n \n private\n    type Project_File (Src_Dir_Length, Obj_Dir_Length : Natural) is record\n-      Src_Dir : String (1 .. Src_Dir_Length);\n-      Src_Dir_Index : Integer;\n-\n-      Obj_Dir            : String (1 .. Obj_Dir_Length);\n+      Src_Dir_Index      : Integer;\n       Obj_Dir_Index      : Integer;\n       Last_Obj_Dir_Start : Natural;\n+      Src_Dir            : String (1 .. Src_Dir_Length);\n+      Obj_Dir            : String (1 .. Obj_Dir_Length);\n    end record;\n \n    type Project_File_Ptr is access all Project_File;\n@@ -364,7 +363,6 @@ private\n \n    type Declaration_Record (Symbol_Length : Natural) is record\n       Key          : Cst_String_Access;\n-      Symbol       : String (1 .. Symbol_Length);\n       Decl         : Reference;\n       Is_Parameter : Boolean := False; -- True if entity is subprog param\n       Decl_Type    : Character;\n@@ -374,6 +372,7 @@ private\n       Match        : Boolean := False;\n       Par_Symbol   : Declaration_Reference := null;\n       Next         : Declaration_Reference := null;\n+      Symbol       : String (1 .. Symbol_Length);\n    end record;\n    --  The lists of referenced (Body_Ref, Ref_Ref and Modif_Ref) are\n    --  kept unsorted until the results needs to be printed. This saves"}]}