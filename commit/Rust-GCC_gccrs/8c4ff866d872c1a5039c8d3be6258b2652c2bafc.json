{"sha": "8c4ff866d872c1a5039c8d3be6258b2652c2bafc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM0ZmY4NjZkODcyYzFhNTAzOWM4ZDNiZTYyNThiMjY1MmMyYmFmYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-27T21:30:31Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-27T21:30:31Z"}, "message": "(print_operand_address): print_operand_address creates PLUS-rtls for\ninternal use, so it has to handle them.\n\nFrom-SVN: r7372", "tree": {"sha": "f04290696e0b6f984c36c96073a2c1d534421e64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f04290696e0b6f984c36c96073a2c1d534421e64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c4ff866d872c1a5039c8d3be6258b2652c2bafc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c4ff866d872c1a5039c8d3be6258b2652c2bafc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c4ff866d872c1a5039c8d3be6258b2652c2bafc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c4ff866d872c1a5039c8d3be6258b2652c2bafc/comments", "author": null, "committer": null, "parents": [{"sha": "6ded32282b8826e3da4987ae93018c1b0d1eab19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ded32282b8826e3da4987ae93018c1b0d1eab19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ded32282b8826e3da4987ae93018c1b0d1eab19"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "3c807514c5145cab52ae6611b4c5b61657611c69", "filename": "gcc/config/ns32k/ns32k.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c4ff866d872c1a5039c8d3be6258b2652c2bafc/gcc%2Fconfig%2Fns32k%2Fns32k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c4ff866d872c1a5039c8d3be6258b2652c2bafc/gcc%2Fconfig%2Fns32k%2Fns32k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fns32k.c?ref=8c4ff866d872c1a5039c8d3be6258b2652c2bafc", "patch": "@@ -627,7 +627,7 @@ print_operand_address (file, addr)\n \t        off = XEXP (tmp1,1);\n \t      if (GET_CODE (sym) == SYMBOL_REF)\n \t\t{\n-\t  if (GET_CODE (off) != CONST_INT)\n+\t\t  if (GET_CODE (off) != CONST_INT)\n \t\t    abort ();\n \n \t\t  if (CONSTANT_POOL_ADDRESS_P (sym)\n@@ -772,9 +772,10 @@ print_operand_address (file, addr)\n       /* Abs. addresses don't need a base (I think). */\n       if (GET_CODE (offset) != CONST_INT\n #ifndef PC_RELATIVE\n-           && GET_CODE (offset) != LABEL_REF\n-\t   && GET_CODE (offset) != SYMBOL_REF\n-\t   && GET_CODE (offset) != CONST\n+\t  && GET_CODE (offset) != LABEL_REF\n+\t  && GET_CODE (offset) != SYMBOL_REF\n+\t  && GET_CODE (offset) != CONST\n+\t  && GET_CODE (offset) != PLUS\n #endif\n          )\n         {\n@@ -794,7 +795,8 @@ print_operand_address (file, addr)\n #ifdef PC_RELATIVE\n   else if (GET_CODE (offset) == LABEL_REF\n \t   || GET_CODE (offset) == SYMBOL_REF\n-\t   || GET_CODE (offset) == CONST)\n+\t   || GET_CODE (offset) == CONST\n+\t   || GET_CODE (offset) == PLUS)\n     fprintf (file, \"(pc)\");\n #endif\n #ifdef BASE_REG_NEEDED\t\t/* this is defined if the assembler always"}]}