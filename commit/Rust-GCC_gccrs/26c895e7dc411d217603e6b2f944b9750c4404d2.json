{"sha": "26c895e7dc411d217603e6b2f944b9750c4404d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZjODk1ZTdkYzQxMWQyMTc2MDNlNmIyZjk0NGI5NzUwYzQ0MDRkMg==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@users.sourceforge.net", "date": "2005-03-19T11:54:49Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2005-03-19T11:54:49Z"}, "message": "re PR c++/20333 (ICE on invalid code, typename outside of a template)\n\n\tPR c++/20333\n\t* parser.c (cp_parser_postfix_expression) <case RID_TYPENAME>:\n\tCheck the return value of cp_parser_nested_name_specifier.\n\n\t* g++.dg/template/crash36.C: New test.\n\nFrom-SVN: r96720", "tree": {"sha": "10307dd8a4abdf72024edb332d4d91c5c59e40db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10307dd8a4abdf72024edb332d4d91c5c59e40db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26c895e7dc411d217603e6b2f944b9750c4404d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26c895e7dc411d217603e6b2f944b9750c4404d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26c895e7dc411d217603e6b2f944b9750c4404d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26c895e7dc411d217603e6b2f944b9750c4404d2/comments", "author": null, "committer": null, "parents": [{"sha": "5a41973c5248cad4a7ec847528ad9143bef49678", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a41973c5248cad4a7ec847528ad9143bef49678", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a41973c5248cad4a7ec847528ad9143bef49678"}], "stats": {"total": 42, "additions": 35, "deletions": 7}, "files": [{"sha": "aade257bcb6f08114621128fa1302eb621b18894", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26c895e7dc411d217603e6b2f944b9750c4404d2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26c895e7dc411d217603e6b2f944b9750c4404d2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=26c895e7dc411d217603e6b2f944b9750c4404d2", "patch": "@@ -1,3 +1,9 @@\n+2005-03-19  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/20333\n+\t* parser.c (cp_parser_postfix_expression) <case RID_TYPENAME>:\n+\tCheck the return value of cp_parser_nested_name_specifier.\n+\n 2005-03-18  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR c++/20463"}, {"sha": "6df7bad1d810052dbecb37de66fd1962834d9b53", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26c895e7dc411d217603e6b2f944b9750c4404d2/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26c895e7dc411d217603e6b2f944b9750c4404d2/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=26c895e7dc411d217603e6b2f944b9750c4404d2", "patch": "@@ -3861,18 +3861,22 @@ cp_parser_postfix_expression (cp_parser *parser, bool address_p, bool cast_p)\n \tbool template_p = false;\n \ttree id;\n \ttree type;\n+\ttree scope;\n \n \t/* Consume the `typename' token.  */\n \tcp_lexer_consume_token (parser->lexer);\n \t/* Look for the optional `::' operator.  */\n \tcp_parser_global_scope_opt (parser,\n \t\t\t\t    /*current_scope_valid_p=*/false);\n-\t/* Look for the nested-name-specifier.  */\n-\tcp_parser_nested_name_specifier (parser,\n-\t\t\t\t\t /*typename_keyword_p=*/true,\n-\t\t\t\t\t /*check_dependency_p=*/true,\n-\t\t\t\t\t /*type_p=*/true,\n-\t\t\t\t\t /*is_declaration=*/true);\n+\t/* Look for the nested-name-specifier.  In case of error here,\n+\t   consume the trailing id to avoid subsequent error messages\n+\t   for usual cases.  */\n+\tscope = cp_parser_nested_name_specifier (parser,\n+\t\t\t\t\t\t /*typename_keyword_p=*/true,\n+\t\t\t\t\t\t /*check_dependency_p=*/true,\n+\t\t\t\t\t\t /*type_p=*/true,\n+\t\t\t\t\t\t /*is_declaration=*/true);\n+\n \t/* Look for the optional `template' keyword.  */\n \ttemplate_p = cp_parser_optional_template_keyword (parser);\n \t/* We don't know whether we're looking at a template-id or an\n@@ -3885,9 +3889,13 @@ cp_parser_postfix_expression (cp_parser *parser, bool address_p, bool cast_p)\n \t/* If that didn't work, try an identifier.  */\n \tif (!cp_parser_parse_definitely (parser))\n \t  id = cp_parser_identifier (parser);\n+\n+\t/* Don't process id if nested name specifier is invalid.  */\n+\tif (scope == error_mark_node)\n+\t  return error_mark_node;\n \t/* If we look up a template-id in a non-dependent qualifying\n \t   scope, there's no need to create a dependent type.  */\n-\tif (TREE_CODE (id) == TYPE_DECL\n+\telse if (TREE_CODE (id) == TYPE_DECL\n \t    && !dependent_type_p (parser->scope))\n \t  type = TREE_TYPE (id);\n \t/* Create a TYPENAME_TYPE to represent the type to which the"}, {"sha": "d223ddb3eb3a7753fef136e99a4881dc1fdc5e8b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26c895e7dc411d217603e6b2f944b9750c4404d2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26c895e7dc411d217603e6b2f944b9750c4404d2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=26c895e7dc411d217603e6b2f944b9750c4404d2", "patch": "@@ -1,3 +1,8 @@\n+2005-03-19  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/20333\n+\t* g++.dg/template/crash36.C: New test.\n+\n 2005-03-18  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR c++/20463"}, {"sha": "2f0ef921a6768503dda2411b5f1477075fbf042f", "filename": "gcc/testsuite/g++.dg/template/crash36.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26c895e7dc411d217603e6b2f944b9750c4404d2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash36.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26c895e7dc411d217603e6b2f944b9750c4404d2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash36.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash36.C?ref=26c895e7dc411d217603e6b2f944b9750c4404d2", "patch": "@@ -0,0 +1,9 @@\n+// { dg-do compile }\n+\n+// Origin: Ivan Godard <igodard@pacbell.net>\n+//\t   Andrew Pinski <pinskia@gcc.gnu.org>\n+\n+// PR c++/20333: ICE parsing typename without nested-name-specifier\n+\n+template<class> struct f {};\n+f<int> f2[2] = {typename f<int>()};\t// { dg-error \"\" }"}]}