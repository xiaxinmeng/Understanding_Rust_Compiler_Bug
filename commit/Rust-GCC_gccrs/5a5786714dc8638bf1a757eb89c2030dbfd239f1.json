{"sha": "5a5786714dc8638bf1a757eb89c2030dbfd239f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE1Nzg2NzE0ZGM4NjM4YmYxYTc1N2ViODljMjAzMGRiZmQyMzlmMQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2016-06-20T22:58:20Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2016-06-20T22:58:20Z"}, "message": "Fix ICE on conditional expression between DFP and non-DFP float (PR c/71601).\n\nA conditional expression between DFP and non-DFP floating-point\nproduces an ICE.  This patch fixes this by making\nbuild_conditional_expr return early when c_common_type produces an\nerror.\n\nBootstrapped with no regressions on x86_64-pc-linux-gnu.\n\n\tPR c/71601\ngcc/c:\n\t* c-typeck.c (build_conditional_expr): Return error_mark_node if\n\tc_common_type returns error_mark_node.\n\ngcc/testsuite:\n\t* gcc.dg/dfp/usual-arith-conv-bad-3.c: New test.\n\nFrom-SVN: r237622", "tree": {"sha": "77aba49c84485917b8be4c68189cb2c5e87af15d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77aba49c84485917b8be4c68189cb2c5e87af15d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a5786714dc8638bf1a757eb89c2030dbfd239f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a5786714dc8638bf1a757eb89c2030dbfd239f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a5786714dc8638bf1a757eb89c2030dbfd239f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a5786714dc8638bf1a757eb89c2030dbfd239f1/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50aa64d58fd4cea25df2a9d9ddfc38e74dcdd94c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50aa64d58fd4cea25df2a9d9ddfc38e74dcdd94c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50aa64d58fd4cea25df2a9d9ddfc38e74dcdd94c"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "35b3de4a3659f0c075c9b0a4bbe263286c8c7abe", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a5786714dc8638bf1a757eb89c2030dbfd239f1/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a5786714dc8638bf1a757eb89c2030dbfd239f1/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=5a5786714dc8638bf1a757eb89c2030dbfd239f1", "patch": "@@ -1,3 +1,9 @@\n+2016-06-20  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR c/71601\n+\t* c-typeck.c (build_conditional_expr): Return error_mark_node if\n+\tc_common_type returns error_mark_node.\n+\n 2016-06-19 Martin Sebor  <msebor@redhat.com>\n \n \tPR c/69507"}, {"sha": "7c6241c22d61fd163d4835be9163e5f635430cf8", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a5786714dc8638bf1a757eb89c2030dbfd239f1/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a5786714dc8638bf1a757eb89c2030dbfd239f1/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=5a5786714dc8638bf1a757eb89c2030dbfd239f1", "patch": "@@ -4846,6 +4846,8 @@ build_conditional_expr (location_t colon_loc, tree ifexp, bool ifexp_bcp,\n \t       || code2 == COMPLEX_TYPE))\n     {\n       result_type = c_common_type (type1, type2);\n+      if (result_type == error_mark_node)\n+\treturn error_mark_node;\n       do_warn_double_promotion (result_type, type1, type2,\n \t\t\t\t\"implicit conversion from %qT to %qT to \"\n \t\t\t\t\"match other result of conditional\","}, {"sha": "75bf51bb50667921fde2ecafed5debbe5c2cc78e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a5786714dc8638bf1a757eb89c2030dbfd239f1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a5786714dc8638bf1a757eb89c2030dbfd239f1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5a5786714dc8638bf1a757eb89c2030dbfd239f1", "patch": "@@ -1,3 +1,8 @@\n+2016-06-20  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR c/71601\n+\t* gcc.dg/dfp/usual-arith-conv-bad-3.c: New test.\n+\n 2016-06-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/71581"}, {"sha": "95421a6bfb894fb8092666512231df41915a8dcc", "filename": "gcc/testsuite/gcc.dg/dfp/usual-arith-conv-bad-3.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a5786714dc8638bf1a757eb89c2030dbfd239f1/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fusual-arith-conv-bad-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a5786714dc8638bf1a757eb89c2030dbfd239f1/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fusual-arith-conv-bad-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fusual-arith-conv-bad-3.c?ref=5a5786714dc8638bf1a757eb89c2030dbfd239f1", "patch": "@@ -0,0 +1,13 @@\n+/* Test error for conditional expression between DFP and other\n+   floating operand.  */\n+/* { dg-do compile } */\n+\n+_Decimal32 a;\n+float b;\n+int i;\n+\n+void\n+f (void)\n+{\n+  (void) (i ? a : b); /* { dg-error \"mix operands\" } */\n+}"}]}