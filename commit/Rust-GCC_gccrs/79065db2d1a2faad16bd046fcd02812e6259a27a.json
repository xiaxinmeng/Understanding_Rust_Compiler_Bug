{"sha": "79065db2d1a2faad16bd046fcd02812e6259a27a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzkwNjVkYjJkMWEyZmFhZDE2YmQwNDZmY2QwMjgxMmU2MjU5YTI3YQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2001-04-06T06:33:07Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2001-04-06T06:33:07Z"}, "message": "cp-tree.h (DECL_THIS_INLINE): Rename to DECL_DECLARED_INLINE_P.\n\n\t* cp-tree.h (DECL_THIS_INLINE): Rename to DECL_DECLARED_INLINE_P.\n\t* decl.c (duplicate_decls): Adjust accordingly.\n\t(maybe_commonize_var): Likewise.\n\t(grokfndecl): Likewise.\n\t(start_function): Likewise.\n\t(start_method): Likewise.\n\t* decl2.c (key_method): Likewise.\n\t(import_export_decl): Likewise.\n\t* method.c (implicitly_declare_fn): Likewise.\n\t* optimize.c (maybe_clone_body): Likewise.\n\nFrom-SVN: r41144", "tree": {"sha": "79c3ec5ac8a7cfa8fe8b7c1d0050e9298f12ece2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79c3ec5ac8a7cfa8fe8b7c1d0050e9298f12ece2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79065db2d1a2faad16bd046fcd02812e6259a27a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79065db2d1a2faad16bd046fcd02812e6259a27a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79065db2d1a2faad16bd046fcd02812e6259a27a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79065db2d1a2faad16bd046fcd02812e6259a27a/comments", "author": null, "committer": null, "parents": [{"sha": "b03eced6f6609e6e2a6b160a705d79a4ebb0eb2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b03eced6f6609e6e2a6b160a705d79a4ebb0eb2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b03eced6f6609e6e2a6b160a705d79a4ebb0eb2f"}], "stats": {"total": 56, "additions": 38, "deletions": 18}, "files": [{"sha": "2f3c032dd282724160519ed5bad42705c9c08463", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79065db2d1a2faad16bd046fcd02812e6259a27a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79065db2d1a2faad16bd046fcd02812e6259a27a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=79065db2d1a2faad16bd046fcd02812e6259a27a", "patch": "@@ -1,3 +1,16 @@\n+2001-04-05  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* cp-tree.h (DECL_THIS_INLINE): Rename to DECL_DECLARED_INLINE_P.\n+\t* decl.c (duplicate_decls): Adjust accordingly.\n+\t(maybe_commonize_var): Likewise.\n+\t(grokfndecl): Likewise.\n+\t(start_function): Likewise.\n+\t(start_method): Likewise.\n+\t* decl2.c (key_method): Likewise.\n+\t(import_export_decl): Likewise.\n+\t* method.c (implicitly_declare_fn): Likewise.\n+\t* optimize.c (maybe_clone_body): Likewise.\n+\t\n 2001-04-05  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* lang-specs.h: Add __DEPRECATED."}, {"sha": "77a12f6eaeb0cf6083adc6866602a2d4842ded47", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79065db2d1a2faad16bd046fcd02812e6259a27a/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79065db2d1a2faad16bd046fcd02812e6259a27a/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=79065db2d1a2faad16bd046fcd02812e6259a27a", "patch": "@@ -2981,7 +2981,7 @@ extern int flag_new_for_scope;\n /* This function was declared inline.  This flag controls the linkage\n    semantics of 'inline'; whether or not the function is inlined is\n    controlled by DECL_INLINE.  */\n-#define DECL_THIS_INLINE(NODE) \\\n+#define DECL_DECLARED_INLINE_P(NODE) \\\n   (DECL_LANG_SPECIFIC (NODE)->decl_flags.declared_inline)\n \n /* DECL_EXTERNAL must be set on a decl until the decl is actually emitted,"}, {"sha": "ff8a8192f6556f71a726adb092e6cad0111aa901", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79065db2d1a2faad16bd046fcd02812e6259a27a/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79065db2d1a2faad16bd046fcd02812e6259a27a/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=79065db2d1a2faad16bd046fcd02812e6259a27a", "patch": "@@ -3409,7 +3409,8 @@ duplicate_decls (newdecl, olddecl)\n \t\t  }\n \t      }\n \n-\t  if (DECL_THIS_INLINE (newdecl) && ! DECL_THIS_INLINE (olddecl)\n+\t  if (DECL_DECLARED_INLINE_P (newdecl) \n+\t      && ! DECL_DECLARED_INLINE_P (olddecl)\n \t      && TREE_ADDRESSABLE (olddecl) && warn_inline)\n \t    {\n \t      cp_warning (\"`%#D' was used before it was declared inline\",\n@@ -3664,7 +3665,7 @@ duplicate_decls (newdecl, olddecl)\n \n \t  SET_DECL_TEMPLATE_SPECIALIZATION (olddecl);\n \t}\n-      DECL_THIS_INLINE (newdecl) |= DECL_THIS_INLINE (olddecl);\n+      DECL_DECLARED_INLINE_P (newdecl) |= DECL_DECLARED_INLINE_P (olddecl);\n \n       /* If either decl says `inline', this fn is inline, unless its\n          definition was passed already.  */\n@@ -7566,7 +7567,7 @@ maybe_commonize_var (decl)\n       && ! DECL_ARTIFICIAL (decl)\n       && current_function_decl\n       && DECL_CONTEXT (decl) == current_function_decl\n-      && (DECL_THIS_INLINE (current_function_decl)\n+      && (DECL_DECLARED_INLINE_P (current_function_decl)\n \t  || DECL_TEMPLATE_INSTANTIATION (current_function_decl))\n       && TREE_PUBLIC (current_function_decl))\n     {\n@@ -8834,7 +8835,7 @@ grokfndecl (ctype, type, declarator, orig_declarator, virtualp, flags, quals,\n     }\n \n   if (inlinep)\n-    DECL_THIS_INLINE (decl) = DECL_INLINE (decl) = 1;\n+    DECL_DECLARED_INLINE_P (decl) = DECL_INLINE (decl) = 1;\n \n   DECL_EXTERNAL (decl) = 1;\n   if (quals != NULL_TREE && TREE_CODE (type) == FUNCTION_TYPE)\n@@ -13526,7 +13527,7 @@ start_function (declspecs, declarator, attrs, flags)\n       if (DECL_NOT_REALLY_EXTERN (decl1))\n \tDECL_EXTERNAL (decl1) = 0;\n \n-      if (ctx != NULL_TREE && DECL_THIS_INLINE (ctx)\n+      if (ctx != NULL_TREE && DECL_DECLARED_INLINE_P (ctx)\n \t  && TREE_PUBLIC (ctx))\n \t/* This is a function in a local class in an extern inline\n \t   function.  */\n@@ -13539,12 +13540,14 @@ start_function (declspecs, declarator, attrs, flags)\n \t   && (! DECL_TEMPLATE_INSTANTIATION (decl1)\n \t       || flag_alt_external_templates))\n     {\n-      if (DECL_THIS_INLINE (decl1) || DECL_TEMPLATE_INSTANTIATION (decl1)\n+      if (DECL_DECLARED_INLINE_P (decl1) \n+\t  || DECL_TEMPLATE_INSTANTIATION (decl1)\n \t  || processing_template_decl)\n \t{\n \t  DECL_EXTERNAL (decl1)\n \t    = (interface_only\n-\t       || (DECL_THIS_INLINE (decl1) && ! flag_implement_inlines\n+\t       || (DECL_DECLARED_INLINE_P (decl1) \n+\t\t   && ! flag_implement_inlines\n \t\t   && !DECL_VINDEX (decl1)));\n \n \t  /* For WIN32 we also want to put these in linkonce sections.  */\n@@ -13575,7 +13578,8 @@ start_function (declspecs, declarator, attrs, flags)\n \t So clear DECL_EXTERNAL.  */\n       DECL_EXTERNAL (decl1) = 0;\n \n-      if ((DECL_THIS_INLINE (decl1) || DECL_TEMPLATE_INSTANTIATION (decl1))\n+      if ((DECL_DECLARED_INLINE_P (decl1) \n+\t   || DECL_TEMPLATE_INSTANTIATION (decl1))\n \t  && ! DECL_INTERFACE_KNOWN (decl1)\n \t  /* Don't try to defer nested functions for now.  */\n \t  && ! decl_function_context (decl1))\n@@ -14091,7 +14095,7 @@ start_method (declspecs, declarator, attrlist)\n \n   check_template_shadow (fndecl);\n \n-  DECL_THIS_INLINE (fndecl) = 1;\n+  DECL_DECLARED_INLINE_P (fndecl) = 1;\n \n   if (flag_default_inline)\n     DECL_INLINE (fndecl) = 1;"}, {"sha": "b26decbe6add47edb7edb04610b5bc4294b13e0d", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79065db2d1a2faad16bd046fcd02812e6259a27a/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79065db2d1a2faad16bd046fcd02812e6259a27a/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=79065db2d1a2faad16bd046fcd02812e6259a27a", "patch": "@@ -2407,7 +2407,7 @@ key_method (type)\n   for (method = TYPE_METHODS (type); method != NULL_TREE;\n        method = TREE_CHAIN (method))\n     if (DECL_VINDEX (method) != NULL_TREE\n-\t&& ! DECL_THIS_INLINE (method)\n+\t&& ! DECL_DECLARED_INLINE_P (method)\n \t&& (! DECL_PURE_VIRTUAL_P (method) || DECL_DESTRUCTOR_P (method)))\n       return method;\n \n@@ -2658,7 +2658,8 @@ import_export_decl (decl)\n       if ((DECL_IMPLICIT_INSTANTIATION (decl)\n \t   || DECL_FRIEND_PSEUDO_TEMPLATE_INSTANTIATION (decl))\n \t  && (flag_implicit_templates\n-\t      || (flag_implicit_inline_templates && DECL_THIS_INLINE (decl))))\n+\t      || (flag_implicit_inline_templates \n+\t\t  && DECL_DECLARED_INLINE_P (decl))))\n \t{\n \t  if (!TREE_PUBLIC (decl))\n \t    /* Templates are allowed to have internal linkage.  See \n@@ -2672,15 +2673,16 @@ import_export_decl (decl)\n     }\n   else if (DECL_FUNCTION_MEMBER_P (decl))\n     {\n-      if (!DECL_THIS_INLINE (decl))\n+      if (!DECL_DECLARED_INLINE_P (decl))\n \t{\n \t  tree ctype = DECL_CONTEXT (decl);\n \t  import_export_class (ctype);\n \t  if (CLASSTYPE_INTERFACE_KNOWN (ctype))\n \t    {\n \t      DECL_NOT_REALLY_EXTERN (decl)\n \t\t= ! (CLASSTYPE_INTERFACE_ONLY (ctype)\n-\t\t     || (DECL_THIS_INLINE (decl) && ! flag_implement_inlines\n+\t\t     || (DECL_DECLARED_INLINE_P (decl) \n+\t\t\t && ! flag_implement_inlines\n \t\t\t && !DECL_VINDEX (decl)));\n \n \t      /* Always make artificials weak.  */\n@@ -2715,7 +2717,8 @@ import_export_decl (decl)\n \t{\n \t  DECL_NOT_REALLY_EXTERN (decl)\n \t    = ! (CLASSTYPE_INTERFACE_ONLY (ctype)\n-\t\t || (DECL_THIS_INLINE (decl) && ! flag_implement_inlines\n+\t\t || (DECL_DECLARED_INLINE_P (decl) \n+\t\t     && ! flag_implement_inlines\n \t\t     && !DECL_VINDEX (decl)));\n \n \t  /* Always make artificials weak.  */"}, {"sha": "7c55fd8f95714d6f3e366e5056c2945ee3d7c537", "filename": "gcc/cp/method.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79065db2d1a2faad16bd046fcd02812e6259a27a/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79065db2d1a2faad16bd046fcd02812e6259a27a/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=79065db2d1a2faad16bd046fcd02812e6259a27a", "patch": "@@ -1032,7 +1032,7 @@ implicitly_declare_fn (kind, type, const_p)\n \n   DECL_ARTIFICIAL (fn) = 1;\n   DECL_NOT_REALLY_EXTERN (fn) = 1;\n-  DECL_THIS_INLINE (fn) = 1;\n+  DECL_DECLARED_INLINE_P (fn) = 1;\n   DECL_INLINE (fn) = 1;\n   defer_fn (fn);\n   "}, {"sha": "5232491ef8e4f63f7e8d62a2a1dfdea1a16a01ca", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79065db2d1a2faad16bd046fcd02812e6259a27a/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79065db2d1a2faad16bd046fcd02812e6259a27a/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=79065db2d1a2faad16bd046fcd02812e6259a27a", "patch": "@@ -1031,7 +1031,7 @@ maybe_clone_body (fn)\n       DECL_SOURCE_FILE (clone) = DECL_SOURCE_FILE (fn);\n       DECL_SOURCE_LINE (clone) = DECL_SOURCE_LINE (fn);\n       DECL_INLINE (clone) = DECL_INLINE (fn);\n-      DECL_THIS_INLINE (clone) = DECL_THIS_INLINE (fn);\n+      DECL_DECLARED_INLINE_P (clone) = DECL_DECLARED_INLINE_P (fn);\n       DECL_COMDAT (clone) = DECL_COMDAT (fn);\n       DECL_WEAK (clone) = DECL_WEAK (fn);\n       DECL_ONE_ONLY (clone) = DECL_ONE_ONLY (fn);"}, {"sha": "4792b3423c7b009e0cc968e2f37524cd7f6e4b50", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79065db2d1a2faad16bd046fcd02812e6259a27a/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79065db2d1a2faad16bd046fcd02812e6259a27a/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=79065db2d1a2faad16bd046fcd02812e6259a27a", "patch": "@@ -2450,7 +2450,7 @@ expand_body (fn)\n \n   /* Compute the appropriate object-file linkage for inline\n      functions.  */\n-  if (DECL_INLINE (fn))\n+  if (DECL_DECLARED_INLINE_P (fn))\n     import_export_decl (fn);\n \n   /* Emit any thunks that should be emitted at the same time as FN.  */"}]}