{"sha": "e8ea2809d0dd85f1a235ba868897da51b79fca64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThlYTI4MDlkMGRkODVmMWEyMzViYTg2ODg5N2RhNTFiNzlmY2E2NA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2001-03-12T19:09:57Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-03-12T19:09:57Z"}, "message": "flow.c (insn_dead_p): Don't consider two memrefs equivalent unless anti_dependence says they are.\n\n\t* flow.c (insn_dead_p): Don't consider two memrefs equivalent\n\tunless anti_dependence says they are.\n\t* alias.c (objects_must_conflict): If neither has a type specified,\n\tthey must conflict.\n\nFrom-SVN: r40420", "tree": {"sha": "01a1f60a4828fbe8cab90871760e677dc8ecc6fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01a1f60a4828fbe8cab90871760e677dc8ecc6fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8ea2809d0dd85f1a235ba868897da51b79fca64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8ea2809d0dd85f1a235ba868897da51b79fca64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8ea2809d0dd85f1a235ba868897da51b79fca64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8ea2809d0dd85f1a235ba868897da51b79fca64/comments", "author": null, "committer": null, "parents": [{"sha": "89c9653e9a01c49fbd758547482629a728fda3a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89c9653e9a01c49fbd758547482629a728fda3a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89c9653e9a01c49fbd758547482629a728fda3a0"}], "stats": {"total": 50, "additions": 32, "deletions": 18}, "files": [{"sha": "ea73863cfbe67f36a34c736dd19e869a08fb984f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ea2809d0dd85f1a235ba868897da51b79fca64/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ea2809d0dd85f1a235ba868897da51b79fca64/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8ea2809d0dd85f1a235ba868897da51b79fca64", "patch": "@@ -1,3 +1,10 @@\n+Mon Mar 12 14:05:32 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* flow.c (insn_dead_p): Don't consider two memrefs equivalent\n+\tunless anti_dependence says they are.\n+\t* alias.c (objects_must_conflict): If neither has a type specified,\n+\tthey must conflict.\n+\n 2001-03-12  Neil Booth  <neil@daikokuya.demon.co.uk>\n \t    David Billinghurst <David.Billinghurst@riotinto.com>\n "}, {"sha": "6d794ba98c5dcea7861fdd41aea64bf60182811f", "filename": "gcc/alias.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ea2809d0dd85f1a235ba868897da51b79fca64/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ea2809d0dd85f1a235ba868897da51b79fca64/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=e8ea2809d0dd85f1a235ba868897da51b79fca64", "patch": "@@ -309,6 +309,12 @@ int\n objects_must_conflict_p (t1, t2)\n      tree t1, t2;\n {\n+  /* If neither has a type specified, we don't know if they'll conflict\n+     because we may be using them to store objects of various types, for\n+     example the argument and local variables areas of inlined functions.  */\n+  if (t1 == 0 && t1 == 0)\n+    return 0;\n+\n   /* If one or the other has readonly fields or is readonly,\n      then they may not conflict.  */\n   if ((t1 != 0 && readonly_fields_p (t1))"}, {"sha": "819765523a2053c137ea1e97fb055c343a4a3b18", "filename": "gcc/flow.c", "status": "modified", "additions": 19, "deletions": 18, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ea2809d0dd85f1a235ba868897da51b79fca64/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ea2809d0dd85f1a235ba868897da51b79fca64/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=e8ea2809d0dd85f1a235ba868897da51b79fca64", "patch": "@@ -4420,27 +4420,28 @@ insn_dead_p (pbi, x, call_ok, notes)\n \t  /* Walk the set of memory locations we are currently tracking\n \t     and see if one is an identical match to this memory location.\n \t     If so, this memory write is dead (remember, we're walking\n-\t     backwards from the end of the block to the start).  */\n-\t  temp = pbi->mem_set_list;\n-\t  while (temp)\n-\t    {\n-\t      rtx mem = XEXP (temp, 0);\n+\t     backwards from the end of the block to the start).  Since\n+\t     rtx_equal_p does not check the alias set or flags, we also\n+\t     must have the potential for them to conflict (anti_dependence). */\n+\t  for (temp = pbi->mem_set_list; temp != 0; temp = XEXP (temp, 1))\n+\t    if (anti_dependence (r, XEXP (temp, 0)))\n+\t      {\n+\t\trtx mem = XEXP (temp, 0);\n \n-\t      if (rtx_equal_p (mem, r))\n-\t\treturn 1;\n+\t\tif (rtx_equal_p (mem, r))\n+\t\t  return 1;\n #ifdef AUTO_INC_DEC\n-\t      /* Check if memory reference matches an auto increment. Only\n-\t\t post increment/decrement or modify are valid.  */\n-\t      if (GET_MODE (mem) == GET_MODE (r)\n-\t          && (GET_CODE (XEXP (mem, 0)) == POST_DEC\n-\t              || GET_CODE (XEXP (mem, 0)) == POST_INC\n-\t              || GET_CODE (XEXP (mem, 0)) == POST_MODIFY)\n-\t\t  && GET_MODE (XEXP (mem, 0)) == GET_MODE (r)\n-\t\t  && rtx_equal_p (XEXP (XEXP (mem, 0), 0), XEXP (r, 0)))\n-\t\treturn 1;\n+\t\t/* Check if memory reference matches an auto increment. Only\n+\t\t   post increment/decrement or modify are valid.  */\n+\t\tif (GET_MODE (mem) == GET_MODE (r)\n+\t\t    && (GET_CODE (XEXP (mem, 0)) == POST_DEC\n+\t\t\t|| GET_CODE (XEXP (mem, 0)) == POST_INC\n+\t\t\t|| GET_CODE (XEXP (mem, 0)) == POST_MODIFY)\n+\t\t    && GET_MODE (XEXP (mem, 0)) == GET_MODE (r)\n+\t\t    && rtx_equal_p (XEXP (XEXP (mem, 0), 0), XEXP (r, 0)))\n+\t\t  return 1;\n #endif\n-\t      temp = XEXP (temp, 1);\n-\t    }\n+\t      }\n \t}\n       else\n \t{"}]}