{"sha": "d0ee17a526119f45b7f2a593fa54c82dfffe5629", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDBlZTE3YTUyNjExOWY0NWI3ZjJhNTkzZmE1NGM4MmRmZmZlNTYyOQ==", "commit": {"author": {"name": "Dominik Vogt", "email": "vogt@linux.vnet.ibm.com", "date": "2017-04-05T08:28:18Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2017-04-05T08:28:18Z"}, "message": "PR target/79890: S/390: Fix crash.\n\nbuiltin_eh_return requires the return address to be saved on the\nstack.  The patch prevents using an FPR for that.\n\ngcc/ChangeLog:\n\n2017-04-05  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n\n\tPR target/79890\n\t* config/s390/s390.c (s390_register_info_gprtofpr): Return if\n\tcall_eh_return is true.\n\ngcc/testsuite/ChangeLog:\n\n2017-04-05  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n\n\tPR target/79890\n\t* gcc.target/s390/pr79890.c: New test case.\n\nFrom-SVN: r246701", "tree": {"sha": "681050570a7afb224418ef45c293b79c3d1c5fc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/681050570a7afb224418ef45c293b79c3d1c5fc7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0ee17a526119f45b7f2a593fa54c82dfffe5629", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0ee17a526119f45b7f2a593fa54c82dfffe5629", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0ee17a526119f45b7f2a593fa54c82dfffe5629", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0ee17a526119f45b7f2a593fa54c82dfffe5629/comments", "author": {"login": "vogtd", "id": 9690100, "node_id": "MDQ6VXNlcjk2OTAxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/9690100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vogtd", "html_url": "https://github.com/vogtd", "followers_url": "https://api.github.com/users/vogtd/followers", "following_url": "https://api.github.com/users/vogtd/following{/other_user}", "gists_url": "https://api.github.com/users/vogtd/gists{/gist_id}", "starred_url": "https://api.github.com/users/vogtd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vogtd/subscriptions", "organizations_url": "https://api.github.com/users/vogtd/orgs", "repos_url": "https://api.github.com/users/vogtd/repos", "events_url": "https://api.github.com/users/vogtd/events{/privacy}", "received_events_url": "https://api.github.com/users/vogtd/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b88a6a88183a6cf44721881fe81a8f5c731bce4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b88a6a88183a6cf44721881fe81a8f5c731bce4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b88a6a88183a6cf44721881fe81a8f5c731bce4f"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "b29311a651d6adf886b5b217f8ebec9e793807f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0ee17a526119f45b7f2a593fa54c82dfffe5629/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0ee17a526119f45b7f2a593fa54c82dfffe5629/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d0ee17a526119f45b7f2a593fa54c82dfffe5629", "patch": "@@ -1,3 +1,9 @@\n+2017-04-05  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n+\n+\tPR target/79890\n+\t* config/s390/s390.c (s390_register_info_gprtofpr): Return if\n+\tcall_eh_return is true.\n+\n 2017-04-05  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* config/s390/s390-c.c (s390_resolve_overloaded_builtin):"}, {"sha": "2cb8947e5a6e7ed4bb0220d9905abf75ecd64026", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0ee17a526119f45b7f2a593fa54c82dfffe5629/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0ee17a526119f45b7f2a593fa54c82dfffe5629/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=d0ee17a526119f45b7f2a593fa54c82dfffe5629", "patch": "@@ -9512,6 +9512,12 @@ s390_register_info_gprtofpr ()\n   if (!TARGET_Z10 || !TARGET_HARD_FLOAT || !crtl->is_leaf)\n     return;\n \n+  /* builtin_eh_return needs to be able to modify the return address\n+     on the stack.  It could also adjust the FPR save slot instead but\n+     is it worth the trouble?!  */\n+  if (crtl->calls_eh_return)\n+    return;\n+\n   for (i = 15; i >= 6; i--)\n     {\n       if (cfun_gpr_save_slot (i) == SAVE_SLOT_NONE)"}, {"sha": "98aa5c0b6dadb4e5ab01e5311aa43846cf873c43", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0ee17a526119f45b7f2a593fa54c82dfffe5629/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0ee17a526119f45b7f2a593fa54c82dfffe5629/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d0ee17a526119f45b7f2a593fa54c82dfffe5629", "patch": "@@ -1,3 +1,8 @@\n+2017-04-05  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n+\n+\tPR target/79890\n+\t* gcc.target/s390/pr79890.c: New test case.\n+\n 2017-04-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/80310"}, {"sha": "e9894df6c63476ea4f3d96d3a84ed982373ad66b", "filename": "gcc/testsuite/gcc.target/s390/pr79890.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0ee17a526119f45b7f2a593fa54c82dfffe5629/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr79890.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0ee17a526119f45b7f2a593fa54c82dfffe5629/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr79890.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr79890.c?ref=d0ee17a526119f45b7f2a593fa54c82dfffe5629", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wno-pedantic\" } */\n+\n+void bar (void);\n+\n+void\n+foo (int x)\n+{\n+  __builtin_unwind_init ();\n+  __builtin_eh_return (x, bar);\n+}"}]}