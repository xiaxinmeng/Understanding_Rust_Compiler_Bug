{"sha": "3adcf7e104284b4867996b08f37ece50056ee8f6", "node_id": "C_kwDOANBUbNoAKDNhZGNmN2UxMDQyODRiNDg2Nzk5NmIwOGYzN2VjZTUwMDU2ZWU4ZjY", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-10-18T12:54:16Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-10-18T13:00:46Z"}, "message": "openmp: Fix handling of numa_domains(1)\n\nIf numa-domains is used with num-places count, sometimes the function\ncould create more places than requested and crash.  This depended on the\ncontent of /sys/devices/system/node/online file, e.g. if the file\ncontains\n0-1,16-17\nand all NUMA nodes contain at least one CPU in the cpuset of the program,\nthen numa_domains(2) or numa_domains(4) (or 5+) work fine while\nnuma_domains(1) or numa_domains(3) misbehave.  I.e. the function was able\nto stop after reaching limit on the , separators (or trivially at the end),\nbut not within in the ranges.\n\n2021-10-18  Jakub Jelinek  <jakub@redhat.com>\n\n\t* config/linux/affinity.c (gomp_affinity_init_numa_domains): Add\n\t&& gomp_places_list_len < count after nfirst <= nlast loop condition.", "tree": {"sha": "c8586c7a1d00e29b8c491f528cafcbf4d178a474", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8586c7a1d00e29b8c491f528cafcbf4d178a474"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3adcf7e104284b4867996b08f37ece50056ee8f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3adcf7e104284b4867996b08f37ece50056ee8f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3adcf7e104284b4867996b08f37ece50056ee8f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3adcf7e104284b4867996b08f37ece50056ee8f6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dece6ae77223f37494b9ccab45f4bc4154c9fd0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dece6ae77223f37494b9ccab45f4bc4154c9fd0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dece6ae77223f37494b9ccab45f4bc4154c9fd0b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ce86c5898c16e18843b7a97340620cb48019fd78", "filename": "libgomp/config/linux/affinity.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3adcf7e104284b4867996b08f37ece50056ee8f6/libgomp%2Fconfig%2Flinux%2Faffinity.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3adcf7e104284b4867996b08f37ece50056ee8f6/libgomp%2Fconfig%2Flinux%2Faffinity.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Flinux%2Faffinity.c?ref=3adcf7e104284b4867996b08f37ece50056ee8f6", "patch": "@@ -401,7 +401,7 @@ gomp_affinity_init_numa_domains (unsigned long count, cpu_set_t *copy,\n \t    break;\n \t  q = end;\n \t}\n-      for (; nfirst <= nlast; nfirst++)\n+      for (; nfirst <= nlast && gomp_places_list_len < count; nfirst++)\n \t{\n \t  sprintf (name + prefix_len, \"node%lu/cpulist\", nfirst);\n \t  f = fopen (name, \"r\");"}]}