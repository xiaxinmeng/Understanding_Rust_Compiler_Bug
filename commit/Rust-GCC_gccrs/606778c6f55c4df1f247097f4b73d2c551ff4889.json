{"sha": "606778c6f55c4df1f247097f4b73d2c551ff4889", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjA2Nzc4YzZmNTVjNGRmMWYyNDcwOTdmNGI3M2QyYzU1MWZmNDg4OQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2017-12-14T02:30:49Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2017-12-14T02:30:49Z"}, "message": "re PR libfortran/78549 (Very slow formatted internal file output)\n\n2017-12-12  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n        PR libgfortran/78549\n        * io/inquire.c (inquire_via_unit): Adjust test for existence for\n        pre-connected internal units.\n        * io/transfer.c (finalize_transfer): When done with a transfer\n        to internal units, free the format buffer and close the stream.\n        (st_read_done): Delete freeing the stream, now handled using\n        sclose in finalize_transfer. (st_write_done): Likewise.\n        * io/unit.c (get_unit): Return NULL for special reserved unit\n        numbers, signifying not accessible to the user.\n        (init_units): Insert the two special internal units into the\n        unit treap. This makes these unit structures available without\n        further allocations for later use by internal unit I/O. These\n        units are automatically deleted by normal program termination.\n        * io/unix.c (mem_close): Add a guard check to protect from double free.\n\nFrom-SVN: r255621", "tree": {"sha": "5f68781b01180ebf39912f3254d5c1028b162c6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f68781b01180ebf39912f3254d5c1028b162c6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/606778c6f55c4df1f247097f4b73d2c551ff4889", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/606778c6f55c4df1f247097f4b73d2c551ff4889", "html_url": "https://github.com/Rust-GCC/gccrs/commit/606778c6f55c4df1f247097f4b73d2c551ff4889", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/606778c6f55c4df1f247097f4b73d2c551ff4889/comments", "author": null, "committer": null, "parents": [{"sha": "e69319afa646a9aba9eac5a8c16f9e7883f210e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e69319afa646a9aba9eac5a8c16f9e7883f210e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e69319afa646a9aba9eac5a8c16f9e7883f210e6"}], "stats": {"total": 52, "additions": 44, "deletions": 8}, "files": [{"sha": "ee2f7a6fd2b0b7294281e6b1eca8a13623a63cc9", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/606778c6f55c4df1f247097f4b73d2c551ff4889/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/606778c6f55c4df1f247097f4b73d2c551ff4889/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=606778c6f55c4df1f247097f4b73d2c551ff4889", "patch": "@@ -1,3 +1,20 @@\n+2017-12-12  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/78549\n+\t* io/inquire.c (inquire_via_unit): Adjust test for existence for\n+\tpre-connected internal units.\n+\t* io/transfer.c (finalize_transfer): When done with a transfer\n+\tto internal units, free the format buffer and close the stream.\n+\t(st_read_done): Delete freeing the stream, now handled using\n+\tsclose in finalize_transfer. (st_write_done): Likewise.\n+\t* io/unit.c (get_unit): Return NULL for special reserved unit\n+\tnumbers, signifying not accessible to the user.\n+\t(init_units): Insert the two special internal units into the\n+\tunit treap. This makes these unit structures available without\n+\tfurther allocations for later use by internal unit I/O. These\n+\tunits are automatically deleted by normal program termination.\n+\t* io/unix.c (mem_close): Add a guard check to protect from double free.\n+\n 2017-12-03  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/36313"}, {"sha": "6ba1224d77c0e9cf7e0ab4aa3fb08db068fb5592", "filename": "libgfortran/io/inquire.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/606778c6f55c4df1f247097f4b73d2c551ff4889/libgfortran%2Fio%2Finquire.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/606778c6f55c4df1f247097f4b73d2c551ff4889/libgfortran%2Fio%2Finquire.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Finquire.c?ref=606778c6f55c4df1f247097f4b73d2c551ff4889", "patch": "@@ -47,7 +47,10 @@ inquire_via_unit (st_parameter_inquire *iqp, gfc_unit *u)\n     generate_error (&iqp->common, LIBERROR_INQUIRE_INTERNAL_UNIT, NULL);\n \n   if ((cf & IOPARM_INQUIRE_HAS_EXIST) != 0)\n-    *iqp->exist = (u != NULL) || (iqp->common.unit >= 0);\n+    *iqp->exist = (u != NULL &&\n+\t\t   iqp->common.unit != GFC_INTERNAL_UNIT &&\n+\t\t   iqp->common.unit != GFC_INTERNAL_UNIT4)\n+\t\t|| (iqp->common.unit >= 0);\n \n   if ((cf & IOPARM_INQUIRE_HAS_OPENED) != 0)\n     *iqp->opened = (u != NULL);"}, {"sha": "211dc34975043d562f2bacbc4e5add45b1b6aa06", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/606778c6f55c4df1f247097f4b73d2c551ff4889/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/606778c6f55c4df1f247097f4b73d2c551ff4889/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=606778c6f55c4df1f247097f4b73d2c551ff4889", "patch": "@@ -3985,6 +3985,19 @@ finalize_transfer (st_parameter_dt *dtp)\n   next_record (dtp, 1);\n \n  done:\n+\n+  if (dtp->u.p.unit_is_internal)\n+    {\n+      fbuf_destroy (dtp->u.p.current_unit);\n+      if (dtp->u.p.current_unit\n+\t  && (dtp->u.p.current_unit->child_dtio  == 0)\n+\t  && dtp->u.p.current_unit->s)\n+\t{\n+\t  sclose (dtp->u.p.current_unit->s);\n+\t  dtp->u.p.current_unit->s = NULL;\n+\t}\n+    }\n+\n #ifdef HAVE_USELOCALE\n   if (dtp->u.p.old_locale != (locale_t) 0)\n     {\n@@ -4094,8 +4107,6 @@ st_read_done (st_parameter_dt *dtp)\n \t    {\n \t      free (dtp->u.p.current_unit->filename);\n \t      dtp->u.p.current_unit->filename = NULL;\n-\t      free (dtp->u.p.current_unit->s);\n-\t      dtp->u.p.current_unit->s = NULL;\n \t      if (dtp->u.p.current_unit->ls)\n \t\tfree (dtp->u.p.current_unit->ls);\n \t      dtp->u.p.current_unit->ls = NULL;\n@@ -4165,8 +4176,6 @@ st_write_done (st_parameter_dt *dtp)\n \t    {\n \t      free (dtp->u.p.current_unit->filename);\n \t      dtp->u.p.current_unit->filename = NULL;\n-\t      free (dtp->u.p.current_unit->s);\n-\t      dtp->u.p.current_unit->s = NULL;\n \t      if (dtp->u.p.current_unit->ls)\n \t\tfree (dtp->u.p.current_unit->ls);\n \t      dtp->u.p.current_unit->ls = NULL;"}, {"sha": "2ca8525fbec465f2c62aa5cee84038e0d055154a", "filename": "libgfortran/io/unit.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/606778c6f55c4df1f247097f4b73d2c551ff4889/libgfortran%2Fio%2Funit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/606778c6f55c4df1f247097f4b73d2c551ff4889/libgfortran%2Fio%2Funit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funit.c?ref=606778c6f55c4df1f247097f4b73d2c551ff4889", "patch": "@@ -566,7 +566,11 @@ get_unit (st_parameter_dt *dtp, int do_create)\n      is not allowed, such units must be created with\n      OPEN(NEWUNIT=...).  */\n   if (dtp->common.unit < 0)\n-    return get_gfc_unit (dtp->common.unit, 0);\n+    {\n+      if (dtp->common.unit > NEWUNIT_START) /* Reserved units.  */\n+\treturn NULL;\n+      return get_gfc_unit (dtp->common.unit, 0);\n+    }\n \n   return get_gfc_unit (dtp->common.unit, do_create);\n }\n@@ -701,6 +705,9 @@ init_units (void)\n \n       __gthread_mutex_unlock (&u->lock);\n     }\n+  /* The default internal units.  */\n+  u = insert_unit (GFC_INTERNAL_UNIT);\n+  u = insert_unit (GFC_INTERNAL_UNIT4);\n }\n \n "}, {"sha": "a07a3c9cea80c97391bddeeecadc98785efe8e1c", "filename": "libgfortran/io/unix.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/606778c6f55c4df1f247097f4b73d2c551ff4889/libgfortran%2Fio%2Funix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/606778c6f55c4df1f247097f4b73d2c551ff4889/libgfortran%2Fio%2Funix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.c?ref=606778c6f55c4df1f247097f4b73d2c551ff4889", "patch": "@@ -962,8 +962,8 @@ mem_flush (unix_stream *s __attribute__ ((unused)))\n static int\n mem_close (unix_stream *s)\n {\n-  free (s);\n-\n+  if (s)\n+    free (s);\n   return 0;\n }\n "}]}