{"sha": "f080def5134dc47dcb997778a35858f208c2c393", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA4MGRlZjUxMzRkYzQ3ZGNiOTk3Nzc4YTM1ODU4ZjIwOGMyYzM5Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-07-17T09:49:48Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-07-17T09:49:48Z"}, "message": "[multiple changes]\n\n2012-07-17  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch9.adb: Minor code reorganization.\n\t* exp_ch3.adb: Minor code improvement.\n\n2012-07-17  Tristan Gingold  <gingold@adacore.com>\n\n\t* seh_init.c (__gnat_SEH_error_handler): Not compiled anymore\n\ton Windows 64 (+ SEH), as it is unused.\n\n2012-07-17  Tristan Gingold  <gingold@adacore.com>\n\n\t* treepr.ads (psloc): Declare.\n\t* treepr.adb (psloc): New debug procedure to print a sloc.\n\t(Print_Sloc): New procedure, from ...\n\t(Print_Node_Subtree): ... this.  Call Print_Sloc.\n\n2012-07-17  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_prag.adb (CPP_Class): Transform obsolescent pragma CPP_Class into\n\tCPP convention automatically.\n\nFrom-SVN: r189566", "tree": {"sha": "ca28973deac660af91e6de4aba33237e1ac95b34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca28973deac660af91e6de4aba33237e1ac95b34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f080def5134dc47dcb997778a35858f208c2c393", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f080def5134dc47dcb997778a35858f208c2c393", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f080def5134dc47dcb997778a35858f208c2c393", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f080def5134dc47dcb997778a35858f208c2c393/comments", "author": null, "committer": null, "parents": [{"sha": "2767f2cc5cc916f4a99cbfd510cf5a5454c54221", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2767f2cc5cc916f4a99cbfd510cf5a5454c54221", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2767f2cc5cc916f4a99cbfd510cf5a5454c54221"}], "stats": {"total": 147, "additions": 102, "deletions": 45}, "files": [{"sha": "09bd2d8e239e819911d936f19cd2772f3750cb6d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f080def5134dc47dcb997778a35858f208c2c393/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f080def5134dc47dcb997778a35858f208c2c393/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f080def5134dc47dcb997778a35858f208c2c393", "patch": "@@ -1,3 +1,25 @@\n+2012-07-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch9.adb: Minor code reorganization.\n+\t* exp_ch3.adb: Minor code improvement.\n+\n+2012-07-17  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* seh_init.c (__gnat_SEH_error_handler): Not compiled anymore\n+\ton Windows 64 (+ SEH), as it is unused.\n+\n+2012-07-17  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* treepr.ads (psloc): Declare.\n+\t* treepr.adb (psloc): New debug procedure to print a sloc.\n+\t(Print_Sloc): New procedure, from ...\n+\t(Print_Node_Subtree): ... this.  Call Print_Sloc.\n+\n+2012-07-17  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_prag.adb (CPP_Class): Transform obsolescent pragma CPP_Class into\n+\tCPP convention automatically.\n+\n 2012-07-16  Tristan Gingold  <gingold@adacore.com>\n \n \t* gcc-interface/decl.c (intrin_return_compatible_p): Map Address to"}, {"sha": "978e1b8ec4697fb222affa301fba590e81c4c9cc", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f080def5134dc47dcb997778a35858f208c2c393/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f080def5134dc47dcb997778a35858f208c2c393/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=f080def5134dc47dcb997778a35858f208c2c393", "patch": "@@ -3128,7 +3128,7 @@ package body Exp_Ch3 is\n          --  to make it a valid Ada tree.\n \n          if Is_Empty_List (Stmts) then\n-            Append (New_Node (N_Null_Statement, Loc), Stmts);\n+            Append (Make_Null_Statement (Loc), Stmts);\n          end if;\n \n          return Stmts;"}, {"sha": "6f37b78522c14cd480ce80a8fdef68244c774026", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 18, "deletions": 20, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f080def5134dc47dcb997778a35858f208c2c393/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f080def5134dc47dcb997778a35858f208c2c393/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=f080def5134dc47dcb997778a35858f208c2c393", "patch": "@@ -5486,7 +5486,7 @@ package body Exp_Ch9 is\n    procedure Ensure_Statement_Present (Loc : Source_Ptr; Alt : Node_Id) is\n    begin\n       if Opt.Suppress_Control_Flow_Optimizations\n-           and then Is_Empty_List (Statements (Alt))\n+        and then Is_Empty_List (Statements (Alt))\n       then\n          Set_Statements (Alt, New_List (Make_Null_Statement (Loc)));\n       end if;\n@@ -7674,7 +7674,6 @@ package body Exp_Ch9 is\n          if Present (Unpack) then\n             Append_To (Conc_Typ_Stmts,\n               Make_Implicit_If_Statement (N,\n-\n                 Condition =>\n                   Make_Or_Else (Loc,\n                     Left_Opnd =>\n@@ -7684,15 +7683,15 @@ package body Exp_Ch9 is\n                         Right_Opnd =>\n                           New_Reference_To (RTE (\n                             RE_POK_Protected_Entry), Loc)),\n+\n                     Right_Opnd =>\n                       Make_Op_Eq (Loc,\n                         Left_Opnd =>\n                           New_Reference_To (C, Loc),\n                         Right_Opnd =>\n                           New_Reference_To (RTE (RE_POK_Task_Entry), Loc))),\n \n-                 Then_Statements =>\n-                   Unpack));\n+                Then_Statements => Unpack));\n          end if;\n \n          --  Generate:\n@@ -10299,31 +10298,29 @@ package body Exp_Ch9 is\n          Index : Int;\n          Proc  : Node_Id)\n       is\n-         Choices   : List_Id := No_List;\n          Astmt     : constant Node_Id := Accept_Statement (Alt);\n+         Choices   : List_Id;\n          Alt_Stats : List_Id;\n \n       begin\n          Adjust_Condition (Condition (Alt));\n-         Alt_Stats := No_List;\n+         Choices := New_List (Make_Integer_Literal (Loc, Index));\n \n-         if Present (Handled_Statement_Sequence (Astmt)) then\n-            Choices := New_List (\n-              Make_Integer_Literal (Loc, Index));\n-\n-            Alt_Stats := New_List (\n-              Make_Procedure_Call_Statement (Sloc (Proc),\n-                Name => New_Reference_To (\n-                  Defining_Unit_Name (Specification (Proc)), Sloc (Proc))));\n-         end if;\n+         --  Accept with body\n \n-         if No (Alt_Stats) then\n-\n-            --  Accept with no body, followed by trailing statements\n+         if Present (Handled_Statement_Sequence (Astmt)) then\n+            Alt_Stats :=\n+              New_List (\n+                Make_Procedure_Call_Statement (Sloc (Proc),\n+                  Name =>\n+                    New_Reference_To\n+                      (Defining_Unit_Name (Specification (Proc)),\n+                       Sloc (Proc))));\n \n-            Choices := New_List (Make_Integer_Literal (Loc, Index));\n+         --  Accept with no body (followed by trailing statements)\n \n-            Alt_Stats := New_List;\n+         else\n+            Alt_Stats := Empty_List;\n          end if;\n \n          Ensure_Statement_Present (Sloc (Astmt), Alt);\n@@ -10339,6 +10336,7 @@ package body Exp_Ch9 is\n             Append_To (Trailing_List,\n               Make_Goto_Statement (Loc,\n                 Name => New_Copy (Identifier (End_Lab))));\n+\n          else\n             Lab := End_Lab;\n          end if;"}, {"sha": "772dab0aa8424951792f4fa02225f19efd98a7ad", "filename": "gcc/ada/seh_init.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f080def5134dc47dcb997778a35858f208c2c393/gcc%2Fada%2Fseh_init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f080def5134dc47dcb997778a35858f208c2c393/gcc%2Fada%2Fseh_init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fseh_init.c?ref=f080def5134dc47dcb997778a35858f208c2c393", "patch": "@@ -169,9 +169,11 @@ __gnat_map_SEH (EXCEPTION_RECORD* ExceptionRecord, const char **msg)\n     }\n }\n \n+#if !(defined (_WIN64) && defined (__SEH__))\n+\n EXCEPTION_DISPOSITION\n __gnat_SEH_error_handler (struct _EXCEPTION_RECORD* ExceptionRecord,\n-\t\t\t  void *EstablisherFrame,\n+\t\t\t  void *EstablisherFrame ATTRIBUTE_UNUSED,\n \t\t\t  struct _CONTEXT* ContextRecord ATTRIBUTE_UNUSED,\n \t\t\t  void *DispatcherContext ATTRIBUTE_UNUSED)\n {\n@@ -182,14 +184,8 @@ __gnat_SEH_error_handler (struct _EXCEPTION_RECORD* ExceptionRecord,\n \n   if (exception == NULL)\n     {\n-#if defined (_WIN64) && defined (__SEH__)\n-      /* On Windows x64, do not transform other exception as they could\n-\t be caught by user (when SEH is used to propagate exceptions).  */\n-      return;\n-#else\n       exception = &program_error;\n       msg = \"unhandled signal\";\n-#endif\n     }\n \n #if ! defined (_WIN64)\n@@ -204,6 +200,7 @@ __gnat_SEH_error_handler (struct _EXCEPTION_RECORD* ExceptionRecord,\n   Raise_From_Signal_Handler (exception, msg);\n   return 0; /* This is never reached, avoid compiler warning  */\n }\n+#endif /* !(defined (_WIN64) && defined (__SEH__)) */\n \n #if defined (_WIN64)\n /*  On x86_64 windows exception mechanism is no more based on a chained list"}, {"sha": "72f3cf1d39fb5c92ea91c876c00b5f12956c3be2", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f080def5134dc47dcb997778a35858f208c2c393/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f080def5134dc47dcb997778a35858f208c2c393/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=f080def5134dc47dcb997778a35858f208c2c393", "patch": "@@ -7665,6 +7665,19 @@ package body Sem_Prag is\n                  (\"'G'N'A'T pragma cpp'_class is now obsolete and has no \" &\n                   \"effect; replace it by pragma import?\", N);\n             end if;\n+\n+            Check_Arg_Count (1);\n+\n+            Rewrite (N,\n+              Make_Pragma (Loc,\n+                Chars => Name_Import,\n+                Pragma_Argument_Associations =>\n+                  New_List (\n+                    Make_Pragma_Argument_Association (Loc,\n+                      Expression => Make_Identifier (Loc, Name_CPP)),\n+                    New_Copy\n+                      (First (Pragma_Argument_Associations (N))))));\n+            Analyze (N);\n          end CPP_Class;\n \n          ---------------------"}, {"sha": "5791d3e5d6fb74619cb1774f974ebc343a4f4b40", "filename": "gcc/ada/treepr.adb", "status": "modified", "additions": 39, "deletions": 16, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f080def5134dc47dcb997778a35858f208c2c393/gcc%2Fada%2Ftreepr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f080def5134dc47dcb997778a35858f208c2c393/gcc%2Fada%2Ftreepr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftreepr.adb?ref=f080def5134dc47dcb997778a35858f208c2c393", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -188,6 +188,9 @@ package body Treepr is\n    --  level and the bars used to link list elements). In addition, for lines\n    --  other than the first, an additional character Prefix_Char is output.\n \n+   procedure Print_Sloc (Loc : Source_Ptr);\n+   --  Print the human readable representation of Loc\n+\n    function Serial_Number (Id : Int) return Nat;\n    --  Given a Node_Id, List_Id or Elist_Id, returns the previously assigned\n    --  serial number, or zero if no serial number has yet been assigned.\n@@ -887,7 +890,6 @@ package body Treepr is\n       Field_To_Be_Printed : Boolean;\n       Prefix_Str_Char     : String (Prefix_Str'First .. Prefix_Str'Last + 1);\n \n-      Sfile : Source_File_Index;\n       Fmt   : UI_Format;\n \n    begin\n@@ -933,20 +935,7 @@ package body Treepr is\n          Print_Str (Prefix_Str_Char);\n          Print_Str (\"Sloc = \");\n \n-         if Sloc (N) = Standard_Location then\n-            Print_Str (\"Standard_Location\");\n-\n-         elsif Sloc (N) = Standard_ASCII_Location then\n-            Print_Str (\"Standard_ASCII_Location\");\n-\n-         else\n-            Sfile := Get_Source_File_Index (Sloc (N));\n-            Print_Int (Int (Sloc (N)) - Int (Source_Text (Sfile)'First));\n-            Write_Str (\"  \");\n-            Write_Location (Sloc (N));\n-         end if;\n-\n-         Print_Eol;\n+         Print_Sloc (Sloc (N));\n       end if;\n \n       --  Print Chars field if present\n@@ -1397,6 +1386,30 @@ package body Treepr is\n       Print_Term;\n    end Print_Node_Subtree;\n \n+   ----------------\n+   -- Print_Sloc --\n+   ----------------\n+\n+   procedure Print_Sloc (Loc : Source_Ptr) is\n+      Sfile : Source_File_Index;\n+\n+   begin\n+      if Loc = Standard_Location then\n+         Print_Str (\"Standard_Location\");\n+\n+      elsif Loc = Standard_ASCII_Location then\n+         Print_Str (\"Standard_ASCII_Location\");\n+\n+      else\n+         Sfile := Get_Source_File_Index (Loc);\n+         Print_Int (Int (Loc) - Int (Source_Text (Sfile)'First));\n+         Write_Str (\"  \");\n+         Write_Location (Loc);\n+      end if;\n+\n+      Print_Eol;\n+   end Print_Sloc;\n+\n    ---------------\n    -- Print_Str --\n    ---------------\n@@ -1524,6 +1537,16 @@ package body Treepr is\n       Print_Node (N, Label, ' ');\n    end Print_Tree_Node;\n \n+   -----------\n+   -- psloc --\n+   -----------\n+\n+   procedure psloc (Loc : Source_Ptr) is\n+   begin\n+      Phase := Printing;\n+      Print_Sloc (Loc);\n+   end psloc;\n+\n    --------\n    -- pt --\n    --------"}, {"sha": "700f3de6a39aecb187e0b4904ebf4592986f8330", "filename": "gcc/ada/treepr.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f080def5134dc47dcb997778a35858f208c2c393/gcc%2Fada%2Ftreepr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f080def5134dc47dcb997778a35858f208c2c393/gcc%2Fada%2Ftreepr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftreepr.ads?ref=f080def5134dc47dcb997778a35858f208c2c393", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -71,6 +71,10 @@ package Treepr is\n    pragma Export (Ada, ppp);\n    --  Same as Print_Node_Subtree\n \n+   procedure psloc (Loc : Source_Ptr);\n+   pragma Export (Ada, psloc);\n+   --  Prints the sloc Loc\n+\n    --  The following are no longer needed; you can use pp or ppp instead\n \n    procedure pe (E : Elist_Id);"}]}