{"sha": "1ff54bfbdbfd76a6cc058404d9be7ec934e7d10a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZmNTRiZmJkYmZkNzZhNmNjMDU4NDA0ZDliZTdlYzkzNGU3ZDEwYQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2005-07-08T19:11:55Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-07-08T19:11:55Z"}, "message": "re PR regression/20139 (cris-elf testsuite: gcc.c-torture/execute/20020720-1.c)\n\n\tPR tree-optimization/20139\n\t* tree-cfg.c (remove_bb): Check in_ssa_p before calling\n\trelease_defs.\n\t* tree-optimize.c (execute_cleanup_cfg_post_optimizing): Call\n\tfold_cond_expr_cond.\n\t* tree-ssanames.c (release_defs): Assert in_ssa_p.\n\t* tree.c (upper_bound_in_type, lower_bound_in_type): Rewrite.\n\nFrom-SVN: r101787", "tree": {"sha": "4c1ab0966a4b31bb8348a8c1f209ef546193bbac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c1ab0966a4b31bb8348a8c1f209ef546193bbac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ff54bfbdbfd76a6cc058404d9be7ec934e7d10a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ff54bfbdbfd76a6cc058404d9be7ec934e7d10a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ff54bfbdbfd76a6cc058404d9be7ec934e7d10a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ff54bfbdbfd76a6cc058404d9be7ec934e7d10a/comments", "author": null, "committer": null, "parents": [{"sha": "ea9a5df4c2a5ff983a3099d846e8861375c47f53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea9a5df4c2a5ff983a3099d846e8861375c47f53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea9a5df4c2a5ff983a3099d846e8861375c47f53"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "adceec9b3108df08637da8c1404b31a2b4affffc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ff54bfbdbfd76a6cc058404d9be7ec934e7d10a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ff54bfbdbfd76a6cc058404d9be7ec934e7d10a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1ff54bfbdbfd76a6cc058404d9be7ec934e7d10a", "patch": "@@ -7,6 +7,14 @@\n \t(lower_bound_in_type): Fix calculations for casting to a\n \tnon-wider signed type.\n \n+\tPR tree-optimization/20139\n+\t* tree-cfg.c (remove_bb): Check in_ssa_p before calling\n+\trelease_defs.\n+\t* tree-optimize.c (execute_cleanup_cfg_post_optimizing): Call\n+\tfold_cond_expr_cond.\n+\t* tree-ssanames.c (release_defs): Assert in_ssa_p.\n+\t* tree.c (upper_bound_in_type, lower_bound_in_type): Rewrite.\n+\n 2005-07-08  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR tree-opt/22356"}, {"sha": "862e457baff8731fd2d71f382a725a906b21b570", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ff54bfbdbfd76a6cc058404d9be7ec934e7d10a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ff54bfbdbfd76a6cc058404d9be7ec934e7d10a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1ff54bfbdbfd76a6cc058404d9be7ec934e7d10a", "patch": "@@ -1,3 +1,8 @@\n+2005-07-08  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\tPR tree-optimization/20139\n+\t* gcc.dg/tree-ssa/pr20139.c: New.\n+\n 2005-07-08  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR tree-opt/22356"}, {"sha": "054e4b2081c3ebb96f7c5ee4039128f89a2e981a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr20139.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ff54bfbdbfd76a6cc058404d9be7ec934e7d10a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20139.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ff54bfbdbfd76a6cc058404d9be7ec934e7d10a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20139.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20139.c?ref=1ff54bfbdbfd76a6cc058404d9be7ec934e7d10a", "patch": "@@ -0,0 +1,23 @@\n+/* PR tree-optimization/20139\n+   This testcase is derived from gcc.dg/20020720-1.c.  Here we check\n+   that the optimization happens at tree level.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-final_cleanup\" } */\n+\n+extern double fabs (double);\n+extern void link_error (void);\n+\n+void\n+foo (double x)\n+{\n+  double p, q;\n+\n+  p = fabs (x);\n+  q = 0.0;\n+  if (p < q)\n+    link_error ();\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"link_error\" 0 \"final_cleanup\" } } */\n+/* { dg-final { cleanup-tree-dump \"final_cleanup\" } } */"}, {"sha": "bfbf5a5fd802a28a8b7d19b4f2026d738df328c1", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ff54bfbdbfd76a6cc058404d9be7ec934e7d10a/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ff54bfbdbfd76a6cc058404d9be7ec934e7d10a/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=1ff54bfbdbfd76a6cc058404d9be7ec934e7d10a", "patch": "@@ -1981,7 +1981,12 @@ remove_bb (basic_block bb)\n \t}\n       else\n         {\n-\t  release_defs (stmt);\n+\t  /* Release SSA definitions if we are in SSA.  Note that we\n+\t     may be called when not in SSA.  For example,\n+\t     final_cleanup calls this function via\n+\t     cleanup_tree_cfg.  */\n+\t  if (in_ssa_p)\n+\t    release_defs (stmt);\n \n \t  bsi_remove (&i);\n \t}"}, {"sha": "c29c3c6a422b6ae474f737c861fa232a68d078f9", "filename": "gcc/tree-optimize.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ff54bfbdbfd76a6cc058404d9be7ec934e7d10a/gcc%2Ftree-optimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ff54bfbdbfd76a6cc058404d9be7ec934e7d10a/gcc%2Ftree-optimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-optimize.c?ref=1ff54bfbdbfd76a6cc058404d9be7ec934e7d10a", "patch": "@@ -132,6 +132,7 @@ struct tree_opt_pass pass_cleanup_cfg =\n static void \n execute_cleanup_cfg_post_optimizing (void)\n {\n+  fold_cond_expr_cond ();\n   cleanup_tree_cfg ();\n   cleanup_dead_labels ();\n   group_case_labels ();"}, {"sha": "f794eaec6be7bc1ce4f7ad54257af5694ced3f2f", "filename": "gcc/tree-ssanames.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ff54bfbdbfd76a6cc058404d9be7ec934e7d10a/gcc%2Ftree-ssanames.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ff54bfbdbfd76a6cc058404d9be7ec934e7d10a/gcc%2Ftree-ssanames.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssanames.c?ref=1ff54bfbdbfd76a6cc058404d9be7ec934e7d10a", "patch": "@@ -289,6 +289,10 @@ release_defs (tree stmt)\n   tree def;\n   ssa_op_iter iter;\n \n+  /* Make sure that we are in SSA.  Otherwise, operand cache may point\n+     to garbage.  */\n+  gcc_assert (in_ssa_p);\n+\n   FOR_EACH_SSA_TREE_OPERAND (def, stmt, iter, SSA_OP_ALL_DEFS)\n     if (TREE_CODE (def) == SSA_NAME)\n       release_ssa_name (def);"}]}