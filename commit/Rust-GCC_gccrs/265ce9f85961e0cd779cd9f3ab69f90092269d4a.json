{"sha": "265ce9f85961e0cd779cd9f3ab69f90092269d4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY1Y2U5Zjg1OTYxZTBjZDc3OWNkOWYzYWI2OWY5MDA5MjI2OWQ0YQ==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-10-16T14:46:08Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-10-16T14:46:08Z"}, "message": "(libobjc.a): Compute srcdir1 without changing directories.\n\n(libobjc.a):  Compute srcdir1 without changing\n\tdirectories.  Use srcdir1 to locate objc/Makefile.  Put quotes\n\taround all potential multi-word values.  Recompute GCC_FOR_TARGET.\n\t(sublibobjc.a): Use same text as libobjc.a.\n\t(mostlyclean): Use $(MAKE) and srcdir1 for objc action.\n\nFrom-SVN: r2491", "tree": {"sha": "94fc374d7885fcb581f2dc9f93b0deea93be3649", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94fc374d7885fcb581f2dc9f93b0deea93be3649"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/265ce9f85961e0cd779cd9f3ab69f90092269d4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/265ce9f85961e0cd779cd9f3ab69f90092269d4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/265ce9f85961e0cd779cd9f3ab69f90092269d4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/265ce9f85961e0cd779cd9f3ab69f90092269d4a/comments", "author": null, "committer": null, "parents": [{"sha": "2740a6786b2b8ffd42f4c3efc8dfa40381a91b48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2740a6786b2b8ffd42f4c3efc8dfa40381a91b48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2740a6786b2b8ffd42f4c3efc8dfa40381a91b48"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "202682840fe6e1729fabb8469827f3dd68e20502", "filename": "gcc/Makefile.in", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265ce9f85961e0cd779cd9f3ab69f90092269d4a/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265ce9f85961e0cd779cd9f3ab69f90092269d4a/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=265ce9f85961e0cd779cd9f3ab69f90092269d4a", "patch": "@@ -664,20 +664,24 @@ objc-runtime: libobjc.a\n # Build the Objective C runtime library.  Build the Objc compiler first!\n libobjc.a: cc1obj libgcc2.ready\n \tthisdir1=`pwd`; \\\n-\tcd $(srcdir); srcdir1=`pwd`; \\\n+\tsrcdir1=`cd $(srcdir); pwd`; \\\n \tcd objc; \\\n-\t$(MAKE) $(MAKEFLAGS) -f $(srcdir)/objc/Makefile libobjc.a \\\n-\t  srcdir=$$srcdir1 tooldir=$(tooldir) AR=$(AR) AR_FLAGS=$(AR_FLAGS) \\\n-\t  GCC_FOR_TARGET=$$thisdir1/$(GCC_FOR_TARGET) \\\n+\t$(MAKE) $(MAKEFLAGS) -f $$srcdir1/objc/Makefile libobjc.a \\\n+\t  srcdir=$$srcdir1 tooldir=$(tooldir) AR=\"$(AR)\" AR_FLAGS=\"$(AR_FLAGS)\" \\\n+\t  GCC_FOR_TARGET=\"$$thisdir1/xgcc -B$$thisdir1/\" \\\n \t  GCC_CFLAGS=\"$(GCC_CFLAGS)\"\n \tln objc/libobjc.a .\n \t-if $(RANLIB_TEST) ; then $(RANLIB) libobjc.a; else true; fi\n \n # This is used by objc/Makefile if the user runs that directly.\n sublibobjc.a: cc1obj libgcc2.ready\n-\tcd objc; make $(MAKEFLAGS) -f $(srcdir)/objc/Makefile libobjc.a \\\n-\t  srcdir=$(srcdir) tooldir=$(tooldir) AR=$(AR) AR_FLAGS=$(AR_FLAGS) \\\n-\t  GCC_FOR_TARGET=$(GCC_FOR_TARGET) GCC_CFLAGS=$(GCC_CFLAGS)\n+\tthisdir1=`pwd`; \\\n+\tsrcdir1=`cd $(srcdir); pwd`; \\\n+\tcd objc; \\\n+\t$(MAKE) $(MAKEFLAGS) -f $$srcdir1/objc/Makefile libobjc.a \\\n+\t  srcdir=$$srcdir1 tooldir=$(tooldir) AR=\"$(AR)\" AR_FLAGS=\"$(AR_FLAGS)\" \\\n+\t  GCC_FOR_TARGET=\"$$thisdir1/xgcc -B$$thisdir1/\" \\\n+\t  GCC_CFLAGS=\"$(GCC_CFLAGS)\"\n \n # Compile two additional files that are linked with every program\n # linked using GCC on system V, for the sake of C++ constructors.\n@@ -1256,7 +1260,8 @@ $(srcdir)/INSTALL: install1.texi install.texi\n mostlyclean:\n \t-rm -f $(STAGESTUFF)\n # Clean the objc subdir.\n-\tcd objc; make $(MAKEFLAGS) -f $(srcdir)/objc/Makefile mostlyclean\n+\tsrcdir1=`cd $(srcdir); pwd`; \\\n+\tcd objc; $(MAKE) $(MAKEFLAGS) -f $$srcdir1/objc/Makefile mostlyclean\n # Delete the temporary source copies for cross compilation.\n \t-rm -f $(HOST_PREFIX_1)rtl.c $(HOST_PREFIX_1)rtlanal.c\n \t-rm -f $(HOST_PREFIX_1)alloca.c $(HOST_PREFIX_1)malloc.c"}]}