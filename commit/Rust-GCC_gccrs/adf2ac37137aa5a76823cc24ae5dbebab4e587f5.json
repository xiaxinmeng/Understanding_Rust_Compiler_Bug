{"sha": "adf2ac37137aa5a76823cc24ae5dbebab4e587f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRmMmFjMzcxMzdhYTVhNzY4MjNjYzI0YWU1ZGJlYmFiNGU1ODdmNQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-10-04T02:19:40Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-10-04T02:19:40Z"}, "message": "m68k.h (OVERRIDE_OPTIONS): Move additional code ...\n\n        * config/m68k/m68k.h (OVERRIDE_OPTIONS): Move additional code ...\n        * config/m68k/m68k.c (override_options): ... here.\n        * config/m68k/m68kelf.h (OVERRIDE_OPTIONS): Remove.\n        * config/m68k/m68kv4.h (OVERRIDE_OPTIONS): Remove.\n        * config/m68k/linux.h (SUBTARGET_OVERRIDE_OPTIONS): Remove.\n        * config/m68k/netbsd-elf.h (SUBTARGET_OVERRIDE_OPTIONS): Remove.\n\nFrom-SVN: r57797", "tree": {"sha": "83b1c680e0b8353f9185997e90b74e3512f4e6f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83b1c680e0b8353f9185997e90b74e3512f4e6f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/adf2ac37137aa5a76823cc24ae5dbebab4e587f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adf2ac37137aa5a76823cc24ae5dbebab4e587f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adf2ac37137aa5a76823cc24ae5dbebab4e587f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adf2ac37137aa5a76823cc24ae5dbebab4e587f5/comments", "author": null, "committer": null, "parents": [{"sha": "a751939354133549cd3ddd16a0f529b75c4dc979", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a751939354133549cd3ddd16a0f529b75c4dc979", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a751939354133549cd3ddd16a0f529b75c4dc979"}], "stats": {"total": 87, "additions": 31, "deletions": 56}, "files": [{"sha": "c15ccb72daac8430e4d52df77b5ffceccf098aa7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adf2ac37137aa5a76823cc24ae5dbebab4e587f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adf2ac37137aa5a76823cc24ae5dbebab4e587f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=adf2ac37137aa5a76823cc24ae5dbebab4e587f5", "patch": "@@ -1,3 +1,12 @@\n+2002-10-03  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/m68k/m68k.h (OVERRIDE_OPTIONS): Move additional code ...\n+\t* config/m68k/m68k.c (override_options): ... here.\n+\t* config/m68k/m68kelf.h (OVERRIDE_OPTIONS): Remove.\n+\t* config/m68k/m68kv4.h (OVERRIDE_OPTIONS): Remove.\n+\t* config/m68k/linux.h (SUBTARGET_OVERRIDE_OPTIONS): Remove.\n+\t* config/m68k/netbsd-elf.h (SUBTARGET_OVERRIDE_OPTIONS): Remove.\n+\n 2002-10-03  Richard Henderson  <rth@redhat.com>\n \n \t* real.h (struct real_value): Use ENUM_BITFIELD."}, {"sha": "2778d27f5f7e3f8d22f7d8600755ff5f77ee9cfc", "filename": "gcc/config/m68k/linux.h", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adf2ac37137aa5a76823cc24ae5dbebab4e587f5/gcc%2Fconfig%2Fm68k%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adf2ac37137aa5a76823cc24ae5dbebab4e587f5/gcc%2Fconfig%2Fm68k%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux.h?ref=adf2ac37137aa5a76823cc24ae5dbebab4e587f5", "patch": "@@ -315,15 +315,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n    || (GET_CODE (X) == SYMBOL_REF && SYMBOL_REF_FLAG (X))       \t\\\n    || PCREL_GENERAL_OPERAND_OK)\n \n-/* Turn off function cse if we are doing PIC. We always want function\n-   call to be done as `bsr foo@PLTPC', so it will force the assembler\n-   to create the PLT entry for `foo'.  Doing function cse will cause\n-   the address of `foo' to be loaded into a register, which is exactly\n-   what we want to avoid when we are doing PIC on svr4 m68k.  */\n-#undef SUBTARGET_OVERRIDE_OPTIONS\n-#define SUBTARGET_OVERRIDE_OPTIONS \\\n-  if (flag_pic) flag_no_function_cse = 1;\n-\n /* For m68k SVR4, structures are returned using the reentrant\n    technique.  */\n #undef PCC_STATIC_STRUCT_RETURN"}, {"sha": "fc635fb9aa823c62e7fc82d5cde08156aea8f8dd", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adf2ac37137aa5a76823cc24ae5dbebab4e587f5/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adf2ac37137aa5a76823cc24ae5dbebab4e587f5/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=adf2ac37137aa5a76823cc24ae5dbebab4e587f5", "patch": "@@ -175,6 +175,27 @@ override_options ()\n \tm68k_align_funcs = i;\n     }\n \n+  /* -fPIC uses 32-bit pc-relative displacements, which don't exist\n+     until the 68020.  */\n+  if (! TARGET_68020 && flag_pic == 2)\n+    error(\"-fPIC is not currently supported on the 68000 or 68010\\n\");\n+\n+  /* ??? A historic way of turning on pic, or is this intended to\n+     be an embedded thing that doesn't have the same name binding\n+     significance that it does on hosted ELF systems?  */\n+  if (TARGET_PCREL && flag_pic == 0)\n+    flag_pic = 1;\n+\n+  /* Turn off function cse if we are doing PIC.  We always want function call\n+     to be done as `bsr foo@PLTPC', so it will force the assembler to create\n+     the PLT entry for `foo'. Doing function cse will cause the address of\n+     `foo' to be loaded into a register, which is exactly what we want to\n+     avoid when we are doing PIC on svr4 m68k.  */\n+  if (flag_pic)\n+    flag_no_function_cse = 1;\n+\n+  SUBTARGET_OVERRIDE_OPTIONS;\n+\n   /* Tell the compiler which flavor of XFmode we're using.  */\n   real_format_for_mode[XFmode - QFmode] = &ieee_extended_motorola_format;\n }"}, {"sha": "703a37966112c37910034b49c53f1f65d57cd234", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adf2ac37137aa5a76823cc24ae5dbebab4e587f5/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adf2ac37137aa5a76823cc24ae5dbebab4e587f5/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=adf2ac37137aa5a76823cc24ae5dbebab4e587f5", "patch": "@@ -277,15 +277,7 @@ extern int target_flags;\n    Don't use this macro to turn on various extra optimizations for\n    `-O'.  That is what `OPTIMIZATION_OPTIONS' is for.  */\n \n-#define OVERRIDE_OPTIONS\t\t\\\n-{\t\t\t\t\t\\\n-  override_options();\t\t\t\\\n-  if (! TARGET_68020 && flag_pic == 2)\t\\\n-    error(\"-fPIC is not currently supported on the 68000 or 68010\\n\");\t\\\n-  if (TARGET_PCREL && flag_pic == 0)\t\\\n-    flag_pic = 1;\t\t\t\\\n-  SUBTARGET_OVERRIDE_OPTIONS;\t\t\\\n-}\n+#define OVERRIDE_OPTIONS   override_options()\n \n /* These are meant to be redefined in the host dependent files */\n #define SUBTARGET_SWITCHES"}, {"sha": "7866a239209cf61e756930a562b3427cd3d202b5", "filename": "gcc/config/m68k/m68kelf.h", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adf2ac37137aa5a76823cc24ae5dbebab4e587f5/gcc%2Fconfig%2Fm68k%2Fm68kelf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adf2ac37137aa5a76823cc24ae5dbebab4e587f5/gcc%2Fconfig%2Fm68k%2Fm68kelf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68kelf.h?ref=adf2ac37137aa5a76823cc24ae5dbebab4e587f5", "patch": "@@ -251,20 +251,6 @@ extern int switch_table_difference_label_flag;\n    || (GET_CODE (X) == SYMBOL_REF && SYMBOL_REF_FLAG (X))\t\\\n    || PCREL_GENERAL_OPERAND_OK)\n \n-/* Turn off function cse if we are doing PIC. We always want function call\n-   to be done as `bsr foo@PLTPC', so it will force the assembler to create \n-   the PLT entry for `foo'. Doing function cse will cause the address of `foo'\n-   to be loaded into a register, which is exactly what we want to avoid when\n-   we are doing PIC on svr4 m68k.  */\n-#undef OVERRIDE_OPTIONS\n-#define OVERRIDE_OPTIONS\t\t\\\n-{\t\t\t\t\t\\\n-  if (flag_pic) flag_no_function_cse = 1; \\\n-  if (! TARGET_68020 && flag_pic == 2)\t\\\n-    error(\"-fPIC is not currently supported on the 68000 or 68010\\n\");\t\\\n-  if (TARGET_PCREL && flag_pic == 0)\t\\\n-    flag_pic = 1;\t\t\t\\\n-}\n /* end of stuff from m68kv4.h */\n \n #undef SGS_CMP_ORDER"}, {"sha": "5318824ecb37fd3523b8596cc5f06c8c78ed3ecb", "filename": "gcc/config/m68k/m68kv4.h", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adf2ac37137aa5a76823cc24ae5dbebab4e587f5/gcc%2Fconfig%2Fm68k%2Fm68kv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adf2ac37137aa5a76823cc24ae5dbebab4e587f5/gcc%2Fconfig%2Fm68k%2Fm68kv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68kv4.h?ref=adf2ac37137aa5a76823cc24ae5dbebab4e587f5", "patch": "@@ -283,19 +283,6 @@ int switch_table_difference_label_flag;\n    || (GET_CODE (X) == SYMBOL_REF && SYMBOL_REF_FLAG (X))       \t\\\n    || PCREL_GENERAL_OPERAND_OK)\n \n-/* Turn off function cse if we are doing PIC. We always want function call\n-   to be done as `bsr foo@PLTPC', so it will force the assembler to create \n-   the PLT entry for `foo'. Doing function cse will cause the address of `foo'\n-   to be loaded into a register, which is exactly what we want to avoid when\n-   we are doing PIC on svr4 m68k.  */\n-#undef OVERRIDE_OPTIONS\n-#define OVERRIDE_OPTIONS\t\t\\\n-{\t\t\t\t\t\\\n-  if (flag_pic) flag_no_function_cse = 1; \\\n-  if (! TARGET_68020 && flag_pic == 2)\t\\\n-    error(\"-fPIC is not currently supported on the 68000 or 68010\\n\");\t\\\n-}\n-\n /* Output assembler code for a block containing the constant parts\n    of a trampoline, leaving space for the variable parts.  */\n "}, {"sha": "078cd14982b4464a7db22090e4124878ce748876", "filename": "gcc/config/m68k/netbsd-elf.h", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adf2ac37137aa5a76823cc24ae5dbebab4e587f5/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adf2ac37137aa5a76823cc24ae5dbebab4e587f5/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h?ref=adf2ac37137aa5a76823cc24ae5dbebab4e587f5", "patch": "@@ -273,17 +273,6 @@ while (0)\n   fprintf ((FILE), \",%u\\n\", (SIZE)))\n \n \n-/* Turn off function cse if we are doing PIC. We always want function\n-   call to be done as `bsr foo@PLTPC', so it will force the assembler\n-   to create the PLT entry for `foo'.  Doing function cse will cause\n-   the address of `foo' to be loaded into a register, which is exactly\n-   what we want to avoid when we are doing PIC on svr4 m68k.  */\n-\n-#undef SUBTARGET_OVERRIDE_OPTIONS\n-#define SUBTARGET_OVERRIDE_OPTIONS\t\t\t\t\t\\\n-  if (flag_pic) flag_no_function_cse = 1;\n-\n-\n /* XXX\n    This is the end of the chunk lifted from m68kelf.h  */\n "}]}