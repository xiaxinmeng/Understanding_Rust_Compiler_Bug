{"sha": "d82f829905cfe6cb47d073825f680900274ce764", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDgyZjgyOTkwNWNmZTZjYjQ3ZDA3MzgyNWY2ODA5MDAyNzRjZTc2NA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-02-18T21:17:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-02-18T21:17:52Z"}, "message": "c: Fix ICE with -fexcess-precision=standard [PR99136]\n\nThe following testcase ICEs on i686-linux, because c_finish_return wraps\nc_fully_folded retval back into EXCESS_PRECISION_EXPR, but when the function\nreturn type is void, we don't call convert_for_assignment on it that would\nthen be fully folded again, but just put the retval into RETURN_EXPR's\noperand, so nothing removes it anymore and during gimplification we\nICE as EXCESS_PRECISION_EXPR is not handled.\n\nThis patch fixes it by not adding that EXCESS_PRECISION_EXPR in functions\nreturning void, the return value is ignored and all we need is evaluate any\nside-effects of the expression.\n\n2021-02-18  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c/99136\n\t* c-typeck.c (c_finish_return): Don't wrap retval into\n\tEXCESS_PRECISION_EXPR in functions that return void.\n\n\t* gcc.dg/pr99136.c: New test.", "tree": {"sha": "ece022c89d1708ed44180958ed3719accb71ce16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ece022c89d1708ed44180958ed3719accb71ce16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d82f829905cfe6cb47d073825f680900274ce764", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d82f829905cfe6cb47d073825f680900274ce764", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d82f829905cfe6cb47d073825f680900274ce764", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d82f829905cfe6cb47d073825f680900274ce764/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1021222ee4d291ccb4f49cd0ae3393c83d8ff5d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1021222ee4d291ccb4f49cd0ae3393c83d8ff5d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1021222ee4d291ccb4f49cd0ae3393c83d8ff5d0"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "4e6d369c4c9c2555d78cd51addbf227516074a87", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82f829905cfe6cb47d073825f680900274ce764/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82f829905cfe6cb47d073825f680900274ce764/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=d82f829905cfe6cb47d073825f680900274ce764", "patch": "@@ -10740,7 +10740,9 @@ c_finish_return (location_t loc, tree retval, tree origtype)\n \t  retval = TREE_OPERAND (retval, 0);\n \t}\n       retval = c_fully_fold (retval, false, NULL);\n-      if (semantic_type)\n+      if (semantic_type\n+\t  && valtype != NULL_TREE\n+\t  && TREE_CODE (valtype) != VOID_TYPE)\n \tretval = build1 (EXCESS_PRECISION_EXPR, semantic_type, retval);\n     }\n "}, {"sha": "1bd8446811b658d9a299c35fb1790dbf83d32260", "filename": "gcc/testsuite/gcc.dg/pr99136.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82f829905cfe6cb47d073825f680900274ce764/gcc%2Ftestsuite%2Fgcc.dg%2Fpr99136.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82f829905cfe6cb47d073825f680900274ce764/gcc%2Ftestsuite%2Fgcc.dg%2Fpr99136.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr99136.c?ref=d82f829905cfe6cb47d073825f680900274ce764", "patch": "@@ -0,0 +1,9 @@\n+/* PR c/99136 */\n+/* { dg-do compile } */\n+/* { dg-options \"-w -fexcess-precision=standard\" } */\n+\n+void\n+foo (double x)\n+{\n+  return 1.0 / x;\n+}"}]}