{"sha": "bc09939dad30f42d89f0ee90cad1033fb32edb85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmMwOTkzOWRhZDMwZjQyZDg5ZjBlZTkwY2FkMTAzM2ZiMzJlZGI4NQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2019-06-14T02:07:02Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2019-06-14T02:07:02Z"}, "message": "PR tree-optimization/90662 - strlen of a string in a vla plus offset not folded\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/90662\n\t* tree-ssa-strlen.c (get_stridx): Convert fold_build2 operands\n\tto the same type.\n\ngcc/testsuite/ChangeLog:\n\n\tPR tree-optimization/90662\n\t* gcc.dg/pr90866-2.c: New test.\n\t* gcc.dg/pr90866.c: Ditto.\n\nFrom-SVN: r272281", "tree": {"sha": "4cf3d886c39f8679d0cec4db8581e82d3030d845", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cf3d886c39f8679d0cec4db8581e82d3030d845"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc09939dad30f42d89f0ee90cad1033fb32edb85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc09939dad30f42d89f0ee90cad1033fb32edb85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc09939dad30f42d89f0ee90cad1033fb32edb85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc09939dad30f42d89f0ee90cad1033fb32edb85/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d4b5b8eaa4227c84b9519336dce3b8c7c5561295", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4b5b8eaa4227c84b9519336dce3b8c7c5561295", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4b5b8eaa4227c84b9519336dce3b8c7c5561295"}], "stats": {"total": 68, "additions": 64, "deletions": 4}, "files": [{"sha": "cbf0f02da0c69a36b23207dfe453e7c5129a074f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc09939dad30f42d89f0ee90cad1033fb32edb85/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc09939dad30f42d89f0ee90cad1033fb32edb85/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bc09939dad30f42d89f0ee90cad1033fb32edb85", "patch": "@@ -1,3 +1,9 @@\n+2019-06-13  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/90662\n+\t* tree-ssa-strlen.c (get_stridx): Convert fold_build2 operands\n+\tto the same type.\n+\n 2019-06-13  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR bootstrap/90873"}, {"sha": "bff5bbcddf7952e07e99f1689213e10d6075b001", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc09939dad30f42d89f0ee90cad1033fb32edb85/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc09939dad30f42d89f0ee90cad1033fb32edb85/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bc09939dad30f42d89f0ee90cad1033fb32edb85", "patch": "@@ -1,3 +1,9 @@\n+2019-06-13  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/90662\n+\t* gcc.dg/pr90866-2.c: New test.\n+\t* gcc.dg/pr90866.c: Ditto.\n+\n 2019-06-13  Jiufu Guo  <guojiufu@linux.ibm.com>\n \t    Lijia He  <helijia@linux.ibm.com>\n "}, {"sha": "8c110498154ae588b501181e12bedc9c5e059f77", "filename": "gcc/testsuite/gcc.dg/pr90866-2.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc09939dad30f42d89f0ee90cad1033fb32edb85/gcc%2Ftestsuite%2Fgcc.dg%2Fpr90866-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc09939dad30f42d89f0ee90cad1033fb32edb85/gcc%2Ftestsuite%2Fgcc.dg%2Fpr90866-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr90866-2.c?ref=bc09939dad30f42d89f0ee90cad1033fb32edb85", "patch": "@@ -0,0 +1,24 @@\n+/* PR tree-optimization/90866 - ICE in fold_binary_loc, at fold-const.c:9827\n+   { dg-do compile  }\n+   { dg-options \"-O2 -fsanitize=thread\" } */\n+\n+typedef enum { a } b;\n+typedef struct {\n+  int c[0];\n+} d;\n+typedef struct {\n+  int *data;\n+} e;\n+typedef struct {\n+  e buffer;\n+} f;\n+int g, h;\n+int i();\n+int i(f *j, d *k, b l, int m) {\n+  if (l)\n+    if (m) {\n+      h = j->buffer.data[0];\n+      k->c[g] = k->c[g] * 8;\n+    }\n+  return 0;\n+}"}, {"sha": "66c92ee7826ad4c3d1ee6a1b5df012ef03bf4dff", "filename": "gcc/testsuite/gcc.dg/pr90866.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc09939dad30f42d89f0ee90cad1033fb32edb85/gcc%2Ftestsuite%2Fgcc.dg%2Fpr90866.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc09939dad30f42d89f0ee90cad1033fb32edb85/gcc%2Ftestsuite%2Fgcc.dg%2Fpr90866.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr90866.c?ref=bc09939dad30f42d89f0ee90cad1033fb32edb85", "patch": "@@ -0,0 +1,18 @@\n+/* PR tree-optimization/90866 - ICE in fold_binary_loc, at fold-const.c:9827\n+   { dg-do compile  }\n+   { dg-options \"-O3 -Wall -fno-tree-loop-optimize\" } */\n+\n+int a[1024], b[1024];\n+\n+void f (void)\n+{\n+  int i = 0;\n+  for ( ; ; i++)\n+    {\n+    b[16] = a[i * 16 + 10];\n+    b[i * 16 + 11] = a[i * 16 + 11] * 3;\n+    b[i * 16 + 12] = a[i * 16 + 12] * 4;\n+    b[i * 16 + 13] = a[i * 16 + 13] * 4;\n+    b[i * 16 + 14] = a[i * 16 + 14] * 3;\n+  }\n+}"}, {"sha": "7369a73ecc531932f054f0625c7f21879577145c", "filename": "gcc/tree-ssa-strlen.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc09939dad30f42d89f0ee90cad1033fb32edb85/gcc%2Ftree-ssa-strlen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc09939dad30f42d89f0ee90cad1033fb32edb85/gcc%2Ftree-ssa-strlen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-strlen.c?ref=bc09939dad30f42d89f0ee90cad1033fb32edb85", "patch": "@@ -322,11 +322,17 @@ get_stridx (tree exp)\n \t\t  if (TREE_CODE (ptr) == ARRAY_REF)\n \t\t    {\n \t\t      off = TREE_OPERAND (ptr, 1);\n-\t\t      /* Scale the array index by the size of the element\n-\t\t\t type (normally 1 for char).  */\n-\t\t      off = fold_build2 (MULT_EXPR, TREE_TYPE (off), off,\n-\t\t\t\t\t eltsize);\n \t\t      ptr = TREE_OPERAND (ptr, 0);\n+\t\t      if (!integer_onep (eltsize))\n+\t\t\t{\n+\t\t\t  /* Scale the array index by the size of the element\n+\t\t\t     type in the rare case that it's greater than\n+\t\t\t     the typical 1 for char, making sure both operands\n+\t\t\t     have the same type.  */\n+\t\t\t  eltsize = fold_convert (ssizetype, eltsize);\n+\t\t\t  off = fold_convert (ssizetype, off);\n+\t\t\t  off = fold_build2 (MULT_EXPR, ssizetype, off, eltsize);\n+\t\t\t}\n \t\t    }\n \t\t  else\n \t\t    off = integer_zero_node;"}]}