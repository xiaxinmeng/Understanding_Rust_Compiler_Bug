{"sha": "2a13575e8ac66a9bf9001d2434978d3269f14f00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmExMzU3NWU4YWM2NmE5YmY5MDAxZDI0MzQ5NzhkMzI2OWYxNGYwMA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-14T21:39:03Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-14T21:39:03Z"}, "message": "(format_char_info, case 'm'): Set type to void.\n\n(check_format_info): If type is void, ignore operand.\n\nFrom-SVN: r9954", "tree": {"sha": "ed00c894ce0a17f9855049fe6f5926c781465bf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed00c894ce0a17f9855049fe6f5926c781465bf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a13575e8ac66a9bf9001d2434978d3269f14f00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a13575e8ac66a9bf9001d2434978d3269f14f00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a13575e8ac66a9bf9001d2434978d3269f14f00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a13575e8ac66a9bf9001d2434978d3269f14f00/comments", "author": null, "committer": null, "parents": [{"sha": "f7ca2fe71eec8d63b543403751db9649b6f4016f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7ca2fe71eec8d63b543403751db9649b6f4016f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7ca2fe71eec8d63b543403751db9649b6f4016f"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "fad2701b78bc76c9a1ad3010c15f5f26c63c19a9", "filename": "gcc/c-common.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a13575e8ac66a9bf9001d2434978d3269f14f00/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a13575e8ac66a9bf9001d2434978d3269f14f00/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=2a13575e8ac66a9bf9001d2434978d3269f14f00", "patch": "@@ -693,7 +693,7 @@ static format_char_info print_char_table[] = {\n   { \"u\",\t0,\tT_UI,\tT_UI,\tT_UL,\tT_ULL,\tT_ULL,\t\"-wp0\"\t\t},\n /* Two GNU extensions.  */\n   { \"Z\",\t0,\tT_ST,\tNULL,\tNULL,\tNULL,\tNULL,\t\"-wp0\"\t\t},\n-  { \"m\",\t0,\tT_UI,\tT_UI,\tT_UL,\tNULL,\tNULL,\t\"-wp\"\t\t},\n+  { \"m\",\t0,\tT_V,\tNULL,\tNULL,\tNULL,\tNULL,\t\"-wp\"\t\t},\n   { \"feEgG\",\t0,\tT_D,\tNULL,\tNULL,\tNULL,\tT_LD,\t\"-wp0 +#\"\t},\n   { \"c\",\t0,\tT_I,\tNULL,\tT_W,\tNULL,\tNULL,\t\"-w\"\t\t},\n   { \"C\",\t0,\tT_W,\tNULL,\tNULL,\tNULL,\tNULL,\t\"-w\"\t\t},\n@@ -1194,6 +1194,9 @@ check_format_info (info, params)\n       /* Finally. . .check type of argument against desired type!  */\n       if (info->first_arg_num == 0)\n \tcontinue;\n+      if (fci->pointer_count == 0 && wanted_type == void_type_node)\n+\t/* This specifier takes no argument.  */\n+\tcontinue;\n       if (params == 0)\n \t{\n \t  warning (tfaff);"}]}