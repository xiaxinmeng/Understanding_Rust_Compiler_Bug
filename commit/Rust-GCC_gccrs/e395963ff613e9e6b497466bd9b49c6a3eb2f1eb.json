{"sha": "e395963ff613e9e6b497466bd9b49c6a3eb2f1eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM5NTk2M2ZmNjEzZTllNmI0OTc0NjZiZDliNDljNmEzZWIyZjFlYg==", "commit": {"author": {"name": "James E Wilson", "email": "wilson@specifixinc.com", "date": "2005-12-06T05:31:39Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2005-12-06T05:31:39Z"}, "message": "re PR target/24934 (profilebootstrap failure)\n\nPR target/24934\n* opts.c (decode_options): Turn off partitioning if flag_unwind_tables\nis set.\n\nFrom-SVN: r108103", "tree": {"sha": "2328deb0683c3924365413140ef7031e54863a74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2328deb0683c3924365413140ef7031e54863a74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e395963ff613e9e6b497466bd9b49c6a3eb2f1eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e395963ff613e9e6b497466bd9b49c6a3eb2f1eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e395963ff613e9e6b497466bd9b49c6a3eb2f1eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e395963ff613e9e6b497466bd9b49c6a3eb2f1eb/comments", "author": null, "committer": null, "parents": [{"sha": "326eda4b252e23e9c9b2ee1f0ad484c2175e7534", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/326eda4b252e23e9c9b2ee1f0ad484c2175e7534", "html_url": "https://github.com/Rust-GCC/gccrs/commit/326eda4b252e23e9c9b2ee1f0ad484c2175e7534"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "7edad6f740c90116fc31f6803ccc8d3a007ccb31", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e395963ff613e9e6b497466bd9b49c6a3eb2f1eb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e395963ff613e9e6b497466bd9b49c6a3eb2f1eb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e395963ff613e9e6b497466bd9b49c6a3eb2f1eb", "patch": "@@ -1,3 +1,9 @@\n+2005-12-05  James E Wilson  <wilson@specifix.com>\n+\n+\tPR target/24934\n+\t* opts.c (decode_options): Turn off partitioning if flag_unwind_tables\n+\tis set.\n+\n 2005-12-05  Daniel Berlin  <dberlin@dberlin.org>\n \t\n \t* print-tree.c (print_node): Ditto."}, {"sha": "776ce73f3c5f5f5279885a71588ae7b7ab0e6e82", "filename": "gcc/opts.c", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e395963ff613e9e6b497466bd9b49c6a3eb2f1eb/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e395963ff613e9e6b497466bd9b49c6a3eb2f1eb/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=e395963ff613e9e6b497466bd9b49c6a3eb2f1eb", "patch": "@@ -675,7 +675,8 @@ decode_options (unsigned int argc, const char **argv)\n \n   /* The optimization to partition hot and cold basic blocks into separate\n      sections of the .o and executable files does not work (currently)\n-     with exception handling.  If flag_exceptions is turned on we need to\n+     with exception handling.  This is because there is no support for\n+     generating unwind info.  If flag_exceptions is turned on we need to\n      turn off the partitioning optimization.  */\n \n   if (flag_exceptions && flag_reorder_blocks_and_partition)\n@@ -686,8 +687,24 @@ decode_options (unsigned int argc, const char **argv)\n       flag_reorder_blocks = 1;\n     }\n \n+  /* If user requested unwind info, then turn off the partitioning\n+     optimization.  */\n+\n+  if (flag_unwind_tables && ! targetm.unwind_tables_default\n+      && flag_reorder_blocks_and_partition)\n+    {\n+      inform (\"-freorder-blocks-and-parition does not support unwind info\");\n+      flag_reorder_blocks_and_partition = 0;\n+      flag_reorder_blocks = 1;\n+    }\n+\n+  /* If the target requested unwind info, then turn off the partitioning\n+     optimization with a different message.  Likewise, if the target does not\n+     support named sections.  */\n+\n   if (flag_reorder_blocks_and_partition\n-      && !targetm.have_named_sections)\n+      && (!targetm.have_named_sections\n+\t  || (flag_unwind_tables && targetm.unwind_tables_default)))\n     {\n       inform \n        (\"-freorder-blocks-and-partition does not work on this architecture\");"}]}