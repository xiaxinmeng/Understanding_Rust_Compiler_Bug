{"sha": "ca6d4a08c120841654acb10b973b0d009b053ef3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E2ZDRhMDhjMTIwODQxNjU0YWNiMTBiOTczYjBkMDA5YjA1M2VmMw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-03-18T13:59:11Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-03-18T13:59:11Z"}, "message": "re PR tree-optimization/88945 (ICE in fold_convert_loc in FRE when using -fdump-tree-fre-details)\n\n2019-03-18  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/88945\n\t* tree-ssanames.c (release_ssa_name_fn): For released SSA names\n\tuse a TREE_TYPE of error_mark_node to avoid ICEs when dumping\n\tbasic-blocks that are removed.  Remove restoring SSA_NAME_VAR.\n\t* tree-outof-ssa.c (eliminate_useless_phis): Remove redundant checking.\n\nFrom-SVN: r269765", "tree": {"sha": "ad85bf9aa281b6f0ae99a6d52b1feae8ec504aa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad85bf9aa281b6f0ae99a6d52b1feae8ec504aa6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca6d4a08c120841654acb10b973b0d009b053ef3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca6d4a08c120841654acb10b973b0d009b053ef3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca6d4a08c120841654acb10b973b0d009b053ef3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca6d4a08c120841654acb10b973b0d009b053ef3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f9cacebbde8427e0537e79fe87dd1c89251a2582", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9cacebbde8427e0537e79fe87dd1c89251a2582", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9cacebbde8427e0537e79fe87dd1c89251a2582"}], "stats": {"total": 39, "additions": 14, "deletions": 25}, "files": [{"sha": "a8d41e4130392dfa292aac80dade3f24e3283ef1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca6d4a08c120841654acb10b973b0d009b053ef3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca6d4a08c120841654acb10b973b0d009b053ef3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca6d4a08c120841654acb10b973b0d009b053ef3", "patch": "@@ -1,3 +1,11 @@\n+2019-03-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/88945\n+\t* tree-ssanames.c (release_ssa_name_fn): For released SSA names\n+\tuse a TREE_TYPE of error_mark_node to avoid ICEs when dumping\n+\tbasic-blocks that are removed.  Remove restoring SSA_NAME_VAR.\n+\t* tree-outof-ssa.c (eliminate_useless_phis): Remove redundant checking.\n+\n 2019-03-18  Andrew Stubbs  <ams@codesourcery.com>\n \n \t* config/gcn/gcn-run.c (struct output): Make next_output unsigned."}, {"sha": "6cac55bde062845a8b6459cbc43682ba86545b10", "filename": "gcc/tree-outof-ssa.c", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca6d4a08c120841654acb10b973b0d009b053ef3/gcc%2Ftree-outof-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca6d4a08c120841654acb10b973b0d009b053ef3/gcc%2Ftree-outof-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-outof-ssa.c?ref=ca6d4a08c120841654acb10b973b0d009b053ef3", "patch": "@@ -809,26 +809,7 @@ eliminate_useless_phis (void)\n \t  gphi *phi = gsi.phi ();\n \t  result = gimple_phi_result (phi);\n \t  if (virtual_operand_p (result))\n-\t    {\n-\t      /* There should be no arguments which are not virtual, or the\n-\t         results will be incorrect.  */\n-\t      if (flag_checking)\n-\t\tfor (size_t i = 0; i < gimple_phi_num_args (phi); i++)\n-\t\t  {\n-\t\t    tree arg = PHI_ARG_DEF (phi, i);\n-\t\t    if (TREE_CODE (arg) == SSA_NAME\n-\t\t\t&& !virtual_operand_p (arg))\n-\t\t      {\n-\t\t\tfprintf (stderr, \"Argument of PHI is not virtual (\");\n-\t\t\tprint_generic_expr (stderr, arg, TDF_SLIM);\n-\t\t\tfprintf (stderr, \"), but the result is :\");\n-\t\t\tprint_gimple_stmt (stderr, phi, 0, TDF_SLIM);\n-\t\t\tinternal_error (\"SSA corruption\");\n-\t\t      }\n-\t\t  }\n-\n-\t      remove_phi_node (&gsi, true);\n-\t    }\n+\t    remove_phi_node (&gsi, true);\n           else\n \t    {\n \t      /* Also remove real PHIs with no uses.  */"}, {"sha": "5bac799e9a364f4b394e522548c869443a114d07", "filename": "gcc/tree-ssanames.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca6d4a08c120841654acb10b973b0d009b053ef3/gcc%2Ftree-ssanames.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca6d4a08c120841654acb10b973b0d009b053ef3/gcc%2Ftree-ssanames.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssanames.c?ref=ca6d4a08c120841654acb10b973b0d009b053ef3", "patch": "@@ -595,7 +595,6 @@ release_ssa_name_fn (struct function *fn, tree var)\n      defining statement.  */\n   if (! SSA_NAME_IN_FREE_LIST (var))\n     {\n-      tree saved_ssa_name_var = SSA_NAME_VAR (var);\n       int saved_ssa_name_version = SSA_NAME_VERSION (var);\n       use_operand_p imm = &(SSA_NAME_IMM_USE_NODE (var));\n \n@@ -621,13 +620,14 @@ release_ssa_name_fn (struct function *fn, tree var)\n       /* Restore the version number.  */\n       SSA_NAME_VERSION (var) = saved_ssa_name_version;\n \n-      /* Hopefully this can go away once we have the new incremental\n-         SSA updating code installed.  */\n-      SET_SSA_NAME_VAR_OR_IDENTIFIER (var, saved_ssa_name_var);\n-\n       /* Note this SSA_NAME is now in the first list.  */\n       SSA_NAME_IN_FREE_LIST (var) = 1;\n \n+      /* Put in a non-NULL TREE_TYPE so dumping code will not ICE\n+         if it happens to come along a released SSA name and tries\n+\t to inspect its type.  */\n+      TREE_TYPE (var) = error_mark_node;\n+\n       /* And finally queue it so that it will be put on the free list.  */\n       vec_safe_push (FREE_SSANAMES_QUEUE (fn), var);\n     }"}]}