{"sha": "e0676e2e718a28b2eeb1ef483653edd3b026a470", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA2NzZlMmU3MThhMjhiMmVlYjFlZjQ4MzY1M2VkZDNiMDI2YTQ3MA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2018-01-15T06:15:09Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-01-15T06:15:09Z"}, "message": "re PR other/83508 ([arm] c-c++-common/Wrestrict.c fails since r255836)\n\n\tPR other/83508\n\t* builtins.c (check_access): Avoid warning when the no-warning bit\n\tis set.\n\n\tPR other/83508\n\t* gcc.dg/Wstringop-overflow-2.c: New test.\n\nFrom-SVN: r256683", "tree": {"sha": "8117ca4de8a5784615f5ca706e5dc3c2b6b10004", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8117ca4de8a5784615f5ca706e5dc3c2b6b10004"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0676e2e718a28b2eeb1ef483653edd3b026a470", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0676e2e718a28b2eeb1ef483653edd3b026a470", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0676e2e718a28b2eeb1ef483653edd3b026a470", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0676e2e718a28b2eeb1ef483653edd3b026a470/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5804f6271247b02199abdd62a89c0c2bf807b656", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5804f6271247b02199abdd62a89c0c2bf807b656", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5804f6271247b02199abdd62a89c0c2bf807b656"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "ffcf36af5398bdfaf699023318106bc8414a2d09", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0676e2e718a28b2eeb1ef483653edd3b026a470/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0676e2e718a28b2eeb1ef483653edd3b026a470/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e0676e2e718a28b2eeb1ef483653edd3b026a470", "patch": "@@ -1,3 +1,9 @@\n+2018-01-14  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR other/83508\n+\t* builtins.c (check_access): Avoid warning when the no-warning bit\n+\tis set.\n+\n 2018-01-14  Cory Fields  <cory-nospam-@coryfields.com>\n \n \t* tree-ssa-loop-im.c (sort_bbs_in_loop_postorder_cmp): Stabilize sort."}, {"sha": "d9f1e476cb001657b43353b6fd28bffccb20fb33", "filename": "gcc/builtins.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0676e2e718a28b2eeb1ef483653edd3b026a470/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0676e2e718a28b2eeb1ef483653edd3b026a470/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=e0676e2e718a28b2eeb1ef483653edd3b026a470", "patch": "@@ -3154,6 +3154,9 @@ check_access (tree exp, tree, tree, tree dstwrite,\n \t      || (tree_fits_uhwi_p (dstwrite)\n \t\t  && tree_int_cst_lt (dstwrite, range[0]))))\n \t{\n+\t  if (TREE_NO_WARNING (exp))\n+\t    return false;\n+\n \t  location_t loc = tree_nonartificial_location (exp);\n \t  loc = expansion_point_location_if_in_system_header (loc);\n \n@@ -3213,6 +3216,9 @@ check_access (tree exp, tree, tree, tree dstwrite,\n \n \t  if (tree_int_cst_lt (maxobjsize, range[0]))\n \t    {\n+\t      if (TREE_NO_WARNING (exp))\n+\t\treturn false;\n+\n \t      /* Warn about crazy big sizes first since that's more\n \t\t likely to be meaningful than saying that the bound\n \t\t is greater than the object size if both are big.  */\n@@ -3234,6 +3240,9 @@ check_access (tree exp, tree, tree, tree dstwrite,\n \n \t  if (dstsize != maxobjsize && tree_int_cst_lt (dstsize, range[0]))\n \t    {\n+\t      if (TREE_NO_WARNING (exp))\n+\t\treturn false;\n+\n \t      if (tree_int_cst_equal (range[0], range[1]))\n \t\twarning_at (loc, opt,\n \t\t\t    \"%K%qD specified bound %E \"\n@@ -3257,6 +3266,9 @@ check_access (tree exp, tree, tree, tree dstwrite,\n       && dstwrite && range[0]\n       && tree_int_cst_lt (slen, range[0]))\n     {\n+      if (TREE_NO_WARNING (exp))\n+\treturn false;\n+\n       location_t loc = tree_nonartificial_location (exp);\n \n       if (tree_int_cst_equal (range[0], range[1]))"}, {"sha": "37f54de8146ec18ecb2c57b753cd8182597c7e0b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0676e2e718a28b2eeb1ef483653edd3b026a470/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0676e2e718a28b2eeb1ef483653edd3b026a470/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e0676e2e718a28b2eeb1ef483653edd3b026a470", "patch": "@@ -1,3 +1,8 @@\n+2018-01-10  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR other/83508\n+\t* gcc.dg/Wstringop-overflow-2.c: New test.\n+\n 2018-01-14  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/83811"}, {"sha": "6e3e2ca0825b2bf496fc365bd6dcc2949154b5b7", "filename": "gcc/testsuite/gcc.dg/Wstringop-overflow-2.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0676e2e718a28b2eeb1ef483653edd3b026a470/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0676e2e718a28b2eeb1ef483653edd3b026a470/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-2.c?ref=e0676e2e718a28b2eeb1ef483653edd3b026a470", "patch": "@@ -0,0 +1,30 @@\n+/* PR tree-optimization/83508 - c-c++-common/Wrestrict.c fails since r255836\n+   Test to verify that only one of -Wrestrict and -Wstringop-overflow is\n+   issued for a problem where either would be appropriate.\n+   { dg-do compile }\n+   { dg-options \"-O2 -Wrestrict -Wstringop-overflow\" } */\n+\n+#define DIFF_MAX __PTRDIFF_MAX__\n+\n+typedef __PTRDIFF_TYPE__ ptrdiff_t;\n+typedef __SIZE_TYPE__ size_t;\n+\n+void sink (void*);\n+\n+void f (ptrdiff_t i, size_t n)\n+{\n+  if (i < DIFF_MAX - 2 || DIFF_MAX - 1 > i)\n+    i = DIFF_MAX - 2;\n+\n+  if (n < 4 || 5 < n)\n+    n = 4;\n+\n+  char a[8] = \"012\";\n+\n+  /* The following could very well be diagnosed by -Wstringop-overflow\n+     instead but there's no way to verify that only one of the two\n+     warnings is issued and the choice of -Wrestrict simply reflects\n+     the fact that -Wrestrict runs before -Wstringop-overflow.  */\n+  __builtin_strncpy (a + i, a, n);   /* { dg-warning \"\\\\\\[-Wrestrict]\" } */\n+  sink (a);\n+}"}]}