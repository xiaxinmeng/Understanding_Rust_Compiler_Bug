{"sha": "5770bbac66da20acd60a488430dff494db6606b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc3MGJiYWM2NmRhMjBhY2Q2MGE0ODg0MzBkZmY0OTRkYjY2MDZiNA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2018-03-20T15:57:30Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2018-03-20T15:57:30Z"}, "message": "[PR c++/84970] lookup marking\n\nhttps://gcc.gnu.org/ml/gcc-patches/2018-03/msg00973.html\n\tPR c++/84970\n\t* cp-tree.h (lookup_list_keep): Declare.\n\t* tree.c (lookup_list_keep): New, broken out of ...\n\t(build_min): ... here.  Call it.\n\t* decl.c (cp_finish_decl): Call lookup_list_keep.\n\n\tPR c++/84970\n\t* g++.dg/lookup/pr84970.C: New.\n\nFrom-SVN: r258685", "tree": {"sha": "8baa0d033a1a91ceac783a9a3891a1bef15cd141", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8baa0d033a1a91ceac783a9a3891a1bef15cd141"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5770bbac66da20acd60a488430dff494db6606b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5770bbac66da20acd60a488430dff494db6606b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5770bbac66da20acd60a488430dff494db6606b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5770bbac66da20acd60a488430dff494db6606b4/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b6c1e0329bb7c7b511d685ebb17ab4f2c515a75a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6c1e0329bb7c7b511d685ebb17ab4f2c515a75a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6c1e0329bb7c7b511d685ebb17ab4f2c515a75a"}], "stats": {"total": 59, "additions": 55, "deletions": 4}, "files": [{"sha": "7ce79d3862b8c5c9527b1bd28130a3a2fa5d0a39", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5770bbac66da20acd60a488430dff494db6606b4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5770bbac66da20acd60a488430dff494db6606b4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5770bbac66da20acd60a488430dff494db6606b4", "patch": "@@ -1,3 +1,11 @@\n+2018-03-20  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/84970\n+\t* cp-tree.h (lookup_list_keep): Declare.\n+\t* tree.c (lookup_list_keep): New, broken out of ...\n+\t(build_min): ... here.  Call it.\n+\t* decl.c (cp_finish_decl): Call lookup_list_keep.\n+\n 2018-03-19  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/84937 - ICE with class deduction and auto."}, {"sha": "077ef2d13f998a6b8f91b2a570a85870f8c66b7e", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5770bbac66da20acd60a488430dff494db6606b4/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5770bbac66da20acd60a488430dff494db6606b4/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=5770bbac66da20acd60a488430dff494db6606b4", "patch": "@@ -7012,6 +7012,7 @@ extern tree lookup_add\t\t\t\t(tree fns, tree lookup);\n extern tree lookup_maybe_add\t\t\t(tree fns, tree lookup,\n \t\t\t\t\t\t bool deduping);\n extern void lookup_keep\t\t\t\t(tree lookup, bool keep);\n+extern void lookup_list_keep\t\t\t(tree list, bool keep);\n extern int is_overloaded_fn\t\t\t(tree) ATTRIBUTE_PURE;\n extern bool really_overloaded_fn\t\t(tree) ATTRIBUTE_PURE;\n extern tree dependent_name\t\t\t(tree);"}, {"sha": "5f181a5da723f49bda203822a35d443342393a73", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5770bbac66da20acd60a488430dff494db6606b4/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5770bbac66da20acd60a488430dff494db6606b4/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=5770bbac66da20acd60a488430dff494db6606b4", "patch": "@@ -7034,7 +7034,11 @@ cp_finish_decl (tree decl, tree init, bool init_const_expr_p,\n \t}\n \n       if (init)\n-\tDECL_INITIAL (decl) = init;\n+\t{\n+\t  if (TREE_CODE (init) == TREE_LIST)\n+\t    lookup_list_keep (init, true);\n+\t  DECL_INITIAL (decl) = init;\n+\t}\n       if (dep_init)\n \t{\n \t  retrofit_lang_decl (decl);"}, {"sha": "5993633cbe580b9d96f3f7eb17313075649ea9f0", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5770bbac66da20acd60a488430dff494db6606b4/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5770bbac66da20acd60a488430dff494db6606b4/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=5770bbac66da20acd60a488430dff494db6606b4", "patch": "@@ -2436,6 +2436,20 @@ lookup_keep (tree lookup, bool keep)\n     ovl_used (lookup);\n }\n \n+/* LIST is a TREE_LIST whose TREE_VALUEs may be OVERLOADS that need\n+   keeping, or may be ignored.  */\n+\n+void\n+lookup_list_keep (tree list, bool keep)\n+{\n+  for (; list; list = TREE_CHAIN (list))\n+    {\n+      tree v = TREE_VALUE (list);\n+      if (TREE_CODE (v) == OVERLOAD)\n+\tlookup_keep (v, keep);\n+    }\n+}\n+\n /* Returns nonzero if X is an expression for a (possibly overloaded)\n    function.  If \"f\" is a function or function template, \"f\", \"c->f\",\n    \"c.f\", \"C::f\", and \"f<int>\" will all be considered possibly\n@@ -3315,9 +3329,7 @@ build_min (enum tree_code code, tree tt, ...)\n \n   if (code == CAST_EXPR)\n     /* The single operand is a TREE_LIST, which we have to check.  */\n-    for (tree v = TREE_OPERAND (t, 0); v; v = TREE_CHAIN (v))\n-      if (TREE_CODE (TREE_VALUE (v)) == OVERLOAD)\n-\tlookup_keep (TREE_VALUE (v), true);\n+    lookup_list_keep (TREE_OPERAND (t, 0), true);\n \n   return t;\n }"}, {"sha": "14c775ba191988d2959f407f1985cf04a43c8af7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5770bbac66da20acd60a488430dff494db6606b4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5770bbac66da20acd60a488430dff494db6606b4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5770bbac66da20acd60a488430dff494db6606b4", "patch": "@@ -1,3 +1,8 @@\n+2018-03-20  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/84970\n+\t* g++.dg/lookup/pr84970.C: New.\n+\n 2018-03-20  Richard Biener  <rguenther@suse.de>\n \n \tPR target/84986"}, {"sha": "ad02248d75fa4b69c15c48a0d322811731a4b21d", "filename": "gcc/testsuite/g++.dg/lookup/pr84970.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5770bbac66da20acd60a488430dff494db6606b4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fpr84970.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5770bbac66da20acd60a488430dff494db6606b4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fpr84970.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fpr84970.C?ref=5770bbac66da20acd60a488430dff494db6606b4", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/84970 ICE with deferred initializer\n+\n+namespace bob {\n+  void a();\n+}\n+using namespace bob;\n+\n+void a (int);\n+\n+template <typename b>\n+void *x (b)\n+{\n+  void (*c)(b) (a);\n+\n+  return (void *)c;\n+}\n+\n+void d () {\n+  x (1);\n+}\n+"}]}