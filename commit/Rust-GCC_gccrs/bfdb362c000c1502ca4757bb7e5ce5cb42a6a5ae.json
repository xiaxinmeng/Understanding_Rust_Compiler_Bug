{"sha": "bfdb362c000c1502ca4757bb7e5ce5cb42a6a5ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZkYjM2MmMwMDBjMTUwMmNhNDc1N2JiN2U1Y2U1Y2I0MmE2YTVhZQ==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2020-03-30T14:18:34Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-15T08:04:23Z"}, "message": "[Ada] Put_Image: Enable for access-to-subprogram types\n\n2020-06-15  Bob Duff  <duff@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/s-putima.ads, libgnat/s-putima.adb\n\t(Put_Image_Access_Subp, Put_Image_Access_Prot): New procedures\n\tfor printing access-to-subprogram objects.  Remove an explicit\n\t\" \", because Put_Image includes the annoying leading blank.\n\t* rtsfind.ads: Add new procedures in s-putima.\n\t* exp_put_image.adb: Call new procedures as appropriate.", "tree": {"sha": "cd959190cea65f1ed1d2ba126aca9c3ca04d996e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd959190cea65f1ed1d2ba126aca9c3ca04d996e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bfdb362c000c1502ca4757bb7e5ce5cb42a6a5ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfdb362c000c1502ca4757bb7e5ce5cb42a6a5ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfdb362c000c1502ca4757bb7e5ce5cb42a6a5ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfdb362c000c1502ca4757bb7e5ce5cb42a6a5ae/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3dd1cc4a05f57e0d65435a055d532e699c574403", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dd1cc4a05f57e0d65435a055d532e699c574403", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dd1cc4a05f57e0d65435a055d532e699c574403"}], "stats": {"total": 49, "additions": 43, "deletions": 6}, "files": [{"sha": "657f618c373600614e5d16223f70ad96c8643b49", "filename": "gcc/ada/exp_put_image.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfdb362c000c1502ca4757bb7e5ce5cb42a6a5ae/gcc%2Fada%2Fexp_put_image.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfdb362c000c1502ca4757bb7e5ce5cb42a6a5ae/gcc%2Fada%2Fexp_put_image.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_put_image.adb?ref=bfdb362c000c1502ca4757bb7e5ce5cb42a6a5ae", "patch": "@@ -314,7 +314,11 @@ package body Exp_Put_Image is\n          end if;\n \n       elsif Is_Access_Type (U_Type) then\n-         if P_Size = System_Address_Size then\n+         if Is_Access_Protected_Subprogram_Type (U_Type) then\n+            Lib_RE := RE_Put_Image_Access_Prot;\n+         elsif Is_Access_Subprogram_Type (U_Type) then\n+            Lib_RE := RE_Put_Image_Access_Subp;\n+         elsif P_Size = System_Address_Size then\n             Lib_RE := RE_Put_Image_Thin_Pointer;\n          else\n             pragma Assert (P_Size = 2 * System_Address_Size);"}, {"sha": "d7d530bec0ce209f60e074bac2045bce38d18690", "filename": "gcc/ada/libgnat/s-putima.adb", "status": "modified", "additions": 28, "deletions": 5, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfdb362c000c1502ca4757bb7e5ce5cb42a6a5ae/gcc%2Fada%2Flibgnat%2Fs-putima.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfdb362c000c1502ca4757bb7e5ce5cb42a6a5ae/gcc%2Fada%2Flibgnat%2Fs-putima.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-putima.adb?ref=bfdb362c000c1502ca4757bb7e5ce5cb42a6a5ae", "patch": "@@ -118,27 +118,50 @@ package body System.Put_Images is\n    generic\n       type Designated (<>) is private;\n       type Pointer is access all Designated;\n-   procedure Put_Image_Pointer (S : in out Sink'Class; X : Pointer);\n+   procedure Put_Image_Pointer\n+     (S : in out Sink'Class; X : Pointer; Type_Kind : String);\n \n-   procedure Put_Image_Pointer (S : in out Sink'Class; X : Pointer) is\n+   procedure Put_Image_Pointer\n+     (S : in out Sink'Class; X : Pointer; Type_Kind : String)\n+   is\n       function Cast is new Unchecked_Conversion\n         (System.Address, Unsigned_Address);\n    begin\n       if X = null then\n          Put_UTF_8 (S, \"null\");\n       else\n-         Put_UTF_8 (S, \"(access \");\n+         Put_UTF_8 (S, \"(\");\n+         Put_UTF_8 (S, Type_Kind);\n          Hex.Put_Image (S, Cast (X.all'Address));\n          Put_UTF_8 (S, \")\");\n       end if;\n    end Put_Image_Pointer;\n \n    procedure Thin_Instance is new Put_Image_Pointer (Byte, Thin_Pointer);\n    procedure Put_Image_Thin_Pointer\n-     (S : in out Sink'Class; X : Thin_Pointer) renames Thin_Instance;\n+     (S : in out Sink'Class; X : Thin_Pointer)\n+   is\n+   begin\n+      Thin_Instance (S, X, \"access\");\n+   end Put_Image_Thin_Pointer;\n+\n    procedure Fat_Instance is new Put_Image_Pointer (Byte_String, Fat_Pointer);\n    procedure Put_Image_Fat_Pointer\n-     (S : in out Sink'Class; X : Fat_Pointer) renames Fat_Instance;\n+     (S : in out Sink'Class; X : Fat_Pointer)\n+   is\n+   begin\n+      Fat_Instance (S, X, \"access\");\n+   end Put_Image_Fat_Pointer;\n+\n+   procedure Put_Image_Access_Subp (S : in out Sink'Class; X : Thin_Pointer) is\n+   begin\n+      Thin_Instance (S, X, \"access subprogram\");\n+   end Put_Image_Access_Subp;\n+\n+   procedure Put_Image_Access_Prot (S : in out Sink'Class; X : Thin_Pointer) is\n+   begin\n+      Thin_Instance (S, X, \"access protected subprogram\");\n+   end Put_Image_Access_Prot;\n \n    procedure Put_Image_String (S : in out Sink'Class; X : String) is\n    begin"}, {"sha": "3015a417068a9337364fd6bb3aa4acada967a43b", "filename": "gcc/ada/libgnat/s-putima.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfdb362c000c1502ca4757bb7e5ce5cb42a6a5ae/gcc%2Fada%2Flibgnat%2Fs-putima.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfdb362c000c1502ca4757bb7e5ce5cb42a6a5ae/gcc%2Fada%2Flibgnat%2Fs-putima.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-putima.ads?ref=bfdb362c000c1502ca4757bb7e5ce5cb42a6a5ae", "patch": "@@ -69,6 +69,12 @@ package System.Put_Images is\n    --  Print \"null\", or the address of the designated object as an unsigned\n    --  hexadecimal integer.\n \n+   procedure Put_Image_Access_Subp (S : in out Sink'Class; X : Thin_Pointer);\n+   --  For access-to-subprogram types\n+\n+   procedure Put_Image_Access_Prot (S : in out Sink'Class; X : Thin_Pointer);\n+   --  For access-to-protected-subprogram types\n+\n    procedure Put_Image_String (S : in out Sink'Class; X : String);\n    procedure Put_Image_Wide_String (S : in out Sink'Class; X : Wide_String);\n    procedure Put_Image_Wide_Wide_String"}, {"sha": "5ddb050a847a052ba9a43fff8d25c97c484ffe94", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfdb362c000c1502ca4757bb7e5ce5cb42a6a5ae/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfdb362c000c1502ca4757bb7e5ce5cb42a6a5ae/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=bfdb362c000c1502ca4757bb7e5ce5cb42a6a5ae", "patch": "@@ -1179,6 +1179,8 @@ package Rtsfind is\n      RE_Put_Image_Long_Long_Unsigned,    -- System.Put_Images\n      RE_Put_Image_Thin_Pointer,          -- System.Put_Images\n      RE_Put_Image_Fat_Pointer,           -- System.Put_Images\n+     RE_Put_Image_Access_Subp,           -- System.Put_Images\n+     RE_Put_Image_Access_Prot,           -- System.Put_Images\n      RE_Put_Image_String,                -- System.Put_Images\n      RE_Put_Image_Wide_String,           -- System.Put_Images\n      RE_Put_Image_Wide_Wide_String,      -- System.Put_Images\n@@ -2580,6 +2582,8 @@ package Rtsfind is\n      RE_Put_Image_Long_Long_Unsigned     => System_Put_Images,\n      RE_Put_Image_Thin_Pointer           => System_Put_Images,\n      RE_Put_Image_Fat_Pointer            => System_Put_Images,\n+     RE_Put_Image_Access_Subp            => System_Put_Images,\n+     RE_Put_Image_Access_Prot            => System_Put_Images,\n      RE_Put_Image_String                 => System_Put_Images,\n      RE_Put_Image_Wide_String            => System_Put_Images,\n      RE_Put_Image_Wide_Wide_String       => System_Put_Images,"}]}