{"sha": "1274e3a474562bed5e6d1861b8520d9985150716", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI3NGUzYTQ3NDU2MmJlZDVlNmQxODYxYjg1MjBkOTk4NTE1MDcxNg==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2012-03-07T13:52:30Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2012-03-07T13:52:30Z"}, "message": "re PR target/52484 ([avr]: Missing __memx insn because of wrong register footprint)\n\n\tPR target/52484\n\t* config/avr/avr.md (xload<mode>_A): Add R22... to register footprint.\n\nFrom-SVN: r185043", "tree": {"sha": "e5867b11eeffc08e547d025d42c87d23b3d38cea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5867b11eeffc08e547d025d42c87d23b3d38cea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1274e3a474562bed5e6d1861b8520d9985150716", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1274e3a474562bed5e6d1861b8520d9985150716", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1274e3a474562bed5e6d1861b8520d9985150716", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1274e3a474562bed5e6d1861b8520d9985150716/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96f9265ac8b1c60c2b66fa76c342880c8ebfc5ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96f9265ac8b1c60c2b66fa76c342880c8ebfc5ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96f9265ac8b1c60c2b66fa76c342880c8ebfc5ae"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "c71f8efb095a5ae82d20741791106c9b0dd38832", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1274e3a474562bed5e6d1861b8520d9985150716/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1274e3a474562bed5e6d1861b8520d9985150716/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1274e3a474562bed5e6d1861b8520d9985150716", "patch": "@@ -1,3 +1,8 @@\n+2012-03-07  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/52484\n+\t* config/avr/avr.md (xload<mode>_A): Add R22... to register footprint.\n+\n 2012-03-07  Richard Guenther  <rguenther@suse.de>\n \n \t* omp-low.c (extract_omp_for_data): Use signed_type_for."}, {"sha": "410cabb2b950af22b151ba7cd2712d44408ab2c4", "filename": "gcc/config/avr/avr.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1274e3a474562bed5e6d1861b8520d9985150716/gcc%2Fconfig%2Favr%2Favr.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1274e3a474562bed5e6d1861b8520d9985150716/gcc%2Fconfig%2Favr%2Favr.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.md?ref=1274e3a474562bed5e6d1861b8520d9985150716", "patch": "@@ -436,6 +436,7 @@\n (define_insn_and_split \"xload<mode>_A\"\n   [(set (match_operand:MOVMODE 0 \"register_operand\" \"=r\")\n         (match_operand:MOVMODE 1 \"memory_operand\"    \"m\"))\n+   (clobber (reg:MOVMODE 22))\n    (clobber (reg:QI 21))\n    (clobber (reg:HI REG_Z))]\n   \"can_create_pseudo_p()"}]}