{"sha": "756aa0c30268da6b1de3bf6b9b427eefe8520d57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU2YWEwYzMwMjY4ZGE2YjFkZTNiZjZiOWI0MjdlZWZlODUyMGQ1Nw==", "commit": {"author": {"name": "Tim Shen", "email": "timshen91@gmail.com", "date": "2013-10-02T15:13:18Z"}, "committer": {"name": "Tim Shen", "email": "timshen@gcc.gnu.org", "date": "2013-10-02T15:13:18Z"}, "message": "2013-10-02  Tim Shen  <timshen91@gmail.com>\n\n\t* include/bits/regex_compiler.h\n\t(_BracketMatcher<>::_M_add_equivalence_class): Implement it correctly.\n\t* include/bits/regex_compiler.tcc (_BracketMatcher<>::operator()):\n\tAdd _M_equiv_set support.\n\t* testsuite/28_regex/algorithms/regex_match/extended/\n\tcstring_bracket_01.cc: Add new \"[[=a=]]\" testcase.\n\nFrom-SVN: r203117", "tree": {"sha": "3a79396240997b064f90d8d8e3db92b75c0fcf6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a79396240997b064f90d8d8e3db92b75c0fcf6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/756aa0c30268da6b1de3bf6b9b427eefe8520d57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/756aa0c30268da6b1de3bf6b9b427eefe8520d57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/756aa0c30268da6b1de3bf6b9b427eefe8520d57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/756aa0c30268da6b1de3bf6b9b427eefe8520d57/comments", "author": {"login": "timshen91", "id": 1157432, "node_id": "MDQ6VXNlcjExNTc0MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/1157432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timshen91", "html_url": "https://github.com/timshen91", "followers_url": "https://api.github.com/users/timshen91/followers", "following_url": "https://api.github.com/users/timshen91/following{/other_user}", "gists_url": "https://api.github.com/users/timshen91/gists{/gist_id}", "starred_url": "https://api.github.com/users/timshen91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timshen91/subscriptions", "organizations_url": "https://api.github.com/users/timshen91/orgs", "repos_url": "https://api.github.com/users/timshen91/repos", "events_url": "https://api.github.com/users/timshen91/events{/privacy}", "received_events_url": "https://api.github.com/users/timshen91/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "90926a2da5f122aaf28baf379c30d9d2f97d2475", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90926a2da5f122aaf28baf379c30d9d2f97d2475", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90926a2da5f122aaf28baf379c30d9d2f97d2475"}], "stats": {"total": 40, "additions": 30, "deletions": 10}, "files": [{"sha": "61c20a256657206d1c3bea4507a21cac2f171a3e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/756aa0c30268da6b1de3bf6b9b427eefe8520d57/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/756aa0c30268da6b1de3bf6b9b427eefe8520d57/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=756aa0c30268da6b1de3bf6b9b427eefe8520d57", "patch": "@@ -1,3 +1,12 @@\n+2013-10-02  Tim Shen  <timshen91@gmail.com>\n+\n+\t* include/bits/regex_compiler.h\n+\t(_BracketMatcher<>::_M_add_equivalence_class): Implement it correctly.\n+\t* include/bits/regex_compiler.tcc (_BracketMatcher<>::operator()):\n+\tAdd _M_equiv_set support.\n+\t* testsuite/28_regex/algorithms/regex_match/extended/\n+\tcstring_bracket_01.cc: Add new \"[[=a=]]\" testcase.\n+\n 2013-10-01  Tim Shen  <timshen91@gmail.com>\n \n \t* doc/xml/manual/status_cxx2011.xml: Change \"is not implemented\" to"}, {"sha": "297fe3f60e9be8daaeb1a5fb20822e000835f8df", "filename": "libstdc++-v3/include/bits/regex_compiler.h", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/756aa0c30268da6b1de3bf6b9b427eefe8520d57/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_compiler.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/756aa0c30268da6b1de3bf6b9b427eefe8520d57/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_compiler.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_compiler.h?ref=756aa0c30268da6b1de3bf6b9b427eefe8520d57", "patch": "@@ -213,19 +213,24 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       void\n       _M_add_equivalence_class(const _StringT& __s)\n       {\n-\t_M_add_character_class(\n-\t  _M_traits.transform_primary(__s.data(),\n-\t\t\t\t      __s.data() + __s.size()));\n+\tauto __st = _M_traits.lookup_collatename(__s.data(),\n+\t\t\t\t\t\t __s.data() + __s.size());\n+\tif (__st.empty())\n+\t  __throw_regex_error(regex_constants::error_collate);\n+\t__st = _M_traits.transform_primary(__st.data(),\n+\t\t\t\t\t   __st.data() + __st.size());\n+\t_M_equiv_set.insert(__st);\n       }\n \n       void\n       _M_add_character_class(const _StringT& __s)\n       {\n-\tauto __st = _M_traits.\n-\t  lookup_classname(__s.data(), __s.data() + __s.size(), _M_is_icase());\n-\tif (__st == 0)\n+\tauto __mask = _M_traits.lookup_classname(__s.data(),\n+\t\t\t\t\t\t __s.data() + __s.size(),\n+\t\t\t\t\t\t _M_is_icase());\n+\tif (__mask == 0)\n \t  __throw_regex_error(regex_constants::error_ctype);\n-\t_M_class_set |= __st;\n+\t_M_class_set |= __mask;\n       }\n \n       void\n@@ -260,6 +265,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       }\n \n       std::set<_CharT>                   _M_char_set;\n+      std::set<_StringT>                 _M_equiv_set;\n       std::set<pair<_StringT, _StringT>> _M_range_set;\n       const _TraitsT&                    _M_traits;\n       _CharClassT                        _M_class_set;"}, {"sha": "5225bc1ee6ce9fe1095c16655e6052b3fd2d2ac3", "filename": "libstdc++-v3/include/bits/regex_compiler.tcc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/756aa0c30268da6b1de3bf6b9b427eefe8520d57/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_compiler.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/756aa0c30268da6b1de3bf6b9b427eefe8520d57/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_compiler.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_compiler.tcc?ref=756aa0c30268da6b1de3bf6b9b427eefe8520d57", "patch": "@@ -437,9 +437,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator()(_CharT __ch) const\n     {\n       bool __ret = false;\n-      if (_M_traits.isctype(__ch, _M_class_set))\n-\t__ret = true;\n-      else if (_M_char_set.count(_M_translate(__ch)))\n+      if (_M_traits.isctype(__ch, _M_class_set)\n+\t  || _M_char_set.count(_M_translate(__ch))\n+\t  || _M_equiv_set.count(_M_traits.transform_primary(&__ch, &__ch+1)))\n \t__ret = true;\n       else\n \t{"}, {"sha": "5d8378556c660ab2eff68e9879979b316f348c9f", "filename": "libstdc++-v3/testsuite/28_regex/algorithms/regex_match/extended/cstring_bracket_01.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/756aa0c30268da6b1de3bf6b9b427eefe8520d57/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fextended%2Fcstring_bracket_01.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/756aa0c30268da6b1de3bf6b9b427eefe8520d57/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fextended%2Fcstring_bracket_01.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fextended%2Fcstring_bracket_01.cc?ref=756aa0c30268da6b1de3bf6b9b427eefe8520d57", "patch": "@@ -56,6 +56,11 @@ test01()\n     VERIFY( std::regex_match(\"pre/a\", re) );\n     VERIFY( std::regex_match(\"pre/0\", re) );\n   }\n+  {\n+    std::regex  re(\"pre/[[=a=]]\", std::regex::extended);\n+    VERIFY( std::regex_match(\"pre/a\", re) );\n+    VERIFY( std::regex_match(\"pre/A\", re) );\n+  }\n }\n \n int"}]}