{"sha": "575a1b32b7acd6ef04631160d4f8ccf9f7861479", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc1YTFiMzJiN2FjZDZlZjA0NjMxMTYwZDRmOGNjZjlmNzg2MTQ3OQ==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2008-08-22T15:07:18Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-22T15:07:18Z"}, "message": "exp_ch3.adb (Build_Init_Statements): Transfer to the body of the init procedure all the expanded code associated...\n\n2008-08-22  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_ch3.adb (Build_Init_Statements): Transfer to the body of the\n\tinit procedure all the expanded code associated with the spec of\n\ttask types and protected types.\n\nFrom-SVN: r139483", "tree": {"sha": "88471146f4dca476c99d4275f21aa6f42f44848a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88471146f4dca476c99d4275f21aa6f42f44848a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/575a1b32b7acd6ef04631160d4f8ccf9f7861479", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/575a1b32b7acd6ef04631160d4f8ccf9f7861479", "html_url": "https://github.com/Rust-GCC/gccrs/commit/575a1b32b7acd6ef04631160d4f8ccf9f7861479", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/575a1b32b7acd6ef04631160d4f8ccf9f7861479/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2743d81dfb1465ffec5c293b95139dbefe1f233e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2743d81dfb1465ffec5c293b95139dbefe1f233e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2743d81dfb1465ffec5c293b95139dbefe1f233e"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "f2b3eaff0e3fa1a7c6142a56c3b139c1c25466de", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/575a1b32b7acd6ef04631160d4f8ccf9f7861479/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/575a1b32b7acd6ef04631160d4f8ccf9f7861479/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=575a1b32b7acd6ef04631160d4f8ccf9f7861479", "patch": "@@ -2515,6 +2515,47 @@ package body Exp_Ch3 is\n \n          Statement_List := New_List;\n \n+         --  Loop through visible declarations of task types and protected\n+         --  types moving any expanded code from the spec to the body of the\n+         --  init procedure\n+\n+         if Is_Task_Record_Type (Rec_Type)\n+           or else Is_Protected_Record_Type (Rec_Type)\n+         then\n+            declare\n+               Decl : constant Node_Id :=\n+                        Parent (Corresponding_Concurrent_Type (Rec_Type));\n+               Def  : Node_Id;\n+               N1   : Node_Id;\n+               N2   : Node_Id;\n+\n+            begin\n+               if Is_Task_Record_Type (Rec_Type) then\n+                  Def := Task_Definition (Decl);\n+               else\n+                  Def := Protected_Definition (Decl);\n+               end if;\n+\n+               if Present (Def) then\n+                  N1 := First (Visible_Declarations (Def));\n+                  while Present (N1) loop\n+                     N2 := N1;\n+                     N1 := Next (N1);\n+\n+                     if Nkind (N2) in N_Statement_Other_Than_Procedure_Call\n+                       or else Nkind (N2) in N_Raise_xxx_Error\n+                       or else Nkind (N2) = N_Procedure_Call_Statement\n+                     then\n+                        Append_To (Statement_List,\n+                          New_Copy_Tree (N2, New_Scope => Proc_Id));\n+                        Rewrite (N2, Make_Null_Statement (Sloc (N2)));\n+                        Analyze (N2);\n+                     end if;\n+                  end loop;\n+               end if;\n+            end;\n+         end if;\n+\n          --  Loop through components, skipping pragmas, in 2 steps. The first\n          --  step deals with regular components. The second step deals with\n          --  components have per object constraints, and no explicit initia-"}]}