{"sha": "57c7a33b979a475f38bb3c107016a06bf09f2ebf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdjN2EzM2I5NzlhNDc1ZjM4YmIzYzEwNzAxNmEwNmJmMDlmMmViZg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-07-20T16:47:24Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-07-20T16:47:24Z"}, "message": "compiler: Remove unnecessary check for GCC-specific issue.\n\n    Reviewed-on: https://go-review.googlesource.com/11800\n\n    compiler: remove name of unused parameter to avoid warning\n    \n    Reviewed-on: https://go-review.googlesource.com/12367\n\nFrom-SVN: r226007", "tree": {"sha": "ba02d0bae313ce88f0ce8192375800ec55f424ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba02d0bae313ce88f0ce8192375800ec55f424ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57c7a33b979a475f38bb3c107016a06bf09f2ebf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57c7a33b979a475f38bb3c107016a06bf09f2ebf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57c7a33b979a475f38bb3c107016a06bf09f2ebf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57c7a33b979a475f38bb3c107016a06bf09f2ebf/comments", "author": null, "committer": null, "parents": [{"sha": "824478c04c49adfe005b23ab33a25795ee4ccf84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/824478c04c49adfe005b23ab33a25795ee4ccf84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/824478c04c49adfe005b23ab33a25795ee4ccf84"}], "stats": {"total": 15, "additions": 2, "deletions": 13}, "files": [{"sha": "1b1e3cdc04548dff54cebe4b2e977bf8995e0fbd", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57c7a33b979a475f38bb3c107016a06bf09f2ebf/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57c7a33b979a475f38bb3c107016a06bf09f2ebf/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=57c7a33b979a475f38bb3c107016a06bf09f2ebf", "patch": "@@ -1,4 +1,4 @@\n-2c985e4781691fea3eb4171de85265bfbc4e4997\n+19ff97ed3eb07d902bc4b3f97b21c4b6df834ad2\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "23511292e5b86e5f5e1f7686dca46ecb9bb0e67a", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57c7a33b979a475f38bb3c107016a06bf09f2ebf/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57c7a33b979a475f38bb3c107016a06bf09f2ebf/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=57c7a33b979a475f38bb3c107016a06bf09f2ebf", "patch": "@@ -133,7 +133,7 @@ Expression::determine_type_no_context()\n // assignment.\n \n Expression*\n-Expression::convert_for_assignment(Gogo* gogo, Type* lhs_type,\n+Expression::convert_for_assignment(Gogo*, Type* lhs_type,\n \t\t\t\t   Expression* rhs, Location location)\n {\n   Type* rhs_type = rhs->type();\n@@ -177,17 +177,6 @@ Expression::convert_for_assignment(Gogo* gogo, Type* lhs_type,\n            || (lhs_type->array_type() != NULL\n                && rhs_type->array_type() != NULL))\n     {\n-      // Avoid confusion from zero sized variables which may be\n-      // represented as non-zero-sized.\n-      // TODO(cmang): This check is for a GCC-specific issue, and should be\n-      // removed from the frontend.  FIXME.\n-      int64_t lhs_size =\n-\tgogo->backend()->type_size(lhs_type->get_backend(gogo));\n-      int64_t rhs_size =\n-\tgogo->backend()->type_size(rhs_type->get_backend(gogo));\n-      if (rhs_size == 0 || lhs_size == 0)\n-\treturn rhs;\n-\n       // This conversion must be permitted by Go, or we wouldn't have\n       // gotten here.\n       return Expression::make_unsafe_cast(lhs_type, rhs, location);"}]}