{"sha": "64e5ace535448901c3e29cc1f6612e6c8d2a0a0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRlNWFjZTUzNTQ0ODkwMWMzZTI5Y2MxZjY2MTJlNmM4ZDJhMGEwYw==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2014-02-12T14:46:08Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2014-02-12T14:46:08Z"}, "message": "Fix potential ICE (null pointer dereference) in omp-low.c:diagnose_sb_0.\n\n\tgcc/\n\t* omp-low.c (diagnose_sb_0): Make sure label_ctx is valid to\n\tdereference.\n\tgcc/testsuite/\n\t* gcc.dg/cilk-plus/jump-openmp.c: New file.\n\nFrom-SVN: r207722", "tree": {"sha": "89f989ac44affc877db59bdd2965712c0ec6572a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89f989ac44affc877db59bdd2965712c0ec6572a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64e5ace535448901c3e29cc1f6612e6c8d2a0a0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64e5ace535448901c3e29cc1f6612e6c8d2a0a0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64e5ace535448901c3e29cc1f6612e6c8d2a0a0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64e5ace535448901c3e29cc1f6612e6c8d2a0a0c/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7b40f5cf04d6edc82777c4eca0c5b62bae76ee7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b40f5cf04d6edc82777c4eca0c5b62bae76ee7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b40f5cf04d6edc82777c4eca0c5b62bae76ee7e"}], "stats": {"total": 61, "additions": 60, "deletions": 1}, "files": [{"sha": "78bf50692eb3c4ebb89acca316eca6a2236b8c23", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64e5ace535448901c3e29cc1f6612e6c8d2a0a0c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64e5ace535448901c3e29cc1f6612e6c8d2a0a0c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=64e5ace535448901c3e29cc1f6612e6c8d2a0a0c", "patch": "@@ -1,3 +1,8 @@\n+2014-02-12  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* omp-low.c (diagnose_sb_0): Make sure label_ctx is valid to\n+\tdereference.\n+\n 2014-02-12  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/arm/aarch-cost-tables.h (generic_extra_costs): Fix"}, {"sha": "ff3d2e80fb89260f437e4c96fa82b2840bb6a64d", "filename": "gcc/omp-low.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64e5ace535448901c3e29cc1f6612e6c8d2a0a0c/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64e5ace535448901c3e29cc1f6612e6c8d2a0a0c/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=64e5ace535448901c3e29cc1f6612e6c8d2a0a0c", "patch": "@@ -10269,7 +10269,8 @@ diagnose_sb_0 (gimple_stmt_iterator *gsi_p,\n       if ((branch_ctx\n \t   && gimple_code (branch_ctx) == GIMPLE_OMP_FOR\n \t   && gimple_omp_for_kind (branch_ctx) == GF_OMP_FOR_KIND_CILKSIMD)\n-\t  || (gimple_code (label_ctx) == GIMPLE_OMP_FOR\n+\t  || (label_ctx\n+\t      && gimple_code (label_ctx) == GIMPLE_OMP_FOR\n \t      && gimple_omp_for_kind (label_ctx) == GF_OMP_FOR_KIND_CILKSIMD))\n \tcilkplus_block = true;\n     }"}, {"sha": "46d5ff80e532eb654f76e42b58389d5c29e15507", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64e5ace535448901c3e29cc1f6612e6c8d2a0a0c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64e5ace535448901c3e29cc1f6612e6c8d2a0a0c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=64e5ace535448901c3e29cc1f6612e6c8d2a0a0c", "patch": "@@ -1,3 +1,7 @@\n+2014-02-12  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* gcc.dg/cilk-plus/jump-openmp.c: New file.\n+\n 2014-02-12  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/60092"}, {"sha": "95e6b2d440309f7a6ce9254f977187de03b5908d", "filename": "gcc/testsuite/gcc.dg/cilk-plus/jump-openmp.c", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64e5ace535448901c3e29cc1f6612e6c8d2a0a0c/gcc%2Ftestsuite%2Fgcc.dg%2Fcilk-plus%2Fjump-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64e5ace535448901c3e29cc1f6612e6c8d2a0a0c/gcc%2Ftestsuite%2Fgcc.dg%2Fcilk-plus%2Fjump-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcilk-plus%2Fjump-openmp.c?ref=64e5ace535448901c3e29cc1f6612e6c8d2a0a0c", "patch": "@@ -0,0 +1,49 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fcilkplus -fopenmp\" } */\n+/* { dg-require-effective-target fopenmp } */\n+\n+int *a, *b, c;\n+\n+void foo()\n+{\n+#pragma simd\n+  for (int i=0; i < 1000; ++i)\n+    {\n+      a[i] = b[i];\n+      if (c == 5)\n+\treturn; /* { dg-error \"invalid branch to/from a Cilk Plus structured block\" } */\n+    }\n+}\n+\n+void bar()\n+{\n+#pragma simd\n+  for (int i=0; i < 1000; ++i)\n+    {\n+    lab:\n+      a[i] = b[i];\n+    }\n+  if (c == 6)\n+    goto lab; /* { dg-error \"invalid entry to Cilk Plus structured block\" } */\n+}\n+\n+void baz()\n+{\n+  bad1:\n+  #pragma omp parallel\n+    goto bad1; /* { dg-error \"invalid branch to/from an OpenMP structured block\" } */\n+\n+  goto bad2; /* { dg-error \"invalid entry to OpenMP structured block\" } */\n+  #pragma omp parallel\n+    {\n+      bad2: ;\n+    }\n+\n+  #pragma omp parallel\n+    {\n+      int i;\n+      goto ok1;\n+      for (i = 0; i < 10; ++i)\n+\t{ ok1: break; }\n+    }\n+}"}]}