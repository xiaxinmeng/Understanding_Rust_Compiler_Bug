{"sha": "8fdcb6a997e7125d155b79947a1793f01611527b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZkY2I2YTk5N2U3MTI1ZDE1NWI3OTk0N2ExNzkzZjAxNjExNTI3Yg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2014-06-12T18:35:00Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2014-06-12T18:35:00Z"}, "message": "gfortran.h (gfc_copy_formal_args_intr): Update prototype.\n\n2014-06-12  Tobias Burnus  <burnus@net-b.de>\n\n        * gfortran.h (gfc_copy_formal_args_intr): Update prototype.\n        * symbol.c (gfc_copy_formal_args_intr): Handle the case\n        that absent optional arguments should be ignored.\n        * trans-intrinsic.c (gfc_get_symbol_for_expr): Ditto.\n        (gfc_conv_intrinsic_funcall,\n        conv_generic_with_optional_char_arg): Update call.\n        * resolve.c (gfc_resolve_intrinsic): Ditto.\n\nFrom-SVN: r211587", "tree": {"sha": "031a2f7aac4534d08879ee1f3ad488ddc5eec811", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/031a2f7aac4534d08879ee1f3ad488ddc5eec811"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fdcb6a997e7125d155b79947a1793f01611527b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fdcb6a997e7125d155b79947a1793f01611527b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fdcb6a997e7125d155b79947a1793f01611527b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fdcb6a997e7125d155b79947a1793f01611527b/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "551a6341d5d0fed634c71f710bdae6d7b6b1491e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/551a6341d5d0fed634c71f710bdae6d7b6b1491e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/551a6341d5d0fed634c71f710bdae6d7b6b1491e"}], "stats": {"total": 46, "additions": 38, "deletions": 8}, "files": [{"sha": "53aabd8faa045f065fe4338e915d123bff117bbd", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fdcb6a997e7125d155b79947a1793f01611527b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fdcb6a997e7125d155b79947a1793f01611527b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8fdcb6a997e7125d155b79947a1793f01611527b", "patch": "@@ -1,3 +1,13 @@\n+2014-06-12  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gfortran.h (gfc_copy_formal_args_intr): Update prototype.\n+\t* symbol.c (gfc_copy_formal_args_intr): Handle the case\n+\tthat absent optional arguments should be ignored.\n+\t* trans-intrinsic.c (gfc_get_symbol_for_expr): Ditto.\n+\t(gfc_conv_intrinsic_funcall,\n+\tconv_generic_with_optional_char_arg): Update call.\n+\t* resolve.c (gfc_resolve_intrinsic): Ditto.\n+\n 2014-06-10  Dominique d'Humieres <dominiq@lps.ens.fr>\n \t    Mikael Morin <mikael@gcc.gnu.org>\n "}, {"sha": "1df79fdbe05ab381d7fc3b8bd7b4c3f806e0a7ad", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fdcb6a997e7125d155b79947a1793f01611527b/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fdcb6a997e7125d155b79947a1793f01611527b/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=8fdcb6a997e7125d155b79947a1793f01611527b", "patch": "@@ -2785,7 +2785,8 @@ gfc_symbol* gfc_get_ultimate_derived_super_type (gfc_symbol*);\n bool gfc_type_is_extension_of (gfc_symbol *, gfc_symbol *);\n bool gfc_type_compatible (gfc_typespec *, gfc_typespec *);\n \n-void gfc_copy_formal_args_intr (gfc_symbol *, gfc_intrinsic_sym *);\n+void gfc_copy_formal_args_intr (gfc_symbol *, gfc_intrinsic_sym *,\n+\t\t\t\tgfc_actual_arglist *);\n \n void gfc_free_finalizer (gfc_finalizer *el); /* Needed in resolve.c, too  */\n "}, {"sha": "bc2db7deb58afebb7d0a22266e9d60b136ed9562", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fdcb6a997e7125d155b79947a1793f01611527b/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fdcb6a997e7125d155b79947a1793f01611527b/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=8fdcb6a997e7125d155b79947a1793f01611527b", "patch": "@@ -1674,7 +1674,7 @@ gfc_resolve_intrinsic (gfc_symbol *sym, locus *loc)\n       return false;\n     }\n \n-  gfc_copy_formal_args_intr (sym, isym);\n+  gfc_copy_formal_args_intr (sym, isym, NULL);\n \n   sym->attr.pure = isym->pure;\n   sym->attr.elemental = isym->elemental;"}, {"sha": "922b421b5e1c96ee81cdf2a5e64c226b230357b2", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fdcb6a997e7125d155b79947a1793f01611527b/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fdcb6a997e7125d155b79947a1793f01611527b/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=8fdcb6a997e7125d155b79947a1793f01611527b", "patch": "@@ -4042,16 +4042,21 @@ add_proc_interface (gfc_symbol *sym, ifsrc source, gfc_formal_arglist *formal)\n    each arg is set according to the existing ones.  This function is\n    used when creating procedure declaration variables from a procedure\n    declaration statement (see match_proc_decl()) to create the formal\n-   args based on the args of a given named interface.  */\n+   args based on the args of a given named interface.\n+\n+   When an actual argument list is provided, skip the absent arguments.\n+   To be used together with gfc_se->ignore_optional.  */\n \n void\n-gfc_copy_formal_args_intr (gfc_symbol *dest, gfc_intrinsic_sym *src)\n+gfc_copy_formal_args_intr (gfc_symbol *dest, gfc_intrinsic_sym *src,\n+\t\t\t   gfc_actual_arglist *actual)\n {\n   gfc_formal_arglist *head = NULL;\n   gfc_formal_arglist *tail = NULL;\n   gfc_formal_arglist *formal_arg = NULL;\n   gfc_intrinsic_arg *curr_arg = NULL;\n   gfc_formal_arglist *formal_prev = NULL;\n+  gfc_actual_arglist *act_arg = actual;\n   /* Save current namespace so we can change it for formal args.  */\n   gfc_namespace *parent_ns = gfc_current_ns;\n \n@@ -4062,6 +4067,17 @@ gfc_copy_formal_args_intr (gfc_symbol *dest, gfc_intrinsic_sym *src)\n \n   for (curr_arg = src->formal; curr_arg; curr_arg = curr_arg->next)\n     {\n+      /* Skip absent arguments.  */\n+      if (actual)\n+\t{\n+\t  gcc_assert (act_arg != NULL);\n+\t  if (act_arg->expr == NULL)\n+\t    {\n+\t      act_arg = act_arg->next;\n+\t      continue;\n+\t    }\n+\t  act_arg = act_arg->next;\n+\t}\n       formal_arg = gfc_get_formal_arglist ();\n       gfc_get_symbol (curr_arg->name, gfc_current_ns, &(formal_arg->sym));\n "}, {"sha": "2ac39f67bf2d64a1f3d0dff64e262326490affdd", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fdcb6a997e7125d155b79947a1793f01611527b/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fdcb6a997e7125d155b79947a1793f01611527b/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=8fdcb6a997e7125d155b79947a1793f01611527b", "patch": "@@ -2371,7 +2371,7 @@ gfc_conv_intrinsic_minmax_char (gfc_se * se, gfc_expr * expr, int op)\n    has the generic name.  */\n \n static gfc_symbol *\n-gfc_get_symbol_for_expr (gfc_expr * expr)\n+gfc_get_symbol_for_expr (gfc_expr * expr, bool ignore_optional)\n {\n   gfc_symbol *sym;\n \n@@ -2394,7 +2394,9 @@ gfc_get_symbol_for_expr (gfc_expr * expr)\n       sym->as->rank = expr->rank;\n     }\n \n-  gfc_copy_formal_args_intr (sym, expr->value.function.isym);\n+  gfc_copy_formal_args_intr (sym, expr->value.function.isym,\n+\t\t\t     ignore_optional ? expr->value.function.actual\n+\t\t\t\t\t     : NULL);\n \n   return sym;\n }\n@@ -2413,7 +2415,7 @@ gfc_conv_intrinsic_funcall (gfc_se * se, gfc_expr * expr)\n   else\n     gcc_assert (expr->rank == 0);\n \n-  sym = gfc_get_symbol_for_expr (expr);\n+  sym = gfc_get_symbol_for_expr (expr, se->ignore_optional);\n \n   /* Calls to libgfortran_matmul need to be appended special arguments,\n      to be able to call the BLAS ?gemm functions if required and possible.  */\n@@ -4584,7 +4586,8 @@ conv_generic_with_optional_char_arg (gfc_se* se, gfc_expr* expr,\n     }\n \n   /* Build the call itself.  */\n-  sym = gfc_get_symbol_for_expr (expr);\n+  gcc_assert (!se->ignore_optional);\n+  sym = gfc_get_symbol_for_expr (expr, false);\n   gfc_conv_procedure_call (se, sym, expr->value.function.actual, expr,\n \t\t\t  append_args);\n   gfc_free_symbol (sym);"}]}