{"sha": "79c3dc5f228cee5f58747deb1efa0b36b99bc41d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzljM2RjNWYyMjhjZWU1ZjU4NzQ3ZGViMWVmYTBiMzZiOTliYzQxZA==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2010-09-09T13:54:34Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2010-09-09T13:54:34Z"}, "message": "trans-array.c (gfc_trans_preloop_setup): Unconditionally use the dim array to get the stride in the innermost loop.\n\n2010-09-09  Mikael Morin  <mikael@gcc.gnu.org>\n\n\t* trans-array.c (gfc_trans_preloop_setup): Unconditionally use the\n\tdim array to get the stride in the innermost loop.\n\nFrom-SVN: r164103", "tree": {"sha": "6bac629827d8bd992b426f10e79ef0f912d1c15f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bac629827d8bd992b426f10e79ef0f912d1c15f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79c3dc5f228cee5f58747deb1efa0b36b99bc41d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79c3dc5f228cee5f58747deb1efa0b36b99bc41d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79c3dc5f228cee5f58747deb1efa0b36b99bc41d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79c3dc5f228cee5f58747deb1efa0b36b99bc41d/comments", "author": null, "committer": null, "parents": [{"sha": "de8e52f063c997bed974210186c9105e9c0a019d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de8e52f063c997bed974210186c9105e9c0a019d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de8e52f063c997bed974210186c9105e9c0a019d"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "2483ad9bea722bdbd0c544b1ebbd3d028f738153", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79c3dc5f228cee5f58747deb1efa0b36b99bc41d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79c3dc5f228cee5f58747deb1efa0b36b99bc41d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=79c3dc5f228cee5f58747deb1efa0b36b99bc41d", "patch": "@@ -1,3 +1,8 @@\n+2010-09-09  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* trans-array.c (gfc_trans_preloop_setup): Unconditionally use the\n+\tdim array to get the stride in the innermost loop.\n+\n 2010-09-09  Mikael Morin  <mikael@gcc.gnu.org>\n \n \t* trans-array.c (gfc_trans_create_temp_array): Don't set dim array."}, {"sha": "e0bc34fe3b0290291b804d07544c0ae7bf99a70b", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79c3dc5f228cee5f58747deb1efa0b36b99bc41d/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79c3dc5f228cee5f58747deb1efa0b36b99bc41d/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=79c3dc5f228cee5f58747deb1efa0b36b99bc41d", "patch": "@@ -2772,16 +2772,17 @@ gfc_trans_preloop_setup (gfc_loopinfo * loop, int dim, int flag,\n \t\t\t\t\t\t  info->offset, index);\n \t\t  info->offset = gfc_evaluate_now (info->offset, pblock);\n \t\t}\n-\n-\t      i = loop->order[0];\n-\t      stride = gfc_conv_array_stride (info->descriptor, info->dim[i]);\n \t    }\n-\t  else\n-\t    stride = gfc_conv_array_stride (info->descriptor, 0);\n+\n+\t  i = loop->order[0];\n+\t  /* For the time being, the innermost loop is unconditionally on\n+\t     the first dimension of the scalarization loop.  */\n+\t  gcc_assert (i == 0);\n+\t  stride = gfc_conv_array_stride (info->descriptor, info->dim[i]);\n \n \t  /* Calculate the stride of the innermost loop.  Hopefully this will\n-             allow the backend optimizers to do their stuff more effectively.\n-           */\n+\t     allow the backend optimizers to do their stuff more effectively.\n+\t   */\n \t  info->stride0 = gfc_evaluate_now (stride, pblock);\n \t}\n       else"}]}