{"sha": "8eb7bc3cda0c8a6560712056642b5dff43895f74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGViN2JjM2NkYTBjOGE2NTYwNzEyMDU2NjQyYjVkZmY0Mzg5NWY3NA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-05-03T16:12:12Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-05-03T16:12:12Z"}, "message": "re PR tree-optimization/43971 (index domain error in tree-ssa-structalias.c:3450)\n\n2010-05-03  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/43971\n\t* tree-ssa-structalias.c (get_constraint_for_1): Fix\n\tconstraints in the !flag_delete_null_pointer_checks case.\n\n\t* gcc.dg/pr43971.c: New testcase.\n\nFrom-SVN: r158991", "tree": {"sha": "a92f9510fa143f7221f6a70ec0a5721b86f12e77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a92f9510fa143f7221f6a70ec0a5721b86f12e77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8eb7bc3cda0c8a6560712056642b5dff43895f74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eb7bc3cda0c8a6560712056642b5dff43895f74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8eb7bc3cda0c8a6560712056642b5dff43895f74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eb7bc3cda0c8a6560712056642b5dff43895f74/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c4e26da143564e081c6c68ae5a7e32647fbea8ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4e26da143564e081c6c68ae5a7e32647fbea8ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4e26da143564e081c6c68ae5a7e32647fbea8ac"}], "stats": {"total": 47, "additions": 37, "deletions": 10}, "files": [{"sha": "e461f4b9ec18a2f18b780fffcb40eaa35aeaffd7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb7bc3cda0c8a6560712056642b5dff43895f74/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb7bc3cda0c8a6560712056642b5dff43895f74/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8eb7bc3cda0c8a6560712056642b5dff43895f74", "patch": "@@ -1,3 +1,9 @@\n+2010-05-03  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/43971\n+\t* tree-ssa-structalias.c (get_constraint_for_1): Fix\n+\tconstraints in the !flag_delete_null_pointer_checks case.\n+\n 2010-05-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/43972"}, {"sha": "019661ec8e00161add32f057ebadd6f05f7acb02", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb7bc3cda0c8a6560712056642b5dff43895f74/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb7bc3cda0c8a6560712056642b5dff43895f74/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8eb7bc3cda0c8a6560712056642b5dff43895f74", "patch": "@@ -1,3 +1,8 @@\n+2010-05-03  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/43971\n+\t* gcc.dg/pr43971.c: New testcase.\n+\n 2010-05-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/43972"}, {"sha": "9091fc27326c9231fdb935eca8d50963ef14dd46", "filename": "gcc/testsuite/gcc.dg/pr43971.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb7bc3cda0c8a6560712056642b5dff43895f74/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43971.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb7bc3cda0c8a6560712056642b5dff43895f74/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43971.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43971.c?ref=8eb7bc3cda0c8a6560712056642b5dff43895f74", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Os -fno-delete-null-pointer-checks\" } */\n+\n+union ktime {\n+    long tv64;\n+};\n+typedef union ktime ktime_t;\n+ktime_t\n+do_one_initcall(ktime_t rettime, ktime_t calltime)\n+{\n+    ktime_t delta;\n+    delta = ({ (ktime_t){ .tv64 = (rettime).tv64 - (calltime).tv64 }; });\n+    return delta;\n+}"}, {"sha": "89b5c9cd5768b373d4a49eacbf556661316f41af", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb7bc3cda0c8a6560712056642b5dff43895f74/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb7bc3cda0c8a6560712056642b5dff43895f74/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=8eb7bc3cda0c8a6560712056642b5dff43895f74", "patch": "@@ -3286,16 +3286,18 @@ get_constraint_for_1 (tree t, VEC (ce_s, heap) **results, bool address_p)\n      in that case *NULL does not fail, so it _should_ alias *anything.\n      It is not worth adding a new option or renaming the existing one,\n      since this case is relatively obscure.  */\n-  if (flag_delete_null_pointer_checks\n-      && ((TREE_CODE (t) == INTEGER_CST\n-\t   && integer_zerop (t))\n-\t  /* The only valid CONSTRUCTORs in gimple with pointer typed\n-\t     elements are zero-initializer.  But in IPA mode we also\n-\t     process global initializers, so verify at least.  */\n-\t  || (TREE_CODE (t) == CONSTRUCTOR\n-\t      && CONSTRUCTOR_NELTS (t) == 0)))\n-    {\n-      temp.var = nothing_id;\n+  if ((TREE_CODE (t) == INTEGER_CST\n+       && integer_zerop (t))\n+      /* The only valid CONSTRUCTORs in gimple with pointer typed\n+\t elements are zero-initializer.  But in IPA mode we also\n+\t process global initializers, so verify at least.  */\n+      || (TREE_CODE (t) == CONSTRUCTOR\n+\t  && CONSTRUCTOR_NELTS (t) == 0))\n+    {\n+      if (flag_delete_null_pointer_checks)\n+\ttemp.var = nothing_id;\n+      else\n+\ttemp.var = anything_id;\n       temp.type = ADDRESSOF;\n       temp.offset = 0;\n       VEC_safe_push (ce_s, heap, *results, &temp);"}]}