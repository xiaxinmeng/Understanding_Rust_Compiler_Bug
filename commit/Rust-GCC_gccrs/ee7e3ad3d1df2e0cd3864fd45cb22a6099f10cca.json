{"sha": "ee7e3ad3d1df2e0cd3864fd45cb22a6099f10cca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU3ZTNhZDNkMWRmMmUwY2QzODY0ZmQ0NWNiMjJhNjA5OWYxMGNjYQ==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2009-04-18T11:16:37Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2009-04-18T11:16:37Z"}, "message": "avr.md (*rotlsi3_8, [...]): Check whether operands 0 and 1 overlaps.\n\n\t* config/avr/avr.md (*rotlsi3_8, *rotlsi3_16, *rotlsi3_24 ): Check\n\twhether operands 0 and 1 overlaps.\n\nFrom-SVN: r146309", "tree": {"sha": "a8ab1c4c0b0fc9eb95ee02fe3b99693b09395002", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8ab1c4c0b0fc9eb95ee02fe3b99693b09395002"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee7e3ad3d1df2e0cd3864fd45cb22a6099f10cca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee7e3ad3d1df2e0cd3864fd45cb22a6099f10cca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee7e3ad3d1df2e0cd3864fd45cb22a6099f10cca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee7e3ad3d1df2e0cd3864fd45cb22a6099f10cca/comments", "author": null, "committer": null, "parents": [{"sha": "0a629857bcb96127913375be6cc48805e26d0c94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a629857bcb96127913375be6cc48805e26d0c94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a629857bcb96127913375be6cc48805e26d0c94"}], "stats": {"total": 82, "additions": 62, "deletions": 20}, "files": [{"sha": "ab0c165e4d9c7f1f746737703dde247925206130", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee7e3ad3d1df2e0cd3864fd45cb22a6099f10cca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee7e3ad3d1df2e0cd3864fd45cb22a6099f10cca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ee7e3ad3d1df2e0cd3864fd45cb22a6099f10cca", "patch": "@@ -1,3 +1,8 @@\n+2009-04-08  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/avr/avr.md (*rotlsi3_8, *rotlsi3_16, *rotlsi3_24 ): Check\n+\twhether operands 0 and 1 overlaps.\n+\n 2009-04-18  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR middle-end/36902"}, {"sha": "269e2c5ddb5dc49285545ce2c01e13a9d0c41d80", "filename": "gcc/config/avr/avr.md", "status": "modified", "additions": 57, "deletions": 20, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee7e3ad3d1df2e0cd3864fd45cb22a6099f10cca/gcc%2Fconfig%2Favr%2Favr.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee7e3ad3d1df2e0cd3864fd45cb22a6099f10cca/gcc%2Fconfig%2Favr%2Favr.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.md?ref=ee7e3ad3d1df2e0cd3864fd45cb22a6099f10cca", "patch": "@@ -1478,7 +1478,7 @@\n \t(rotate:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t   (const_int 16)))]\n   \"\"\n-  \"{mov __tmp_reg__,%A0\\;mov %A0,%D0\\;mov %D0, __tmp_reg__\\;mov __tmp_reg__,%B0\\;mov %B0,%C0\\;mov %C0, __tmp_reg__|movw __tmp_reg__,%A0\\;movw %A0,%C0\\;movw %C0, __tmp_reg__\\;clr __zero_reg__}\"\n+  \"{mov __tmp_reg__,%A1\\;mov %A0,%C1\\;mov %C0, __tmp_reg__\\;mov __tmp_reg__,%B1\\;mov %B0,%D1\\;mov %D0, __tmp_reg__|movw __tmp_reg__,%A1\\;movw %A0,%C1\\;movw %C0, __tmp_reg__\\;clr __zero_reg__}\"\n   \"reload_completed\n    && REGNO (operands[0]) != REGNO (operands[1])\"\n   [(set (match_dup 2) (match_dup 5))\n@@ -1490,7 +1490,18 @@\n    operands[3] = simplify_gen_subreg (HImode, operands[0], SImode, si_hi_off);\n \n    operands[4] = simplify_gen_subreg (HImode, operands[1], SImode, si_lo_off);\n-   operands[5] = simplify_gen_subreg (HImode, operands[1], SImode, si_hi_off);\"\n+   operands[5] = simplify_gen_subreg (HImode, operands[1], SImode, si_hi_off);\n+\n+   if (REGNO (operands[0]) == REGNO(operands[1]) + 2)\n+     {\n+       emit_move_insn (operands[3], operands[4]);\n+       DONE;\n+     }\n+   else if (REGNO (operands[0]) == REGNO(operands[1]) - 2)\n+     {\n+       emit_move_insn (operands[2], operands[5]);\n+       DONE;\n+     }\"\n   [(set (attr \"length\") (if_then_else (eq_attr \"mcu_have_movw\" \"yes\")\n \t\t\t\t      (const_int 4)\n \t\t\t\t      (const_int 6)))\n@@ -1503,17 +1514,14 @@\n \t(rotate:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t   (const_int 8)))]\n   \"\"\n-  \"mov __tmp_reg__,%D0\n-\tmov %D0,%C0\n-\tmov %C0,%B0\n-\tmov %B0,%A0\n+  \"mov __tmp_reg__,%D1\n+\tmov %D0,%C1\n+\tmov %C0,%B1\n+\tmov %B0,%A1\n \tmov %A0, __tmp_reg__\"\n   \"reload_completed\n    && REGNO (operands[0]) != REGNO (operands[1])\"\n-  [(set (match_dup 2) (match_dup 9))\n-   (set (match_dup 3) (match_dup 6))\n-   (set (match_dup 4) (match_dup 7))\n-   (set (match_dup 5) (match_dup 8))]\n+  [(const_int 0)]\n   \"unsigned int si_lo_off = subreg_lowpart_offset (HImode, SImode);\n    unsigned int si_hi_off = subreg_highpart_offset (HImode, SImode);\n    unsigned int hi_lo_off = subreg_lowpart_offset (QImode, HImode);\n@@ -1531,7 +1539,23 @@\n    operands[7] = simplify_gen_subreg (QImode, operands[6], HImode, hi_hi_off);\n    operands[6] = simplify_gen_subreg (QImode, operands[6], HImode, hi_lo_off);\n    operands[9] = simplify_gen_subreg (QImode, operands[8], HImode, hi_hi_off);\n-   operands[8] = simplify_gen_subreg (QImode, operands[8], HImode, hi_lo_off);\"\n+   operands[8] = simplify_gen_subreg (QImode, operands[8], HImode, hi_lo_off);\n+ \n+   if (REGNO (operands[0]) < REGNO(operands[1]))\n+     {\n+       emit_move_insn (operands[2], operands[9]);\n+       emit_move_insn (operands[3], operands[6]);\n+       emit_move_insn (operands[4], operands[7]);\n+       emit_move_insn (operands[5], operands[8]);\n+     }\n+   else\n+     {\n+       emit_move_insn (operands[5], operands[8]);\n+       emit_move_insn (operands[2], operands[9]);\n+       emit_move_insn (operands[4], operands[7]);\n+       emit_move_insn (operands[3], operands[6]);\n+     }\n+   DONE;\"\n    [(set_attr \"length\" \"5\")\n    (set_attr \"cc\" \"none\")])\n \n@@ -1540,17 +1564,14 @@\n \t(rotate:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t   (const_int 24)))]\n   \"\"\n-  \"mov __tmp_reg__,%A0\n-\tmov %A0,%B0\n-\tmov %B0,%C0\n-\tmov %C0,%D0\n+  \"mov __tmp_reg__,%A1\n+\tmov %A0,%B1\n+\tmov %B0,%C1\n+\tmov %C0,%D1\n \tmov %D0, __tmp_reg__\"\n   \"reload_completed\n    && REGNO (operands[0]) != REGNO (operands[1])\"\n-  [(set (match_dup 2) (match_dup 7))\n-   (set (match_dup 3) (match_dup 8))\n-   (set (match_dup 4) (match_dup 9))\n-   (set (match_dup 5) (match_dup 6))]\n+  [(const_int 0)]\n   \"unsigned int si_lo_off = subreg_lowpart_offset (HImode, SImode);\n    unsigned int si_hi_off = subreg_highpart_offset (HImode, SImode);\n    unsigned int hi_lo_off = subreg_lowpart_offset (QImode, HImode);\n@@ -1568,7 +1589,23 @@\n    operands[7] = simplify_gen_subreg (QImode, operands[6], HImode, hi_hi_off);\n    operands[6] = simplify_gen_subreg (QImode, operands[6], HImode, hi_lo_off);\n    operands[9] = simplify_gen_subreg (QImode, operands[8], HImode, hi_hi_off);\n-   operands[8] = simplify_gen_subreg (QImode, operands[8], HImode, hi_lo_off);\"\n+   operands[8] = simplify_gen_subreg (QImode, operands[8], HImode, hi_lo_off);\n+\n+   if (REGNO (operands[0]) < REGNO(operands[1]))\n+     {\n+       emit_move_insn (operands[2], operands[7]);\n+       emit_move_insn (operands[5], operands[6]);\n+       emit_move_insn (operands[3], operands[8]);\n+       emit_move_insn (operands[4], operands[9]);\n+     }\n+   else\n+     {\n+       emit_move_insn (operands[5], operands[6]);\n+       emit_move_insn (operands[4], operands[9]);\n+       emit_move_insn (operands[3], operands[8]);\n+       emit_move_insn (operands[2], operands[7]);\n+     }\n+   DONE;\"\n    [(set_attr \"length\" \"5\")\n    (set_attr \"cc\" \"none\")])\n "}]}