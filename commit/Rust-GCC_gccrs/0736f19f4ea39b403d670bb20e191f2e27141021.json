{"sha": "0736f19f4ea39b403d670bb20e191f2e27141021", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDczNmYxOWY0ZWEzOWI0MDNkNjcwYmIyMGUxOTFmMmUyNzE0MTAyMQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-10-18T13:40:05Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-10-18T13:40:05Z"}, "message": "BufferedInputStream.java: Fixed @author tag.\n\n2004-10-18  Michael Koch  <konqueror@gmx.de>\n\n\t* java/io/BufferedInputStream.java: Fixed @author tag.\n\t(read): Simplified expression.\n\t(read): Merged javadoc a bit more.\n\t(read): Renamed 'remain' to 'totalBytesRead'.\n\t* java/io/DataInputStream.java,\n\tjava/io/DataOutputStream.java,\n\tjava/io/ObjectInputStream.java,\n\tjava/io/ObjectOutputStream.java:\n\tReworked modifier order.\n\nFrom-SVN: r89218", "tree": {"sha": "f50463c977086b08cb2af8eebb8df62a265828db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f50463c977086b08cb2af8eebb8df62a265828db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0736f19f4ea39b403d670bb20e191f2e27141021", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0736f19f4ea39b403d670bb20e191f2e27141021", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0736f19f4ea39b403d670bb20e191f2e27141021", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0736f19f4ea39b403d670bb20e191f2e27141021/comments", "author": null, "committer": null, "parents": [{"sha": "ba3ed8d8066c483276de8300569a7b1aa484a42f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba3ed8d8066c483276de8300569a7b1aa484a42f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba3ed8d8066c483276de8300569a7b1aa484a42f"}], "stats": {"total": 45, "additions": 28, "deletions": 17}, "files": [{"sha": "d34ab27db784fdf497071094259ffa851d242938", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0736f19f4ea39b403d670bb20e191f2e27141021/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0736f19f4ea39b403d670bb20e191f2e27141021/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=0736f19f4ea39b403d670bb20e191f2e27141021", "patch": "@@ -1,3 +1,15 @@\n+2004-10-18  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/io/BufferedInputStream.java: Fixed @author tag.\n+\t(read): Simplified expression.\n+\t(read): Merged javadoc a bit more.\n+\t(read): Renamed 'remain' to 'totalBytesRead'.\n+\t* java/io/DataInputStream.java,\n+\tjava/io/DataOutputStream.java,\n+\tjava/io/ObjectInputStream.java,\n+\tjava/io/ObjectOutputStream.java:\n+\tReworked modifier order.\n+\n 2004-10-18  Michael Koch  <konqueror@gmx.de>\n \n \t* java/net/Inet4Address.java: Merged file header and javadocs."}, {"sha": "17c570f104b3f05bd9a766d36488b3729a2a3a37", "filename": "libjava/java/io/BufferedInputStream.java", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0736f19f4ea39b403d670bb20e191f2e27141021/libjava%2Fjava%2Fio%2FBufferedInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0736f19f4ea39b403d670bb20e191f2e27141021/libjava%2Fjava%2Fio%2FBufferedInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FBufferedInputStream.java?ref=0736f19f4ea39b403d670bb20e191f2e27141021", "patch": "@@ -1,5 +1,5 @@\n /* BufferedInputStream.java -- An input stream that implements buffering\n-   Copyright (C) 1998, 1999, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -60,12 +60,11 @@\n  * does.\n  *\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n- * @author Warren Levy <warrenl@cygnus.com>\n- * @author Jeroen Frijters <jeroen@frijters.net>\n+ * @author Warren Levy (warrenl@cygnus.com)\n+ * @author Jeroen Frijters (jeroen@frijters.net)\n  */\n public class BufferedInputStream extends FilterInputStream\n {\n-\n   /**\n    * This is the default buffer size\n    */\n@@ -235,16 +234,16 @@ public synchronized int read() throws IOException\n     if (markpos >= 0 && pos - markpos > marktarget)\n       markpos = -1;\n \n-    return ((int) buf[pos++]) & 0xFF;\n+    return buf[pos++] & 0xFF;\n   }\n \n   /**\n    * This method reads bytes from a stream and stores them into a caller\n    * supplied buffer.  It starts storing the data at index <code>off</code>\n    * into the buffer and attempts to read <code>len</code> bytes.  This method\n-   * can return before reading the number of bytes requested.  The actual\n-   * number of bytes read is returned as an int.  A -1 is returned to indicate\n-   * the end of the stream.\n+   * can return before reading the number of bytes requested.\n+   * The actual number of bytes read is returned as an int.  A -1 is returned\n+   * to indicate the end of the stream.\n    * <p>\n    * This method will block until some data can be read.\n    *\n@@ -267,14 +266,14 @@ public synchronized int read(byte[] b, int off, int len) throws IOException\n     if (pos >= count && !refill())\n       return -1;\t\t// No bytes were read before EOF.\n \n-    int remain = Math.min(count - pos, len);\n-    System.arraycopy(buf, pos, b, off, remain);\n-    pos += remain;\n+    int totalBytesRead = Math.min(count - pos, len);\n+    System.arraycopy(buf, pos, b, off, totalBytesRead);\n+    pos += totalBytesRead;\n \n     if (markpos >= 0 && pos - markpos > marktarget)\n       markpos = -1;\n \n-    return remain;\n+    return totalBytesRead;\n   }\n \n   /**"}, {"sha": "d6068828c89c95b55b9befa61189ab1563438a76", "filename": "libjava/java/io/DataInputStream.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0736f19f4ea39b403d670bb20e191f2e27141021/libjava%2Fjava%2Fio%2FDataInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0736f19f4ea39b403d670bb20e191f2e27141021/libjava%2Fjava%2Fio%2FDataInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FDataInputStream.java?ref=0736f19f4ea39b403d670bb20e191f2e27141021", "patch": "@@ -651,7 +651,7 @@ public final String readUTF () throws IOException\n    *\n    * @see DataInput#readUTF\n    */\n-  public final static String readUTF (DataInput in) throws IOException\n+  public static final String readUTF(DataInput in) throws IOException\n   {\n     final int UTFlen = in.readUnsignedShort ();\n     byte[] buf = new byte [UTFlen];"}, {"sha": "ab2db95df99b814010f3deeceb39648e73ab403e", "filename": "libjava/java/io/DataOutputStream.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0736f19f4ea39b403d670bb20e191f2e27141021/libjava%2Fjava%2Fio%2FDataOutputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0736f19f4ea39b403d670bb20e191f2e27141021/libjava%2Fjava%2Fio%2FDataOutputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FDataOutputStream.java?ref=0736f19f4ea39b403d670bb20e191f2e27141021", "patch": "@@ -404,7 +404,7 @@ public final void writeChars (String value) throws IOException\n    *\n    * @see DataInput#readUTF\n    */\n-  public synchronized final void writeUTF (String value) throws IOException\n+  public final synchronized void writeUTF(String value) throws IOException\n   {\n     int len = value.length();\n     int sum = 0;"}, {"sha": "646eaebe4c78c7f86748055744c687345e2109c7", "filename": "libjava/java/io/ObjectInputStream.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0736f19f4ea39b403d670bb20e191f2e27141021/libjava%2Fjava%2Fio%2FObjectInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0736f19f4ea39b403d670bb20e191f2e27141021/libjava%2Fjava%2Fio%2FObjectInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FObjectInputStream.java?ref=0736f19f4ea39b403d670bb20e191f2e27141021", "patch": "@@ -1120,7 +1120,7 @@ public String readUTF() throws IOException\n    *\n    * XXX: finish up comments\n    */\n-  public static abstract class GetField\n+  public abstract static class GetField\n   {\n     public abstract ObjectStreamClass getObjectStreamClass();\n "}, {"sha": "f66cddd62de2d95ac8104a14bd9e57495699660f", "filename": "libjava/java/io/ObjectOutputStream.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0736f19f4ea39b403d670bb20e191f2e27141021/libjava%2Fjava%2Fio%2FObjectOutputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0736f19f4ea39b403d670bb20e191f2e27141021/libjava%2Fjava%2Fio%2FObjectOutputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FObjectOutputStream.java?ref=0736f19f4ea39b403d670bb20e191f2e27141021", "patch": "@@ -893,7 +893,7 @@ public void writeUTF(String data) throws IOException\n    *\n    * XXX: finish up comments\n    */\n-  public static abstract class PutField\n+  public abstract static class PutField\n   {\n     public abstract void put (String name, boolean value);\n     public abstract void put (String name, byte value);\n@@ -1552,7 +1552,7 @@ private void dumpElementln (String msg)\n   }\n \n   // this value comes from 1.2 spec, but is used in 1.1 as well\n-  private final static int BUFFER_SIZE = 1024;\n+  private static final int BUFFER_SIZE = 1024;\n \n   private static int defaultProtocolVersion = PROTOCOL_VERSION_2;\n "}]}