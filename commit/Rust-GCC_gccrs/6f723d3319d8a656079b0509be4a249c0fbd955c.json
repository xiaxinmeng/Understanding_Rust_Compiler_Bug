{"sha": "6f723d3319d8a656079b0509be4a249c0fbd955c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY3MjNkMzMxOWQ4YTY1NjA3OWIwNTA5YmU0YTI0OWMwZmJkOTU1Yw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-08-22T09:19:39Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-08-22T09:19:39Z"}, "message": "tree-vrp.c (find_assert_locations): Skip also edges from the entry block.\n\n\t* tree-vrp.c (find_assert_locations): Skip also edges\n\tfrom the entry block.\n\n\t* tree-vect-loop-manip.c (slpeel_make_loop_iterate_ntimes): Call\n\tfree_stmt_vec_info on orig_cond after gsi_removing it.\n\t* tree-vect-data-refs.c (vect_enhance_data_refs_alignment): Always\n\tfree body_cost_vec vector.\n\t(vect_analyze_data_refs): If gather is unsuccessful,\n\tfree_data_ref (dr).\n\t* tree-inline.c (tree_function_versioning): Free\n\told_transforms_to_apply vector.\n\nFrom-SVN: r190590", "tree": {"sha": "98675a15894bfa9e3293f468a5a660c709083407", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98675a15894bfa9e3293f468a5a660c709083407"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f723d3319d8a656079b0509be4a249c0fbd955c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f723d3319d8a656079b0509be4a249c0fbd955c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f723d3319d8a656079b0509be4a249c0fbd955c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f723d3319d8a656079b0509be4a249c0fbd955c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "06d43afd8592777cbc11e78a8b7667fda6c1eace", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06d43afd8592777cbc11e78a8b7667fda6c1eace", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06d43afd8592777cbc11e78a8b7667fda6c1eace"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "88ec7521e6808a420d6e7ef6ac8b9a66e3813dbc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f723d3319d8a656079b0509be4a249c0fbd955c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f723d3319d8a656079b0509be4a249c0fbd955c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6f723d3319d8a656079b0509be4a249c0fbd955c", "patch": "@@ -1,3 +1,17 @@\n+2012-08-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* tree-vrp.c (find_assert_locations): Skip also edges\n+\tfrom the entry block.\n+\n+\t* tree-vect-loop-manip.c (slpeel_make_loop_iterate_ntimes): Call\n+\tfree_stmt_vec_info on orig_cond after gsi_removing it.\n+\t* tree-vect-data-refs.c (vect_enhance_data_refs_alignment): Always\n+\tfree body_cost_vec vector.\n+\t(vect_analyze_data_refs): If gather is unsuccessful,\n+\tfree_data_ref (dr).\n+\t* tree-inline.c (tree_function_versioning): Free\n+\told_transforms_to_apply vector.\n+\n 2012-08-22  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* tree-ssa-coalesce.c (struct ssa_conflicts_d): Make contents"}, {"sha": "20d33173a6ddde3b05c9273a16bb2fc216b3fa6e", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f723d3319d8a656079b0509be4a249c0fbd955c/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f723d3319d8a656079b0509be4a249c0fbd955c/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=6f723d3319d8a656079b0509be4a249c0fbd955c", "patch": "@@ -5089,6 +5089,7 @@ tree_function_versioning (tree old_decl, tree new_decl,\n \t\t       VEC_index (ipa_opt_pass,\n \t\t       \t\t  old_transforms_to_apply,\n \t\t\t\t  i));\n+      VEC_free (ipa_opt_pass, heap, old_transforms_to_apply);\n     }\n \n   id.copy_decl = copy_decl_no_change;"}, {"sha": "4a5624e10926a79058756babcda13123d69a2d76", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f723d3319d8a656079b0509be4a249c0fbd955c/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f723d3319d8a656079b0509be4a249c0fbd955c/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=6f723d3319d8a656079b0509be4a249c0fbd955c", "patch": "@@ -1,5 +1,5 @@\n /* Data References Analysis and Manipulation Utilities for Vectorization.\n-   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n+   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012\n    Free Software Foundation, Inc.\n    Contributed by Dorit Naishlos <dorit@il.ibm.com>\n    and Ira Rosen <irar@il.ibm.com>\n@@ -1934,10 +1934,9 @@ vect_enhance_data_refs_alignment (loop_vec_info loop_vinfo)\n \t  gcc_assert (stat);\n           return stat;\n         }\n-      else\n-\tVEC_free (stmt_info_for_cost, heap, body_cost_vec);\n     }\n \n+  VEC_free (stmt_info_for_cost, heap, body_cost_vec);\n \n   /* (2) Versioning to force alignment.  */\n \n@@ -3313,6 +3312,8 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo,\n \t    gather = false;\n \t  if (!gather)\n \t    {\n+\t      STMT_VINFO_DATA_REF (stmt_info) = NULL;\n+\t      free_data_ref (dr);\n \t      if (vect_print_dump_info (REPORT_UNVECTORIZED_LOCATIONS))\n \t\t{\n \t\t  fprintf (vect_dump,"}, {"sha": "4df4800ab58470b8f1320a96cb32b0a742144e5b", "filename": "gcc/tree-vect-loop-manip.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f723d3319d8a656079b0509be4a249c0fbd955c/gcc%2Ftree-vect-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f723d3319d8a656079b0509be4a249c0fbd955c/gcc%2Ftree-vect-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop-manip.c?ref=6f723d3319d8a656079b0509be4a249c0fbd955c", "patch": "@@ -788,6 +788,7 @@ slpeel_make_loop_iterate_ntimes (struct loop *loop, tree niters)\n \n   /* Remove old loop exit test:  */\n   gsi_remove (&loop_cond_gsi, true);\n+  free_stmt_vec_info (orig_cond);\n \n   loop_loc = find_loop_location (loop);\n   if (dump_file && (dump_flags & TDF_DETAILS))"}, {"sha": "0aa1dc7e2ed16132ba5b262b04214f1acb3e96b5", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f723d3319d8a656079b0509be4a249c0fbd955c/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f723d3319d8a656079b0509be4a249c0fbd955c/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=6f723d3319d8a656079b0509be4a249c0fbd955c", "patch": "@@ -5596,7 +5596,7 @@ find_assert_locations (void)\n \t  FOR_EACH_EDGE (e, ei, bb->preds)\n \t    {\n \t      int pred = e->src->index;\n-\t      if (e->flags & EDGE_DFS_BACK)\n+\t      if ((e->flags & EDGE_DFS_BACK) || pred == ENTRY_BLOCK)\n \t\tcontinue;\n \n \t      if (!live[pred])"}]}