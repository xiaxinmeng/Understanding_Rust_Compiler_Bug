{"sha": "66471b4708b84db82570b9747fb4e157c23f9804", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY0NzFiNDcwOGI4NGRiODI1NzBiOTc0N2ZiNGUxNTdjMjNmOTgwNA==", "commit": {"author": {"name": "David Daney", "email": "ddaney@avtrex.com", "date": "2007-09-11T20:14:51Z"}, "committer": {"name": "David Daney", "email": "daney@gcc.gnu.org", "date": "2007-09-11T20:14:51Z"}, "message": "invoke.texi: Document new MIPS -mllsc and -mno-llsc options.\n\n\t* doc/invoke.texi: Document new MIPS -mllsc and -mno-llsc options.\n\t* doc/install.texi: Document new --with-llsc and --without-llsc\n\toptions.\n\t* config.gcc: Handle --with-llsc and --without-llsc configure options.\n\t* config/mips/mips.md (sync, memory_barrier): Wrap sync instrunction\n\tin %| and %- operand codes.  Depend on GENERATE_SYNC instead of\n\tISA_HAS_SYNC.\n\t(sync_compare_and_swap<mode>, sync_add<mode>, sync_sub<mode>,\n\tsync_old_add<mode>, sync_old_sub<mode>, sync_new_add<mode>,\n\tsync_new_sub<mode>, sync_<optab><mode>, sync_old_<optab><mode>,\n\tsync_new_<optab><mode>, sync_nand<mode>, sync_old_nand<mode>,\n\tsync_new_nand<mode>, sync_lock_test_and_set<mode>): Depend on\n\tGENERATE_LL_SC instead of ISA_HAS_LL_SC.\n\t* config/mips/mips.opt (mllsc): New option.\n\t* config/mips/mips.c (mips_llsc): Define variable.\n\t(mips_handle_option): Handle mllsc option.\n\t(override_options): Set mips_print_operand_punct for '|' and '-'.\n\t(print_operand): Add new %| and %- operand codes.\n\t* config/mips/mips.h (mips_llsc_setting): New enum type.\n\t(mips_llsc): Declare.\n\t(OPTION_DEFAULT_SPECS): Add llsc handling.\n\t(GENERATE_SYNC): New macro.\n\t(GENERATE_LL_SC): New macro.\n\t(MIPS_COMPARE_AND_SWAP, MIPS_SYNC_OP, MIPS_SYNC_OLD_OP,\n\tMIPS_SYNC_NEW_OP, MIPS_SYNC_NAND, MIPS_SYNC_OLD_NAND,\n\tMIPS_SYNC_NEW_NAND, MIPS_SYNC_EXCHANGE): Wrap instructions\n\tin %| and %- operand codes.\n\nFrom-SVN: r128392", "tree": {"sha": "14dfcb7d16ebfd463a4f9ecab96e3573379f51d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14dfcb7d16ebfd463a4f9ecab96e3573379f51d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66471b4708b84db82570b9747fb4e157c23f9804", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66471b4708b84db82570b9747fb4e157c23f9804", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66471b4708b84db82570b9747fb4e157c23f9804", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66471b4708b84db82570b9747fb4e157c23f9804/comments", "author": null, "committer": null, "parents": [{"sha": "fa89b6ecba4ce9448b82a21f91b360eacf57bc72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa89b6ecba4ce9448b82a21f91b360eacf57bc72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa89b6ecba4ce9448b82a21f91b360eacf57bc72"}], "stats": {"total": 219, "additions": 179, "deletions": 40}, "files": [{"sha": "d1cf9dad2f2eb3eab49ab78783026d77d97daa38", "filename": "gcc/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66471b4708b84db82570b9747fb4e157c23f9804/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66471b4708b84db82570b9747fb4e157c23f9804/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=66471b4708b84db82570b9747fb4e157c23f9804", "patch": "@@ -1,3 +1,33 @@\n+2007-09-11  David Daney  <ddaney@avtrex.com>\n+\n+\t* doc/invoke.texi: Document new MIPS -mllsc and -mno-llsc options.\n+\t* doc/install.texi: Document new --with-llsc and --without-llsc\n+\toptions.\n+\t* config.gcc: Handle --with-llsc and --without-llsc configure options.\n+\t* config/mips/mips.md (sync, memory_barrier): Wrap sync instrunction\n+\tin %| and %- operand codes.  Depend on GENERATE_SYNC instead of\n+\tISA_HAS_SYNC.\n+\t(sync_compare_and_swap<mode>, sync_add<mode>, sync_sub<mode>,\n+\tsync_old_add<mode>, sync_old_sub<mode>, sync_new_add<mode>,\n+\tsync_new_sub<mode>, sync_<optab><mode>, sync_old_<optab><mode>,\n+\tsync_new_<optab><mode>, sync_nand<mode>, sync_old_nand<mode>,\n+\tsync_new_nand<mode>, sync_lock_test_and_set<mode>): Depend on\n+\tGENERATE_LL_SC instead of ISA_HAS_LL_SC.\n+\t* config/mips/mips.opt (mllsc): New option.\n+\t* config/mips/mips.c (mips_llsc): Define variable.\n+\t(mips_handle_option): Handle mllsc option.\n+\t(override_options): Set mips_print_operand_punct for '|' and '-'.\n+\t(print_operand): Add new %| and %- operand codes.\n+\t* config/mips/mips.h (mips_llsc_setting): New enum type.\n+\t(mips_llsc): Declare.\n+\t(OPTION_DEFAULT_SPECS): Add llsc handling.\n+\t(GENERATE_SYNC): New macro.\n+\t(GENERATE_LL_SC): New macro.\n+\t(MIPS_COMPARE_AND_SWAP, MIPS_SYNC_OP, MIPS_SYNC_OLD_OP,\n+\tMIPS_SYNC_NEW_OP, MIPS_SYNC_NAND, MIPS_SYNC_OLD_NAND,\n+\tMIPS_SYNC_NEW_NAND, MIPS_SYNC_EXCHANGE): Wrap instructions\n+\tin %| and %- operand codes.\n+\n 2007-09-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree-ssa-structalias.c (push_fields_onto_fieldstack): Deal with"}, {"sha": "b06334ce1414c22ae31650f23f79bafc0e71535c", "filename": "gcc/config.gcc", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66471b4708b84db82570b9747fb4e157c23f9804/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66471b4708b84db82570b9747fb4e157c23f9804/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=66471b4708b84db82570b9747fb4e157c23f9804", "patch": "@@ -1663,6 +1663,7 @@ mips64*-*-linux*)\n \ttm_defines=\"${tm_defines} MIPS_ABI_DEFAULT=ABI_N32\"\n \tgnu_ld=yes\n \tgas=yes\n+\ttest x$with_llsc != x || with_llsc=yes\n \t;;\n mips*-*-linux*)\t\t\t\t# Linux MIPS, either endian.\n         tm_file=\"dbxelf.h elfos.h svr4.h linux.h ${tm_file} mips/linux.h\"\n@@ -1672,6 +1673,7 @@ mips*-*-linux*)\t\t\t\t# Linux MIPS, either endian.\n \t\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=32\"\n                 ;;\n         esac\n+\ttest x$with_llsc != x || with_llsc=yes\n \t;;\n mips*-*-openbsd*)\n \ttm_defines=\"${tm_defines} OBSD_HAS_DECLARE_FUNCTION_NAME OBSD_HAS_DECLARE_OBJECT OBSD_HAS_CORRECT_SPECS\"\n@@ -3008,7 +3010,7 @@ case \"${target}\" in\n \t\t;;\n \n \tmips*-*-*)\n-\t\tsupported_defaults=\"abi arch float tune divide\"\n+\t\tsupported_defaults=\"abi arch float tune divide llsc\"\n \n \t\tcase ${with_float} in\n \t\t\"\" | soft | hard)\n@@ -3037,6 +3039,23 @@ case \"${target}\" in\n \t\t*)\n \t\t\techo \"Unknown division check type use in --with-divide=$with_divide\" 1>&2\n \t\t\texit 1\n+\t\t\t;;\n+\t\tesac\n+\n+\t\tcase ${with_llsc} in\n+\t\tyes)\n+\t\t\twith_llsc=llsc\n+\t\t\t;;\n+\t\tno)\n+\t\t\twith_llsc=\"no-llsc\"\n+\t\t\t;;\n+\t\t\"\")\n+\t\t\t# OK\n+\t\t\t;;\n+\t\t*)\n+\t\t\techo \"Unknown llsc type used in --with-llsc\" 1>&2\n+\t\t\texit 1\n+\t\t\t;;\n \t\tesac\n \t\t;;\n \n@@ -3301,7 +3320,7 @@ case ${target} in\n esac\n \n t=\n-all_defaults=\"abi cpu arch tune schedule float mode fpu divide\"\n+all_defaults=\"abi cpu arch tune schedule float mode fpu divide llsc\"\n for option in $all_defaults\n do\n \teval \"val=\\$with_$option\""}, {"sha": "1a2cc0699db89e9b8836587dc63547852c9a479b", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66471b4708b84db82570b9747fb4e157c23f9804/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66471b4708b84db82570b9747fb4e157c23f9804/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=66471b4708b84db82570b9747fb4e157c23f9804", "patch": "@@ -636,6 +636,9 @@ static GTY(()) int mips16_flipper;\n /* The -mtext-loads setting.  */\n enum mips_code_readable_setting mips_code_readable = CODE_READABLE_YES;\n \n+/* The -mllsc setting.  */\n+enum mips_llsc_setting mips_llsc = LLSC_DEFAULT;\n+\n /* The architecture selected by -mipsN.  */\n static const struct mips_cpu_info *mips_isa_info;\n \n@@ -5711,7 +5714,7 @@ mips_set_current_function (tree fndecl ATTRIBUTE_UNUSED)\n /* Implement TARGET_HANDLE_OPTION.  */\n \n static bool\n-mips_handle_option (size_t code, const char *arg, int value ATTRIBUTE_UNUSED)\n+mips_handle_option (size_t code, const char *arg, int value)\n {\n   switch (code)\n     {\n@@ -5753,6 +5756,10 @@ mips_handle_option (size_t code, const char *arg, int value ATTRIBUTE_UNUSED)\n \treturn false;\n       return true;\n \n+    case OPT_mllsc:\n+      mips_llsc = value ? LLSC_YES : LLSC_NO;\n+      return true;\n+\n     default:\n       return true;\n     }\n@@ -6015,6 +6022,8 @@ override_options (void)\n   mips_print_operand_punct['$'] = 1;\n   mips_print_operand_punct['+'] = 1;\n   mips_print_operand_punct['~'] = 1;\n+  mips_print_operand_punct['|'] = 1;\n+  mips_print_operand_punct['-'] = 1;\n \n   /* Set up array to map GCC register number to debug register number.\n      Ignore the special purpose register numbers.  */\n@@ -6377,7 +6386,10 @@ mips_strip_unspec_address (rtx op)\n    '^'\tPrint the name of the pic call-through register (t9 or $25).\n    '$'\tPrint the name of the stack pointer register (sp or $29).\n    '+'\tPrint the name of the gp register (usually gp or $28).\n-   '~'\tOutput a branch alignment to LABEL_ALIGN(NULL).  */\n+   '~'\tOutput a branch alignment to LABEL_ALIGN(NULL).\n+   '|'  Print .set push; .set mips2 if mips_llsc == LLSC_YES\n+        && !ISA_HAS_LL_SC.\n+   '-'  Print .set pop under the same conditions for '|'.  */\n \n void\n print_operand (FILE *file, rtx op, int letter)\n@@ -6507,6 +6519,16 @@ print_operand (FILE *file, rtx op, int letter)\n \t  }\n \t  break;\n \n+\tcase '|':\n+\t  if (!ISA_HAS_LL_SC)\n+\t    fputs (\".set\\tpush\\n\\t.set\\tmips2\\n\\t\", file);\n+\t  break;\n+\n+\tcase '-':\n+\t  if (!ISA_HAS_LL_SC)\n+\t    fputs (\"\\n\\t.set\\tpop\", file);\n+\t  break;\n+\n \tdefault:\n \t  error (\"PRINT_OPERAND: unknown punctuation '%c'\", letter);\n \t  break;"}, {"sha": "7aa6aa83338d9bd67e70f29dc4ed72b2fe3eedf2", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 38, "deletions": 17, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66471b4708b84db82570b9747fb4e157c23f9804/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66471b4708b84db82570b9747fb4e157c23f9804/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=66471b4708b84db82570b9747fb4e157c23f9804", "patch": "@@ -121,6 +121,14 @@ enum mips_code_readable_setting {\n   CODE_READABLE_YES\n };\n \n+\n+/* Enumerates the setting of the -mllsc option.  */\n+enum mips_llsc_setting {\n+  LLSC_DEFAULT,\n+  LLSC_NO,\n+  LLSC_YES\n+};\n+\n #ifndef USED_FOR_TARGET\n extern char mips_print_operand_punct[256]; /* print_operand punctuation chars */\n extern const char *current_function_file; /* filename current function is in */\n@@ -145,6 +153,7 @@ extern const struct mips_cpu_info *mips_arch_info;\n extern const struct mips_cpu_info *mips_tune_info;\n extern const struct mips_rtx_cost_data *mips_cost;\n extern enum mips_code_readable_setting mips_code_readable;\n+extern enum mips_llsc_setting mips_llsc;\n #endif\n \n /* Macros to silence warnings about numbers being signed in traditional\n@@ -688,7 +697,8 @@ extern enum mips_code_readable_setting mips_code_readable;\n   {\"tune\", \"%{!mtune=*:-mtune=%(VALUE)}\" }, \\\n   {\"abi\", \"%{!mabi=*:-mabi=%(VALUE)}\" }, \\\n   {\"float\", \"%{!msoft-float:%{!mhard-float:-m%(VALUE)-float}}\" }, \\\n-  {\"divide\", \"%{!mdivide-traps:%{!mdivide-breaks:-mdivide-%(VALUE)}}\" }\n+  {\"divide\", \"%{!mdivide-traps:%{!mdivide-breaks:-mdivide-%(VALUE)}}\" }, \\\n+  {\"llsc\", \"%{!mllsc:%{!mno-llsc:-m%(VALUE)}}\" }\n \n \n #define GENERATE_DIVIDE_TRAPS (TARGET_DIVIDE_TRAPS \\\n@@ -893,11 +903,15 @@ extern enum mips_code_readable_setting mips_code_readable;\n \n /* ISA includes sync.  */\n #define ISA_HAS_SYNC ((mips_isa >= 2 || TARGET_MIPS3900) && !TARGET_MIPS16)\n+#define GENERATE_SYNC (mips_llsc == LLSC_YES \\\n+\t\t       || (mips_llsc == LLSC_DEFAULT && ISA_HAS_SYNC))\n \n /* ISA includes ll and sc.  Note that this implies ISA_HAS_SYNC\n    because the expanders use both ISA_HAS_SYNC and ISA_HAS_LL_SC\n    instructions.  */\n #define ISA_HAS_LL_SC (mips_isa >= 2 && !TARGET_MIPS16)\n+#define GENERATE_LL_SC (mips_llsc == LLSC_YES \\\n+\t\t\t|| (mips_llsc == LLSC_DEFAULT && ISA_HAS_LL_SC))\n \f\n /* Add -G xx support.  */\n \n@@ -2913,11 +2927,12 @@ while (0)\n    and OP is the instruction that should be used to load %3 into a\n    register.  */\n #define MIPS_COMPARE_AND_SWAP(SUFFIX, OP)\t\\\n-  \"%(%<%[sync\\n\"\t\t\t\t\\\n+  \"%(%<%[%|sync\\n\"\t\t\t\t\\\n   \"1:\\tll\" SUFFIX \"\\t%0,%1\\n\"\t\t\t\\\n   \"\\tbne\\t%0,%2,2f\\n\"\t\t\t\t\\\n   \"\\t\" OP \"\\t%@,%3\\n\"\t\t\t\t\\\n-  \"\\tsc\" SUFFIX \"\\t%@,%1\\n\"\t\t\t\\\n+  \"\\tsc\" SUFFIX \"\\t%@,%1\"\t\t\t\\\n+  \"%-\\n\"\t\t\t\t\t\\\n   \"\\tbeq\\t%@,%.,1b\\n\"\t\t\t\t\\\n   \"\\tnop\\n\"\t\t\t\t\t\\\n   \"2:%]%>%)\"\n@@ -2929,10 +2944,11 @@ while (0)\n    SUFFIX is the suffix that should be added to \"ll\" and \"sc\"\n    instructions.  */\n #define MIPS_SYNC_OP(SUFFIX, INSN)\t\t\\\n-  \"%(%<%[sync\\n\"\t\t\t\t\\\n+  \"%(%<%[%|sync\\n\"\t\t\t\t\\\n   \"1:\\tll\" SUFFIX \"\\t%@,%0\\n\"\t\t\t\\\n   \"\\t\" INSN \"\\t%@,%@,%1\\n\"\t\t\t\\\n-  \"\\tsc\" SUFFIX \"\\t%@,%0\\n\"\t\t\t\\\n+  \"\\tsc\" SUFFIX \"\\t%@,%0\"\t\t\t\\\n+  \"%-\\n\"\t\t\t\t\t\\\n   \"\\tbeq\\t%@,%.,1b\\n\"\t\t\t\t\\\n   \"\\tnop%]%>%)\"\n \n@@ -2945,10 +2961,11 @@ while (0)\n    SUFFIX is the suffix that should be added to \"ll\" and \"sc\"\n    instructions.  */\n #define MIPS_SYNC_OLD_OP(SUFFIX, INSN)\t\t\\\n-  \"%(%<%[sync\\n\"\t\t\t\t\\\n+  \"%(%<%[%|sync\\n\"\t\t\t\t\\\n   \"1:\\tll\" SUFFIX \"\\t%0,%1\\n\"\t\t\t\\\n   \"\\t\" INSN \"\\t%@,%0,%2\\n\"\t\t\t\\\n-  \"\\tsc\" SUFFIX \"\\t%@,%1\\n\"\t\t\t\\\n+  \"\\tsc\" SUFFIX \"\\t%@,%1\"\t\t\t\\\n+  \"%-\\n\"\t\t\t\t\t\\\n   \"\\tbeq\\t%@,%.,1b\\n\"\t\t\t\t\\\n   \"\\tnop%]%>%)\"\n \n@@ -2961,10 +2978,11 @@ while (0)\n    SUFFIX is the suffix that should be added to \"ll\" and \"sc\"\n    instructions.  */\n #define MIPS_SYNC_NEW_OP(SUFFIX, INSN)\t\t\\\n-  \"%(%<%[sync\\n\"\t\t\t\t\\\n+  \"%(%<%[%|sync\\n\"\t\t\t\t\\\n   \"1:\\tll\" SUFFIX \"\\t%0,%1\\n\"\t\t\t\\\n   \"\\t\" INSN \"\\t%@,%0,%2\\n\"\t\t\t\\\n-  \"\\tsc\" SUFFIX \"\\t%@,%1\\n\"\t\t\t\\\n+  \"\\tsc\" SUFFIX \"\\t%@,%1\"\t\t\t\\\n+  \"%-\\n\"\t\t\t\t\t\\\n   \"\\tbeq\\t%@,%.,1b\\n\"\t\t\t\t\\\n   \"\\t\" INSN \"\\t%0,%0,%2%]%>%)\"\n \n@@ -2976,11 +2994,12 @@ while (0)\n    instructions.  INSN is the and instruction needed to and a register\n    with %2.  */\n #define MIPS_SYNC_NAND(SUFFIX, INSN)\t\t\\\n-  \"%(%<%[sync\\n\"\t\t\t\t\\\n+  \"%(%<%[%|sync\\n\"\t\t\t\t\\\n   \"1:\\tll\" SUFFIX \"\\t%@,%0\\n\"\t\t\t\\\n   \"\\tnor\\t%@,%@,%.\\n\"\t\t\t\t\\\n   \"\\t\" INSN \"\\t%@,%@,%1\\n\"\t\t\t\\\n-  \"\\tsc\" SUFFIX \"\\t%@,%0\\n\"\t\t\t\\\n+  \"\\tsc\" SUFFIX \"\\t%@,%0\"\t\t\t\\\n+  \"%-\\n\"\t\t\t\t\t\\\n   \"\\tbeq\\t%@,%.,1b\\n\"\t\t\t\t\\\n   \"\\tnop%]%>%)\"\n \n@@ -2994,11 +3013,12 @@ while (0)\n    instructions.  INSN is the and instruction needed to and a register\n    with %2.  */\n #define MIPS_SYNC_OLD_NAND(SUFFIX, INSN)\t\\\n-  \"%(%<%[sync\\n\"\t\t\t\t\\\n+  \"%(%<%[%|sync\\n\"\t\t\t\t\\\n   \"1:\\tll\" SUFFIX \"\\t%0,%1\\n\"\t\t\t\\\n   \"\\tnor\\t%@,%0,%.\\n\"\t\t\t\t\\\n   \"\\t\" INSN \"\\t%@,%@,%2\\n\"\t\t\t\\\n-  \"\\tsc\" SUFFIX \"\\t%@,%1\\n\"\t\t\t\\\n+  \"\\tsc\" SUFFIX \"\\t%@,%1\"\t\t\t\\\n+  \"%-\\n\"\t\t\t\t\t\\\n   \"\\tbeq\\t%@,%.,1b\\n\"\t\t\t\t\\\n   \"\\tnop%]%>%)\"\n \n@@ -3012,11 +3032,12 @@ while (0)\n    instructions.  INSN is the and instruction needed to and a register\n    with %2.  */\n #define MIPS_SYNC_NEW_NAND(SUFFIX, INSN)\t\\\n-  \"%(%<%[sync\\n\"\t\t\t\t\\\n+  \"%(%<%[%|sync\\n\"\t\t\t\t\\\n   \"1:\\tll\" SUFFIX \"\\t%0,%1\\n\"\t\t\t\\\n   \"\\tnor\\t%0,%0,%.\\n\"\t\t\t\t\\\n   \"\\t\" INSN \"\\t%@,%0,%2\\n\"\t\t\t\\\n-  \"\\tsc\" SUFFIX \"\\t%@,%1\\n\"\t\t\t\\\n+  \"\\tsc\" SUFFIX \"\\t%@,%1\"\t\t\t\\\n+  \"%-\\n\"\t\t\t\t\t\\\n   \"\\tbeq\\t%@,%.,1b\\n\"\t\t\t\t\\\n   \"\\t\" INSN \"\\t%0,%0,%2%]%>%)\"\n \n@@ -3030,11 +3051,11 @@ while (0)\n    instructions.  OP is the and instruction that should be used to\n    load %2 into a register.  */\n #define MIPS_SYNC_EXCHANGE(SUFFIX, OP)\t\t\\\n-  \"%(%<%[\\n\"\t\t\t\t\t\\\n+  \"%(%<%[%|\\n\"\t\t\t\t\t\\\n   \"1:\\tll\" SUFFIX \"\\t%0,%1\\n\"\t\t\t\\\n   \"\\t\" OP \"\\t%@,%2\\n\"\t\t\t\t\\\n   \"\\tsc\" SUFFIX \"\\t%@,%1\\n\"\t\t\t\\\n   \"\\tbeq\\t%@,%.,1b\\n\"\t\t\t\t\\\n   \"\\tnop\\n\"\t\t\t\t\t\\\n-  \"\\tsync%]%>%)\"\n+  \"\\tsync%-%]%>%)\"\n "}, {"sha": "299980657ec3b70d2caca932c473e2656a588563", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66471b4708b84db82570b9747fb4e157c23f9804/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66471b4708b84db82570b9747fb4e157c23f9804/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=66471b4708b84db82570b9747fb4e157c23f9804", "patch": "@@ -4285,8 +4285,8 @@\n \n (define_insn \"sync\"\n   [(unspec_volatile [(const_int 0)] UNSPEC_SYNC)]\n-  \"ISA_HAS_SYNC\"\n-  \"sync\")\n+  \"GENERATE_SYNC\"\n+  \"%|sync%-\")\n \n (define_insn \"synci\"\n   [(unspec_volatile [(match_operand 0 \"pmode_register_operand\" \"d\")]\n@@ -4323,8 +4323,8 @@\n (define_insn \"memory_barrier\"\n   [(set (mem:BLK (scratch))\n         (unspec:BLK [(const_int 0)] UNSPEC_MEMORY_BARRIER))]\n-  \"ISA_HAS_SYNC\"\n-  \"sync\")\n+  \"GENERATE_SYNC\"\n+  \"%|sync%-\")\n \n (define_insn \"sync_compare_and_swap<mode>\"\n   [(set (match_operand:GPR 0 \"register_operand\" \"=&d,d\")\n@@ -4333,7 +4333,7 @@\n \t(unspec_volatile:GPR [(match_operand:GPR 2 \"register_operand\" \"d,d\")\n \t\t\t      (match_operand:GPR 3 \"arith_operand\" \"I,d\")]\n \t UNSPEC_COMPARE_AND_SWAP))]\n-  \"ISA_HAS_LL_SC\"\n+  \"GENERATE_LL_SC\"\n {\n   if (which_alternative == 0)\n     return MIPS_COMPARE_AND_SWAP (\"<d>\", \"li\");\n@@ -4348,7 +4348,7 @@\n           [(plus:GPR (match_dup 0)\n \t\t\t      (match_operand:GPR 1 \"arith_operand\" \"I,d\"))]\n \t UNSPEC_SYNC_OLD_OP))]\n-  \"ISA_HAS_LL_SC\"\n+  \"GENERATE_LL_SC\"\n {\n   if (which_alternative == 0)\n     return MIPS_SYNC_OP (\"<d>\", \"<d>addiu\");\t\n@@ -4363,7 +4363,7 @@\n           [(minus:GPR (match_dup 0)\n \t\t\t      (match_operand:GPR 1 \"register_operand\" \"d\"))]\n \t UNSPEC_SYNC_OLD_OP))]\n-  \"ISA_HAS_LL_SC\"\n+  \"GENERATE_LL_SC\"\n {\n     return MIPS_SYNC_OP (\"<d>\", \"<d>subu\");\t\n }\n@@ -4377,7 +4377,7 @@\n           [(plus:GPR (match_dup 1)\n \t\t     (match_operand:GPR 2 \"arith_operand\" \"I,d\"))]\n \t UNSPEC_SYNC_OLD_OP))]\n-  \"ISA_HAS_LL_SC\"\n+  \"GENERATE_LL_SC\"\n {\n   if (which_alternative == 0)\n     return MIPS_SYNC_OLD_OP (\"<d>\", \"<d>addiu\");\t\n@@ -4394,7 +4394,7 @@\n           [(minus:GPR (match_dup 1)\n \t\t      (match_operand:GPR 2 \"register_operand\" \"d\"))]\n \t UNSPEC_SYNC_OLD_OP))]\n-  \"ISA_HAS_LL_SC\"\n+  \"GENERATE_LL_SC\"\n {\n   return MIPS_SYNC_OLD_OP (\"<d>\", \"<d>subu\");\t\n }\n@@ -4408,7 +4408,7 @@\n \t(unspec_volatile:GPR\n \t  [(plus:GPR (match_dup 1) (match_dup 2))]\n \t UNSPEC_SYNC_NEW_OP))]\n-  \"ISA_HAS_LL_SC\"\n+  \"GENERATE_LL_SC\"\n {\n   if (which_alternative == 0)\n     return MIPS_SYNC_NEW_OP (\"<d>\", \"<d>addiu\");\t\n@@ -4425,7 +4425,7 @@\n \t(unspec_volatile:GPR\n \t  [(minus:GPR (match_dup 1) (match_dup 2))]\n \t UNSPEC_SYNC_NEW_OP))]\n-  \"ISA_HAS_LL_SC\"\n+  \"GENERATE_LL_SC\"\n {\n   return MIPS_SYNC_NEW_OP (\"<d>\", \"<d>subu\");\t\n }\n@@ -4437,7 +4437,7 @@\n           [(fetchop_bit:GPR (match_operand:GPR 1 \"uns_arith_operand\" \"K,d\")\n \t\t\t      (match_dup 0))]\n \t UNSPEC_SYNC_OLD_OP))]\n-  \"ISA_HAS_LL_SC\"\n+  \"GENERATE_LL_SC\"\n {\n   if (which_alternative == 0)\n     return MIPS_SYNC_OP (\"<d>\", \"<immediate_insn>\");\t\n@@ -4454,7 +4454,7 @@\n           [(fetchop_bit:GPR (match_operand:GPR 2 \"uns_arith_operand\" \"K,d\")\n \t\t\t    (match_dup 1))]\n \t UNSPEC_SYNC_OLD_OP))]\n-  \"ISA_HAS_LL_SC\"\n+  \"GENERATE_LL_SC\"\n {\n   if (which_alternative == 0)\n     return MIPS_SYNC_OLD_OP (\"<d>\", \"<immediate_insn>\");\t\n@@ -4471,7 +4471,7 @@\n           [(fetchop_bit:GPR (match_operand:GPR 2 \"uns_arith_operand\" \"K,d\")\n \t\t\t    (match_dup 1))]\n \t UNSPEC_SYNC_NEW_OP))]\n-  \"ISA_HAS_LL_SC\"\n+  \"GENERATE_LL_SC\"\n {\n   if (which_alternative == 0)\n     return MIPS_SYNC_NEW_OP (\"<d>\", \"<immediate_insn>\");\t\n@@ -4484,7 +4484,7 @@\n   [(set (match_operand:GPR 0 \"memory_operand\" \"+R,R\")\n \t(unspec_volatile:GPR [(match_operand:GPR 1 \"uns_arith_operand\" \"K,d\")]\n \t UNSPEC_SYNC_OLD_OP))]\n-  \"ISA_HAS_LL_SC\"\n+  \"GENERATE_LL_SC\"\n {\n   if (which_alternative == 0)\n     return MIPS_SYNC_NAND (\"<d>\", \"andi\");\t\n@@ -4499,7 +4499,7 @@\n    (set (match_dup 1)\n         (unspec_volatile:GPR [(match_operand:GPR 2 \"uns_arith_operand\" \"K,d\")]\n \t UNSPEC_SYNC_OLD_OP))]\n-  \"ISA_HAS_LL_SC\"\n+  \"GENERATE_LL_SC\"\n {\n   if (which_alternative == 0)\n     return MIPS_SYNC_OLD_NAND (\"<d>\", \"andi\");\t\n@@ -4514,7 +4514,7 @@\n    (set (match_dup 1)\n \t(unspec_volatile:GPR [(match_operand:GPR 2 \"uns_arith_operand\" \"K,d\")]\n \t UNSPEC_SYNC_NEW_OP))]\n-  \"ISA_HAS_LL_SC\"\n+  \"GENERATE_LL_SC\"\n {\n   if (which_alternative == 0)\n     return MIPS_SYNC_NEW_NAND (\"<d>\", \"andi\");\t\n@@ -4529,7 +4529,7 @@\n    (set (match_dup 1)\n \t(unspec_volatile:GPR [(match_operand:GPR 2 \"arith_operand\" \"I,d\")]\n \t UNSPEC_SYNC_EXCHANGE))]\n-  \"ISA_HAS_LL_SC\"\n+  \"GENERATE_LL_SC\"\n {\n   if (which_alternative == 0)\n     return MIPS_SYNC_EXCHANGE (\"<d>\", \"li\");"}, {"sha": "bbbc305e39a9d98c4173e9e6c7739d22fffdd66c", "filename": "gcc/config/mips/mips.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66471b4708b84db82570b9747fb4e157c23f9804/gcc%2Fconfig%2Fmips%2Fmips.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66471b4708b84db82570b9747fb4e157c23f9804/gcc%2Fconfig%2Fmips%2Fmips.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.opt?ref=66471b4708b84db82570b9747fb4e157c23f9804", "patch": "@@ -176,6 +176,10 @@ mips3d\n Target Report RejectNegative Mask(MIPS3D)\n Use MIPS-3D instructions\n \n+mllsc\n+Target Report\n+Use ll, sc and sync instructions\n+\n mlocal-sdata\n Target Report Var(TARGET_LOCAL_SDATA) Init(1)\n Use -G for object-local data"}, {"sha": "2517303260f780e07f27cb8125fa6e76d170c9a1", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66471b4708b84db82570b9747fb4e157c23f9804/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66471b4708b84db82570b9747fb4e157c23f9804/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=66471b4708b84db82570b9747fb4e157c23f9804", "patch": "@@ -1062,6 +1062,19 @@ systems that support conditional traps).\n Division by zero checks use the break instruction.\n @end table\n \n+@c If you make --with-llsc the default for additional targets,\n+@c update the --with-llsc description in the MIPS section below.\n+\n+@item --with-llsc\n+On MIPS targets, make @option{-mllsc} the default when no\n+@option{-mno-lsc} option is passed.  This is the default for\n+Linux-based targets, as the kernel will emulate them if the ISA does\n+not provide them.\n+\n+@item --without-llsc\n+On MIPS targets, make @option{-mno-llsc} the default when no\n+@option{-mllsc} option is passed.\n+\n @item --enable-__cxa_atexit\n Define if you want to use __cxa_atexit, rather than atexit, to\n register C++ destructors for local statics and global objects.\n@@ -3610,6 +3623,20 @@ configure for @samp{mipsel-elf} as a workaround.  The\n @samp{mips*-*-linux*} target continues to use the MIPS II routines.  More\n work on this is expected in future releases.\n \n+@c If you make --with-llsc the default for another target, please also\n+@c update the description of the --with-llsc option.\n+\n+The built-in @code{__sync_*} functions are available on MIPS II and\n+later systems and others that support the @samp{ll}, @samp{sc} and\n+@samp{sync} instructions.  This can be overridden by passing\n+@option{--with-llsc} or @option{--without-llsc} when configuring GCC.\n+Since the Linux kernel emulates these instructions if they are\n+missing, the default for @samp{mips*-*-linux*} targets is\n+@option{--with-llsc}.  The @option{--with-llsc} and\n+@option{--without-llsc} configure options may be overridden at compile\n+time by passing the @option{-mllsc} or @option{-mno-llsc} options to\n+the compiler.\n+\n MIPS systems check for division by zero (unless\n @option{-mno-check-zero-division} is passed to the compiler) by\n generating either a conditional trap or a break instruction.  Using"}, {"sha": "f916b5050d317f988527bcd78d95c120a22ef7c4", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66471b4708b84db82570b9747fb4e157c23f9804/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66471b4708b84db82570b9747fb4e157c23f9804/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=66471b4708b84db82570b9747fb4e157c23f9804", "patch": "@@ -627,7 +627,7 @@ Objective-C and Objective-C++ Dialects}.\n -msingle-float  -mdouble-float  -mdsp  -mno-dsp  -mdspr2  -mno-dspr2 @gol\n -msmartmips  -mno-smartmips @gol\n -mpaired-single  -mno-paired-single  -mdmx  -mno-mdmx @gol\n--mips3d  -mno-mips3d  -mmt  -mno-mt @gol\n+-mips3d  -mno-mips3d  -mmt  -mno-mt  -mllsc  -mno-llsc @gol\n -mlong64  -mlong32  -msym32  -mno-sym32 @gol\n -G@var{num}  -mlocal-sdata  -mno-local-sdata @gol\n -mextern-sdata  -mno-extern-sdata  -mgpopt  -mno-gopt @gol\n@@ -11772,6 +11772,22 @@ operations.\n Assume that the floating-point coprocessor supports double-precision\n operations.  This is the default.\n \n+@item -mllsc\n+@itemx -mno-llsc\n+@opindex mllsc\n+@opindex mno-llsc\n+Use (do not use) @samp{ll}, @samp{sc}, and @samp{sync} instructions to\n+implement atomic memory built-in functions.  When neither option is\n+specified, GCC will use the instructions if the target architecture\n+supports them.\n+\n+@option{-mllsc} is useful if the runtime environment can emulate the\n+instructions and @option{-mno-llsc} can be useful when compiling for\n+nonstandard ISAs.  You can make either option the default by\n+configuring GCC with @option{--with-llsc} and @option{--without-llsc}\n+respectively.  @option{--with-llsc} is the default for some\n+configurations; see the installation documentation for details.\n+\n @item -mdsp\n @itemx -mno-dsp\n @opindex mdsp"}]}