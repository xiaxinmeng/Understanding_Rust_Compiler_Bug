{"sha": "bbe376e136edb8456088d7298d4ba7c93d4e0529", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJlMzc2ZTEzNmVkYjg0NTYwODhkNzI5OGQ0YmE3YzkzZDRlMDUyOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-01-20T11:07:09Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-04T09:10:58Z"}, "message": "[Ada] Continuation of \"Get rid of more references to Universal_Integer\"\n\n2020-06-04  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/s-atopar.adb, libgnat/s-atopex.adb: Use Object_Size\n\tinstead of Size, otherwise many derived types will be rejected\n\t(e.g. a type with a 14 bits 'Size and a 16 bits 'Object_Size).", "tree": {"sha": "1fc4c406cbf682ba9aa64a86ae8173907e15c282", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fc4c406cbf682ba9aa64a86ae8173907e15c282"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbe376e136edb8456088d7298d4ba7c93d4e0529", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbe376e136edb8456088d7298d4ba7c93d4e0529", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbe376e136edb8456088d7298d4ba7c93d4e0529", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbe376e136edb8456088d7298d4ba7c93d4e0529/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b3bf48a31e4eb238ae8bd61b9ff9d4c6abb932e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b3bf48a31e4eb238ae8bd61b9ff9d4c6abb932e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b3bf48a31e4eb238ae8bd61b9ff9d4c6abb932e"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "554561c3468869a1dd2ff4894c94517e2c208b2b", "filename": "gcc/ada/libgnat/s-atopar.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbe376e136edb8456088d7298d4ba7c93d4e0529/gcc%2Fada%2Flibgnat%2Fs-atopar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbe376e136edb8456088d7298d4ba7c93d4e0529/gcc%2Fada%2Flibgnat%2Fs-atopar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-atopar.adb?ref=bbe376e136edb8456088d7298d4ba7c93d4e0529", "patch": "@@ -88,7 +88,7 @@ package body System.Atomic_Operations.Arithmetic is\n       pragma Warnings (On);\n \n    begin\n-      case Atomic_Type'Size is\n+      case Atomic_Type'Object_Size is\n          when 8      => return Atomic_Fetch_Add_1 (Item'Address, Value);\n          when 16     => return Atomic_Fetch_Add_2 (Item'Address, Value);\n          when 32     => return Atomic_Fetch_Add_4 (Item'Address, Value);\n@@ -125,7 +125,7 @@ package body System.Atomic_Operations.Arithmetic is\n       pragma Warnings (On);\n \n    begin\n-      case Atomic_Type'Size is\n+      case Atomic_Type'Object_Size is\n          when 8      => return Atomic_Fetch_Sub_1 (Item'Address, Value);\n          when 16     => return Atomic_Fetch_Sub_2 (Item'Address, Value);\n          when 32     => return Atomic_Fetch_Sub_4 (Item'Address, Value);\n@@ -142,7 +142,7 @@ package body System.Atomic_Operations.Arithmetic is\n       pragma Unreferenced (Item);\n       use type Interfaces.C.size_t;\n    begin\n-      return Boolean (Atomic_Always_Lock_Free (Atomic_Type'Size / 8));\n+      return Boolean (Atomic_Always_Lock_Free (Atomic_Type'Object_Size / 8));\n    end Is_Lock_Free;\n \n end System.Atomic_Operations.Arithmetic;"}, {"sha": "4fb28241039fa860fdb881078f35046566b6820c", "filename": "gcc/ada/libgnat/s-atopex.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbe376e136edb8456088d7298d4ba7c93d4e0529/gcc%2Fada%2Flibgnat%2Fs-atopex.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbe376e136edb8456088d7298d4ba7c93d4e0529/gcc%2Fada%2Flibgnat%2Fs-atopex.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-atopex.adb?ref=bbe376e136edb8456088d7298d4ba7c93d4e0529", "patch": "@@ -66,7 +66,7 @@ package body System.Atomic_Operations.Exchange is\n       pragma Warnings (On);\n \n    begin\n-      case Atomic_Type'Size is\n+      case Atomic_Type'Object_Size is\n          when 8      => return Atomic_Exchange_1 (Item'Address, Value);\n          when 16     => return Atomic_Exchange_2 (Item'Address, Value);\n          when 32     => return Atomic_Exchange_4 (Item'Address, Value);\n@@ -124,7 +124,7 @@ package body System.Atomic_Operations.Exchange is\n       pragma Warnings (On);\n \n    begin\n-      case Atomic_Type'Size is\n+      case Atomic_Type'Object_Size is\n          when 8 =>\n             return Boolean\n               (Atomic_Compare_Exchange_1\n@@ -154,7 +154,7 @@ package body System.Atomic_Operations.Exchange is\n       pragma Unreferenced (Item);\n       use type Interfaces.C.size_t;\n    begin\n-      return Boolean (Atomic_Always_Lock_Free (Atomic_Type'Size / 8));\n+      return Boolean (Atomic_Always_Lock_Free (Atomic_Type'Object_Size / 8));\n    end Is_Lock_Free;\n \n end System.Atomic_Operations.Exchange;"}]}