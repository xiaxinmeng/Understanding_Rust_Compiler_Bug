{"sha": "09d096a8d7f2822f73cb60fae6748df3e76b2835", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDlkMDk2YThkN2YyODIyZjczY2I2MGZhZTY3NDhkZjNlNzZiMjgzNQ==", "commit": {"author": {"name": "Scott Gilbertson", "email": "scottg@mantatest.com", "date": "2003-01-15T22:47:04Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-01-15T22:47:04Z"}, "message": "CardLayout.java (show): Rewrote.\n\n2003-01-15  Scott Gilbertson  <scottg@mantatest.com>\n\n\t* java/awt/CardLayout.java (show): Rewrote.\n\t(gotoComponent): Removed `target' argument.  Simplified code.\n\tDon't pre-compute `choice' unless `what' is FIRST or LAST.\n\tChanged all callers.\n\t(NONE): Removed.\n\nFrom-SVN: r61357", "tree": {"sha": "1ef6f13214c6c7217c9ba4c936bcf38313b7b5fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ef6f13214c6c7217c9ba4c936bcf38313b7b5fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09d096a8d7f2822f73cb60fae6748df3e76b2835", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09d096a8d7f2822f73cb60fae6748df3e76b2835", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09d096a8d7f2822f73cb60fae6748df3e76b2835", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09d096a8d7f2822f73cb60fae6748df3e76b2835/comments", "author": null, "committer": null, "parents": [{"sha": "3dd5fc583b47c22a4dfe37a0287403ea0e3ad5d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dd5fc583b47c22a4dfe37a0287403ea0e3ad5d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dd5fc583b47c22a4dfe37a0287403ea0e3ad5d9"}], "stats": {"total": 55, "additions": 34, "deletions": 21}, "files": [{"sha": "96297166325ee7aba1421339de2357561c43d920", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09d096a8d7f2822f73cb60fae6748df3e76b2835/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09d096a8d7f2822f73cb60fae6748df3e76b2835/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=09d096a8d7f2822f73cb60fae6748df3e76b2835", "patch": "@@ -1,3 +1,11 @@\n+2003-01-15  Scott Gilbertson  <scottg@mantatest.com>\n+\n+\t* java/awt/CardLayout.java (show): Rewrote.\n+\t(gotoComponent): Removed `target' argument.  Simplified code.\n+\tDon't pre-compute `choice' unless `what' is FIRST or LAST.\n+\tChanged all callers.\n+\t(NONE): Removed.\n+\t\n 2003-01-14  Michael Koch  <konqueror@gmx.de>\n \n \t* java/net/InetSocketAddress.java"}, {"sha": "1900a6094e2cfa6da14fd4ea71435290a3b0516f", "filename": "libjava/java/awt/CardLayout.java", "status": "modified", "additions": 26, "deletions": 21, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09d096a8d7f2822f73cb60fae6748df3e76b2835/libjava%2Fjava%2Fawt%2FCardLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09d096a8d7f2822f73cb60fae6748df3e76b2835/libjava%2Fjava%2Fawt%2FCardLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FCardLayout.java?ref=09d096a8d7f2822f73cb60fae6748df3e76b2835", "patch": "@@ -1,6 +1,6 @@\n // CardLayout.java - Card-based layout engine\n \n-/* Copyright (C) 1999, 2000, 2002  Free Software Foundation\n+/* Copyright (C) 1999, 2000, 2002, 2003  Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -110,7 +110,7 @@ public void addLayoutComponent (String name, Component comp)\n    */\n   public void first (Container parent)\n   {\n-    gotoComponent (parent, FIRST, null);\n+    gotoComponent (parent, FIRST);\n   }\n \n   /** Return this layout manager's horizontal gap.  */\n@@ -154,7 +154,7 @@ public void invalidateLayout (Container target)\n    */\n   public void last (Container parent)\n   {\n-    gotoComponent (parent, LAST, null);\n+    gotoComponent (parent, LAST);\n   }\n \n   /**\n@@ -210,7 +210,7 @@ public Dimension minimumLayoutSize (Container target)\n    */\n   public void next (Container parent)\n   {\n-    gotoComponent (parent, NEXT, null);\n+    gotoComponent (parent, NEXT);\n   }\n \n   /** Get the preferred layout size of the container.\n@@ -228,7 +228,7 @@ public Dimension preferredLayoutSize (Container parent)\n    */\n   public void previous (Container parent)\n   {\n-    gotoComponent (parent, PREV, null);\n+    gotoComponent (parent, PREV);\n   }\n \n   /** Remove the indicated component from this layout manager.\n@@ -273,7 +273,21 @@ public void show (Container parent, String name)\n   {\n     Object target = tab.get (name);\n     if (target != null)\n-      gotoComponent (parent, NONE, (Component) target);\n+      {\n+\tint num = parent.ncomponents;\n+\t// This is more efficient than calling getComponents().\n+\tComponent[] comps = parent.component;\n+\tfor (int i = 0; i < num; ++i)\n+\t  {\n+\t    if (comps[i].isVisible())\n+\t      {\n+\t\tif (target == comps[i])\n+\t\t  return;\n+\t\tcomps[i].setVisible (false);\n+\t      }\n+\t  }\n+\t((Component) target).setVisible (true);\n+      }\n   }\n \n   /**\n@@ -286,9 +300,11 @@ public String toString ()\n     return getClass ().getName () + \"[\" + hgap + \",\" + vgap + \"]\";\n   }\n \n-  // This implements first(), last(), next(), and previous().\n-  private void gotoComponent (Container parent, int what,\n-\t\t\t      Component target)\n+  /** This implements first(), last(), next(), and previous().\n+   * @param parent The parent container\n+   * @param what The type of goto: FIRST, LAST, NEXT or PREV\n+   */\n+  private void gotoComponent (Container parent, int what)\n   {\n     synchronized (parent.getTreeLock ())\n       {\n@@ -301,19 +317,9 @@ private void gotoComponent (Container parent, int what,\n \t  choice = 0;\n \telse if (what == LAST)\n \t  choice = num - 1;\n-\telse if (what >= 0)\n-\t  choice = what;\n \n \tfor (int i = 0; i < num; ++i)\n \t  {\n-\t    // If TARGET is set then we are looking for a specific\n-\t    // component.\n-\t    if (target != null)\n-\t      {\n-\t\tif (target == comps[i])\n-\t\t  choice = i;\n-\t      }\n-\n \t    if (comps[i].isVisible ())\n \t      {\n \t\tif (what == NEXT)\n@@ -335,7 +341,7 @@ else if (choice == i)\n \t\t    return;\n \t\t  }\n \t\tcomps[i].setVisible (false);\n-\n+ \n \t\tif (choice >= 0)\n \t\t  break;\n \t      }\n@@ -403,7 +409,6 @@ else if (what == MAX)\n   private int LAST = 1;\n   private int NEXT = 2;\n   private int PREV = 3;\n-  private int NONE = 4;\n \n   // These constants are used by the private getSize method.\n   private int MIN = 0;"}]}