{"sha": "e62acfd26fc984cfb994de7e350ef1a0dbdac0ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTYyYWNmZDI2ZmM5ODRjZmI5OTRkZTdlMzUwZWYxYTBkYmRhYzBlZg==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@google.com", "date": "2011-11-29T14:16:16Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2011-11-29T14:16:16Z"}, "message": "gimple.c (gimple_call_set_cannot_inline): Move from gimple.h.\n\n\t* gimple.c (gimple_call_set_cannot_inline): Move from gimple.h.\n \tUpdate field call_stmt_cannot_inline_p from call graph edge, if\n \tneeded.\n \t* gimple.h (gimple_call_set_cannot_inline): Move to gimple.c.\n\nFrom-SVN: r181803", "tree": {"sha": "9382a98287f149b3489fbec9ed7daf0d6424b4c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9382a98287f149b3489fbec9ed7daf0d6424b4c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e62acfd26fc984cfb994de7e350ef1a0dbdac0ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e62acfd26fc984cfb994de7e350ef1a0dbdac0ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e62acfd26fc984cfb994de7e350ef1a0dbdac0ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e62acfd26fc984cfb994de7e350ef1a0dbdac0ef/comments", "author": {"login": "dnovillo", "id": 7295335, "node_id": "MDQ6VXNlcjcyOTUzMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7295335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnovillo", "html_url": "https://github.com/dnovillo", "followers_url": "https://api.github.com/users/dnovillo/followers", "following_url": "https://api.github.com/users/dnovillo/following{/other_user}", "gists_url": "https://api.github.com/users/dnovillo/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnovillo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnovillo/subscriptions", "organizations_url": "https://api.github.com/users/dnovillo/orgs", "repos_url": "https://api.github.com/users/dnovillo/repos", "events_url": "https://api.github.com/users/dnovillo/events{/privacy}", "received_events_url": "https://api.github.com/users/dnovillo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "635a48fbd6dc2f2b72affb7d8708a1cb38e98107", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/635a48fbd6dc2f2b72affb7d8708a1cb38e98107", "html_url": "https://github.com/Rust-GCC/gccrs/commit/635a48fbd6dc2f2b72affb7d8708a1cb38e98107"}], "stats": {"total": 51, "additions": 38, "deletions": 13}, "files": [{"sha": "bf5a6a1a6ceb945ef08c063d9721d53dc06be9d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e62acfd26fc984cfb994de7e350ef1a0dbdac0ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e62acfd26fc984cfb994de7e350ef1a0dbdac0ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e62acfd26fc984cfb994de7e350ef1a0dbdac0ef", "patch": "@@ -1,3 +1,10 @@\n+2011-11-29   Diego Novillo  <dnovillo@google.com>\n+\n+\t* gimple.c (gimple_call_set_cannot_inline): Move from gimple.h.\n+\tUpdate field call_stmt_cannot_inline_p from call graph edge, if\n+\tneeded.\n+\t* gimple.h (gimple_call_set_cannot_inline): Move to gimple.c.\n+\n 2011-11-29  Sameera Deshpande  <sameera.deshpande@arm.com>\n \n \t* config/arm/arm.md (arm_movdi): Update NEG_POOL_RANGE."}, {"sha": "d27e94b218c61ea6c5897bac5f26d5e7c5bc18d5", "filename": "gcc/gimple.c", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e62acfd26fc984cfb994de7e350ef1a0dbdac0ef/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e62acfd26fc984cfb994de7e350ef1a0dbdac0ef/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=e62acfd26fc984cfb994de7e350ef1a0dbdac0ef", "patch": "@@ -5558,4 +5558,34 @@ gimple_asm_clobbers_memory_p (const_gimple stmt)\n \n   return false;\n }\n+\n+\n+/* Set the inlinable status of GIMPLE_CALL S to INLINABLE_P.  */\n+\n+void\n+gimple_call_set_cannot_inline (gimple s, bool inlinable_p)\n+{\n+  bool prev_inlinable_p;\n+\n+  GIMPLE_CHECK (s, GIMPLE_CALL);\n+\n+  prev_inlinable_p = gimple_call_cannot_inline_p (s);\n+\n+  if (inlinable_p)\n+    s->gsbase.subcode |= GF_CALL_CANNOT_INLINE;\n+  else\n+    s->gsbase.subcode &= ~GF_CALL_CANNOT_INLINE;\n+\n+  /* If we have changed the inlinable attribute, and there is a call\n+     graph edge going out of this statement, update its inlinable\n+     attribute as well.  */\n+  if (current_function_decl && prev_inlinable_p != inlinable_p)\n+    {\n+      struct cgraph_node *n = cgraph_get_node (current_function_decl);\n+      struct cgraph_edge *e = cgraph_edge (n, s);\n+      if (e)\n+\te->call_stmt_cannot_inline_p = inlinable_p;\n+    }\n+}\n+\n #include \"gt-gimple.h\""}, {"sha": "df31bf3c23a3ef6e7114bb0e18431b38fd3bd19b", "filename": "gcc/gimple.h", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e62acfd26fc984cfb994de7e350ef1a0dbdac0ef/gcc%2Fgimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e62acfd26fc984cfb994de7e350ef1a0dbdac0ef/gcc%2Fgimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.h?ref=e62acfd26fc984cfb994de7e350ef1a0dbdac0ef", "patch": "@@ -1035,6 +1035,7 @@ extern bool walk_stmt_load_store_ops (gimple, void *,\n extern bool gimple_ior_addresses_taken (bitmap, gimple);\n extern bool gimple_call_builtin_p (gimple, enum built_in_function);\n extern bool gimple_asm_clobbers_memory_p (const_gimple);\n+extern void gimple_call_set_cannot_inline (gimple, bool);\n \n /* In gimplify.c  */\n extern tree create_tmp_var_raw (tree, const char *);\n@@ -2343,19 +2344,6 @@ gimple_call_tail_p (gimple s)\n }\n \n \n-/* Set the inlinable status of GIMPLE_CALL S to INLINABLE_P.  */\n-\n-static inline void\n-gimple_call_set_cannot_inline (gimple s, bool inlinable_p)\n-{\n-  GIMPLE_CHECK (s, GIMPLE_CALL);\n-  if (inlinable_p)\n-    s->gsbase.subcode |= GF_CALL_CANNOT_INLINE;\n-  else\n-    s->gsbase.subcode &= ~GF_CALL_CANNOT_INLINE;\n-}\n-\n-\n /* Return true if GIMPLE_CALL S cannot be inlined.  */\n \n static inline bool"}]}