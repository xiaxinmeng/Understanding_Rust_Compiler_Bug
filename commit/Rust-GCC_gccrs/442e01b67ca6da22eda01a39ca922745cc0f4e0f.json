{"sha": "442e01b67ca6da22eda01a39ca922745cc0f4e0f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQyZTAxYjY3Y2E2ZGEyMmVkYTAxYTM5Y2E5MjI3NDVjYzBmNGUwZg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-06-05T11:53:28Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-06-05T11:53:28Z"}, "message": "class.c (layout_vtable_decl): Fix off by one error on build_index_type.\n\n\t* class.c (layout_vtable_decl): Fix off by one error on\n\tbuild_index_type.\n\t(build_vtt): Likewise.\n\t(build_ctor_vtbl_group): Likewise.\n\nFrom-SVN: r42903", "tree": {"sha": "86f50160cba50c6a3342b93a23ad1e2d220158b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86f50160cba50c6a3342b93a23ad1e2d220158b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/442e01b67ca6da22eda01a39ca922745cc0f4e0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/442e01b67ca6da22eda01a39ca922745cc0f4e0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/442e01b67ca6da22eda01a39ca922745cc0f4e0f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/442e01b67ca6da22eda01a39ca922745cc0f4e0f/comments", "author": null, "committer": null, "parents": [{"sha": "e76b48208439516b45a80ec59a7792c1370db081", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e76b48208439516b45a80ec59a7792c1370db081", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e76b48208439516b45a80ec59a7792c1370db081"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "94658acc1cea1f8c1a9fa92db12fc6f189e93b1b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442e01b67ca6da22eda01a39ca922745cc0f4e0f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442e01b67ca6da22eda01a39ca922745cc0f4e0f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=442e01b67ca6da22eda01a39ca922745cc0f4e0f", "patch": "@@ -1,3 +1,10 @@\n+2001-06-05  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* class.c (layout_vtable_decl): Fix off by one error on\n+\tbuild_index_type.\n+\t(build_vtt): Likewise.\n+\t(build_ctor_vtbl_group): Likewise.\n+\n 2001-06-05  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* class.c (maybe_indent_hierarchy): New function."}, {"sha": "afe2da403f7ab59d31d0eec0b128576ef01236de", "filename": "gcc/cp/class.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442e01b67ca6da22eda01a39ca922745cc0f4e0f/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442e01b67ca6da22eda01a39ca922745cc0f4e0f/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=442e01b67ca6da22eda01a39ca922745cc0f4e0f", "patch": "@@ -2446,13 +2446,11 @@ layout_vtable_decl (binfo, n)\n      tree binfo;\n      int n;\n {\n-  tree itype;\n   tree atype;\n   tree vtable;\n \n-  itype = size_int (n);\n   atype = build_cplus_array_type (vtable_entry_type, \n-\t\t\t\t  build_index_type (itype));\n+\t\t\t\t  build_index_type (size_int (n - 1)));\n   layout_type (atype);\n \n   /* We may have to grow the vtable.  */\n@@ -4856,7 +4854,7 @@ layout_virtual_bases (t, offsets)\n   TYPE_ALIGN (t) = MAX (TYPE_ALIGN (t), BITS_PER_UNIT);\n \n   /* Go through the virtual bases, allocating space for each virtual\n-     base that is not already a primary base class.  Under the new\n+     base that is not already a primary base class.  Under the old\n      ABI, these are allocated according to a depth-first left-to-right\n      postorder traversal; in the new ABI, inheritance graph order is\n      used instead.  */\n@@ -7149,7 +7147,7 @@ build_vtt (t)\n     return;\n \n   /* Figure out the type of the VTT.  */\n-  type = build_index_type (size_int (list_length (inits)));\n+  type = build_index_type (size_int (list_length (inits) - 1));\n   type = build_cplus_array_type (const_ptr_type_node, type);\n \t\t\t\t \n   /* Now, build the VTT object itself.  */\n@@ -7468,7 +7466,7 @@ build_ctor_vtbl_group (binfo, t)\n   inits = TREE_VALUE (list);\n \n   /* Figure out the type of the construction vtable.  */\n-  type = build_index_type (size_int (list_length (inits)));\n+  type = build_index_type (size_int (list_length (inits) - 1));\n   type = build_cplus_array_type (vtable_entry_type, type);\n   TREE_TYPE (vtbl) = type;\n "}]}