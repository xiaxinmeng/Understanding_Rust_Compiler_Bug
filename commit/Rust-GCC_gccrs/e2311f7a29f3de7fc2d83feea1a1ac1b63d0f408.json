{"sha": "e2311f7a29f3de7fc2d83feea1a1ac1b63d0f408", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIzMTFmN2EyOWYzZGU3ZmMyZDgzZmVlYTFhMWFjMWI2M2QwZjQwOA==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2007-08-22T16:36:28Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2007-08-22T16:36:28Z"}, "message": "libgcc.texi (Decimal float library routines): Fix formatting and rearrange floating point conversion functions into different...\n\n\t* doc/libgcc.texi (Decimal float library routines): Fix formatting\n\tand rearrange floating point conversion functions into different\n\tcategories.\n\nFrom-SVN: r127709", "tree": {"sha": "fe7faf8ddb22b30c9d851fd05e93abce5de8798e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe7faf8ddb22b30c9d851fd05e93abce5de8798e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2311f7a29f3de7fc2d83feea1a1ac1b63d0f408", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2311f7a29f3de7fc2d83feea1a1ac1b63d0f408", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2311f7a29f3de7fc2d83feea1a1ac1b63d0f408", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2311f7a29f3de7fc2d83feea1a1ac1b63d0f408/comments", "author": null, "committer": null, "parents": [{"sha": "51743df84409168a21a9480d979a3f87a7a44eb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51743df84409168a21a9480d979a3f87a7a44eb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51743df84409168a21a9480d979a3f87a7a44eb2"}], "stats": {"total": 75, "additions": 43, "deletions": 32}, "files": [{"sha": "ec467729a080f956d5f29cf57515782c4b117245", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2311f7a29f3de7fc2d83feea1a1ac1b63d0f408/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2311f7a29f3de7fc2d83feea1a1ac1b63d0f408/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e2311f7a29f3de7fc2d83feea1a1ac1b63d0f408", "patch": "@@ -1,3 +1,9 @@\n+2007-08-22  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* doc/libgcc.texi (Decimal float library routines): Fix formatting\n+\tand rearrange floating point conversion functions into different\n+\tcategories.\n+\n 2007-08-22  Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n \t* target.h (struct gcc_target.sched: dfa_pre_advance_cycle,"}, {"sha": "161cfc6cbe456cd218a44c00a857eb95e24f835b", "filename": "gcc/doc/libgcc.texi", "status": "modified", "additions": 37, "deletions": 32, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2311f7a29f3de7fc2d83feea1a1ac1b63d0f408/gcc%2Fdoc%2Flibgcc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2311f7a29f3de7fc2d83feea1a1ac1b63d0f408/gcc%2Fdoc%2Flibgcc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Flibgcc.texi?ref=e2311f7a29f3de7fc2d83feea1a1ac1b63d0f408", "patch": "@@ -557,63 +557,68 @@ sign bit, so they can produce negative zero and negative NaN@.\n \n @subsection Conversion functions\n \n-@c DFP/DFP conversions\n @deftypefn {Runtime Function} _Decimal64 __dpd_extendsddd2 (_Decimal32 @var{a})\n @deftypefnx {Runtime Function} _Decimal64 __bid_extendsddd2 (_Decimal32 @var{a})\n @deftypefnx {Runtime Function} _Decimal128 __dpd_extendsdtd2 (_Decimal32 @var{a})\n @deftypefnx {Runtime Function} _Decimal128 __bid_extendsdtd2 (_Decimal32 @var{a})\n @deftypefnx {Runtime Function} _Decimal128 __dpd_extendddtd2 (_Decimal64 @var{a})\n @deftypefnx {Runtime Function} _Decimal128 __bid_extendddtd2 (_Decimal64 @var{a})\n-@c DFP/binary FP conversions\n-@deftypefnx {Runtime Function} _Decimal32 __dpd_extendsfsd (float @var{a})\n-@deftypefnx {Runtime Function} _Decimal32 __bid_extendsfsd (float @var{a})\n-@deftypefnx {Runtime Function} double __dpd_extendsddf (_Decimal32 @var{a})\n-@deftypefnx {Runtime Function} double __bid_extendsddf (_Decimal32 @var{a})\n-@deftypefnx {Runtime Function} {long double} __dpd_extendsdxf (_Decimal32 @var{a})\n-@deftypefnx {Runtime Function} {long double} __bid_extendsdxf (_Decimal32 @var{a})\n-@deftypefnx {Runtime Function} _Decimal64 __dpd_extendsfdd (float @var{a})\n+@deftypefnx {Runtime Function} _Decimal32 __dpd_truncddsd2 (_Decimal64 @var{a})\n+@deftypefnx {Runtime Function} _Decimal32 __bid_truncddsd2 (_Decimal64 @var{a})\n+@deftypefnx {Runtime Function} _Decimal32 __dpd_trunctdsd2 (_Decimal128 @var{a})\n+@deftypefnx {Runtime Function} _Decimal32 __bid_trunctdsd2 (_Decimal128 @var{a})\n+@deftypefnx {Runtime Function} _Decimal64 __dpd_trunctddd2 (_Decimal128 @var{a})\n+@deftypefnx {Runtime Function} _Decimal64 __bid_trunctddd2 (_Decimal128 @var{a})\n+These functions convert the value @var{a} from one decimal floating type\n+to another.\n+@end deftypefn\n+\n+@deftypefn {Runtime Function} _Decimal64 __dpd_extendsfdd (float @var{a})\n @deftypefnx {Runtime Function} _Decimal64 __bid_extendsfdd (float @var{a})\n-@deftypefnx {Runtime Function} _Decimal64 __dpd_extenddfdd (double @var{a})\n-@deftypefnx {Runtime Function} _Decimal64 __bid_extenddfdd (double @var{a})\n-@deftypefnx {Runtime Function} {long double} __dpd_extendddxf (_Decimal64 @var{a})\n-@deftypefnx {Runtime Function} {long double} __bid_extendddxf (_Decimal64 @var{a})\n @deftypefnx {Runtime Function} _Decimal128 __dpd_extendsftd (float @var{a})\n @deftypefnx {Runtime Function} _Decimal128 __bid_extendsftd (float @var{a})\n @deftypefnx {Runtime Function} _Decimal128 __dpd_extenddftd (double @var{a})\n @deftypefnx {Runtime Function} _Decimal128 __bid_extenddftd (double @var{a})\n @deftypefnx {Runtime Function} _Decimal128 __dpd_extendxftd ({long double} @var{a})\n @deftypefnx {Runtime Function} _Decimal128 __bid_extendxftd ({long double} @var{a})\n-These functions extend @var{a} to the wider mode of their return type.\n-@end deftypefn\n-\n-@c DFP/DFP conversions\n-@deftypefn {Runtime Function} _Decimal32 __dpd_truncddsd2 (_Decimal64 @var{a})\n-@deftypefnx {Runtime Function} _Decimal32 __bid_truncddsd2 (_Decimal64 @var{a})\n-@deftypefnx {Runtime Function} _Decimal32 __dpd_trunctdsd2 (_Decimal128 @var{a})\n-@deftypefnx {Runtime Function} _Decimal32 __bid_trunctdsd2 (_Decimal128 @var{a})\n-@deftypefnx {Runtime Function} _Decimal64 __dpd_trunctddd2 (_Decimal128 @var{a})\n-@deftypefnx {Runtime Function} _Decimal64 __bid_trunctddd2 (_Decimal128 @var{a})\n-@c DFP/binary FP conversions\n-@deftypefnx {Runtime Function} float __dpd_truncsdsf (_Decimal32 @var{a})\n-@deftypefnx {Runtime Function} float __bid_truncsdsf (_Decimal32 @var{a})\n @deftypefnx {Runtime Function} _Decimal32 __dpd_truncdfsd (double @var{a})\n @deftypefnx {Runtime Function} _Decimal32 __bid_truncdfsd (double @var{a})\n @deftypefnx {Runtime Function} _Decimal32 __dpd_truncxfsd ({long double} @var{a})\n @deftypefnx {Runtime Function} _Decimal32 __bid_truncxfsd ({long double} @var{a})\n-@deftypefnx {Runtime Function} float __dpd_truncddsf (_Decimal64 @var{a})\n-@deftypefnx {Runtime Function} float __bid_truncddsf (_Decimal64 @var{a})\n-@deftypefnx {Runtime Function} double __dpd_truncdddf (_Decimal64 @var{a})\n-@deftypefnx {Runtime Function} double __bid_truncdddf (_Decimal64 @var{a})\n @deftypefnx {Runtime Function} _Decimal64 __dpd_truncxfdd ({long double} @var{a})\n @deftypefnx {Runtime Function} _Decimal64 __bid_truncxfdd ({long double} @var{a})\n+These functions convert the value of @var{a} from a binary floating type\n+to a decimal floating type of a different size.\n+@end deftypefn\n+\n+@deftypefn {Runtime Function} float __dpd_truncddsf (_Decimal64 @var{a})\n+@deftypefnx {Runtime Function} float __bid_truncddsf (_Decimal64 @var{a})\n @deftypefnx {Runtime Function} float __dpd_trunctdsf (_Decimal128 @var{a})\n @deftypefnx {Runtime Function} float __bid_trunctdsf (_Decimal128 @var{a})\n+@deftypefnx {Runtime Function} double __dpd_extendsddf (_Decimal32 @var{a})\n+@deftypefnx {Runtime Function} double __bid_extendsddf (_Decimal32 @var{a})\n @deftypefnx {Runtime Function} double __dpd_trunctddf (_Decimal128 @var{a})\n @deftypefnx {Runtime Function} double __bid_trunctddf (_Decimal128 @var{a})\n+@deftypefnx {Runtime Function} {long double} __dpd_extendsdxf (_Decimal32 @var{a})\n+@deftypefnx {Runtime Function} {long double} __bid_extendsdxf (_Decimal32 @var{a})\n+@deftypefnx {Runtime Function} {long double} __dpd_extendddxf (_Decimal64 @var{a})\n+@deftypefnx {Runtime Function} {long double} __bid_extendddxf (_Decimal64 @var{a})\n @deftypefnx {Runtime Function} {long double} __dpd_trunctdxf (_Decimal128 @var{a})\n @deftypefnx {Runtime Function} {long double} __bid_trunctdxf (_Decimal128 @var{a})\n-These functions truncate @var{a} to the narrower mode of their return\n-type.\n+These functions convert the value of @var{a} from a decimal floating type\n+to a binary floating type of a different size.\n+@end deftypefn\n+\n+@deftypefn {Runtime Function} _Decimal32 __dpd_extendsfsd (float @var{a})\n+@deftypefnx {Runtime Function} _Decimal32 __bid_extendsfsd (float @var{a})\n+@deftypefnx {Runtime Function} _Decimal64 __dpd_extenddfdd (double @var{a})\n+@deftypefnx {Runtime Function} _Decimal64 __bid_extenddfdd (double @var{a})\n+@deftypefnx {Runtime Function} float __dpd_truncsdsf (_Decimal32 @var{a})\n+@deftypefnx {Runtime Function} float __bid_truncsdsf (_Decimal32 @var{a})\n+@deftypefnx {Runtime Function} double __dpd_truncdddf (_Decimal64 @var{a})\n+@deftypefnx {Runtime Function} double __bid_truncdddf (_Decimal64 @var{a})\n+These functions convert the value of @var{a} between decimal and\n+binary floating types of the same size.\n @end deftypefn\n \n @deftypefn {Runtime Function} int __dpd_fixsdsi (_Decimal32 @var{a})"}]}