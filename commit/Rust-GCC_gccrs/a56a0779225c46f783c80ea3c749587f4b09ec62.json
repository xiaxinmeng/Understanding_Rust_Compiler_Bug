{"sha": "a56a0779225c46f783c80ea3c749587f4b09ec62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU2YTA3NzkyMjVjNDZmNzgzYzgwZWEzYzc0OTU4N2Y0YjA5ZWM2Mg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2005-03-30T06:24:35Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2005-03-30T06:24:35Z"}, "message": "opt-functions.awk (flag_set_p, test_flag): New functions.\n\n\t* opt-functions.awk (flag_set_p, test_flag): New functions.\n\t(switch_flags): Use them.\n\t* opth-gen.awk: Use flag_set_p to check for flags.\n\t* optc-gen.awk: Likewise.  Use opt_args to check for Init(...) flags.\n\nFrom-SVN: r97237", "tree": {"sha": "0f5f11110d7efae0a9f2bdcb0ba8512beb09a1ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f5f11110d7efae0a9f2bdcb0ba8512beb09a1ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a56a0779225c46f783c80ea3c749587f4b09ec62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a56a0779225c46f783c80ea3c749587f4b09ec62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a56a0779225c46f783c80ea3c749587f4b09ec62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a56a0779225c46f783c80ea3c749587f4b09ec62/comments", "author": null, "committer": null, "parents": [{"sha": "e5948c8335b0cb639d48d3c8aa1944f240f4d59d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5948c8335b0cb639d48d3c8aa1944f240f4d59d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5948c8335b0cb639d48d3c8aa1944f240f4d59d"}], "stats": {"total": 72, "additions": 43, "deletions": 29}, "files": [{"sha": "d9f08ed2af88a6c3f5be2929b799c06c71c332d9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a56a0779225c46f783c80ea3c749587f4b09ec62/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a56a0779225c46f783c80ea3c749587f4b09ec62/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a56a0779225c46f783c80ea3c749587f4b09ec62", "patch": "@@ -1,3 +1,10 @@\n+2005-03-20  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* opt-functions.awk (flag_set_p, test_flag): New functions.\n+\t(switch_flags): Use them.\n+\t* opth-gen.awk: Use flag_set_p to check for flags.\n+\t* optc-gen.awk: Likewise.  Use opt_args to check for Init(...) flags.\n+\n 2005-03-30  Ian Lance Taylor  <ian@airs.com>\n \n \t* config.host (i[34567]86-*-mingw32*): Don't set"}, {"sha": "916282136969a079804a3e31ad2cc50e273da7bf", "filename": "gcc/opt-functions.awk", "status": "modified", "additions": 27, "deletions": 14, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a56a0779225c46f783c80ea3c749587f4b09ec62/gcc%2Fopt-functions.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a56a0779225c46f783c80ea3c749587f4b09ec62/gcc%2Fopt-functions.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopt-functions.awk?ref=a56a0779225c46f783c80ea3c749587f4b09ec62", "patch": "@@ -18,6 +18,21 @@\n \n # Some common subroutines for use by opt[ch]-gen.awk.\n \n+# Return nonzero if FLAGS contains a flag matching REGEX.\n+function flag_set_p(regex, flags)\n+{\n+\treturn (\" \" flags \" \") ~ (\" \" regex \" \")\n+}\n+\n+# Return STRING if FLAGS contains a flag matching regexp REGEX,\n+# otherwise return the empty string.\n+function test_flag(regex, flags, string)\n+{\n+\tif (flag_set_p(regex, flags))\n+\t\treturn string\n+\treturn \"\"\n+}\n+\n # If FLAGS contains a \"NAME(...argument...)\" flag, return the value\n # of the argument.  Return the empty string otherwise.\n function opt_args(name, flags)\n@@ -47,24 +62,22 @@ function nth_arg(n, s)\n # Return a bitmask of CL_* values for option flags FLAGS.\n function switch_flags (flags)\n {\n-\tflags = \" \" flags \" \"\n \tresult = \"0\"\n \tfor (j = 0; j < n_langs; j++) {\n-\t\tregex = \" \" langs[j] \" \"\n+\t\tregex = langs[j]\n \t\tgsub ( \"\\\\+\", \"\\\\+\", regex )\n-\t\tif (flags ~ regex)\n-\t\t\tresult = result \" | \" macros[j]\n+\t\tresult = result test_flag(regex, flags, \" | \" macros[j])\n \t}\n-\tif (flags ~ \" Common \") result = result \" | CL_COMMON\"\n-\tif (flags ~ \" Target \") result = result \" | CL_TARGET\"\n-\tif (flags ~ \" Joined \") result = result \" | CL_JOINED\"\n-\tif (flags ~ \" JoinedOrMissing \") \\\n-\t    result = result \" | CL_JOINED | CL_MISSING_OK\"\n-\tif (flags ~ \" Separate \") result = result \" | CL_SEPARATE\"\n-\tif (flags ~ \" RejectNegative \") result = result \" | CL_REJECT_NEGATIVE\"\n-\tif (flags ~ \" UInteger \") result = result \" | CL_UINTEGER\"\n-\tif (flags ~ \" Undocumented \") result = result \" | CL_UNDOCUMENTED\"\n-\tif (flags ~ \" Report \") result = result \" | CL_REPORT\"\n+\tresult = result \\\n+\t  test_flag(\"Common\", flags, \" | CL_COMMON\") \\\n+\t  test_flag(\"Target\", flags, \" | CL_TARGET\") \\\n+\t  test_flag(\"Joined\", flags, \" | CL_JOINED\") \\\n+\t  test_flag(\"JoinedOrMissing\", flags, \" | CL_JOINED | CL_MISSING_OK\") \\\n+\t  test_flag(\"Separate\", flags, \" | CL_SEPARATE\") \\\n+\t  test_flag(\"RejectNegative\", flags, \" | CL_REJECT_NEGATIVE\") \\\n+\t  test_flag(\"UInteger\", flags, \" | CL_UINTEGER\") \\\n+\t  test_flag(\"Undocumented\", flags,  \" | CL_UNDOCUMENTED\") \\\n+\t  test_flag(\"Report\", flags, \" | CL_REPORT\")\n \tsub( \"^0 \\\\| \", \"\", result )\n \treturn result\n }"}, {"sha": "94e2ddb65daf8b5943b830542e360e1659940aab", "filename": "gcc/optc-gen.awk", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a56a0779225c46f783c80ea3c749587f4b09ec62/gcc%2Foptc-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a56a0779225c46f783c80ea3c749587f4b09ec62/gcc%2Foptc-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptc-gen.awk?ref=a56a0779225c46f783c80ea3c749587f4b09ec62", "patch": "@@ -63,22 +63,16 @@ for (i = 0; i < n_opts; i++) {\n \tif (name == \"\")\n \t\tcontinue;\n \n-\tif (flags[i] ~ \"VarExists\")\n+\tif (flag_set_p(\"VarExists\", flags[i]))\n \t\tcontinue;\n \n-\tif (flags[i] ~ \"Init\\\\(\")\n-\t    {\n-\t\t    init = flags[i];\n-\t\t    sub(\".*Init\\\\(\",\"\",init);\n-\t\t    sub(\"\\\\).*\",\"\",init);\n-\t\t    init = \" = \" init;\n-\t    }\n-\t else\n-\t\t    init = \"\";\n-\n-\t printf (\"/* Set by -%s.\\n   %s  */\\nint %s%s;\\n\\n\",\n+\tinit = opt_args(\"Init\", flags[i])\n+\tif (init != \"\")\n+\t\tinit = \" = \" init;\n+\n+\tprintf (\"/* Set by -%s.\\n   %s  */\\nint %s%s;\\n\\n\",\n \t    opts[i], help[i], name,init)\n-    }\n+}\n \n \n print \"const char * const lang_names[] =\\n{\"\n@@ -117,7 +111,7 @@ for (i = 0; i < n_opts; i++)\n \t\t# a later switch S is a longer prefix of a switch T, T\n \t\t# will be back-chained to S in a later iteration of this\n \t\t# for() loop, which is what we want.\n-\t\tif (flags[i] ~ \"Joined\") {\n+\t\tif (flag_set_p(\"Joined.*\", flags[i])) {\n \t\t\tfor (j = i + 1; j < n_opts; j++) {\n \t\t\t\tif (substr (opts[j], 1, len) != opts[i])\n \t\t\t\t\tbreak;"}, {"sha": "3839af9a31c5762398e814010c7f263c9288a098", "filename": "gcc/opth-gen.awk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a56a0779225c46f783c80ea3c749587f4b09ec62/gcc%2Fopth-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a56a0779225c46f783c80ea3c749587f4b09ec62/gcc%2Fopth-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopth-gen.awk?ref=a56a0779225c46f783c80ea3c749587f4b09ec62", "patch": "@@ -127,7 +127,7 @@ for (i = 0; i < n_opts; i++)\n \t# a later switch S is a longer prefix of a switch T, T\n \t# will be back-chained to S in a later iteration of this\n \t# for() loop, which is what we want.\n-\tif (flags[i] ~ \"Joined\") {\n+\tif (flag_set_p(\"Joined.*\", flags[i])) {\n \t\tfor (j = i + 1; j < n_opts; j++) {\n \t\t\tif (substr (opts[j], 1, len) != opts[i])\n \t\t\t\tbreak;"}]}