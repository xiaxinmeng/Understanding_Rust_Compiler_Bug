{"sha": "458f4b6b09795999aba0b516f300f62399cd4124", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU4ZjRiNmIwOTc5NTk5OWFiYTBiNTE2ZjMwMGY2MjM5OWNkNDEyNA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1998-05-07T15:07:43Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1998-05-07T15:07:43Z"}, "message": "More toplev.h cleanup, regnerate c-parse.c.\n\nFrom-SVN: r19614", "tree": {"sha": "8232d608ab86c16c4a1c88389ee3c74ebe6cf8af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8232d608ab86c16c4a1c88389ee3c74ebe6cf8af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/458f4b6b09795999aba0b516f300f62399cd4124", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/458f4b6b09795999aba0b516f300f62399cd4124", "html_url": "https://github.com/Rust-GCC/gccrs/commit/458f4b6b09795999aba0b516f300f62399cd4124", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/458f4b6b09795999aba0b516f300f62399cd4124/comments", "author": null, "committer": null, "parents": [{"sha": "2d7cec0da4eec4fb6bc397cfb63fa7deca6f5b95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d7cec0da4eec4fb6bc397cfb63fa7deca6f5b95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d7cec0da4eec4fb6bc397cfb63fa7deca6f5b95"}], "stats": {"total": 725, "additions": 363, "deletions": 362}, "files": [{"sha": "2165908d500fc32585d9cc5b178dbcc4e5893f4b", "filename": "gcc/c-parse.c", "status": "modified", "additions": 363, "deletions": 362, "changes": 725, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458f4b6b09795999aba0b516f300f62399cd4124/gcc%2Fc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458f4b6b09795999aba0b516f300f62399cd4124/gcc%2Fc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.c?ref=458f4b6b09795999aba0b516f300f62399cd4124", "patch": "@@ -77,6 +77,7 @@\n #include \"c-tree.h\"\n #include \"flags.h\"\n #include \"output.h\"\n+#include \"toplev.h\"\n \n #ifdef MULTIBYTE_CHARS\n #include <locale.h>\n@@ -93,10 +94,10 @@ char *language_string = \"GNU C\";\n /* Cause the `yydebug' variable to be defined.  */\n #define YYDEBUG 1\n \n-#line 86 \"c-parse.y\"\n+#line 87 \"c-parse.y\"\n typedef union {long itype; tree ttype; enum tree_code code;\n \tchar *filename; int lineno; int ends_in_label; } YYSTYPE;\n-#line 202 \"c-parse.y\"\n+#line 203 \"c-parse.y\"\n \n /* Number of statements (loosely speaking) and compound statements \n    seen so far.  */\n@@ -352,46 +353,46 @@ static const short yyrhs[] = {    -1,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   231,   236,   250,   252,   252,   253,   255,   257,   258,   266,\n-   270,   281,   286,   291,   293,   295,   296,   297,   302,   309,\n-   311,   316,   321,   327,   329,   334,   339,   345,   347,   352,\n-   359,   361,   364,   366,   368,   370,   372,   374,   376,   380,\n-   384,   387,   390,   393,   397,   399,   402,   405,   409,   437,\n-   443,   446,   449,   452,   454,   458,   462,   466,   468,   471,\n-   475,   502,   504,   506,   508,   510,   512,   514,   516,   518,\n-   520,   522,   524,   526,   528,   532,   534,   538,   540,   543,\n-   547,   549,   556,   559,   562,   568,   667,   668,   670,   676,\n-   678,   692,   715,   717,   719,   723,   729,   731,   736,   738,\n-   743,   745,   746,   756,   761,   763,   764,   765,   772,   778,\n-   783,   786,   794,   799,   801,   802,   803,   810,   821,   825,\n-   831,   836,   841,   846,   848,   850,   859,   862,   866,   868,\n-   870,   875,   879,   882,   886,   889,   891,   903,   906,   908,\n-   910,   914,   918,   920,   923,   936,   939,   943,   945,   953,\n-   954,   955,   959,   961,   967,   968,   969,   972,   974,   977,\n-   979,   982,   985,   991,   998,  1000,  1007,  1014,  1017,  1024,\n-  1027,  1031,  1034,  1038,  1043,  1046,  1050,  1053,  1055,  1057,\n-  1059,  1066,  1068,  1069,  1070,  1075,  1077,  1082,  1090,  1095,\n-  1099,  1102,  1104,  1109,  1112,  1114,  1116,  1120,  1123,  1123,\n-  1126,  1126,  1129,  1129,  1132,  1132,  1135,  1137,  1148,  1156,\n-  1160,  1171,  1179,  1186,  1188,  1193,  1196,  1201,  1203,  1205,\n-  1212,  1214,  1222,  1228,  1230,  1232,  1239,  1241,  1247,  1253,\n-  1255,  1257,  1259,  1266,  1268,  1271,  1276,  1278,  1282,  1284,\n-  1286,  1288,  1292,  1294,  1297,  1300,  1303,  1306,  1310,  1312,\n-  1315,  1317,  1321,  1324,  1329,  1331,  1333,  1347,  1354,  1359,\n-  1365,  1370,  1372,  1377,  1379,  1383,  1387,  1391,  1401,  1403,\n-  1408,  1413,  1416,  1420,  1423,  1427,  1430,  1433,  1436,  1440,\n-  1443,  1447,  1451,  1453,  1455,  1457,  1459,  1461,  1463,  1465,\n-  1475,  1483,  1485,  1487,  1491,  1493,  1496,  1499,  1510,  1512,\n-  1517,  1519,  1522,  1536,  1539,  1542,  1544,  1546,  1554,  1562,\n-  1573,  1578,  1581,  1595,  1604,  1608,  1612,  1616,  1622,  1626,\n-  1631,  1634,  1639,  1642,  1643,  1660,  1665,  1668,  1680,  1682,\n-  1692,  1702,  1703,  1711,  1714,  1726,  1730,  1747,  1757,  1766,\n-  1771,  1776,  1781,  1785,  1789,  1800,  1807,  1814,  1821,  1832,\n-  1838,  1841,  1846,  1869,  1903,  1934,  1965,  1980,  1991,  1995,\n-  1999,  2002,  2007,  2009,  2012,  2014,  2018,  2023,  2026,  2032,\n-  2037,  2042,  2044,  2053,  2054,  2060,  2062,  2072,  2074,  2078,\n-  2081,  2087,  2097,  2106,  2115,  2125,  2139,  2144,  2149,  2151,\n-  2160,  2163,  2168,  2171,  2175\n+   232,   237,   251,   253,   253,   254,   256,   258,   259,   267,\n+   271,   282,   287,   292,   294,   296,   297,   298,   303,   310,\n+   312,   317,   322,   328,   330,   335,   340,   346,   348,   353,\n+   360,   362,   365,   367,   369,   371,   373,   375,   377,   381,\n+   385,   388,   391,   394,   398,   400,   403,   406,   410,   438,\n+   444,   447,   450,   453,   455,   459,   463,   467,   469,   472,\n+   476,   503,   505,   507,   509,   511,   513,   515,   517,   519,\n+   521,   523,   525,   527,   529,   533,   535,   539,   541,   544,\n+   548,   550,   557,   560,   563,   569,   668,   669,   671,   677,\n+   679,   693,   716,   718,   720,   724,   730,   732,   737,   739,\n+   744,   746,   747,   757,   762,   764,   765,   766,   773,   779,\n+   784,   787,   795,   800,   802,   803,   804,   811,   822,   826,\n+   832,   837,   842,   847,   849,   851,   860,   863,   867,   869,\n+   871,   876,   880,   883,   887,   890,   892,   904,   907,   909,\n+   911,   915,   919,   921,   924,   937,   940,   944,   946,   954,\n+   955,   956,   960,   962,   968,   969,   970,   973,   975,   978,\n+   980,   983,   986,   992,   999,  1001,  1008,  1015,  1018,  1025,\n+  1028,  1032,  1035,  1039,  1044,  1047,  1051,  1054,  1056,  1058,\n+  1060,  1067,  1069,  1070,  1071,  1076,  1078,  1083,  1091,  1096,\n+  1100,  1103,  1105,  1110,  1113,  1115,  1117,  1121,  1124,  1124,\n+  1127,  1127,  1130,  1130,  1133,  1133,  1136,  1138,  1149,  1157,\n+  1161,  1172,  1180,  1187,  1189,  1194,  1197,  1202,  1204,  1206,\n+  1213,  1215,  1223,  1229,  1231,  1233,  1240,  1242,  1248,  1254,\n+  1256,  1258,  1260,  1267,  1269,  1272,  1277,  1279,  1283,  1285,\n+  1287,  1289,  1293,  1295,  1298,  1301,  1304,  1307,  1311,  1313,\n+  1316,  1318,  1322,  1325,  1330,  1332,  1334,  1348,  1355,  1360,\n+  1366,  1371,  1373,  1378,  1380,  1384,  1388,  1392,  1402,  1404,\n+  1409,  1414,  1417,  1421,  1424,  1428,  1431,  1434,  1437,  1441,\n+  1444,  1448,  1452,  1454,  1456,  1458,  1460,  1462,  1464,  1466,\n+  1476,  1484,  1486,  1488,  1492,  1494,  1497,  1500,  1511,  1513,\n+  1518,  1520,  1523,  1537,  1540,  1543,  1545,  1547,  1555,  1563,\n+  1574,  1579,  1582,  1596,  1605,  1609,  1613,  1617,  1623,  1627,\n+  1632,  1635,  1640,  1643,  1644,  1661,  1666,  1669,  1681,  1683,\n+  1693,  1703,  1704,  1712,  1715,  1727,  1731,  1748,  1758,  1767,\n+  1772,  1777,  1782,  1786,  1790,  1801,  1808,  1815,  1822,  1833,\n+  1839,  1842,  1847,  1870,  1904,  1935,  1966,  1981,  1992,  1996,\n+  2000,  2003,  2008,  2010,  2013,  2015,  2019,  2024,  2027,  2033,\n+  2038,  2043,  2045,  2054,  2055,  2061,  2063,  2073,  2075,  2079,\n+  2082,  2088,  2098,  2107,  2116,  2126,  2140,  2145,  2150,  2152,\n+  2161,  2164,  2169,  2172,  2176\n };\n #endif\n \n@@ -1660,14 +1661,14 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 1:\n-#line 232 \"c-parse.y\"\n+#line 233 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids an empty source file\");\n \t\t  finish_file ();\n \t\t;\n     break;}\n case 2:\n-#line 237 \"c-parse.y\"\n+#line 238 \"c-parse.y\"\n {\n \t\t  /* In case there were missing closebraces,\n \t\t     get us back to the global binding level.  */\n@@ -1677,15 +1678,15 @@ case 2:\n \t\t;\n     break;}\n case 3:\n-#line 251 \"c-parse.y\"\n+#line 252 \"c-parse.y\"\n {yyval.ttype = NULL_TREE; ;\n     break;}\n case 5:\n-#line 252 \"c-parse.y\"\n+#line 253 \"c-parse.y\"\n {yyval.ttype = NULL_TREE; ;\n     break;}\n case 9:\n-#line 259 \"c-parse.y\"\n+#line 260 \"c-parse.y\"\n { STRIP_NOPS (yyvsp[-2].ttype);\n \t\t  if ((TREE_CODE (yyvsp[-2].ttype) == ADDR_EXPR\n \t\t       && TREE_CODE (TREE_OPERAND (yyvsp[-2].ttype, 0)) == STRING_CST)\n@@ -1695,11 +1696,11 @@ case 9:\n \t\t    error (\"argument of `asm' is not a constant string\"); ;\n     break;}\n case 10:\n-#line 267 \"c-parse.y\"\n+#line 268 \"c-parse.y\"\n { pedantic = yyvsp[-1].itype; ;\n     break;}\n case 11:\n-#line 272 \"c-parse.y\"\n+#line 273 \"c-parse.y\"\n { if (pedantic)\n \t\t    error (\"ANSI C forbids data definition with no type or storage class\");\n \t\t  else if (!flag_traditional)\n@@ -1711,170 +1712,170 @@ case 11:\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 12:\n-#line 282 \"c-parse.y\"\n+#line 283 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 13:\n-#line 287 \"c-parse.y\"\n+#line 288 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype);  ;\n     break;}\n case 14:\n-#line 292 \"c-parse.y\"\n+#line 293 \"c-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 15:\n-#line 294 \"c-parse.y\"\n+#line 295 \"c-parse.y\"\n { shadow_tag (yyvsp[-1].ttype); ;\n     break;}\n case 18:\n-#line 298 \"c-parse.y\"\n+#line 299 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C does not allow extra `;' outside of a function\"); ;\n     break;}\n case 19:\n-#line 304 \"c-parse.y\"\n+#line 305 \"c-parse.y\"\n { if (! start_function (current_declspecs, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 0))\n \t\t    YYERROR1;\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 20:\n-#line 309 \"c-parse.y\"\n+#line 310 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 21:\n-#line 311 \"c-parse.y\"\n+#line 312 \"c-parse.y\"\n { finish_function (0); \n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-5].itype); ;\n     break;}\n case 22:\n-#line 317 \"c-parse.y\"\n+#line 318 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 23:\n-#line 322 \"c-parse.y\"\n+#line 323 \"c-parse.y\"\n { if (! start_function (current_declspecs, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 0))\n \t\t    YYERROR1;\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 24:\n-#line 327 \"c-parse.y\"\n+#line 328 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 25:\n-#line 329 \"c-parse.y\"\n+#line 330 \"c-parse.y\"\n { finish_function (0); \n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-5].itype); ;\n     break;}\n case 26:\n-#line 335 \"c-parse.y\"\n+#line 336 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 27:\n-#line 340 \"c-parse.y\"\n+#line 341 \"c-parse.y\"\n { if (! start_function (NULL_TREE, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 0))\n \t\t    YYERROR1;\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 28:\n-#line 345 \"c-parse.y\"\n+#line 346 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 29:\n-#line 347 \"c-parse.y\"\n+#line 348 \"c-parse.y\"\n { finish_function (0); \n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-5].itype); ;\n     break;}\n case 30:\n-#line 353 \"c-parse.y\"\n+#line 354 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 33:\n-#line 365 \"c-parse.y\"\n+#line 366 \"c-parse.y\"\n { yyval.code = ADDR_EXPR; ;\n     break;}\n case 34:\n-#line 367 \"c-parse.y\"\n+#line 368 \"c-parse.y\"\n { yyval.code = NEGATE_EXPR; ;\n     break;}\n case 35:\n-#line 369 \"c-parse.y\"\n+#line 370 \"c-parse.y\"\n { yyval.code = CONVERT_EXPR; ;\n     break;}\n case 36:\n-#line 371 \"c-parse.y\"\n+#line 372 \"c-parse.y\"\n { yyval.code = PREINCREMENT_EXPR; ;\n     break;}\n case 37:\n-#line 373 \"c-parse.y\"\n+#line 374 \"c-parse.y\"\n { yyval.code = PREDECREMENT_EXPR; ;\n     break;}\n case 38:\n-#line 375 \"c-parse.y\"\n+#line 376 \"c-parse.y\"\n { yyval.code = BIT_NOT_EXPR; ;\n     break;}\n case 39:\n-#line 377 \"c-parse.y\"\n+#line 378 \"c-parse.y\"\n { yyval.code = TRUTH_NOT_EXPR; ;\n     break;}\n case 40:\n-#line 381 \"c-parse.y\"\n+#line 382 \"c-parse.y\"\n { yyval.ttype = build_compound_expr (yyvsp[0].ttype); ;\n     break;}\n case 41:\n-#line 386 \"c-parse.y\"\n+#line 387 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 43:\n-#line 392 \"c-parse.y\"\n+#line 393 \"c-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 44:\n-#line 394 \"c-parse.y\"\n+#line 395 \"c-parse.y\"\n { chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 46:\n-#line 400 \"c-parse.y\"\n+#line 401 \"c-parse.y\"\n { yyval.ttype = build_indirect_ref (yyvsp[0].ttype, \"unary *\"); ;\n     break;}\n case 47:\n-#line 403 \"c-parse.y\"\n+#line 404 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  pedantic = yyvsp[-1].itype; ;\n     break;}\n case 48:\n-#line 406 \"c-parse.y\"\n+#line 407 \"c-parse.y\"\n { yyval.ttype = build_unary_op (yyvsp[-1].code, yyvsp[0].ttype, 0);\n \t\t  overflow_warning (yyval.ttype); ;\n     break;}\n case 49:\n-#line 410 \"c-parse.y\"\n+#line 411 \"c-parse.y\"\n { tree label = lookup_label (yyvsp[0].ttype);\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids `&&'\");\n@@ -1889,57 +1890,57 @@ case 49:\n \t\t;\n     break;}\n case 50:\n-#line 438 \"c-parse.y\"\n+#line 439 \"c-parse.y\"\n { skip_evaluation--;\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == COMPONENT_REF\n \t\t      && DECL_C_BIT_FIELD (TREE_OPERAND (yyvsp[0].ttype, 1)))\n \t\t    error (\"`sizeof' applied to a bit-field\");\n \t\t  yyval.ttype = c_sizeof (TREE_TYPE (yyvsp[0].ttype)); ;\n     break;}\n case 51:\n-#line 444 \"c-parse.y\"\n+#line 445 \"c-parse.y\"\n { skip_evaluation--;\n \t\t  yyval.ttype = c_sizeof (groktypename (yyvsp[-1].ttype)); ;\n     break;}\n case 52:\n-#line 447 \"c-parse.y\"\n+#line 448 \"c-parse.y\"\n { skip_evaluation--;\n \t\t  yyval.ttype = c_alignof_expr (yyvsp[0].ttype); ;\n     break;}\n case 53:\n-#line 450 \"c-parse.y\"\n+#line 451 \"c-parse.y\"\n { skip_evaluation--;\n \t\t  yyval.ttype = c_alignof (groktypename (yyvsp[-1].ttype)); ;\n     break;}\n case 54:\n-#line 453 \"c-parse.y\"\n+#line 454 \"c-parse.y\"\n { yyval.ttype = build_unary_op (REALPART_EXPR, yyvsp[0].ttype, 0); ;\n     break;}\n case 55:\n-#line 455 \"c-parse.y\"\n+#line 456 \"c-parse.y\"\n { yyval.ttype = build_unary_op (IMAGPART_EXPR, yyvsp[0].ttype, 0); ;\n     break;}\n case 56:\n-#line 459 \"c-parse.y\"\n+#line 460 \"c-parse.y\"\n { skip_evaluation++; ;\n     break;}\n case 57:\n-#line 463 \"c-parse.y\"\n+#line 464 \"c-parse.y\"\n { skip_evaluation++; ;\n     break;}\n case 59:\n-#line 469 \"c-parse.y\"\n+#line 470 \"c-parse.y\"\n { tree type = groktypename (yyvsp[-2].ttype);\n \t\t  yyval.ttype = build_c_cast (type, yyvsp[0].ttype); ;\n     break;}\n case 60:\n-#line 472 \"c-parse.y\"\n+#line 473 \"c-parse.y\"\n { start_init (NULL_TREE, NULL, 0);\n \t\t  yyvsp[-2].ttype = groktypename (yyvsp[-2].ttype);\n \t\t  really_start_incremental_init (yyvsp[-2].ttype); ;\n     break;}\n case 61:\n-#line 476 \"c-parse.y\"\n+#line 477 \"c-parse.y\"\n { char *name;\n \t\t  tree result = pop_init_level (0);\n \t\t  tree type = yyvsp[-5].ttype;\n@@ -1966,90 +1967,90 @@ case 61:\n \t\t;\n     break;}\n case 63:\n-#line 505 \"c-parse.y\"\n+#line 506 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 64:\n-#line 507 \"c-parse.y\"\n+#line 508 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 65:\n-#line 509 \"c-parse.y\"\n+#line 510 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 66:\n-#line 511 \"c-parse.y\"\n+#line 512 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 67:\n-#line 513 \"c-parse.y\"\n+#line 514 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 68:\n-#line 515 \"c-parse.y\"\n+#line 516 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 69:\n-#line 517 \"c-parse.y\"\n+#line 518 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 70:\n-#line 519 \"c-parse.y\"\n+#line 520 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 71:\n-#line 521 \"c-parse.y\"\n+#line 522 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 72:\n-#line 523 \"c-parse.y\"\n+#line 524 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 73:\n-#line 525 \"c-parse.y\"\n+#line 526 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 74:\n-#line 527 \"c-parse.y\"\n+#line 528 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 75:\n-#line 529 \"c-parse.y\"\n+#line 530 \"c-parse.y\"\n { yyvsp[-1].ttype = truthvalue_conversion (default_conversion (yyvsp[-1].ttype));\n \t\t  skip_evaluation += yyvsp[-1].ttype == boolean_false_node; ;\n     break;}\n case 76:\n-#line 532 \"c-parse.y\"\n+#line 533 \"c-parse.y\"\n { skip_evaluation -= yyvsp[-3].ttype == boolean_false_node;\n \t\t  yyval.ttype = parser_build_binary_op (TRUTH_ANDIF_EXPR, yyvsp[-3].ttype, yyvsp[0].ttype); ;\n     break;}\n case 77:\n-#line 535 \"c-parse.y\"\n+#line 536 \"c-parse.y\"\n { yyvsp[-1].ttype = truthvalue_conversion (default_conversion (yyvsp[-1].ttype));\n \t\t  skip_evaluation += yyvsp[-1].ttype == boolean_true_node; ;\n     break;}\n case 78:\n-#line 538 \"c-parse.y\"\n+#line 539 \"c-parse.y\"\n { skip_evaluation -= yyvsp[-3].ttype == boolean_true_node;\n \t\t  yyval.ttype = parser_build_binary_op (TRUTH_ORIF_EXPR, yyvsp[-3].ttype, yyvsp[0].ttype); ;\n     break;}\n case 79:\n-#line 541 \"c-parse.y\"\n+#line 542 \"c-parse.y\"\n { yyvsp[-1].ttype = truthvalue_conversion (default_conversion (yyvsp[-1].ttype));\n \t\t  skip_evaluation += yyvsp[-1].ttype == boolean_false_node; ;\n     break;}\n case 80:\n-#line 544 \"c-parse.y\"\n+#line 545 \"c-parse.y\"\n { skip_evaluation += ((yyvsp[-4].ttype == boolean_true_node)\n \t\t\t\t      - (yyvsp[-4].ttype == boolean_false_node)); ;\n     break;}\n case 81:\n-#line 547 \"c-parse.y\"\n+#line 548 \"c-parse.y\"\n { skip_evaluation -= yyvsp[-6].ttype == boolean_true_node;\n \t\t  yyval.ttype = build_conditional_expr (yyvsp[-6].ttype, yyvsp[-3].ttype, yyvsp[0].ttype); ;\n     break;}\n case 82:\n-#line 550 \"c-parse.y\"\n+#line 551 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids omitting the middle term of a ?: expression\");\n \t\t  /* Make sure first operand is calculated only once.  */\n@@ -2058,23 +2059,23 @@ case 82:\n \t\t  skip_evaluation += yyvsp[-1].ttype == boolean_true_node; ;\n     break;}\n case 83:\n-#line 557 \"c-parse.y\"\n+#line 558 \"c-parse.y\"\n { skip_evaluation -= yyvsp[-4].ttype == boolean_true_node;\n \t\t  yyval.ttype = build_conditional_expr (yyvsp[-4].ttype, yyvsp[-3].ttype, yyvsp[0].ttype); ;\n     break;}\n case 84:\n-#line 560 \"c-parse.y\"\n+#line 561 \"c-parse.y\"\n { yyval.ttype = build_modify_expr (yyvsp[-2].ttype, NOP_EXPR, yyvsp[0].ttype);\n \t\t  C_SET_EXP_ORIGINAL_CODE (yyval.ttype, MODIFY_EXPR); ;\n     break;}\n case 85:\n-#line 563 \"c-parse.y\"\n+#line 564 \"c-parse.y\"\n { yyval.ttype = build_modify_expr (yyvsp[-2].ttype, yyvsp[-1].code, yyvsp[0].ttype);\n \t\t  /* This inhibits warnings in truthvalue_conversion.  */\n \t\t  C_SET_EXP_ORIGINAL_CODE (yyval.ttype, ERROR_MARK); ;\n     break;}\n case 86:\n-#line 570 \"c-parse.y\"\n+#line 571 \"c-parse.y\"\n {\n \t\t  yyval.ttype = lastiddecl;\n \t\t  if (!yyval.ttype || yyval.ttype == error_mark_node)\n@@ -2174,23 +2175,23 @@ case 86:\n \t\t;\n     break;}\n case 88:\n-#line 669 \"c-parse.y\"\n+#line 670 \"c-parse.y\"\n { yyval.ttype = combine_strings (yyvsp[0].ttype); ;\n     break;}\n case 89:\n-#line 671 \"c-parse.y\"\n+#line 672 \"c-parse.y\"\n { char class = TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype));\n \t\t  if (class == 'e' || class == '1'\n \t\t      || class == '2' || class == '<')\n \t\t    C_SET_EXP_ORIGINAL_CODE (yyvsp[-1].ttype, ERROR_MARK);\n \t\t  yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 90:\n-#line 677 \"c-parse.y\"\n+#line 678 \"c-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 91:\n-#line 679 \"c-parse.y\"\n+#line 680 \"c-parse.y\"\n { if (current_function_decl == 0)\n \t\t    {\n \t\t      error (\"braced-group within expression allowed only inside a function\");\n@@ -2206,7 +2207,7 @@ case 91:\n \t\t  yyval.ttype = expand_start_stmt_expr (); ;\n     break;}\n case 92:\n-#line 693 \"c-parse.y\"\n+#line 694 \"c-parse.y\"\n { tree rtl_exp;\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids braced-groups within expressions\");\n@@ -2231,78 +2232,78 @@ case 92:\n \t\t;\n     break;}\n case 93:\n-#line 716 \"c-parse.y\"\n+#line 717 \"c-parse.y\"\n { yyval.ttype = build_function_call (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 94:\n-#line 718 \"c-parse.y\"\n+#line 719 \"c-parse.y\"\n { yyval.ttype = build_array_ref (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 95:\n-#line 720 \"c-parse.y\"\n+#line 721 \"c-parse.y\"\n {\n \t\t    yyval.ttype = build_component_ref (yyvsp[-2].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 96:\n-#line 724 \"c-parse.y\"\n+#line 725 \"c-parse.y\"\n {\n                   tree expr = build_indirect_ref (yyvsp[-2].ttype, \"->\");\n \n                     yyval.ttype = build_component_ref (expr, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 97:\n-#line 730 \"c-parse.y\"\n+#line 731 \"c-parse.y\"\n { yyval.ttype = build_unary_op (POSTINCREMENT_EXPR, yyvsp[-1].ttype, 0); ;\n     break;}\n case 98:\n-#line 732 \"c-parse.y\"\n+#line 733 \"c-parse.y\"\n { yyval.ttype = build_unary_op (POSTDECREMENT_EXPR, yyvsp[-1].ttype, 0); ;\n     break;}\n case 100:\n-#line 739 \"c-parse.y\"\n+#line 740 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 103:\n-#line 748 \"c-parse.y\"\n+#line 749 \"c-parse.y\"\n { c_mark_varargs ();\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C does not permit use of `varargs.h'\"); ;\n     break;}\n case 104:\n-#line 758 \"c-parse.y\"\n+#line 759 \"c-parse.y\"\n { ;\n     break;}\n case 109:\n-#line 774 \"c-parse.y\"\n+#line 775 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 110:\n-#line 779 \"c-parse.y\"\n+#line 780 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\t\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 111:\n-#line 784 \"c-parse.y\"\n+#line 785 \"c-parse.y\"\n { shadow_tag_warned (yyvsp[-1].ttype, 1);\n \t\t  pedwarn (\"empty declaration\"); ;\n     break;}\n case 112:\n-#line 787 \"c-parse.y\"\n+#line 788 \"c-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 113:\n-#line 796 \"c-parse.y\"\n+#line 797 \"c-parse.y\"\n { ;\n     break;}\n case 118:\n-#line 811 \"c-parse.y\"\n+#line 812 \"c-parse.y\"\n { yyval.itype = suspend_momentary ();\n \t\t  pending_xref_error ();\n \t\t  declspec_stack = tree_cons (prefix_attributes,\n@@ -2312,270 +2313,270 @@ case 118:\n \t\t\t\t     &current_declspecs, &prefix_attributes); ;\n     break;}\n case 119:\n-#line 822 \"c-parse.y\"\n+#line 823 \"c-parse.y\"\n { prefix_attributes = chainon (prefix_attributes, yyvsp[0].ttype); ;\n     break;}\n case 120:\n-#line 827 \"c-parse.y\"\n+#line 828 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 121:\n-#line 832 \"c-parse.y\"\n+#line 833 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 122:\n-#line 837 \"c-parse.y\"\n+#line 838 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-1].itype); ;\n     break;}\n case 123:\n-#line 842 \"c-parse.y\"\n+#line 843 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-1].itype); ;\n     break;}\n case 124:\n-#line 847 \"c-parse.y\"\n+#line 848 \"c-parse.y\"\n { shadow_tag (yyvsp[-1].ttype); ;\n     break;}\n case 125:\n-#line 849 \"c-parse.y\"\n+#line 850 \"c-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 126:\n-#line 851 \"c-parse.y\"\n+#line 852 \"c-parse.y\"\n { pedantic = yyvsp[-1].itype; ;\n     break;}\n case 127:\n-#line 861 \"c-parse.y\"\n+#line 862 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 128:\n-#line 863 \"c-parse.y\"\n+#line 864 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 129:\n-#line 867 \"c-parse.y\"\n+#line 868 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 130:\n-#line 869 \"c-parse.y\"\n+#line 870 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 131:\n-#line 871 \"c-parse.y\"\n+#line 872 \"c-parse.y\"\n { if (extra_warnings)\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 132:\n-#line 876 \"c-parse.y\"\n+#line 877 \"c-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 133:\n-#line 881 \"c-parse.y\"\n+#line 882 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 134:\n-#line 883 \"c-parse.y\"\n+#line 884 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 135:\n-#line 888 \"c-parse.y\"\n+#line 889 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 136:\n-#line 890 \"c-parse.y\"\n+#line 891 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 137:\n-#line 892 \"c-parse.y\"\n+#line 893 \"c-parse.y\"\n { if (extra_warnings)\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 138:\n-#line 905 \"c-parse.y\"\n+#line 906 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 139:\n-#line 907 \"c-parse.y\"\n+#line 908 \"c-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, NULL_TREE); ;\n     break;}\n case 140:\n-#line 909 \"c-parse.y\"\n+#line 910 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 141:\n-#line 911 \"c-parse.y\"\n+#line 912 \"c-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 142:\n-#line 916 \"c-parse.y\"\n+#line 917 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE);\n \t\t  TREE_STATIC (yyval.ttype) = 1; ;\n     break;}\n case 143:\n-#line 919 \"c-parse.y\"\n+#line 920 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 144:\n-#line 921 \"c-parse.y\"\n+#line 922 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype);\n \t\t  TREE_STATIC (yyval.ttype) = 1; ;\n     break;}\n case 145:\n-#line 924 \"c-parse.y\"\n+#line 925 \"c-parse.y\"\n { if (extra_warnings && TREE_STATIC (yyvsp[-1].ttype))\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype);\n \t\t  TREE_STATIC (yyval.ttype) = TREE_STATIC (yyvsp[-1].ttype); ;\n     break;}\n case 146:\n-#line 938 \"c-parse.y\"\n+#line 939 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 147:\n-#line 940 \"c-parse.y\"\n+#line 941 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 148:\n-#line 944 \"c-parse.y\"\n+#line 945 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 149:\n-#line 946 \"c-parse.y\"\n+#line 947 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 152:\n-#line 956 \"c-parse.y\"\n+#line 957 \"c-parse.y\"\n { /* For a typedef name, record the meaning, not the name.\n \t\t     In case of `foo foo, bar;'.  */\n \t\t  yyval.ttype = lookup_name (yyvsp[0].ttype); ;\n     break;}\n case 153:\n-#line 960 \"c-parse.y\"\n+#line 961 \"c-parse.y\"\n { yyval.ttype = TREE_TYPE (yyvsp[-1].ttype); ;\n     break;}\n case 154:\n-#line 962 \"c-parse.y\"\n+#line 963 \"c-parse.y\"\n { yyval.ttype = groktypename (yyvsp[-1].ttype); ;\n     break;}\n case 162:\n-#line 984 \"c-parse.y\"\n+#line 985 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 163:\n-#line 986 \"c-parse.y\"\n+#line 987 \"c-parse.y\"\n { if (TREE_CHAIN (yyvsp[-1].ttype)) yyvsp[-1].ttype = combine_strings (yyvsp[-1].ttype);\n \t\t  yyval.ttype = yyvsp[-1].ttype;\n \t\t;\n     break;}\n case 164:\n-#line 993 \"c-parse.y\"\n+#line 994 \"c-parse.y\"\n { yyval.ttype = start_decl (yyvsp[-3].ttype, current_declspecs, 1,\n \t\t\t\t\t  yyvsp[-1].ttype, prefix_attributes);\n \t\t  start_init (yyval.ttype, yyvsp[-2].ttype, global_bindings_p ()); ;\n     break;}\n case 165:\n-#line 998 \"c-parse.y\"\n+#line 999 \"c-parse.y\"\n { finish_init ();\n \t\t  finish_decl (yyvsp[-1].ttype, yyvsp[0].ttype, yyvsp[-4].ttype); ;\n     break;}\n case 166:\n-#line 1001 \"c-parse.y\"\n+#line 1002 \"c-parse.y\"\n { tree d = start_decl (yyvsp[-2].ttype, current_declspecs, 0,\n \t\t\t\t       yyvsp[0].ttype, prefix_attributes);\n \t\t  finish_decl (d, NULL_TREE, yyvsp[-1].ttype); \n                 ;\n     break;}\n case 167:\n-#line 1009 \"c-parse.y\"\n+#line 1010 \"c-parse.y\"\n { yyval.ttype = start_decl (yyvsp[-3].ttype, current_declspecs, 1,\n \t\t\t\t\t  yyvsp[-1].ttype, prefix_attributes);\n \t\t  start_init (yyval.ttype, yyvsp[-2].ttype, global_bindings_p ()); ;\n     break;}\n case 168:\n-#line 1014 \"c-parse.y\"\n+#line 1015 \"c-parse.y\"\n { finish_init ();\n \t\t  decl_attributes (yyvsp[-1].ttype, yyvsp[-3].ttype, prefix_attributes);\n \t\t  finish_decl (yyvsp[-1].ttype, yyvsp[0].ttype, yyvsp[-4].ttype); ;\n     break;}\n case 169:\n-#line 1018 \"c-parse.y\"\n+#line 1019 \"c-parse.y\"\n { tree d = start_decl (yyvsp[-2].ttype, current_declspecs, 0,\n \t\t\t\t       yyvsp[0].ttype, prefix_attributes);\n \t\t  finish_decl (d, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 170:\n-#line 1026 \"c-parse.y\"\n+#line 1027 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 171:\n-#line 1028 \"c-parse.y\"\n+#line 1029 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 172:\n-#line 1033 \"c-parse.y\"\n+#line 1034 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 173:\n-#line 1035 \"c-parse.y\"\n+#line 1036 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 174:\n-#line 1040 \"c-parse.y\"\n+#line 1041 \"c-parse.y\"\n { yyval.ttype = yyvsp[-2].ttype; ;\n     break;}\n case 175:\n-#line 1045 \"c-parse.y\"\n+#line 1046 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 176:\n-#line 1047 \"c-parse.y\"\n+#line 1048 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 177:\n-#line 1052 \"c-parse.y\"\n+#line 1053 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 178:\n-#line 1054 \"c-parse.y\"\n+#line 1055 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 179:\n-#line 1056 \"c-parse.y\"\n+#line 1057 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, build_tree_list (NULL_TREE, yyvsp[-1].ttype)); ;\n     break;}\n case 180:\n-#line 1058 \"c-parse.y\"\n+#line 1059 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-5].ttype, tree_cons (NULL_TREE, yyvsp[-3].ttype, yyvsp[-1].ttype)); ;\n     break;}\n case 181:\n-#line 1060 \"c-parse.y\"\n+#line 1061 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 187:\n-#line 1078 \"c-parse.y\"\n+#line 1079 \"c-parse.y\"\n { really_start_incremental_init (NULL_TREE);\n \t\t  /* Note that the call to clear_momentary\n \t\t     is in process_init_element.  */\n \t\t  push_momentary (); ;\n     break;}\n case 188:\n-#line 1083 \"c-parse.y\"\n+#line 1084 \"c-parse.y\"\n { yyval.ttype = pop_init_level (0);\n \t\t  if (yyval.ttype == error_mark_node\n \t\t      && ! (yychar == STRING || yychar == CONSTANT))\n@@ -2584,48 +2585,48 @@ case 188:\n \t\t    pop_momentary_nofree (); ;\n     break;}\n case 189:\n-#line 1091 \"c-parse.y\"\n+#line 1092 \"c-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 190:\n-#line 1097 \"c-parse.y\"\n+#line 1098 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids empty initializer braces\"); ;\n     break;}\n case 194:\n-#line 1111 \"c-parse.y\"\n+#line 1112 \"c-parse.y\"\n { process_init_element (yyvsp[0].ttype); ;\n     break;}\n case 195:\n-#line 1113 \"c-parse.y\"\n+#line 1114 \"c-parse.y\"\n { push_init_level (0); ;\n     break;}\n case 196:\n-#line 1115 \"c-parse.y\"\n+#line 1116 \"c-parse.y\"\n { process_init_element (pop_init_level (0)); ;\n     break;}\n case 198:\n-#line 1121 \"c-parse.y\"\n+#line 1122 \"c-parse.y\"\n { set_init_index (yyvsp[-4].ttype, yyvsp[-2].ttype); ;\n     break;}\n case 200:\n-#line 1124 \"c-parse.y\"\n+#line 1125 \"c-parse.y\"\n { set_init_index (yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 202:\n-#line 1127 \"c-parse.y\"\n+#line 1128 \"c-parse.y\"\n { set_init_index (yyvsp[-1].ttype, NULL_TREE); ;\n     break;}\n case 204:\n-#line 1130 \"c-parse.y\"\n+#line 1131 \"c-parse.y\"\n { set_init_label (yyvsp[-1].ttype); ;\n     break;}\n case 206:\n-#line 1133 \"c-parse.y\"\n+#line 1134 \"c-parse.y\"\n { set_init_label (yyvsp[-1].ttype); ;\n     break;}\n case 208:\n-#line 1139 \"c-parse.y\"\n+#line 1140 \"c-parse.y\"\n { push_c_function_context ();\n \t\t  if (! start_function (current_declspecs, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 1))\n@@ -2636,16 +2637,16 @@ case 208:\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 209:\n-#line 1148 \"c-parse.y\"\n+#line 1149 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 210:\n-#line 1156 \"c-parse.y\"\n+#line 1157 \"c-parse.y\"\n { finish_function (1);\n \t\t  pop_c_function_context (); ;\n     break;}\n case 211:\n-#line 1162 \"c-parse.y\"\n+#line 1163 \"c-parse.y\"\n { push_c_function_context ();\n \t\t  if (! start_function (current_declspecs, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 1))\n@@ -2656,328 +2657,328 @@ case 211:\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 212:\n-#line 1171 \"c-parse.y\"\n+#line 1172 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 213:\n-#line 1179 \"c-parse.y\"\n+#line 1180 \"c-parse.y\"\n { finish_function (1);\n \t\t  pop_c_function_context (); ;\n     break;}\n case 216:\n-#line 1195 \"c-parse.y\"\n+#line 1196 \"c-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 217:\n-#line 1197 \"c-parse.y\"\n+#line 1198 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 218:\n-#line 1202 \"c-parse.y\"\n+#line 1203 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 219:\n-#line 1204 \"c-parse.y\"\n+#line 1205 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 220:\n-#line 1206 \"c-parse.y\"\n+#line 1207 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 221:\n-#line 1213 \"c-parse.y\"\n+#line 1214 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 223:\n-#line 1224 \"c-parse.y\"\n+#line 1225 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 224:\n-#line 1229 \"c-parse.y\"\n+#line 1230 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 225:\n-#line 1231 \"c-parse.y\"\n+#line 1232 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 226:\n-#line 1233 \"c-parse.y\"\n+#line 1234 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 227:\n-#line 1240 \"c-parse.y\"\n+#line 1241 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 229:\n-#line 1249 \"c-parse.y\"\n+#line 1250 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 230:\n-#line 1254 \"c-parse.y\"\n+#line 1255 \"c-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 231:\n-#line 1256 \"c-parse.y\"\n+#line 1257 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 232:\n-#line 1258 \"c-parse.y\"\n+#line 1259 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 233:\n-#line 1260 \"c-parse.y\"\n+#line 1261 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 234:\n-#line 1267 \"c-parse.y\"\n+#line 1268 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 236:\n-#line 1273 \"c-parse.y\"\n+#line 1274 \"c-parse.y\"\n { yyval.ttype = start_struct (RECORD_TYPE, yyvsp[-1].ttype);\n \t\t  /* Start scope of tag before parsing components.  */\n \t\t;\n     break;}\n case 237:\n-#line 1277 \"c-parse.y\"\n+#line 1278 \"c-parse.y\"\n { yyval.ttype = finish_struct (yyvsp[-3].ttype, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 238:\n-#line 1279 \"c-parse.y\"\n+#line 1280 \"c-parse.y\"\n { yyval.ttype = finish_struct (start_struct (RECORD_TYPE, NULL_TREE),\n \t\t\t\t      yyvsp[-2].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 239:\n-#line 1283 \"c-parse.y\"\n+#line 1284 \"c-parse.y\"\n { yyval.ttype = xref_tag (RECORD_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 240:\n-#line 1285 \"c-parse.y\"\n+#line 1286 \"c-parse.y\"\n { yyval.ttype = start_struct (UNION_TYPE, yyvsp[-1].ttype); ;\n     break;}\n case 241:\n-#line 1287 \"c-parse.y\"\n+#line 1288 \"c-parse.y\"\n { yyval.ttype = finish_struct (yyvsp[-3].ttype, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 242:\n-#line 1289 \"c-parse.y\"\n+#line 1290 \"c-parse.y\"\n { yyval.ttype = finish_struct (start_struct (UNION_TYPE, NULL_TREE),\n \t\t\t\t      yyvsp[-2].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 243:\n-#line 1293 \"c-parse.y\"\n+#line 1294 \"c-parse.y\"\n { yyval.ttype = xref_tag (UNION_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 244:\n-#line 1295 \"c-parse.y\"\n+#line 1296 \"c-parse.y\"\n { yyvsp[0].itype = suspend_momentary ();\n \t\t  yyval.ttype = start_enum (yyvsp[-1].ttype); ;\n     break;}\n case 245:\n-#line 1298 \"c-parse.y\"\n+#line 1299 \"c-parse.y\"\n { yyval.ttype = finish_enum (yyvsp[-4].ttype, nreverse (yyvsp[-3].ttype), yyvsp[0].ttype);\n \t\t  resume_momentary (yyvsp[-5].itype); ;\n     break;}\n case 246:\n-#line 1301 \"c-parse.y\"\n+#line 1302 \"c-parse.y\"\n { yyvsp[0].itype = suspend_momentary ();\n \t\t  yyval.ttype = start_enum (NULL_TREE); ;\n     break;}\n case 247:\n-#line 1304 \"c-parse.y\"\n+#line 1305 \"c-parse.y\"\n { yyval.ttype = finish_enum (yyvsp[-4].ttype, nreverse (yyvsp[-3].ttype), yyvsp[0].ttype);\n \t\t  resume_momentary (yyvsp[-5].itype); ;\n     break;}\n case 248:\n-#line 1307 \"c-parse.y\"\n+#line 1308 \"c-parse.y\"\n { yyval.ttype = xref_tag (ENUMERAL_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 252:\n-#line 1318 \"c-parse.y\"\n+#line 1319 \"c-parse.y\"\n { if (pedantic) pedwarn (\"comma at end of enumerator list\"); ;\n     break;}\n case 253:\n-#line 1323 \"c-parse.y\"\n+#line 1324 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 254:\n-#line 1325 \"c-parse.y\"\n+#line 1326 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  pedwarn (\"no semicolon at end of struct or union\"); ;\n     break;}\n case 255:\n-#line 1330 \"c-parse.y\"\n+#line 1331 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 256:\n-#line 1332 \"c-parse.y\"\n+#line 1333 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 257:\n-#line 1334 \"c-parse.y\"\n+#line 1335 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"extra semicolon in struct or union specified\"); ;\n     break;}\n case 258:\n-#line 1349 \"c-parse.y\"\n+#line 1350 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-1].itype); ;\n     break;}\n case 259:\n-#line 1355 \"c-parse.y\"\n+#line 1356 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids member declarations with no members\");\n \t\t  shadow_tag(yyvsp[0].ttype);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 260:\n-#line 1360 \"c-parse.y\"\n+#line 1361 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-1].itype); ;\n     break;}\n case 261:\n-#line 1366 \"c-parse.y\"\n+#line 1367 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids member declarations with no members\");\n \t\t  shadow_tag(yyvsp[0].ttype);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 262:\n-#line 1371 \"c-parse.y\"\n+#line 1372 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 263:\n-#line 1373 \"c-parse.y\"\n+#line 1374 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  pedantic = yyvsp[-1].itype; ;\n     break;}\n case 265:\n-#line 1380 \"c-parse.y\"\n+#line 1381 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 266:\n-#line 1385 \"c-parse.y\"\n+#line 1386 \"c-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-3].filename, yyvsp[-2].lineno, yyvsp[-1].ttype, current_declspecs, NULL_TREE);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 267:\n-#line 1389 \"c-parse.y\"\n+#line 1390 \"c-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-5].filename, yyvsp[-4].lineno, yyvsp[-3].ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 268:\n-#line 1392 \"c-parse.y\"\n+#line 1393 \"c-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-4].filename, yyvsp[-3].lineno, NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 270:\n-#line 1404 \"c-parse.y\"\n+#line 1405 \"c-parse.y\"\n { if (yyvsp[-2].ttype == error_mark_node)\n \t\t    yyval.ttype = yyvsp[-2].ttype;\n \t\t  else\n \t\t    yyval.ttype = chainon (yyvsp[0].ttype, yyvsp[-2].ttype); ;\n     break;}\n case 271:\n-#line 1409 \"c-parse.y\"\n+#line 1410 \"c-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 272:\n-#line 1415 \"c-parse.y\"\n+#line 1416 \"c-parse.y\"\n { yyval.ttype = build_enumerator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 273:\n-#line 1417 \"c-parse.y\"\n+#line 1418 \"c-parse.y\"\n { yyval.ttype = build_enumerator (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 274:\n-#line 1422 \"c-parse.y\"\n+#line 1423 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 275:\n-#line 1424 \"c-parse.y\"\n+#line 1425 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 276:\n-#line 1429 \"c-parse.y\"\n+#line 1430 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 278:\n-#line 1435 \"c-parse.y\"\n+#line 1436 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 279:\n-#line 1437 \"c-parse.y\"\n+#line 1438 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 280:\n-#line 1442 \"c-parse.y\"\n+#line 1443 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 281:\n-#line 1444 \"c-parse.y\"\n+#line 1445 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 282:\n-#line 1449 \"c-parse.y\"\n+#line 1450 \"c-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 283:\n-#line 1452 \"c-parse.y\"\n+#line 1453 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 284:\n-#line 1454 \"c-parse.y\"\n+#line 1455 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 285:\n-#line 1456 \"c-parse.y\"\n+#line 1457 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 286:\n-#line 1458 \"c-parse.y\"\n+#line 1459 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 287:\n-#line 1460 \"c-parse.y\"\n+#line 1461 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 288:\n-#line 1462 \"c-parse.y\"\n+#line 1463 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 289:\n-#line 1464 \"c-parse.y\"\n+#line 1465 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 290:\n-#line 1466 \"c-parse.y\"\n+#line 1467 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, NULL_TREE, NULL_TREE); ;\n     break;}\n case 291:\n-#line 1477 \"c-parse.y\"\n+#line 1478 \"c-parse.y\"\n {\n \t\t  if (pedantic && yyvsp[0].ends_in_label)\n \t\t    pedwarn (\"ANSI C forbids label at end of compound statement\");\n \t\t;\n     break;}\n case 293:\n-#line 1486 \"c-parse.y\"\n+#line 1487 \"c-parse.y\"\n { yyval.ends_in_label = yyvsp[0].ends_in_label; ;\n     break;}\n case 294:\n-#line 1488 \"c-parse.y\"\n+#line 1489 \"c-parse.y\"\n { yyval.ends_in_label = 0; ;\n     break;}\n case 298:\n-#line 1500 \"c-parse.y\"\n+#line 1501 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  pushlevel (0);\n \t\t  clear_last_expr ();\n@@ -2986,12 +2987,12 @@ case 298:\n \t\t;\n     break;}\n case 300:\n-#line 1513 \"c-parse.y\"\n+#line 1514 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids label declarations\"); ;\n     break;}\n case 303:\n-#line 1524 \"c-parse.y\"\n+#line 1525 \"c-parse.y\"\n { tree link;\n \t\t  for (link = yyvsp[-1].ttype; link; link = TREE_CHAIN (link))\n \t\t    {\n@@ -3002,19 +3003,19 @@ case 303:\n \t\t;\n     break;}\n case 304:\n-#line 1538 \"c-parse.y\"\n+#line 1539 \"c-parse.y\"\n {;\n     break;}\n case 306:\n-#line 1542 \"c-parse.y\"\n+#line 1543 \"c-parse.y\"\n { compstmt_count++; ;\n     break;}\n case 307:\n-#line 1545 \"c-parse.y\"\n+#line 1546 \"c-parse.y\"\n { yyval.ttype = convert (void_type_node, integer_zero_node); ;\n     break;}\n case 308:\n-#line 1547 \"c-parse.y\"\n+#line 1548 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), 1, 0);\n \t\t  yyval.ttype = poplevel (1, 1, 0);\n@@ -3024,7 +3025,7 @@ case 308:\n \t\t    pop_momentary (); ;\n     break;}\n case 309:\n-#line 1555 \"c-parse.y\"\n+#line 1556 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  yyval.ttype = poplevel (kept_level_p (), 0, 0);\n@@ -3034,7 +3035,7 @@ case 309:\n \t\t    pop_momentary (); ;\n     break;}\n case 310:\n-#line 1563 \"c-parse.y\"\n+#line 1564 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  yyval.ttype = poplevel (kept_level_p (), 0, 0);\n@@ -3044,7 +3045,7 @@ case 310:\n \t\t    pop_momentary (); ;\n     break;}\n case 313:\n-#line 1583 \"c-parse.y\"\n+#line 1584 \"c-parse.y\"\n { emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  c_expand_start_cond (truthvalue_conversion (yyvsp[-1].ttype), 0, \n \t\t\t\t       compstmt_count);\n@@ -3054,7 +3055,7 @@ case 313:\n \t\t  position_after_white_space (); ;\n     break;}\n case 314:\n-#line 1597 \"c-parse.y\"\n+#line 1598 \"c-parse.y\"\n { stmt_count++;\n \t\t  compstmt_count++;\n \t\t  emit_line_note (yyvsp[-2].filename, yyvsp[-1].lineno);\n@@ -3064,43 +3065,43 @@ case 314:\n \t\t  position_after_white_space (); ;\n     break;}\n case 315:\n-#line 1605 \"c-parse.y\"\n+#line 1606 \"c-parse.y\"\n { expand_loop_continue_here (); ;\n     break;}\n case 316:\n-#line 1609 \"c-parse.y\"\n+#line 1610 \"c-parse.y\"\n { yyval.filename = input_filename; ;\n     break;}\n case 317:\n-#line 1613 \"c-parse.y\"\n+#line 1614 \"c-parse.y\"\n { yyval.lineno = lineno; ;\n     break;}\n case 318:\n-#line 1618 \"c-parse.y\"\n+#line 1619 \"c-parse.y\"\n { ;\n     break;}\n case 319:\n-#line 1623 \"c-parse.y\"\n+#line 1624 \"c-parse.y\"\n { ;\n     break;}\n case 320:\n-#line 1628 \"c-parse.y\"\n+#line 1629 \"c-parse.y\"\n { yyval.ends_in_label = yyvsp[0].ends_in_label; ;\n     break;}\n case 321:\n-#line 1633 \"c-parse.y\"\n+#line 1634 \"c-parse.y\"\n { yyval.ends_in_label = 0; ;\n     break;}\n case 322:\n-#line 1635 \"c-parse.y\"\n+#line 1636 \"c-parse.y\"\n { yyval.ends_in_label = 1; ;\n     break;}\n case 323:\n-#line 1641 \"c-parse.y\"\n+#line 1642 \"c-parse.y\"\n { stmt_count++; ;\n     break;}\n case 325:\n-#line 1644 \"c-parse.y\"\n+#line 1645 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n /* It appears that this should not be done--that a non-lvalue array\n@@ -3119,19 +3120,19 @@ case 325:\n \t\t  clear_momentary (); ;\n     break;}\n case 326:\n-#line 1661 \"c-parse.y\"\n+#line 1662 \"c-parse.y\"\n { c_expand_start_else ();\n \t\t  yyvsp[-1].itype = stmt_count;\n \t\t  position_after_white_space (); ;\n     break;}\n case 327:\n-#line 1665 \"c-parse.y\"\n+#line 1666 \"c-parse.y\"\n { c_expand_end_cond ();\n \t\t  if (extra_warnings && stmt_count == yyvsp[-3].itype)\n \t\t    warning (\"empty body in an else-statement\"); ;\n     break;}\n case 328:\n-#line 1669 \"c-parse.y\"\n+#line 1670 \"c-parse.y\"\n { c_expand_end_cond ();\n \t\t  /* This warning is here instead of in simple_if, because we\n \t\t     do not want a warning if an empty if is followed by an\n@@ -3142,11 +3143,11 @@ case 328:\n \t\t\t\t\t\t\"empty body in an if-statement\"); ;\n     break;}\n case 329:\n-#line 1681 \"c-parse.y\"\n+#line 1682 \"c-parse.y\"\n { c_expand_end_cond (); ;\n     break;}\n case 330:\n-#line 1683 \"c-parse.y\"\n+#line 1684 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-2].filename, yyvsp[-1].lineno);\n \t\t  /* The emit_nop used to come before emit_line_note,\n@@ -3158,7 +3159,7 @@ case 330:\n \t\t  emit_nop (); ;\n     break;}\n case 331:\n-#line 1693 \"c-parse.y\"\n+#line 1694 \"c-parse.y\"\n { /* Don't start the loop till we have succeeded\n \t\t     in parsing the end test.  This is to make sure\n \t\t     that we end every loop we start.  */\n@@ -3169,24 +3170,24 @@ case 331:\n \t\t  position_after_white_space (); ;\n     break;}\n case 332:\n-#line 1702 \"c-parse.y\"\n+#line 1703 \"c-parse.y\"\n { expand_end_loop (); ;\n     break;}\n case 333:\n-#line 1705 \"c-parse.y\"\n+#line 1706 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_exit_loop_if_false (NULL_PTR,\n \t\t\t\t\t     truthvalue_conversion (yyvsp[-2].ttype));\n \t\t  expand_end_loop ();\n \t\t  clear_momentary (); ;\n     break;}\n case 334:\n-#line 1712 \"c-parse.y\"\n+#line 1713 \"c-parse.y\"\n { expand_end_loop ();\n \t\t  clear_momentary (); ;\n     break;}\n case 335:\n-#line 1716 \"c-parse.y\"\n+#line 1717 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  /* See comment in `while' alternative, above.  */\n@@ -3199,12 +3200,12 @@ case 335:\n \t\t;\n     break;}\n case 336:\n-#line 1728 \"c-parse.y\"\n+#line 1729 \"c-parse.y\"\n { yyvsp[0].lineno = lineno;\n \t\t  yyval.filename = input_filename; ;\n     break;}\n case 337:\n-#line 1731 \"c-parse.y\"\n+#line 1732 \"c-parse.y\"\n { \n \t\t  /* Start the loop.  Doing this after parsing\n \t\t     all the expressions ensures we will end the loop.  */\n@@ -3222,7 +3223,7 @@ case 337:\n \t\t  position_after_white_space (); ;\n     break;}\n case 338:\n-#line 1747 \"c-parse.y\"\n+#line 1748 \"c-parse.y\"\n { /* Emit the increment expression, with a line number.  */\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-5].lineno);\n \t\t  expand_loop_continue_here ();\n@@ -3235,7 +3236,7 @@ case 338:\n \t\t  expand_end_loop (); ;\n     break;}\n case 339:\n-#line 1758 \"c-parse.y\"\n+#line 1759 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  c_expand_start_case (yyvsp[-1].ttype);\n@@ -3245,41 +3246,41 @@ case 339:\n \t\t  position_after_white_space (); ;\n     break;}\n case 340:\n-#line 1766 \"c-parse.y\"\n+#line 1767 \"c-parse.y\"\n { expand_end_case (yyvsp[-3].ttype);\n \t\t  if (yychar == CONSTANT || yychar == STRING)\n \t\t    pop_momentary_nofree ();\n \t\t  else\n \t\t    pop_momentary (); ;\n     break;}\n case 341:\n-#line 1772 \"c-parse.y\"\n+#line 1773 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  if ( ! expand_exit_something ())\n \t\t    error (\"break statement not within loop or switch\"); ;\n     break;}\n case 342:\n-#line 1777 \"c-parse.y\"\n+#line 1778 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  if (! expand_continue_loop (NULL_PTR))\n \t\t    error (\"continue statement not within a loop\"); ;\n     break;}\n case 343:\n-#line 1782 \"c-parse.y\"\n+#line 1783 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  c_expand_return (NULL_TREE); ;\n     break;}\n case 344:\n-#line 1786 \"c-parse.y\"\n+#line 1787 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-3].lineno);\n \t\t  c_expand_return (yyvsp[-1].ttype); ;\n     break;}\n case 345:\n-#line 1790 \"c-parse.y\"\n+#line 1791 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-7].filename, yyvsp[-6].lineno);\n \t\t  STRIP_NOPS (yyvsp[-2].ttype);\n@@ -3291,31 +3292,31 @@ case 345:\n \t\t    error (\"argument of `asm' is not a constant string\"); ;\n     break;}\n case 346:\n-#line 1801 \"c-parse.y\"\n+#line 1802 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-9].filename, yyvsp[-8].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE, NULL_TREE,\n \t\t\t\t\t yyvsp[-6].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 347:\n-#line 1808 \"c-parse.y\"\n+#line 1809 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-11].filename, yyvsp[-10].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE,\n \t\t\t\t\t yyvsp[-8].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 348:\n-#line 1816 \"c-parse.y\"\n+#line 1817 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-13].filename, yyvsp[-12].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype,\n \t\t\t\t\t yyvsp[-10].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 349:\n-#line 1822 \"c-parse.y\"\n+#line 1823 \"c-parse.y\"\n { tree decl;\n \t\t  stmt_count++;\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-3].lineno);\n@@ -3328,15 +3329,15 @@ case 349:\n \t\t;\n     break;}\n case 350:\n-#line 1833 \"c-parse.y\"\n+#line 1834 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids `goto *expr;'\");\n \t\t  stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  expand_computed_goto (convert (ptr_type_node, yyvsp[-1].ttype)); ;\n     break;}\n case 353:\n-#line 1848 \"c-parse.y\"\n+#line 1849 \"c-parse.y\"\n {\n \t    /* The value returned by this action is  */\n \t    /*      1 if everything is OK */ \n@@ -3359,14 +3360,14 @@ case 353:\n \t  ;\n     break;}\n case 354:\n-#line 1869 \"c-parse.y\"\n+#line 1870 \"c-parse.y\"\n {\n \t    if (yyvsp[-1].itype)\n \t      iterator_for_loop_end (yyvsp[-3].ttype);\n \t  ;\n     break;}\n case 355:\n-#line 1904 \"c-parse.y\"\n+#line 1905 \"c-parse.y\"\n { register tree value = check_case_value (yyvsp[-1].ttype);\n \t\t  register tree label\n \t\t    = build_decl (LABEL_DECL, NULL_TREE, NULL_TREE);\n@@ -3399,7 +3400,7 @@ case 355:\n \t\t  position_after_white_space (); ;\n     break;}\n case 356:\n-#line 1935 \"c-parse.y\"\n+#line 1936 \"c-parse.y\"\n { register tree value1 = check_case_value (yyvsp[-3].ttype);\n \t\t  register tree value2 = check_case_value (yyvsp[-1].ttype);\n \t\t  register tree label\n@@ -3432,7 +3433,7 @@ case 356:\n \t\t  position_after_white_space (); ;\n     break;}\n case 357:\n-#line 1966 \"c-parse.y\"\n+#line 1967 \"c-parse.y\"\n {\n \t\t  tree duplicate;\n \t\t  register tree label\n@@ -3449,7 +3450,7 @@ case 357:\n \t\t  position_after_white_space (); ;\n     break;}\n case 358:\n-#line 1981 \"c-parse.y\"\n+#line 1982 \"c-parse.y\"\n { tree label = define_label (input_filename, lineno, yyvsp[-1].ttype);\n \t\t  stmt_count++;\n \t\t  emit_nop ();\n@@ -3458,52 +3459,52 @@ case 358:\n \t\t  position_after_white_space (); ;\n     break;}\n case 359:\n-#line 1993 \"c-parse.y\"\n+#line 1994 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 360:\n-#line 1996 \"c-parse.y\"\n+#line 1997 \"c-parse.y\"\n { emit_line_note (input_filename, lineno); ;\n     break;}\n case 361:\n-#line 2001 \"c-parse.y\"\n+#line 2002 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 363:\n-#line 2008 \"c-parse.y\"\n+#line 2009 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 366:\n-#line 2015 \"c-parse.y\"\n+#line 2016 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 367:\n-#line 2020 \"c-parse.y\"\n+#line 2021 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 368:\n-#line 2025 \"c-parse.y\"\n+#line 2026 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, combine_strings (yyvsp[0].ttype), NULL_TREE); ;\n     break;}\n case 369:\n-#line 2027 \"c-parse.y\"\n+#line 2028 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, combine_strings (yyvsp[0].ttype), yyvsp[-2].ttype); ;\n     break;}\n case 370:\n-#line 2033 \"c-parse.y\"\n+#line 2034 \"c-parse.y\"\n { pushlevel (0);\n \t\t  clear_parm_order ();\n \t\t  declare_parm_level (0); ;\n     break;}\n case 371:\n-#line 2037 \"c-parse.y\"\n+#line 2038 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  parmlist_tags_warning ();\n \t\t  poplevel (0, 0, 0); ;\n     break;}\n case 373:\n-#line 2045 \"c-parse.y\"\n+#line 2046 \"c-parse.y\"\n { tree parm;\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids forward parameter declarations\");\n@@ -3513,19 +3514,19 @@ case 373:\n \t\t  clear_parm_order (); ;\n     break;}\n case 374:\n-#line 2053 \"c-parse.y\"\n+#line 2054 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 375:\n-#line 2055 \"c-parse.y\"\n+#line 2056 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, NULL_TREE, NULL_TREE); ;\n     break;}\n case 376:\n-#line 2061 \"c-parse.y\"\n+#line 2062 \"c-parse.y\"\n { yyval.ttype = get_parm_info (0); ;\n     break;}\n case 377:\n-#line 2063 \"c-parse.y\"\n+#line 2064 \"c-parse.y\"\n { yyval.ttype = get_parm_info (0);\n \t\t  /* Gcc used to allow this as an extension.  However, it does\n \t\t     not work for all targets, and thus has been disabled.\n@@ -3537,23 +3538,23 @@ case 377:\n \t\t;\n     break;}\n case 378:\n-#line 2073 \"c-parse.y\"\n+#line 2074 \"c-parse.y\"\n { yyval.ttype = get_parm_info (1); ;\n     break;}\n case 379:\n-#line 2075 \"c-parse.y\"\n+#line 2076 \"c-parse.y\"\n { yyval.ttype = get_parm_info (0); ;\n     break;}\n case 380:\n-#line 2080 \"c-parse.y\"\n+#line 2081 \"c-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 381:\n-#line 2082 \"c-parse.y\"\n+#line 2083 \"c-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 382:\n-#line 2089 \"c-parse.y\"\n+#line 2090 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3564,7 +3565,7 @@ case 382:\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 383:\n-#line 2098 \"c-parse.y\"\n+#line 2099 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3575,7 +3576,7 @@ case 383:\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 384:\n-#line 2107 \"c-parse.y\"\n+#line 2108 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3586,7 +3587,7 @@ case 384:\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 385:\n-#line 2116 \"c-parse.y\"\n+#line 2117 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3597,7 +3598,7 @@ case 385:\n \t\t  resume_momentary (yyvsp[-2].itype);  ;\n     break;}\n case 386:\n-#line 2126 \"c-parse.y\"\n+#line 2127 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3608,43 +3609,43 @@ case 386:\n \t\t  resume_momentary (yyvsp[-2].itype);  ;\n     break;}\n case 387:\n-#line 2140 \"c-parse.y\"\n+#line 2141 \"c-parse.y\"\n { pushlevel (0);\n \t\t  clear_parm_order ();\n \t\t  declare_parm_level (1); ;\n     break;}\n case 388:\n-#line 2144 \"c-parse.y\"\n+#line 2145 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  parmlist_tags_warning ();\n \t\t  poplevel (0, 0, 0); ;\n     break;}\n case 390:\n-#line 2152 \"c-parse.y\"\n+#line 2153 \"c-parse.y\"\n { tree t;\n \t\t  for (t = yyvsp[-1].ttype; t; t = TREE_CHAIN (t))\n \t\t    if (TREE_VALUE (t) == NULL_TREE)\n \t\t      error (\"`...' in old-style identifier list\");\n \t\t  yyval.ttype = tree_cons (NULL_TREE, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 391:\n-#line 2162 \"c-parse.y\"\n+#line 2163 \"c-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 392:\n-#line 2164 \"c-parse.y\"\n+#line 2165 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 393:\n-#line 2170 \"c-parse.y\"\n+#line 2171 \"c-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 394:\n-#line 2172 \"c-parse.y\"\n+#line 2173 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 395:\n-#line 2177 \"c-parse.y\"\n+#line 2178 \"c-parse.y\"\n { yyval.itype = pedantic;\n \t\t  pedantic = 0; ;\n     break;}\n@@ -3846,5 +3847,5 @@ case 395:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 2181 \"c-parse.y\"\n+#line 2182 \"c-parse.y\"\n "}]}