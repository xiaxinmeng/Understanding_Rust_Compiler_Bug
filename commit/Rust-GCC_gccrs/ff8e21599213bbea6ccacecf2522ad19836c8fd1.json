{"sha": "ff8e21599213bbea6ccacecf2522ad19836c8fd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY4ZTIxNTk5MjEzYmJlYTZjY2FjZWNmMjUyMmFkMTk4MzZjOGZkMQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2011-03-18T21:16:31Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2011-03-18T21:16:31Z"}, "message": "c-decl.c (grokfield): Don't allow typedefs for structures or unions with no tag by default.\n\n\t* c-decl.c (grokfield): Don't allow typedefs for structures or\n\tunions with no tag by default.\n\t* doc/extend.texi (Unnamed Fields): Update.\n\ntestsuite:\n\t* gcc.dg/c1x-anon-struct-1.c: Don't test use of typedefs.\n\t* gcc.dg/c1x-anon-struct-3.c: New test.\n\t* gcc.dg/anon-struct-11.c: Update.\n\nFrom-SVN: r171170", "tree": {"sha": "080d7b0817fada736ec3b580f8573b09cf4c52d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/080d7b0817fada736ec3b580f8573b09cf4c52d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff8e21599213bbea6ccacecf2522ad19836c8fd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff8e21599213bbea6ccacecf2522ad19836c8fd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff8e21599213bbea6ccacecf2522ad19836c8fd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff8e21599213bbea6ccacecf2522ad19836c8fd1/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16cc44407fe40e3411e206eeec60a14d20769ade", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16cc44407fe40e3411e206eeec60a14d20769ade", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16cc44407fe40e3411e206eeec60a14d20769ade"}], "stats": {"total": 87, "additions": 67, "deletions": 20}, "files": [{"sha": "b6680a99ab55d314bc5abee744748d14a505202e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff8e21599213bbea6ccacecf2522ad19836c8fd1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff8e21599213bbea6ccacecf2522ad19836c8fd1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff8e21599213bbea6ccacecf2522ad19836c8fd1", "patch": "@@ -1,3 +1,9 @@\n+2011-03-18  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* c-decl.c (grokfield): Don't allow typedefs for structures or\n+\tunions with no tag by default.\n+\t* doc/extend.texi (Unnamed Fields): Update.\n+\n 2011-03-18  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (float<SSEMODEI24:mode><X87MODEF:mode>2):"}, {"sha": "8f9c44400482f72e8fac60f1989dece2b3a7363e", "filename": "gcc/c-decl.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff8e21599213bbea6ccacecf2522ad19836c8fd1/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff8e21599213bbea6ccacecf2522ad19836c8fd1/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=ff8e21599213bbea6ccacecf2522ad19836c8fd1", "patch": "@@ -6674,11 +6674,14 @@ grokfield (location_t loc,\n \t\t      || TREE_CODE (type) == UNION_TYPE);\n       bool ok = false;\n \n-      if (type_ok)\n+      if (type_ok\n+\t  && (flag_ms_extensions\n+\t      || flag_plan9_extensions\n+\t      || !declspecs->typedef_p))\n \t{\n \t  if (flag_ms_extensions || flag_plan9_extensions)\n \t    ok = true;\n-\t  else if (TYPE_NAME (TYPE_MAIN_VARIANT (type)) == NULL)\n+\t  else if (TYPE_NAME (type) == NULL)\n \t    ok = true;\n \t  else\n \t    ok = false;"}, {"sha": "c8971012b4e79d603ba934d7dd97fdb65198f5f2", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff8e21599213bbea6ccacecf2522ad19836c8fd1/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff8e21599213bbea6ccacecf2522ad19836c8fd1/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=ff8e21599213bbea6ccacecf2522ad19836c8fd1", "patch": "@@ -13352,12 +13352,11 @@ The compiler gives errors for such constructs.\n @opindex fms-extensions\n Unless @option{-fms-extensions} is used, the unnamed field must be a\n structure or union definition without a tag (for example, @samp{struct\n-@{ int a; @};}), or a @code{typedef} name for such a structure or\n-union.  If @option{-fms-extensions} is used, the field may\n+@{ int a; @};}).  If @option{-fms-extensions} is used, the field may\n also be a definition with a tag such as @samp{struct foo @{ int a;\n @};}, a reference to a previously defined structure or union such as\n @samp{struct foo;}, or a reference to a @code{typedef} name for a\n-previously defined structure or union type with a tag.\n+previously defined structure or union type.\n \n @opindex fplan9-extensions\n The option @option{-fplan9-extensions} enables"}, {"sha": "3cda22b33a251e35733778b60cd4708647b49755", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff8e21599213bbea6ccacecf2522ad19836c8fd1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff8e21599213bbea6ccacecf2522ad19836c8fd1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ff8e21599213bbea6ccacecf2522ad19836c8fd1", "patch": "@@ -1,3 +1,9 @@\n+2011-03-18  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/c1x-anon-struct-1.c: Don't test use of typedefs.\n+\t* gcc.dg/c1x-anon-struct-3.c: New test.\n+\t* gcc.dg/anon-struct-11.c: Update.\n+\n 2011-03-18  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* gcc.dg/vect/slp-multitypes-2.c: Replace dg-do run with"}, {"sha": "c2f85fc24e43bcc5e32781a252045b3a222d3684", "filename": "gcc/testsuite/gcc.dg/anon-struct-11.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff8e21599213bbea6ccacecf2522ad19836c8fd1/gcc%2Ftestsuite%2Fgcc.dg%2Fanon-struct-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff8e21599213bbea6ccacecf2522ad19836c8fd1/gcc%2Ftestsuite%2Fgcc.dg%2Fanon-struct-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanon-struct-11.c?ref=ff8e21599213bbea6ccacecf2522ad19836c8fd1", "patch": "@@ -50,7 +50,7 @@ struct E {\n   struct F { char f; };\t/* { dg-warning \"does not declare anything\" } */\n   char c;\n   union {\n-    D;\n+    D;\t\t\t/* { dg-warning \"does not declare anything\" } */\n   };\n   char e;\n };\n@@ -85,7 +85,7 @@ test2 (void)\n   e.e = 5;\n   f2 (&e);\t\t/* { dg-warning \"incompatible pointer type\" } */\n   f3 (&e);\t\t/* { dg-warning \"incompatible pointer type\" } */\n-  if (e.d != 4)\n+  if (e.d != 4)\t\t/* { dg-error \"no member\" } */\n     abort ();\n   if (e.f != 6)\t\t/* { dg-error \"no member\" } */\n     abort ();"}, {"sha": "6d4b433d733b22351cc5eaf797fd07d3ed23a714", "filename": "gcc/testsuite/gcc.dg/c1x-anon-struct-1.c", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff8e21599213bbea6ccacecf2522ad19836c8fd1/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-anon-struct-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff8e21599213bbea6ccacecf2522ad19836c8fd1/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-anon-struct-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-anon-struct-1.c?ref=ff8e21599213bbea6ccacecf2522ad19836c8fd1", "patch": "@@ -4,20 +4,13 @@\n \n #include <stddef.h>\n \n-typedef struct\n-{\n-  int i;\n-} s0;\n-\n-typedef union\n-{\n-  int i;\n-} u0;\n-\n struct s1\n {\n   int a;\n-  u0;\n+  union\n+  {\n+    int i;\n+  };\n   struct\n   {\n     int b;\n@@ -27,7 +20,10 @@ struct s1\n union u1\n {\n   int b;\n-  s0;\n+  struct\n+  {\n+    int i;\n+  };\n   union\n   {\n     int c;\n@@ -44,7 +40,10 @@ struct s2\n \n struct s3\n {\n-  u0;\n+  union\n+  {\n+    int i;\n+  };\n };\n \n struct s4"}, {"sha": "1841eddd0a18bf5eda1f5ccd0f0e00a2b76db807", "filename": "gcc/testsuite/gcc.dg/c1x-anon-struct-3.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff8e21599213bbea6ccacecf2522ad19836c8fd1/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-anon-struct-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff8e21599213bbea6ccacecf2522ad19836c8fd1/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-anon-struct-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc1x-anon-struct-3.c?ref=ff8e21599213bbea6ccacecf2522ad19836c8fd1", "patch": "@@ -0,0 +1,34 @@\n+/* Test for anonymous structures and unions in C1X.  Test for invalid\n+   cases: typedefs disallowed by N1549.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=c1x -pedantic-errors\" } */\n+\n+typedef struct\n+{\n+  int i;\n+} s0;\n+\n+typedef union\n+{\n+  int i;\n+} u0;\n+\n+struct s1\n+{\n+  int a;\n+  u0; /* { dg-error \"declaration does not declare anything\" } */\n+  struct\n+  {\n+    int b;\n+  };\n+};\n+\n+union u1\n+{\n+  int b;\n+  s0; /* { dg-error \"declaration does not declare anything\" } */\n+  union\n+  {\n+    int c;\n+  };\n+};"}]}