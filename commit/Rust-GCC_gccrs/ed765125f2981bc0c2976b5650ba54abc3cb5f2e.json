{"sha": "ed765125f2981bc0c2976b5650ba54abc3cb5f2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ3NjUxMjVmMjk4MWJjMGMyOTc2YjU2NTBiYTU0YWJjM2NiNWYyZQ==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2007-02-15T15:07:59Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2007-02-15T15:07:59Z"}, "message": "caller-save.c (save_call_clobbered_regs): Do not process sibcalls.\n\n2007-02-15  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* caller-save.c (save_call_clobbered_regs): Do not process sibcalls.\n\nFrom-SVN: r121998", "tree": {"sha": "025135acaafe07fe73718d7570e8e8e0cf774264", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/025135acaafe07fe73718d7570e8e8e0cf774264"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed765125f2981bc0c2976b5650ba54abc3cb5f2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed765125f2981bc0c2976b5650ba54abc3cb5f2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed765125f2981bc0c2976b5650ba54abc3cb5f2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed765125f2981bc0c2976b5650ba54abc3cb5f2e/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fc01261a60ff3e7643ff663950020505a6d659d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc01261a60ff3e7643ff663950020505a6d659d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc01261a60ff3e7643ff663950020505a6d659d0"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "ba840404f195ae679bac63331f0bc2696f396f40", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed765125f2981bc0c2976b5650ba54abc3cb5f2e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed765125f2981bc0c2976b5650ba54abc3cb5f2e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed765125f2981bc0c2976b5650ba54abc3cb5f2e", "patch": "@@ -1,3 +1,7 @@\n+2007-02-15  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* caller-save.c (save_call_clobbered_regs): Do not process sibcalls.\n+\t\n 2007-02-15  Nick Clifton  <nickc@redhat.com>\n \n \t* varasm.c (default_asm_output_anchor): Prepend * to . symbol in"}, {"sha": "4acb912248d0e9a590030c28ee79eb0672c9c2f7", "filename": "gcc/caller-save.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed765125f2981bc0c2976b5650ba54abc3cb5f2e/gcc%2Fcaller-save.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed765125f2981bc0c2976b5650ba54abc3cb5f2e/gcc%2Fcaller-save.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcaller-save.c?ref=ed765125f2981bc0c2976b5650ba54abc3cb5f2e", "patch": "@@ -407,7 +407,9 @@ save_call_clobbered_regs (void)\n \t\t  regno += insert_restore (chain, 1, regno, MOVE_MAX_WORDS, save_mode);\n \t    }\n \n-\t  if (code == CALL_INSN && ! find_reg_note (insn, REG_NORETURN, NULL))\n+\t  if (code == CALL_INSN\n+\t      && ! SIBLING_CALL_P (insn)\n+\t      && ! find_reg_note (insn, REG_NORETURN, NULL))\n \t    {\n \t      unsigned regno;\n \t      HARD_REG_SET hard_regs_to_save;\n@@ -450,11 +452,6 @@ save_call_clobbered_regs (void)\n \t\t during the call, but the subreg that is set isn't.  */\n \t      CLEAR_HARD_REG_SET (this_insn_sets);\n \t      note_stores (PATTERN (insn), mark_set_regs, &this_insn_sets);\n-\t      /* Sibcalls are considered to set the return value,\n-\t\t compare flow.c:propagate_one_insn.  */\n-\t      if (SIBLING_CALL_P (insn) && current_function_return_rtx)\n-\t\tmark_set_regs (current_function_return_rtx, NULL_RTX,\n-\t\t\t       &this_insn_sets);\n \n \t      /* Compute which hard regs must be saved before this call.  */\n \t      AND_COMPL_HARD_REG_SET (hard_regs_to_save, call_fixed_reg_set);"}]}