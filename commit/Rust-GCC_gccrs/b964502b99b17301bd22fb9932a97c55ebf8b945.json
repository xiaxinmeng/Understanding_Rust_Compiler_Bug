{"sha": "b964502b99b17301bd22fb9932a97c55ebf8b945", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk2NDUwMmI5OWIxNzMwMWJkMjJmYjk5MzJhOTdjNTVlYmY4Yjk0NQ==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2007-02-09T20:21:20Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2007-02-09T20:21:20Z"}, "message": "- reindent ChangeLog entries\n\nFrom-SVN: r121771", "tree": {"sha": "a0b075d975cfbdbfa37d8b2183f0ecae5190b809", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0b075d975cfbdbfa37d8b2183f0ecae5190b809"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b964502b99b17301bd22fb9932a97c55ebf8b945", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b964502b99b17301bd22fb9932a97c55ebf8b945", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b964502b99b17301bd22fb9932a97c55ebf8b945", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b964502b99b17301bd22fb9932a97c55ebf8b945/comments", "author": null, "committer": null, "parents": [{"sha": "3b865a2d676e41624f2f443d82b16389b485f7ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b865a2d676e41624f2f443d82b16389b485f7ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b865a2d676e41624f2f443d82b16389b485f7ad"}], "stats": {"total": 72, "additions": 36, "deletions": 36}, "files": [{"sha": "7f38c88ada7984652bf6cfaa5d13d834f4ccdc1d", "filename": "libjava/ChangeLog", "status": "modified", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b964502b99b17301bd22fb9932a97c55ebf8b945/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b964502b99b17301bd22fb9932a97c55ebf8b945/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=b964502b99b17301bd22fb9932a97c55ebf8b945", "patch": "@@ -26,34 +26,34 @@\n \n 2007-02-08  Kyle Galloway  <kgallowa@redhat.com>\n \n-    * classpath/gnu/classpath/jdwp/processor/\n-    StackFrameCommandSet.java (executeGetValues): Pass jlong instead\n-    of ByteBuffer.\n-    (executeSetValues): Ditto.\n-    (executeThisObject): Ditto.\n-    * classpath/gnu/classpath/jdwp/processor/\n-    StackFrameCommandSet.class: Rebuilt.\n-    * classpath/lib/gnu/classpath/jdwp/VMVirtualMachine.class:\n-    Rebuilt.\n-    * classpath/lib/gnu/classpath/jdwp/VMFrame.class: Rebuilt.\n-    * classpath/lib/gnu/classpath/jdwp/exception/\n-    InvalidFrameException.java: New file.\n-    * gnu/classpath/jdwp/VMFrame.java: Added field for thread of\n-    frame.\n-    (Constructor): New method.\n-    * gnu/classpath/jdwp/VMFrame.h: Regenerated.\n-    * gnu/classpath/jdwp/VMVirtualMachine.java\n-    (getFrame): Changed ByteBuffer to jlong.\n-    * gnu/classpath/jdwp/natVMVirtualMachine.cc\n-    (getFrame): Implement.\n-    * gnu/classpath/jdwp/VMVirtualMachine.h: Regenerated.\n+\t* classpath/gnu/classpath/jdwp/processor/\n+\tStackFrameCommandSet.java (executeGetValues): Pass jlong instead\n+\tof ByteBuffer.\n+\t(executeSetValues): Ditto.\n+\t(executeThisObject): Ditto.\n+\t* classpath/gnu/classpath/jdwp/processor/\n+\tStackFrameCommandSet.class: Rebuilt.\n+\t* classpath/lib/gnu/classpath/jdwp/VMVirtualMachine.class:\n+\tRebuilt.\n+\t* classpath/lib/gnu/classpath/jdwp/VMFrame.class: Rebuilt.\n+\t* classpath/lib/gnu/classpath/jdwp/exception/\n+\tInvalidFrameException.java: New file.\n+\t* gnu/classpath/jdwp/VMFrame.java: Added field for thread of\n+\tframe.\n+\t(Constructor): New method.\n+\t* gnu/classpath/jdwp/VMFrame.h: Regenerated.\n+\t* gnu/classpath/jdwp/VMVirtualMachine.java\n+\t(getFrame): Changed ByteBuffer to jlong.\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n+\t(getFrame): Implement.\n+\t* gnu/classpath/jdwp/VMVirtualMachine.h: Regenerated.\n \n 2007-02-08  Kyle Galloway  <kgallowa@redhat.com>\n \n-    * include/java-interp.h (_Jv_InterpFrame): obj_ptr field added\n-    to hold \"this\" pointer for frame.\n-    (_Jv_InterpFrame::get_this_ptr): New method.\n-    * interpret-run.cc: Copy the \"this\" pointer into obj_ptr.\n+\t* include/java-interp.h (_Jv_InterpFrame): obj_ptr field added\n+\tto hold \"this\" pointer for frame.\n+\t(_Jv_InterpFrame::get_this_ptr): New method.\n+\t* interpret-run.cc: Copy the \"this\" pointer into obj_ptr.\n \n 2007-02-07  Keith Seitz  <keiths@redhat.com>\n \n@@ -63,10 +63,10 @@\n \n 2007-02-07  Kyle Galloway  <kgallowa@redhat.com>\n \n-    * jvmti.cc (CHECK_FOR_NATIVE_METHOD): New macro.\n-    (_Jv_JVMTI_GetMaxLocals): New method.\n-    * include/java-interp.h\n-    (_Jv_InterpMethod::get_max_locals): New method.\n+\t* jvmti.cc (CHECK_FOR_NATIVE_METHOD): New macro.\n+\t(_Jv_JVMTI_GetMaxLocals): New method.\n+\t* include/java-interp.h\n+\t(_Jv_InterpMethod::get_max_locals): New method.\n \n 2007-02-01 Marco Trudel <mtrudel@gmx.ch>\n \n@@ -362,10 +362,10 @@\n \n 2007-01-26  Andrew Haley  <aph@redhat.com>\n \n-        * java/lang/natClass.cc (initializeClass): Re-throw\n-        SecurityExceptions.\n-        * java/lang/natVMClassLoader.cc (loadClass): checkPackageAccess.\n-        * java/lang/ClassLoader.java: (loadClass): Likewise.\n+\t* java/lang/natClass.cc (initializeClass): Re-throw\n+\tSecurityExceptions.\n+\t* java/lang/natVMClassLoader.cc (loadClass): checkPackageAccess.\n+\t* java/lang/ClassLoader.java: (loadClass): Likewise.\n \n 2007-01-26  Tom Tromey  <tromey@redhat.com>\n \n@@ -406,9 +406,9 @@\n \n 2007-01-24  Kyle Galloway  <kgallowa@redhat.com>\n \n-    * libjava/testsuite/libjava.jvmti/jvmti-interp.exp: New file.\n-    * libjava/testsuite/libjava.jvmti/interp: New folder.\n-    * libjava/testsuite/lib/libjava.exp (exec_gij): New Method.\n+\t* libjava/testsuite/libjava.jvmti/jvmti-interp.exp: New file.\n+\t* libjava/testsuite/libjava.jvmti/interp: New folder.\n+\t* libjava/testsuite/lib/libjava.exp (exec_gij): New Method.\n \n 2007-01-24  Keith Seitz  <keiths@redhat.com>\n "}]}