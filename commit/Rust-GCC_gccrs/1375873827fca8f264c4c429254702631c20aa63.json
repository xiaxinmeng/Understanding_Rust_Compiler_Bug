{"sha": "1375873827fca8f264c4c429254702631c20aa63", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM3NTg3MzgyN2ZjYThmMjY0YzRjNDI5MjU0NzAyNjMxYzIwYWE2Mw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2013-10-29T12:22:35Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2013-10-29T12:22:35Z"}, "message": "arm.c (cortexa7_extra_costs): New table.\n\n2013-10-29  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n\n\t* config/arm/arm.c (cortexa7_extra_costs): New table.\n\t(arm_cortex_a7_tune): New.\n\t* config/arm/arm-cores.def: Use cortex_a7 tuning for cortex-a7.\n\nFrom-SVN: r204157", "tree": {"sha": "522f91fbf31a633a62408e2a4637f7d0f519bbfd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/522f91fbf31a633a62408e2a4637f7d0f519bbfd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1375873827fca8f264c4c429254702631c20aa63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1375873827fca8f264c4c429254702631c20aa63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1375873827fca8f264c4c429254702631c20aa63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1375873827fca8f264c4c429254702631c20aa63/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd216fbfb422989a570804707d451ba6ddf15d75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd216fbfb422989a570804707d451ba6ddf15d75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd216fbfb422989a570804707d451ba6ddf15d75"}], "stats": {"total": 125, "additions": 124, "deletions": 1}, "files": [{"sha": "5855f116b1e23d337efdefe4351b63c9ee97f25b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1375873827fca8f264c4c429254702631c20aa63/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1375873827fca8f264c4c429254702631c20aa63/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1375873827fca8f264c4c429254702631c20aa63", "patch": "@@ -1,3 +1,9 @@\n+2013-10-29  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.c (cortexa7_extra_costs): New table.\n+\t(arm_cortex_a7_tune): New.\n+\t* config/arm/arm-cores.def: Use cortex_a7 tuning for cortex-a7.\n+\n 2013-10-29  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* expr.c (expand_expr_real_1) <MEM_EXPR>: Eliminate small redundancy."}, {"sha": "79e2e87b72b02f075014ec8d8d700b481f1a7ebf", "filename": "gcc/config/arm/arm-cores.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1375873827fca8f264c4c429254702631c20aa63/gcc%2Fconfig%2Farm%2Farm-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1375873827fca8f264c4c429254702631c20aa63/gcc%2Fconfig%2Farm%2Farm-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cores.def?ref=1375873827fca8f264c4c429254702631c20aa63", "patch": "@@ -125,7 +125,7 @@ ARM_CORE(\"arm1156t2-s\",\t  arm1156t2s,\t6T2,\t\t\t\t FL_LDSCHED, v6t2)\n ARM_CORE(\"arm1156t2f-s\",  arm1156t2fs,  6T2,\t\t\t\t FL_LDSCHED | FL_VFPV2, v6t2)\n ARM_CORE(\"generic-armv7-a\", genericv7a,\t7A,\t\t\t\t FL_LDSCHED, cortex)\n ARM_CORE(\"cortex-a5\",\t  cortexa5,\t7A,\t\t\t\t FL_LDSCHED, cortex_a5)\n-ARM_CORE(\"cortex-a7\",\t  cortexa7,\t7A,\t\t\t\t FL_LDSCHED | FL_THUMB_DIV | FL_ARM_DIV, cortex)\n+ARM_CORE(\"cortex-a7\",\t  cortexa7,\t7A,\t\t\t\t FL_LDSCHED | FL_THUMB_DIV | FL_ARM_DIV, cortex_a7)\n ARM_CORE(\"cortex-a8\",\t  cortexa8,\t7A,\t\t\t\t FL_LDSCHED, cortex)\n ARM_CORE(\"cortex-a9\",\t  cortexa9,\t7A,\t\t\t\t FL_LDSCHED, cortex_a9)\n ARM_CORE(\"cortex-a15\",\t  cortexa15,\t7A,\t\t\t\t FL_LDSCHED | FL_THUMB_DIV | FL_ARM_DIV, cortex_a15)"}, {"sha": "212a4bcc7dcff7d4aa26c8a8d4a8bec57beab738", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 117, "deletions": 0, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1375873827fca8f264c4c429254702631c20aa63/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1375873827fca8f264c4c429254702631c20aa63/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=1375873827fca8f264c4c429254702631c20aa63", "patch": "@@ -1152,6 +1152,107 @@ const struct cpu_cost_table cortexa9_extra_costs =\n };\n \n \n+const struct cpu_cost_table cortexa7_extra_costs =\n+{\n+  /* ALU */\n+  {\n+    0,\t\t\t/* Arith.  */\n+    0,\t\t\t/* Logical.  */\n+    COSTS_N_INSNS (1),\t/* Shift.  */\n+    COSTS_N_INSNS (1),\t/* Shift_reg.  */\n+    COSTS_N_INSNS (1),\t/* Arith_shift.  */\n+    COSTS_N_INSNS (1),\t/* Arith_shift_reg.  */\n+    COSTS_N_INSNS (1),\t/* Log_shift.  */\n+    COSTS_N_INSNS (1),\t/* Log_shift_reg.  */\n+    COSTS_N_INSNS (1),\t/* Extend.  */\n+    COSTS_N_INSNS (1),\t/* Extend_arith.  */\n+    COSTS_N_INSNS (1),\t/* Bfi.  */\n+    COSTS_N_INSNS (1),\t/* Bfx.  */\n+    COSTS_N_INSNS (1),\t/* Clz.  */\n+    0,\t\t\t/* non_exec.  */\n+    true\t\t/* non_exec_costs_exec.  */\n+  },\n+\n+  {\n+    /* MULT SImode */\n+    {\n+      0,\t\t\t/* Simple.  */\n+      COSTS_N_INSNS (1),\t/* Flag_setting.  */\n+      COSTS_N_INSNS (1),\t/* Extend.  */\n+      COSTS_N_INSNS (1),\t/* Add.  */\n+      COSTS_N_INSNS (1),\t/* Extend_add.  */\n+      COSTS_N_INSNS (7)\t\t/* Idiv.  */\n+    },\n+    /* MULT DImode */\n+    {\n+      0,\t\t\t/* Simple (N/A).  */\n+      0,\t\t\t/* Flag_setting (N/A).  */\n+      COSTS_N_INSNS (1),\t/* Extend.  */\n+      0,\t\t\t/* Add.  */\n+      COSTS_N_INSNS (2),\t/* Extend_add.  */\n+      0\t\t\t\t/* Idiv (N/A).  */\n+    }\n+  },\n+  /* LD/ST */\n+  {\n+    COSTS_N_INSNS (1),\t/* Load.  */\n+    COSTS_N_INSNS (1),\t/* Load_sign_extend.  */\n+    COSTS_N_INSNS (3),\t/* Ldrd.  */\n+    COSTS_N_INSNS (1),\t/* Ldm_1st.  */\n+    1,\t\t\t/* Ldm_regs_per_insn_1st.  */\n+    2,\t\t\t/* Ldm_regs_per_insn_subsequent.  */\n+    COSTS_N_INSNS (2),\t/* Loadf.  */\n+    COSTS_N_INSNS (2),\t/* Loadd.  */\n+    COSTS_N_INSNS (1),\t/* Load_unaligned.  */\n+    COSTS_N_INSNS (1),\t/* Store.  */\n+    COSTS_N_INSNS (3),\t/* Strd.  */\n+    COSTS_N_INSNS (1),\t/* Stm_1st.  */\n+    1,\t\t\t/* Stm_regs_per_insn_1st.  */\n+    2,\t\t\t/* Stm_regs_per_insn_subsequent.  */\n+    COSTS_N_INSNS (2),\t/* Storef.  */\n+    COSTS_N_INSNS (2),\t/* Stored.  */\n+    COSTS_N_INSNS (1)\t/* Store_unaligned.  */\n+  },\n+  {\n+    /* FP SFmode */\n+    {\n+      COSTS_N_INSNS (15),\t/* Div.  */\n+      COSTS_N_INSNS (3),\t/* Mult.  */\n+      COSTS_N_INSNS (7),\t/* Mult_addsub. */\n+      COSTS_N_INSNS (7),\t/* Fma.  */\n+      COSTS_N_INSNS (3),\t/* Addsub.  */\n+      COSTS_N_INSNS (3),\t/* Fpconst.  */\n+      COSTS_N_INSNS (3),\t/* Neg.  */\n+      COSTS_N_INSNS (3),\t/* Compare.  */\n+      COSTS_N_INSNS (3),\t/* Widen.  */\n+      COSTS_N_INSNS (3),\t/* Narrow.  */\n+      COSTS_N_INSNS (3),\t/* Toint.  */\n+      COSTS_N_INSNS (3),\t/* Fromint.  */\n+      COSTS_N_INSNS (3)\t\t/* Roundint.  */\n+    },\n+    /* FP DFmode */\n+    {\n+      COSTS_N_INSNS (30),\t/* Div.  */\n+      COSTS_N_INSNS (6),\t/* Mult.  */\n+      COSTS_N_INSNS (10),\t/* Mult_addsub.  */\n+      COSTS_N_INSNS (7),\t/* Fma.  */\n+      COSTS_N_INSNS (3),\t/* Addsub.  */\n+      COSTS_N_INSNS (3),\t/* Fpconst.  */\n+      COSTS_N_INSNS (3),\t/* Neg.  */\n+      COSTS_N_INSNS (3),\t/* Compare.  */\n+      COSTS_N_INSNS (3),\t/* Widen.  */\n+      COSTS_N_INSNS (3),\t/* Narrow.  */\n+      COSTS_N_INSNS (3),\t/* Toint.  */\n+      COSTS_N_INSNS (3),\t/* Fromint.  */\n+      COSTS_N_INSNS (3)\t\t/* Roundint.  */\n+    }\n+  },\n+  /* Vector */\n+  {\n+    COSTS_N_INSNS (1)\t/* Alu.  */\n+  }\n+};\n+\n const struct cpu_cost_table cortexa15_extra_costs =\n {\n   /* ALU */\n@@ -1368,6 +1469,22 @@ const struct tune_params arm_cortex_tune =\n   false                                         /* Prefer Neon for 64-bits bitops.  */\n };\n \n+const struct tune_params arm_cortex_a7_tune =\n+{\n+  arm_9e_rtx_costs,\n+  &cortexa7_extra_costs,\n+  NULL,\n+  1,\t\t\t\t\t\t/* Constant limit.  */\n+  5,\t\t\t\t\t\t/* Max cond insns.  */\n+  ARM_PREFETCH_NOT_BENEFICIAL,\n+  false,\t\t\t\t\t/* Prefer constant pool.  */\n+  arm_default_branch_cost,\n+  false,\t\t\t\t\t/* Prefer LDRD/STRD.  */\n+  {true, true},\t\t\t\t\t/* Prefer non short circuit.  */\n+  &arm_default_vec_cost,\t\t\t/* Vectorizer costs.  */\n+  false\t\t\t\t\t\t/* Prefer Neon for 64-bits bitops.  */\n+};\n+\n const struct tune_params arm_cortex_a15_tune =\n {\n   arm_9e_rtx_costs,"}]}