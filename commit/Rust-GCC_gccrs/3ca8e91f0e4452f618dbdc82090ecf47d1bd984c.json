{"sha": "3ca8e91f0e4452f618dbdc82090ecf47d1bd984c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NhOGU5MWYwZTQ0NTJmNjE4ZGJkYzgyMDkwZWNmNDdkMWJkOTg0Yw==", "commit": {"author": {"name": "Igor Tsimbalist", "email": "igor.v.tsimbalist@intel.com", "date": "2018-02-06T15:25:31Z"}, "committer": {"name": "Igor Tsimbalist", "email": "itsimbal@gcc.gnu.org", "date": "2018-02-06T15:25:31Z"}, "message": "Fix checking -mibt and -mshstk options for control flow protection\n\n\tPR target/84145\n\t* config/i386/i386.c: Reimplement the check of possible options\n\t-mibt/-mshstk conbination. Change error messages.\n\t* doc/invoke.texi: Fix a typo: remove extra '='.\n\t* c-c++-common/fcf-protection-1.c: Change a compared message.\n\t* c-c++-common/fcf-protection-2.c: Likewise.\n\t* c-c++-common/fcf-protection-3.c: Likewise.\n\t* c-c++-common/fcf-protection-5.c: Likewise.\n\t* c-c++-common/fcf-protection-6.c: New test.\n\t* c-c++-common/fcf-protection-7.c: Likewise.\n\nFrom-SVN: r257414", "tree": {"sha": "76c690f27dae12fbd32060ace81fb460a139592b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76c690f27dae12fbd32060ace81fb460a139592b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ca8e91f0e4452f618dbdc82090ecf47d1bd984c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ca8e91f0e4452f618dbdc82090ecf47d1bd984c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ca8e91f0e4452f618dbdc82090ecf47d1bd984c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ca8e91f0e4452f618dbdc82090ecf47d1bd984c/comments", "author": {"login": "itsimbal", "id": 29258612, "node_id": "MDQ6VXNlcjI5MjU4NjEy", "avatar_url": "https://avatars.githubusercontent.com/u/29258612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itsimbal", "html_url": "https://github.com/itsimbal", "followers_url": "https://api.github.com/users/itsimbal/followers", "following_url": "https://api.github.com/users/itsimbal/following{/other_user}", "gists_url": "https://api.github.com/users/itsimbal/gists{/gist_id}", "starred_url": "https://api.github.com/users/itsimbal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itsimbal/subscriptions", "organizations_url": "https://api.github.com/users/itsimbal/orgs", "repos_url": "https://api.github.com/users/itsimbal/repos", "events_url": "https://api.github.com/users/itsimbal/events{/privacy}", "received_events_url": "https://api.github.com/users/itsimbal/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c88893a0da8fd01f20b4e254f706f054a72fc435", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c88893a0da8fd01f20b4e254f706f054a72fc435", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c88893a0da8fd01f20b4e254f706f054a72fc435"}], "stats": {"total": 80, "additions": 59, "deletions": 21}, "files": [{"sha": "56d891734f8b3fd3c005bb2ea7109a406d5fd8fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ca8e91f0e4452f618dbdc82090ecf47d1bd984c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ca8e91f0e4452f618dbdc82090ecf47d1bd984c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ca8e91f0e4452f618dbdc82090ecf47d1bd984c", "patch": "@@ -1,3 +1,10 @@\n+2018-02-06  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\tPR target/84145\n+\t* config/i386/i386.c: Reimplement the check of possible options\n+\t-mibt/-mshstk conbination. Change error messages.\n+\t* doc/invoke.texi: Fix a typo: remove extra '='.\n+\n 2018-02-06  Marek Polacek  <polacek@redhat.com>\n \n \tPR tree-optimization/84228"}, {"sha": "6c612c7798739a3d14a3cebc943aad5472b5833b", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 28, "deletions": 15, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ca8e91f0e4452f618dbdc82090ecf47d1bd984c/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ca8e91f0e4452f618dbdc82090ecf47d1bd984c/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=3ca8e91f0e4452f618dbdc82090ecf47d1bd984c", "patch": "@@ -4915,30 +4915,43 @@ ix86_option_override_internal (bool main_args_p,\n   /* Do not support control flow instrumentation if CET is not enabled.  */\n   if (opts->x_flag_cf_protection != CF_NONE)\n     {\n-      if (!(TARGET_IBT_P (opts->x_ix86_isa_flags2)\n-\t    || TARGET_SHSTK_P (opts->x_ix86_isa_flags)))\n+      switch (flag_cf_protection)\n \t{\n-\t  if (flag_cf_protection == CF_FULL)\n+\tcase CF_NONE:\n+\t  break;\n+\tcase CF_BRANCH:\n+\t  if (! TARGET_IBT_P (opts->x_ix86_isa_flags2))\n \t    {\n-\t      error (\"%<-fcf-protection=full%> requires CET support \"\n-\t\t     \"on this target. Use -mcet or one of -mibt, \"\n-\t\t     \"-mshstk options to enable CET\");\n+\t      error (\"%<-fcf-protection=branch%> requires Intel CET \"\n+\t\t     \"support. Use -mcet or -mibt option to enable CET\");\n+\t      flag_cf_protection = CF_NONE;\n+\t      return false;\n \t    }\n-\t  else if (flag_cf_protection == CF_BRANCH)\n+\t  break;\n+\tcase CF_RETURN:\n+\t  if (! TARGET_SHSTK_P (opts->x_ix86_isa_flags))\n \t    {\n-\t      error (\"%<-fcf-protection=branch%> requires CET support \"\n-\t\t     \"on this target. Use -mcet or one of -mibt, \"\n-\t\t     \"-mshstk options to enable CET\");\n+\t      error (\"%<-fcf-protection=return%> requires Intel CET \"\n+\t\t     \"support. Use -mcet or -mshstk option to enable CET\");\n+\t      flag_cf_protection = CF_NONE;\n+\t      return false;\n \t    }\n-\t  else if (flag_cf_protection == CF_RETURN)\n+\t  break;\n+\tcase CF_FULL:\n+\t  if (   ! TARGET_IBT_P (opts->x_ix86_isa_flags2)\n+\t\t || ! TARGET_SHSTK_P (opts->x_ix86_isa_flags))\n \t    {\n-\t      error (\"%<-fcf-protection=return%> requires CET support \"\n-\t\t     \"on this target. Use -mcet or one of -mibt, \"\n+\t      error (\"%<-fcf-protection=full%> requires Intel CET \"\n+\t\t     \"support. Use -mcet or both of -mibt and \"\n \t\t     \"-mshstk options to enable CET\");\n+\t      flag_cf_protection = CF_NONE;\n+\t      return false;\n \t    }\n-\t  flag_cf_protection = CF_NONE;\n-\t  return false;\n+\t  break;\n+\tdefault:\n+\t  gcc_unreachable ();\n \t}\n+\n       opts->x_flag_cf_protection =\n \t(cf_protection_level) (opts->x_flag_cf_protection | CF_SET);\n     }"}, {"sha": "befebed54bcd60c81e441e696f7152abfd8056f3", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ca8e91f0e4452f618dbdc82090ecf47d1bd984c/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ca8e91f0e4452f618dbdc82090ecf47d1bd984c/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=3ca8e91f0e4452f618dbdc82090ecf47d1bd984c", "patch": "@@ -463,7 +463,7 @@ Objective-C and Objective-C++ Dialects}.\n -fchkp-check-read  -fchkp-check-write  -fchkp-store-bounds @gol\n -fchkp-instrument-calls  -fchkp-instrument-marked-only @gol\n -fchkp-use-wrappers  -fchkp-flexible-struct-trailing-arrays@gol\n--fcf-protection==@r{[}full@r{|}branch@r{|}return@r{|}none@r{]} @gol\n+-fcf-protection=@r{[}full@r{|}branch@r{|}return@r{|}none@r{]} @gol\n -fstack-protector  -fstack-protector-all  -fstack-protector-strong @gol\n -fstack-protector-explicit  -fstack-check @gol\n -fstack-limit-register=@var{reg}  -fstack-limit-symbol=@var{sym} @gol\n@@ -11631,7 +11631,7 @@ is used to link a program, the GCC driver automatically links\n against @file{libmpxwrappers}.  See also @option{-static-libmpxwrappers}.\n Enabled by default.\n \n-@item -fcf-protection==@r{[}full@r{|}branch@r{|}return@r{|}none@r{]}\n+@item -fcf-protection=@r{[}full@r{|}branch@r{|}return@r{|}none@r{]}\n @opindex fcf-protection\n Enable code instrumentation of control-flow transfers to increase\n program security by checking that target addresses of control-flow"}, {"sha": "2e279b4dea0e4ad9f4f66caa9eff5ce3cb8f5c91", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ca8e91f0e4452f618dbdc82090ecf47d1bd984c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ca8e91f0e4452f618dbdc82090ecf47d1bd984c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3ca8e91f0e4452f618dbdc82090ecf47d1bd984c", "patch": "@@ -1,3 +1,13 @@\n+2018-02-06  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\tPR target/84145\n+\t* c-c++-common/fcf-protection-1.c: Change a compared message.\n+\t* c-c++-common/fcf-protection-2.c: Likewise.\n+\t* c-c++-common/fcf-protection-3.c: Likewise.\n+\t* c-c++-common/fcf-protection-5.c: Likewise.\n+\t* c-c++-common/fcf-protection-6.c: New test.\n+\t* c-c++-common/fcf-protection-7.c: Likewise.\n+\n 2018-02-06  Marek Polacek  <polacek@redhat.com>\n \n \tPR tree-optimization/84228"}, {"sha": "8e71f47dde037847e09f93eed592d0a986d1687b", "filename": "gcc/testsuite/c-c++-common/fcf-protection-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ca8e91f0e4452f618dbdc82090ecf47d1bd984c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffcf-protection-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ca8e91f0e4452f618dbdc82090ecf47d1bd984c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffcf-protection-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffcf-protection-1.c?ref=3ca8e91f0e4452f618dbdc82090ecf47d1bd984c", "patch": "@@ -1,4 +1,4 @@\n /* { dg-do compile } */\n /* { dg-options \"-fcf-protection=full\" } */\n-/* { dg-error \"'-fcf-protection=full' requires CET support on this target\" \"\" { target { \"i?86-*-* x86_64-*-*\" } } 0 } */\n+/* { dg-error \"'-fcf-protection=full' requires Intel CET.*-mcet.*-mibt and -mshstk option\" \"\" { target { \"i?86-*-* x86_64-*-*\" } } 0 } */\n /* { dg-error \"'-fcf-protection=full' is not supported for this target\" \"\" { target { ! \"i?86-*-* x86_64-*-*\" } } 0 } */"}, {"sha": "d7d6db0e95df529b07242642a6df232d32c9d6c6", "filename": "gcc/testsuite/c-c++-common/fcf-protection-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ca8e91f0e4452f618dbdc82090ecf47d1bd984c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffcf-protection-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ca8e91f0e4452f618dbdc82090ecf47d1bd984c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffcf-protection-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffcf-protection-2.c?ref=3ca8e91f0e4452f618dbdc82090ecf47d1bd984c", "patch": "@@ -1,4 +1,4 @@\n /* { dg-do compile } */\n /* { dg-options \"-fcf-protection=branch\" } */\n-/* { dg-error \"'-fcf-protection=branch' requires CET support on this target\" \"\" { target { \"i?86-*-* x86_64-*-*\" } } 0 } */\n+/* { dg-error \"'-fcf-protection=branch' requires Intel CET.*-mcet or -mibt option\" \"\" { target { \"i?86-*-* x86_64-*-*\" } } 0 } */\n /* { dg-error \"'-fcf-protection=branch' is not supported for this target\" \"\" { target { ! \"i?86-*-* x86_64-*-*\" } } 0 } */"}, {"sha": "5b903c5fa518c2532889418331c17f33976eca1c", "filename": "gcc/testsuite/c-c++-common/fcf-protection-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ca8e91f0e4452f618dbdc82090ecf47d1bd984c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffcf-protection-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ca8e91f0e4452f618dbdc82090ecf47d1bd984c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffcf-protection-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffcf-protection-3.c?ref=3ca8e91f0e4452f618dbdc82090ecf47d1bd984c", "patch": "@@ -1,4 +1,4 @@\n /* { dg-do compile } */\n /* { dg-options \"-fcf-protection=return\" } */\n-/* { dg-error \"'-fcf-protection=return' requires CET support on this target\" \"\" { target { \"i?86-*-* x86_64-*-*\" } } 0 } */\n+/* { dg-error \"'-fcf-protection=return' requires Intel CET.*-mcet or -mshstk option\" \"\" { target { \"i?86-*-* x86_64-*-*\" } } 0 } */\n /* { dg-error \"'-fcf-protection=return' is not supported for this target\" \"\" { target { ! \"i?86-*-* x86_64-*-*\" } } 0 } */"}, {"sha": "d7a67801e2effda8a774a10104ca873bb073bacb", "filename": "gcc/testsuite/c-c++-common/fcf-protection-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ca8e91f0e4452f618dbdc82090ecf47d1bd984c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffcf-protection-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ca8e91f0e4452f618dbdc82090ecf47d1bd984c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffcf-protection-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffcf-protection-5.c?ref=3ca8e91f0e4452f618dbdc82090ecf47d1bd984c", "patch": "@@ -1,4 +1,4 @@\n /* { dg-do compile } */\n /* { dg-options \"-fcf-protection\" } */\n-/* { dg-error \"'-fcf-protection=full' requires CET support on this target\" \"\" { target { \"i?86-*-* x86_64-*-*\" } } 0 } */\n+/* { dg-error \"'-fcf-protection=full' requires Intel CET.*-mcet.*-mibt and -mshstk option\" \"\" { target { \"i?86-*-* x86_64-*-*\" } } 0 } */\n /* { dg-error \"'-fcf-protection=full' is not supported for this target\" \"\" { target { ! \"i?86-*-* x86_64-*-*\" } } 0 } */"}, {"sha": "084983e4498eee8059c52f86e4722c19007958a1", "filename": "gcc/testsuite/c-c++-common/fcf-protection-6.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ca8e91f0e4452f618dbdc82090ecf47d1bd984c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffcf-protection-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ca8e91f0e4452f618dbdc82090ecf47d1bd984c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffcf-protection-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffcf-protection-6.c?ref=3ca8e91f0e4452f618dbdc82090ecf47d1bd984c", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fcf-protection=branch -mshstk\" } */\n+/* { dg-error \"'-fcf-protection=branch' requires Intel CET.*-mcet or -mibt option\" \"\" { target { \"i?86-*-* x86_64-*-*\" } } 0 } */\n+/* { dg-error \"'-fcf-protection=branch' is not supported for this target\" \"\" { target { ! \"i?86-*-* x86_64-*-*\" } } 0 } */"}, {"sha": "9baedf5991a3db278be114a9c07d87044f03866a", "filename": "gcc/testsuite/c-c++-common/fcf-protection-7.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ca8e91f0e4452f618dbdc82090ecf47d1bd984c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffcf-protection-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ca8e91f0e4452f618dbdc82090ecf47d1bd984c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffcf-protection-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffcf-protection-7.c?ref=3ca8e91f0e4452f618dbdc82090ecf47d1bd984c", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fcf-protection=return -mibt\" } */\n+/* { dg-error \"'-fcf-protection=return' requires Intel CET.*-mcet or -mshstk option\" \"\" { target { \"i?86-*-* x86_64-*-*\" } } 0 } */\n+/* { dg-error \"'-fcf-protection=return' is not supported for this target\" \"\" { target { ! \"i?86-*-* x86_64-*-*\" } } 0 } */"}]}