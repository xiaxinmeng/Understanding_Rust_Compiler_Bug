{"sha": "18ae1560d19ed5e9e87e3dc4712ee917755374b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThhZTE1NjBkMTllZDVlOWU4N2UzZGM0NzEyZWU5MTc3NTUzNzRiMg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2012-03-19T20:35:59Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-03-19T20:35:59Z"}, "message": "builtins.c (expand_builtin_cexpi): Use copy_addr_to_reg instead of copy_to_mode_reg (Pmode, ...).\n\n\t* builtins.c (expand_builtin_cexpi): Use copy_addr_to_reg instead of\n\tcopy_to_mode_reg (Pmode, ...).\n\t(expand_builtin_frame_address): Ditto.\n\t* expr.c (emit_block_move_via_libcall): Ditto.\n\t(set_storage_via_libcall): Ditto.\n\n\t* config/i386/i386.c (ix86_expand_movmem): Ditto.\n\t(ix86_expand_setmem): Ditto.\n\t(ix86_trampoline_init): DItto.\n\t* config/i386/i386.md (cmpstrnsi): Ditto.\n\t(allocate_stack): Ditto.\n\nFrom-SVN: r185541", "tree": {"sha": "197d82787b3392897d2b981c6e80f5eb87ac5a7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/197d82787b3392897d2b981c6e80f5eb87ac5a7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18ae1560d19ed5e9e87e3dc4712ee917755374b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18ae1560d19ed5e9e87e3dc4712ee917755374b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18ae1560d19ed5e9e87e3dc4712ee917755374b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18ae1560d19ed5e9e87e3dc4712ee917755374b2/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3e4907f4fb4d84d9b8426483f213c9b1ad797abd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e4907f4fb4d84d9b8426483f213c9b1ad797abd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e4907f4fb4d84d9b8426483f213c9b1ad797abd"}], "stats": {"total": 40, "additions": 27, "deletions": 13}, "files": [{"sha": "67a1119d35b469f2c3b8b4e39bf2adab4d0a2a87", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ae1560d19ed5e9e87e3dc4712ee917755374b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ae1560d19ed5e9e87e3dc4712ee917755374b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18ae1560d19ed5e9e87e3dc4712ee917755374b2", "patch": "@@ -1,3 +1,17 @@\n+2012-03-19  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* builtins.c (expand_builtin_cexpi): Use copy_addr_to_reg instead of\n+\tcopy_to_mode_reg (Pmode, ...).\n+\t(expand_builtin_frame_address): Ditto.\n+\t* expr.c (emit_block_move_via_libcall): Ditto.\n+\t(set_storage_via_libcall): Ditto.\n+\n+\t* config/i386/i386.c (ix86_expand_movmem): Ditto.\n+\t(ix86_expand_setmem): Ditto.\n+\t(ix86_trampoline_init): DItto.\n+\t* config/i386/i386.md (cmpstrnsi): Ditto.\n+\t(allocate_stack): Ditto.\n+\n 2012-03-19  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* config/sh/sh.opt (madjust-unroll): Mark as ignored/obsolete."}, {"sha": "7afe61df505bbce993b29a8339f6daf4f6e95142", "filename": "gcc/builtins.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ae1560d19ed5e9e87e3dc4712ee917755374b2/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ae1560d19ed5e9e87e3dc4712ee917755374b2/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=18ae1560d19ed5e9e87e3dc4712ee917755374b2", "patch": "@@ -2613,8 +2613,8 @@ expand_builtin_cexpi (tree exp, rtx target)\n \n       op1 = assign_temp (TREE_TYPE (arg), 0, 1, 1);\n       op2 = assign_temp (TREE_TYPE (arg), 0, 1, 1);\n-      op1a = copy_to_mode_reg (Pmode, XEXP (op1, 0));\n-      op2a = copy_to_mode_reg (Pmode, XEXP (op2, 0));\n+      op1a = copy_addr_to_reg (XEXP (op1, 0));\n+      op2a = copy_addr_to_reg (XEXP (op2, 0));\n       top1 = make_tree (build_pointer_type (TREE_TYPE (arg)), op1a);\n       top2 = make_tree (build_pointer_type (TREE_TYPE (arg)), op2a);\n \n@@ -4580,7 +4580,7 @@ expand_builtin_frame_address (tree fndecl, tree exp)\n \n       if (!REG_P (tem)\n \t  && ! CONSTANT_P (tem))\n-\ttem = copy_to_mode_reg (Pmode, tem);\n+\ttem = copy_addr_to_reg (tem);\n       return tem;\n     }\n }"}, {"sha": "cf673fd25d4391fdd9f23f6d0beae4382bf2188f", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ae1560d19ed5e9e87e3dc4712ee917755374b2/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ae1560d19ed5e9e87e3dc4712ee917755374b2/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=18ae1560d19ed5e9e87e3dc4712ee917755374b2", "patch": "@@ -22101,8 +22101,8 @@ ix86_expand_movmem (rtx dst, rtx src, rtx count_exp, rtx align_exp,\n   gcc_assert (alg != no_stringop);\n   if (!count)\n     count_exp = copy_to_mode_reg (GET_MODE (count_exp), count_exp);\n-  destreg = copy_to_mode_reg (Pmode, XEXP (dst, 0));\n-  srcreg = copy_to_mode_reg (Pmode, XEXP (src, 0));\n+  destreg = copy_addr_to_reg (XEXP (dst, 0));\n+  srcreg = copy_addr_to_reg (XEXP (src, 0));\n   switch (alg)\n     {\n     case libcall:\n@@ -22490,7 +22490,7 @@ ix86_expand_setmem (rtx dst, rtx count_exp, rtx val_exp, rtx align_exp,\n   gcc_assert (alg != no_stringop);\n   if (!count)\n     count_exp = copy_to_mode_reg (counter_mode (count_exp), count_exp);\n-  destreg = copy_to_mode_reg (Pmode, XEXP (dst, 0));\n+  destreg = copy_addr_to_reg (XEXP (dst, 0));\n   switch (alg)\n     {\n     case libcall:\n@@ -24368,7 +24368,7 @@ ix86_trampoline_init (rtx m_tramp, tree fndecl, rtx chain_value)\n       if (ptr_mode == SImode\n \t  || x86_64_zext_immediate_operand (fnaddr, VOIDmode))\n \t{\n-\t  fnaddr = copy_to_mode_reg (Pmode, fnaddr);\n+\t  fnaddr = copy_addr_to_reg (fnaddr);\n \n \t  mem = adjust_address (m_tramp, HImode, offset);\n \t  emit_move_insn (mem, gen_int_mode (0xbb41, HImode));"}, {"sha": "0db0222af793e022f81954c63498b645aa813d08", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ae1560d19ed5e9e87e3dc4712ee917755374b2/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ae1560d19ed5e9e87e3dc4712ee917755374b2/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=18ae1560d19ed5e9e87e3dc4712ee917755374b2", "patch": "@@ -16073,8 +16073,8 @@\n   if (!REG_P (out))\n     out = gen_reg_rtx (SImode);\n \n-  addr1 = copy_to_mode_reg (Pmode, XEXP (operands[1], 0));\n-  addr2 = copy_to_mode_reg (Pmode, XEXP (operands[2], 0));\n+  addr1 = copy_addr_to_reg (XEXP (operands[1], 0));\n+  addr2 = copy_addr_to_reg (XEXP (operands[2], 0));\n   if (addr1 != XEXP (operands[1], 0))\n     operands[1] = replace_equiv_address_nv (operands[1], addr1);\n   if (addr2 != XEXP (operands[2], 0))\n@@ -16737,7 +16737,7 @@\n     }\n   else\n     {\n-      x = copy_to_mode_reg (Pmode, operands[1]);\n+      x = copy_addr_to_reg (operands[1]);\n       if (TARGET_64BIT)\n         emit_insn (gen_allocate_stack_worker_probe_di (x, x));\n       else"}, {"sha": "fcd5b36f94a8aae7ba6c7f5b85231b7f97da0382", "filename": "gcc/expr.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ae1560d19ed5e9e87e3dc4712ee917755374b2/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ae1560d19ed5e9e87e3dc4712ee917755374b2/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=18ae1560d19ed5e9e87e3dc4712ee917755374b2", "patch": "@@ -1343,8 +1343,8 @@ emit_block_move_via_libcall (rtx dst, rtx src, rtx size, bool tailcall)\n      pseudos.  We can then place those new pseudos into a VAR_DECL and\n      use them later.  */\n \n-  dst_addr = copy_to_mode_reg (Pmode, XEXP (dst, 0));\n-  src_addr = copy_to_mode_reg (Pmode, XEXP (src, 0));\n+  dst_addr = copy_addr_to_reg (XEXP (dst, 0));\n+  src_addr = copy_addr_to_reg (XEXP (src, 0));\n \n   dst_addr = convert_memory_address (ptr_mode, dst_addr);\n   src_addr = convert_memory_address (ptr_mode, src_addr);\n@@ -2719,7 +2719,7 @@ set_storage_via_libcall (rtx object, rtx size, rtx val, bool tailcall)\n   /* Emit code to copy OBJECT and SIZE into new pseudos.  We can then\n      place those into new pseudos into a VAR_DECL and use them later.  */\n \n-  object = copy_to_mode_reg (Pmode, XEXP (object, 0));\n+  object = copy_addr_to_reg (XEXP (object, 0));\n \n   size_mode = TYPE_MODE (sizetype);\n   size = convert_to_mode (size_mode, size, 1);"}]}