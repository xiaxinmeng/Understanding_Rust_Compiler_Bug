{"sha": "bdbca69e0720fa9062fe71782235141f629ae006", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRiY2E2OWUwNzIwZmE5MDYyZmU3MTc4MjIzNTE0MWY2MjlhZTAwNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-02-08T22:04:03Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-02-09T01:51:51Z"}, "message": "c++: generic lambda, fn* conv, empty class [PR98326]\n\nHere, in the thunk returned from the captureless lambda conversion to\npointer-to-function, we try to pass through invisible reference parameters\nby reference, without doing a copy.  The empty class copy optimization was\nmessing that up.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/98326\n\tPR c++/20408\n\t* cp-gimplify.c (simple_empty_class_p): Don't touch an invisiref\n\tparm.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/98326\n\t* g++.dg/cpp1y/lambda-generic-empty1.C: New test.", "tree": {"sha": "b5725094dbdc7b69cac93772cd65a2cfae07ea83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5725094dbdc7b69cac93772cd65a2cfae07ea83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bdbca69e0720fa9062fe71782235141f629ae006", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdbca69e0720fa9062fe71782235141f629ae006", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdbca69e0720fa9062fe71782235141f629ae006", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdbca69e0720fa9062fe71782235141f629ae006/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8dd2b3e96590ceccead63d28fc91c956a5f1a73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8dd2b3e96590ceccead63d28fc91c956a5f1a73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8dd2b3e96590ceccead63d28fc91c956a5f1a73"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "1c5e15b957fd9907f871780e11aca4a305b0d6e7", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdbca69e0720fa9062fe71782235141f629ae006/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdbca69e0720fa9062fe71782235141f629ae006/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=bdbca69e0720fa9062fe71782235141f629ae006", "patch": "@@ -324,6 +324,18 @@ simple_empty_class_p (tree type, tree op, tree_code code)\n       && TYPE_HAS_TRIVIAL_DESTRUCTOR (type))\n     /* The TARGET_EXPR is itself a simple copy, look through it.  */\n     return simple_empty_class_p (type, TARGET_EXPR_INITIAL (op), code);\n+\n+  if (TREE_CODE (op) == PARM_DECL\n+      && TREE_ADDRESSABLE (TREE_TYPE (op)))\n+    {\n+      tree fn = DECL_CONTEXT (op);\n+      if (DECL_THUNK_P (fn)\n+\t  || lambda_static_thunk_p (fn))\n+\t/* In a thunk, we pass through invisible reference parms, so this isn't\n+\t   actually a copy.  */\n+\treturn false;\n+    }\n+\n   return\n     (TREE_CODE (op) == EMPTY_CLASS_EXPR\n      || code == MODIFY_EXPR"}, {"sha": "ffb0cf149ce4b59b74f8035fcabf7a34135f52e1", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-generic-empty1.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdbca69e0720fa9062fe71782235141f629ae006/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-empty1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdbca69e0720fa9062fe71782235141f629ae006/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-empty1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-empty1.C?ref=bdbca69e0720fa9062fe71782235141f629ae006", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/98326\n+// { dg-do compile { target c++14 } }\n+\n+struct A {\n+    A() = default;\n+    A(const A&) {}\n+};\n+\n+void (*fptr)(A) = [](auto){};"}]}