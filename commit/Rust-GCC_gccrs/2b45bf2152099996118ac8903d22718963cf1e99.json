{"sha": "2b45bf2152099996118ac8903d22718963cf1e99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI0NWJmMjE1MjA5OTk5NjExOGFjODkwM2QyMjcxODk2M2NmMWU5OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-05-13T12:02:50Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-05-13T12:02:50Z"}, "message": "re PR fortran/44036 (I can't declare an external function in an OMP shared statement.)\n\n\tPR fortran/44036\n\t* openmp.c (resolve_omp_clauses): Allow procedure pointers in clause\n\tvariable lists.\n\t* trans-openmp.c (gfc_omp_privatize_by_reference): Don't privatize\n\tby reference dummy procedures or non-dummy procedure pointers.\n\t(gfc_omp_predetermined_sharing): Return\n\tOMP_CLAUSE_DEFAULT_FIRSTPRIVATE for dummy procedures.\n\n\t* gfortran.dg/gomp/pr44036-1.f90: New test.\n\t* gfortran.dg/gomp/pr44036-2.f90: New test.\n\t* gfortran.dg/gomp/pr44036-3.f90: New test.\n\nFrom-SVN: r159361", "tree": {"sha": "968dcddb045fa5a13f020becad9a9ef77f7d4942", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/968dcddb045fa5a13f020becad9a9ef77f7d4942"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b45bf2152099996118ac8903d22718963cf1e99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b45bf2152099996118ac8903d22718963cf1e99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b45bf2152099996118ac8903d22718963cf1e99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b45bf2152099996118ac8903d22718963cf1e99/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "78c7cabba9ba2bd3b371fc6e4aa07896869d2b03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78c7cabba9ba2bd3b371fc6e4aa07896869d2b03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78c7cabba9ba2bd3b371fc6e4aa07896869d2b03"}], "stats": {"total": 86, "additions": 84, "deletions": 2}, "files": [{"sha": "2eb730b212f717b01bc5aec21f238e8038c7a1f7", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b45bf2152099996118ac8903d22718963cf1e99/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b45bf2152099996118ac8903d22718963cf1e99/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2b45bf2152099996118ac8903d22718963cf1e99", "patch": "@@ -1,3 +1,13 @@\n+2010-05-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/44036\n+\t* openmp.c (resolve_omp_clauses): Allow procedure pointers in clause\n+\tvariable lists.\n+\t* trans-openmp.c (gfc_omp_privatize_by_reference): Don't privatize\n+\tby reference dummy procedures or non-dummy procedure pointers.\n+\t(gfc_omp_predetermined_sharing): Return\n+\tOMP_CLAUSE_DEFAULT_FIRSTPRIVATE for dummy procedures.\n+\n 2010-05-11  Daniel Franke  <franke.daniel@gmail.com>\n \n         PR fortran/43711"}, {"sha": "4e965217cc77a31715fa061b1df4b45f7294f674", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b45bf2152099996118ac8903d22718963cf1e99/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b45bf2152099996118ac8903d22718963cf1e99/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=2b45bf2152099996118ac8903d22718963cf1e99", "patch": "@@ -837,6 +837,8 @@ resolve_omp_clauses (gfc_code *code)\n \t\tif (el)\n \t\t  continue;\n \t      }\n+\t    if (n->sym->attr.proc_pointer)\n+\t      continue;\n \t  }\n \tgfc_error (\"Object '%s' is not a variable at %L\", n->sym->name,\n \t\t   &code->loc);"}, {"sha": "f2e550acdc74d5d47b7404fb21673c770ae3f13e", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b45bf2152099996118ac8903d22718963cf1e99/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b45bf2152099996118ac8903d22718963cf1e99/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=2b45bf2152099996118ac8903d22718963cf1e99", "patch": "@@ -1,5 +1,6 @@\n /* OpenMP directive translation -- generate GCC trees from gfc_code.\n-   Copyright (C) 2005, 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010\n+   Free Software Foundation, Inc.\n    Contributed by Jakub Jelinek <jakub@redhat.com>\n \n This file is part of GCC.\n@@ -57,7 +58,8 @@ gfc_omp_privatize_by_reference (const_tree decl)\n       if (GFC_POINTER_TYPE_P (type))\n \treturn false;\n \n-      if (!DECL_ARTIFICIAL (decl))\n+      if (!DECL_ARTIFICIAL (decl)\n+\t  && TREE_CODE (TREE_TYPE (type)) != FUNCTION_TYPE)\n \treturn true;\n \n       /* Some arrays are expanded as DECL_ARTIFICIAL pointers\n@@ -96,6 +98,15 @@ gfc_omp_predetermined_sharing (tree decl)\n \t == NULL)\n     return OMP_CLAUSE_DEFAULT_SHARED;\n \n+  /* Dummy procedures aren't considered variables by OpenMP, thus are\n+     disallowed in OpenMP clauses.  They are represented as PARM_DECLs\n+     in the middle-end, so return OMP_CLAUSE_DEFAULT_FIRSTPRIVATE here\n+     to avoid complaining about their uses with default(none).  */\n+  if (TREE_CODE (decl) == PARM_DECL\n+      && TREE_CODE (TREE_TYPE (decl)) == POINTER_TYPE\n+      && TREE_CODE (TREE_TYPE (TREE_TYPE (decl))) == FUNCTION_TYPE)\n+    return OMP_CLAUSE_DEFAULT_FIRSTPRIVATE;\n+\n   /* COMMON and EQUIVALENCE decls are shared.  They\n      are only referenced through DECL_VALUE_EXPR of the variables\n      contained in them.  If those are privatized, they will not be"}, {"sha": "32f980101f64850234fc39dd221e5596e4da4f5e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b45bf2152099996118ac8903d22718963cf1e99/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b45bf2152099996118ac8903d22718963cf1e99/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2b45bf2152099996118ac8903d22718963cf1e99", "patch": "@@ -1,5 +1,10 @@\n 2010-05-13  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR fortran/44036\n+\t* gfortran.dg/gomp/pr44036-1.f90: New test.\n+\t* gfortran.dg/gomp/pr44036-2.f90: New test.\n+\t* gfortran.dg/gomp/pr44036-3.f90: New test.\n+\n \tPR debug/43983\n \t* gcc.dg/guality/sra-1.c: New test.\n "}, {"sha": "e8565783a9e81525f08ff8d8419fd4de9b1f66cc", "filename": "gcc/testsuite/gfortran.dg/gomp/pr44036-1.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b45bf2152099996118ac8903d22718963cf1e99/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr44036-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b45bf2152099996118ac8903d22718963cf1e99/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr44036-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr44036-1.f90?ref=2b45bf2152099996118ac8903d22718963cf1e99", "patch": "@@ -0,0 +1,24 @@\n+! PR fortran/44036\n+! { dg-do compile }\n+! { dg-options \"-fopenmp\" }\n+subroutine foo(a, b)\n+  integer, external :: a\n+  integer, external, pointer :: b\n+  integer, external :: c\n+  integer, external, pointer :: d\n+  integer :: x\n+  x = 6\n+!$omp parallel default(none) private (x)\n+  x = a(4)\n+!$omp end parallel\n+!$omp parallel default(none) private (x)\t! { dg-error \"enclosing parallel\" }\n+  x = b(5)\t\t\t\t\t! { dg-error \"not specified in\" \"\" { target *-*-* } 11 }\n+!$omp end parallel\n+!$omp parallel default(none) private (x)\n+  x = c(6)\n+!$omp end parallel\n+  d => a\n+!$omp parallel default(none) private (x)\t! { dg-error \"enclosing parallel\" }\n+  x = d(7)\t\t\t\t\t! { dg-error \"not specified in\" }\n+!$omp end parallel\n+end"}, {"sha": "c9320f13912631231678d74a95757cb950785e73", "filename": "gcc/testsuite/gfortran.dg/gomp/pr44036-2.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b45bf2152099996118ac8903d22718963cf1e99/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr44036-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b45bf2152099996118ac8903d22718963cf1e99/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr44036-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr44036-2.f90?ref=2b45bf2152099996118ac8903d22718963cf1e99", "patch": "@@ -0,0 +1,17 @@\n+! PR fortran/44036\n+! { dg-do compile }\n+! { dg-options \"-fopenmp\" }\n+subroutine foo(a, b)\n+  integer, external :: a\n+  integer, external, pointer :: b\n+  integer, external :: c\n+  integer, external, pointer :: d\n+  integer :: x\n+  d => a\n+!$omp parallel default(none) private (x) firstprivate (b, d)\n+  x = a(4)\n+  x = b(5)\n+  x = c(6)\n+  x = d(7)\n+!$omp end parallel\n+end"}, {"sha": "449cb9572d03a0538cbecc8a4dc339b74a4e4878", "filename": "gcc/testsuite/gfortran.dg/gomp/pr44036-3.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b45bf2152099996118ac8903d22718963cf1e99/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr44036-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b45bf2152099996118ac8903d22718963cf1e99/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr44036-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr44036-3.f90?ref=2b45bf2152099996118ac8903d22718963cf1e99", "patch": "@@ -0,0 +1,13 @@\n+! PR fortran/44036\n+! { dg-do compile }\n+! { dg-options \"-fopenmp\" }\n+subroutine foo(a)\n+  integer, external :: a, c\n+  integer :: x\n+!$omp parallel default(none) private (x) shared (a)\t! { dg-error \"is not a variable\" }\n+  x = a(6)\n+!$omp end parallel\n+!$omp parallel default(none) private (x) shared (c)\t! { dg-error \"is not a variable\" }\n+  x = c(6)\n+!$omp end parallel\n+end"}]}