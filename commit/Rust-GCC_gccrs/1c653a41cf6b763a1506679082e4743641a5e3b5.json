{"sha": "1c653a41cf6b763a1506679082e4743641a5e3b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM2NTNhNDFjZjZiNzYzYTE1MDY2NzkwODJlNDc0MzY0MWE1ZTNiNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-09-06T08:53:11Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-09-06T08:53:11Z"}, "message": "re PR rtl-optimization/23098 (store of 0.0 to float)\n\n\tPR rtl-optimization/23098\n\t* cse.c (fold_rtx_mem): Call delegitimize_address target hook.\n\t* simplify-rtx.c (constant_pool_reference_p): New function.\n\t* rtl.h (constant_pool_reference_p): New prototype.\n\t* config/i386/i386.md (pushf split, mov[sdx]f split): Use\n\tconstant_pool_reference_p in condition and\n\tavoid_constant_pool_reference in preparation statements.\n\n\t* gcc.target/i386/pr23098.c: New test.\n\nFrom-SVN: r103935", "tree": {"sha": "56b6457372e7ce447bcc0d30ab7f7fd8beeec6d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56b6457372e7ce447bcc0d30ab7f7fd8beeec6d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c653a41cf6b763a1506679082e4743641a5e3b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c653a41cf6b763a1506679082e4743641a5e3b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c653a41cf6b763a1506679082e4743641a5e3b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c653a41cf6b763a1506679082e4743641a5e3b5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "70a640af36dabccba824de7661405b5667ea57c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70a640af36dabccba824de7661405b5667ea57c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70a640af36dabccba824de7661405b5667ea57c7"}], "stats": {"total": 61, "additions": 55, "deletions": 6}, "files": [{"sha": "3bcc27c1179896fcda8d7ff9a67df04784ca8a6d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c653a41cf6b763a1506679082e4743641a5e3b5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c653a41cf6b763a1506679082e4743641a5e3b5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c653a41cf6b763a1506679082e4743641a5e3b5", "patch": "@@ -1,3 +1,13 @@\n+2005-09-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/23098\n+\t* cse.c (fold_rtx_mem): Call delegitimize_address target hook.\n+\t* simplify-rtx.c (constant_pool_reference_p): New function.\n+\t* rtl.h (constant_pool_reference_p): New prototype.\n+\t* config/i386/i386.md (pushf split, mov[sdx]f split): Use\n+\tconstant_pool_reference_p in condition and\n+\tavoid_constant_pool_reference in preparation statements.\n+\n 2005-09-06  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* gcse.c (try_replace_reg): Disallow REG_EQUAL notes for "}, {"sha": "c1d455a600fa691b258f1908142be7aff6488976", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c653a41cf6b763a1506679082e4743641a5e3b5/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c653a41cf6b763a1506679082e4743641a5e3b5/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=1c653a41cf6b763a1506679082e4743641a5e3b5", "patch": "@@ -2247,11 +2247,10 @@\n \t(match_operand:SF 1 \"memory_operand\" \"\"))]\n   \"reload_completed\n    && GET_CODE (operands[1]) == MEM\n-   && GET_CODE (XEXP (operands[1], 0)) == SYMBOL_REF\n-   && CONSTANT_POOL_ADDRESS_P (XEXP (operands[1], 0))\"\n+   && constant_pool_reference_p (operands[1])\"\n   [(set (match_dup 0)\n \t(match_dup 1))]\n-  \"operands[1] = get_pool_constant (XEXP (operands[1], 0));\")\n+  \"operands[1] = avoid_constant_pool_reference (operands[1]);\")\n \n \n ;; %%% Kill this when call knows how to work this out.\n@@ -2861,11 +2860,10 @@\n    && GET_CODE (operands[1]) == MEM\n    && (GET_MODE (operands[0]) == XFmode\n        || GET_MODE (operands[0]) == SFmode || GET_MODE (operands[0]) == DFmode)\n-   && GET_CODE (XEXP (operands[1], 0)) == SYMBOL_REF\n-   && CONSTANT_POOL_ADDRESS_P (XEXP (operands[1], 0))\"\n+   && constant_pool_reference_p (operands[1])\"\n   [(set (match_dup 0) (match_dup 1))]\n {\n-  rtx c = get_pool_constant (XEXP (operands[1], 0));\n+  rtx c = avoid_constant_pool_reference (operands[1]);\n   rtx r = operands[0];\n \n   if (GET_CODE (r) == SUBREG)"}, {"sha": "713b842dcc0da6f4f65f82200c848257b740db73", "filename": "gcc/cse.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c653a41cf6b763a1506679082e4743641a5e3b5/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c653a41cf6b763a1506679082e4743641a5e3b5/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=1c653a41cf6b763a1506679082e4743641a5e3b5", "patch": "@@ -3462,6 +3462,9 @@ fold_rtx_mem (rtx x, rtx insn)\n \t  addr = addr_ent->const_rtx;\n       }\n \n+    /* Call target hook to avoid the effects of -fpic etc....  */\n+    addr = targetm.delegitimize_address (addr);\n+\n     /* If address is constant, split it into a base and integer\n        offset.  */\n     if (GET_CODE (addr) == SYMBOL_REF || GET_CODE (addr) == LABEL_REF)"}, {"sha": "6de76e288f3b22dd795af3b8c2ff2a18e88c6398", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c653a41cf6b763a1506679082e4743641a5e3b5/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c653a41cf6b763a1506679082e4743641a5e3b5/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=1c653a41cf6b763a1506679082e4743641a5e3b5", "patch": "@@ -1542,6 +1542,7 @@ extern rtx simplify_gen_subreg (enum machine_mode, rtx, enum machine_mode,\n extern rtx simplify_replace_rtx (rtx, rtx, rtx);\n extern rtx simplify_rtx (rtx);\n extern rtx avoid_constant_pool_reference (rtx);\n+extern bool constant_pool_reference_p (rtx x);\n extern bool mode_signbit_p (enum machine_mode, rtx);\n \n /* In regclass.c  */"}, {"sha": "d3ec956c1aece5e63d2a5ae42897dd604ef55747", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c653a41cf6b763a1506679082e4743641a5e3b5/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c653a41cf6b763a1506679082e4743641a5e3b5/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=1c653a41cf6b763a1506679082e4743641a5e3b5", "patch": "@@ -209,6 +209,14 @@ avoid_constant_pool_reference (rtx x)\n \n   return x;\n }\n+\n+/* Return true if X is a MEM referencing the constant pool.  */\n+\n+bool\n+constant_pool_reference_p (rtx x)\n+{\n+  return avoid_constant_pool_reference (x) != x;\n+}\n \f\n /* Make a unary operation by first seeing if it folds and otherwise making\n    the specified operation.  */"}, {"sha": "e1b8b0b21b99f3806c83d539433a70cad9cc59be", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c653a41cf6b763a1506679082e4743641a5e3b5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c653a41cf6b763a1506679082e4743641a5e3b5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1c653a41cf6b763a1506679082e4743641a5e3b5", "patch": "@@ -1,3 +1,8 @@\n+2005-09-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/23098\n+\t* gcc.target/i386/pr23098.c: New test.\n+\n 2005-09-05  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/23667"}, {"sha": "3a3fd102d138f85e90211a1e0609cc3280b0ece1", "filename": "gcc/testsuite/gcc.target/i386/pr23098.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c653a41cf6b763a1506679082e4743641a5e3b5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr23098.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c653a41cf6b763a1506679082e4743641a5e3b5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr23098.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr23098.c?ref=1c653a41cf6b763a1506679082e4743641a5e3b5", "patch": "@@ -0,0 +1,24 @@\n+/* PR rtl-optimization/23098 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fPIC\" } */\n+/* { dg-final { scan-assembler-not \"\\.LC\\[0-9\\]\" } } */\n+\n+double foo (float);\n+\n+double\n+f1 (void)\n+{\n+  return foo (1.0);\n+}\n+\n+double\n+f2 (void)\n+{\n+  return foo (0.0);\n+}\n+\n+void\n+f3 (float *x, float t)\n+{\n+  *x = 0.0 + t;\n+}"}]}