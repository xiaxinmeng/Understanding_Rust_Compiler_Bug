{"sha": "2268cc528815583a0ee54e1a5ba452f2ee5f709c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI2OGNjNTI4ODE1NTgzYTBlZTU0ZTFhNWJhNDUyZjJlZTVmNzA5Yw==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-11-22T02:09:49Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-11-22T02:09:49Z"}, "message": "v850.c (ep_memory_operand): Offsets < 0 are not valid for EP addressing modes.\n\n        * v850.c (ep_memory_operand): Offsets < 0 are not valid for EP\n        addressing modes.\n        (v850_reorg): Similarly.\n\nFrom-SVN: r23747", "tree": {"sha": "03959330fb4fcd4c1ee250069920a91dce3f25de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03959330fb4fcd4c1ee250069920a91dce3f25de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2268cc528815583a0ee54e1a5ba452f2ee5f709c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2268cc528815583a0ee54e1a5ba452f2ee5f709c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2268cc528815583a0ee54e1a5ba452f2ee5f709c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2268cc528815583a0ee54e1a5ba452f2ee5f709c/comments", "author": null, "committer": null, "parents": [{"sha": "67389d50a88ea83e38922a34e8e1e59124a28b93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67389d50a88ea83e38922a34e8e1e59124a28b93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67389d50a88ea83e38922a34e8e1e59124a28b93"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "5f2ef26212b9979d068a6e4213cb6e052d518cba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2268cc528815583a0ee54e1a5ba452f2ee5f709c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2268cc528815583a0ee54e1a5ba452f2ee5f709c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2268cc528815583a0ee54e1a5ba452f2ee5f709c", "patch": "@@ -1,5 +1,9 @@\n Sat Nov 21 22:12:09 1998  Jeffrey A Law  (law@cygnus.com)\n \n+\t* v850.c (ep_memory_operand): Offsets < 0 are not valid for EP\n+\taddressing modes.\n+\t(v850_reorg): Similarly.\n+\n \t* loop.c (check_dbra_loop): Avoid using gen_add2_insn.\n \n Sat Nov 21 02:18:38 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>"}, {"sha": "cda00f041799ba32a3fe835481f199d5447b79bc", "filename": "gcc/config/v850/v850.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2268cc528815583a0ee54e1a5ba452f2ee5f709c/gcc%2Fconfig%2Fv850%2Fv850.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2268cc528815583a0ee54e1a5ba452f2ee5f709c/gcc%2Fconfig%2Fv850%2Fv850.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.c?ref=2268cc528815583a0ee54e1a5ba452f2ee5f709c", "patch": "@@ -944,6 +944,7 @@ ep_memory_operand (op, mode, unsigned_load)\n       op1 = XEXP (addr, 1);\n       if (GET_CODE (op1) == CONST_INT\n \t  && INTVAL (op1) < max_offset\n+\t  && INTVAL (op1) >= 0\n \t  && (INTVAL (op1) & mask) == 0)\n \t{\n \t  if (GET_CODE (op0) == REG && REGNO (op0) == EP_REGNUM)\n@@ -1149,7 +1150,8 @@ Saved %d bytes (%d uses of register %s) in function %s, starting as insn %d, end\n \t\t\t   && GET_CODE (XEXP (addr, 1)) == CONST_INT\n \t\t\t   && ((INTVAL (XEXP (addr, 1)))\n \t\t\t       < ep_memory_offset (GET_MODE (*p_mem),\n-\t\t\t\t\t\t   unsignedp)))\n+\t\t\t\t\t\t   unsignedp))\n+\t\t\t   && ((INTVAL (XEXP (addr, 1))) >= 0))\n \t\t    *p_mem = change_address (*p_mem, VOIDmode,\n \t\t\t\t\t     gen_rtx (PLUS, Pmode,\n \t\t\t\t\t\t      *p_ep, XEXP (addr, 1)));\n@@ -1300,7 +1302,8 @@ void v850_reorg (start_insn)\n \t\t\t   && GET_CODE (XEXP (addr, 0)) == REG\n \t\t\t   && GET_CODE (XEXP (addr, 1)) == CONST_INT\n \t\t\t   && ((INTVAL (XEXP (addr, 1)))\n-\t\t\t       < ep_memory_offset (GET_MODE (mem), unsignedp)))\n+\t\t\t       < ep_memory_offset (GET_MODE (mem), unsignedp))\n+\t\t\t   && ((INTVAL (XEXP (addr, 1))) >= 0))\n \t\t    {\n \t\t      short_p = TRUE;\n \t\t      regno = REGNO (XEXP (addr, 0));"}]}