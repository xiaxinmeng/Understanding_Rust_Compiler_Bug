{"sha": "765a03052da3c4f874b019221be721ec8e6af799", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY1YTAzMDUyZGEzYzRmODc0YjAxOTIyMWJlNzIxZWM4ZTZhZjc5OQ==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2010-06-03T06:32:27Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2010-06-03T06:32:27Z"}, "message": "Import AC_CHECK_DECL for C++ fixes from git Autoconf.\n\nconfig/:\n\tPR bootstrap/42798\n\t* override.m4 (_AC_CHECK_DECL_BODY, _AC_CHECK_DECLS): Import\n\tdefinitions from git Autoconf.\n\nCo-Authored-By: Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\nFrom-SVN: r160210", "tree": {"sha": "b578b77620c9605baf71f8612dc3f9221ac5faac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b578b77620c9605baf71f8612dc3f9221ac5faac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/765a03052da3c4f874b019221be721ec8e6af799", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/765a03052da3c4f874b019221be721ec8e6af799", "html_url": "https://github.com/Rust-GCC/gccrs/commit/765a03052da3c4f874b019221be721ec8e6af799", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/765a03052da3c4f874b019221be721ec8e6af799/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "64a64447217e7b5bbf85ccdd9f4623c77805bbcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64a64447217e7b5bbf85ccdd9f4623c77805bbcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64a64447217e7b5bbf85ccdd9f4623c77805bbcc"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "a211292c15e6cf6f086878b1d64d750fd9234f79", "filename": "config/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/765a03052da3c4f874b019221be721ec8e6af799/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/765a03052da3c4f874b019221be721ec8e6af799/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=765a03052da3c4f874b019221be721ec8e6af799", "patch": "@@ -1,3 +1,10 @@\n+2010-06-03  Joern Rennecke <joern.rennecke@embecosm.com>\n+\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\tPR bootstrap/42798\n+\t* override.m4 (_AC_CHECK_DECL_BODY, _AC_CHECK_DECLS): Import\n+\tdefinitions from git Autoconf.\n+\n 2010-04-13  Steve Ellcey  <sje@cup.hp.com>\n \n \t* elf.m4: Add hppa[12]*-*-hpux* to list of non-elf platforms."}, {"sha": "47d8dac64d73dc16c031c1998977c6a957409086", "filename": "config/override.m4", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/765a03052da3c4f874b019221be721ec8e6af799/config%2Foverride.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/765a03052da3c4f874b019221be721ec8e6af799/config%2Foverride.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Foverride.m4?ref=765a03052da3c4f874b019221be721ec8e6af799", "patch": "@@ -272,3 +272,44 @@ m4_define([m4_wrap], [m4_ifdef([_$0_text],\n   [m4_define([_$0_text], [$1])m4_builtin([m4wrap],\n     [m4_default(m4_defn([_$0_text])m4_undefine([_$0_text]))])])])\n ])\n+\n+m4_version_prereq([2.66],, [\n+dnl We need AC_CHECK_DECL which works for overloaded C++ functions.\n+\n+# _AC_CHECK_DECL_BODY\n+# -------------------\n+# Shell function body for AC_CHECK_DECL.\n+m4_define([_AC_CHECK_DECL_BODY],\n+[  AS_LINENO_PUSH([$[]1])\n+  [as_decl_name=`echo $][2|sed 's/ *(.*//'`]\n+  [as_decl_use=`echo $][2|sed -e 's/(/((/' -e 's/)/) 0&/' -e 's/,/) 0& (/g'`]\n+  AC_CACHE_CHECK([whether $as_decl_name is declared], [$[]3],\n+  [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([$[]4],\n+[@%:@ifndef $[]as_decl_name\n+@%:@ifdef __cplusplus\n+  (void) $[]as_decl_use;\n+@%:@else\n+  (void) $[]as_decl_name;\n+@%:@endif\n+@%:@endif\n+])],\n+\t\t   [AS_VAR_SET([$[]3], [yes])],\n+\t\t   [AS_VAR_SET([$[]3], [no])])])\n+  AS_LINENO_POP\n+])# _AC_CHECK_DECL_BODY\n+\n+# _AC_CHECK_DECLS(SYMBOL, ACTION-IF_FOUND, ACTION-IF-NOT-FOUND,\n+#                 INCLUDES)\n+# -------------------------------------------------------------\n+# Helper to AC_CHECK_DECLS, which generates the check for a single\n+# SYMBOL with INCLUDES, performs the AC_DEFINE, then expands\n+# ACTION-IF-FOUND or ACTION-IF-NOT-FOUND.\n+m4_define([_AC_CHECK_DECLS],\n+[AC_CHECK_DECL([$1], [ac_have_decl=1], [ac_have_decl=0], [$4])]dnl\n+[AC_DEFINE_UNQUOTED(AS_TR_CPP(m4_bpatsubst(HAVE_DECL_[$1],[ *(.*])),\n+  [$ac_have_decl],\n+  [Define to 1 if you have the declaration of `$1',\n+   and to 0 if you don't.])]dnl\n+[m4_ifvaln([$2$3], [AS_IF([test $ac_have_decl = 1], [$2], [$3])])])\n+\n+])"}]}