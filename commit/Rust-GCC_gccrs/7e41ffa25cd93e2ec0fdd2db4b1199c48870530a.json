{"sha": "7e41ffa25cd93e2ec0fdd2db4b1199c48870530a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U0MWZmYTI1Y2Q5M2UyZWMwZmRkMmRiNGIxMTk5YzQ4ODcwNTMwYQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-19T04:46:22Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-19T04:46:22Z"}, "message": "(assign_parms): Set MEM_IN_STRUCT_P right in stack slots.\n\nFrom-SVN: r2157", "tree": {"sha": "4c9b76f26ef3904a482ff7c336e2cc0467820790", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c9b76f26ef3904a482ff7c336e2cc0467820790"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e41ffa25cd93e2ec0fdd2db4b1199c48870530a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e41ffa25cd93e2ec0fdd2db4b1199c48870530a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e41ffa25cd93e2ec0fdd2db4b1199c48870530a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e41ffa25cd93e2ec0fdd2db4b1199c48870530a/comments", "author": null, "committer": null, "parents": [{"sha": "73bdfabc83517cdc34da831196b222c80149e398", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73bdfabc83517cdc34da831196b222c80149e398", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73bdfabc83517cdc34da831196b222c80149e398"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "dbc90043d7ff1e6089c2e27a351e3858e67f2c10", "filename": "gcc/function.c", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e41ffa25cd93e2ec0fdd2db4b1199c48870530a/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e41ffa25cd93e2ec0fdd2db4b1199c48870530a/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=7e41ffa25cd93e2ec0fdd2db4b1199c48870530a", "patch": "@@ -2859,8 +2859,14 @@ assign_parms (fndecl, second_time)\n \t\t if it becomes a problem.  */\n \n \t      if (stack_parm == 0)\n-\t\tstack_parm\n-\t\t  = assign_stack_local (GET_MODE (entry_parm), size_stored, 0);\n+\t\t{\n+\t\t  stack_parm\n+\t\t    = assign_stack_local (GET_MODE (entry_parm), size_stored, 0);\n+\t\t  /* If this is a memory ref that contains aggregate components,\n+\t\t     mark it as such for cse and loop optimize.  */\n+\t\t  MEM_IN_STRUCT_P (stack_parm) = aggregate;\n+\t\t}\n+\n \t      else if (PARM_BOUNDARY % BITS_PER_WORD != 0)\n \t\tabort ();\n \n@@ -2989,8 +2995,15 @@ assign_parms (fndecl, second_time)\n \t  if (entry_parm != stack_parm)\n \t    {\n \t      if (stack_parm == 0)\n-\t\tstack_parm = assign_stack_local (GET_MODE (entry_parm),\n-\t\t\t\t\t\t GET_MODE_SIZE (GET_MODE (entry_parm)), 0);\n+\t\t{\n+\t\t  stack_parm\n+\t\t    = assign_stack_local (GET_MODE (entry_parm),\n+\t\t\t\t\t  GET_MODE_SIZE (GET_MODE (entry_parm)), 0);\n+\t\t  /* If this is a memory ref that contains aggregate components,\n+\t\t     mark it as such for cse and loop optimize.  */\n+\t\t  MEM_IN_STRUCT_P (stack_parm) = aggregate;\n+\t\t}\n+\n \t      emit_move_insn (validize_mem (stack_parm),\n \t\t\t      validize_mem (entry_parm));\n \t    }"}]}