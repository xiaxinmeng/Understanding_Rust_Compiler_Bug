{"sha": "946732df902dbb23dd44abe97fea41e154e6e5f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ2NzMyZGY5MDJkYmIyM2RkNDRhYmU5N2ZlYTQxZTE1NGU2ZTVmOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-07-11T08:31:51Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-07-11T08:31:51Z"}, "message": "re PR target/91124 (gcc.target/i386/avx512vl-vpshldvd-2.c etc. FAIL)\n\n\tPR target/91124\n\t* config/i386/sse.md (sse2_cvtpd2dq<mask_name>): Change into ...\n\t(sse2_cvtpd2dq): ... this.  Remove mask substitution macros.\n\t(sse2_cvtpd2dq_mask, sse2_cvtpd2dq_mask_1): New define_insns.\n\t(ufix_notruncv2dfv2si2<mask_name>): Change into ...\n\t(ufix_notruncv2dfv2si2): ... this.  Remove mask substitution macros.\n\t(ufix_notruncv2dfv2si2_mask, ufix_notruncv2dfv2si2_mask_1): New\n\tdefine_insns.\n\t(ufix_truncv2dfv2si2<mask_name>): Change into ...\n\t(ufix_truncv2dfv2si2): ... this.  Remove mask substitution macros.\n\t(ufix_truncv2dfv2si2_mask, ufix_truncv2dfv2si2_mask_1): New\n\tdefine_insns.\n\t(sse2_cvttpd2dq<mask_name>): Change into ...\n\t(sse2_cvttpd2dq): ... this.  Remove mask substitution macros.\n\t(sse2_cvttpd2dq_mask, sse2_cvttpd2dq_mask_1): New define_insns.\n\t(*sse2_cvtpd2dq<mask_name>): Change into ...\n\t(*sse2_cvtpd2dq): ... this.  Remove mask substitution macros.\n\tAdd \"C\" constraint to const0_operand.\n\t(*sse2_cvtpd2dq_mask, *sse2_cvtpd2dq_mask_1): New define_insns.\n\t(sse2_cvtpd2ps_mask): Adjust expand to match *sse2_cvtpd2ps_mask\n\tchanges.\n\nFrom-SVN: r273409", "tree": {"sha": "aa27f5e0594bd7fbc7e7c364220c09973d36193f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa27f5e0594bd7fbc7e7c364220c09973d36193f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/946732df902dbb23dd44abe97fea41e154e6e5f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/946732df902dbb23dd44abe97fea41e154e6e5f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/946732df902dbb23dd44abe97fea41e154e6e5f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/946732df902dbb23dd44abe97fea41e154e6e5f9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "491b0b4015a70071a05e0faa5c2082c43a51a0d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/491b0b4015a70071a05e0faa5c2082c43a51a0d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/491b0b4015a70071a05e0faa5c2082c43a51a0d3"}], "stats": {"total": 222, "additions": 202, "deletions": 20}, "files": [{"sha": "364466b6b6fcc5f948788593ee2022f8507e5b06", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/946732df902dbb23dd44abe97fea41e154e6e5f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/946732df902dbb23dd44abe97fea41e154e6e5f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=946732df902dbb23dd44abe97fea41e154e6e5f9", "patch": "@@ -1,5 +1,27 @@\n 2019-07-11  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/91124\n+\t* config/i386/sse.md (sse2_cvtpd2dq<mask_name>): Change into ...\n+\t(sse2_cvtpd2dq): ... this.  Remove mask substitution macros.\n+\t(sse2_cvtpd2dq_mask, sse2_cvtpd2dq_mask_1): New define_insns.\n+\t(ufix_notruncv2dfv2si2<mask_name>): Change into ...\n+\t(ufix_notruncv2dfv2si2): ... this.  Remove mask substitution macros.\n+\t(ufix_notruncv2dfv2si2_mask, ufix_notruncv2dfv2si2_mask_1): New\n+\tdefine_insns.\n+\t(ufix_truncv2dfv2si2<mask_name>): Change into ...\n+\t(ufix_truncv2dfv2si2): ... this.  Remove mask substitution macros.\n+\t(ufix_truncv2dfv2si2_mask, ufix_truncv2dfv2si2_mask_1): New\n+\tdefine_insns.\n+\t(sse2_cvttpd2dq<mask_name>): Change into ...\n+\t(sse2_cvttpd2dq): ... this.  Remove mask substitution macros.\n+\t(sse2_cvttpd2dq_mask, sse2_cvttpd2dq_mask_1): New define_insns.\n+\t(*sse2_cvtpd2dq<mask_name>): Change into ...\n+\t(*sse2_cvtpd2dq): ... this.  Remove mask substitution macros.\n+\tAdd \"C\" constraint to const0_operand.\n+\t(*sse2_cvtpd2dq_mask, *sse2_cvtpd2dq_mask_1): New define_insns.\n+\t(sse2_cvtpd2ps_mask): Adjust expand to match *sse2_cvtpd2ps_mask\n+\tchanges.\n+\n \tPR target/91124\n \t* config/i386/i386-builtin-types.def\n \t(V32HI_FTYPE_V32HI_V32HI_V32HI_INT,"}, {"sha": "12d6dc0cb7e839dacef8ad53eff23e7c659cb24b", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 180, "deletions": 20, "changes": 200, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/946732df902dbb23dd44abe97fea41e154e6e5f9/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/946732df902dbb23dd44abe97fea41e154e6e5f9/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=946732df902dbb23dd44abe97fea41e154e6e5f9", "patch": "@@ -5927,16 +5927,16 @@\n    (set_attr \"btver2_decode\" \"vector\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_insn \"sse2_cvtpd2dq<mask_name>\"\n+(define_insn \"sse2_cvtpd2dq\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n \t(vec_concat:V4SI\n \t  (unspec:V2SI [(match_operand:V2DF 1 \"vector_operand\" \"vBm\")]\n \t\t       UNSPEC_FIX_NOTRUNC)\n \t  (const_vector:V2SI [(const_int 0) (const_int 0)])))]\n-  \"TARGET_SSE2 && <mask_avx512vl_condition>\"\n+  \"TARGET_SSE2\"\n {\n   if (TARGET_AVX)\n-    return \"vcvtpd2dq{x}\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\";\n+    return \"vcvtpd2dq{x}\\t{%1, %0|%0, %1}\";\n   else\n     return \"cvtpd2dq\\t{%1, %0|%0, %1}\";\n }\n@@ -5949,6 +5949,38 @@\n    (set_attr \"athlon_decode\" \"vector\")\n    (set_attr \"bdver1_decode\" \"double\")])\n \n+(define_insn \"sse2_cvtpd2dq_mask\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n+\t(vec_concat:V4SI\n+\t  (vec_merge:V2SI\n+\t    (unspec:V2SI [(match_operand:V2DF 1 \"nonimmediate_operand\" \"vm\")]\n+\t\t\t  UNSPEC_FIX_NOTRUNC)\n+\t    (vec_select:V2SI\n+\t      (match_operand:V4SI 2 \"nonimm_or_0_operand\" \"0C\")\n+\t      (parallel [(const_int 0) (const_int 1)]))\n+\t    (match_operand:QI 3 \"register_operand\" \"Yk\"))\n+\t  (const_vector:V2SI [(const_int 0) (const_int 0)])))]\n+  \"TARGET_AVX512VL\"\n+  \"vcvtpd2dq{x}\\t{%1, %0%{%3%}%N2|%0%{%3%}%N2, %1}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"*sse2_cvtpd2dq_mask_1\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n+\t(vec_concat:V4SI\n+\t  (vec_merge:V2SI\n+\t    (unspec:V2SI [(match_operand:V2DF 1 \"nonimmediate_operand\" \"vm\")]\n+\t\t\t  UNSPEC_FIX_NOTRUNC)\n+\t    (const_vector:V2SI [(const_int 0) (const_int 0)])\n+\t    (match_operand:QI 2 \"register_operand\" \"Yk\"))\n+\t  (const_vector:V2SI [(const_int 0) (const_int 0)])))]\n+  \"TARGET_AVX512VL\"\n+  \"vcvtpd2dq{x}\\t{%1, %0%{%2%}%{z%}|%0%{%2%}%{z%}, %1}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n ;; For ufix_notrunc* insn patterns\n (define_mode_attr pd2udqsuff\n   [(V8DF \"\") (V4DF \"{y}\")])\n@@ -5964,15 +5996,49 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_insn \"ufix_notruncv2dfv2si2<mask_name>\"\n+(define_insn \"ufix_notruncv2dfv2si2\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n \t(vec_concat:V4SI\n \t  (unspec:V2SI\n \t    [(match_operand:V2DF 1 \"nonimmediate_operand\" \"vm\")]\n-\t    UNSPEC_UNSIGNED_FIX_NOTRUNC)\n+\t       UNSPEC_UNSIGNED_FIX_NOTRUNC)\n \t  (const_vector:V2SI [(const_int 0) (const_int 0)])))]\n   \"TARGET_AVX512VL\"\n-  \"vcvtpd2udq{x}\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\"\n+  \"vcvtpd2udq{x}\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"ufix_notruncv2dfv2si2_mask\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n+\t(vec_concat:V4SI\n+\t  (vec_merge:V2SI\n+\t    (unspec:V2SI\n+\t      [(match_operand:V2DF 1 \"nonimmediate_operand\" \"vm\")]\n+\t\t UNSPEC_UNSIGNED_FIX_NOTRUNC)\n+\t    (vec_select:V2SI\n+\t      (match_operand:V4SI 2 \"nonimm_or_0_operand\" \"0C\")\n+\t      (parallel [(const_int 0) (const_int 1)]))\n+\t    (match_operand:QI 3 \"register_operand\" \"Yk\"))\n+\t  (const_vector:V2SI [(const_int 0) (const_int 0)])))]\n+  \"TARGET_AVX512VL\"\n+  \"vcvtpd2udq{x}\\t{%1, %0%{%3%}%N2|%0%{%3%}%N2, %1}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"*ufix_notruncv2dfv2si2_mask_1\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n+\t(vec_concat:V4SI\n+\t  (vec_merge:V2SI\n+\t    (unspec:V2SI\n+\t      [(match_operand:V2DF 1 \"nonimmediate_operand\" \"vm\")]\n+\t\t UNSPEC_UNSIGNED_FIX_NOTRUNC)\n+\t    (const_vector:V2SI [(const_int 0) (const_int 0)])\n+\t    (match_operand:QI 2 \"register_operand\" \"Yk\"))\n+\t  (const_vector:V2SI [(const_int 0) (const_int 0)])))]\n+  \"TARGET_AVX512VL\"\n+  \"vcvtpd2udq{x}\\t{%1, %0%{%2%}%{z%}|%0%{%2%}%{z%}, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"TI\")])\n@@ -5987,13 +6053,43 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_insn \"ufix_truncv2dfv2si2<mask_name>\"\n+(define_insn \"ufix_truncv2dfv2si2\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n \t(vec_concat:V4SI\n \t  (unsigned_fix:V2SI (match_operand:V2DF 1 \"nonimmediate_operand\" \"vm\"))\n \t  (const_vector:V2SI [(const_int 0) (const_int 0)])))]\n   \"TARGET_AVX512VL\"\n-  \"vcvttpd2udq{x}\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\"\n+  \"vcvttpd2udq{x}\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"ufix_truncv2dfv2si2_mask\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n+\t(vec_concat:V4SI\n+\t  (vec_merge:V2SI\n+\t    (unsigned_fix:V2SI (match_operand:V2DF 1 \"nonimmediate_operand\" \"vm\"))\n+\t    (vec_select:V2SI\n+\t      (match_operand:V4SI 2 \"nonimm_or_0_operand\" \"0C\")\n+\t      (parallel [(const_int 0) (const_int 1)]))\n+\t    (match_operand:QI 3 \"register_operand\" \"Yk\"))\n+\t  (const_vector:V2SI [(const_int 0) (const_int 0)])))]\n+  \"TARGET_AVX512VL\"\n+  \"vcvttpd2udq{x}\\t{%1, %0%{%3%}%N2|%0%{%3%}%N2, %1}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"*ufix_truncv2dfv2si2_mask_1\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n+\t(vec_concat:V4SI\n+\t  (vec_merge:V2SI\n+\t    (unsigned_fix:V2SI (match_operand:V2DF 1 \"nonimmediate_operand\" \"vm\"))\n+\t    (const_vector:V2SI [(const_int 0) (const_int 0)])\n+\t    (match_operand:QI 2 \"register_operand\" \"Yk\"))\n+\t  (const_vector:V2SI [(const_int 0) (const_int 0)])))]\n+  \"TARGET_AVX512VL\"\n+  \"vcvttpd2udq{x}\\t{%1, %0%{%2%}%{z%}|%0%{%2%}%{z%}, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"TI\")])\n@@ -6138,15 +6234,15 @@\n   \"TARGET_AVX\"\n   \"operands[2] = CONST0_RTX (V4SImode);\")\n \n-(define_insn \"sse2_cvttpd2dq<mask_name>\"\n+(define_insn \"sse2_cvttpd2dq\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n \t(vec_concat:V4SI\n \t  (fix:V2SI (match_operand:V2DF 1 \"vector_operand\" \"vBm\"))\n \t  (const_vector:V2SI [(const_int 0) (const_int 0)])))]\n-  \"TARGET_SSE2 && <mask_avx512vl_condition>\"\n+  \"TARGET_SSE2\"\n {\n   if (TARGET_AVX)\n-    return \"vcvttpd2dq{x}\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\";\n+    return \"vcvttpd2dq{x}\\t{%1, %0|%0, %1}\";\n   else\n     return \"cvttpd2dq\\t{%1, %0|%0, %1}\";\n }\n@@ -6157,6 +6253,36 @@\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"TI\")])\n \n+(define_insn \"sse2_cvttpd2dq_mask\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n+\t(vec_concat:V4SI\n+\t  (vec_merge:V2SI\n+\t    (fix:V2SI (match_operand:V2DF 1 \"nonimmediate_operand\" \"vm\"))\n+\t    (vec_select:V2SI\n+\t      (match_operand:V4SI 2 \"nonimm_or_0_operand\" \"0C\")\n+\t      (parallel [(const_int 0) (const_int 1)]))\n+\t    (match_operand:QI 3 \"register_operand\" \"Yk\"))\n+\t  (const_vector:V2SI [(const_int 0) (const_int 0)])))]\n+  \"TARGET_AVX512VL\"\n+  \"vcvttpd2dq{x}\\t{%1, %0%{%3%}%N2|%0%{%3%}%N2, %1}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"*sse2_cvttpd2dq_mask_1\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n+\t(vec_concat:V4SI\n+\t  (vec_merge:V2SI\n+\t    (fix:V2SI (match_operand:V2DF 1 \"nonimmediate_operand\" \"vm\"))\n+\t    (const_vector:V2SI [(const_int 0) (const_int 0)])\n+\t    (match_operand:QI 2 \"register_operand\" \"Yk\"))\n+\t  (const_vector:V2SI [(const_int 0) (const_int 0)])))]\n+  \"TARGET_AVX512VL\"\n+  \"vcvttpd2dq{x}\\t{%1, %0%{%2%}%{z%}|%0%{%2%}%{z%}, %1}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n (define_insn \"sse2_cvtsd2ss<round_name>\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=x,x,v\")\n \t(vec_merge:V4SF\n@@ -6276,26 +6402,28 @@\n \n (define_expand \"sse2_cvtpd2ps_mask\"\n   [(set (match_operand:V4SF 0 \"register_operand\")\n-\t(vec_merge:V4SF\n-\t  (vec_concat:V4SF\n+\t(vec_concat:V4SF\n+\t  (vec_merge:V2SF\n \t    (float_truncate:V2SF\n \t      (match_operand:V2DF 1 \"vector_operand\"))\n-\t    (match_dup 4))\n-\t  (match_operand:V4SF 2 \"register_operand\")\n-\t  (match_operand:QI 3 \"register_operand\")))]\n+\t    (vec_select:V2SF\n+\t      (match_operand:V4SF 2 \"nonimm_or_0_operand\")\n+\t      (parallel [(const_int 0) (const_int 1)]))\n+\t    (match_operand:QI 3 \"register_operand\"))\n+\t  (match_dup 4)))]\n   \"TARGET_SSE2\"\n   \"operands[4] = CONST0_RTX (V2SFmode);\")\n \n-(define_insn \"*sse2_cvtpd2ps<mask_name>\"\n+(define_insn \"*sse2_cvtpd2ps\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n \t(vec_concat:V4SF\n \t  (float_truncate:V2SF\n \t    (match_operand:V2DF 1 \"vector_operand\" \"vBm\"))\n-\t  (match_operand:V2SF 2 \"const0_operand\")))]\n-  \"TARGET_SSE2 && <mask_avx512vl_condition>\"\n+\t  (match_operand:V2SF 2 \"const0_operand\" \"C\")))]\n+  \"TARGET_SSE2\"\n {\n   if (TARGET_AVX)\n-    return \"vcvtpd2ps{x}\\t{%1, %0<mask_operand3>|%0<mask_operand3>, %1}\";\n+    return \"vcvtpd2ps{x}\\t{%1, %0|%0, %1}\";\n   else\n     return \"cvtpd2ps\\t{%1, %0|%0, %1}\";\n }\n@@ -6307,6 +6435,38 @@\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"V4SF\")])\n \n+(define_insn \"*sse2_cvtpd2ps_mask\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n+\t(vec_concat:V4SF\n+\t  (vec_merge:V2SF\n+\t    (float_truncate:V2SF\n+\t      (match_operand:V2DF 1 \"nonimmediate_operand\" \"vm\"))\n+\t    (vec_select:V2SF\n+\t      (match_operand:V4SF 2 \"nonimm_or_0_operand\" \"0C\")\n+\t      (parallel [(const_int 0) (const_int 1)]))\n+\t    (match_operand:QI 3 \"register_operand\" \"Yk\"))\n+\t  (match_operand:V2SF 4 \"const0_operand\" \"C\")))]\n+  \"TARGET_AVX512VL\"\n+  \"vcvtpd2ps{x}\\t{%1, %0%{%3%}%N2|%0%{%3%}%N2, %1}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"V4SF\")])\n+\n+(define_insn \"*sse2_cvtpd2ps_mask_1\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n+\t(vec_concat:V4SF\n+\t  (vec_merge:V2SF\n+\t    (float_truncate:V2SF\n+\t      (match_operand:V2DF 1 \"nonimmediate_operand\" \"vm\"))\n+\t    (match_operand:V2SF 3 \"const0_operand\" \"C\")\n+\t    (match_operand:QI 2 \"register_operand\" \"Yk\"))\n+\t  (match_operand:V2SF 4 \"const0_operand\" \"C\")))]\n+  \"TARGET_AVX512VL\"\n+  \"vcvtpd2ps{x}\\t{%1, %0%{%2%}%{z%}|%0%{%2%}%{z%}, %1}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"V4SF\")])\n+\n ;; For <sse2_avx_avx512f>_cvtps2pd<avxsizesuffix> insn pattern\n (define_mode_attr sf2dfmode\n   [(V8DF \"V8SF\") (V4DF \"V4SF\")])"}]}