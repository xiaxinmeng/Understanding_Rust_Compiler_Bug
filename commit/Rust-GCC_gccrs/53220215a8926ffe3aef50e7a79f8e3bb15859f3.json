{"sha": "53220215a8926ffe3aef50e7a79f8e3bb15859f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTMyMjAyMTVhODkyNmZmZTNhZWY1MGU3YTc5ZjhlM2JiMTU4NTlmMw==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2007-09-28T13:31:50Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2007-09-28T13:31:50Z"}, "message": "re PR rtl-optimization/33552 (wrong code for multiple output asm, wrong df?)\n\n        PR rtl-optimization/33552\n        * function.c (match_asm_constraints_1): Check for overlap in\n        inputs and replace all occurences.\n\nFrom-SVN: r128864", "tree": {"sha": "4b854e7c1b701afce564e0ce3d39398bcbd379fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b854e7c1b701afce564e0ce3d39398bcbd379fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53220215a8926ffe3aef50e7a79f8e3bb15859f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53220215a8926ffe3aef50e7a79f8e3bb15859f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53220215a8926ffe3aef50e7a79f8e3bb15859f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53220215a8926ffe3aef50e7a79f8e3bb15859f3/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bd69daef031ae2afefc43f72e5050e006dc142fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd69daef031ae2afefc43f72e5050e006dc142fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd69daef031ae2afefc43f72e5050e006dc142fe"}], "stats": {"total": 57, "additions": 52, "deletions": 5}, "files": [{"sha": "46eaa22f97f5f98f062a4751b44e2708e501ce24", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53220215a8926ffe3aef50e7a79f8e3bb15859f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53220215a8926ffe3aef50e7a79f8e3bb15859f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=53220215a8926ffe3aef50e7a79f8e3bb15859f3", "patch": "@@ -1,3 +1,9 @@\n+2007-09-28  Michael Matz  <matz@suse.de>\n+\n+\tPR rtl-optimization/33552\n+\t* function.c (match_asm_constraints_1): Check for overlap in\n+\tinputs and replace all occurences.\n+\n 2007-09-28  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* config/mips/mips.c (override_options): Fix comment typo."}, {"sha": "c37368415ea513dc1e44047f29ca397ea6e0e35e", "filename": "gcc/function.c", "status": "modified", "additions": 46, "deletions": 5, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53220215a8926ffe3aef50e7a79f8e3bb15859f3/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53220215a8926ffe3aef50e7a79f8e3bb15859f3/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=53220215a8926ffe3aef50e7a79f8e3bb15859f3", "patch": "@@ -5663,7 +5663,7 @@ match_asm_constraints_1 (rtx insn, rtx *p_sets, int noutputs)\n       rtx input, output, insns;\n       const char *constraint = ASM_OPERANDS_INPUT_CONSTRAINT (op, i);\n       char *end;\n-      int match;\n+      int match, j;\n \n       match = strtoul (constraint, &end, 10);\n       if (end == constraint)\n@@ -5672,18 +5672,59 @@ match_asm_constraints_1 (rtx insn, rtx *p_sets, int noutputs)\n       gcc_assert (match < noutputs);\n       output = SET_DEST (p_sets[match]);\n       input = RTVEC_ELT (inputs, i);\n-      if (rtx_equal_p (output, input)\n+      /* Only do the transformation for pseudos.  */\n+      if (! REG_P (output)\n+\t  || rtx_equal_p (output, input)\n \t  || (GET_MODE (input) != VOIDmode\n \t      && GET_MODE (input) != GET_MODE (output)))\n \tcontinue;\n \n+      /* We can't do anything if the output is also used as input,\n+\t as we're going to overwrite it.  */\n+      for (j = 0; j < ninputs; j++)\n+        if (reg_overlap_mentioned_p (output, RTVEC_ELT (inputs, j)))\n+\t  break;\n+      if (j != ninputs)\n+\tcontinue;\n+\n       start_sequence ();\n-      emit_move_insn (copy_rtx (output), input);\n-      RTVEC_ELT (inputs, i) = copy_rtx (output);\n+      emit_move_insn (output, input);\n       insns = get_insns ();\n       end_sequence ();\n-\n       emit_insn_before (insns, insn);\n+\n+      /* Now replace all mentions of the input with output.  We can't\n+\t just replace the occurence in inputs[i], as the register might\n+\t also be used in some other input (or even in an address of an\n+\t output), which would mean possibly increasing the number of\n+\t inputs by one (namely 'output' in addition), which might pose\n+\t a too complicated problem for reload to solve.  E.g. this situation:\n+\n+\t   asm (\"\" : \"=r\" (output), \"=m\" (input) : \"0\" (input))\n+\n+\t Here 'input' is used in two occurences as input (once for the\n+\t input operand, once for the address in the second output operand).\n+\t If we would replace only the occurence of the input operand (to\n+\t make the matching) we would be left with this:\n+\n+\t   output = input\n+\t   asm (\"\" : \"=r\" (output), \"=m\" (input) : \"0\" (output))\n+\n+\t Now we suddenly have two different input values (containing the same\n+\t value, but different pseudos) where we formerly had only one.\n+\t With more complicated asms this might lead to reload failures\n+\t which wouldn't have happen without this pass.  So, iterate over\n+\t all operands and replace all occurences of the register used.  */\n+      for (j = 0; j < noutputs; j++)\n+\tif (!rtx_equal_p (SET_DEST (p_sets[j]), output)\n+\t    && reg_overlap_mentioned_p (input, SET_DEST (p_sets[j])))\n+\t  SET_DEST (p_sets[j]) = replace_rtx (SET_DEST (p_sets[j]),\n+\t\t\t\t\t      input, output);\n+      for (j = 0; j < ninputs; j++)\n+\tif (reg_overlap_mentioned_p (input, RTVEC_ELT (inputs, j)))\n+\t  RTVEC_ELT (inputs, j) = replace_rtx (RTVEC_ELT (inputs, j),\n+\t\t\t\t\t       input, output);\n+\n       changed = true;\n     }\n "}]}