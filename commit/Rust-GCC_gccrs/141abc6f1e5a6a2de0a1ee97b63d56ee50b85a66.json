{"sha": "141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQxYWJjNmYxZTVhNmEyZGUwYTFlZTk3YjYzZDU2ZWU1MGI4NWE2Ng==", "commit": {"author": {"name": "Steve Ellcey", "email": "sellcey@cavium.com", "date": "2017-12-05T00:49:09Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2017-12-05T00:49:09Z"}, "message": "Makefile.am (ARCH_AARCH64_LINUX): Add IFUNC_OPTIONS and libatomic_la_LIBADD.\n\n2017-12-04  Steve Ellcey  <sellcey@cavium.com>\n\n\t* Makefile.am (ARCH_AARCH64_LINUX): Add IFUNC_OPTIONS and\n\tlibatomic_la_LIBADD.\n\t* config/linux/aarch64/host-config.h: New file.\n\t* configure.ac (IFUNC_RESOLVER_ARGS): Define.\n\t(ARCH_AARCH64_LINUX): New conditional for IFUNC builds.\n\t* configure.tgt (aarch64): Set ARCH and try_ifunc.\n\t(aarch64*-*-linux*) Update config_path.\n\t(aarch64*-*-linux*) Set IFUNC_RESOLVER_ARGS.\n\t* libatomic_i.h (GEN_SELECTOR): Add IFUNC_RESOLVER_ARGS argument.\n\t* Makefile.in: Regenerate.\n\t* auto-config.h.in: Regenerate.\n\t* configure: Regenerate.\n\nFrom-SVN: r255399", "tree": {"sha": "50d25ec32b7f404446f4f5da5e0991c3ae3339f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50d25ec32b7f404446f4f5da5e0991c3ae3339f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66/comments", "author": {"login": "sellcey", "id": 25938520, "node_id": "MDQ6VXNlcjI1OTM4NTIw", "avatar_url": "https://avatars.githubusercontent.com/u/25938520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sellcey", "html_url": "https://github.com/sellcey", "followers_url": "https://api.github.com/users/sellcey/followers", "following_url": "https://api.github.com/users/sellcey/following{/other_user}", "gists_url": "https://api.github.com/users/sellcey/gists{/gist_id}", "starred_url": "https://api.github.com/users/sellcey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sellcey/subscriptions", "organizations_url": "https://api.github.com/users/sellcey/orgs", "repos_url": "https://api.github.com/users/sellcey/repos", "events_url": "https://api.github.com/users/sellcey/events{/privacy}", "received_events_url": "https://api.github.com/users/sellcey/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ad8503503f69f99b17e22cf53d87fe6e15256912", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad8503503f69f99b17e22cf53d87fe6e15256912", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad8503503f69f99b17e22cf53d87fe6e15256912"}], "stats": {"total": 129, "additions": 120, "deletions": 9}, "files": [{"sha": "39656cdffc186bb6d499c148ab7b5e597374fcc6", "filename": "libatomic/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66/libatomic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66/libatomic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FChangeLog?ref=141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66", "patch": "@@ -1,3 +1,18 @@\n+2017-12-04  Steve Ellcey  <sellcey@cavium.com>\n+\n+\t* Makefile.am (ARCH_AARCH64_LINUX): Add IFUNC_OPTIONS and\n+\tlibatomic_la_LIBADD.\n+\t* config/linux/aarch64/host-config.h: New file.\n+\t* configure.ac (IFUNC_RESOLVER_ARGS): Define.\n+\t(ARCH_AARCH64_LINUX): New conditional for IFUNC builds.\n+\t* configure.tgt (aarch64): Set ARCH and try_ifunc.\n+\t(aarch64*-*-linux*) Update config_path.\n+\t(aarch64*-*-linux*) Set IFUNC_RESOLVER_ARGS.\n+\t* libatomic_i.h (GEN_SELECTOR): Add IFUNC_RESOLVER_ARGS argument.\n+\t* Makefile.in: Regenerate.\n+\t* auto-config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\n 2017-11-17  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n \n \t* configure.ac: Set CET_FLAGS, update XCFLAGS."}, {"sha": "ec36c8ef207c601bc7b3012dba0df7784c75bdd7", "filename": "libatomic/Makefile.am", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66/libatomic%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66/libatomic%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FMakefile.am?ref=141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66", "patch": "@@ -122,6 +122,10 @@ libatomic_la_LIBADD = $(foreach s,$(SIZES),$(addsuffix _$(s)_.lo,$(SIZEOBJS)))\n \n ## On a target-specific basis, include alternates to be selected by IFUNC.\n if HAVE_IFUNC\n+if ARCH_AARCH64_LINUX\n+IFUNC_OPTIONS\t     = -march=armv8.1-a\n+libatomic_la_LIBADD += $(foreach s,$(SIZES),$(addsuffix _$(s)_1_.lo,$(SIZEOBJS)))\n+endif\n if ARCH_ARM_LINUX\n IFUNC_OPTIONS\t     = -march=armv7-a+fp -DHAVE_KERNEL64\n libatomic_la_LIBADD += $(foreach s,$(SIZES),$(addsuffix _$(s)_1_.lo,$(SIZEOBJS)))"}, {"sha": "3c3db62de9186a94cd13b73daad039e19f3b0648", "filename": "libatomic/Makefile.in", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66/libatomic%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66/libatomic%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FMakefile.in?ref=141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66", "patch": "@@ -52,13 +52,14 @@ POST_UNINSTALL = :\n build_triplet = @build@\n host_triplet = @host@\n target_triplet = @target@\n-@ARCH_ARM_LINUX_TRUE@@HAVE_IFUNC_TRUE@am__append_1 = $(foreach \\\n+@ARCH_AARCH64_LINUX_TRUE@@HAVE_IFUNC_TRUE@am__append_1 = $(foreach s,$(SIZES),$(addsuffix _$(s)_1_.lo,$(SIZEOBJS)))\n+@ARCH_ARM_LINUX_TRUE@@HAVE_IFUNC_TRUE@am__append_2 = $(foreach \\\n @ARCH_ARM_LINUX_TRUE@@HAVE_IFUNC_TRUE@\ts,$(SIZES),$(addsuffix \\\n @ARCH_ARM_LINUX_TRUE@@HAVE_IFUNC_TRUE@\t_$(s)_1_.lo,$(SIZEOBJS))) \\\n @ARCH_ARM_LINUX_TRUE@@HAVE_IFUNC_TRUE@\t$(addsuffix \\\n @ARCH_ARM_LINUX_TRUE@@HAVE_IFUNC_TRUE@\t_8_2_.lo,$(SIZEOBJS))\n-@ARCH_I386_TRUE@@HAVE_IFUNC_TRUE@am__append_2 = $(addsuffix _8_1_.lo,$(SIZEOBJS))\n-@ARCH_X86_64_TRUE@@HAVE_IFUNC_TRUE@am__append_3 = $(addsuffix _16_1_.lo,$(SIZEOBJS))\n+@ARCH_I386_TRUE@@HAVE_IFUNC_TRUE@am__append_3 = $(addsuffix _8_1_.lo,$(SIZEOBJS))\n+@ARCH_X86_64_TRUE@@HAVE_IFUNC_TRUE@am__append_4 = $(addsuffix _16_1_.lo,$(SIZEOBJS))\n subdir = .\n DIST_COMMON = ChangeLog $(srcdir)/Makefile.in $(srcdir)/Makefile.am \\\n \t$(top_srcdir)/configure $(am__configure_deps) \\\n@@ -346,7 +347,8 @@ all_c_files := $(foreach dir,$(search_path),$(wildcard $(dir)/*.c))\n M_SRC = $(firstword $(filter %/$(M_FILE), $(all_c_files)))\n libatomic_la_LIBADD = $(foreach s,$(SIZES),$(addsuffix \\\n \t_$(s)_.lo,$(SIZEOBJS))) $(am__append_1) $(am__append_2) \\\n-\t$(am__append_3)\n+\t$(am__append_3) $(am__append_4)\n+@ARCH_AARCH64_LINUX_TRUE@@HAVE_IFUNC_TRUE@IFUNC_OPTIONS = -march=armv8.1-a\n @ARCH_ARM_LINUX_TRUE@@HAVE_IFUNC_TRUE@IFUNC_OPTIONS = -march=armv7-a+fp -DHAVE_KERNEL64\n @ARCH_I386_TRUE@@HAVE_IFUNC_TRUE@IFUNC_OPTIONS = -march=i586\n @ARCH_X86_64_TRUE@@HAVE_IFUNC_TRUE@IFUNC_OPTIONS = -mcx16"}, {"sha": "ab3424a759eae8c5fba17957baeac2ed8397de44", "filename": "libatomic/auto-config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66/libatomic%2Fauto-config.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66/libatomic%2Fauto-config.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fauto-config.h.in?ref=141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66", "patch": "@@ -153,6 +153,9 @@\n /* Define to 1 if you have the <unistd.h> header file. */\n #undef HAVE_UNISTD_H\n \n+/* Define ifunc resolver function argument. */\n+#undef IFUNC_RESOLVER_ARGS\n+\n /* Define to 1 if GNU symbol versioning is used for libatomic. */\n #undef LIBAT_GNU_SYMBOL_VERSIONING\n "}, {"sha": "08810a9b971edc8a8d4b1ecc3b2456e1e68fde73", "filename": "libatomic/config/linux/aarch64/host-config.h", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66/libatomic%2Fconfig%2Flinux%2Faarch64%2Fhost-config.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66/libatomic%2Fconfig%2Flinux%2Faarch64%2Fhost-config.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fconfig%2Flinux%2Faarch64%2Fhost-config.h?ref=141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66", "patch": "@@ -0,0 +1,36 @@\n+/* Copyright (C) 2017 Free Software Foundation, Inc.\n+\n+   This file is part of the GNU Atomic Library (libatomic).\n+\n+   Libatomic is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   Libatomic is distributed in the hope that it will be useful, but WITHOUT ANY\n+   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+   FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n+   more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#if HAVE_IFUNC\n+#include <stdlib.h>\n+\n+# ifdef HWCAP_ATOMICS\n+#  define IFUNC_COND_1\t(hwcap & HWCAP_ATOMICS)\n+# else\n+#  define IFUNC_COND_1\t(false)\n+# endif\n+# define IFUNC_NCOND(N)\t(1)\n+\n+#endif /* HAVE_IFUNC */\n+\n+#include_next <host-config.h>"}, {"sha": "cbba8347fd5773a3113c9f8e86770c92616a6f04", "filename": "libatomic/configure", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66/libatomic%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66/libatomic%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fconfigure?ref=141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66", "patch": "@@ -608,6 +608,8 @@ ARCH_I386_FALSE\n ARCH_I386_TRUE\n ARCH_ARM_LINUX_FALSE\n ARCH_ARM_LINUX_TRUE\n+ARCH_AARCH64_LINUX_FALSE\n+ARCH_AARCH64_LINUX_TRUE\n HAVE_IFUNC_FALSE\n HAVE_IFUNC_TRUE\n SIZES\n@@ -11118,7 +11120,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11121 \"configure\"\n+#line 11123 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11224,7 +11226,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11227 \"configure\"\n+#line 11229 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11526,6 +11528,13 @@ if test -n \"$UNSUPPORTED\"; then\n   as_fn_error \"Configuration ${target} is unsupported.\" \"$LINENO\" 5\n fi\n \n+# Write out the ifunc resolver arg type.\n+\n+cat >>confdefs.h <<_ACEOF\n+#define IFUNC_RESOLVER_ARGS $IFUNC_RESOLVER_ARGS\n+_ACEOF\n+\n+\n # Disable fallbacks to __sync routines from libgcc.  Otherwise we'll\n # make silly decisions about what the cpu can do.\n CFLAGS=\"$save_CFLAGS -fno-sync-libcalls $XCFLAGS\"\n@@ -15313,6 +15322,14 @@ else\n   HAVE_IFUNC_FALSE=\n fi\n \n+ if expr \"$config_path\" : \".* linux/aarch64 .*\" > /dev/null; then\n+  ARCH_AARCH64_LINUX_TRUE=\n+  ARCH_AARCH64_LINUX_FALSE='#'\n+else\n+  ARCH_AARCH64_LINUX_TRUE='#'\n+  ARCH_AARCH64_LINUX_FALSE=\n+fi\n+\n  if expr \"$config_path\" : \".* linux/arm .*\" > /dev/null; then\n   ARCH_ARM_LINUX_TRUE=\n   ARCH_ARM_LINUX_FALSE='#'\n@@ -15503,6 +15520,10 @@ if test -z \"${HAVE_IFUNC_TRUE}\" && test -z \"${HAVE_IFUNC_FALSE}\"; then\n   as_fn_error \"conditional \\\"HAVE_IFUNC\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${ARCH_AARCH64_LINUX_TRUE}\" && test -z \"${ARCH_AARCH64_LINUX_FALSE}\"; then\n+  as_fn_error \"conditional \\\"ARCH_AARCH64_LINUX\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n if test -z \"${ARCH_ARM_LINUX_TRUE}\" && test -z \"${ARCH_ARM_LINUX_FALSE}\"; then\n   as_fn_error \"conditional \\\"ARCH_ARM_LINUX\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5"}, {"sha": "6b11f21a03eb15d258f0c955b42865aac335b282", "filename": "libatomic/configure.ac", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66/libatomic%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66/libatomic%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fconfigure.ac?ref=141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66", "patch": "@@ -163,6 +163,10 @@ if test -n \"$UNSUPPORTED\"; then\n   AC_MSG_ERROR([Configuration ${target} is unsupported.])\n fi\n \n+# Write out the ifunc resolver arg type.\n+AC_DEFINE_UNQUOTED(IFUNC_RESOLVER_ARGS, $IFUNC_RESOLVER_ARGS,\n+\t[Define ifunc resolver function argument.])\n+\n # Disable fallbacks to __sync routines from libgcc.  Otherwise we'll\n # make silly decisions about what the cpu can do.\n CFLAGS=\"$save_CFLAGS -fno-sync-libcalls $XCFLAGS\"\n@@ -251,6 +255,8 @@ AC_SUBST(LIBS)\n AC_SUBST(SIZES)\n \n AM_CONDITIONAL(HAVE_IFUNC, test x$libat_cv_have_ifunc = xyes)\n+AM_CONDITIONAL(ARCH_AARCH64_LINUX,\n+\t       [expr \"$config_path\" : \".* linux/aarch64 .*\" > /dev/null])\n AM_CONDITIONAL(ARCH_ARM_LINUX,\n \t       [expr \"$config_path\" : \".* linux/arm .*\" > /dev/null])\n AM_CONDITIONAL(ARCH_I386,"}, {"sha": "388ae95e6f4570d9b6f04a7ed5ebb12ed3ee81bb", "filename": "libatomic/configure.tgt", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66/libatomic%2Fconfigure.tgt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66/libatomic%2Fconfigure.tgt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fconfigure.tgt?ref=141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66", "patch": "@@ -40,6 +40,14 @@ case \"${target_cpu}\" in\n   riscv*)\t\tARCH=riscv ;;\n   sh*)\t\t\tARCH=sh ;;\n \n+  aarch64*)\n+\tARCH=aarch64\n+\tcase \"${target}\" in\n+\t    aarch64*-*-linux*)\n+\t\ttry_ifunc=yes\n+\t\t;;\n+\tesac\n+\t;;\n   arm*)\n \tARCH=arm\n \tcase \"${target}\" in\n@@ -109,6 +117,11 @@ fi\n \n # Other system configury\n case \"${target}\" in\n+  aarch64*-*-linux*)\n+\t# OS support for atomic primitives.\n+\tconfig_path=\"${config_path} linux/aarch64 posix\"\n+\t;;\n+\n   arm*-*-linux*)\n \t# OS support for atomic primitives.\n \tconfig_path=\"${config_path} linux/arm posix\"\n@@ -153,3 +166,14 @@ case \"${target}\" in\n \tUNSUPPORTED=1\n \t;;\n esac\n+\n+# glibc will pass hwcap to ifunc resolver functions as an argument.\n+# The type may be different on different architectures.\n+case \"${target}\" in\n+  aarch64*-*-*)\n+\tIFUNC_RESOLVER_ARGS=\"uint64_t hwcap\"\n+\t;;\n+  *)\n+\tIFUNC_RESOLVER_ARGS=\"void\"\n+\t;;\n+esac"}, {"sha": "2ecc27aa0dfdabce54591b628f7e917672caf7e8", "filename": "libatomic/libatomic_i.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66/libatomic%2Flibatomic_i.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66/libatomic%2Flibatomic_i.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Flibatomic_i.h?ref=141abc6f1e5a6a2de0a1ee97b63d56ee50b85a66", "patch": "@@ -240,7 +240,7 @@ bool libat_is_lock_free (size_t, void *) MAN(is_lock_free);\n # if IFUNC_NCOND(N) == 1\n #  define GEN_SELECTOR(X)\t\t\t\t\t\\\n \textern typeof(C2(libat_,X)) C3(libat_,X,_i1) HIDDEN;\t\\\n-\tstatic typeof(C2(libat_,X)) * C2(select_,X) (void)\t\\\n+\tstatic typeof(C2(libat_,X)) * C2(select_,X) (IFUNC_RESOLVER_ARGS) \\\n \t{\t\t\t\t\t\t\t\\\n \t  if (IFUNC_COND_1)\t\t\t\t\t\\\n \t    return C3(libat_,X,_i1);\t\t\t\t\\\n@@ -250,7 +250,7 @@ bool libat_is_lock_free (size_t, void *) MAN(is_lock_free);\n #  define GEN_SELECTOR(X)\t\t\t\t\t\\\n \textern typeof(C2(libat_,X)) C3(libat_,X,_i1) HIDDEN;\t\\\n \textern typeof(C2(libat_,X)) C3(libat_,X,_i2) HIDDEN;\t\\\n-\tstatic typeof(C2(libat_,X)) * C2(select_,X) (void)\t\\\n+\tstatic typeof(C2(libat_,X)) * C2(select_,X) (IFUNC_RESOLVER_ARGS) \\\n \t{\t\t\t\t\t\t\t\\\n \t  if (IFUNC_COND_1)\t\t\t\t\t\\\n \t    return C3(libat_,X,_i1);\t\t\t\t\\\n@@ -263,7 +263,7 @@ bool libat_is_lock_free (size_t, void *) MAN(is_lock_free);\n \textern typeof(C2(libat_,X)) C3(libat_,X,_i1) HIDDEN;\t\\\n \textern typeof(C2(libat_,X)) C3(libat_,X,_i2) HIDDEN;\t\\\n \textern typeof(C2(libat_,X)) C3(libat_,X,_i3) HIDDEN;\t\\\n-\tstatic typeof(C2(libat_,X)) * C2(select_,X) (void)\t\\\n+\tstatic typeof(C2(libat_,X)) * C2(select_,X) (IFUNC_RESOLVER_ARGS) \\\n \t{\t\t\t\t\t\t\t\\\n \t  if (IFUNC_COND_1)\t\t\t\t\t\\\n \t    return C3(libat_,X,_i1);\t\t\t\t\\"}]}