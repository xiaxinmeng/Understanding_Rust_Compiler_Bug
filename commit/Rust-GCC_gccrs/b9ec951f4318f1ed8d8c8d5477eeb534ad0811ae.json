{"sha": "b9ec951f4318f1ed8d8c8d5477eeb534ad0811ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjllYzk1MWY0MzE4ZjFlZDhkOGM4ZDU0NzdlZWI1MzRhZDA4MTFhZQ==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2021-04-09T12:56:23Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-06-29T14:23:46Z"}, "message": "[Ada] tech debt: clean up Component_Size\n\ngcc/ada/\n\n\t* einfo.ads (Component_Bit_Offset, Component_Size): Update\n\tdocumentation: Repinfo is the package where these negative\n\tvalues are documented.\n\t* einfo-utils.adb (Known_Component_Size,\n\tKnown_Static_Component_Size, Unknown_Component_Size): Remove\n\tcalls to Implementation_Base_Type, because Component_Size is an\n\tImpl_Base_Type_Only field (see Gen_Entities).\n\t* sem_ch13.ads, sem_ch13.adb (Check_Size): Do not set Esize and\n\tRM_Size. This is unnecessary in the case of Size. For\n\tComponent_Size, it is wrong, because we would be setting the\n\tEsize and RM_Size of the component type.", "tree": {"sha": "58fa06ddc61436c57a776eb3099bb86f7f000149", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58fa06ddc61436c57a776eb3099bb86f7f000149"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9ec951f4318f1ed8d8c8d5477eeb534ad0811ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9ec951f4318f1ed8d8c8d5477eeb534ad0811ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9ec951f4318f1ed8d8c8d5477eeb534ad0811ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9ec951f4318f1ed8d8c8d5477eeb534ad0811ae/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bc7cf47c1266f9ae510c70833b5691c693c769f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bc7cf47c1266f9ae510c70833b5691c693c769f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bc7cf47c1266f9ae510c70833b5691c693c769f"}], "stats": {"total": 24, "additions": 9, "deletions": 15}, "files": [{"sha": "02ccef10f4421402601fa1c7615a07eb6e9a3b34", "filename": "gcc/ada/einfo-utils.adb", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9ec951f4318f1ed8d8c8d5477eeb534ad0811ae/gcc%2Fada%2Feinfo-utils.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9ec951f4318f1ed8d8c8d5477eeb534ad0811ae/gcc%2Fada%2Feinfo-utils.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo-utils.adb?ref=b9ec951f4318f1ed8d8c8d5477eeb534ad0811ae", "patch": "@@ -515,8 +515,8 @@ package body Einfo.Utils is\n \n    function Known_Component_Size                  (E : Entity_Id) return B is\n    begin\n-      return Component_Size (Implementation_Base_Type (E)) /= Uint_0\n-        and then Component_Size (Implementation_Base_Type (E)) /= No_Uint;\n+      return Component_Size (E) /= Uint_0\n+        and then Component_Size (E) /= No_Uint;\n    end Known_Component_Size;\n \n    function Known_Esize                           (E : Entity_Id) return B is\n@@ -556,7 +556,7 @@ package body Einfo.Utils is\n \n    function Known_Static_Component_Size           (E : Entity_Id) return B is\n    begin\n-      return Component_Size (Implementation_Base_Type (E)) > Uint_0;\n+      return Component_Size (E) > Uint_0;\n    end Known_Static_Component_Size;\n \n    function Known_Static_Esize                    (E : Entity_Id) return B is\n@@ -604,9 +604,7 @@ package body Einfo.Utils is\n \n    function Unknown_Component_Size                (E : Entity_Id) return B is\n    begin\n-      return Component_Size (Implementation_Base_Type (E)) = Uint_0\n-               or else\n-             Component_Size (Implementation_Base_Type (E)) = No_Uint;\n+      return not Known_Component_Size (E);\n    end Unknown_Component_Size;\n \n    function Unknown_Esize                         (E : Entity_Id) return B is"}, {"sha": "5298998eba52e329aa1ad9b1bcd5e072a32a99b3", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9ec951f4318f1ed8d8c8d5477eeb534ad0811ae/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9ec951f4318f1ed8d8c8d5477eeb534ad0811ae/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=b9ec951f4318f1ed8d8c8d5477eeb534ad0811ae", "patch": "@@ -669,7 +669,7 @@ package Einfo is\n --       this field is always set. A negative value is used to represent\n --       a value which is not known at compile time, and must be computed\n --       at run-time (this happens if fields of a record have variable\n---       lengths). See package Layout for details of these values.\n+--       lengths). See package Repinfo for details of these values.\n --\n --       Note: Component_Bit_Offset is redundant with respect to the fields\n --       Normalized_First_Bit and Normalized_Position, and could in principle\n@@ -691,8 +691,9 @@ package Einfo is\n --       by the front end in package Layout, or by the backend. A negative\n --       value is used to represent a value which is not known at compile\n --       time, and must be computed at run-time (this happens if the type\n---       of the component has a variable length size). See package Layout\n---       for details of these values.\n+--       of the component has a variable length size). See package Repinfo\n+--       for details of these values. Component_Size can also be negative in\n+--       an illegal program that says e.g. \"for T'Component_Size use -8;\".\n \n --    Component_Type [implementation base type only]\n --       Defined in array types and string types. References component type."}, {"sha": "76dac2c424fb9b5fdab0b2343831f4e1dc82d2e2", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9ec951f4318f1ed8d8c8d5477eeb534ad0811ae/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9ec951f4318f1ed8d8c8d5477eeb534ad0811ae/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=b9ec951f4318f1ed8d8c8d5477eeb534ad0811ae", "patch": "@@ -12479,8 +12479,6 @@ package body Sem_Ch13 is\n \n             else\n                Size_Too_Small_Error (Asiz);\n-               Set_Esize   (T, Asiz);\n-               Set_RM_Size (T, Asiz);\n             end if;\n          end;\n \n@@ -12518,8 +12516,6 @@ package body Sem_Ch13 is\n \n             if Siz < M then\n                Size_Too_Small_Error (M);\n-               Set_Esize   (T, M);\n-               Set_RM_Size (T, M);\n             else\n                Biased := True;\n             end if;"}, {"sha": "757981273dc45314309ea980c5a21f67c3a2375c", "filename": "gcc/ada/sem_ch13.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9ec951f4318f1ed8d8c8d5477eeb534ad0811ae/gcc%2Fada%2Fsem_ch13.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9ec951f4318f1ed8d8c8d5477eeb534ad0811ae/gcc%2Fada%2Fsem_ch13.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.ads?ref=b9ec951f4318f1ed8d8c8d5477eeb534ad0811ae", "patch": "@@ -125,8 +125,7 @@ package Sem_Ch13 is\n    --  set if the type is not currently biased, but biasing it is the only\n    --  way to meet the requirement. If the type is currently biased, then\n    --  this biased size is used in the initial check, and Biased is False.\n-   --  If the size is too small, and an error message is given, then both\n-   --  Esize and RM_Size are reset to the allowed minimum value in T.\n+   --  For a Component_Size clause, T is the component type.\n \n    function Has_Compatible_Representation\n      (Target_Type, Operand_Type : Entity_Id) return Boolean;"}]}