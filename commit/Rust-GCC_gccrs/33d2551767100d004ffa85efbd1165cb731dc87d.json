{"sha": "33d2551767100d004ffa85efbd1165cb731dc87d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNkMjU1MTc2NzEwMGQwMDRmZmE4NWVmYmQxMTY1Y2I3MzFkYzg3ZA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-09-26T09:16:28Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-09-26T09:16:28Z"}, "message": "[Ada] Fix ICE related to type freezing\n\n2018-09-26  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* contracts.adb (Expand_Subprogram_Contract,\n\tProcess_Preconditions_For): Apply Freeze_Expr_Types to the\n\texpression for a precondition of an expression function that is\n\ta completion, when the completion appears in the private part\n\tand the declaration it completes is in the visible part of the\n\tsame package.\n\t* freeze.adb (Freeze_Expr_Types): Do not establish the scope of\n\tthe operation if it is already installed, as will be the case\n\twhen called to analyze the contract oc the subprogram (which\n\thappens when generating code inside the subprogram body).\n\nFrom-SVN: r264602", "tree": {"sha": "2e9a021faa638f307b95c2e1fbeea3e4ba315c44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e9a021faa638f307b95c2e1fbeea3e4ba315c44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33d2551767100d004ffa85efbd1165cb731dc87d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33d2551767100d004ffa85efbd1165cb731dc87d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33d2551767100d004ffa85efbd1165cb731dc87d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33d2551767100d004ffa85efbd1165cb731dc87d/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f0f2d1fc033cbe56098f7261d91ef6a8130d0b27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0f2d1fc033cbe56098f7261d91ef6a8130d0b27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0f2d1fc033cbe56098f7261d91ef6a8130d0b27"}], "stats": {"total": 56, "additions": 50, "deletions": 6}, "files": [{"sha": "e5be5bbadff820b8efbe6ecbff17c2e0a23f143c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33d2551767100d004ffa85efbd1165cb731dc87d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33d2551767100d004ffa85efbd1165cb731dc87d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=33d2551767100d004ffa85efbd1165cb731dc87d", "patch": "@@ -1,3 +1,16 @@\n+2018-09-26  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* contracts.adb (Expand_Subprogram_Contract,\n+\tProcess_Preconditions_For): Apply Freeze_Expr_Types to the\n+\texpression for a precondition of an expression function that is\n+\ta completion, when the completion appears in the private part\n+\tand the declaration it completes is in the visible part of the\n+\tsame package.\n+\t* freeze.adb (Freeze_Expr_Types): Do not establish the scope of\n+\tthe operation if it is already installed, as will be the case\n+\twhen called to analyze the contract oc the subprogram (which\n+\thappens when generating code inside the subprogram body).\n+\n 2018-09-26  Maroua Maalej  <maalej@adacore.com>\n \n \t* sem_spark.adb (Check_Param_In, Setup_Parameter_Or_Global):"}, {"sha": "136c05c66d1f84116988878be2b9800d4304fd9d", "filename": "gcc/ada/contracts.adb", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33d2551767100d004ffa85efbd1165cb731dc87d/gcc%2Fada%2Fcontracts.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33d2551767100d004ffa85efbd1165cb731dc87d/gcc%2Fada%2Fcontracts.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.adb?ref=33d2551767100d004ffa85efbd1165cb731dc87d", "patch": "@@ -33,6 +33,7 @@ with Exp_Prag; use Exp_Prag;\n with Exp_Tss;  use Exp_Tss;\n with Exp_Util; use Exp_Util;\n with Freeze;   use Freeze;\n+with Lib;      use Lib;\n with Namet;    use Namet;\n with Nlists;   use Nlists;\n with Nmake;    use Nmake;\n@@ -591,7 +592,8 @@ package body Contracts is\n          if Skip_Assert_Exprs then\n             null;\n \n-         --  Otherwise analyze the pre/postconditions. Their expressions\n+         --  Otherwise analyze the pre/postconditions.\n+         --  If these come from an aspect specification, their expressions\n          --  might include references to types that are not frozen yet, in the\n          --  case where the body is a rewritten expression function that is a\n          --  completion, so freeze all types within before constructing the\n@@ -2856,19 +2858,39 @@ package body Contracts is\n          procedure Process_Preconditions_For (Subp_Id : Entity_Id) is\n             Items : constant Node_Id := Contract (Subp_Id);\n \n+            Bod       : constant Node_Id := Unit_Declaration_Node (Body_Id);\n             Decl      : Node_Id;\n+            Freeze_T  : Boolean;\n             Prag      : Node_Id;\n             Subp_Decl : Node_Id;\n \n          begin\n-            --  Process the contract\n+            --  Process the contract. If the body is an expression function\n+            --  that is a completion, freeze types within, because this may\n+            --  not have been done yet, when the subprogram declaration and\n+            --  its completion by an expression function appear in distinct\n+            --  declarative lists of the same unit (visible and private).\n+\n+            Freeze_T := Was_Expression_Function (Bod)\n+                          and then Sloc (Body_Id) /= Sloc (Subp_Id)\n+                          and then In_Same_Source_Unit (Body_Id, Subp_Id)\n+                          and then List_Containing (Bod) /=\n+                            List_Containing (Unit_Declaration_Node (Subp_Id))\n+                          and then not In_Instance;\n \n             if Present (Items) then\n                Prag := Pre_Post_Conditions (Items);\n                while Present (Prag) loop\n                   if Pragma_Name (Prag) = Name_Precondition\n                     and then Is_Checked (Prag)\n                   then\n+                     if Freeze_T\n+                        and then Present (Corresponding_Aspect (Prag))\n+                     then\n+                        Freeze_Expr_Types (Subp_Id, Standard_Boolean,\n+                          Expression (Corresponding_Aspect (Prag)), Bod);\n+                     end if;\n+\n                      Prepend_To_Decls_Or_Save (Prag);\n                   end if;\n "}, {"sha": "4ff0d385ae48b4e4ab73a6a6f39df8d4373d6c34", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33d2551767100d004ffa85efbd1165cb731dc87d/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33d2551767100d004ffa85efbd1165cb731dc87d/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=33d2551767100d004ffa85efbd1165cb731dc87d", "patch": "@@ -7824,11 +7824,20 @@ package body Freeze is\n       --  minimum decoration needed to locate referenced unfrozen types\n       --  without adding any decoration to the function expression.\n \n-      Push_Scope (Def_Id);\n-      Install_Formals (Def_Id);\n+      --  This routine is also applied to expressions in the contract for\n+      --  the subprogram. If that happens when expanding the code for\n+      --  pre/postconditions during expansion of the subprogram body, the\n+      --  subprogram is already installed.\n \n-      Preanalyze_Spec_Expression (Dup_Expr, Typ);\n-      End_Scope;\n+      if Def_Id /= Current_Scope then\n+         Push_Scope (Def_Id);\n+         Install_Formals (Def_Id);\n+\n+         Preanalyze_Spec_Expression (Dup_Expr, Typ);\n+         End_Scope;\n+      else\n+         Preanalyze_Spec_Expression (Dup_Expr, Typ);\n+      end if;\n \n       --  Restore certain attributes of Def_Id since the preanalysis may\n       --  have introduced itypes to this scope, thus modifying attributes"}]}