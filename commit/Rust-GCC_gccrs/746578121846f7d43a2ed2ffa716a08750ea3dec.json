{"sha": "746578121846f7d43a2ed2ffa716a08750ea3dec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ2NTc4MTIxODQ2ZjdkNDNhMmVkMmZmYTcxNmEwODc1MGVhM2RlYw==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2008-11-15T05:03:56Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2008-11-15T05:03:56Z"}, "message": "re PR fortran/37988 (Edit descriptor checking (compile time) for \"<Holerith>T)\")\n\n2008-11-14  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/37988\n\t* io.c (enum format_token): For readability replace FMT_POS with FMT_T,\n\tFMT_TL, and FMT_TR.  (format_lex): Use new enumerators. (check_format):\n\tAdd check for missing positive integer.\n\nFrom-SVN: r141879", "tree": {"sha": "6ee9440230204afb5acd2f4057a1e4489191d9fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ee9440230204afb5acd2f4057a1e4489191d9fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/746578121846f7d43a2ed2ffa716a08750ea3dec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/746578121846f7d43a2ed2ffa716a08750ea3dec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/746578121846f7d43a2ed2ffa716a08750ea3dec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/746578121846f7d43a2ed2ffa716a08750ea3dec/comments", "author": null, "committer": null, "parents": [{"sha": "e344d690303de86e22ac633c2462ed2521320f86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e344d690303de86e22ac633c2462ed2521320f86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e344d690303de86e22ac633c2462ed2521320f86"}], "stats": {"total": 43, "additions": 35, "deletions": 8}, "files": [{"sha": "c3b58b5312caa7a18674118120cff0036ad2b54f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/746578121846f7d43a2ed2ffa716a08750ea3dec/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/746578121846f7d43a2ed2ffa716a08750ea3dec/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=746578121846f7d43a2ed2ffa716a08750ea3dec", "patch": "@@ -1,3 +1,10 @@\n+2008-11-14  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/37988\n+\t* io.c (enum format_token): For readability replace FMT_POS with FMT_T,\n+\tFMT_TL, and FMT_TR.  (format_lex): Use new enumerators. (check_format):\n+\tAdd check for missing positive integer.\n+\n 2008-10-14  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/38033"}, {"sha": "1c42a96d714c2b7a9b5f85e024cda562e508756d", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 28, "deletions": 8, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/746578121846f7d43a2ed2ffa716a08750ea3dec/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/746578121846f7d43a2ed2ffa716a08750ea3dec/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=746578121846f7d43a2ed2ffa716a08750ea3dec", "patch": "@@ -107,10 +107,10 @@ static gfc_dt *current_dt;\n typedef enum\n {\n   FMT_NONE, FMT_UNKNOWN, FMT_SIGNED_INT, FMT_ZERO, FMT_POSINT, FMT_PERIOD,\n-  FMT_COMMA, FMT_COLON, FMT_SLASH, FMT_DOLLAR, FMT_POS, FMT_LPAREN,\n+  FMT_COMMA, FMT_COLON, FMT_SLASH, FMT_DOLLAR, FMT_LPAREN,\n   FMT_RPAREN, FMT_X, FMT_SIGN, FMT_BLANK, FMT_CHAR, FMT_P, FMT_IBOZ, FMT_F,\n   FMT_E, FMT_EXT, FMT_G, FMT_L, FMT_A, FMT_D, FMT_H, FMT_END, FMT_ERROR, FMT_DC,\n-  FMT_DP\n+  FMT_DP, FMT_T, FMT_TR, FMT_TL\n }\n format_token;\n \n@@ -314,10 +314,18 @@ format_lex (void)\n \n     case 'T':\n       c = next_char_not_space (&error);\n-      if (c != 'L' && c != 'R')\n-\tunget_char ();\n-\n-      token = FMT_POS;\n+      switch (c)\n+\t{\n+\tcase 'L':\n+\t  token = FMT_TL;\n+\t  break;\n+\tcase 'R':\n+\t  token = FMT_TR;\n+\t  break;\n+\tdefault:\n+\t  token = FMT_T;\n+\t  unget_char ();\n+\t}\n       break;\n \n     case '(':\n@@ -596,7 +604,9 @@ check_format (bool is_input)\n \n       goto finished;\n \n-    case FMT_POS:\n+    case FMT_T:\n+    case FMT_TL:\n+    case FMT_TR:\n     case FMT_IBOZ:\n     case FMT_F:\n     case FMT_E:\n@@ -646,7 +656,17 @@ check_format (bool is_input)\n \n       goto optional_comma;\n \n-    case FMT_POS:\n+    case FMT_T:\n+    case FMT_TL:\n+    case FMT_TR:\n+      t = format_lex ();\n+      if (t != FMT_POSINT)\n+\t{\n+\t  error = _(\"Positive width required with T descriptor\");\n+\t  goto syntax;\n+\t}\n+      break;\n+\n     case FMT_L:\n       t = format_lex ();\n       if (t == FMT_ERROR)"}]}