{"sha": "7c7107778f16c2db6e97e73fdec6d6606b619864", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M3MTA3Nzc4ZjE2YzJkYjZlOTdlNzNmZGVjNmQ2NjA2YjYxOTg2NA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-01-29T11:43:10Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-01-29T11:43:10Z"}, "message": "ipa: Fix removal of multi-target speculation.\n\n\t* cgraph.c (cgraph_edge::resolve_speculation): Only lookup direct edge\n\tif called on indirect edge.\n\t(cgraph_edge::redirect_call_stmt_to_callee): Lookup indirect edge of\n\tspeculative call if needed.\n\n\t* gcc.dg/tree-prof/indir-call-prof-2.c: New testcase.", "tree": {"sha": "cde725b3ee08653f39c58d1c724feb3f6a2b94d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cde725b3ee08653f39c58d1c724feb3f6a2b94d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c7107778f16c2db6e97e73fdec6d6606b619864", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c7107778f16c2db6e97e73fdec6d6606b619864", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c7107778f16c2db6e97e73fdec6d6606b619864", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c7107778f16c2db6e97e73fdec6d6606b619864/comments", "author": null, "committer": null, "parents": [{"sha": "87c3fcfa6bbb5c372d4e275276d21f601d0b62b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87c3fcfa6bbb5c372d4e275276d21f601d0b62b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87c3fcfa6bbb5c372d4e275276d21f601d0b62b0"}], "stats": {"total": 54, "additions": 52, "deletions": 2}, "files": [{"sha": "504486cb444cca4269842eb5f22a74758b753cff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c7107778f16c2db6e97e73fdec6d6606b619864/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c7107778f16c2db6e97e73fdec6d6606b619864/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c7107778f16c2db6e97e73fdec6d6606b619864", "patch": "@@ -1,3 +1,10 @@\n+2020-01-28  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* cgraph.c (cgraph_edge::resolve_speculation): Only lookup direct edge\n+\tif called on indirect edge.\n+\t(cgraph_edge::redirect_call_stmt_to_callee): Lookup indirect edge of\n+\tspeculative call if needed.\n+\n 2020-01-29  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/93428"}, {"sha": "294b2d392fdbec82363175f8bc4f7e8720a66f44", "filename": "gcc/cgraph.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c7107778f16c2db6e97e73fdec6d6606b619864/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c7107778f16c2db6e97e73fdec6d6606b619864/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=7c7107778f16c2db6e97e73fdec6d6606b619864", "patch": "@@ -1189,7 +1189,10 @@ cgraph_edge::resolve_speculation (cgraph_edge *edge, tree callee_decl)\n   ipa_ref *ref;\n \n   gcc_assert (edge->speculative && (!callee_decl || edge->callee));\n-  e2 = edge->first_speculative_call_target ();\n+  if (!edge->callee)\n+    e2 = edge->first_speculative_call_target ();\n+  else\n+    e2 = edge;\n   ref = e2->speculative_call_target_ref ();\n   edge = edge->speculative_call_indirect_edge ();\n   if (!callee_decl\n@@ -1364,7 +1367,8 @@ cgraph_edge::redirect_call_stmt_to_callee (cgraph_edge *e)\n       /* If there already is an direct call (i.e. as a result of inliner's\n \t substitution), forget about speculating.  */\n       if (decl)\n-\te = make_direct (e, cgraph_node::get (decl));\n+\te = make_direct (e->speculative_call_indirect_edge (),\n+\t\t\t cgraph_node::get (decl));\n       else\n \t{\n \t  /* Be sure we redirect all speculative targets before poking"}, {"sha": "055188488293a26709a05317c07954eba2008ac3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c7107778f16c2db6e97e73fdec6d6606b619864/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c7107778f16c2db6e97e73fdec6d6606b619864/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7c7107778f16c2db6e97e73fdec6d6606b619864", "patch": "@@ -1,3 +1,7 @@\n+2020-01-28  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* gcc.dg/tree-prof/indir-call-prof-2.c: New testcase.\n+\n 2020-01-29  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR testsuite/93393"}, {"sha": "bbba0521018b3a063f1a76b66233f70551c05344", "filename": "gcc/testsuite/gcc.dg/tree-prof/indir-call-prof-2.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c7107778f16c2db6e97e73fdec6d6606b619864/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Findir-call-prof-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c7107778f16c2db6e97e73fdec6d6606b619864/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Findir-call-prof-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Findir-call-prof-2.c?ref=7c7107778f16c2db6e97e73fdec6d6606b619864", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-options \"-O2 -fno-early-inlining -fdump-ipa-profile-optimized -fdump-ipa-afdo\" } */\n+volatile int one;\n+static int\n+add1 (int val)\n+{\n+  return val += one;\n+}\n+\n+static int\n+sub1 (int val)\n+{\n+  return val -= one;\n+}\n+\n+static int\n+do_op (int val, int (*fnptr) (int))\n+{\n+  return fnptr (val);\n+}\n+\n+int\n+main (void)\n+{\n+  int i, val = 0;\n+  for (i = 0; i < 100000; i++)\n+    {\n+      val = do_op (val, add1);\n+      val = do_op (val, sub1);\n+    }\n+  return val;\n+}\n+/* { dg-final-use-not-autofdo { scan-ipa-dump \"Indirect call -> direct call.* add1 .will resolve by ipa-profile\" \"profile\"} } */\n+/* { dg-final-use-not-autofdo { scan-ipa-dump \"Indirect call -> direct call.* sub1 .will resolve by ipa-profile\" \"profile\"} } */\n+/* { dg-final-use-autofdo { scan-ipa-dump \"Indirect call -> direct call.* add1 .will resolve by ipa-profile\" \"afdo\"} } */\n+/* { dg-final-use-autofdo { scan-ipa-dump \"Indirect call -> direct call.* sub1 .will resolve by ipa-profile\" \"afdo\"} } */"}]}