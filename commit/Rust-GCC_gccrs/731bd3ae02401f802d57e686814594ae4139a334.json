{"sha": "731bd3ae02401f802d57e686814594ae4139a334", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzMxYmQzYWUwMjQwMWY4MDJkNTdlNjg2ODE0NTk0YWU0MTM5YTMzNA==", "commit": {"author": {"name": "Giovanni Bajo", "email": "giovannibajo@gcc.gnu.org", "date": "2004-01-10T01:22:06Z"}, "committer": {"name": "Giovanni Bajo", "email": "giovannibajo@gcc.gnu.org", "date": "2004-01-10T01:22:06Z"}, "message": "DR 337 PR c++/9256\n\n\tDR 337\n\tPR c++/9256\n\t* g++.dg/other/abstract1.C: New test.\n\nFrom-SVN: r75619", "tree": {"sha": "e7ab4e31ac294b08c30411b19de19a87b4d61f31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7ab4e31ac294b08c30411b19de19a87b4d61f31"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/731bd3ae02401f802d57e686814594ae4139a334", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/731bd3ae02401f802d57e686814594ae4139a334", "html_url": "https://github.com/Rust-GCC/gccrs/commit/731bd3ae02401f802d57e686814594ae4139a334", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/731bd3ae02401f802d57e686814594ae4139a334/comments", "author": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfb91b67b887d59ba1d9fff08fcd38f8b16d766f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfb91b67b887d59ba1d9fff08fcd38f8b16d766f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfb91b67b887d59ba1d9fff08fcd38f8b16d766f"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "0d4b3d6438ed6f58aee309510f078cbdce368fab", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/731bd3ae02401f802d57e686814594ae4139a334/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/731bd3ae02401f802d57e686814594ae4139a334/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=731bd3ae02401f802d57e686814594ae4139a334", "patch": "@@ -1,3 +1,9 @@\n+2004-01-10  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n+\n+\tDR 337\n+\tPR c++/9256\n+\t* g++.dg/other/abstract1.C: New test.\n+\n 2004-01-09  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* g++.dg/lookup/strong-using-1.C: New."}, {"sha": "86962c7bc3a5dbee1ced2faf59d42ebc42c9a142", "filename": "gcc/testsuite/g++.dg/other/abstract1.C", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/731bd3ae02401f802d57e686814594ae4139a334/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fabstract1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/731bd3ae02401f802d57e686814594ae4139a334/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fabstract1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fabstract1.C?ref=731bd3ae02401f802d57e686814594ae4139a334", "patch": "@@ -0,0 +1,59 @@\n+// { dg-do compile }\n+// Contributed by <giovannibajo at gcc dot gnu dot org>,\n+//                <pavel_vozenilek at hotmail dot com>,\n+//                <bangerth at dealii dot org>\n+// c++/9256: Make sure that a pointer to an array of abstract elements\n+//  cannot be created, not even during template substitution (DR337).\n+\n+struct Abstract { virtual void f() = 0; };  // { dg-error \"\" } \n+struct Complete { void f(); };\n+\n+\n+/*\n+ * TEST 1\n+ * Arrays of abstract elements cannot be declared.\n+ */\n+\n+Abstract a0[2];        // { dg-error \"\" }\n+Abstract (*a1)[2];     // { dg-error \"\" }\n+Abstract (**a2)[2];    // { dg-error \"\" }\n+Abstract (***a3)[2];   // { dg-error \"\" }\n+Abstract *a4;\n+Abstract *a5[2];\n+Abstract (*a6[2])[2];  // { dg-error \"\" }\n+Abstract **a7[2];\n+Abstract *(*a8[2])[2];  \n+Abstract (**a9[2])[2]; // { dg-error \"\" }\n+\n+/*\n+ * TEST 2\n+ * If a pointer to an array of abstract elements is created during template\n+ *  instantiation, an error should occur.\n+ */\n+\n+template <class T> struct K {\n+  T (*a)[2];   // { dg-error \"abstract class type\" }\n+};\n+\n+template struct K<Abstract>;  // { dg-error \"from here\" }\n+\n+\n+\n+/*\n+ * TEST 3\n+ * Deducing an array of abstract elements during type deduction is a silent\n+ *  failure (rejects overload).\n+ */\n+\n+template <bool> struct StaticAssert;\n+template <> struct StaticAssert<true> {};\n+\n+typedef char Yes;\n+typedef struct { char x[2]; } No;\n+\n+template<typename U> No  is_abstract(U (*k)[1]);\n+template<typename U> Yes is_abstract(...);\n+\n+StaticAssert<sizeof(is_abstract<Abstract>(0)) == sizeof(Yes)> b1;\n+StaticAssert<sizeof(is_abstract<Complete>(0)) == sizeof(No)> b2;\n+StaticAssert<sizeof(is_abstract<int>(0)) == sizeof(No)> b3;"}]}