{"sha": "258bd5dcfde78204c66bd632f26b347260a2bca1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU4YmQ1ZGNmZGU3ODIwNGM2NmJkNjMyZjI2YjM0NzI2MGEyYmNhMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-07-04T17:20:46Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-07-04T17:20:46Z"}, "message": "trans-intrinsic.c (gfc_conv_intrinsic_minmaxloc): For integer maxloc initialize limit to -huge-1 rather than just -huge.\n\n\t* trans-intrinsic.c (gfc_conv_intrinsic_minmaxloc): For integer\n\tmaxloc initialize limit to -huge-1 rather than just -huge.\n\n\t* gfortran.dg/maxloc_1.f90: New test.\n\nFrom-SVN: r149236", "tree": {"sha": "4924aec8c0534d0cb5483fb70e3c6f1b3b2f53d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4924aec8c0534d0cb5483fb70e3c6f1b3b2f53d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/258bd5dcfde78204c66bd632f26b347260a2bca1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/258bd5dcfde78204c66bd632f26b347260a2bca1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/258bd5dcfde78204c66bd632f26b347260a2bca1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/258bd5dcfde78204c66bd632f26b347260a2bca1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bd5b2c2d0788f7e35b489171d945b35537899255", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd5b2c2d0788f7e35b489171d945b35537899255", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd5b2c2d0788f7e35b489171d945b35537899255"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "6b66cbd89be85ca54e11fbe064fbeae6c3cf693f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/258bd5dcfde78204c66bd632f26b347260a2bca1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/258bd5dcfde78204c66bd632f26b347260a2bca1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=258bd5dcfde78204c66bd632f26b347260a2bca1", "patch": "@@ -1,3 +1,8 @@\n+2009-07-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_minmaxloc): For integer\n+\tmaxloc initialize limit to -huge-1 rather than just -huge.\n+\n 2009-07-04  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/40593"}, {"sha": "dd3b3cdff7b4dfbe1d3fcbdde230afda8b878fde", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/258bd5dcfde78204c66bd632f26b347260a2bca1/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/258bd5dcfde78204c66bd632f26b347260a2bca1/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=258bd5dcfde78204c66bd632f26b347260a2bca1", "patch": "@@ -2190,12 +2190,12 @@ gfc_conv_intrinsic_minmaxloc (gfc_se * se, gfc_expr * expr, enum tree_code op)\n      possible value is HUGE in both cases.  */\n   if (op == GT_EXPR)\n     tmp = fold_build1 (NEGATE_EXPR, TREE_TYPE (tmp), tmp);\n-  gfc_add_modify (&se->pre, limit, tmp);\n-\n   if (op == GT_EXPR && expr->ts.type == BT_INTEGER)\n     tmp = fold_build2 (MINUS_EXPR, TREE_TYPE (tmp), tmp,\n \t\t       build_int_cst (type, 1));\n \n+  gfc_add_modify (&se->pre, limit, tmp);\n+\n   /* Initialize the scalarizer.  */\n   gfc_init_loopinfo (&loop);\n   gfc_add_ss_to_loop (&loop, arrayss);"}, {"sha": "1582c882dac496b0069aacf66e8e8f2cf2fabe3e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/258bd5dcfde78204c66bd632f26b347260a2bca1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/258bd5dcfde78204c66bd632f26b347260a2bca1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=258bd5dcfde78204c66bd632f26b347260a2bca1", "patch": "@@ -1,3 +1,7 @@\n+2009-07-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gfortran.dg/maxloc_1.f90: New test.\n+\n 2009-07-04  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/40593"}, {"sha": "41115eda9819a7099fc0a95354c993f7e8f1f5f2", "filename": "gcc/testsuite/gfortran.dg/maxloc_1.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/258bd5dcfde78204c66bd632f26b347260a2bca1/gcc%2Ftestsuite%2Fgfortran.dg%2Fmaxloc_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/258bd5dcfde78204c66bd632f26b347260a2bca1/gcc%2Ftestsuite%2Fgfortran.dg%2Fmaxloc_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmaxloc_1.f90?ref=258bd5dcfde78204c66bd632f26b347260a2bca1", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do run }\n+  integer :: a(3), n\n+  a(1) = -huge(n)\n+  a(2) = -huge(n)\n+  a(3) = -huge(n)\n+  a(1) = a(1) - 1\n+  a(2) = a(2) - 1\n+  a(3) = a(3) - 1\n+  n = maxloc (a, dim = 1)\n+  if (n .ne. 1) call abort\n+  a(2) = -huge(n)\n+  n = maxloc (a, dim = 1)\n+  if (n .ne. 2) call abort\n+end"}]}