{"sha": "3364c33bf7a20b4444090d6a14be3e921dadc220", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM2NGMzM2JmN2EyMGI0NDQ0MDkwZDZhMTRiZTNlOTIxZGFkYzIyMA==", "commit": {"author": {"name": "Jerry Quinn", "email": "jlquinn@optonline.net", "date": "2002-12-17T14:38:59Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-12-17T14:38:59Z"}, "message": "* doc/invoke.texi: Minor spelling and grammar fixes.\n\nFrom-SVN: r60212", "tree": {"sha": "f624580d3896d000dd8c2e683569cd655d17afdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f624580d3896d000dd8c2e683569cd655d17afdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3364c33bf7a20b4444090d6a14be3e921dadc220", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3364c33bf7a20b4444090d6a14be3e921dadc220", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3364c33bf7a20b4444090d6a14be3e921dadc220", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3364c33bf7a20b4444090d6a14be3e921dadc220/comments", "author": {"login": "jlquinn", "id": 826841, "node_id": "MDQ6VXNlcjgyNjg0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/826841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlquinn", "html_url": "https://github.com/jlquinn", "followers_url": "https://api.github.com/users/jlquinn/followers", "following_url": "https://api.github.com/users/jlquinn/following{/other_user}", "gists_url": "https://api.github.com/users/jlquinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlquinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlquinn/subscriptions", "organizations_url": "https://api.github.com/users/jlquinn/orgs", "repos_url": "https://api.github.com/users/jlquinn/repos", "events_url": "https://api.github.com/users/jlquinn/events{/privacy}", "received_events_url": "https://api.github.com/users/jlquinn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d65f135a99c54aa00ce988f093c4319aed5d7ad9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d65f135a99c54aa00ce988f093c4319aed5d7ad9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d65f135a99c54aa00ce988f093c4319aed5d7ad9"}], "stats": {"total": 50, "additions": 28, "deletions": 22}, "files": [{"sha": "c7b307cae9f13df5a6b6babea8c7a14ad53fd17c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3364c33bf7a20b4444090d6a14be3e921dadc220/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3364c33bf7a20b4444090d6a14be3e921dadc220/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3364c33bf7a20b4444090d6a14be3e921dadc220", "patch": "@@ -1,3 +1,7 @@\n+2002-12-17  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* doc/invoke.texi: Minor spelling and grammar fixes.\n+\n 2002-12-17  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* config/s390/s390.c (s390_output_constant_pool): Replace"}, {"sha": "007d1bb3c6a27aef311bae27ca916105fe36521d", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 24, "deletions": 22, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3364c33bf7a20b4444090d6a14be3e921dadc220/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3364c33bf7a20b4444090d6a14be3e921dadc220/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=3364c33bf7a20b4444090d6a14be3e921dadc220", "patch": "@@ -1543,7 +1543,7 @@ You should rewrite your code to avoid these warnings if you are\n concerned about the fact that code generated by G++ may not be binary\n compatible with code generated by other compilers.\n \n-The known incompatibilites at this point include:\n+The known incompatibilities at this point include:\n \n @itemize @bullet\n \n@@ -1625,7 +1625,7 @@ void f(typename Q<int>::X) @{@}\n @end smallexample\n \n @noindent\n-Instantions of these templates may be mangled incorrectly.\n+Instantiations of these templates may be mangled incorrectly.\n \n @end itemize\n \n@@ -3177,7 +3177,7 @@ Dump after the second CSE pass (including the jump optimization that\n sometimes follows CSE), to @file{@var{file}.17.cse2}.\n @item u\n @opindex du\n-Dump after null pointer ellimination pass ti @file{@var{file}.08.null}.\n+Dump after null pointer elimination pass to @file{@var{file}.08.null}.\n @item w\n @opindex dw\n Dump after the second flow pass, to @file{@var{file}.26.flow2}.\n@@ -3542,7 +3542,7 @@ assembler code in its own right.\n @opindex finline-limit\n By default, gcc limits the size of functions that can be inlined.  This flag\n allows the control of this limit for functions that are explicitly marked as\n-inline (ie marked with the inline keyword or defined within the class\n+inline (i.e., marked with the inline keyword or defined within the class\n definition in c++).  @var{n} is the size of functions that can be inlined in\n number of pseudo instructions (not counting parameter handling).  The default\n value of @var{n} is 600.\n@@ -3575,10 +3575,11 @@ optimization is turned on, use the @option{-fno-keep-static-consts} option.\n \n @item -fmerge-constants\n Attempt to merge identical constants (string constants and floating point\n-constants) accross compilation units.\n+constants) across compilation units.\n \n-This option is default for optimized compilation if assembler and linker\n-support it.  Use @option{-fno-merge-constants} to inhibit this behavior.\n+This option is the default for optimized compilation if the assembler and\n+linker support it.  Use @option{-fno-merge-constants} to inhibit this\n+behavior.\n \n @item -fmerge-all-constants\n Attempt to merge identical constants and identical variables.\n@@ -3713,7 +3714,7 @@ The default is @option{-fzero-initialized-in-bss}.\n @opindex fbounds-check\n For front-ends that support it, generate additional code to check that\n indices used to access arrays are within the declared range.  This is\n-currenly only supported by the Java and Fortran 77 front-ends, where\n+currently only supported by the Java and Fortran 77 front-ends, where\n this option defaults to true and false respectively.\n \n @end table\n@@ -3776,7 +3777,7 @@ This pass also performs global constant and copy propagation.\n \n @emph{Note:} When compiling a program using computed gotos, a GCC\n extension, you may get better runtime performance if you disable\n-the global common subexpression elmination pass by adding\n+the global common subexpression elimination pass by adding\n @option{-fno-gcse} to the command line.\n \n @item -fgcse-lm\n@@ -4035,7 +4036,7 @@ taken branches and improve code locality. This is implemented by using special\n subsections @code{text.hot} for most frequently executed functions and\n @code{text.unlikely} for unlikely executed functions.  Reordering is done by\n the linker so object file format must support named sections and linker must\n-place them in resonable way.\n+place them in a reasonable way.\n \n Also profile feedback must be available in to make this option effective.  See\n @option{-fprofile-arcs} for details.\n@@ -4239,16 +4240,17 @@ function given basic block needs to have to be considered hot\n @item tracer-dynamic-coverage\n @itemx tracer-dynamic-coverage-feedback\n \n-This value is used to limit superblock formation once given percentage of\n-executed instructions is covered.  This limits unnecesary code size expansion.\n+This value is used to limit superblock formation once the given percentage of\n+executed instructions is covered.  This limits unnecessary code size\n+expansion.\n \n The @option{tracer-dynamic-coverage-feedback} is used only when profile\n feedback is available.  The real profiles (as opposed to statically estimated\n ones) are much less balanced allowing the threshold to be larger value.\n \n @item tracer-max-code-growth\n Stop tail duplication once code growth has reached given percentage.  This is\n-rather hokey argument, as most of the duplicates will be elliminated later in\n+rather hokey argument, as most of the duplicates will be eliminated later in\n cross jumping, so it may be set to much higher values than is the desired code\n growth.\n \n@@ -4263,7 +4265,7 @@ threshold (in percent).\n Stop forward growth if the best edge do have probability lower than this\n threshold.\n \n-Similary to @option{tracer-dynamic-coverage} two values are present, one for\n+Similarly to @option{tracer-dynamic-coverage} two values are present, one for\n compilation for profile feedback and one for compilation without.  The value\n for compilation with profile feedback needs to be more conservative (higher) in\n order to make tracer effective.\n@@ -4585,7 +4587,7 @@ If a standard system include directory, or a directory specified with\n option will be ignored.  The directory will still be searched but as a\n system directory at its normal position in the system include chain.\n This is to ensure that GCC's procedure to fix buggy system headers and\n-the ordering for the include_next directive are not inadvertantly changed.\n+the ordering for the include_next directive are not inadvertently changed.\n If you really need to change the search order for system directories,\n use the @option{-nostdinc} and/or @option{-isystem} options.\n \n@@ -6813,7 +6815,7 @@ The @option{-mcpu} options automatically enable or disable other\n \n @table @samp\n @item common\n-@option{-mno-power}, @option{-mno-powerc}\n+@option{-mno-power}, @option{-mno-powerpc}\n \n @item power\n @itemx power2\n@@ -7513,7 +7515,7 @@ In processor names, a final @samp{000} can be abbreviated as @samp{k}\n GCC defines two macros based on the value of this option.  The first\n is @samp{_MIPS_ARCH}, which gives the name of target architecture, as\n a string.  The second has the form @samp{_MIPS_ARCH_@var{foo}},\n-where @var{foo} is the capitialized value of @samp{_MIPS_ARCH}@.\n+where @var{foo} is the capitalized value of @samp{_MIPS_ARCH}@.\n For example, @samp{-march=r2000} will set @samp{_MIPS_ARCH}\n to @samp{\"r2000\"} and define the macro @samp{_MIPS_ARCH_R2000}.\n \n@@ -7924,7 +7926,7 @@ for @var{unit} are:\n @item 387\n Use the standard 387 floating point coprocessor present majority of chips and\n emulated otherwise.  Code compiled with this option will run almost everywhere.\n-The temporary results are computed in 80bit precesion instead of precision\n+The temporary results are computed in 80bit precision instead of precision\n specified by the type resulting in slightly different results compared to most\n of other chips. See @option{-ffloat-store} for more detailed description.\n \n@@ -7950,7 +7952,7 @@ code that expects temporaries to be 80bit.\n This is the default choice for x86-64 compiler.\n \n @item sse,387\n-Attempt to utilize both instruction sets at once.  This effectivly double the\n+Attempt to utilize both instruction sets at once.  This effectively double the\n amount of available registers and on chips with separate execution units for\n 387 and SSE the execution resources too.  Use this option with care, as it is\n still experimental, because gcc register allocator does not model separate\n@@ -8719,7 +8721,7 @@ arithmetic instead of IEEE single and double precision.\n @opindex mno-explicit-relocs\n Older Alpha assemblers provided no way to generate symbol relocations\n except via assembler macros.  Use of these macros does not allow\n-optimial instruction scheduling.  GNU binutils as of version 2.12\n+optimal instruction scheduling.  GNU binutils as of version 2.12\n supports a new syntax that allows the compiler to explicitly mark\n which relocations should apply to which instructions.  This option\n is mostly useful for debugging, as GCC detects the capabilities of\n@@ -9805,7 +9807,7 @@ targets default to @option{-m64}.\n @opindex mmvcle\n @opindex mno-mvcle\n Generate (or do not generate) code using the @code{mvcle} instruction\n-to perform block moves.  When @option{-mno-mvcle} is specifed,\n+to perform block moves.  When @option{-mno-mvcle} is specified,\n use a @code{mvc} loop instead.  This is the default.\n \n @item -mdebug\n@@ -10819,7 +10821,7 @@ Pack all structure members together without holes.\n \n @strong{Warning:} the @option{-fpack-struct} switch causes GCC to generate\n code that is not binary compatible with code generated without that switch.\n-Additionally, it makes the code suboptimial.\n+Additionally, it makes the code suboptimal.\n Use it to conform to a non-default application binary interface.\n \n @item -finstrument-functions"}]}