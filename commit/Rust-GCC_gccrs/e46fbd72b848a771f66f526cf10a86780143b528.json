{"sha": "e46fbd72b848a771f66f526cf10a86780143b528", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ2ZmJkNzJiODQ4YTc3MWY2NmY1MjZjZjEwYTg2NzgwMTQzYjUyOA==", "commit": {"author": {"name": "Michael Hayes", "email": "m.hayes@elec.canterbury.ac.nz", "date": "2000-01-04T22:12:59Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "2000-01-04T22:12:59Z"}, "message": "c4x.md (*addqi3_noclobber_reload): Ensure that CC never modified inadvertently.\n\n\t* config/c4x/c4x.md (*addqi3_noclobber_reload): Ensure that CC never\n\tmodified inadvertently.\n\nFrom-SVN: r31217", "tree": {"sha": "3c847c7552cc906329b31ae218d218ba9ec3b023", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c847c7552cc906329b31ae218d218ba9ec3b023"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e46fbd72b848a771f66f526cf10a86780143b528", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e46fbd72b848a771f66f526cf10a86780143b528", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e46fbd72b848a771f66f526cf10a86780143b528", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e46fbd72b848a771f66f526cf10a86780143b528/comments", "author": null, "committer": null, "parents": [{"sha": "966f8bfd169f1bb78dddd9ebc51e7c6b7a0e1b91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/966f8bfd169f1bb78dddd9ebc51e7c6b7a0e1b91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/966f8bfd169f1bb78dddd9ebc51e7c6b7a0e1b91"}], "stats": {"total": 35, "additions": 26, "deletions": 9}, "files": [{"sha": "dabbc64cb9dc0fc6edb711ca3e90d24c918f3f97", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e46fbd72b848a771f66f526cf10a86780143b528/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e46fbd72b848a771f66f526cf10a86780143b528/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e46fbd72b848a771f66f526cf10a86780143b528", "patch": "@@ -1,3 +1,8 @@\n+2000-01-05  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n+\n+\t* config/c4x/c4x.md (*addqi3_noclobber_reload): Ensure that CC never\n+\tmodified inadvertently.\n+\n 2000-01-04  Joel Sherrill <joel@OARcorp.com>\n \n \t* configure.in (v850*-*-rtems*): New target."}, {"sha": "5870cbdb2ee0e523d0add02113294e7affa04222", "filename": "gcc/config/c4x/c4x.md", "status": "modified", "additions": 21, "deletions": 9, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e46fbd72b848a771f66f526cf10a86780143b528/gcc%2Fconfig%2Fc4x%2Fc4x.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e46fbd72b848a771f66f526cf10a86780143b528/gcc%2Fconfig%2Fc4x%2Fc4x.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.md?ref=e46fbd72b848a771f66f526cf10a86780143b528", "patch": "@@ -1,5 +1,5 @@\n ;; Machine description for the TMS320C[34]x for GNU C compiler\n-;; Copyright (C) 1994-98, 1999 Free Software Foundation, Inc.\n+;; Copyright (C) 1994-99, 2000 Free Software Foundation, Inc.\n \n ;; Contributed by Michael Hayes (m.hayes@elec.canterbury.ac.nz)\n ;;            and Herman Ten Brugge (Haj.Ten.Brugge@net.HCC.nl)\n@@ -1885,15 +1885,27 @@\n ; may be allocated to reload the PLUS and thus gen_reload will\n ; emit an add insn that may clobber CC.\n (define_insn \"*addqi3_noclobber_reload\"\n-  [(set (match_operand:QI 0 \"reg_operand\" \"=a!r,a!r,a!r\")\n-        (plus:QI (match_operand:QI 1 \"src_operand\" \"%0,rR,rS<>\")\n-                 (match_operand:QI 2 \"src_operand\" \"rIm,JR,rS<>\")))]\n+  [(set (match_operand:QI 0 \"reg_operand\" \"=a*c,a*c,a*c,!*d,!*d,!*d\")\n+        (plus:QI (match_operand:QI 1 \"src_operand\" \"%0,rR,rS<>,%0,rR,rS<>\")\n+                 (match_operand:QI 2 \"src_operand\" \"rIm,JR,rS<>,rIm,JR,rS<>\")))]\n   \"reload_in_progress\"\n-  \"@\n-   addi\\\\t%2,%0\n-   addi3\\\\t%2,%1,%0\n-   addi3\\\\t%2,%1,%0\"\n-  [(set_attr \"type\" \"binary,binary,binary\")])\n+  \"*\n+   if (IS_STD_REG (REGNO (operands[0])))\n+     {\n+       if (which_alternative == 0)\n+\t return \\\"addi\\\\t%2,%0\\\";\n+       else\n+\t return \\\"addi3\\\\t%2,%1,%0\\\";\n+     }\n+   else\n+     {\n+       if (which_alternative == 0)\n+\t return \\\"push\\\\tst\\\\n\\\\taddi\\\\t%2,%0\\\\n\\\\tpop\\\\tst\\\";\n+       else\n+\t return \\\"push\\\\tst\\\\n\\\\taddi3\\\\t%2,%1,%0\\\\n\\\\tpop\\\\tst\\\";\n+     }\n+   \"\n+  [(set_attr \"type\" \"binary,binary,binary,multi,multi,multi\")])\n ; Default to int16 data attr.\n \n "}]}