{"sha": "fdb1fa9ebe52bb178f41a27ea5b55b5c17d1aa3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRiMWZhOWViZTUyYmIxNzhmNDFhMjdlYTViNTViNWMxN2QxYWEzYw==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2013-02-12T12:15:26Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2013-02-12T12:15:26Z"}, "message": "re PR fortran/46952 ([OOP] Spurious \"recursive call\" error with type bound procedure)\n\n2013-02-12  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/46952\n\t* resolve.c (resolve_call): Do not check deferred procedures for\n\trecursiveness.\n\n\n2013-02-12  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/46952\n\t* gfortran.dg/typebound_deferred_1.f90: New.\n\nFrom-SVN: r195975", "tree": {"sha": "6e80b175fc0a56ceefcc79eccd6632d7837107de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e80b175fc0a56ceefcc79eccd6632d7837107de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fdb1fa9ebe52bb178f41a27ea5b55b5c17d1aa3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdb1fa9ebe52bb178f41a27ea5b55b5c17d1aa3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdb1fa9ebe52bb178f41a27ea5b55b5c17d1aa3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdb1fa9ebe52bb178f41a27ea5b55b5c17d1aa3c/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdec36abf907e49e9af101877a9f11dd26cb6516", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdec36abf907e49e9af101877a9f11dd26cb6516", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdec36abf907e49e9af101877a9f11dd26cb6516"}], "stats": {"total": 74, "additions": 55, "deletions": 19}, "files": [{"sha": "0a08a199fe4f7eb5b6d6bd6372288cb403ee9c58", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdb1fa9ebe52bb178f41a27ea5b55b5c17d1aa3c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdb1fa9ebe52bb178f41a27ea5b55b5c17d1aa3c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=fdb1fa9ebe52bb178f41a27ea5b55b5c17d1aa3c", "patch": "@@ -1,3 +1,9 @@\n+2013-02-12  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/46952\n+\t* resolve.c (resolve_call): Do not check deferred procedures for\n+\trecursiveness.\n+\n 2013-02-09  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/55362"}, {"sha": "b5faacadf96f60dc1a892a06acbce45fbcb0124e", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 21, "deletions": 19, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdb1fa9ebe52bb178f41a27ea5b55b5c17d1aa3c/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdb1fa9ebe52bb178f41a27ea5b55b5c17d1aa3c/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=fdb1fa9ebe52bb178f41a27ea5b55b5c17d1aa3c", "patch": "@@ -3785,28 +3785,30 @@ resolve_call (gfc_code *c)\n \t}\n     }\n \n-  /* If this ia a deferred TBP with an abstract interface\n-     (which may of course be referenced), c->expr1 will be set.  */\n-  if (csym && csym->attr.abstract && !c->expr1)\n+  /* If this ia a deferred TBP, c->expr1 will be set.  */\n+  if (!c->expr1 && csym)\n     {\n-      gfc_error (\"ABSTRACT INTERFACE '%s' must not be referenced at %L\",\n-\t\t csym->name, &c->loc);\n-      return FAILURE;\n-    }\n+      if (csym->attr.abstract)\n+\t{\n+\t  gfc_error (\"ABSTRACT INTERFACE '%s' must not be referenced at %L\",\n+\t\t    csym->name, &c->loc);\n+\t  return FAILURE;\n+\t}\n \n-  /* Subroutines without the RECURSIVE attribution are not allowed to\n-   * call themselves.  */\n-  if (csym && is_illegal_recursion (csym, gfc_current_ns))\n-    {\n-      if (csym->attr.entry && csym->ns->entries)\n-\tgfc_error (\"ENTRY '%s' at %L cannot be called recursively, as\"\n-\t\t   \" subroutine '%s' is not RECURSIVE\",\n-\t\t   csym->name, &c->loc, csym->ns->entries->sym->name);\n-      else\n-\tgfc_error (\"SUBROUTINE '%s' at %L cannot be called recursively, as it\"\n-\t\t   \" is not RECURSIVE\", csym->name, &c->loc);\n+      /* Subroutines without the RECURSIVE attribution are not allowed to\n+\t call themselves.  */\n+      if (is_illegal_recursion (csym, gfc_current_ns))\n+\t{\n+\t  if (csym->attr.entry && csym->ns->entries)\n+\t    gfc_error (\"ENTRY '%s' at %L cannot be called recursively, \"\n+\t\t       \"as subroutine '%s' is not RECURSIVE\",\n+\t\t       csym->name, &c->loc, csym->ns->entries->sym->name);\n+\t  else\n+\t    gfc_error (\"SUBROUTINE '%s' at %L cannot be called recursively, \"\n+\t\t       \"as it is not RECURSIVE\", csym->name, &c->loc);\n \n-      t = FAILURE;\n+\t  t = FAILURE;\n+\t}\n     }\n \n   /* Switch off assumed size checking and do this again for certain kinds"}, {"sha": "f99e66ed0fbdd5e002e0df922f8e14f6e216de7a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdb1fa9ebe52bb178f41a27ea5b55b5c17d1aa3c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdb1fa9ebe52bb178f41a27ea5b55b5c17d1aa3c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fdb1fa9ebe52bb178f41a27ea5b55b5c17d1aa3c", "patch": "@@ -1,3 +1,8 @@\n+2013-02-12  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/46952\n+\t* gfortran.dg/typebound_deferred_1.f90: New.\n+\n 2013-02-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/56151"}, {"sha": "6e6dc52d0fdc318e0cbf6ade47e34984531591a7", "filename": "gcc/testsuite/gfortran.dg/typebound_deferred_1.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdb1fa9ebe52bb178f41a27ea5b55b5c17d1aa3c/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_deferred_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdb1fa9ebe52bb178f41a27ea5b55b5c17d1aa3c/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_deferred_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_deferred_1.f90?ref=fdb1fa9ebe52bb178f41a27ea5b55b5c17d1aa3c", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do compile }\n+!\n+! PR 46952: [OOP] Spurious \"recursive call\" error with type bound procedure\n+!\n+! Contributed by Ian Harvey <ian_harvey@bigpond.com>\n+\n+module m\n+\n+  type, abstract :: t\n+  contains\n+    procedure(inter), pass, deferred :: foo\n+  end type\n+\n+contains\n+\n+  subroutine inter(this)\n+    class(t) :: this\n+    call this%foo()\n+  end subroutine inter\n+\n+end module m \n+\n+! { dg-final { cleanup-modules \"m\" } }"}]}