{"sha": "0766b9ab92133db3262da6e2a7d8d9e8ea9ec742", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc2NmI5YWI5MjEzM2RiMzI2MmRhNmUyYTdkOGQ5ZThlYTllYzc0Mg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-06-17T18:05:56Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-06-17T18:05:56Z"}, "message": "Fix memory leak in tree-ssa-reassoc.c\n\n\t* tree-ssa-reassoc.c (transform_add_to_multiply): Use auto_vec.\n\nFrom-SVN: r237559", "tree": {"sha": "bace692f7d5a16425330225c319bcda7c586ba3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bace692f7d5a16425330225c319bcda7c586ba3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0766b9ab92133db3262da6e2a7d8d9e8ea9ec742", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0766b9ab92133db3262da6e2a7d8d9e8ea9ec742", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0766b9ab92133db3262da6e2a7d8d9e8ea9ec742", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0766b9ab92133db3262da6e2a7d8d9e8ea9ec742/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "92354dc7a9e87708bad1aac491292f5e41692a2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92354dc7a9e87708bad1aac491292f5e41692a2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92354dc7a9e87708bad1aac491292f5e41692a2e"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "42850c61b44d4beb71d33e6d5b310dfa01f0028a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0766b9ab92133db3262da6e2a7d8d9e8ea9ec742/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0766b9ab92133db3262da6e2a7d8d9e8ea9ec742/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0766b9ab92133db3262da6e2a7d8d9e8ea9ec742", "patch": "@@ -1,3 +1,7 @@\n+2016-06-17  Martin Liska  <mliska@suse.cz>\n+\n+\t* tree-ssa-reassoc.c (transform_add_to_multiply): Use auto_vec.\n+\n 2016-06-17  Martin Liska  <mliska@suse.cz>\n \n \t* predict.def: PRED_LOOP_EXIT from 92 to 85."}, {"sha": "cdfe06fbfae328be7624d29637d3500d38ab00b2", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0766b9ab92133db3262da6e2a7d8d9e8ea9ec742/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0766b9ab92133db3262da6e2a7d8d9e8ea9ec742/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=0766b9ab92133db3262da6e2a7d8d9e8ea9ec742", "patch": "@@ -1807,7 +1807,7 @@ transform_add_to_multiply (vec<operand_entry *> *ops)\n   tree op = NULL_TREE;\n   int j;\n   int i, start = -1, end = 0, count = 0;\n-  vec<std::pair <int, int> > indxs = vNULL;\n+  auto_vec<std::pair <int, int> > indxs;\n   bool changed = false;\n \n   if (!INTEGRAL_TYPE_P (TREE_TYPE ((*ops)[0]->op))"}]}