{"sha": "8208beaf1ecff0bf20db7575d671aa8fa61c2988", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIwOGJlYWYxZWNmZjBiZjIwZGI3NTc1ZDY3MWFhOGZhNjFjMjk4OA==", "commit": {"author": {"name": "Marc Poulhi\u00e8s", "email": "dkm@kataplop.net", "date": "2021-08-12T09:51:26Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "dkm@kataplop.net", "date": "2021-08-12T20:39:25Z"}, "message": "typecheck: add assert on resolve_root_path return value\n\nresolve_root_path can return nullptr in case of error.\nBetter raise an error than dereference the pointer.", "tree": {"sha": "06a07ec8baf70c99a64f98a339add56a3e31ff92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06a07ec8baf70c99a64f98a339add56a3e31ff92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8208beaf1ecff0bf20db7575d671aa8fa61c2988", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8208beaf1ecff0bf20db7575d671aa8fa61c2988", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8208beaf1ecff0bf20db7575d671aa8fa61c2988", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8208beaf1ecff0bf20db7575d671aa8fa61c2988/comments", "author": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3610c9b202b3197bd92ce7b8dbabcb86d4641ee6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3610c9b202b3197bd92ce7b8dbabcb86d4641ee6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3610c9b202b3197bd92ce7b8dbabcb86d4641ee6"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "d88cb0b7f1d40fede5dedf15346a034f6209590d", "filename": "gcc/rust/typecheck/rust-hir-type-check-expr.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8208beaf1ecff0bf20db7575d671aa8fa61c2988/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8208beaf1ecff0bf20db7575d671aa8fa61c2988/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h?ref=8208beaf1ecff0bf20db7575d671aa8fa61c2988", "patch": "@@ -21,6 +21,7 @@\n \n #include \"rust-hir-type-check-base.h\"\n #include \"rust-hir-full.h\"\n+#include \"rust-system.h\"\n #include \"rust-tyty.h\"\n #include \"rust-tyty-call.h\"\n #include \"rust-hir-type-check-struct-field.h\"\n@@ -931,6 +932,9 @@ class TypeCheckExpr : public TypeCheckBase\n     size_t offset = -1;\n     TyTy::BaseType *tyseg\n       = resolve_root_path (expr, &offset, &resolved_node_id);\n+\n+    rust_assert (tyseg != nullptr);\n+\n     if (tyseg->get_kind () == TyTy::TypeKind::ERROR)\n       return;\n \n@@ -1202,6 +1206,7 @@ class TypeCheckExpr : public TypeCheckBase\n       folded_array_capacity (nullptr), inside_loop (inside_loop)\n   {}\n \n+  // Beware: currently returns Tyty::ErrorType or nullptr in case of error.\n   TyTy::BaseType *resolve_root_path (HIR::PathInExpression &expr,\n \t\t\t\t     size_t *offset,\n \t\t\t\t     NodeId *root_resolved_node_id)"}]}