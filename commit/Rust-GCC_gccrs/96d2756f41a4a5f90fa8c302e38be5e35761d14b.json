{"sha": "96d2756f41a4a5f90fa8c302e38be5e35761d14b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZkMjc1NmY0MWE0YTVmOTBmYThjMzAyZTM4YmU1ZTM1NzYxZDE0Yg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-05T10:07:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-05T10:07:35Z"}, "message": "[multiple changes]\n\n2010-10-05  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_res.adb (Check_Parameterless_Call): If the prefix of 'Address is\n\tan explicit dereference of an access to function, the prefix is not\n\tinterpreted as a parameterless call.\n\n2010-10-05  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_attr.adb: For 'Read and 'Write, use full view of base type if\n\tprivate.\n\n2010-10-05  Vincent Celier  <celier@adacore.com>\n\n\t* make.adb (Switches_Of): Allow wild cards in index of attributes\n\tSwitches.\n\t* prj-util.adb (Value_Of): When Allow_Wildcards is True, use the index\n\tof the associative array as a glob regular expression.\n\t* prj-util.ads (Value_Of (Index, In_Array)): New Boolean parameter\n\tAllow_Wildcards, defaulted to False.\n\t(Value_Of (Name, Attribute_Or_Array_Name)): Ditto\n\t* projects.texi: Document that attribute Switches (<file name>) may\n\tuse wild cards in the index.\n\n2010-10-05  Robert Dewar  <dewar@adacore.com>\n\n\t* a-direct.adb, a-direct.ads, back_end.adb, checks.adb,\n\teinfo.adb: Minor reformatting.\n\t* debug.adb: Remove obsolete documentation for d.Z flag.\n\nFrom-SVN: r164978", "tree": {"sha": "0fa2829f8d8a8f4fb45ed1d55d449fa99eaed70b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fa2829f8d8a8f4fb45ed1d55d449fa99eaed70b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96d2756f41a4a5f90fa8c302e38be5e35761d14b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96d2756f41a4a5f90fa8c302e38be5e35761d14b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96d2756f41a4a5f90fa8c302e38be5e35761d14b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96d2756f41a4a5f90fa8c302e38be5e35761d14b/comments", "author": null, "committer": null, "parents": [{"sha": "610ef7c0f9b816601f89d3483ef9824da717c0e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/610ef7c0f9b816601f89d3483ef9824da717c0e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/610ef7c0f9b816601f89d3483ef9824da717c0e3"}], "stats": {"total": 175, "additions": 129, "deletions": 46}, "files": [{"sha": "1ace8e1e382595ec0413b227917b3de474b33c09", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96d2756f41a4a5f90fa8c302e38be5e35761d14b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96d2756f41a4a5f90fa8c302e38be5e35761d14b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=96d2756f41a4a5f90fa8c302e38be5e35761d14b", "patch": "@@ -1,3 +1,32 @@\n+2010-10-05  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_res.adb (Check_Parameterless_Call): If the prefix of 'Address is\n+\tan explicit dereference of an access to function, the prefix is not\n+\tinterpreted as a parameterless call.\n+\n+2010-10-05  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_attr.adb: For 'Read and 'Write, use full view of base type if\n+\tprivate.\n+\n+2010-10-05  Vincent Celier  <celier@adacore.com>\n+\n+\t* make.adb (Switches_Of): Allow wild cards in index of attributes\n+\tSwitches.\n+\t* prj-util.adb (Value_Of): When Allow_Wildcards is True, use the index\n+\tof the associative array as a glob regular expression.\n+\t* prj-util.ads (Value_Of (Index, In_Array)): New Boolean parameter\n+\tAllow_Wildcards, defaulted to False.\n+\t(Value_Of (Name, Attribute_Or_Array_Name)): Ditto\n+\t* projects.texi: Document that attribute Switches (<file name>) may\n+\tuse wild cards in the index.\n+\n+2010-10-05  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-direct.adb, a-direct.ads, back_end.adb, checks.adb,\n+\teinfo.adb: Minor reformatting.\n+\t* debug.adb: Remove obsolete documentation for d.Z flag.\n+\n 2010-10-05  Vincent Celier  <celier@adacore.com>\n \n \t* vms_data.ads: Add VMS qualifier /SRC_INFO= corresponding to gnatmake"}, {"sha": "e4a2697e06344bc265b40c30995cac7a5383a529", "filename": "gcc/ada/a-direct.adb", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96d2756f41a4a5f90fa8c302e38be5e35761d14b/gcc%2Fada%2Fa-direct.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96d2756f41a4a5f90fa8c302e38be5e35761d14b/gcc%2Fada%2Fa-direct.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direct.adb?ref=96d2756f41a4a5f90fa8c302e38be5e35761d14b", "patch": "@@ -39,11 +39,10 @@ with Ada.Unchecked_Conversion;\n with Ada.Unchecked_Deallocation;\n with Ada.Characters.Handling;    use Ada.Characters.Handling;\n \n-with System.CRTL;                use System.CRTL;\n-with System.OS_Lib;              use System.OS_Lib;\n-with System.Regexp;              use System.Regexp;\n-with System.File_IO;             use System.File_IO;\n-\n+with System.CRTL;    use System.CRTL;\n+with System.OS_Lib;  use System.OS_Lib;\n+with System.Regexp;  use System.Regexp;\n+with System.File_IO; use System.File_IO;\n with System;\n \n package body Ada.Directories is\n@@ -302,8 +301,7 @@ package body Ada.Directories is\n       Target_Name : String;\n       Form        : String := \"\")\n    is\n-      Success : Boolean;\n-\n+      Success  : Boolean;\n       Mode     : Copy_Mode := Overwrite;\n       Preserve : Attribute := None;\n \n@@ -331,7 +329,6 @@ package body Ada.Directories is\n                V1, V2  : Natural;\n \n             begin\n-\n                --  Acquire form string, setting required NUL terminator\n \n                Formstr (1 .. Form'Length) := Form;"}, {"sha": "267c9c2e233ef5f0944ae592d759d6292b2e1a46", "filename": "gcc/ada/a-direct.ads", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96d2756f41a4a5f90fa8c302e38be5e35761d14b/gcc%2Fada%2Fa-direct.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96d2756f41a4a5f90fa8c302e38be5e35761d14b/gcc%2Fada%2Fa-direct.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direct.ads?ref=96d2756f41a4a5f90fa8c302e38be5e35761d14b", "patch": "@@ -105,7 +105,7 @@ package Ada.Directories is\n    --  the external environment does not support the creation of a directory\n    --  with the given name (in the absence of Name_Error) and form.\n    --\n-   --  The Form parameter is ignored.\n+   --  The Form parameter is ignored\n \n    procedure Delete_Directory (Directory : String);\n    --  Deletes an existing empty directory with name Directory. The exception\n@@ -132,7 +132,7 @@ package Ada.Directories is\n    --  not support the creation of any directories with the given name (in the\n    --  absence of Name_Error) and form.\n    --\n-   --  The Form parameter is ignored.\n+   --  The Form parameter is ignored\n \n    procedure Delete_Tree (Directory : String);\n    --  Deletes an existing directory with name Directory. The directory and\n@@ -164,17 +164,17 @@ package Ada.Directories is\n      (Source_Name   : String;\n       Target_Name   : String;\n       Form          : String := \"\");\n-   --  Copies the contents of the existing external file with Source_Name\n-   --  to Target_Name. The resulting external file is a duplicate of the source\n-   --  external file. The Form can be used to give system-dependent\n+   --  Copies the contents of the existing external file with Source_Name to\n+   --  Target_Name. The resulting external file is a duplicate of the source\n+   --  external file. The Form argument can be used to give system-dependent\n    --  characteristics of the resulting external file; the interpretation of\n    --  the Form parameter is implementation-defined. Exception Name_Error is\n    --  propagated if the string given as Source_Name does not identify an\n    --  existing external ordinary or special file or if the string given as\n-   --  Target_Name does not allow the identification of an external file.\n-   --  The exception Use_Error is propagated if the external environment does\n-   --  not support the creating of the file with the name given by Target_Name\n-   --  and form given by Form, or copying of the file with the name given by\n+   --  Target_Name does not allow the identification of an external file. The\n+   --  exception Use_Error is propagated if the external environment does not\n+   --  support the creating of the file with the name given by Target_Name and\n+   --  form given by Form, or copying of the file with the name given by\n    --  Source_Name (in the absence of Name_Error).\n    --\n    --  Interpretation of the Form parameter:"}, {"sha": "7172696b5e12a2b5720fbdff28a1ce5f1417ad24", "filename": "gcc/ada/back_end.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96d2756f41a4a5f90fa8c302e38be5e35761d14b/gcc%2Fada%2Fback_end.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96d2756f41a4a5f90fa8c302e38be5e35761d14b/gcc%2Fada%2Fback_end.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fback_end.adb?ref=96d2756f41a4a5f90fa8c302e38be5e35761d14b", "patch": "@@ -124,7 +124,7 @@ package body Back_End is\n \n          if CodePeer_Mode\n            or else (Mode /= Generate_Object\n-                    and then not Back_Annotate_Rep_Info)\n+                     and then not Back_Annotate_Rep_Info)\n          then\n             return;\n          end if;"}, {"sha": "2362c13acb47b2711d0e95f1bdcb04f9a0fab012", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96d2756f41a4a5f90fa8c302e38be5e35761d14b/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96d2756f41a4a5f90fa8c302e38be5e35761d14b/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=96d2756f41a4a5f90fa8c302e38be5e35761d14b", "patch": "@@ -4104,7 +4104,7 @@ package body Checks is\n       --  with them will be valid as well.\n \n       if Base_Type (Typ) = Standard_Boolean\n-           and then\n+        and then\n          (Nkind (Expr) in N_Op or else Nkind (Expr) in N_Short_Circuit)\n       then\n          return;"}, {"sha": "c6fa834401f1ddeca582737780cf543270c463f3", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96d2756f41a4a5f90fa8c302e38be5e35761d14b/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96d2756f41a4a5f90fa8c302e38be5e35761d14b/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=96d2756f41a4a5f90fa8c302e38be5e35761d14b", "patch": "@@ -596,12 +596,6 @@ package body Debug is\n    --       case of the gcc back end. Provided as a back up in case the new\n    --       scheme has problems.\n \n-   --  d.Z  This flag enables the frontend call-graph output associated with\n-   --       dispatching calls. This is a temporary debug flag to be used during\n-   --       development of this output. Once it works, it will always be output\n-   --       (as part of the standard call-graph output) by default, and this\n-   --       flag will be removed.\n-\n    --  d1   Error messages have node numbers where possible. Normally error\n    --       messages have only source locations. This option is useful when\n    --       debugging errors caused by expanded code, where the source location"}, {"sha": "0793a6071e28d3d5ec37e5cba2ace056e7daf016", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96d2756f41a4a5f90fa8c302e38be5e35761d14b/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96d2756f41a4a5f90fa8c302e38be5e35761d14b/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=96d2756f41a4a5f90fa8c302e38be5e35761d14b", "patch": "@@ -7703,7 +7703,7 @@ package body Einfo is\n             Write_Str (\"Renamed_Entity\");\n \n          when Incomplete_Or_Private_Kind                   |\n-            E_Record_Subtype                               =>\n+              E_Record_Subtype                             =>\n             Write_Str (\"Private_Dependents\");\n \n          when Concurrent_Kind                              =>"}, {"sha": "7af8cabd7a7245f05245860d24cb3ac065c085b1", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96d2756f41a4a5f90fa8c302e38be5e35761d14b/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96d2756f41a4a5f90fa8c302e38be5e35761d14b/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=96d2756f41a4a5f90fa8c302e38be5e35761d14b", "patch": "@@ -155,6 +155,11 @@ package body Exp_Attr is\n    --  defining it, is returned. In both cases, inheritance of representation\n    --  aspects is thus taken into account.\n \n+   function Full_Base (T : Entity_Id) return Entity_Id;\n+   --  The stream functions need to examine the underlying representation of\n+   --  composite types. In some cases T may be non-private but its base type\n+   --  is, in which case the function returns the corresponding full view.\n+\n    function Get_Stream_Convert_Pragma (T : Entity_Id) return Node_Id;\n    --  Given a type, find a corresponding stream convert pragma that applies to\n    --  the implementation base type of this type (Typ). If found, return the\n@@ -3770,10 +3775,10 @@ package body Exp_Attr is\n                    (Discriminant_Default_Value (First_Discriminant (U_Type)))\n                then\n                   Build_Mutable_Record_Read_Procedure\n-                    (Loc, Base_Type (U_Type), Decl, Pname);\n+                    (Loc, Full_Base (U_Type), Decl, Pname);\n                else\n                   Build_Record_Read_Procedure\n-                    (Loc, Base_Type (U_Type), Decl, Pname);\n+                    (Loc, Full_Base (U_Type), Decl, Pname);\n                end if;\n \n                --  Suppress checks, uninitialized or otherwise invalid\n@@ -5245,10 +5250,10 @@ package body Exp_Attr is\n                    (Discriminant_Default_Value (First_Discriminant (U_Type)))\n                then\n                   Build_Mutable_Record_Write_Procedure\n-                    (Loc, Base_Type (U_Type), Decl, Pname);\n+                    (Loc, Full_Base (U_Type), Decl, Pname);\n                else\n                   Build_Record_Write_Procedure\n-                    (Loc, Base_Type (U_Type), Decl, Pname);\n+                    (Loc, Full_Base (U_Type), Decl, Pname);\n                end if;\n \n                Insert_Action (N, Decl);\n@@ -5638,6 +5643,25 @@ package body Exp_Attr is\n       end if;\n    end Find_Stream_Subprogram;\n \n+   ---------------\n+   -- Full_Base --\n+   ---------------\n+\n+   function Full_Base (T : Entity_Id) return Entity_Id is\n+      BT : Entity_Id;\n+\n+   begin\n+      BT := Base_Type (T);\n+\n+      if Is_Private_Type (BT)\n+        and then Present (Full_View (BT))\n+      then\n+         BT := Full_View (BT);\n+      end if;\n+\n+      return BT;\n+   end Full_Base;\n+\n    -----------------------\n    -- Get_Index_Subtype --\n    -----------------------"}, {"sha": "154e1dd245046cae393d77c516b2bfea0f0226e3", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96d2756f41a4a5f90fa8c302e38be5e35761d14b/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96d2756f41a4a5f90fa8c302e38be5e35761d14b/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=96d2756f41a4a5f90fa8c302e38be5e35761d14b", "patch": "@@ -8361,10 +8361,11 @@ package body Make is\n \n       Switches :=\n         Prj.Util.Value_Of\n-          (Index     => Name_Id (Source_File),\n-           Src_Index => Source_Index,\n-           In_Array  => Switches_Array,\n-           In_Tree   => Project_Tree);\n+          (Index           => Name_Id (Source_File),\n+           Src_Index       => Source_Index,\n+           In_Array        => Switches_Array,\n+           In_Tree         => Project_Tree,\n+           Allow_Wildcards => True);\n \n       --  Check also without the suffix\n \n@@ -8406,10 +8407,11 @@ package body Make is\n                Add_Str_To_Name_Buffer (Name (1 .. Last));\n                Switches :=\n                  Prj.Util.Value_Of\n-                   (Index     => Name_Find,\n-                    Src_Index => 0,\n-                    In_Array  => Switches_Array,\n-                    In_Tree   => Project_Tree);\n+                   (Index           => Name_Find,\n+                    Src_Index       => 0,\n+                    In_Array        => Switches_Array,\n+                    In_Tree         => Project_Tree,\n+                    Allow_Wildcards => True);\n \n                if Switches = Nil_Variable_Value and then Allow_ALI then\n                   Last := Source_File_Name'Length;"}, {"sha": "1bc8b11bf0714f2786460ee2ab2b294a915623e8", "filename": "gcc/ada/prj-util.adb", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96d2756f41a4a5f90fa8c302e38be5e35761d14b/gcc%2Fada%2Fprj-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96d2756f41a4a5f90fa8c302e38be5e35761d14b/gcc%2Fada%2Fprj-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-util.adb?ref=96d2756f41a4a5f90fa8c302e38be5e35761d14b", "patch": "@@ -26,6 +26,7 @@\n with Ada.Unchecked_Deallocation;\n \n with GNAT.Case_Util; use GNAT.Case_Util;\n+with GNAT.Regexp;    use GNAT.Regexp;\n \n with Osint;    use Osint;\n with Output;   use Output;\n@@ -848,7 +849,8 @@ package body Prj.Util is\n       Src_Index              : Int := 0;\n       In_Array               : Array_Element_Id;\n       In_Tree                : Project_Tree_Ref;\n-      Force_Lower_Case_Index : Boolean := False) return Variable_Value\n+      Force_Lower_Case_Index : Boolean := False;\n+      Allow_Wildcards        : Boolean := False) return Variable_Value\n    is\n       Current      : Array_Element_Id;\n       Element      : Array_Element;\n@@ -888,8 +890,13 @@ package body Prj.Util is\n             end if;\n          end if;\n \n-         if Real_Index_1 = Real_Index_2 and then\n-           Src_Index = Element.Src_Index\n+         if Src_Index = Element.Src_Index and then\n+           (Real_Index_1 = Real_Index_2 or else\n+              (Real_Index_2 /= All_Other_Names and then\n+               Allow_Wildcards and then\n+                 Match (Get_Name_String (Real_Index_1),\n+                        Compile (Get_Name_String (Real_Index_2),\n+                                 Glob => True))))\n          then\n             return Element.Value;\n          else\n@@ -906,7 +913,8 @@ package body Prj.Util is\n       Attribute_Or_Array_Name : Name_Id;\n       In_Package              : Package_Id;\n       In_Tree                 : Project_Tree_Ref;\n-      Force_Lower_Case_Index  : Boolean := False) return Variable_Value\n+      Force_Lower_Case_Index  : Boolean := False;\n+      Allow_Wildcards         : Boolean := False) return Variable_Value\n    is\n       The_Array     : Array_Element_Id;\n       The_Attribute : Variable_Value := Nil_Variable_Value;\n@@ -927,7 +935,8 @@ package body Prj.Util is\n               Src_Index              => Index,\n               In_Array               => The_Array,\n               In_Tree                => In_Tree,\n-              Force_Lower_Case_Index => Force_Lower_Case_Index);\n+              Force_Lower_Case_Index => Force_Lower_Case_Index,\n+              Allow_Wildcards        => Allow_Wildcards);\n \n          --  If there is no array element, look for a variable\n "}, {"sha": "5ee0ee78b42f39a24f041a815ae2691f6e0d3921", "filename": "gcc/ada/prj-util.ads", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96d2756f41a4a5f90fa8c302e38be5e35761d14b/gcc%2Fada%2Fprj-util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96d2756f41a4a5f90fa8c302e38be5e35761d14b/gcc%2Fada%2Fprj-util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-util.ads?ref=96d2756f41a4a5f90fa8c302e38be5e35761d14b", "patch": "@@ -86,7 +86,8 @@ package Prj.Util is\n       Src_Index              : Int := 0;\n       In_Array               : Array_Element_Id;\n       In_Tree                : Project_Tree_Ref;\n-      Force_Lower_Case_Index : Boolean := False) return Variable_Value;\n+      Force_Lower_Case_Index : Boolean := False;\n+      Allow_Wildcards        : Boolean := False) return Variable_Value;\n    --  Get a string array component (single String or String list). Returns\n    --  Nil_Variable_Value if no component Index or if In_Array is null.\n    --\n@@ -101,7 +102,8 @@ package Prj.Util is\n       Attribute_Or_Array_Name : Name_Id;\n       In_Package              : Package_Id;\n       In_Tree                 : Project_Tree_Ref;\n-      Force_Lower_Case_Index  : Boolean := False) return Variable_Value;\n+      Force_Lower_Case_Index  : Boolean := False;\n+      Allow_Wildcards         : Boolean := False) return Variable_Value;\n    --  In a specific package,\n    --   - if there exists an array Attribute_Or_Array_Name with an index Name,\n    --     returns the corresponding component (depending on the attribute, the"}, {"sha": "67eb907f4f7efb1080737011ad53299fac5581cb", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96d2756f41a4a5f90fa8c302e38be5e35761d14b/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96d2756f41a4a5f90fa8c302e38be5e35761d14b/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=96d2756f41a4a5f90fa8c302e38be5e35761d14b", "patch": "@@ -632,9 +632,24 @@ Several attributes can be used to specify the switches:\n   @b{end} Compiler;\n   @end smallexample\n \n+  @noindent\n+  @code{Switches} may take a pattern as an index, such as in:\n+\n+  @smallexample\n+  @b{package} Compiler @b{is}\n+    @b{for} Default_Switches (\"Ada\") @b{use} (\"-O2\");\n+    @b{for} Switches (\"pkg*\") @b{use} (\"-O0\");\n+  @b{end} Compiler;\n+  @end smallexample\n+\n+  @noindent\n+  Sources @file{pkg.adb} and @file{pkg-child.adb} would be compiled with -O0,\n+  not -O2.\n+\n   @noindent\n   @code{Switches} can also be given a language name as index instead of a file\n   name in which case it has the same semantics as @emph{Default_Switches}.\n+  However, indexes with wild cards are never valid for language name.\n \n @item @b{Local_Configuration_Pragmas}:\n @cindex @code{Local_Configuration_Pragmas}"}, {"sha": "b377bf28b38fde3020d3ae35fedaf8e21bae0cec", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96d2756f41a4a5f90fa8c302e38be5e35761d14b/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96d2756f41a4a5f90fa8c302e38be5e35761d14b/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=96d2756f41a4a5f90fa8c302e38be5e35761d14b", "patch": "@@ -1011,6 +1011,17 @@ package body Sem_Res is\n          It  : Interp;\n \n       begin\n+         --  if the context is an attribute reference that can apply to\n+         --  functions, this is never a parameterless call. (RM 4.1.4 (6))\n+\n+         if Nkind (Parent (N)) = N_Attribute_Reference\n+            and then (Attribute_Name (Parent (N)) = Name_Address\n+              or else Attribute_Name (Parent (N)) = Name_Code_Address\n+              or else Attribute_Name (Parent (N)) = Name_Access)\n+         then\n+            return False;\n+         end if;\n+\n          if not Is_Overloaded (N) then\n             return\n               Ekind (Etype (N)) = E_Subprogram_Type\n@@ -1070,7 +1081,7 @@ package body Sem_Res is\n       --  If the entity is the name of an operator, it cannot be a call because\n       --  operators cannot have default parameters. In this case, this must be\n       --  a string whose contents coincide with an operator name. Set the kind\n-      --  of the node appropriately and reanalyze.\n+      --  of the node appropriately.\n \n       if (Is_Entity_Name (N)\n             and then Nkind (N) /= N_Operator_Symbol"}]}