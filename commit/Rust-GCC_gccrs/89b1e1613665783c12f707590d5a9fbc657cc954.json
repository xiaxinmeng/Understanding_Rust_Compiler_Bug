{"sha": "89b1e1613665783c12f707590d5a9fbc657cc954", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODliMWUxNjEzNjY1NzgzYzEyZjcwNzU5MGQ1YTlmYmM2NTdjYzk1NA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-10-19T13:57:02Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-10-19T13:57:02Z"}, "message": "Update references to C++17 in libstdc++ manual\n\n\t* doc/xml/manual/status_cxx2017.xml: Update references to C++17\n\tsection numbers.\n\nFrom-SVN: r253895", "tree": {"sha": "66ec6d45fa954d639fca1a0c982845427dbd4b5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66ec6d45fa954d639fca1a0c982845427dbd4b5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89b1e1613665783c12f707590d5a9fbc657cc954", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89b1e1613665783c12f707590d5a9fbc657cc954", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89b1e1613665783c12f707590d5a9fbc657cc954", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89b1e1613665783c12f707590d5a9fbc657cc954/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af23b26ab0c226e8943b0984a75a3112afa79397", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af23b26ab0c226e8943b0984a75a3112afa79397", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af23b26ab0c226e8943b0984a75a3112afa79397"}], "stats": {"total": 35, "additions": 19, "deletions": 16}, "files": [{"sha": "72d9b77001bda03d7a25e8f09dba5e62cb3eb7bc", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b1e1613665783c12f707590d5a9fbc657cc954/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b1e1613665783c12f707590d5a9fbc657cc954/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=89b1e1613665783c12f707590d5a9fbc657cc954", "patch": "@@ -1,5 +1,8 @@\n 2017-10-19  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* doc/xml/manual/status_cxx2017.xml: Update references to C++17\n+\tsection numbers.\n+\n \t* testsuite/decimal/conversion-to-integral.cc: Use predefined macro\n \tinstead of non-standard glibc one.\n "}, {"sha": "b5a65be12c99289967d10b4129d05eb0c627b197", "filename": "libstdc++-v3/doc/xml/manual/status_cxx2017.xml", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b1e1613665783c12f707590d5a9fbc657cc954/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b1e1613665783c12f707590d5a9fbc657cc954/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml?ref=89b1e1613665783c12f707590d5a9fbc657cc954", "patch": "@@ -935,49 +935,49 @@ Feature-testing recommendations for C++</link>.\n    </para>\n \n    <para>\n-      <emphasis>20.6.5 [optional.bad_optional_access]</emphasis>\n+      <emphasis>23.6.5 [optional.bad_optional_access]</emphasis>\n       <code>what()</code> returns <literal>\"bad optional access\"</literal>.\n    </para>\n \n    <para>\n-      <emphasis>20.7.2 [variant.variant]</emphasis>\n+      <emphasis>23.7.3 [variant.variant]</emphasis>\n       Whether <classname>variant</classname> supports over-aligned types\n       should be documented here.\n    </para>\n \n    <para>\n-      <emphasis>20.7.10 [variant.bad.access]</emphasis>\n+      <emphasis>23.7.10 [variant.bad.access]</emphasis>\n       <code>what()</code> returns <literal>\"Unexpected index\"</literal>.\n    </para>\n \n    <para>\n-      <emphasis>20.12.5.2 [memory.resource.pool.options]</emphasis>\n+      <emphasis>23.12.5.2 [memory.resource.pool.options]</emphasis>\n       The limits for maximum number of blocks and largest allocation size\n       supported by <classname>pool_options</classname> should be documented\n       here.\n    </para>\n \n    <para>\n-      <emphasis>20.12.6.1 [memory.resource.monotonic.buffer.ctor]</emphasis>\n+      <emphasis>23.12.6.1 [memory.resource.monotonic.buffer.ctor]</emphasis>\n       The default <code>next_buffer_size</code> and growth factor should\n       be documented here.\n    </para>\n \n    <para>\n-      <emphasis>20.15.4.3 [meta.unary.prop]</emphasis>\n+      <emphasis>23.15.4.3 [meta.unary.prop]</emphasis>\n       The predicate condition for\n       <code>has_unique_object_representations</code> is true for all scalar\n       types except floating point types.\n    </para>\n \n    <para>\n-      <emphasis>20.19.3 [execpol.type],\n-      25.2.3 [algorithms.parallel.exec]</emphasis>\n+      <emphasis>23.19.3 [execpol.type],\n+      28.4.3 [algorithms.parallel.exec]</emphasis>\n       There are no implementation-defined execution policies.\n    </para>\n \n    <para>\n-      <emphasis>22.4.2 [string.view.template]</emphasis>\n+      <emphasis>24.4.2 [string.view.template]</emphasis>\n       <classname>basic_string_view&lt;C, T&gt;::iterator</classname> is\n       <code>C*</code> and\n       <classname>basic_string_view&lt;C, T&gt;::const_iterator</classname> is\n@@ -986,47 +986,47 @@ Feature-testing recommendations for C++</link>.\n \n \n    <para>\n-      <emphasis>25.2.3 [algorithms.parallel.exec]</emphasis>\n+      <emphasis>28.4.3 [algorithms.parallel.exec]</emphasis>\n       Threads of execution created by <classname>std::thread</classname>\n       provide concurrent forward progress guarantees, so threads of execution\n       implicitly created by the library will provide parallel forward\n       progress guarantees.\n    </para>\n \n    <para>\n-      <emphasis>26.4.1 [cfenv.syn]</emphasis>\n+      <emphasis>29.4.1 [cfenv.syn]</emphasis>\n       The effects of the <filename>&lt;cfenv&gt;</filename> functions\n       depends on whether the <code>FENV_ACCESS</code> pragma is supported,\n       and on the C library that provides the header.\n    </para>\n \n    <para>\n-      <emphasis>26.6.9 [c.math.rand]</emphasis>\n+      <emphasis>29.6.9 [c.math.rand]</emphasis>\n       Whether the <function>rand</function> function may introduce data\n       races depends on the target C library that provides the function.\n    </para>\n \n    <para>\n-      <emphasis>26.9.5 [sf.cmath]</emphasis>\n+      <emphasis>29.9.5 [sf.cmath]</emphasis>\n       The effect of calling the mathematical special functions with large\n       inputs should be documented here.\n    </para>\n \n    <para>\n-      <emphasis>27.10.2.1 [fs.conform.9945]</emphasis>\n+      <emphasis>30.10.2.1 [fs.conform.9945]</emphasis>\n       The behavior of the filesystem library implementation will depend on\n       the target operating system. Some features will not be not supported\n       on some targets.\n    </para>\n \n    <para>\n-      <emphasis>27.10.6 [fs.filesystem.syn]</emphasis>\n+      <emphasis>30.10.5 [fs.filesystem.syn]</emphasis>\n       The clock used for file times is\n       <classname>std::chrono::system_clock</classname>.\n    </para>\n \n    <para>\n-      <emphasis>27.10.8 [path.generic]</emphasis>\n+      <emphasis>30.10.7.1 [fs.path.generic]</emphasis>\n       dot-dot in the root-directory refers to the root-directory itself.\n    </para>\n "}]}