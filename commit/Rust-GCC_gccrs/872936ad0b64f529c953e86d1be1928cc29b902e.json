{"sha": "872936ad0b64f529c953e86d1be1928cc29b902e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODcyOTM2YWQwYjY0ZjUyOWM5NTNlODZkMWJlMTkyOGNjMjliOTAyZQ==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@wrs.com", "date": "1998-12-07T23:36:08Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-12-07T23:36:08Z"}, "message": "bsd.h (ASM_FILE_START): Don't use dump_base_name...\n\n        * i386/bsd.h (ASM_FILE_START): Don't use dump_base_name, it is\n        wrong and should only be used for dump related things, not\n        debugging information, instead main_input_filename should be used.\n        Also, reuse output_file_directive if possible.\n        * i386/aix386ng.h (ASM_FILE_START): Likewise.\n        * i386/isc.h (ASM_FILE_START): Likewise.\n        * i386/win-nt.h (ASM_FILE_START): Likewise.\n        * i386/sun386.h (ASM_FILE_START): Likewise.\n\nFrom-SVN: r24174", "tree": {"sha": "e7d7c8f0b956a94c823cf588c17a032da4934e75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7d7c8f0b956a94c823cf588c17a032da4934e75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/872936ad0b64f529c953e86d1be1928cc29b902e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/872936ad0b64f529c953e86d1be1928cc29b902e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/872936ad0b64f529c953e86d1be1928cc29b902e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/872936ad0b64f529c953e86d1be1928cc29b902e/comments", "author": null, "committer": null, "parents": [{"sha": "63684e6319da1a8b5e666ca03361332cb8b984ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63684e6319da1a8b5e666ca03361332cb8b984ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63684e6319da1a8b5e666ca03361332cb8b984ef"}], "stats": {"total": 63, "additions": 35, "deletions": 28}, "files": [{"sha": "a871069a8788cfb741046c265d7ae2fb07937d28", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/872936ad0b64f529c953e86d1be1928cc29b902e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/872936ad0b64f529c953e86d1be1928cc29b902e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=872936ad0b64f529c953e86d1be1928cc29b902e", "patch": "@@ -1,3 +1,14 @@\n+Tue Dec  8 00:34:05 1998  Mike Stump  <mrs@wrs.com>\n+\n+\t* i386/bsd.h (ASM_FILE_START): Don't use dump_base_name, it is\n+\twrong and should only be used for dump related things, not\n+\tdebugging information, instead main_input_filename should be used.\n+\tAlso, reuse output_file_directive if possible.\n+\t* i386/aix386ng.h (ASM_FILE_START): Likewise.\n+\t* i386/isc.h (ASM_FILE_START): Likewise.\n+\t* i386/win-nt.h (ASM_FILE_START): Likewise.\n+\t* i386/sun386.h (ASM_FILE_START): Likewise.\n+\n Mon Dec  7 23:56:28 1998   Robert Lipe  <robertl@dgii.com>\n \n \t* configure.in (mips*-*-linux*): Handle big and little endian"}, {"sha": "3b3d65ac81641f2bdda4d68e9fc4fe677b7acb88", "filename": "gcc/config/i386/aix386ng.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/872936ad0b64f529c953e86d1be1928cc29b902e/gcc%2Fconfig%2Fi386%2Faix386ng.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/872936ad0b64f529c953e86d1be1928cc29b902e/gcc%2Fconfig%2Fi386%2Faix386ng.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Faix386ng.h?ref=872936ad0b64f529c953e86d1be1928cc29b902e", "patch": "@@ -58,9 +58,7 @@ Boston, MA 02111-1307, USA.  */\n \n #undef ASM_FILE_START\n #define ASM_FILE_START(FILE) \t\t\t\t\t\\\n-  do { fprintf (FILE, \"\\t.file\\t\");\t\t\t\t\\\n-       output_quoted_string (FILE, dump_base_name);\t\t\\\n-       fprintf (FILE, \"\\n\");\t\t\t\t\t\\\n+  do { output_file_directive (FILE, main_input_filename);\t\\\n        if (optimize)\t\t\t\t\t\t\\\n           ASM_FILE_START_1 (FILE); \t\t\t\t\\\n        else\t\t\t\t\t\t\t\\"}, {"sha": "34db79a79d5b384d08498a1e9327d2db6b934b74", "filename": "gcc/config/i386/bsd.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/872936ad0b64f529c953e86d1be1928cc29b902e/gcc%2Fconfig%2Fi386%2Fbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/872936ad0b64f529c953e86d1be1928cc29b902e/gcc%2Fconfig%2Fi386%2Fbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fbsd.h?ref=872936ad0b64f529c953e86d1be1928cc29b902e", "patch": "@@ -49,9 +49,7 @@ Boston, MA 02111-1307, USA.  */\n    ??? I am skeptical of this -- RMS.  */\n \n #define ASM_FILE_START(FILE) \\\n-  do {\tfprintf (FILE, \"\\t.file\\t\");\t\t\t\t\\\n-\toutput_quoted_string (FILE, dump_base_name);\t\t\\\n-\tfprintf (FILE, \"\\n\");\t\t\t\t\t\\\n+  do {\toutput_file_directive (FILE, main_input_filename);\t\\\n   } while (0)\n \n /* This was suggested, but it shouldn't be right for DBX output. -- RMS"}, {"sha": "ec585df722dae97aafc869fe0c98afc9ebf0ba20", "filename": "gcc/config/i386/go32.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/872936ad0b64f529c953e86d1be1928cc29b902e/gcc%2Fconfig%2Fi386%2Fgo32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/872936ad0b64f529c953e86d1be1928cc29b902e/gcc%2Fconfig%2Fi386%2Fgo32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgo32.h?ref=872936ad0b64f529c953e86d1be1928cc29b902e", "patch": "@@ -74,7 +74,6 @@ dtor_section ()\t\t\t\t\t\t\t\\\n \n /* Output at beginning of assembler file.  */\n /* The .file command should always begin the output.  */\n-/* Use the main_input_filename instead of dump_base_name */\n \n #undef ASM_FILE_START\n #define ASM_FILE_START(FILE)\t\t\t\t\t\t\\"}, {"sha": "92d0b7e95d5b0a210539dfa4736bb70f77c92867", "filename": "gcc/config/i386/isc.h", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/872936ad0b64f529c953e86d1be1928cc29b902e/gcc%2Fconfig%2Fi386%2Fisc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/872936ad0b64f529c953e86d1be1928cc29b902e/gcc%2Fconfig%2Fi386%2Fisc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fisc.h?ref=872936ad0b64f529c953e86d1be1928cc29b902e", "patch": "@@ -72,20 +72,23 @@\n    message.  */\n \n #undef ASM_FILE_START\n-#define ASM_FILE_START(FILE)                     \\\n-  do {                                           \\\n-   char c;                                       \\\n-   int max = 0;                                  \\\n-   char *string = dump_base_name;                \\\n-                                                 \\\n-    fputs (\"\\t.file\\t\\\"\", FILE);\t\t\t\t \\\n-                                                 \\\n-    while ((c = *string++) != 0 && max++ < 14) { \\\n-       if (c == '\\\"' || c == '\\\\')               \\\n-         putc ('\\\\', FILE);                      \\\n-       putc (c, FILE);                           \\\n-    }                                            \\\n-    fputs (\"\\\"\\n\", FILE);                        \\\n+#define ASM_FILE_START(FILE)\t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\\\n+    int len = strlen (main_input_filename);\t\t\\\n+    char *na = main_input_filename + len;\t\t\\\n+    char shorter[15];\t\t\t\t\t\\\n+    /* NA gets MAIN_INPUT_FILENAME sans directory names.  */\\\n+    while (na > main_input_filename)\t\t\t\\\n+      {\t\t\t\t\t\t\t\\\n+\tif (na[-1] == '/')\t\t\t\t\\\n+\t  break;\t\t\t\t\t\\\n+\tna--;\t\t\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\\\n+    strncpy (shorter, na, 14);\t\t\t\t\\\n+    shorter[14] = 0;\t\t\t\t\t\\\n+    fprintf (FILE, \"\\t.file\\t\");\t\t\t\\\n+    output_quoted_string (FILE, shorter);\t\t\\\n+    fprintf (FILE, \"\\n\");\t\t\t\t\\\n   } while (0)\n \n /* Work around assembler forward label references generated in exception"}, {"sha": "4302ec40841db459cd0b1b0426f1180c0e8c1566", "filename": "gcc/config/i386/sun386.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/872936ad0b64f529c953e86d1be1928cc29b902e/gcc%2Fconfig%2Fi386%2Fsun386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/872936ad0b64f529c953e86d1be1928cc29b902e/gcc%2Fconfig%2Fi386%2Fsun386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsun386.h?ref=872936ad0b64f529c953e86d1be1928cc29b902e", "patch": "@@ -59,11 +59,11 @@ do\t\t\t\t\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\\\n     extern char *version_string, *language_string;\t\\\n     {\t\t\t\t\t\t\t\\\n-      int len = strlen (dump_base_name);\t\t\\\n-      char *na = dump_base_name + len;\t\t\t\\\n+      int len = strlen (main_input_filename);\t\t\\\n+      char *na = main_input_filename + len;\t\t\\\n       char shorter[15];\t\t\t\t\t\\\n-      /* NA gets DUMP_BASE_NAME sans directory names.  */\\\n-      while (na > dump_base_name)\t\t\t\\\n+      /* NA gets MAIN_INPUT_FILENAME sans directory names.  */\\\n+      while (na > main_input_filename)\t\t\t\\\n \t{\t\t\t\t\t\t\\\n \t  if (na[-1] == '/')\t\t\t\t\\\n \t    break;\t\t\t\t\t\\"}, {"sha": "97f10c39d0027c2368d6f3ad13940a1773a8e535", "filename": "gcc/config/i386/win-nt.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/872936ad0b64f529c953e86d1be1928cc29b902e/gcc%2Fconfig%2Fi386%2Fwin-nt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/872936ad0b64f529c953e86d1be1928cc29b902e/gcc%2Fconfig%2Fi386%2Fwin-nt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwin-nt.h?ref=872936ad0b64f529c953e86d1be1928cc29b902e", "patch": "@@ -131,9 +131,7 @@ while (0)\n #undef ASM_FILE_START\n #endif\n #define ASM_FILE_START(FILE) \\\n-  do {\tfprintf (FILE, \"\\t.file\\t\");\t\t\t\t\\\n-\toutput_quoted_string (FILE, dump_base_name);\t\t\\\n-\tfprintf (FILE, \"\\n\");\t\t\t\t\t\\\n+  do {\toutput_file_directive (FILE, main_input_filename);\t\\\n         fprintf (FILE, \".global\\t__fltused\\n\");\t\t\t\\\n   } while (0)\n "}]}