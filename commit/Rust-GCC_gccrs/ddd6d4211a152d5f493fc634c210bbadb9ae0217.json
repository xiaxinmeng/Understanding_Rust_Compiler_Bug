{"sha": "ddd6d4211a152d5f493fc634c210bbadb9ae0217", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRkNmQ0MjExYTE1MmQ1ZjQ5M2ZjNjM0YzIxMGJiYWRiOWFlMDIxNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-04-02T01:35:45Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-04-02T01:35:45Z"}, "message": "re PR c++/70449 (ICE with -Wall on valid code on x86_64-linux-gnu in pp_string, at pretty-print.c:928)\n\n\tPR c++/70449\n\n\tPR c++/70344\n\t* pt.c (instantiate_decl): A function isn't fully defined if\n\tDECL_INITIAL is error_mark_node.\n\t* constexpr.c (cxx_eval_call_expression): Likewise.\n\nFrom-SVN: r234695", "tree": {"sha": "3d8cb5b82d12dce5980434c7ac2c815c90591b2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d8cb5b82d12dce5980434c7ac2c815c90591b2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddd6d4211a152d5f493fc634c210bbadb9ae0217", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd6d4211a152d5f493fc634c210bbadb9ae0217", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddd6d4211a152d5f493fc634c210bbadb9ae0217", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd6d4211a152d5f493fc634c210bbadb9ae0217/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bb727032821479aaa585a779b7c1d6c74822e0de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb727032821479aaa585a779b7c1d6c74822e0de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb727032821479aaa585a779b7c1d6c74822e0de"}], "stats": {"total": 47, "additions": 30, "deletions": 17}, "files": [{"sha": "a755e37d00265f1a8a2b4040fce2072f37ca742b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd6d4211a152d5f493fc634c210bbadb9ae0217/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd6d4211a152d5f493fc634c210bbadb9ae0217/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ddd6d4211a152d5f493fc634c210bbadb9ae0217", "patch": "@@ -1,3 +1,11 @@\n+2016-04-01  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/70449\n+\tPR c++/70344\n+\t* pt.c (instantiate_decl): A function isn't fully defined if\n+\tDECL_INITIAL is error_mark_node.\n+\t* constexpr.c (cxx_eval_call_expression): Likewise.\n+\n 2016-04-01  Jakub Jelinek  <jakub@redhat.com>\n \t    Marek Polacek  <polacek@redhat.com>\n "}, {"sha": "979f01fbbb3d0adcd305945f69ca82279712834e", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd6d4211a152d5f493fc634c210bbadb9ae0217/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd6d4211a152d5f493fc634c210bbadb9ae0217/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=ddd6d4211a152d5f493fc634c210bbadb9ae0217", "patch": "@@ -1239,21 +1239,6 @@ cxx_eval_call_expression (const constexpr_ctx *ctx, tree t,\n       return t;\n     }\n \n-  if (fun == current_function_decl)\n-    {\n-      /* A call to the current function, i.e.\n-\t constexpr int f (int i) {\n-\t   constexpr int j = f(i-1);\n-\t   return j;\n-\t }\n-\t This would be OK without the constexpr on the declaration of j.  */\n-      if (!ctx->quiet)\n-\terror_at (loc, \"%qD called in a constant expression before its \"\n-\t\t  \"definition is complete\", fun);\n-      *non_constant_p = true;\n-      return t;\n-    }\n-\n   constexpr_ctx new_ctx = *ctx;\n   if (DECL_CONSTRUCTOR_P (fun) && !ctx->object\n       && TREE_CODE (t) == AGGR_INIT_EXPR)\n@@ -1308,7 +1293,10 @@ cxx_eval_call_expression (const constexpr_ctx *ctx, tree t,\n         {\n \t  if (!ctx->quiet)\n \t    {\n-\t      if (DECL_INITIAL (fun))\n+\t      if (DECL_INITIAL (fun) == error_mark_node)\n+\t\terror_at (loc, \"%qD called in a constant expression before its \"\n+\t\t\t  \"definition is complete\", fun);\n+\t      else if (DECL_INITIAL (fun))\n \t\t{\n \t\t  /* The definition of fun was somehow unsuitable.  */\n \t\t  error_at (loc, \"%qD called in a constant expression\", fun);"}, {"sha": "2d93a5c9169e00fc5047e15a069fe1fcef23f8a6", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd6d4211a152d5f493fc634c210bbadb9ae0217/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd6d4211a152d5f493fc634c210bbadb9ae0217/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=ddd6d4211a152d5f493fc634c210bbadb9ae0217", "patch": "@@ -21741,7 +21741,8 @@ instantiate_decl (tree d, int defer_ok,\n   if (TREE_CODE (d) == FUNCTION_DECL)\n     {\n       deleted_p = DECL_DELETED_FN (code_pattern);\n-      pattern_defined = (DECL_SAVED_TREE (code_pattern) != NULL_TREE\n+      pattern_defined = ((DECL_SAVED_TREE (code_pattern) != NULL_TREE\n+\t\t\t  && DECL_INITIAL (code_pattern) != error_mark_node)\n \t\t\t || DECL_DEFAULTED_OUTSIDE_CLASS_P (code_pattern)\n \t\t\t || deleted_p);\n     }"}, {"sha": "79e0b5a8da1e18e5890996f700485667087ff938", "filename": "gcc/testsuite/g++.dg/cpp1y/constexpr-recursion1.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd6d4211a152d5f493fc634c210bbadb9ae0217/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-recursion1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd6d4211a152d5f493fc634c210bbadb9ae0217/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-recursion1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-recursion1.C?ref=ddd6d4211a152d5f493fc634c210bbadb9ae0217", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/70449\n+// { dg-do compile { target c++14 } }\n+// { dg-options \"-Wall\" }\n+\n+template <int N>\n+constexpr int f1 ()\n+{\n+  enum E { a = f1<0> () }; // { dg-error \"called in a constant expression before its definition is complete|is not an integer constant\" }\n+  return 0;\n+}\n+\n+constexpr int f3 ()\n+{\n+  enum E { a = f3 () };\t// { dg-error \"called in a constant expression before its definition is complete|is not an integer constant\" }\n+  return 0;\n+}"}]}