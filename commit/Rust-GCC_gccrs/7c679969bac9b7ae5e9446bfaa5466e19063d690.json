{"sha": "7c679969bac9b7ae5e9446bfaa5466e19063d690", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M2Nzk5NjliYWM5YjdhZTVlOTQ0NmJmYWE1NDY2ZTE5MDYzZDY5MA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-03-26T16:08:32Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-03-26T16:08:32Z"}, "message": "aarch64: Add costs for one element of a scatter store\n\nCurrently each element in a gather load is costed as a scalar_load\nand each element in a scatter store is costed as a scalar_store.\nThe load side seems to work pretty well in practice, since many\nCPU-specific costs give loads quite a high cost relative to\narithmetic operations.  However, stores usually have a cost\nof just 1, which means that scatters tend to appear too cheap.\n\nThis patch adds a separate cost for one element in a scatter store.\n\nLike with the previous patches, this one only becomes active if\na CPU selects use_new_vector_costs.  It should therefore have\na very low impact on other CPUs.\n\ngcc/\n\t* config/aarch64/aarch64-protos.h\n\t(sve_vec_cost::scatter_store_elt_cost): New member variable.\n\t* config/aarch64/aarch64.c (generic_sve_vector_cost): Update\n\taccordingly, taking the cost from the cost of a scalar_store.\n\t(a64fx_sve_vector_cost): Likewise.\n\t(aarch64_detect_vector_stmt_subtype): Detect scatter stores.", "tree": {"sha": "667828ec4157edded0b696f774f07e9d2ad4a02c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/667828ec4157edded0b696f774f07e9d2ad4a02c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c679969bac9b7ae5e9446bfaa5466e19063d690", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c679969bac9b7ae5e9446bfaa5466e19063d690", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c679969bac9b7ae5e9446bfaa5466e19063d690", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c679969bac9b7ae5e9446bfaa5466e19063d690/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1ff0847b2df6ad21f77e26e7e516643c5aa7d40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1ff0847b2df6ad21f77e26e7e516643c5aa7d40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1ff0847b2df6ad21f77e26e7e516643c5aa7d40"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "2ffa96ec24b5106ac57bb3f81de90c6ae8c70e17", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c679969bac9b7ae5e9446bfaa5466e19063d690/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c679969bac9b7ae5e9446bfaa5466e19063d690/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=7c679969bac9b7ae5e9446bfaa5466e19063d690", "patch": "@@ -256,12 +256,14 @@ struct sve_vec_cost : simd_vec_cost\n \t\t\t  unsigned int clast_cost,\n \t\t\t  unsigned int fadda_f16_cost,\n \t\t\t  unsigned int fadda_f32_cost,\n-\t\t\t  unsigned int fadda_f64_cost)\n+\t\t\t  unsigned int fadda_f64_cost,\n+\t\t\t  unsigned int scatter_store_elt_cost)\n     : simd_vec_cost (base),\n       clast_cost (clast_cost),\n       fadda_f16_cost (fadda_f16_cost),\n       fadda_f32_cost (fadda_f32_cost),\n-      fadda_f64_cost (fadda_f64_cost)\n+      fadda_f64_cost (fadda_f64_cost),\n+      scatter_store_elt_cost (scatter_store_elt_cost)\n   {}\n \n   /* The cost of a vector-to-scalar CLASTA or CLASTB instruction,\n@@ -274,6 +276,9 @@ struct sve_vec_cost : simd_vec_cost\n   const int fadda_f16_cost;\n   const int fadda_f32_cost;\n   const int fadda_f64_cost;\n+\n+  /* The per-element cost of a scatter store.  */\n+  const int scatter_store_elt_cost;\n };\n \n /* Cost for vector insn classes.  */"}, {"sha": "7f727413d01b642ace0c7deba9f458a15a51c1a7", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c679969bac9b7ae5e9446bfaa5466e19063d690/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c679969bac9b7ae5e9446bfaa5466e19063d690/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=7c679969bac9b7ae5e9446bfaa5466e19063d690", "patch": "@@ -638,7 +638,8 @@ static const sve_vec_cost generic_sve_vector_cost =\n   2, /* clast_cost  */\n   2, /* fadda_f16_cost  */\n   2, /* fadda_f32_cost  */\n-  2 /* fadda_f64_cost  */\n+  2, /* fadda_f64_cost  */\n+  1 /* scatter_store_elt_cost  */\n };\n \n /* Generic costs for vector insn classes.  */\n@@ -705,7 +706,8 @@ static const sve_vec_cost a64fx_sve_vector_cost =\n   13, /* clast_cost  */\n   13, /* fadda_f16_cost  */\n   13, /* fadda_f32_cost  */\n-  13 /* fadda_f64_cost  */\n+  13, /* fadda_f64_cost  */\n+  1 /* scatter_store_elt_cost  */\n };\n \n static const struct cpu_vector_cost a64fx_vector_cost =\n@@ -14279,6 +14281,13 @@ aarch64_detect_vector_stmt_subtype (vec_info *vinfo, vect_cost_for_stmt kind,\n       && DR_IS_WRITE (STMT_VINFO_DATA_REF (stmt_info)))\n     return simd_costs->store_elt_extra_cost;\n \n+  /* Detect cases in which a scalar_store is really storing one element\n+     in a scatter operation.  */\n+  if (kind == scalar_store\n+      && sve_costs\n+      && STMT_VINFO_MEMORY_ACCESS_TYPE (stmt_info) == VMAT_GATHER_SCATTER)\n+    return sve_costs->scatter_store_elt_cost;\n+\n   /* Detect cases in which vec_to_scalar represents an in-loop reduction.  */\n   if (kind == vec_to_scalar\n       && where == vect_body"}]}