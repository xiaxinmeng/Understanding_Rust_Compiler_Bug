{"sha": "f778dd4dbb61b05f02d2307d22e0cbd4bcecfc7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc3OGRkNGRiYjYxYjA1ZjAyZDIzMDdkMjJlMGNiZDRiY2VjZmM3YQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-05-14T06:26:23Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-05-14T06:26:23Z"}, "message": "re PR tree-optimization/57251 (ICE in optab_handler, at optabs.h:258)\n\n\tPR middle-end/57251\n\t* expr.c (expand_expr_real_2) <case WIDEN_MULT_EXPR>: Handle\n\tthe case when both op0 and op1 have VOIDmode.\n\n\t* gcc.dg/torture/pr57251.c: New test.\n\nFrom-SVN: r198860", "tree": {"sha": "bf9381f02ef3766d9290071d7a280107017ebefd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf9381f02ef3766d9290071d7a280107017ebefd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f778dd4dbb61b05f02d2307d22e0cbd4bcecfc7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f778dd4dbb61b05f02d2307d22e0cbd4bcecfc7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f778dd4dbb61b05f02d2307d22e0cbd4bcecfc7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f778dd4dbb61b05f02d2307d22e0cbd4bcecfc7a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bad4df9b766a375b51c37403f1d6015b4db19c56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bad4df9b766a375b51c37403f1d6015b4db19c56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bad4df9b766a375b51c37403f1d6015b4db19c56"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "ea7c39b4e55b231ee31846be1feedf569c182df3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f778dd4dbb61b05f02d2307d22e0cbd4bcecfc7a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f778dd4dbb61b05f02d2307d22e0cbd4bcecfc7a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f778dd4dbb61b05f02d2307d22e0cbd4bcecfc7a", "patch": "@@ -1,3 +1,9 @@\n+2013-05-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/57251\n+\t* expr.c (expand_expr_real_2) <case WIDEN_MULT_EXPR>: Handle\n+\tthe case when both op0 and op1 have VOIDmode.\n+\n 2013-05-14  Kaushik Phatak  <kaushik.phatak@kpitcummins.com>\n \n \t* config/rl78/rl78.md(mulsi3_g13): Add additional 'nop' required"}, {"sha": "0149740a10fcb6e4692d1c4c4367c3760f4b123b", "filename": "gcc/expr.c", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f778dd4dbb61b05f02d2307d22e0cbd4bcecfc7a/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f778dd4dbb61b05f02d2307d22e0cbd4bcecfc7a/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=f778dd4dbb61b05f02d2307d22e0cbd4bcecfc7a", "patch": "@@ -8390,6 +8390,15 @@ expand_expr_real_2 (sepops ops, rtx target, enum machine_mode tmode,\n \t      else\n \t\texpand_operands (treeop0, treeop1, NULL_RTX, &op1, &op0,\n \t\t\t\t EXPAND_NORMAL);\n+\t      /* op0 and op1 might still be constant, despite the above\n+\t\t != INTEGER_CST check.  Handle it.  */\n+\t      if (GET_MODE (op0) == VOIDmode && GET_MODE (op1) == VOIDmode)\n+\t\t{\n+\t\t  op0 = convert_modes (innermode, mode, op0, true);\n+\t\t  op1 = convert_modes (innermode, mode, op1, false);\n+\t\t  return REDUCE_BIT_FIELD (expand_mult (mode, op0, op1,\n+\t\t\t\t\t\t\ttarget, unsignedp));\n+\t\t}\n \t      goto binop3;\n \t    }\n \t}\n@@ -8412,6 +8421,19 @@ expand_expr_real_2 (sepops ops, rtx target, enum machine_mode tmode,\n \t\t{\n \t\t  expand_operands (treeop0, treeop1, NULL_RTX, &op0, &op1,\n \t\t\t\t   EXPAND_NORMAL);\n+\t\t  /* op0 and op1 might still be constant, despite the above\n+\t\t     != INTEGER_CST check.  Handle it.  */\n+\t\t  if (GET_MODE (op0) == VOIDmode && GET_MODE (op1) == VOIDmode)\n+\t\t    {\n+\t\t     widen_mult_const:\n+\t\t      op0 = convert_modes (innermode, mode, op0, zextend_p);\n+\t\t      op1\n+\t\t\t= convert_modes (innermode, mode, op1,\n+\t\t\t\t\t TYPE_UNSIGNED (TREE_TYPE (treeop1)));\n+\t\t      return REDUCE_BIT_FIELD (expand_mult (mode, op0, op1,\n+\t\t\t\t\t\t\t    target,\n+\t\t\t\t\t\t\t    unsignedp));\n+\t\t    }\n \t\t  temp = expand_widening_mult (mode, op0, op1, target,\n \t\t\t\t\t       unsignedp, this_optab);\n \t\t  return REDUCE_BIT_FIELD (temp);\n@@ -8424,9 +8446,14 @@ expand_expr_real_2 (sepops ops, rtx target, enum machine_mode tmode,\n \t\t  op0 = expand_normal (treeop0);\n \t\t  if (TREE_CODE (treeop1) == INTEGER_CST)\n \t\t    op1 = convert_modes (innermode, mode,\n-\t\t\t\t\t expand_normal (treeop1), unsignedp);\n+\t\t\t\t\t expand_normal (treeop1),\n+\t\t\t\t\t TYPE_UNSIGNED (TREE_TYPE (treeop1)));\n \t\t  else\n \t\t    op1 = expand_normal (treeop1);\n+\t\t  /* op0 and op1 might still be constant, despite the above\n+\t\t     != INTEGER_CST check.  Handle it.  */\n+\t\t  if (GET_MODE (op0) == VOIDmode && GET_MODE (op1) == VOIDmode)\n+\t\t    goto widen_mult_const;\n \t\t  temp = expand_binop (mode, other_optab, op0, op1, target,\n \t\t\t\t       unsignedp, OPTAB_LIB_WIDEN);\n \t\t  hipart = gen_highpart (innermode, temp);"}, {"sha": "24e9f24c729dfc6a5608e96bc270c99f66a82042", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f778dd4dbb61b05f02d2307d22e0cbd4bcecfc7a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f778dd4dbb61b05f02d2307d22e0cbd4bcecfc7a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f778dd4dbb61b05f02d2307d22e0cbd4bcecfc7a", "patch": "@@ -1,3 +1,8 @@\n+2013-05-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/57251\n+\t* gcc.dg/torture/pr57251.c: New test.\n+\n 2013-05-13  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/57264"}, {"sha": "2fe268c36e787fa85feb75d7daa6333ebb749134", "filename": "gcc/testsuite/gcc.dg/torture/pr57251.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f778dd4dbb61b05f02d2307d22e0cbd4bcecfc7a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57251.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f778dd4dbb61b05f02d2307d22e0cbd4bcecfc7a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57251.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57251.c?ref=f778dd4dbb61b05f02d2307d22e0cbd4bcecfc7a", "patch": "@@ -0,0 +1,12 @@\n+/* PR middle-end/57251 */\n+/* { dg-do compile } */\n+/* { dg-options \"-ftracer\" } */\n+\n+short a, b;\n+int\n+f (void)\n+{\n+  long long i = 2;\n+  a ? f () ? : 0 : b--;\n+  b &= i *= a |= 0;\n+}"}]}