{"sha": "09710f9934969dcb07131e1ed78b72e648123a3a", "node_id": "C_kwDOANBUbNoAKDA5NzEwZjk5MzQ5NjlkY2IwNzEzMWUxZWQ3OGI3MmU2NDgxMjNhM2E", "commit": {"author": {"name": "Steve Kargl", "email": "kargl@gcc.gnu.org", "date": "2022-12-18T03:15:43Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2022-12-18T03:36:59Z"}, "message": "Add a check for invalid use of BOZ with a derived type.\n\n\tPR fortran/107397\n\ngcc/fortran/ChangeLog:\n\n\t* decl.cc (add_init_expr_to_sym): Add check with new error message.\n\ngcc/testsuite/ChangeLog:\n\n\t* gfortran.dg/pr107397.f90: New test.", "tree": {"sha": "02d6fe0b2c3fd3e7d27744d3c4a2abc942f443c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02d6fe0b2c3fd3e7d27744d3c4a2abc942f443c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09710f9934969dcb07131e1ed78b72e648123a3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09710f9934969dcb07131e1ed78b72e648123a3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09710f9934969dcb07131e1ed78b72e648123a3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09710f9934969dcb07131e1ed78b72e648123a3a/comments", "author": null, "committer": null, "parents": [{"sha": "92bc3617572dd1f0ab22729b3c54a263668dbf52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92bc3617572dd1f0ab22729b3c54a263668dbf52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92bc3617572dd1f0ab22729b3c54a263668dbf52"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "1562dc22bc6e20d51d56c13d03c1b4aea1049e9b", "filename": "gcc/fortran/decl.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09710f9934969dcb07131e1ed78b72e648123a3a/gcc%2Ffortran%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09710f9934969dcb07131e1ed78b72e648123a3a/gcc%2Ffortran%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.cc?ref=09710f9934969dcb07131e1ed78b72e648123a3a", "patch": "@@ -2221,6 +2221,14 @@ add_init_expr_to_sym (const char *name, gfc_expr **initp, locus *var_locus)\n \t    sym->ts.f90_type = init->ts.f90_type;\n \t}\n \n+      /* Catch the case:  type(t), parameter :: x = z'1'.  */\n+      if (sym->ts.type == BT_DERIVED && init->ts.type == BT_BOZ)\n+\t{\n+\t  gfc_error (\"Entity %qs at %L is incompatible with a BOZ \"\n+\t\t     \"literal constant\", name, &sym->declared_at);\n+\t  return false;\n+\t}\n+\n       /* Add initializer.  Make sure we keep the ranks sane.  */\n       if (sym->attr.dimension && init->rank == 0)\n \t{"}, {"sha": "4592a275e70c8c246c5c26eeda824f752494e348", "filename": "gcc/testsuite/gfortran.dg/pr107397.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09710f9934969dcb07131e1ed78b72e648123a3a/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr107397.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09710f9934969dcb07131e1ed78b72e648123a3a/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr107397.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr107397.f90?ref=09710f9934969dcb07131e1ed78b72e648123a3a", "patch": "@@ -0,0 +1,9 @@\n+!{ dg-do compile }\n+!\n+program p\n+  type t\n+    real :: a = 1.0\n+  end type\n+  type(t), parameter :: x = z'1' ! { dg-error \"incompatible with BOZ\" }\n+  x%a = x%a + 2 ! { dg-error \"has no IMPLICIT type\"}\n+end"}]}