{"sha": "b42271d678018c9ff96567aada65f46d2586b54d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQyMjcxZDY3ODAxOGM5ZmY5NjU2N2FhZGE2NWY0NmQyNTg2YjU0ZA==", "commit": {"author": {"name": "Jan Beulich", "email": "jbeulich@novell.com", "date": "2004-07-08T21:52:36Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-07-08T21:52:36Z"}, "message": "expmed.c (extract_bit_field): Correct condition to use vec_extract patterns also on vector elements other...\n\n        * expmed.c (extract_bit_field): Correct condition to use vec_extract\n        patterns also on vector elements other than the first one.\n        * config/i386/i386.md (vec_extractv2df, vec_extractv4sf): Add missing\n        break statements.\n\nFrom-SVN: r84316", "tree": {"sha": "c4c8c8793fb22d365ca5436f5845c2c3c6148be9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4c8c8793fb22d365ca5436f5845c2c3c6148be9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b42271d678018c9ff96567aada65f46d2586b54d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b42271d678018c9ff96567aada65f46d2586b54d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b42271d678018c9ff96567aada65f46d2586b54d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b42271d678018c9ff96567aada65f46d2586b54d/comments", "author": null, "committer": null, "parents": [{"sha": "3922b21671431c0568408eb536a3c02e7e921eb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3922b21671431c0568408eb536a3c02e7e921eb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3922b21671431c0568408eb536a3c02e7e921eb2"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "1dd50f9a5e9eba76f5baa7f483fd23d939d93cae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b42271d678018c9ff96567aada65f46d2586b54d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b42271d678018c9ff96567aada65f46d2586b54d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b42271d678018c9ff96567aada65f46d2586b54d", "patch": "@@ -1,3 +1,10 @@\n+2004-07-08  Jan Beulich  <jbeulich@novell.com>\n+\n+\t* expmed.c (extract_bit_field): Correct condition to use vec_extract\n+\tpatterns also on vector elements other than the first one.\n+\t* config/i386/i386.md (vec_extractv2df, vec_extractv4sf): Add missing\n+\tbreak statements.\n+\n 2004-07-08  Geoffrey Keating  <geoffk@apple.com>\n \n \t* config/rs6000/darwin-ldouble.c: Correct reference"}, {"sha": "9ad227734f059d71e93d930893c86bc39d1fd720", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b42271d678018c9ff96567aada65f46d2586b54d/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b42271d678018c9ff96567aada65f46d2586b54d/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=b42271d678018c9ff96567aada65f46d2586b54d", "patch": "@@ -4838,6 +4838,7 @@\n         emit_insn (gen_sse_shufps (operands[0], operands[0], tmp,\n                                    GEN_INT (1 + (0<<2) + (2<<4) + (3<<6))));\n       }\n+      break;\n     case 2:\n       {\n         rtx op1 = simplify_gen_subreg (V4SFmode, operands[1], SFmode, 0);\n@@ -4886,6 +4887,7 @@\n         emit_insn (gen_sse_shufps (op0, tmp, tmp,\n                                    const1_rtx));\n       }\n+      break;\n     case 2:\n       {\n \trtx op0 = simplify_gen_subreg (V4SFmode, operands[1], SFmode, 0);\n@@ -4894,6 +4896,7 @@\n         emit_move_insn (tmp, operands[1]);\n         emit_insn (gen_sse_unpckhps (op0, tmp, tmp));\n       }\n+      break;\n     case 3:\n       {\n \trtx op0 = simplify_gen_subreg (V4SFmode, operands[1], SFmode, 0);\n@@ -4903,6 +4906,7 @@\n         emit_insn (gen_sse_shufps (op0, tmp, tmp,\n                                    GEN_INT (3)));\n       }\n+      break;\n     default:\n       abort ();\n     }"}, {"sha": "fc9ff4764d76663ce8b0aae59d88b8f87bcbee37", "filename": "gcc/expmed.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b42271d678018c9ff96567aada65f46d2586b54d/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b42271d678018c9ff96567aada65f46d2586b54d/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=b42271d678018c9ff96567aada65f46d2586b54d", "patch": "@@ -329,7 +329,7 @@ store_bit_field (rtx str_rtx, unsigned HOST_WIDE_INT bitsize,\n \n   value = protect_from_queue (value, 0);\n \n-  /* Use vec_extract patterns for extracting parts of vectors whenever\n+  /* Use vec_set patterns for inserting parts of vectors whenever\n      available.  */\n   if (VECTOR_MODE_P (GET_MODE (op0))\n       && !MEM_P (op0)\n@@ -1102,13 +1102,13 @@ extract_bit_field (rtx str_rtx, unsigned HOST_WIDE_INT bitsize,\n       && !MEM_P (op0)\n       && (vec_extract_optab->handlers[GET_MODE (op0)].insn_code\n \t  != CODE_FOR_nothing)\n-      && ((bitsize + bitnum) / GET_MODE_BITSIZE (GET_MODE_INNER (GET_MODE (op0)))\n-\t  == bitsize / GET_MODE_BITSIZE (GET_MODE_INNER (GET_MODE (op0)))))\n+      && ((bitnum + bitsize - 1) / GET_MODE_BITSIZE (GET_MODE_INNER (GET_MODE (op0)))\n+\t  == bitnum / GET_MODE_BITSIZE (GET_MODE_INNER (GET_MODE (op0)))))\n     {\n       enum machine_mode outermode = GET_MODE (op0);\n       enum machine_mode innermode = GET_MODE_INNER (outermode);\n       int icode = (int) vec_extract_optab->handlers[outermode].insn_code;\n-      int pos = bitnum / GET_MODE_BITSIZE (innermode);\n+      unsigned HOST_WIDE_INT pos = bitnum / GET_MODE_BITSIZE (innermode);\n       rtx rtxpos = GEN_INT (pos);\n       rtx src = op0;\n       rtx dest = NULL, pat, seq;"}]}