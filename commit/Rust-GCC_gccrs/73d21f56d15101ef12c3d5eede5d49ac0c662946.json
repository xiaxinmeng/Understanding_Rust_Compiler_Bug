{"sha": "73d21f56d15101ef12c3d5eede5d49ac0c662946", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNkMjFmNTZkMTUxMDFlZjEyYzNkNWVlZGU1ZDQ5YWMwYzY2Mjk0Ng==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2009-04-01T09:05:13Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2009-04-01T09:05:13Z"}, "message": "host-mingw32.c (mingw32_gt_pch_use_address): Make object_name unique for each process.\n\n2009-04-01  Kai Tietz  <kai.tietz@onevision.com>\n            Andrey Galkin <agalkin@hypercom.com>\n\n        PR/39492\n        * config/i386/host-mingw32.c (mingw32_gt_pch_use_address):\n        Make object_name unique for each process.\n\n\nCo-Authored-By: Andrey Galkin <agalkin@hypercom.com>\n\nFrom-SVN: r145394", "tree": {"sha": "55748baa20c6fd24c55c41441364e8daea37ab2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55748baa20c6fd24c55c41441364e8daea37ab2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73d21f56d15101ef12c3d5eede5d49ac0c662946", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73d21f56d15101ef12c3d5eede5d49ac0c662946", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73d21f56d15101ef12c3d5eede5d49ac0c662946", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73d21f56d15101ef12c3d5eede5d49ac0c662946/comments", "author": null, "committer": null, "parents": [{"sha": "03742a9b0159abadf88dc259d1331b48cf102e73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03742a9b0159abadf88dc259d1331b48cf102e73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03742a9b0159abadf88dc259d1331b48cf102e73"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "320985277579e551386f3bdcf03cb7b00726b7dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73d21f56d15101ef12c3d5eede5d49ac0c662946/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73d21f56d15101ef12c3d5eede5d49ac0c662946/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=73d21f56d15101ef12c3d5eede5d49ac0c662946", "patch": "@@ -1,3 +1,10 @@\n+2009-04-01  Kai Tietz  <kai.tietz@onevision.com>\n+\t    Andrey Galkin <agalkin@hypercom.com>\n+\n+\tPR/39492\n+\t* config/i386/host-mingw32.c (mingw32_gt_pch_use_address):\n+\tMake object_name unique for each process.\n+\n 2009-04-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR other/39591"}, {"sha": "1d2e59ab576e963e72a7c87629b4fe08eb39b1d3", "filename": "gcc/config/i386/host-mingw32.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73d21f56d15101ef12c3d5eede5d49ac0c662946/gcc%2Fconfig%2Fi386%2Fhost-mingw32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73d21f56d15101ef12c3d5eede5d49ac0c662946/gcc%2Fconfig%2Fi386%2Fhost-mingw32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fhost-mingw32.c?ref=73d21f56d15101ef12c3d5eede5d49ac0c662946", "patch": "@@ -120,8 +120,19 @@ mingw32_gt_pch_use_address (void *addr, size_t size, int fd,\n      namespace when running an application in a Terminal Server\n      session.  This causes failure since, by default, applications \n      don't get SeCreateGlobalPrivilege. We don't need global\n-     memory sharing so explicitly put object into Local namespace.  */\n-   const char object_name[] = \"Local\\\\MinGWGCCPCH\";\n+     memory sharing so explicitly put object into Local namespace.\n+\n+     There is also another issue, which appears if multiple concurrent\n+     GCC processes are using PCH functionality. MapViewOfFileEx returns\n+     \"Access Denied\" error. So we need to make the session-wide mapping\n+     name unique. Let's use current process ID for that.  */\n+#define OBJECT_NAME_FMT \"Local\\\\MinGWGCCPCH-\"\n+\n+  /* Allocate enough space for name prefix and max possible DWORD\n+    hexadecimal representation.  */\n+  char object_name[sizeof (OBJECT_NAME_FMT) + sizeof (DWORD) * 2];\n+  snprintf (object_name, sizeof (object_name), OBJECT_NAME_FMT \"%lx\",\n+            GetCurrentProcessId());\n \n   /* However, the documentation for CreateFileMapping says that on NT4\n      and earlier, backslashes are invalid in object name.  So, we need"}]}