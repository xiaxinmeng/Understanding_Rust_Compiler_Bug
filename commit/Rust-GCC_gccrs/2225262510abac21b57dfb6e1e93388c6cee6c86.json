{"sha": "2225262510abac21b57dfb6e1e93388c6cee6c86", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIyNTI2MjUxMGFiYWMyMWI1N2RmYjZlMWU5MzM4OGM2Y2VlNmM4Ng==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-09-06T12:00:11Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-09-06T12:00:11Z"}, "message": "configure.in (HAVE_AS_OFFSETABLE_LO10): Use -xarch=v9 unconditionally when gcc_cv_as_flags64 checks are gone.\n\n\t* configure.in (HAVE_AS_OFFSETABLE_LO10): Use -xarch=v9\n\tunconditionally when gcc_cv_as_flags64 checks are gone.\n\t* configure: Rebuilt.\n\nFrom-SVN: r56880", "tree": {"sha": "33a207dced485964cbeb5a5189b04aae0f8d149e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33a207dced485964cbeb5a5189b04aae0f8d149e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2225262510abac21b57dfb6e1e93388c6cee6c86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2225262510abac21b57dfb6e1e93388c6cee6c86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2225262510abac21b57dfb6e1e93388c6cee6c86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2225262510abac21b57dfb6e1e93388c6cee6c86/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "78fdd6f6373d7246c73da66c772ae36c2129c530", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78fdd6f6373d7246c73da66c772ae36c2129c530", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78fdd6f6373d7246c73da66c772ae36c2129c530"}], "stats": {"total": 92, "additions": 47, "deletions": 45}, "files": [{"sha": "2300556c9e8d6138eda7cfb89ab7ad3558402748", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2225262510abac21b57dfb6e1e93388c6cee6c86/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2225262510abac21b57dfb6e1e93388c6cee6c86/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2225262510abac21b57dfb6e1e93388c6cee6c86", "patch": "@@ -1,3 +1,9 @@\n+2002-09-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* configure.in (HAVE_AS_OFFSETABLE_LO10): Use -xarch=v9\n+\tunconditionally when gcc_cv_as_flags64 checks are gone.\n+\t* configure: Rebuilt.\n+\n 2002-09-06  Alan Modra  <amodra@bigpond.net.au>\n \n \t* config/rs6000/rs6000.md (extzvsi_internal2): Revert most of"}, {"sha": "c3b8b7fca3ed8bd5708f18daeded90660846ca00", "filename": "gcc/configure", "status": "modified", "additions": 20, "deletions": 22, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2225262510abac21b57dfb6e1e93388c6cee6c86/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2225262510abac21b57dfb6e1e93388c6cee6c86/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=2225262510abac21b57dfb6e1e93388c6cee6c86", "patch": "@@ -7707,42 +7707,40 @@ EOF\n \n     fi\n \n-    if test \"x$gcc_cv_as_flags64\" != xno; then\n-\techo $ac_n \"checking for assembler offsetable %lo() support\"\"... $ac_c\" 1>&6\n+    echo $ac_n \"checking for assembler offsetable %lo() support\"\"... $ac_c\" 1>&6\n echo \"configure:7713: checking for assembler offsetable %lo() support\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_offsetable_lo10'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   \n-\t    gcc_cv_as_offsetable_lo10=unknown\n-\t    if test \"x$gcc_cv_as\" != x; then\n-\t\t# Check if assembler has offsetable %lo()\n-\t\techo \"or %g1, %lo(ab) + 12, %g1\" > conftest.s\n-\t\techo \"or %g1, %lo(ab + 12), %g1\" > conftest1.s\n-\t\tif $gcc_cv_as $gcc_cv_as_flags64 -o conftest.o conftest.s \\\n-\t\t\t> /dev/null 2>&1 &&\n-\t\t   $gcc_cv_as $gcc_cv_as_flags64 -o conftest1.o conftest1.s \\\n-\t\t\t> /dev/null 2>&1; then\n-\t\t    if cmp conftest.o conftest1.o > /dev/null 2>&1; then\n-\t\t\tgcc_cv_as_offsetable_lo10=no\n-\t\t    else\n-\t\t\tgcc_cv_as_offsetable_lo10=yes\n-\t\t    fi\n-\t\telse\n+\tgcc_cv_as_offsetable_lo10=unknown\n+\tif test \"x$gcc_cv_as\" != x; then\n+\t    # Check if assembler has offsetable %lo()\n+\t    echo \"or %g1, %lo(ab) + 12, %g1\" > conftest.s\n+\t    echo \"or %g1, %lo(ab + 12), %g1\" > conftest1.s\n+\t    if $gcc_cv_as -xarch=v9 -o conftest.o conftest.s \\\n+\t\t    > /dev/null 2>&1 &&\n+\t       $gcc_cv_as -xarch=v9 -o conftest1.o conftest1.s \\\n+\t\t    > /dev/null 2>&1; then\n+\t\tif cmp conftest.o conftest1.o > /dev/null 2>&1; then\n \t\t    gcc_cv_as_offsetable_lo10=no\n+\t\telse\n+\t\t    gcc_cv_as_offsetable_lo10=yes\n \t\tfi\n-\t\trm -f conftest.s conftest.o conftest1.s conftest1.o\n+\t    else\n+\t\tgcc_cv_as_offsetable_lo10=no\n \t    fi\n-\t\n+\t    rm -f conftest.s conftest.o conftest1.s conftest1.o\n+\tfi\n+    \n fi\n \n echo \"$ac_t\"\"$gcc_cv_as_offsetable_lo10\" 1>&6\n-\tif test \"x$gcc_cv_as_offsetable_lo10\" = xyes; then\n-\t    cat >> confdefs.h <<\\EOF\n+    if test \"x$gcc_cv_as_offsetable_lo10\" = xyes; then\n+\tcat >> confdefs.h <<\\EOF\n #define HAVE_AS_OFFSETABLE_LO10 1\n EOF\n \n-\tfi\n     fi\n \n     ;;"}, {"sha": "a27c3b44b764df9ec00b303ca1aea305e33c933b", "filename": "gcc/configure.in", "status": "modified", "additions": 21, "deletions": 23, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2225262510abac21b57dfb6e1e93388c6cee6c86/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2225262510abac21b57dfb6e1e93388c6cee6c86/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=2225262510abac21b57dfb6e1e93388c6cee6c86", "patch": "@@ -1980,33 +1980,31 @@ EOF\n \t\t[Define if your assembler and linker support unaligned PC relative relocs against hidden symbols.])\n     fi\n \n-    if test \"x$gcc_cv_as_flags64\" != xno; then\n-\tAC_CACHE_CHECK([for assembler offsetable %lo() support],\n-\t    gcc_cv_as_offsetable_lo10, [\n-\t    gcc_cv_as_offsetable_lo10=unknown\n-\t    if test \"x$gcc_cv_as\" != x; then\n-\t\t# Check if assembler has offsetable %lo()\n-\t\techo \"or %g1, %lo(ab) + 12, %g1\" > conftest.s\n-\t\techo \"or %g1, %lo(ab + 12), %g1\" > conftest1.s\n-\t\tif $gcc_cv_as $gcc_cv_as_flags64 -o conftest.o conftest.s \\\n-\t\t\t> /dev/null 2>&1 &&\n-\t\t   $gcc_cv_as $gcc_cv_as_flags64 -o conftest1.o conftest1.s \\\n-\t\t\t> /dev/null 2>&1; then\n-\t\t    if cmp conftest.o conftest1.o > /dev/null 2>&1; then\n-\t\t\tgcc_cv_as_offsetable_lo10=no\n-\t\t    else\n-\t\t\tgcc_cv_as_offsetable_lo10=yes\n-\t\t    fi\n-\t\telse\n+    AC_CACHE_CHECK([for assembler offsetable %lo() support],\n+\tgcc_cv_as_offsetable_lo10, [\n+\tgcc_cv_as_offsetable_lo10=unknown\n+\tif test \"x$gcc_cv_as\" != x; then\n+\t    # Check if assembler has offsetable %lo()\n+\t    echo \"or %g1, %lo(ab) + 12, %g1\" > conftest.s\n+\t    echo \"or %g1, %lo(ab + 12), %g1\" > conftest1.s\n+\t    if $gcc_cv_as -xarch=v9 -o conftest.o conftest.s \\\n+\t\t    > /dev/null 2>&1 &&\n+\t       $gcc_cv_as -xarch=v9 -o conftest1.o conftest1.s \\\n+\t\t    > /dev/null 2>&1; then\n+\t\tif cmp conftest.o conftest1.o > /dev/null 2>&1; then\n \t\t    gcc_cv_as_offsetable_lo10=no\n+\t\telse\n+\t\t    gcc_cv_as_offsetable_lo10=yes\n \t\tfi\n-\t\trm -f conftest.s conftest.o conftest1.s conftest1.o\n+\t    else\n+\t\tgcc_cv_as_offsetable_lo10=no\n \t    fi\n-\t])\n-\tif test \"x$gcc_cv_as_offsetable_lo10\" = xyes; then\n-\t    AC_DEFINE(HAVE_AS_OFFSETABLE_LO10, 1,\n-\t\t[Define if your assembler supports offsetable %lo().])\n+\t    rm -f conftest.s conftest.o conftest1.s conftest1.o\n \tfi\n+    ])\n+    if test \"x$gcc_cv_as_offsetable_lo10\" = xyes; then\n+\tAC_DEFINE(HAVE_AS_OFFSETABLE_LO10, 1,\n+\t    [Define if your assembler supports offsetable %lo().])\n     fi\n \n     ;;"}]}