{"sha": "a4ab03b018e60eab02159bf335acdaf0478380fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRhYjAzYjAxOGU2MGVhYjAyMTU5YmYzMzVhY2RhZjA0NzgzODBmZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-29T16:16:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-29T16:16:34Z"}, "message": "Code clean up.\n\nFrom-SVN: r207263", "tree": {"sha": "858a358892e9faf3fa9832b3c91596f167a744a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/858a358892e9faf3fa9832b3c91596f167a744a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4ab03b018e60eab02159bf335acdaf0478380fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4ab03b018e60eab02159bf335acdaf0478380fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4ab03b018e60eab02159bf335acdaf0478380fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4ab03b018e60eab02159bf335acdaf0478380fe/comments", "author": null, "committer": null, "parents": [{"sha": "68d3bacf0d74c8990e7b1520649b1f2b151d31f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68d3bacf0d74c8990e7b1520649b1f2b151d31f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68d3bacf0d74c8990e7b1520649b1f2b151d31f5"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "771f83ac83e1a37837e3dfe8db160c2f316a4fe0", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4ab03b018e60eab02159bf335acdaf0478380fe/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4ab03b018e60eab02159bf335acdaf0478380fe/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=a4ab03b018e60eab02159bf335acdaf0478380fe", "patch": "@@ -155,8 +155,7 @@ package body Prj.Part is\n      (Flags   : Processing_Flags;\n       In_Tree : Project_Node_Tree_Ref;\n       Project : Project_Node_Id);\n-   --  Check that a non aggregate project does not import any aggregate\n-   --  project.\n+   --  Check that a non aggregate project does not import an aggregate project\n \n    procedure Create_Virtual_Extending_Project\n      (For_Project     : Project_Node_Id;\n@@ -1116,18 +1115,19 @@ package body Prj.Part is\n       In_Tree : Project_Node_Tree_Ref;\n       Project : Project_Node_Id)\n    is\n-      With_Clause, Imported : Project_Node_Id;\n+      With_Clause : Project_Node_Id;\n+      Imported    : Project_Node_Id;\n+\n    begin\n       if Project_Qualifier_Of (Project, In_Tree) /= Aggregate then\n          With_Clause := First_With_Clause_Of (Project, In_Tree);\n-\n          while Present (With_Clause) loop\n             Imported := Project_Node_Of (With_Clause, In_Tree);\n \n             if Project_Qualifier_Of (Imported, In_Tree) = Aggregate then\n                Error_Msg_Name_1 := Name_Id (Path_Name_Of (Imported, In_Tree));\n-               Error_Msg (Flags, \"cannot import aggregate project %%\",\n-                          Token_Ptr);\n+                  Error_Msg\n+                    (Flags, \"cannot import aggregate project %%\", Token_Ptr);\n                exit;\n             end if;\n "}]}