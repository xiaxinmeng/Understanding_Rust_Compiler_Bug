{"sha": "308fbc42903ba2f97c29eea52928802686a917f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA4ZmJjNDI5MDNiYTJmOTdjMjllZWE1MjkyODgwMjY4NmE5MTdmMQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-09-17T15:35:24Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-09-17T15:35:24Z"}, "message": "re PR rtl-optimization/66790 (Invalid uninitialized register handling in REE)\n\n\tPR rtl-optimization/66790\n\t* df-problems.c (LIVE): Amend documentation.\n\nFrom-SVN: r227874", "tree": {"sha": "c12e12796ec6015809c220ba206a9730a7d23acb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c12e12796ec6015809c220ba206a9730a7d23acb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/308fbc42903ba2f97c29eea52928802686a917f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/308fbc42903ba2f97c29eea52928802686a917f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/308fbc42903ba2f97c29eea52928802686a917f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/308fbc42903ba2f97c29eea52928802686a917f1/comments", "author": null, "committer": null, "parents": [{"sha": "01610fec498c0ed7a2d1377a3a2a960172355a4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01610fec498c0ed7a2d1377a3a2a960172355a4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01610fec498c0ed7a2d1377a3a2a960172355a4b"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "64664541f31d97e5f2d5513078c33f9ad7750e5c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308fbc42903ba2f97c29eea52928802686a917f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308fbc42903ba2f97c29eea52928802686a917f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=308fbc42903ba2f97c29eea52928802686a917f1", "patch": "@@ -1,3 +1,8 @@\n+2015-09-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR rtl-optimization/66790\n+\t* df-problems.c (LIVE): Amend documentation.\n+\n 2015-09-17  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* Makefile.in (OBJS): Add optabs-libfuncs.o, optabs-query.o"}, {"sha": "153732ae26f5e44470e41f631109478f6ffe1123", "filename": "gcc/df-problems.c", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308fbc42903ba2f97c29eea52928802686a917f1/gcc%2Fdf-problems.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308fbc42903ba2f97c29eea52928802686a917f1/gcc%2Fdf-problems.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-problems.c?ref=308fbc42903ba2f97c29eea52928802686a917f1", "patch": "@@ -1309,22 +1309,23 @@ df_lr_verify_transfer_functions (void)\n \n \f\n /*----------------------------------------------------------------------------\n-   LIVE AND MUST-INITIALIZED REGISTERS.\n+   LIVE AND MAY-INITIALIZED REGISTERS.\n \n    This problem first computes the IN and OUT bitvectors for the\n-   must-initialized registers problems, which is a forward problem.\n-   It gives the set of registers for which we MUST have an available\n-   definition on any path from the entry block to the entry/exit of\n-   a basic block.  Sets generate a definition, while clobbers kill\n+   may-initialized registers problems, which is a forward problem.\n+   It gives the set of registers for which we MAY have an available\n+   definition, i.e. for which there is an available definition on\n+   at least one path from the entry block to the entry/exit of a\n+   basic block.  Sets generate a definition, while clobbers kill\n    a definition.\n \n    In and out bitvectors are built for each basic block and are indexed by\n    regnum (see df.h for details).  In and out bitvectors in struct\n-   df_live_bb_info actually refers to the must-initialized problem;\n+   df_live_bb_info actually refers to the may-initialized problem;\n \n    Then, the in and out sets for the LIVE problem itself are computed.\n    These are the logical AND of the IN and OUT sets from the LR problem\n-   and the must-initialized problem.\n+   and the may-initialized problem.\n ----------------------------------------------------------------------------*/\n \n /* Private data used to verify the solution for this problem.  */\n@@ -1531,7 +1532,7 @@ df_live_confluence_n (edge e)\n }\n \n \n-/* Transfer function for the forwards must-initialized problem.  */\n+/* Transfer function for the forwards may-initialized problem.  */\n \n static bool\n df_live_transfer_function (int bb_index)\n@@ -1555,7 +1556,7 @@ df_live_transfer_function (int bb_index)\n }\n \n \n-/* And the LR info with the must-initialized registers, to produce the LIVE info.  */\n+/* And the LR info with the may-initialized registers to produce the LIVE info.  */\n \n static void\n df_live_finalize (bitmap all_blocks)"}]}