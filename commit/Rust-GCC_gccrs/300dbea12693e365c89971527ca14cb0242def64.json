{"sha": "300dbea12693e365c89971527ca14cb0242def64", "node_id": "C_kwDOANBUbNoAKDMwMGRiZWExMjY5M2UzNjVjODk5NzE1MjdjYTE0Y2IwMjQyZGVmNjQ", "commit": {"author": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2021-11-29T01:59:59Z"}, "committer": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2021-11-29T01:59:59Z"}, "message": "rs6000/test: Add emulated gather test case\n\nAs verified, the emulated gather capability of vectorizer\n(r12-2733) can help to speed up SPEC2017 510.parest_r on\nPower8/9/10 by 5% ~ 9% with option sets Ofast unroll and\nOfast lto.\n\nThis patch is to add a test case similar to the one in i386\nto add testing coverage for 510.parest_r hotspots.\n\nbtw, different from the one in i386, this uses unsigned int\nas INDEXTYPE since the unpack support for unsigned int\n(r12-3134) also matters for the hotspots vectorization.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/powerpc/vect-gather-1.c: New test.", "tree": {"sha": "e63cc02d5be7635d07df83bc936919071eb7b7cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e63cc02d5be7635d07df83bc936919071eb7b7cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/300dbea12693e365c89971527ca14cb0242def64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/300dbea12693e365c89971527ca14cb0242def64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/300dbea12693e365c89971527ca14cb0242def64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/300dbea12693e365c89971527ca14cb0242def64/comments", "author": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68332ab7ec58a89660db82569c5f4c2251d59741", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68332ab7ec58a89660db82569c5f4c2251d59741", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68332ab7ec58a89660db82569c5f4c2251d59741"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "bf98045ab03cf59439e718c125575ebfe0f4003a", "filename": "gcc/testsuite/gcc.target/powerpc/vect-gather-1.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/300dbea12693e365c89971527ca14cb0242def64/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvect-gather-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/300dbea12693e365c89971527ca14cb0242def64/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvect-gather-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvect-gather-1.c?ref=300dbea12693e365c89971527ca14cb0242def64", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* Profitable from Power8 since it supports efficient unaligned load.  */\n+/* { dg-options \"-Ofast -mdejagnu-cpu=power8 -fdump-tree-vect-details -fdump-tree-forwprop4\" } */\n+\n+#ifndef INDEXTYPE\n+#define INDEXTYPE unsigned int\n+#endif\n+double vmul(INDEXTYPE *rowstart, INDEXTYPE *rowend,\n+\t    double *luval, double *dst)\n+{\n+  double res = 0;\n+  for (const INDEXTYPE * col = rowstart; col != rowend; ++col, ++luval)\n+        res += *luval * dst[*col];\n+  return res;\n+}\n+\n+/* With gather emulation this should be profitable to vectorize from Power8.  */\n+/* { dg-final { scan-tree-dump \"loop vectorized\" \"vect\" } } */\n+/* The index vector loads and promotions should be scalar after forwprop.  */\n+/* { dg-final { scan-tree-dump-not \"vec_unpack\" \"forwprop4\" } } */"}]}