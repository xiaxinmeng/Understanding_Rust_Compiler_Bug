{"sha": "5a1a44503eb33a30057d524772cd1f7160d13c5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWExYTQ0NTAzZWIzM2EzMDA1N2Q1MjQ3NzJjZDFmNzE2MGQxM2M1Zg==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2006-02-05T15:54:49Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2006-02-05T15:54:49Z"}, "message": "x-ada-hpux10, [...]: New files.\n\n\t* pa/x-ada-hpux10, pa/t-pa-hpux10, pa/t-pa-hpux11: New files.\n\t* config.gcc (hppa[12]*-*-hpux10*): Use pa/t-pa-hpux10 instead of\n\tpa/t-pa.\n\t* config.gcc (hppa[12]*-*-hpux11*): Use pa/t-pa-hpux11 instead of\n\tpa/t-pa.\n\t* config.host (hppa*-*-hpux10*): Use pa/x-ada-hpux10 instead of\n\tpa/x-ada.\n\t* pa/t-pa-hpux: Add lib2funcs.asm and quadlib.c rules.\n\t* pa/t-pa64: Delete quadlib.c rule.\n\t* pa/x-ada: Revert last change.\n\t* pa/t-pa: Revert last change.  Delete quadlib.c rule.\n\nFrom-SVN: r110615", "tree": {"sha": "2eb4c36a112e71b037e8e4b032f41972ed7978be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2eb4c36a112e71b037e8e4b032f41972ed7978be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a1a44503eb33a30057d524772cd1f7160d13c5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a1a44503eb33a30057d524772cd1f7160d13c5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a1a44503eb33a30057d524772cd1f7160d13c5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a1a44503eb33a30057d524772cd1f7160d13c5f/comments", "author": null, "committer": null, "parents": [{"sha": "569f8d982a8147ed19d8370d127291c308116419", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/569f8d982a8147ed19d8370d127291c308116419", "html_url": "https://github.com/Rust-GCC/gccrs/commit/569f8d982a8147ed19d8370d127291c308116419"}], "stats": {"total": 69, "additions": 40, "deletions": 29}, "files": [{"sha": "e8a26efe66d64786a4581b612175af1930600436", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a1a44503eb33a30057d524772cd1f7160d13c5f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a1a44503eb33a30057d524772cd1f7160d13c5f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a1a44503eb33a30057d524772cd1f7160d13c5f", "patch": "@@ -1,3 +1,17 @@\n+2006-02-05  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* pa/x-ada-hpux10, pa/t-pa-hpux10, pa/t-pa-hpux11: New files.\n+\t* config.gcc (hppa[12]*-*-hpux10*): Use pa/t-pa-hpux10 instead of\n+\tpa/t-pa.\n+\t* config.gcc (hppa[12]*-*-hpux11*): Use pa/t-pa-hpux11 instead of\n+\tpa/t-pa.\n+\t* config.host (hppa*-*-hpux10*): Use pa/x-ada-hpux10 instead of\n+\tpa/x-ada.\n+\t* pa/t-pa-hpux: Add lib2funcs.asm and quadlib.c rules.\n+\t* pa/t-pa64: Delete quadlib.c rule.\n+\t* pa/x-ada: Revert last change.\n+\t* pa/t-pa: Revert last change.  Delete quadlib.c rule.\n+\n 2006-02-04  Zdenek Dvorak <dvorakz@suse.cz>\n \n \tPR rtl-optimization/26087"}, {"sha": "d4fdac31518a5996139c436a4b3d4d8f92b2d7b7", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a1a44503eb33a30057d524772cd1f7160d13c5f/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a1a44503eb33a30057d524772cd1f7160d13c5f/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=5a1a44503eb33a30057d524772cd1f7160d13c5f", "patch": "@@ -890,7 +890,7 @@ hppa[12]*-*-hpux10*)\n \t\textra_options=\"${extra_options} pa/pa-hpux1010.opt\"\n \t\t;;\n \tesac\n-\ttmake_file=\"pa/t-pa pa/t-pa-hpux pa/t-hpux-shlib\"\n+\ttmake_file=\"pa/t-pa-hpux10 pa/t-pa-hpux pa/t-hpux-shlib\"\n \tcase ${enable_threads} in\n \t  \"\")\n \t    if test x$have_pthread_h = xyes ; then\n@@ -967,7 +967,7 @@ hppa[12]*-*-hpux11*)\n \t\textra_options=\"${extra_options} pa/pa-hpux1111.opt\"\n \t\t;;\n \tesac\n-\ttmake_file=\"pa/t-pa pa/t-pa-hpux pa/t-hpux-shlib\"\n+\ttmake_file=\"pa/t-pa-hpux11 pa/t-pa-hpux pa/t-hpux-shlib\"\n \t# Set the libgcc version number\n \tif test x$sjlj = x1; then\n \t    tmake_file=\"$tmake_file pa/t-slibgcc-sjlj-ver\""}, {"sha": "f9b39e682f2bdd77b304a0046078de108571cc84", "filename": "gcc/config.host", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a1a44503eb33a30057d524772cd1f7160d13c5f/gcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a1a44503eb33a30057d524772cd1f7160d13c5f/gcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.host?ref=5a1a44503eb33a30057d524772cd1f7160d13c5f", "patch": "@@ -119,7 +119,10 @@ case ${host} in\n   hppa1.1-*-bsd*)\n     host_xmake_file=\"pa/x-ada\"\n     ;;\n-  hppa1.0-*-hpux10* | hppa1.1-*-hpux10* | hppa2*-*-hpux10* | \\\n+  hppa1.0-*-hpux10* | hppa1.1-*-hpux10* | hppa2*-*-hpux10*)\n+    out_host_hook_obj=host-hpux.o\n+    host_xmake_file=\"pa/x-ada-hpux10 x-hpux\"\n+    ;;\n   hppa1.0-*-hpux11* | hppa1.1-*-hpux11* | hppa2*-*-hpux11* | \\\n   hppa*64*-*-hpux11*)\n     out_host_hook_obj=host-hpux.o"}, {"sha": "cad060da0665e4b3e04c4b6e94b44c526ee4d7d6", "filename": "gcc/config/pa/t-pa", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a1a44503eb33a30057d524772cd1f7160d13c5f/gcc%2Fconfig%2Fpa%2Ft-pa", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a1a44503eb33a30057d524772cd1f7160d13c5f/gcc%2Fconfig%2Fpa%2Ft-pa", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Ft-pa?ref=5a1a44503eb33a30057d524772cd1f7160d13c5f", "patch": "@@ -1,15 +1,7 @@\n-LIB2FUNCS_EXTRA=lib2funcs.asm quadlib.c\n+TARGET_LIBGCC2_CFLAGS = -fPIC\n+\n+LIB2FUNCS_EXTRA=lib2funcs.asm\n \n lib2funcs.asm: $(srcdir)/config/pa/lib2funcs.asm\n \trm -f lib2funcs.asm\n \tcp $(srcdir)/config/pa/lib2funcs.asm .\n-\n-quadlib.c: $(srcdir)/config/pa/quadlib.c\n-\trm -f quadlib.c\n-\tcp $(srcdir)/config/pa/quadlib.c .\n-\n-ifeq ($(strip $(filter-out hppa% hp hpux10%,$(targ))),)\n-  TARGET_LIBGCC2_CFLAGS = -fPIC -D_T_HPUX10\n-else\n-  TARGET_LIBGCC2_CFLAGS = -fPIC\n-endif"}, {"sha": "1c62f4ee237a1444c4933fcb1e1386b51fde2601", "filename": "gcc/config/pa/t-pa-hpux", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a1a44503eb33a30057d524772cd1f7160d13c5f/gcc%2Fconfig%2Fpa%2Ft-pa-hpux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a1a44503eb33a30057d524772cd1f7160d13c5f/gcc%2Fconfig%2Fpa%2Ft-pa-hpux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Ft-pa-hpux?ref=5a1a44503eb33a30057d524772cd1f7160d13c5f", "patch": "@@ -1,2 +1,10 @@\n # So putenv and other functions get seen by fixproto.\n FIXPROTO_DEFINES = -D_HPUX_SOURCE -D_HIUX_SOURCE\n+\n+lib2funcs.asm: $(srcdir)/config/pa/lib2funcs.asm\n+\trm -f lib2funcs.asm\n+\tcp $(srcdir)/config/pa/lib2funcs.asm .\n+\n+quadlib.c: $(srcdir)/config/pa/quadlib.c\n+\trm -f quadlib.c\n+\tcp $(srcdir)/config/pa/quadlib.c ."}, {"sha": "105ef19f365a8886c3299bbfaf86e298115aaaa2", "filename": "gcc/config/pa/t-pa-hpux10", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a1a44503eb33a30057d524772cd1f7160d13c5f/gcc%2Fconfig%2Fpa%2Ft-pa-hpux10", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a1a44503eb33a30057d524772cd1f7160d13c5f/gcc%2Fconfig%2Fpa%2Ft-pa-hpux10", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Ft-pa-hpux10?ref=5a1a44503eb33a30057d524772cd1f7160d13c5f", "patch": "@@ -0,0 +1,2 @@\n+TARGET_LIBGCC2_CFLAGS = -fPIC -D_T_HPUX10\n+LIB2FUNCS_EXTRA=lib2funcs.asm quadlib.c"}, {"sha": "f36a75cb9c5e56e6eec3976cbd9ea9d1b8096165", "filename": "gcc/config/pa/t-pa-hpux11", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a1a44503eb33a30057d524772cd1f7160d13c5f/gcc%2Fconfig%2Fpa%2Ft-pa-hpux11", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a1a44503eb33a30057d524772cd1f7160d13c5f/gcc%2Fconfig%2Fpa%2Ft-pa-hpux11", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Ft-pa-hpux11?ref=5a1a44503eb33a30057d524772cd1f7160d13c5f", "patch": "@@ -0,0 +1,2 @@\n+TARGET_LIBGCC2_CFLAGS = -fPIC\n+LIB2FUNCS_EXTRA=lib2funcs.asm quadlib.c"}, {"sha": "b302cffca3ffb0e5e6250a4212a7ce0e15d957dd", "filename": "gcc/config/pa/t-pa64", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a1a44503eb33a30057d524772cd1f7160d13c5f/gcc%2Fconfig%2Fpa%2Ft-pa64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a1a44503eb33a30057d524772cd1f7160d13c5f/gcc%2Fconfig%2Fpa%2Ft-pa64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Ft-pa64?ref=5a1a44503eb33a30057d524772cd1f7160d13c5f", "patch": "@@ -1,10 +1,2 @@\n TARGET_LIBGCC2_CFLAGS = -fPIC -Dpa64=1 -DELF=1 -mlong-calls\n-\n LIB2FUNCS_EXTRA=quadlib.c\n-\n-# We'll need this once .init sections are enabled on PA64.\n-#EXTRA_PARTS = crtbegin.o crtend.o\n-\n-quadlib.c: $(srcdir)/config/pa/quadlib.c\n-\trm -f quadlib.c\n-\tcp $(srcdir)/config/pa/quadlib.c ."}, {"sha": "b60b3d7925bfb6337e9b8d3867ead1bccf585741", "filename": "gcc/config/pa/x-ada", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a1a44503eb33a30057d524772cd1f7160d13c5f/gcc%2Fconfig%2Fpa%2Fx-ada", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a1a44503eb33a30057d524772cd1f7160d13c5f/gcc%2Fconfig%2Fpa%2Fx-ada", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fx-ada?ref=5a1a44503eb33a30057d524772cd1f7160d13c5f", "patch": "@@ -1,10 +1,4 @@\n # The ada virtual array implementation requires that indexing be disabled on\n # hosts such as hpux that use a segmented memory architecture.  Both the c\n # and ada files need to be compiled with this option for correct operation.\n-# On HP-UX 10 hosts, we define _X_HPUX10 to cause __main () to be called at\n-# startup.\n-ifeq ($(strip $(filter-out hppa% hp hpux10%,$(targ))),)\n-  X_ADA_CFLAGS = -mdisable-indexing -D_X_HPUX10\n-else\n-  X_ADA_CFLAGS = -mdisable-indexing\n-endif\n+X_ADA_CFLAGS=-mdisable-indexing"}, {"sha": "d2b70753088d678b85478e31e8c2c37f4173dc1a", "filename": "gcc/config/pa/x-ada-hpux10", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a1a44503eb33a30057d524772cd1f7160d13c5f/gcc%2Fconfig%2Fpa%2Fx-ada-hpux10", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a1a44503eb33a30057d524772cd1f7160d13c5f/gcc%2Fconfig%2Fpa%2Fx-ada-hpux10", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fx-ada-hpux10?ref=5a1a44503eb33a30057d524772cd1f7160d13c5f", "patch": "@@ -0,0 +1,4 @@\n+# The ada virtual array implementation requires that indexing be disabled on\n+# hosts such as hpux that use a segmented memory architecture.  Both the c\n+# and ada files need to be compiled with this option for correct operation.\n+X_ADA_CFLAGS = -mdisable-indexing -D_X_HPUX10"}]}