{"sha": "6881e3c13eb5061d4ca5c01867e3107978da074f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg4MWUzYzEzZWI1MDYxZDRjYTVjMDE4NjdlMzEwNzk3OGRhMDc0Zg==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2018-12-12T17:12:25Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2018-12-12T17:12:25Z"}, "message": "Add support for SUBTARGET_OVERRIDE_OPTIONS on aarch64\n\n\t* config/aarch64/aarch64.c (aarch64_override_options): Once arch,\n\tcpu and tune were validated, insert SUBTARGET_OVERRIDE_OPTIONS if\n\tdefined.\n\nFrom-SVN: r267060", "tree": {"sha": "b7f90bc0f590af265cc19dbb4143d4a36b201890", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7f90bc0f590af265cc19dbb4143d4a36b201890"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6881e3c13eb5061d4ca5c01867e3107978da074f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6881e3c13eb5061d4ca5c01867e3107978da074f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6881e3c13eb5061d4ca5c01867e3107978da074f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6881e3c13eb5061d4ca5c01867e3107978da074f/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8921ccbb04cf3c009d0105af2bd695308918d5dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8921ccbb04cf3c009d0105af2bd695308918d5dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8921ccbb04cf3c009d0105af2bd695308918d5dc"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "4bc157d54f6a8acdbeb7eb9d1ae093b4e14bb9bc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6881e3c13eb5061d4ca5c01867e3107978da074f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6881e3c13eb5061d4ca5c01867e3107978da074f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6881e3c13eb5061d4ca5c01867e3107978da074f", "patch": "@@ -1,3 +1,9 @@\n+2018-12-12  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_override_options): Once arch,\n+\tcpu and tune were validated, insert SUBTARGET_OVERRIDE_OPTIONS if\n+\tdefined.\n+\n 2018-12-12  Olivier Hainque  <hainque@adacore.com>\n \n \t* config/aarch64/aarch64.c (PROBE_STACK_FIRST_REG) : Redefine as"}, {"sha": "5f416633cad24d1224f45b21bdcb11f59813d454", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6881e3c13eb5061d4ca5c01867e3107978da074f/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6881e3c13eb5061d4ca5c01867e3107978da074f/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=6881e3c13eb5061d4ca5c01867e3107978da074f", "patch": "@@ -11408,6 +11408,10 @@ aarch64_override_options (void)\n   if (aarch64_tune_string)\n     valid_tune = aarch64_validate_mtune (aarch64_tune_string, &selected_tune);\n \n+#ifdef SUBTARGET_OVERRIDE_OPTIONS\n+  SUBTARGET_OVERRIDE_OPTIONS;\n+#endif\n+\n   /* If the user did not specify a processor, choose the default\n      one for them.  This will be the CPU set during configuration using\n      --with-cpu, otherwise it is \"generic\".  */"}]}