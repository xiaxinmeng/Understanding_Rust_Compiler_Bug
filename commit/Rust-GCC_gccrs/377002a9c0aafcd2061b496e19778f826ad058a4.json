{"sha": "377002a9c0aafcd2061b496e19778f826ad058a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc3MDAyYTljMGFhZmNkMjA2MWI0OTZlMTk3NzhmODI2YWQwNThhNA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-06-09T23:13:58Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-06-09T23:13:58Z"}, "message": "bitmap.c (bitmap_elt_insert_after, [...]): Use checking asserts.\n\n\t* bitmap.c (bitmap_elt_insert_after, bitmap_first_set_bit,\n\tbitmap_first_set_bit, bitmap_last_set_bit, bitmap_last_set_bit,\n\tbitmap_and_into, bitmap_and_compl_into, bitmap_set_range,\n\tbitmap_compl_and_into, bitmap_elt_ior): Use checking asserts.\n\nFrom-SVN: r160516", "tree": {"sha": "2b01e9bc1d7b9c8d3199c5704a4864a60f1271e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b01e9bc1d7b9c8d3199c5704a4864a60f1271e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/377002a9c0aafcd2061b496e19778f826ad058a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/377002a9c0aafcd2061b496e19778f826ad058a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/377002a9c0aafcd2061b496e19778f826ad058a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/377002a9c0aafcd2061b496e19778f826ad058a4/comments", "author": null, "committer": null, "parents": [{"sha": "508141355c24fe58f796868bc5f54ccbf01d3b9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/508141355c24fe58f796868bc5f54ccbf01d3b9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/508141355c24fe58f796868bc5f54ccbf01d3b9a"}], "stats": {"total": 33, "additions": 20, "deletions": 13}, "files": [{"sha": "8e596375752305a5557be63d3205749746c37cf2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377002a9c0aafcd2061b496e19778f826ad058a4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377002a9c0aafcd2061b496e19778f826ad058a4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=377002a9c0aafcd2061b496e19778f826ad058a4", "patch": "@@ -1,3 +1,10 @@\n+2010-06-09  Jan Hubicka  <jh@suse.cz>\n+\n+\t* bitmap.c (bitmap_elt_insert_after, bitmap_first_set_bit,\n+\tbitmap_first_set_bit, bitmap_last_set_bit, bitmap_last_set_bit,\n+\tbitmap_and_into, bitmap_and_compl_into, bitmap_set_range,\n+\tbitmap_compl_and_into, bitmap_elt_ior): Use checking asserts.\n+\n 2010-06-09  Changpeng Fang  <changpeng.fang@amd.com>\n \n \t* tree-ssa-loop-prefetch.c (gather_memory_references_ref):"}, {"sha": "815960c0b44bffbe4653a8c568f53b341577ea30", "filename": "gcc/bitmap.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377002a9c0aafcd2061b496e19778f826ad058a4/gcc%2Fbitmap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377002a9c0aafcd2061b496e19778f826ad058a4/gcc%2Fbitmap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.c?ref=377002a9c0aafcd2061b496e19778f826ad058a4", "patch": "@@ -499,7 +499,7 @@ bitmap_elt_insert_after (bitmap head, bitmap_element *elt, unsigned int indx)\n     }\n   else\n     {\n-      gcc_assert (head->current);\n+      gcc_checking_assert (head->current);\n       node->next = elt->next;\n       if (node->next)\n \tnode->next->prev = node;\n@@ -780,7 +780,7 @@ bitmap_first_set_bit (const_bitmap a)\n   BITMAP_WORD word;\n   unsigned ix;\n \n-  gcc_assert (elt);\n+  gcc_checking_assert (elt);\n   bit_no = elt->indx * BITMAP_ELEMENT_ALL_BITS;\n   for (ix = 0; ix != BITMAP_ELEMENT_WORDS; ix++)\n     {\n@@ -815,7 +815,7 @@ bitmap_first_set_bit (const_bitmap a)\n   if (!(word & 0x1))\n     word >>= 1, bit_no += 1;\n \n- gcc_assert (word & 1);\n+ gcc_checking_assert (word & 1);\n #endif\n  return bit_no;\n }\n@@ -831,7 +831,7 @@ bitmap_last_set_bit (const_bitmap a)\n   BITMAP_WORD word;\n   int ix;\n \n-  gcc_assert (elt);\n+  gcc_checking_assert (elt);\n   while (elt->next)\n     elt = elt->next;\n   bit_no = elt->indx * BITMAP_ELEMENT_ALL_BITS;\n@@ -869,7 +869,7 @@ bitmap_last_set_bit (const_bitmap a)\n     word >>= 1, bit_no += 1;\n #endif\n \n- gcc_assert (word & 1);\n+ gcc_checking_assert (word & 1);\n  return bit_no;\n }\n \f\n@@ -975,8 +975,8 @@ bitmap_and_into (bitmap a, const_bitmap b)\n \t}\n     }\n   bitmap_elt_clear_from (a, a_elt);\n-  gcc_assert (!a->current == !a->first);\n-  gcc_assert (!a->current || a->indx == a->current->indx);\n+  gcc_assert (!a->current == !a->first\n+\t      && (!a->current || a->indx == a->current->indx));\n }\n \n \n@@ -1175,8 +1175,8 @@ bitmap_and_compl_into (bitmap a, const_bitmap b)\n \t  b_elt = b_elt->next;\n \t}\n     }\n-  gcc_assert (!a->current == !a->first);\n-  gcc_assert (!a->current || a->indx == a->current->indx);\n+  gcc_assert (!a->current == !a->first\n+\t      && (!a->current || a->indx == a->current->indx));\n   return changed != 0;\n }\n \n@@ -1207,7 +1207,7 @@ bitmap_set_range (bitmap head, unsigned int start, unsigned int count)\n       bitmap_element_link (head, elt);\n     }\n \n-  gcc_assert (elt->indx == first_index);\n+  gcc_checking_assert (elt->indx == first_index);\n   elt_prev = elt->prev;\n   for (i = first_index; i <= last_index; i++)\n     {\n@@ -1470,8 +1470,8 @@ bitmap_compl_and_into (bitmap a, const_bitmap b)\n \t  b_elt = b_elt->next;\n \t}\n     }\n-  gcc_assert (!a->current == !a->first);\n-  gcc_assert (!a->current || a->indx == a->current->indx);\n+  gcc_assert (!a->current == !a->first\n+\t      && (!a->current || a->indx == a->current->indx));\n   return;\n }\n \n@@ -1528,7 +1528,7 @@ bitmap_elt_ior (bitmap dst, bitmap_element *dst_elt, bitmap_element *dst_prev,\n       else\n \tsrc = b_elt;\n \n-      gcc_assert (src);\n+      gcc_checking_assert (src);\n       changed = bitmap_elt_copy (dst, dst_elt, dst_prev, src, changed);\n     }\n   return changed;"}]}