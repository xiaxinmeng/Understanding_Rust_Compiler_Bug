{"sha": "d7a3e18ca87744c3bd293396952a7ff36412d1ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdhM2UxOGNhODc3NDRjM2JkMjkzMzk2OTUyYTdmZjM2NDEyZDFjZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-07-08T08:11:50Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-07-08T08:11:50Z"}, "message": "[multiple changes]\n\n2013-07-08  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi: Add documentation for Img returning a function.\n\t* par-prag.adb: Minor reformatting.\n\t* restrict.adb: Minor reformatting and code reorganization.\n\n2013-07-08  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_res.adb: add guard to ASIS transform.\n\nFrom-SVN: r200769", "tree": {"sha": "00beb7041cf1daae8aa1a3f22f973ec78eb0472e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00beb7041cf1daae8aa1a3f22f973ec78eb0472e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7a3e18ca87744c3bd293396952a7ff36412d1ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7a3e18ca87744c3bd293396952a7ff36412d1ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7a3e18ca87744c3bd293396952a7ff36412d1ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7a3e18ca87744c3bd293396952a7ff36412d1ce/comments", "author": null, "committer": null, "parents": [{"sha": "046f1eeec356d116ef3dcfc512d0ef8085efc8bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/046f1eeec356d116ef3dcfc512d0ef8085efc8bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/046f1eeec356d116ef3dcfc512d0ef8085efc8bf"}], "stats": {"total": 49, "additions": 30, "deletions": 19}, "files": [{"sha": "0ce9b2e81518c3cfbb65b80e486e18ce8e0d1e1e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7a3e18ca87744c3bd293396952a7ff36412d1ce/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7a3e18ca87744c3bd293396952a7ff36412d1ce/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d7a3e18ca87744c3bd293396952a7ff36412d1ce", "patch": "@@ -1,3 +1,13 @@\n+2013-07-08  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi: Add documentation for Img returning a function.\n+\t* par-prag.adb: Minor reformatting.\n+\t* restrict.adb: Minor reformatting and code reorganization.\n+\n+2013-07-08  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_res.adb: add guard to ASIS transform.\n+\n 2013-07-08  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch9.adb (Expand_N_Asynchronous_Select): If the trigger"}, {"sha": "85bc98f7461d2cd848c9d44cbb801c9591a6a334", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7a3e18ca87744c3bd293396952a7ff36412d1ce/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7a3e18ca87744c3bd293396952a7ff36412d1ce/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=d7a3e18ca87744c3bd293396952a7ff36412d1ce", "patch": "@@ -8057,8 +8057,8 @@ indicates whether or not the corresponding actual type has discriminants.\n @unnumberedsec Attribute Img\n @findex Img\n @noindent\n-The @code{Img} attribute differs from @code{Image} in that it may be\n-applied to objects as well as types, in which case it gives the\n+The @code{Img} attribute differs from @code{Image} in that it is applied\n+directly to an object, and yields the same result as\n @code{Image} for the subtype of the object.  This is convenient for\n debugging:\n \n@@ -8076,6 +8076,12 @@ Put_Line (\"X = \" & @var{T}'Image (X));\n @noindent\n where @var{T} is the (sub)type of the object @code{X}.\n \n+Note that technically, in analogy to @code{Image},\n+@code{X'Img} returns a parameterless function\n+that returns the appropriate string when called. This means that\n+@code{X'Img} can be renamed as a function-returning-string, or used\n+in an instantiation as a function parameter.\n+\n @node Attribute Integer_Value\n @unnumberedsec Attribute Integer_Value\n @findex Integer_Value"}, {"sha": "4d01db09d124c50d489c194e0ae5599233621b8c", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7a3e18ca87744c3bd293396952a7ff36412d1ce/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7a3e18ca87744c3bd293396952a7ff36412d1ce/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=d7a3e18ca87744c3bd293396952a7ff36412d1ce", "patch": "@@ -232,10 +232,8 @@ function Prag (Pragma_Node : Node_Id; Semi : Source_Ptr) return Node_Id is\n          Id := Chars (Arg);\n          Expr := Expression (Arg);\n \n-         if Id = No_Name\n-           and then Nkind (Expr) = N_Identifier\n-         then\n-            case  Chars (Expr) is\n+         if Id = No_Name and then Nkind (Expr) = N_Identifier then\n+            case Chars (Expr) is\n                when Name_No_Obsolescent_Features =>\n                   Set_Restriction (No_Obsolescent_Features, Pragma_Node);\n                   Restriction_Warnings (No_Obsolescent_Features) :="}, {"sha": "a90cf1adf9054888aaff36787cb706972f3c80a4", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7a3e18ca87744c3bd293396952a7ff36412d1ce/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7a3e18ca87744c3bd293396952a7ff36412d1ce/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=d7a3e18ca87744c3bd293396952a7ff36412d1ce", "patch": "@@ -1171,20 +1171,16 @@ package body Restrict is\n \n    function Same_Unit (U1, U2 : Node_Id) return Boolean is\n    begin\n-      if Nkind (U1) = N_Identifier then\n-         return Nkind (U2) = N_Identifier and then Chars (U1) = Chars (U2);\n+      if Nkind (U1) = N_Identifier and then Nkind (U2) = N_Identifier then\n+         return Chars (U1) = Chars (U2);\n \n-      elsif Nkind (U2) = N_Identifier then\n-         return False;\n-\n-      elsif (Nkind (U1) = N_Selected_Component\n-             or else Nkind (U1) = N_Expanded_Name)\n-        and then\n-          (Nkind (U2) = N_Selected_Component\n-           or else Nkind (U2) = N_Expanded_Name)\n+      elsif Nkind_In (U1, N_Selected_Component, N_Expanded_Name)\n+              and then\n+            Nkind_In (U2, N_Selected_Component, N_Expanded_Name)\n       then\n          return Same_Unit (Prefix (U1), Prefix (U2))\n-           and then Same_Unit (Selector_Name (U1), Selector_Name (U2));\n+                  and then\n+                Same_Unit (Selector_Name (U1), Selector_Name (U2));\n       else\n          return False;\n       end if;"}, {"sha": "61f7712a0902af307e826d029c5e4f4ef2faabef", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7a3e18ca87744c3bd293396952a7ff36412d1ce/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7a3e18ca87744c3bd293396952a7ff36412d1ce/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=d7a3e18ca87744c3bd293396952a7ff36412d1ce", "patch": "@@ -1578,9 +1578,10 @@ package body Sem_Res is\n       end if;\n \n       --  If in ASIS_Mode, propagate operand types to original actuals of\n-      --  function call, which would otherwise not be fully resolved.\n+      --  function call, which would otherwise not be fully resolved. If\n+      --  the call has already been constant-folded, nothing to do.\n \n-      if ASIS_Mode then\n+      if ASIS_Mode and then Nkind (N) in N_Op then\n          if Is_Binary then\n             Set_Parameter_Associations\n               (Original_Node (N),"}]}