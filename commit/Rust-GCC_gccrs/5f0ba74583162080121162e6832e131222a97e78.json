{"sha": "5f0ba74583162080121162e6832e131222a97e78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYwYmE3NDU4MzE2MjA4MDEyMTE2MmU2ODMyZTEzMTIyMmE5N2U3OA==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2015-11-13T21:11:42Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2015-11-13T21:11:42Z"}, "message": "re PR fortran/68319 (ICE on using interface with included entry)\n\n2015-11-13  Steven G. Kargl  <kargl@gccc.gnu.org>\n\n\tPR fortran/68319\n\t* decl.c (gfc_match_data, gfc_match_entry): Enforce F2008:C1206.\n\t* io.c (gfc_match_format): Ditto.\n\t* match.c (gfc_match_st_function): Ditto.\n\n2015-11-13  Steven G. Kargl  <kargl@gccc.gnu.org>\n\n\tPR fortran/68319\n\t* gfortran.dg/pr68319.f90: New test.\n\nFrom-SVN: r230351", "tree": {"sha": "7f2c561457336fc4f7da2aca28df95d5c98a0c45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f2c561457336fc4f7da2aca28df95d5c98a0c45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f0ba74583162080121162e6832e131222a97e78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f0ba74583162080121162e6832e131222a97e78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f0ba74583162080121162e6832e131222a97e78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f0ba74583162080121162e6832e131222a97e78/comments", "author": null, "committer": null, "parents": [{"sha": "ae66757f2399774a38d73c1fce3344d04e2a56e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae66757f2399774a38d73c1fce3344d04e2a56e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae66757f2399774a38d73c1fce3344d04e2a56e2"}], "stats": {"total": 72, "additions": 72, "deletions": 0}, "files": [{"sha": "a455b6bf5311217f35df544f66d3d3b547f80b1e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f0ba74583162080121162e6832e131222a97e78/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f0ba74583162080121162e6832e131222a97e78/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5f0ba74583162080121162e6832e131222a97e78", "patch": "@@ -1,3 +1,10 @@\n+2015-11-13  Steven G. Kargl  <kargl@gccc.gnu.org>\n+\n+\tPR fortran/68319\n+\t* decl.c (gfc_match_data, gfc_match_entry): Enforce F2008:C1206.\n+\t* io.c (gfc_match_format): Ditto.\n+\t* match.c (gfc_match_st_function): Ditto.\n+\n 2015-11-13  David Malcolm  <dmalcolm@redhat.com>\n \n \t* error.c (gfc_warning): Pass line_table to rich_location ctor."}, {"sha": "6d76a7fd5aef0e88afcbb7b75e25dfba38bca4db", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f0ba74583162080121162e6832e131222a97e78/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f0ba74583162080121162e6832e131222a97e78/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=5f0ba74583162080121162e6832e131222a97e78", "patch": "@@ -552,6 +552,15 @@ gfc_match_data (void)\n   gfc_data *new_data;\n   match m;\n \n+  /* Before parsing the rest of a DATA statement, check F2008:c1206.  */\n+  if ((gfc_current_state () == COMP_FUNCTION\n+       || gfc_current_state () == COMP_SUBROUTINE)\n+      && gfc_state_stack->previous->state == COMP_INTERFACE)\n+    {\n+      gfc_error (\"DATA statement at %C cannot appear within an INTERFACE\");\n+      return MATCH_ERROR;\n+    }\n+\n   set_in_match_data (true);\n \n   for (;;)\n@@ -5767,6 +5776,13 @@ gfc_match_entry (void)\n       return MATCH_ERROR;\n     }\n \n+  if ((state == COMP_SUBROUTINE || state == COMP_FUNCTION)\n+      && gfc_state_stack->previous->state == COMP_INTERFACE)\n+    {\n+      gfc_error (\"ENTRY statement at %C cannot appear within an INTERFACE\");\n+      return MATCH_ERROR;\n+    }\n+\n   module_procedure = gfc_current_ns->parent != NULL\n \t\t   && gfc_current_ns->parent->proc_name\n \t\t   && gfc_current_ns->parent->proc_name->attr.flavor"}, {"sha": "8cf952f95a800a6ec5b48081386a2316af90304a", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f0ba74583162080121162e6832e131222a97e78/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f0ba74583162080121162e6832e131222a97e78/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=5f0ba74583162080121162e6832e131222a97e78", "patch": "@@ -1199,6 +1199,15 @@ gfc_match_format (void)\n       return MATCH_ERROR;\n     }\n \n+  /* Before parsing the rest of a FORMAT statement, check F2008:c1206.  */\n+  if ((gfc_current_state () == COMP_FUNCTION\n+       || gfc_current_state () == COMP_SUBROUTINE)\n+      && gfc_state_stack->previous->state == COMP_INTERFACE)\n+    {\n+      gfc_error (\"FORMAT statement at %C cannot appear within an INTERFACE\");\n+      return MATCH_ERROR;\n+    }\n+\n   if (gfc_statement_label == NULL)\n     {\n       gfc_error (\"Missing format label at %C\");"}, {"sha": "22b0d7d42f725463a27ff74b560b8426458c3e29", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f0ba74583162080121162e6832e131222a97e78/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f0ba74583162080121162e6832e131222a97e78/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=5f0ba74583162080121162e6832e131222a97e78", "patch": "@@ -4913,6 +4913,15 @@ gfc_match_st_function (void)\n \n   sym->value = expr;\n \n+  if ((gfc_current_state () == COMP_FUNCTION\n+       || gfc_current_state () == COMP_SUBROUTINE)\n+      && gfc_state_stack->previous->state == COMP_INTERFACE)\n+    {\n+      gfc_error (\"Statement function at %L cannot appear within an INTERFACE\",\n+\t\t &expr->where);\n+      return MATCH_ERROR;\n+    }\n+\n   if (!gfc_notify_std (GFC_STD_F95_OBS, \"Statement function at %C\"))\n     return MATCH_ERROR;\n "}, {"sha": "e01d0c6fc171af4cdfab442ac2c7af2d0beb35e9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f0ba74583162080121162e6832e131222a97e78/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f0ba74583162080121162e6832e131222a97e78/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5f0ba74583162080121162e6832e131222a97e78", "patch": "@@ -1,3 +1,8 @@\n+2015-11-13  Steven G. Kargl  <kargl@gccc.gnu.org>\n+\n+\tPR fortran/68319\n+\t* gfortran.dg/pr68319.f90: New test.\n+\n 2015-11-13  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* gcc.target/powerpc/float128-hw.c: New test for IEEE 128-bit"}, {"sha": "941316d71e748178b46eed9ed5b60a34c3e5fb67", "filename": "gcc/testsuite/gfortran.dg/pr68319.f90", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f0ba74583162080121162e6832e131222a97e78/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr68319.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f0ba74583162080121162e6832e131222a97e78/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr68319.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr68319.f90?ref=5f0ba74583162080121162e6832e131222a97e78", "patch": "@@ -0,0 +1,26 @@\n+! { dg-do compile }\n+! PR fortran/68319\n+!\n+subroutine foo\n+\n+   interface\n+\n+      real function bar(i)\n+         f(i) = 2 * i         ! { dg-error \"cannot appear within\" }\n+      end function bar\n+\n+      real function bah(j)\n+         entry boo(j)         ! { dg-error \"cannot appear within\" }\n+      end function bah\n+\n+      real function fu(j)\n+         data i /1/           ! { dg-error \"cannot appear within\" }\n+      end function fu\n+\n+      real function fee(j)\n+10       format('(A)')        ! { dg-error \"cannot appear within\" }\n+      end function fee\n+\n+   end interface\n+\n+end subroutine foo"}]}