{"sha": "9ffa2541c214f58de29bafe667c066039d705871", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWZmYTI1NDFjMjE0ZjU4ZGUyOWJhZmU2NjdjMDY2MDM5ZDcwNTg3MQ==", "commit": {"author": {"name": "Bob Manson", "email": "manson@charmed.cygnus.com", "date": "1996-09-05T00:43:02Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1996-09-05T00:43:02Z"}, "message": "except.c (expand_start_try_stmts): Move to except.c in the backend.\n\n\t* except.c (expand_start_try_stmts): Move to except.c in the backend.\n\t(expand_end_try_stmts): Remove.\n\n\t* init.c (perform_member_init): Use add_partial_entry () instead\n\tof directly manipulating lists.\n\t(emit_base_init): Ditto.\n\nFrom-SVN: r12689", "tree": {"sha": "1bbaef1d75a7c7ea9cdf8d1f92a2a385299079dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bbaef1d75a7c7ea9cdf8d1f92a2a385299079dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ffa2541c214f58de29bafe667c066039d705871", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ffa2541c214f58de29bafe667c066039d705871", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ffa2541c214f58de29bafe667c066039d705871", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ffa2541c214f58de29bafe667c066039d705871/comments", "author": null, "committer": null, "parents": [{"sha": "98d283063056ace6070cddf0c2e23f4ca95e2f60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98d283063056ace6070cddf0c2e23f4ca95e2f60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98d283063056ace6070cddf0c2e23f4ca95e2f60"}], "stats": {"total": 61, "additions": 18, "deletions": 43}, "files": [{"sha": "7bae0fcbd9b0f0ed3069f5c3448b33f21c8da1c6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ffa2541c214f58de29bafe667c066039d705871/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ffa2541c214f58de29bafe667c066039d705871/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9ffa2541c214f58de29bafe667c066039d705871", "patch": "@@ -1,3 +1,12 @@\n+Wed Sep  4 17:16:09 1996  Bob Manson  <manson@charmed.cygnus.com>\n+\n+\t* except.c (expand_start_try_stmts): Move to except.c in the backend.\n+\t(expand_end_try_stmts): Remove.\n+\n+\t* init.c (perform_member_init): Use add_partial_entry () instead\n+\tof directly manipulating lists.\n+\t(emit_base_init): Ditto.\n+\n Thu Aug 22 01:09:22 1996  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* decl.c (start_function): Only check interface_* for templates"}, {"sha": "d48257d6bd68d9c7e52dfb7b6e4381cfa1e45e47", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ffa2541c214f58de29bafe667c066039d705871/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ffa2541c214f58de29bafe667c066039d705871/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=9ffa2541c214f58de29bafe667c066039d705871", "patch": "@@ -2132,15 +2132,7 @@ extern void check_default_args\t\t\tPROTO((tree));\n extern void mark_used\t\t\t\tPROTO((tree));\n \n /* in except.c */\n-extern tree protect_list;\n-extern void expand_eh_region_start\t\tPROTO((void));\n-extern void expand_eh_region_end\t\tPROTO((tree));\n-extern void end_protect_partials\t\tPROTO((void));\n extern void expand_exception_blocks\t\tPROTO((void));\n-extern void expand_start_try_stmts\t\tPROTO((void));\n-extern void expand_end_try_stmts\t\tPROTO((void));\n-extern void expand_start_all_catch\t\tPROTO((void));\n-extern void expand_end_all_catch\t\tPROTO((void));\n extern void start_catch_block\t\t\tPROTO((tree, tree));\n extern void end_catch_block\t\t\tPROTO((void));\n extern void expand_throw\t\t\tPROTO((tree));"}, {"sha": "6086aa605ca70fd2396d743fbe04b44a300d0da2", "filename": "gcc/cp/except.c", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ffa2541c214f58de29bafe667c066039d705871/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ffa2541c214f58de29bafe667c066039d705871/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=9ffa2541c214f58de29bafe667c066039d705871", "patch": "@@ -347,23 +347,6 @@ init_exception_processing ()\n   saved_in_catch = lookup_name (get_identifier (\"__eh_in_catch\"), 0);\n }\n \n-/* Call this on start of a try block.  */\n-\n-void\n-expand_start_try_stmts ()\n-{\n-  if (! doing_eh (1))\n-    return;\n-\n-  expand_eh_region_start ();\n-}\n-\n-void\n-expand_end_try_stmts ()\n-{\n-  expand_eh_region_end (integer_zero_node);\n-}\n-\n /* Build a type value for use at runtime for a type that is matched\n    against by the exception handling system.  */\n "}, {"sha": "8ac11e888d6e1bf35bfd7f470c6185468db8db19", "filename": "gcc/cp/init.c", "status": "modified", "additions": 7, "deletions": 14, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ffa2541c214f58de29bafe667c066039d705871/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ffa2541c214f58de29bafe667c066039d705871/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=9ffa2541c214f58de29bafe667c066039d705871", "patch": "@@ -153,10 +153,9 @@ expand_direct_vtbls_init (real_binfo, binfo, init_self, can_elide, addr)\n /* Subroutine of emit_base_init.  */\n \n static void\n-perform_member_init (member, name, init, explicit, protect_list)\n+perform_member_init (member, name, init, explicit)\n      tree member, name, init;\n      int explicit;\n-     tree *protect_list;\n {\n   tree decl;\n   tree type = TREE_TYPE (member);\n@@ -244,10 +243,7 @@ perform_member_init (member, name, init, explicit, protect_list)\n \t\t\t   LOOKUP_NONVIRTUAL|LOOKUP_DESTRUCTOR, 0);\n \n       if (expr != error_mark_node)\n-\t{\n-\t  expand_eh_region_start ();\n-\t  *protect_list = tree_cons (NULL_TREE, expr, *protect_list);\n-\t}\n+\tadd_partial_entry (expr);\n     }\n }\n \n@@ -532,8 +528,6 @@ emit_base_init (t, immediately)\n   int i, n_baseclasses = binfos ? TREE_VEC_LENGTH (binfos) : 0;\n   tree expr = NULL_TREE;\n \n-  my_friendly_assert (protect_list == NULL_TREE, 999);\n-\n   if (! immediately)\n     {\n       int momentary;\n@@ -618,15 +612,14 @@ emit_base_init (t, immediately)\n \n       if (TYPE_NEEDS_DESTRUCTOR (BINFO_TYPE (base_binfo)))\n \t{\n-\t  expand_eh_region_start ();\n+\t  tree expr;\n \n \t  /* All cleanups must be on the function_obstack.  */\n \t  push_obstacks_nochange ();\n \t  resume_temporary_allocation ();\n-\t  protect_list = tree_cons (NULL_TREE,\n-\t\t\t\t    build_partial_cleanup_for (base_binfo),\n-\t\t\t\t    protect_list);\n+\t  expr = build_partial_cleanup_for (base_binfo);\n \t  pop_obstacks ();\n+\t  add_partial_entry (expr);\n \t}\n \n       rbase_init_list = TREE_CHAIN (rbase_init_list);\n@@ -677,7 +670,7 @@ emit_base_init (t, immediately)\n \t  from_init_list = 0;\n \t}\n \n-      perform_member_init (member, name, init, from_init_list, &protect_list);\n+      perform_member_init (member, name, init, from_init_list);\n       mem_init_list = TREE_CHAIN (mem_init_list);\n     }\n \n@@ -715,7 +708,7 @@ emit_base_init (t, immediately)\n \t  my_friendly_assert (DECL_FIELD_CONTEXT (field) != t, 351);\n #endif\n \n-\t  perform_member_init (field, name, init, 1, &protect_list);\n+\t  perform_member_init (field, name, init, 1);\n \t}\n       mem_init_list = TREE_CHAIN (mem_init_list);\n     }"}, {"sha": "8e928f9f8c97ebf93e88c23a03b6668d385072c7", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ffa2541c214f58de29bafe667c066039d705871/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ffa2541c214f58de29bafe667c066039d705871/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=9ffa2541c214f58de29bafe667c066039d705871", "patch": "@@ -3700,8 +3700,7 @@ function_try_block:\n \t\t  expand_start_early_try_stmts ();\n \t\t}\n \t  ctor_initializer_opt compstmt_or_error\n-\t\t{ expand_end_try_stmts ();\n-\t\t  expand_start_all_catch (); }\n+\t\t{ expand_start_all_catch (); }\n \t  handler_seq\n \t\t{\n \t\t  int nested = (hack_decl_function_context\n@@ -3715,8 +3714,7 @@ try_block:\n \t  TRY\n \t\t{ expand_start_try_stmts (); }\n \t  compstmt\n-\t\t{ expand_end_try_stmts ();\n-\t\t  expand_start_all_catch (); }\n+\t\t{ expand_start_all_catch (); }\n \t  handler_seq\n \t\t{ expand_end_all_catch (); }\n \t;"}]}