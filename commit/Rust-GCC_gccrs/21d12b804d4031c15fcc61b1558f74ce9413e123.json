{"sha": "21d12b804d4031c15fcc61b1558f74ce9413e123", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFkMTJiODA0ZDQwMzFjMTVmY2M2MWIxNTU4Zjc0Y2U5NDEzZTEyMw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-07T05:32:35Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-07T05:32:35Z"}, "message": "(simplify_binary_operation): For DIV by 0, do nothing.\n\nFrom-SVN: r2066", "tree": {"sha": "d9b3dbd279505d56bed54a9571aa6eac92420035", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9b3dbd279505d56bed54a9571aa6eac92420035"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21d12b804d4031c15fcc61b1558f74ce9413e123", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21d12b804d4031c15fcc61b1558f74ce9413e123", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21d12b804d4031c15fcc61b1558f74ce9413e123", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21d12b804d4031c15fcc61b1558f74ce9413e123/comments", "author": null, "committer": null, "parents": [{"sha": "2040c37b079c4b2cf071055cdae7d3a9f65151ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2040c37b079c4b2cf071055cdae7d3a9f65151ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2040c37b079c4b2cf071055cdae7d3a9f65151ba"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e76a1300d81acc0352d40b5c574bac79e47c52a8", "filename": "gcc/cse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21d12b804d4031c15fcc61b1558f74ce9413e123/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21d12b804d4031c15fcc61b1558f74ce9413e123/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=21d12b804d4031c15fcc61b1558f74ce9413e123", "patch": "@@ -3224,7 +3224,7 @@ simplify_binary_operation (code, mode, op0, op1)\n \tcase DIV:\n #ifndef REAL_INFINITY\n \t  if (f1 == 0)\n-\t    abort ();\n+\t    return 0;\n #endif\n \t  value = f0 / f1;\n \t  break;"}]}