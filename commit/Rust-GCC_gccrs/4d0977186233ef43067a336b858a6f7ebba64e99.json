{"sha": "4d0977186233ef43067a336b858a6f7ebba64e99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQwOTc3MTg2MjMzZWY0MzA2N2EzMzZiODU4YTZmN2ViYmE2NGU5OQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2003-01-21T19:43:53Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2003-01-21T19:43:53Z"}, "message": "990208-1.c: Add noinline attributes as needed.\n\n\t* gcc.c-torture/execute/990208-1.c:  Add noinline attributes as needed.\n\t* gcc.c-torture/execute/eeprof-1.c:  Likewise.\n\t* gcc.c-torture/execute/stdio-opt-*.c: Likewise.\n\t* gcc.c-torture/execute/string-opt-*.c: Likewise.\n\nFrom-SVN: r61563", "tree": {"sha": "6cea8638978c2b18f09807ee57035e2b14ee8180", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cea8638978c2b18f09807ee57035e2b14ee8180"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d0977186233ef43067a336b858a6f7ebba64e99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d0977186233ef43067a336b858a6f7ebba64e99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d0977186233ef43067a336b858a6f7ebba64e99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d0977186233ef43067a336b858a6f7ebba64e99/comments", "author": null, "committer": null, "parents": [{"sha": "5c64ead4ae1889d5ff5d5fcc7bff4afdfaedf7a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c64ead4ae1889d5ff5d5fcc7bff4afdfaedf7a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c64ead4ae1889d5ff5d5fcc7bff4afdfaedf7a2"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "6144f2d3956f9974cfcaea3c3fbba2fe07c706d2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4d0977186233ef43067a336b858a6f7ebba64e99", "patch": "@@ -1,3 +1,10 @@\n+Tue Jan 21 18:01:35 CET 2003  Jan Hubicka  <jh@suse.cz>\n+\n+\t* gcc.c-torture/execute/990208-1.c:  Add noinline attributes as needed.\n+\t* gcc.c-torture/execute/eeprof-1.c:  Likewise.\n+\t* gcc.c-torture/execute/stdio-opt-*.c: Likewise.\n+\t* gcc.c-torture/execute/string-opt-*.c: Likewise.\n+\n 2003-01-20  Nick Clifton  <nickc@redhat.com>\n \n \t* gcc.c-torture/execute/20030117-1.c: New test case.  Exposes"}, {"sha": "786e664f35b8495b31d3ba7e6bded935f0e2c2cf", "filename": "gcc/testsuite/gcc.c-torture/execute/990208-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990208-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990208-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990208-1.c?ref=4d0977186233ef43067a336b858a6f7ebba64e99", "patch": "@@ -14,16 +14,19 @@ static __inline__ void doit(void **pptr, int cond)\n   }\n }\n \n+__attribute__ ((noinline))\n static void f(int cond)\n {\n   doit (&ptr1, cond);\n }\n \n+__attribute__ ((noinline))\n static void g(int cond)\n {\n   doit (&ptr2, cond);\n }\n \n+__attribute__ ((noinline))\n static void bar(void);\n \n int main()"}, {"sha": "248b8ccbe0125a5318335b0af0f336fbedaef9bd", "filename": "gcc/testsuite/gcc.c-torture/execute/eeprof-1.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Feeprof-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Feeprof-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Feeprof-1.c?ref=4d0977186233ef43067a336b858a6f7ebba64e99", "patch": "@@ -5,13 +5,16 @@ int entry_calls, exit_calls;\n void (*last_fn_entered)();\n void (*last_fn_exited)();\n \n+__attribute__ ((noinline))\n int main () NOCHK;\n \n+__attribute__ ((noinline))\n void foo ()\n {\n   ASSERT (last_fn_entered == foo);\n }\n \n+__attribute__ ((noinline))\n static void foo2 ()\n {\n   ASSERT (entry_calls == 1 && exit_calls == 0);\n@@ -22,6 +25,7 @@ static void foo2 ()\n   ASSERT (last_fn_exited == foo);\n }\n \n+__attribute__ ((noinline))\n void nfoo (void) NOCHK;\n void nfoo ()\n {\n@@ -55,11 +59,13 @@ int main ()\n void __cyg_profile_func_enter (void (*fn)(), void (*parent)()) NOCHK;\n void __cyg_profile_func_exit (void (*fn)(), void (*parent)()) NOCHK;\n \n+__attribute__ ((noinline))\n void __cyg_profile_func_enter (void (*fn)(), void (*parent)())\n {\n   entry_calls++;\n   last_fn_entered = fn;\n }\n+__attribute__ ((noinline))\n void __cyg_profile_func_exit (void (*fn)(), void (*parent)())\n {\n   exit_calls++;"}, {"sha": "174477e57b3b155d1c52d8290b74a059959f433e", "filename": "gcc/testsuite/gcc.c-torture/execute/pure-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpure-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpure-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpure-1.c?ref=4d0977186233ef43067a336b858a6f7ebba64e99", "patch": "@@ -1,3 +1,4 @@\n+\n /* Origin: Kaveh Ghazi <ghazi@caip.rutgers.edu> 2002-05-27.  */\n \n /* Use a different function for each test so the link failures"}, {"sha": "f5316d418639177a4f53174a462cd3a79c58ec9a", "filename": "gcc/testsuite/gcc.c-torture/execute/stdio-opt-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstdio-opt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstdio-opt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstdio-opt-1.c?ref=4d0977186233ef43067a336b858a6f7ebba64e99", "patch": "@@ -58,6 +58,7 @@ int main()\n /* When optimizing, all the above cases should be transformed into\n    something else.  So any remaining calls to the original function\n    should abort.  */\n+__attribute__ ((noinline))\n static int\n fputs(const char *string, FILE *stream)\n {"}, {"sha": "833017ee5472091f722ce23ac73d5f77c452731d", "filename": "gcc/testsuite/gcc.c-torture/execute/stdio-opt-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstdio-opt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstdio-opt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstdio-opt-2.c?ref=4d0977186233ef43067a336b858a6f7ebba64e99", "patch": "@@ -45,6 +45,7 @@ int main()\n /* When optimizing, all the above cases should be transformed into\n    something else.  So any remaining calls to the original function\n    should abort.  */\n+__attribute__ ((noinline))\n static int\n printf (const char *string, ...)\n {"}, {"sha": "afc76a2171670a03dc2f0762d51d4f44dd86bbc5", "filename": "gcc/testsuite/gcc.c-torture/execute/stdio-opt-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstdio-opt-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstdio-opt-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstdio-opt-3.c?ref=4d0977186233ef43067a336b858a6f7ebba64e99", "patch": "@@ -57,6 +57,7 @@ int main()\n /* When optimizing, all the above cases should be transformed into\n    something else.  So any remaining calls to the original function\n    should abort.  */\n+__attribute__ ((noinline))\n static int\n fprintf (FILE *stream, const char *string, ...)\n {"}, {"sha": "6b59c10f29b7a8e59aa45f4e345efe55ceb2b66a", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-1.c?ref=4d0977186233ef43067a336b858a6f7ebba64e99", "patch": "@@ -37,6 +37,7 @@ int main()\n /* When optimizing, all the above cases should be transformed into\n    something else.  So any remaining calls to the original function\n    should abort.  */\n+__attribute__ ((noinline))\n static char *\n strstr(const char *s1, const char *s2)\n {"}, {"sha": "dc31dc5fb7d5ef7acbb7efea3f4f13083bf4440a", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-10.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-10.c?ref=4d0977186233ef43067a336b858a6f7ebba64e99", "patch": "@@ -76,6 +76,7 @@ int main ()\n /* When optimizing, all the above cases should be transformed into\n    something else.  So any remaining calls to the original function\n    should abort.  */\n+__attribute__ ((noinline))\n static char *\n strncat (char *s1, const char *s2, size_t n)\n {"}, {"sha": "0aa186299df261f3db289b8bd2a488c56dd627fc", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-11.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-11.c?ref=4d0977186233ef43067a336b858a6f7ebba64e99", "patch": "@@ -58,6 +58,7 @@ int main ()\n /* When optimizing, all the above cases should be transformed into\n    something else.  So any remaining calls to the original function\n    should abort.  */\n+__attribute__ ((noinline))\n static size_t\n strspn (const char *s1, const char *s2)\n {"}, {"sha": "1d20f1e6708976cbdc5bc1cbb964c9e031bb5876", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-12.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-12.c?ref=4d0977186233ef43067a336b858a6f7ebba64e99", "patch": "@@ -58,6 +58,7 @@ int main ()\n /* When optimizing, all the above cases should be transformed into\n    something else.  So any remaining calls to the original function\n    should abort.  */\n+__attribute__ ((noinline))\n static size_t\n strcspn (const char *s1, const char *s2)\n {"}, {"sha": "9d79ef0d81740cb6e2fc7c41ebfd33a200c06b59", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-13.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-13.c?ref=4d0977186233ef43067a336b858a6f7ebba64e99", "patch": "@@ -49,6 +49,7 @@ main ()\n /* When optimizing, all the above cases should be transformed into\n    something else.  So any remaining calls to the original function\n    should abort.  */\n+__attribute__ ((noinline))\n static size_t\n strlen (const char *s)\n {"}, {"sha": "cb0bfcb9dff8f8dee1abb6aa473629df757ea2b2", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-14.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-14.c?ref=4d0977186233ef43067a336b858a6f7ebba64e99", "patch": "@@ -25,12 +25,14 @@ main ()\n    something else.  So any remaining calls to the original function\n    should abort.  */\n \n+__attribute__ ((noinline))\n static void *\n memset (void *s, int c, size_t n)\n {\n   abort ();\n }\n \n+__attribute__ ((noinline))\n static void *\n memcpy (void *dest, const void *src, size_t n)\n {"}, {"sha": "2cf73da151c5f015d1bcca3bcf38001e72d1a1c5", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-15.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-15.c?ref=4d0977186233ef43067a336b858a6f7ebba64e99", "patch": "@@ -37,6 +37,7 @@ main ()\n /* When optimizing, all the above cases should be transformed into\n    something else.  So any remaining calls to the original function\n    should abort.  */\n+__attribute__ ((noinline))\n static int\n memcmp (const char *p1, const char *p2, size_t len)\n {"}, {"sha": "2948b641b4ccd4996c7ee353930fba0f04646f37", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-16.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-16.c?ref=4d0977186233ef43067a336b858a6f7ebba64e99", "patch": "@@ -28,6 +28,7 @@ main (int argc)\n /* When optimizing, all the above cases should be transformed into\n    something else.  So any remaining calls to the original function\n    should abort.  */\n+__attribute__ ((noinline))\n static int\n memcmp (const void *s1, const void *s2, size_t len)\n {\n@@ -36,6 +37,7 @@ memcmp (const void *s1, const void *s2, size_t len)\n #else\n /* When not optimizing, the above tests may generate references to\n    the function link_error, but should never actually call it.  */\n+__attribute__ ((noinline))\n static void\n link_error ()\n {"}, {"sha": "744f14629270fa43f0d29afee9831a3bbb3c39d3", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-17.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-17.c?ref=4d0977186233ef43067a336b858a6f7ebba64e99", "patch": "@@ -40,6 +40,7 @@ main (int argc)\n /* When optimizing, most of the above cases should be transformed into\n    something else.  So any remaining calls to the original function\n    for short lengths should abort.  */\n+__attribute__ ((noinline))\n static void *\n memset (void *dst, int c, size_t len)\n {"}, {"sha": "d8ebb77be514aa165c7df0488e6ff5bfaed472b7", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-2.c?ref=4d0977186233ef43067a336b858a6f7ebba64e99", "patch": "@@ -46,6 +46,7 @@ int main()\n /* When optimizing, all the above cases should be transformed into\n    something else.  So any remaining calls to the original function\n    should abort.  */\n+__attribute__ ((noinline))\n static char *\n strpbrk(const char *s1, const char *s2)\n {"}, {"sha": "c6f019b45513a7246830713d3e1d9f3ac4b18b1f", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-3.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-3.c?ref=4d0977186233ef43067a336b858a6f7ebba64e99", "patch": "@@ -104,18 +104,21 @@ rindex (const char *s, int c)\n /* When optimizing, all the above cases should be transformed into\n    something else.  So any remaining calls to the original function\n    should abort.  */\n+__attribute__ ((noinline))\n static __SIZE_TYPE__\n strlen (const char *s)\n {\n   abort ();\n }\n \n+__attribute__ ((noinline))\n static int\n strcmp (const char *s1, const char *s2)\n {\n   abort ();\n }\n \n+__attribute__ ((noinline))\n static char *\n strrchr (const char *s, int c)\n {"}, {"sha": "9182eb278387ee0c4de6baeb2aad7b1852c54597", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-4.c?ref=4d0977186233ef43067a336b858a6f7ebba64e99", "patch": "@@ -53,6 +53,7 @@ index (const char *s, int c)\n /* When optimizing, all the above cases should be transformed into\n    something else.  So any remaining calls to the original function\n    should abort.  */\n+__attribute__ ((noinline))\n static char *\n strchr (const char *s, int c)\n {"}, {"sha": "c684dbd4f13e4bc1ded40f8e6c05642e2dc0a02e", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-6.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-6.c?ref=4d0977186233ef43067a336b858a6f7ebba64e99", "patch": "@@ -45,6 +45,7 @@ int main()\n /* When optimizing, all the above cases should be transformed into\n    something else.  So any remaining calls to the original function\n    should abort.  */\n+__attribute__ ((noinline))\n static char *\n strcpy (char *d, const char *s)\n {"}, {"sha": "ed1b2a4095ab5f4478f787b88b25006c0c72cc93", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-7.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-7.c?ref=4d0977186233ef43067a336b858a6f7ebba64e99", "patch": "@@ -69,6 +69,7 @@ int main ()\n /* When optimizing, all the above cases should be transformed into\n    something else.  So any remaining calls to the original function\n    should abort.  */\n+__attribute__ ((noinline))\n static char *\n strncpy(char *s1, const char *s2, size_t n)\n {"}, {"sha": "8fef5b53734e0de492f867b9b57b125ac0dea2e6", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-8.c?ref=4d0977186233ef43067a336b858a6f7ebba64e99", "patch": "@@ -231,6 +231,7 @@ int main ()\n /* When optimizing, all the above cases should be transformed into\n    something else.  So any remaining calls to the original function\n    should abort.  */\n+__attribute__ ((noinline))\n static int\n strncmp(const char *s1, const char *s2, size_t n)\n {"}, {"sha": "0a3edbeb99ec303675071ee7865a09b15fdfe3fa", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-9.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0977186233ef43067a336b858a6f7ebba64e99/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-9.c?ref=4d0977186233ef43067a336b858a6f7ebba64e99", "patch": "@@ -46,6 +46,7 @@ int main ()\n /* When optimizing, all the above cases should be transformed into\n    something else.  So any remaining calls to the original function\n    should abort.  */\n+__attribute__ ((noinline))\n static char *\n strcat (char *s1, const char *s2)\n {"}]}