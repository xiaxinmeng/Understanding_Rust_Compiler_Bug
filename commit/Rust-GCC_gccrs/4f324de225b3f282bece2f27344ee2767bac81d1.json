{"sha": "4f324de225b3f282bece2f27344ee2767bac81d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGYzMjRkZTIyNWIzZjI4MmJlY2UyZjI3MzQ0ZWUyNzY3YmFjODFkMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-20T10:38:54Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-20T10:38:54Z"}, "message": "Minor reformatting.\n\nFrom-SVN: r244700", "tree": {"sha": "ca4aa9e43d3c9b75b3a2a40c8070a6bc49ed2d90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca4aa9e43d3c9b75b3a2a40c8070a6bc49ed2d90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f324de225b3f282bece2f27344ee2767bac81d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f324de225b3f282bece2f27344ee2767bac81d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f324de225b3f282bece2f27344ee2767bac81d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f324de225b3f282bece2f27344ee2767bac81d1/comments", "author": null, "committer": null, "parents": [{"sha": "f68fc405bb5b38c545498c4a1dba203e51dade32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f68fc405bb5b38c545498c4a1dba203e51dade32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f68fc405bb5b38c545498c4a1dba203e51dade32"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "3b79bc32c0777059594d43cbd3fd1b43856f42dd", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f324de225b3f282bece2f27344ee2767bac81d1/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f324de225b3f282bece2f27344ee2767bac81d1/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=4f324de225b3f282bece2f27344ee2767bac81d1", "patch": "@@ -3158,10 +3158,8 @@ package body Inline is\n             --  unconstrained type renaming a local variable of constrained\n             --  type, which is not expected by GNATprove.\n \n-            elsif Etype (F) /= Etype (A)\n-              and then not GNATprove_Mode\n-            then\n-               New_A := Unchecked_Convert_To (Etype (F), Relocate_Node (A));\n+            elsif Etype (F) /= Etype (A) and then not GNATprove_Mode then\n+               New_A    := Unchecked_Convert_To (Etype (F), Relocate_Node (A));\n                Temp_Typ := Etype (F);\n \n             else"}, {"sha": "5e4641e4753c418de3800ce0a8f0e3c873f1c241", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f324de225b3f282bece2f27344ee2767bac81d1/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f324de225b3f282bece2f27344ee2767bac81d1/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=4f324de225b3f282bece2f27344ee2767bac81d1", "patch": "@@ -1808,17 +1808,17 @@ package body Sem_Ch13 is\n                     (\"aspect must name a discriminant of current type\", Expr);\n \n                else\n-\n                   --  Discriminant type be an anonymous access type or an\n                   --  anonymous access to subprogram.\n+\n                   --  Missing synchronized types???\n \n                   Disc := First_Discriminant (E);\n                   while Present (Disc) loop\n                      if Chars (Expr) = Chars (Disc)\n                        and then Ekind_In (Etype (Disc),\n-                                  E_Anonymous_Access_Type,\n-                                  E_Anonymous_Access_Subprogram_Type)\n+                                          E_Anonymous_Access_Subprogram_Type,\n+                                          E_Anonymous_Access_Type)\n                      then\n                         Set_Has_Implicit_Dereference (E);\n                         Set_Has_Implicit_Dereference (Disc);"}, {"sha": "942e21e922e1a911cf62b9dceebe1307c31c0d9c", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f324de225b3f282bece2f27344ee2767bac81d1/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f324de225b3f282bece2f27344ee2767bac81d1/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=4f324de225b3f282bece2f27344ee2767bac81d1", "patch": "@@ -913,8 +913,8 @@ package body Sem_Ch4 is\n    --  the type-checking is similar to that of other calls.\n \n    procedure Analyze_Call (N : Node_Id) is\n+      Actuals : constant List_Id    := Parameter_Associations (N);\n       Loc     : constant Source_Ptr := Sloc (N);\n-      Actuals : constant List_Id := Parameter_Associations (N);\n       Nam     : Node_Id;\n       X       : Interp_Index;\n       It      : Interp;\n@@ -1325,10 +1325,13 @@ package body Sem_Ch4 is\n                   then\n                      Rewrite (Name (N),\n                        Make_Explicit_Dereference (Loc,\n-                         Prefix => Make_Selected_Component (Loc,\n-                           Prefix        =>\n-                             (New_Occurrence_Of (Entity (Nam), Loc)),\n-                           Selector_Name => New_Occurrence_Of (It.Nam, Loc))));\n+                         Prefix =>\n+                           Make_Selected_Component (Loc,\n+                             Prefix        =>\n+                               New_Occurrence_Of (Entity (Nam), Loc),\n+                             Selector_Name =>\n+                               New_Occurrence_Of (It.Nam, Loc))));\n+\n                      Analyze (N);\n                      return;\n \n@@ -1342,8 +1345,7 @@ package body Sem_Ch4 is\n                   Set_Etype (Nam, It.Typ);\n                end if;\n \n-            elsif Nkind_In (Name (N), N_Selected_Component,\n-                                      N_Function_Call)\n+            elsif Nkind_In (Name (N), N_Function_Call, N_Selected_Component)\n             then\n                Remove_Interp (X);\n             end if;"}, {"sha": "7850a0cddd5f8ea7610305199a5039d6db97855c", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f324de225b3f282bece2f27344ee2767bac81d1/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f324de225b3f282bece2f27344ee2767bac81d1/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=4f324de225b3f282bece2f27344ee2767bac81d1", "patch": "@@ -2465,11 +2465,11 @@ package body Sem_Res is\n                --  with a name that is an explicit dereference, there is\n                --  nothing to be done at this point.\n \n-               elsif Nkind_In (N, N_Explicit_Dereference,\n-                                  N_Attribute_Reference,\n+               elsif Nkind_In (N, N_Attribute_Reference,\n                                   N_And_Then,\n-                                  N_Indexed_Component,\n+                                  N_Explicit_Dereference,\n                                   N_Identifier,\n+                                  N_Indexed_Component,\n                                   N_Or_Else,\n                                   N_Range,\n                                   N_Selected_Component,"}]}