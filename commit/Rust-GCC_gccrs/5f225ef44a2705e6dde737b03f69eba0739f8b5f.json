{"sha": "5f225ef44a2705e6dde737b03f69eba0739f8b5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYyMjVlZjQ0YTI3MDVlNmRkZTczN2IwM2Y2OWViYTA3MzlmOGI1Zg==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2016-06-09T21:28:31Z"}, "committer": {"name": "Jiong Wang", "email": "jiwang@gcc.gnu.org", "date": "2016-06-09T21:28:31Z"}, "message": "[Patch] PR70751, correct the cost for spilling non-pseudo into memory\n\n\tPR rtl-optimization/70751\n\t* lra-constraints.c (process_alt_operands): Recognize Non-pseudo spilled\n\tinto memory.\n\n\nCo-Authored-By: Jiong Wang <jiong.wang@arm.com>\n\nFrom-SVN: r237277", "tree": {"sha": "996e1e2c32600d920b281eb55a667aed2f1fa05e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/996e1e2c32600d920b281eb55a667aed2f1fa05e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f225ef44a2705e6dde737b03f69eba0739f8b5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f225ef44a2705e6dde737b03f69eba0739f8b5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f225ef44a2705e6dde737b03f69eba0739f8b5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f225ef44a2705e6dde737b03f69eba0739f8b5f/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8760ebd759e127e58522ed64f3fe09585372a8f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8760ebd759e127e58522ed64f3fe09585372a8f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8760ebd759e127e58522ed64f3fe09585372a8f0"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "b27dd3f8df69de9cf744b707b88c4f88409d5d08", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f225ef44a2705e6dde737b03f69eba0739f8b5f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f225ef44a2705e6dde737b03f69eba0739f8b5f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f225ef44a2705e6dde737b03f69eba0739f8b5f", "patch": "@@ -1,3 +1,10 @@\n+2016-06-09  Vladimir Makarov  <vmakarov@redhat.com>\n+\t    Jiong Wang  <jiong.wang@arm.com>\n+\n+\tPR rtl-optimization/70751\n+\t* lra-constraints.c (process_alt_operands): Recognize Non-pseudo spilled\n+\tinto memory.\n+\n 2016-06-09 Jonathan Yong  <10walls@gmail.com>\n \n \tRevert:"}, {"sha": "bf08dce2e0a4c2ef4c339aedbda4dba47cba1645", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f225ef44a2705e6dde737b03f69eba0739f8b5f/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f225ef44a2705e6dde737b03f69eba0739f8b5f/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=5f225ef44a2705e6dde737b03f69eba0739f8b5f", "patch": "@@ -2474,14 +2474,27 @@ process_alt_operands (int only_alternative)\n \t      /* We are trying to spill pseudo into memory.  It is\n \t\t usually more costly than moving to a hard register\n \t\t although it might takes the same number of\n-\t\t reloads.  */\n-\t      if (no_regs_p && REG_P (op) && hard_regno[nop] >= 0)\n+\t\t reloads.\n+\n+\t\t Non-pseudo spill may happen also.  Suppose a target allows both\n+\t\t register and memory in the operand constraint alternatives,\n+\t\t then it's typical that an eliminable register has a substition\n+\t\t of \"base + offset\" which can either be reloaded by a simple\n+\t\t \"new_reg <= base + offset\" which will match the register\n+\t\t constraint, or a similar reg addition followed by further spill\n+\t\t to and reload from memory which will match the memory\n+\t\t constraint, but this memory spill will be much more costly\n+\t\t usually.\n+\n+\t\t Code below increases the reject for both pseudo and non-pseudo\n+\t\t spill.  */\n+\t      if (no_regs_p && !(REG_P (op) && hard_regno[nop] < 0))\n \t\t{\n \t\t  if (lra_dump_file != NULL)\n \t\t    fprintf\n \t\t      (lra_dump_file,\n-\t\t       \"            %d Spill pseudo into memory: reject+=3\\n\",\n-\t\t       nop);\n+\t\t       \"            %d Spill %spseudo into memory: reject+=3\\n\",\n+\t\t       nop, REG_P (op) ? \"\" : \"Non-\");\n \t\t  reject += 3;\n \t\t  if (VECTOR_MODE_P (mode))\n \t\t    {"}]}