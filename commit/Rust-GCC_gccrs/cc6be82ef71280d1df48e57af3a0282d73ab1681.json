{"sha": "cc6be82ef71280d1df48e57af3a0282d73ab1681", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M2YmU4MmVmNzEyODBkMWRmNDhlNTdhZjNhMDI4MmQ3M2FiMTY4MQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-06-08T12:21:58Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-06-08T12:21:58Z"}, "message": "re PR fortran/57553 ([F08] Valid use of STORAGE_SIZE rejected, bad error message for invalid use)\n\n2013-06-08  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/57553\n        * simplify.c (gfc_simplify_storage_size): Handle literal\n        strings.\n        * trans-intrinsic.c (gfc_conv_intrinsic_storage_size):\n        Add missing fold_convert.\n\n2013-06-08  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/57553\n        * gfortran.dg/storage_size_4.f90: New.\n\nFrom-SVN: r199850", "tree": {"sha": "2ff82853db8a48bc64fb95c669f3ff96ba4d13a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ff82853db8a48bc64fb95c669f3ff96ba4d13a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc6be82ef71280d1df48e57af3a0282d73ab1681", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc6be82ef71280d1df48e57af3a0282d73ab1681", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc6be82ef71280d1df48e57af3a0282d73ab1681", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc6be82ef71280d1df48e57af3a0282d73ab1681/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7f678e7ebc55b6bfef2c2a4f0bcaecc82c37ec4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f678e7ebc55b6bfef2c2a4f0bcaecc82c37ec4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f678e7ebc55b6bfef2c2a4f0bcaecc82c37ec4c"}], "stats": {"total": 47, "additions": 41, "deletions": 6}, "files": [{"sha": "1009c95c72696bb16f9b4091b5fc169eb525948a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6be82ef71280d1df48e57af3a0282d73ab1681/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6be82ef71280d1df48e57af3a0282d73ab1681/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=cc6be82ef71280d1df48e57af3a0282d73ab1681", "patch": "@@ -1,3 +1,11 @@\n+2013-06-08  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/57553\n+\t* simplify.c (gfc_simplify_storage_size): Handle literal\n+\tstrings.\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_storage_size):\n+\tAdd missing fold_convert.\n+\n 2013-06-07  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/57549"}, {"sha": "683d58b6ee85465da246741cb78d767771e6dedb", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6be82ef71280d1df48e57af3a0282d73ab1681/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6be82ef71280d1df48e57af3a0282d73ab1681/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=cc6be82ef71280d1df48e57af3a0282d73ab1681", "patch": "@@ -5717,7 +5717,7 @@ gfc_simplify_storage_size (gfc_expr *x,\n   if (x->ts.type == BT_CLASS || x->ts.deferred)\n     return NULL;\n \n-  if (x->ts.type == BT_CHARACTER\n+  if (x->ts.type == BT_CHARACTER && x->expr_type != EXPR_CONSTANT\n       && (!x->ts.u.cl || !x->ts.u.cl->length\n \t  || x->ts.u.cl->length->expr_type != EXPR_CONSTANT))\n     return NULL;"}, {"sha": "3fbf193d03ca37faeeac0bf5523e0f6e6f70a0a9", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6be82ef71280d1df48e57af3a0282d73ab1681/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6be82ef71280d1df48e57af3a0282d73ab1681/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=cc6be82ef71280d1df48e57af3a0282d73ab1681", "patch": "@@ -5249,12 +5249,10 @@ static void\n gfc_conv_intrinsic_storage_size (gfc_se *se, gfc_expr *expr)\n {\n   gfc_expr *arg;\n-  gfc_se argse,eight;\n+  gfc_se argse;\n   tree type, result_type, tmp;\n \n   arg = expr->value.function.actual->expr;\n-  gfc_init_se (&eight, NULL);\n-  gfc_conv_expr (&eight, gfc_get_int_expr (expr->ts.kind, NULL, 8));\n   \n   gfc_init_se (&argse, NULL);\n   result_type = gfc_get_int_type (expr->ts.kind);\n@@ -5285,11 +5283,12 @@ gfc_conv_intrinsic_storage_size (gfc_se *se, gfc_expr *expr)\n   if (arg->ts.type == BT_CHARACTER)\n     tmp = size_of_string_in_bytes (arg->ts.kind, argse.string_length);\n   else\n-    tmp = fold_convert (result_type, size_in_bytes (type)); \n+    tmp = size_in_bytes (type); \n+  tmp = fold_convert (result_type, tmp);\n \n done:\n   se->expr = fold_build2_loc (input_location, MULT_EXPR, result_type, tmp,\n-\t\t\t      eight.expr);\n+\t\t\t      build_int_cst (result_type, BITS_PER_UNIT));\n   gfc_add_block_to_block (&se->pre, &argse.pre);\n }\n "}, {"sha": "f42861b5645092f5a357ea31edaf94ee74a456ad", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6be82ef71280d1df48e57af3a0282d73ab1681/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6be82ef71280d1df48e57af3a0282d73ab1681/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cc6be82ef71280d1df48e57af3a0282d73ab1681", "patch": "@@ -1,3 +1,8 @@\n+2013-06-08  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/57553\n+\t* gfortran.dg/storage_size_4.f90: New.\n+\n 2013-06-07  Sriraman Tallam  <tmsriram@google.com>\n \n \tPR c++/57548"}, {"sha": "bcfd5c3e4f88d90cab58328602d0bc0dfe23d1b8", "filename": "gcc/testsuite/gfortran.dg/storage_size_4.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6be82ef71280d1df48e57af3a0282d73ab1681/gcc%2Ftestsuite%2Fgfortran.dg%2Fstorage_size_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6be82ef71280d1df48e57af3a0282d73ab1681/gcc%2Ftestsuite%2Fgfortran.dg%2Fstorage_size_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstorage_size_4.f90?ref=cc6be82ef71280d1df48e57af3a0282d73ab1681", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do compile }\n+! { dg-options \"-fdump-tree-original\" }\n+!\n+! PR fortran/57553\n+!\n+! Ensure that there is no ICE and that compile-time simplication works.\n+!\n+  use iso_fortran_env\n+  implicit none\n+  integer, parameter :: ESize = storage_size('a')\n+  integer, parameter :: ESize2 = storage_size('aa')\n+  if ( ESize/CHARACTER_STORAGE_SIZE /= 1) call abort()\n+  if ( ESize2/CHARACTER_STORAGE_SIZE /= 2) call abort()\n+end\n+\n+subroutine S ( A )\n+  character(len=*), intent(in) :: A\n+  integer :: ESize = 4\n+  esize = ( storage_size(a) + 7 ) / 8\n+end\n+\n+! { dg-final { scan-tree-dump-not \"abort\" \"original\" } }\n+! { dg-final { cleanup-tree-dump \"original\" } }"}]}