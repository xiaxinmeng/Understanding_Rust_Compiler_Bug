{"sha": "030fc94af235ebe4ff2b2e873e2aa807e2b5c9c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDMwZmM5NGFmMjM1ZWJlNGZmMmIyZTg3M2UyYWE4MDdlMmI1YzljMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-03-09T09:09:27Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-03-09T09:09:27Z"}, "message": "re PR target/79932 (_mm512_packus_epi32 does not compile under -O0)\n\n\tPR target/79932\n\t* config/i386/avx512bwintrin.h (_mm512_packs_epi32,\n\t_mm512_maskz_packs_epi32, _mm512_mask_packs_epi32,\n\t_mm512_packus_epi32, _mm512_maskz_packus_epi32,\n\t_mm512_mask_packus_epi32): Move definitions outside of __OPTIMIZE__\n\tguarded section.\n\n\t* gcc.target/i386/pr79932-1.c: New test.\n\nFrom-SVN: r245989", "tree": {"sha": "f44fe07ff34f09944f2f191e3dd1e08e13a8a56c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f44fe07ff34f09944f2f191e3dd1e08e13a8a56c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/030fc94af235ebe4ff2b2e873e2aa807e2b5c9c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/030fc94af235ebe4ff2b2e873e2aa807e2b5c9c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/030fc94af235ebe4ff2b2e873e2aa807e2b5c9c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/030fc94af235ebe4ff2b2e873e2aa807e2b5c9c3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "423aec8b5756c73681dadd10aec25e28dc18eb99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/423aec8b5756c73681dadd10aec25e28dc18eb99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/423aec8b5756c73681dadd10aec25e28dc18eb99"}], "stats": {"total": 165, "additions": 99, "deletions": 66}, "files": [{"sha": "33f340b49b8ccecab464401c9c1fe6ce5a4cc53f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030fc94af235ebe4ff2b2e873e2aa807e2b5c9c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030fc94af235ebe4ff2b2e873e2aa807e2b5c9c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=030fc94af235ebe4ff2b2e873e2aa807e2b5c9c3", "patch": "@@ -1,3 +1,12 @@\n+2017-03-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/79932\n+\t* config/i386/avx512bwintrin.h (_mm512_packs_epi32,\n+\t_mm512_maskz_packs_epi32, _mm512_mask_packs_epi32,\n+\t_mm512_packus_epi32, _mm512_maskz_packus_epi32,\n+\t_mm512_mask_packus_epi32): Move definitions outside of __OPTIMIZE__\n+\tguarded section.\n+\n 2017-03-09  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* config/s390/vx-builtins.md (\"vfee<mode>\", \"vfeez<mode>\")"}, {"sha": "2b0fb6b5f08afa8789b711f4eb13ce63bfd8296f", "filename": "gcc/config/i386/avx512bwintrin.h", "status": "modified", "additions": 66, "deletions": 66, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030fc94af235ebe4ff2b2e873e2aa807e2b5c9c3/gcc%2Fconfig%2Fi386%2Favx512bwintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030fc94af235ebe4ff2b2e873e2aa807e2b5c9c3/gcc%2Fconfig%2Fi386%2Favx512bwintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512bwintrin.h?ref=030fc94af235ebe4ff2b2e873e2aa807e2b5c9c3", "patch": "@@ -2656,6 +2656,72 @@ _mm512_cmple_epi16_mask (__m512i __X, __m512i __Y)\n \t\t\t\t\t\t  (__mmask32) -1);\n }\n \n+extern __inline __m512i\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm512_packs_epi32 (__m512i __A, __m512i __B)\n+{\n+  return (__m512i) __builtin_ia32_packssdw512_mask ((__v16si) __A,\n+\t\t\t\t\t\t    (__v16si) __B,\n+\t\t\t\t\t\t    (__v32hi)\n+\t\t\t\t\t\t    _mm512_setzero_si512 (),\n+\t\t\t\t\t\t    (__mmask32) -1);\n+}\n+\n+extern __inline __m512i\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm512_maskz_packs_epi32 (__mmask32 __M, __m512i __A, __m512i __B)\n+{\n+  return (__m512i) __builtin_ia32_packssdw512_mask ((__v16si) __A,\n+\t\t\t\t\t\t    (__v16si) __B,\n+\t\t\t\t\t\t    (__v32hi)\n+\t\t\t\t\t\t    _mm512_setzero_si512 (),\n+\t\t\t\t\t\t    __M);\n+}\n+\n+extern __inline __m512i\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm512_mask_packs_epi32 (__m512i __W, __mmask32 __M, __m512i __A,\n+\t\t\t __m512i __B)\n+{\n+  return (__m512i) __builtin_ia32_packssdw512_mask ((__v16si) __A,\n+\t\t\t\t\t\t    (__v16si) __B,\n+\t\t\t\t\t\t    (__v32hi) __W,\n+\t\t\t\t\t\t    __M);\n+}\n+\n+extern __inline __m512i\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm512_packus_epi32 (__m512i __A, __m512i __B)\n+{\n+  return (__m512i) __builtin_ia32_packusdw512_mask ((__v16si) __A,\n+\t\t\t\t\t\t    (__v16si) __B,\n+\t\t\t\t\t\t    (__v32hi)\n+\t\t\t\t\t\t    _mm512_setzero_si512 (),\n+\t\t\t\t\t\t    (__mmask32) -1);\n+}\n+\n+extern __inline __m512i\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm512_maskz_packus_epi32 (__mmask32 __M, __m512i __A, __m512i __B)\n+{\n+  return (__m512i) __builtin_ia32_packusdw512_mask ((__v16si) __A,\n+\t\t\t\t\t\t    (__v16si) __B,\n+\t\t\t\t\t\t    (__v32hi)\n+\t\t\t\t\t\t    _mm512_setzero_si512 (),\n+\t\t\t\t\t\t    __M);\n+}\n+\n+extern __inline __m512i\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm512_mask_packus_epi32 (__m512i __W, __mmask32 __M, __m512i __A,\n+\t\t\t  __m512i __B)\n+{\n+  return (__m512i) __builtin_ia32_packusdw512_mask ((__v16si) __A,\n+\t\t\t\t\t\t    (__v16si) __B,\n+\t\t\t\t\t\t    (__v32hi) __W,\n+\t\t\t\t\t\t    __M);\n+}\n+\n #ifdef __OPTIMIZE__\n extern __inline __mmask32\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n@@ -3011,72 +3077,6 @@ _mm512_cmp_epu8_mask (__m512i __X, __m512i __Y, const int __P)\n \t\t\t\t\t\t   (__mmask64) -1);\n }\n \n-extern __inline __m512i\n-__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n-_mm512_packs_epi32 (__m512i __A, __m512i __B)\n-{\n-  return (__m512i) __builtin_ia32_packssdw512_mask ((__v16si) __A,\n-\t\t\t\t\t\t    (__v16si) __B,\n-\t\t\t\t\t\t    (__v32hi)\n-\t\t\t\t\t\t    _mm512_setzero_si512 (),\n-\t\t\t\t\t\t    (__mmask32) -1);\n-}\n-\n-extern __inline __m512i\n-__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n-_mm512_maskz_packs_epi32 (__mmask32 __M, __m512i __A, __m512i __B)\n-{\n-  return (__m512i) __builtin_ia32_packssdw512_mask ((__v16si) __A,\n-\t\t\t\t\t\t    (__v16si) __B,\n-\t\t\t\t\t\t    (__v32hi)\n-\t\t\t\t\t\t    _mm512_setzero_si512 (),\n-\t\t\t\t\t\t    __M);\n-}\n-\n-extern __inline __m512i\n-__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n-_mm512_mask_packs_epi32 (__m512i __W, __mmask32 __M, __m512i __A,\n-\t\t\t __m512i __B)\n-{\n-  return (__m512i) __builtin_ia32_packssdw512_mask ((__v16si) __A,\n-\t\t\t\t\t\t    (__v16si) __B,\n-\t\t\t\t\t\t    (__v32hi) __W,\n-\t\t\t\t\t\t    __M);\n-}\n-\n-extern __inline __m512i\n-__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n-_mm512_packus_epi32 (__m512i __A, __m512i __B)\n-{\n-  return (__m512i) __builtin_ia32_packusdw512_mask ((__v16si) __A,\n-\t\t\t\t\t\t    (__v16si) __B,\n-\t\t\t\t\t\t    (__v32hi)\n-\t\t\t\t\t\t    _mm512_setzero_si512 (),\n-\t\t\t\t\t\t    (__mmask32) -1);\n-}\n-\n-extern __inline __m512i\n-__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n-_mm512_maskz_packus_epi32 (__mmask32 __M, __m512i __A, __m512i __B)\n-{\n-  return (__m512i) __builtin_ia32_packusdw512_mask ((__v16si) __A,\n-\t\t\t\t\t\t    (__v16si) __B,\n-\t\t\t\t\t\t    (__v32hi)\n-\t\t\t\t\t\t    _mm512_setzero_si512 (),\n-\t\t\t\t\t\t    __M);\n-}\n-\n-extern __inline __m512i\n-__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n-_mm512_mask_packus_epi32 (__m512i __W, __mmask32 __M, __m512i __A,\n-\t\t\t  __m512i __B)\n-{\n-  return (__m512i) __builtin_ia32_packusdw512_mask ((__v16si) __A,\n-\t\t\t\t\t\t    (__v16si) __B,\n-\t\t\t\t\t\t    (__v32hi) __W,\n-\t\t\t\t\t\t    __M);\n-}\n-\n extern __inline __m512i\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm512_bslli_epi128 (__m512i __A, const int __N)"}, {"sha": "ebe5a4a342c84de938d200242f967dc100d1d5e6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030fc94af235ebe4ff2b2e873e2aa807e2b5c9c3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030fc94af235ebe4ff2b2e873e2aa807e2b5c9c3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=030fc94af235ebe4ff2b2e873e2aa807e2b5c9c3", "patch": "@@ -1,3 +1,8 @@\n+2017-03-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/79932\n+\t* gcc.target/i386/pr79932-1.c: New test.\n+\n 2017-03-09  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/79900 - ICE in strip_typedefs"}, {"sha": "fee42b90c1bb06d3b06cd287aefe9f27b0d0b9f6", "filename": "gcc/testsuite/gcc.target/i386/pr79932-1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/030fc94af235ebe4ff2b2e873e2aa807e2b5c9c3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr79932-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/030fc94af235ebe4ff2b2e873e2aa807e2b5c9c3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr79932-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr79932-1.c?ref=030fc94af235ebe4ff2b2e873e2aa807e2b5c9c3", "patch": "@@ -0,0 +1,19 @@\n+/* PR target/79932 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O0 -mavx512bw\" } */\n+\n+#include <x86intrin.h>\n+\n+__m512i a, b, c, d, e, f, g, h, i;\n+__mmask32 m;\n+\n+void\n+foo (void)\n+{\n+  d = _mm512_packs_epi32 (a, b);\n+  e = _mm512_maskz_packs_epi32 (m, a, b);\n+  f = _mm512_mask_packs_epi32 (c, m, a, b);\n+  g = _mm512_packus_epi32 (a, b);\n+  h = _mm512_maskz_packus_epi32 (m, a, b);\n+  i = _mm512_mask_packus_epi32 (c, m, a, b);\n+}"}]}