{"sha": "be3faf89969a58548e6f9d4bc1d89fa76759f93f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUzZmFmODk5NjlhNTg1NDhlNmY5ZDRiYzFkODlmYTc2NzU5ZjkzZg==", "commit": {"author": {"name": "Carlo Wood", "email": "carlo@alinoe.com", "date": "2003-10-14T17:46:19Z"}, "committer": {"name": "Carlo Wood", "email": "carlo@gcc.gnu.org", "date": "2003-10-14T17:46:19Z"}, "message": "re PR libstdc++/12600 (Demangler goes in infinite loop for certain invalid mangled names.)\n\nPR libstdc++/12600\n* include/bits/demangle.h (session<Allocator>::\n  decode_unqualified_name(string_type& output)): Fail on a\n  <operator-name> when decoding <template-argument>.\n* testsuite/demangle/regression/cw-15.cc: New.\n\nFrom-SVN: r72480", "tree": {"sha": "086c315317559c401cee4f3acb32261c21f416ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/086c315317559c401cee4f3acb32261c21f416ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be3faf89969a58548e6f9d4bc1d89fa76759f93f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be3faf89969a58548e6f9d4bc1d89fa76759f93f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be3faf89969a58548e6f9d4bc1d89fa76759f93f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be3faf89969a58548e6f9d4bc1d89fa76759f93f/comments", "author": {"login": "CarloWood", "id": 590303, "node_id": "MDQ6VXNlcjU5MDMwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/590303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CarloWood", "html_url": "https://github.com/CarloWood", "followers_url": "https://api.github.com/users/CarloWood/followers", "following_url": "https://api.github.com/users/CarloWood/following{/other_user}", "gists_url": "https://api.github.com/users/CarloWood/gists{/gist_id}", "starred_url": "https://api.github.com/users/CarloWood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CarloWood/subscriptions", "organizations_url": "https://api.github.com/users/CarloWood/orgs", "repos_url": "https://api.github.com/users/CarloWood/repos", "events_url": "https://api.github.com/users/CarloWood/events{/privacy}", "received_events_url": "https://api.github.com/users/CarloWood/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1638f5c9d007cf4e1a19a9a44b2f24a311c6727a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1638f5c9d007cf4e1a19a9a44b2f24a311c6727a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1638f5c9d007cf4e1a19a9a44b2f24a311c6727a"}], "stats": {"total": 107, "additions": 72, "deletions": 35}, "files": [{"sha": "9b3d320989efb315181d8d60ee2fc4a24edabe8c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be3faf89969a58548e6f9d4bc1d89fa76759f93f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be3faf89969a58548e6f9d4bc1d89fa76759f93f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=be3faf89969a58548e6f9d4bc1d89fa76759f93f", "patch": "@@ -1,3 +1,11 @@\n+2003-10-14  Carlo Wood  <carlo@alinoe.com>\n+\n+\tPR libstdc++/12600\n+\t* include/bits/demangle.h (session<Allocator>::\n+\t  decode_unqualified_name(string_type& output)): Fail on a\n+\t  <operator-name> when decoding <template-argument>.\n+\t* testsuite/demangle/regression/cw-15.cc: New.\n+\n 2003-10-14  Paolo Carlini  <pcarlini@unitus.it>\n \n \tPR libstdc++/11480"}, {"sha": "4d2fa395a42d719cbae444573c049c25cde5bcf6", "filename": "libstdc++-v3/include/bits/demangle.h", "status": "modified", "additions": 29, "deletions": 35, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be3faf89969a58548e6f9d4bc1d89fa76759f93f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdemangle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be3faf89969a58548e6f9d4bc1d89fa76759f93f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdemangle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdemangle.h?ref=be3faf89969a58548e6f9d4bc1d89fa76759f93f", "patch": "@@ -1938,48 +1938,41 @@ namespace __gnu_cxx\n       session<Allocator>::decode_unqualified_name(string_type& output)\n       {\n \t_GLIBCXX_DEMANGLER_DOUT_ENTERING(\"decode_unqualified_name\");\n-\tif (isdigit(current()))\n+\tif (M_inside_template_args)\n \t{\n-\t  if (!M_inside_template_args)\n-\t  {\n-\t    bool recursive_unqualified_name = (&M_function_name == &output);\n-\t    // This can be a recursive call when we are decoding\n-\t    // an <operator-name> that is a cast operator for a some\n-\t    // <unqualified-name>; for example \"operator Foo()\".\n-\t    // In that case this is thus not a ctor or dtor and we\n-\t    // are not interested in updating M_function_name.\n-\t    if (!recursive_unqualified_name)\n-\t      M_function_name.clear();\n-\t    M_name_is_template = false;\n-\t    M_name_is_cdtor = false;\n-\t    M_name_is_conversion_operator = false;\n-\t    if (!decode_source_name(M_function_name))\n-\t      _GLIBCXX_DEMANGLER_FAILURE;\n-\t    if (!recursive_unqualified_name)\n-\t      output += M_function_name;\n-\t  }\n-\t  else if (!decode_source_name(output))\n+\t  if (!decode_source_name(output))\n \t    _GLIBCXX_DEMANGLER_FAILURE;\n-\t  _GLIBCXX_DEMANGLER_RETURN;\n \t}\n-\tif (islower(current()))\n+\telse if (isdigit(current()))\n \t{\n-\t  if (!M_inside_template_args)\n-\t  {\n+\t  bool recursive_unqualified_name = (&M_function_name == &output);\n+\t  // This can be a recursive call when we are decoding\n+\t  // an <operator-name> that is a cast operator for a some\n+\t  // <unqualified-name>; for example \"operator Foo()\".\n+\t  // In that case this is thus not a ctor or dtor and we\n+\t  // are not interested in updating M_function_name.\n+\t  if (!recursive_unqualified_name)\n \t    M_function_name.clear();\n-\t    M_name_is_template = false;\n-\t    M_name_is_cdtor = false;\n-\t    M_name_is_conversion_operator = false;\n-\t    if (!decode_operator_name(M_function_name))\n-\t      _GLIBCXX_DEMANGLER_FAILURE;\n+\t  M_name_is_template = false;\n+\t  M_name_is_cdtor = false;\n+\t  M_name_is_conversion_operator = false;\n+\t  if (!decode_source_name(M_function_name))\n+\t    _GLIBCXX_DEMANGLER_FAILURE;\n+\t  if (!recursive_unqualified_name)\n \t    output += M_function_name;\n-\t  }\n-\t  _GLIBCXX_DEMANGLER_RETURN;\n \t}\n-\tif (current() == 'C' || current() == 'D')\n+\telse if (islower(current()))\n \t{\n-\t  if (M_inside_template_args)\n+\t  M_function_name.clear();\n+\t  M_name_is_template = false;\n+\t  M_name_is_cdtor = false;\n+\t  M_name_is_conversion_operator = false;\n+\t  if (!decode_operator_name(M_function_name))\n \t    _GLIBCXX_DEMANGLER_FAILURE;\n+\t  output += M_function_name;\n+\t}\n+\telse if (current() == 'C' || current() == 'D')\n+\t{\n \t  // <ctor-dtor-name> ::=\n \t  //   C1\t# complete object (in-charge) constructor\n \t  //   C2\t# base object (not-in-charge) constructor\n@@ -2005,9 +1998,10 @@ namespace __gnu_cxx\n \t  M_name_is_cdtor = true;\n \t  eat_current();\n \t  output += M_function_name;\n-\t  _GLIBCXX_DEMANGLER_RETURN;\n \t}\n-\t_GLIBCXX_DEMANGLER_FAILURE;\n+\telse\n+\t  _GLIBCXX_DEMANGLER_FAILURE;\n+\t_GLIBCXX_DEMANGLER_RETURN;\n       }\n \n     // <unscoped-name> ::="}, {"sha": "8cf0bde5bfffe0e5914efd18cf62fb44c80f066f", "filename": "libstdc++-v3/testsuite/demangle/regression/cw-15.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be3faf89969a58548e6f9d4bc1d89fa76759f93f/libstdc%2B%2B-v3%2Ftestsuite%2Fdemangle%2Fregression%2Fcw-15.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be3faf89969a58548e6f9d4bc1d89fa76759f93f/libstdc%2B%2B-v3%2Ftestsuite%2Fdemangle%2Fregression%2Fcw-15.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdemangle%2Fregression%2Fcw-15.cc?ref=be3faf89969a58548e6f9d4bc1d89fa76759f93f", "patch": "@@ -0,0 +1,35 @@\n+// 2003-10-14  Carlo Wood  <carlo@alinoe.com>\n+\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// IA 64 C++ ABI - 5.1 External Names (a.k.a. Mangling)\n+\n+#include <testsuite_hooks.h>\n+\n+// libcwd tests\n+int main()\n+{\n+  using namespace __gnu_test;\n+\n+  // cplus-dem CORE\n+verify_demangle(\"_Z1xNiEE\",\n+\t\t\"error code = -2: invalid mangled name\");\n+\n+  return 0;\n+}"}]}