{"sha": "a322799debba41a2225dd52c2731adb5e19fa7ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTMyMjc5OWRlYmJhNDFhMjIyNWRkNTJjMjczMWFkYjVlMTlmYTdhZA==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2009-06-16T18:51:54Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2009-06-16T18:51:54Z"}, "message": "aix.h (LIBSTDCXX_STATIC): Remove -lstdc++.\n\n        * config/rs6000/aix.h (LIBSTDCXX_STATIC): Remove -lstdc++.\ncp/\n        * g++-spec.c (LIBSTDCXX_STATIC): Default to NULL.\n        (lang_specific_driver): Always allocate extra argument.\n        Add LIBSTDCXX_STATIC to arglist if defined and linking\n        statically.\n\nFrom-SVN: r148546", "tree": {"sha": "988436c6943d555431115ccac9b89b60be6bd802", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/988436c6943d555431115ccac9b89b60be6bd802"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a322799debba41a2225dd52c2731adb5e19fa7ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a322799debba41a2225dd52c2731adb5e19fa7ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a322799debba41a2225dd52c2731adb5e19fa7ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a322799debba41a2225dd52c2731adb5e19fa7ad/comments", "author": null, "committer": null, "parents": [{"sha": "c58c92f5a6b4480607e3f06b91e0595a6a187c18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c58c92f5a6b4480607e3f06b91e0595a6a187c18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c58c92f5a6b4480607e3f06b91e0595a6a187c18"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "77ec0a1b2435093d98bee1da5210cbed4287ad1f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a322799debba41a2225dd52c2731adb5e19fa7ad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a322799debba41a2225dd52c2731adb5e19fa7ad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a322799debba41a2225dd52c2731adb5e19fa7ad", "patch": "@@ -1,3 +1,7 @@\n+2009-06-16  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/aix.h (LIBSTDCXX_STATIC): Remove -lstdc++.\n+\n 2009-06-16  David Edelsohn  <edelsohn@gnu.org>\n \n \t* doc/install.texi (*-*-aix): Update explanation of XLC bootstrap."}, {"sha": "44015a348b7f8c5fcc0ade5bfb11e118eb170ea0", "filename": "gcc/config/rs6000/aix.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a322799debba41a2225dd52c2731adb5e19fa7ad/gcc%2Fconfig%2Frs6000%2Faix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a322799debba41a2225dd52c2731adb5e19fa7ad/gcc%2Fconfig%2Frs6000%2Faix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix.h?ref=a322799debba41a2225dd52c2731adb5e19fa7ad", "patch": "@@ -148,7 +148,7 @@\n %{p:-L%R/lib/profiled -L%R/usr/lib/profiled} %{!shared:%{g*:-lg}} -lc\"\n \n /* Static linking with shared libstdc++ requires libsupc++ as well.  */\n-#define LIBSTDCXX_STATIC \"-lstdc++ -lsupc++\"\n+#define LIBSTDCXX_STATIC \"-lsupc++\"\n \n /* This now supports a natural alignment mode.  */\n /* AIX word-aligns FP doubles but doubleword-aligns 64-bit ints.  */"}, {"sha": "62f93a98526b88680492e233a581f0f7c14d5df5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a322799debba41a2225dd52c2731adb5e19fa7ad/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a322799debba41a2225dd52c2731adb5e19fa7ad/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a322799debba41a2225dd52c2731adb5e19fa7ad", "patch": "@@ -1,3 +1,10 @@\n+2009-06-16  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* g++-spec.c (LIBSTDCXX_STATIC): Default to NULL.\n+\t(lang_specific_driver): Always allocate extra argument.\n+\tAdd LIBSTDCXX_STATIC to arglist if defined and linking\n+\tstatically.\n+\n 2009-06-16  Ian Lance Taylor  <iant@google.com>\n \n \t* Make-lang.in (cp/class.o): Depend upon gt-cp-class.h."}, {"sha": "f49d699c83281a955eece6bb20306e57872efd27", "filename": "gcc/cp/g++spec.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a322799debba41a2225dd52c2731adb5e19fa7ad/gcc%2Fcp%2Fg%2B%2Bspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a322799debba41a2225dd52c2731adb5e19fa7ad/gcc%2Fcp%2Fg%2B%2Bspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fg%2B%2Bspec.c?ref=a322799debba41a2225dd52c2731adb5e19fa7ad", "patch": "@@ -45,7 +45,7 @@ along with GCC; see the file COPYING3.  If not see\n #define LIBSTDCXX_PROFILE LIBSTDCXX\n #endif\n #ifndef LIBSTDCXX_STATIC\n-#define LIBSTDCXX_STATIC LIBSTDCXX\n+#define LIBSTDCXX_STATIC NULL\n #endif\n \n void\n@@ -259,8 +259,9 @@ lang_specific_driver (int *in_argc, const char *const **in_argv,\n   shared_libgcc = 0;\n #endif\n \n-  /* Make sure to have room for the trailing NULL argument.  */\n-  num_args = argc + added + need_math + shared_libgcc + (library > 0) + 1;\n+  /* Make sure to have room for the trailing NULL argument.\n+     Add one for shared_libgcc or extra static library.  */\n+  num_args = argc + added + need_math + (library > 0) + 2;\n   arglist = XNEWVEC (const char *, num_args);\n \n   i = 0;\n@@ -318,8 +319,15 @@ lang_specific_driver (int *in_argc, const char *const **in_argv,\n   /* Add `-lstdc++' if we haven't already done so.  */\n   if (library > 0)\n     {\n-      arglist[j] = shared_libgcc == 0 ? LIBSTDCXX_STATIC\n-\t: saw_profile_flag ? LIBSTDCXX_PROFILE : LIBSTDCXX;\n+      arglist[j] = saw_profile_flag ? LIBSTDCXX_PROFILE : LIBSTDCXX;\n+      if (arglist[j][0] != '-' || arglist[j][1] == 'l')\n+\tadded_libraries++;\n+      j++;\n+    }\n+  /* Add target-dependent static library, if necessary.  */\n+  if (shared_libgcc == 0 && LIBSTDCXX_STATIC != NULL)\n+    {\n+      arglist[j] = LIBSTDCXX_STATIC;\n       if (arglist[j][0] != '-' || arglist[j][1] == 'l')\n \tadded_libraries++;\n       j++;"}]}