{"sha": "fc0efeeab37395550cedc351e023f9c1d9e47552", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmMwZWZlZWFiMzczOTU1NTBjZWRjMzUxZTAyM2Y5YzFkOWU0NzU1Mg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2015-12-07T13:46:07Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2015-12-07T13:46:07Z"}, "message": "nvptx.c (nvptx_assemble_decl_begin): Look inside complex and vector types.\n\n\tgcc/\n\t* config/nvptx/nvptx.c (nvptx_assemble_decl_begin): Look inside\n\tcomplex and vector types.  Cope with packed structs.\n\n\tgcc/testsuite/\n\t* gcc.target/nvptx/decl-init.c: New.\n\nFrom-SVN: r231362", "tree": {"sha": "5efde36c9a090f2922c1a53b1474a6511ad9a3a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5efde36c9a090f2922c1a53b1474a6511ad9a3a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc0efeeab37395550cedc351e023f9c1d9e47552", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc0efeeab37395550cedc351e023f9c1d9e47552", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc0efeeab37395550cedc351e023f9c1d9e47552", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc0efeeab37395550cedc351e023f9c1d9e47552/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "09d4cbcde094daa49bd7df8dcf22aa051c18a6ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09d4cbcde094daa49bd7df8dcf22aa051c18a6ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09d4cbcde094daa49bd7df8dcf22aa051c18a6ba"}], "stats": {"total": 69, "additions": 61, "deletions": 8}, "files": [{"sha": "62a601c6ee6b878c2499ef10fa790d18996ee425", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc0efeeab37395550cedc351e023f9c1d9e47552/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc0efeeab37395550cedc351e023f9c1d9e47552/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fc0efeeab37395550cedc351e023f9c1d9e47552", "patch": "@@ -1,3 +1,8 @@\n+2015-12-07  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* config/nvptx/nvptx.c (nvptx_assemble_decl_begin): Look inside\n+\tcomplex and vector types.  Cope with packed structs.\n+\n 2015-12-07  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n \tPR target/68627"}, {"sha": "2dec8467437f9a4b0fea9f1eb29781e21ddbc162", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc0efeeab37395550cedc351e023f9c1d9e47552/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc0efeeab37395550cedc351e023f9c1d9e47552/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=fc0efeeab37395550cedc351e023f9c1d9e47552", "patch": "@@ -1643,17 +1643,24 @@ nvptx_assemble_decl_begin (FILE *file, const char *name, const char *section,\n   while (TREE_CODE (type) == ARRAY_TYPE)\n     type = TREE_TYPE (type);\n \n-  if (!INTEGRAL_TYPE_P (type) && !SCALAR_FLOAT_TYPE_P (type))\n-    type = ptr_type_node;\n+  if (TREE_CODE (type) == VECTOR_TYPE\n+      || TREE_CODE (type) == COMPLEX_TYPE)\n+    /* Neither vector nor complex types can contain the other.  */\n+    type = TREE_TYPE (type);\n+\n   unsigned elt_size = int_size_in_bytes (type);\n-  if (elt_size > UNITS_PER_WORD)\n-    {\n-      type = ptr_type_node;\n-      elt_size = int_size_in_bytes (type);\n-    }\n+\n+  /* Largest mode we're prepared to accept.  For BLKmode types we\n+     don't know if it'll contain pointer constants, so have to choose\n+     pointer size, otherwise we can choose DImode.  */\n+  machine_mode elt_mode = TYPE_MODE (type) == BLKmode ? Pmode : DImode;\n+\n+  elt_size |= GET_MODE_SIZE (elt_mode);\n+  elt_size &= -elt_size; /* Extract LSB set.  */\n+  elt_mode = mode_for_size (elt_size * BITS_PER_UNIT, MODE_INT, 0);\n \n   decl_chunk_size = elt_size;\n-  decl_chunk_mode = int_mode_for_mode (TYPE_MODE (type));\n+  decl_chunk_mode = elt_mode;\n   decl_offset = 0;\n   init_part = 0;\n "}, {"sha": "0c96d70676e84eeaaa80cbd6560cbeb911d81fc7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc0efeeab37395550cedc351e023f9c1d9e47552/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc0efeeab37395550cedc351e023f9c1d9e47552/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fc0efeeab37395550cedc351e023f9c1d9e47552", "patch": "@@ -1,3 +1,7 @@\n+2015-12-07  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* gcc.target/nvptx/decl-init.c: New.\n+\n 2015-12-07  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n \tPR target/68627"}, {"sha": "76f499c1714284441211d46d954489174ebe74cc", "filename": "gcc/testsuite/gcc.target/nvptx/decl-init.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc0efeeab37395550cedc351e023f9c1d9e47552/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fdecl-init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc0efeeab37395550cedc351e023f9c1d9e47552/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fdecl-init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fdecl-init.c?ref=fc0efeeab37395550cedc351e023f9c1d9e47552", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-long-long\" } */\n+\n+__extension__ _Complex float cf = 1.0f + 2.0if;\n+__extension__ _Complex double cd = 3.0 + 4.0i;\n+\n+long long la[2] = \n+  {0x0102030405060708ll,\n+   0x1112131415161718ll};\n+\n+struct six \n+{\n+  char a;\n+  short b, c;\n+};\n+\n+struct six six1 = {1, 2, 3};\n+struct six six2[2] = {{4, 5, 6}, {7, 8, 9}};\n+\n+struct __attribute__((packed)) five \n+{\n+  char a;\n+  int b;\n+};\n+struct five five1 = {10, 11};\n+struct five five2[2] = {{12, 13}, {14, 15}};\n+\n+int  __attribute__((vector_size(16))) vi = {16, 17, 18, 19};\n+\n+/* dg-final { scan-assembler \".align 4 .u32 cf\\\\\\[2\\\\\\] = { 1065353216, 1073741824 };\" } } */\n+/* dg-final { scan-assembler \".align 8 .u64 df\\\\\\[2\\\\\\] = { 4613937818241073152, 4616189618054758400 };\" } } */\n+/* dg-final { scan-assembler \".align 8 .u64 la\\\\\\[2\\\\\\] = { 72623859790382856, 1230066625199609624 };\" } } */\n+/* dg-final { scan-assembler \".align 2 .u16 six1\\\\\\[3\\\\\\] = { 1, 2, 3 };\" } } */\n+/* dg-final { scan-assembler \".align 2 .u16 six2\\\\\\[6\\\\\\] = { 4, 5, 6, 7, 8, 9 };\" } } */\n+/* dg-final { scan-assembler \".align 1 .u8 five1\\\\\\[5\\\\\\] = { 10, 11, 0, 0, 0 };\" } } */\n+/* dg-final { scan-assembler \".align 1 .u8 five2\\\\\\[10\\\\\\] = { 12, 13, 0, 0, 0, 14, 15, 0, 0, 0 };\" } } */\n+/* dg-final { scan-assembler \".align 8 .u32 vi\\\\\\[4\\\\\\] = { 16, 17, 18, 19 };\" } } */"}]}