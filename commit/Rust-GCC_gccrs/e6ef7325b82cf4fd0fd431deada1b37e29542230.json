{"sha": "e6ef7325b82cf4fd0fd431deada1b37e29542230", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTZlZjczMjViODJjZjRmZDBmZDQzMWRlYWRhMWIzN2UyOTU0MjIzMA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2007-11-30T09:31:56Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-11-30T09:31:56Z"}, "message": "re PR fortran/34186 (dump-parse-tree: ICE for ts->cl->length, if ts->cl == NULL)\n\n2007-11-30  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/34186\n        * symbol.c (generate_isocbinding_symbol): Set string length.\n        * dump-parse-tree.c (gfc_show_attr): Show BIND(C) attribute.\n        * misc.c (gfc_basic_typename): Handle BT_VOID.\n\nFrom-SVN: r130534", "tree": {"sha": "ff3798fc5a704430ba9eb2aed7a0a828e27a0e6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff3798fc5a704430ba9eb2aed7a0a828e27a0e6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6ef7325b82cf4fd0fd431deada1b37e29542230", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6ef7325b82cf4fd0fd431deada1b37e29542230", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6ef7325b82cf4fd0fd431deada1b37e29542230", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6ef7325b82cf4fd0fd431deada1b37e29542230/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "89ab8ba092a961625a2b636d808db5af3f08f9cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89ab8ba092a961625a2b636d808db5af3f08f9cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89ab8ba092a961625a2b636d808db5af3f08f9cd"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "6f23f68503c04df4640497476bbda9a27d2c3a1f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6ef7325b82cf4fd0fd431deada1b37e29542230/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6ef7325b82cf4fd0fd431deada1b37e29542230/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e6ef7325b82cf4fd0fd431deada1b37e29542230", "patch": "@@ -1,3 +1,10 @@\n+2007-11-30  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/34186\n+\t* symbol.c (generate_isocbinding_symbol): Set string length.\n+\t* dump-parse-tree.c (gfc_show_attr): Show BIND(C) attribute.\n+\t* misc.c (gfc_basic_typename): Handle BT_VOID.\n+\n 2007-11-29  Steven G. Kargl  <kargls@comcast.net>\n \n \tPR fortran/34230"}, {"sha": "e1e463f7fcd9069b69079240bb01f84edb4eee3a", "filename": "gcc/fortran/dump-parse-tree.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6ef7325b82cf4fd0fd431deada1b37e29542230/gcc%2Ffortran%2Fdump-parse-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6ef7325b82cf4fd0fd431deada1b37e29542230/gcc%2Ffortran%2Fdump-parse-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdump-parse-tree.c?ref=e6ef7325b82cf4fd0fd431deada1b37e29542230", "patch": "@@ -582,6 +582,8 @@ gfc_show_attr (symbol_attribute *attr)\n     gfc_status (\" RESULT\");\n   if (attr->entry)\n     gfc_status (\" ENTRY\");\n+  if (attr->is_bind_c)\n+    gfc_status (\" BIND(C)\");\n \n   if (attr->data)\n     gfc_status (\" DATA\");"}, {"sha": "4bc5c43220761500aaadaa5ca014fc9fb63c14e8", "filename": "gcc/fortran/misc.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6ef7325b82cf4fd0fd431deada1b37e29542230/gcc%2Ffortran%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6ef7325b82cf4fd0fd431deada1b37e29542230/gcc%2Ffortran%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmisc.c?ref=e6ef7325b82cf4fd0fd431deada1b37e29542230", "patch": "@@ -139,6 +139,9 @@ gfc_basic_typename (bt type)\n     case BT_PROCEDURE:\n       p = \"PROCEDURE\";\n       break;\n+    case BT_VOID:\n+      p = \"VOID\";\n+      break;\n     case BT_UNKNOWN:\n       p = \"UNKNOWN\";\n       break;"}, {"sha": "a2bb43fecab311574cf3429a61ae8d783548e5f3", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6ef7325b82cf4fd0fd431deada1b37e29542230/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6ef7325b82cf4fd0fd431deada1b37e29542230/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=e6ef7325b82cf4fd0fd431deada1b37e29542230", "patch": "@@ -3810,6 +3810,8 @@ generate_isocbinding_symbol (const char *mod_name, iso_c_binding_symbol s,\n \ttmp_sym->value->value.character.string[0]\n \t  = (char) c_interop_kinds_table[s].value;\n \ttmp_sym->value->value.character.string[1] = '\\0';\n+\ttmp_sym->value->ts.cl = gfc_get_charlen ();\n+\ttmp_sym->value->ts.cl->length = gfc_int_expr (1);\n \n \t/* May not need this in both attr and ts, but do need in\n \t   attr for writing module file.  */"}]}