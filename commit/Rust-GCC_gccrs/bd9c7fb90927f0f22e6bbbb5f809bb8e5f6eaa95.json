{"sha": "bd9c7fb90927f0f22e6bbbb5f809bb8e5f6eaa95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ5YzdmYjkwOTI3ZjBmMjJlNmJiYmI1ZjgwOWJiOGU1ZjZlYWE5NQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-08-30T16:30:41Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-08-30T16:30:41Z"}, "message": "utils.c (gnat_pushdecl): Remove test for PARM_DECLs.\n\n\t* gcc-interface/utils.c (gnat_pushdecl): Remove test for PARM_DECLs.\n\tAttach fake PARM_DECLs to the topmost block of the function.\n\nFrom-SVN: r163651", "tree": {"sha": "a018492c11bb2be41decae08c806fe626ac616f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a018492c11bb2be41decae08c806fe626ac616f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd9c7fb90927f0f22e6bbbb5f809bb8e5f6eaa95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd9c7fb90927f0f22e6bbbb5f809bb8e5f6eaa95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd9c7fb90927f0f22e6bbbb5f809bb8e5f6eaa95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd9c7fb90927f0f22e6bbbb5f809bb8e5f6eaa95/comments", "author": null, "committer": null, "parents": [{"sha": "fc26dab30fffbe34609fd3fef56134fc07598b8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc26dab30fffbe34609fd3fef56134fc07598b8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc26dab30fffbe34609fd3fef56134fc07598b8d"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "86226afd44b59a00ccbc500fc0d9ccf9f19fd92c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9c7fb90927f0f22e6bbbb5f809bb8e5f6eaa95/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9c7fb90927f0f22e6bbbb5f809bb8e5f6eaa95/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=bd9c7fb90927f0f22e6bbbb5f809bb8e5f6eaa95", "patch": "@@ -1,3 +1,8 @@\n+2010-08-30  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/utils.c (gnat_pushdecl): Remove test for PARM_DECLs.\n+\tAttach fake PARM_DECLs to the topmost block of the function.\n+\n 2010-08-30  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (call_to_gnu): Also force the return slot opt"}, {"sha": "c3a39d4435786ee62e29e36075e340d2618b3c38", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9c7fb90927f0f22e6bbbb5f809bb8e5f6eaa95/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9c7fb90927f0f22e6bbbb5f809bb8e5f6eaa95/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=bd9c7fb90927f0f22e6bbbb5f809bb8e5f6eaa95", "patch": "@@ -418,11 +418,8 @@ gnat_poplevel (void)\n void\n gnat_pushdecl (tree decl, Node_Id gnat_node)\n {\n-  /* If this decl is public external or at toplevel, there is no context.\n-     But PARM_DECLs always go in the level of its function.  */\n-  if (TREE_CODE (decl) != PARM_DECL\n-      && ((DECL_EXTERNAL (decl) && TREE_PUBLIC (decl))\n-\t  || global_bindings_p ()))\n+  /* If this decl is public external or at toplevel, there is no context.  */\n+  if ((TREE_PUBLIC (decl) && DECL_EXTERNAL (decl)) || global_bindings_p ())\n     DECL_CONTEXT (decl) = 0;\n   else\n     {\n@@ -461,8 +458,14 @@ gnat_pushdecl (tree decl, Node_Id gnat_node)\n \t}\n       else\n \t{\n-\t  DECL_CHAIN (decl) = BLOCK_VARS (current_binding_level->block);\n-\t  BLOCK_VARS (current_binding_level->block) = decl;\n+\t  tree block;\n+\t  /* Fake PARM_DECLs go into the topmost block of the function.  */\n+\t  if (TREE_CODE (decl) == PARM_DECL)\n+\t    block = BLOCK_SUPERCONTEXT (current_binding_level->block);\n+\t  else\n+\t    block = current_binding_level->block;\n+\t  DECL_CHAIN (decl) = BLOCK_VARS (block);\n+\t  BLOCK_VARS (block) = decl;\n \t}\n     }\n \n@@ -1878,9 +1881,7 @@ end_subprog_body (tree body)\n {\n   tree fndecl = current_function_decl;\n \n-  /* Mark the BLOCK for this level as being for this function and pop the\n-     level.  Since the vars in it are the parameters, clear them.  */\n-  BLOCK_VARS (current_binding_level->block) = NULL_TREE;\n+  /* Attach the BLOCK for this level to the function and pop the level.  */\n   BLOCK_SUPERCONTEXT (current_binding_level->block) = fndecl;\n   DECL_INITIAL (fndecl) = current_binding_level->block;\n   gnat_poplevel ();"}]}