{"sha": "95ddd785f615b57b28764a3466b9cb167512a414", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTVkZGQ3ODVmNjE1YjU3YjI4NzY0YTM0NjZiOWNiMTY3NTEyYTQxNA==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2002-09-24T22:51:57Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2002-09-24T22:51:57Z"}, "message": "Makefile.def: New file.\n\n2002-09-22  Nathanael Nerode  <neroden@gcc.gnu.org>\n\n\t* Makefile.def: New file.\n\t* Makefile.tpl: New file.\n\t* Makefile.in: Generate from Makefile.tpl with 'autogen Makefile.def'.\n\t* contrib/gcc_update: Note that Makefile.in is a generated file.\n\n\t* configure.in: Minor rearrangement.  Simplify tests.\n\nFrom-SVN: r57484", "tree": {"sha": "36dbd2fef4a5838ae32cfbe15e9dbd3f87251e80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36dbd2fef4a5838ae32cfbe15e9dbd3f87251e80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95ddd785f615b57b28764a3466b9cb167512a414", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95ddd785f615b57b28764a3466b9cb167512a414", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95ddd785f615b57b28764a3466b9cb167512a414", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95ddd785f615b57b28764a3466b9cb167512a414/comments", "author": null, "committer": null, "parents": [{"sha": "2106e42af4da05a6f59778b41c516c9d79e72312", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2106e42af4da05a6f59778b41c516c9d79e72312", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2106e42af4da05a6f59778b41c516c9d79e72312"}], "stats": {"total": 1997, "additions": 1964, "deletions": 33}, "files": [{"sha": "5be64335999db757a62441fde93372f26392267a", "filename": "ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95ddd785f615b57b28764a3466b9cb167512a414/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95ddd785f615b57b28764a3466b9cb167512a414/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=95ddd785f615b57b28764a3466b9cb167512a414", "patch": "@@ -1,3 +1,12 @@\n+2002-09-22  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* Makefile.def: New file.\n+\t* Makefile.tpl: New file.\n+\t* Makefile.in: Generate from Makefile.tpl with 'autogen Makefile.def'.\n+\t* contrib/gcc_update: Note that Makefile.in is a generated file.\n+\n+\t* configure.in: Minor rearrangement.  Simplify tests.\n+\n 2002-09-22  Jason Thorpe  <thorpej@wasabisystems.com>\n \n \t* configure.in (with_headers): Skip copy if value is \"yes\"."}, {"sha": "23771fc1bcea266a40fade40a3addbc7c212e338", "filename": "Makefile.def", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95ddd785f615b57b28764a3466b9cb167512a414/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95ddd785f615b57b28764a3466b9cb167512a414/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=95ddd785f615b57b28764a3466b9cb167512a414", "patch": "@@ -0,0 +1,65 @@\n+#! /usr/bin/autogen\n+AutoGen definitions Makefile.tpl;\n+\n+host_modules= { module= ash; };\n+host_modules= { module= autoconf; };\n+host_modules= { module= automake; };\n+host_modules= { module= bash; };\n+host_modules= { module= bfd; };\n+// Put install-opcodes before install-binutils: should be Makefile dependency.\n+host_modules= { module= opcodes; };\n+host_modules= { module= binutils; };\n+host_modules= { module= bison; no_check_cross= true; };\n+host_modules= { module= byacc; no_check_cross= true; };\n+host_modules= { module= bzip2; };\n+host_modules= { module= db; };\n+host_modules= { module= dejagnu; };\n+host_modules= { module= diff; };\n+host_modules= { module= dosutils; no_check= true; };\n+host_modules= { module= etc; };\n+host_modules= { module= fastjar; no_check_cross= true; };\n+host_modules= { module= fileutils; };\n+host_modules= { module= findutils; };\n+host_modules= { module= find; };\n+host_modules= { module= flex; no_check_cross= true; };\n+host_modules= { module= gas; };\n+host_modules= { module= gawk; };\n+host_modules= { module= gettext; };\n+host_modules= { module= gnuserv; };\n+host_modules= { module= gprof; };\n+host_modules= { module= grep; };\n+host_modules= { module= gzip; };\n+host_modules= { module= hello; };\n+host_modules= { module= indent; };\n+host_modules= { module= intl; };\n+// Put install-tcl before install-itcl: should be Makefile dependency.\n+host_modules= { module= tcl; };\n+host_modules= { module= itcl; };\n+host_modules= { module= ld; };\n+host_modules= { module= libgui; };\n+host_modules= { module= libiberty; };\n+host_modules= { module= libtool; };\n+host_modules= { module= m4; };\n+host_modules= { module= make; };\n+host_modules= { module= mmalloc; no_check=true; };\n+host_modules= { module= patch; };\n+host_modules= { module= perl; };\n+host_modules= { module= prms; };\n+host_modules= { module= rcs; };\n+host_modules= { module= readline; };\n+host_modules= { module= release; no_install= true; no_check= true; };\n+host_modules= { module= recode; };\n+host_modules= { module= sed; };\n+host_modules= { module= send-pr; };\n+host_modules= { module= shellutils; };\n+host_modules= { module= sid; };\n+host_modules= { module= sim; };\n+host_modules= { module= snavigator; };\n+host_modules= { module= tar; };\n+host_modules= { module= texinfo; no_install= true; };\n+host_modules= { module= textutils; };\n+host_modules= { module= time; };\n+host_modules= { module= uudecode; };\n+host_modules= { module= wdiff; };\n+host_modules= { module= zip; no_check_cross=true; };\n+host_modules= { module= zlib; no_install=true; no_check=true; };"}, {"sha": "b1ff44ea79ed74eef20b0203517a9d3aa0f21ec4", "filename": "Makefile.in", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95ddd785f615b57b28764a3466b9cb167512a414/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95ddd785f615b57b28764a3466b9cb167512a414/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=95ddd785f615b57b28764a3466b9cb167512a414", "patch": "@@ -1,3 +1,5 @@\n+\n+# Makefile.in is generated from Makefile.tpl by 'autogen Makefile.def'.\n #\n # Makefile for directory with subdirs to build.\n #   Copyright (C) 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n@@ -529,6 +531,7 @@ ALL_MODULES = \\\n \tall-automake \\\n \tall-bash \\\n \tall-bfd \\\n+\tall-opcodes \\\n \tall-binutils \\\n \tall-bison \\\n \tall-byacc \\\n@@ -553,6 +556,7 @@ ALL_MODULES = \\\n \tall-hello \\\n \tall-indent \\\n \tall-intl \\\n+\tall-tcl \\\n \tall-itcl \\\n \tall-ld \\\n \tall-libgui \\\n@@ -561,7 +565,6 @@ ALL_MODULES = \\\n \tall-m4 \\\n \tall-make \\\n \tall-mmalloc \\\n-\tall-opcodes \\\n \tall-patch \\\n \tall-perl \\\n \tall-prms \\\n@@ -576,7 +579,6 @@ ALL_MODULES = \\\n \tall-sim \\\n \tall-snavigator \\\n \tall-tar \\\n-\tall-tcl \\\n \tall-texinfo \\\n \tall-textutils \\\n \tall-time \\\n@@ -605,6 +607,7 @@ CROSS_CHECK_MODULES = \\\n \tcheck-automake \\\n \tcheck-bash \\\n \tcheck-bfd \\\n+\tcheck-opcodes \\\n \tcheck-binutils \\\n \tcheck-bzip2 \\\n \tcheck-db \\\n@@ -624,15 +627,14 @@ CROSS_CHECK_MODULES = \\\n \tcheck-hello \\\n \tcheck-indent \\\n \tcheck-intl \\\n+\tcheck-tcl \\\n \tcheck-itcl \\\n \tcheck-ld \\\n \tcheck-libgui \\\n \tcheck-libiberty \\\n \tcheck-libtool \\\n \tcheck-m4 \\\n \tcheck-make \\\n-\tcheck-mmcheckoc \\\n-\tcheck-opcodes \\\n \tcheck-patch \\\n \tcheck-perl \\\n \tcheck-prms \\\n@@ -642,11 +644,10 @@ CROSS_CHECK_MODULES = \\\n \tcheck-sed \\\n \tcheck-send-pr \\\n \tcheck-shellutils \\\n-\tcheck-snavigator \\\n \tcheck-sid \\\n \tcheck-sim \\\n+\tcheck-snavigator \\\n \tcheck-tar \\\n-\tcheck-tcl \\\n \tcheck-texinfo \\\n \tcheck-textutils \\\n \tcheck-time \\\n@@ -669,11 +670,11 @@ INSTALL_MODULES = \\\n \tinstall-automake \\\n \tinstall-bash \\\n \tinstall-bfd \\\n-\tinstall-bzip2 \\\n \tinstall-opcodes \\\n \tinstall-binutils \\\n \tinstall-bison \\\n \tinstall-byacc \\\n+\tinstall-bzip2 \\\n \tinstall-db \\\n \tinstall-dejagnu \\\n \tinstall-diff \\\n@@ -831,6 +832,7 @@ CLEAN_MODULES = \\\n \tclean-automake \\\n \tclean-bash \\\n \tclean-bfd \\\n+\tclean-opcodes \\\n \tclean-binutils \\\n \tclean-bison \\\n \tclean-byacc \\\n@@ -855,6 +857,7 @@ CLEAN_MODULES = \\\n \tclean-hello \\\n \tclean-indent \\\n \tclean-intl \\\n+\tclean-tcl \\\n \tclean-itcl \\\n \tclean-ld \\\n \tclean-libgui \\\n@@ -863,7 +866,6 @@ CLEAN_MODULES = \\\n \tclean-m4 \\\n \tclean-make \\\n \tclean-mmalloc \\\n-\tclean-opcodes \\\n \tclean-patch \\\n \tclean-perl \\\n \tclean-prms \\\n@@ -878,14 +880,13 @@ CLEAN_MODULES = \\\n \tclean-sim \\\n \tclean-snavigator \\\n \tclean-tar \\\n-\tclean-tcl \\\n \tclean-texinfo \\\n \tclean-textutils \\\n \tclean-time \\\n \tclean-uudecode \\\n \tclean-wdiff \\\n \tclean-zip \\\n-\tclean-zlib\n+\tclean-zlib \n \n # All of the target modules that can be cleaned\n CLEAN_TARGET_MODULES = \\"}, {"sha": "ba35aaa0ad1eefc54eb700f402a14b253ffae33c", "filename": "Makefile.tpl", "status": "added", "additions": 1868, "deletions": 0, "changes": 1868, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95ddd785f615b57b28764a3466b9cb167512a414/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95ddd785f615b57b28764a3466b9cb167512a414/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=95ddd785f615b57b28764a3466b9cb167512a414", "patch": "@@ -0,0 +1,1868 @@\n+[+ AutoGen5 template\n+in\n++]\n+\n+# Makefile.in is generated from Makefile.tpl by 'autogen Makefile.def'.\n+#\n+# Makefile for directory with subdirs to build.\n+#   Copyright (C) 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n+#   1999, 2000, 2001, 2002 Free Software Foundation\n+#\n+# This file is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2 of the License, or\n+# (at your option) any later version.\n+# \n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n+#\n+\n+# Tell GNU make 3.79 not to run the top level in parallel.  This \n+# prevents contention for $builddir/$target/config.cache, as well\n+# as minimizing scatter in file system caches.\n+NOTPARALLEL = .NOTPARALLEL\n+$(NOTPARALLEL):\n+\n+srcdir = .\n+\n+prefix = /usr/local\n+exec_prefix = $(prefix)\n+\n+bindir=${exec_prefix}/bin\n+sbindir=${exec_prefix}/sbin\n+libexecdir=${exec_prefix}/libexec\n+datadir=${prefix}/share\n+sysconfdir=${prefix}/etc\n+sharedstatedir=${prefix}/com\n+localstatedir=${prefix}/var\n+libdir=${exec_prefix}/lib\n+includedir=${prefix}/include\n+oldincludedir=/usr/include\n+infodir=${prefix}/info\n+mandir=${prefix}/man\n+gxx_include_dir=${includedir}/g++\n+\n+tooldir = $(exec_prefix)/$(target_alias)\n+build_tooldir = $(exec_prefix)/$(target_alias)\n+\n+program_transform_name =\n+\n+man1dir = $(mandir)/man1\n+man2dir = $(mandir)/man2\n+man3dir = $(mandir)/man3\n+man4dir = $(mandir)/man4\n+man5dir = $(mandir)/man5\n+man6dir = $(mandir)/man6\n+man7dir = $(mandir)/man7\n+man8dir = $(mandir)/man8\n+man9dir = $(mandir)/man9\n+infodir = $(prefix)/info\n+includedir = $(prefix)/include\n+# Directory in which the compiler finds executables, libraries, etc.\n+libsubdir = $(libdir)/gcc-lib/$(target_alias)/$(gcc_version)\n+GDB_NLM_DEPS = \n+\n+SHELL = /bin/sh\n+\n+# pwd command to use.  Allow user to override default by setting PWDCMD in\n+# the environment to account for automounters.  The make variable must not\n+# be called PWDCMD, otherwise the value set here is passed to make\n+# subprocesses and overrides the setting from the user's environment.\n+PWD = $${PWDCMD-pwd}\n+\n+# INSTALL_PROGRAM_ARGS is changed by configure.in to use -x for a\n+# cygwin host.\n+INSTALL_PROGRAM_ARGS =\n+\n+INSTALL = $(SHELL) $$s/install-sh -c\n+INSTALL_PROGRAM = $(INSTALL) $(INSTALL_PROGRAM_ARGS)\n+INSTALL_SCRIPT = $(INSTALL)\n+INSTALL_DATA = $(INSTALL) -m 644\n+\n+INSTALL_DOSREL = install-dosrel-fake\n+\n+AS = as\n+AR = ar\n+AR_FLAGS = rc\n+CC = cc\n+\n+# Special variables passed down in EXTRA_GCC_FLAGS.  They are defined\n+# here so that they can be overridden by Makefile fragments.\n+HOST_CC = $(CC_FOR_BUILD)\n+BUILD_PREFIX = \n+BUILD_PREFIX_1 = loser-\n+\n+# These flag values are normally overridden by the configure script.\n+CFLAGS = -g\n+CXXFLAGS = -g -O2\n+\n+LDFLAGS = \n+LIBCFLAGS = $(CFLAGS)\n+CFLAGS_FOR_BUILD = $(CFLAGS)\n+# During gcc bootstrap, if we use some random cc for stage1 then\n+# CFLAGS will be just -g.  We want to ensure that TARGET libraries\n+# (which we know are built with gcc) are built with optimizations so\n+# prepend -O2 when setting CFLAGS_FOR_TARGET.\n+CFLAGS_FOR_TARGET = -O2 $(CFLAGS)\n+LDFLAGS_FOR_TARGET = \n+LIBCFLAGS_FOR_TARGET = $(CFLAGS_FOR_TARGET)\n+PICFLAG = \n+PICFLAG_FOR_TARGET = \n+\n+CXX = c++\n+\n+# Use -O2 to stress test the compiler.\n+LIBCXXFLAGS = $(CXXFLAGS) -fno-implicit-templates\n+CXXFLAGS_FOR_TARGET = $(CXXFLAGS)\n+LIBCXXFLAGS_FOR_TARGET = $(CXXFLAGS_FOR_TARGET) -fno-implicit-templates\n+\n+DLLTOOL = dlltool\n+WINDRES = windres\n+\n+NM = nm\n+\n+LD = ld\n+\n+BZIPPROG = bzip2\n+MD5PROG = md5sum\n+\n+# These values are substituted by configure.\n+DEFAULT_YACC = yacc\n+DEFAULT_LEX = lex\n+DEFAULT_M4 = m4\n+\n+BISON = `if [ -f $$r/bison/bison ] ; then \\\n+\t    echo $$r/bison/bison -L $$s/bison/ ; \\\n+\t else \\\n+\t    echo bison ; \\\n+\t fi`\n+\n+YACC = `if [ -f $$r/bison/bison ] ; then \\\n+\t    echo $$r/bison/bison -y -L $$s/bison/ ; \\\n+\telif [ -f $$r/byacc/byacc ] ; then \\\n+\t    echo $$r/byacc/byacc ; \\\n+\telse \\\n+\t    echo ${DEFAULT_YACC} ; \\\n+\tfi`\n+\n+LEX = `if [ -f $$r/flex/flex ] ; \\\n+\tthen echo $$r/flex/flex ; \\\n+\telse echo ${DEFAULT_LEX} ; fi`\n+\n+M4 = `if [ -f $$r/m4/m4 ] ; \\\n+\tthen echo $$r/m4/m4 ; \\\n+\telse echo ${DEFAULT_M4} ; fi`\n+\n+# For an installed makeinfo, we require it to be from texinfo 4 or\n+# higher, else we use the \"missing\" dummy.\n+MAKEINFO = `if [ -f $$r/texinfo/makeinfo/makeinfo ] ; \\\n+\tthen echo $$r/texinfo/makeinfo/makeinfo ; \\\n+\telse if (makeinfo --version \\\n+\t  | egrep 'texinfo[^0-9]*([1-3][0-9]|[4-9])') >/dev/null 2>&1; \\\n+        then echo makeinfo; else echo $$s/missing makeinfo; fi; fi`\n+\n+# This just becomes part of the MAKEINFO definition passed down to\n+# sub-makes.  It lets flags be given on the command line while still\n+# using the makeinfo from the object tree.\n+MAKEINFOFLAGS =\n+\n+EXPECT = `if [ -f $$r/expect/expect ] ; \\\n+\tthen echo $$r/expect/expect ; \\\n+\telse echo expect ; fi`\n+\n+RUNTEST = `if [ -f $$s/dejagnu/runtest ] ; \\\n+\tthen echo $$s/dejagnu/runtest ; \\\n+\telse echo runtest ; fi`\n+\n+\n+# compilers to use to create programs which must be run in the build\n+# environment.\n+CC_FOR_BUILD = $(CC)\n+CXX_FOR_BUILD = $(CXX)\n+\n+SUBDIRS = \"this is set via configure, don't edit this\"\n+OTHERS = \n+\n+# This is set by the configure script to the list of directories which\n+# should be built using the target tools.\n+TARGET_CONFIGDIRS = libiberty libgloss $(SPECIAL_LIBS) newlib winsup opcodes libf2c libobjc\n+\n+# Target libraries are put under this directory:\n+# Changed by configure to $(target_alias) if cross.\n+TARGET_SUBDIR = .\n+\n+BUILD_CONFIGDIRS = libiberty\n+BUILD_SUBDIR = .\n+\n+# This is set by the configure script to the arguments to use when configuring\n+# directories built for the target.\n+TARGET_CONFIGARGS = \n+\n+# This is set by the configure script to the arguments to use when configuring\n+# directories built for the build system.\n+BUILD_CONFIGARGS =\n+\n+# This is set by configure to REALLY_SET_LIB_PATH if --enable-shared\n+# was used.\n+SET_LIB_PATH =\n+\n+# This is the name of the environment variable used for the path to\n+# the libraries.  This may be changed by configure.in.\n+RPATH_ENVVAR = LD_LIBRARY_PATH\n+\n+# This is the list of directories that may be needed in RPATH_ENVVAR\n+# so that programs built for the host machine work.\n+HOST_LIB_PATH = $$r/bfd:$$r/opcodes\n+\n+# This is the list of directories that may be needed in RPATH_ENVVAR\n+# so that prorgams built for the target machine work.\n+TARGET_LIB_PATH = $$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs:\n+\n+# configure.in sets SET_LIB_PATH to this if --enable-shared was used.\n+# Some platforms don't like blank entries, so we remove duplicate,\n+# leading and trailing colons.\n+REALLY_SET_LIB_PATH = \\\n+  $(RPATH_ENVVAR)=`echo \"$(HOST_LIB_PATH):$(TARGET_LIB_PATH):$$$(RPATH_ENVVAR)\" | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'`; export $(RPATH_ENVVAR);\n+\n+ALL = all.normal\n+INSTALL_TARGET = installdirs \\\n+\tinstall-gcc \\\n+\t$(INSTALL_MODULES) \\\n+\t$(INSTALL_TARGET_MODULES) \\\n+\t$(INSTALL_X11_MODULES) \\\n+\t$(INSTALL_DOSREL)\n+\n+INSTALL_TARGET_CROSS = installdirs \\\n+\tinstall-gcc-cross \\\n+\t$(INSTALL_MODULES) \\\n+\t$(INSTALL_TARGET_MODULES) \\\n+\t$(INSTALL_X11_MODULES) \\\n+\t$(INSTALL_DOSREL)\n+\n+# Should be substed by configure.in\n+FLAGS_FOR_TARGET =\n+CC_FOR_TARGET =\n+CXX_FOR_TARGET =\n+CXX_FOR_TARGET_FOR_RECURSIVE_MAKE =\n+GCJ_FOR_TARGET =\n+\n+# If GCC_FOR_TARGET is not overriden on the command line, then this\n+# variable is passed down to the gcc Makefile, where it is used to\n+# build libgcc2.a.  We define it here so that it can itself be\n+# overridden on the command line.\n+GCC_FOR_TARGET = $(STAGE_CC_WRAPPER) $$r/gcc/xgcc -B$$r/gcc/ $(FLAGS_FOR_TARGET)\n+\n+AS_FOR_TARGET = ` \\\n+  if [ -f $$r/gas/as-new ] ; then \\\n+    echo $$r/gas/as-new ; \\\n+  elif [ -f $$r/gcc/xgcc ]; then \\\n+    $(CC_FOR_TARGET) -print-prog-name=as ; \\\n+  else \\\n+    if [ '$(host_canonical)' = '$(target_canonical)' ] ; then \\\n+      echo $(AS); \\\n+    else \\\n+       t='$(program_transform_name)'; echo as | sed -e 's/x/x/' $$t ; \\\n+    fi; \\\n+  fi`\n+\n+LD_FOR_TARGET = ` \\\n+  if [ -f $$r/ld/ld-new ] ; then \\\n+    echo $$r/ld/ld-new ; \\\n+  elif [ -f $$r/gcc/xgcc ]; then \\\n+    $(CC_FOR_TARGET) -print-prog-name=ld ; \\\n+  else \\\n+    if [ '$(host_canonical)' = '$(target_canonical)' ] ; then \\\n+      echo $(LD); \\\n+    else \\\n+       t='$(program_transform_name)'; echo ld | sed -e 's/x/x/' $$t ; \\\n+    fi; \\\n+  fi`\n+\n+DLLTOOL_FOR_TARGET = ` \\\n+  if [ -f $$r/binutils/dlltool ] ; then \\\n+    echo $$r/binutils/dlltool ; \\\n+  else \\\n+    if [ '$(host_canonical)' = '$(target_canonical)' ] ; then \\\n+      echo $(DLLTOOL); \\\n+    else \\\n+       t='$(program_transform_name)'; echo dlltool | sed -e 's/x/x/' $$t ; \\\n+    fi; \\\n+  fi`\n+\n+WINDRES_FOR_TARGET = ` \\\n+  if [ -f $$r/binutils/windres ] ; then \\\n+    echo $$r/binutils/windres ; \\\n+  else \\\n+    if [ '$(host_canonical)' = '$(target_canonical)' ] ; then \\\n+      echo $(WINDRES); \\\n+    else \\\n+       t='$(program_transform_name)'; echo windres | sed -e 's/x/x/' $$t ; \\\n+    fi; \\\n+  fi`\n+\n+AR_FOR_TARGET = ` \\\n+  if [ -f $$r/binutils/ar ] ; then \\\n+    echo $$r/binutils/ar ; \\\n+  else \\\n+    if [ '$(host_canonical)' = '$(target_canonical)' ] ; then \\\n+      echo $(AR); \\\n+    else \\\n+       t='$(program_transform_name)'; echo ar | sed -e 's/x/x/' $$t ; \\\n+    fi; \\\n+  fi`\n+\n+RANLIB_FOR_TARGET = ` \\\n+  if [ -f $$r/binutils/ranlib ] ; then \\\n+    echo $$r/binutils/ranlib ; \\\n+  else \\\n+    if [ '$(host_canonical)' = '$(target_canonical)' ] ; then \\\n+      if [ x'$(RANLIB)' != x ]; then \\\n+         echo $(RANLIB); \\\n+      else \\\n+         echo ranlib; \\\n+      fi; \\\n+    else \\\n+       t='$(program_transform_name)'; echo ranlib | sed -e 's/x/x/' $$t ; \\\n+    fi; \\\n+  fi`\n+\n+NM_FOR_TARGET = ` \\\n+  if [ -f $$r/binutils/nm-new ] ; then \\\n+    echo $$r/binutils/nm-new ; \\\n+  elif [ -f $$r/gcc/xgcc ]; then \\\n+    $(CC_FOR_TARGET) -print-prog-name=nm ; \\\n+  else \\\n+    if [ '$(host_canonical)' = '$(target_canonical)' ] ; then \\\n+      echo $(NM); \\\n+    else \\\n+       t='$(program_transform_name)'; echo nm | sed -e 's/x/x/' $$t ; \\\n+    fi; \\\n+  fi`\n+\n+# The first rule in the file had better be this one.  Don't put any above it.\n+# This lives here to allow makefile fragments to contain dependencies.\n+all: all.normal\n+.PHONY: all\n+\n+# These can be overridden by config/mt-*.\n+# The _TARGET_ is because they're specified in mt-foo.\n+# The _HOST_ is because they're programs that run on the host.\n+EXTRA_TARGET_HOST_ALL_MODULES =\n+EXTRA_TARGET_HOST_INSTALL_MODULES =\n+EXTRA_TARGET_HOST_CHECK_MODULES =\n+\n+#### host and target specific makefile fragments come in here.\n+###\n+\n+# Flags to pass down to all sub-makes.\n+# Please keep these in alphabetical order.\n+BASE_FLAGS_TO_PASS = \\\n+\t\"AR_FLAGS=$(AR_FLAGS)\" \\\n+\t\"AR_FOR_TARGET=$(AR_FOR_TARGET)\" \\\n+\t\"AS_FOR_TARGET=$(AS_FOR_TARGET)\" \\\n+\t\"BISON=$(BISON)\" \\\n+\t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \\\n+\t\"CC_FOR_TARGET=$(CC_FOR_TARGET)\" \\\n+\t\"CFLAGS=$(CFLAGS)\" \\\n+\t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \\\n+\t\"GCJ_FOR_TARGET=$(GCJ_FOR_TARGET)\" \\\n+\t\"CXX_FOR_BUILD=$(CXX_FOR_BUILD)\" \\\n+\t\"CXXFLAGS=$(CXXFLAGS)\" \\\n+\t\"CXXFLAGS_FOR_TARGET=$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\"CXX_FOR_TARGET=$(CXX_FOR_TARGET)\" \\\n+\t\"DLLTOOL_FOR_TARGET=$(DLLTOOL_FOR_TARGET)\" \\\n+\t\"INSTALL=$(INSTALL)\" \\\n+\t\"INSTALL_DATA=$(INSTALL_DATA)\" \\\n+\t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \\\n+\t\"INSTALL_SCRIPT=$(INSTALL_SCRIPT)\" \\\n+\t\"LDFLAGS=$(LDFLAGS)\" \\\n+\t\"LEX=$(LEX)\" \\\n+\t\"LD_FOR_TARGET=$(LD_FOR_TARGET)\" \\\n+\t\"LIBCFLAGS=$(LIBCFLAGS)\" \\\n+\t\"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\"LIBCXXFLAGS=$(LIBCXXFLAGS)\" \\\n+\t\"LIBCXXFLAGS_FOR_TARGET=$(LIBCXXFLAGS_FOR_TARGET)\" \\\n+\t\"M4=$(M4)\" \\\n+\t\"MAKE=$(MAKE)\" \\\n+\t\"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" \\\n+\t\"NM_FOR_TARGET=$(NM_FOR_TARGET)\" \\\n+\t\"RANLIB_FOR_TARGET=$(RANLIB_FOR_TARGET)\" \\\n+\t\"RPATH_ENVVAR=$(RPATH_ENVVAR)\" \\\n+\t\"SHELL=$(SHELL)\" \\\n+\t\"EXPECT=$(EXPECT)\" \\\n+\t\"RUNTEST=$(RUNTEST)\" \\\n+\t\"RUNTESTFLAGS=$(RUNTESTFLAGS)\" \\\n+\t\"TARGET_SUBDIR=$(TARGET_SUBDIR)\" \\\n+\t\"WINDRES_FOR_TARGET=$(WINDRES_FOR_TARGET)\" \\\n+\t\"YACC=$(YACC)\" \\\n+\t\"bindir=$(bindir)\" \\\n+\t\"datadir=$(datadir)\" \\\n+\t\"exec_prefix=$(exec_prefix)\" \\\n+\t\"includedir=$(includedir)\" \\\n+\t\"infodir=$(infodir)\" \\\n+\t\"libdir=$(libdir)\" \\\n+\t\"libexecdir=$(libexecdir)\" \\\n+\t\"lispdir=$(lispdir)\" \\\n+\t\"libstdcxx_incdir=$(libstdcxx_incdir)\" \\\n+\t\"libsubdir=$(libsubdir)\" \\\n+\t\"localstatedir=$(localstatedir)\" \\\n+\t\"mandir=$(mandir)\" \\\n+\t\"oldincludedir=$(oldincludedir)\" \\\n+\t\"prefix=$(prefix)\" \\\n+\t\"sbindir=$(sbindir)\" \\\n+\t\"sharedstatedir=$(sharedstatedir)\" \\\n+\t\"sysconfdir=$(sysconfdir)\" \\\n+\t\"tooldir=$(tooldir)\" \\\n+\t\"build_tooldir=$(build_tooldir)\" \\\n+\t\"gxx_include_dir=$(gxx_include_dir)\" \\\n+\t\"gcc_version=$(gcc_version)\" \\\n+\t\"gcc_version_trigger=$(gcc_version_trigger)\" \\\n+\t\"target_alias=$(target_alias)\" \n+\n+# For any flags above that may contain shell code that varies from one\n+# target library to another.  When doing recursive invocations of the\n+# top-level Makefile, we don't want the outer make to evaluate them,\n+# so we pass these variables down unchanged.  They must not contain\n+# single nor double quotes.\n+RECURSE_FLAGS = \\\n+\tCXX_FOR_TARGET='$(CXX_FOR_TARGET_FOR_RECURSIVE_MAKE)'\n+\n+# Flags to pass down to most sub-makes, in which we're building with\n+# the host environment.\n+# If any variables are added here, they must be added to do-*, below.\n+EXTRA_HOST_FLAGS = \\\n+\t'AR=$(AR)' \\\n+\t'AS=$(AS)' \\\n+\t'CC=$(CC)' \\\n+\t'CXX=$(CXX)' \\\n+\t'DLLTOOL=$(DLLTOOL)' \\\n+\t'LD=$(LD)' \\\n+\t'NM=$(NM)' \\\n+\t\"`echo 'RANLIB=$(RANLIB)' | sed -e s/.*=$$/XFOO=/`\" \\\n+\t'WINDRES=$(WINDRES)'\n+\n+FLAGS_TO_PASS = $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)\n+\n+# Flags that are concerned with the location of the X11 include files\n+# and library files\n+#\n+# NOTE: until the top-level is getting the values via autoconf, it only\n+# causes problems to have this top-level Makefile overriding the autoconf-set\n+# values in child directories.  Only variables that don't conflict with\n+# autoconf'ed ones should be passed by X11_FLAGS_TO_PASS for now.\n+#\n+X11_FLAGS_TO_PASS = \\\n+\t'X11_EXTRA_CFLAGS=$(X11_EXTRA_CFLAGS)' \\\n+\t'X11_EXTRA_LIBS=$(X11_EXTRA_LIBS)'\n+\n+# Flags to pass down to makes which are built with the target environment.\n+# The double $ decreases the length of the command line; the variables\n+# are set in BASE_FLAGS_TO_PASS, and the sub-make will expand them.\n+# If any variables are added here, they must be added to do-*, below.\n+EXTRA_TARGET_FLAGS = \\\n+\t'AR=$$(AR_FOR_TARGET)' \\\n+\t'AS=$$(AS_FOR_TARGET)' \\\n+\t'CC=$$(CC_FOR_TARGET)' \\\n+\t'CFLAGS=$$(CFLAGS_FOR_TARGET)' \\\n+\t'CXX=$$(CXX_FOR_TARGET)' \\\n+\t'CXXFLAGS=$$(CXXFLAGS_FOR_TARGET)' \\\n+\t'DLLTOOL=$$(DLLTOOL_FOR_TARGET)' \\\n+\t'LD=$$(LD_FOR_TARGET)' \\\n+\t'LIBCFLAGS=$$(LIBCFLAGS_FOR_TARGET)' \\\n+\t'LIBCXXFLAGS=$$(LIBCXXFLAGS_FOR_TARGET)' \\\n+\t'NM=$$(NM_FOR_TARGET)' \\\n+\t'RANLIB=$$(RANLIB_FOR_TARGET)' \\\n+\t'WINDRES=$$(WINDRES_FOR_TARGET)'\n+\n+TARGET_FLAGS_TO_PASS = $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)\n+\n+# Flags to pass down to gcc.  gcc builds a library, libgcc.a, so it\n+# unfortunately needs the native compiler and the target ar and\n+# ranlib.\n+# If any variables are added here, they must be added to do-*, below.\n+# The HOST_* variables are a special case, which are used for the gcc\n+# cross-building scheme.\n+EXTRA_GCC_FLAGS = \\\n+\t'AR=$(AR)' \\\n+\t'AS=$(AS)' \\\n+\t'CC=$(CC)' \\\n+\t'CXX=$(CXX)' \\\n+\t'DLLTOOL=$$(DLLTOOL_FOR_TARGET)' \\\n+\t'HOST_CC=$(CC_FOR_BUILD)' \\\n+\t'BUILD_PREFIX=$(BUILD_PREFIX)' \\\n+\t'BUILD_PREFIX_1=$(BUILD_PREFIX_1)' \\\n+\t'NM=$(NM)' \\\n+\t\"`echo 'RANLIB=$(RANLIB)' | sed -e s/.*=$$/XFOO=/`\" \\\n+\t'WINDRES=$$(WINDRES_FOR_TARGET)' \\\n+\t\"GCC_FOR_TARGET=$(GCC_FOR_TARGET)\" \\\n+\t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \\\n+\t\"`echo 'LANGUAGES=$(LANGUAGES)' | sed -e s/.*=$$/XFOO=/`\" \\\n+\t\"`echo 'STMP_FIXPROTO=$(STMP_FIXPROTO)' | sed -e s/.*=$$/XFOO=/`\" \\\n+\t\"`echo 'LIMITS_H_TEST=$(LIMITS_H_TEST)' | sed -e s/.*=$$/XFOO=/`\" \\\n+\t\"`echo 'LIBGCC2_CFLAGS=$(LIBGCC2_CFLAGS)' | sed -e s/.*=$$/XFOO=/`\" \\\n+\t\"`echo 'LIBGCC2_DEBUG_CFLAGS=$(LIBGCC2_DEBUG_CFLAGS)' | sed -e s/.*=$$/XFOO=/`\" \\\n+\t\"`echo 'LIBGCC2_INCLUDES=$(LIBGCC2_INCLUDES)' | sed -e s/.*=$$/XFOO=/`\" \\\n+\t\"`echo 'ENQUIRE=$(ENQUIRE)' | sed -e s/.*=$$/XFOO=/`\" \\\n+\t\"`echo 'STAGE1_CFLAGS=$(STAGE1_CFLAGS)' | sed -e s/.*=$$/XFOO=/`\" \\\n+\t\"`echo 'BOOT_CFLAGS=$(BOOT_CFLAGS)' | sed -e s/.*=$$/XFOO=/`\"\n+\n+GCC_FLAGS_TO_PASS = $(BASE_FLAGS_TO_PASS) $(EXTRA_GCC_FLAGS)\n+\n+# This is a list of the targets for all of the modules which are compiled\n+# using the build machine's native compiler.  Configure edits the second\n+# macro for build!=host builds.\n+ALL_BUILD_MODULES_LIST = \\\n+\tall-build-libiberty\n+ALL_BUILD_MODULES = \n+\n+# This is a list of the configure targets for all of the modules which\n+# are compiled using the native tools.\n+CONFIGURE_BUILD_MODULES = \\\n+\tconfigure-build-libiberty\n+\n+# This is a list of the targets for all of the modules which are compiled\n+# using $(FLAGS_TO_PASS).\n+ALL_MODULES = [+ FOR host_modules +]\\\n+\tall-[+module+] [+ ENDFOR host_modules +]\\\n+\t$(EXTRA_TARGET_HOST_ALL_MODULES)\n+\n+# This is a list of the check targets for all of the modules which are\n+# compiled using $(FLAGS_TO_PASS).\n+#\n+# The list is in two parts.  The first lists those tools which\n+# are tested as part of the host's native tool-chain, and not\n+# tested in a cross configuration.\n+NATIVE_CHECK_MODULES = \\\n+\tcheck-bison \\\n+\tcheck-byacc \\\n+\tcheck-fastjar \\\n+\tcheck-flex \\\n+\tcheck-zip\n+\n+CROSS_CHECK_MODULES = [+ FOR host_modules +][+ IF no_check  +][+ ELIF no_check_cross +][+ ELSE x +]\\\n+\tcheck-[+module+] [+ ENDIF no_check +][+ ENDFOR host_modules +]\\\n+\t$(EXTRA_TARGET_HOST_CHECK_MODULES)\n+\n+CHECK_MODULES=$(NATIVE_CHECK_MODULES) $(CROSS_CHECK_MODULES)\n+\n+# This is a list of the install targets for all of the modules which are\n+# compiled using $(FLAGS_TO_PASS).\n+# We put install-opcodes before install-binutils because the installed\n+# binutils might be on PATH, and they might need the shared opcodes\n+# library.\n+# We put install-tcl before install-itcl because itcl wants to run a\n+# program on installation which uses the Tcl libraries.\n+INSTALL_MODULES = [+ FOR host_modules+][+ IF no_install +][+ ELSE no_install +]\\\n+\tinstall-[+module+] [+ ENDIF no_install +][+ ENDFOR host_modules +]\\\n+\t$(EXTRA_TARGET_HOST_INSTALL_MODULES)\n+\n+# This is a list of the targets for all of the modules which are compiled\n+# using $(X11_FLAGS_TO_PASS).\n+ALL_X11_MODULES = \\\n+\tall-gdb \\\n+\tall-expect \\\n+\tall-guile \\\n+\tall-tclX \\\n+\tall-tk \\\n+\tall-tix\n+\n+# This is a list of the check targets for all of the modules which are\n+# compiled using $(X11_FLAGS_TO_PASS).\n+CHECK_X11_MODULES = \\\n+\tcheck-gdb \\\n+\tcheck-guile \\\n+\tcheck-expect \\\n+\tcheck-tclX \\\n+\tcheck-tk \\\n+\tcheck-tix\n+\n+# This is a list of the install targets for all the modules which are\n+# compiled using $(X11_FLAGS_TO_PASS).\n+INSTALL_X11_MODULES = \\\n+\tinstall-gdb \\\n+\tinstall-guile \\\n+\tinstall-expect \\\n+\tinstall-tclX \\\n+\tinstall-tk \\\n+\tinstall-tix\n+\n+# This is a list of the targets for all of the modules which are compiled\n+# using $(TARGET_FLAGS_TO_PASS).\n+ALL_TARGET_MODULES = \\\n+\tall-target-libstdc++-v3 \\\n+\tall-target-newlib \\\n+\tall-target-libf2c \\\n+\tall-target-libobjc \\\n+\tall-target-libtermcap \\\n+\tall-target-winsup \\\n+\tall-target-libgloss \\\n+\tall-target-libiberty \\\n+\tall-target-gperf \\\n+\tall-target-examples \\\n+\tall-target-libffi \\\n+\tall-target-libjava \\\n+\tall-target-zlib \\\n+\tall-target-boehm-gc \\\n+\tall-target-qthreads\n+\n+# This is a list of the configure targets for all of the modules which\n+# are compiled using the target tools.\n+CONFIGURE_TARGET_MODULES = \\\n+\tconfigure-target-libstdc++-v3 \\\n+\tconfigure-target-newlib \\\n+\tconfigure-target-libf2c \\\n+\tconfigure-target-libobjc \\\n+\tconfigure-target-libtermcap \\\n+\tconfigure-target-winsup \\\n+\tconfigure-target-libgloss \\\n+\tconfigure-target-libiberty \\\n+\tconfigure-target-gperf \\\n+\tconfigure-target-examples \\\n+\tconfigure-target-libffi \\\n+\tconfigure-target-libjava \\\n+\tconfigure-target-zlib \\\n+\tconfigure-target-boehm-gc \\\n+\tconfigure-target-qthreads\n+\n+# This is a list of the check targets for all of the modules which are\n+# compiled using $(TARGET_FLAGS_TO_PASS).\n+CHECK_TARGET_MODULES = \\\n+\tcheck-target-libstdc++-v3 \\\n+\tcheck-target-newlib \\\n+\tcheck-target-libf2c \\\n+\tcheck-target-libobjc \\\n+\tcheck-target-winsup \\\n+\tcheck-target-libiberty \\\n+\tcheck-target-libffi \\\n+\tcheck-target-libjava \\\n+\tcheck-target-zlib \\\n+\tcheck-target-boehm-gc \\\n+\tcheck-target-qthreads \\\n+\tcheck-target-gperf\n+\n+# This is a list of the install targets for all of the modules which are\n+# compiled using $(TARGET_FLAGS_TO_PASS).\n+INSTALL_TARGET_MODULES = \\\n+\tinstall-target-libstdc++-v3 \\\n+\tinstall-target-newlib \\\n+\tinstall-target-libf2c \\\n+\tinstall-target-libobjc \\\n+\tinstall-target-libtermcap \\\n+\tinstall-target-winsup \\\n+\tinstall-target-libgloss \\\n+\tinstall-target-libiberty \\\n+\tinstall-target-libjava \\\n+\tinstall-target-zlib \\\n+\tinstall-target-boehm-gc \\\n+\tinstall-target-qthreads \\\n+\tinstall-target-gperf\n+\n+# This is a list of the targets for which we can do a clean-{target}.\n+CLEAN_MODULES = [+ FOR host_modules +][+ IF no_clean +][+ ELSE no_clean +]\\\n+\tclean-[+module+] [+ ENDIF no_clean +][+ ENDFOR host_modules +]\n+\n+# All of the target modules that can be cleaned\n+CLEAN_TARGET_MODULES = \\\n+\tclean-target-libstdc++-v3 \\\n+\tclean-target-newlib \\\n+\tclean-target-libf2c \\\n+\tclean-target-libobjc \\\n+\tclean-target-winsup \\\n+\tclean-target-libgloss \\\n+\tclean-target-libiberty \\\n+\tclean-target-gperf \\\n+\tclean-target-examples \\\n+\tclean-target-libffi \\\n+\tclean-target-libjava \\\n+\tclean-target-zlib \\\n+\tclean-target-boehm-gc \\\n+\tclean-target-qthreads\n+\n+# All of the x11 modules that can be cleaned\n+CLEAN_X11_MODULES = \\\n+\tclean-gdb \\\n+\tclean-expect \\\n+\tclean-guile \\\n+\tclean-tclX \\\n+\tclean-tk \\\n+\tclean-tix\n+\n+# The target built for a native build.\n+.PHONY: all.normal\n+all.normal: \\\n+\t$(ALL_BUILD_MODULES) \\\n+\t$(ALL_MODULES) \\\n+\t$(ALL_X11_MODULES) \\\n+\t$(ALL_TARGET_MODULES) \\\n+\tall-gcc\n+\n+# Do a target for all the subdirectories.  A ``make do-X'' will do a\n+# ``make X'' in all subdirectories (because, in general, there is a\n+# dependency (below) of X upon do-X, a ``make X'' will also do this,\n+# but it may do additional work as well).\n+# This target ensures that $(BASE_FLAGS_TO_PASS) appears only once,\n+# because it is so large that it can easily overflow the command line\n+# length limit on some systems.\n+DO_X = \\\n+\tdo-clean \\\n+\tdo-distclean \\\n+\tdo-dvi \\\n+\tdo-info \\\n+\tdo-install-info \\\n+\tdo-installcheck \\\n+\tdo-mostlyclean \\\n+\tdo-maintainer-clean \\\n+\tdo-TAGS\n+.PHONY: $(DO_X)\n+$(DO_X):\n+\t@target=`echo $@ | sed -e 's/^do-//'`; \\\n+\tr=`${PWD}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\t$(SET_LIB_PATH) \\\n+\tfor i in $(SUBDIRS) -dummy-; do \\\n+\t  if [ -f ./$$i/Makefile ]; then \\\n+\t    case $$i in \\\n+\t    gcc) \\\n+\t      for flag in $(EXTRA_GCC_FLAGS); do \\\n+\t\teval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\t      done; \\\n+\t      ;; \\\n+\t    *) \\\n+\t      for flag in $(EXTRA_HOST_FLAGS); do \\\n+\t\teval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\t      done; \\\n+\t      ;; \\\n+\t    esac ; \\\n+\t    if (cd ./$$i; \\\n+\t        $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t\t\t\"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t                \"`echo \\\"RANLIB=$${RANLIB}\\\" | sed -e 's/.*=$$/XFOO=/'`\" \\\n+\t\t\t\"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \\\n+\t\t\t$${target}); \\\n+\t    then true; else exit 1; fi; \\\n+\t  else true; fi; \\\n+\tdone\n+\t@target=`echo $@ | sed -e 's/^do-//'`; \\\n+\tr=`${PWD}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\t$(SET_LIB_PATH) \\\n+\tfor i in $(TARGET_CONFIGDIRS) -dummy-; do \\\n+\t  if [ -f $(TARGET_SUBDIR)/$$i/Makefile ]; then \\\n+\t    for flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t\teval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\t    done; \\\n+\t    if (cd $(TARGET_SUBDIR)/$$i; \\\n+\t        $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t\t\t\"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t                \"`echo \\\"RANLIB=$${RANLIB}\\\" | sed -e 's/.*=$$/XFOO=/'`\" \\\n+\t\t\t\"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \\\n+\t\t\t$${target}); \\\n+\t    then true; else exit 1; fi; \\\n+\t  else true; fi; \\\n+\tdone\n+\n+# Here are the targets which correspond to the do-X targets.\n+\n+.PHONY: info installcheck dvi install-info\n+.PHONY: clean distclean mostlyclean maintainer-clean realclean\n+.PHONY: local-clean local-distclean local-maintainer-clean\n+info: do-info\n+installcheck: do-installcheck\n+dvi: do-dvi\n+\n+# Make sure makeinfo is built before we do a `make info'.\n+do-info: all-texinfo\n+\n+install-info: do-install-info dir.info\n+\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\tif [ -f dir.info ] ; then \\\n+\t  $(INSTALL_DATA) dir.info $(infodir)/dir.info ; \\\n+\telse true ; fi\n+\n+local-clean:\n+\t-rm -f *.a TEMP errs core *.o *~ \\#* TAGS *.E *.log\n+\n+local-distclean:\n+\t-rm -f Makefile config.status config.cache mh-frag mt-frag\n+\t-if [ \"$(TARGET_SUBDIR)\" != \".\" ]; then \\\n+\t  rm -rf $(TARGET_SUBDIR); \\\n+\telse true; fi\n+\t-rm -f texinfo/po/Makefile texinfo/po/Makefile.in texinfo/info/Makefile\n+\t-rm -f texinfo/doc/Makefile texinfo/po/POTFILES\n+\t-rmdir texinfo/doc texinfo/info texinfo/intl texinfo/lib 2>/dev/null\n+\t-rmdir texinfo/makeinfo texinfo/po texinfo/util 2>/dev/null\n+\t-rmdir fastjar gcc libiberty texinfo zlib 2>/dev/null\n+\n+local-maintainer-clean:\n+\t@echo \"This command is intended for maintainers to use;\"\n+\t@echo \"it deletes files that may require special tools to rebuild.\"\n+\n+clean: do-clean local-clean\n+mostlyclean: do-mostlyclean local-clean\n+distclean: do-distclean local-clean local-distclean\n+maintainer-clean: local-maintainer-clean do-maintainer-clean local-clean \n+maintainer-clean: local-distclean\n+realclean: maintainer-clean\n+\n+# This rule is used to clean specific modules.\n+.PHONY: $(CLEAN_MODULES) $(CLEAN_X11_MODULES) clean-gcc\n+$(CLEAN_MODULES) $(CLEAN_X11_MODULES) clean-gcc:\n+\t@dir=`echo $@ | sed -e 's/clean-//'`; \\\n+\tif [ -f ./$${dir}/Makefile ] ; then \\\n+\t  r=`${PWD}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t  $(SET_LIB_PATH) \\\n+\t  (cd $${dir}; $(MAKE) $(FLAGS_TO_PASS) clean); \\\n+\telse \\\n+\t  true; \\\n+\tfi\n+\n+.PHONY: $(CLEAN_TARGET_MODULES)\n+$(CLEAN_TARGET_MODULES):\n+\t@dir=`echo $@ | sed -e 's/clean-target-//'`; \\\n+\trm -f $(TARGET_SUBDIR)/$${dir}/multilib.out $(TARGET_SUBDIR)/$${dir}/tmpmulti.out; \\\n+\tif [ -f $(TARGET_SUBDIR)/$${dir}/Makefile ] ; then \\\n+\t  r=`${PWD}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t  $(SET_LIB_PATH) \\\n+\t  (cd $(TARGET_SUBDIR)/$${dir}; $(MAKE) $(TARGET_FLAGS_TO_PASS) clean); \\\n+\telse \\\n+\t  true; \\\n+\tfi\n+\n+clean-target: $(CLEAN_TARGET_MODULES) clean-target-libgcc\n+clean-target-libgcc:\n+\ttest ! -d gcc/libgcc || \\\n+\t(cd gcc/libgcc && find . -type d -print) | \\\n+\twhile read d; do rm -f gcc/$$d/libgcc.a || : ; done\n+\t-rm -rf gcc/libgcc\n+\n+# Check target.\n+\n+.PHONY: check do-check\n+check:\n+\t$(MAKE) do-check NOTPARALLEL=parallel-ok\n+\n+do-check: $(CHECK_MODULES) \\\n+\t$(CHECK_TARGET_MODULES) \\\n+\t$(CHECK_X11_MODULES) \\\n+\tcheck-gcc\n+\n+# Automated reporting of test results.\n+\n+warning.log: build.log\n+\t$(srcdir)/contrib/warn_summary build.log > $@\n+\n+mail-report.log:\n+\tif test x'$(BOOT_CFLAGS)' != x''; then \\\n+\t    BOOT_CFLAGS='$(BOOT_CFLAGS)'; export BOOT_CFLAGS; \\\n+\tfi; \\\n+\t$(srcdir)/contrib/test_summary -t >$@\n+\tchmod +x $@\n+\techo If you really want to send e-mail, run ./$@ now\n+\n+mail-report-with-warnings.log: warning.log\n+\tif test x'$(BOOT_CFLAGS)' != x''; then \\\n+\t    BOOT_CFLAGS='$(BOOT_CFLAGS)'; export BOOT_CFLAGS; \\\n+\tfi; \\\n+\t$(srcdir)/contrib/test_summary -t -i warning.log >$@\n+\tchmod +x $@\n+\techo If you really want to send e-mail, run ./$@ now\n+\n+# Installation targets.\n+\n+.PHONY: install install-cross uninstall source-vault binary-vault vault-install\n+install: $(INSTALL_TARGET) \n+install-cross: $(INSTALL_TARGET_CROSS) \n+\n+uninstall:\n+\t@echo \"the uninstall target is not supported in this tree\"\n+\n+source-vault:\n+\t$(MAKE) -f ./release/Build-A-Release \\\n+\t\thost=$(host_alias) source-vault\n+\n+binary-vault:\n+\t$(MAKE) -f ./release/Build-A-Release \\\n+\t\thost=$(host_alias) target=$(target_alias)\n+\n+vault-install:\n+\t@if [ -f ./release/vault-install ] ; then \\\n+\t  ./release/vault-install $(host_alias) $(target_alias) ; \\\n+\telse \\\n+\t  true ; \\\n+\tfi\n+\n+.PHONY: install.all\n+install.all: install-no-fixedincludes\n+\t@if [ -f ./gcc/Makefile ] ; then \\\n+\t\tr=`${PWD}` ; export r ; \\\n+\t\t$(SET_LIB_PATH) \\\n+\t\t(cd ./gcc; \\\n+\t\t$(MAKE) $(FLAGS_TO_PASS) install-headers) ; \\\n+\telse \\\n+\t\ttrue ; \\\n+\tfi\n+\n+# install-no-fixedincludes is used because Cygnus can not distribute\n+# the fixed header files.\n+.PHONY: install-no-fixedincludes\n+install-no-fixedincludes: \\\n+\tinstalldirs \\\n+\t$(INSTALL_MODULES) \\\n+\t$(INSTALL_TARGET_MODULES) \\\n+\t$(INSTALL_X11_MODULES) \\\n+\tgcc-no-fixedincludes \n+\n+# Install the gcc headers files, but not the fixed include files,\n+# which Cygnus is not allowed to distribute.  This rule is very\n+# dependent on the workings of the gcc Makefile.in.\n+.PHONY: gcc-no-fixedincludes\n+gcc-no-fixedincludes:\n+\t@if [ -f ./gcc/Makefile ]; then \\\n+\t  rm -rf gcc/tmp-include; \\\n+\t  mv gcc/include gcc/tmp-include 2>/dev/null; \\\n+\t  mkdir gcc/include; \\\n+\t  cp $(srcdir)/gcc/gsyslimits.h gcc/include/syslimits.h; \\\n+\t  touch gcc/stmp-fixinc gcc/include/fixed; \\\n+\t  rm -f gcc/stmp-headers gcc/stmp-int-hdrs; \\\n+\t  r=`${PWD}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD}` ; export s; \\\n+\t  $(SET_LIB_PATH) \\\n+\t  (cd ./gcc; \\\n+\t   $(MAKE) $(GCC_FLAGS_TO_PASS) install); \\\n+\t  rm -rf gcc/include; \\\n+\t  mv gcc/tmp-include gcc/include 2>/dev/null; \\\n+\telse true; fi\n+\n+# This rule is used to build the modules which are built with the\n+# build machine's native compiler.\n+.PHONY: $(ALL_BUILD_MODULES)\n+$(ALL_BUILD_MODULES):\n+\tdir=`echo $@ | sed -e 's/all-build-//'`; \\\n+\tif [ -f ./$${dir}/Makefile ] ; then \\\n+\t  r=`${PWD}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t  (cd $(BUILD_SUBDIR)/$${dir} && $(MAKE) all); \\\n+\telse \\\n+\t  true; \\\n+\tfi\n+\n+# This rule is used to configure the modules which are built with the\n+# native tools.\n+.PHONY: $(CONFIGURE_BUILD_MODULES)\n+$(CONFIGURE_BUILD_MODULES):\n+\t@dir=`echo $@ | sed -e 's/configure-build-//'`; \\\n+\tif [ ! -d $(BUILD_SUBDIR) ]; then \\\n+\t  true; \\\n+\telif [ -f $(BUILD_SUBDIR)/$${dir}/Makefile ] ; then \\\n+\t  true; \\\n+\telif echo \" $(BUILD_CONFIGDIRS) \" | grep \" $${dir} \" >/dev/null 2>&1; then \\\n+\t  if [ -d $(srcdir)/$${dir} ]; then \\\n+\t    [ -d $(BUILD_SUBDIR)/$${dir} ] || mkdir $(BUILD_SUBDIR)/$${dir};\\\n+\t    r=`${PWD}`; export r; \\\n+\t    s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t    AR=\"$(AR_FOR_BUILD)\"; export AR; \\\n+\t    AS=\"$(AS_FOR_BUILD)\"; export AS; \\\n+\t    CC=\"$(CC_FOR_BUILD)\"; export CC; \\\n+\t    CFLAGS=\"$(CFLAGS_FOR_BUILD)\"; export CFLAGS; \\\n+\t    CXX=\"$(CXX_FOR_BUILD)\"; export CXX; \\\n+\t    CXXFLAGS=\"$(CXXFLAGS_FOR_BUILD)\"; export CXXFLAGS; \\\n+\t    GCJ=\"$(GCJ_FOR_BUILD)\"; export GCJ; \\\n+\t    DLLTOOL=\"$(DLLTOOL_FOR_BUILD)\"; export DLLTOOL; \\\n+\t    LD=\"$(LD_FOR_BUILD)\"; export LD; \\\n+            LDFLAGS=\"$(LDFLAGS_FOR_BUILD)\"; export LDFLAGS; \\\n+\t    NM=\"$(NM_FOR_BUILD)\"; export NM; \\\n+\t    RANLIB=\"$(RANLIB_FOR_BUILD)\"; export RANLIB; \\\n+\t    WINDRES=\"$(WINDRES_FOR_BUILD)\"; export WINDRES; \\\n+\t    echo Configuring in $(BUILD_SUBDIR)/$${dir}; \\\n+\t    cd \"$(BUILD_SUBDIR)/$${dir}\" || exit 1; \\\n+\t    case $(srcdir) in \\\n+\t    /* | [A-Za-z]:[\\\\/]*) \\\n+\t      topdir=$(srcdir) ;; \\\n+\t    *) \\\n+\t      case \"$(BUILD_SUBDIR)\" in \\\n+\t      .) topdir=\"../$(srcdir)\" ;; \\\n+\t      *) topdir=\"../../$(srcdir)\" ;; \\\n+\t      esac ;; \\\n+\t    esac; \\\n+\t    if [ \"$(srcdir)\" = \".\" ] ; then \\\n+\t      if [ \"$(BUILD_SUBDIR)\" != \".\" ] ; then \\\n+\t\tif $(SHELL) $$s/symlink-tree $${topdir}/$${dir} \"no-such-file\" ; then \\\n+\t\t  if [ -f Makefile ]; then \\\n+\t\t    if $(MAKE) distclean; then \\\n+\t\t      true; \\\n+\t\t    else \\\n+\t\t      exit 1; \\\n+\t\t    fi; \\\n+\t\t  else \\\n+\t\t    true; \\\n+\t\t  fi; \\\n+\t\telse \\\n+\t\t  exit 1; \\\n+\t\tfi; \\\n+\t      else \\\n+\t\ttrue; \\\n+\t      fi; \\\n+\t      srcdiroption=\"--srcdir=.\"; \\\n+\t      libsrcdir=\".\"; \\\n+\t    else \\\n+\t      srcdiroption=\"--srcdir=$${topdir}/$${dir}\"; \\\n+\t      libsrcdir=\"$$s/$${dir}\"; \\\n+\t    fi; \\\n+\t    if [ -f $${libsrcdir}/configure ] ; then \\\n+\t      rm -f no-such-file skip-this-dir; \\\n+\t      CONFIG_SITE=no-such-file $(SHELL) $${libsrcdir}/configure \\\n+\t\t$(BUILD_CONFIGARGS) $${srcdiroption} \\\n+\t\t--with-build-subdir=\"$(BUILD_SUBDIR)\"; \\\n+\t    else \\\n+\t      rm -f no-such-file skip-this-dir; \\\n+\t      CONFIG_SITE=no-such-file $(SHELL) $$s/configure \\\n+\t\t$(BUILD_CONFIGARGS) $${srcdiroption} \\\n+\t\t--with-build-subdir=\"$(BUILD_SUBDIR)\"; \\\n+\t    fi || exit 1; \\\n+\t    if [ -f skip-this-dir ] ; then \\\n+\t      sh skip-this-dir; \\\n+\t      rm -f skip-this-dir; \\\n+\t      cd ..; rmdir $${dir} || true; \\\n+\t    else \\\n+\t      true; \\\n+\t    fi; \\\n+\t  else \\\n+\t    true; \\\n+\t  fi; \\\n+\telse \\\n+\t  true; \\\n+\tfi\n+\n+# This rule is used to build the modules which use FLAGS_TO_PASS.  To\n+# build a target all-X means to cd to X and make all.\n+#\n+# all-gui, and all-libproc are handled specially because\n+# they are still experimental, and if they fail to build, that\n+# shouldn't stop \"make all\".\n+.PHONY: $(ALL_MODULES) all-gui all-libproc\n+$(ALL_MODULES) all-gui all-libproc:\n+\t@dir=`echo $@ | sed -e 's/all-//'`; \\\n+\tif [ -f ./$${dir}/Makefile ] ; then \\\n+\t  r=`${PWD}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t  $(SET_LIB_PATH) \\\n+\t  (cd $${dir}; $(MAKE) $(FLAGS_TO_PASS) all); \\\n+\telse \\\n+\t  true; \\\n+\tfi\n+\n+# These rules are used to check the modules which use FLAGS_TO_PASS.\n+# To build a target check-X means to cd to X and make check.  Some\n+# modules are only tested in a native toolchain.\n+\n+.PHONY: $(CHECK_MODULES) $(NATIVE_CHECK_MODULES) $(CROSS_CHECK_MODULES)\n+$(NATIVE_CHECK_MODULES):\n+\t@if [ '$(host_canonical)' = '$(target_canonical)' ] ; then \\\n+\t  dir=`echo $@ | sed -e 's/check-//'`; \\\n+\t  if [ -f ./$${dir}/Makefile ] ; then \\\n+\t    r=`${PWD}`; export r; \\\n+\t    s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t    $(SET_LIB_PATH) \\\n+\t    (cd $${dir}; $(MAKE) $(FLAGS_TO_PASS) check); \\\n+\t  else \\\n+\t    true; \\\n+\t  fi; \\\n+\tfi\n+\n+$(CROSS_CHECK_MODULES):\n+\t@dir=`echo $@ | sed -e 's/check-//'`; \\\n+\tif [ -f ./$${dir}/Makefile ] ; then \\\n+\t  r=`${PWD}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t  $(SET_LIB_PATH) \\\n+\t  (cd $${dir}; $(MAKE) $(FLAGS_TO_PASS) check); \\\n+\telse \\\n+\t  true; \\\n+\tfi\n+\n+# This rule is used to install the modules which use FLAGS_TO_PASS.\n+# To build a target install-X means to cd to X and make install.\n+.PHONY: $(INSTALL_MODULES)\n+$(INSTALL_MODULES): installdirs\n+\t@dir=`echo $@ | sed -e 's/install-//'`; \\\n+\tif [ -f ./$${dir}/Makefile ] ; then \\\n+\t  r=`${PWD}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t  $(SET_LIB_PATH) \\\n+\t  (cd $${dir}; $(MAKE) $(FLAGS_TO_PASS) install); \\\n+\telse \\\n+\t  true; \\\n+\tfi\n+\n+# This rule is used to configure the modules which are built with the\n+# target tools.\n+.PHONY: $(CONFIGURE_TARGET_MODULES)\n+$(CONFIGURE_TARGET_MODULES):\n+\t@dir=`echo $@ | sed -e 's/configure-target-//'`; \\\n+\tif [ -d $(TARGET_SUBDIR)/$${dir} ]; then \\\n+\t  r=`${PWD}`; export r; \\\n+\t  $(CC_FOR_TARGET) --print-multi-lib > $(TARGET_SUBDIR)/$${dir}/tmpmulti.out 2> /dev/null; \\\n+\t  if [ -s $(TARGET_SUBDIR)/$${dir}/tmpmulti.out ]; then \\\n+\t    if [ -f $(TARGET_SUBDIR)/$${dir}/multilib.out ]; then \\\n+\t      if cmp $(TARGET_SUBDIR)/$${dir}/multilib.out $(TARGET_SUBDIR)/$${dir}/tmpmulti.out > /dev/null; then \\\n+\t\trm -f $(TARGET_SUBDIR)/$${dir}/tmpmulti.out; \\\n+\t      else \\\n+\t\techo \"Multilibs changed for $${dir}, reconfiguring\"; \\\n+\t\trm -f $(TARGET_SUBDIR)/$${dir}/multilib.out $(TARGET_SUBDIR)/$${dir}/Makefile; \\\n+\t\tmv $(TARGET_SUBDIR)/$${dir}/tmpmulti.out $(TARGET_SUBDIR)/$${dir}/multilib.out; \\\n+\t      fi; \\\n+\t    else \\\n+\t      mv $(TARGET_SUBDIR)/$${dir}/tmpmulti.out $(TARGET_SUBDIR)/$${dir}/multilib.out; \\\n+\t    fi; \\\n+\t  fi; \\\n+\tfi; exit 0\t# break command into two pieces\n+\t@dir=`echo $@ | sed -e 's/configure-target-//'`; \\\n+\tif [ ! -d $(TARGET_SUBDIR) ]; then \\\n+\t  true; \\\n+\telif [ -f $(TARGET_SUBDIR)/$${dir}/Makefile ] ; then \\\n+\t  true; \\\n+\telif echo \" $(TARGET_CONFIGDIRS) \" | grep \" $${dir} \" >/dev/null 2>&1; then \\\n+\t  if [ -d $(srcdir)/$${dir} ]; then \\\n+\t    [ -d $(TARGET_SUBDIR)/$${dir} ] || mkdir $(TARGET_SUBDIR)/$${dir};\\\n+\t    r=`${PWD}`; export r; \\\n+\t    s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t    $(SET_LIB_PATH) \\\n+\t    AR=\"$(AR_FOR_TARGET)\"; export AR; \\\n+\t    AS=\"$(AS_FOR_TARGET)\"; export AS; \\\n+\t    CC=\"$(CC_FOR_TARGET)\"; export CC; \\\n+\t    CFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CFLAGS; \\\n+\t    CXX=\"$(CXX_FOR_TARGET)\"; export CXX; \\\n+\t    CXXFLAGS=\"$(CXXFLAGS_FOR_TARGET)\"; export CXXFLAGS; \\\n+\t    GCJ=\"$(GCJ_FOR_TARGET)\"; export GCJ; \\\n+\t    DLLTOOL=\"$(DLLTOOL_FOR_TARGET)\"; export DLLTOOL; \\\n+\t    LD=\"$(LD_FOR_TARGET)\"; export LD; \\\n+            LDFLAGS=\"$(LDFLAGS_FOR_TARGET)\"; export LDFLAGS; \\\n+\t    NM=\"$(NM_FOR_TARGET)\"; export NM; \\\n+\t    RANLIB=\"$(RANLIB_FOR_TARGET)\"; export RANLIB; \\\n+\t    WINDRES=\"$(WINDRES_FOR_TARGET)\"; export WINDRES; \\\n+\t    echo Configuring in $(TARGET_SUBDIR)/$${dir}; \\\n+\t    cd \"$(TARGET_SUBDIR)/$${dir}\" || exit 1; \\\n+\t    case $(srcdir) in \\\n+\t    /* | [A-Za-z]:[\\\\/]*) \\\n+\t      topdir=$(srcdir) ;; \\\n+\t    *) \\\n+\t      case \"$(TARGET_SUBDIR)\" in \\\n+\t      .) topdir=\"../$(srcdir)\" ;; \\\n+\t      *) topdir=\"../../$(srcdir)\" ;; \\\n+\t      esac ;; \\\n+\t    esac; \\\n+\t    if [ \"$(srcdir)\" = \".\" ] ; then \\\n+\t      if [ \"$(TARGET_SUBDIR)\" != \".\" ] ; then \\\n+\t\tif $(SHELL) $$s/symlink-tree $${topdir}/$${dir} \"no-such-file\" ; then \\\n+\t\t  if [ -f Makefile ]; then \\\n+\t\t    if $(MAKE) distclean; then \\\n+\t\t      true; \\\n+\t\t    else \\\n+\t\t      exit 1; \\\n+\t\t    fi; \\\n+\t\t  else \\\n+\t\t    true; \\\n+\t\t  fi; \\\n+\t\telse \\\n+\t\t  exit 1; \\\n+\t\tfi; \\\n+\t      else \\\n+\t\ttrue; \\\n+\t      fi; \\\n+\t      srcdiroption=\"--srcdir=.\"; \\\n+\t      libsrcdir=\".\"; \\\n+\t    else \\\n+\t      srcdiroption=\"--srcdir=$${topdir}/$${dir}\"; \\\n+\t      libsrcdir=\"$$s/$${dir}\"; \\\n+\t    fi; \\\n+\t    if [ -f $${libsrcdir}/configure ] ; then \\\n+\t      rm -f no-such-file skip-this-dir; \\\n+\t      CONFIG_SITE=no-such-file $(SHELL) $${libsrcdir}/configure \\\n+\t\t$(TARGET_CONFIGARGS) $${srcdiroption} \\\n+\t\t--with-target-subdir=\"$(TARGET_SUBDIR)\"; \\\n+\t    else \\\n+\t      rm -f no-such-file skip-this-dir; \\\n+\t      CONFIG_SITE=no-such-file $(SHELL) $$s/configure \\\n+\t\t$(TARGET_CONFIGARGS) $${srcdiroption} \\\n+\t\t--with-target-subdir=\"$(TARGET_SUBDIR)\"; \\\n+\t    fi || exit 1; \\\n+\t    if [ -f skip-this-dir ] ; then \\\n+\t      sh skip-this-dir; \\\n+\t      rm -f skip-this-dir; \\\n+\t      cd ..; rmdir $${dir} || true; \\\n+\t    else \\\n+\t      true; \\\n+\t    fi; \\\n+\t  else \\\n+\t    true; \\\n+\t  fi; \\\n+\telse \\\n+\t  true; \\\n+\tfi\n+\n+# This rule is used to build the modules which use TARGET_FLAGS_TO_PASS.\n+# To build a target all-X means to cd to X and make all.\n+.PHONY: $(ALL_TARGET_MODULES)\n+$(ALL_TARGET_MODULES):\n+\t@dir=`echo $@ | sed -e 's/all-target-//'`; \\\n+\tif [ -f $(TARGET_SUBDIR)/$${dir}/Makefile ] ; then \\\n+\t  r=`${PWD}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t  $(SET_LIB_PATH) \\\n+\t  (cd $(TARGET_SUBDIR)/$${dir}; \\\n+\t    $(MAKE) $(TARGET_FLAGS_TO_PASS) all); \\\n+\telse \\\n+\t  true; \\\n+\tfi\n+\n+# This rule is used to check the modules which use TARGET_FLAGS_TO_PASS.\n+# To build a target install-X means to cd to X and make install.\n+.PHONY: $(CHECK_TARGET_MODULES)\n+$(CHECK_TARGET_MODULES):\n+\t@dir=`echo $@ | sed -e 's/check-target-//'`; \\\n+\tif [ -f $(TARGET_SUBDIR)/$${dir}/Makefile ] ; then \\\n+\t  r=`${PWD}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t  $(SET_LIB_PATH) \\\n+\t  (cd $(TARGET_SUBDIR)/$${dir}; \\\n+\t    $(MAKE) $(TARGET_FLAGS_TO_PASS) check);\\\n+\telse \\\n+\t  true; \\\n+\tfi\n+\n+# This rule is used to install the modules which use\n+# TARGET_FLAGS_TO_PASS.  To build a target install-X means to cd to X\n+# and make install.\n+.PHONY: $(INSTALL_TARGET_MODULES)\n+$(INSTALL_TARGET_MODULES): installdirs\n+\t@dir=`echo $@ | sed -e 's/install-target-//'`; \\\n+\tif [ -f $(TARGET_SUBDIR)/$${dir}/Makefile ] ; then \\\n+\t  r=`${PWD}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t  $(SET_LIB_PATH) \\\n+\t  (cd $(TARGET_SUBDIR)/$${dir}; \\\n+\t    $(MAKE) $(TARGET_FLAGS_TO_PASS) install); \\\n+\telse \\\n+\t  true; \\\n+\tfi\n+\n+# This rule is used to build the modules which use X11_FLAGS_TO_PASS.\n+# To build a target all-X means to cd to X and make all.\n+.PHONY: $(ALL_X11_MODULES)\n+$(ALL_X11_MODULES):\n+\t@dir=`echo $@ | sed -e 's/all-//'`; \\\n+\tif [ -f ./$${dir}/Makefile ] ; then \\\n+\t  r=`${PWD}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t  $(SET_LIB_PATH) \\\n+\t  (cd $${dir}; \\\n+\t   $(MAKE) $(FLAGS_TO_PASS) $(X11_FLAGS_TO_PASS) all); \\\n+\telse \\\n+\t  true; \\\n+\tfi\n+\n+# This rule is used to check the modules which use X11_FLAGS_TO_PASS.\n+# To build a target check-X means to cd to X and make all.\n+.PHONY: $(CHECK_X11_MODULES)\n+$(CHECK_X11_MODULES):\n+\t@dir=`echo $@ | sed -e 's/check-//'`; \\\n+\tif [ -f ./$${dir}/Makefile ] ; then \\\n+\t  r=`${PWD}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t  $(SET_LIB_PATH) \\\n+\t  (cd $${dir}; \\\n+\t   $(MAKE) $(FLAGS_TO_PASS) $(X11_FLAGS_TO_PASS) check); \\\n+\telse \\\n+\t  true; \\\n+\tfi\n+\n+# This rule is used to install the modules which use X11_FLAGS_TO_PASS.\n+# To build a target install-X means to cd to X and make install.\n+.PHONY: $(INSTALL_X11_MODULES)\n+$(INSTALL_X11_MODULES): installdirs\n+\t@dir=`echo $@ | sed -e 's/install-//'`; \\\n+\tif [ -f ./$${dir}/Makefile ] ; then \\\n+\t  r=`${PWD}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t  $(SET_LIB_PATH) \\\n+\t  (cd $${dir}; \\\n+\t   $(MAKE) $(FLAGS_TO_PASS) $(X11_FLAGS_TO_PASS) install); \\\n+\telse \\\n+\t  true; \\\n+\tfi\n+\n+# gcc is the only module which uses GCC_FLAGS_TO_PASS.\n+.PHONY: all-gcc\n+all-gcc:\n+\t@if [ -f ./gcc/Makefile ] ; then \\\n+\t  r=`${PWD}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t  $(SET_LIB_PATH) \\\n+\t  (cd gcc; $(MAKE) $(GCC_FLAGS_TO_PASS) all); \\\n+\telse \\\n+\t  true; \\\n+\tfi\n+\n+# Building GCC uses some tools for rebuilding \"source\" files\n+# like texinfo, bison/byacc, etc.  So we must depend on those.\n+#\n+# While building GCC, it may be necessary to run various target\n+# programs like the assembler, linker, etc.  So we depend on\n+# those too.\n+#\n+# In theory, on an SMP all those dependencies can be resolved\n+# in parallel.\n+#\n+.PHONY: bootstrap bootstrap-lean bootstrap2 bootstrap2-lean bootstrap3 bootstrap3-lean bootstrap4 bootstrap4-lean\n+bootstrap bootstrap-lean bootstrap2 bootstrap2-lean bootstrap3 bootstrap3-lean bootstrap4 bootstrap4-lean: all-bootstrap\n+\t@r=`${PWD}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\t$(SET_LIB_PATH) \\\n+\techo \"Bootstrapping the compiler\"; \\\n+\tcd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) $@\n+\t@r=`${PWD}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\tcase \"$@\" in \\\n+\t  *bootstrap4-lean ) \\\n+\t\t\tmsg=\"Comparing stage3 and stage4 of the compiler\"; \\\n+\t  \t\tcompare=compare3-lean ;; \\\n+\t  *bootstrap4 ) msg=\"Comparing stage3 and stage4 of the compiler\"; \\\n+\t  \t\tcompare=compare3 ;; \\\n+\t  *-lean )\tmsg=\"Comparing stage2 and stage3 of the compiler\"; \\\n+\t  \t\tcompare=compare-lean ;; \\\n+\t  * )\t\tmsg=\"Comparing stage2 and stage3 of the compiler\"; \\\n+\t  \t\tcompare=compare ;; \\\n+\tesac; \\\n+\t$(SET_LIB_PATH) \\\n+\techo \"$$msg\"; \\\n+\tcd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) $$compare\n+\t@r=`${PWD}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD}` ; export s; \\\n+\t$(SET_LIB_PATH) \\\n+\techo \"Building runtime libraries\"; \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) $(RECURSE_FLAGS) all\n+\n+.PHONY: cross\n+cross: all-texinfo all-bison all-byacc all-binutils all-gas all-ld\n+\t@r=`${PWD}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\t$(SET_LIB_PATH) \\\n+\techo \"Building the C and C++ compiler\"; \\\n+\tcd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) LANGUAGES=\"c c++\"\n+\t@r=`${PWD}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD}` ; export s; \\\n+\t$(SET_LIB_PATH) \\\n+\techo \"Building runtime libraries\"; \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) $(RECURSE_FLAGS) \\\n+\t  LANGUAGES=\"c c++\" all\n+\n+.PHONY: check-gcc\n+check-gcc:\n+\t@if [ -f ./gcc/Makefile ] ; then \\\n+\t  r=`${PWD}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t  $(SET_LIB_PATH) \\\n+\t  (cd gcc; $(MAKE) $(GCC_FLAGS_TO_PASS) check); \\\n+\telse \\\n+\t  true; \\\n+\tfi\n+\n+.PHONY: check-c++\n+check-c++:\n+\t@if [ -f ./gcc/Makefile ] ; then \\\n+\t  r=`${PWD}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t  $(SET_LIB_PATH) \\\n+\t  (cd gcc; $(MAKE) $(GCC_FLAGS_TO_PASS) check-c++); \\\n+\t  $(MAKE) check-target-libstdc++-v3; \\\n+\telse \\\n+\t  true; \\\n+\tfi \n+\n+.PHONY: install-gcc\n+install-gcc:\n+\t@if [ -f ./gcc/Makefile ] ; then \\\n+\t  r=`${PWD}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t  $(SET_LIB_PATH) \\\n+\t  (cd gcc; $(MAKE) $(GCC_FLAGS_TO_PASS) install); \\\n+\telse \\\n+\t  true; \\\n+\tfi\n+\n+.PHONY: install-gcc-cross\n+install-gcc-cross:\n+\t@if [ -f ./gcc/Makefile ] ; then \\\n+\t  r=`${PWD}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t  $(SET_LIB_PATH) \\\n+\t  (cd gcc; $(MAKE) $(GCC_FLAGS_TO_PASS) LANGUAGES=\"c c++\" install); \\\n+\telse \\\n+\t  true; \\\n+\tfi\n+# EXPERIMENTAL STUFF\n+# This rule is used to install the modules which use FLAGS_TO_PASS.\n+# To build a target install-X means to cd to X and make install.\n+.PHONY: install-dosrel\n+install-dosrel: installdirs info\n+\t@dir=`echo $@ | sed -e 's/install-//'`; \\\n+\tif [ -f ./$${dir}/Makefile ] ; then \\\n+\t  r=`${PWD}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t  $(SET_LIB_PATH) \\\n+\t  (cd $${dir}; $(MAKE) $(FLAGS_TO_PASS) install); \\\n+\telse \\\n+\t  true; \\\n+\tfi\n+\n+install-dosrel-fake:\n+\n+ALL_GCC = all-gcc\n+ALL_GCC_C = $(ALL_GCC) all-target-newlib all-target-libgloss\n+ALL_GCC_CXX = $(ALL_GCC_C) all-target-libstdc++-v3\n+\n+# This is a list of inter-dependencies among modules.\n+all-ash:\n+all-autoconf: all-m4 all-texinfo\n+all-automake: all-m4 all-texinfo\n+all-bash:\n+all-bfd: all-libiberty all-intl\n+all-binutils: all-libiberty all-opcodes all-bfd all-flex all-bison all-byacc all-intl\n+all-bison: all-texinfo\n+configure-target-boehm-gc: $(ALL_GCC_C) configure-target-qthreads\n+all-target-boehm-gc: configure-target-boehm-gc\n+all-byacc:\n+all-bzip2:\n+all-db:\n+all-dejagnu: all-tcl all-expect all-tk\n+all-diff: all-libiberty\n+all-etc:\n+configure-target-examples: $(ALL_GCC_C)\n+all-target-examples: configure-target-examples\n+all-expect: all-tcl all-tk\n+all-fileutils: all-libiberty\n+all-findutils:\n+all-find:\n+all-flex: all-libiberty all-bison all-byacc\n+all-gas: all-libiberty all-opcodes all-bfd all-intl\n+all-gawk:\n+all-gcc: all-bison all-byacc all-binutils all-gas all-ld all-zlib\n+all-bootstrap: all-libiberty all-texinfo all-bison all-byacc all-binutils all-gas all-ld all-zlib\n+GDB_TK = all-tk all-tcl all-itcl all-tix all-libgui\n+all-gdb: all-libiberty all-opcodes all-bfd all-mmalloc all-readline all-bison all-byacc all-sim $(gdbnlmrequirements) $(GDB_TK)\n+all-gettext:\n+all-gnuserv:\n+configure-target-gperf: $(ALL_GCC_CXX)\n+all-target-gperf: configure-target-gperf all-target-libiberty all-target-libstdc++-v3\n+all-gprof: all-libiberty all-bfd all-opcodes all-intl\n+all-grep: all-libiberty\n+all-gui: all-gdb all-libproc\n+all-guile:\n+all-gzip: all-libiberty\n+all-hello: all-libiberty\n+all-indent:\n+all-intl:\n+all-itcl: all-tcl all-tk\n+all-ld: all-libiberty all-bfd all-opcodes all-bison all-byacc all-flex all-intl\n+configure-target-libgloss: $(ALL_GCC)\n+all-target-libgloss: configure-target-libgloss configure-target-newlib\n+all-libgui: all-tcl all-tk all-itcl\n+all-libiberty:\n+\n+all-build-libiberty: configure-build-libiberty\n+\n+configure-target-libffi: $(ALL_GCC_C) \n+all-target-libffi: configure-target-libffi\n+configure-target-libjava: $(ALL_GCC_C) configure-target-zlib configure-target-boehm-gc configure-target-qthreads configure-target-libffi\n+all-target-libjava: configure-target-libjava all-fastjar all-target-zlib all-target-boehm-gc all-target-qthreads all-target-libffi\n+configure-target-libstdc++-v3: $(ALL_GCC_C)\n+all-target-libstdc++-v3: configure-target-libstdc++-v3 all-target-libiberty\n+all-libtool:\n+configure-target-libf2c: $(ALL_GCC_C)\n+all-target-libf2c: configure-target-libf2c all-target-libiberty\n+configure-target-libobjc: $(ALL_GCC_C)\n+all-target-libobjc: configure-target-libobjc all-target-libiberty\n+all-m4: all-libiberty all-texinfo\n+all-make: all-libiberty\n+all-mmalloc:\n+configure-target-newlib: $(ALL_GCC)\n+all-target-newlib: configure-target-newlib\n+configure-target-libtermcap: $(ALL_GCC_C)\n+all-target-libtermcap: configure-target-libtermcap\n+all-opcodes: all-bfd all-libiberty\n+all-patch: all-libiberty\n+all-perl:\n+all-prms: all-libiberty\n+configure-target-qthreads: $(ALL_GCC_C)\n+all-target-qthreads: configure-target-qthreads\n+all-rcs:\n+all-readline:\n+all-recode: all-libiberty\n+all-sed: all-libiberty\n+all-send-pr: all-prms\n+all-shellutils:\n+all-sid: all-tcl all-tk\n+all-sim: all-libiberty all-bfd all-opcodes all-readline\n+all-snavigator: all-tcl all-tk all-itcl all-tix all-db all-grep all-libgui\n+all-tar: all-libiberty\n+all-tcl:\n+all-tclX: all-tcl all-tk\n+all-tk: all-tcl\n+all-texinfo: all-libiberty\n+all-textutils:\n+all-time:\n+all-tix: all-tcl all-tk\n+all-wdiff:\n+configure-target-winsup: $(ALL_GCC_C)\n+all-target-winsup: all-target-libiberty all-target-libtermcap configure-target-winsup\n+all-uudecode: all-libiberty\n+all-zip:\n+all-zlib:\n+configure-target-zlib: $(ALL_GCC_C)\n+all-target-zlib: configure-target-zlib\n+all-fastjar: all-zlib all-libiberty\n+configure-target-fastjar: configure-target-zlib\n+all-target-fastjar: configure-target-fastjar all-target-zlib all-target-libiberty\n+configure-target-libiberty: $(ALL_GCC_C)\n+all-target-libiberty: configure-target-libiberty\n+all-target: $(ALL_TARGET_MODULES)\n+install-target: $(INSTALL_TARGET_MODULES)\n+install-gdb: install-tcl install-tk install-itcl install-tix install-libgui\n+install-sid: install-tcl install-tk\n+### other supporting targets\n+\n+MAKEDIRS= \\\n+\t$(DESTDIR)$(prefix) \\\n+\t$(DESTDIR)$(exec_prefix)\n+.PHONY: installdirs\n+installdirs: mkinstalldirs\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(MAKEDIRS)\n+\n+dir.info: do-install-info\n+\tif [ -f $(srcdir)/texinfo/gen-info-dir ] ; then \\\n+\t  $(srcdir)/texinfo/gen-info-dir $(infodir) $(srcdir)/texinfo/dir.info-template > dir.info.new ; \\\n+\t  mv -f dir.info.new dir.info ; \\\n+\telse true ; \\\n+\tfi\n+\n+dist:\n+\t@echo \"Building a full distribution of this tree isn't done\"\n+\t@echo \"via 'make dist'.  Check out the etc/ subdirectory\" \n+\n+etags tags: TAGS\n+\n+# Right now this just builds TAGS in each subdirectory.  emacs19 has the\n+# ability to use several tags files at once, so there is probably no need\n+# to combine them into one big TAGS file (like CVS 1.3 does).  We could\n+# (if we felt like it) have this Makefile write a piece of elisp which\n+# the user could load to tell emacs19 where all the TAGS files we just\n+# built are.\n+TAGS: do-TAGS\n+\n+# Rebuilding Makefile.in, using autogen.\n+$(srcdir)/Makefile.in: $(srcdir)/Makefile.tpl $(srcdir)/Makefile.def\n+\tcd $(srcdir) && autogen Makefile.def\n+\n+# with the gnu make, this is done automatically.\n+\n+Makefile: Makefile.in configure.in $(host_makefile_frag) $(target_makefile_frag) $(gcc_version_trigger)\n+\t$(SHELL) ./config.status\n+\n+#\n+# Support for building net releases\n+\n+# Files in devo used in any net release.\n+# ChangeLog omitted because it may refer to files which are not in this\n+# distribution (perhaps it would be better to include it anyway).\n+DEVO_SUPPORT= README Makefile.in configure configure.in \\\n+\tconfig.guess config.if config.sub config move-if-change \\\n+\tmpw-README mpw-build.in mpw-config.in mpw-configure mpw-install \\\n+\tCOPYING COPYING.LIB install-sh config-ml.in symlink-tree \\\n+\tmkinstalldirs ltconfig ltmain.sh missing ylwrap \\\n+\tlibtool.m4 gettext.m4 ltcf-c.sh ltcf-cxx.sh ltcf-gcj.sh\n+\n+# Files in devo/etc used in any net release.\n+# ChangeLog omitted because it may refer to files which are not in this\n+# distribution (perhaps it would be better to include it anyway).\n+ETC_SUPPORT= Makefile.in configure configure.in standards.texi \\\n+\tmake-stds.texi standards.info* configure.texi configure.info* \\\n+\tconfigbuild.* configdev.*\n+\n+\n+# When you use `make setup-dirs' or `make taz' you should always redefine\n+# this macro.\n+SUPPORT_FILES = list-of-support-files-for-tool-in-question\n+\n+# NOTE: No double quotes in the below.  It is used within shell script\n+# as VER=\"$(VER)\"\n+VER = `\tif grep 'AM_INIT_AUTOMAKE.*BFD_VERSION' $(TOOL)/configure.in >/dev/null 2>&1; then \\\n+\t  sed < bfd/configure.in -n 's/AM_INIT_AUTOMAKE[^,]*, *\\([^)]*\\))/\\1/p'; \\\n+\telif grep AM_INIT_AUTOMAKE $(TOOL)/configure.in >/dev/null 2>&1; then \\\n+\t  sed < $(TOOL)/configure.in -n 's/AM_INIT_AUTOMAKE[^,]*, *\\([^)]*\\))/\\1/p'; \\\n+\telif test -f $(TOOL)/version.in; then \\\n+\t  head -1 $(TOOL)/version.in; \\\n+\telif grep VERSION $(TOOL)/Makefile.in > /dev/null 2>&1; then \\\n+\t  sed < $(TOOL)/Makefile.in -n 's/^VERSION *= *//p'; \\\n+\telse \\\n+\t  echo VERSION; \\\n+\tfi`\n+PACKAGE = $(TOOL)\n+\n+.PHONY: taz\n+taz: $(DEVO_SUPPORT) $(SUPPORT_FILES) texinfo/texinfo.tex\n+\t$(MAKE) -f Makefile.in do-proto-toplev \\\n+\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n+\t\tMD5PROG=\"$(MD5PROG)\" \\\n+\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n+\t$(MAKE) -f Makefile.in do-md5sum \\\n+\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n+\t\tMD5PROG=\"$(MD5PROG)\" \\\n+\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n+\t$(MAKE) -f Makefile.in do-tar \\\n+\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n+\t\tMD5PROG=\"$(MD5PROG)\" \\\n+\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n+\t$(MAKE) -f Makefile.in do-bz2 \\\n+\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n+\t\tMD5PROG=\"$(MD5PROG)\" \\\n+\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n+\n+.PHONY: gdb-tar\n+gdb-tar: $(DEVO_SUPPORT) $(SUPPORT_FILES) texinfo/texinfo.tex\n+\t$(MAKE) -f Makefile.in do-proto-toplev \\\n+\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n+\t\tMD5PROG=\"$(MD5PROG)\" \\\n+\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n+\t$(MAKE) -f Makefile.in do-md5sum \\\n+\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n+\t\tMD5PROG=\"$(MD5PROG)\" \\\n+\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n+\t$(MAKE) -f Makefile.in do-djunpack \\\n+\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n+\t\tMD5PROG=\"$(MD5PROG)\" \\\n+\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n+\t$(MAKE) -f Makefile.in do-tar \\\n+\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n+\t\tMD5PROG=\"$(MD5PROG)\" \\\n+\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n+\n+.PHONY: gdb-taz\n+gdb-taz: gdb-tar $(DEVO_SUPPORT) $(SUPPORT_FILES) texinfo/texinfo.tex\n+\t$(MAKE) -f Makefile.in gdb-tar \\\n+\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n+\t\tMD5PROG=\"$(MD5PROG)\" \\\n+\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n+\t$(MAKE) -f Makefile.in do-bz2 \\\n+\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n+\t\tMD5PROG=\"$(MD5PROG)\" \\\n+\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n+\n+.PHONY: do-proto-toplev\n+do-proto-toplev: $(DEVO_SUPPORT) $(SUPPORT_FILES) texinfo/texinfo.tex\n+\techo \"==> Making $(PACKAGE)-$(VER)/\"\n+\t# Take out texinfo from a few places.\n+\tsed -e '/^all\\.normal: /s/\\all-texinfo //' \\\n+\t    -e '/^\tinstall-texinfo /d' \\\n+\t<Makefile.in >tmp\n+\tmv -f tmp Makefile.in\n+\t#\n+\t./configure sun4\n+\t[ -z \"$(CONFIGURE_TARGET_MODULES)\" ] \\\n+\t  || $(MAKE) $(CONFIGURE_TARGET_MODULES) \\\n+\t    ALL_GCC=\"\" ALL_GCC_C=\"\" ALL_GCC_CXX=\"\" \\\n+\t    CC_FOR_TARGET=\"$(CC)\" CXX_FOR_TARGET=\"$(CXX)\"\n+\t# Make links, and run \"make diststuff\" or \"make info\" when needed.\n+\trm -rf proto-toplev ; mkdir proto-toplev\n+\tset -e ; dirs=\"$(TOOL) $(DEVO_SUPPORT) $(SUPPORT_FILES)\" ; \\\n+\tfor d in $$dirs ; do \\\n+\t  if [ -d $$d ]; then \\\n+\t    if [ ! -f $$d/Makefile ] ; then true ; \\\n+\t    elif grep '^diststuff:' $$d/Makefile >/dev/null ; then \\\n+\t\t(cd $$d ; $(MAKE) diststuff ) || exit 1 ; \\\n+\t    elif grep '^info:' $$d/Makefile >/dev/null ; then \\\n+\t        (cd $$d ; $(MAKE) info ) || exit 1 ; \\\n+\t    fi ; \\\n+\t    if [ -d $$d/proto-$$d.dir ]; then \\\n+\t      ln -s ../$$d/proto-$$d.dir proto-toplev/$$d ; \\\n+\t    else \\\n+\t      ln -s ../$$d proto-toplev/$$d ; \\\n+\t    fi ; \\\n+\t  else ln -s ../$$d proto-toplev/$$d ; fi ; \\\n+\tdone\n+\tcd etc && $(MAKE) info\n+\t$(MAKE) distclean\n+\t#\n+\tmkdir proto-toplev/etc\n+\t(cd proto-toplev/etc; \\\n+\t for i in $(ETC_SUPPORT); do \\\n+\t\tln -s ../../etc/$$i . ; \\\n+\t done)\n+\t#\n+\t# Take out texinfo from configurable dirs\n+\trm proto-toplev/configure.in\n+\tsed -e '/^host_tools=/s/texinfo //' \\\n+\t    <configure.in >proto-toplev/configure.in\n+\t#\n+\tmkdir proto-toplev/texinfo\n+\tln -s ../../texinfo/texinfo.tex\t\tproto-toplev/texinfo/\n+\tif test -r texinfo/util/tex3patch ; then \\\n+\t  mkdir proto-toplev/texinfo/util && \\\n+\t  ln -s ../../../texinfo/util/tex3patch\tproto-toplev/texinfo/util ; \\\n+\telse true; fi\n+\tchmod -R og=u . || chmod og=u `find . -print`\n+\t#\n+\t# Create .gmo files from .po files.\n+\tfor f in `find . -name '*.po' -type f -print`; do \\\n+\t     msgfmt -o `echo $$f | sed -e 's/\\.po$$/.gmo/'` $$f ; \\\n+\tdone\n+\t#\n+\t-rm -f $(PACKAGE)-$(VER)\n+\tln -s proto-toplev $(PACKAGE)-$(VER)\n+\n+.PHONY: do-tar\n+do-tar:\n+\techo \"==> Making $(PACKAGE)-$(VER).tar\"\n+\t-rm -f $(PACKAGE)-$(VER).tar\n+\tfind $(PACKAGE)-$(VER) -follow -name CVS -prune -o -type f -print \\\n+\t\t| tar cTfh - $(PACKAGE)-$(VER).tar\n+\n+.PHONY: do-bz2\n+do-bz2:\n+\techo \"==> Bzipping $(PACKAGE)-$(VER).tar.bz2\"\n+\t-rm -f $(PACKAGE)-$(VER).tar.bz2\n+\t$(BZIPPROG) -v -9 $(PACKAGE)-$(VER).tar\n+\n+.PHONY: do-md5sum\n+do-md5sum:\n+\techo \"==> Adding md5 checksum to top-level directory\"\n+\tcd proto-toplev && find * -follow -name CVS -prune -o -type f -print \\\n+\t\t| xargs $(MD5PROG) > ../md5.sum\n+\tmv md5.sum proto-toplev\n+\n+.PHONY: do-djunpack\n+do-djunpack:\n+\techo \"==> Adding updated djunpack.bat to top-level directory\"\n+\techo - 's /gdb-[0-9\\.]*/gdb-'\"$(VER)\"'/'\n+\tsed < djunpack.bat > djunpack.new \\\n+\t\t-e 's/gdb-[0-9][0-9\\.]*/gdb-'\"$(VER)\"'/'\n+\tmv djunpack.new djunpack.bat\n+\t-rm -f proto-toplev/djunpack.bat\n+\tln -s ../djunpack.bat proto-toplev/djunpack.bat\n+\n+TEXINFO_SUPPORT= texinfo/texinfo.tex\n+DIST_SUPPORT= $(DEVO_SUPPORT) $(TEXINFO_SUPPORT)\n+\n+.PHONY: gas.tar.bz2\n+GAS_SUPPORT_DIRS= bfd include libiberty opcodes intl setup.com makefile.vms mkdep\n+gas.tar.bz2: $(DIST_SUPPORT) $(GAS_SUPPORT_DIRS) gas\n+\t$(MAKE) -f Makefile.in taz TOOL=gas \\\n+\t\tMD5PROG=\"$(MD5PROG)\" \\\n+\t\tSUPPORT_FILES=\"$(GAS_SUPPORT_DIRS)\"\n+\n+# The FSF \"binutils\" release includes gprof and ld.\n+.PHONY: binutils.tar.bz2\n+BINUTILS_SUPPORT_DIRS= bfd gas include libiberty opcodes ld gprof intl setup.com makefile.vms mkdep\n+binutils.tar.bz2: $(DIST_SUPPORT) $(BINUTILS_SUPPORT_DIRS) binutils\n+\t$(MAKE) -f Makefile.in taz TOOL=binutils \\\n+\t\tMD5PROG=\"$(MD5PROG)\" \\\n+\t\tSUPPORT_FILES=\"$(BINUTILS_SUPPORT_DIRS)\"\n+\n+.PHONY: gas+binutils.tar.bz2\n+GASB_SUPPORT_DIRS= $(GAS_SUPPORT_DIRS) binutils ld gprof\n+gas+binutils.tar.bz2: $(DIST_SUPPORT) $(GASB_SUPPORT_DIRS) gas\n+\t$(MAKE) -f Makefile.in taz TOOL=gas \\\n+\t\tMD5PROG=\"$(MD5PROG)\" \\\n+\t\tSUPPORT_FILES=\"$(GASB_SUPPORT_DIRS)\"\n+\n+GNATS_SUPPORT_DIRS=include libiberty send-pr\n+gnats.tar.bz2: $(DIST_SUPPORT) $(GNATS_SUPPORT_DIRS) gnats\n+\t$(MAKE) -f  Makefile.in taz TOOL=gnats \\\n+\t\tMD5PROG=\"$(MD5PROG)\" \\\n+\t\tSUPPORT_FILES=\"$(GNATS_SUPPORT_DIRS)\"\n+\n+.PHONY: gdb.tar.bz2\n+GDB_SUPPORT_DIRS= bfd include libiberty mmalloc opcodes readline sim utils intl\n+gdb.tar.bz2: $(DIST_SUPPORT) $(GDB_SUPPORT_DIRS) gdb\n+\t$(MAKE) -f Makefile.in gdb-taz TOOL=gdb \\\n+\t\tMD5PROG=\"$(MD5PROG)\" \\\n+\t\tSUPPORT_FILES=\"$(GDB_SUPPORT_DIRS)\"\n+.PHONY: gdb.tar\n+gdb.tar: $(DIST_SUPPORT) $(GDB_SUPPORT_DIRS) gdb\n+\t$(MAKE) -f Makefile.in gdb-tar TOOL=gdb \\\n+\t\tMD5PROG=\"$(MD5PROG)\" \\\n+\t\tSUPPORT_FILES=\"$(GDB_SUPPORT_DIRS)\"\n+\n+DEJAGNU_SUPPORT_DIRS=  tcl expect libiberty\n+.PHONY: dejagnu.tar.bz2\n+dejagnu.tar.bz2: $(DIST_SUPPORT) $(DEJAGNU_SUPPORT_DIRS) dejagnu\n+\t$(MAKE) -f Makefile.in taz TOOL=dejagnu \\\n+\t\tMD5PROG=\"$(MD5PROG)\" \\\n+\t\tSUPPORT_FILES=\"$(DEJAGNU_SUPPORT_DIRS)\"\n+\n+.PHONY: gdb+dejagnu.tar.bz2\n+GDBD_SUPPORT_DIRS= $(GDB_SUPPORT_DIRS) tcl expect dejagnu\n+gdb+dejagnu.tar.bz2: $(DIST_SUPPORT) $(GDBD_SUPPORT_DIRS) gdb\n+\t$(MAKE) -f Makefile.in gdb-taz TOOL=gdb PACKAGE=gdb+dejagnu \\\n+\t\tMD5PROG=\"$(MD5PROG)\" \\\n+\t\tSUPPORT_FILES=\"$(GDBD_SUPPORT_DIRS)\"\n+.PHONY: gdb+dejagnu.tar\n+gdb+dejagnu.tar: $(DIST_SUPPORT) $(GDBD_SUPPORT_DIRS) gdb\n+\t$(MAKE) -f Makefile.in gdb-tar TOOL=gdb PACKAGE=gdb+dejagnu \\\n+\t\tMD5PROG=\"$(MD5PROG)\" \\\n+\t\tSUPPORT_FILES=\"$(GDBD_SUPPORT_DIRS)\"\n+\n+.PHONY: insight.tar.bz2\n+INSIGHT_SUPPORT_DIRS= $(GDB_SUPPORT_DIRS) tcl tk itcl tix libgui\n+insight.tar.bz2: $(DIST_SUPPORT) $(GDB_SUPPORT_DIRS) gdb\n+\t$(MAKE) -f Makefile.in gdb-taz TOOL=gdb PACKAGE=insight \\\n+\t\tMD5PROG=\"$(MD5PROG)\" \\\n+\t\tSUPPORT_FILES=\"$(INSIGHT_SUPPORT_DIRS)\"\n+.PHONY: insight.tar\n+insight.tar: $(DIST_SUPPORT) $(GDB_SUPPORT_DIRS) gdb\n+\t$(MAKE) -f Makefile.in gdb-tar TOOL=gdb PACKAGE=insight \\\n+\t\tMD5PROG=\"$(MD5PROG)\" \\\n+\t\tSUPPORT_FILES=\"$(INSIGHT_SUPPORT_DIRS)\"\n+\n+.PHONY: insight+dejagnu.tar.bz2\n+INSIGHTD_SUPPORT_DIRS= $(INSIGHT_SUPPORT_DIRS) expect dejagnu\n+insight+dejagnu.tar.bz2: $(DIST_SUPPORT) $(INSIGHTD_SUPPORT_DIRS) gdb\n+\t$(MAKE) -f Makefile.in gdb-taz TOOL=gdb PACKAGE=\"insight+dejagnu\" \\\n+\t\tMD5PROG=\"$(MD5PROG)\" \\\n+\t\tSUPPORT_FILES=\"$(INSIGHTD_SUPPORT_DIRS)\"\n+.PHONY: insight+dejagnu.tar\n+insight+dejagnu.tar: $(DIST_SUPPORT) $(INSIGHTD_SUPPORT_DIRS) gdb\n+\t$(MAKE) -f Makefile.in gdb-tar TOOL=gdb PACKAGE=\"insight+dejagnu\" \\\n+\t\tMD5PROG=\"$(MD5PROG)\" \\\n+\t\tSUPPORT_FILES=\"$(INSIGHTD_SUPPORT_DIRS)\"\n+\n+.PHONY: newlib.tar.bz2\n+NEWLIB_SUPPORT_DIRS=libgloss\n+# taz configures for the sun4 target which won't configure newlib.\n+# We need newlib configured so that the .info files are made.\n+# Unfortunately, it is not enough to just configure newlib separately:\n+# taz will build the .info files but since SUBDIRS won't contain newlib,\n+# distclean won't be run (leaving Makefile, config.status, and the tmp files\n+# used in building the .info files, eg: *.def, *.ref).\n+# The problem isn't solvable however without a lot of extra work because\n+# target libraries are built in subdir $(target_alias) which gets nuked during\n+# the make distclean.  For now punt on the issue of shipping newlib info files\n+# with newlib net releases and wait for a day when some native target (sun4?)\n+# supports newlib (if only minimally).\n+newlib.tar.bz2: $(DIST_SUPPORT) $(NEWLIB_SUPPORT_DIRS) newlib\n+\t$(MAKE) -f Makefile.in taz TOOL=newlib \\\n+\t\tMD5PROG=\"$(MD5PROG)\" \\\n+\t\tSUPPORT_FILES=\"$(NEWLIB_SUPPORT_DIRS)\" \\\n+\t\tDEVO_SUPPORT=\"$(DEVO_SUPPORT) COPYING.NEWLIB\" newlib\n+\n+.NOEXPORT:\n+MAKEOVERRIDES=\n+\n+# end of Makefile.in"}, {"sha": "8dab42bdfa45ea9339689c8a112fecb06a81963e", "filename": "configure.in", "status": "modified", "additions": 9, "deletions": 23, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95ddd785f615b57b28764a3466b9cb167512a414/configure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95ddd785f615b57b28764a3466b9cb167512a414/configure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.in?ref=95ddd785f615b57b28764a3466b9cb167512a414", "patch": "@@ -80,22 +80,6 @@ target_tools=\"target-examples target-groff target-gperf\"\n \n ################################################################################\n \n-## These two lists are of directories that are to be removed from the\n-## ${configdirs} list for either cross-compilations or for native-\n-## compilations.  For example, it doesn't make that much sense to\n-## cross-compile Emacs, nor is it terribly useful to compile target-libiberty in\n-## a native environment.  \n-\n-# directories to be built in the native environment only\n-#\n-# This must be a single line because of the way it is searched by grep in\n-# the code below.\n-native_only=\"autoconf automake libtool fileutils find gawk gettext grep gzip hello indent m4 rcs recode sed shellutils tar textutils uudecode wdiff gprof target-groff guile perl time ash bash bzip2 prms snavigator gnuserv target-gperf\"\n-\n-# directories to be built in a cross environment only\n-#\n-cross_only=\"target-libgloss target-newlib target-opcodes\"\n-\n ## All tools belong in one of the four categories, and are assigned above\n ## We assign ${configdirs} this way to remove all embedded newlines.  This\n ## is important because configure will choke if they ever get through.\n@@ -184,8 +168,12 @@ case ${with_x} in\n esac\n \n # Some tools are only suitable for building in a \"native\" situation.\n-# Remove these if host!=target.  Similarly, some are only suitable\n-# for cross toolchains; remove if host=target.\n+# Remove these if host!=target.  \n+native_only=\"autoconf automake libtool fileutils find gawk gettext grep gzip hello indent m4 rcs recode sed shellutils tar textutils uudecode wdiff gprof target-groff guile perl time ash bash bzip2 prms snavigator gnuserv target-gperf\"\n+\n+# Similarly, some are only suitable for cross toolchains.\n+# Remove these if host=target.\n+cross_only=\"target-libgloss target-newlib target-opcodes\"\n \n case $is_cross_compiler in\n   no) skipdirs=\"${skipdirs} ${cross_only}\" ;;\n@@ -755,8 +743,7 @@ for dir in . $skipdirs $noconfigdirs ; do\n   dirname=`echo $dir | sed -e s/target-//g`\n   if test $dir != .  && echo \" ${configdirs} \" | grep \" ${dir} \" >/dev/null 2>&1; then\n     configdirs=`echo \" ${configdirs} \" | sed -e \"s/ ${dir} / /\"`\n-    if test -r $srcdir/$dirname/configure \\\n-\t|| test -r $srcdir/$dirname/configure.in ; then\n+    if test -r $srcdir/$dirname/configure ; then\n       if echo \" ${skipdirs} \" | grep \" ${dir} \" >/dev/null 2>&1; then\n \ttrue\n       else\n@@ -766,8 +753,7 @@ for dir in . $skipdirs $noconfigdirs ; do\n   fi\n   if test $dir != . && echo \" ${target_configdirs} \" | grep \" ${dir} \" >/dev/null 2>&1; then\n     target_configdirs=`echo \" ${target_configdirs} \" | sed -e \"s/ ${dir} / /\"`\n-    if test -r $srcdir/$dirname/configure \\\n-\t|| test -r $srcdir/$dirname/configure.in ; then\n+    if test -r $srcdir/$dirname/configure ; then\n       if echo \" ${skipdirs} \" | grep \" ${dir} \" >/dev/null 2>&1; then\n \ttrue\n       else\n@@ -783,7 +769,7 @@ if test -n \"${target_configdirs}\" ; then\n   others=\n   for i in `echo ${target_configdirs} | sed -e s/target-//g` ; do\n     if test \"$i\" != \"libiberty\" ; then\n-      if test -r $srcdir/$i/configure || test -r $srcdir/$i/configure.in ; then\n+      if test -r $srcdir/$i/configure ; then\n \tothers=yes;\n \tbreak;\n       fi"}, {"sha": "d00fd43c6b60dc45e7a6ac3432c5b402e2eb9efa", "filename": "contrib/gcc_update", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95ddd785f615b57b28764a3466b9cb167512a414/contrib%2Fgcc_update", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95ddd785f615b57b28764a3466b9cb167512a414/contrib%2Fgcc_update", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc_update?ref=95ddd785f615b57b28764a3466b9cb167512a414", "patch": "@@ -104,6 +104,8 @@ libjava/libltdl/aclocal.m4: libjava/libltdl/configure.in libjava/libltdl/acinclu\n libjava/libltdl/Makefile.in: libjava/libltdl/Makefile.am libjava/libltdl/configure.in libjava/libltdl/aclocal.m4\n libjava/libltdl/configure: libjava/libltdl/configure.in libjava/libltdl/aclocal.m4\n libjava/libltdl/stamp-h.in: libjava/libltdl/configure.in libjava/libltdl/aclocal.m4 libjava/libltdl/acconfig.h\n+# Top level\n+Makefile.in: Makefile.tpl Makefile.def\n EOF\n }\n "}]}