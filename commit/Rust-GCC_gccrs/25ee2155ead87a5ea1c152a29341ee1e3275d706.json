{"sha": "25ee2155ead87a5ea1c152a29341ee1e3275d706", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjVlZTIxNTVlYWQ4N2E1ZWExYzE1MmEyOTM0MWVlMWUzMjc1ZDcwNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-05-06T21:36:31Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-05-06T21:36:31Z"}, "message": "c++: Don't synthesize sfk_comparison method multiple times [PR94907]\n\nOn the following testcase we ICE, because synthesize_method is called twice\non the same sfk_comparison method fndecl, the first time it works fine\nbecause start_preparsed_function in that case sets both\ncurrent_function_decl and cfun, but second time it is called it only sets\nthe former and keeps cfun NULL, so we ICE when trying to store\ncurrent_function_returns_value.\nI think it is just wrong to call synthesize_method multiple times, and most\nsynthesize_method callers avoid that by not calling it if DECL_INITIAL is\nalready set, so this patch does that too.\n\n2020-05-06  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/94907\n\t* method.c (defaulted_late_check): Don't call synthesize_method\n\ton constexpr sfk_comparison if it has been called on it already.\n\n\t* g++.dg/cpp2a/spaceship-synth8.C: New test.", "tree": {"sha": "13883e8b157af22e2ba0e308c9793a746035e25b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13883e8b157af22e2ba0e308c9793a746035e25b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25ee2155ead87a5ea1c152a29341ee1e3275d706", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25ee2155ead87a5ea1c152a29341ee1e3275d706", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25ee2155ead87a5ea1c152a29341ee1e3275d706", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25ee2155ead87a5ea1c152a29341ee1e3275d706/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72a54e5e8157508c87594d1a6b53de90b76524ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72a54e5e8157508c87594d1a6b53de90b76524ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72a54e5e8157508c87594d1a6b53de90b76524ce"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "32bb9f5dfa81289603542333485faceb5d8d9306", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25ee2155ead87a5ea1c152a29341ee1e3275d706/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25ee2155ead87a5ea1c152a29341ee1e3275d706/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=25ee2155ead87a5ea1c152a29341ee1e3275d706", "patch": "@@ -1,3 +1,9 @@\n+2020-05-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/94907\n+\t* method.c (defaulted_late_check): Don't call synthesize_method\n+\ton constexpr sfk_comparison if it has been called on it already.\n+\n 2020-05-06  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/94946"}, {"sha": "47f96aa845ec357ef0ddf168f8ea15072d57e1e1", "filename": "gcc/cp/method.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25ee2155ead87a5ea1c152a29341ee1e3275d706/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25ee2155ead87a5ea1c152a29341ee1e3275d706/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=25ee2155ead87a5ea1c152a29341ee1e3275d706", "patch": "@@ -2939,7 +2939,7 @@ defaulted_late_check (tree fn)\n     {\n       /* If the function was declared constexpr, check that the definition\n \t qualifies.  Otherwise we can define the function lazily.  */\n-      if (DECL_DECLARED_CONSTEXPR_P (fn))\n+      if (DECL_DECLARED_CONSTEXPR_P (fn) && !DECL_INITIAL (fn))\n \tsynthesize_method (fn);\n       return;\n     }"}, {"sha": "a2c0e8571d91140f03df7db9c01ebe993d014af7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25ee2155ead87a5ea1c152a29341ee1e3275d706/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25ee2155ead87a5ea1c152a29341ee1e3275d706/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=25ee2155ead87a5ea1c152a29341ee1e3275d706", "patch": "@@ -1,3 +1,8 @@\n+2020-05-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/94907\n+\t* g++.dg/cpp2a/spaceship-synth8.C: New test.\n+\n 2020-05-06  qing zhao  <qing.zhao@oracle.com>\n \n \tPR c/94230"}, {"sha": "d0d68c7fa6fe24e7a0bc9a5c98afe6cbdeefe59a", "filename": "gcc/testsuite/g++.dg/cpp2a/spaceship-synth8.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25ee2155ead87a5ea1c152a29341ee1e3275d706/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fspaceship-synth8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25ee2155ead87a5ea1c152a29341ee1e3275d706/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fspaceship-synth8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fspaceship-synth8.C?ref=25ee2155ead87a5ea1c152a29341ee1e3275d706", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/94907\n+// { dg-do compile { target c++2a } }\n+\n+namespace std { struct strong_ordering { }; }\n+\n+struct E;\n+struct D {\n+  virtual std::strong_ordering operator<=>(const struct E&) const = 0;\n+};\n+struct E : D {\n+  std::strong_ordering operator<=>(const E&) const override = default;\n+};"}]}