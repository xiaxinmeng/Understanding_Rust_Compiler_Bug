{"sha": "918047526ddf6f2ff5235d232d5bfbb653bd78cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE4MDQ3NTI2ZGRmNmYyZmY1MjM1ZDIzMmQ1YmZiYjY1M2JkNzhjZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2004-10-23T09:16:46Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-10-23T09:16:46Z"}, "message": "re PR middle-end/17793 (Ada bootstrap failure)\n\n\tPR middle-end/17793\n\t* gimplify.c (gimplify_addr_expr) <VIEW_CONVERT_EXPR>: Look\n\tthrough the operand if it is a useless type conversion.\n\nFrom-SVN: r89488", "tree": {"sha": "dd933f1854a322fbaad326608964432f168dfff2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd933f1854a322fbaad326608964432f168dfff2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/918047526ddf6f2ff5235d232d5bfbb653bd78cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/918047526ddf6f2ff5235d232d5bfbb653bd78cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/918047526ddf6f2ff5235d232d5bfbb653bd78cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/918047526ddf6f2ff5235d232d5bfbb653bd78cd/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "757f86d6a41775d627b758e4e53ab36d705098b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/757f86d6a41775d627b758e4e53ab36d705098b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/757f86d6a41775d627b758e4e53ab36d705098b2"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "fa86a45990c8ed19e5199a0bfed99dd7e55f9160", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/918047526ddf6f2ff5235d232d5bfbb653bd78cd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/918047526ddf6f2ff5235d232d5bfbb653bd78cd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=918047526ddf6f2ff5235d232d5bfbb653bd78cd", "patch": "@@ -1,3 +1,9 @@\n+2004-10-23  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR middle-end/17793\n+\t* gimplify.c (gimplify_addr_expr) <VIEW_CONVERT_EXPR>: Look\n+\tthrough the operand if it is a useless type conversion.\n+\n 2004-10-23  Ben Elliston  <bje@au.ibm.com>\n \n \t* cfg.c (remove_edge): Use VEC_unordered_remove."}, {"sha": "3d8ecdfd98e7f37a63e3dc1cc558ea973c0f4ca5", "filename": "gcc/gimplify.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/918047526ddf6f2ff5235d232d5bfbb653bd78cd/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/918047526ddf6f2ff5235d232d5bfbb653bd78cd/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=918047526ddf6f2ff5235d232d5bfbb653bd78cd", "patch": "@@ -3093,6 +3093,13 @@ gimplify_addr_expr (tree *expr_p, tree *pre_p, tree *post_p)\n \n \t ??? The interactions of VIEW_CONVERT_EXPR and aliasing is not at\n \t all clear.  The impact of this transformation is even less clear.  */\n+\n+      /* If the operand is a useless conversion, look through it.  Doing so\n+\t guarantees that the ADDR_EXPR and its operand will remain of the\n+\t same type.  */\n+      if (tree_ssa_useless_type_conversion (TREE_OPERAND (op0, 0)))\n+          op0 = TREE_OPERAND (op0, 0);\n+\n       *expr_p = fold_convert (TREE_TYPE (expr),\n \t\t\t      build_fold_addr_expr (TREE_OPERAND (op0, 0)));\n       ret = GS_OK;"}]}