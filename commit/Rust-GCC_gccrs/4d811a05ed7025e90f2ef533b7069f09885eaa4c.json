{"sha": "4d811a05ed7025e90f2ef533b7069f09885eaa4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ4MTFhMDVlZDcwMjVlOTBmMmVmNTMzYjcwNjlmMDk4ODVlYWE0Yw==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2008-02-09T20:34:47Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2008-02-09T20:34:47Z"}, "message": "PR middle_end/34150\n\t* pa.c (legitimize_pic_address): Add REG_EQUAL note on sets with a\n\tpic_label_operand source.  Similarly, add a REG_LABEL_OPERAND note\n\tand update LABEL_NUSES during and after reload.\n\nFrom-SVN: r132203", "tree": {"sha": "4b39335178945b93061c18c9f161ec90dbc8061c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b39335178945b93061c18c9f161ec90dbc8061c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d811a05ed7025e90f2ef533b7069f09885eaa4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d811a05ed7025e90f2ef533b7069f09885eaa4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d811a05ed7025e90f2ef533b7069f09885eaa4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d811a05ed7025e90f2ef533b7069f09885eaa4c/comments", "author": null, "committer": null, "parents": [{"sha": "a3395528c116add2192946330529e49ec6c2eb5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3395528c116add2192946330529e49ec6c2eb5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3395528c116add2192946330529e49ec6c2eb5b"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "c41e364cfe747b06ba79a9bf931c1ecd1c46ad4e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d811a05ed7025e90f2ef533b7069f09885eaa4c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d811a05ed7025e90f2ef533b7069f09885eaa4c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4d811a05ed7025e90f2ef533b7069f09885eaa4c", "patch": "@@ -1,3 +1,10 @@\n+2008-02-09  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR middle_end/34150\n+\t* pa.c (legitimize_pic_address): Add REG_EQUAL note on sets with a\n+\tpic_label_operand source.  Similarly, add a REG_LABEL_OPERAND note\n+\tand update LABEL_NUSES during and after reload.\n+\n 2008-02-08  Steven Bosscher  <stevenb.gcc@gmail.com>\n \n \tPR middle-end/34627"}, {"sha": "c270e4b333d25a82d8193b5099649b0b9e7f8d89", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d811a05ed7025e90f2ef533b7069f09885eaa4c/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d811a05ed7025e90f2ef533b7069f09885eaa4c/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=4d811a05ed7025e90f2ef533b7069f09885eaa4c", "patch": "@@ -668,6 +668,8 @@ legitimize_pic_address (rtx orig, enum machine_mode mode, rtx reg)\n   /* Labels need special handling.  */\n   if (pic_label_operand (orig, mode))\n     {\n+      rtx insn;\n+\n       /* We do not want to go through the movXX expanders here since that\n \t would create recursion.\n \n@@ -678,7 +680,24 @@ legitimize_pic_address (rtx orig, enum machine_mode mode, rtx reg)\n \t So instead we just emit the raw set, which avoids the movXX\n \t expanders completely.  */\n       mark_reg_pointer (reg, BITS_PER_UNIT);\n-      emit_insn (gen_rtx_SET (VOIDmode, reg, orig));\n+      insn = emit_insn (gen_rtx_SET (VOIDmode, reg, orig));\n+\n+      /* Put a REG_EQUAL note on this insn, so that it can be optimized.  */\n+      REG_NOTES (insn) = gen_rtx_EXPR_LIST (REG_EQUAL, orig, REG_NOTES (insn));\n+\n+      /* During and after reload, we need to generate a REG_LABEL_OPERAND note\n+\t and update LABEL_NUSES because this is not done automatically.  */\n+      if (reload_in_progress || reload_completed)\n+\t{\n+\t  /* Extract LABEL_REF.  */\n+\t  if (GET_CODE (orig) == CONST)\n+\t    orig = XEXP (XEXP (orig, 0), 0);\n+\t  /* Extract CODE_LABEL.  */\n+\t  orig = XEXP (orig, 0);\n+\t  REG_NOTES (insn) = gen_rtx_INSN_LIST (REG_LABEL_OPERAND, orig,\n+\t\t\t\t\t\tREG_NOTES (insn));\n+\t  LABEL_NUSES (orig)++;\n+\t}\n       current_function_uses_pic_offset_table = 1;\n       return reg;\n     }"}]}