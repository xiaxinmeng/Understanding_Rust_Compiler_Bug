{"sha": "281de624e33db467fd888e0ac4c4a8a1cad1fa73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjgxZGU2MjRlMzNkYjQ2N2ZkODg4ZTBhYzRjNGE4YTFjYWQxZmE3Mw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@cygnus.com", "date": "1997-10-01T15:15:06Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1997-10-01T15:15:06Z"}, "message": "pexecute.c: Use spawn if __CYGWIN32__.\n\n        * pexecute.c: Use spawn if __CYGWIN32__.\n\n        * pexecute.c: Include \"config.h\" first, as per autoconf manual\n\t(from Paul Eggert  <eggert@twinsun.com>).\n\nFrom-SVN: r15825", "tree": {"sha": "eb969fc17c26a5a2e212dcbcdf5cbb43ce43a940", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb969fc17c26a5a2e212dcbcdf5cbb43ce43a940"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/281de624e33db467fd888e0ac4c4a8a1cad1fa73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/281de624e33db467fd888e0ac4c4a8a1cad1fa73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/281de624e33db467fd888e0ac4c4a8a1cad1fa73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/281de624e33db467fd888e0ac4c4a8a1cad1fa73/comments", "author": null, "committer": null, "parents": [{"sha": "0d9011fd8157c7a12b794a0bcba85985f2c3270f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d9011fd8157c7a12b794a0bcba85985f2c3270f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d9011fd8157c7a12b794a0bcba85985f2c3270f"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "c5876bc67c458904bc254940e98e83cce77bc8fb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/281de624e33db467fd888e0ac4c4a8a1cad1fa73/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/281de624e33db467fd888e0ac4c4a8a1cad1fa73/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=281de624e33db467fd888e0ac4c4a8a1cad1fa73", "patch": "@@ -1,3 +1,10 @@\n+Wed Oct  1 11:13:25 1997  Ian Lance Taylor  <ian@cygnus.com>\n+\n+        * pexecute.c: Use spawn if __CYGWIN32__.\n+\n+        * pexecute.c: Include \"config.h\" first, as per autoconf manual\n+\t(from Paul Eggert  <eggert@twinsun.com>).\n+\n Wed Oct  1 01:44:36 1997  Philippe De Muyter  <phdm@info.ucl.ac.be>\n \n \t* m68k/x-mot3300 (XCFLAGS): Disable as's long/short jump"}, {"sha": "dc2aacd2ba53258de288778cfc47bd35ddc39dc2", "filename": "gcc/pexecute.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/281de624e33db467fd888e0ac4c4a8a1cad1fa73/gcc%2Fpexecute.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/281de624e33db467fd888e0ac4c4a8a1cad1fa73/gcc%2Fpexecute.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpexecute.c?ref=281de624e33db467fd888e0ac4c4a8a1cad1fa73", "patch": "@@ -23,11 +23,14 @@ Boston, MA 02111-1307, USA.  */\n /* This file lives in at least two places: libiberty and gcc.\n    Don't change one without the other.  */\n \n+#ifdef IN_GCC\n+#include \"config.h\"\n+#endif\n+\n #include <stdio.h>\n #include <errno.h>\n \n #ifdef IN_GCC\n-#include \"config.h\"\n #include \"gansidecl.h\"\n /* ??? Need to find a suitable header file.  */\n #define PEXECUTE_FIRST   1\n@@ -217,12 +220,18 @@ pwait (pid, status, flags)\n \n #endif /* MSDOS */\n \n-#if defined (_WIN32) && !defined (__CYGWIN32__)\n+#if defined (_WIN32)\n \n #include <process.h>\n extern int _spawnv ();\n extern int _spawnvp ();\n \n+#ifdef __CYGWIN32__\n+\n+#define fix_argv(argvec) (argvec)\n+\n+#else\n+\n /* This is a kludge to get around the Microsoft C spawn functions' propensity\n    to remove the outermost set of double quotes from all arguments.  */\n \n@@ -260,6 +269,8 @@ fix_argv (argvec)\n   return (const char * const *) argvec;\n }\n \n+#endif /* ! defined (__CYGWIN32__) */\n+\n int\n pexecute (program, argv, this_pname, temp_base, errmsg_fmt, errmsg_arg, flags)\n      const char *program;\n@@ -478,7 +489,7 @@ pfinish ()\n \n /* include for Unix-like environments but not for Dos-like environments */\n #if ! defined (__MSDOS__) && ! defined (OS2) && ! defined (MPW) \\\n-    && (defined (__CYGWIN32__) || ! defined (_WIN32))\n+    && ! defined (_WIN32)\n \n #ifdef VMS\n #define vfork() (decc$$alloc_vfork_blocks() >= 0 ? \\"}]}