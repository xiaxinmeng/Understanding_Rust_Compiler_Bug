{"sha": "3cbf7085c3bab213304e9e3237128da2879cc8b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NiZjcwODVjM2JhYjIxMzMwNGU5ZTMyMzcxMjhkYTI4NzljYzhiOA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-03-31T18:37:41Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-03-31T18:37:41Z"}, "message": "Fix PR43464: copyprop should maintain loop close phi nodes with multiple arguments.\n\n2010-03-30  Richard Guenther  <rguenther@suse.de>\n\t    Zdenek Dvorak  <ook@ucw.cz>\n\t    Sebastian Pop  <sebastian.pop@amd.com>\n\n\tPR middle-end/43464\n\t* tree-ssa-copy.c (init_copy_prop): Handle loop close phi nodes\n\twith multiple arguments.\n\t(execute_copy_prop): Remove call to rewrite_into_loop_closed_ssa.\n\nCo-Authored-By: Sebastian Pop <sebastian.pop@amd.com>\nCo-Authored-By: Zdenek Dvorak <ook@ucw.cz>\n\nFrom-SVN: r157889", "tree": {"sha": "82ac9c3853c6d19667fbda347ad66d715a9bf1be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82ac9c3853c6d19667fbda347ad66d715a9bf1be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3cbf7085c3bab213304e9e3237128da2879cc8b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cbf7085c3bab213304e9e3237128da2879cc8b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cbf7085c3bab213304e9e3237128da2879cc8b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cbf7085c3bab213304e9e3237128da2879cc8b8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40bf935e85b60e7d110d028bf975558589abef8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40bf935e85b60e7d110d028bf975558589abef8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40bf935e85b60e7d110d028bf975558589abef8c"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "6ce22cbb5d5bbe1cf774a5ac54853d9f1d58d726", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cbf7085c3bab213304e9e3237128da2879cc8b8/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cbf7085c3bab213304e9e3237128da2879cc8b8/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=3cbf7085c3bab213304e9e3237128da2879cc8b8", "patch": "@@ -1,3 +1,12 @@\n+2010-03-30  Richard Guenther  <rguenther@suse.de>\n+\t    Zdenek Dvorak  <ook@ucw.cz>\n+\t    Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR middle-end/43464\n+\t* tree-ssa-copy.c (init_copy_prop): Handle loop close phi nodes\n+\twith multiple arguments.\n+\t(execute_copy_prop): Remove call to rewrite_into_loop_closed_ssa.\n+\n 2010-03-23  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-dependences.c (print_pddr): Call print_pdr with an"}, {"sha": "5ee51e0ab58a535d7efaa1f2874a2160849cd068", "filename": "gcc/tree-ssa-copy.c", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cbf7085c3bab213304e9e3237128da2879cc8b8/gcc%2Ftree-ssa-copy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cbf7085c3bab213304e9e3237128da2879cc8b8/gcc%2Ftree-ssa-copy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copy.c?ref=3cbf7085c3bab213304e9e3237128da2879cc8b8", "patch": "@@ -749,6 +749,7 @@ init_copy_prop (void)\n     {\n       gimple_stmt_iterator si;\n       int depth = bb->loop_depth;\n+      bool loop_exit_p = false;\n \n       for (si = gsi_start_bb (bb); !gsi_end_p (si); gsi_next (&si))\n \t{\n@@ -786,19 +787,26 @@ init_copy_prop (void)\n \t      cached_last_copy_of[SSA_NAME_VERSION (def)] = def;\n \t}\n \n+      /* In loop-closed SSA form do not copy-propagate through\n+\t PHI nodes in blocks with a loop exit edge predecessor.  */\n+      if (current_loops\n+\t  && loops_state_satisfies_p (LOOP_CLOSED_SSA))\n+\t{\n+\t  edge_iterator ei;\n+\t  edge e;\n+\t  FOR_EACH_EDGE (e, ei, bb->preds)\n+\t    if (loop_exit_edge_p (e->src->loop_father, e))\n+\t      loop_exit_p = true;\n+\t}\n+\n       for (si = gsi_start_phis (bb); !gsi_end_p (si); gsi_next (&si))\n \t{\n           gimple phi = gsi_stmt (si);\n           tree def;\n \n \t  def = gimple_phi_result (phi);\n \t  if (!is_gimple_reg (def)\n-\t      /* In loop-closed SSA form do not copy-propagate through\n-\t         PHI nodes.  Technically this is only needed for loop\n-\t\t exit PHIs, but this is difficult to query.  */\n-\t      || (current_loops\n-\t\t  && gimple_phi_num_args (phi) == 1\n-\t\t  && loops_state_satisfies_p (LOOP_CLOSED_SSA)))\n+\t      || loop_exit_p)\n             prop_set_simulate_again (phi, false);\n \t  else\n             prop_set_simulate_again (phi, true);"}]}