{"sha": "b1570930df659ff3ea6691f9ba8b84c8a189d85d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE1NzA5MzBkZjY1OWZmM2VhNjY5MWY5YmE4Yjg0YzhhMTg5ZDg1ZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-09-29T10:01:26Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-09-29T12:44:04Z"}, "message": "move permute optimization to optimize-slp\n\nThis moves optimizing permutes of SLP reductions to vect_optimize_slp,\neliding the global slp_loads array.\n\n2020-09-29  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vect-slp.c (vect_analyze_slp): Move SLP reduction\n\tre-arrangement and SLP graph load gathering...\n\t(vect_optimize_slp): ... here.\n\t* tree-vectorizer.h (vec_info::slp_loads): Remove.", "tree": {"sha": "8fdde8bfcb4742eadcd2acd95305572e86bbcc65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fdde8bfcb4742eadcd2acd95305572e86bbcc65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1570930df659ff3ea6691f9ba8b84c8a189d85d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1570930df659ff3ea6691f9ba8b84c8a189d85d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1570930df659ff3ea6691f9ba8b84c8a189d85d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1570930df659ff3ea6691f9ba8b84c8a189d85d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d68f4d2ecb8ed6781e4e535d2abc498b1674d68a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d68f4d2ecb8ed6781e4e535d2abc498b1674d68a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d68f4d2ecb8ed6781e4e535d2abc498b1674d68a"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "8de248025386a18f7ba4cdb978a6c7b0095cdb66", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1570930df659ff3ea6691f9ba8b84c8a189d85d/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1570930df659ff3ea6691f9ba8b84c8a189d85d/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=b1570930df659ff3ea6691f9ba8b84c8a189d85d", "patch": "@@ -2486,8 +2486,15 @@ vect_analyze_slp (vec_info *vinfo, unsigned max_tree_size)\n       vect_free_slp_tree ((*it).second);\n   delete bst_map;\n \n+  return opt_result::success ();\n+}\n+\n+void\n+vect_optimize_slp (vec_info *vinfo)\n+{\n   /* Optimize permutations in SLP reductions.  */\n   slp_instance instance;\n+  unsigned i;\n   FOR_EACH_VEC_ELT (vinfo->slp_instances, i, instance)\n     {\n       slp_tree node = SLP_INSTANCE_TREE (instance);\n@@ -2500,20 +2507,14 @@ vect_analyze_slp (vec_info *vinfo, unsigned max_tree_size)\n     }\n \n   /* Gather all loads in the SLP graph.  */\n+  auto_vec<slp_tree> slp_loads;\n   hash_set<slp_tree> visited;\n   FOR_EACH_VEC_ELT (vinfo->slp_instances, i, instance)\n-    vect_gather_slp_loads (vinfo->slp_loads, SLP_INSTANCE_TREE (instance),\n+    vect_gather_slp_loads (slp_loads, SLP_INSTANCE_TREE (instance),\n \t\t\t   visited);\n \n-  return opt_result::success ();\n-}\n-\n-void\n-vect_optimize_slp (vec_info *vinfo)\n-{\n   slp_tree node;\n-  unsigned i;\n-  FOR_EACH_VEC_ELT (vinfo->slp_loads, i, node)\n+  FOR_EACH_VEC_ELT (slp_loads, i, node)\n     {\n       if (!SLP_TREE_LOAD_PERMUTATION (node).exists ())\n \tcontinue;"}, {"sha": "e62f1ccee8d8aef346f5d85a3d6b1bef178861cb", "filename": "gcc/tree-vectorizer.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1570930df659ff3ea6691f9ba8b84c8a189d85d/gcc%2Ftree-vectorizer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1570930df659ff3ea6691f9ba8b84c8a189d85d/gcc%2Ftree-vectorizer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.h?ref=b1570930df659ff3ea6691f9ba8b84c8a189d85d", "patch": "@@ -359,7 +359,6 @@ class vec_info {\n \n   /* The SLP graph.  */\n   auto_vec<slp_instance> slp_instances;\n-  auto_vec<slp_tree> slp_loads;\n \n   /* Maps base addresses to an innermost_loop_behavior that gives the maximum\n      known alignment for that base.  */"}]}