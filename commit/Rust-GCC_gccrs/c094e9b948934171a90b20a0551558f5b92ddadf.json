{"sha": "c094e9b948934171a90b20a0551558f5b92ddadf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA5NGU5Yjk0ODkzNDE3MWE5MGIyMGEwNTUxNTU4ZjViOTJkZGFkZg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-07-08T20:25:39Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-07-08T20:25:39Z"}, "message": "numeric_members.cc: Correct type info.\n\n\n2003-07-08  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* config/locale/generic/numeric_members.cc: Correct type info.\n\t* config/locale/gnu/numeric_members.cc: Same.\n\t* include/bits/locale_facets.h: Same.\n\n\t* include/bits/char_traits.h: Correct spacing.\n\n\t* src/locale.cc: Wrap to 80 col.\n\nFrom-SVN: r69098", "tree": {"sha": "4b9bb1c9f3c33a77bbb57d437be5c6bfcde01953", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b9bb1c9f3c33a77bbb57d437be5c6bfcde01953"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c094e9b948934171a90b20a0551558f5b92ddadf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c094e9b948934171a90b20a0551558f5b92ddadf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c094e9b948934171a90b20a0551558f5b92ddadf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c094e9b948934171a90b20a0551558f5b92ddadf/comments", "author": null, "committer": null, "parents": [{"sha": "516574425b935981dcdae07ff0e3be6b5946bf04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/516574425b935981dcdae07ff0e3be6b5946bf04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/516574425b935981dcdae07ff0e3be6b5946bf04"}], "stats": {"total": 40, "additions": 27, "deletions": 13}, "files": [{"sha": "67702c62ff9c76bccb41132aa9ca4b6659748979", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c094e9b948934171a90b20a0551558f5b92ddadf/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c094e9b948934171a90b20a0551558f5b92ddadf/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c094e9b948934171a90b20a0551558f5b92ddadf", "patch": "@@ -1,3 +1,13 @@\n+2003-07-08  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* config/locale/generic/numeric_members.cc: Correct type info.\n+\t* config/locale/gnu/numeric_members.cc: Same.\n+\t* include/bits/locale_facets.h: Same.\n+\t\n+\t* include/bits/char_traits.h: Correct spacing.\n+\n+\t* src/locale.cc: Wrap to 80 col.\n+\t\n 2003-07-07  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* include/std/std_complex.h: Partially revert last\n@@ -67,7 +77,9 @@\n 2003-07-05  Gawain Bolton  <gp.bolton@computer.org>\n \n \t* include/bits/stl_list.h: Performance and memory usage\n-\timprovements.\n+\timprovements. In particular, the behaviour of the constructor and\n+\tdestructor as the list header node is no longer dynamically\n+\tallocated/de-allocated.\n \t* include/bits/list.tcc: Likewise.\n \n 2003-07-05  Paolo Carlini  <pcarlini@unitus.it>"}, {"sha": "09af14703b18bcda3217d043d0d0fd845a9ed183", "filename": "libstdc++-v3/config/locale/generic/numeric_members.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c094e9b948934171a90b20a0551558f5b92ddadf/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fnumeric_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c094e9b948934171a90b20a0551558f5b92ddadf/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fnumeric_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fnumeric_members.cc?ref=c094e9b948934171a90b20a0551558f5b92ddadf", "patch": "@@ -53,11 +53,11 @@ namespace std\n       \n       for (size_t i = 0; i < __num_base::_S_oend; ++i)\n \t_M_data->_M_atoms_out[i] = __num_base::_S_atoms_out[i];\n-      _M_data->_M_atoms_out[__num_base::_S_oend] = wchar_t();\n+      _M_data->_M_atoms_out[__num_base::_S_oend] = char();\n       \n       for (size_t i = 0; i < __num_base::_S_iend; ++i)\n \t_M_data->_M_atoms_in[i] = __num_base::_S_atoms_in[i];\n-      _M_data->_M_atoms_in[__num_base::_S_iend] = wchar_t();\n+      _M_data->_M_atoms_in[__num_base::_S_iend] = char();\n \n       _M_data->_M_truename = \"true\";\n       _M_data->_M_falsename = \"false\";      "}, {"sha": "36e2365f664afd7c93d0a8cd176eee97c9bb2c37", "filename": "libstdc++-v3/config/locale/gnu/numeric_members.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c094e9b948934171a90b20a0551558f5b92ddadf/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fnumeric_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c094e9b948934171a90b20a0551558f5b92ddadf/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fnumeric_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fnumeric_members.cc?ref=c094e9b948934171a90b20a0551558f5b92ddadf", "patch": "@@ -56,11 +56,11 @@ namespace std\n \n \t  for (size_t i = 0; i < __num_base::_S_oend; ++i)\n \t    _M_data->_M_atoms_out[i] = __num_base::_S_atoms_out[i];\n-\t  _M_data->_M_atoms_out[__num_base::_S_oend] = wchar_t();\n+\t  _M_data->_M_atoms_out[__num_base::_S_oend] = char();\n \n \t  for (size_t i = 0; i < __num_base::_S_iend; ++i)\n \t    _M_data->_M_atoms_in[i] = __num_base::_S_atoms_in[i];\n-\t  _M_data->_M_atoms_in[__num_base::_S_iend] = wchar_t();\n+\t  _M_data->_M_atoms_in[__num_base::_S_iend] = char();\n \t}\n       else\n \t{"}, {"sha": "5a5eca631e19e319703c20050dbb133203e8ba76", "filename": "libstdc++-v3/include/bits/char_traits.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c094e9b948934171a90b20a0551558f5b92ddadf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c094e9b948934171a90b20a0551558f5b92ddadf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h?ref=c094e9b948934171a90b20a0551558f5b92ddadf", "patch": "@@ -152,7 +152,7 @@ namespace std\n \n       static char_type* \n       copy(char_type* __s1, const char_type* __s2, size_t __n)\n-      {  return static_cast<char_type*>(memcpy(__s1, __s2, __n)); }\n+      { return static_cast<char_type*>(memcpy(__s1, __s2, __n)); }\n \n       static char_type* \n       assign(char_type* __s, size_t __n, char_type __a)"}, {"sha": "6b5a99d4ff0ba3c4da89265470bc9bfc417e2aa4", "filename": "libstdc++-v3/include/bits/locale_facets.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c094e9b948934171a90b20a0551558f5b92ddadf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c094e9b948934171a90b20a0551558f5b92ddadf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h?ref=c094e9b948934171a90b20a0551558f5b92ddadf", "patch": "@@ -591,13 +591,13 @@ namespace std\n       // \"C\" locale, this is \"-+xX0123456789abcdef0123456789ABCDEF\".\n       // This array contains the chars after having been passed\n       // through the current locale's ctype<_CharT>.widen().\n-      _CharT                    \t_M_atoms_out[__num_base::_S_oend + 1];\n+      char_type                    \t_M_atoms_out[__num_base::_S_oend + 1];\n \n       // A list of valid numeric literals for output: in the standard\n       // \"C\" locale, this is \"0123456789eEabcdfABCDF\"\n       // This array contains the chars after having been passed\n       // through the current locale's ctype<_CharT>.widen().\n-      _CharT                    \t_M_atoms_in[__num_base::_S_iend + 1];\n+      char_type                    \t_M_atoms_in[__num_base::_S_iend + 1];\n \n       bool\t\t\t\t_M_allocated;\n \n@@ -621,7 +621,7 @@ namespace std\n       string __grouping = __np.grouping();\n       char* __group = new char[__grouping.length() + 1];\n       __grouping.copy(__group, __grouping.length());\n-      __group[__grouping.length()] = _CharT();\n+      __group[__grouping.length()] = char();\n       _M_grouping = __group;\n       \n       _M_use_grouping = __grouping.length() != 0 && __grouping.data()[0] != 0;"}, {"sha": "248fdf30293f369ef0a6c81abe540f80a9f75f1a", "filename": "libstdc++-v3/src/locale.cc", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c094e9b948934171a90b20a0551558f5b92ddadf/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c094e9b948934171a90b20a0551558f5b92ddadf/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc?ref=c094e9b948934171a90b20a0551558f5b92ddadf", "patch": "@@ -187,7 +187,8 @@ namespace std\n \t    // If LC_ALL is set we are done.\n \t    if (__env && std::strcmp(__env, \"\") != 0)\n \t      {\n-\t\tif (std::strcmp(__env, \"C\") == 0 || std::strcmp(__env, \"POSIX\") == 0)\n+\t\tif (std::strcmp(__env, \"C\") == 0 \n+\t\t    || std::strcmp(__env, \"POSIX\") == 0)\n \t\t  (_M_impl = _S_classic)->_M_add_reference();\n \t\telse\n \t\t  _M_impl = new _Impl(__env, 1);\n@@ -197,7 +198,8 @@ namespace std\n \t\tchar* __res;\n \t\t// LANG may set a default different from \"C\".\n \t\tchar* __env = getenv(\"LANG\");\n-\t\tif (!__env || std::strcmp(__env, \"\") == 0 || std::strcmp(__env, \"C\") == 0\n+\t\tif (!__env || std::strcmp(__env, \"\") == 0 \n+\t\t    || std::strcmp(__env, \"C\") == 0 \n \t\t    || std::strcmp(__env, \"POSIX\") == 0)\n \t\t  __res = strdup(\"C\");\n \t\telse \n@@ -481,7 +483,7 @@ namespace std\n     }\n #endif\n \n-  // Definitions for static const data members of time_base\n+  // Definitions for static const data members of time_base.\n   template<> \n     const char*\n     __timepunct<char>::_S_timezones[14] =\n@@ -500,7 +502,7 @@ namespace std\n     };\n #endif\n \n-  // Definitions for static const data members of money_base\n+  // Definitions for static const data members of money_base.\n   const money_base::pattern \n   money_base::_S_default_pattern =  { {symbol, sign, none, value} };\n "}]}