{"sha": "1adaa117728eb44d11776c676448d84b0a5c3111", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFkYWExMTc3MjhlYjQ0ZDExNzc2YzY3NjQ0OGQ4NGIwYTVjMzExMQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2004-09-10T18:57:43Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2004-09-10T18:57:43Z"}, "message": "darwin.c: Include target.h.\n\n\t* config/darwin.c: Include target.h.\n\t(struct machopic_indirection): Make ptr_name a string.\n\t(machopic_indirection_hash): Update for ptr_name a string.\n\t(machopic_indirection_eq): Likewise.\n\t(machopic_indirection_name): Likewise.\n\t(machopic_output_indirection): Likewise.\n\t(machopic_validate_stub_or_non_lazy_ptr): Update for ptr_name a\n\tstring.  Don't expect stub names to be in the identifier hash table.\n\tDo call strip_name_encoding before looking up entry in ID hash table.\n\t* config/t-darwin (darwin.o): Add target.h to dependencies.\n\nFrom-SVN: r87315", "tree": {"sha": "e7172fb12d00176512719fc8e4db24e91cdfa78e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7172fb12d00176512719fc8e4db24e91cdfa78e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1adaa117728eb44d11776c676448d84b0a5c3111", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1adaa117728eb44d11776c676448d84b0a5c3111", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1adaa117728eb44d11776c676448d84b0a5c3111", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1adaa117728eb44d11776c676448d84b0a5c3111/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fb5c67a7bebab96fd72eab34b141501f7b217325", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5c67a7bebab96fd72eab34b141501f7b217325", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb5c67a7bebab96fd72eab34b141501f7b217325"}], "stats": {"total": 88, "additions": 51, "deletions": 37}, "files": [{"sha": "a0178c3414fb8cab04bdd3f0745ac59fba0d560c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1adaa117728eb44d11776c676448d84b0a5c3111/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1adaa117728eb44d11776c676448d84b0a5c3111/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1adaa117728eb44d11776c676448d84b0a5c3111", "patch": "@@ -1,5 +1,16 @@\n 2004-09-10  Geoffrey Keating  <geoffk@apple.com>\n \n+\t* config/darwin.c: Include target.h.\n+\t(struct machopic_indirection): Make ptr_name a string.\n+\t(machopic_indirection_hash): Update for ptr_name a string.\n+\t(machopic_indirection_eq): Likewise.\n+\t(machopic_indirection_name): Likewise.\n+\t(machopic_output_indirection): Likewise.\n+\t(machopic_validate_stub_or_non_lazy_ptr): Update for ptr_name a\n+\tstring.  Don't expect stub names to be in the identifier hash table.\n+\tDo call strip_name_encoding before looking up entry in ID hash table.\n+\t* config/t-darwin (darwin.o): Add target.h to dependencies.\n+\t\n \t* gcc/config/rs6000/rs6000.c (print_operand): Use fputs instead\n \tof fprintf for register names.\n \t"}, {"sha": "a5d7ac9b6b20441a6635bed7e245ef0693848320", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 39, "deletions": 36, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1adaa117728eb44d11776c676448d84b0a5c3111/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1adaa117728eb44d11776c676448d84b0a5c3111/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=1adaa117728eb44d11776c676448d84b0a5c3111", "patch": "@@ -40,6 +40,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"function.h\"\n #include \"ggc.h\"\n #include \"langhooks.h\"\n+#include \"target.h\"\n #include \"tm_p.h\"\n #include \"errors.h\"\n #include \"hashtab.h\"\n@@ -245,9 +246,8 @@ typedef struct machopic_indirection GTY (())\n {\n   /* The SYMBOL_REF for the entity referenced.  */\n   rtx symbol;\n-  /* The IDENTIFIER_NODE giving the name of the stub or non-lazy\n-     pointer.  */\n-  tree ptr_name;\n+  /* The name of the stub or non-lazy pointer.  */\n+  const char * ptr_name;\n   /* True iff this entry is for a stub (as opposed to a non-lazy\n      pointer).  */\n   bool stub_p;\n@@ -267,7 +267,7 @@ static hashval_t\n machopic_indirection_hash (const void *slot)\n {\n   const machopic_indirection *p = (const machopic_indirection *) slot;\n-  return IDENTIFIER_HASH_VALUE (p->ptr_name);\n+  return htab_hash_string (p->ptr_name);\n }\n \n /* Returns true if the KEY is the same as that associated with\n@@ -276,7 +276,7 @@ machopic_indirection_hash (const void *slot)\n static int\n machopic_indirection_eq (const void *slot, const void *key)\n {\n-  return ((const machopic_indirection *) slot)->ptr_name == (tree) key;\n+  return strcmp (((const machopic_indirection *) slot)->ptr_name, key) == 0;\n }\n \n /* Return the name of the non-lazy pointer (if STUB_P is false) or\n@@ -287,9 +287,9 @@ machopic_indirection_name (rtx sym_ref, bool stub_p)\n {\n   char *buffer;\n   const char *name = XSTR (sym_ref, 0);\n-  int namelen = strlen (name);\n-  tree ptr_name;\n+  size_t namelen = strlen (name);\n   machopic_indirection *p;\n+  void ** slot;\n   \n   /* Construct the name of the non-lazy pointer or stub.  */\n   if (stub_p)\n@@ -328,32 +328,29 @@ machopic_indirection_name (rtx sym_ref, bool stub_p)\n \t\t user_label_prefix, name);\n     }\n \n-  /* See if we already have it.  */\n-  ptr_name = maybe_get_identifier (buffer);\n-  /* If not, create a mapping from the non-lazy pointer to the\n-     SYMBOL_REF.  */\n-  if (!ptr_name)\n+  if (!machopic_indirections)\n+    machopic_indirections = htab_create_ggc (37, \n+\t\t\t\t\t     machopic_indirection_hash,\n+\t\t\t\t\t     machopic_indirection_eq,\n+\t\t\t\t\t     /*htab_del=*/NULL);\n+  \n+  slot = htab_find_slot_with_hash (machopic_indirections, buffer,\n+\t\t\t\t   htab_hash_string (buffer), INSERT);\n+  if (*slot)\n+    {\n+      p = (machopic_indirection *) *slot;\n+    }\n+  else\n     {\n-      void **slot;\n-      ptr_name = get_identifier (buffer);\n       p = (machopic_indirection *) ggc_alloc (sizeof (machopic_indirection));\n       p->symbol = sym_ref;\n-      p->ptr_name = ptr_name;\n+      p->ptr_name = xstrdup (buffer);\n       p->stub_p = stub_p;\n-      p->used = 0;\n-      if (!machopic_indirections)\n-\tmachopic_indirections \n-\t  = htab_create_ggc (37, \n-\t\t\t     machopic_indirection_hash,\n-\t\t\t     machopic_indirection_eq,\n-\t\t\t     /*htab_del=*/NULL);\n-      slot = htab_find_slot_with_hash (machopic_indirections, ptr_name,\n-\t\t\t\t       IDENTIFIER_HASH_VALUE (ptr_name),\n-\t\t\t\t       INSERT);\n-      *((machopic_indirection **) slot) = p;\n+      p->used = false;\n+      *slot = p;\n     }\n   \n-  return IDENTIFIER_POINTER (ptr_name);\n+  return p->ptr_name;\n }\n \n /* Return the name of the stub for the mcount function.  */\n@@ -373,18 +370,24 @@ machopic_mcount_stub_name (void)\n void\n machopic_validate_stub_or_non_lazy_ptr (const char *name)\n {\n-  tree ident = get_identifier (name);\n-\n   machopic_indirection *p;\n   \n   p = ((machopic_indirection *) \n-       (htab_find_with_hash (machopic_indirections, ident,\n-\t\t\t     IDENTIFIER_HASH_VALUE (ident))));\n-  if (p)\n+       (htab_find_with_hash (machopic_indirections, name,\n+\t\t\t     htab_hash_string (name))));\n+  if (p && ! p->used)\n     {\n-      p->used = 1;\n-      mark_referenced (ident);\n-      mark_referenced (get_identifier (XSTR (p->symbol, 0)));\n+      const char *real_name;\n+      tree id;\n+      \n+      p->used = true;\n+\n+      /* Do exactly what assemble_name will do when we actually call it.  */\n+      real_name = targetm.strip_name_encoding (name);\n+      \n+      id = maybe_get_identifier (real_name);\n+      if (id)\n+\tmark_referenced (id);\n     }\n }\n \n@@ -850,7 +853,7 @@ machopic_output_indirection (void **slot, void *data)\n \n   symbol = p->symbol;\n   sym_name = XSTR (symbol, 0);\n-  ptr_name = IDENTIFIER_POINTER (p->ptr_name);\n+  ptr_name = p->ptr_name;\n   \n   if (p->stub_p)\n     {"}, {"sha": "fcc81edd14a71200b13b04cfcd5acf3561ad5153", "filename": "gcc/config/t-darwin", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1adaa117728eb44d11776c676448d84b0a5c3111/gcc%2Fconfig%2Ft-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1adaa117728eb44d11776c676448d84b0a5c3111/gcc%2Fconfig%2Ft-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-darwin?ref=1adaa117728eb44d11776c676448d84b0a5c3111", "patch": "@@ -1,7 +1,7 @@\n darwin.o: $(srcdir)/config/darwin.c $(CONFIG_H) $(SYSTEM_H) coretypes.h     \\\n   $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h $(REAL_H) insn-config.h         \\\n   conditions.h insn-flags.h output.h insn-attr.h flags.h $(TREE_H) expr.h   \\\n-  reload.h function.h $(GGC_H) langhooks.h $(TM_P_H) gt-darwin.h\n+  reload.h function.h $(GGC_H) langhooks.h $(TARGET_H) $(TM_P_H) gt-darwin.h\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/darwin.c\n \n darwin-c.o: $(srcdir)/config/darwin-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\"}]}