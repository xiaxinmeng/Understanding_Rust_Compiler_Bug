{"sha": "81eab204a56dcd8acb1ca5d7df277437ca07b51a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFlYWIyMDRhNTZkY2Q4YWNiMWNhNWQ3ZGYyNzc0MzdjYTA3YjUxYQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-06-02T11:33:38Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-06-02T12:33:24Z"}, "message": "libstdc++: Fix tests for COW std::string [PR 96088]\n\nThe expected number of allocations is different when copying COW\nstrings.\n\nSigned-off-by: Jonathan Wakely <jwakely@redhat.com>\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/96088\n\t* testsuite/23_containers/unordered_map/96088.cc: Adjust\n\texpected number of allocations.\n\t* testsuite/23_containers/unordered_set/96088.cc: Likewise.", "tree": {"sha": "548f9292e7a6804f29c4d84c1264b6a4c4741d82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/548f9292e7a6804f29c4d84c1264b6a4c4741d82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81eab204a56dcd8acb1ca5d7df277437ca07b51a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81eab204a56dcd8acb1ca5d7df277437ca07b51a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81eab204a56dcd8acb1ca5d7df277437ca07b51a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81eab204a56dcd8acb1ca5d7df277437ca07b51a/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46d04271a4983b5430ed4830ab65ea26052176fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46d04271a4983b5430ed4830ab65ea26052176fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46d04271a4983b5430ed4830ab65ea26052176fb"}], "stats": {"total": 44, "additions": 30, "deletions": 14}, "files": [{"sha": "83ca1c0afd66baba4c84869825ce8af67b51b475", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/96088.cc", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81eab204a56dcd8acb1ca5d7df277437ca07b51a/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2F96088.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81eab204a56dcd8acb1ca5d7df277437ca07b51a/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2F96088.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2F96088.cc?ref=81eab204a56dcd8acb1ca5d7df277437ca07b51a", "patch": "@@ -222,7 +222,8 @@ test03()\n   std::vector<std::pair<std::string, int>> v;\n   v.insert(v.end(), lst.begin(), lst.end());\n \n-  auto __offset = __gnu_test::counter::count();\n+  const auto origin = __gnu_test::counter::count();\n+\n   {\n     __gnu_test::counter::reset();\n     std::unordered_map<std::string, int,\n@@ -231,15 +232,19 @@ test03()\n     um.insert(v.begin(), v.end());\n     VERIFY( um.size() == 1 );\n \n-    VERIFY( __gnu_test::counter::count() - __offset == 3 );\n-    VERIFY( __gnu_test::counter::get()._M_increments == 3 );\n+    // Allocate array of buckets, a node, and the std::string (unless COW).\n+    constexpr std::size_t increments = _GLIBCXX_USE_CXX11_ABI ? 3 : 2;\n+\n+    VERIFY( __gnu_test::counter::count() == origin + increments );\n+    VERIFY( __gnu_test::counter::get()._M_increments == increments );\n \n     um.insert(v.begin(), v.end());\n     VERIFY( um.size() == 1 );\n \n-    VERIFY( __gnu_test::counter::count() - __offset == 3 );\n-    VERIFY( __gnu_test::counter::get()._M_increments == 3 );\n+    VERIFY( __gnu_test::counter::count() == origin + increments );\n+    VERIFY( __gnu_test::counter::get()._M_increments == increments );\n   }\n+  VERIFY( __gnu_test::counter::count() == origin );\n \n   {\n     __gnu_test::counter::reset();\n@@ -250,8 +255,11 @@ test03()\n \t      std::make_move_iterator(v.end()));\n     VERIFY( um.size() == 1 );\n \n-    VERIFY( __gnu_test::counter::count() - __offset == 2 );\n-    VERIFY( __gnu_test::counter::get()._M_increments == 2 );\n+    // Allocate array of buckets and a node. String is moved.\n+    constexpr std::size_t increments = 2;\n+\n+    VERIFY( __gnu_test::counter::count() == origin + increments );\n+    VERIFY( __gnu_test::counter::get()._M_increments == increments );\n   }\n }\n "}, {"sha": "83d5475c6779fe542c98ceda78d246f9589cad2a", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/96088.cc", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81eab204a56dcd8acb1ca5d7df277437ca07b51a/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2F96088.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81eab204a56dcd8acb1ca5d7df277437ca07b51a/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2F96088.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2F96088.cc?ref=81eab204a56dcd8acb1ca5d7df277437ca07b51a", "patch": "@@ -223,7 +223,8 @@ test03()\n   std::vector<std::string> v;\n   v.insert(v.end(), lst.begin(), lst.end());\n \n-  auto __offset = __gnu_test::counter::count();\n+  const auto origin = __gnu_test::counter::count();\n+\n   {\n     __gnu_test::counter::reset();\n     std::unordered_set<std::string,\n@@ -232,15 +233,19 @@ test03()\n     us.insert(v.begin(), v.end());\n     VERIFY( us.size() == 1 );\n \n-    VERIFY( __gnu_test::counter::count() - __offset == 3 );\n-    VERIFY( __gnu_test::counter::get()._M_increments == 3 );\n+    // Allocate array of buckets, a node, and the std::string (unless COW).\n+    constexpr std::size_t increments = _GLIBCXX_USE_CXX11_ABI ? 3 : 2;\n+\n+    VERIFY( __gnu_test::counter::count() == origin + increments );\n+    VERIFY( __gnu_test::counter::get()._M_increments == increments );\n \n     us.insert(v.begin(), v.end());\n     VERIFY( us.size() == 1 );\n \n-    VERIFY( __gnu_test::counter::count() - __offset == 3 );\n-    VERIFY( __gnu_test::counter::get()._M_increments == 3 );\n+    VERIFY( __gnu_test::counter::count() == origin + increments );\n+    VERIFY( __gnu_test::counter::get()._M_increments == increments );\n   }\n+  VERIFY( __gnu_test::counter::count() == origin );\n \n   {\n     __gnu_test::counter::reset();\n@@ -251,8 +256,11 @@ test03()\n \t      std::make_move_iterator(v.end()));\n     VERIFY( us.size() == 1 );\n \n-    VERIFY( __gnu_test::counter::count() - __offset == 2 );\n-    VERIFY( __gnu_test::counter::get()._M_increments == 2 );\n+    // Allocate array of buckets and a node. String is moved.\n+    constexpr std::size_t increments = 2;\n+\n+    VERIFY( __gnu_test::counter::count() == origin + increments );\n+    VERIFY( __gnu_test::counter::get()._M_increments == increments );\n   }\n }\n "}]}