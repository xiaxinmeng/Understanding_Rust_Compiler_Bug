{"sha": "1361a4fbe10d119c76339f06992ac60de54f124d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM2MWE0ZmJlMTBkMTE5Yzc2MzM5ZjA2OTkyYWM2MGRlNTRmMTI0ZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-08-12T08:59:18Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-08-12T08:59:18Z"}, "message": "[Ada] Fix leak of Do_Range_Check flag in -gnatVa mode\n\nThis fixes a small glitch in Insert_Valid_Check, which needs to\npropagate the Do_Range_Check flag onto the rewritten expression, but\nuses its Original_Node as the source of the copy.  Now Original_Node\ndoes not necessarily point to the node that was just rewritten, but to\nthe ultimately original node, which is not the same node if the\nexpression was rewritten multiple times.  The end result is that a\nstalled Do_Range_Check flag can be wrongly resintated and leak to the\ncode generator.\n\n2019-08-12  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* checks.adb (Insert_Valid_Check): Do not retrieve the\n\tDo_Range_Check flag from the Original_Node but from the\n\tValidated_Object.  Remove useless bypass for floating-point\n\ttypes.\n\ngcc/testsuite/\n\n\t* gnat.dg/range_check7.adb: New testcase.\n\nFrom-SVN: r274285", "tree": {"sha": "a5e0312929d92335c340069f16d6098fbc1a2393", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5e0312929d92335c340069f16d6098fbc1a2393"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1361a4fbe10d119c76339f06992ac60de54f124d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1361a4fbe10d119c76339f06992ac60de54f124d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1361a4fbe10d119c76339f06992ac60de54f124d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1361a4fbe10d119c76339f06992ac60de54f124d/comments", "author": null, "committer": null, "parents": [{"sha": "935b02aea97d8d2aa40e65e908228c4666cb1803", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/935b02aea97d8d2aa40e65e908228c4666cb1803", "html_url": "https://github.com/Rust-GCC/gccrs/commit/935b02aea97d8d2aa40e65e908228c4666cb1803"}], "stats": {"total": 46, "additions": 38, "deletions": 8}, "files": [{"sha": "362efba5487fb4df65343dbb42b6dda134ee205c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1361a4fbe10d119c76339f06992ac60de54f124d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1361a4fbe10d119c76339f06992ac60de54f124d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1361a4fbe10d119c76339f06992ac60de54f124d", "patch": "@@ -1,3 +1,10 @@\n+2019-08-12  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* checks.adb (Insert_Valid_Check): Do not retrieve the\n+\tDo_Range_Check flag from the Original_Node but from the\n+\tValidated_Object.  Remove useless bypass for floating-point\n+\ttypes.\n+\n 2019-08-12  Yannick Moy  <moy@adacore.com>\n \n \t* sem_util.adb, sem_util.ads (Traverse_More_Func,"}, {"sha": "470ea3f2fb7eaa6990ba57a1661c67e48f67cd49", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1361a4fbe10d119c76339f06992ac60de54f124d/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1361a4fbe10d119c76339f06992ac60de54f124d/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=1361a4fbe10d119c76339f06992ac60de54f124d", "patch": "@@ -7589,17 +7589,14 @@ package body Checks is\n \n             Set_Validated_Object (Var_Id, New_Copy_Tree (Exp));\n \n-            --  Reset the Do_Range_Check flag so it doesn't leak elsewhere\n-\n-            Set_Do_Range_Check (Validated_Object (Var_Id), False);\n-\n             Rewrite (Exp, New_Occurrence_Of (Var_Id, Loc));\n \n-            --  Copy the Do_Range_Check flag over to the new Exp, so it doesn't\n-            --  get lost. Floating point types are handled elsewhere.\n+            --  Move the Do_Range_Check flag over to the new Exp so it doesn't\n+            --  get lost and doesn't leak elsewhere.\n \n-            if not Is_Floating_Point_Type (Typ) then\n-               Set_Do_Range_Check (Exp, Do_Range_Check (Original_Node (Exp)));\n+            if Do_Range_Check (Validated_Object (Var_Id)) then\n+               Set_Do_Range_Check (Exp);\n+               Set_Do_Range_Check (Validated_Object (Var_Id), False);\n             end if;\n \n             PV := New_Occurrence_Of (Var_Id, Loc);"}, {"sha": "ad20649db27a466712129dac62a476e164480fe8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1361a4fbe10d119c76339f06992ac60de54f124d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1361a4fbe10d119c76339f06992ac60de54f124d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1361a4fbe10d119c76339f06992ac60de54f124d", "patch": "@@ -1,3 +1,7 @@\n+2019-08-12  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/range_check7.adb: New testcase.\n+\n 2019-08-12  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/range_check6.adb: New testcase."}, {"sha": "def43c9a02926878846d1d2a0f400df81729e5cf", "filename": "gcc/testsuite/gnat.dg/range_check7.adb", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1361a4fbe10d119c76339f06992ac60de54f124d/gcc%2Ftestsuite%2Fgnat.dg%2Frange_check7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1361a4fbe10d119c76339f06992ac60de54f124d/gcc%2Ftestsuite%2Fgnat.dg%2Frange_check7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Frange_check7.adb?ref=1361a4fbe10d119c76339f06992ac60de54f124d", "patch": "@@ -0,0 +1,22 @@\n+--  { dg-do compile }\n+--  { dg-options \"-gnatVa\" }\n+\n+procedure Range_Check7 is\n+\n+  type Short is range -32768 .. 32767;\n+\n+  type Int is range -2 ** 31 .. 2 ** 31 - 1;\n+\n+  subtype Nat is Int range 0 .. Int'Last;\n+\n+  type Ptr is access all Short;\n+\n+  procedure Proc (P : Ptr) is\n+    N : constant Nat := Nat (P.all);\n+  begin\n+    null;\n+  end;\n+\n+begin\n+  null;\n+end;"}]}