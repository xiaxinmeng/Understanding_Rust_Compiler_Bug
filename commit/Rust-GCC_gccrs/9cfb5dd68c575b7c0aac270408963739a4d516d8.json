{"sha": "9cfb5dd68c575b7c0aac270408963739a4d516d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNmYjVkZDY4YzU3NWI3YzBhYWMyNzA0MDg5NjM3MzlhNGQ1MTZkOA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-01-10T18:42:16Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-01-10T18:42:16Z"}, "message": "(Makefile, stmp-fixinc, deduced.h, stmp-fixproto):\n\nExecute shell scripts with $(SHELL).\n\nFrom-SVN: r6364", "tree": {"sha": "d1efbf94d85ff907d8785c76eff67f3e395cab02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1efbf94d85ff907d8785c76eff67f3e395cab02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cfb5dd68c575b7c0aac270408963739a4d516d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cfb5dd68c575b7c0aac270408963739a4d516d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cfb5dd68c575b7c0aac270408963739a4d516d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cfb5dd68c575b7c0aac270408963739a4d516d8/comments", "author": null, "committer": null, "parents": [{"sha": "3f935c0b1d8fb2b84c5c6dc055fc233b4e022056", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f935c0b1d8fb2b84c5c6dc055fc233b4e022056", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f935c0b1d8fb2b84c5c6dc055fc233b4e022056"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "a451abf7db435063886a815c8fb1c99a30400287", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cfb5dd68c575b7c0aac270408963739a4d516d8/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cfb5dd68c575b7c0aac270408963739a4d516d8/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=9cfb5dd68c575b7c0aac270408963739a4d516d8", "patch": "@@ -487,7 +487,7 @@ BYTECODE_H = bytecode.h bc-emit.h bc-optab.h\n \n Makefile: $(srcdir)/Makefile.in $(srcdir)/configure $(srcdir)/version.c \\\n    $(srcdir)/config/$(xmake_file) $(srcdir)/config/$(tmake_file)\n-\tsh config.status\n+\t$(SHELL) config.status\n \n all.internal: start.encap rest.encap\n # This is what to compile if making a cross-compiler.\n@@ -1543,7 +1543,7 @@ stmp-fixinc: $(srcdir)/$(FIXINCLUDES) gsyslimits.h fixinc.ready\n \t  for dir in $(SYSTEM_HEADER_DIR) $(OTHER_FIXINCLUDES_DIRS); do \\\n \t    if [ -d $$dir ]; \\\n \t    then \\\n-\t      $(srcdir)/$(FIXINCLUDES) include $$dir $(srcdir) \"`pwd`/xgcc -B`pwd`/\"; \\\n+\t      $(SHELL) $(srcdir)/$(FIXINCLUDES) include $$dir $(srcdir) \"`pwd`/xgcc -B`pwd`/\"; \\\n \t    else true; fi; \\\n \t  done; \\\n \telse true; \\\n@@ -1575,7 +1575,7 @@ objc-headers: stmp-fixinc\n deduced.h: $(GCC_PASSES) $(srcdir)/scan-types.sh stmp-int-hdrs\n \tCC=\"$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ALL_CPPFLAGS) -I. -I$(srcdir) -Iinclude -I${SYSTEM_HEADER_DIR}\"; \\\n \t  export CC; \\\n-\t  $(srcdir)/scan-types.sh \"$(srcdir)\" >tmp-deduced.h\n+\t  $(SHELL) $(srcdir)/scan-types.sh \"$(srcdir)\" >tmp-deduced.h\n \tmv tmp-deduced.h deduced.h\n \n gen-protos: gen-protos.o scan.o $(HOST_LIBDEPS)\n@@ -1625,7 +1625,7 @@ stmp-fixproto: fixhdr.ready fixproto stmp-headers\n \tif [ -f include/fixed ] ; then true; \\\n \telse \\\n \t  CPP=\"$(GCC_FOR_TARGET) -E\"; export CPP; \\\n-\t    ${srcdir}/fixproto include include $(SYSTEM_HEADER_DIR); \\\n+\t    $(SHELL) ${srcdir}/fixproto include include $(SYSTEM_HEADER_DIR); \\\n \t  touch include/fixed; \\\n \tfi\n \ttouch stmp-fixproto"}]}