{"sha": "5394314855439d86e5bb52ef07713472e2fee0dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM5NDMxNDg1NTQzOWQ4NmU1YmI1MmVmMDc3MTM0NzJlMmZlZTBkYw==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2015-11-15T00:17:51Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2015-11-15T00:17:51Z"}, "message": "remove conditional compilation of sdb debug info\n\ngcc/ChangeLog:\n\n2015-11-14  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* defaults.h: New definition of SDB_DEBUGGING_INFO.\n\t* doc/tm.texi: Regenerate.\n\t* doc/tm.texi.in: Adjust.\n\t* final.c (rest_of_clean_state): Remove check if\n\tSDB_DEBUGGING_INFO is defined.\n\t* function.c (number_blocks): Likewise.\n\t* output.h: Likewise.\n\t* sdbout.c: Likewise.\n\t* toplev.c (process_options): Likewise.\n\nFrom-SVN: r230390", "tree": {"sha": "6e75389db96858652650dbbfda5630f66f3e0bde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e75389db96858652650dbbfda5630f66f3e0bde"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5394314855439d86e5bb52ef07713472e2fee0dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5394314855439d86e5bb52ef07713472e2fee0dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5394314855439d86e5bb52ef07713472e2fee0dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5394314855439d86e5bb52ef07713472e2fee0dc/comments", "author": null, "committer": null, "parents": [{"sha": "d36402d9f0e6928949f9da8273859fdc5fe7b286", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d36402d9f0e6928949f9da8273859fdc5fe7b286", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d36402d9f0e6928949f9da8273859fdc5fe7b286"}], "stats": {"total": 46, "additions": 24, "deletions": 22}, "files": [{"sha": "3ac6d3f6382077de967af44affe39c0b9ab733c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5394314855439d86e5bb52ef07713472e2fee0dc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5394314855439d86e5bb52ef07713472e2fee0dc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5394314855439d86e5bb52ef07713472e2fee0dc", "patch": "@@ -1,3 +1,15 @@\n+2015-11-14  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* defaults.h: New definition of SDB_DEBUGGING_INFO.\n+\t* doc/tm.texi: Regenerate.\n+\t* doc/tm.texi.in: Adjust.\n+\t* final.c (rest_of_clean_state): Remove check if\n+\tSDB_DEBUGGING_INFO is defined.\n+\t* function.c (number_blocks): Likewise.\n+\t* output.h: Likewise.\n+\t* sdbout.c: Likewise.\n+\t* toplev.c (process_options): Likewise.\n+\n 2015-11-14  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* gsyms.h (enum sdb_type): Remove code for"}, {"sha": "ddda89a7e1481fd0a5db4e97778c68080384026e", "filename": "gcc/defaults.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5394314855439d86e5bb52ef07713472e2fee0dc/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5394314855439d86e5bb52ef07713472e2fee0dc/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=5394314855439d86e5bb52ef07713472e2fee0dc", "patch": "@@ -914,10 +914,14 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define DEFAULT_GDB_EXTENSIONS 1\n #endif\n \n+#ifndef SDB_DEBUGGING_INFO\n+#define SDB_DEBUGGING_INFO 0\n+#endif\n+\n /* If more than one debugging type is supported, you must define\n    PREFERRED_DEBUGGING_TYPE to choose the default.  */\n \n-#if 1 < (defined (DBX_DEBUGGING_INFO) + defined (SDB_DEBUGGING_INFO) \\\n+#if 1 < (defined (DBX_DEBUGGING_INFO) + (SDB_DEBUGGING_INFO) \\\n          + defined (DWARF2_DEBUGGING_INFO) + defined (XCOFF_DEBUGGING_INFO) \\\n          + defined (VMS_DEBUGGING_INFO))\n #ifndef PREFERRED_DEBUGGING_TYPE\n@@ -929,7 +933,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #elif defined DBX_DEBUGGING_INFO\n #define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n \n-#elif defined SDB_DEBUGGING_INFO\n+#elif SDB_DEBUGGING_INFO\n #define PREFERRED_DEBUGGING_TYPE SDB_DEBUG\n \n #elif defined DWARF2_DEBUGGING_INFO || defined DWARF2_LINENO_DEBUGGING_INFO"}, {"sha": "1a7760a490047e8f16736b9915d917104a035ed0", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5394314855439d86e5bb52ef07713472e2fee0dc/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5394314855439d86e5bb52ef07713472e2fee0dc/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=5394314855439d86e5bb52ef07713472e2fee0dc", "patch": "@@ -9572,7 +9572,7 @@ whose value is the highest absolute text address in the file.\n Here are macros for SDB and DWARF output.\n \n @defmac SDB_DEBUGGING_INFO\n-Define this macro if GCC should produce COFF-style debugging output\n+Define this macro to 1 if GCC should produce COFF-style debugging output\n for SDB in response to the @option{-g} option.\n @end defmac\n "}, {"sha": "34105c929c5e2e9fc87ecf2ed9aae476c2849b43", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5394314855439d86e5bb52ef07713472e2fee0dc/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5394314855439d86e5bb52ef07713472e2fee0dc/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=5394314855439d86e5bb52ef07713472e2fee0dc", "patch": "@@ -6997,7 +6997,7 @@ whose value is the highest absolute text address in the file.\n Here are macros for SDB and DWARF output.\n \n @defmac SDB_DEBUGGING_INFO\n-Define this macro if GCC should produce COFF-style debugging output\n+Define this macro to 1 if GCC should produce COFF-style debugging output\n for SDB in response to the @option{-g} option.\n @end defmac\n "}, {"sha": "2f57b1bc3f1bdc84e701971b153169a6ceca3778", "filename": "gcc/final.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5394314855439d86e5bb52ef07713472e2fee0dc/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5394314855439d86e5bb52ef07713472e2fee0dc/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=5394314855439d86e5bb52ef07713472e2fee0dc", "patch": "@@ -88,9 +88,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"dbxout.h\"\n #endif\n \n-#ifdef SDB_DEBUGGING_INFO\n #include \"sdbout.h\"\n-#endif\n \n /* Most ports that aren't using cc0 don't need to define CC_STATUS_INIT.\n    So define a null default for it to save conditionalization later.  */\n@@ -4644,10 +4642,8 @@ rest_of_clean_state (void)\n   /* In case the function was not output,\n      don't leave any temporary anonymous types\n      queued up for sdb output.  */\n-#ifdef SDB_DEBUGGING_INFO\n-  if (write_symbols == SDB_DEBUG)\n+  if (SDB_DEBUGGING_INFO && write_symbols == SDB_DEBUG)\n     sdbout_types (NULL_TREE);\n-#endif\n \n   flag_rerun_cse_after_global_opts = 0;\n   reload_completed = 0;"}, {"sha": "afc2c87dbcc1fd4dd62938cfc2289077ea75e417", "filename": "gcc/function.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5394314855439d86e5bb52ef07713472e2fee0dc/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5394314855439d86e5bb52ef07713472e2fee0dc/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=5394314855439d86e5bb52ef07713472e2fee0dc", "patch": "@@ -4671,7 +4671,7 @@ number_blocks (tree fn)\n   /* For SDB and XCOFF debugging output, we start numbering the blocks\n      from 1 within each function, rather than keeping a running\n      count.  */\n-#if defined (SDB_DEBUGGING_INFO) || defined (XCOFF_DEBUGGING_INFO)\n+#if SDB_DEBUGGING_INFO || defined (XCOFF_DEBUGGING_INFO)\n   if (write_symbols == SDB_DEBUG || write_symbols == XCOFF_DEBUG)\n     next_block_index = 1;\n #endif"}, {"sha": "d485cd6155e511d91fe5ee7d7a3a7bffa706374b", "filename": "gcc/output.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5394314855439d86e5bb52ef07713472e2fee0dc/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5394314855439d86e5bb52ef07713472e2fee0dc/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=5394314855439d86e5bb52ef07713472e2fee0dc", "patch": "@@ -309,9 +309,7 @@ extern rtx_sequence *final_sequence;\n /* The line number of the beginning of the current function.  Various\n    md code needs this so that it can output relative linenumbers.  */\n \n-#ifdef SDB_DEBUGGING_INFO /* Avoid undef sym in certain broken linkers.  */\n extern int sdb_begin_function_line;\n-#endif\n \n /* File in which assembler code is being written.  */\n "}, {"sha": "f22bc7cd087b9352f295afb01266386e429f4c85", "filename": "gcc/sdbout.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5394314855439d86e5bb52ef07713472e2fee0dc/gcc%2Fsdbout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5394314855439d86e5bb52ef07713472e2fee0dc/gcc%2Fsdbout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.c?ref=5394314855439d86e5bb52ef07713472e2fee0dc", "patch": "@@ -42,6 +42,7 @@ AT&T C compiler.  From the example below I would conclude the following:\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"gsyms.h\"\n #include \"tm.h\"\n #include \"debug.h\"\n #include \"tree.h\"\n@@ -65,8 +66,6 @@ static GTY(()) vec<tree, va_gc> *deferred_global_decls;\n static GTY(()) tree preinit_symbols;\n static GTY(()) bool sdbout_initialized;\n \n-#ifdef SDB_DEBUGGING_INFO\n-\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"flags.h\"\n@@ -75,7 +74,6 @@ static GTY(()) bool sdbout_initialized;\n #include \"output.h\"\n #include \"diagnostic-core.h\"\n #include \"tm_p.h\"\n-#include \"gsyms.h\"\n #include \"langhooks.h\"\n #include \"target.h\"\n \n@@ -1648,6 +1646,4 @@ sdbout_init (const char *input_file_name ATTRIBUTE_UNUSED)\n   preinit_symbols = 0;\n }\n \n-#endif /* SDB_DEBUGGING_INFO */\n-\n #include \"gt-sdbout.h\""}, {"sha": "5aade2fb739261d0102e7912314af2f7c0168f75", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5394314855439d86e5bb52ef07713472e2fee0dc/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5394314855439d86e5bb52ef07713472e2fee0dc/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=5394314855439d86e5bb52ef07713472e2fee0dc", "patch": "@@ -80,9 +80,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"dbxout.h\"\n #endif\n \n-#ifdef SDB_DEBUGGING_INFO\n #include \"sdbout.h\"\n-#endif\n \n #ifdef XCOFF_DEBUGGING_INFO\n #include \"xcoffout.h\"\t\t/* Needed for external data declarations. */\n@@ -1379,10 +1377,8 @@ process_options (void)\n   else if (write_symbols == XCOFF_DEBUG)\n     debug_hooks = &xcoff_debug_hooks;\n #endif\n-#ifdef SDB_DEBUGGING_INFO\n-  else if (write_symbols == SDB_DEBUG)\n+  else if (SDB_DEBUGGING_INFO && write_symbols == SDB_DEBUG)\n     debug_hooks = &sdb_debug_hooks;\n-#endif\n #ifdef DWARF2_DEBUGGING_INFO\n   else if (write_symbols == DWARF2_DEBUG)\n     debug_hooks = &dwarf2_debug_hooks;"}]}