{"sha": "bb5d50b59947bc193c859c26eb982d04cee301ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI1ZDUwYjU5OTQ3YmMxOTNjODU5YzI2ZWI5ODJkMDRjZWUzMDFhYg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-08-25T12:27:48Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-08-25T12:27:48Z"}, "message": "class.c (method_name_cmp, [...]): Method names can never be NULL.\n\n\t* class.c (method_name_cmp, resort_method_name_cmp): Method names\n\tcan never be NULL.\n\nFrom-SVN: r251350", "tree": {"sha": "8d34bb3f4a9876aed7c7a79be34ee73935a72f27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d34bb3f4a9876aed7c7a79be34ee73935a72f27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb5d50b59947bc193c859c26eb982d04cee301ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb5d50b59947bc193c859c26eb982d04cee301ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb5d50b59947bc193c859c26eb982d04cee301ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb5d50b59947bc193c859c26eb982d04cee301ab/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e2da9ffe3c90b3a460b5fbbea7ee3aa7941882d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2da9ffe3c90b3a460b5fbbea7ee3aa7941882d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2da9ffe3c90b3a460b5fbbea7ee3aa7941882d1"}], "stats": {"total": 28, "additions": 9, "deletions": 19}, "files": [{"sha": "b9e6441316a73860b3d4932427be1c2680cb80b5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb5d50b59947bc193c859c26eb982d04cee301ab/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb5d50b59947bc193c859c26eb982d04cee301ab/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bb5d50b59947bc193c859c26eb982d04cee301ab", "patch": "@@ -1,5 +1,8 @@\n 2017-08-25  Nathan Sidwell  <nathan@acm.org>\n \n+\t* class.c (method_name_cmp, resort_method_name_cmp): Method names\n+\tcan never be NULL.\n+\n \tConversion operators have a special name\n \t* cp-tree.h (CPTI_CONV_OP_MARKER, CPTI_CONV_OP_IDENTIFIER): New.\n \t(conv_op_marker, conv_op_identifier): New."}, {"sha": "4d7c76bdace7dd3ed36beb498d2f00c1b611ca55", "filename": "gcc/cp/class.c", "status": "modified", "additions": 6, "deletions": 19, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb5d50b59947bc193c859c26eb982d04cee301ab/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb5d50b59947bc193c859c26eb982d04cee301ab/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=bb5d50b59947bc193c859c26eb982d04cee301ab", "patch": "@@ -2263,12 +2263,6 @@ method_name_cmp (const void* m1_p, const void* m2_p)\n   const tree *const m1 = (const tree *) m1_p;\n   const tree *const m2 = (const tree *) m2_p;\n \n-  if (*m1 == NULL_TREE && *m2 == NULL_TREE)\n-    return 0;\n-  if (*m1 == NULL_TREE)\n-    return -1;\n-  if (*m2 == NULL_TREE)\n-    return 1;\n   if (OVL_NAME (*m1) < OVL_NAME (*m2))\n     return -1;\n   return 1;\n@@ -2282,20 +2276,13 @@ resort_method_name_cmp (const void* m1_p, const void* m2_p)\n {\n   const tree *const m1 = (const tree *) m1_p;\n   const tree *const m2 = (const tree *) m2_p;\n-  if (*m1 == NULL_TREE && *m2 == NULL_TREE)\n-    return 0;\n-  if (*m1 == NULL_TREE)\n+\n+  tree n1 = OVL_NAME (*m1);\n+  tree n2 = OVL_NAME (*m2);\n+  resort_data.new_value (&n1, resort_data.cookie);\n+  resort_data.new_value (&n2, resort_data.cookie);\n+  if (n1 < n2)\n     return -1;\n-  if (*m2 == NULL_TREE)\n-    return 1;\n-  {\n-    tree d1 = OVL_NAME (*m1);\n-    tree d2 = OVL_NAME (*m2);\n-    resort_data.new_value (&d1, resort_data.cookie);\n-    resort_data.new_value (&d2, resort_data.cookie);\n-    if (d1 < d2)\n-      return -1;\n-  }\n   return 1;\n }\n "}]}