{"sha": "f8cb417d6a4e2912d15a6d8bdffd1548cc649b49", "node_id": "C_kwDOANBUbNoAKGY4Y2I0MTdkNmE0ZTI5MTJkMTVhNmQ4YmRmZmQxNTQ4Y2M2NDliNDk", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-09-19T17:17:41Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-10-01T03:45:08Z"}, "message": "c++: cast split_nonconstant_init return val to void\n\nWe were already converting the result of expand_vec_init_expr to void; we\nneed to do the same for split_nonconstant_init.\n\nThe test that I noticed this with no longer fails without it.\n\ngcc/cp/ChangeLog:\n\n\t* cp-gimplify.cc (cp_genericize_init): Also convert the result of\n\tsplit_nonconstant_init to void.", "tree": {"sha": "9f63b93d9c9745588c5db4217ffabfe863938256", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f63b93d9c9745588c5db4217ffabfe863938256"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8cb417d6a4e2912d15a6d8bdffd1548cc649b49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8cb417d6a4e2912d15a6d8bdffd1548cc649b49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8cb417d6a4e2912d15a6d8bdffd1548cc649b49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8cb417d6a4e2912d15a6d8bdffd1548cc649b49/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa360fbf68b11e54017e8fa5b1bdb87ce7c19188", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa360fbf68b11e54017e8fa5b1bdb87ce7c19188", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa360fbf68b11e54017e8fa5b1bdb87ce7c19188"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "cca3b9fea33b164d0d2aa687466ffd0142e0fcb1", "filename": "gcc/cp/cp-gimplify.cc", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb417d6a4e2912d15a6d8bdffd1548cc649b49/gcc%2Fcp%2Fcp-gimplify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb417d6a4e2912d15a6d8bdffd1548cc649b49/gcc%2Fcp%2Fcp-gimplify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.cc?ref=f8cb417d6a4e2912d15a6d8bdffd1548cc649b49", "patch": "@@ -892,21 +892,26 @@ omp_cxx_notice_variable (struct cp_genericize_omp_taskreg *omp_ctx, tree decl)\n static void\n cp_genericize_init (tree *replace, tree from, tree to)\n {\n+  tree init = NULL_TREE;\n   if (TREE_CODE (from) == VEC_INIT_EXPR)\n-    {\n-      tree init = expand_vec_init_expr (to, from, tf_warning_or_error);\n-\n-      /* Make cp_gimplify_init_expr call replace_decl.  */\n-      *replace = fold_convert (void_type_node, init);\n-    }\n+    init = expand_vec_init_expr (to, from, tf_warning_or_error);\n   else if (flag_exceptions\n \t   && TREE_CODE (from) == CONSTRUCTOR\n \t   && TREE_SIDE_EFFECTS (from)\n \t   && TYPE_HAS_NONTRIVIAL_DESTRUCTOR (TREE_TYPE (from)))\n     {\n       to = cp_stabilize_reference (to);\n       replace_placeholders (from, to);\n-      *replace = split_nonconstant_init (to, from);\n+      init = split_nonconstant_init (to, from);\n+    }\n+\n+  if (init)\n+    {\n+      if (*replace == from)\n+\t/* Make cp_gimplify_init_expr call replace_decl on this\n+\t   TARGET_EXPR_INITIAL.  */\n+\tinit = fold_convert (void_type_node, init);\n+      *replace = init;\n     }\n }\n "}]}