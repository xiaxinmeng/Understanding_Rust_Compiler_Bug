{"sha": "b843bcb89519293404bb00d2ed09aae529b54d7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg0M2JjYjg5NTE5MjkzNDA0YmIwMGQyZWQwOWFhZTUyOWI1NGQ3Zg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-02-05T10:32:37Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-02-05T10:32:37Z"}, "message": "openmp: Avoid ICEs with declare simd; declare simd inbranch [PR93555]\n\nThe testcases ICE because when processing the declare simd inbranch,\nwe don't create the i == 0 clone as it already exists, which means\nclone_info->nargs is not adjusted, but we then rely on it being adjusted\nwhen trying other clones.\n\n2020-02-05  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/93555\n\t* omp-simd-clone.c (expand_simd_clones): If simd_clone_mangle or\n\tsimd_clone_create failed when i == 0, adjust clone->nargs by\n\tclone->inbranch.\n\n\t* c-c++-common/gomp/pr93555-1.c: New test.\n\t* c-c++-common/gomp/pr93555-2.c: New test.\n\t* gfortran.dg/gomp/pr93555.f90: New test.", "tree": {"sha": "bcc9c051915ffe04939c1c31d9460d9bcf97d08f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcc9c051915ffe04939c1c31d9460d9bcf97d08f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b843bcb89519293404bb00d2ed09aae529b54d7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b843bcb89519293404bb00d2ed09aae529b54d7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b843bcb89519293404bb00d2ed09aae529b54d7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b843bcb89519293404bb00d2ed09aae529b54d7f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27736735f6fcba464b90c3a9dff13b7e5c8bdc6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27736735f6fcba464b90c3a9dff13b7e5c8bdc6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27736735f6fcba464b90c3a9dff13b7e5c8bdc6e"}], "stats": {"total": 73, "additions": 70, "deletions": 3}, "files": [{"sha": "aec156eb7737f1f93e7ebe9333bce5932fa1dadc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b843bcb89519293404bb00d2ed09aae529b54d7f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b843bcb89519293404bb00d2ed09aae529b54d7f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b843bcb89519293404bb00d2ed09aae529b54d7f", "patch": "@@ -1,3 +1,10 @@\n+2020-02-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/93555\n+\t* omp-simd-clone.c (expand_simd_clones): If simd_clone_mangle or\n+\tsimd_clone_create failed when i == 0, adjust clone->nargs by\n+\tclone->inbranch.\n+\n 2020-02-05  Martin Liska  <mliska@suse.cz>\n \n \tPR c++/92717"}, {"sha": "71ff03412044406a9e3f804c64cc782a1d7d590a", "filename": "gcc/omp-simd-clone.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b843bcb89519293404bb00d2ed09aae529b54d7f/gcc%2Fomp-simd-clone.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b843bcb89519293404bb00d2ed09aae529b54d7f/gcc%2Fomp-simd-clone.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-simd-clone.c?ref=b843bcb89519293404bb00d2ed09aae529b54d7f", "patch": "@@ -1713,14 +1713,22 @@ expand_simd_clones (struct cgraph_node *node)\n \t     already.  */\n \t  tree id = simd_clone_mangle (node, clone);\n \t  if (id == NULL_TREE)\n-\t    continue;\n+\t    {\n+\t      if (i == 0)\n+\t\tclone->nargs += clone->inbranch;\n+\t      continue;\n+\t    }\n \n \t  /* Only when we are sure we want to create the clone actually\n \t     clone the function (or definitions) or create another\n \t     extern FUNCTION_DECL (for prototypes without definitions).  */\n \t  struct cgraph_node *n = simd_clone_create (node);\n \t  if (n == NULL)\n-\t    continue;\n+\t    {\n+\t      if (i == 0)\n+\t\tclone->nargs += clone->inbranch;\n+\t      continue;\n+\t    }\n \n \t  n->simdclone = clone;\n \t  clone->origin = node;"}, {"sha": "584b111cfd23cbc67318e26fffef21333363467b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b843bcb89519293404bb00d2ed09aae529b54d7f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b843bcb89519293404bb00d2ed09aae529b54d7f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b843bcb89519293404bb00d2ed09aae529b54d7f", "patch": "@@ -1,4 +1,11 @@\n-2020-02-05  Jun Ma <JunMa@linux.alibaba.com>\n+2020-02-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/93555\n+\t* c-c++-common/gomp/pr93555-1.c: New test.\n+\t* c-c++-common/gomp/pr93555-2.c: New test.\n+\t* gfortran.dg/gomp/pr93555.f90: New test.\n+\n+2020-02-05  Jun Ma  <JunMa@linux.alibaba.com>\n \n \t* g++.dg/coroutines/co-await-14-return-ref-to-auto.C: New test.\n "}, {"sha": "2eb76a2d9de0252967c3fd1b831218e5a373bd8c", "filename": "gcc/testsuite/c-c++-common/gomp/pr93555-1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b843bcb89519293404bb00d2ed09aae529b54d7f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr93555-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b843bcb89519293404bb00d2ed09aae529b54d7f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr93555-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr93555-1.c?ref=b843bcb89519293404bb00d2ed09aae529b54d7f", "patch": "@@ -0,0 +1,18 @@\n+/* PR middle-end/93555 */\n+/* { dg-do compile } */\n+\n+#pragma omp declare simd\n+#pragma omp declare simd inbranch\n+int\n+foo (int x)\n+{\n+  return x;\n+}\n+\n+#pragma omp declare simd inbranch\n+#pragma omp declare simd\n+int\n+bar (int x)\n+{\n+  return x;\n+}"}, {"sha": "091f5bd5ff1fe448f37f4f4daff6bd05c3be2f03", "filename": "gcc/testsuite/c-c++-common/gomp/pr93555-2.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b843bcb89519293404bb00d2ed09aae529b54d7f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr93555-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b843bcb89519293404bb00d2ed09aae529b54d7f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr93555-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr93555-2.c?ref=b843bcb89519293404bb00d2ed09aae529b54d7f", "patch": "@@ -0,0 +1,16 @@\n+/* PR middle-end/93555 */\n+/* { dg-do compile } */\n+\n+#pragma omp declare simd\n+#pragma omp declare simd inbranch\n+void\n+foo (void)\n+{\n+}\n+\n+#pragma omp declare simd inbranch\n+#pragma omp declare simd\n+void\n+bar (void)\n+{\n+}"}, {"sha": "4a97fee07a7e9e917ba1f10eb5ac1bc7115560ec", "filename": "gcc/testsuite/gfortran.dg/gomp/pr93555.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b843bcb89519293404bb00d2ed09aae529b54d7f/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr93555.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b843bcb89519293404bb00d2ed09aae529b54d7f/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr93555.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr93555.f90?ref=b843bcb89519293404bb00d2ed09aae529b54d7f", "patch": "@@ -0,0 +1,11 @@\n+! PR middle-end/93555\n+! { dg-do compile }\n+\n+subroutine foo\n+  !$omp declare simd(foo)\n+  !$omp declare simd(foo) inbranch\n+end\n+subroutine bar\n+  !$omp declare simd(bar) inbranch\n+  !$omp declare simd(bar)\n+end"}]}