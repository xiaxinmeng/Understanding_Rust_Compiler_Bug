{"sha": "4b03d946237dd6a6953dd1337043cd9eb8e7fbcb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIwM2Q5NDYyMzdkZDZhNjk1M2RkMTMzNzA0M2NkOWViOGU3ZmJjYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-18T11:04:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-18T11:04:34Z"}, "message": "[multiple changes]\n\n2014-07-18  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch7.adb: Minor reformatting.\n\n2014-07-18  Claire Dross  <dross@adacore.com>\n\n\t* sem_aux.ads (Get_Binary_Nkind): New function that returns\n\tthe Node_Kind value of an entity defining a binary operator.\n\t(Get_Unary_Nkind): New function that returns the Node_Kind value\n\tof an entity defining a unary operator.\n\n2014-07-18  Pascal Obry  <obry@adacore.com>\n\n\t* sysdep.c: comment update.\n\t* adaint.c (__gnat_fputwc): Use wchar_t on a limited set of\n\tplatforms where it is known to be supported.\n\n2014-07-18  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_dist.adb (Process_Remote_AST_Declaration): Need\n\tto set Fat_Type's Ekind in order to be able to use its\n\tCorresponding_Remote_Type attribute.\n\nFrom-SVN: r212815", "tree": {"sha": "1386817c0243f4f562148895d810773bea01a48e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1386817c0243f4f562148895d810773bea01a48e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b03d946237dd6a6953dd1337043cd9eb8e7fbcb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b03d946237dd6a6953dd1337043cd9eb8e7fbcb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b03d946237dd6a6953dd1337043cd9eb8e7fbcb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b03d946237dd6a6953dd1337043cd9eb8e7fbcb/comments", "author": null, "committer": null, "parents": [{"sha": "4ac2bbbd057159e44cbe8d035eb0b6fc536bc40c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ac2bbbd057159e44cbe8d035eb0b6fc536bc40c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ac2bbbd057159e44cbe8d035eb0b6fc536bc40c"}], "stats": {"total": 138, "additions": 127, "deletions": 11}, "files": [{"sha": "722aa7eeb71886e92becd663dd84d1b9df950b41", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b03d946237dd6a6953dd1337043cd9eb8e7fbcb/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b03d946237dd6a6953dd1337043cd9eb8e7fbcb/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4b03d946237dd6a6953dd1337043cd9eb8e7fbcb", "patch": "@@ -1,3 +1,26 @@\n+2014-07-18  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch7.adb: Minor reformatting.\n+\n+2014-07-18  Claire Dross  <dross@adacore.com>\n+\n+\t* sem_aux.ads (Get_Binary_Nkind): New function that returns\n+\tthe Node_Kind value of an entity defining a binary operator.\n+\t(Get_Unary_Nkind): New function that returns the Node_Kind value\n+\tof an entity defining a unary operator.\n+\n+2014-07-18  Pascal Obry  <obry@adacore.com>\n+\n+\t* sysdep.c: comment update.\n+\t* adaint.c (__gnat_fputwc): Use wchar_t on a limited set of\n+\tplatforms where it is known to be supported.\n+\n+2014-07-18  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_dist.adb (Process_Remote_AST_Declaration): Need\n+\tto set Fat_Type's Ekind in order to be able to use its\n+\tCorresponding_Remote_Type attribute.\n+\n 2014-07-18  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* einfo.adb Last_Aggregate_Assignment is now Node 30."}, {"sha": "81b2d147521c3d30e34e2a9c3c6c13f5a9ae7290", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b03d946237dd6a6953dd1337043cd9eb8e7fbcb/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b03d946237dd6a6953dd1337043cd9eb8e7fbcb/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=4b03d946237dd6a6953dd1337043cd9eb8e7fbcb", "patch": "@@ -229,9 +229,6 @@ extern unsigned int LIB$CALLG_64 (unsigned long long argument_list [],\n \n #else\n #include <utime.h>\n-#if ! defined (__vxworks)\n-#include <wchar.h>\n-#endif\n #endif\n \n #if defined (_WIN32)\n@@ -854,10 +851,19 @@ __gnat_rmdir (char *path)\n #endif\n }\n \n+#if defined (_WIN32) || defined (linux) || defined (sun) \\\n+  || defined (__FreeBSD__)\n+#define HAS_TARGET_WCHAR_T\n+#endif\n+\n+#ifdef HAS_TARGET_WCHAR_T\n+#include <wchar.h>\n+#endif\n+\n int\n __gnat_fputwc(int c, FILE *stream)\n {\n-#if ! defined (__vxworks)\n+#ifdef HAS_TARGET_WCHAR_T\n   return fputwc ((wchar_t)c, stream);\n #else\n   return fputc (c, stream);"}, {"sha": "748279b60b67b346861be24fdf4577619c7ba8e3", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b03d946237dd6a6953dd1337043cd9eb8e7fbcb/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b03d946237dd6a6953dd1337043cd9eb8e7fbcb/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=4b03d946237dd6a6953dd1337043cd9eb8e7fbcb", "patch": "@@ -2610,7 +2610,7 @@ package body Exp_Ch7 is\n              Label_Construct     => Label));\n \n          --  Create the associated jump with this object, generate:\n-         --\n+\n          --    when <counter> =>\n          --       goto L<counter>;\n \n@@ -2623,7 +2623,7 @@ package body Exp_Ch7 is\n                  Name => New_Occurrence_Of (Entity (Label_Id), Loc)))));\n \n          --  Insert the jump destination, generate:\n-         --\n+\n          --     <<L<counter>>>\n \n          Append_To (Finalizer_Stmts, Label);\n@@ -2742,7 +2742,7 @@ package body Exp_Ch7 is\n             --          Free (Ptr_Typ (Temp));\n             --       end;\n             --    end if;\n-            --\n+\n             --  The generated code effectively detaches the temporary from the\n             --  caller finalization master and deallocates the object. This is\n             --  disabled on .NET/JVM because pools are not supported."}, {"sha": "0344637dccc672078eaf55a596e476399d0249cb", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 66, "deletions": 1, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b03d946237dd6a6953dd1337043cd9eb8e7fbcb/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b03d946237dd6a6953dd1337043cd9eb8e7fbcb/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=4b03d946237dd6a6953dd1337043cd9eb8e7fbcb", "patch": "@@ -32,7 +32,6 @@\n \n with Atree;  use Atree;\n with Einfo;  use Einfo;\n-with Sinfo;  use Sinfo;\n with Snames; use Snames;\n with Stand;  use Stand;\n with Uintp;  use Uintp;\n@@ -435,6 +434,52 @@ package body Sem_Aux is\n       return Empty;\n    end First_Tag_Component;\n \n+   ---------------------\n+   -- Get_Binary_Nkind --\n+   ---------------------\n+\n+   function Get_Binary_Nkind (Op : Entity_Id) return Node_Kind is\n+      Name : constant String := Get_Name_String (Chars (Op));\n+   begin\n+      if Name = \"Oadd\" then\n+         return N_Op_Add;\n+      elsif Name = \"Oconcat\" then\n+         return N_Op_Concat;\n+      elsif Name = \"Oexpon\" then\n+         return N_Op_Expon;\n+      elsif Name = \"Osubtract\" then\n+         return N_Op_Subtract;\n+      elsif Name = \"Omod\" then\n+         return N_Op_Mod;\n+      elsif Name = \"Omultiply\" then\n+         return N_Op_Multiply;\n+      elsif Name = \"Odivide\" then\n+         return N_Op_Divide;\n+      elsif Name = \"Orem\" then\n+         return N_Op_Rem;\n+      elsif Name = \"Oand\" then\n+         return N_Op_And;\n+      elsif Name = \"Oeq\" then\n+         return N_Op_Eq;\n+      elsif Name = \"Oge\" then\n+         return N_Op_Ge;\n+      elsif Name = \"Ogt\" then\n+         return N_Op_Gt;\n+      elsif Name = \"Ole\" then\n+         return N_Op_Le;\n+      elsif Name = \"Olt\" then\n+         return N_Op_Lt;\n+      elsif Name = \"One\" then\n+         return N_Op_Ne;\n+      elsif Name = \"Oxor\" then\n+         return N_Op_Or;\n+      elsif Name = \"Oor\" then\n+         return N_Op_Xor;\n+      else\n+         raise Program_Error;\n+      end if;\n+   end Get_Binary_Nkind;\n+\n    ------------------\n    -- Get_Rep_Item --\n    ------------------\n@@ -602,6 +647,26 @@ package body Sem_Aux is\n       return Empty;\n    end Get_Rep_Pragma;\n \n+   ---------------------\n+   -- Get_Unary_Nkind --\n+   ---------------------\n+\n+   function Get_Unary_Nkind (Op : Entity_Id) return Node_Kind is\n+      Name : constant String := Get_Name_String (Chars (Op));\n+   begin\n+      if Name = \"Oabs\" then\n+         return N_Op_Abs;\n+      elsif Name = \"Osubtract\" then\n+         return N_Op_Minus;\n+      elsif Name = \"Onot\" then\n+         return N_Op_Not;\n+      elsif Name = \"Oadd\" then\n+         return N_Op_Plus;\n+      else\n+         raise Program_Error;\n+      end if;\n+   end Get_Unary_Nkind;\n+\n    ---------------------------------\n    -- Has_External_Tag_Rep_Clause --\n    ---------------------------------"}, {"sha": "4eaf1bfb3ce28eaacd90615e50b0a174f60b6027", "filename": "gcc/ada/sem_aux.ads", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b03d946237dd6a6953dd1337043cd9eb8e7fbcb/gcc%2Fada%2Fsem_aux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b03d946237dd6a6953dd1337043cd9eb8e7fbcb/gcc%2Fada%2Fsem_aux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.ads?ref=4b03d946237dd6a6953dd1337043cd9eb8e7fbcb", "patch": "@@ -42,6 +42,7 @@ with Alloc; use Alloc;\n with Namet; use Namet;\n with Table;\n with Types; use Types;\n+with Sinfo; use Sinfo;\n \n package Sem_Aux is\n \n@@ -384,4 +385,18 @@ package Sem_Aux is\n    --  Given an entity for a package or generic package, return corresponding\n    --  package specification. Simplifies handling of child units, and better\n    --  than the old idiom: Specification (Unit_Declaration_Node (Pack_Id)).\n+\n+   function Get_Binary_Nkind (Op : Entity_Id) return Node_Kind;\n+   --  Op must be an entity with an Ekind of E_Operator.\n+   --  This function returns the Nkind value that would\n+   --  be used to construct a binary operator node referencing\n+   --  this entity. It is an error to call this function\n+   --  if Ekind (Op) /= E_Operator.\n+\n+   function Get_Unary_Nkind (Op : Entity_Id) return Node_Kind;\n+   --  Op must be an entity with an Ekind of E_Operator.\n+   --  This function returns the Nkind value that would\n+   --  be used to construct a unary operator node referencing\n+   --  this entity. It is an error to call this function\n+   --  if Ekind (Op) /= E_Operator.\n end Sem_Aux;"}, {"sha": "5bb273bab2a8e661712f8bec74db6d181dc1f7e4", "filename": "gcc/ada/sem_dist.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b03d946237dd6a6953dd1337043cd9eb8e7fbcb/gcc%2Fada%2Fsem_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b03d946237dd6a6953dd1337043cd9eb8e7fbcb/gcc%2Fada%2Fsem_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dist.adb?ref=4b03d946237dd6a6953dd1337043cd9eb8e7fbcb", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -647,7 +647,14 @@ package body Sem_Dist is\n                           New_Occurrence_Of (RACW_Type, Loc)))))));\n \n       Set_Equivalent_Type (User_Type, Fat_Type);\n+\n+      --  Set Fat_Type's Etype early so that we can use its\n+      --  Corresponding_Remote_Type attribute, whose presence indicates that\n+      --  this is the record type used to implement a RAS.\n+\n+      Set_Ekind (Fat_Type, E_Record_Type);\n       Set_Corresponding_Remote_Type (Fat_Type, User_Type);\n+\n       Insert_After_And_Analyze (Subpkg_Body, Fat_Type_Decl);\n \n       --  The reason we suppress the initialization procedure is that we know"}, {"sha": "207ef60919ecdf467deff4bf40f7af91260af34c", "filename": "gcc/ada/sysdep.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b03d946237dd6a6953dd1337043cd9eb8e7fbcb/gcc%2Fada%2Fsysdep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b03d946237dd6a6953dd1337043cd9eb8e7fbcb/gcc%2Fada%2Fsysdep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsysdep.c?ref=4b03d946237dd6a6953dd1337043cd9eb8e7fbcb", "patch": "@@ -105,11 +105,11 @@ extern struct tm *localtime_r(const time_t *, struct tm *);\n    end-of-file.\n \n    The other target dependent declarations here are for the three functions\n-   __gnat_set_binary_mode, __gnat_set_text_mode and __gnat_set_wide_text_mode:\n+   __gnat_set_binary_mode, __gnat_set_text_mode and __gnat_set_mode:\n \n       void __gnat_set_binary_mode (int handle);\n       void __gnat_set_text_mode   (int handle);\n-      void __gnat_set_wide_text_mode   (int handle);\n+      void __gnat_set_mode        (int handle, int mode);\n \n    These functions have no effect in Unix (or similar systems where there is\n    no distinction between binary and text files), but in DOS (and similar"}]}