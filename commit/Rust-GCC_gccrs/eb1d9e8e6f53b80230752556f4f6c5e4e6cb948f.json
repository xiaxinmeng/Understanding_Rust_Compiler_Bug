{"sha": "eb1d9e8e6f53b80230752556f4f6c5e4e6cb948f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIxZDllOGU2ZjUzYjgwMjMwNzUyNTU2ZjRmNmM1ZTRlNmNiOTQ4Zg==", "commit": {"author": {"name": "Carl Love", "email": "cel@us.ibm.com", "date": "2018-05-09T19:21:24Z"}, "committer": {"name": "Carl Love", "email": "carll@gcc.gnu.org", "date": "2018-05-09T19:21:24Z"}, "message": "builtins-8-runnable.c: New builtin test file.\n\ngcc/testsuite/ChangeLog:\n\n2018-05-09 Carl Love  <cel@us.ibm.com>\n\t* gcc.target/powerpc/builtins-8-runnable.c: New builtin test file.\n\nFrom-SVN: r260090", "tree": {"sha": "d6598bce18fbc2bd95139d4c78b4b9800457deb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6598bce18fbc2bd95139d4c78b4b9800457deb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb1d9e8e6f53b80230752556f4f6c5e4e6cb948f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb1d9e8e6f53b80230752556f4f6c5e4e6cb948f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb1d9e8e6f53b80230752556f4f6c5e4e6cb948f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb1d9e8e6f53b80230752556f4f6c5e4e6cb948f/comments", "author": {"login": "carlelove", "id": 86435705, "node_id": "MDQ6VXNlcjg2NDM1NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/86435705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlelove", "html_url": "https://github.com/carlelove", "followers_url": "https://api.github.com/users/carlelove/followers", "following_url": "https://api.github.com/users/carlelove/following{/other_user}", "gists_url": "https://api.github.com/users/carlelove/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlelove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlelove/subscriptions", "organizations_url": "https://api.github.com/users/carlelove/orgs", "repos_url": "https://api.github.com/users/carlelove/repos", "events_url": "https://api.github.com/users/carlelove/events{/privacy}", "received_events_url": "https://api.github.com/users/carlelove/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9410d82460c08c22a47488c99d98550b3c9bba2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9410d82460c08c22a47488c99d98550b3c9bba2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9410d82460c08c22a47488c99d98550b3c9bba2d"}], "stats": {"total": 101, "additions": 101, "deletions": 0}, "files": [{"sha": "316415901a96ff7d6a04189215c7d3ca34fdc620", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1d9e8e6f53b80230752556f4f6c5e4e6cb948f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1d9e8e6f53b80230752556f4f6c5e4e6cb948f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eb1d9e8e6f53b80230752556f4f6c5e4e6cb948f", "patch": "@@ -1,3 +1,6 @@\n+2018-05-09 Carl Love  <cel@us.ibm.com>\n+\t* gcc.target/powerpc/builtins-8-runnable.c: New builtin test file.\n+\n 2018-05-09  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/85713"}, {"sha": "26b26d580846cf731c6306d83bbecd7303865c22", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-8-runnable.c", "status": "added", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1d9e8e6f53b80230752556f4f6c5e4e6cb948f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-8-runnable.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1d9e8e6f53b80230752556f4f6c5e4e6cb948f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-8-runnable.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-8-runnable.c?ref=eb1d9e8e6f53b80230752556f4f6c5e4e6cb948f", "patch": "@@ -0,0 +1,98 @@\n+/* { dg-do run { target { powerpc*-*-* && { p8vector_hw } } } } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } } */\n+/* { dg-options \"-mcpu=power8 -O2\" } */\n+\n+#include <stdint.h>\n+#include <stdio.h>\n+#include <math.h>\n+#include <altivec.h>\n+\n+#ifdef DEBUG\n+#include <stdio.h>\n+#endif\n+\n+void abort (void);\n+\n+int main()\n+  {\n+    int i;\n+    vector float f_arg1;\n+    vector double d_arg1;\n+   \n+    vector float vec_f_expected1, vec_f_result1, vec_f_error;\n+    vector double vec_d_expected1, vec_d_result1, vec_d_error;\n+  \n+    /* vec_expte: float args, result */\n+    f_arg1 = (vector float){1.0, 2.0, 3.0, 4.0};\n+    vec_f_expected1 = (vector float){2.0, 4.0, 8.0, 16.0};\n+\n+    vec_f_result1 = vec_expte (f_arg1);\n+\n+    for (i = 0; i < 4; i++)\n+      {\n+        if (vec_f_expected1[i] != vec_f_result1[i])\n+#ifdef DEBUG\n+           printf(\"ERROR vec_expte (f) result[%d]=%f != expected[%d]=%f\\n\",\n+\t\t  i, vec_f_result1[i],  i, vec_f_expected1[i]);\n+#else\n+        abort();\n+#endif\n+      }\n+\n+    /* vec_loge: float args, result */\n+    f_arg1 = (vector float){4.0, 8.0, 16.0, 64};\n+    vec_f_expected1 = (vector float){2.0, 3.0, 4.0, 6.0};\n+\n+    vec_f_result1 = vec_loge (f_arg1);\n+\n+    for (i = 0; i < 4; i++)\n+      {\n+        if (vec_f_expected1[i] != vec_f_result1[i])\n+#ifdef DEBUG\n+\t  printf(\"ERROR vec_loge (f) result[%d]=%f != expected[%d]=%f\\n\",\n+\t\t i, vec_f_result1[i],  i, vec_f_expected1[i]);\n+#else\n+          abort();\n+#endif\n+    }\n+\n+    /* vec_re: float args, result  (calculate approximate reciprocal)  */\n+    f_arg1 = (vector float){1.0, 5.0, 4.0, 8.0};\n+    vec_f_expected1 = (vector float){1.0, 0.2, 0.25, 0.125};\n+    vec_f_error = (vector float){1.0, 0.2, 0.25, 0.125};\n+\n+    vec_f_result1 = vec_re (f_arg1);\n+  \n+    for (i = 0; i < 4; i++)\n+      {\n+        vec_f_error[i] = fabs(vec_f_expected1[i] - vec_f_result1[i]);\n+  \n+        if (vec_f_error[i] >=  0.0001)\n+#ifdef DEBUG\n+           printf(\"ERROR vec_re (f) result[%d]=%f != expected[%d]=%f\\n\",\n+\t\t  i, vec_f_result1[i],  i, vec_f_expected1[i]);\n+#else\n+\tabort();\n+#endif\n+      }\n+\n+    /* vec_re: double args, result  (calculate approximate reciprocal)  */\n+    d_arg1 = (vector double){1.0, 8.0};\n+    vec_d_expected1 = (vector double){1.0, 0.125};\n+    vec_d_error = (vector double){1.0, 0.125};\n+\n+    vec_d_result1 = vec_re (d_arg1);\n+  \n+    for (i = 0; i < 2; i++)\n+      {\n+         vec_d_error[i] = fabs(vec_d_expected1[i] - vec_d_result1[i]);\n+  \n+         if (vec_d_error[i] >=  0.0001)\n+#ifdef DEBUG\n+           printf(\"ERROR vec_re (d) result[%d]=%f != expected[%d]=%f\\n\",\n+\t\t  i, vec_d_result1[i],  i, vec_d_expected1[i]);\n+#else\n+          abort();\n+#endif\n+      }\n+  }"}]}