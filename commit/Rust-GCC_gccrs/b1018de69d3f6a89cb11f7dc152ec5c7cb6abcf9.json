{"sha": "b1018de69d3f6a89cb11f7dc152ec5c7cb6abcf9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjEwMThkZTY5ZDNmNmE4OWNiMTFmN2RjMTUyZWM1YzdjYjZhYmNmOQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2001-06-10T00:34:45Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2001-06-10T00:34:45Z"}, "message": "invoke.texi (C Dialect Options): Document -aux-info.\n\n* doc/invoke.texi (C Dialect Options): Document -aux-info.\n(Debugging Options): Document -print-multi-directory and\n-print-multi-lib.\n* doc/gcc.1: Rebuilt.\n\nFrom-SVN: r43124", "tree": {"sha": "52548b37298cb377b356a3c1104acf7dc215ea1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52548b37298cb377b356a3c1104acf7dc215ea1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1018de69d3f6a89cb11f7dc152ec5c7cb6abcf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1018de69d3f6a89cb11f7dc152ec5c7cb6abcf9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1018de69d3f6a89cb11f7dc152ec5c7cb6abcf9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1018de69d3f6a89cb11f7dc152ec5c7cb6abcf9/comments", "author": null, "committer": null, "parents": [{"sha": "c47af4b7d361e0c56d92677b5c33be8b075bbf4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c47af4b7d361e0c56d92677b5c33be8b075bbf4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c47af4b7d361e0c56d92677b5c33be8b075bbf4e"}], "stats": {"total": 609, "additions": 333, "deletions": 276}, "files": [{"sha": "ca22a3112d0a530c17f879d1e8d8f1adeeebed3e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1018de69d3f6a89cb11f7dc152ec5c7cb6abcf9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1018de69d3f6a89cb11f7dc152ec5c7cb6abcf9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b1018de69d3f6a89cb11f7dc152ec5c7cb6abcf9", "patch": "@@ -1,3 +1,10 @@\n+2001-06-09  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* doc/invoke.texi (C Dialect Options): Document -aux-info.\n+\t(Debugging Options): Document -print-multi-directory and\n+\t-print-multi-lib.\n+\t* doc/gcc.1: Rebuilt.\n+\n 2001-06-09  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* toplev.c (independent_decode_option): Require `=' between"}, {"sha": "6f4442a6ab5e09862a14a9f593a6800223034efe", "filename": "gcc/doc/gcc.1", "status": "modified", "additions": 292, "deletions": 274, "changes": 566, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1018de69d3f6a89cb11f7dc152ec5c7cb6abcf9/gcc%2Fdoc%2Fgcc.1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1018de69d3f6a89cb11f7dc152ec5c7cb6abcf9/gcc%2Fdoc%2Fgcc.1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcc.1?ref=b1018de69d3f6a89cb11f7dc152ec5c7cb6abcf9", "patch": "@@ -1,5 +1,5 @@\n .\\\" Automatically generated by Pod::Man version 1.15\n-.\\\" Sun May 20 12:45:49 2001\n+.\\\" Sat Jun  9 21:33:22 2001\n .\\\"\n .\\\" Standard preamble:\n .\\\" ======================================================================\n@@ -138,7 +138,7 @@\n .\\\" ======================================================================\n .\\\"\n .IX Title \"GCC 1\"\n-.TH GCC 1 \"gcc-3.1\" \"2001-05-20\" \"GNU\"\n+.TH GCC 1 \"gcc-3.1\" \"2001-06-09\" \"GNU\"\n .UC\n .SH \"NAME\"\n gcc \\- \\s-1GNU\\s0 project C and \\*(C+ compiler\n@@ -200,7 +200,8 @@ in the following sections.\n \\&\\fB\\-v  \\-\\-target-help  \\-\\-help\\fR\n .Ip \"\\fIC Language Options\\fR\" 4\n .IX Item \"C Language Options\"\n-\\&\\fB\\-ansi  \\-std=\\fR\\fIstandard\\fR  \\fB\\-fno-asm  \\-fno-builtin \n+\\&\\fB\\-ansi  \\-std=\\fR\\fIstandard\\fR  \\fB\\-aux-info\\fR \\fIfilename\\fR \n+\\&\\fB\\-fno-asm  \\-fno-builtin \n \\&\\-fhosted  \\-ffreestanding \n \\&\\-trigraphs  \\-traditional  \\-traditional-cpp \n \\&\\-fallow-single-precision  \\-fcond-mismatch \n@@ -210,17 +211,18 @@ in the following sections.\n .Ip \"\\fI\\*(C+ Language Options\\fR\" 4\n .IX Item \" Language Options\"\n \\&\\fB\\-fno-access-control  \\-fcheck-new  \\-fconserve-space \n-\\&\\-fdollars-in-identifiers  \\-fno-elide-constructors \n+\\&\\-fno-const-strings  \\-fdollars-in-identifiers \n+\\&\\-fno-elide-constructors \n \\&\\-fno-enforce-eh-specs  \\-fexternal-templates \n \\&\\-falt-external-templates \n \\&\\-ffor-scope  \\-fno-for-scope  \\-fno-gnu-keywords  \\-fhonor-std \n-\\&\\-fhuge-objects  \\-fno-implicit-templates \n+\\&\\-fno-implicit-templates \n \\&\\-fno-implicit-inline-templates \n \\&\\-fno-implement-inlines  \\-fms-extensions \n-\\&\\-fno-operator-names \n+\\&\\-fno-nonansi-builtins  \\-fno-operator-names \n \\&\\-fno-optional-diags  \\-fpermissive \n-\\&\\-frepo  \\-fno-rtti \\-ftemplate-depth-\\fR\\fIn\\fR \n-\\&\\fB\\-fuse-cxa-atexit  \\-fvtable-thunks  \\-nostdinc++ \n+\\&\\-frepo  \\-fno-rtti  \\-fstats  \\-ftemplate-depth-\\fR\\fIn\\fR \n+\\&\\fB\\-fuse-cxa-atexit  \\-fvtable-gc  \\-fno-weak  \\-nostdinc++ \n \\&\\-fno-default-inline  \\-Wctor-dtor-privacy \n \\&\\-Wnon-virtual-dtor  \\-Wreorder \n \\&\\-Weffc++  \\-Wno-deprecated \n@@ -230,7 +232,7 @@ in the following sections.\n .Ip \"\\fIObjective-C Language Options\\fR\" 4\n .IX Item \"Objective-C Language Options\"\n \\&\\fB\\-fconstant-string-class=\\fR\\fIclass name\\fR \n-\\&\\fB\\-fgnu-runtime  \\-fnext-runtime  \\-gen-decls\n+\\&\\fB\\-fgnu-runtime  \\-fnext-runtime  \\-gen-decls \n \\&\\-Wno-protocol  \\-Wselector\\fR\n .Ip \"\\fILanguage Independent Options\\fR\" 4\n .IX Item \"Language Independent Options\"\n@@ -241,19 +243,19 @@ in the following sections.\n \\&\\fB\\-fsyntax-only  \\-pedantic  \\-pedantic-errors \n \\&\\-w  \\-W  \\-Wall  \\-Waggregate-return \n \\&\\-Wcast-align  \\-Wcast-qual  \\-Wchar-subscripts  \\-Wcomment \n-\\&\\-Wconversion  \\-Wdisabled-optimization \\-Werror \n+\\&\\-Wconversion  \\-Wdisabled-optimization  \\-Werror \n \\&\\-Wfloat-equal  \\-Wformat  \\-Wformat=2 \n-\\&\\-Wformat-nonliteral \\-Wformat-security \n-\\&\\-Wid-clash-\\fR\\fIlen\\fR  \\fB\\-Wimplicit \\-Wimplicit-int  \n+\\&\\-Wformat-nonliteral  \\-Wformat-security \n+\\&\\-Wimplicit  \\-Wimplicit-int  \n \\&\\-Wimplicit-function-declaration \n \\&\\-Werror-implicit-function-declaration \n \\&\\-Wimport  \\-Winline \n \\&\\-Wlarger-than-\\fR\\fIlen\\fR  \\fB\\-Wlong-long \n \\&\\-Wmain  \\-Wmissing-braces  \\-Wmissing-declarations \n \\&\\-Wmissing-format-attribute  \\-Wmissing-noreturn \n-\\&\\-Wmultichar  \\-Wno-format-extra-args \\-Wno-format-y2k \n+\\&\\-Wmultichar  \\-Wno-format-extra-args  \\-Wno-format-y2k \n \\&\\-Wno-import  \\-Wpacked  \\-Wpadded \n-\\&\\-Wparentheses \\-Wpointer-arith  \\-Wredundant-decls \n+\\&\\-Wparentheses  \\-Wpointer-arith  \\-Wredundant-decls \n \\&\\-Wreturn-type  \\-Wsequence-point  \\-Wshadow \n \\&\\-Wsign-compare  \\-Wswitch  \\-Wsystem-headers \n \\&\\-Wtrigraphs  \\-Wundef  \\-Wuninitialized \n@@ -262,17 +264,19 @@ in the following sections.\n \\&\\-Wunused-value  \\-Wunused-variable  \\-Wwrite-strings\\fR\n .Ip \"\\fIC-only Warning Options\\fR\" 4\n .IX Item \"C-only Warning Options\"\n-\\&\\fB\\-Wbad-function-cast \\-Wmissing-prototypes \\-Wnested-externs \n-\\&\\-Wstrict-prototypes \\-Wtraditional\\fR\n+\\&\\fB\\-Wbad-function-cast  \\-Wmissing-prototypes  \\-Wnested-externs \n+\\&\\-Wstrict-prototypes  \\-Wtraditional\\fR\n .Ip \"\\fIDebugging Options\\fR\" 4\n .IX Item \"Debugging Options\"\n \\&\\fB\\-a  \\-ax  \\-d\\fR\\fIletters\\fR  \\fB\\-dumpspecs  \\-dumpmachine  \\-dumpversion \n-\\&\\-fdump-unnumbered \\-fdump-translation-unit=\\fR\\fIfile\\fR \n-\\&\\fB\\-fdump-class-layout=\\fR\\fIfile\\fR  \\fB\\-fmem-report  \\-fpretend-float \n+\\&\\-fdump-unnumbered \\-fdump-translation-unit\\fR[\\fB-\\fR\\fIn\\fR] \\fB\\-fdump-class-hierarchy\\fR[\\fB-\\fR\\fIn\\fR] \n+\\&\\fB\\-fdump-ast-original\\fR[\\fB-\\fR\\fIn\\fR] \\fB\\-fdump-ast-optimized\\fR[\\fB-\\fR\\fIn\\fR] \n+\\&\\fB\\-fmem-report  \\-fpretend-float \n \\&\\-fprofile-arcs  \\-ftest-coverage  \\-ftime-report \n \\&\\-g  \\-g\\fR\\fIlevel\\fR  \\fB\\-gcoff  \\-gdwarf  \\-gdwarf-1  \\-gdwarf-1+  \\-gdwarf-2 \n \\&\\-ggdb  \\-gstabs  \\-gstabs+  \\-gxcoff  \\-gxcoff+ \n \\&\\-p  \\-pg  \\-print-file-name=\\fR\\fIlibrary\\fR  \\fB\\-print-libgcc-file-name \n+\\&\\-print-multi-directory  \\-print-multi-lib \n \\&\\-print-prog-name=\\fR\\fIprogram\\fR  \\fB\\-print-search-dirs  \\-Q \n \\&\\-save-temps  \\-time\\fR\n .Ip \"\\fIOptimization Options\\fR\" 4\n@@ -283,11 +287,12 @@ in the following sections.\n \\&\\-fcse-follow-jumps  \\-fcse-skip-blocks  \\-fdata-sections  \\-fdce \n \\&\\-fdelayed-branch  \\-fdelete-null-pointer-checks \n \\&\\-fexpensive-optimizations  \\-ffast-math  \\-ffloat-store \n-\\&\\-fforce-addr  \\-fforce-mem  \\-ffunction-sections  \\-fgcse  \\-fgcse-lm \\-fgcse-sm \n+\\&\\-fforce-addr  \\-fforce-mem  \\-ffunction-sections \n+\\&\\-fgcse  \\-fgcse-lm  \\-fgcse-sm \n \\&\\-finline-functions  \\-finline-limit=\\fR\\fIn\\fR  \\fB\\-fkeep-inline-functions \n \\&\\-fkeep-static-consts  \\-fmove-all-movables \n \\&\\-fno-default-inline  \\-fno-defer-pop \n-\\&\\-fno-function-cse   \\-fno-guess-branch-probability \n+\\&\\-fno-function-cse  \\-fno-guess-branch-probability \n \\&\\-fno-inline  \\-fno-math-errno  \\-fno-peephole \n \\&\\-funsafe-math-optimizations \\-fno-trapping-math \n \\&\\-fomit-frame-pointer  \\-foptimize-register-move \n@@ -308,7 +313,7 @@ in the following sections.\n \\&\\-idirafter\\fR \\fIdir\\fR \n \\&\\fB\\-include\\fR \\fIfile\\fR  \\fB\\-imacros\\fR \\fIfile\\fR \n \\&\\fB\\-iprefix\\fR \\fIfile\\fR  \\fB\\-iwithprefix\\fR \\fIdir\\fR \n-\\&\\fB\\-iwithprefixbefore\\fR \\fIdir\\fR  \\fB\\-isystem\\fR \\fIdir\\fR \\fB\\-isystem-c++\\fR \\fIdir\\fR \n+\\&\\fB\\-iwithprefixbefore\\fR \\fIdir\\fR  \\fB\\-isystem\\fR \\fIdir\\fR \n \\&\\fB\\-M  \\-MM  \\-MF  \\-MG  \\-MP  \\-MQ  \\-MT  \\-nostdinc  \\-P  \\-remap \n \\&\\-trigraphs  \\-undef  \\-U\\fR\\fImacro\\fR  \\fB\\-Wp,\\fR\\fIoption\\fR\n .Ip \"\\fIAssembler Option\\fR\" 4\n@@ -333,9 +338,9 @@ in the following sections.\n \\&\\fIM680x0 Options\\fR\n .Sp\n \\&\\fB\\-m68000  \\-m68020  \\-m68020\\-40  \\-m68020\\-60  \\-m68030  \\-m68040 \n-\\&\\-m68060  \\-mcpu32 \\-m5200  \\-m68881  \\-mbitfield  \\-mc68000  \\-mc68020   \n-\\&\\-mfpa \\-mnobitfield  \\-mrtd  \\-mshort  \\-msoft-float  \\-mpcrel \n-\\&\\-malign-int \\-mstrict-align\\fR\n+\\&\\-m68060  \\-mcpu32  \\-m5200  \\-m68881  \\-mbitfield  \\-mc68000  \\-mc68020   \n+\\&\\-mfpa  \\-mnobitfield  \\-mrtd  \\-mshort  \\-msoft-float  \\-mpcrel \n+\\&\\-malign-int  \\-mstrict-align\\fR\n .Sp\n \\&\\fIM68hc1x Options\\fR\n .Sp\n@@ -353,11 +358,11 @@ in the following sections.\n \\&\\fB\\-mcmodel=\\fR\\fIcode model\\fR \n \\&\\fB\\-m32  \\-m64 \n \\&\\-mapp-regs  \\-mbroken-saverestore  \\-mcypress \n-\\&\\-mepilogue \\-mfaster-structs \\-mflat \n+\\&\\-mepilogue  \\-mfaster-structs  \\-mflat \n \\&\\-mfpu  \\-mhard-float  \\-mhard-quad-float \n \\&\\-mimpure-text  \\-mlive-g0  \\-mno-app-regs \n-\\&\\-mno-epilogue \\-mno-faster-structs \\-mno-flat  \\-mno-fpu \n-\\&\\-mno-impure-text \\-mno-stack-bias  \\-mno-unaligned-doubles \n+\\&\\-mno-epilogue  \\-mno-faster-structs  \\-mno-flat  \\-mno-fpu \n+\\&\\-mno-impure-text  \\-mno-stack-bias  \\-mno-unaligned-doubles \n \\&\\-msoft-float  \\-msoft-quad-float  \\-msparclite  \\-mstack-bias \n \\&\\-msupersparc  \\-munaligned-doubles  \\-mv8\\fR\n .Sp\n@@ -379,37 +384,28 @@ in the following sections.\n .Sp\n \\&\\fI\\s-1ARM\\s0 Options\\fR\n .Sp\n-\\&\\fB\\-mapcs-frame \\-mno-apcs-frame \n-\\&\\-mapcs-26 \\-mapcs-32 \n-\\&\\-mapcs-stack-check \\-mno-apcs-stack-check \n-\\&\\-mapcs-float \\-mno-apcs-float \n-\\&\\-mapcs-reentrant \\-mno-apcs-reentrant \n-\\&\\-msched-prolog \\-mno-sched-prolog \n-\\&\\-mlittle-endian \\-mbig-endian \\-mwords-little-endian \n-\\&\\-malignment-traps \\-mno-alignment-traps \n-\\&\\-msoft-float \\-mhard-float \\-mfpe \n-\\&\\-mthumb-interwork \\-mno-thumb-interwork \n-\\&\\-mcpu= \\-march= \\-mfpe=  \n-\\&\\-mstructure-size-boundary= \n-\\&\\-mbsd \\-mxopen \\-mno-symrename \n+\\&\\fB\\-mapcs-frame  \\-mno-apcs-frame \n+\\&\\-mapcs-26  \\-mapcs-32 \n+\\&\\-mapcs-stack-check  \\-mno-apcs-stack-check \n+\\&\\-mapcs-float  \\-mno-apcs-float \n+\\&\\-mapcs-reentrant  \\-mno-apcs-reentrant \n+\\&\\-msched-prolog  \\-mno-sched-prolog \n+\\&\\-mlittle-endian  \\-mbig-endian  \\-mwords-little-endian \n+\\&\\-malignment-traps  \\-mno-alignment-traps \n+\\&\\-msoft-float  \\-mhard-float  \\-mfpe \n+\\&\\-mthumb-interwork  \\-mno-thumb-interwork \n+\\&\\-mcpu=\\fR\\fIname\\fR  \\fB\\-march=\\fR\\fIname\\fR  \\fB\\-mfpe=\\fR\\fIname\\fR  \n+\\&\\fB\\-mstructure-size-boundary=\\fR\\fIn\\fR \n+\\&\\fB\\-mbsd \\-mxopen  \\-mno-symrename \n \\&\\-mabort-on-noreturn \n-\\&\\-mlong-calls \\-mno-long-calls \n-\\&\\-mnop-fun-dllimport \\-mno-nop-fun-dllimport \n-\\&\\-msingle-pic-base \\-mno-single-pic-base \n-\\&\\-mpic-register=\\fR\n-.Sp\n-\\&\\fIThumb Options\\fR\n-.Sp\n-\\&\\fB\\-mtpcs-frame \\-mno-tpcs-frame \n-\\&\\-mtpcs-leaf-frame \\-mno-tpcs-leaf-frame \n-\\&\\-mlittle-endian  \\-mbig-endian \n-\\&\\-mthumb-interwork \\-mno-thumb-interwork \n-\\&\\-mstructure-size-boundary= \n-\\&\\-mnop-fun-dllimport \\-mno-nop-fun-dllimport \n-\\&\\-mcallee-super-interworking \\-mno-callee-super-interworking \n-\\&\\-mcaller-super-interworking \\-mno-caller-super-interworking \n-\\&\\-msingle-pic-base \\-mno-single-pic-base \n-\\&\\-mpic-register=\\fR\n+\\&\\-mlong-calls  \\-mno-long-calls \n+\\&\\-msingle-pic-base  \\-mno-single-pic-base \n+\\&\\-mpic-register=\\fR\\fIreg\\fR \n+\\&\\fB\\-mnop-fun-dllimport \n+\\&\\-mpoke-function-name \n+\\&\\-mthumb  \\-marm \n+\\&\\-mtpcs-frame  \\-mtpcs-leaf-frame \n+\\&\\-mcaller-super-interworking  \\-mcallee-super-interworking\\fR \n .Sp\n \\&\\fI\\s-1MN10200\\s0 Options\\fR\n .Sp\n@@ -470,43 +466,43 @@ in the following sections.\n .Sp\n \\&\\fI\\s-1MIPS\\s0 Options\\fR\n .Sp\n-\\&\\fB\\-mabicalls  \\-mcpu=\\fR\\fIcpu type\\fR\n+\\&\\fB\\-mabicalls  \\-mcpu=\\fR\\fIcpu type\\fR \n \\&\\fB\\-membedded-data  \\-muninit-const-in-rodata \n \\&\\-membedded-pic  \\-mfp32  \\-mfp64  \\-mgas  \\-mgp32  \\-mgp64 \n \\&\\-mgpopt  \\-mhalf-pic  \\-mhard-float  \\-mint64  \\-mips1 \n-\\&\\-mips2  \\-mips3 \\-mips4 \\-mlong64  \\-mlong32 \\-mlong-calls  \\-mmemcpy \n+\\&\\-mips2  \\-mips3  \\-mips4  \\-mlong64  \\-mlong32  \\-mlong-calls  \\-mmemcpy \n \\&\\-mmips-as  \\-mmips-tfile  \\-mno-abicalls \n-\\&\\-mno-embedded-data  \\-mno-uninit-const-in-rodata  \\-mno-embedded-pic \n-\\&\\-mno-gpopt  \\-mno-long-calls \n+\\&\\-mno-embedded-data  \\-mno-uninit-const-in-rodata \n+\\&\\-mno-embedded-pic  \\-mno-gpopt  \\-mno-long-calls \n \\&\\-mno-memcpy  \\-mno-mips-tfile  \\-mno-rnames  \\-mno-stats \n \\&\\-mrnames  \\-msoft-float \n \\&\\-m4650  \\-msingle-float  \\-mmad \n \\&\\-mstats  \\-EL  \\-EB  \\-G\\fR \\fInum\\fR  \\fB\\-nocpp \n-\\&\\-mabi=32 \\-mabi=n32 \\-mabi=64 \\-mabi=eabi \n-\\&\\-mfix7000 \\-mno-crt0\\fR\n+\\&\\-mabi=32  \\-mabi=n32  \\-mabi=64  \\-mabi=eabi \n+\\&\\-mfix7000  \\-mno-crt0\\fR\n .Sp\n \\&\\fIi386 Options\\fR\n .Sp\n-\\&\\fB\\-mcpu=\\fR\\fIcpu type\\fR \\fB\\-march=\\fR\\fIcpu type\\fR \n+\\&\\fB\\-mcpu=\\fR\\fIcpu type\\fR  \\fB\\-march=\\fR\\fIcpu type\\fR \n \\&\\fB\\-mintel-syntax \\-mieee-fp  \\-mno-fancy-math-387 \n \\&\\-mno-fp-ret-in-387  \\-msoft-float  \\-msvr3\\-shlib \n \\&\\-mno-wide-multiply  \\-mrtd  \\-malign-double \n \\&\\-mpreferred-stack-boundary=\\fR\\fInum\\fR \n-\\&\\fB\\-mthreads \\-mno-align-stringops \\-minline-all-stringops \n-\\&\\-mpush-args \\-maccumulate-outgoing-args \\-m128bit-long-double \n-\\&\\-m96bit-long-double \\-mregparm=\\fR\\fInum\\fR \\fB\\-momit-leaf-frame-pointer\\fR\n+\\&\\fB\\-mthreads  \\-mno-align-stringops  \\-minline-all-stringops \n+\\&\\-mpush-args  \\-maccumulate-outgoing-args  \\-m128bit-long-double \n+\\&\\-m96bit-long-double  \\-mregparm=\\fR\\fInum\\fR  \\fB\\-momit-leaf-frame-pointer\\fR\n .Sp\n \\&\\fI\\s-1HPPA\\s0 Options\\fR\n .Sp\n \\&\\fB\\-march=\\fR\\fIarchitecture type\\fR \n-\\&\\fB\\-mbig-switch  \\-mdisable-fpregs  \\-mdisable-indexing   \n-\\&\\-mfast-indirect-calls \\-mgas  \\-mjump-in-delay   \n+\\&\\fB\\-mbig-switch  \\-mdisable-fpregs  \\-mdisable-indexing \n+\\&\\-mfast-indirect-calls  \\-mgas  \\-mjump-in-delay \n \\&\\-mlong-load-store  \\-mno-big-switch  \\-mno-disable-fpregs \n \\&\\-mno-disable-indexing  \\-mno-fast-indirect-calls  \\-mno-gas \n-\\&\\-mno-jump-in-delay  \\-mno-long-load-store   \n+\\&\\-mno-jump-in-delay  \\-mno-long-load-store \n \\&\\-mno-portable-runtime  \\-mno-soft-float \n-\\&\\-mno-space-regs  \\-msoft-float  \\-mpa-risc-1\\-0   \n-\\&\\-mpa-risc-1\\-1  \\-mpa-risc-2\\-0 \\-mportable-runtime \n+\\&\\-mno-space-regs  \\-msoft-float  \\-mpa-risc-1\\-0 \n+\\&\\-mpa-risc-1\\-1  \\-mpa-risc-2\\-0  \\-mportable-runtime \n \\&\\-mschedule=\\fR\\fIcpu type\\fR  \\fB\\-mspace-regs\\fR\n .Sp\n \\&\\fIIntel 960 Options\\fR\n@@ -522,13 +518,13 @@ in the following sections.\n .Sp\n \\&\\fI\\s-1DEC\\s0 Alpha Options\\fR\n .Sp\n-\\&\\fB\\-mfp-regs  \\-mno-fp-regs \\-mno-soft-float  \\-msoft-float \n-\\&\\-malpha-as \\-mgas \n+\\&\\fB\\-mfp-regs  \\-mno-fp-regs  \\-mno-soft-float  \\-msoft-float \n+\\&\\-malpha-as  \\-mgas \n \\&\\-mieee  \\-mieee-with-inexact  \\-mieee-conformant \n \\&\\-mfp-trap-mode=\\fR\\fImode\\fR  \\fB\\-mfp-rounding-mode=\\fR\\fImode\\fR \n \\&\\fB\\-mtrap-precision=\\fR\\fImode\\fR  \\fB\\-mbuild-constants \n \\&\\-mcpu=\\fR\\fIcpu type\\fR \n-\\&\\fB\\-mbwx \\-mno-bwx \\-mcix \\-mno-cix \\-mmax \\-mno-max \n+\\&\\fB\\-mbwx  \\-mno-bwx  \\-mcix  \\-mno-cix  \\-mmax  \\-mno-max \n \\&\\-mmemory-latency=\\fR\\fItime\\fR\n .Sp\n \\&\\fIClipper Options\\fR\n@@ -537,7 +533,7 @@ in the following sections.\n .Sp\n \\&\\fIH8/300 Options\\fR\n .Sp\n-\\&\\fB\\-mrelax  \\-mh \\-ms \\-mint32  \\-malign-300\\fR\n+\\&\\fB\\-mrelax  \\-mh  \\-ms  \\-mint32  \\-malign-300\\fR\n .Sp\n \\&\\fI\\s-1SH\\s0 Options\\fR\n .Sp\n@@ -561,43 +557,44 @@ in the following sections.\n .Sp\n \\&\\fITMS320C3x/C4x Options\\fR\n .Sp\n-\\&\\fB\\-mcpu=\\fR\\fIcpu\\fR \\fB\\-mbig \\-msmall \\-mregparm \\-mmemparm \n-\\&\\-mfast-fix \\-mmpyi \\-mbk \\-mti \\-mdp-isr-reload \n-\\&\\-mrpts=\\fR\\fIcount\\fR  \\fB\\-mrptb \\-mdb \\-mloop-unsigned \n-\\&\\-mparallel-insns \\-mparallel-mpy \\-mpreserve-float\\fR\n+\\&\\fB\\-mcpu=\\fR\\fIcpu\\fR  \\fB\\-mbig  \\-msmall  \\-mregparm  \\-mmemparm \n+\\&\\-mfast-fix  \\-mmpyi  \\-mbk  \\-mti  \\-mdp-isr-reload \n+\\&\\-mrpts=\\fR\\fIcount\\fR  \\fB\\-mrptb  \\-mdb  \\-mloop-unsigned \n+\\&\\-mparallel-insns  \\-mparallel-mpy  \\-mpreserve-float\\fR\n .Sp\n \\&\\fIV850 Options\\fR\n .Sp\n-\\&\\fB\\-mlong-calls \\-mno-long-calls \\-mep \\-mno-ep \n-\\&\\-mprolog-function \\-mno-prolog-function \\-mspace \n-\\&\\-mtda=\\fR\\fIn\\fR \\fB\\-msda=\\fR\\fIn\\fR \\fB\\-mzda=\\fR\\fIn\\fR \n-\\&\\fB\\-mv850 \\-mbig-switch\\fR\n+\\&\\fB\\-mlong-calls  \\-mno-long-calls  \\-mep  \\-mno-ep \n+\\&\\-mprolog-function  \\-mno-prolog-function  \\-mspace \n+\\&\\-mtda=\\fR\\fIn\\fR  \\fB\\-msda=\\fR\\fIn\\fR  \\fB\\-mzda=\\fR\\fIn\\fR \n+\\&\\fB\\-mv850  \\-mbig-switch\\fR\n .Sp\n \\&\\fI\\s-1NS32K\\s0 Options\\fR\n .Sp\n-\\&\\fB\\-m32032 \\-m32332 \\-m32532 \\-m32081 \\-m32381 \\-mmult-add \\-mnomult-add \n-\\&\\-msoft-float \\-mrtd \\-mnortd \\-mregparam \\-mnoregparam \\-msb \\-mnosb \n-\\&\\-mbitfield \\-mnobitfield \\-mhimem \\-mnohimem\\fR\n+\\&\\fB\\-m32032  \\-m32332  \\-m32532  \\-m32081  \\-m32381 \n+\\&\\-mmult-add  \\-mnomult-add  \\-msoft-float  \\-mrtd  \\-mnortd \n+\\&\\-mregparam  \\-mnoregparam  \\-msb  \\-mnosb \n+\\&\\-mbitfield  \\-mnobitfield  \\-mhimem  \\-mnohimem\\fR\n .Sp\n \\&\\fI\\s-1AVR\\s0 Options\\fR\n .Sp\n-\\&\\fB\\-mmcu=\\fR\\fImcu\\fR \\fB\\-msize \\-minit-stack=\\fR\\fIn\\fR \\fB\\-mno-interrupts \n-\\&\\-mcall-prologues \\-mno-tablejump \\-mtiny-stack\\fR\n+\\&\\fB\\-mmcu=\\fR\\fImcu\\fR  \\fB\\-msize  \\-minit-stack=\\fR\\fIn\\fR  \\fB\\-mno-interrupts \n+\\&\\-mcall-prologues  \\-mno-tablejump  \\-mtiny-stack\\fR\n .Sp\n \\&\\fIMCore Options\\fR\n .Sp\n-\\&\\fB\\-mhardlit \\-mno-hardlit \\-mdiv \\-mno-div \\-mrelax-immediates  \n-\\&\\-mno-relax-immediates \\-mwide-bitfields \\-mno-wide-bitfields \n-\\&\\-m4byte-functions \\-mno-4byte-functions \\-mcallgraph-data \n-\\&\\-mno-callgraph-data \\-mslow-bytes \\-mno-slow-bytes \\-mno-lsim \n-\\&\\-mlittle-endian \\-mbig-endian \\-m210 \\-m340 \\-mstack-increment\\fR\n+\\&\\fB\\-mhardlit  \\-mno-hardlit  \\-mdiv  \\-mno-div  \\-mrelax-immediates \n+\\&\\-mno-relax-immediates  \\-mwide-bitfields  \\-mno-wide-bitfields \n+\\&\\-m4byte-functions  \\-mno-4byte-functions  \\-mcallgraph-data \n+\\&\\-mno-callgraph-data  \\-mslow-bytes  \\-mno-slow-bytes  \\-mno-lsim \n+\\&\\-mlittle-endian  \\-mbig-endian  \\-m210  \\-m340  \\-mstack-increment\\fR\n .Sp\n \\&\\fI\\s-1IA-64\\s0 Options\\fR\n .Sp\n-\\&\\fB\\-mbig-endian \\-mlittle-endian \\-mgnu-as \\-mgnu-ld \\-mno-pic \n-\\&\\-mvolatile-asm-stop \\-mb-step \\-mregister-names \\-mno-sdata \n-\\&\\-mconstant-gp \\-mauto-pic \\-minline-divide-min-latency \n-\\&\\-minline-divide-max-throughput \\-mno-dwarf2\\-asm \n+\\&\\fB\\-mbig-endian  \\-mlittle-endian  \\-mgnu-as  \\-mgnu-ld  \\-mno-pic \n+\\&\\-mvolatile-asm-stop  \\-mb-step  \\-mregister-names  \\-mno-sdata \n+\\&\\-mconstant-gp  \\-mauto-pic  \\-minline-divide-min-latency \n+\\&\\-minline-divide-max-throughput  \\-mno-dwarf2\\-asm \n \\&\\-mfixed-range=\\fR\\fIregister range\\fR\n .Ip \"\\fICode Generation Options\\fR\" 4\n .IX Item \"Code Generation Options\"\n@@ -608,12 +605,12 @@ in the following sections.\n \\&\\-fno-common  \\-fno-ident  \\-fno-gnu-linker \n \\&\\-fpcc-struct-return  \\-fpic  \\-fPIC \n \\&\\-freg-struct-return  \\-fshared-data  \\-fshort-enums \n-\\&\\-fshort-double  \\-fvolatile  \\-fvolatile-global \\-fvolatile-static \n+\\&\\-fshort-double  \\-fvolatile \n+\\&\\-fvolatile-global  \\-fvolatile-static \n \\&\\-fverbose-asm  \\-fpack-struct  \\-fstack-check \n \\&\\-fstack-limit-register=\\fR\\fIreg\\fR  \\fB\\-fstack-limit-symbol=\\fR\\fIsym\\fR \n \\&\\fB\\-fargument-alias  \\-fargument-noalias \n-\\&\\-fargument-noalias-global \n-\\&\\-fleading-underscore\\fR\n+\\&\\-fargument-noalias-global  \\-fleading-underscore\\fR\n .Sh \"Options Controlling the Kind of Output\"\n .IX Subsection \"Options Controlling the Kind of Output\"\n Compilation can involve up to four stages: preprocessing, compilation\n@@ -911,6 +908,21 @@ effects as \\fB\\-ansi\\fR, except that features that were not in \\s-1ISO\\s0 C89\n but are in the specified version (for example, \\fB//\\fR comments and\n the \\f(CW\\*(C`inline\\*(C'\\fR keyword in \\s-1ISO\\s0 C99) are not disabled.\n .RE\n+.Ip \"\\fB\\-aux-info\\fR \\fIfilename\\fR\" 4\n+.IX Item \"-aux-info filename\"\n+Output to the given filename prototyped declarations for all functions\n+declared and/or defined in a translation unit, including those in header\n+files.  This option is silently ignored in any language other than C.\n+.Sp\n+Besides declarations, the file indicates, in comments, the origin of\n+each declaration (source file and line), whether the declaration was\n+implicit, prototyped or unprototyped (\\fBI\\fR, \\fBN\\fR for new or\n+\\&\\fBO\\fR for old, respectively, in the first character after the line\n+number and the colon), and whether it came from a declaration or a\n+definition (\\fBC\\fR or \\fBF\\fR, respectively, in the following\n+character).  In the case of function definitions, a K&R-style list of\n+arguments followed by their declarations is also provided, inside\n+comments, after the declaration.\n .Ip \"\\fB\\-fno-asm\\fR\" 4\n .IX Item \"-fno-asm\"\n Do not recognize \\f(CW\\*(C`asm\\*(C'\\fR, \\f(CW\\*(C`inline\\*(C'\\fR or \\f(CW\\*(C`typeof\\*(C'\\fR as a\n@@ -936,6 +948,13 @@ may become inline copy loops.  The resulting code is often both smaller\n and faster, but since the function calls no longer appear as such, you\n cannot set a breakpoint on those calls, nor can you change the behavior\n of the functions by linking with a different library.\n+.Sp\n+In \\*(C+, \\fB\\-fno-builtin\\fR is always in effect.  The \\fB\\-fbuiltin\\fR\n+option has no effect.  Therefore, in \\*(C+, the only way to get the\n+optimization benefits of builtin functions is to call the function\n+using the \\fB_\\|_builtin_\\fR prefix.  The \\s-1GNU\\s0 \\*(C+ Standard Library uses\n+builtin functions to implement many functions (like\n+\\&\\f(CW\\*(C`std::strchr\\*(C'\\fR), so that you automatically get efficient code.\n .Ip \"\\fB\\-fhosted\\fR\" 4\n .IX Item \"-fhosted\"\n Assert that compilation takes place in a hosted environment.  This implies\n@@ -952,9 +971,8 @@ not necessarily be at \\f(CW\\*(C`main\\*(C'\\fR.  The most obvious example is an \\s\n This is equivalent to \\fB\\-fno-hosted\\fR.\n .Ip \"\\fB\\-trigraphs\\fR\" 4\n .IX Item \"-trigraphs\"\n-Support \\s-1ISO\\s0 C trigraphs.  You don't want to know about this\n-brain-damage.  The \\fB\\-ansi\\fR option (and \\fB\\-std\\fR options for\n-strict \\s-1ISO\\s0 C conformance) implies \\fB\\-trigraphs\\fR.\n+Support \\s-1ISO\\s0 C trigraphs.  The \\fB\\-ansi\\fR option (and \\fB\\-std\\fR\n+options for strict \\s-1ISO\\s0 C conformance) implies \\fB\\-trigraphs\\fR.\n .Ip \"\\fB\\-traditional\\fR\" 4\n .IX Item \"-traditional\"\n Attempt to support some aspects of traditional C compilers.\n@@ -1071,15 +1089,6 @@ Let the type \\f(CW\\*(C`char\\*(C'\\fR be signed, like \\f(CW\\*(C`signed char\\*(C'\\f\n Note that this is equivalent to \\fB\\-fno-unsigned-char\\fR, which is\n the negative form of \\fB\\-funsigned-char\\fR.  Likewise, the option\n \\&\\fB\\-fno-signed-char\\fR is equivalent to \\fB\\-funsigned-char\\fR.\n-.Sp\n-You may wish to use \\fB\\-fno-builtin\\fR as well as \\fB\\-traditional\\fR\n-if your program uses names that are normally \\s-1GNU\\s0 C builtin functions for\n-other purposes of its own.\n-.Sp\n-You cannot use \\fB\\-traditional\\fR if you include any header files that\n-rely on \\s-1ISO\\s0 C features.  Some vendors are starting to ship systems with\n-\\&\\s-1ISO\\s0 C header files and you cannot use \\fB\\-traditional\\fR on such\n-systems to compile files that include any system headers.\n .Ip \"\\fB\\-fsigned-bitfields\\fR\" 4\n .IX Item \"-fsigned-bitfields\"\n .PD 0\n@@ -1236,16 +1245,6 @@ it. For compatibility with earlier versions of g++, the compiler will,\n by default, ignore \\f(CW\\*(C`namespace\\-declarations\\*(C'\\fR,\n \\&\\f(CW\\*(C`using\\-declarations\\*(C'\\fR, \\f(CW\\*(C`using\\-directives\\*(C'\\fR, and\n \\&\\f(CW\\*(C`namespace\\-names\\*(C'\\fR, if they involve \\f(CW\\*(C`std\\*(C'\\fR.\n-.Ip \"\\fB\\-fhuge-objects\\fR\" 4\n-.IX Item \"-fhuge-objects\"\n-Support virtual function calls for objects that exceed the size\n-representable by a \\fBshort int\\fR.  Users should not use this flag by\n-default; if you need to use it, the compiler will tell you so.\n-.Sp\n-This flag is not useful when compiling with \\-fvtable-thunks.\n-.Sp\n-Like all options that change the \\s-1ABI\\s0, all \\*(C+ code, \\fIincluding\n-libgcc\\fR must be built with the same setting of this option.\n .Ip \"\\fB\\-fno-implicit-templates\\fR\" 4\n .IX Item \"-fno-implicit-templates\"\n Never emit code for non-inline templates which are instantiated\n@@ -1314,25 +1313,19 @@ Register destructors for objects with static storage duration with the\n This option is required for fully standards-compliant handling of static\n destructors, but will only work if your C library supports\n \\&\\f(CW\\*(C`_\\|_cxa_atexit\\*(C'\\fR.\n-.Ip \"\\fB\\-fvtable-thunks\\fR\" 4\n-.IX Item \"-fvtable-thunks\"\n-Use \\fBthunks\\fR to implement the virtual function dispatch table\n-(\\fBvtable\\fR).  The traditional (cfront-style) approach to\n-implementing vtables was to store a pointer to the function and two\n-offsets for adjusting the \\fBthis\\fR pointer at the call site.  Newer\n-implementations store a single pointer to a \\fBthunk\\fR function which\n-does any necessary adjustment and then calls the target function.\n-.Sp\n-This option also enables a heuristic for controlling emission of\n-vtables; if a class has any non-inline virtual functions, the vtable\n-will be emitted in the translation unit containing the first one of\n-those.\n-.Sp\n-Like all options that change the \\s-1ABI\\s0, all \\*(C+ code, \\fIincluding\n-libgcc.a\\fR must be built with the same setting of this option.\n+.Ip \"\\fB\\-fvtable-gc\\fR\" 4\n+.IX Item \"-fvtable-gc\"\n+Emit special relocations for vtables and virtual function references\n+so that the linker can identify unused virtual functions and zero out\n+vtable slots that refer to them.  This is most useful with\n+\\&\\fB\\-ffunction-sections\\fR and \\fB\\-Wl,\\-\\-gc-sections\\fR, in order to\n+also discard the functions themselves.\n+.Sp\n+This optimization requires \\s-1GNU\\s0 as and \\s-1GNU\\s0 ld.  Not all systems support\n+this option.  \\fB\\-Wl,\\-\\-gc-sections\\fR is ignored without \\fB\\-static\\fR.\n .Ip \"\\fB\\-fno-weak\\fR\" 4\n .IX Item \"-fno-weak\"\n-Do not use weak symbol support, even if it is provied by the linker.\n+Do not use weak symbol support, even if it is provided by the linker.\n By default, G++ will use weak symbols if they are available.  This\n option exists only for testing, and should not be used by end-users;\n it will result in inferior code and has no benefits.  This option may\n@@ -1405,7 +1398,8 @@ but disables the helpful warning.\n .IX Item \"-Wold-style-cast ( only)\"\n Warn if an old-style (C-style) cast is used within a \\*(C+ program.  The\n new-style casts (\\fBstatic_cast\\fR, \\fBreinterpret_cast\\fR, and\n-\\&\\fBconst_cast\\fR) are less vulnerable to unintended effects.\n+\\&\\fBconst_cast\\fR) are less vulnerable to unintended effects, and much\n+easier to grep for.\n .Ip \"\\fB\\-Woverloaded-virtual (\\*(C+ only)\\fR\" 4\n .IX Item \"-Woverloaded-virtual ( only)\"\n Warn when a function declaration hides virtual functions from a\n@@ -1774,15 +1768,9 @@ The present implementation of this option only works for C programs.  A\n future implementation may also work for \\*(C+ programs.\n .Sp\n There is some controversy over the precise meaning of the sequence point\n-rules in subtle cases.  Alternative formal definitions may be found in\n-Clive Feather's ``Annex S''\n-<\\fBhttp://wwwold.dkuug.dk/JTC1/SC22/WG14/www/docs/n925.htm\\fR> and in\n-Michael Norrish's thesis\n-<\\fBhttp://www.cl.cam.ac.uk/users/mn200/PhD/thesis-report.ps.gz\\fR>.\n-Other discussions are by Raymond Mak\n-<\\fBhttp://wwwold.dkuug.dk/JTC1/SC22/WG14/www/docs/n926.htm\\fR> and\n-D. Hugh Redelmeier\n-<\\fBhttp://wwwold.dkuug.dk/JTC1/SC22/WG14/www/docs/n927.htm\\fR>.\n+rules in subtle cases.  Links to papers with alternative formal definitions\n+and other related discussions may be found on our readings page\n+<\\fBhttp://gcc.gnu.org/readings.html\\fR>.\n .Ip \"\\fB\\-Wreturn-type\\fR\" 4\n .IX Item \"-Wreturn-type\"\n Warn whenever a function is defined with a return-type that defaults to\n@@ -2088,11 +2076,6 @@ Warn if an undefined identifier is evaluated in an \\fB#if\\fR directive.\n .IX Item \"-Wshadow\"\n Warn whenever a local variable shadows another local variable, parameter or\n global variable or whenever a built-in function is shadowed.\n-.Ip \"\\fB\\-Wid-clash-\\fR\\fIlen\\fR\" 4\n-.IX Item \"-Wid-clash-len\"\n-Warn whenever two distinct identifiers match in the first \\fIlen\\fR\n-characters.  This may help you prepare a program that will compile\n-with certain obsolete, brain-damaged compilers.\n .Ip \"\\fB\\-Wlarger-than-\\fR\\fIlen\\fR\" 4\n .IX Item \"-Wlarger-than-len\"\n Warn whenever an object of larger than \\fIlen\\fR bytes is defined.\n@@ -2677,18 +2660,63 @@ When doing debugging dumps (see \\-d option above), suppress instruction\n numbers and line number note output.  This makes it more feasible to\n use diff on debugging dumps for compiler invocations with different\n options, in particular with and without \\-g.\n-.Ip \"\\fB\\-fdump-translation-unit=\\fR\\fIfile\\fR \\fB(C and \\*(C+ only)\\fR\" 4\n-.IX Item \"-fdump-translation-unit=file (C and  only)\"\n-Dump a representation of the tree structure for the entire translation\n-unit to \\fIfile\\fR.\n-.Ip \"\\fB\\-fdump-class_layout=\\fR\\fIfile\\fR \\fB(\\*(C+ only)\\fR\" 4\n-.IX Item \"-fdump-class_layout=file ( only)\"\n+.Ip \"\\fB\\-fdump-translation-unit (C and \\*(C+ only)\\fR\" 4\n+.IX Item \"-fdump-translation-unit (C and  only)\"\n .PD 0\n-.Ip \"\\fB\\-fdump-class_layout (\\*(C+ only)\\fR\" 4\n-.IX Item \"-fdump-class_layout ( only)\"\n+.Ip \"\\fB\\-fdump-translation-unit-\\fR\\fInumber\\fR \\fB(C and \\*(C+ only)\\fR\" 4\n+.IX Item \"-fdump-translation-unit-number (C and  only)\"\n .PD\n-Dump a representation of each class's heirarchy to \\fIfile\\fR, or\n-\\&\\f(CW\\*(C`stderr\\*(C'\\fR if not specified.\n+Dump a representation of the tree structure for the entire translation\n+unit to a file. The file name is made by appending \\fI.tu\\fR to the\n+source file name. If the -\\fInumber\\fR form is used, \\fInumber\\fR\n+controls the details of the dump as described for the \\-fdump-tree options.\n+.Ip \"\\fB\\-fdump-class-hierarchy (\\*(C+ only)\\fR\" 4\n+.IX Item \"-fdump-class-hierarchy ( only)\"\n+.PD 0\n+.Ip \"\\fB\\-fdump-class-hierarchy-\\fR\\fInumber\\fR \\fB(\\*(C+ only)\\fR\" 4\n+.IX Item \"-fdump-class-hierarchy-number ( only)\"\n+.PD\n+Dump a representation of each class's hierarchy and virtual function\n+table layout to a file. The file name is made by appending \\fI.class\\fR\n+to the source file name. If the -\\fInumber\\fR form is used, \\fInumber\\fR\n+controls the details of the dump as described for the \\-fdump-tree\n+options.\n+.Ip \"\\fB\\-fdump-ast-\\fR\\fIswitch\\fR \\fB(\\*(C+ only)\\fR\" 4\n+.IX Item \"-fdump-ast-switch ( only)\"\n+.PD 0\n+.Ip \"\\fB\\-fdump-ast-\\fR\\fIswitch\\fR\\fB-\\fR\\fInumber\\fR \\fB(\\*(C+ only)\\fR\" 4\n+.IX Item \"-fdump-ast-switch-number ( only)\"\n+.PD\n+Control the dumping at various stages of processing the abstract syntax\n+tree to a file. The file name is generated by appending a switch\n+specific suffix to the source file name. If the -\\fInumber\\fR form is\n+used, \\fInumber\\fR is a bit mask which controls the details of the\n+dump. The following bits are meaningful (these are not set symbolically,\n+as the primary function of these dumps is for debugging gcc itself):\n+.RS 4\n+.Ip \"\\fBbit0 (1)\\fR\" 4\n+.IX Item \"bit0 (1)\"\n+Print the address of each node. Usually this is not meaningful as it\n+changes according to the environment and source file.\n+.Ip \"\\fBbit1 (2)\\fR\" 4\n+.IX Item \"bit1 (2)\"\n+Inhibit dumping of members of a scope or body of a function, unless they\n+are reachable by some other path.\n+.RE\n+.RS 4\n+.Sp\n+The following tree dumps are possible:\n+.RS 4\n+.RE\n+.Ip \"\\fBoriginal\\fR\" 4\n+.IX Item \"original\"\n+Dump before any tree based optimization, to \\fI\\fIfile\\fI.original\\fR.\n+.Ip \"\\fBoptimized\\fR\" 4\n+.IX Item \"optimized\"\n+Dump after all tree based optimization, to \\fI\\fIfile\\fI.optimized\\fR.\n+.RE\n+.RS 4\n+.RE\n .Ip \"\\fB\\-fpretend-float\\fR\" 4\n .IX Item \"-fpretend-float\"\n When running a cross-compiler, pretend that the target machine uses the\n@@ -2724,6 +2752,18 @@ Print the full absolute name of the library file \\fIlibrary\\fR that\n would be used when linking\\-\\-\\-and don't do anything else.  With this\n option, \\s-1GCC\\s0 does not compile or link anything; it just prints the\n file name.\n+.Ip \"\\fB\\-print-multi-directory\\fR\" 4\n+.IX Item \"-print-multi-directory\"\n+Print the directory name corresponding to the multilib selected by any\n+other switches present in the command line.  This directory is supposed\n+to exist in \\fB\\s-1GCC_EXEC_PREFIX\\s0\\fR.\n+.Ip \"\\fB\\-print-multi-lib\\fR\" 4\n+.IX Item \"-print-multi-lib\"\n+Print the mapping from multilib directory names to compiler switches\n+that enable them.  The directory name is separated from the switches by\n+\\&\\fB;\\fR, and each switch starts with an \\fB@} instead of the\n+\\&\\f(CB@samp\\fB{-\\fR, without spaces between multiple switches.  This is supposed to\n+ease shell-processing.\n .Ip \"\\fB\\-print-prog-name=\\fR\\fIprogram\\fR\" 4\n .IX Item \"-print-prog-name=program\"\n Like \\fB\\-print-file-name\\fR, but searches for a program such as \\fBcpp\\fR.\n@@ -3280,7 +3320,7 @@ If \\fIn\\fR is not specified, use a machine-dependent default.\n .IX Item \"-fssa\"\n Perform optimizations in static single assignment form.  Each function's\n flow graph is translated into \\s-1SSA\\s0 form, optimizations are performed, and\n-the flow graph is translated back from \\s-1SSA\\s0 form.  User's should not\n+the flow graph is translated back from \\s-1SSA\\s0 form.  Users should not\n specify this option, since it is not yet ready for production use.\n .Ip \"\\fB\\-fdce\\fR\" 4\n .IX Item \"-fdce\"\n@@ -3564,6 +3604,17 @@ Only \\fB#define\\fR \\fIname\\fR is included in the output.\n .IX Item \"-dI\"\n Output \\fB#include\\fR directives in addition to the result of\n preprocessing.\n+.Ip \"\\fB\\-fpreprocessed\\fR\" 4\n+.IX Item \"-fpreprocessed\"\n+Indicate to the preprocessor that the input file has already been\n+preprocessed.  This suppresses things like macro expansion, trigraph\n+conversion, escaped newline splicing, and processing of most directives.\n+In this mode the integrated preprocessor is little more than a tokenizer\n+for the front ends.\n+.Sp\n+\\&\\fB\\-fpreprocessed\\fR is implicit if the input file has one of the\n+extensions \\fBi\\fR, \\fBii\\fR or \\fBmi\\fR indicating it has already\n+been preprocessed.\n .Ip \"\\fB\\-trigraphs\\fR\" 4\n .IX Item \"-trigraphs\"\n Process \\s-1ISO\\s0 standard trigraph sequences.  These are three-character\n@@ -4607,31 +4658,9 @@ Generate code for a processor running with a 32\\-bit program counter,\n and conforming to the function calling standards for the \\s-1APCS\\s0 32\\-bit\n option.  This option replaces the \\fB\\-m6\\fR option of previous releases\n of the compiler.\n-.Ip \"\\fB\\-mapcs-stack-check\\fR\" 4\n-.IX Item \"-mapcs-stack-check\"\n-Generate code to check the amount of stack space available upon entry to\n-every function (that actually uses some stack space).  If there is\n-insufficient space available then either the function\n-\\&\\fB_\\|_rt_stkovf_split_small\\fR or \\fB_\\|_rt_stkovf_split_big\\fR will be\n-called, depending upon the amount of stack space required.  The run time\n-system is required to provide these functions.  The default is\n-\\&\\fB\\-mno-apcs-stack-check\\fR, since this produces smaller code.\n-.Ip \"\\fB\\-mapcs-float\\fR\" 4\n-.IX Item \"-mapcs-float\"\n-Pass floating point arguments using the float point registers.  This is\n-one of the variants of the \\s-1APCS\\s0.  This option is recommended if the\n-target hardware has a floating point unit or if a lot of floating point\n-arithmetic is going to be performed by the code.  The default is\n-\\&\\fB\\-mno-apcs-float\\fR, since integer only code is slightly increased in\n-size if \\fB\\-mapcs-float\\fR is used.\n-.Ip \"\\fB\\-mapcs-reentrant\\fR\" 4\n-.IX Item \"-mapcs-reentrant\"\n-Generate reentrant, position independent code.  This is the equivalent\n-to specifying the \\fB\\-fpic\\fR option.  The default is\n-\\&\\fB\\-mno-apcs-reentrant\\fR.\n .Ip \"\\fB\\-mthumb-interwork\\fR\" 4\n .IX Item \"-mthumb-interwork\"\n-Generate code which supports calling between the \\s-1ARM\\s0 and \\s-1THUMB\\s0\n+Generate code which supports calling between the \\s-1ARM\\s0 and Thumb\n instruction sets.  Without this option the two instruction sets cannot\n be reliably used inside one program.  The default is\n \\&\\fB\\-mno-thumb-interwork\\fR, since slightly larger code is generated\n@@ -4699,7 +4728,7 @@ objects in memory.\n .IX Item \"-mno-alignment-traps\"\n Generate code that assumes that the \\s-1MMU\\s0 will not trap unaligned\n accesses.  This produces better code when the target instruction set\n-does not have half-word memory operations (implementations prior to\n+does not have half-word memory operations (i.e. implementations prior to\n ARMv4).\n .Sp\n Note that you cannot use this option to access unaligned word objects,\n@@ -4711,16 +4740,18 @@ this produces better code when there are no half-word memory\n instructions available.\n .Ip \"\\fB\\-mshort-load-bytes\\fR\" 4\n .IX Item \"-mshort-load-bytes\"\n-This is a deprecated alias for \\fB\\-malignment-traps\\fR.\n+.PD 0\n+.Ip \"\\fB\\-mno-short-load-words\\fR\" 4\n+.IX Item \"-mno-short-load-words\"\n+.PD\n+These are deprecated aliases for \\fB\\-malignment-traps\\fR.\n .Ip \"\\fB\\-mno-short-load-bytes\\fR\" 4\n .IX Item \"-mno-short-load-bytes\"\n-This is a deprecated alias for \\fB\\-mno-alignment-traps\\fR.\n+.PD 0\n .Ip \"\\fB\\-mshort-load-words\\fR\" 4\n .IX Item \"-mshort-load-words\"\n-This is a deprecated alias for \\fB\\-mno-alignment-traps\\fR.\n-.Ip \"\\fB\\-mno-short-load-words\\fR\" 4\n-.IX Item \"-mno-short-load-words\"\n-This is a deprecated alias for \\fB\\-malignment-traps\\fR.\n+.PD\n+This are deprecated aliases for \\fB\\-mno-alignment-traps\\fR.\n .Ip \"\\fB\\-mbsd\\fR\" 4\n .IX Item \"-mbsd\"\n This option only applies to \\s-1RISC\\s0 iX.  Emulate the native BSD-mode\n@@ -4737,43 +4768,44 @@ Normally it is necessary to modify some of the standard symbols in\n preparation for linking with the \\s-1RISC\\s0 iX C library; this option\n suppresses this pass.  The post-processor is never run when the\n compiler is built for cross-compilation.\n-.Ip \"\\fB\\-mcpu=<name>\\fR\" 4\n-.IX Item \"-mcpu=<name>\"\n+.Ip \"\\fB\\-mcpu=\\fR\\fIname\\fR\" 4\n+.IX Item \"-mcpu=name\"\n This specifies the name of the target \\s-1ARM\\s0 processor.  \\s-1GCC\\s0 uses this name\n-to determine what kind of instructions it can use when generating\n+to determine what kind of instructions it can emit when generating\n assembly code.  Permissible names are: arm2, arm250, arm3, arm6, arm60,\n arm600, arm610, arm620, arm7, arm7m, arm7d, arm7dm, arm7di, arm7dmi,\n arm70, arm700, arm700i, arm710, arm710c, arm7100, arm7500, arm7500fe,\n arm7tdmi, arm8, strongarm, strongarm110, strongarm1100, arm8, arm810,\n-arm9, arm920, arm920t, arm9tdmi.\n-.Ip \"\\fB\\-mtune=<name>\\fR\" 4\n-.IX Item \"-mtune=<name>\"\n+arm9, arm9e, arm920, arm920t, arm940t, arm9tdmi, arm10tdmi, arm1020t,\n+xscale.\n+.Ip \"\\fB\\-mtune=\\fR\\fIname\\fR\" 4\n+.IX Item \"-mtune=name\"\n This option is very similar to the \\fB\\-mcpu=\\fR option, except that\n instead of specifying the actual target processor type, and hence\n restricting which instructions can be used, it specifies that \\s-1GCC\\s0 should\n tune the performance of the code as if the target were of the type\n specified in this option, but still choosing the instructions that it\n will generate based on the cpu specified by a \\fB\\-mcpu=\\fR option.\n-For some arm implementations better performance can be obtained by using\n+For some \\s-1ARM\\s0 implementations better performance can be obtained by using\n this option.\n-.Ip \"\\fB\\-march=<name>\\fR\" 4\n-.IX Item \"-march=<name>\"\n+.Ip \"\\fB\\-march=\\fR\\fIname\\fR\" 4\n+.IX Item \"-march=name\"\n This specifies the name of the target \\s-1ARM\\s0 architecture.  \\s-1GCC\\s0 uses this\n-name to determine what kind of instructions it can use when generating\n+name to determine what kind of instructions it can emit when generating\n assembly code.  This option can be used in conjunction with or instead\n of the \\fB\\-mcpu=\\fR option.  Permissible names are: armv2, armv2a,\n-armv3, armv3m, armv4, armv4t, armv5.\n-.Ip \"\\fB\\-mfpe=<number>\\fR\" 4\n-.IX Item \"-mfpe=<number>\"\n+armv3, armv3m, armv4, armv4t, armv5, armv5t, armv5te.\n+.Ip \"\\fB\\-mfpe=\\fR\\fInumber\\fR\" 4\n+.IX Item \"-mfpe=number\"\n .PD 0\n-.Ip \"\\fB\\-mfp=<number>\\fR\" 4\n-.IX Item \"-mfp=<number>\"\n+.Ip \"\\fB\\-mfp=\\fR\\fInumber\\fR\" 4\n+.IX Item \"-mfp=number\"\n .PD\n This specifies the version of the floating point emulation available on\n the target.  Permissible values are 2 and 3.  \\fB\\-mfp=\\fR is a synonym\n-for \\fB\\-mfpe=\\fR to support older versions of \\s-1GCC\\s0.\n-.Ip \"\\fB\\-mstructure-size-boundary=<n>\\fR\" 4\n-.IX Item \"-mstructure-size-boundary=<n>\"\n+for \\fB\\-mfpe=\\fR, for compatibility with older versions of \\s-1GCC\\s0.\n+.Ip \"\\fB\\-mstructure-size-boundary=\\fR\\fIn\\fR\" 4\n+.IX Item \"-mstructure-size-boundary=n\"\n The size of all structures and unions will be rounded up to a multiple\n of the number of bits set by this option.  Permissible values are 8 and\n 32.  The default value varies for different toolchains.  For the \\s-1COFF\\s0\n@@ -4782,12 +4814,12 @@ can produce faster, more efficient code, but can also increase the size\n of the program.  The two values are potentially incompatible.  Code\n compiled with one value cannot necessarily expect to work with code or\n libraries compiled with the other value, if they exchange information\n-using structures or unions.  Programmers are encouraged to use the 32\n-value as future versions of the toolchain may default to this value.\n+using structures or unions.\n .Ip \"\\fB\\-mabort-on-noreturn\\fR\" 4\n .IX Item \"-mabort-on-noreturn\"\n-Generate a call to the function abort at the end of a noreturn function.\n-It will be executed if the function tries to return.\n+Generate a call to the function \\f(CW\\*(C`abort\\*(C'\\fR at the end of a\n+\\&\\f(CW\\*(C`noreturn\\*(C'\\fR function.  It will be executed if the function tries to\n+return.\n .Ip \"\\fB\\-mlong-calls\\fR\" 4\n .IX Item \"-mlong-calls\"\n .PD 0\n@@ -4812,66 +4844,59 @@ the scope of a \\fB#pragma long_calls\\fR directive, will always be\n turned into long calls.\n .Sp\n This feature is not enabled by default.  Specifying\n-\\&\\fB\\*(--no-long-calls\\fR will restore the default behaviour, as will\n+\\&\\fB\\-mno-long-calls\\fR will restore the default behaviour, as will\n placing the function calls within the scope of a \\fB#pragma\n long_calls_off\\fR directive.  Note these switches have no effect on how\n the compiler generates code to handle function calls via function\n pointers.\n .Ip \"\\fB\\-mnop-fun-dllimport\\fR\" 4\n .IX Item \"-mnop-fun-dllimport\"\n-Disable the support for the \\fIdllimport\\fR attribute.\n+Disable support for the \\fIdllimport\\fR attribute.\n .Ip \"\\fB\\-msingle-pic-base\\fR\" 4\n .IX Item \"-msingle-pic-base\"\n Treat the register used for \\s-1PIC\\s0 addressing as read-only, rather than\n loading it in the prologue for each function.  The run-time system is\n responsible for initialising this register with an appropriate value\n before execution begins.\n-.Ip \"\\fB\\-mpic-register=<reg>\\fR\" 4\n-.IX Item \"-mpic-register=<reg>\"\n+.Ip \"\\fB\\-mpic-register=\\fR\\fIreg\\fR\" 4\n+.IX Item \"-mpic-register=reg\"\n Specify the register to be used for \\s-1PIC\\s0 addressing.  The default is R10\n unless stack-checking is enabled, when R9 is used.\n-.PP\n-.I \"Thumb Options\"\n-.IX Subsection \"Thumb Options\"\n-.Ip \"\\fB\\-mthumb-interwork\\fR\" 4\n-.IX Item \"-mthumb-interwork\"\n-Generate code which supports calling between the \\s-1THUMB\\s0 and \\s-1ARM\\s0\n-instruction sets.  Without this option the two instruction sets cannot\n-be reliably used inside one program.  The default is\n-\\&\\fB\\-mno-thumb-interwork\\fR, since slightly smaller code is generated\n-with this option.\n+.Ip \"\\fB\\-mpoke-function-name\\fR\" 4\n+.IX Item \"-mpoke-function-name\"\n+Write the name of each function into the text section, directly\n+preceding the function prologue.  The generated code is similar to this:\n+.Sp\n+.Vb 9\n+\\&             t0\n+\\&                 .ascii \"arm_poke_function_name\", 0\n+\\&                 .align\n+\\&             t1\n+\\&                 .word 0xff000000 + (t1 - t0)\n+\\&             arm_poke_function_name\n+\\&                 mov     ip, sp\n+\\&                 stmfd   sp!, {fp, ip, lr, pc}\n+\\&                 sub     fp, ip, #4\n+.Ve\n+When performing a stack backtrace, code can inspect the value of\n+\\&\\f(CW\\*(C`pc\\*(C'\\fR stored at \\f(CW\\*(C`fp + 0\\*(C'\\fR.  If the trace function then looks at\n+location \\f(CW\\*(C`pc \\- 12\\*(C'\\fR and the top 8 bits are set, then we know that\n+there is a function name embedded immediately preceding this location\n+and has length \\f(CW\\*(C`((pc[\\-3]) & 0xff000000)\\*(C'\\fR.\n+.Ip \"\\fB\\-mthumb\\fR\" 4\n+.IX Item \"-mthumb\"\n+Generate code for the 16\\-bit Thumb instruction set.  The default is to\n+use the 32\\-bit \\s-1ARM\\s0 instruction set.\n .Ip \"\\fB\\-mtpcs-frame\\fR\" 4\n .IX Item \"-mtpcs-frame\"\n Generate a stack frame that is compliant with the Thumb Procedure Call\n Standard for all non-leaf functions.  (A leaf function is one that does\n-not call any other functions).  The default is \\fB\\-mno-apcs-frame\\fR.\n+not call any other functions.)  The default is \\fB\\-mno-tpcs-frame\\fR.\n .Ip \"\\fB\\-mtpcs-leaf-frame\\fR\" 4\n .IX Item \"-mtpcs-leaf-frame\"\n Generate a stack frame that is compliant with the Thumb Procedure Call\n Standard for all leaf functions.  (A leaf function is one that does\n-not call any other functions).  The default is \\fB\\-mno-apcs-leaf-frame\\fR.\n-.Ip \"\\fB\\-mlittle-endian\\fR\" 4\n-.IX Item \"-mlittle-endian\"\n-Generate code for a processor running in little-endian mode.  This is\n-the default for all standard configurations.\n-.Ip \"\\fB\\-mbig-endian\\fR\" 4\n-.IX Item \"-mbig-endian\"\n-Generate code for a processor running in big-endian mode.\n-.Ip \"\\fB\\-mstructure-size-boundary=<n>\\fR\" 4\n-.IX Item \"-mstructure-size-boundary=<n>\"\n-The size of all structures and unions will be rounded up to a multiple\n-of the number of bits set by this option.  Permissible values are 8 and\n-32.  The default value varies for different toolchains.  For the \\s-1COFF\\s0\n-targeted toolchain the default value is 8.  Specifying the larger number\n-can produced faster, more efficient code, but can also increase the size\n-of the program.  The two values are potentially incompatible.  Code\n-compiled with one value cannot necessarily expect to work with code or\n-libraries compiled with the other value, if they exchange information\n-using structures or unions.  Programmers are encouraged to use the 32\n-value as future versions of the toolchain may default to this value.\n-.Ip \"\\fB\\-mnop-fun-dllimport\\fR\" 4\n-.IX Item \"-mnop-fun-dllimport\"\n-Disable the support for the \\fIdllimport\\fR attribute.\n+not call any other functions.)  The default is \\fB\\-mno-apcs-leaf-frame\\fR.\n .Ip \"\\fB\\-mcallee-super-interworking\\fR\" 4\n .IX Item \"-mcallee-super-interworking\"\n Gives all externally visible functions in the file being compiled an \\s-1ARM\\s0\n@@ -4884,15 +4909,6 @@ Allows calls via function pointers (including virtual functions) to\n execute correctly regardless of whether the target code has been\n compiled for interworking or not.  There is a small overhead in the cost\n of executing a function pointer if this option is enabled.\n-.Ip \"\\fB\\-msingle-pic-base\\fR\" 4\n-.IX Item \"-msingle-pic-base\"\n-Treat the register used for \\s-1PIC\\s0 addressing as read-only, rather than\n-loading it in the prologue for each function.  The run-time system is\n-responsible for initialising this register with an appropriate value\n-before execution begins.\n-.Ip \"\\fB\\-mpic-register=<reg>\\fR\" 4\n-.IX Item \"-mpic-register=<reg>\"\n-Specify the register to be used for \\s-1PIC\\s0 addressing.  The default is R10.\n .PP\n .I \"\\s-1MN10200\\s0 Options\"\n .IX Subsection \"MN10200 Options\"\n@@ -6363,11 +6379,11 @@ this to work.\n .IX Subsection \"Intel 960 Options\"\n .PP\n These \\fB\\-m\\fR options are defined for the Intel 960 implementations:\n-.Ip \"\\fB\\-m\\fR\\fIcpu type\\fR\" 4\n-.IX Item \"-mcpu type\"\n-Assume the defaults for the machine type \\fIcpu type\\fR for some of\n+.Ip \"\\fB\\-m\\fR\\fIcpu-type\\fR\" 4\n+.IX Item \"-mcpu-type\"\n+Assume the defaults for the machine type \\fIcpu-type\\fR for some of\n the other options, including instruction scheduling, floating point\n-support, and addressing modes.  The choices for \\fIcpu type\\fR are\n+support, and addressing modes.  The choices for \\fIcpu-type\\fR are\n \\&\\fBka\\fR, \\fBkb\\fR, \\fBmc\\fR, \\fBca\\fR, \\fBcf\\fR,\n \\&\\fBsa\\fR, and \\fBsb\\fR.\n The default is\n@@ -7526,7 +7542,7 @@ exceptions.  For some targets, this implies \\s-1GNU\\s0 \\s-1CC\\s0 will generate f\n unwind information for all functions, which can produce significant data\n size overhead, although it does not affect execution.  If you do not\n specify this option, \\s-1GNU\\s0 \\s-1CC\\s0 will enable it by default for languages like\n-\\&\\*(C+ which normally require exception handling, and disable itfor\n+\\&\\*(C+ which normally require exception handling, and disable it for\n languages like C that do not normally require it.  However, you may need\n to enable this option when compiling C code that needs to interoperate\n properly with exception handlers written in \\*(C+.  You may also wish to\n@@ -7579,7 +7595,7 @@ shared between processes running the same program, while private data\n exists in one copy per process.\n .Ip \"\\fB\\-fno-common\\fR\" 4\n .IX Item \"-fno-common\"\n-Allocate even uninitialized global variables in the data section of the\n+In C, allocate even uninitialized global variables in the data section of the\n object file, rather than generating them as common blocks.  This has the\n effect that if the same variable is declared (without \\f(CW\\*(C`extern\\*(C'\\fR) in\n two different compilations, you will get an error when you link them.\n@@ -7774,9 +7790,11 @@ function and its call site.  (On some platforms,\n function, so the call site information may not be available to the\n profiling functions otherwise.)\n .Sp\n-.Vb 2\n-\\&        void __cyg_profile_func_enter (void *this_fn, void *call_site);\n-\\&        void __cyg_profile_func_exit  (void *this_fn, void *call_site);\n+.Vb 4\n+\\&        void __cyg_profile_func_enter (void *this_fn,\n+\\&                                       void *call_site);\n+\\&        void __cyg_profile_func_exit  (void *this_fn,\n+\\&                                       void *call_site);\n .Ve\n The first argument is the address of the start of the current function,\n which may be looked up exactly in the symbol table."}, {"sha": "0591979f834a730074a273bca6fb7fbf82de615b", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 34, "deletions": 2, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1018de69d3f6a89cb11f7dc152ec5c7cb6abcf9/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1018de69d3f6a89cb11f7dc152ec5c7cb6abcf9/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=b1018de69d3f6a89cb11f7dc152ec5c7cb6abcf9", "patch": "@@ -157,7 +157,8 @@ in the following sections.\n @item C Language Options\n @xref{C Dialect Options,,Options Controlling C Dialect}.\n @gccoptlist{\n--ansi  -std=@var{standard}  -fno-asm  -fno-builtin @gol\n+-ansi  -std=@var{standard}  -aux-info @var{filename} @gol\n+-fno-asm  -fno-builtin @gol\n -fhosted  -ffreestanding @gol\n -trigraphs  -traditional  -traditional-cpp @gol\n -fallow-single-precision  -fcond-mismatch @gol\n@@ -243,6 +244,7 @@ in the following sections.\n -g  -g@var{level}  -gcoff  -gdwarf  -gdwarf-1  -gdwarf-1+  -gdwarf-2 @gol\n -ggdb  -gstabs  -gstabs+  -gxcoff  -gxcoff+ @gol\n -p  -pg  -print-file-name=@var{library}  -print-libgcc-file-name @gol\n+-print-multi-directory  -print-multi-lib @gol\n -print-prog-name=@var{program}  -print-search-dirs  -Q @gol\n -save-temps  -time}\n \n@@ -959,6 +961,22 @@ the @code{inline} keyword in ISO C99) are not disabled.\n @xref{Standards,,Language Standards Supported by GCC}, for details of\n these standard versions.\n \n+@item -aux-info @var{filename}\n+@opindex aux-info\n+Output to the given filename prototyped declarations for all functions\n+declared and/or defined in a translation unit, including those in header\n+files.  This option is silently ignored in any language other than C.\n+\n+Besides declarations, the file indicates, in comments, the origin of\n+each declaration (source file and line), whether the declaration was\n+implicit, prototyped or unprototyped (@samp{I}, @samp{N} for new or\n+@samp{O} for old, respectively, in the first character after the line\n+number and the colon), and whether it came from a declaration or a\n+definition (@samp{C} or @samp{F}, respectively, in the following\n+character).  In the case of function definitions, a K&R-style list of\n+arguments followed by their declarations is also provided, inside\n+comments, after the declaration.\n+\n @item -fno-asm\n @opindex fno-asm\n Do not recognize @code{asm}, @code{inline} or @code{typeof} as a\n@@ -3051,6 +3069,20 @@ would be used when linking---and don't do anything else.  With this\n option, GCC does not compile or link anything; it just prints the\n file name.\n \n+@item -print-multi-directory\n+@opindex print-multi-directory\n+Print the directory name corresponding to the multilib selected by any\n+other switches present in the command line.  This directory is supposed\n+to exist in @env{GCC_EXEC_PREFIX}.\n+\n+@item -print-multi-lib\n+@opindex print-multi-lib\n+Print the mapping from multilib directory names to compiler switches\n+that enable them.  The directory name is separated from the switches by\n+@samp{;}, and each switch starts with an @samp{@@} instead of the\n+@samp{-}, without spaces between multiple switches.  This is supposed to\n+ease shell-processing.\n+\n @item -print-prog-name=@var{program}\n @opindex print-prog-name\n Like @samp{-print-file-name}, but searches for a program such as @samp{cpp}.\n@@ -9560,7 +9592,7 @@ the existing @samp{.X} file because it is newer than the source file.\n For example:\n \n @example\n-gcc -Dfoo=bar file1.c -aux-info\n+gcc -Dfoo=bar file1.c -aux-info file1.X\n protoize *.c\n @end example\n "}]}