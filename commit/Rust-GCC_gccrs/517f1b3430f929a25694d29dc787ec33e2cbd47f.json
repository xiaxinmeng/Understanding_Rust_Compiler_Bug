{"sha": "517f1b3430f929a25694d29dc787ec33e2cbd47f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE3ZjFiMzQzMGY5MjlhMjU2OTRkMjlkYzc4N2VjMzNlMmNiZDQ3Zg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-05-14T21:28:07Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-05-14T21:28:07Z"}, "message": "re PR target/46098 (ICE: in extract_insn, at recog.c:2100 with -msse3 -ffloat-store and __builtin_ia32_loadupd())\n\n\tPR target/46098\n\t* config/i386/i386.c (ix86_expand_special_args_builtin): Always\n\tgenerate target register for \"load\" class builtins.\n\n\tRevert:\n\t2010-10-22  Uros Bizjak  <ubizjak@gmail.com>\n\n\tPR target/46098\n\t* config/i386/sse.md (*avx_movu<ssemodesuffix><avxmodesuffix>):\n\tRename from avx_movu<ssemodesuffix><avxmodesuffix>.\n\t(avx_movu<ssemodesuffix><avxmodesuffix>): New expander.\n\t(*<sse>_movu<ssemodesuffix>): Rename from <sse>_movu<ssemodesuffix>.\n\t(<sse>_movu<ssemodesuffix>): New expander.\n\t(*avx_movdqu<avxmodesuffix>): Rename from avx_movdqu<avxmodesuffix>.\n\t(avx_movdqu<avxmodesuffix>): New expander.\n\t(*sse2_movdqu): Rename from sse2_movdqu.\n\t(sse2_movdqu): New expander.\n\ntestsuite/ChangeLog:\n\n\t* gcc.target/i386/avx256-unaligned-load-[1234].c: Update scan strings.\n\t* gcc.target/i386/avx256-unaligned-store-[1234].c: Ditto.\n\nFrom-SVN: r187481", "tree": {"sha": "fe68eb63801b9782385963325eebf82ff9f7801d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe68eb63801b9782385963325eebf82ff9f7801d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/517f1b3430f929a25694d29dc787ec33e2cbd47f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/517f1b3430f929a25694d29dc787ec33e2cbd47f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/517f1b3430f929a25694d29dc787ec33e2cbd47f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/517f1b3430f929a25694d29dc787ec33e2cbd47f/comments", "author": null, "committer": null, "parents": [{"sha": "1c8196d9da0741153b4dc139df47dfdd49334f48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c8196d9da0741153b4dc139df47dfdd49334f48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c8196d9da0741153b4dc139df47dfdd49334f48"}], "stats": {"total": 97, "additions": 50, "deletions": 47}, "files": [{"sha": "9ea11a0f48657210c5c6403cef3ee905aed012e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 28, "deletions": 9, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517f1b3430f929a25694d29dc787ec33e2cbd47f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517f1b3430f929a25694d29dc787ec33e2cbd47f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=517f1b3430f929a25694d29dc787ec33e2cbd47f", "patch": "@@ -1,3 +1,23 @@\n+2012-05-14  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/46098\n+\t* config/i386/i386.c (ix86_expand_special_args_builtin): Always\n+\tgenerate target register for \"load\" class builtins.\n+\n+\tRevert:\n+\t2010-10-22  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/46098\n+\t* config/i386/sse.md (*avx_movu<ssemodesuffix><avxmodesuffix>):\n+\tRename from avx_movu<ssemodesuffix><avxmodesuffix>.\n+\t(avx_movu<ssemodesuffix><avxmodesuffix>): New expander.\n+\t(*<sse>_movu<ssemodesuffix>): Rename from <sse>_movu<ssemodesuffix>.\n+\t(<sse>_movu<ssemodesuffix>): New expander.\n+\t(*avx_movdqu<avxmodesuffix>): Rename from avx_movdqu<avxmodesuffix>.\n+\t(avx_movdqu<avxmodesuffix>): New expander.\n+\t(*sse2_movdqu): Rename from sse2_movdqu.\n+\t(sse2_movdqu): New expander.\n+\n 2012-05-14  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR target/52607\n@@ -11,8 +31,7 @@\n \t    Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/53315\n-\t* config/i386/i386.md (xbegin_1): Use + in constraint and\n-\tmatch_dup.\n+\t* config/i386/i386.md (xbegin_1): Use + in constraint and match_dup.\n \t(xbegin): Updated.\n \n 2012-05-14  Jakub Jelinek  <jakub@redhat.com>\n@@ -250,12 +269,12 @@\n \t* opth-gen.awk: Declare common_handle_option_auto.\n \t* common.opt (Wuninitialized): Use EnabledBy. Delete Init.\n \t(Wmaybe-uninitialized): Likewise.\n-        (Wunused-but-set-variable): Likewise.\n-        (Wunused-function): Likewise.\n-        (Wunused-label): Likewise.\n-        (Wunused-value): Likewise.\n-        (Wunused-variable): Likewise.\n-        * opt-read.awk: Create opt_numbers array.\n+\t(Wunused-but-set-variable): Likewise.\n+\t(Wunused-function): Likewise.\n+\t(Wunused-label): Likewise.\n+\t(Wunused-value): Likewise.\n+\t(Wunused-variable): Likewise.\n+\t* opt-read.awk: Create opt_numbers array.\n \n 2012-05-11  Richard Guenther  <rguenther@suse.de>\n \n@@ -447,7 +466,7 @@\n \n 2012-05-09  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n-       * doc/extend.texi (Function Attributes): Point xref to section\n+\t* doc/extend.texi (Function Attributes): Point xref to section\n \tabout Pragmas.\n \n 2012-05-09  Uros Bizjak  <ubizjak@gmail.com>"}, {"sha": "eca542c7a19bca2daf5d8de3bc3a27676860d149", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517f1b3430f929a25694d29dc787ec33e2cbd47f/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517f1b3430f929a25694d29dc787ec33e2cbd47f/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=517f1b3430f929a25694d29dc787ec33e2cbd47f", "patch": "@@ -29472,8 +29472,8 @@ ix86_expand_special_args_builtin (const struct builtin_description *d,\n       arg_adjust = 0;\n       if (optimize\n \t  || target == 0\n-\t  || GET_MODE (target) != tmode\n-\t  || !insn_p->operand[0].predicate (target, tmode))\n+\t  || !register_operand (target, tmode)\n+\t  || GET_MODE (target) != tmode)\n \ttarget = gen_reg_rtx (tmode);\n     }\n "}, {"sha": "6a8206aa83154cbdc3c88e0b29cfee5a09eddf2b", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 2, "deletions": 23, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517f1b3430f929a25694d29dc787ec33e2cbd47f/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517f1b3430f929a25694d29dc787ec33e2cbd47f/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=517f1b3430f929a25694d29dc787ec33e2cbd47f", "patch": "@@ -588,18 +588,7 @@\n   DONE;\n })\n \n-(define_expand \"<sse>_movu<ssemodesuffix><avxsizesuffix>\"\n-  [(set (match_operand:VF 0 \"nonimmediate_operand\")\n-\t(unspec:VF\n-\t  [(match_operand:VF 1 \"nonimmediate_operand\")]\n-\t  UNSPEC_MOVU))]\n-  \"TARGET_SSE\"\n-{\n-  if (MEM_P (operands[0]) && MEM_P (operands[1]))\n-    operands[1] = force_reg (<MODE>mode, operands[1]);\n-})\n-\n-(define_insn \"*<sse>_movu<ssemodesuffix><avxsizesuffix>\"\n+(define_insn \"<sse>_movu<ssemodesuffix><avxsizesuffix>\"\n   [(set (match_operand:VF 0 \"nonimmediate_operand\" \"=x,m\")\n \t(unspec:VF\n \t  [(match_operand:VF 1 \"nonimmediate_operand\" \"xm,x\")]\n@@ -631,17 +620,7 @@\n \t      ]\n \t      (const_string \"<MODE>\")))])\n \n-(define_expand \"<sse2>_movdqu<avxsizesuffix>\"\n-  [(set (match_operand:VI1 0 \"nonimmediate_operand\")\n-\t(unspec:VI1 [(match_operand:VI1 1 \"nonimmediate_operand\")]\n-\t\t    UNSPEC_MOVU))]\n-  \"TARGET_SSE2\"\n-{\n-  if (MEM_P (operands[0]) && MEM_P (operands[1]))\n-    operands[1] = force_reg (<MODE>mode, operands[1]);\n-})\n-\n-(define_insn \"*<sse2>_movdqu<avxsizesuffix>\"\n+(define_insn \"<sse2>_movdqu<avxsizesuffix>\"\n   [(set (match_operand:VI1 0 \"nonimmediate_operand\" \"=x,m\")\n \t(unspec:VI1 [(match_operand:VI1 1 \"nonimmediate_operand\" \"xm,x\")]\n \t\t    UNSPEC_MOVU))]"}, {"sha": "7fc8f0eef5eb4ae5e7e26585e4cb2ff0c3d46073", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517f1b3430f929a25694d29dc787ec33e2cbd47f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517f1b3430f929a25694d29dc787ec33e2cbd47f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=517f1b3430f929a25694d29dc787ec33e2cbd47f", "patch": "@@ -1,3 +1,8 @@\n+2012-05-14  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/i386/avx256-unaligned-load-[1234].c: Update scan strings.\n+\t* gcc.target/i386/avx256-unaligned-store-[1234].c: Ditto.\n+\n 2012-05-14  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR fortran/52428"}, {"sha": "c2511c643b439c73c6a471a8f0295a1916b3533a", "filename": "gcc/testsuite/gcc.target/i386/avx256-unaligned-load-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517f1b3430f929a25694d29dc787ec33e2cbd47f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-load-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517f1b3430f929a25694d29dc787ec33e2cbd47f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-load-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-load-1.c?ref=517f1b3430f929a25694d29dc787ec33e2cbd47f", "patch": "@@ -14,6 +14,6 @@ avx_test (void)\n     c[i] = a[i] * b[i+3];\n }\n \n-/* { dg-final { scan-assembler-not \"\\\\*avx_movups256/1\" } } */\n-/* { dg-final { scan-assembler \"\\\\*sse_movups/1\" } } */\n+/* { dg-final { scan-assembler-not \"avx_movups256/1\" } } */\n+/* { dg-final { scan-assembler \"sse_movups/1\" } } */\n /* { dg-final { scan-assembler \"vinsertf128\" } } */"}, {"sha": "9d7167304e35b0ce4dcdaeb1e27514342460ffec", "filename": "gcc/testsuite/gcc.target/i386/avx256-unaligned-load-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517f1b3430f929a25694d29dc787ec33e2cbd47f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-load-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517f1b3430f929a25694d29dc787ec33e2cbd47f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-load-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-load-2.c?ref=517f1b3430f929a25694d29dc787ec33e2cbd47f", "patch": "@@ -24,6 +24,6 @@ avx_test (void)\n     }\n }\n \n-/* { dg-final { scan-assembler-not \"\\\\*avx_movdqu256/1\" } } */\n-/* { dg-final { scan-assembler \"\\\\*sse2_movdqu/1\" } } */\n+/* { dg-final { scan-assembler-not \"avx_movdqu256/1\" } } */\n+/* { dg-final { scan-assembler \"sse2_movdqu/1\" } } */\n /* { dg-final { scan-assembler \"vinsert.128\" } } */"}, {"sha": "efb5f573fae296f2182ef674bd387f454c3ec683", "filename": "gcc/testsuite/gcc.target/i386/avx256-unaligned-load-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517f1b3430f929a25694d29dc787ec33e2cbd47f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-load-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517f1b3430f929a25694d29dc787ec33e2cbd47f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-load-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-load-3.c?ref=517f1b3430f929a25694d29dc787ec33e2cbd47f", "patch": "@@ -14,6 +14,6 @@ avx_test (void)\n     c[i] = a[i] * b[i+3];\n }\n \n-/* { dg-final { scan-assembler-not \"\\\\*avx_movupd256/1\" } } */\n-/* { dg-final { scan-assembler \"\\\\*sse2_movupd/1\" } } */\n+/* { dg-final { scan-assembler-not \"avx_movupd256/1\" } } */\n+/* { dg-final { scan-assembler \"sse2_movupd/1\" } } */\n /* { dg-final { scan-assembler \"vinsertf128\" } } */"}, {"sha": "e527b381625277e6d34037bf14c52d7bc5927dda", "filename": "gcc/testsuite/gcc.target/i386/avx256-unaligned-load-4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517f1b3430f929a25694d29dc787ec33e2cbd47f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-load-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517f1b3430f929a25694d29dc787ec33e2cbd47f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-load-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-load-4.c?ref=517f1b3430f929a25694d29dc787ec33e2cbd47f", "patch": "@@ -14,6 +14,6 @@ avx_test (void)\n     b[i] = a[i+3] * 2;\n }\n \n-/* { dg-final { scan-assembler \"\\\\*avx_movups256/1\" } } */\n-/* { dg-final { scan-assembler-not \"\\\\*avx_movups/1\" } } */\n+/* { dg-final { scan-assembler \"avx_movups256/1\" } } */\n+/* { dg-final { scan-assembler-not \"avx_movups/1\" } } */\n /* { dg-final { scan-assembler-not \"vinsertf128\" } } */"}, {"sha": "0b5839669a7fdc7154f2f8ec839ee0ebe9bf9962", "filename": "gcc/testsuite/gcc.target/i386/avx256-unaligned-store-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517f1b3430f929a25694d29dc787ec33e2cbd47f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-store-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517f1b3430f929a25694d29dc787ec33e2cbd47f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-store-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-store-1.c?ref=517f1b3430f929a25694d29dc787ec33e2cbd47f", "patch": "@@ -17,6 +17,6 @@ avx_test (void)\n     d[i] = c[i] * 20.0;\n }\n \n-/* { dg-final { scan-assembler-not \"\\\\*avx_movups256/2\" } } */\n+/* { dg-final { scan-assembler-not \"avx_movups256/2\" } } */\n /* { dg-final { scan-assembler \"vmovups.*\\\\*movv4sf_internal/3\" } } */\n /* { dg-final { scan-assembler \"vextractf128\" } } */"}, {"sha": "eac460fef9765f09656d3b9e3ada750da333087c", "filename": "gcc/testsuite/gcc.target/i386/avx256-unaligned-store-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517f1b3430f929a25694d29dc787ec33e2cbd47f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-store-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517f1b3430f929a25694d29dc787ec33e2cbd47f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-store-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-store-2.c?ref=517f1b3430f929a25694d29dc787ec33e2cbd47f", "patch": "@@ -24,6 +24,6 @@ avx_test (void)\n     }\n }\n \n-/* { dg-final { scan-assembler-not \"\\\\*avx_movdqu256/2\" } } */\n+/* { dg-final { scan-assembler-not \"avx_movdqu256/2\" } } */\n /* { dg-final { scan-assembler \"vmovdqu.*\\\\*movv16qi_internal/3\" } } */\n /* { dg-final { scan-assembler \"vextract.128\" } } */"}, {"sha": "753625892d7356c2db872e3a8c6312aa9ba7f423", "filename": "gcc/testsuite/gcc.target/i386/avx256-unaligned-store-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517f1b3430f929a25694d29dc787ec33e2cbd47f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-store-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517f1b3430f929a25694d29dc787ec33e2cbd47f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-store-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-store-3.c?ref=517f1b3430f929a25694d29dc787ec33e2cbd47f", "patch": "@@ -17,6 +17,6 @@ avx_test (void)\n     d[i] = c[i] * 20.0;\n }\n \n-/* { dg-final { scan-assembler-not \"\\\\*avx_movupd256/2\" } } */\n+/* { dg-final { scan-assembler-not \"avx_movupd256/2\" } } */\n /* { dg-final { scan-assembler \"vmovupd.*\\\\*movv2df_internal/3\" } } */\n /* { dg-final { scan-assembler \"vextractf128\" } } */"}, {"sha": "39b6f3bef16935428735e4089a2643b9f3e85673", "filename": "gcc/testsuite/gcc.target/i386/avx256-unaligned-store-4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517f1b3430f929a25694d29dc787ec33e2cbd47f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-store-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517f1b3430f929a25694d29dc787ec33e2cbd47f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-store-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx256-unaligned-store-4.c?ref=517f1b3430f929a25694d29dc787ec33e2cbd47f", "patch": "@@ -14,7 +14,7 @@ avx_test (void)\n     b[i+3] = a[i] * c[i];\n }\n \n-/* { dg-final { scan-assembler \"\\\\*avx_movups256/2\" } } */\n-/* { dg-final { scan-assembler-not \"\\\\*avx_movups/2\" } } */\n+/* { dg-final { scan-assembler \"avx_movups256/2\" } } */\n+/* { dg-final { scan-assembler-not \"avx_movups/2\" } } */\n /* { dg-final { scan-assembler-not \"\\\\*avx_movv4sf_internal/3\" } } */\n /* { dg-final { scan-assembler-not \"vextractf128\" } } */"}]}