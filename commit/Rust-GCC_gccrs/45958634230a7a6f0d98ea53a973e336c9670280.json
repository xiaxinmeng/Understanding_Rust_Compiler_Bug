{"sha": "45958634230a7a6f0d98ea53a973e336c9670280", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU5NTg2MzQyMzBhN2E2ZjBkOThlYTUzYTk3M2UzMzZjOTY3MDI4MA==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2012-02-22T13:56:43Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2012-02-22T13:56:43Z"}, "message": "avr.h (avr_accumulate_outgoing_args): Return int.\n\n\t* config/avr/avr.h (avr_accumulate_outgoing_args): Return int.\n\t* config/avr/avr.c (avr_accumulate_outgoing_args): Return int.\n\nFrom-SVN: r184475", "tree": {"sha": "e3451d67edbb9f686cb7bf63d7d9d60e10920e21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3451d67edbb9f686cb7bf63d7d9d60e10920e21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45958634230a7a6f0d98ea53a973e336c9670280", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45958634230a7a6f0d98ea53a973e336c9670280", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45958634230a7a6f0d98ea53a973e336c9670280", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45958634230a7a6f0d98ea53a973e336c9670280/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "740ce3316fbcbf1629585ed2190140173719d6f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/740ce3316fbcbf1629585ed2190140173719d6f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/740ce3316fbcbf1629585ed2190140173719d6f2"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "295ce0e14699912998903b3d442a2a9d6ff3013f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45958634230a7a6f0d98ea53a973e336c9670280/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45958634230a7a6f0d98ea53a973e336c9670280/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=45958634230a7a6f0d98ea53a973e336c9670280", "patch": "@@ -1,3 +1,8 @@\n+2012-02-22  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* config/avr/avr.h (avr_accumulate_outgoing_args): Return int.\n+\t* config/avr/avr.c (avr_accumulate_outgoing_args): Return int.\t\n+\n 2012-02-22  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* configure.ac (LIB_TLS_SPEC): Enforce use of alternate thread"}, {"sha": "9a285e3cdceeb2c236d6728240942ef75bd84cba", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45958634230a7a6f0d98ea53a973e336c9670280/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45958634230a7a6f0d98ea53a973e336c9670280/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=45958634230a7a6f0d98ea53a973e336c9670280", "patch": "@@ -654,7 +654,8 @@ avr_OS_main_function_p (tree func)\n \n \n /* Implement `ACCUMULATE_OUTGOING_ARGS'.  */\n-bool\n+\n+int\n avr_accumulate_outgoing_args (void)\n {\n   if (!cfun)"}, {"sha": "ccc3b6d8452e49736ad6f83d24a710bb682c8af7", "filename": "gcc/config/avr/avr.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45958634230a7a6f0d98ea53a973e336c9670280/gcc%2Fconfig%2Favr%2Favr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45958634230a7a6f0d98ea53a973e336c9670280/gcc%2Fconfig%2Favr%2Favr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.h?ref=45958634230a7a6f0d98ea53a973e336c9670280", "patch": "@@ -679,7 +679,7 @@ struct GTY(()) machine_function\n /* Define prototype here to avoid build warning.  Some files using\n    ACCUMULATE_OUTGOING_ARGS (directly or indirectly) include\n    tm.h but not tm_p.h.  */\n-extern bool avr_accumulate_outgoing_args (void);\n+extern int avr_accumulate_outgoing_args (void);\n #define ACCUMULATE_OUTGOING_ARGS avr_accumulate_outgoing_args()\n \n #define INIT_EXPANDERS avr_init_expanders()"}]}