{"sha": "1fab57f26ec24ce4e5672a7515c88611eba2483f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZhYjU3ZjI2ZWMyNGNlNGU1NjcyYTc1MTVjODg2MTFlYmEyNDgzZg==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2020-10-29T06:47:47Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2020-12-06T02:02:43Z"}, "message": "Re: testsuite: Adjust target requirements for sad-vectorize and signbit\n\nFixes\nFAIL: gcc.target/powerpc/signbit-1.c scan-assembler-not stxvd2x\nFAIL: gcc.target/powerpc/signbit-1.c scan-assembler-times mfvsrd 3\nFAIL: gcc.target/powerpc/signbit-1.c scan-assembler-times srdi 3\nFAIL: gcc.target/powerpc/signbit-2.c scan-assembler-times ld 1\nFAIL: gcc.target/powerpc/signbit-2.c scan-assembler-times srdi 1\non powerpc-linux (or powerpc64-linux biarch -m32).\n\nsignbit-1.c is quite obviously a 64-bit only testcase given the\nscan-assembler directives, and the purpose of the testcase to verify\nthe 64-bit only UNSPEC_SIGNBIT patterns.  It could be made to pass for\n-m32 by adding -mpowerpc64, but that option that isn't very effective\nwhen bi-arch testing and results in errors on rs6000-aix.  And it is\npointless to match -m32 stores to the stack followed by loads, which\nis what we do at the moment.\n\nsignbit-2.c on the other hand has more reasonable 32-bit output.\n\n\t* gcc.target/powerpc/signbit-1.c: Reinstate lp64 condition.\n\t* gcc.target/powerpc/signbit-2.c: Match 32-bit output too.", "tree": {"sha": "36c434b4668babda1210a0194ab7ee452fe6cf05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36c434b4668babda1210a0194ab7ee452fe6cf05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fab57f26ec24ce4e5672a7515c88611eba2483f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fab57f26ec24ce4e5672a7515c88611eba2483f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fab57f26ec24ce4e5672a7515c88611eba2483f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fab57f26ec24ce4e5672a7515c88611eba2483f/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e1edf48ebe8881bc7c5e54157f47169290bdd12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e1edf48ebe8881bc7c5e54157f47169290bdd12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e1edf48ebe8881bc7c5e54157f47169290bdd12"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "1642bf46d7a28db9a4e822eb8593f66d0bad7252", "filename": "gcc/testsuite/gcc.target/powerpc/signbit-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fab57f26ec24ce4e5672a7515c88611eba2483f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsignbit-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fab57f26ec24ce4e5672a7515c88611eba2483f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsignbit-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsignbit-1.c?ref=1fab57f26ec24ce4e5672a7515c88611eba2483f", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target lp64 } */\n /* { dg-require-effective-target ppc_float128_sw } */\n /* { dg-require-effective-target powerpc_p8vector_ok } */\n /* { dg-options \"-mdejagnu-cpu=power8 -O2 -mfloat128\" } */"}, {"sha": "1b792916eba8880e60200ab3cac64d9f115f6050", "filename": "gcc/testsuite/gcc.target/powerpc/signbit-2.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fab57f26ec24ce4e5672a7515c88611eba2483f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsignbit-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fab57f26ec24ce4e5672a7515c88611eba2483f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsignbit-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsignbit-2.c?ref=1fab57f26ec24ce4e5672a7515c88611eba2483f", "patch": "@@ -13,5 +13,7 @@ int do_signbit_kf (__float128 *a) { return __builtin_signbit (*a); }\n /* { dg-final { scan-assembler-not   \"lxvw4x\"   } } */\n /* { dg-final { scan-assembler-not   \"lxsd\"     } } */\n /* { dg-final { scan-assembler-not   \"lxsdx\"    } } */\n-/* { dg-final { scan-assembler-times \"ld\"     1 } } */\n-/* { dg-final { scan-assembler-times \"srdi\"   1 } } */\n+/* { dg-final { scan-assembler-times \"ld\"     1 { target lp64 } } } */\n+/* { dg-final { scan-assembler-times \"srdi\"   1 { target lp64 } } } */\n+/* { dg-final { scan-assembler-times \"lwz\"    1 { target ilp32 } } } */\n+/* { dg-final { scan-assembler-times \"rlwinm\" 1 { target ilp32 } } } */"}]}