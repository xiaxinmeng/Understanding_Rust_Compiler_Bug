{"sha": "c092b0457f310ebea7526702dbb68216ae447550", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA5MmIwNDU3ZjMxMGViZWE3NTI2NzAyZGJiNjgyMTZhZTQ0NzU1MA==", "commit": {"author": {"name": "Peter Bergner", "email": "bergner@vnet.ibm.com", "date": "2007-04-17T16:07:05Z"}, "committer": {"name": "Peter Bergner", "email": "bergner@gcc.gnu.org", "date": "2007-04-17T16:07:05Z"}, "message": "rs6000.c (rs6000_hard_regno_mode_ok): Force TDmode regnos into even/odd register pairs.\n\n\t* config/rs6000/rs6000.c (rs6000_hard_regno_mode_ok): Force TDmode\n\tregnos into even/odd register pairs.\n\t* config/rs6000/rs6000.h [SLOW_UNALIGNED_ACCESS]: Treat DDmode and\n\tTDmode similar to the other floating point modes.\n\t[SECONDARY_MEMORY_NEEDED]: Treat DDmode similar to DFmode.\n\t* config/rs6000/dfp.md (negdd2, absdd2, negtd2, abstd2): New\n\tdefine_expand's.\n\t(negdd2_fpr, absdd2_fpr, nabsdd2_fpr, negtd2_fpr, abstd2_fpr,\n\tnabstd2_fpr, movdd_hardfloat64_mfpgpr): New define_insn's.\n\t(movdd_hardfloat64): Use TARGET_MFPGPR.\n\nFrom-SVN: r123916", "tree": {"sha": "15a7fde50fb31253cb0d7c99c024b149f25e8f98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15a7fde50fb31253cb0d7c99c024b149f25e8f98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c092b0457f310ebea7526702dbb68216ae447550", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c092b0457f310ebea7526702dbb68216ae447550", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c092b0457f310ebea7526702dbb68216ae447550", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c092b0457f310ebea7526702dbb68216ae447550/comments", "author": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ea30850a82ca69b3ab52b5baed6491939cbb163e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea30850a82ca69b3ab52b5baed6491939cbb163e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea30850a82ca69b3ab52b5baed6491939cbb163e"}], "stats": {"total": 117, "additions": 114, "deletions": 3}, "files": [{"sha": "19525a3ff030f145f0a356bbd983547e56c34a3d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c092b0457f310ebea7526702dbb68216ae447550/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c092b0457f310ebea7526702dbb68216ae447550/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c092b0457f310ebea7526702dbb68216ae447550", "patch": "@@ -1,3 +1,16 @@\n+2007-04-17  Peter Bergner  <bergner@vnet.ibm.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_hard_regno_mode_ok): Force TDmode\n+\tregnos into even/odd register pairs.\n+\t* config/rs6000/rs6000.h [SLOW_UNALIGNED_ACCESS]: Treat DDmode and\n+\tTDmode similar to the other floating point modes.\n+\t[SECONDARY_MEMORY_NEEDED]: Treat DDmode similar to DFmode.\n+\t* config/rs6000/dfp.md (negdd2, absdd2, negtd2, abstd2): New\n+\tdefine_expand's.\n+\t(negdd2_fpr, absdd2_fpr, nabsdd2_fpr, negtd2_fpr, abstd2_fpr,\n+\tnabstd2_fpr, movdd_hardfloat64_mfpgpr): New define_insn's.\n+\t(movdd_hardfloat64): Use TARGET_MFPGPR.\n+\n 2007-04-17  Bernd Schmidt  <bernd.schmidt@analog.com>\n \n \t* reload1.c (delete_output_reload): Don't count output in n_inherited."}, {"sha": "8c78d818f26b6f239888306c84dbd023335e0d5c", "filename": "gcc/config/rs6000/dfp.md", "status": "modified", "additions": 93, "deletions": 1, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c092b0457f310ebea7526702dbb68216ae447550/gcc%2Fconfig%2Frs6000%2Fdfp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c092b0457f310ebea7526702dbb68216ae447550/gcc%2Fconfig%2Frs6000%2Fdfp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdfp.md?ref=c092b0457f310ebea7526702dbb68216ae447550", "patch": "@@ -21,6 +21,39 @@\n ;; Free Software Foundation, 51 Franklin Street, Fifth Floor, Boston,\n ;; MA 02110-1301, USA.\n \n+(define_expand \"negdd2\"\n+  [(set (match_operand:DD 0 \"gpc_reg_operand\" \"\")\n+\t(neg:DD (match_operand:DD 1 \"gpc_reg_operand\" \"\")))]\n+  \"TARGET_HARD_FLOAT && (TARGET_FPRS || TARGET_E500_DOUBLE)\"\n+  \"\")\n+\n+(define_insn \"*negdd2_fpr\"\n+  [(set (match_operand:DD 0 \"gpc_reg_operand\" \"=f\")\n+\t(neg:DD (match_operand:DD 1 \"gpc_reg_operand\" \"f\")))]\n+  \"TARGET_HARD_FLOAT && TARGET_FPRS\"\n+  \"fneg %0,%1\"\n+  [(set_attr \"type\" \"fp\")])\n+\n+(define_expand \"absdd2\"\n+  [(set (match_operand:DD 0 \"gpc_reg_operand\" \"\")\n+\t(abs:DD (match_operand:DD 1 \"gpc_reg_operand\" \"\")))]\n+  \"TARGET_HARD_FLOAT && (TARGET_FPRS || TARGET_E500_DOUBLE)\"\n+  \"\")\n+\n+(define_insn \"*absdd2_fpr\"\n+  [(set (match_operand:DD 0 \"gpc_reg_operand\" \"=f\")\n+\t(abs:DD (match_operand:DD 1 \"gpc_reg_operand\" \"f\")))]\n+  \"TARGET_HARD_FLOAT && TARGET_FPRS\"\n+  \"fabs %0,%1\"\n+  [(set_attr \"type\" \"fp\")])\n+\n+(define_insn \"*nabsdd2_fpr\"\n+  [(set (match_operand:DD 0 \"gpc_reg_operand\" \"=f\")\n+\t(neg:DD (abs:DD (match_operand:DF 1 \"gpc_reg_operand\" \"f\"))))]\n+  \"TARGET_HARD_FLOAT && TARGET_FPRS\"\n+  \"fnabs %0,%1\"\n+  [(set_attr \"type\" \"fp\")])\n+\n (define_expand \"movdd\"\n   [(set (match_operand:DD 0 \"nonimmediate_operand\" \"\")\n \t(match_operand:DD 1 \"any_operand\" \"\"))]\n@@ -252,10 +285,36 @@\n \n ; ld/std require word-aligned displacements -> 'Y' constraint.\n ; List Y->r and r->Y before r->r for reload.\n+(define_insn \"*movdd_hardfloat64_mfpgpr\"\n+  [(set (match_operand:DD 0 \"nonimmediate_operand\" \"=Y,r,!r,f,f,m,*c*l,!r,*h,!r,!r,!r,r,f\")\n+\t(match_operand:DD 1 \"input_operand\" \"r,Y,r,f,m,f,r,h,0,G,H,F,f,r\"))]\n+  \"TARGET_POWERPC64 && TARGET_MFPGPR && TARGET_HARD_FLOAT && TARGET_FPRS\n+   && (gpc_reg_operand (operands[0], DDmode)\n+       || gpc_reg_operand (operands[1], DDmode))\"\n+  \"@\n+   std%U0%X0 %1,%0\n+   ld%U1%X1 %0,%1\n+   mr %0,%1\n+   fmr %0,%1\n+   lfd%U1%X1 %0,%1\n+   stfd%U0%X0 %1,%0\n+   mt%0 %1\n+   mf%1 %0\n+   {cror 0,0,0|nop}\n+   #\n+   #\n+   #\n+   mftgpr %0,%1\n+   mffgpr %0,%1\"\n+  [(set_attr \"type\" \"store,load,*,fp,fpload,fpstore,mtjmpr,mfjmpr,*,*,*,*,mftgpr,mffgpr\")\n+   (set_attr \"length\" \"4,4,4,4,4,4,4,4,4,8,12,16,4,4\")])\n+\n+; ld/std require word-aligned displacements -> 'Y' constraint.\n+; List Y->r and r->Y before r->r for reload.(define_insn \"*movdd_hardfloat64\"\n (define_insn \"*movdd_hardfloat64\"\n   [(set (match_operand:DD 0 \"nonimmediate_operand\" \"=Y,r,!r,f,f,m,*c*l,!r,*h,!r,!r,!r\")\n \t(match_operand:DD 1 \"input_operand\" \"r,Y,r,f,m,f,r,h,0,G,H,F\"))]\n-  \"TARGET_POWERPC64 && TARGET_HARD_FLOAT && TARGET_FPRS\n+  \"TARGET_POWERPC64 && !TARGET_MFPGPR && TARGET_HARD_FLOAT && TARGET_FPRS\n    && (gpc_reg_operand (operands[0], DDmode)\n        || gpc_reg_operand (operands[1], DDmode))\"\n   \"@\n@@ -293,6 +352,39 @@\n   [(set_attr \"type\" \"load,store,*,mtjmpr,mfjmpr,*,*,*,*\")\n    (set_attr \"length\" \"4,4,4,4,4,8,12,16,4\")])\n \n+(define_expand \"negtd2\"\n+  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"\")\n+\t(neg:TD (match_operand:TD 1 \"gpc_reg_operand\" \"\")))]\n+  \"TARGET_HARD_FLOAT && (TARGET_FPRS || TARGET_E500_DOUBLE)\"\n+  \"\")\n+\n+(define_insn \"*negtd2_fpr\"\n+  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=f\")\n+\t(neg:TD (match_operand:TD 1 \"gpc_reg_operand\" \"f\")))]\n+  \"TARGET_HARD_FLOAT && TARGET_FPRS\"\n+  \"fneg %0,%1\"\n+  [(set_attr \"type\" \"fp\")])\n+\n+(define_expand \"abstd2\"\n+  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"\")\n+\t(abs:TD (match_operand:TD 1 \"gpc_reg_operand\" \"\")))]\n+  \"TARGET_HARD_FLOAT && (TARGET_FPRS || TARGET_E500_DOUBLE)\"\n+  \"\")\n+\n+(define_insn \"*abstd2_fpr\"\n+  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=f\")\n+\t(abs:TD (match_operand:TD 1 \"gpc_reg_operand\" \"f\")))]\n+  \"TARGET_HARD_FLOAT && TARGET_FPRS\"\n+  \"fabs %0,%1\"\n+  [(set_attr \"type\" \"fp\")])\n+\n+(define_insn \"*nabstd2_fpr\"\n+  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=f\")\n+\t(neg:TD (abs:TD (match_operand:DF 1 \"gpc_reg_operand\" \"f\"))))]\n+  \"TARGET_HARD_FLOAT && TARGET_FPRS\"\n+  \"fnabs %0,%1\"\n+  [(set_attr \"type\" \"fp\")])\n+\n (define_expand \"movtd\"\n   [(set (match_operand:TD 0 \"general_operand\" \"\")\n \t(match_operand:TD 1 \"any_operand\" \"\"))]"}, {"sha": "47e1a910da9f6c199472b46790c57fcd9124a889", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c092b0457f310ebea7526702dbb68216ae447550/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c092b0457f310ebea7526702dbb68216ae447550/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=c092b0457f310ebea7526702dbb68216ae447550", "patch": "@@ -1134,6 +1134,7 @@ rs6000_hard_regno_mode_ok (int regno, enum machine_mode mode)\n   if (FP_REGNO_P (regno))\n     return\n       (SCALAR_FLOAT_MODE_P (mode)\n+       && (mode != TDmode || (regno % 2) == 0)\n        && mode != SDmode\n        && FP_REGNO_P (regno + HARD_REGNO_NREGS (regno, mode) - 1))\n       || (GET_MODE_CLASS (mode) == MODE_INT"}, {"sha": "57cd68dc2155a896e592e935d92698dd37f325d3", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c092b0457f310ebea7526702dbb68216ae447550/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c092b0457f310ebea7526702dbb68216ae447550/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=c092b0457f310ebea7526702dbb68216ae447550", "patch": "@@ -590,6 +590,7 @@ extern enum rs6000_nop_insertion rs6000_sched_insert_nops;\n #define SLOW_UNALIGNED_ACCESS(MODE, ALIGN)\t\t\t\t\\\n   (STRICT_ALIGNMENT\t\t\t\t\t\t\t\\\n    || (((MODE) == SFmode || (MODE) == DFmode || (MODE) == TFmode\t\\\n+\t|| (MODE) == DDmode || (MODE) == TDmode\t\t\t\t\\\n \t|| (MODE) == DImode)\t\t\t\t\t\t\\\n        && (ALIGN) < 32))\n \f\n@@ -1147,10 +1148,14 @@ enum reg_class\n #define SECONDARY_MEMORY_NEEDED(CLASS1,CLASS2,MODE)\t\t\t\\\n  ((CLASS1) != (CLASS2) && (((CLASS1) == FLOAT_REGS\t\t\t\\\n                             && (!TARGET_MFPGPR || !TARGET_POWERPC64\t\\\n-\t\t\t\t|| ((MODE != DFmode) && (MODE != DImode)))) \\\n+\t\t\t\t|| ((MODE != DFmode)\t\t\t\\\n+\t\t\t\t    && (MODE != DDmode)\t\t\t\\\n+\t\t\t\t    && (MODE != DImode))))\t\t\\\n \t\t\t   || ((CLASS2) == FLOAT_REGS\t\t\t\\\n                                && (!TARGET_MFPGPR || !TARGET_POWERPC64\t\\\n-\t\t\t\t|| ((MODE != DFmode) && (MODE != DImode)))) \\\n+\t\t\t\t   || ((MODE != DFmode)\t\t\t\\\n+\t\t\t\t       && (MODE != DDmode)\t\t\\\n+\t\t\t\t       && (MODE != DImode))))\t\t\\\n \t\t\t   || (CLASS1) == ALTIVEC_REGS\t\t\t\\\n \t\t\t   || (CLASS2) == ALTIVEC_REGS))\n "}]}