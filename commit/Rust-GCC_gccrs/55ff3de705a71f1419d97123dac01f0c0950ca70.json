{"sha": "55ff3de705a71f1419d97123dac01f0c0950ca70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVmZjNkZTcwNWE3MWYxNDE5ZDk3MTIzZGFjMDFmMGMwOTUwY2E3MA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-01-06T18:18:15Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-01-06T18:18:15Z"}, "message": "natClass.cc (_getConstructors): Correctly check whether method name is the init name.\n\n\t* java/lang/natClass.cc (_getConstructors): Correctly check\n\twhether method name is the init name.\n\t(getMethod): Look at accflags on method in `klass', not `this'.\n\nFrom-SVN: r31258", "tree": {"sha": "b98179b94a302004439e482cc81c949421511d4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b98179b94a302004439e482cc81c949421511d4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55ff3de705a71f1419d97123dac01f0c0950ca70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55ff3de705a71f1419d97123dac01f0c0950ca70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55ff3de705a71f1419d97123dac01f0c0950ca70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55ff3de705a71f1419d97123dac01f0c0950ca70/comments", "author": null, "committer": null, "parents": [{"sha": "c478efd1426b2bd74bed04e14bfc4aa08164839f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c478efd1426b2bd74bed04e14bfc4aa08164839f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c478efd1426b2bd74bed04e14bfc4aa08164839f"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "207feda1f7a705170143bac3c857259094eaca9a", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ff3de705a71f1419d97123dac01f0c0950ca70/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ff3de705a71f1419d97123dac01f0c0950ca70/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=55ff3de705a71f1419d97123dac01f0c0950ca70", "patch": "@@ -1,3 +1,9 @@\n+2000-01-06  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* java/lang/natClass.cc (_getConstructors): Correctly check\n+\twhether method name is the init name.\n+\t(getMethod): Look at accflags on method in `klass', not `this'.\n+\n 2000-01-05  Tom Tromey  <tromey@cygnus.com>\n \n \t* java/lang/natClass.cc (getMethod): Compute offset relative to"}, {"sha": "07a1e1d76201c2e60211a04c92dcd8c7e776e12f", "filename": "libjava/java/lang/natClass.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ff3de705a71f1419d97123dac01f0c0950ca70/libjava%2Fjava%2Flang%2FnatClass.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ff3de705a71f1419d97123dac01f0c0950ca70/libjava%2Fjava%2Flang%2FnatClass.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatClass.cc?ref=55ff3de705a71f1419d97123dac01f0c0950ca70", "patch": "@@ -139,7 +139,7 @@ java::lang::Class::_getConstructors (jboolean declared)\n     {\n       _Jv_Method *method = &methods[i];\n       if (method->name == NULL\n-\t  && ! _Jv_equalUtf8Consts (method->name, init_name))\n+\t  || ! _Jv_equalUtf8Consts (method->name, init_name))\n \tcontinue;\n       if (! declared\n \t  && ! java::lang::reflect::Modifier::isPublic(method->accflags))\n@@ -154,7 +154,7 @@ java::lang::Class::_getConstructors (jboolean declared)\n     {\n       _Jv_Method *method = &methods[i];\n       if (method->name == NULL\n-\t  && ! _Jv_equalUtf8Consts (method->name, init_name))\n+\t  || ! _Jv_equalUtf8Consts (method->name, init_name))\n \tcontinue;\n       if (! declared\n \t  && ! java::lang::reflect::Modifier::isPublic(method->accflags))\n@@ -473,7 +473,7 @@ java::lang::Class::getMethod (jstring name, JArray<jclass> *param_types)\n \t      using namespace java::lang::reflect;\n \n \t      // Method must be public.\n-\t      if (! Modifier::isPublic (methods[i].accflags))\n+\t      if (! Modifier::isPublic (klass->methods[i].accflags))\n \t\tbreak;\n \n \t      Method *rmethod = new Method ();"}]}