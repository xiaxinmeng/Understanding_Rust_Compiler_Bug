{"sha": "dc915b361bbc99da83fc53db7f7e0e28d0ce12c8", "node_id": "C_kwDOANBUbNoAKGRjOTE1YjM2MWJiYzk5ZGE4M2ZjNTNkYjdmN2UwZTI4ZDBjZTEyYzg", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2021-11-21T11:40:08Z"}, "committer": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2021-11-21T11:40:08Z"}, "message": "Tweak tree-ssa-math-opts.c to solve PR target/102117.\n\nThis patch resolves PR target/102117 on s390.  The problem is that\nsome of the functionality of GCC's RTL expanders is no longer triggered\nfollowing the transition to tree SSA form.  On s390, unsigned widening\nmultiplications are converted into WIDEN_MULT_EXPR (aka w* in tree dumps),\nbut signed widening multiplies are left in their original form, which\nalas doesn't benefit from the clever logic in expand_widening_mult.\n\nThe fix is to teach convert_mult_to_widen, that RTL expansion can\nsynthesize a signed widening multiplication if the target provides\na suitable umul_widen_optab.\n\nOn s390-linux-gnu with -O2 -m64, the code in the bugzilla PR currently\ngenerates:\n\nimul128:\n        stmg    %r12,%r13,96(%r15)\n        srag    %r0,%r4,63\n        srag    %r1,%r3,63\n        lgr     %r13,%r3\n        mlgr    %r12,%r4\n        msgr    %r1,%r4\n        msgr    %r0,%r3\n        lgr     %r4,%r12\n        agr     %r1,%r0\n        lgr     %r5,%r13\n        agr     %r4,%r1\n        stmg    %r4,%r5,0(%r2)\n        lmg     %r12,%r13,96(%r15)\n        br      %r14\n\nbut with this patch should now generate the more efficient:\n\nimul128:\n        lgr     %r1,%r3\n        mlgr    %r0,%r4\n        srag    %r5,%r3,63\n        ngr     %r5,%r4\n        srag    %r4,%r4,63\n        sgr     %r0,%r5\n        ngr     %r4,%r3\n        sgr     %r0,%r4\n        stmg    %r0,%r1,0(%r2)\n        br      %r14\n\n2021-11-21  Roger Sayle  <roger@nextmovesoftware.com>\n\t    Robin Dapp  <rdapp@linux.ibm.com>\n\ngcc/ChangeLog\n\tPR target/102117\n\t* tree-ssa-math-opts.c (convert_mult_to_widen): Recognize\n\tsigned WIDEN_MULT_EXPR if the target supports umul_widen_optab.\n\ngcc/testsuite/ChangeLog\n\tPR target/102117\n\t* gcc.target/s390/mul-wide.c: New test case.\n\t* gcc.target/s390/umul-wide.c: New test case.", "tree": {"sha": "ef9ce371c0a86a081ecf4cb36151ca9715c0de27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef9ce371c0a86a081ecf4cb36151ca9715c0de27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc915b361bbc99da83fc53db7f7e0e28d0ce12c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc915b361bbc99da83fc53db7f7e0e28d0ce12c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc915b361bbc99da83fc53db7f7e0e28d0ce12c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc915b361bbc99da83fc53db7f7e0e28d0ce12c8/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f658f1d7a22c09e1192fb2343f20263890106b82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f658f1d7a22c09e1192fb2343f20263890106b82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f658f1d7a22c09e1192fb2343f20263890106b82"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "8a2092e01c4efbbf72be3c43f8ce4f230761339a", "filename": "gcc/testsuite/gcc.target/s390/mul-wide.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc915b361bbc99da83fc53db7f7e0e28d0ce12c8/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmul-wide.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc915b361bbc99da83fc53db7f7e0e28d0ce12c8/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmul-wide.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmul-wide.c?ref=dc915b361bbc99da83fc53db7f7e0e28d0ce12c8", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -m64 -fdump-tree-optimized\" } */\n+\n+__int128 foo(long long a, long long b)\n+{\n+   return (__int128)a * (__int128)b;\n+}\n+\n+/* { dg-final { scan-tree-dump \" w\\\\* \" \"optimized\" } } */"}, {"sha": "33a74e521702dc175623351bc59db9234ca3cc14", "filename": "gcc/testsuite/gcc.target/s390/umul-wide.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc915b361bbc99da83fc53db7f7e0e28d0ce12c8/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fumul-wide.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc915b361bbc99da83fc53db7f7e0e28d0ce12c8/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fumul-wide.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fumul-wide.c?ref=dc915b361bbc99da83fc53db7f7e0e28d0ce12c8", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -m64 -fdump-tree-optimized\" } */\n+\n+unsigned __int128 foo(unsigned long long a, unsigned long long b)\n+{\n+   return (unsigned __int128)a * (unsigned __int128)b;\n+}\n+\n+/* { dg-final { scan-tree-dump \" w\\\\* \" \"optimized\" } } */"}, {"sha": "6131824191fb90e321873ae50f03d62cbb7c5db8", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc915b361bbc99da83fc53db7f7e0e28d0ce12c8/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc915b361bbc99da83fc53db7f7e0e28d0ce12c8/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=dc915b361bbc99da83fc53db7f7e0e28d0ce12c8", "patch": "@@ -2723,7 +2723,16 @@ convert_mult_to_widen (gimple *stmt, gimple_stmt_iterator *gsi)\n \t  from_unsigned1 = from_unsigned2 = false;\n \t}\n       else\n-\treturn false;\n+\t{\n+\t  /* Expand can synthesize smul_widen_optab if the target\n+\t     supports umul_widen_optab.  */\n+\t  op = umul_widen_optab;\n+\t  handler = find_widening_optab_handler_and_mode (op, to_mode,\n+\t\t\t\t\t\t\t  from_mode,\n+\t\t\t\t\t\t\t  &actual_mode);\n+\t  if (handler == CODE_FOR_nothing)\n+\t    return false;\n+\t}\n     }\n \n   /* Ensure that the inputs to the handler are in the correct precison"}]}