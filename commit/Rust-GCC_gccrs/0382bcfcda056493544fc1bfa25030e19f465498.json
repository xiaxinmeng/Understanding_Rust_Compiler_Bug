{"sha": "0382bcfcda056493544fc1bfa25030e19f465498", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM4MmJjZmNkYTA1NjQ5MzU0NGZjMWJmYTI1MDMwZTE5ZjQ2NTQ5OA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-12-05T15:23:26Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-12-05T15:23:26Z"}, "message": "Correct noexcept mismatch in declarations.\n\n2017-12-05  Jason Merrill  <jason@redhat.com>\n\t    Jonathan Wakely  <jwakely@redhat.com>\n\n\t* include/bits/fs_fwd.h (copy, copy_file): Remove noexcept.\n\t(permissions): Add noexcept.\n\t* include/bits/fs_ops.h (permissions): Add noexcept.\n\t* libsupc++/eh_throw.cc (__cxa_init_primary_exception): Add\n\t_GLIBCXX_NOTHROW.\n\nCo-Authored-By: Jonathan Wakely <jwakely@redhat.com>\n\nFrom-SVN: r255425", "tree": {"sha": "40e93d1dc341e955d9e87486a724a312050fdb66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40e93d1dc341e955d9e87486a724a312050fdb66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0382bcfcda056493544fc1bfa25030e19f465498", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0382bcfcda056493544fc1bfa25030e19f465498", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0382bcfcda056493544fc1bfa25030e19f465498", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0382bcfcda056493544fc1bfa25030e19f465498/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9824a520b2b293f3e2f0e954e8b358317b553356", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9824a520b2b293f3e2f0e954e8b358317b553356", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9824a520b2b293f3e2f0e954e8b358317b553356"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "34ec0b5ff340b6268c83a8825317e4721c07b1ea", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0382bcfcda056493544fc1bfa25030e19f465498/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0382bcfcda056493544fc1bfa25030e19f465498/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0382bcfcda056493544fc1bfa25030e19f465498", "patch": "@@ -1,3 +1,12 @@\n+2017-12-05  Jason Merrill  <jason@redhat.com>\n+\t    Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/fs_fwd.h (copy, copy_file): Remove noexcept.\n+\t(permissions): Add noexcept.\n+\t* include/bits/fs_ops.h (permissions): Add noexcept.\n+\t* libsupc++/eh_throw.cc (__cxa_init_primary_exception): Add\n+\t_GLIBCXX_NOTHROW.\n+\n 2017-12-04  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/bits/regex_compiler.tcc: Use C-style comment to work around"}, {"sha": "66b0d20f027c6f545d21307ab7125636467b8d13", "filename": "libstdc++-v3/include/bits/fs_fwd.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0382bcfcda056493544fc1bfa25030e19f465498/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_fwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0382bcfcda056493544fc1bfa25030e19f465498/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_fwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_fwd.h?ref=0382bcfcda056493544fc1bfa25030e19f465498", "patch": "@@ -300,11 +300,11 @@ _GLIBCXX_END_NAMESPACE_CXX11\n \n   void copy(const path& __from, const path& __to, copy_options __options);\n   void copy(const path& __from, const path& __to, copy_options __options,\n-\t    error_code&) noexcept;\n+\t    error_code&);\n \n   bool copy_file(const path& __from, const path& __to, copy_options __option);\n   bool copy_file(const path& __from, const path& __to, copy_options __option,\n-\t\t error_code&) noexcept;\n+\t\t error_code&);\n \n   path current_path();\n \n@@ -319,7 +319,7 @@ _GLIBCXX_END_NAMESPACE_CXX11\n   file_time_type last_write_time(const path&);\n   file_time_type last_write_time(const path&, error_code&) noexcept;\n \n-  void permissions(const path&, perms, perm_options, error_code&);\n+  void permissions(const path&, perms, perm_options, error_code&) noexcept;\n \n   path proximate(const path& __p, const path& __base, error_code& __ec);\n   path proximate(const path& __p, const path& __base, error_code& __ec);"}, {"sha": "22422bd1f4d48f751d8d0315f6c8cd83e47f7803", "filename": "libstdc++-v3/include/bits/fs_ops.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0382bcfcda056493544fc1bfa25030e19f465498/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_ops.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0382bcfcda056493544fc1bfa25030e19f465498/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_ops.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_ops.h?ref=0382bcfcda056493544fc1bfa25030e19f465498", "patch": "@@ -253,7 +253,7 @@ namespace filesystem\n \n   void\n   permissions(const path& __p, perms __prms, perm_options __opts,\n-\t      error_code& __ec);\n+\t      error_code& __ec) noexcept;\n \n   inline path proximate(const path& __p, error_code& __ec)\n   { return proximate(__p, current_path(), __ec); }"}, {"sha": "daf134993d35f610f96f11c82baf02014f4356a0", "filename": "libstdc++-v3/libsupc++/eh_throw.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0382bcfcda056493544fc1bfa25030e19f465498/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_throw.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0382bcfcda056493544fc1bfa25030e19f465498/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_throw.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_throw.cc?ref=0382bcfcda056493544fc1bfa25030e19f465498", "patch": "@@ -53,8 +53,10 @@ __gxx_exception_cleanup (_Unwind_Reason_Code code, _Unwind_Exception *exc)\n }\n \n extern \"C\" __cxa_refcounted_exception*\n-__cxxabiv1::__cxa_init_primary_exception(void *obj, std::type_info *tinfo,\n-                                         void (_GLIBCXX_CDTOR_CALLABI *dest) (void *))\n+__cxxabiv1::\n+__cxa_init_primary_exception(void *obj, std::type_info *tinfo,\n+\t\t\t     void (_GLIBCXX_CDTOR_CALLABI *dest) (void *))\n+_GLIBCXX_NOTHROW\n {\n   __cxa_refcounted_exception *header\n     = __get_refcounted_exception_header_from_obj (obj);"}]}