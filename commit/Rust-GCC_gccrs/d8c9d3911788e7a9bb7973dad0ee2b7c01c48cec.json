{"sha": "d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhjOWQzOTExNzg4ZTdhOWJiNzk3M2RhZDBlZTJiN2MwMWM0OGNlYw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2012-05-29T14:54:22Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2012-05-29T14:54:22Z"}, "message": "ieee754-df.S: Fix typos.\n\n\t* config/arm/ieee754-df.S: Fix typos.\n\t* config/arm/ieee754-sf.S: Fix typos.\n\t* config/c6x/libunwind.S: Fix typos.\n\t* config/epiphany/udivsi3-float.c: Fix typos.\n\t* config/microblaze/muldi3_hard.S: Fix typos.\n\t* config/picochip/adddi3.S: Fix typos.\n\t* config/picochip/ashlsi3.S: Fix typos.\n\t* config/picochip/ashrsi3.S: Fix typos.\n\t* config/picochip/clzsi2.S: Fix typos.\n\t* config/picochip/cmpsi2.S: Fix typos.\n\t* config/picochip/divmod15.S: Fix typos.\n\t* config/picochip/divmodhi4.S: Fix typos.\n\t* config/picochip/divmodsi4.S: Fix typos.\n\t* config/picochip/longjmp.S: Fix typos.\n\t* config/picochip/lshrsi3.S: Fix typos.\n\t* config/picochip/parityhi2.S: Fix typos.\n\t* config/picochip/popcounthi2.S: Fix typos.\n\t* config/picochip/setjmp.S: Fix typos.\n\t* config/picochip/subdi3.S: Fix typos.\n\t* config/picochip/ucmpsi2.S: Fix typos.\n\t* config/picochip/udivmodhi4.S: Fix typos.\n\t* config/picochip/udivmodsi4.S: Fix typos.\n\t* config/spu/divv2df3.c: Fix typos.\n\t* config/spu/mfc_multi_tag_release.c: Fix typos.\n\t* config/spu/mfc_tag_release.c: Fix typos.\n\t* configure.ac: Fix typos.\n\t* configure: Regenerate.\n\nFrom-SVN: r187967", "tree": {"sha": "4a95738ae9bf34c0ae8cf987fb2742814b616353", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a95738ae9bf34c0ae8cf987fb2742814b616353"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d9641ccfa24bbfed5cf7f03eae558439817bb6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d9641ccfa24bbfed5cf7f03eae558439817bb6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d9641ccfa24bbfed5cf7f03eae558439817bb6e"}], "stats": {"total": 86, "additions": 58, "deletions": 28}, "files": [{"sha": "38b9e562d51019e6e031da3290e78ae31fed434b", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -1,3 +1,33 @@\n+2012-05-29  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/arm/ieee754-df.S: Fix typos.\n+\t* config/arm/ieee754-sf.S: Fix typos.\n+\t* config/c6x/libunwind.S: Fix typos.\n+\t* config/epiphany/udivsi3-float.c: Fix typos.\n+\t* config/microblaze/muldi3_hard.S: Fix typos.\n+\t* config/picochip/adddi3.S: Fix typos.\n+\t* config/picochip/ashlsi3.S: Fix typos.\n+\t* config/picochip/ashrsi3.S: Fix typos.\n+\t* config/picochip/clzsi2.S: Fix typos.\n+\t* config/picochip/cmpsi2.S: Fix typos.\n+\t* config/picochip/divmod15.S: Fix typos.\n+\t* config/picochip/divmodhi4.S: Fix typos.\n+\t* config/picochip/divmodsi4.S: Fix typos.\n+\t* config/picochip/longjmp.S: Fix typos.\n+\t* config/picochip/lshrsi3.S: Fix typos.\n+\t* config/picochip/parityhi2.S: Fix typos.\n+\t* config/picochip/popcounthi2.S: Fix typos.\n+\t* config/picochip/setjmp.S: Fix typos.\n+\t* config/picochip/subdi3.S: Fix typos.\n+\t* config/picochip/ucmpsi2.S: Fix typos.\n+\t* config/picochip/udivmodhi4.S: Fix typos.\n+\t* config/picochip/udivmodsi4.S: Fix typos.\n+\t* config/spu/divv2df3.c: Fix typos.\n+\t* config/spu/mfc_multi_tag_release.c: Fix typos.\n+\t* config/spu/mfc_tag_release.c: Fix typos.\n+\t* configure.ac: Fix typos.\n+\t* configure: Regenerate.\n+\n 2012-05-25  Ian Lance Taylor  <iant@google.com>\n \n \t* config/i386/morestack.S (__morestack_non_split): Check whether"}, {"sha": "99f1ebb796f904db354e6ba4fff647a60d4f9758", "filename": "libgcc/config/arm/ieee754-df.S", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Farm%2Fieee754-df.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Farm%2Fieee754-df.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Fieee754-df.S?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -922,7 +922,7 @@ ARM_FUNC_ALIAS aeabi_ddiv divdf3\n \tteqne\tr5, ip\n \tbleq\tLSYM(Ldv_s)\n \n-\t@ Substract divisor exponent from dividend''s.\n+\t@ Subtract divisor exponent from dividend''s.\n \tsub\tr4, r4, r5\n \n \t@ Preserve final sign into lr.\n@@ -956,7 +956,7 @@ ARM_FUNC_ALIAS aeabi_ddiv divdf3\n \tmovs\tyh, yh, lsr #1\n \tmov\tyl, yl, rrx\n 1:\n-\t@ Perform first substraction to align result to a nibble.\n+\t@ Perform first subtraction to align result to a nibble.\n \tsubs\tr6, r6, yl\n \tsbc\tr5, r5, yh\n \tmovs\tyh, yh, lsr #1"}, {"sha": "cf4ff0e144f844561cc9330ee7ce32fab2b4226e", "filename": "libgcc/config/arm/ieee754-sf.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Farm%2Fieee754-sf.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Farm%2Fieee754-sf.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Fieee754-sf.S?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -661,7 +661,7 @@ ARM_FUNC_ALIAS aeabi_fdiv divsf3\n \tbeq\tLSYM(Ldv_s)\n LSYM(Ldv_x):\n \n-\t@ Substract divisor exponent from dividend''s\n+\t@ Subtract divisor exponent from dividend''s\n \tsub\tr2, r2, r3\n \n \t@ Preserve final sign into ip."}, {"sha": "7e649837806225fb6372afcaad55473e935b4e21", "filename": "libgcc/config/c6x/libunwind.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fc6x%2Flibunwind.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fc6x%2Flibunwind.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fc6x%2Flibunwind.S?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -113,7 +113,7 @@ restore_core_regs:\n \t# Zero demand saved flags\n \tmvk\t.s1\t0, A0\n \tstw\t.d2t1\tA0, *+B15[1]\n-\t# Save return address, setup additional argument and call fucntion\n+\t# Save return address, setup additional argument and call function\n \tstw\t.d2t2\tB3, *+B15[35]\n \tadd\t.d\\argside\tB15, 4, \\argreg\n \tdo_call\t__gnu\\name"}, {"sha": "db5a390c3e93aad82be6928c565216af869929c2", "filename": "libgcc/config/epiphany/udivsi3-float.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fepiphany%2Fudivsi3-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fepiphany%2Fudivsi3-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fepiphany%2Fudivsi3-float.c?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -40,7 +40,7 @@ __udivsi3 (unsigned int a, unsigned int b)\n \n   /* Assuming B is nonzero, compute S0 such that 0 <= S0,\n      (B << S0+1) does not overflow,\n-     A < 4.01 * (B << S0), with S0 choosen as small as possible\n+     A < 4.01 * (B << S0), with S0 chosen as small as possible\n      without taking to much time calculating.  */\n #ifdef CONVERT_UNSIGNED\n   u0.f = a;"}, {"sha": "1b6fff306e86b78a12f1c124621bb1cce0d5f810", "filename": "libgcc/config/microblaze/muldi3_hard.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fmicroblaze%2Fmuldi3_hard.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fmicroblaze%2Fmuldi3_hard.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmicroblaze%2Fmuldi3_hard.S?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -68,7 +68,7 @@ muldi3_hardproc:\n \tswi\tr26,r1,24\n \tswi\tr27,r1,28\n \n-# Load all the 16 bit values for A thru H\n+# Load all the 16 bit values for A through H\n \tlhui\tr20,r1,44   # A\n \tlhui\tr21,r1,46   # B\n \tlhui\tr22,r1,48   # C"}, {"sha": "860455e4cc2604591990cd4e06fd42ac8b3d1c5f", "filename": "libgcc/config/picochip/adddi3.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fadddi3.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fadddi3.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpicochip%2Fadddi3.S?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -62,7 +62,7 @@ _picoMark_FUNCTION_END=\n // All DWARF information between this marker, and the END OF DWARF\n // marker should be included in the source file. Search for\n // FUNCTION_STACK_SIZE_GOES_HERE and FUNCTION NAME GOES HERE, and\n-// provide the relevent information. Add markers called\n+// provide the relevant information. Add markers called\n // _picoMark_FUNCTION_BEGIN and _picoMark_FUNCTION_END around the\n // function in question.\n //============================================================================"}, {"sha": "880738e2da74d1e1dd9819b8273127ab58e7d9c1", "filename": "libgcc/config/picochip/ashlsi3.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fashlsi3.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fashlsi3.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpicochip%2Fashlsi3.S?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -61,7 +61,7 @@ _picoMark_FUNCTION_END=\n // All DWARF information between this marker, and the END OF DWARF\n // marker should be included in the source file. Search for\n // FUNCTION_STACK_SIZE_GOES_HERE and FUNCTION NAME GOES HERE, and\n-// provide the relevent information. Add markers called\n+// provide the relevant information. Add markers called\n // _picoMark_FUNCTION_BEGIN and _picoMark_FUNCTION_END around the\n // function in question.\n //============================================================================"}, {"sha": "d0e024819c801277092e526aa45df4ec3fa3f3d6", "filename": "libgcc/config/picochip/ashrsi3.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fashrsi3.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fashrsi3.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpicochip%2Fashrsi3.S?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -69,7 +69,7 @@ _picoMark_FUNCTION_END=\n // All DWARF information between this marker, and the END OF DWARF\n // marker should be included in the source file. Search for\n // FUNCTION_STACK_SIZE_GOES_HERE and FUNCTION NAME GOES HERE, and\n-// provide the relevent information. Add markers called\n+// provide the relevant information. Add markers called\n // _picoMark_FUNCTION_BEGIN and _picoMark_FUNCTION_END around the\n // function in question.\n //============================================================================"}, {"sha": "9d519b16eae6de2f86a0a381f41ea160d1ae218f", "filename": "libgcc/config/picochip/clzsi2.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fclzsi2.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fclzsi2.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpicochip%2Fclzsi2.S?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -56,7 +56,7 @@ _picoMark_FUNCTION_END=\n // All DWARF information between this marker, and the END OF DWARF\n // marker should be included in the source file. Search for\n // FUNCTION_STACK_SIZE_GOES_HERE and FUNCTION NAME GOES HERE, and\n-// provide the relevent information. Add markers called\n+// provide the relevant information. Add markers called\n // _picoMark_FUNCTION_BEGIN and _picoMark_FUNCTION_END around the\n // function in question.\n //============================================================================"}, {"sha": "1c90ce3922d5125ccb1095e06990c2332722b691", "filename": "libgcc/config/picochip/cmpsi2.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fcmpsi2.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fcmpsi2.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpicochip%2Fcmpsi2.S?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -79,7 +79,7 @@ _picoMark_FUNCTION_END=\n // All DWARF information between this marker, and the END OF DWARF\n // marker should be included in the source file. Search for\n // FUNCTION_STACK_SIZE_GOES_HERE and FUNCTION NAME GOES HERE, and\n-// provide the relevent information. Add markers called\n+// provide the relevant information. Add markers called\n // _picoMark_FUNCTION_BEGIN and _picoMark_FUNCTION_END around the\n // function in question.\n //============================================================================"}, {"sha": "77a1acbda97da73c27901c4612660eb0baaf2a19", "filename": "libgcc/config/picochip/divmod15.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fdivmod15.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fdivmod15.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpicochip%2Fdivmod15.S?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -128,7 +128,7 @@ _picoMark_FUNCTION_END=\n // All DWARF information between this marker, and the END OF DWARF\n // marker should be included in the source file. Search for\n // FUNCTION_STACK_SIZE_GOES_HERE and FUNCTION NAME GOES HERE, and\n-// provide the relevent information. Add markers called\n+// provide the relevant information. Add markers called\n // _picoMark_FUNCTION_BEGIN and _picoMark_FUNCTION_END around the\n // function in question.\n //============================================================================"}, {"sha": "f7b32fa978cfcd48ced86dfc96962acbb172ad7d", "filename": "libgcc/config/picochip/divmodhi4.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fdivmodhi4.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fdivmodhi4.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpicochip%2Fdivmodhi4.S?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -115,7 +115,7 @@ _picoMark_FUNCTION_END=\n // All DWARF information between this marker, and the END OF DWARF\n // marker should be included in the source file. Search for\n // FUNCTION_STACK_SIZE_GOES_HERE and FUNCTION NAME GOES HERE, and\n-// provide the relevent information. Add markers called\n+// provide the relevant information. Add markers called\n // _picoMark_FUNCTION_BEGIN and _picoMark_FUNCTION_END around the\n // function in question.\n //============================================================================"}, {"sha": "c2f86dff25b1c357707d0bc822b4340416696ce0", "filename": "libgcc/config/picochip/divmodsi4.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fdivmodsi4.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fdivmodsi4.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpicochip%2Fdivmodsi4.S?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -100,7 +100,7 @@ _picoMark_FUNCTION_END=\n // All DWARF information between this marker, and the END OF DWARF\n // marker should be included in the source file. Search for\n // FUNCTION_STACK_SIZE_GOES_HERE and FUNCTION NAME GOES HERE, and\n-// provide the relevent information. Add markers called\n+// provide the relevant information. Add markers called\n // _picoMark_FUNCTION_BEGIN and _picoMark_FUNCTION_END around the\n // function in question.\n //============================================================================"}, {"sha": "e62ac4eda991f140c1abb5b5b1ded17752d2f99d", "filename": "libgcc/config/picochip/longjmp.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Flongjmp.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Flongjmp.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpicochip%2Flongjmp.S?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -49,7 +49,7 @@ _picoMark_FUNCTION_BEGIN=\n // All DWARF information between this marker, and the END OF DWARF\n // marker should be included in the source file. Search for\n // FUNCTION_STACK_SIZE_GOES_HERE and FUNCTION NAME GOES HERE, and\n-// provide the relevent information. Add markers called\n+// provide the relevant information. Add markers called\n // _picoMark_FUNCTION_BEGIN and _picoMark_FUNCTION_END around the\n // function in question.\n //============================================================================"}, {"sha": "c394a69596facb28a3ec9124e12941372774fac2", "filename": "libgcc/config/picochip/lshrsi3.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Flshrsi3.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Flshrsi3.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpicochip%2Flshrsi3.S?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -59,7 +59,7 @@ _picoMark_FUNCTION_END=\n // All DWARF information between this marker, and the END OF DWARF\n // marker should be included in the source file. Search for\n // FUNCTION_STACK_SIZE_GOES_HERE and FUNCTION NAME GOES HERE, and\n-// provide the relevent information. Add markers called\n+// provide the relevant information. Add markers called\n // _picoMark_FUNCTION_BEGIN and _picoMark_FUNCTION_END around the\n // function in question.\n //============================================================================"}, {"sha": "b85a56e43603e6f908a4a849f0f5b63895a8589d", "filename": "libgcc/config/picochip/parityhi2.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fparityhi2.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fparityhi2.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpicochip%2Fparityhi2.S?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -46,7 +46,7 @@ _picoMark_FUNCTION_END=\n // All DWARF information between this marker, and the END OF DWARF\n // marker should be included in the source file. Search for\n // FUNCTION_STACK_SIZE_GOES_HERE and FUNCTION NAME GOES HERE, and\n-// provide the relevent information. Add markers called\n+// provide the relevant information. Add markers called\n // _picoMark_FUNCTION_BEGIN and _picoMark_FUNCTION_END around the\n // function in question.\n //============================================================================"}, {"sha": "07f3e846b575f2f643a196ab11726c9c4ff12a45", "filename": "libgcc/config/picochip/popcounthi2.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fpopcounthi2.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fpopcounthi2.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpicochip%2Fpopcounthi2.S?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -68,7 +68,7 @@ _picoMark_FUNCTION_END=\n // All DWARF information between this marker, and the END OF DWARF\n // marker should be included in the source file. Search for\n // FUNCTION_STACK_SIZE_GOES_HERE and FUNCTION NAME GOES HERE, and\n-// provide the relevent information. Add markers called\n+// provide the relevant information. Add markers called\n // _picoMark_FUNCTION_BEGIN and _picoMark_FUNCTION_END around the\n // function in question.\n //============================================================================"}, {"sha": "8063b2b362e513241687a3cbedf1a6a1afe2cce3", "filename": "libgcc/config/picochip/setjmp.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fsetjmp.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fsetjmp.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpicochip%2Fsetjmp.S?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -49,7 +49,7 @@ _picoMark_FUNCTION_BEGIN=\n // All DWARF information between this marker, and the END OF DWARF\n // marker should be included in the source file. Search for\n // FUNCTION_STACK_SIZE_GOES_HERE and FUNCTION NAME GOES HERE, and\n-// provide the relevent information. Add markers called\n+// provide the relevant information. Add markers called\n // _picoMark_FUNCTION_BEGIN and _picoMark_FUNCTION_END around the\n // function in question.\n //============================================================================"}, {"sha": "359e9d51d81a479704237e3f52b9e16f2610df40", "filename": "libgcc/config/picochip/subdi3.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fsubdi3.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fsubdi3.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpicochip%2Fsubdi3.S?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -59,7 +59,7 @@ _picoMark_FUNCTION_END=\n // All DWARF information between this marker, and the END OF DWARF\n // marker should be included in the source file. Search for\n // FUNCTION_STACK_SIZE_GOES_HERE and FUNCTION NAME GOES HERE, and\n-// provide the relevent information. Add markers called\n+// provide the relevant information. Add markers called\n // _picoMark_FUNCTION_BEGIN and _picoMark_FUNCTION_END around the\n // function in question.\n //============================================================================"}, {"sha": "713e04f52ae83e693c2ae0dc15bc68e4af011fb0", "filename": "libgcc/config/picochip/ucmpsi2.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fucmpsi2.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fucmpsi2.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpicochip%2Fucmpsi2.S?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -77,7 +77,7 @@ _picoMark_FUNCTION_END=\n // All DWARF information between this marker, and the END OF DWARF\n // marker should be included in the source file. Search for\n // FUNCTION_STACK_SIZE_GOES_HERE and FUNCTION NAME GOES HERE, and\n-// provide the relevent information. Add markers called\n+// provide the relevant information. Add markers called\n // _picoMark_FUNCTION_BEGIN and _picoMark_FUNCTION_END around the\n // function in question.\n //============================================================================"}, {"sha": "7d84a2da7a269b3a6eae8565375c365be3c218a7", "filename": "libgcc/config/picochip/udivmodhi4.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fudivmodhi4.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fudivmodhi4.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpicochip%2Fudivmodhi4.S?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -106,7 +106,7 @@ _picoMark_FUNCTION_END=\n // All DWARF information between this marker, and the END OF DWARF\n // marker should be included in the source file. Search for\n // FUNCTION_STACK_SIZE_GOES_HERE and FUNCTION NAME GOES HERE, and\n-// provide the relevent information. Add markers called\n+// provide the relevant information. Add markers called\n // _picoMark_FUNCTION_BEGIN and _picoMark_FUNCTION_END around the\n // function in question.\n //============================================================================"}, {"sha": "8e7c03e6d2253f680b0215af6f67e0ccdbe6d238", "filename": "libgcc/config/picochip/udivmodsi4.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fudivmodsi4.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fpicochip%2Fudivmodsi4.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpicochip%2Fudivmodsi4.S?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -186,7 +186,7 @@ _picoMark_FUNCTION_END=\n // All DWARF information between this marker, and the END OF DWARF\n // marker should be included in the source file. Search for\n // FUNCTION_STACK_SIZE_GOES_HERE and FUNCTION NAME GOES HERE, and\n-// provide the relevent information. Add markers called\n+// provide the relevant information. Add markers called\n // _picoMark_FUNCTION_BEGIN and _picoMark_FUNCTION_END around the\n // function in question.\n //============================================================================"}, {"sha": "7615516711be8f5b0f14249ab82b689401a6c7dd", "filename": "libgcc/config/spu/divv2df3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fspu%2Fdivv2df3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fspu%2Fdivv2df3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fspu%2Fdivv2df3.c?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -77,7 +77,7 @@ __divv2df3 (vector double a_in, vector double b_in)\n   a_exp_1s = (vec_ullong2)spu_cmpeq(a_exp, exp_mask_u32);\n   b_exp_1s = (vec_ullong2)spu_cmpeq(b_exp, exp_mask_u32);\n \n-  /* Identify all possible special values that must be accomodated including:\n+  /* Identify all possible special values that must be accommodated including:\n    * +-denorm, +-0, +-infinity, and NaNs.\n    */\n   a_denorm0= (vec_ullong2)spu_cmpeq(a_exp, 0);"}, {"sha": "8dc1583ee839ae3ba8741f2afcca7f18c03a7ce2", "filename": "libgcc/config/spu/mfc_multi_tag_release.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fspu%2Fmfc_multi_tag_release.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fspu%2Fmfc_multi_tag_release.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fspu%2Fmfc_multi_tag_release.c?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -26,7 +26,7 @@ extern vector unsigned int __mfc_tag_table;\n \n /* Release a sequential group of tags from exclusive use. The sequential\n    group of tags is the range starting from <first_tag> through\n-   <first_tag>+<number_of_tags>-1. Upon sucessful release, MFC_DMA_TAG_VALID\n+   <first_tag>+<number_of_tags>-1. Upon successful release, MFC_DMA_TAG_VALID\n    is returned and the tags become available for future reservation.\n \n    If the specified tags were not previously reserved, no action is"}, {"sha": "f1b5bd09c5b0d9b35ca86d3780753b662b50e856", "filename": "libgcc/config/spu/mfc_tag_release.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fspu%2Fmfc_tag_release.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfig%2Fspu%2Fmfc_tag_release.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fspu%2Fmfc_tag_release.c?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -25,7 +25,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n extern vector unsigned int __mfc_tag_table;\n \n /* Release the specified DMA tag from exclusive use.  Once released, the\n-   tag is available for future reservation.  Upon sucessful release,\n+   tag is available for future reservation.  Upon successful release,\n    MFC_DMA_TAG_VALID is returned.  If the specified tag is not in the\n    range 0 to 31, or had not been reserved, no action is taken and\n    MFC_DMA_TAG_INVALID is returned.  */"}, {"sha": "a226f8116595c1eba6f9a1c0e42da32c1e0f7824", "filename": "libgcc/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -4358,7 +4358,7 @@ fi\n \n \n # See if we have thread-local storage.  We can only test assembler\n-# sicne link-time and run-time tests require the newly built\n+# since link-time and run-time tests require the newly built\n # gcc, which can't be used to build executable due to that libgcc\n # is yet to be built here.\n "}, {"sha": "24b15f0b1787e02c5806dc623116f64863c11d00", "filename": "libgcc/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec/libgcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure.ac?ref=d8c9d3911788e7a9bb7973dad0ee2b7c01c48cec", "patch": "@@ -315,7 +315,7 @@ fi\n AC_SUBST(vis_hide)\n \n # See if we have thread-local storage.  We can only test assembler\n-# sicne link-time and run-time tests require the newly built\n+# since link-time and run-time tests require the newly built\n # gcc, which can't be used to build executable due to that libgcc\n # is yet to be built here.\n GCC_CHECK_CC_TLS"}]}