{"sha": "60f3dad78ddb531ee3d2f6ef522ea8c0763aed47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBmM2RhZDc4ZGRiNTMxZWUzZDJmNmVmNTIyZWE4YzA3NjNhZWQ0Nw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-12-12T17:34:19Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-12-12T17:34:19Z"}, "message": "revert: re PR target/51135 (SIGSEGV during exception cleanup on win32)\n\n2011-12-12  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tRevert:\n\t2011-12-12  Kai Tietz  <ktietz@redhat.com>\n\n\tPR libstdc++/51135\n\t* libsupc++/cxxabi.h (__cxa_dtor_type): New type.\n\t(__cxa_throw): Use it for destructor-argument.\n\t* libsupc++/eh_throw.cc (__cxa_throw): Likewise.\n\t* libsupc++/unwind-cxx.h (__cxa_exception): Change type of member\n\texceptionDestructor to __cxa_dtor_type.\n\t* config/os/mingw32-w64/os_defines.h (_GLIBCXX_USE_THISCALL_ON_DTOR):\n\tDefine.\n\t(__cxa_dtor_type): Declare target secific type variant.\n\t* config/os/mingw32/os_defines.h: Likewise.\n\nFrom-SVN: r182250", "tree": {"sha": "a584bd100b0e0b16b30cfe4412bd40c3752cd24e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a584bd100b0e0b16b30cfe4412bd40c3752cd24e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60f3dad78ddb531ee3d2f6ef522ea8c0763aed47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60f3dad78ddb531ee3d2f6ef522ea8c0763aed47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60f3dad78ddb531ee3d2f6ef522ea8c0763aed47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60f3dad78ddb531ee3d2f6ef522ea8c0763aed47/comments", "author": null, "committer": null, "parents": [{"sha": "7252b079fc845799699196473b008d856ae630b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7252b079fc845799699196473b008d856ae630b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7252b079fc845799699196473b008d856ae630b6"}], "stats": {"total": 40, "additions": 16, "deletions": 24}, "files": [{"sha": "8a46f1c89735e789927a94eb1e11a67e3013c1d4", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f3dad78ddb531ee3d2f6ef522ea8c0763aed47/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f3dad78ddb531ee3d2f6ef522ea8c0763aed47/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=60f3dad78ddb531ee3d2f6ef522ea8c0763aed47", "patch": "@@ -1,6 +1,18 @@\n 2011-12-12  Paolo Carlini  <paolo.carlini@oracle.com>\n \n-\t* Revert the last commit.\n+\tRevert:\n+\t2011-12-12  Kai Tietz  <ktietz@redhat.com>\n+\n+\tPR libstdc++/51135\n+\t* libsupc++/cxxabi.h (__cxa_dtor_type): New type.\n+\t(__cxa_throw): Use it for destructor-argument.\n+\t* libsupc++/eh_throw.cc (__cxa_throw): Likewise.\n+\t* libsupc++/unwind-cxx.h (__cxa_exception): Change type of member\n+\texceptionDestructor to __cxa_dtor_type.\n+\t* config/os/mingw32-w64/os_defines.h (_GLIBCXX_USE_THISCALL_ON_DTOR):\n+\tDefine.\n+\t(__cxa_dtor_type): Declare target secific type variant.\n+\t* config/os/mingw32/os_defines.h: Likewise.\n \n 2011-12-12  Kai Tietz  <ktietz@redhat.com>\n "}, {"sha": "160c1ffda58597c392710df0c7aa877dcdb3ab31", "filename": "libstdc++-v3/config/os/mingw32-w64/os_defines.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f3dad78ddb531ee3d2f6ef522ea8c0763aed47/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32-w64%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f3dad78ddb531ee3d2f6ef522ea8c0763aed47/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32-w64%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32-w64%2Fos_defines.h?ref=60f3dad78ddb531ee3d2f6ef522ea8c0763aed47", "patch": "@@ -65,12 +65,4 @@\n // ioctlsocket function doesn't work for normal file-descriptors.\n #define _GLIBCXX_NO_IOCTL 1\n \n-// See libstdc++/51135\n-// Class constructors/destructors have __thiscall calling-convention\n-// for IA 32-bit target.\n-#if defined (__i386__)\n-#define _GLIBCXX_USE_THISCALL_ON_DTOR 1\n-typedef void (__thiscall *__cxa_dtor_type) (void *);\n-#endif\n-\n #endif"}, {"sha": "160c1ffda58597c392710df0c7aa877dcdb3ab31", "filename": "libstdc++-v3/config/os/mingw32/os_defines.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f3dad78ddb531ee3d2f6ef522ea8c0763aed47/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f3dad78ddb531ee3d2f6ef522ea8c0763aed47/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fos_defines.h?ref=60f3dad78ddb531ee3d2f6ef522ea8c0763aed47", "patch": "@@ -65,12 +65,4 @@\n // ioctlsocket function doesn't work for normal file-descriptors.\n #define _GLIBCXX_NO_IOCTL 1\n \n-// See libstdc++/51135\n-// Class constructors/destructors have __thiscall calling-convention\n-// for IA 32-bit target.\n-#if defined (__i386__)\n-#define _GLIBCXX_USE_THISCALL_ON_DTOR 1\n-typedef void (__thiscall *__cxa_dtor_type) (void *);\n-#endif\n-\n #endif"}, {"sha": "aeaf4ccf4aaee954d778e1a6f1a77e57ab6e0d0e", "filename": "libstdc++-v3/libsupc++/cxxabi.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f3dad78ddb531ee3d2f6ef522ea8c0763aed47/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f3dad78ddb531ee3d2f6ef522ea8c0763aed47/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h?ref=60f3dad78ddb531ee3d2f6ef522ea8c0763aed47", "patch": "@@ -51,10 +51,6 @@\n #include <bits/cxxabi_tweaks.h>\n #include <bits/cxxabi_forced.h>\n \n-#ifndef _GLIBCXX_USE_THISCALL_ON_DTOR\n-typedef void (*__cxa_dtor_type) (void *);\n-#endif\n-\n #ifdef __cplusplus\n namespace __cxxabiv1\n {\n@@ -600,7 +596,7 @@ namespace __cxxabiv1\n \n   // Throw the exception.\n   void\n-  __cxa_throw(void*, std::type_info*, __cxa_dtor_type)\n+  __cxa_throw(void*, std::type_info*, void (*) (void *))\n   __attribute__((__noreturn__));\n \n   // Used to implement exception handlers."}, {"sha": "0e7083c9033147b20b9300bade471982a26d1c84", "filename": "libstdc++-v3/libsupc++/eh_throw.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f3dad78ddb531ee3d2f6ef522ea8c0763aed47/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_throw.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f3dad78ddb531ee3d2f6ef522ea8c0763aed47/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_throw.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_throw.cc?ref=60f3dad78ddb531ee3d2f6ef522ea8c0763aed47", "patch": "@@ -59,7 +59,7 @@ __gxx_exception_cleanup (_Unwind_Reason_Code code, _Unwind_Exception *exc)\n \n extern \"C\" void\n __cxxabiv1::__cxa_throw (void *obj, std::type_info *tinfo,\n-\t\t\t __cxa_dtor_type dest)\n+\t\t\t void (*dest) (void *))\n {\n   // Definitely a primary.\n   __cxa_refcounted_exception *header"}, {"sha": "3ce32e969f56ea482b070173765ac278c0e045fc", "filename": "libstdc++-v3/libsupc++/unwind-cxx.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f3dad78ddb531ee3d2f6ef522ea8c0763aed47/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Funwind-cxx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f3dad78ddb531ee3d2f6ef522ea8c0763aed47/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Funwind-cxx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Funwind-cxx.h?ref=60f3dad78ddb531ee3d2f6ef522ea8c0763aed47", "patch": "@@ -51,7 +51,7 @@ struct __cxa_exception\n {\n   // Manage the exception object itself.\n   std::type_info *exceptionType;\n-  __cxa_dtor_type exceptionDestructor; \n+  void (*exceptionDestructor)(void *);\n \n   // The C++ standard has entertaining rules wrt calling set_terminate\n   // and set_unexpected in the middle of the exception cleanup process."}]}