{"sha": "93de7743bac2adacede483aa17cb1a191e3c9b9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNkZTc3NDNiYWMyYWRhY2VkZTQ4M2FhMTdjYjFhMTkxZTNjOWI5YQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2007-03-01T10:54:52Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-03-01T10:54:52Z"}, "message": "i386.c (ix86_modes_tieable_p): Fix typo, use also size of mode1 to check for tieable modes in MMX case.\n\n\t* config/i386/i386.c (ix86_modes_tieable_p): Fix typo, use also\n\tsize of mode1 to check for tieable modes in MMX case.\n\nFrom-SVN: r122429", "tree": {"sha": "b17ebdece7800fdd3aaab313f6038a1267db7f1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b17ebdece7800fdd3aaab313f6038a1267db7f1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93de7743bac2adacede483aa17cb1a191e3c9b9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93de7743bac2adacede483aa17cb1a191e3c9b9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93de7743bac2adacede483aa17cb1a191e3c9b9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93de7743bac2adacede483aa17cb1a191e3c9b9a/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7ffb5e78794b6d8f8094d7c928e6f0e94b62cad6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ffb5e78794b6d8f8094d7c928e6f0e94b62cad6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ffb5e78794b6d8f8094d7c928e6f0e94b62cad6"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "1a6be7b3794479210848749eac839538b11a38a1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93de7743bac2adacede483aa17cb1a191e3c9b9a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93de7743bac2adacede483aa17cb1a191e3c9b9a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=93de7743bac2adacede483aa17cb1a191e3c9b9a", "patch": "@@ -1,3 +1,8 @@\n+2007-03-01  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (ix86_modes_tieable_p): Fix typo, use also\n+\tsize of mode1 to check for tieable modes in MMX case.\n+\n 2007-03-01  Richard Sandiford  <richard@codesourcery.com>\n \n \t* Makefile.in (rtlanal.o): Depend on tree.h."}, {"sha": "935f3df7151d2fe8644c187cba4309b83ede54c7", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93de7743bac2adacede483aa17cb1a191e3c9b9a/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93de7743bac2adacede483aa17cb1a191e3c9b9a/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=93de7743bac2adacede483aa17cb1a191e3c9b9a", "patch": "@@ -18792,7 +18792,7 @@ ix86_modes_tieable_p (enum machine_mode mode1, enum machine_mode mode2)\n      with any other mode acceptable to MMX registers.  */\n   if (GET_MODE_SIZE (mode2) == 8\n       && ix86_hard_regno_mode_ok (FIRST_MMX_REG, mode2))\n-    return (GET_MODE_SIZE (mode2) == 8\n+    return (GET_MODE_SIZE (mode1) == 8\n \t    && ix86_hard_regno_mode_ok (FIRST_MMX_REG, mode1));\n \n   return false;"}]}