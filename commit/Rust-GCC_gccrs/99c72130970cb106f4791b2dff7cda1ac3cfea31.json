{"sha": "99c72130970cb106f4791b2dff7cda1ac3cfea31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTljNzIxMzA5NzBjYjEwNmY0NzkxYjJkZmY3Y2RhMWFjM2NmZWEzMQ==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2016-11-17T00:18:18Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2016-11-17T00:18:18Z"}, "message": "re PR fortran/58001 (Make it possible to silence \"Extension: Tab character in format\" warning)\n\n2016-11-16  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/58001\n\t* io.c (next_char_not_space): Update handling of a 'tab' in a FORMAT.\n \t(format_lex): Adjust invocations of next_char_not_space().\n \n2016-11-16  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/58001\n\t* gfortran.dg/fmt_tab_1.f90: Adjust testcase.\n\t* gfortran.dg/fmt_tab_2.f90: Ditto.\n\nFrom-SVN: r242530", "tree": {"sha": "9649680187c334e798f76d404930176731428bf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9649680187c334e798f76d404930176731428bf3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99c72130970cb106f4791b2dff7cda1ac3cfea31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99c72130970cb106f4791b2dff7cda1ac3cfea31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99c72130970cb106f4791b2dff7cda1ac3cfea31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99c72130970cb106f4791b2dff7cda1ac3cfea31/comments", "author": null, "committer": null, "parents": [{"sha": "243255c0983c8c1e9ea79a0296fd41a13c052b27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/243255c0983c8c1e9ea79a0296fd41a13c052b27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/243255c0983c8c1e9ea79a0296fd41a13c052b27"}], "stats": {"total": 66, "additions": 36, "deletions": 30}, "files": [{"sha": "428ebdaeede73bc3f86c21d31b8138151db1a111", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99c72130970cb106f4791b2dff7cda1ac3cfea31/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99c72130970cb106f4791b2dff7cda1ac3cfea31/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=99c72130970cb106f4791b2dff7cda1ac3cfea31", "patch": "@@ -1,3 +1,9 @@\n+2016-11-16  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/58001\n+\t* io.c (next_char_not_space): Update handling of a 'tab' in a FORMAT.\n+ \t(format_lex): Adjust invocations of next_char_not_space().\n+\n 2016-11-16  Andre Vehreschild  <vehre@gcc.gnu.org>\n \n \tPR fortran/78356"}, {"sha": "d35437aeb23e88c3b65ba2edb8273a22069ade7d", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 13, "deletions": 26, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99c72130970cb106f4791b2dff7cda1ac3cfea31/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99c72130970cb106f4791b2dff7cda1ac3cfea31/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=99c72130970cb106f4791b2dff7cda1ac3cfea31", "patch": "@@ -200,23 +200,14 @@ unget_char (void)\n /* Eat up the spaces and return a character.  */\n \n static char\n-next_char_not_space (bool *error)\n+next_char_not_space ()\n {\n   char c;\n   do\n     {\n       error_element = c = next_char (NONSTRING);\n       if (c == '\\t')\n-\t{\n-\t  if (gfc_option.allow_std & GFC_STD_GNU)\n-\t    gfc_warning (0, \"Extension: Tab character in format at %C\");\n-\t  else\n-\t    {\n-\t      gfc_error (\"Extension: Tab character in format at %C\");\n-\t      *error = true;\n-\t      return c;\n-\t    }\n-\t}\n+\tgfc_warning (OPT_Wtabs, \"Nonconforming tab character in format at %C\");\n     }\n   while (gfc_is_whitespace (c));\n   return c;\n@@ -234,7 +225,6 @@ format_lex (void)\n   char c, delim;\n   int zflag;\n   int negative_flag;\n-  bool error = false;\n \n   if (saved_token != FMT_NONE)\n     {\n@@ -243,7 +233,7 @@ format_lex (void)\n       return token;\n     }\n \n-  c = next_char_not_space (&error);\n+  c = next_char_not_space ();\n   \n   negative_flag = 0;\n   switch (c)\n@@ -253,7 +243,7 @@ format_lex (void)\n       /* Falls through.  */\n \n     case '+':\n-      c = next_char_not_space (&error);\n+      c = next_char_not_space ();\n       if (!ISDIGIT (c))\n \t{\n \t  token = FMT_UNKNOWN;\n@@ -264,7 +254,7 @@ format_lex (void)\n \n       do\n \t{\n-\t  c = next_char_not_space (&error);\n+\t  c = next_char_not_space ();\n \t  if (ISDIGIT (c))\n \t    value = 10 * value + c - '0';\n \t}\n@@ -294,7 +284,7 @@ format_lex (void)\n \n       do\n \t{\n-\t  c = next_char_not_space (&error);\n+\t  c = next_char_not_space ();\n \t  if (ISDIGIT (c))\n \t    {\n \t      value = 10 * value + c - '0';\n@@ -329,7 +319,7 @@ format_lex (void)\n       break;\n \n     case 'T':\n-      c = next_char_not_space (&error);\n+      c = next_char_not_space ();\n       switch (c)\n \t{\n \tcase 'L':\n@@ -357,15 +347,15 @@ format_lex (void)\n       break;\n \n     case 'S':\n-      c = next_char_not_space (&error);\n+      c = next_char_not_space ();\n       if (c != 'P' && c != 'S')\n \tunget_char ();\n \n       token = FMT_SIGN;\n       break;\n \n     case 'B':\n-      c = next_char_not_space (&error);\n+      c = next_char_not_space ();\n       if (c == 'N' || c == 'Z')\n \ttoken = FMT_BLANK;\n       else\n@@ -427,7 +417,7 @@ format_lex (void)\n       break;\n \n     case 'E':\n-      c = next_char_not_space (&error);\n+      c = next_char_not_space ();\n       if (c == 'N' )\n \ttoken = FMT_EN;\n       else if (c == 'S')\n@@ -457,7 +447,7 @@ format_lex (void)\n       break;\n \n     case 'D':\n-      c = next_char_not_space (&error);\n+      c = next_char_not_space ();\n       if (c == 'P')\n \t{\n \t  if (!gfc_notify_std (GFC_STD_F2003, \"DP format \"\n@@ -478,7 +468,7 @@ format_lex (void)\n \t      \"specifier not allowed at %C\"))\n \t    return FMT_ERROR;\n \t  token = FMT_DT;\n-\t  c = next_char_not_space (&error);\n+\t  c = next_char_not_space ();\n \t  if (c == '\\'' || c == '\"')\n \t    {\n \t      delim = c;\n@@ -518,7 +508,7 @@ format_lex (void)\n       break;\n \n     case 'R':\n-      c = next_char_not_space (&error);\n+      c = next_char_not_space ();\n       switch (c)\n \t{\n \tcase 'C':\n@@ -559,9 +549,6 @@ format_lex (void)\n       break;\n     }\n \n-  if (error)\n-    return FMT_ERROR;\n-\n   return token;\n }\n "}, {"sha": "9b616e6d7a441ad47fe8cc1412b6dff08a5d86a9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99c72130970cb106f4791b2dff7cda1ac3cfea31/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99c72130970cb106f4791b2dff7cda1ac3cfea31/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=99c72130970cb106f4791b2dff7cda1ac3cfea31", "patch": "@@ -1,3 +1,9 @@\n+2016-11-16  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/58001\n+\t* gfortran.dg/fmt_tab_1.f90: Adjust testcase.\n+\t* gfortran.dg/fmt_tab_2.f90: Ditto.\n+\n 2016-11-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/78378"}, {"sha": "a763714881b41340adf5486f283742343bd17b0d", "filename": "gcc/testsuite/gfortran.dg/fmt_tab_1.f90", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99c72130970cb106f4791b2dff7cda1ac3cfea31/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_tab_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99c72130970cb106f4791b2dff7cda1ac3cfea31/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_tab_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_tab_1.f90?ref=99c72130970cb106f4791b2dff7cda1ac3cfea31", "patch": "@@ -1,7 +1,12 @@\n ! { dg-do compile }\n-! { dg-options -Wno-error=tabs }\n+! { dg-options -Wtabs }\n ! PR fortran/32987\n+! PR fortran/58001\n       program TestFormat\n         write (*, 10)\n- 10     format ('Hello ',\t'bug!') ! { dg-warning \"Extension: Tab character in format\" }\n+        ! There is a tab character before 'bug!'.  This is accepted without\n+        ! the -Wno-tabs option or a -std= option.\n+ 10     format ('Hello ',\t'bug!') ! { dg-warning \"tab character in format\" }\n+\n       end\n+! { dg-excess-errors \"tab character in format\" }"}, {"sha": "bfff7ce924f4b6728daee14ec77fb2f4addec01e", "filename": "gcc/testsuite/gfortran.dg/fmt_tab_2.f90", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99c72130970cb106f4791b2dff7cda1ac3cfea31/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_tab_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99c72130970cb106f4791b2dff7cda1ac3cfea31/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_tab_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_tab_2.f90?ref=99c72130970cb106f4791b2dff7cda1ac3cfea31", "patch": "@@ -1,7 +1,9 @@\n ! { dg-do compile }\n ! { dg-options \"-std=f2003\" }\n ! PR fortran/32987\n+! PR fortran/58001\n       program TestFormat\n-        write (*, 10) ! { dg-error \"FORMAT label 10 at .1. not defined\" }\n- 10     format ('Hello ',\t'bug!') ! { dg-error \"Extension: Tab character in format|Nonconforming tab character\" }\n+        write (*, 10)\n+ 10     format ('Hello ',\t'bug!') ! { dg-warning \"tab character in format\" }\n       end\n+! { dg-excess-errors \"tab character in FORMAT\" }"}]}