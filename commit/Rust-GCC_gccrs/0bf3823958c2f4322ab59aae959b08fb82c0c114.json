{"sha": "0bf3823958c2f4322ab59aae959b08fb82c0c114", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJmMzgyMzk1OGMyZjQzMjJhYjU5YWFlOTU5YjA4ZmI4MmMwYzExNA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2008-01-22T18:15:49Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2008-01-22T18:15:49Z"}, "message": "decl.c (components_to_record): Do not reuse the empty union type if there is a representation clause on the record.\n\n\t* decl.c (components_to_record): Do not reuse the empty union type\n\tif there is a representation clause on the record.\n\t* trans.c (addressable_p): Return true for INTEGER_CST.\n\nFrom-SVN: r131733", "tree": {"sha": "66c68bdf36ff81a3bd62fcd604dbe3bcc4131fc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66c68bdf36ff81a3bd62fcd604dbe3bcc4131fc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0bf3823958c2f4322ab59aae959b08fb82c0c114", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bf3823958c2f4322ab59aae959b08fb82c0c114", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bf3823958c2f4322ab59aae959b08fb82c0c114", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bf3823958c2f4322ab59aae959b08fb82c0c114/comments", "author": null, "committer": null, "parents": [{"sha": "255ef0345c9976d876677058f9beec62eb56aa28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/255ef0345c9976d876677058f9beec62eb56aa28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/255ef0345c9976d876677058f9beec62eb56aa28"}], "stats": {"total": 46, "additions": 43, "deletions": 3}, "files": [{"sha": "9db0f846c6428895f8837ad981a866cb859a4c5c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bf3823958c2f4322ab59aae959b08fb82c0c114/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bf3823958c2f4322ab59aae959b08fb82c0c114/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0bf3823958c2f4322ab59aae959b08fb82c0c114", "patch": "@@ -1,3 +1,9 @@\n+2008-01-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* decl.c (components_to_record): Do not reuse the empty union type\n+\tif there is a representation clause on the record.\n+\t* trans.c (addressable_p): Return true for INTEGER_CST.\n+\n 2008-01-21  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* trans.c (gnat_to_gnu) <N_Free_Statement>: Use POINTER_PLUS_EXPR"}, {"sha": "c57e145ff61c308b535257a0f5cd466f5a5fdaf7", "filename": "gcc/ada/decl.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bf3823958c2f4322ab59aae959b08fb82c0c114/gcc%2Fada%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bf3823958c2f4322ab59aae959b08fb82c0c114/gcc%2Fada%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdecl.c?ref=0bf3823958c2f4322ab59aae959b08fb82c0c114", "patch": "@@ -6007,11 +6007,15 @@ components_to_record (tree gnu_record_type, Node_Id component_list,\n       gnu_union_name = concat_id_with_name (gnu_name,\n \t\t\t\t\t    IDENTIFIER_POINTER (gnu_var_name));\n \n-      if (!gnu_field_list && TREE_CODE (gnu_record_type) == UNION_TYPE)\n+      /* Reuse an enclosing union if all fields are in the variant part\n+\t and there is no representation clause on the record, to match\n+\t the layout of C unions.  There is an associated check below.  */\n+      if (!gnu_field_list\n+\t  && TREE_CODE (gnu_record_type) == UNION_TYPE\n+\t  && !TYPE_PACKED (gnu_record_type))\n \tgnu_union_type = gnu_record_type;\n       else\n \t{\n-\n \t  gnu_union_type\n \t    = make_node (unchecked_union ? UNION_TYPE : QUAL_UNION_TYPE);\n \n@@ -6116,7 +6120,9 @@ components_to_record (tree gnu_record_type, Node_Id component_list,\n \t     return.  */\n \t  if (gnu_union_type == gnu_record_type)\n \t    {\n-\t      gcc_assert (!gnu_field_list && unchecked_union);\n+\t      gcc_assert (unchecked_union\n+\t\t\t  && !gnu_field_list\n+\t\t\t  && !gnu_our_rep_list);\n \t      return;\n \t    }\n "}, {"sha": "d1b454ca4d845fd0cbb864033b9cdd1d9d0af0fc", "filename": "gcc/ada/trans.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bf3823958c2f4322ab59aae959b08fb82c0c114/gcc%2Fada%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bf3823958c2f4322ab59aae959b08fb82c0c114/gcc%2Fada%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftrans.c?ref=0bf3823958c2f4322ab59aae959b08fb82c0c114", "patch": "@@ -6070,6 +6070,7 @@ addressable_p (tree gnu_expr)\n     case INDIRECT_REF:\n     case CONSTRUCTOR:\n     case STRING_CST:\n+    case INTEGER_CST:\n     case NULL_EXPR:\n     case SAVE_EXPR:\n     case CALL_EXPR:"}, {"sha": "933b5dd3a0ce1c0054418863cd09852b882e92f3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bf3823958c2f4322ab59aae959b08fb82c0c114/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bf3823958c2f4322ab59aae959b08fb82c0c114/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0bf3823958c2f4322ab59aae959b08fb82c0c114", "patch": "@@ -1,3 +1,7 @@\n+2008-01-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/unchecked_union1.adb: New test.\n+\n 2008-01-22  Tom Tromey  <tromey@redhat.com>\n \n \tPR c++/34829:"}, {"sha": "671d0b0c7554bcdc24618f7775678432e2d6e119", "filename": "gcc/testsuite/gnat.dg/unchecked_union1.adb", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bf3823958c2f4322ab59aae959b08fb82c0c114/gcc%2Ftestsuite%2Fgnat.dg%2Funchecked_union1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bf3823958c2f4322ab59aae959b08fb82c0c114/gcc%2Ftestsuite%2Fgnat.dg%2Funchecked_union1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Funchecked_union1.adb?ref=0bf3823958c2f4322ab59aae959b08fb82c0c114", "patch": "@@ -0,0 +1,23 @@\n+-- { dg-do run }\n+\n+procedure Unchecked_Union1 is\n+\n+  type Bit is (Zero, One);\n+\n+  type U (X : Bit := Zero) is record\n+    case X is\n+      when Zero => I: Integer;\n+      when One => F : Float;\n+    end case;\n+  end record;\n+  for U use record\n+    I at 0 range  0 .. 31;\n+    F at 0 range  0 .. 31;\n+  end record;\n+  pragma Unchecked_Union(U);\n+\n+begin\n+  if U'Object_Size /= 32 then\n+    raise Program_Error;\n+  end if;\n+end;"}]}