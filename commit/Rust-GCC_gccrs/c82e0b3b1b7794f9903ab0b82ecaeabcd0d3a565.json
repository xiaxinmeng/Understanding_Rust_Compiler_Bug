{"sha": "c82e0b3b1b7794f9903ab0b82ecaeabcd0d3a565", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzgyZTBiM2IxYjc3OTRmOTkwM2FiMGI4MmVjYWVhYmNkMGQzYTU2NQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-12-18T15:31:38Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-12-18T15:31:38Z"}, "message": "tree-ssa-sccvn.c (copy_nary): New function.\n\n2009-12-18  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-sccvn.c (copy_nary): New function.\n\t(copy_phis): Likewise.\n\t(copy_references): Likewise.\n\t(process_scc): Avoid last iteration by copying the\n\toptimistic table to the valid table.\n\nFrom-SVN: r155346", "tree": {"sha": "1a983ee434466a8c4dd0a7ac0d715f881943062f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a983ee434466a8c4dd0a7ac0d715f881943062f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c82e0b3b1b7794f9903ab0b82ecaeabcd0d3a565", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c82e0b3b1b7794f9903ab0b82ecaeabcd0d3a565", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c82e0b3b1b7794f9903ab0b82ecaeabcd0d3a565", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c82e0b3b1b7794f9903ab0b82ecaeabcd0d3a565/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d88cf0ceb35a0690bcb2d0008c048d3de6aedcca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d88cf0ceb35a0690bcb2d0008c048d3de6aedcca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d88cf0ceb35a0690bcb2d0008c048d3de6aedcca"}], "stats": {"total": 70, "additions": 67, "deletions": 3}, "files": [{"sha": "34809207012d20dc9e56367d7e0b418bd36fbda0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c82e0b3b1b7794f9903ab0b82ecaeabcd0d3a565/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c82e0b3b1b7794f9903ab0b82ecaeabcd0d3a565/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c82e0b3b1b7794f9903ab0b82ecaeabcd0d3a565", "patch": "@@ -1,3 +1,11 @@\n+2009-12-18  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-sccvn.c (copy_nary): New function.\n+\t(copy_phis): Likewise.\n+\t(copy_references): Likewise.\n+\t(process_scc): Avoid last iteration by copying the\n+\toptimistic table to the valid table.\n+\n 2009-12-17  Jakub Jelinek  <jakub@redhat.com>\n \n \t* dwarf2out.c (loc_descriptor): For SYMBOL_REFs and LABEL_REFs"}, {"sha": "058da5c97a558adef74b40d03c9be8dd6bb168eb", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 59, "deletions": 3, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c82e0b3b1b7794f9903ab0b82ecaeabcd0d3a565/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c82e0b3b1b7794f9903ab0b82ecaeabcd0d3a565/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=c82e0b3b1b7794f9903ab0b82ecaeabcd0d3a565", "patch": "@@ -2737,6 +2737,60 @@ sort_scc (VEC (tree, heap) *scc)\n \t compare_ops);\n }\n \n+/* Insert the no longer used nary *ENTRY to the current hash.  */\n+\n+static int\n+copy_nary (void **entry, void *data ATTRIBUTE_UNUSED)\n+{\n+  vn_nary_op_t onary = (vn_nary_op_t) *entry;\n+  size_t size = (sizeof (struct vn_nary_op_s)\n+\t\t - sizeof (tree) * (4 - onary->length));\n+  vn_nary_op_t nary = (vn_nary_op_t) obstack_alloc (&current_info->nary_obstack,\n+\t\t\t\t\t\t    size);\n+  void **slot;\n+  memcpy (nary, onary, size);\n+  slot = htab_find_slot_with_hash (current_info->nary, nary, nary->hashcode,\n+\t\t\t\t   INSERT);\n+  gcc_assert (!*slot);\n+  *slot = nary;\n+  return 1;\n+}\n+\n+/* Insert the no longer used phi *ENTRY to the current hash.  */\n+\n+static int\n+copy_phis (void **entry, void *data ATTRIBUTE_UNUSED)\n+{\n+  vn_phi_t ophi = (vn_phi_t) *entry;\n+  vn_phi_t phi = (vn_phi_t) pool_alloc (current_info->phis_pool);\n+  void **slot;\n+  memcpy (phi, ophi, sizeof (*phi));\n+  ophi->phiargs = NULL;\n+  slot = htab_find_slot_with_hash (current_info->phis, phi, phi->hashcode,\n+\t\t\t\t   INSERT);\n+  *slot = phi;\n+  return 1;\n+}\n+\n+/* Insert the no longer used reference *ENTRY to the current hash.  */\n+\n+static int\n+copy_references (void **entry, void *data ATTRIBUTE_UNUSED)\n+{\n+  vn_reference_t oref = (vn_reference_t) *entry;\n+  vn_reference_t ref;\n+  void **slot;\n+  ref = (vn_reference_t) pool_alloc (current_info->references_pool);\n+  memcpy (ref, oref, sizeof (*ref));\n+  oref->operands = NULL;\n+  slot = htab_find_slot_with_hash (current_info->references, ref, ref->hashcode,\n+\t\t\t\t   INSERT);\n+  if (*slot)\n+    free_reference (*slot);\n+  *slot = ref;\n+  return 1;\n+}\n+\n /* Process a strongly connected component in the SSA graph.  */\n \n static void\n@@ -2782,10 +2836,12 @@ process_scc (VEC (tree, heap) *scc)\n \n       statistics_histogram_event (cfun, \"SCC iterations\", iterations);\n \n-      /* Finally, visit the SCC once using the valid table.  */\n+      /* Finally, copy the contents of the no longer used optimistic\n+\t table to the valid table.  */\n       current_info = valid_info;\n-      for (i = 0; VEC_iterate (tree, scc, i, var); i++)\n-\tvisit_use (var);\n+      htab_traverse (optimistic_info->nary, copy_nary, NULL);\n+      htab_traverse (optimistic_info->phis, copy_phis, NULL);\n+      htab_traverse (optimistic_info->references, copy_references, NULL);\n     }\n }\n "}]}