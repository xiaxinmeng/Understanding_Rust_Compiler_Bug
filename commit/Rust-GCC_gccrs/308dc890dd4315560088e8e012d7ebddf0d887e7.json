{"sha": "308dc890dd4315560088e8e012d7ebddf0d887e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA4ZGM4OTBkZDQzMTU1NjAwODhlOGUwMTJkN2ViZGRmMGQ4ODdlNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-06-07T09:48:53Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-06-07T09:48:53Z"}, "message": "re PR gcov-profile/49299 (ICE in gimple_ic on profile feedback build)\n\n\tPR gcov-profile/49299\n\t* value-prof.c (gimple_ic): Don't assume icall has\n\ta fallthru edge.\n\n\t* gcc.dg/tree-prof/pr49299-1.c: New test.\n\t* gcc.dg/tree-prof/pr49299-2.c: New test.\n\nFrom-SVN: r174738", "tree": {"sha": "11da433f9003da60ec244aa6ae8f106e9d8f099e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11da433f9003da60ec244aa6ae8f106e9d8f099e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/308dc890dd4315560088e8e012d7ebddf0d887e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/308dc890dd4315560088e8e012d7ebddf0d887e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/308dc890dd4315560088e8e012d7ebddf0d887e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/308dc890dd4315560088e8e012d7ebddf0d887e7/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "34b6bcade4167c229808658e9fd8b59088b55c11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34b6bcade4167c229808658e9fd8b59088b55c11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34b6bcade4167c229808658e9fd8b59088b55c11"}], "stats": {"total": 114, "additions": 102, "deletions": 12}, "files": [{"sha": "eb60a74fdfa2508d3ac35f9b3cf44841bc3aa1dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308dc890dd4315560088e8e012d7ebddf0d887e7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308dc890dd4315560088e8e012d7ebddf0d887e7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=308dc890dd4315560088e8e012d7ebddf0d887e7", "patch": "@@ -1,3 +1,9 @@\n+2011-06-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR gcov-profile/49299\n+\t* value-prof.c (gimple_ic): Don't assume icall has\n+\ta fallthru edge.\n+\n 2011-06-07  Ira Rosen  <ira.rosen@linaro.org>\n \n \t* tree-vectorizer.h (vect_recog_func_ptr): Make last argument to be"}, {"sha": "86d495435c9ddbbccd2c92646216d14f88b3cc22", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308dc890dd4315560088e8e012d7ebddf0d887e7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308dc890dd4315560088e8e012d7ebddf0d887e7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=308dc890dd4315560088e8e012d7ebddf0d887e7", "patch": "@@ -1,3 +1,9 @@\n+2011-06-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR gcov-profile/49299\n+\t* gcc.dg/tree-prof/pr49299-1.c: New test.\n+\t* gcc.dg/tree-prof/pr49299-2.c: New test.\n+\n 2011-06-07  Ira Rosen  <ira.rosen@linaro.org>\n \n \t* lib/target-supports.exp"}, {"sha": "dd45bafc784299414a072ec032ea37f5ab28e993", "filename": "gcc/testsuite/gcc.dg/tree-prof/pr49299-1.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308dc890dd4315560088e8e012d7ebddf0d887e7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr49299-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308dc890dd4315560088e8e012d7ebddf0d887e7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr49299-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr49299-1.c?ref=308dc890dd4315560088e8e012d7ebddf0d887e7", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-options \"-O2\" } */\n+\n+__attribute__((noreturn)) void (*fn) (void);\n+\n+volatile int v;\n+\n+__attribute__((noreturn)) void\n+fn0 (void)\n+{\n+  __builtin_exit (0);\n+}\n+\n+__attribute__((noreturn)) void\n+fn1 (void)\n+{\n+  __builtin_exit (1);\n+}\n+\n+__attribute__((noinline, noclone)) void\n+setfn (__attribute__((noreturn)) void (*x) (void))\n+{\n+  fn = x;\n+}\n+\n+int\n+main ()\n+{\n+  int i;\n+  if (v < 1)\n+    setfn (fn0);\n+  else\n+    setfn (fn1);\n+  fn ();\n+}"}, {"sha": "220c8c8ff0fb50e66442a376de0d35118767e2be", "filename": "gcc/testsuite/gcc.dg/tree-prof/pr49299-2.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308dc890dd4315560088e8e012d7ebddf0d887e7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr49299-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308dc890dd4315560088e8e012d7ebddf0d887e7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr49299-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr49299-2.c?ref=308dc890dd4315560088e8e012d7ebddf0d887e7", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-options \"-O2\" } */\n+\n+void (*fn) (void);\n+\n+volatile int v;\n+\n+__attribute__((noreturn)) void\n+fn0 (void)\n+{\n+  __builtin_exit (0);\n+}\n+\n+void\n+fn1 (void)\n+{\n+}\n+\n+__attribute__((noinline, noclone)) void\n+setfn (void (*x) (void))\n+{\n+  fn = x;\n+}\n+\n+int\n+main ()\n+{\n+  int i;\n+  if (v < 1)\n+    setfn (fn0);\n+  else\n+    setfn (fn1);\n+  fn ();\n+  return 0;\n+}"}, {"sha": "2b7a9d83bf2aef32d6beab99247e3b007e2a49d8", "filename": "gcc/value-prof.c", "status": "modified", "additions": 22, "deletions": 12, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308dc890dd4315560088e8e012d7ebddf0d887e7/gcc%2Fvalue-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308dc890dd4315560088e8e012d7ebddf0d887e7/gcc%2Fvalue-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.c?ref=308dc890dd4315560088e8e012d7ebddf0d887e7", "patch": "@@ -1145,9 +1145,9 @@ gimple_ic (gimple icall_stmt, struct cgraph_node *direct_call,\n {\n   gimple dcall_stmt, load_stmt, cond_stmt;\n   tree tmp0, tmp1, tmpv, tmp;\n-  basic_block cond_bb, dcall_bb, icall_bb, join_bb;\n+  basic_block cond_bb, dcall_bb, icall_bb, join_bb = NULL;\n   tree optype = build_pointer_type (void_type_node);\n-  edge e_cd, e_ci, e_di, e_dj, e_ij;\n+  edge e_cd, e_ci, e_di, e_dj = NULL, e_ij;\n   gimple_stmt_iterator gsi;\n   int lp_nr;\n \n@@ -1194,12 +1194,19 @@ gimple_ic (gimple icall_stmt, struct cgraph_node *direct_call,\n   else\n     {\n       e_ij = find_fallthru_edge (icall_bb->succs);\n-      e_ij->probability = REG_BR_PROB_BASE;\n-      e_ij->count = all - count;\n-      e_ij = single_pred_edge (split_edge (e_ij));\n+      /* The indirect call might be noreturn.  */\n+      if (e_ij != NULL)\n+\t{\n+\t  e_ij->probability = REG_BR_PROB_BASE;\n+\t  e_ij->count = all - count;\n+\t  e_ij = single_pred_edge (split_edge (e_ij));\n+\t}\n+    }\n+  if (e_ij != NULL)\n+    {\n+      join_bb = e_ij->dest;\n+      join_bb->count = all;\n     }\n-  join_bb = e_ij->dest;\n-  join_bb->count = all;\n \n   e_cd->flags = (e_cd->flags & ~EDGE_FALLTHRU) | EDGE_TRUE_VALUE;\n   e_cd->probability = prob;\n@@ -1211,12 +1218,15 @@ gimple_ic (gimple icall_stmt, struct cgraph_node *direct_call,\n \n   remove_edge (e_di);\n \n-  e_dj = make_edge (dcall_bb, join_bb, EDGE_FALLTHRU);\n-  e_dj->probability = REG_BR_PROB_BASE;\n-  e_dj->count = count;\n+  if (e_ij != NULL)\n+    {\n+      e_dj = make_edge (dcall_bb, join_bb, EDGE_FALLTHRU);\n+      e_dj->probability = REG_BR_PROB_BASE;\n+      e_dj->count = count;\n \n-  e_ij->probability = REG_BR_PROB_BASE;\n-  e_ij->count = all - count;\n+      e_ij->probability = REG_BR_PROB_BASE;\n+      e_ij->count = all - count;\n+    }\n \n   /* Insert PHI node for the call result if necessary.  */\n   if (gimple_call_lhs (icall_stmt)"}]}