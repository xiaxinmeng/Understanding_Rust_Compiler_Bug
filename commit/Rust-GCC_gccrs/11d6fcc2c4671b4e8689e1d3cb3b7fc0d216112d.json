{"sha": "11d6fcc2c4671b4e8689e1d3cb3b7fc0d216112d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFkNmZjYzJjNDY3MWI0ZTg2ODllMWQzY2IzYjdmYzBkMjE2MTEyZA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-22T01:14:41Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-22T01:14:41Z"}, "message": "Don't crash building erroneous variable initializer.\n\nFrom-SVN: r168155", "tree": {"sha": "3ddd85c5babcfe0d92f9f8ae754208483ce0e359", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ddd85c5babcfe0d92f9f8ae754208483ce0e359"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11d6fcc2c4671b4e8689e1d3cb3b7fc0d216112d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11d6fcc2c4671b4e8689e1d3cb3b7fc0d216112d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11d6fcc2c4671b4e8689e1d3cb3b7fc0d216112d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11d6fcc2c4671b4e8689e1d3cb3b7fc0d216112d/comments", "author": null, "committer": null, "parents": [{"sha": "fe6e051695ff13ec7139469402506deb66ba0420", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe6e051695ff13ec7139469402506deb66ba0420", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe6e051695ff13ec7139469402506deb66ba0420"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "5a6f0792fcc8bb6e2b17ffbbc726701ce1c4e7b4", "filename": "gcc/go/gofrontend/gogo-tree.cc", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11d6fcc2c4671b4e8689e1d3cb3b7fc0d216112d/gcc%2Fgo%2Fgofrontend%2Fgogo-tree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11d6fcc2c4671b4e8689e1d3cb3b7fc0d216112d/gcc%2Fgo%2Fgofrontend%2Fgogo-tree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo-tree.cc?ref=11d6fcc2c4671b4e8689e1d3cb3b7fc0d216112d", "patch": "@@ -757,7 +757,7 @@ Gogo::write_globals()\n \t      pop_cfun();\n \t    }\n \n-\t  if (var_init_tree != NULL_TREE)\n+\t  if (var_init_tree != NULL_TREE && var_init_tree != error_mark_node)\n \t    {\n \t      if (no->var_value()->init() == NULL\n \t\t  && !no->var_value()->has_pre_init())\n@@ -1209,17 +1209,22 @@ Variable::get_init_block(Gogo* gogo, Named_object* function, tree var_decl)\n \n   Translate_context context(gogo, function, NULL, NULL_TREE);\n   tree block_tree = this->preinit_->get_tree(&context);\n+  if (block_tree == error_mark_node)\n+    return error_mark_node;\n   gcc_assert(TREE_CODE(block_tree) == BIND_EXPR);\n   tree statements = BIND_EXPR_BODY(block_tree);\n-  while (TREE_CODE(statements) == TRY_FINALLY_EXPR\n-\t || TREE_CODE(statements) == TRY_CATCH_EXPR)\n+  while (statements != NULL_TREE\n+\t && (TREE_CODE(statements) == TRY_FINALLY_EXPR\n+\t     || TREE_CODE(statements) == TRY_CATCH_EXPR))\n     statements = TREE_OPERAND(statements, 0);\n \n   // It's possible to have pre-init statements without an initializer\n   // if the pre-init statements set the variable.\n   if (this->init_ != NULL)\n     {\n       tree rhs_tree = this->init_->get_tree(&context);\n+      if (rhs_tree == error_mark_node)\n+\treturn error_mark_node;\n       if (var_decl == NULL_TREE)\n \tappend_to_statement_list(rhs_tree, &statements);\n       else\n@@ -1228,6 +1233,8 @@ Variable::get_init_block(Gogo* gogo, Named_object* function, tree var_decl)\n \t\t\t\t\t\t\tthis->init_->type(),\n \t\t\t\t\t\t\trhs_tree,\n \t\t\t\t\t\t\tthis->location());\n+\t  if (val == error_mark_node)\n+\t    return error_mark_node;\n \t  tree set = fold_build2_loc(this->location(), MODIFY_EXPR,\n \t\t\t\t     void_type_node, var_decl, val);\n \t  append_to_statement_list(set, &statements);"}]}