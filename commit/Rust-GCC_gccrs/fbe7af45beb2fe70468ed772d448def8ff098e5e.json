{"sha": "fbe7af45beb2fe70468ed772d448def8ff098e5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJlN2FmNDViZWIyZmU3MDQ2OGVkNzcyZDQ0OGRlZjhmZjA5OGU1ZQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-08-16T22:36:13Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-08-16T22:36:13Z"}, "message": "trans-expr.c (gfc_trans_scalar_assign): Replace hack with more proper hack.\n\n2009-08-17  Richard Guenther  <rguenther@suse.de>\n\n\t* trans-expr.c (gfc_trans_scalar_assign): Replace hack with\n\tmore proper hack.\n\nFrom-SVN: r150817", "tree": {"sha": "0d830a7f31ecbe922751da4a71c6f72cc9e511e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d830a7f31ecbe922751da4a71c6f72cc9e511e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbe7af45beb2fe70468ed772d448def8ff098e5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbe7af45beb2fe70468ed772d448def8ff098e5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbe7af45beb2fe70468ed772d448def8ff098e5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbe7af45beb2fe70468ed772d448def8ff098e5e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a6494e5388a9cf5ae58fff5458bee68c801bb257", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6494e5388a9cf5ae58fff5458bee68c801bb257", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6494e5388a9cf5ae58fff5458bee68c801bb257"}], "stats": {"total": 31, "additions": 14, "deletions": 17}, "files": [{"sha": "694e02f89a9bee4bf04b39d8d8eb2b877cbef883", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbe7af45beb2fe70468ed772d448def8ff098e5e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbe7af45beb2fe70468ed772d448def8ff098e5e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=fbe7af45beb2fe70468ed772d448def8ff098e5e", "patch": "@@ -1,3 +1,8 @@\n+2009-08-17  Richard Guenther  <rguenther@suse.de>\n+\n+\t* trans-expr.c (gfc_trans_scalar_assign): Replace hack with\n+\tmore proper hack.\n+\n 2009-08-15  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/41080"}, {"sha": "144c20441e934089ce39b2f7b897455afe84fc33", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 9, "deletions": 17, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbe7af45beb2fe70468ed772d448def8ff098e5e/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbe7af45beb2fe70468ed772d448def8ff098e5e/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=fbe7af45beb2fe70468ed772d448def8ff098e5e", "patch": "@@ -4432,29 +4432,21 @@ gfc_trans_scalar_assign (gfc_se * lse, gfc_se * rse, gfc_typespec ts,\n \t  gfc_add_expr_to_block (&block, tmp);\n \t}\n     }\n+  else if (ts.type == BT_DERIVED)\n+    {\n+      gfc_add_block_to_block (&block, &lse->pre);\n+      gfc_add_block_to_block (&block, &rse->pre);\n+      tmp = gfc_evaluate_now (rse->expr, &block);\n+      tmp = fold_build1 (VIEW_CONVERT_EXPR, TREE_TYPE (lse->expr), rse->expr);\n+      gfc_add_modify (&block, lse->expr, tmp);\n+    }\n   else\n     {\n       gfc_add_block_to_block (&block, &lse->pre);\n       gfc_add_block_to_block (&block, &rse->pre);\n \n-      /* TODO This is rather obviously the wrong place to do this.\n-\t However, a number of testcases, such as function_kinds_1\n-\t and function_types_2 fail without it, by ICEing at\n-\t fold_const: 2710 (fold_convert_loc).  */\n-      if (ts.type == BT_DERIVED\n-\t    && gfc_option.flag_whole_file\n-\t    && (TYPE_MAIN_VARIANT (TREE_TYPE (rse->expr))\n-\t\t!= TYPE_MAIN_VARIANT (TREE_TYPE (lse->expr))))\n-\t{\n-\t  tmp = gfc_evaluate_now (rse->expr, &block);\n-\t  TYPE_MAIN_VARIANT (TREE_TYPE (tmp))\n-\t\t= TYPE_MAIN_VARIANT (TREE_TYPE (lse->expr));\n-\t}\n-      else\n-\ttmp = rse->expr;\n-      \n       gfc_add_modify (&block, lse->expr,\n-\t\t\t   fold_convert (TREE_TYPE (lse->expr), tmp));\n+\t\t      fold_convert (TREE_TYPE (lse->expr), rse->expr));\n     }\n \n   gfc_add_block_to_block (&block, &lse->post);"}]}