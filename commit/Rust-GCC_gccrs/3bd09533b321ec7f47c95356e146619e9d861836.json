{"sha": "3bd09533b321ec7f47c95356e146619e9d861836", "node_id": "C_kwDOANBUbNoAKDNiZDA5NTMzYjMyMWVjN2Y0N2M5NTM1NmUxNDY2MTllOWQ4NjE4MzY", "commit": {"author": {"name": "Sergey Bugaev", "email": "bugaevc@gmail.com", "date": "2023-04-03T15:51:58Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@embecosm.com", "date": "2023-04-17T08:46:19Z"}, "message": "resolve: Add ResolveExpr::funny_error\n\n...and thread it through the constructors and the ResolveExpr::go ()\nmethod.\n\nThis will be used for implementing the \"break rust\" Easter egg.\n\ngcc/rust/ChangeLog:\n\t* resolve/rust-ast-resolve-expr.h,\n\tresolve/rust-ast-resolve-expr.cc: Add ResolveExpr::funny_error\n\nSigned-off-by: Sergey Bugaev <bugaevc@gmail.com>", "tree": {"sha": "e5ccaca3ca2c6ad8dd982d96bb8ac1f6b7e8b082", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5ccaca3ca2c6ad8dd982d96bb8ac1f6b7e8b082"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bd09533b321ec7f47c95356e146619e9d861836", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bd09533b321ec7f47c95356e146619e9d861836", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bd09533b321ec7f47c95356e146619e9d861836", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bd09533b321ec7f47c95356e146619e9d861836/comments", "author": {"login": "bugaevc", "id": 10091584, "node_id": "MDQ6VXNlcjEwMDkxNTg0", "avatar_url": "https://avatars.githubusercontent.com/u/10091584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugaevc", "html_url": "https://github.com/bugaevc", "followers_url": "https://api.github.com/users/bugaevc/followers", "following_url": "https://api.github.com/users/bugaevc/following{/other_user}", "gists_url": "https://api.github.com/users/bugaevc/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugaevc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugaevc/subscriptions", "organizations_url": "https://api.github.com/users/bugaevc/orgs", "repos_url": "https://api.github.com/users/bugaevc/repos", "events_url": "https://api.github.com/users/bugaevc/events{/privacy}", "received_events_url": "https://api.github.com/users/bugaevc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfd8e24c2ad0034d2ad0ca59d680d0f9c1250691", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfd8e24c2ad0034d2ad0ca59d680d0f9c1250691", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfd8e24c2ad0034d2ad0ca59d680d0f9c1250691"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "82ec2485d71f8c019d5d363f7386970496383f87", "filename": "gcc/rust/resolve/rust-ast-resolve-expr.cc", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd09533b321ec7f47c95356e146619e9d861836/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd09533b321ec7f47c95356e146619e9d861836/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.cc?ref=3bd09533b321ec7f47c95356e146619e9d861836", "patch": "@@ -29,9 +29,9 @@ namespace Resolver {\n \n void\n ResolveExpr::go (AST::Expr *expr, const CanonicalPath &prefix,\n-\t\t const CanonicalPath &canonical_prefix)\n+\t\t const CanonicalPath &canonical_prefix, bool funny_error)\n {\n-  ResolveExpr resolver (prefix, canonical_prefix);\n+  ResolveExpr resolver (prefix, canonical_prefix, funny_error);\n   expr->accept_vis (resolver);\n }\n \n@@ -674,8 +674,10 @@ ResolveExpr::resolve_closure_param (AST::ClosureParam &param,\n }\n \n ResolveExpr::ResolveExpr (const CanonicalPath &prefix,\n-\t\t\t  const CanonicalPath &canonical_prefix)\n-  : ResolverBase (), prefix (prefix), canonical_prefix (canonical_prefix)\n+\t\t\t  const CanonicalPath &canonical_prefix,\n+\t\t\t  bool funny_error)\n+  : ResolverBase (), prefix (prefix), canonical_prefix (canonical_prefix),\n+    funny_error (funny_error)\n {}\n \n } // namespace Resolver"}, {"sha": "2011903ba7e6f1c7ae8749f71c7693d5e8f43512", "filename": "gcc/rust/resolve/rust-ast-resolve-expr.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd09533b321ec7f47c95356e146619e9d861836/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd09533b321ec7f47c95356e146619e9d861836/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.h?ref=3bd09533b321ec7f47c95356e146619e9d861836", "patch": "@@ -31,7 +31,8 @@ class ResolveExpr : public ResolverBase\n \n public:\n   static void go (AST::Expr *expr, const CanonicalPath &prefix,\n-\t\t  const CanonicalPath &canonical_prefix);\n+\t\t  const CanonicalPath &canonical_prefix,\n+\t\t  bool funny_error = false);\n \n   void visit (AST::TupleIndexExpr &expr) override;\n   void visit (AST::TupleExpr &expr) override;\n@@ -84,10 +85,11 @@ class ResolveExpr : public ResolverBase\n \n private:\n   ResolveExpr (const CanonicalPath &prefix,\n-\t       const CanonicalPath &canonical_prefix);\n+\t       const CanonicalPath &canonical_prefix, bool funny_error);\n \n   const CanonicalPath &prefix;\n   const CanonicalPath &canonical_prefix;\n+  bool funny_error;\n };\n \n } // namespace Resolver"}]}