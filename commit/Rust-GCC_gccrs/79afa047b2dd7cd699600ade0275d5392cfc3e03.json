{"sha": "79afa047b2dd7cd699600ade0275d5392cfc3e03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzlhZmEwNDdiMmRkN2NkNjk5NjAwYWRlMDI3NWQ1MzkyY2ZjM2UwMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-13T08:22:58Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-13T08:22:58Z"}, "message": "[multiple changes]\n\n2009-07-13  Robert Dewar  <dewar@adacore.com>\n\n\t* freeze.adb (Freeze_Entity): Implement Warn_On_Suspicious_Modulus_Value\n\n\t* gnat_ugn.texi: Add documentation for -gnatw.m/.M\n\n\t* opt.ads (Warn_On_Suspicious_Modulus_Value): New flag\n\n\t* sem_warn.adb (Set_Dot_Warning_Flag): Set/reset\n\tWarn_On_Suspicious_Modulus_Value.\n\n\t* ug_words: Add entries for -gnatw.m/-gnatw.M.\n\n\t* usage.adb: Add lines for -gnatw.m/.M switches.\n\n\t* vms_data.ads: Add [NO]SUSPICIOUS_MODULUS for -gnatw.m/w.M\n\n2009-07-13  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_ch6.adb (Check_Synchronized_Overriding): Add missing check before\n\treading the Is_Interface attribute of the dispatching type.\n\n2009-07-13  Robert Dewar  <dewar@adacore.com>\n\n\t* a-convec.adb: Minor code reorganization (use conditional expressions)\n\nFrom-SVN: r149550", "tree": {"sha": "6ba7965e93594699a25747d19e3ca6434f714fe5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ba7965e93594699a25747d19e3ca6434f714fe5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79afa047b2dd7cd699600ade0275d5392cfc3e03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79afa047b2dd7cd699600ade0275d5392cfc3e03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79afa047b2dd7cd699600ade0275d5392cfc3e03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79afa047b2dd7cd699600ade0275d5392cfc3e03/comments", "author": null, "committer": null, "parents": [{"sha": "67b3acf8b79d87ed866e6c453f330e859fc009b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67b3acf8b79d87ed866e6c453f330e859fc009b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67b3acf8b79d87ed866e6c453f330e859fc009b4"}], "stats": {"total": 97, "additions": 74, "deletions": 23}, "files": [{"sha": "e04f2189c97a873309c18cfca0f85aaf97cfe1a9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79afa047b2dd7cd699600ade0275d5392cfc3e03/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79afa047b2dd7cd699600ade0275d5392cfc3e03/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=79afa047b2dd7cd699600ade0275d5392cfc3e03", "patch": "@@ -1,3 +1,29 @@\n+2009-07-13  Robert Dewar  <dewar@adacore.com>\n+\n+\t* freeze.adb (Freeze_Entity): Implement Warn_On_Suspicious_Modulus_Value\n+\n+\t* gnat_ugn.texi: Add documentation for -gnatw.m/.M\n+\n+\t* opt.ads (Warn_On_Suspicious_Modulus_Value): New flag\n+\n+\t* sem_warn.adb (Set_Dot_Warning_Flag): Set/reset\n+\tWarn_On_Suspicious_Modulus_Value.\n+\n+\t* ug_words: Add entries for -gnatw.m/-gnatw.M.\n+\n+\t* usage.adb: Add lines for -gnatw.m/.M switches.\n+\n+\t* vms_data.ads: Add [NO]SUSPICIOUS_MODULUS for -gnatw.m/w.M\n+\n+2009-07-13  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch6.adb (Check_Synchronized_Overriding): Add missing check before\n+\treading the Is_Interface attribute of the dispatching type.\n+\n+2009-07-13  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-convec.adb: Minor code reorganization (use conditional expressions)\n+\n 2009-07-13  Robert Dewar  <dewar@adacore.com>\n \n \t* freeze.adb (Check_Suspicious_Modulus): New procedure."}, {"sha": "b876e8ee971a81652e9df570ab226162e2f22694", "filename": "gcc/ada/a-convec.adb", "status": "modified", "additions": 10, "deletions": 21, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79afa047b2dd7cd699600ade0275d5392cfc3e03/gcc%2Fada%2Fa-convec.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79afa047b2dd7cd699600ade0275d5392cfc3e03/gcc%2Fada%2Fa-convec.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-convec.adb?ref=79afa047b2dd7cd699600ade0275d5392cfc3e03", "patch": "@@ -485,11 +485,10 @@ package body Ada.Containers.Vectors is\n \n       Index := Int'Base (Container.Last) - Int'Base (Count);\n \n-      if Index < Index_Type'Pos (Index_Type'First) then\n-         Container.Last := No_Index;\n-      else\n-         Container.Last := Index_Type (Index);\n-      end if;\n+      Container.Last :=\n+         (if Index < Index_Type'Pos (Index_Type'First)\n+          then No_Index\n+          else Index_Type (Index));\n    end Delete_Last;\n \n    -------------\n@@ -881,7 +880,6 @@ package body Ada.Containers.Vectors is\n            and then Index_Type'Last >= 0\n          then\n             CC := UInt (Index_Type'Last) + UInt (-Index_Type'First) + 1;\n-\n          else\n             CC := UInt (Int (Index_Type'Last) - First + 1);\n          end if;\n@@ -1325,7 +1323,6 @@ package body Ada.Containers.Vectors is\n            and then Index_Type'Last >= 0\n          then\n             CC := UInt (Index_Type'Last) + UInt (-Index_Type'First) + 1;\n-\n          else\n             CC := UInt (Int (Index_Type'Last) - First + 1);\n          end if;\n@@ -1953,13 +1950,10 @@ package body Ada.Containers.Vectors is\n          raise Program_Error with \"Position cursor denotes wrong container\";\n       end if;\n \n-      if Position.Container = null\n-        or else Position.Index > Container.Last\n-      then\n-         Last := Container.Last;\n-      else\n-         Last := Position.Index;\n-      end if;\n+      Last :=\n+        (if Position.Container = null or else Position.Index > Container.Last\n+         then Container.Last\n+         else Position.Index);\n \n       for Indx in reverse Index_Type'First .. Last loop\n          if Container.Elements.EA (Indx) = Item then\n@@ -1979,15 +1973,10 @@ package body Ada.Containers.Vectors is\n       Item      : Element_Type;\n       Index     : Index_Type := Index_Type'Last) return Extended_Index\n    is\n-      Last : Index_Type'Base;\n+      Last : constant Index_Type'Base :=\n+               Index_Type'Min (Container.Last, Index);\n \n    begin\n-      if Index > Container.Last then\n-         Last := Container.Last;\n-      else\n-         Last := Index;\n-      end if;\n-\n       for Indx in reverse Index_Type'First .. Last loop\n          if Container.Elements.EA (Indx) = Item then\n             return Indx;"}, {"sha": "98a23a216e64c1b3f054263144673e49e9a3518c", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79afa047b2dd7cd699600ade0275d5392cfc3e03/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79afa047b2dd7cd699600ade0275d5392cfc3e03/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=79afa047b2dd7cd699600ade0275d5392cfc3e03", "patch": "@@ -3692,7 +3692,9 @@ package body Freeze is\n          elsif Is_Integer_Type (E) then\n             Adjust_Esize_For_Alignment (E);\n \n-            if Is_Modular_Integer_Type (E) then\n+            if Is_Modular_Integer_Type (E)\n+              and then Warn_On_Suspicious_Modulus_Value\n+            then\n                Check_Suspicious_Modulus (E);\n             end if;\n "}, {"sha": "35aab900e2ef32df44ffe477eda835d5cb6d8003", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79afa047b2dd7cd699600ade0275d5392cfc3e03/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79afa047b2dd7cd699600ade0275d5392cfc3e03/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=79afa047b2dd7cd699600ade0275d5392cfc3e03", "patch": "@@ -5347,6 +5347,20 @@ The default is that these warnings are not given.\n This switch disables warnings for variables that are assigned or\n initialized, but never read.\n \n+@item -gnatw.m\n+@emph{Activate warnings on suspicious modulus values.}\n+@cindex @option{-gnatw.m} (@command{gcc})\n+This switch activates warnings for modulus values that seem suspicious.\n+The cases caught are where the size is the same as the modulus (e.g.\n+a modulus of 7 with a size of 7 bits), and modulus values of 32 or 64\n+with no size clause. The guess in both cases is that 2**x was intended\n+rather than x. The default is that these warnings are given.\n+\n+@item -gnatw.M\n+@emph{Disable warnings on suspicious modulus values.}\n+@cindex @option{-gnatw.M} (@command{gcc})\n+This switch disables warnings for suspicious modulus values.\n+\n @item -gnatwn\n @emph{Set normal warnings mode.}\n @cindex @option{-gnatwn} (@command{gcc})"}, {"sha": "1ae4482c006828df6e01ee35e719a382ae09dec1", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79afa047b2dd7cd699600ade0275d5392cfc3e03/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79afa047b2dd7cd699600ade0275d5392cfc3e03/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=79afa047b2dd7cd699600ade0275d5392cfc3e03", "patch": "@@ -1377,6 +1377,11 @@ package Opt is\n    --  clauses that are affected by non-standard bit-order. The default is\n    --  that this warning is enabled.\n \n+   Warn_On_Suspicious_Modulus_Value : Boolean := True;\n+   --  GNAT\n+   --  Set to True to generate warnings for suspicious modulus values. The\n+   --  default is that this warning is enabled.\n+\n    Warn_On_Unchecked_Conversion : Boolean := True;\n    --  GNAT\n    --  Set to True to generate warnings for unchecked conversions that may have"}, {"sha": "7fba92cead68b08fd58a701a876b8b37e2c4786e", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79afa047b2dd7cd699600ade0275d5392cfc3e03/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79afa047b2dd7cd699600ade0275d5392cfc3e03/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=79afa047b2dd7cd699600ade0275d5392cfc3e03", "patch": "@@ -7175,6 +7175,7 @@ package body Sem_Ch6 is\n                  or else not Is_Overloadable (Subp)\n                  or else not Is_Primitive (Subp)\n                  or else not Is_Dispatching_Operation (Subp)\n+                 or else not Present (Find_Dispatching_Type (Subp))\n                  or else not Is_Interface (Find_Dispatching_Type (Subp))\n                then\n                   null;"}, {"sha": "e483d051504408f268c7d14bc6d1168059eb0e0c", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79afa047b2dd7cd699600ade0275d5392cfc3e03/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79afa047b2dd7cd699600ade0275d5392cfc3e03/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=79afa047b2dd7cd699600ade0275d5392cfc3e03", "patch": "@@ -2997,6 +2997,12 @@ package body Sem_Warn is\n             Warn_On_Unrepped_Components         := True;\n             Warn_On_Warnings_Off                := True;\n \n+         when 'm' =>\n+            Warn_On_Suspicious_Modulus_Value    := True;\n+\n+         when 'M' =>\n+            Warn_On_Suspicious_Modulus_Value    := False;\n+\n          when 'o' =>\n             Warn_On_All_Unread_Out_Parameters   := True;\n "}, {"sha": "68851c396178d0e8d957b58968373fab9ab95420", "filename": "gcc/ada/ug_words", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79afa047b2dd7cd699600ade0275d5392cfc3e03/gcc%2Fada%2Fug_words", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79afa047b2dd7cd699600ade0275d5392cfc3e03/gcc%2Fada%2Fug_words", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fug_words?ref=79afa047b2dd7cd699600ade0275d5392cfc3e03", "patch": "@@ -148,6 +148,8 @@ gcc -c          ^ GNAT COMPILE\n -gnatwL         ^ /WARNINGS=NOELABORATION\n -gnatwm         ^ /WARNINGS=MODIFIED_UNREF\n -gnatwM         ^ /WARNINGS=NOMODIFIED_UNREF\n+-gnatw.m        ^ /WARNINGS=SUSPICIOUS_MODULUES\n+-gnatw.M        ^ /WARNINGS=NOSUSPICIOUS_MODULUES\n -gnatwn         ^ /WARNINGS=NORMAL\n -gnatwo         ^ /WARNINGS=OVERLAYS\n -gnatwO         ^ /WARNINGS=NOOVERLAYS"}, {"sha": "136f5545271284c889abc58025778ee828cd635d", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79afa047b2dd7cd699600ade0275d5392cfc3e03/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79afa047b2dd7cd699600ade0275d5392cfc3e03/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=79afa047b2dd7cd699600ade0275d5392cfc3e03", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                B o d y                                   --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -428,6 +428,8 @@ begin\n                                                   \"but not read\");\n    Write_Line (\"        M*   turn off warnings for variable assigned \" &\n                                                   \"but not read\");\n+   Write_Line (\"        .m*  turn on warnings for suspicious modulus value\");\n+   Write_Line (\"        .M   turn off warnings for suspicious modulus value\");\n    Write_Line (\"        n*   normal warning mode (cancels -gnatws/-gnatwe)\");\n    Write_Line (\"        o*   turn on warnings for address clause overlay\");\n    Write_Line (\"        O    turn off warnings for address clause overlay\");"}, {"sha": "b4ee226c673beee59005eef2668386445eb2b1e8", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79afa047b2dd7cd699600ade0275d5392cfc3e03/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79afa047b2dd7cd699600ade0275d5392cfc3e03/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=79afa047b2dd7cd699600ade0275d5392cfc3e03", "patch": "@@ -2914,6 +2914,10 @@ package VMS_Data is\n                                                \"-gnatwm \"                  &\n                                             \"NOMODIFIED_UNREF \"            &\n                                                \"-gnatwM \"                  &\n+                                            \"SUSPICIOUS_MODULUS \"          &\n+                                               \"-gnatw.m \"                 &\n+                                            \"NOSUSPICIOUS_MODULUS \"        &\n+                                               \"-gnatw.M \"                 &\n                                             \"NORMAL \"                      &\n                                                \"-gnatwn \"                  &\n                                             \"OVERLAYS \"                    &"}]}