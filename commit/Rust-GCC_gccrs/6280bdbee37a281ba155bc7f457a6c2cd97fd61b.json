{"sha": "6280bdbee37a281ba155bc7f457a6c2cd97fd61b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI4MGJkYmVlMzdhMjgxYmExNTViYzdmNDU3YTZjMmNkOTdmZDYxYg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2009-01-03T22:32:08Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-01-03T22:32:08Z"}, "message": "2009-01-03  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* Revert last commit, reopen and suspend libstdc++/38678.\n\nFrom-SVN: r143038", "tree": {"sha": "d627b29f9a00ade7145b434c906b9453791ea894", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d627b29f9a00ade7145b434c906b9453791ea894"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6280bdbee37a281ba155bc7f457a6c2cd97fd61b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6280bdbee37a281ba155bc7f457a6c2cd97fd61b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6280bdbee37a281ba155bc7f457a6c2cd97fd61b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6280bdbee37a281ba155bc7f457a6c2cd97fd61b/comments", "author": null, "committer": null, "parents": [{"sha": "5d56061941d2aa444093dd398ebd28847ba0d9d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d56061941d2aa444093dd398ebd28847ba0d9d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d56061941d2aa444093dd398ebd28847ba0d9d1"}], "stats": {"total": 358, "additions": 19, "deletions": 339}, "files": [{"sha": "b90886e473b254620c1c29cf64a96ac23b962d0e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6280bdbee37a281ba155bc7f457a6c2cd97fd61b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6280bdbee37a281ba155bc7f457a6c2cd97fd61b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6280bdbee37a281ba155bc7f457a6c2cd97fd61b", "patch": "@@ -1,3 +1,7 @@\n+2009-01-03  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* Revert last commit, reopen and suspend libstdc++/38678.\n+\n 2009-01-01  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/38678"}, {"sha": "440d234023e74bf2bdfd1cfff781ffa69b994eb1", "filename": "libstdc++-v3/include/bits/istream.tcc", "status": "modified", "additions": 3, "deletions": 19, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6280bdbee37a281ba155bc7f457a6c2cd97fd61b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6280bdbee37a281ba155bc7f457a6c2cd97fd61b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc?ref=6280bdbee37a281ba155bc7f457a6c2cd97fd61b", "patch": "@@ -1,7 +1,7 @@\n // istream classes -*- C++ -*-\n \n // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-// 2006, 2007, 2008, 2009\n+// 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -599,22 +599,6 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       return __c;\n     }\n \n-  template<typename _CharT, typename _Traits>\n-    streamsize\n-    basic_istream<_CharT, _Traits>::\n-    _M_read(char_type* __s, streamsize __n)\n-    {\n-      streamsize __ret = 0;\n-      for (; __ret < __n; ++__ret, ++__s)\n-\t{\n-\t  const int_type __c = this->rdbuf()->sbumpc();\n-\t  if (traits_type::eq_int_type(__c, traits_type::eof()))\n-\t    break;\n-\t  traits_type::assign(*__s, traits_type::to_char_type(__c));\n-\t}\n-      return __ret;\n-    }\n-\n   template<typename _CharT, typename _Traits>\n     basic_istream<_CharT, _Traits>&\n     basic_istream<_CharT, _Traits>::\n@@ -627,7 +611,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t  ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);\n \t  try\n \t    {\n-\t      _M_gcount = _M_read(__s, __n);\n+\t      _M_gcount = this->rdbuf()->sgetn(__s, __n);\n \t      if (_M_gcount != __n)\n \t\t__err |= (ios_base::eofbit | ios_base::failbit);\n \t    }\n@@ -659,7 +643,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t      // Cannot compare int_type with streamsize generically.\n \t      const streamsize __num = this->rdbuf()->in_avail();\n \t      if (__num > 0)\n-\t\t_M_gcount = _M_read(__s, std::min(__num, __n));\n+\t\t_M_gcount = this->rdbuf()->sgetn(__s, std::min(__num, __n));\n \t      else if (__num == -1)\n \t\t__err |= ios_base::eofbit;\n \t    }"}, {"sha": "06facc0360b055403dff2fb619e91eb0f4663ee8", "filename": "libstdc++-v3/include/bits/ostream.tcc", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6280bdbee37a281ba155bc7f457a6c2cd97fd61b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6280bdbee37a281ba155bc7f457a6c2cd97fd61b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc?ref=6280bdbee37a281ba155bc7f457a6c2cd97fd61b", "patch": "@@ -1,7 +1,7 @@\n // ostream classes -*- C++ -*-\n \n // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-// 2006, 2007, 2008, 2009\n+// 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -182,21 +182,6 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       return *this;\n     }\n \n-  template<typename _CharT, typename _Traits>\n-    streamsize\n-    basic_ostream<_CharT, _Traits>::\n-    _M_write_(const char_type* __s, streamsize __n)\n-    {\n-      streamsize __ret = 0;\n-      for (; __ret < __n; ++__ret, ++__s)\n-\t{\n-\t  const int_type __c = this->rdbuf()->sputc(*__s);\n-\t  if (traits_type::eq_int_type(__c, traits_type::eof()))\n-\t    break;\n-\t}\n-      return __ret;\n-    }\n-\n   template<typename _CharT, typename _Traits>\n     basic_ostream<_CharT, _Traits>&\n     basic_ostream<_CharT, _Traits>::"}, {"sha": "8b87c73fc1bddcbb8b895183dba132f64eb0ff7d", "filename": "libstdc++-v3/include/std/istream", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6280bdbee37a281ba155bc7f457a6c2cd97fd61b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6280bdbee37a281ba155bc7f457a6c2cd97fd61b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream?ref=6280bdbee37a281ba155bc7f457a6c2cd97fd61b", "patch": "@@ -1,7 +1,7 @@\n // Input streams -*- C++ -*-\n \n // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-// 2006, 2007, 2008, 2009\n+// 2006, 2007, 2008\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -586,28 +586,11 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       : _M_gcount(streamsize(0))\n       { this->init(0); }\n \n-      streamsize\n-      _M_read(char_type* __s, streamsize __n);\n-\n       template<typename _ValueT>\n         __istream_type&\n         _M_extract(_ValueT& __v);\n     };\n \n-  template<>\n-    inline streamsize\n-    basic_istream<char>::\n-    _M_read(char_type* __s, streamsize __n)\n-    { return this->rdbuf()->__streambuf_type::xsgetn(__s, __n); }\n-\n-#ifdef _GLIBCXX_USE_WCHAR_T\n-  template<>\n-    inline streamsize\n-    basic_istream<wchar_t>::\n-    _M_read(char_type* __s, streamsize __n)\n-    { return this->rdbuf()->__streambuf_type::xsgetn(__s, __n); }\n-#endif\n-\n   // Explicit specialization declarations, defined in src/istream.cc.\n   template<> \n     basic_istream<char>& "}, {"sha": "93a7d6ede31aa694281eb7962425f455d3b7df5e", "filename": "libstdc++-v3/include/std/ostream", "status": "modified", "additions": 10, "deletions": 26, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6280bdbee37a281ba155bc7f457a6c2cd97fd61b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6280bdbee37a281ba155bc7f457a6c2cd97fd61b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream?ref=6280bdbee37a281ba155bc7f457a6c2cd97fd61b", "patch": "@@ -1,7 +1,7 @@\n // Output streams -*- C++ -*-\n \n // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-// 2006, 2007, 2008, 2009\n+// 2006, 2007, 2008\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -286,6 +286,15 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       __ostream_type& \n       put(char_type __c);\n \n+      // Core write functionality, without sentry.\n+      void\n+      _M_write(const char_type* __s, streamsize __n)\n+      {\n+\tconst streamsize __put = this->rdbuf()->sputn(__s, __n);\n+\tif (__put != __n)\n+\t  this->setstate(ios_base::badbit);\n+      }\n+\n       /**\n        *  @brief  Character string insertion.\n        *  @param  s  The array to insert.\n@@ -356,36 +365,11 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       basic_ostream()\n       { this->init(0); }\n \n-      void\n-      _M_write(const char_type* __s, streamsize __n)\n-      {\n-\tconst streamsize __put = _M_write_(__s, __n);\n-\tif (__put != __n)\n-\t  this->setstate(ios_base::badbit);\n-      }\n-\n-      streamsize\n-      _M_write_(const char_type* __s, streamsize __n);\n-\n       template<typename _ValueT>\n         __ostream_type&\n         _M_insert(_ValueT __v);\n     };\n \n-  template<> \n-    inline streamsize\n-    basic_ostream<char>::\n-    _M_write_(const char_type* __s, streamsize __n)\n-    { return this->rdbuf()->__streambuf_type::xsputn(__s, __n); }\n-\n-#ifdef _GLIBCXX_USE_WCHAR_T\n-  template<>\n-    inline streamsize\n-    basic_ostream<wchar_t>::\n-    _M_write_(const char_type* __s, streamsize __n)\n-    { return this->rdbuf()->__streambuf_type::xsputn(__s, __n); }\n-#endif\n-\n   /**\n    *  @brief  Performs setup work for output streams.\n    *"}, {"sha": "e4865af5c6c6f89e0513773b7aad503a4eab9557", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/read/char/38678.cc", "status": "removed", "additions": 0, "deletions": 67, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d56061941d2aa444093dd398ebd28847ba0d9d1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fread%2Fchar%2F38678.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d56061941d2aa444093dd398ebd28847ba0d9d1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fread%2Fchar%2F38678.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fread%2Fchar%2F38678.cc?ref=5d56061941d2aa444093dd398ebd28847ba0d9d1", "patch": "@@ -1,67 +0,0 @@\n-// Copyright (C) 2009 Free Software Foundation\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n-// USA.\n-\n-// 27.6.1.3 unformatted input functions\n-\n-#include <istream>\n-#include <streambuf>\n-#include <testsuite_hooks.h>\n-\n-// libstdc++/38678\n-void test01()\n-{\n-  bool test __attribute__((unused)) = true;\n-\n-  static char x = '0';\n-\n-  struct : std::streambuf\n-  {\n-    char c;\n-\n-    int_type\n-    underflow()\n-    {\n-      c = x++;\n-      setg(&c, &c, &c + 1);\n-      return traits_type::to_int_type(c);\n-    }\n-\n-    std::streamsize\n-    xsgetn(char*, std::streamsize)\n-    {\n-      VERIFY( !\"xsgetn should not be called\" );\n-      return 0;\n-    }\n-  } sb;\n-\n-  std::istream in(&sb);\n-\n-  char s[4] = \"\";\n-\n-  in.read(s, 4);\n-\n-  VERIFY( in.good() );\n-  VERIFY( 4 == in.gcount() );\n-  VERIFY( '0' == s[0] && '1' == s[1] && '2' == s[2] && '3' == s[3] );\n-}\n-\n-int main()\n-{\n-  test01();\n-  return 0;\n-}"}, {"sha": "fcf1b88ce9d4dd576ab63acd50ff3fea9710482b", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/read/wchar_t/38678.cc", "status": "removed", "additions": 0, "deletions": 67, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d56061941d2aa444093dd398ebd28847ba0d9d1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fread%2Fwchar_t%2F38678.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d56061941d2aa444093dd398ebd28847ba0d9d1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fread%2Fwchar_t%2F38678.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fread%2Fwchar_t%2F38678.cc?ref=5d56061941d2aa444093dd398ebd28847ba0d9d1", "patch": "@@ -1,67 +0,0 @@\n-// Copyright (C) 2009 Free Software Foundation\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n-// USA.\n-\n-// 27.6.1.3 unformatted input functions\n-\n-#include <istream>\n-#include <streambuf>\n-#include <testsuite_hooks.h>\n-\n-// libstdc++/38678\n-void test01()\n-{\n-  bool test __attribute__((unused)) = true;\n-\n-  static wchar_t x = L'0';\n-\n-  struct : std::wstreambuf\n-  {\n-    wchar_t c;\n-\n-    int_type\n-    underflow()\n-    {\n-      c = x++;\n-      setg(&c, &c, &c + 1);\n-      return traits_type::to_int_type(c);\n-    }\n-\n-    std::streamsize\n-    xsgetn(wchar_t*, std::streamsize)\n-    {\n-      VERIFY( !\"xsgetn should not be called\" );\n-      return 0;\n-    }\n-  } sb;\n-\n-  std::wistream in(&sb);\n-\n-  wchar_t s[4] = L\"\";\n-\n-  in.read(s, 4);\n-\n-  VERIFY( in.good() );\n-  VERIFY( 4 == in.gcount() );\n-  VERIFY( L'0' == s[0] && L'1' == s[1] && L'2' == s[2] && L'3' == s[3] );\n-}\n-\n-int main()\n-{\n-  test01();\n-  return 0;\n-}"}, {"sha": "6c7fee1b13581606e42bc53089bd98af3f21041b", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/write/char/38678.cc", "status": "removed", "additions": 0, "deletions": 63, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d56061941d2aa444093dd398ebd28847ba0d9d1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Fwrite%2Fchar%2F38678.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d56061941d2aa444093dd398ebd28847ba0d9d1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Fwrite%2Fchar%2F38678.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Fwrite%2Fchar%2F38678.cc?ref=5d56061941d2aa444093dd398ebd28847ba0d9d1", "patch": "@@ -1,63 +0,0 @@\n-// Copyright (C) 2009 Free Software Foundation\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n-// USA.\n-\n-// 27.6.2.6 unformatted output functions\n-\n-#include <ostream>\n-#include <streambuf>\n-#include <testsuite_hooks.h>\n-\n-// libstdc++/38678\n-void test01()\n-{\n-  bool test __attribute__((unused)) = true;\n-\n-  static char s[4] = \"\";\n-  static unsigned i = 0;\n-\n-  struct : std::streambuf\n-  {\n-    int_type\n-    overflow(int_type c)\n-    {\n-      s[i++] = traits_type::to_char_type(c);\n-      return traits_type::not_eof(c);\n-    }\n-\n-    std::streamsize\n-    xsputn(const char*, std::streamsize)\n-    {\n-      VERIFY( !\"xsputn should not be called\" );\n-      return 0;\n-    }\n-  } sb;\n-\n-  std::ostream out(&sb);\n-\n-  out.write(\"0123\", 4);\n-\n-  VERIFY( out.good() );\n-  VERIFY( 4 == i );\n-  VERIFY( '0' == s[0] && '1' == s[1] && '2' == s[2] && '3' == s[3] );\n-}\n-\n-int main()\n-{\n-  test01();\n-  return 0;\n-}"}, {"sha": "8a9d184eabd96bbefb902bcfc2f8e1a19875bc01", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/write/wchar_t/38678.cc", "status": "removed", "additions": 0, "deletions": 63, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d56061941d2aa444093dd398ebd28847ba0d9d1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Fwrite%2Fwchar_t%2F38678.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d56061941d2aa444093dd398ebd28847ba0d9d1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Fwrite%2Fwchar_t%2F38678.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Fwrite%2Fwchar_t%2F38678.cc?ref=5d56061941d2aa444093dd398ebd28847ba0d9d1", "patch": "@@ -1,63 +0,0 @@\n-// Copyright (C) 2009 Free Software Foundation\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n-// USA.\n-\n-// 27.6.2.6 unformatted output functions\n-\n-#include <ostream>\n-#include <streambuf>\n-#include <testsuite_hooks.h>\n-\n-// libstdc++/38678\n-void test01()\n-{\n-  bool test __attribute__((unused)) = true;\n-\n-  static wchar_t s[4] = L\"\";\n-  static unsigned i = 0;\n-\n-  struct : std::wstreambuf\n-  {\n-    int_type\n-    overflow(int_type c)\n-    {\n-      s[i++] = traits_type::to_char_type(c);\n-      return traits_type::not_eof(c);\n-    }\n-\n-    std::streamsize\n-    xsputn(const wchar_t*, std::streamsize)\n-    {\n-      VERIFY( !\"xsputn should not be called\" );\n-      return 0;\n-    }\n-  } sb;\n-\n-  std::wostream out(&sb);\n-\n-  out.write(L\"0123\", 4);\n-\n-  VERIFY( out.good() );\n-  VERIFY( 4 == i );\n-  VERIFY( L'0' == s[0] && L'1' == s[1] && L'2' == s[2] && L'3' == s[3] );\n-}\n-\n-int main()\n-{\n-  test01();\n-  return 0;\n-}"}]}