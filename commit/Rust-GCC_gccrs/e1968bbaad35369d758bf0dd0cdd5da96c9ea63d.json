{"sha": "e1968bbaad35369d758bf0dd0cdd5da96c9ea63d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTE5NjhiYmFhZDM1MzY5ZDc1OGJmMGRkMGNkZDVkYTk2YzllYTYzZA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2012-05-21T22:49:51Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2012-05-21T22:49:51Z"}, "message": "rs6000.c: Delete unnecessary forward declarations.\n\n\t* config/rs6000/rs6000.c: Delete unnecessary forward declarations.\n\tMove those with ATTRIBUTE_UNUSED to immediately before definitions.\n\tMove function pointer variables after forward declarations.\n\t(rs6000_builtin_support_vector_misalignment): Make static.\n\t(rs6000_legitimate_address_p, rs6000_gimplify_va_arg): Likewise.\n\t(rs6000_function_value, rs6000_can_eliminate): Likewise.\n\nFrom-SVN: r187748", "tree": {"sha": "99a3f665e581a5a81a10ff440b6aa4d2f3900592", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99a3f665e581a5a81a10ff440b6aa4d2f3900592"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1968bbaad35369d758bf0dd0cdd5da96c9ea63d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1968bbaad35369d758bf0dd0cdd5da96c9ea63d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1968bbaad35369d758bf0dd0cdd5da96c9ea63d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1968bbaad35369d758bf0dd0cdd5da96c9ea63d/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f2f9a0977a9ea978a3bee7507bafa8d26445119d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2f9a0977a9ea978a3bee7507bafa8d26445119d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2f9a0977a9ea978a3bee7507bafa8d26445119d"}], "stats": {"total": 282, "additions": 41, "deletions": 241}, "files": [{"sha": "cd6b7a772151f5efada6d0075d5f990394bb2c6a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1968bbaad35369d758bf0dd0cdd5da96c9ea63d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1968bbaad35369d758bf0dd0cdd5da96c9ea63d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e1968bbaad35369d758bf0dd0cdd5da96c9ea63d", "patch": "@@ -1,3 +1,12 @@\n+2012-05-22  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/rs6000/rs6000.c: Delete unnecessary forward declarations.\n+\tMove those with ATTRIBUTE_UNUSED to immediately before definitions.\n+\tMove function pointer variables after forward declarations.\n+\t(rs6000_builtin_support_vector_misalignment): Make static.\n+\t(rs6000_legitimate_address_p, rs6000_gimplify_va_arg): Likewise.\n+\t(rs6000_function_value, rs6000_can_eliminate): Likewise.\n+\n 2012-05-21  Bernd Schmidt  <bernds@codesourcery.com>\n \n \tPR rtl-optimization/53373"}, {"sha": "a9e73d1dc433dafd79631961dfd13e7ad48920b1", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 32, "deletions": 241, "changes": 273, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1968bbaad35369d758bf0dd0cdd5da96c9ea63d/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1968bbaad35369d758bf0dd0cdd5da96c9ea63d/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=e1968bbaad35369d758bf0dd0cdd5da96c9ea63d", "patch": "@@ -920,310 +920,103 @@ static const struct rs6000_builtin_info_type rs6000_builtin_info[] =\n static tree (*rs6000_veclib_handler) (tree, tree, tree);\n \n \f\n-static bool rs6000_function_ok_for_sibcall (tree, tree);\n-static const char *rs6000_invalid_within_doloop (const_rtx);\n-static bool rs6000_legitimate_address_p (enum machine_mode, rtx, bool);\n static bool rs6000_debug_legitimate_address_p (enum machine_mode, rtx, bool);\n-static rtx rs6000_generate_compare (rtx, enum machine_mode);\n static bool spe_func_has_64bit_regs_p (void);\n-static rtx gen_frame_mem_offset (enum machine_mode, rtx, int);\n-static unsigned rs6000_hash_constant (rtx);\n-static unsigned toc_hash_function (const void *);\n-static int toc_hash_eq (const void *, const void *);\n-static bool reg_offset_addressing_ok_p (enum machine_mode);\n-static bool virtual_stack_registers_memory_p (rtx);\n-static bool constant_pool_expr_p (rtx);\n-static bool legitimate_small_data_p (enum machine_mode, rtx);\n-static bool legitimate_lo_sum_address_p (enum machine_mode, rtx, int);\n static struct machine_function * rs6000_init_machine_status (void);\n-static bool rs6000_assemble_integer (rtx, unsigned int, int);\n-#if defined (HAVE_GAS_HIDDEN) && !TARGET_MACHO\n-static void rs6000_assemble_visibility (tree, int);\n-#endif\n static int rs6000_ra_ever_killed (void);\n-static bool rs6000_attribute_takes_identifier_p (const_tree);\n static tree rs6000_handle_longcall_attribute (tree *, tree, tree, int, bool *);\n static tree rs6000_handle_altivec_attribute (tree *, tree, tree, int, bool *);\n-static bool rs6000_ms_bitfield_layout_p (const_tree);\n static tree rs6000_handle_struct_attribute (tree *, tree, tree, int, bool *);\n-static void rs6000_eliminate_indexed_memrefs (rtx operands[2]);\n-static const char *rs6000_mangle_type (const_tree);\n-static void rs6000_set_default_type_attributes (tree);\n-static bool rs6000_reg_live_or_pic_offset_p (int);\n static tree rs6000_builtin_vectorized_libmass (tree, tree, tree);\n-static tree rs6000_builtin_vectorized_function (tree, tree, tree);\n-static bool rs6000_output_addr_const_extra (FILE *, rtx);\n-static void rs6000_output_function_prologue (FILE *, HOST_WIDE_INT);\n-static void rs6000_output_function_epilogue (FILE *, HOST_WIDE_INT);\n-static void rs6000_output_mi_thunk (FILE *, tree, HOST_WIDE_INT, HOST_WIDE_INT,\n-\t\t\t\t    tree);\n static rtx rs6000_emit_set_long_const (rtx, HOST_WIDE_INT, HOST_WIDE_INT);\n-static bool rs6000_return_in_memory (const_tree, const_tree);\n-static rtx rs6000_function_value (const_tree, const_tree, bool);\n-static void rs6000_file_start (void);\n-#if TARGET_ELF\n-static int rs6000_elf_reloc_rw_mask (void);\n-static void rs6000_elf_asm_out_constructor (rtx, int) ATTRIBUTE_UNUSED;\n-static void rs6000_elf_asm_out_destructor (rtx, int) ATTRIBUTE_UNUSED;\n-static void rs6000_elf_file_end (void) ATTRIBUTE_UNUSED;\n-static void rs6000_elf_asm_init_sections (void);\n-static section *rs6000_elf_select_rtx_section (enum machine_mode, rtx,\n-\t\t\t\t\t       unsigned HOST_WIDE_INT);\n-static void rs6000_elf_encode_section_info (tree, rtx, int)\n-     ATTRIBUTE_UNUSED;\n-#endif\n-static bool rs6000_use_blocks_for_constant_p (enum machine_mode, const_rtx);\n-static void rs6000_alloc_sdmode_stack_slot (void);\n-static void rs6000_instantiate_decls (void);\n-#if TARGET_XCOFF\n-static void rs6000_xcoff_asm_output_anchor (rtx);\n-static void rs6000_xcoff_asm_globalize_label (FILE *, const char *);\n-static void rs6000_xcoff_asm_init_sections (void);\n-static int rs6000_xcoff_reloc_rw_mask (void);\n-static void rs6000_xcoff_asm_named_section (const char *, unsigned int, tree);\n-static section *rs6000_xcoff_select_section (tree, int,\n-\t\t\t\t\t     unsigned HOST_WIDE_INT);\n-static void rs6000_xcoff_unique_section (tree, int);\n-static section *rs6000_xcoff_select_rtx_section\n-  (enum machine_mode, rtx, unsigned HOST_WIDE_INT);\n-static const char * rs6000_xcoff_strip_name_encoding (const char *);\n-static unsigned int rs6000_xcoff_section_type_flags (tree, const char *, int);\n-static void rs6000_xcoff_file_start (void);\n-static void rs6000_xcoff_file_end (void);\n-#endif\n-static int rs6000_variable_issue (FILE *, int, rtx, int);\n-static int rs6000_register_move_cost (enum machine_mode,\n-\t\t\t\t      reg_class_t, reg_class_t);\n static int rs6000_memory_move_cost (enum machine_mode, reg_class_t, bool);\n-static bool rs6000_rtx_costs (rtx, int, int, int, int *, bool);\n static bool rs6000_debug_rtx_costs (rtx, int, int, int, int *, bool);\n static int rs6000_debug_address_cost (rtx, bool);\n-static int rs6000_adjust_cost (rtx, rtx, rtx, int);\n static int rs6000_debug_adjust_cost (rtx, rtx, rtx, int);\n-static void rs6000_sched_init (FILE *, int, int);\n static bool is_microcoded_insn (rtx);\n static bool is_nonpipeline_insn (rtx);\n static bool is_cracked_insn (rtx);\n-static bool is_branch_slot_insn (rtx);\n static bool is_load_insn (rtx);\n static rtx get_store_dest (rtx pat);\n static bool is_store_insn (rtx);\n static bool set_to_load_agen (rtx,rtx);\n-static bool adjacent_mem_locations (rtx,rtx);\n-static int rs6000_adjust_priority (rtx, int);\n-static int rs6000_issue_rate (void);\n-static bool rs6000_is_costly_dependence (dep_t, int, int);\n-static rtx get_next_active_insn (rtx, rtx);\n static bool insn_terminates_group_p (rtx , enum group_termination);\n static bool insn_must_be_first_in_group (rtx);\n static bool insn_must_be_last_in_group (rtx);\n-static bool is_costly_group (rtx *, rtx);\n-static int force_new_group (int, FILE *, rtx *, rtx, bool *, int, int *);\n-static int redefine_groups (FILE *, int, rtx, rtx);\n-static int pad_groups (FILE *, int, rtx, rtx);\n-static void rs6000_sched_finish (FILE *, int);\n-static int rs6000_sched_reorder (FILE *, int, rtx *, int *, int);\n-static int rs6000_sched_reorder2 (FILE *, int, rtx *, int *, int);\n-static int rs6000_use_sched_lookahead (void);\n-static int rs6000_use_sched_lookahead_guard (rtx);\n-static void * rs6000_alloc_sched_context (void);\n-static void rs6000_init_sched_context (void *, bool);\n-static void rs6000_set_sched_context (void *);\n-static void rs6000_free_sched_context (void *);\n-static tree rs6000_builtin_reciprocal (unsigned int, bool, bool);\n-static tree rs6000_builtin_mask_for_load (void);\n-static tree rs6000_builtin_mul_widen_even (tree);\n-static tree rs6000_builtin_mul_widen_odd (tree);\n-static bool rs6000_builtin_support_vector_misalignment (enum\n-\t\t\t\t\t\t\tmachine_mode,\n-\t\t\t\t\t\t\tconst_tree,\n-\t\t\t\t\t\t\tint, bool);\n-static int rs6000_builtin_vectorization_cost (enum vect_cost_for_stmt,\n-                                              tree, int);\n-static enum machine_mode rs6000_preferred_simd_mode (enum machine_mode);\n-\n-static void def_builtin (const char *, tree, enum rs6000_builtins);\n-static bool rs6000_vector_alignment_reachable (const_tree, bool);\n-static void rs6000_init_builtins (void);\n-static tree rs6000_builtin_decl (unsigned, bool);\n-\n-static rtx rs6000_expand_unop_builtin (enum insn_code, tree, rtx);\n-static rtx rs6000_expand_binop_builtin (enum insn_code, tree, rtx);\n-static rtx rs6000_expand_ternop_builtin (enum insn_code, tree, rtx);\n-static rtx rs6000_expand_builtin (tree, rtx, rtx, enum machine_mode, int);\n static void altivec_init_builtins (void);\n-static unsigned builtin_hash_function (const void *);\n-static int builtin_hash_eq (const void *, const void *);\n static tree builtin_function_type (enum machine_mode, enum machine_mode,\n \t\t\t\t   enum machine_mode, enum machine_mode,\n \t\t\t\t   enum rs6000_builtins, const char *name);\n static void rs6000_common_init_builtins (void);\n-static void rs6000_init_libfuncs (void);\n-\n static void paired_init_builtins (void);\n-static rtx paired_expand_builtin (tree, rtx, bool *);\n-static rtx paired_expand_lv_builtin (enum insn_code, tree, rtx);\n-static rtx paired_expand_stv_builtin (enum insn_code, tree);\n static rtx paired_expand_predicate_builtin (enum insn_code, tree, rtx);\n-\n static void spe_init_builtins (void);\n-static rtx spe_expand_builtin (tree, rtx, bool *);\n-static rtx spe_expand_stv_builtin (enum insn_code, tree);\n static rtx spe_expand_predicate_builtin (enum insn_code, tree, rtx);\n static rtx spe_expand_evsel_builtin (enum insn_code, tree, rtx);\n static int rs6000_emit_int_cmove (rtx, rtx, rtx, rtx);\n static rs6000_stack_t *rs6000_stack_info (void);\n-static void debug_stack_info (rs6000_stack_t *);\n-\n-static rtx altivec_expand_builtin (tree, rtx, bool *);\n-static rtx altivec_expand_ld_builtin (tree, rtx, bool *);\n-static rtx altivec_expand_st_builtin (tree, rtx, bool *);\n-static rtx altivec_expand_dst_builtin (tree, rtx, bool *);\n-static rtx altivec_expand_abs_builtin (enum insn_code, tree, rtx);\n-static rtx altivec_expand_predicate_builtin (enum insn_code, tree, rtx);\n-static rtx altivec_expand_stv_builtin (enum insn_code, tree);\n-static rtx altivec_expand_vec_init_builtin (tree, tree, rtx);\n-static rtx altivec_expand_vec_set_builtin (tree);\n-static rtx altivec_expand_vec_ext_builtin (tree, rtx);\n-static int get_element_number (tree, tree);\n-static void rs6000_option_override (void);\n-static int rs6000_loop_align_max_skip (rtx);\n-static int first_altivec_reg_to_save (void);\n-static unsigned int compute_vrsave_mask (void);\n-static void compute_save_world_info (rs6000_stack_t *info_ptr);\n static void is_altivec_return_reg (rtx, void *);\n-static rtx generate_set_vrsave (rtx, rs6000_stack_t *, int);\n int easy_vector_constant (rtx, enum machine_mode);\n-static rtx rs6000_dwarf_register_span (rtx);\n-static void rs6000_init_dwarf_reg_sizes_extra (tree);\n-static rtx rs6000_legitimize_address (rtx, rtx, enum machine_mode);\n static rtx rs6000_debug_legitimize_address (rtx, rtx, enum machine_mode);\n static rtx rs6000_legitimize_tls_address (rtx, enum tls_model);\n-static void rs6000_output_dwarf_dtprel (FILE *, int, rtx) ATTRIBUTE_UNUSED;\n-static rtx rs6000_delegitimize_address (rtx);\n-static bool rs6000_const_not_ok_for_debug_p (rtx);\n-static rtx rs6000_tls_get_addr (void);\n-static rtx rs6000_got_sym (void);\n static int rs6000_tls_symbol_ref_1 (rtx *, void *);\n-static const char *rs6000_get_some_local_dynamic_name (void);\n static int rs6000_get_some_local_dynamic_name_1 (rtx *, void *);\n-static rtx rs6000_complex_function_value (enum machine_mode);\n-static rtx rs6000_spe_function_arg (const CUMULATIVE_ARGS *,\n-\t\t\t\t    enum machine_mode, const_tree);\n-static void rs6000_darwin64_record_arg_advance_flush (CUMULATIVE_ARGS *,\n-\t\t\t\t\t\t      HOST_WIDE_INT, int);\n-static void rs6000_darwin64_record_arg_advance_recurse (CUMULATIVE_ARGS *,\n-\t\t\t\t\t\t\tconst_tree,\n-\t\t\t\t\t\t\tHOST_WIDE_INT);\n-static void rs6000_darwin64_record_arg_flush (CUMULATIVE_ARGS *,\n-\t\t\t\t\t      HOST_WIDE_INT,\n-\t\t\t\t\t      rtx[], int *);\n-static void rs6000_darwin64_record_arg_recurse (CUMULATIVE_ARGS *,\n-\t\t\t\t\t\tconst_tree, HOST_WIDE_INT,\n-\t\t\t\t\t\trtx[], int *);\n-static rtx rs6000_darwin64_record_arg (CUMULATIVE_ARGS *, const_tree, bool, bool);\n-static rtx rs6000_mixed_function_arg (enum machine_mode, const_tree, int);\n-static void rs6000_function_arg_advance (cumulative_args_t, enum machine_mode,\n-\t\t\t\t\t const_tree, bool);\n-static rtx rs6000_function_arg (cumulative_args_t, enum machine_mode,\n-\t\t\t\tconst_tree, bool);\n-static unsigned int rs6000_function_arg_boundary (enum machine_mode,\n-\t\t\t\t\t\t  const_tree);\n-static void rs6000_move_block_from_reg (int regno, rtx x, int nregs);\n-static void setup_incoming_varargs (cumulative_args_t,\n-\t\t\t\t    enum machine_mode, tree,\n-\t\t\t\t    int *, int);\n-static bool rs6000_pass_by_reference (cumulative_args_t, enum machine_mode,\n-\t\t\t\t      const_tree, bool);\n-static int rs6000_arg_partial_bytes (cumulative_args_t, enum machine_mode,\n-\t\t\t\t     tree, bool);\n-static const char *invalid_arg_for_unprototyped_fn (const_tree, const_tree, const_tree);\n+static rtx rs6000_darwin64_record_arg (CUMULATIVE_ARGS *, const_tree,\n+\t\t\t\t       bool, bool);\n #if TARGET_MACHO\n static void macho_branch_islands (void);\n-static int no_previous_def (tree function_name);\n-static tree get_prev_label (tree function_name);\n-static void rs6000_darwin_file_start (void);\n #endif\n-\n-static tree rs6000_build_builtin_va_list (void);\n-static void rs6000_va_start (tree, rtx);\n-static tree rs6000_gimplify_va_arg (tree, tree, gimple_seq *, gimple_seq *);\n-static bool rs6000_must_pass_in_stack (enum machine_mode, const_tree);\n-static bool rs6000_scalar_mode_supported_p (enum machine_mode);\n-static bool rs6000_vector_mode_supported_p (enum machine_mode);\n-static rtx rs6000_emit_vector_compare_inner (enum rtx_code, rtx, rtx);\n-static rtx rs6000_emit_vector_compare (enum rtx_code, rtx, rtx,\n-\t\t\t\t       enum machine_mode);\n-static tree rs6000_stack_protect_fail (void);\n-\n static rtx rs6000_legitimize_reload_address (rtx, enum machine_mode, int, int,\n \t\t\t\t\t     int, int *);\n-\n static rtx rs6000_debug_legitimize_reload_address (rtx, enum machine_mode, int,\n \t\t\t\t\t\t   int, int, int *);\n-\n-rtx (*rs6000_legitimize_reload_address_ptr) (rtx, enum machine_mode, int, int,\n-\t\t\t\t\t     int, int *)\n-  = rs6000_legitimize_reload_address;\n-\n-static bool rs6000_mode_dependent_address_p (const_rtx);\n static bool rs6000_mode_dependent_address (const_rtx);\n static bool rs6000_debug_mode_dependent_address (const_rtx);\n-static bool (*rs6000_mode_dependent_address_ptr) (const_rtx)\n-  = rs6000_mode_dependent_address;\n-\n static enum reg_class rs6000_secondary_reload_class (enum reg_class,\n \t\t\t\t\t\t     enum machine_mode, rtx);\n static enum reg_class rs6000_debug_secondary_reload_class (enum reg_class,\n \t\t\t\t\t\t\t   enum machine_mode,\n \t\t\t\t\t\t\t   rtx);\n-enum reg_class (*rs6000_secondary_reload_class_ptr) (enum reg_class,\n-\t\t\t\t\t\t     enum machine_mode, rtx)\n-  = rs6000_secondary_reload_class;\n-\n static enum reg_class rs6000_preferred_reload_class (rtx, enum reg_class);\n static enum reg_class rs6000_debug_preferred_reload_class (rtx,\n \t\t\t\t\t\t\t   enum reg_class);\n-enum reg_class (*rs6000_preferred_reload_class_ptr) (rtx, enum reg_class)\n-  = rs6000_preferred_reload_class;\n-\n static bool rs6000_secondary_memory_needed (enum reg_class, enum reg_class,\n \t\t\t\t\t    enum machine_mode);\n-\n static bool rs6000_debug_secondary_memory_needed (enum reg_class,\n \t\t\t\t\t\t  enum reg_class,\n \t\t\t\t\t\t  enum machine_mode);\n-\n-bool (*rs6000_secondary_memory_needed_ptr) (enum reg_class, enum reg_class,\n-\t\t\t\t\t    enum machine_mode)\n-  = rs6000_secondary_memory_needed;\n-\n static bool rs6000_cannot_change_mode_class (enum machine_mode,\n \t\t\t\t\t     enum machine_mode,\n \t\t\t\t\t     enum reg_class);\n static bool rs6000_debug_cannot_change_mode_class (enum machine_mode,\n \t\t\t\t\t\t   enum machine_mode,\n \t\t\t\t\t\t   enum reg_class);\n+static bool rs6000_save_toc_in_prologue_p (void);\n+\n+rtx (*rs6000_legitimize_reload_address_ptr) (rtx, enum machine_mode, int, int,\n+\t\t\t\t\t     int, int *)\n+  = rs6000_legitimize_reload_address;\n+\n+static bool (*rs6000_mode_dependent_address_ptr) (const_rtx)\n+  = rs6000_mode_dependent_address;\n+\n+enum reg_class (*rs6000_secondary_reload_class_ptr) (enum reg_class,\n+\t\t\t\t\t\t     enum machine_mode, rtx)\n+  = rs6000_secondary_reload_class;\n+\n+enum reg_class (*rs6000_preferred_reload_class_ptr) (rtx, enum reg_class)\n+  = rs6000_preferred_reload_class;\n+\n+bool (*rs6000_secondary_memory_needed_ptr) (enum reg_class, enum reg_class,\n+\t\t\t\t\t    enum machine_mode)\n+  = rs6000_secondary_memory_needed;\n \n bool (*rs6000_cannot_change_mode_class_ptr) (enum machine_mode,\n \t\t\t\t\t     enum machine_mode,\n \t\t\t\t\t     enum reg_class)\n   = rs6000_cannot_change_mode_class;\n \n-static reg_class_t rs6000_secondary_reload (bool, rtx, reg_class_t,\n-\t\t\t\t\t    enum machine_mode,\n-\t\t\t\t\t    struct secondary_reload_info *);\n-\n const int INSN_NOT_AVAILABLE = -1;\n-static enum machine_mode rs6000_eh_return_filter_mode (void);\n-static bool rs6000_can_eliminate (const int, const int);\n-static void rs6000_conditional_register_usage (void);\n-static void rs6000_trampoline_init (rtx, tree, rtx);\n-static bool rs6000_cannot_force_const_mem (enum machine_mode, rtx);\n-static bool rs6000_legitimate_constant_p (enum machine_mode, rtx);\n-static bool rs6000_save_toc_in_prologue_p (void);\n-static void rs6000_code_end (void) ATTRIBUTE_UNUSED;\n-static void rs6000_set_up_by_prologue (struct hard_reg_set_container *);\n \n /* Hash table stuff for keeping track of TOC entries.  */\n \n@@ -1249,14 +1042,6 @@ struct GTY(()) builtin_hash_struct\n \n static GTY ((param_is (struct builtin_hash_struct))) htab_t builtin_hash_table;\n \n-static bool rs6000_valid_attribute_p (tree, tree, tree, int);\n-static void rs6000_function_specific_save (struct cl_target_option *);\n-static void rs6000_function_specific_restore (struct cl_target_option *);\n-static void rs6000_function_specific_print (FILE *, int,\n-\t\t\t\t\t    struct cl_target_option *);\n-static bool rs6000_can_inline_p (tree, tree);\n-static void rs6000_set_current_function (tree);\n-\n \f\n /* Default register names.  */\n char rs6000_reg_names[][8] =\n@@ -3523,7 +3308,7 @@ rs6000_vector_alignment_reachable (const_tree type ATTRIBUTE_UNUSED, bool is_pac\n \n /* Return true if the vector misalignment factor is supported by the\n    target.  */ \n-bool\n+static bool\n rs6000_builtin_support_vector_misalignment (enum machine_mode mode,\n \t\t\t\t\t    const_tree type,\n \t\t\t\t\t    int misalignment,\n@@ -5787,6 +5572,7 @@ rs6000_debug_legitimize_address (rtx x, rtx oldx, enum machine_mode mode)\n /* This is called from dwarf2out.c via TARGET_ASM_OUTPUT_DWARF_DTPREL.\n    We need to emit DTP-relative relocations.  */\n \n+static void rs6000_output_dwarf_dtprel (FILE *, int, rtx) ATTRIBUTE_UNUSED;\n static void\n rs6000_output_dwarf_dtprel (FILE *file, int size, rtx x)\n {\n@@ -6419,7 +6205,7 @@ rs6000_debug_legitimize_reload_address (rtx x, enum machine_mode mode,\n    32-bit DImode, TImode, TFmode, TDmode), indexed addressing cannot be used\n    because adjacent memory cells are accessed by adding word-sized offsets\n    during assembly output.  */\n-bool\n+static bool\n rs6000_legitimate_address_p (enum machine_mode mode, rtx x, bool reg_ok_strict)\n {\n   bool reg_offset_p = reg_offset_addressing_ok_p (mode);\n@@ -9207,7 +8993,7 @@ rs6000_va_start (tree valist, rtx nextarg)\n \n /* Implement va_arg.  */\n \n-tree\n+static tree\n rs6000_gimplify_va_arg (tree valist, tree type, gimple_seq *pre_p,\n \t\t\tgimple_seq *post_p)\n {\n@@ -24740,6 +24526,7 @@ rs6000_elf_select_rtx_section (enum machine_mode mode, rtx x,\n    function descriptor name.  This saves a lot of overriding code to\n    read the prefixes.  */\n \n+static void rs6000_elf_encode_section_info (tree, rtx, int) ATTRIBUTE_UNUSED;\n static void\n rs6000_elf_encode_section_info (tree decl, rtx rtl, int first)\n {\n@@ -25252,6 +25039,7 @@ rs6000_elf_reloc_rw_mask (void)\n    This differs from default_named_section_asm_out_constructor in\n    that we have special handling for -mrelocatable.  */\n \n+static void rs6000_elf_asm_out_constructor (rtx, int) ATTRIBUTE_UNUSED;\n static void\n rs6000_elf_asm_out_constructor (rtx symbol, int priority)\n {\n@@ -25281,6 +25069,7 @@ rs6000_elf_asm_out_constructor (rtx symbol, int priority)\n     assemble_integer (symbol, POINTER_SIZE / BITS_PER_UNIT, POINTER_SIZE, 1);\n }\n \n+static void rs6000_elf_asm_out_destructor (rtx, int) ATTRIBUTE_UNUSED;\n static void\n rs6000_elf_asm_out_destructor (rtx symbol, int priority)\n {\n@@ -25386,6 +25175,7 @@ rs6000_elf_declare_function_name (FILE *file, const char *name, tree decl)\n   ASM_OUTPUT_LABEL (file, name);\n }\n \n+static void rs6000_elf_file_end (void) ATTRIBUTE_UNUSED;\n static void\n rs6000_elf_file_end (void)\n {\n@@ -26931,7 +26721,7 @@ rs6000_complex_function_value (enum machine_mode mode)\n    On RS/6000 an integer value is in r3 and a floating-point value is in\n    fp1, unless -msoft-float.  */\n \n-rtx\n+static rtx\n rs6000_function_value (const_tree valtype,\n \t\t       const_tree fn_decl_or_type ATTRIBUTE_UNUSED,\n \t\t       bool outgoing ATTRIBUTE_UNUSED)\n@@ -27078,7 +26868,7 @@ rs6000_libcall_value (enum machine_mode mode)\n    We need r30 if -mminimal-toc was specified, and there are constant pool\n    references.  */\n \n-bool\n+static bool\n rs6000_can_eliminate (const int from, const int to)\n {\n   return (from == ARG_POINTER_REGNUM && to == STACK_POINTER_REGNUM\n@@ -28205,6 +27995,7 @@ get_ppc476_thunk_name (char name[32])\n /* This function emits the simple thunk routine that is used to preserve\n    the link stack on the 476 cpu.  */\n \n+static void rs6000_code_end (void) ATTRIBUTE_UNUSED;\n static void\n rs6000_code_end (void)\n {"}]}