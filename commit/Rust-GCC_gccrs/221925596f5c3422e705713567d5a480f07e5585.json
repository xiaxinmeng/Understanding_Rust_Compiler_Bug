{"sha": "221925596f5c3422e705713567d5a480f07e5585", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIxOTI1NTk2ZjVjMzQyMmU3MDU3MTM1NjdkNWE0ODBmMDdlNTU4NQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-10-27T15:47:52Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-10-27T15:47:52Z"}, "message": "gimplify.c (gimplify_decl_expr): Handle anonymous artificial variables sooner.\n\n\t* gimplify.c (gimplify_decl_expr): Handle anonymous artificial\n\tvariables sooner.\n\nFrom-SVN: r166004", "tree": {"sha": "5068293f80517db513a36bef4add4f7f6bb14714", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5068293f80517db513a36bef4add4f7f6bb14714"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/221925596f5c3422e705713567d5a480f07e5585", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/221925596f5c3422e705713567d5a480f07e5585", "html_url": "https://github.com/Rust-GCC/gccrs/commit/221925596f5c3422e705713567d5a480f07e5585", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/221925596f5c3422e705713567d5a480f07e5585/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "84fabdde098daf8f6b6397a8549e520bcd1454ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84fabdde098daf8f6b6397a8549e520bcd1454ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84fabdde098daf8f6b6397a8549e520bcd1454ee"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "09ed54e6a330f1a7d08005f475c9df3d61de170b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/221925596f5c3422e705713567d5a480f07e5585/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/221925596f5c3422e705713567d5a480f07e5585/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=221925596f5c3422e705713567d5a480f07e5585", "patch": "@@ -1,3 +1,8 @@\n+2010-10-27  Jason Merrill  <jason@redhat.com>\n+\n+\t* gimplify.c (gimplify_decl_expr): Handle anonymous artificial\n+\tvariables sooner.\n+\n 2010-10-27  Jie Zhang  <jie@codesourcery.com>\n \t    Maxim Kuvyrkov  <maxim@codesourcery.com>\n "}, {"sha": "87b57f0ebf7483fefc9226f014747f9948b6ecb5", "filename": "gcc/gimplify.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/221925596f5c3422e705713567d5a480f07e5585/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/221925596f5c3422e705713567d5a480f07e5585/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=221925596f5c3422e705713567d5a480f07e5585", "patch": "@@ -1372,6 +1372,14 @@ gimplify_decl_expr (tree *stmt_p, gimple_seq *seq_p)\n \t\t\t\t   STACK_CHECK_MAX_VAR_SIZE) > 0))\n \tgimplify_vla_decl (decl, seq_p);\n \n+      /* Some front ends do not explicitly declare all anonymous\n+\t artificial variables.  We compensate here by declaring the\n+\t variables, though it would be better if the front ends would\n+\t explicitly declare them.  */\n+      if (!DECL_SEEN_IN_BIND_EXPR_P (decl)\n+\t  && DECL_ARTIFICIAL (decl) && DECL_NAME (decl) == NULL_TREE)\n+\tgimple_add_tmp_var (decl);\n+\n       if (init && init != error_mark_node)\n \t{\n \t  if (!TREE_STATIC (decl))\n@@ -1386,14 +1394,6 @@ gimplify_decl_expr (tree *stmt_p, gimple_seq *seq_p)\n \t       as they may contain a label address.  */\n \t    walk_tree (&init, force_labels_r, NULL, NULL);\n \t}\n-\n-      /* Some front ends do not explicitly declare all anonymous\n-\t artificial variables.  We compensate here by declaring the\n-\t variables, though it would be better if the front ends would\n-\t explicitly declare them.  */\n-      if (!DECL_SEEN_IN_BIND_EXPR_P (decl)\n-\t  && DECL_ARTIFICIAL (decl) && DECL_NAME (decl) == NULL_TREE)\n-\tgimple_add_tmp_var (decl);\n     }\n \n   return GS_ALL_DONE;"}]}