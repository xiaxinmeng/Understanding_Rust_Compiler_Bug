{"sha": "3743d5bde63e99c32d5cdc930485b279d111bca2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc0M2Q1YmRlNjNlOTljMzJkNWNkYzkzMDQ4NWIyNzlkMTExYmNhMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-05-06T08:11:41Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-05-06T08:11:41Z"}, "message": "[multiple changes]\n\n2009-05-06  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_aggr.adb (Resolve_Record_Aggregate): In step 5, get the\n\tUnderlying_Type before retrieving the type definition for gathering\n\tcomponents, to account for the case where the type is private.\n\n2009-05-06  Tristan Gingold  <gingold@adacore.com>\n\n\t* g-comlin.ads: Fix minor typos (Getopt instead of Get_Opt).\n\n2009-05-06  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-socthi-vms.adb, g-socthi-vms.ads, g-socthi-vxworks.adb,\n\tg-socthi-vxworks.ads, g-socthi-mingw.adb g-socthi-mingw.ads,\n\tg-socthi.adb, g-stsifd-sockets.adb, g-socthi.ads, g-socket.adb\n\t(GNAT.Sockets.Thin.C_Sendmsg, GNAT.Sockets.Thin.C_Recvmsg,\n\tWindows versions): Fix incorrect base\n\taddress of Iovec (it's Msg_Iov, not Msg_Iov'Address).\n\t(GNAT.Sockets.Thin.C_Sendto, GNAT.Sockets.Thin.C_Recvfrom): Use a\n\tSystem.Address for the To parameter instead of a Sockaddr_In_Access, to\n\tachieve independance from AF_INET family, and also to allow this\n\tparameter to be retrieved from a Msghdr for the Windows case where\n\tthese routines are used to implement C_Sendmsg and C_Recvmsg.\n\n2009-05-06  Bob Duff  <duff@adacore.com>\n\n\t* g-expect.adb, g-expect.ads: Minor reformatting\n\n\t* sdefault.ads: Minor comment fix\n\n\t* g-expect-vms.adb: Minor reformatting\n\n\t* table.ads, table.adb (Append_All): New convenience procedure for\n\tappending a whole array.\n\n\t* comperr.adb (Compiler_Abort): Mention the -gnatd.n switch in the bug\n\tbox message. Call Osint.Dump_Source_File_Names to print out the file\n\tlist, instead of rummaging around in various data structures.\n\n\t* debug.adb: New switch -gnatd.n, to print source file names as they\n\tare read.\n\n\t* alloc.ads: Add parameters for Osint.File_Name_Chars.\n\n\t* osint.ads, osint.adb (Dump_Source_File_Names): New procedure to print\n\tout source file names during a \"bug box\".\n\t(Include_Dir_Default_Prefix): Use memo-izing to avoid repeated new/free.\n\t(Read_Source_File): Print out the file name, if requested via -gnatd.n.\n\tIf it's not part of the runtimes, store it for later printing by\n\tDump_Source_File_Names.\n\n2009-05-06  Javier Miranda  <miranda@adacore.com>\n\n\t* gnat_rm.texi (CPP_Constructor): Avoid duplication of the\n\tdocumentation and add reference to the GNAT user guide for further\n\tdetails.\n\n2009-05-06  Javier Miranda  <miranda@adacore.com>\n\n\t* gnat_ugn.texi: Complete documentation for CPP_Constructor and remove\n\talso wrong examples that use extension aggregates.\n\n2009-05-06  Albert Lee  <lee@adacore.com>\n\n\t* s-oscons-tmplt.c (System.OS_Constants): Do not use special definition\n\tof Msg_Iovlen_T for VMS.\n\nFrom-SVN: r147148", "tree": {"sha": "7b40ce34cdf446910efb8a5c3d278df8429b4f5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b40ce34cdf446910efb8a5c3d278df8429b4f5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3743d5bde63e99c32d5cdc930485b279d111bca2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3743d5bde63e99c32d5cdc930485b279d111bca2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3743d5bde63e99c32d5cdc930485b279d111bca2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3743d5bde63e99c32d5cdc930485b279d111bca2/comments", "author": null, "committer": null, "parents": [{"sha": "95914172e642de9a1b1d28a007b41042863d0902", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95914172e642de9a1b1d28a007b41042863d0902", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95914172e642de9a1b1d28a007b41042863d0902"}], "stats": {"total": 463, "additions": 288, "deletions": 175}, "files": [{"sha": "eeedef345c677606324ab12f76d21c8b990034c1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -1,3 +1,70 @@\n+2009-05-06  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_aggr.adb (Resolve_Record_Aggregate): In step 5, get the\n+\tUnderlying_Type before retrieving the type definition for gathering\n+\tcomponents, to account for the case where the type is private.\n+\n+2009-05-06  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* g-comlin.ads: Fix minor typos (Getopt instead of Get_Opt).\n+\n+2009-05-06  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-socthi-vms.adb, g-socthi-vms.ads, g-socthi-vxworks.adb,\n+\tg-socthi-vxworks.ads, g-socthi-mingw.adb g-socthi-mingw.ads,\n+\tg-socthi.adb, g-stsifd-sockets.adb, g-socthi.ads, g-socket.adb\n+\t(GNAT.Sockets.Thin.C_Sendmsg, GNAT.Sockets.Thin.C_Recvmsg,\n+\tWindows versions): Fix incorrect base\n+\taddress of Iovec (it's Msg_Iov, not Msg_Iov'Address).\n+\t(GNAT.Sockets.Thin.C_Sendto, GNAT.Sockets.Thin.C_Recvfrom): Use a\n+\tSystem.Address for the To parameter instead of a Sockaddr_In_Access, to\n+\tachieve independance from AF_INET family, and also to allow this\n+\tparameter to be retrieved from a Msghdr for the Windows case where\n+\tthese routines are used to implement C_Sendmsg and C_Recvmsg.\n+\n+2009-05-06  Bob Duff  <duff@adacore.com>\n+\n+\t* g-expect.adb, g-expect.ads: Minor reformatting\n+\n+\t* sdefault.ads: Minor comment fix\n+\n+\t* g-expect-vms.adb: Minor reformatting\n+\n+\t* table.ads, table.adb (Append_All): New convenience procedure for\n+\tappending a whole array.\n+\n+\t* comperr.adb (Compiler_Abort): Mention the -gnatd.n switch in the bug\n+\tbox message. Call Osint.Dump_Source_File_Names to print out the file\n+\tlist, instead of rummaging around in various data structures.\n+\n+\t* debug.adb: New switch -gnatd.n, to print source file names as they\n+\tare read.\n+\n+\t* alloc.ads: Add parameters for Osint.File_Name_Chars.\n+\n+\t* osint.ads, osint.adb (Dump_Source_File_Names): New procedure to print\n+\tout source file names during a \"bug box\".\n+\t(Include_Dir_Default_Prefix): Use memo-izing to avoid repeated new/free.\n+\t(Read_Source_File): Print out the file name, if requested via -gnatd.n.\n+\tIf it's not part of the runtimes, store it for later printing by\n+\tDump_Source_File_Names.\n+\n+2009-05-06  Javier Miranda  <miranda@adacore.com>\n+\n+\t* gnat_rm.texi (CPP_Constructor): Avoid duplication of the\n+\tdocumentation and add reference to the GNAT user guide for further\n+\tdetails.\n+\n+2009-05-06  Javier Miranda  <miranda@adacore.com>\n+\n+\t* gnat_ugn.texi: Complete documentation for CPP_Constructor and remove\n+\talso wrong examples that use extension aggregates.\n+\n+2009-05-06  Albert Lee  <lee@adacore.com>\n+\n+\t* s-oscons-tmplt.c (System.OS_Constants): Do not use special definition\n+\tof Msg_Iovlen_T for VMS.\n+\n 2009-05-04   Laurent GUERBY  <laurent@guerby.net>\n \n \tPR ada/38874"}, {"sha": "fa6c9d123f51ce15004d0bbfa8c1803697b038ee", "filename": "gcc/ada/alloc.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Falloc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Falloc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Falloc.ads?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -61,6 +61,9 @@ package Alloc is\n    Elmts_Initial                    : constant := 1_200;   -- Elists\n    Elmts_Increment                  : constant := 100;\n \n+   File_Name_Chars_Initial          : constant := 10_000;  -- Osint\n+   File_Name_Chars_Increment        : constant := 100;\n+\n    Inlined_Bodies_Initial           : constant := 50;      -- Inline\n    Inlined_Bodies_Increment         : constant := 200;\n "}, {"sha": "43680b1b4bbb6fe598fbb6b0633dc136ba711edf", "filename": "gcc/ada/comperr.adb", "status": "modified", "additions": 10, "deletions": 19, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fcomperr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fcomperr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcomperr.adb?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,9 +30,7 @@\n with Atree;    use Atree;\n with Debug;    use Debug;\n with Errout;   use Errout;\n-with Fname;    use Fname;\n with Gnatvsn;  use Gnatvsn;\n-with Lib;      use Lib;\n with Namet;    use Namet;\n with Osint;    use Osint;\n with Output;   use Output;\n@@ -395,26 +393,19 @@ package body Comperr is\n          Write_Line (\"Note that list may not be accurate in some cases, \");\n          Write_Line (\"so please double check that the problem can still \");\n          Write_Line (\"be reproduced with the set of files listed.\");\n+         Write_Line (\"Consider also -gnatd.n switch (see debug.adb).\");\n          Write_Eol;\n \n-         for U in Main_Unit .. Last_Unit loop\n-            begin\n-               if not Is_Internal_File_Name\n-                        (File_Name (Source_Index (U)))\n-               then\n-                  Write_Name (Full_File_Name (Source_Index (U)));\n-                  Write_Eol;\n-               end if;\n+         begin\n+            Dump_Source_File_Names;\n \n-            --  No point in double bug box if we blow up trying to print\n-            --  the list of file names! Output informative msg and quit.\n+         --  If we blow up trying to print the list of file names, just output\n+         --  informative msg and continue.\n \n-            exception\n-               when others =>\n-                  Write_Str (\"list may be incomplete\");\n-                  exit;\n-            end;\n-         end loop;\n+         exception\n+            when others =>\n+               Write_Str (\"list may be incomplete\");\n+         end;\n \n          Write_Eol;\n          Set_Standard_Output;"}, {"sha": "d0b285abf342a0762836af897bae167707f02c24", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -104,7 +104,7 @@ package body Debug is\n    --  d.k\n    --  d.l  Use Ada 95 semantics for limited function returns\n    --  d.m  For -gnatl, print full source only for main unit\n-   --  d.n\n+   --  d.n  Print source file names\n    --  d.o\n    --  d.p\n    --  d.q\n@@ -523,6 +523,10 @@ package body Debug is\n    --       main source (this corresponds to a previous behavior of -gnatl and\n    --       is used for running the ACATS tests).\n \n+   --  d.n  Print source file names as they are loaded. This is useful if the\n+   --       compiler has a bug -- these are the files that need to be included\n+   --       in a bug report.\n+\n    --  d.r  Forces the flag OK_To_Reorder_Components to be set in all record\n    --       base types that have no discriminants.\n "}, {"sha": "526624244ebb9988975e72f55df91d26538df09e", "filename": "gcc/ada/g-comlin.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-comlin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-comlin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.ads?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2008, AdaCore                     --\n+--                     Copyright (C) 1999-2009, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -96,13 +96,13 @@\n --     Goto_Section (\"bargs\");\n --     loop\n --        --  Same loop as above to get switches and arguments\n---        --  The supported switches in Get_Opt might be different\n+--        --  The supported switches in Getopt might be different\n --     end loop;\n \n --     Goto_Section (\"cargs\");\n --     loop\n --        --  Same loop as above to get switches and arguments\n---        --  The supported switches in Get_Opt might be different\n+--        --  The supported switches in Getopt might be different\n --     end loop;\n --  end;\n \n@@ -125,7 +125,7 @@\n --        GNAT.OS_Lib.Argument_String_To_List (\"-g -O1 -Ipath\");\n --  begin\n --     Initialize_Option_Scan (Parser, Args);\n---     while Get_Opt (\"* g O! I=\", Parser) /= ASCII.NUL loop\n+--     while Getopt (\"* g O! I=\", Parser) /= ASCII.NUL loop\n --        Put_Line (\"Switch \" & Full_Switch (Parser)\n --                  & \" param=\" & Parameter (Parser));\n --     end loop;"}, {"sha": "1162f50aa69ccc8366f9700f4d795c86fd89260f", "filename": "gcc/ada/g-expect-vms.adb", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-expect-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-expect-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-expect-vms.adb?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2002-2008, AdaCore                     --\n+--                     Copyright (C) 2002-2009, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -249,7 +249,7 @@ package body GNAT.Expect is\n      (Descriptor  : in out Process_Descriptor;\n       Result      : out Expect_Match;\n       Regexp      : String;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False)\n    is\n    begin\n@@ -265,7 +265,7 @@ package body GNAT.Expect is\n       Result      : out Expect_Match;\n       Regexp      : String;\n       Matched     : out GNAT.Regpat.Match_Array;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False)\n    is\n    begin\n@@ -284,7 +284,7 @@ package body GNAT.Expect is\n      (Descriptor  : in out Process_Descriptor;\n       Result      : out Expect_Match;\n       Regexp      : GNAT.Regpat.Pattern_Matcher;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False)\n    is\n       Matched : GNAT.Regpat.Match_Array (0 .. 0);\n@@ -298,7 +298,7 @@ package body GNAT.Expect is\n       Result      : out Expect_Match;\n       Regexp      : GNAT.Regpat.Pattern_Matcher;\n       Matched     : out GNAT.Regpat.Match_Array;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False)\n    is\n       N           : Expect_Match;\n@@ -370,7 +370,7 @@ package body GNAT.Expect is\n      (Descriptor  : in out Process_Descriptor;\n       Result      : out Expect_Match;\n       Regexps     : Regexp_Array;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False)\n    is\n       Patterns : Compiled_Regexp_Array (Regexps'Range);\n@@ -392,7 +392,7 @@ package body GNAT.Expect is\n      (Descriptor  : in out Process_Descriptor;\n       Result      : out Expect_Match;\n       Regexps     : Compiled_Regexp_Array;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False)\n    is\n       Matched : GNAT.Regpat.Match_Array (0 .. 0);\n@@ -404,7 +404,7 @@ package body GNAT.Expect is\n    procedure Expect\n      (Result      : out Expect_Match;\n       Regexps     : Multiprocess_Regexp_Array;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False)\n    is\n       Matched : GNAT.Regpat.Match_Array (0 .. 0);\n@@ -418,7 +418,7 @@ package body GNAT.Expect is\n       Result      : out Expect_Match;\n       Regexps     : Regexp_Array;\n       Matched     : out GNAT.Regpat.Match_Array;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False)\n    is\n       Patterns : Compiled_Regexp_Array (Regexps'Range);\n@@ -442,7 +442,7 @@ package body GNAT.Expect is\n       Result      : out Expect_Match;\n       Regexps     : Compiled_Regexp_Array;\n       Matched     : out GNAT.Regpat.Match_Array;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False)\n    is\n       N           : Expect_Match;\n@@ -489,7 +489,7 @@ package body GNAT.Expect is\n      (Result      : out Expect_Match;\n       Regexps     : Multiprocess_Regexp_Array;\n       Matched     : out GNAT.Regpat.Match_Array;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False)\n    is\n       N           : Expect_Match;\n@@ -646,7 +646,7 @@ package body GNAT.Expect is\n                            else\n                               --  Add what we read to the buffer\n \n-                              if Descriptors (J).Buffer_Index + N - 1 >\n+                              if Descriptors (J).Buffer_Index + N >\n                                 Descriptors (J).Buffer_Size\n                               then\n                                  --  If the user wants to know when we have"}, {"sha": "7ce2c89d771f0fb0dbf2753af7fdb6fa9643d22f", "filename": "gcc/ada/g-expect.adb", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-expect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-expect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-expect.adb?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -261,7 +261,7 @@ package body GNAT.Expect is\n      (Descriptor  : in out Process_Descriptor;\n       Result      : out Expect_Match;\n       Regexp      : String;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False)\n    is\n    begin\n@@ -277,7 +277,7 @@ package body GNAT.Expect is\n       Result      : out Expect_Match;\n       Regexp      : String;\n       Matched     : out GNAT.Regpat.Match_Array;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False)\n    is\n    begin\n@@ -296,7 +296,7 @@ package body GNAT.Expect is\n      (Descriptor  : in out Process_Descriptor;\n       Result      : out Expect_Match;\n       Regexp      : GNAT.Regpat.Pattern_Matcher;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False)\n    is\n       Matched : GNAT.Regpat.Match_Array (0 .. 0);\n@@ -310,7 +310,7 @@ package body GNAT.Expect is\n       Result      : out Expect_Match;\n       Regexp      : GNAT.Regpat.Pattern_Matcher;\n       Matched     : out GNAT.Regpat.Match_Array;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False)\n    is\n       N           : Expect_Match;\n@@ -382,7 +382,7 @@ package body GNAT.Expect is\n      (Descriptor  : in out Process_Descriptor;\n       Result      : out Expect_Match;\n       Regexps     : Regexp_Array;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False)\n    is\n       Patterns : Compiled_Regexp_Array (Regexps'Range);\n@@ -406,7 +406,7 @@ package body GNAT.Expect is\n      (Descriptor  : in out Process_Descriptor;\n       Result      : out Expect_Match;\n       Regexps     : Compiled_Regexp_Array;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False)\n    is\n       Matched : GNAT.Regpat.Match_Array (0 .. 0);\n@@ -418,7 +418,7 @@ package body GNAT.Expect is\n    procedure Expect\n      (Result      : out Expect_Match;\n       Regexps     : Multiprocess_Regexp_Array;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False)\n    is\n       Matched : GNAT.Regpat.Match_Array (0 .. 0);\n@@ -432,7 +432,7 @@ package body GNAT.Expect is\n       Result      : out Expect_Match;\n       Regexps     : Regexp_Array;\n       Matched     : out GNAT.Regpat.Match_Array;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False)\n    is\n       Patterns : Compiled_Regexp_Array (Regexps'Range);\n@@ -456,7 +456,7 @@ package body GNAT.Expect is\n       Result      : out Expect_Match;\n       Regexps     : Compiled_Regexp_Array;\n       Matched     : out GNAT.Regpat.Match_Array;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False)\n    is\n       N           : Expect_Match;\n@@ -503,7 +503,7 @@ package body GNAT.Expect is\n      (Result      : out Expect_Match;\n       Regexps     : Multiprocess_Regexp_Array;\n       Matched     : out GNAT.Regpat.Match_Array;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False)\n    is\n       N           : Expect_Match;"}, {"sha": "1e50852522a2bc0342029f647d4649ce1bcb9053", "filename": "gcc/ada/g-expect.ads", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-expect.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-expect.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-expect.ads?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -51,7 +51,7 @@\n --      Non_Blocking_Spawn\n --         (Fd, \"ftp\",\n --           (1 => new String' (\"machine@domain\")));\n---      Timeout := 10000;  --  10 seconds\n+--      Timeout := 10_000;  --  10 seconds\n --      Expect (Fd, Result, Regexp_Array'(+\"\\(user\\)\", +\"\\(passwd\\)\"),\n --              Timeout);\n --      case Result is\n@@ -328,7 +328,7 @@ package GNAT.Expect is\n      (Descriptor  : in out Process_Descriptor;\n       Result      : out Expect_Match;\n       Regexp      : String;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False);\n    --  Wait till a string matching Fd can be read from Fd, and return 1\n    --  if a match was found.\n@@ -359,7 +359,7 @@ package GNAT.Expect is\n      (Descriptor  : in out Process_Descriptor;\n       Result      : out Expect_Match;\n       Regexp      : GNAT.Regpat.Pattern_Matcher;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False);\n    --  Same as the previous one, but with a precompiled regular expression.\n    --  This is more efficient however, especially if you are using this\n@@ -371,7 +371,7 @@ package GNAT.Expect is\n       Result      : out Expect_Match;\n       Regexp      : String;\n       Matched     : out GNAT.Regpat.Match_Array;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False);\n    --  Same as above, but it is now possible to get the indexes of the\n    --  substrings for the parentheses in the regexp (see the example at the\n@@ -391,7 +391,7 @@ package GNAT.Expect is\n       Result      : out Expect_Match;\n       Regexp      : GNAT.Regpat.Pattern_Matcher;\n       Matched     : out GNAT.Regpat.Match_Array;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False);\n    --  Same as above, but with a precompiled regular expression\n \n@@ -416,7 +416,7 @@ package GNAT.Expect is\n      (Descriptor  : in out Process_Descriptor;\n       Result      : out Expect_Match;\n       Regexps     : Regexp_Array;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False);\n    --  Wait till a string matching one of the regular expressions in Regexps\n    --  is found. This function returns the index of the regexp that matched.\n@@ -427,7 +427,7 @@ package GNAT.Expect is\n      (Descriptor  : in out Process_Descriptor;\n       Result      : out Expect_Match;\n       Regexps     : Compiled_Regexp_Array;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False);\n    --  Same as the previous one, but with precompiled regular expressions.\n    --  This can be much faster if you are using them multiple times.\n@@ -437,7 +437,7 @@ package GNAT.Expect is\n       Result      : out Expect_Match;\n       Regexps     : Regexp_Array;\n       Matched     : out GNAT.Regpat.Match_Array;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False);\n    --  Same as above, except that you can also access the parenthesis\n    --  groups inside the matching regular expression.\n@@ -451,7 +451,7 @@ package GNAT.Expect is\n       Result      : out Expect_Match;\n       Regexps     : Compiled_Regexp_Array;\n       Matched     : out GNAT.Regpat.Match_Array;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False);\n    --  Same as above, but with precompiled regular expressions.\n    --  The first index in Matched must be 0, or Constraint_Error will be\n@@ -472,14 +472,14 @@ package GNAT.Expect is\n      (Result      : out Expect_Match;\n       Regexps     : Multiprocess_Regexp_Array;\n       Matched     : out GNAT.Regpat.Match_Array;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False);\n    --  Same as above, but for multi processes\n \n    procedure Expect\n      (Result      : out Expect_Match;\n       Regexps     : Multiprocess_Regexp_Array;\n-      Timeout     : Integer := 10000;\n+      Timeout     : Integer := 10_000;\n       Full_Buffer : Boolean := False);\n    --  Same as the previous one, but for multiple processes.\n    --  This procedure finds the first regexp that match the associated process."}, {"sha": "9cd471afd549600e4085e8438c0b58bafb917403", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -1644,7 +1644,7 @@ package body GNAT.Sockets is\n            Item'Address,\n            Item'Length,\n            To_Int (Flags),\n-           Sin'Unchecked_Access,\n+           Sin'Address,\n            Len'Access);\n \n       if Res = Failure then\n@@ -1861,7 +1861,7 @@ package body GNAT.Sockets is\n       Res  : C.int;\n \n       Sin  : aliased Sockaddr_In;\n-      C_To : Sockaddr_In_Access;\n+      C_To : System.Address;\n       Len  : C.int;\n \n    begin\n@@ -1871,11 +1871,11 @@ package body GNAT.Sockets is\n          Set_Port\n            (Sin'Unchecked_Access,\n             Short_To_Network (C.unsigned_short (To.Port)));\n-         C_To := Sin'Unchecked_Access;\n+         C_To := Sin'Address;\n          Len := Sin'Size / 8;\n \n       else\n-         C_To := null;\n+         C_To := System.Null_Address;\n          Len := 0;\n       end if;\n "}, {"sha": "093731ce40d603e6e856e794c47e41311c0159cf", "filename": "gcc/ada/g-socthi-mingw.adb", "status": "modified", "additions": 17, "deletions": 21, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-socthi-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-socthi-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.adb?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -263,24 +263,20 @@ package body GNAT.Sockets.Thin is\n       for MH'Address use Msg;\n \n       Iovec : array (0 .. MH.Msg_Iovlen - 1) of Vector_Element;\n-      for Iovec'Address use MH.Msg_Iov'Address;\n+      for Iovec'Address use MH.Msg_Iov;\n       pragma Import (Ada, Iovec);\n \n-      pragma Unreferenced (Flags);\n-\n    begin\n-      --  Windows does not provide an implementation of recvmsg().  The\n-      --  spec for WSARecvMsg() is incompatible with the data types we\n-      --  define, and is not available in all versions of Windows.  So,\n-      --  we'll use C_Recv instead.  Note that this means the Flags\n-      --  argument is ignored.\n+      --  Windows does not provide an implementation of recvmsg(). The spec for\n+      --  WSARecvMsg() is incompatible with the data types we define, and is\n+      --  not available in all versions of Windows. So, we use C_Recv instead.\n \n       for J in Iovec'Range loop\n          Res := C_Recv\n            (S,\n             Iovec (J).Base.all'Address,\n             C.int (Iovec (J).Length),\n-            0);\n+            Flags);\n \n          if Res < 0 then\n             return ssize_t (Res);\n@@ -359,7 +355,10 @@ package body GNAT.Sockets.Thin is\n                --  Check out-of-band data\n \n                Length := C_Recvfrom\n-                 (S, Buffer'Address, 1, Flag, null, Fromlen'Unchecked_Access);\n+                 (S, Buffer'Address, 1, Flag,\n+                  From    => System.Null_Address,\n+                  Fromlen => Fromlen'Unchecked_Access);\n+               --  Is Fromlen necessary if From is Null_Address???\n \n                --  If the signal is not an out-of-band data, then it\n                --  is a connection failure notification.\n@@ -399,26 +398,23 @@ package body GNAT.Sockets.Thin is\n       for MH'Address use Msg;\n \n       Iovec : array (0 .. MH.Msg_Iovlen - 1) of Vector_Element;\n-      for Iovec'Address use MH.Msg_Iov'Address;\n+      for Iovec'Address use MH.Msg_Iov;\n       pragma Import (Ada, Iovec);\n \n-      pragma Unreferenced (Flags);\n-\n    begin\n-      --  Windows does not provide an implementation of sendmsg().  The\n-      --  spec for WSASendMsg() is incompatible with the data types we\n-      --  define, and is not available in all versions of Windows.  So,\n-      --  we'll use C_Sendto instead.  Note that this means the Flags\n-      --  argument is ignored.\n+      --  Windows does not provide an implementation of sendmsg(). The spec for\n+      --  WSASendMsg() is incompatible with the data types we define, and is\n+      --  not available in all versions of Windows. So, we'll use C_Sendto\n+      --  instead.\n \n       for J in Iovec'Range loop\n          Res := C_Sendto\n            (S,\n             Iovec (J).Base.all'Address,\n             C.int (Iovec (J).Length),\n-            Flags => 0,\n-            To    => null,\n-            Tolen => 0);\n+            Flags => Flags,\n+            To    => MH.Msg_Name,\n+            Tolen => C.int (MH.Msg_Namelen));\n \n          if Res < 0 then\n             return ssize_t (Res);"}, {"sha": "922e64aa22f1a26ba4e5c85020d5b379cc8adc62", "filename": "gcc/ada/g-socthi-mingw.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-socthi-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-socthi-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.ads?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -140,7 +140,7 @@ package GNAT.Sockets.Thin is\n       Msg     : System.Address;\n       Len     : C.int;\n       Flags   : C.int;\n-      From    : Sockaddr_In_Access;\n+      From    : System.Address;\n       Fromlen : not null access C.int) return C.int;\n \n    function C_Recvmsg\n@@ -165,7 +165,7 @@ package GNAT.Sockets.Thin is\n       Msg   : System.Address;\n       Len   : C.int;\n       Flags : C.int;\n-      To    : Sockaddr_In_Access;\n+      To    : System.Address;\n       Tolen : C.int) return C.int;\n \n    function C_Setsockopt"}, {"sha": "696a298004c5fabdcac0986f36b338448a1763f8", "filename": "gcc/ada/g-socthi-vms.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-socthi-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-socthi-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vms.adb?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -87,7 +87,7 @@ package body GNAT.Sockets.Thin is\n       Msg     : System.Address;\n       Len     : C.int;\n       Flags   : C.int;\n-      From    : Sockaddr_In_Access;\n+      From    : System.Address;\n       Fromlen : not null access C.int) return C.int;\n    pragma Import (C, Syscall_Recvfrom, \"recvfrom\");\n \n@@ -108,7 +108,7 @@ package body GNAT.Sockets.Thin is\n       Msg   : System.Address;\n       Len   : C.int;\n       Flags : C.int;\n-      To    : Sockaddr_In_Access;\n+      To    : System.Address;\n       Tolen : C.int) return C.int;\n    pragma Import (C, Syscall_Sendto, \"sendto\");\n \n@@ -271,7 +271,7 @@ package body GNAT.Sockets.Thin is\n       Msg     : System.Address;\n       Len     : C.int;\n       Flags   : C.int;\n-      From    : Sockaddr_In_Access;\n+      From    : System.Address;\n       Fromlen : not null access C.int) return C.int\n    is\n       Res : C.int;\n@@ -346,7 +346,7 @@ package body GNAT.Sockets.Thin is\n       Msg   : System.Address;\n       Len   : C.int;\n       Flags : C.int;\n-      To    : Sockaddr_In_Access;\n+      To    : System.Address;\n       Tolen : C.int) return C.int\n    is\n       Res : C.int;"}, {"sha": "3799da802d294b0cb4d95033ab4d12f211a86d5f", "filename": "gcc/ada/g-socthi-vms.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-socthi-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-socthi-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vms.ads?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -143,7 +143,7 @@ package GNAT.Sockets.Thin is\n       Msg     : System.Address;\n       Len     : C.int;\n       Flags   : C.int;\n-      From    : Sockaddr_In_Access;\n+      From    : System.Address;\n       Fromlen : not null access C.int) return C.int;\n \n    function C_Recvmsg\n@@ -168,7 +168,7 @@ package GNAT.Sockets.Thin is\n       Msg   : System.Address;\n       Len   : C.int;\n       Flags : C.int;\n-      To    : Sockaddr_In_Access;\n+      To    : System.Address;\n       Tolen : C.int) return C.int;\n \n    function C_Setsockopt"}, {"sha": "a35e429fbb209d06850a6b6b5c47c624f847659d", "filename": "gcc/ada/g-socthi-vxworks.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-socthi-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-socthi-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vxworks.adb?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -98,7 +98,7 @@ package body GNAT.Sockets.Thin is\n       Msg     : System.Address;\n       Len     : C.int;\n       Flags   : C.int;\n-      From    : Sockaddr_In_Access;\n+      From    : System.Address;\n       Fromlen : not null access C.int) return C.int;\n    pragma Import (C, Syscall_Recvfrom, \"recvfrom\");\n \n@@ -119,7 +119,7 @@ package body GNAT.Sockets.Thin is\n       Msg   : System.Address;\n       Len   : C.int;\n       Flags : C.int;\n-      To    : Sockaddr_In_Access;\n+      To    : System.Address;\n       Tolen : C.int) return C.int;\n    pragma Import (C, Syscall_Sendto, \"sendto\");\n \n@@ -285,7 +285,7 @@ package body GNAT.Sockets.Thin is\n       Msg     : System.Address;\n       Len     : C.int;\n       Flags   : C.int;\n-      From    : Sockaddr_In_Access;\n+      From    : System.Address;\n       Fromlen : not null access C.int) return C.int\n    is\n       Res : C.int;\n@@ -360,7 +360,7 @@ package body GNAT.Sockets.Thin is\n       Msg   : System.Address;\n       Len   : C.int;\n       Flags : C.int;\n-      To    : Sockaddr_In_Access;\n+      To    : System.Address;\n       Tolen : C.int) return C.int\n    is\n       Res : C.int;"}, {"sha": "14b8ad92428eae2dac6b5db8ada0886e409145f4", "filename": "gcc/ada/g-socthi-vxworks.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-socthi-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-socthi-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vxworks.ads?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -141,7 +141,7 @@ package GNAT.Sockets.Thin is\n       Msg     : System.Address;\n       Len     : C.int;\n       Flags   : C.int;\n-      From    : Sockaddr_In_Access;\n+      From    : System.Address;\n       Fromlen : not null access C.int) return C.int;\n \n    function C_Recvmsg\n@@ -166,7 +166,7 @@ package GNAT.Sockets.Thin is\n       Msg   : System.Address;\n       Len   : C.int;\n       Flags : C.int;\n-      To    : Sockaddr_In_Access;\n+      To    : System.Address;\n       Tolen : C.int) return C.int;\n \n    function C_Setsockopt"}, {"sha": "0ffee86af49cdad8d66f089aad4747585b54c775", "filename": "gcc/ada/g-socthi.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-socthi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-socthi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi.adb?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -94,7 +94,7 @@ package body GNAT.Sockets.Thin is\n       Msg     : System.Address;\n       Len     : C.int;\n       Flags   : C.int;\n-      From    : Sockaddr_In_Access;\n+      From    : System.Address;\n       Fromlen : not null access C.int) return C.int;\n    pragma Import (C, Syscall_Recvfrom, \"recvfrom\");\n \n@@ -115,7 +115,7 @@ package body GNAT.Sockets.Thin is\n       Msg   : System.Address;\n       Len   : C.int;\n       Flags : C.int;\n-      To    : Sockaddr_In_Access;\n+      To    : System.Address;\n       Tolen : C.int) return C.int;\n    pragma Import (C, Syscall_Sendto, \"sendto\");\n \n@@ -290,7 +290,7 @@ package body GNAT.Sockets.Thin is\n       Msg     : System.Address;\n       Len     : C.int;\n       Flags   : C.int;\n-      From    : Sockaddr_In_Access;\n+      From    : System.Address;\n       Fromlen : not null access C.int) return C.int\n    is\n       Res : C.int;\n@@ -365,7 +365,7 @@ package body GNAT.Sockets.Thin is\n       Msg   : System.Address;\n       Len   : C.int;\n       Flags : C.int;\n-      To    : Sockaddr_In_Access;\n+      To    : System.Address;\n       Tolen : C.int) return C.int\n    is\n       Res : C.int;"}, {"sha": "cb19050250b7f7fc423ec4f510d3656e83b3765c", "filename": "gcc/ada/g-socthi.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-socthi.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-socthi.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi.ads?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -142,7 +142,7 @@ package GNAT.Sockets.Thin is\n       Msg     : System.Address;\n       Len     : C.int;\n       Flags   : C.int;\n-      From    : Sockaddr_In_Access;\n+      From    : System.Address;\n       Fromlen : not null access C.int) return C.int;\n \n    function C_Recvmsg\n@@ -167,7 +167,7 @@ package GNAT.Sockets.Thin is\n       Msg   : System.Address;\n       Len   : C.int;\n       Flags : C.int;\n-      To    : Sockaddr_In_Access;\n+      To    : System.Address;\n       Tolen : C.int) return C.int;\n \n    function C_Setsockopt"}, {"sha": "3e3f45188203e66e46c06ea1884fe53314d15ea6", "filename": "gcc/ada/g-stsifd-sockets.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-stsifd-sockets.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fg-stsifd-sockets.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-stsifd-sockets.adb?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -229,8 +229,8 @@ package body Signalling_Fds is\n       return C_Sendto\n         (Wsig, Buf'Address, 1,\n          Flags => SOSC.MSG_Forced_Flags,\n-         To    => null,\n-         Tolen =>  0);\n+         To    => System.Null_Address,\n+         Tolen => 0);\n    end Write;\n \n end Signalling_Fds;"}, {"sha": "0f7bd74b0a0ed24bad3bb42a14eeac7b29358796", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 3, "deletions": 45, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -1502,7 +1502,7 @@ equality operators defined (such operations can be imported or declared\n as subprograms as required). Initialization is allowed only by constructor\n functions (see pragma @code{CPP_Constructor}). Such types are implicitly\n limited if not explicitly declared as limited or derived from a limited\n-type, and a warning is issued in that case.\n+type, and an error is issued in that case.\n \n Pragma @code{CPP_Class} is intended primarily for automatic generation\n using an automatic binding generator tool.\n@@ -1547,50 +1547,8 @@ where @var{T} is a tagged limited type imported from C++ with pragma\n \n The first form is the default constructor, used when an object of type\n @var{T} is created on the Ada side with no explicit constructor.  The\n-second form covers all the non-default constructors of the type.\n-Constructors (including the copy constructor, which is simply a special\n-case of the second form in which the one and only argument is of type\n-@var{T}), can only appear in the following contexts:\n-\n-@itemize @bullet\n-@item\n-On the right side of an initialization of an object of type @var{T}.\n-@item\n-On the right side of an initialization of a record component of type @var{T}.\n-@item\n-In an extension aggregate for an object of a type derived from @var{T}.\n-@item\n-In an Ada 2005 limited aggregate.\n-@item\n-In an Ada 2005 nested limited aggregate.\n-@item\n-In an Ada 2005 limited aggregate that initializes an object built in\n-place by an extended return statement.\n-@end itemize\n-\n-@noindent\n-Although the constructor is described as a function that returns a value\n-on the Ada side, it is typically a procedure with an extra implicit\n-argument (the object being initialized) at the implementation\n-level.  GNAT issues the appropriate call, whatever it is, to get the\n-object properly initialized.\n-\n-In the case of objects of derived types, in addition to the use of Ada\n-2005 limited aggregates and extended return statements, you may also\n-use one of the following two possible forms for declaring and creating\n-an object:\n-\n-@itemize @bullet\n-@item @code{New_Object : Derived_T}\n-@item @code{New_Object : Derived_T := (@var{constructor-call with} @dots{})}\n-@end itemize\n-\n-@noindent\n-In the first case the default constructor is called and extension fields\n-if any are initialized according to the default initialization\n-expressions in the Ada declaration.  In the second case, the given\n-constructor is called and the extension aggregate indicates the explicit\n-values of the extension fields.\n+second form covers all the non-default constructors of the type. See\n+the GNAT users guide for details.\n \n If no constructors are imported, it is impossible to create any objects\n on the Ada side and the type is implicitly declared abstract."}, {"sha": "78fee6ac095e09369eb4adc1083214ae90c33286", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 26, "deletions": 6, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -3291,8 +3291,29 @@ end Pkg_Root;\n \n On the Ada side the constructor is represented by a function (whose\n name is arbitrary) that returns the classwide type corresponding to\n-the imported C++ class.\n+the imported C++ class. Although the constructor is described as a\n+function, it is typically a procedure with an extra implicit argument\n+(the object being initialized) at the implementation level. GNAT\n+issues the appropriate call, whatever it is, to get the object\n+properly initialized.\n \n+Constructors can only appear in the following contexts:\n+\n+@itemize @bullet\n+@item\n+On the right side of an initialization of an object of type @var{T}.\n+@item\n+On the right side of an initialization of a record component of type @var{T}.\n+@item\n+In an Ada 2005 limited aggregate.\n+@item\n+In an Ada 2005 nested limited aggregate.\n+@item\n+In an Ada 2005 limited aggregate that initializes an object built in\n+place by an extended return statement.\n+@end itemize\n+\n+@noindent\n In a declaration of an object whose type is a class imported from C++,\n either the default C++ constructor is implicitly called by GNAT, or\n else the required C++ constructor must be explicitly called in the\n@@ -3324,12 +3345,11 @@ In this case the components DT inherited from the C++ side must be\n initialized by a C++ constructor, and the additional Ada components\n of type DT are initialized by GNAT. The initialization of such an\n object is done either by default, or by means of a function returning\n-an aggregate of type DT, or by means of an extended aggregate.\n+an aggregate of type DT.\n \n @smallexample @c ada\n   Obj5 : DT;\n   Obj6 : DT := Function_Returning_DT (50);\n-  Obj7 : DT := (Constructor (30,40) with (C_Value => 50));\n @end smallexample\n \n The declaration of @code{Obj5} invokes the default constructors: the\n@@ -3361,21 +3381,21 @@ non-default C++ constructors specified for the imported components.\n For example:\n \n @smallexample @c ada\n-  Obj8 : Rec2 (40);\n+  Obj7 : Rec2 (40);\n @end smallexample\n \n Using Ada 2005 we can use limited aggregates to initialize an object\n invoking C++ constructors that differ from those specified in the type\n declarations. For example:\n \n @smallexample @c ada\n-  Obj9 : Rec2 := (Rec => (Data1 => Constructor (15, 16),\n+  Obj8 : Rec2 := (Rec => (Data1 => Constructor (15, 16),\n                           others => <>),\n                   others => <>);\n @end smallexample\n \n The above declaration uses an Ada 2005 limited aggregate to\n-initialize @code{Obj9}, and the C++ constructor that has two integer\n+initialize @code{Obj8}, and the C++ constructor that has two integer\n arguments is invoked to initialize the @code{Data1} component instead\n of the constructor specified in the declaration of type @code{Rec1}. In\n Ada 2005 the box in the aggregate indicates that unspecified components"}, {"sha": "00d0eb88d71f1be3620c109cc81b7ee9aa308e5a", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 64, "deletions": 15, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,6 +29,8 @@ with System.Case_Util; use System.Case_Util;\n \n with GNAT.HTable;\n \n+with Alloc;\n+with Debug;\n with Fmap;             use Fmap;\n with Gnatvsn;          use Gnatvsn;\n with Hostparm;\n@@ -111,6 +113,9 @@ package body Osint is\n    --  Converts a C String to an Ada String. Are we doing this to avoid withing\n    --  Interfaces.C.Strings ???\n \n+   function Include_Dir_Default_Prefix return String_Access;\n+   --  Same as exported version, except returns a String_Access\n+\n    ------------------------------\n    -- Other Local Declarations --\n    ------------------------------\n@@ -137,6 +142,20 @@ package body Osint is\n    --  latest source, library and object files opened by Read_Source_File and\n    --  Read_Library_Info.\n \n+   package File_Name_Chars is new Table.Table (\n+     Table_Component_Type => Character,\n+     Table_Index_Type     => Int,\n+     Table_Low_Bound      => 1,\n+     Table_Initial        => Alloc.File_Name_Chars_Initial,\n+     Table_Increment      => Alloc.File_Name_Chars_Increment,\n+     Table_Name           => \"File_Name_Chars\");\n+   --  Table to store text to be printed by Dump_Source_File_Names\n+\n+   The_Include_Dir_Default_Prefix : String_Access := null;\n+   --  Value returned by Include_Dir_Default_Prefix. We don't initialize it\n+   --  here, because that causes an elaboration cycle with Sdefault; we\n+   --  initialize it lazily instead.\n+\n    ------------------\n    -- Search Paths --\n    ------------------\n@@ -717,6 +736,16 @@ package body Osint is\n       end if;\n    end Dir_In_Src_Search_Path;\n \n+   ----------------------------\n+   -- Dump_Source_File_Names --\n+   ----------------------------\n+\n+   procedure Dump_Source_File_Names is\n+      subtype Rng is Int range File_Name_Chars.First .. File_Name_Chars.Last;\n+   begin\n+      Write_Str (String (File_Name_Chars.Table (Rng)));\n+   end Dump_Source_File_Names;\n+\n    ---------------------\n    -- Executable_Name --\n    ---------------------\n@@ -1392,22 +1421,19 @@ package body Osint is\n    -- Include_Dir_Default_Prefix --\n    --------------------------------\n \n-   function Include_Dir_Default_Prefix return String is\n-      Include_Dir : String_Access :=\n-                      String_Access (Update_Path (Include_Dir_Default_Name));\n-\n+   function Include_Dir_Default_Prefix return String_Access is\n    begin\n-      if Include_Dir = null then\n-         return \"\";\n-\n-      else\n-         declare\n-            Result : constant String := Include_Dir.all;\n-         begin\n-            Free (Include_Dir);\n-            return Result;\n-         end;\n+      if The_Include_Dir_Default_Prefix = null then\n+         The_Include_Dir_Default_Prefix :=\n+           String_Access (Update_Path (Include_Dir_Default_Name));\n       end if;\n+\n+      return The_Include_Dir_Default_Prefix;\n+   end Include_Dir_Default_Prefix;\n+\n+   function Include_Dir_Default_Prefix return String is\n+   begin\n+      return Include_Dir_Default_Prefix.all;\n    end Include_Dir_Default_Prefix;\n \n    ----------------\n@@ -2268,6 +2294,29 @@ package body Osint is\n          return;\n       end if;\n \n+      --  Print out the file name, if requested, and if it's not part of the\n+      --  runtimes, store it in File_Name_Chars.\n+\n+      declare\n+         Name : String renames Name_Buffer (1 .. Name_Len);\n+         Inc : String renames Include_Dir_Default_Prefix.all;\n+      begin\n+         if Debug.Debug_Flag_Dot_N then\n+            Write_Line (Name);\n+         end if;\n+\n+         if Inc /= \"\"\n+           and then Inc'Length < Name_Len\n+           and then Name_Buffer (1 .. Inc'Length) = Inc\n+         then\n+            null; -- Part of runtimes, so ignore it\n+\n+         else\n+            File_Name_Chars.Append_All (File_Name_Chars.Table_Type (Name));\n+            File_Name_Chars.Append (ASCII.LF);\n+         end if;\n+      end;\n+\n       --  Prepare to read data from the file\n \n       Len := Integer (File_Length (Source_File_FD));"}, {"sha": "5de8eced2ac607180f6cf80f7aec32635f742c8c", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -410,6 +410,12 @@ package Osint is\n    --  Cache => True access to source file data does not incur a penalty if\n    --  this data was previously retrieved.\n \n+   procedure Dump_Source_File_Names;\n+   --  Prints out the names of all source files that have been read by\n+   --  Read_Source_File, except those that come from the run-time library\n+   --  (i.e. Include_Dir_Default_Prefix). The text is sent to whatever Output\n+   --  is currently using (e.g. standard output or standard error).\n+\n    -------------------------------------------\n    -- Representation of Library Information --\n    -------------------------------------------"}, {"sha": "694fcf1b622ae0fbc070ea19913f761d258a3639", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -1184,7 +1184,7 @@ TXT(\"   subtype H_Length_T   is Interfaces.C.\" h_length_t \";\")\n    --  Fields of struct msghdr\n */\n \n-#if defined (__VMS) || defined (__sun__) || defined (__hpux__)\n+#if defined (__sun__) || defined (__hpux__)\n # define msg_iovlen_t \"int\"\n #else\n # define msg_iovlen_t \"size_t\""}, {"sha": "21745fbb674e768d21424e76ddfef44d62a1e0d5", "filename": "gcc/ada/sdefault.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fsdefault.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fsdefault.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsdefault.ads?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -25,7 +25,8 @@\n \n --  This package contains functions that return the default values for the\n --  include and object file directories, target name, default library\n---  subdirectory (libsubdir) prefix, and the target OS.\n+--  subdirectory (libsubdir) prefix, and the target OS. The body is generated\n+--  automatically by the build process.\n \n with Types; use Types;\n "}, {"sha": "d50942b024af74f6c480e3ac7936d644932c030f", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -3156,7 +3156,11 @@ package body Sem_Aggr is\n             end loop;\n \n          else\n-            Record_Def := Type_Definition (Parent (Base_Type (Typ)));\n+            --  We take the underlying type to account for private types when\n+            --  the original association had a box default.\n+\n+            Record_Def :=\n+              Type_Definition (Parent (Underlying_Type (Base_Type (Typ))));\n \n             if Null_Present (Record_Def) then\n                null;"}, {"sha": "3bf4eb69c879d7e7bb4c96500bb7136918dc525e", "filename": "gcc/ada/table.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Ftable.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Ftable.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftable.adb?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -83,6 +83,17 @@ package body Table is\n          Set_Item (Table_Index_Type (Last_Val + 1), New_Val);\n       end Append;\n \n+      ----------------\n+      -- Append_All --\n+      ----------------\n+\n+      procedure Append_All (New_Vals : Table_Type) is\n+      begin\n+         for J in New_Vals'Range loop\n+            Append (New_Vals (J));\n+         end loop;\n+      end Append_All;\n+\n       --------------------\n       -- Decrement_Last --\n       --------------------"}, {"sha": "2b398d762cd5fe767adb568f3625f99d639148d2", "filename": "gcc/ada/table.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Ftable.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3743d5bde63e99c32d5cdc930485b279d111bca2/gcc%2Fada%2Ftable.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftable.ads?ref=3743d5bde63e99c32d5cdc930485b279d111bca2", "patch": "@@ -187,6 +187,9 @@ package Table is\n       --  i.e. the table size is increased by one, and the given new item\n       --  stored in the newly created table element.\n \n+      procedure Append_All (New_Vals : Table_Type);\n+      --  Appends all components of New_Vals\n+\n       procedure Set_Item\n         (Index : Table_Index_Type;\n          Item  : Table_Component_Type);"}]}