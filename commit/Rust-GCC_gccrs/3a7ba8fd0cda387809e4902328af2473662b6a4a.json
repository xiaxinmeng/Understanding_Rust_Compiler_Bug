{"sha": "3a7ba8fd0cda387809e4902328af2473662b6a4a", "node_id": "C_kwDOANBUbNoAKDNhN2JhOGZkMGNkYTM4NzgwOWU0OTAyMzI4YWYyNDczNjYyYjZhNGE", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-03-17T07:10:59Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-03-17T08:51:09Z"}, "message": "tree-optimization/104960 - unsplit edges after late sinking\n\nSomething went wrong when testing the earlier patch to move the\nlate sinking to before the late phiopt for PR102008.  The following\nmakes sure to unsplit edges after the late sinking since the split\nedges confuse the following phiopt leading to missed optimizations.\n\nI've went for a new pass parameter for this to avoid changing the\nCFG after the early sinking pass at this point.\n\n2022-03-17  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/104960\n\t* passes.def: Add pass parameter to pass_sink_code, mark\n\tlast one to unsplit edges.\n\t* tree-ssa-sink.cc (pass_sink_code::set_pass_param): New.\n\t(pass_sink_code::execute): Always execute TODO_cleanup_cfg\n\twhen we need to unsplit edges.\n\n\t* gcc.dg/gimplefe-37.c: Adjust to allow either the true\n\tor false edge to have a forwarder.", "tree": {"sha": "32cb62d227c852f67eb5f529f398045fe83aeff9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32cb62d227c852f67eb5f529f398045fe83aeff9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a7ba8fd0cda387809e4902328af2473662b6a4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a7ba8fd0cda387809e4902328af2473662b6a4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a7ba8fd0cda387809e4902328af2473662b6a4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a7ba8fd0cda387809e4902328af2473662b6a4a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7276a18aba41eed65c0cf535ae029e0ceeca6c77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7276a18aba41eed65c0cf535ae029e0ceeca6c77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7276a18aba41eed65c0cf535ae029e0ceeca6c77"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "3e44797b10f5855d6337d174236399d0f1ceb670", "filename": "gcc/passes.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a7ba8fd0cda387809e4902328af2473662b6a4a/gcc%2Fpasses.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a7ba8fd0cda387809e4902328af2473662b6a4a/gcc%2Fpasses.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.def?ref=3a7ba8fd0cda387809e4902328af2473662b6a4a", "patch": "@@ -259,7 +259,7 @@ along with GCC; see the file COPYING3.  If not see\n       NEXT_PASS (pass_lim);\n       NEXT_PASS (pass_walloca, false);\n       NEXT_PASS (pass_pre);\n-      NEXT_PASS (pass_sink_code);\n+      NEXT_PASS (pass_sink_code, false /* unsplit edges */);\n       NEXT_PASS (pass_sancov);\n       NEXT_PASS (pass_asan);\n       NEXT_PASS (pass_tsan);\n@@ -349,7 +349,7 @@ along with GCC; see the file COPYING3.  If not see\n       /* After late CD DCE we rewrite no longer addressed locals into SSA\n \t form if possible.  */\n       NEXT_PASS (pass_forwprop);\n-      NEXT_PASS (pass_sink_code);\n+      NEXT_PASS (pass_sink_code, true /* unsplit edges */);\n       NEXT_PASS (pass_phiopt, false /* early_p */);\n       NEXT_PASS (pass_fold_builtins);\n       NEXT_PASS (pass_optimize_widening_mul);"}, {"sha": "12f6f64fc2c3b7d26daa68b51712d7ea110666bd", "filename": "gcc/testsuite/gcc.dg/gimplefe-37.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a7ba8fd0cda387809e4902328af2473662b6a4a/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-37.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a7ba8fd0cda387809e4902328af2473662b6a4a/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-37.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-37.c?ref=3a7ba8fd0cda387809e4902328af2473662b6a4a", "patch": "@@ -22,6 +22,6 @@ main (int argc)\n \n \n /* { dg-final { scan-tree-dump-times \"<bb \\[0-9\\]> \\\\\\[count: 3\" 2 \"optimized\" } } */\n-/* { dg-final { scan-tree-dump-times \"<bb \\[0-9\\]> \\\\\\[count: 2\" 1 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"<bb \\[0-9\\]> \\\\\\[count: \\[12\\]\" 1 \"optimized\" } } */\n /* { dg-final { scan-tree-dump-times \"goto <bb \\[0-9\\]>; \\\\\\[33\\\\\\.33%\\\\\\]\" 1 \"optimized\" } } */\n /* { dg-final { scan-tree-dump-times \"goto <bb \\[0-9\\]>; \\\\\\[66\\\\\\.67%\\\\\\]\" 1 \"optimized\" } } */"}, {"sha": "1c226406febd0eb177948840bc5b25a7420a42d4", "filename": "gcc/tree-ssa-sink.cc", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a7ba8fd0cda387809e4902328af2473662b6a4a/gcc%2Ftree-ssa-sink.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a7ba8fd0cda387809e4902328af2473662b6a4a/gcc%2Ftree-ssa-sink.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sink.cc?ref=3a7ba8fd0cda387809e4902328af2473662b6a4a", "patch": "@@ -822,26 +822,35 @@ class pass_sink_code : public gimple_opt_pass\n {\n public:\n   pass_sink_code (gcc::context *ctxt)\n-    : gimple_opt_pass (pass_data_sink_code, ctxt)\n+    : gimple_opt_pass (pass_data_sink_code, ctxt), unsplit_edges (false)\n   {}\n \n   /* opt_pass methods: */\n   virtual bool gate (function *) { return flag_tree_sink != 0; }\n   virtual unsigned int execute (function *);\n   opt_pass *clone (void) { return new pass_sink_code (m_ctxt); }\n+  void set_pass_param (unsigned n, bool param)\n+    {\n+      gcc_assert (n == 0);\n+      unsplit_edges = param;\n+    }\n \n+private:\n+  bool unsplit_edges;\n }; // class pass_sink_code\n \n unsigned int\n pass_sink_code::execute (function *fun)\n {\n   loop_optimizer_init (LOOPS_NORMAL);\n   split_edges_for_insertion ();\n+  /* Arrange for the critical edge splitting to be undone if requested.  */\n+  unsigned todo = unsplit_edges ? TODO_cleanup_cfg : 0;\n   connect_infinite_loops_to_exit ();\n   memset (&sink_stats, 0, sizeof (sink_stats));\n   calculate_dominance_info (CDI_DOMINATORS);\n   calculate_dominance_info (CDI_POST_DOMINATORS);\n-  unsigned todo = sink_code_in_bb (EXIT_BLOCK_PTR_FOR_FN (fun));\n+  todo |= sink_code_in_bb (EXIT_BLOCK_PTR_FOR_FN (fun));\n   statistics_counter_event (fun, \"Sunk statements\", sink_stats.sunk);\n   statistics_counter_event (fun, \"Commoned stores\", sink_stats.commoned);\n   free_dominance_info (CDI_POST_DOMINATORS);"}]}