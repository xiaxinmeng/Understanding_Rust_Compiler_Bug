{"sha": "2482200f02cb997e951140aafe3415e27b07b8fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ4MjIwMGYwMmNiOTk3ZTk1MTE0MGFhZmUzNDE1ZTI3YjA3YjhmZA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-01-14T10:15:50Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-01-14T10:15:50Z"}, "message": "overloads_int.cc: Fix wrong test (don't pick by mistake the (const complex<>&, int) overload)...\n\n2006-01-14  Paolo Carlini  <pcarlini@suse.de>\n\n\t* testsuite/tr1/8_c_compatibility/complex/overloads_int.cc:\n\tFix wrong test (don't pick by mistake the (const complex<>&, int)\n\toverload); add some.\n\nFrom-SVN: r109700", "tree": {"sha": "15db68855b30629572d5fe3777e839c3c43a6aab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15db68855b30629572d5fe3777e839c3c43a6aab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2482200f02cb997e951140aafe3415e27b07b8fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2482200f02cb997e951140aafe3415e27b07b8fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2482200f02cb997e951140aafe3415e27b07b8fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2482200f02cb997e951140aafe3415e27b07b8fd/comments", "author": null, "committer": null, "parents": [{"sha": "dd5827cb6ffcd1991ac139a1df62ccf4421a3aef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd5827cb6ffcd1991ac139a1df62ccf4421a3aef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd5827cb6ffcd1991ac139a1df62ccf4421a3aef"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "49384c9508f27f6c528ce2c371cc38f636b416e6", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2482200f02cb997e951140aafe3415e27b07b8fd/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2482200f02cb997e951140aafe3415e27b07b8fd/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2482200f02cb997e951140aafe3415e27b07b8fd", "patch": "@@ -1,3 +1,9 @@\n+2006-01-14  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* testsuite/tr1/8_c_compatibility/complex/overloads_int.cc:\n+\tFix wrong test (don't pick by mistake the (const complex<>&, int)\n+\toverload); add some.\n+\n 2006-01-13  Paolo Carlini  <pcarlini@suse.de>\n \t    Howard Hinnant  <hhinnant@apple.com>\n "}, {"sha": "c5fcd84cf9d0f720e5fe64af2b83c4a60335d900", "filename": "libstdc++-v3/testsuite/tr1/8_c_compatibility/complex/overloads_int.cc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2482200f02cb997e951140aafe3415e27b07b8fd/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcomplex%2Foverloads_int.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2482200f02cb997e951140aafe3415e27b07b8fd/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcomplex%2Foverloads_int.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcomplex%2Foverloads_int.cc?ref=2482200f02cb997e951140aafe3415e27b07b8fd", "patch": "@@ -67,13 +67,19 @@ void test01()\n   check_ret_type<cmplx_d_type>(pow(cmplx_f_type(f1, f1), u1));\n   check_ret_type<cmplx_d_type>(pow(cmplx_f_type(f1, f1), l1));\n   check_ret_type<cmplx_d_type>(pow(cmplx_d_type(d1, d1), i1));\n-  VERIFY( pow(cmplx_d_type(d1, d1), i1) == pow(cmplx_d_type(d1, d1), d1) );\n+\n+  // See above comment.\n+  // VERIFY( pow(cmplx_d_type(d1, d1), i1) == pow(cmplx_d_type(d1, d1), d1) );\n+  VERIFY( pow(cmplx_d_type(d1, d1), u1) == pow(cmplx_d_type(d1, d1), d1) );\n+  VERIFY( pow(cmplx_d_type(d1, d1), l1) == pow(cmplx_d_type(d1, d1), d1) );\n \n   check_ret_type<cmplx_d_type>(pow(i1, cmplx_f_type(f1, f1)));\n   check_ret_type<cmplx_d_type>(pow(u1, cmplx_f_type(f1, f1)));\n   check_ret_type<cmplx_d_type>(pow(l1, cmplx_f_type(f1, f1)));\n   check_ret_type<cmplx_d_type>(pow(i1, cmplx_d_type(d1, d1)));\n   VERIFY( pow(i1, cmplx_d_type(d1, d1)) == pow(d1, cmplx_d_type(d1, d1)) );\n+  VERIFY( pow(u1, cmplx_d_type(d1, d1)) == pow(d1, cmplx_d_type(d1, d1)) );\n+  VERIFY( pow(l1, cmplx_d_type(d1, d1)) == pow(d1, cmplx_d_type(d1, d1)) );\n \n   check_ret_type<double>(real(i1));\n   VERIFY( real(i1) == real(d1) );"}]}