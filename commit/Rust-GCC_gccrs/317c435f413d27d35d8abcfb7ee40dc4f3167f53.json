{"sha": "317c435f413d27d35d8abcfb7ee40dc4f3167f53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzE3YzQzNWY0MTNkMjdkMzVkOGFiY2ZiN2VlNDBkYzRmMzE2N2Y1Mw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2008-02-26T18:09:02Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2008-02-26T18:09:02Z"}, "message": "re PR c++/35315 (ICE with attribute transparent_union)\n\n        PR c++/35315\n        * attribs.c (decl_attributes): Leave ATTR_FLAG_TYPE_IN_PLACE\n        alone if it's the naming decl for the type's main variant.\n        * cp/decl.c (grokdeclarator): Allow a typedef of an unnamed struct\n        to name the struct for linkage purposes even if it has attributes.\n        (start_decl): In that case, set ATTR_FLAG_TYPE_IN_PLACE.\n\nFrom-SVN: r132681", "tree": {"sha": "0a295d469e667b407d72e2be5dc3b6409999416f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a295d469e667b407d72e2be5dc3b6409999416f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/317c435f413d27d35d8abcfb7ee40dc4f3167f53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/317c435f413d27d35d8abcfb7ee40dc4f3167f53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/317c435f413d27d35d8abcfb7ee40dc4f3167f53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/317c435f413d27d35d8abcfb7ee40dc4f3167f53/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f82c41ea91a0cf691c9a59ca9219e63933c0d9fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f82c41ea91a0cf691c9a59ca9219e63933c0d9fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f82c41ea91a0cf691c9a59ca9219e63933c0d9fb"}], "stats": {"total": 46, "additions": 41, "deletions": 5}, "files": [{"sha": "02f55c96335bfc1174321190796d63d9bf204510", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/317c435f413d27d35d8abcfb7ee40dc4f3167f53/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/317c435f413d27d35d8abcfb7ee40dc4f3167f53/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=317c435f413d27d35d8abcfb7ee40dc4f3167f53", "patch": "@@ -1,3 +1,9 @@\n+2008-02-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/35315\n+\t* attribs.c (decl_attributes): Leave ATTR_FLAG_TYPE_IN_PLACE \n+\talone if it's the naming decl for the type's main variant.\n+\n 2008-02-26  Tom Tromey  <tromey@redhat.com>\n \n \t* system.h (USE_MAPPED_LOCATION): Poison."}, {"sha": "767035b5dd10af44b63f7d19e86714170635d1ba", "filename": "gcc/attribs.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/317c435f413d27d35d8abcfb7ee40dc4f3167f53/gcc%2Fattribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/317c435f413d27d35d8abcfb7ee40dc4f3167f53/gcc%2Fattribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.c?ref=317c435f413d27d35d8abcfb7ee40dc4f3167f53", "patch": "@@ -280,7 +280,11 @@ decl_attributes (tree *node, tree attributes, int flags)\n       if (spec->type_required && DECL_P (*anode))\n \t{\n \t  anode = &TREE_TYPE (*anode);\n-\t  flags &= ~(int) ATTR_FLAG_TYPE_IN_PLACE;\n+\t  /* Allow ATTR_FLAG_TYPE_IN_PLACE for the type's naming decl.  */\n+\t  if (!(TREE_CODE (*anode) == TYPE_DECL\n+\t\t&& *anode == TYPE_NAME (TYPE_MAIN_VARIANT\n+\t\t\t\t\t(TREE_TYPE (*anode)))))\n+\t    flags &= ~(int) ATTR_FLAG_TYPE_IN_PLACE;\n \t}\n \n       if (spec->function_type_required && TREE_CODE (*anode) != FUNCTION_TYPE"}, {"sha": "2a06b6f9adca1817ef716ac63df073f1ae17ce56", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/317c435f413d27d35d8abcfb7ee40dc4f3167f53/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/317c435f413d27d35d8abcfb7ee40dc4f3167f53/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=317c435f413d27d35d8abcfb7ee40dc4f3167f53", "patch": "@@ -1,3 +1,10 @@\n+2008-02-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/35315\n+\t* decl.c (grokdeclarator): Allow a typedef of an unnamed struct\n+\tto name the struct for linkage purposes even if it has attributes.\n+\t(start_decl): In that case, set ATTR_FLAG_TYPE_IN_PLACE.\n+\n 2008-02-26  Tom Tromey  <tromey@redhat.com>\n \n \t* parser.c (eof_token): Remove old location code.\n@@ -181,7 +188,7 @@\n 2008-02-12  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/34824\n-\t* call.c (convert_like_real): Pass LOOKUP_ONLYCONVERTING to build_temp\n+\t* call.c (convert_like_real): Pass LOOKUP_NO_CONVERSION to build_temp\n \tif we're doing conversions to call a user-defined conversion function.\n \n 2008-02-12  Steven Bosscher  <steven@gcc.gnu.org>"}, {"sha": "52a600440f9ddd8b291b59ed4ae428e19ffec4d8", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/317c435f413d27d35d8abcfb7ee40dc4f3167f53/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/317c435f413d27d35d8abcfb7ee40dc4f3167f53/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=317c435f413d27d35d8abcfb7ee40dc4f3167f53", "patch": "@@ -3957,6 +3957,7 @@ start_decl (const cp_declarator *declarator,\n   tree type;\n   tree context;\n   bool was_public;\n+  int flags;\n \n   *pushed_scope_p = NULL_TREE;\n \n@@ -4018,8 +4019,17 @@ start_decl (const cp_declarator *declarator,\n \tTREE_STATIC (decl) = 1;\n     }\n \n+  /* If this is a typedef that names the class for linkage purposes\n+     (7.1.3p8), apply any attributes directly to the type.  */\n+  if (TREE_CODE (decl) == TYPE_DECL\n+      && TAGGED_TYPE_P (TREE_TYPE (decl))\n+      && decl == TYPE_NAME (TYPE_MAIN_VARIANT (TREE_TYPE (decl))))\n+    flags = ATTR_FLAG_TYPE_IN_PLACE;\n+  else\n+    flags = 0;\n+\n   /* Set attributes here so if duplicate decl, will have proper attributes.  */\n-  cplus_decl_attributes (&decl, attributes, 0);\n+  cplus_decl_attributes (&decl, attributes, flags);\n \n   /* Dllimported symbols cannot be defined.  Static data members (which\n      can be initialized in-class and dllimported) go through grokfield,\n@@ -8556,8 +8566,6 @@ grokdeclarator (const cp_declarator *declarator,\n \t  && TYPE_NAME (type)\n \t  && TREE_CODE (TYPE_NAME (type)) == TYPE_DECL\n \t  && TYPE_ANONYMOUS_P (type)\n-\t  /* Don't do this if there are attributes.  */\n-\t  && (!attrlist || !*attrlist)\n \t  && cp_type_quals (type) == TYPE_UNQUALIFIED)\n \t{\n \t  tree oldname = TYPE_NAME (type);"}, {"sha": "523015cb1424c48e38a76aa0026127316c48f2ba", "filename": "gcc/testsuite/g++.dg/ext/attrib32.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/317c435f413d27d35d8abcfb7ee40dc4f3167f53/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib32.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/317c435f413d27d35d8abcfb7ee40dc4f3167f53/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib32.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib32.C?ref=317c435f413d27d35d8abcfb7ee40dc4f3167f53", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/35315\n+\n+typedef union { int i; } U __attribute__((transparent_union));\n+\n+static void foo(U) {}\n+static void foo(int) {}\n+\n+void bar()\n+{\n+  foo(0);\n+}"}]}