{"sha": "8c6a71e47c11d22503a87ef1f118668b043df9de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM2YTcxZTQ3YzExZDIyNTAzYTg3ZWYxZjExODY2OGIwNDNkZjlkZQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-05-02T15:46:50Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-05-02T15:46:50Z"}, "message": "Miscellaneous API doc improvements\n\n\t* include/bits/basic_string.h: Fix iterator/index confusion in\n\tDoxygen comments.\n\t* include/bits/range_access.h: Fix Doxygen warnings.\n\t* include/bits/refwrap.h: Do not document implementation details.\n\t(ref, cref): Group docs with reference_wrapper.\n\t* include/std/fstream: Fix Doxygen markup.\n\t* libsupc++/initializer_list (begin, end): Group docs with\n\tinitializer_list.\n\nFrom-SVN: r270814", "tree": {"sha": "b538cb440157868c407dd422f51e192c8187fc75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b538cb440157868c407dd422f51e192c8187fc75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c6a71e47c11d22503a87ef1f118668b043df9de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c6a71e47c11d22503a87ef1f118668b043df9de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c6a71e47c11d22503a87ef1f118668b043df9de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c6a71e47c11d22503a87ef1f118668b043df9de/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50d5fcf5e2726a37e1a485006ceee8025eae13ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50d5fcf5e2726a37e1a485006ceee8025eae13ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50d5fcf5e2726a37e1a485006ceee8025eae13ea"}], "stats": {"total": 65, "additions": 39, "deletions": 26}, "files": [{"sha": "32d1be1616f959ec65adbbc74394e020e3cd0ecd", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c6a71e47c11d22503a87ef1f118668b043df9de/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c6a71e47c11d22503a87ef1f118668b043df9de/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8c6a71e47c11d22503a87ef1f118668b043df9de", "patch": "@@ -1,5 +1,14 @@\n 2019-05-02  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/basic_string.h: Fix iterator/index confusion in\n+\tDoxygen comments.\n+\t* include/bits/range_access.h: Fix Doxygen warnings.\n+\t* include/bits/refwrap.h: Do not document implementation details.\n+\t(ref, cref): Group docs with reference_wrapper.\n+\t* include/std/fstream: Fix Doxygen markup.\n+\t* libsupc++/initializer_list (begin, end): Group docs with\n+\tinitializer_list.\n+\n \t* doc/doxygen/user.cfg.in: Set MARKDOWN_SUPPORT=YES.\n \n \t* include/bits/unique_lock.h: Fix/improve doxygen markup."}, {"sha": "4a6332a8968fe78a51fe1582782d5e50c07dce95", "filename": "libstdc++-v3/include/bits/basic_string.h", "status": "modified", "additions": 16, "deletions": 17, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c6a71e47c11d22503a87ef1f118668b043df9de/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c6a71e47c11d22503a87ef1f118668b043df9de/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h?ref=8c6a71e47c11d22503a87ef1f118668b043df9de", "patch": "@@ -1625,7 +1625,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n \n       /**\n        *  @brief  Insert value of a string.\n-       *  @param __pos1  Iterator referencing location in string to insert at.\n+       *  @param __pos1 Position in string to insert at.\n        *  @param __str  The string to insert.\n        *  @return  Reference to this string.\n        *  @throw  std::length_error  If new length exceeds @c max_size().\n@@ -1642,8 +1642,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n \n       /**\n        *  @brief  Insert a substring.\n-       *  @param __pos1  Iterator referencing location in string to insert at.\n-       *  @param __str  The string to insert.\n+       *  @param __pos1  Position in string to insert at.\n+       *  @param __str   The string to insert.\n        *  @param __pos2  Start of characters in str to insert.\n        *  @param __n  Number of characters to insert.\n        *  @return  Reference to this string.\n@@ -1667,7 +1667,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n \n       /**\n        *  @brief  Insert a C substring.\n-       *  @param __pos  Iterator referencing location in string to insert at.\n+       *  @param __pos  Position in string to insert at.\n        *  @param __s  The C string to insert.\n        *  @param __n  The number of characters to insert.\n        *  @return  Reference to this string.\n@@ -1687,7 +1687,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n \n       /**\n        *  @brief  Insert a C string.\n-       *  @param __pos  Iterator referencing location in string to insert at.\n+       *  @param __pos  Position in string to insert at.\n        *  @param __s  The C string to insert.\n        *  @return  Reference to this string.\n        *  @throw  std::length_error  If new length exceeds @c max_size().\n@@ -1754,7 +1754,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n #if __cplusplus >= 201703L\n       /**\n        *  @brief  Insert a string_view.\n-       *  @param __pos  Iterator referencing position in string to insert at.\n+       *  @param __pos  Position in string to insert at.\n        *  @param __svt  The object convertible to string_view to insert.\n        *  @return  Reference to this string.\n       */\n@@ -1768,10 +1768,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n \n       /**\n        *  @brief  Insert a string_view.\n-       *  @param __pos  Iterator referencing position in string to insert at.\n-       *  @param __svt  The object convertible to string_view to insert from.\n-       *  @param __pos  Iterator referencing position in string_view to insert\n-       *  from.\n+       *  @param __pos1  Position in string to insert at.\n+       *  @param __svt   The object convertible to string_view to insert from.\n+       *  @param __pos2  Start of characters in str to insert.\n        *  @param __n    The number of characters to insert.\n        *  @return  Reference to this string.\n       */\n@@ -4519,7 +4518,7 @@ _GLIBCXX_END_NAMESPACE_CXX11\n \n       /**\n        *  @brief  Insert value of a string.\n-       *  @param __pos1  Iterator referencing location in string to insert at.\n+       *  @param __pos1  Position in string to insert at.\n        *  @param __str  The string to insert.\n        *  @return  Reference to this string.\n        *  @throw  std::length_error  If new length exceeds @c max_size().\n@@ -4535,7 +4534,7 @@ _GLIBCXX_END_NAMESPACE_CXX11\n \n       /**\n        *  @brief  Insert a substring.\n-       *  @param __pos1  Iterator referencing location in string to insert at.\n+       *  @param __pos1  Position in string to insert at.\n        *  @param __str  The string to insert.\n        *  @param __pos2  Start of characters in str to insert.\n        *  @param __n  Number of characters to insert.\n@@ -4560,7 +4559,7 @@ _GLIBCXX_END_NAMESPACE_CXX11\n \n       /**\n        *  @brief  Insert a C substring.\n-       *  @param __pos  Iterator referencing location in string to insert at.\n+       *  @param __pos  Position in string to insert at.\n        *  @param __s  The C string to insert.\n        *  @param __n  The number of characters to insert.\n        *  @return  Reference to this string.\n@@ -4579,7 +4578,7 @@ _GLIBCXX_END_NAMESPACE_CXX11\n \n       /**\n        *  @brief  Insert a C string.\n-       *  @param __pos  Iterator referencing location in string to insert at.\n+       *  @param __pos  Position in string to insert at.\n        *  @param __s  The C string to insert.\n        *  @return  Reference to this string.\n        *  @throw  std::length_error  If new length exceeds @c max_size().\n@@ -4646,7 +4645,7 @@ _GLIBCXX_END_NAMESPACE_CXX11\n #if __cplusplus >= 201703L\n       /**\n        *  @brief  Insert a string_view.\n-       *  @param __pos  Iterator referencing position in string to insert at.\n+       *  @param __pos  Position in string to insert at.\n        *  @param __svt  The object convertible to string_view to insert.\n        *  @return  Reference to this string.\n       */\n@@ -4660,9 +4659,9 @@ _GLIBCXX_END_NAMESPACE_CXX11\n \n       /**\n        *  @brief  Insert a string_view.\n-       *  @param __pos  Iterator referencing position in string to insert at.\n+       *  @param __pos  Position in string to insert at.\n        *  @param __svt  The object convertible to string_view to insert from.\n-       *  @param __pos  Iterator referencing position in string_view to insert\n+       *  @param __pos  Position in string_view to insert\n        *  from.\n        *  @param __n    The number of characters to insert.\n        *  @return  Reference to this string."}, {"sha": "d1e747114337522c5b5c89dc6e8e39c1a80643a8", "filename": "libstdc++-v3/include/bits/range_access.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c6a71e47c11d22503a87ef1f118668b043df9de/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frange_access.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c6a71e47c11d22503a87ef1f118668b043df9de/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frange_access.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frange_access.h?ref=8c6a71e47c11d22503a87ef1f118668b043df9de", "patch": "@@ -245,11 +245,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Return the size of an array.\n-   *  @param  __array  Array.\n    */\n   template <typename _Tp, size_t _Nm>\n     constexpr size_t\n-    size(const _Tp (&/*__array*/)[_Nm]) noexcept\n+    size(const _Tp (&)[_Nm]) noexcept\n     { return _Nm; }\n \n   /**\n@@ -264,11 +263,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Return whether an array is empty (always false).\n-   *  @param  __array  Container.\n    */\n   template <typename _Tp, size_t _Nm>\n     [[nodiscard]] constexpr bool\n-    empty(const _Tp (&/*__array*/)[_Nm]) noexcept\n+    empty(const _Tp (&)[_Nm]) noexcept\n     { return false; }\n \n   /**"}, {"sha": "e810988cd4f975fcb7baf20d37e9100e78e0da4f", "filename": "libstdc++-v3/include/bits/refwrap.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c6a71e47c11d22503a87ef1f118668b043df9de/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frefwrap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c6a71e47c11d22503a87ef1f118668b043df9de/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frefwrap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frefwrap.h?ref=8c6a71e47c11d22503a87ef1f118668b043df9de", "patch": "@@ -44,6 +44,8 @@ namespace std _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n+  /// @cond undocumented\n+\n   /**\n    * Derives from @c unary_function or @c binary_function, or perhaps\n    * nothing, depending on the number of arguments provided. The\n@@ -282,10 +284,11 @@ _GLIBCXX_MEM_FN_TRAITS(&& noexcept, false_type, true_type)\n     };\n #endif // ! C++20\n \n+  /// @endcond\n+\n   /**\n    *  @brief Primary class template for reference_wrapper.\n    *  @ingroup functors\n-   *  @{\n    */\n   template<typename _Tp>\n     class reference_wrapper\n@@ -345,6 +348,8 @@ _GLIBCXX_MEM_FN_TRAITS(&& noexcept, false_type, true_type)\n     reference_wrapper(_Tp&) -> reference_wrapper<_Tp>;\n #endif\n \n+  /// @relates reference_wrapper @{\n+\n   /// Denotes a reference should be taken to a variable.\n   template<typename _Tp>\n     inline reference_wrapper<_Tp>\n@@ -375,7 +380,7 @@ _GLIBCXX_MEM_FN_TRAITS(&& noexcept, false_type, true_type)\n     cref(reference_wrapper<_Tp> __t) noexcept\n     { return { __t.get() }; }\n \n-  // @} group functors\n+  // @}\n \n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace std"}, {"sha": "5ccaf3e4ec5e5eed8f397e7b9a6ca2913a6e5f17", "filename": "libstdc++-v3/include/std/fstream", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c6a71e47c11d22503a87ef1f118668b043df9de/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c6a71e47c11d22503a87ef1f118668b043df9de/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream?ref=8c6a71e47c11d22503a87ef1f118668b043df9de", "patch": "@@ -569,7 +569,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n #if __cplusplus >= 201703L\n       /**\n-       *  @param  Create an input file stream.\n+       *  @brief  Create an input file stream.\n        *  @param  __s  filesystem::path specifying the filename.\n        *  @param  __mode  Open file in specified mode (see std::ios_base).\n        *\n@@ -832,7 +832,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n #if __cplusplus >= 201703L\n       /**\n-       *  @param  Create an output file stream.\n+       *  @brief  Create an output file stream.\n        *  @param  __s  filesystem::path specifying the filename.\n        *  @param  __mode  Open file in specified mode (see std::ios_base).\n        *\n@@ -1090,7 +1090,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n #if __cplusplus >= 201703L\n       /**\n-       *  @param  Create an input/output file stream.\n+       *  @brief  Create an input/output file stream.\n        *  @param  __s  filesystem::path specifying the filename.\n        *  @param  __mode  Open file in specified mode (see std::ios_base).\n        */"}, {"sha": "ab8ace943cdf297fe435ff88a7839cf6b8ce6159", "filename": "libstdc++-v3/libsupc++/initializer_list", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c6a71e47c11d22503a87ef1f118668b043df9de/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Finitializer_list", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c6a71e47c11d22503a87ef1f118668b043df9de/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Finitializer_list", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Finitializer_list?ref=8c6a71e47c11d22503a87ef1f118668b043df9de", "patch": "@@ -83,6 +83,7 @@ namespace std\n    *  @brief  Return an iterator pointing to the first element of\n    *          the initializer_list.\n    *  @param  __ils  Initializer list.\n+   *  @relates initializer_list\n    */\n   template<class _Tp>\n     constexpr const _Tp*\n@@ -93,6 +94,7 @@ namespace std\n    *  @brief  Return an iterator pointing to one past the last element\n    *          of the initializer_list.\n    *  @param  __ils  Initializer list.\n+   *  @relates initializer_list\n    */\n   template<class _Tp>\n     constexpr const _Tp*"}]}