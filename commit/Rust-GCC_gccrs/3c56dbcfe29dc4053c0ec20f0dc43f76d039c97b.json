{"sha": "3c56dbcfe29dc4053c0ec20f0dc43f76d039c97b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M1NmRiY2ZlMjlkYzQwNTNjMGVjMjBmMGRjNDNmNzZkMDM5Yzk3Yg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-07-27T10:10:49Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-07-27T10:10:49Z"}, "message": "try again\n\nFrom-SVN: r28291", "tree": {"sha": "eb458bb156c99731f34490749f42655298486d08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb458bb156c99731f34490749f42655298486d08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c56dbcfe29dc4053c0ec20f0dc43f76d039c97b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c56dbcfe29dc4053c0ec20f0dc43f76d039c97b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c56dbcfe29dc4053c0ec20f0dc43f76d039c97b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c56dbcfe29dc4053c0ec20f0dc43f76d039c97b/comments", "author": null, "committer": null, "parents": [{"sha": "0068735be16b82f63860040bb4fecbc8ab08453e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0068735be16b82f63860040bb4fecbc8ab08453e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0068735be16b82f63860040bb4fecbc8ab08453e"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "f8ab714aa83d54874128792942fb2521d2dae66e", "filename": "gcc/cp/input.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c56dbcfe29dc4053c0ec20f0dc43f76d039c97b/gcc%2Fcp%2Finput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c56dbcfe29dc4053c0ec20f0dc43f76d039c97b/gcc%2Fcp%2Finput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finput.c?ref=3c56dbcfe29dc4053c0ec20f0dc43f76d039c97b", "patch": "@@ -124,13 +124,14 @@ feed_input (str, len, file, line)\n \n #if USE_CPPLIB\n   if (yy_lim > yy_cur)\n-    /* If we've started reading the next token, we're hosed.  */\n+    /* If we've started reading the next token, we're hosed.  The\n+       token_getch stuff is supposed to prevent this from happening.  */\n     my_friendly_abort (990710);\n   cpp_push_buffer (&parse_in, str, len);\n   CPP_BUFFER (&parse_in)->manual_pop = 1;\n   CPP_BUFFER (&parse_in)->nominal_fname\n     = CPP_BUFFER (&parse_in)->fname = file;\n-  CPP_BUFFER (&parse_in)->lineno = line;\n+  CPP_BUFFER (&parse_in)->lineno = parse_in.lineno = line;\n #else\n   inp->str = str;\n   inp->length = len;\n@@ -141,12 +142,12 @@ feed_input (str, len, file, line)\n   putback.buffer = NULL;\n   putback.buffer_size = 0;\n   putback.index = -1;\n-  lineno = line;\n-  input_filename = file;\n #endif\n   inp->next = input;\n   inp->input = save_pending_input ();\n   input = inp;\n+  lineno = line;\n+  input_filename = file;\n }\n \n extern int end_of_file;"}]}