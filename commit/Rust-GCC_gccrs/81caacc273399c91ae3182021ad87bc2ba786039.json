{"sha": "81caacc273399c91ae3182021ad87bc2ba786039", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFjYWFjYzI3MzM5OWM5MWFlMzE4MjAyMWFkODdiYzJiYTc4NjAzOQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-06-17T23:23:10Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-06-18T12:32:21Z"}, "message": "c++: Fix tsubst ICE with invalid static_cast [PR95728]\n\nSince r11-423 tsubst_copy_and_build/TREE_LIST uses tsubst_tree_list\ninstead of open coding it.  While the latter could return an error\nnode wrapped in a TREE_LIST, the former can return a naked error node.\n\nThat broke in tsubst_copy_and_build/NEW_EXPR:\n  tree placement = RECUR (TREE_OPERAND (t, 0));\n  // placement is now error_mark_node, so...\n  for (; placement != NULL_TREE; placement = TREE_CHAIN (placement))\n  // ... this crashes\n\nIf we just return, we avoid the ICE and improve the diagnostic a bit.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/95728\n\t* pt.c (tsubst_copy_and_build) <case NEW_EXPR>: Return error_mark_node\n\tif placement is erroneous.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/95728\n\t* g++.dg/template/cast6.C: New test.", "tree": {"sha": "04a873f9ad95aa776b79676f9aad86e01070d0f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04a873f9ad95aa776b79676f9aad86e01070d0f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81caacc273399c91ae3182021ad87bc2ba786039", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81caacc273399c91ae3182021ad87bc2ba786039", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81caacc273399c91ae3182021ad87bc2ba786039", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81caacc273399c91ae3182021ad87bc2ba786039/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c53566539265f56df1c0a60dca6dfc30f2c621d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c53566539265f56df1c0a60dca6dfc30f2c621d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c53566539265f56df1c0a60dca6dfc30f2c621d"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "9732e3b78c7bdafbb19ccfb96d37ad5b4b26a42c", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81caacc273399c91ae3182021ad87bc2ba786039/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81caacc273399c91ae3182021ad87bc2ba786039/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=81caacc273399c91ae3182021ad87bc2ba786039", "patch": "@@ -19633,6 +19633,8 @@ tsubst_copy_and_build (tree t,\n \n \tif (placement == NULL_TREE)\n \t  placement_vec = NULL;\n+\telse if (placement == error_mark_node)\n+\t  RETURN (error_mark_node);\n \telse\n \t  {\n \t    placement_vec = make_tree_vector ();"}, {"sha": "743eadaa5dd8239a47adf43a9720eb6879a996a4", "filename": "gcc/testsuite/g++.dg/template/cast6.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81caacc273399c91ae3182021ad87bc2ba786039/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcast6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81caacc273399c91ae3182021ad87bc2ba786039/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcast6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcast6.C?ref=81caacc273399c91ae3182021ad87bc2ba786039", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/95728\n+\n+template<typename T>\n+  void\n+  construct(T* p)\n+  { ::new(static_cast<void*>(p)) T; } // { dg-error \"invalid .static_cast.\" }\n+\n+template<typename T>\n+void\n+f(const T* t)\n+{\n+  construct(t);\n+}\n+\n+int main()\n+{\n+  int i[1];\n+  f(i);\n+}"}]}