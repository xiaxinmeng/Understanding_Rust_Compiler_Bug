{"sha": "e00dfa841f28206591d0276d83804fa6e2739dce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTAwZGZhODQxZjI4MjA2NTkxZDAyNzZkODM4MDRmYTZlMjczOWRjZQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2018-09-08T14:27:25Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2018-09-08T14:27:25Z"}, "message": "array-init.c: Add dg-prune-output.\n\n\t* c-c++-common/array-init.c: Add dg-prune-output.\n\t* g++.dg/cpp0x/lambda/lambda-const-this.C: Add dg-warning.\n\t* g++.dg/cpp0x/lambda/lambda-in-class-neg.C: Likewise.\n\t* g++.dg/cpp0x/lambda/lambda-in-class.C: Likewise.\n\t* g++.dg/cpp0x/lambda/lambda-nested.C: Likewise.\n\t* g++.dg/cpp0x/lambda/lambda-nsdmi1.C: Likewise.\n\t* g++.dg/cpp0x/lambda/lambda-nsdmi4.C: Likewise.\n\t* g++.dg/cpp0x/lambda/lambda-this.C: Likewise.\n\t* g++.dg/cpp0x/lambda/lambda-this17.C: Likewise.\n\t* g++.dg/cpp0x/lambda/lambda-this18.C: Likewise.\n\t* g++.dg/cpp0x/lambda/lambda-this2.C: Likewise.\n\t* g++.dg/cpp0x/lambda/lambda-this8.C: Likewise.\n\t* g++.dg/cpp1y/pr64382.C: Likewise.\n\t* g++.dg/cpp1y/pr77739.C: Likewise.\n\t* g++.dg/cpp1z/lambda-this1.C: Likewise.\n\t* g++.dg/cpp1z/lambda-this2.C: Likewise.\n\t* g++.dg/template/crash84.C: Adjust dg-error.\n\nFrom-SVN: r264169", "tree": {"sha": "2b667e06237beec2962d40e752ec012dbbfb4516", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b667e06237beec2962d40e752ec012dbbfb4516"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e00dfa841f28206591d0276d83804fa6e2739dce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e00dfa841f28206591d0276d83804fa6e2739dce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e00dfa841f28206591d0276d83804fa6e2739dce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e00dfa841f28206591d0276d83804fa6e2739dce/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "208121b583f2af79be1c715d80491fc1f6616322", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/208121b583f2af79be1c715d80491fc1f6616322", "html_url": "https://github.com/Rust-GCC/gccrs/commit/208121b583f2af79be1c715d80491fc1f6616322"}], "stats": {"total": 71, "additions": 48, "deletions": 23}, "files": [{"sha": "15e3979fae1e3b4665d424380eb320d0154b78b9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e00dfa841f28206591d0276d83804fa6e2739dce", "patch": "@@ -1,3 +1,23 @@\n+2018-09-08  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-c++-common/array-init.c: Add dg-prune-output.\n+\t* g++.dg/cpp0x/lambda/lambda-const-this.C: Add dg-warning.\n+\t* g++.dg/cpp0x/lambda/lambda-in-class-neg.C: Likewise.\n+\t* g++.dg/cpp0x/lambda/lambda-in-class.C: Likewise.\n+\t* g++.dg/cpp0x/lambda/lambda-nested.C: Likewise.\n+\t* g++.dg/cpp0x/lambda/lambda-nsdmi1.C: Likewise.\n+\t* g++.dg/cpp0x/lambda/lambda-nsdmi4.C: Likewise.\n+\t* g++.dg/cpp0x/lambda/lambda-this.C: Likewise.\n+\t* g++.dg/cpp0x/lambda/lambda-this17.C: Likewise.\n+\t* g++.dg/cpp0x/lambda/lambda-this18.C: Likewise.\n+\t* g++.dg/cpp0x/lambda/lambda-this2.C: Likewise.\n+\t* g++.dg/cpp0x/lambda/lambda-this8.C: Likewise.\n+\t* g++.dg/cpp1y/pr64382.C: Likewise.\n+\t* g++.dg/cpp1y/pr77739.C: Likewise.\n+\t* g++.dg/cpp1z/lambda-this1.C: Likewise.\n+\t* g++.dg/cpp1z/lambda-this2.C: Likewise.\n+\t* g++.dg/template/crash84.C: Adjust dg-error.\n+\n 2018-09-07  Marek Polacek  <polacek@redhat.com>\n \n \t* g++.dg/cpp1z/direct-enum-init1.C: Remove \"inside\" from diagnostic"}, {"sha": "3cc5722ea75c80a97efa653b6d4aac242b22d2ef", "filename": "gcc/testsuite/c-c++-common/array-init.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Farray-init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Farray-init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Farray-init.c?ref=e00dfa841f28206591d0276d83804fa6e2739dce", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n /* { dg-prune-output \"sorry, unimplemented: non-trivial designated initializers not supported\" } */\n+/* { dg-prune-output \"all initializer clauses should be designated\" } */\n \n char x[] = { [-1] = 1, 2, 3 }; /* { dg-error \"array index in initializer exceeds array bounds\" \"\" { target c } } */"}, {"sha": "f51055d6e7daab4c8fd073adc8d8b0ccfa0dba49", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-const-this.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-const-this.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-const-this.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-const-this.C?ref=e00dfa841f28206591d0276d83804fa6e2739dce", "patch": "@@ -5,5 +5,6 @@ struct S {\n   void f();\n   void g() const {\n     [=] { f(); } (); // { dg-error \"no match|qualifiers\" }\n+// { dg-warning \"implicit capture\" \"\" { target c++2a } .-1 }\n   }\n };"}, {"sha": "cff3d3756826c8ecffe0d4dea76c953f13305381", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-in-class-neg.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-in-class-neg.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-in-class-neg.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-in-class-neg.C?ref=e00dfa841f28206591d0276d83804fa6e2739dce", "patch": "@@ -18,8 +18,9 @@ class C {\n       [&] () -> void { this->m_i = 3; } ();\n       assert(m_i == 3);\n       [=] () -> void { m_i = 4; } (); // copies 'this' or --copies-m_i--?\n+// { dg-warning \"implicit capture\" \"\" { target c++2a } .-1 }\n       assert(m_i == 4);\n-      [=] () -> void { this->m_i = 5; } ();\n+      [=] () -> void { this->m_i = 5; } (); // { dg-warning \"implicit capture\" \"\" { target c++2a } }\n       assert(m_i == 5);\n     }\n "}, {"sha": "f2b54e58ad37b2b70962bd3fb3597dd377932dbe", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-in-class.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-in-class.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-in-class.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-in-class.C?ref=e00dfa841f28206591d0276d83804fa6e2739dce", "patch": "@@ -18,8 +18,9 @@ class C {\n       [&] () -> void { this->m_i = 3; } ();\n       assert(m_i == 3);\n       [=] () -> void { m_i = 4; } (); // copies 'this' or --copies-m_i--?\n+// { dg-warning \"implicit capture\" \"\" { target c++2a } .-1 }\n       assert(m_i == 4);\n-      [=] () -> void { this->m_i = 5; } ();\n+      [=] () -> void { this->m_i = 5; } (); // { dg-warning \"implicit capture\" \"\" { target c++2a } }\n       assert(m_i == 5);\n     }\n "}, {"sha": "3848938d55f0442c64c9443457a989a4d9410bf7", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-nested.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-nested.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-nested.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-nested.C?ref=e00dfa841f28206591d0276d83804fa6e2739dce", "patch": "@@ -7,7 +7,7 @@ struct A {\n   A(): i(42) { }\n   int f() {\n     return [this]{\n-      return [=]{ return i; }();\n+      return [=]{ return i; }(); // { dg-warning \"implicit capture\" \"\" { target c++2a } }\n     }();\n   }\n };"}, {"sha": "b6972896ecbf9922682276039c213c95af452895", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-nsdmi1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-nsdmi1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-nsdmi1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-nsdmi1.C?ref=e00dfa841f28206591d0276d83804fa6e2739dce", "patch": "@@ -1,7 +1,7 @@\n // PR c++/56464\n // { dg-do run { target c++11 } }\n \n-struct bug { bug*a = [&]{ return [=]{return this;}(); }(); };\n+struct bug { bug*a = [&]{ return [=]{return this;}(); }(); }; // { dg-warning \"implicit capture\" \"\" { target c++2a } }\n int main()\n {\n   bug b;"}, {"sha": "127bd26b95305213d119d41bd658dba0074e1f43", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-nsdmi4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-nsdmi4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-nsdmi4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-nsdmi4.C?ref=e00dfa841f28206591d0276d83804fa6e2739dce", "patch": "@@ -10,5 +10,5 @@ struct function\n struct testee\n {\n   function l1 = []() { };\n-  function l2 = [=]() { l1; };\n+  function l2 = [=]() { l1; }; // { dg-warning \"implicit capture\" \"\" { target c++2a } }\n };"}, {"sha": "7a27cf44a6822020e46d9fd2688927959eb74e02", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-this.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this.C?ref=e00dfa841f28206591d0276d83804fa6e2739dce", "patch": "@@ -6,8 +6,9 @@ struct A\n   int i;\n   void f()\n   {\n-    [=] { i = 0; };\n+    [=] { i = 0; };\t\t// { dg-warning \"implicit capture\" \"\" { target c++2a } }\n     [&] { i = 0; };\n     [=] { this = 0; };\t\t// { dg-error \"lvalue\" }\n+// { dg-warning \"implicit capture\" \"\" { target c++2a } .-1 }\n   }\n };"}, {"sha": "b7cdf31c46bb8381f71a9dc5cb702a8792856955", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-this17.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this17.C?ref=e00dfa841f28206591d0276d83804fa6e2739dce", "patch": "@@ -7,7 +7,7 @@ struct Test {\n \n struct TestPickled : Test {  \n   template<typename... Args> void triggerTest (Args&&... fargs) { \n-    [=](Args... as) {\n+    [=](Args... as) { // { dg-warning \"implicit capture\" \"\" { target c++2a } }\n       Test::triggerTest (as...);\n     } ();\t\t\n   }"}, {"sha": "3cfd3c0f2525e8d3585dbd8ef2cf04c20e2b3144", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-this18.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this18.C?ref=e00dfa841f28206591d0276d83804fa6e2739dce", "patch": "@@ -18,7 +18,7 @@ template <class U>\n void\n A<T>::bar ()\n {\n-  auto f = [this] () { auto g = [=] () { a.foo (); }; g (); };\n+  auto f = [this] () { auto g = [=] () { a.foo (); }; g (); }; // { dg-warning \"implicit capture\" \"\" { target c++2a } }\n   f ();\n }\n "}, {"sha": "56d6b0c8ab99d462734a01f33adb394b27179184", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-this2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this2.C?ref=e00dfa841f28206591d0276d83804fa6e2739dce", "patch": "@@ -7,7 +7,7 @@ struct S1 {\n   int i;\n   void g();\n   void f() {\n-    [=]() {\n+    [=]() { // { dg-warning \"implicit capture\" \"\" { target c++2a } }\n       i;\n       g();\n       S1::g();"}, {"sha": "e62cd08a614e410a4c2eeaf720e0b471f782bbfb", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-this8.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this8.C?ref=e00dfa841f28206591d0276d83804fa6e2739dce", "patch": "@@ -6,21 +6,21 @@\n struct test {\n   template<typename T>\n   std::function<void()> broken(int x) {\n-    return [=] { +x; print<T>(); };\n+    return [=] { +x; print<T>(); }; // { dg-warning \"implicit capture\" \"\" { target c++2a } }\n   }\n \n   std::function<void()> works0() {\n-    return [=] { print<int>(); };\n+    return [=] { print<int>(); }; // { dg-warning \"implicit capture\" \"\" { target c++2a } }\n   }\n \n   template<typename T>\n   std::function<void()> works1() {\n-    return [=] { print<int>(); };\n+    return [=] { print<int>(); }; // { dg-warning \"implicit capture\" \"\" { target c++2a } }\n   }\n \n   template<typename T>\n   std::function<void()> works2() {\n-    return [=] { this->print<T>(); };\n+    return [=] { this->print<T>(); }; // { dg-warning \"implicit capture\" \"\" { target c++2a } }\n   }\n \n   template<typename T>"}, {"sha": "0342dee7e9862631b257a6daef2fc2bf6a73cf3a", "filename": "gcc/testsuite/g++.dg/cpp1y/pr64382.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr64382.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr64382.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr64382.C?ref=e00dfa841f28206591d0276d83804fa6e2739dce", "patch": "@@ -9,7 +9,7 @@ struct my_queue\n   }\n   void ice()\n   {\n-    auto L = [=](auto &&v) {\n+    auto L = [=](auto &&v) { // { dg-warning \"implicit capture\" \"\" { target c++2a } }\n       push(v);\n     };\n     trav(L);"}, {"sha": "8fe76f99f56ea5ac5a3dff823a1afccd44d6d8b5", "filename": "gcc/testsuite/g++.dg/cpp1y/pr77739.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr77739.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr77739.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr77739.C?ref=e00dfa841f28206591d0276d83804fa6e2739dce", "patch": "@@ -8,7 +8,7 @@ struct A {\n struct B {\n   B();\n   template <typename... Args> auto g(Args &&... p1) {\n-    return [=] { f(p1...); };\n+    return [=] { f(p1...); }; // { dg-warning \"implicit capture\" \"\" { target c++2a } }\n   }\n   void f(A, const char *);\n };"}, {"sha": "b13ff8b9fc69d008574ea929db628f18e413d5a7", "filename": "gcc/testsuite/g++.dg/cpp1z/lambda-this1.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flambda-this1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flambda-this1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flambda-this1.C?ref=e00dfa841f28206591d0276d83804fa6e2739dce", "patch": "@@ -15,7 +15,7 @@ struct A {\n     auto g = [*this] { a++; };\t\t// { dg-error \"in read-only object\" }\n \t\t\t\t\t// { dg-error \"'*this' capture only available with\" \"\" { target c++14_down } .-1 }\n     auto h = [*this] () mutable { a++; };// { dg-error \"'*this' capture only available with\" \"\" { target c++14_down } }\n-    auto i = [=] { return a; };\n+    auto i = [=] { return a; };\t\t// { dg-warning \"implicit capture\" \"\" { target c++2a } }\n     auto j = [&] { return a; };\n     // P0409R2 - C++2A lambda capture [=, this]\n     auto k = [=, this] { return a; };// { dg-error \"explicit by-copy capture of 'this' redundant with by-copy capture default\" \"\" { target c++17_down } }\n@@ -62,7 +62,7 @@ struct C {\n     auto d = [this] { return c; };\n     auto e = [*this] { return c; };\t// { dg-error \"use of deleted function\" }\n \t\t\t\t\t// { dg-error \"'*this' capture only available with\" \"\" { target c++14_down } .-1 }\n-    auto f = [=] { return c; };\n+    auto f = [=] { return c; };\t\t// { dg-warning \"implicit capture\" \"\" { target c++2a } }\n     auto g = [&] { return c; };\n     auto h = [this] { bar (); };\n     auto i = [*this] { bar (); };\t// { dg-error \"use of deleted function\" }\n@@ -77,7 +77,7 @@ struct D {\n     auto e = [this] { return d; };\n     auto f = [*this] { return d; };\t// { dg-error \"use of deleted function\" }\n \t\t\t\t\t// { dg-error \"'*this' capture only available with\" \"\" { target c++14_down } .-1 }\n-    auto g = [=] { return d; };\n+    auto g = [=] { return d; };\t\t// { dg-warning \"implicit capture\" \"\" { target c++2a } }\n     auto h = [&] { return d; };\n     auto i = [this] { bar (); };\n     auto j = [*this] { bar (); };\t// { dg-error \"use of deleted function\" }"}, {"sha": "f3ef8e363130ae67ad2e4089facab5425965b0d6", "filename": "gcc/testsuite/g++.dg/cpp1z/lambda-this2.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flambda-this2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flambda-this2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flambda-this2.C?ref=e00dfa841f28206591d0276d83804fa6e2739dce", "patch": "@@ -12,7 +12,7 @@ struct A {\n     if (z != 0) abort ();\n     auto b = [this] { return &a; };\n     auto c = [*this] { return &a; };\t// { dg-warning \"'*this' capture only available with\" \"\" { target c++14_down } }\n-    auto d = [=] { return &a; };\n+    auto d = [=] { return &a; }; // { dg-warning \"implicit capture\" \"\" { target c++2a } }\n     auto e = [&] { return &a; };\n     if (b () != &a) abort ();\n     if (*b () != 4) abort ();\n@@ -24,7 +24,7 @@ struct A {\n     if (e () != &a) abort ();\n     auto g = [this] { return a + z; };\n     auto h = [*this] { return a + z; };\t// { dg-warning \"'*this' capture only available with\" \"\" { target c++14_down } }\n-    auto i = [=] { return a + z; };\n+    auto i = [=] { return a + z; }; // { dg-warning \"implicit capture\" \"\" { target c++2a } }\n     auto j = [&] { return a + z; };\n     if (g () != 4 || h () != 5 || i () != 4 || j () != 4) abort ();\n   }\n@@ -39,7 +39,7 @@ struct B {\n     if (z != 0) abort ();\n     auto b = [this] { return &a; };\n     auto c = [*this] { return &a; };\t// { dg-warning \"'*this' capture only available with\" \"\" { target c++14_down } }\n-    auto d = [=] { return &a; };\n+    auto d = [=] { return &a; }; // { dg-warning \"implicit capture\" \"\" { target c++2a } }\n     auto e = [&] { return &a; };\n     if (b () != &a) abort ();\n     if (*b () != 9) abort ();\n@@ -51,7 +51,7 @@ struct B {\n     if (e () != &a) abort ();\n     auto g = [this] { return a + z; };\n     auto h = [*this] { return a + z; };\t// { dg-warning \"'*this' capture only available with\" \"\" { target c++14_down } }\n-    auto i = [=] { return a + z; };\n+    auto i = [=] { return a + z; }; // { dg-warning \"implicit capture\" \"\" { target c++2a } }\n     auto j = [&] { return a + z; };\n     if (g () != 9 || h () != 10 || i () != 9 || j () != 9) abort ();\n   }"}, {"sha": "f90cf5c18d442cccfc5d5f72233bb77a53d6c480", "filename": "gcc/testsuite/g++.dg/template/crash84.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash84.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e00dfa841f28206591d0276d83804fa6e2739dce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash84.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash84.C?ref=e00dfa841f28206591d0276d83804fa6e2739dce", "patch": "@@ -14,7 +14,7 @@ void\n foo ()\n {\n   a<int> a1; // OK\n-  a<int>::b<a,int> b1; // { dg-error \"template argument|converted constant\" }\n+  a<int>::b<a,int> b1; // { dg-error \"template argument|convert\" }\n }\n \n // { dg-prune-output \"invalid type in declaration\" }"}]}