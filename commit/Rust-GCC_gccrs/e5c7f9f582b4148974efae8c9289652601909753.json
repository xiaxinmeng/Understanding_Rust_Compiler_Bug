{"sha": "e5c7f9f582b4148974efae8c9289652601909753", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTVjN2Y5ZjU4MmI0MTQ4OTc0ZWZhZThjOTI4OTY1MjYwMTkwOTc1Mw==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2006-02-28T16:49:12Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2006-02-28T16:49:12Z"}, "message": "tree-chrec.c (chrec_convert_aggressive): Do not eliminate conversions where TYPE_MIN_VALUE/TYPE_MAX_VALUE do not cover...\n\n        * tree-chrec.c (chrec_convert_aggressive): Do not eliminate\n        conversions where TYPE_MIN_VALUE/TYPE_MAX_VALUE do not cover\n        the range allowed by TYPE_PRECISION.\n\nFrom-SVN: r111568", "tree": {"sha": "393da7d6a3e8965560f998f6bfda921dfff70f2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/393da7d6a3e8965560f998f6bfda921dfff70f2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5c7f9f582b4148974efae8c9289652601909753", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5c7f9f582b4148974efae8c9289652601909753", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5c7f9f582b4148974efae8c9289652601909753", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5c7f9f582b4148974efae8c9289652601909753/comments", "author": null, "committer": null, "parents": [{"sha": "ea45681a7a59fe9c8b2b3df10f403d21a49eebe9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea45681a7a59fe9c8b2b3df10f403d21a49eebe9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea45681a7a59fe9c8b2b3df10f403d21a49eebe9"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "7ba31346670429aa8907f6bfb5c158426db4d605", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5c7f9f582b4148974efae8c9289652601909753/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5c7f9f582b4148974efae8c9289652601909753/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e5c7f9f582b4148974efae8c9289652601909753", "patch": "@@ -1,5 +1,9 @@\n 2006-02-28  Jeff Law  <law@redhat.com>\n \n+\t* tree-chrec.c (chrec_convert_aggressive): Do not eliminate\n+\tconversions where TYPE_MIN_VALUE/TYPE_MAX_VALUE do not cover\n+\tthe range allowed by TYPE_PRECISION.\n+\n \t* tree.h (strct phi_arg_d): Remove unused NONZERO field.\n \n 2006-02-28  Dorit Nuzman  <dorit@il.ibm.com>"}, {"sha": "8edc5b9bbec0803354f9e2057d77d5c704b21ca5", "filename": "gcc/tree-chrec.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5c7f9f582b4148974efae8c9289652601909753/gcc%2Ftree-chrec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5c7f9f582b4148974efae8c9289652601909753/gcc%2Ftree-chrec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chrec.c?ref=e5c7f9f582b4148974efae8c9289652601909753", "patch": "@@ -1219,6 +1219,26 @@ chrec_convert_aggressive (tree type, tree chrec)\n   if (!rc)\n     rc = chrec_convert (type, right, NULL_TREE);\n \n+  /* Ada creates sub-types where TYPE_MIN_VALUE/TYPE_MAX_VALUE do not\n+     cover the entire range of values allowed by TYPE_PRECISION.\n+\n+     We do not want to optimize away conversions to such types.  Long\n+     term I'd rather see the Ada front-end fixed.  */\n+  if (INTEGRAL_TYPE_P (type))\n+    {\n+      tree t;\n+\n+      t = upper_bound_in_type (type, inner_type);\n+      if (! TYPE_MAX_VALUE (type)\n+\t  || ! operand_equal_p (TYPE_MAX_VALUE (type), t, 0))\n+\treturn NULL_TREE;\n+\n+      t = lower_bound_in_type (type, inner_type);\n+      if (! TYPE_MIN_VALUE (type)\n+\t  || ! operand_equal_p (TYPE_MIN_VALUE (type), t, 0))\n+\treturn NULL_TREE;\n+    }\n+  \n   return build_polynomial_chrec (CHREC_VARIABLE (chrec), lc, rc);\n }\n "}]}