{"sha": "0f9a757b73c328d9e29a8d872c0a3ed699efbfb5", "node_id": "C_kwDOANBUbNoAKDBmOWE3NTdiNzNjMzI4ZDllMjlhOGQ4NzJjMGEzZWQ2OTllZmJmYjU", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-04-18T12:38:22Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@embecosm.com", "date": "2023-05-05T11:56:07Z"}, "message": "ast: Add take_items() and set_items() methods for Item containers\n\nBoth the AST::Crate and AST::Module class are std::unique_ptr<AST::Item>\ncontainers, and may require spurious insertions in these containers,\nfor example when expanding a procedural macro, or in our case, escaping\nmacros through the #[macro_use] attribute. These functions allow you\nto replace *all* of the items contained in such a container.\n\ngcc/rust/ChangeLog:\n\n\t* ast/rust-ast.h: Add take_items() and set_items() method to Crate.\n\t* ast/rust-item.h: Add take_items() and set_items() method to Module.", "tree": {"sha": "8264cee79b251864b288add81df7095e3cd2ad76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8264cee79b251864b288add81df7095e3cd2ad76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f9a757b73c328d9e29a8d872c0a3ed699efbfb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f9a757b73c328d9e29a8d872c0a3ed699efbfb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f9a757b73c328d9e29a8d872c0a3ed699efbfb5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f9a757b73c328d9e29a8d872c0a3ed699efbfb5/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ff1e54d9769f20597fd1edbb71190f39c275efd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ff1e54d9769f20597fd1edbb71190f39c275efd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ff1e54d9769f20597fd1edbb71190f39c275efd"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "8b478f8a6c68c8113b9a6bb5f5e859287d04496e", "filename": "gcc/rust/ast/rust-ast.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f9a757b73c328d9e29a8d872c0a3ed699efbfb5/gcc%2Frust%2Fast%2Frust-ast.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f9a757b73c328d9e29a8d872c0a3ed699efbfb5/gcc%2Frust%2Fast%2Frust-ast.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast.h?ref=0f9a757b73c328d9e29a8d872c0a3ed699efbfb5", "patch": "@@ -1931,6 +1931,16 @@ struct Crate\n \n   NodeId get_node_id () const { return node_id; }\n   const std::vector<Attribute> &get_inner_attrs () const { return inner_attrs; }\n+\n+  std::vector<std::unique_ptr<AST::Item>> take_items ()\n+  {\n+    return std::move (items);\n+  }\n+\n+  void set_items (std::vector<std::unique_ptr<AST::Item>> &&new_items)\n+  {\n+    items = std::move (new_items);\n+  }\n };\n \n // Base path expression AST node - abstract"}, {"sha": "fa38b7da8f8f44330e141ca906393a169cd489d6", "filename": "gcc/rust/ast/rust-item.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f9a757b73c328d9e29a8d872c0a3ed699efbfb5/gcc%2Frust%2Fast%2Frust-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f9a757b73c328d9e29a8d872c0a3ed699efbfb5/gcc%2Frust%2Fast%2Frust-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-item.h?ref=0f9a757b73c328d9e29a8d872c0a3ed699efbfb5", "patch": "@@ -1114,6 +1114,16 @@ class Module : public VisItem\n   const std::vector<std::unique_ptr<Item>> &get_items () const { return items; }\n   std::vector<std::unique_ptr<Item>> &get_items () { return items; }\n \n+  std::vector<std::unique_ptr<AST::Item>> take_items ()\n+  {\n+    return std::move (items);\n+  }\n+\n+  void set_items (std::vector<std::unique_ptr<AST::Item>> &&new_items)\n+  {\n+    items = std::move (new_items);\n+  }\n+\n   // move constructors\n   Module (Module &&other) = default;\n   Module &operator= (Module &&other) = default;"}]}