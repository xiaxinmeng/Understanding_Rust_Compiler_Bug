{"sha": "2385b218b2157281f844a5f58239f15a6db49a33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM4NWIyMThiMjE1NzI4MWY4NDRhNWY1ODIzOWYxNWE2ZGI0OWEzMw==", "commit": {"author": {"name": "Greta Yorsh", "email": "greta.yorsh@arm.com", "date": "2013-04-05T17:13:54Z"}, "committer": {"name": "Greta Yorsh", "email": "gretay@gcc.gnu.org", "date": "2013-04-05T17:13:54Z"}, "message": "arm.md: Comment on splitting Thumb1 patterns.\n\n2013-04-05  Greta Yorsh  <Greta.Yorsh@arm.com>\n\n\t* config/arm/arm.md: Comment on splitting Thumb1 patterns.\n\nFrom-SVN: r197529", "tree": {"sha": "7d1f82849d2652f388a6ac662464ee17e5ca8dd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d1f82849d2652f388a6ac662464ee17e5ca8dd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2385b218b2157281f844a5f58239f15a6db49a33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2385b218b2157281f844a5f58239f15a6db49a33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2385b218b2157281f844a5f58239f15a6db49a33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2385b218b2157281f844a5f58239f15a6db49a33/comments", "author": null, "committer": null, "parents": [{"sha": "75fe1cb5dd734f87eb163b671cd69b2e3e4fd8ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75fe1cb5dd734f87eb163b671cd69b2e3e4fd8ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75fe1cb5dd734f87eb163b671cd69b2e3e4fd8ed"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "9e0e5c9542f70e7a0f46f76de6cd6a4b7e44c2a4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2385b218b2157281f844a5f58239f15a6db49a33/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2385b218b2157281f844a5f58239f15a6db49a33/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2385b218b2157281f844a5f58239f15a6db49a33", "patch": "@@ -1,3 +1,7 @@\n+2013-04-05  Greta Yorsh  <Greta.Yorsh@arm.com>\n+\n+\t* config/arm/arm.md: Comment on splitting Thumb1 patterns.\n+\n 2013-04-05  Greta Yorsh  <Greta.Yorsh@arm.com>\n \n \t* config/arm/arm.md (arm_smax_insn): Convert define_insn into"}, {"sha": "a1789a27c44ccf8550c994e9839efc0f1c0c3948", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2385b218b2157281f844a5f58239f15a6db49a33/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2385b218b2157281f844a5f58239f15a6db49a33/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=2385b218b2157281f844a5f58239f15a6db49a33", "patch": "@@ -22,6 +22,25 @@\n \n ;;- See file \"rtl.def\" for documentation on define_insn, match_*, et. al.\n \n+;; Beware of splitting Thumb1 patterns that output multiple\n+;; assembly instructions, in particular instruction such as SBC and\n+;; ADC which consume flags.  For example, in the pattern thumb_subdi3\n+;; below, the output SUB implicitly sets the flags (assembled to SUBS)\n+;; and then the Carry flag is used by SBC to compute the correct\n+;; result.  If we split thumb_subdi3 pattern into two separate RTL\n+;; insns (using define_insn_and_split), the scheduler might place\n+;; other RTL insns between SUB and SBC, possibly modifying the Carry\n+;; flag used by SBC.  This might happen because most Thumb1 patterns\n+;; for flag-setting instructions do not have explicit RTL for setting\n+;; or clobbering the flags.  Instead, they have the attribute \"conds\"\n+;; with value \"set\" or \"clob\".  However, this attribute is not used to\n+;; identify dependencies and therefore the scheduler might reorder\n+;; these instruction.  Currenly, this problem cannot happen because\n+;; there are no separate Thumb1 patterns for individual instruction\n+;; that consume flags (except conditional execution, which is treated\n+;; differently).  In particular there is no Thumb1 armv6-m pattern for\n+;; sbc or adc.\n+\n \f\n ;;---------------------------------------------------------------------------\n ;; Constants"}]}