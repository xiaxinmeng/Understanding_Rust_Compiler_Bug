{"sha": "41e7ac516e3f7976d062290bad1dcf25449f69b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFlN2FjNTE2ZTNmNzk3NmQwNjIyOTBiYWQxZGNmMjU0NDlmNjliMw==", "commit": {"author": {"name": "Basile Starynkevitch", "email": "basile@starynkevitch.net", "date": "2009-09-22T21:36:50Z"}, "committer": {"name": "Rafael Espindola", "email": "espindola@gcc.gnu.org", "date": "2009-09-22T21:36:50Z"}, "message": "gengtype.c (is_file_equal): New function.\n\n2009-09-22  Basile Starynkevitch  <basile@starynkevitch.net>\n            Rafael Avila de Espindola  <espindola@google.com>\n\n\t* gengtype.c (is_file_equal): New function.\n\t(close_output_files): Use is_file_equal. Free of->buf.\n\n\nCo-Authored-By: Rafael Avila de Espindola <espindola@google.com>\n\nFrom-SVN: r152049", "tree": {"sha": "af45ed3a0b306ce509214b3f296ebd22cb64e789", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af45ed3a0b306ce509214b3f296ebd22cb64e789"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41e7ac516e3f7976d062290bad1dcf25449f69b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41e7ac516e3f7976d062290bad1dcf25449f69b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41e7ac516e3f7976d062290bad1dcf25449f69b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41e7ac516e3f7976d062290bad1dcf25449f69b3/comments", "author": {"login": "bstarynk", "id": 90412, "node_id": "MDQ6VXNlcjkwNDEy", "avatar_url": "https://avatars.githubusercontent.com/u/90412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstarynk", "html_url": "https://github.com/bstarynk", "followers_url": "https://api.github.com/users/bstarynk/followers", "following_url": "https://api.github.com/users/bstarynk/following{/other_user}", "gists_url": "https://api.github.com/users/bstarynk/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstarynk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstarynk/subscriptions", "organizations_url": "https://api.github.com/users/bstarynk/orgs", "repos_url": "https://api.github.com/users/bstarynk/repos", "events_url": "https://api.github.com/users/bstarynk/events{/privacy}", "received_events_url": "https://api.github.com/users/bstarynk/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0182d01649c1bebd6d912bc87945f1f22d5ce601", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0182d01649c1bebd6d912bc87945f1f22d5ce601", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0182d01649c1bebd6d912bc87945f1f22d5ce601"}], "stats": {"total": 73, "additions": 45, "deletions": 28}, "files": [{"sha": "3a6c9cdc026ee9c2e52f4016659622cfa1bc0a68", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41e7ac516e3f7976d062290bad1dcf25449f69b3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41e7ac516e3f7976d062290bad1dcf25449f69b3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=41e7ac516e3f7976d062290bad1dcf25449f69b3", "patch": "@@ -1,3 +1,9 @@\n+2009-09-22  Basile Starynkevitch  <basile@starynkevitch.net>\n+            Rafael Avila de Espindola  <espindola@google.com>\n+\n+\t* gengtype.c (is_file_equal): New function.\n+\t(close_output_files): Use is_file_equal. Free of->buf.\n+\n 2009-09-22  Basile Starynkevitch  <basile@starynkevitch.net>\n             Rafael Avila de Espindola  <espindola@google.com>\n "}, {"sha": "7d7f9d190f30574b0e26109289b4463394cfc2e7", "filename": "gcc/gengtype.c", "status": "modified", "additions": 39, "deletions": 28, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41e7ac516e3f7976d062290bad1dcf25449f69b3/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41e7ac516e3f7976d062290bad1dcf25449f69b3/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=41e7ac516e3f7976d062290bad1dcf25449f69b3", "patch": "@@ -1794,6 +1794,32 @@ get_output_file_name (const char *input_file)\n   return NULL;\n }\n \n+/* Check if existing file is equal to the in memory buffer. */\n+\n+static bool\n+is_file_equal (outf_p of)\n+{\n+  FILE *newfile = fopen (of->name, \"r\");\n+  size_t i;\n+  bool equal;\n+  if (newfile == NULL)\n+    return false;\n+\n+  equal = true;\n+  for (i = 0; i < of->bufused; i++)\n+    {\n+      int ch;\n+      ch = fgetc (newfile);\n+      if (ch == EOF || ch != (unsigned char) of->buf[i])\n+\t{\n+\t  equal = false;\n+\t  break;\n+\t}\n+    }\n+  fclose (newfile);\n+  return equal;\n+}\n+\n /* Copy the output to its final destination,\n    but don't unnecessarily change modification times.  */\n \n@@ -1804,35 +1830,20 @@ close_output_files (void)\n \n   for (of = output_files; of; of = of->next)\n     {\n-      FILE * newfile;\n \n-      newfile = fopen (of->name, \"r\");\n-      if (newfile != NULL )\n-\t{\n-\t  int no_write_p;\n-\t  size_t i;\n-\n-\t  for (i = 0; i < of->bufused; i++)\n-\t    {\n-\t      int ch;\n-\t      ch = fgetc (newfile);\n-\t      if (ch == EOF || ch != (unsigned char) of->buf[i])\n-\t\tbreak;\n-\t    }\n-\t  no_write_p = i == of->bufused && fgetc (newfile) == EOF;\n-\t  fclose (newfile);\n-\n-\t  if (no_write_p)\n-\t    continue;\n-\t}\n-\n-      newfile = fopen (of->name, \"w\");\n-      if (newfile == NULL)\n-\tfatal (\"opening output file %s: %s\", of->name, strerror (errno));\n-      if (fwrite (of->buf, 1, of->bufused, newfile) != of->bufused)\n-\tfatal (\"writing output file %s: %s\", of->name, strerror (errno));\n-      if (fclose (newfile) != 0)\n-\tfatal (\"closing output file %s: %s\", of->name, strerror (errno));\n+      if (!is_file_equal(of))\n+      {\n+        FILE *newfile = fopen (of->name, \"w\");\n+        if (newfile == NULL)\n+          fatal (\"opening output file %s: %s\", of->name, strerror (errno));\n+        if (fwrite (of->buf, 1, of->bufused, newfile) != of->bufused)\n+          fatal (\"writing output file %s: %s\", of->name, strerror (errno));\n+        if (fclose (newfile) != 0)\n+          fatal (\"closing output file %s: %s\", of->name, strerror (errno));\n+      }\n+      free(of->buf);\n+      of->buf = NULL;\n+      of->bufused = of->buflength = 0;\n     }\n }\n \f"}]}