{"sha": "58b2d87ea1d03d56e220e2cabfbee11561ea05c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThiMmQ4N2VhMWQwM2Q1NmUyMjBlMmNhYmZiZWUxMTU2MWVhMDVjNA==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2015-11-02T23:23:28Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2015-11-02T23:23:28Z"}, "message": "Rename make_restrict_var_constraints to make_param_constraints\n\n2015-11-03  Tom de Vries  <tom@codesourcery.com>\n\n\t* tree-ssa-structalias.c (make_restrict_var_constraints): Rename to ...\n\t(make_param_constraints): ... this.  Add and handle restrict_name\n\tparameter.  Handle is_full_var case.\n\t(intra_create_variable_infos): Use make_param_constraints.\n\nFrom-SVN: r229684", "tree": {"sha": "d72e8d913a1350ee8951c1892c09f2c79b5dab5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d72e8d913a1350ee8951c1892c09f2c79b5dab5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58b2d87ea1d03d56e220e2cabfbee11561ea05c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58b2d87ea1d03d56e220e2cabfbee11561ea05c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58b2d87ea1d03d56e220e2cabfbee11561ea05c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58b2d87ea1d03d56e220e2cabfbee11561ea05c4/comments", "author": null, "committer": null, "parents": [{"sha": "b9ae50844f64b039a9acae261b535c9a7a8b6020", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9ae50844f64b039a9acae261b535c9a7a8b6020", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9ae50844f64b039a9acae261b535c9a7a8b6020"}], "stats": {"total": 40, "additions": 21, "deletions": 19}, "files": [{"sha": "3613a68543e7141f920a698d947457803ba458f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b2d87ea1d03d56e220e2cabfbee11561ea05c4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b2d87ea1d03d56e220e2cabfbee11561ea05c4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=58b2d87ea1d03d56e220e2cabfbee11561ea05c4", "patch": "@@ -1,3 +1,10 @@\n+2015-11-03  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* tree-ssa-structalias.c (make_restrict_var_constraints): Rename to ...\n+\t(make_param_constraints): ... this.  Add and handle restrict_name\n+\tparameter.  Handle is_full_var case.\n+\t(intra_create_variable_infos): Use make_param_constraints.\n+\n 2015-11-03  Tom de Vries  <tom@codesourcery.com>\n \n \t* tree-ssa-structalias.c (make_restrict_var_constraints): Replace"}, {"sha": "ded5a1e2ac765981edf91b10fef9a26bbf498305", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 14, "deletions": 19, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b2d87ea1d03d56e220e2cabfbee11561ea05c4/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b2d87ea1d03d56e220e2cabfbee11561ea05c4/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=58b2d87ea1d03d56e220e2cabfbee11561ea05c4", "patch": "@@ -5879,19 +5879,22 @@ debug_solution_for_var (unsigned int var)\n   dump_solution_for_var (stderr, var);\n }\n \n-/* Register the constraints for restrict var VI.  */\n+/* Register the constraints for function parameter related VI.  Use RESTRICT_NAME\n+   as the base name of created restrict vars.  */\n \n static void\n-make_restrict_var_constraints (varinfo_t vi)\n+make_param_constraints (varinfo_t vi, const char *restrict_name)\n {\n   for (; vi; vi = vi_next (vi))\n-    if (vi->may_have_pointers)\n-      {\n-\tif (vi->only_restrict_pointers)\n-\t  make_constraint_from_global_restrict (vi, \"GLOBAL_RESTRICT\", true);\n-\telse\n-\t  make_constraint_from (vi, nonlocal_id);\n-      }\n+    {\n+      if (vi->only_restrict_pointers)\n+\tmake_constraint_from_global_restrict (vi, restrict_name, true);\n+      else if (vi->may_have_pointers)\n+\tmake_constraint_from (vi, nonlocal_id);\n+\n+      if (vi->is_full_var)\n+\tbreak;\n+    }\n }\n \n /* Create varinfo structures for all of the variables in the\n@@ -5928,19 +5931,11 @@ intra_create_variable_infos (struct function *fn)\n \t  vi->is_restrict_var = 1;\n \t  insert_vi_for_tree (heapvar, vi);\n \t  make_constraint_from (p, vi->id);\n-\t  make_restrict_var_constraints (vi);\n+\t  make_param_constraints (vi, \"GLOBAL_RESTRICT\");\n \t  continue;\n \t}\n \n-      for (; p; p = vi_next (p))\n-\t{\n-\t  if (p->only_restrict_pointers)\n-\t    make_constraint_from_global_restrict (p, \"PARM_RESTRICT\", true);\n-\t  else if (p->may_have_pointers)\n-\t    make_constraint_from (p, nonlocal_id);\n-\t  if (p->is_full_var)\n-\t    break;\n-\t}\n+      make_param_constraints (p, \"PARM_RESTRICT\");\n     }\n \n   /* Add a constraint for a result decl that is passed by reference.  */"}]}