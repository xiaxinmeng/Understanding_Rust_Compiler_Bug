{"sha": "2f69f684f3367f585a0f73e4308dc2449295a076", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY2OWY2ODRmMzM2N2Y1ODVhMGY3M2U0MzA4ZGMyNDQ5Mjk1YTA3Ng==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2007-04-16T13:46:54Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2007-04-16T13:46:54Z"}, "message": "TaggedComponentHelper.java (read): Use read_octet_array(), not read().\n\n2007-04-16  Andrew Haley  <aph@redhat.com>\n\n        * org/omg/IOP/TaggedComponentHelper.java (read): Use\n        read_octet_array(), not read().\n        (write): Use write_octet_array(), not write().\n\n        * org/omg/PortableServer/Servant.java (_get_delegate): Throw if no\n        delegate has been set.\n\n        * javax/management/ObjectName.java serialVersionUID: Declare.\n        Make all fields transient.\n        (parse): Break out from constructor.\n        (writeObject, readObject): New methods.\n\nFrom-SVN: r123864", "tree": {"sha": "25fb8793c54fb29772fd31b47d57b85b5d092932", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25fb8793c54fb29772fd31b47d57b85b5d092932"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f69f684f3367f585a0f73e4308dc2449295a076", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f69f684f3367f585a0f73e4308dc2449295a076", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f69f684f3367f585a0f73e4308dc2449295a076", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f69f684f3367f585a0f73e4308dc2449295a076/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8dd58f012c09e98c63fe50d08f0e6e82edcc4270", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dd58f012c09e98c63fe50d08f0e6e82edcc4270", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dd58f012c09e98c63fe50d08f0e6e82edcc4270"}], "stats": {"total": 117, "additions": 88, "deletions": 29}, "files": [{"sha": "fabbb9779204ff14bcb7e209002b35ba18cb68a1", "filename": "libjava/classpath/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f69f684f3367f585a0f73e4308dc2449295a076/libjava%2Fclasspath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f69f684f3367f585a0f73e4308dc2449295a076/libjava%2Fclasspath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog?ref=2f69f684f3367f585a0f73e4308dc2449295a076", "patch": "@@ -1,3 +1,17 @@\n+2007-04-16  Andrew Haley  <aph@redhat.com>\n+\n+\t* org/omg/IOP/TaggedComponentHelper.java (read): Use\n+\tread_octet_array(), not read().\n+\t(write): Use write_octet_array(), not write().\n+\n+\t* org/omg/PortableServer/Servant.java (_get_delegate): Throw if no\n+\tdelegate has been set.\n+\n+\t* javax/management/ObjectName.java serialVersionUID: Declare.\n+\tMake all fields transient.\n+\t(parse): Break out from constructor.\n+\t(writeObject, readObject): New methods.\n+\n 2007-04-02  Keith Seitz  <keiths@redhat.com>\n \n \t* gnu/classpath/jdwp/event/ThreadStartEvent.java (Event):"}, {"sha": "0ddfb8ee6ad8eff3d558c81a8947894a112af2a6", "filename": "libjava/classpath/javax/management/ObjectName.java", "status": "modified", "additions": 65, "deletions": 5, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f69f684f3367f585a0f73e4308dc2449295a076/libjava%2Fclasspath%2Fjavax%2Fmanagement%2FObjectName.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f69f684f3367f585a0f73e4308dc2449295a076/libjava%2Fclasspath%2Fjavax%2Fmanagement%2FObjectName.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fmanagement%2FObjectName.java?ref=2f69f684f3367f585a0f73e4308dc2449295a076", "patch": "@@ -45,6 +45,11 @@\n import java.util.Map;\n import java.util.TreeMap;\n \n+import java.io.IOException;\n+import java.io.InvalidObjectException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+\n /**\n  * <p>\n  * An {@link ObjectName} instance represents the name of a management\n@@ -97,30 +102,32 @@\n   implements Serializable, QueryExp\n {\n \n+  private static final long serialVersionUID = 1081892073854801359L;\n+\n   /**\n    * The domain of the name.\n    */\n-  private String domain;\n+  private transient String domain;\n \n   /**\n    * The properties, as key-value pairs.\n    */\n-  private TreeMap<String,String> properties = new TreeMap<String,String>();\n+  private transient TreeMap<String,String> properties;\n \n   /**\n    * The properties as a string (stored for ordering).\n    */\n-  private String propertyListString;\n+  private transient String propertyListString;\n \n   /**\n    * True if this object name is a property pattern.\n    */\n-  private boolean propertyPattern;\n+  private transient boolean propertyPattern;\n \n   /**\n    * The management server associated with this object name.\n    */\n-  private MBeanServer server;\n+  private transient MBeanServer server;\n \n   /**\n    * Constructs an {@link ObjectName} instance from the given string,\n@@ -145,12 +152,23 @@ public ObjectName(String name)\n   {\n     if (name.length() == 0)\n       name = \"*:*\";\n+    parse(name);\n+  }\n+\n+  /**\n+   * Parse the name in the same form as the constructor.  Used by\n+   * readObject().\n+   */\n \n+  private void parse(String name)\n+    throws MalformedObjectNameException\n+  {\n     int domainSep = name.indexOf(':');\n     if (domainSep == -1)\n       throw new MalformedObjectNameException(\"No domain separator was found.\");\n     domain = name.substring(0, domainSep);\n     String rest = name.substring(domainSep + 1);\n+    properties = new TreeMap<String,String>();\n     if (rest.equals(\"*\"))\n       propertyPattern = true;\n     else\n@@ -199,6 +217,7 @@ public ObjectName(String domain, String key, String value)\n     throws MalformedObjectNameException\n   {\n     this.domain = domain;\n+    properties = new TreeMap<String,String>();\n     properties.put(key, value);\n     checkComponents();\n   }\n@@ -221,6 +240,7 @@ public ObjectName(String domain, Hashtable<String,String> properties)\n     throws MalformedObjectNameException\n   {\n     this.domain = domain;\n+    this.properties = new TreeMap<String,String>();\n     this.properties.putAll(properties);\n     checkComponents();\n   }\n@@ -741,6 +761,46 @@ public String toString()\n     return getCanonicalName();\n   }\n \n+\n+  /**\n+   * Serialization methods.  The serialized form is the same as the\n+   * string parsed by the constructor.\n+   */\n+\n+  private void writeObject(ObjectOutputStream out)\n+    throws IOException\n+  {\n+    out.defaultWriteObject();\n+    StringBuffer buffer = new StringBuffer(getDomain());\n+    buffer.append(':');\n+    String properties = getKeyPropertyListString();\n+    buffer.append(properties);\n+    if (isPropertyPattern())\n+      {\n+\tif (properties.length() == 0)\n+\t  buffer.append(\"*\");\n+\telse\n+\t  buffer.append(\",*\");\n+      }\n+    out.writeObject(buffer.toString());\n+  }\n+\n+  private void readObject(ObjectInputStream in) \n+    throws IOException, ClassNotFoundException\n+   {\n+     in.defaultReadObject();\n+     String objectName = (String)in.readObject();\n+     try\n+       {\n+         parse(objectName);\n+       }\n+     catch (MalformedObjectNameException x)\n+       {\n+         throw new InvalidObjectException(x.toString());\n+       }\n+   }\n+\n+\n   /**\n    * Unquotes the supplied string.  The quotation marks are removed as\n    * are the backslashes preceding the escaped characters ('\"', '?',"}, {"sha": "55090c74673c43ff54496fd700ca9b7c62294993", "filename": "libjava/classpath/org/omg/IOP/TaggedComponentHelper.java", "status": "modified", "additions": 4, "deletions": 24, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f69f684f3367f585a0f73e4308dc2449295a076/libjava%2Fclasspath%2Forg%2Fomg%2FIOP%2FTaggedComponentHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f69f684f3367f585a0f73e4308dc2449295a076/libjava%2Fclasspath%2Forg%2Fomg%2FIOP%2FTaggedComponentHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Forg%2Fomg%2FIOP%2FTaggedComponentHelper.java?ref=2f69f684f3367f585a0f73e4308dc2449295a076", "patch": "@@ -136,18 +136,9 @@ public static TaggedComponent read(InputStream input)\n   {\n     TaggedComponent value = new TaggedComponent();\n     value.tag = input.read_long();\n-    value.component_data = new byte[input.read_long()];\n-    try\n-      {\n-        input.read(value.component_data);\n-      }\n-    catch (IOException e)\n-      {\n-        MARSHAL m = new MARSHAL();\n-        m.minor = Minor.Encapsulation;\n-        m.initCause(e);\n-        throw m;\n-      }\n+    int length = input.read_long();\n+    value.component_data = new byte[length];\n+    input.read_octet_array(value.component_data, 0, length);\n     return value;\n   }\n \n@@ -163,17 +154,6 @@ public static void write(OutputStream output, TaggedComponent value)\n   {\n     output.write_long(value.tag);\n     output.write_long(value.component_data.length);\n-\n-    try\n-      {\n-        output.write(value.component_data);\n-      }\n-    catch (IOException e)\n-      {\n-        MARSHAL m = new MARSHAL();\n-        m.minor = Minor.Encapsulation;\n-        m.initCause(e);\n-        throw m;\n-      }\n+    output.write_octet_array(value.component_data, 0, value.component_data.length);\n   }\n }\n\\ No newline at end of file"}, {"sha": "fcb2cdd6a3c2b94ad2e68e6386497e8cfcf940d0", "filename": "libjava/classpath/org/omg/PortableServer/Servant.java", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f69f684f3367f585a0f73e4308dc2449295a076/libjava%2Fclasspath%2Forg%2Fomg%2FPortableServer%2FServant.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f69f684f3367f585a0f73e4308dc2449295a076/libjava%2Fclasspath%2Forg%2Fomg%2FPortableServer%2FServant.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Forg%2Fomg%2FPortableServer%2FServant.java?ref=2f69f684f3367f585a0f73e4308dc2449295a076", "patch": "@@ -39,6 +39,7 @@\n package org.omg.PortableServer;\n \n import org.omg.CORBA.BAD_OPERATION;\n+import org.omg.CORBA.BAD_INV_ORDER;\n import org.omg.CORBA.NO_IMPLEMENT;\n import org.omg.CORBA.OBJECT_NOT_EXIST;\n import org.omg.CORBA.ORB;\n@@ -109,6 +110,10 @@\n    */\n   public final Delegate _get_delegate()\n   {\n+    if (delegate == null) {\n+      throw new BAD_INV_ORDER\n+\t(\"The Servant has not been associated with an ORBinstance\");\n+    }\n     return delegate;\n   }\n "}]}