{"sha": "7ce56fc84562ebfb63d295dd6c471a8736d2694d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NlNTZmYzg0NTYyZWJmYjYzZDI5NWRkNmM0NzFhODczNmQyNjk0ZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2014-06-23T22:12:31Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-06-23T22:12:31Z"}, "message": "any (any_v1): Rename namespace to fundamentals_v1.\n\n\t* include/experimental/any (any_v1): Rename namespace to\n\tfundamentals_v1. Change string returned by bad_any_cast::what().\n\t* include/experimental/optional (fundamentals_v1): Add namespace.\n\t* include/experimental/string_view (fundamentals_v1): Likewise.\n\t* testsuite/experimental/any/typedefs.cc: New.\n\t* testsuite/experimental/optional/typedefs.cc: New.\n\t* testsuite/experimental/string_view/typedefs.cc: New.\n\nFrom-SVN: r211920", "tree": {"sha": "d7290199dcf0835cffc3741866d690b219d1916a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7290199dcf0835cffc3741866d690b219d1916a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ce56fc84562ebfb63d295dd6c471a8736d2694d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ce56fc84562ebfb63d295dd6c471a8736d2694d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ce56fc84562ebfb63d295dd6c471a8736d2694d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ce56fc84562ebfb63d295dd6c471a8736d2694d/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47c80ef5ab8fe002c4166b9e77ab945dd35be841", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47c80ef5ab8fe002c4166b9e77ab945dd35be841", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47c80ef5ab8fe002c4166b9e77ab945dd35be841"}], "stats": {"total": 120, "additions": 117, "deletions": 3}, "files": [{"sha": "d3c01f55d9afb2d100777d28e7c3d54958adc676", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ce56fc84562ebfb63d295dd6c471a8736d2694d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ce56fc84562ebfb63d295dd6c471a8736d2694d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7ce56fc84562ebfb63d295dd6c471a8736d2694d", "patch": "@@ -4,6 +4,7 @@\n \t* include/std/chrono (_Checked_integral_constant): Allow zero.\n \t* testsuite/20_util/duration/literals/values.cc: Test non-positive\n \tvalues and digit separators.\n+\t* include/experimental/any \n \n \tPR libstdc++/61532\n \t* testsuite/20_util/make_signed/requirements/typedefs-1.cc: Do not\n@@ -14,6 +15,14 @@\n \t* testsuite/20_util/make_unsigned/requirements/typedefs-2.cc:\n \tLikewise.\n \n+\t* include/experimental/any (any_v1): Rename namespace to\n+\tfundamentals_v1. Change string returned by bad_any_cast::what().\n+\t* include/experimental/optional (fundamentals_v1): Add namespace.\n+\t* include/experimental/string_view (fundamentals_v1): Likewise.\n+\t* testsuite/experimental/any/typedefs.cc: New.\n+\t* testsuite/experimental/optional/typedefs.cc: New.\n+\t* testsuite/experimental/string_view/typedefs.cc: New.\n+\n 2014-06-18  Paolo Carlini  <paolo.carlini@oracle.com>\n \t    Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n "}, {"sha": "643fc23584884538774b6f5e071a78ea5932e15b", "filename": "libstdc++-v3/include/experimental/any", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ce56fc84562ebfb63d295dd6c471a8736d2694d/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fany", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ce56fc84562ebfb63d295dd6c471a8736d2694d/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fany", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fany?ref=7ce56fc84562ebfb63d295dd6c471a8736d2694d", "patch": "@@ -47,7 +47,7 @@ namespace std _GLIBCXX_VISIBILITY(default)\n {\n namespace experimental\n {\n-inline namespace any_v1\n+inline namespace fundamentals_v1\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n@@ -68,7 +68,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   class bad_any_cast : public bad_cast\n   {\n   public:\n-    virtual const char* what() const noexcept { return \"bad_any_cast\"; }\n+    virtual const char* what() const noexcept { return \"bad any_cast\"; }\n   };\n \n   [[gnu::noreturn]] inline void __throw_bad_any_cast()\n@@ -604,7 +604,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   // @} group any\n _GLIBCXX_END_NAMESPACE_VERSION\n-} // namespace any_v1\n+} // namespace fundamentals_v1\n } // namespace experimental\n } // namespace std\n "}, {"sha": "c68d7ea3808a513c1e741bb6ed3402767b05ee54", "filename": "libstdc++-v3/include/experimental/optional", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ce56fc84562ebfb63d295dd6c471a8736d2694d/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Foptional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ce56fc84562ebfb63d295dd6c471a8736d2694d/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Foptional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Foptional?ref=7ce56fc84562ebfb63d295dd6c471a8736d2694d", "patch": "@@ -52,6 +52,8 @@ namespace std _GLIBCXX_VISIBILITY(default)\n {\n namespace experimental\n {\n+inline namespace fundamentals_v1\n+{\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n@@ -797,6 +799,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   // @} group optional\n _GLIBCXX_END_NAMESPACE_VERSION\n+} // namespace fundamentals_v1\n }\n \n   // [X.Y.12]"}, {"sha": "4b1a10789c312791f3fd9253cbe7e11315115cf5", "filename": "libstdc++-v3/include/experimental/string_view", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ce56fc84562ebfb63d295dd6c471a8736d2694d/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring_view", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ce56fc84562ebfb63d295dd6c471a8736d2694d/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring_view", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring_view?ref=7ce56fc84562ebfb63d295dd6c471a8736d2694d", "patch": "@@ -46,6 +46,8 @@ namespace std _GLIBCXX_VISIBILITY(default)\n {\n namespace experimental\n {\n+inline namespace fundamentals_v1\n+{\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n@@ -582,6 +584,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #endif\n \n _GLIBCXX_END_NAMESPACE_VERSION\n+} // namespace fundamentals_v1\n } // namespace experimental\n \n "}, {"sha": "a3f364d78f9eac41b03236f42927298d81c527d4", "filename": "libstdc++-v3/testsuite/experimental/any/typedefs.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ce56fc84562ebfb63d295dd6c471a8736d2694d/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fany%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ce56fc84562ebfb63d295dd6c471a8736d2694d/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fany%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fany%2Ftypedefs.cc?ref=7ce56fc84562ebfb63d295dd6c471a8736d2694d", "patch": "@@ -0,0 +1,30 @@\n+// { dg-options \"-std=gnu++14\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a moved_to of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <experimental/any>\n+#include <type_traits>\n+#include <typeinfo>\n+\n+using check1_t = std::experimental::fundamentals_v1::any;\n+using check2_t = std::experimental::fundamentals_v1::bad_any_cast;\n+\n+static_assert(std::is_base_of<std::bad_cast, check2_t>::value,\n+\t      \"bad_any_cast must derive from bad_cast\");\n+"}, {"sha": "2dee878c219811019c468af14eda47c0248629e5", "filename": "libstdc++-v3/testsuite/experimental/optional/typedefs.cc", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ce56fc84562ebfb63d295dd6c471a8736d2694d/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Foptional%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ce56fc84562ebfb63d295dd6c471a8736d2694d/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Foptional%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Foptional%2Ftypedefs.cc?ref=7ce56fc84562ebfb63d295dd6c471a8736d2694d", "patch": "@@ -0,0 +1,33 @@\n+// { dg-options \"-std=gnu++14\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a moved_to of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <experimental/optional>\n+#include <type_traits>\n+#include <stdexcept>\n+\n+template<typename T>\n+  using check1_t = std::experimental::fundamentals_v1::optional<T>;\n+\n+using check2_t = std::experimental::fundamentals_v1::in_place_t;\n+using check3_t = std::experimental::fundamentals_v1::nullopt_t;\n+using check4_t = std::experimental::fundamentals_v1::bad_optional_access;\n+\n+static_assert(std::is_base_of<std::logic_error, check4_t>::value,\n+\t      \"bad_optional_access must derive from logic_error\");"}, {"sha": "f148a1729e67ffd29ade9148ca0f513c7815525e", "filename": "libstdc++-v3/testsuite/experimental/string_view/typedefs.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ce56fc84562ebfb63d295dd6c471a8736d2694d/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ce56fc84562ebfb63d295dd6c471a8736d2694d/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Ftypedefs.cc?ref=7ce56fc84562ebfb63d295dd6c471a8736d2694d", "patch": "@@ -0,0 +1,36 @@\n+// { dg-options \"-std=gnu++14\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a moved_to of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <experimental/string_view>\n+\n+template<typename C, typename T>\n+  using check1_t = std::experimental::fundamentals_v1::basic_string_view<C, T>;\n+\n+using check2_t = std::experimental::fundamentals_v1::string_view;\n+\n+#ifdef _GLIBCXX_USE_C99_STDINT_TR1\n+using check3_t = std::experimental::fundamentals_v1::u16string_view;\n+using check4_t = std::experimental::fundamentals_v1::u32string_view;\n+#endif\n+\n+#ifdef _GLIBCXX_USE_WCHAR_T\n+using check5_t = std::experimental::fundamentals_v1::wstring_view;\n+#endif\n+"}]}