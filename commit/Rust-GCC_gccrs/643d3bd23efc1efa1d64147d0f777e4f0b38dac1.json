{"sha": "643d3bd23efc1efa1d64147d0f777e4f0b38dac1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQzZDNiZDIzZWZjMWVmYTFkNjQxNDdkMGY3NzdlNGYwYjM4ZGFjMQ==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2004-03-24T18:03:46Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2004-03-24T18:03:46Z"}, "message": "Makefile.in (STRICT2_WARN): Reorder.\n\n2004-03-24  Nathanael Nerode  <neroden@gcc.gnu.org>\n\n\t* Makefile.in (STRICT2_WARN): Reorder.\n\t* configure.ac: Check for -Wold-style-definition, and use it\n\tin strict1_warn if it's available.\n\t* configure: Regnerate.\n\nFrom-SVN: r79922", "tree": {"sha": "cf57e5398fd7fe424fc50528e9ff56c55109223f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf57e5398fd7fe424fc50528e9ff56c55109223f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/643d3bd23efc1efa1d64147d0f777e4f0b38dac1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/643d3bd23efc1efa1d64147d0f777e4f0b38dac1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/643d3bd23efc1efa1d64147d0f777e4f0b38dac1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/643d3bd23efc1efa1d64147d0f777e4f0b38dac1/comments", "author": null, "committer": null, "parents": [{"sha": "5848830fc3e626e6aa12c7f31620817b114b9b28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5848830fc3e626e6aa12c7f31620817b114b9b28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5848830fc3e626e6aa12c7f31620817b114b9b28"}], "stats": {"total": 82, "additions": 79, "deletions": 3}, "files": [{"sha": "63b98481716ba71f68b70fc486159369371c26ca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/643d3bd23efc1efa1d64147d0f777e4f0b38dac1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/643d3bd23efc1efa1d64147d0f777e4f0b38dac1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=643d3bd23efc1efa1d64147d0f777e4f0b38dac1", "patch": "@@ -1,3 +1,10 @@\n+2004-03-24  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* Makefile.in (STRICT2_WARN): Reorder.\n+\t* configure.ac: Check for -Wold-style-definition, and use it\n+\tin strict1_warn if it's available.\n+\t* configure: Regnerate.\n+\n 2004-03-24  Paul Brook  <paul@nowt.org>\n \n \t* config.gcc <arm>: Add --with-abi="}, {"sha": "95f04975f44efbb8a57e76d2004751f5c4b031f2", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/643d3bd23efc1efa1d64147d0f777e4f0b38dac1/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/643d3bd23efc1efa1d64147d0f777e4f0b38dac1/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=643d3bd23efc1efa1d64147d0f777e4f0b38dac1", "patch": "@@ -163,8 +163,8 @@ coverageexts = .{gcda,gcno}\n # -Wno-variadic-macros.\n LOOSE_WARN = -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes\n STRICT_WARN = @strict1_warn@\n-STRICT2_WARN = -pedantic -Wno-long-long -Wold-style-definition \\\n-  -Wno-variadic-macros @WERROR@\n+STRICT2_WARN = -pedantic -Wno-long-long -Wno-variadic-macros \\\n+  -Wold-style-definition @WERROR@\n \n # This is set by --enable-checking.  The idea is to catch forgotten\n # \"extern\" tags in header files."}, {"sha": "54fac9706c9f0d94171547fab1d8b1a7339fa62e", "filename": "gcc/configure", "status": "modified", "additions": 55, "deletions": 1, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/643d3bd23efc1efa1d64147d0f777e4f0b38dac1/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/643d3bd23efc1efa1d64147d0f777e4f0b38dac1/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=643d3bd23efc1efa1d64147d0f777e4f0b38dac1", "patch": "@@ -3840,6 +3840,60 @@ if test $ac_cv_prog_cc_w_no_long_long = yes \\\n fi\n \n \n+# Add -Wold-style-definition if it's accepted\n+echo \"$as_me:$LINENO: checking whether ${CC} accepts -Wold-style-definition\" >&5\n+echo $ECHO_N \"checking whether ${CC} accepts -Wold-style-definition... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_cc_w_old_style_definition+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  save_CFLAGS=\"$CFLAGS\"\n+  CFLAGS=\"-Wold-style-definition\"\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_prog_cc_w_old_style_definition=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_cv_prog_cc_w_old_style_definition=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+  CFLAGS=\"$save_CFLAGS\"\n+\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_prog_cc_w_old_style_definition\" >&5\n+echo \"${ECHO_T}$ac_cv_prog_cc_w_old_style_definition\" >&6\n+if test $ac_cv_prog_cc_w_old_style_definition = yes ; then\n+  strict1_warn=\"${strict1_warn} -Wold-style-definition\"\n+fi\n+\n # If the native compiler is GCC, we can enable warnings even in stage1.\n # That's useful for people building cross-compilers, or just running a\n # quick `make'.\n@@ -5193,7 +5247,7 @@ if test \"${gcc_cv_prog_makeinfo_modern+set}\" = set; then\n else\n     ac_prog_version=`$MAKEINFO --version 2>&1 |\n                    sed -n 's/^.*GNU texinfo.* \\([0-9][0-9.]*\\).*$/\\1/p'`\n-  echo \"configure:5196: version of makeinfo is $ac_prog_version\" >&5\n+  echo \"configure:5250: version of makeinfo is $ac_prog_version\" >&5\n   case $ac_prog_version in\n     '')     gcc_cv_prog_makeinfo_modern=no;;\n     4.[2-9]*)"}, {"sha": "7a4f79056628df06e544fe8dd7208aafead8ddec", "filename": "gcc/configure.ac", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/643d3bd23efc1efa1d64147d0f777e4f0b38dac1/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/643d3bd23efc1efa1d64147d0f777e4f0b38dac1/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=643d3bd23efc1efa1d64147d0f777e4f0b38dac1", "patch": "@@ -331,6 +331,21 @@ if test $ac_cv_prog_cc_w_no_long_long = yes \\\n fi\n AC_SUBST(strict1_warn)\n \n+# Add -Wold-style-definition if it's accepted\n+AC_CACHE_CHECK(\n+  [whether ${CC} accepts -Wold-style-definition],\n+  [ac_cv_prog_cc_w_old_style_definition],\n+  [save_CFLAGS=\"$CFLAGS\"\n+  CFLAGS=\"-Wold-style-definition\"\n+  AC_COMPILE_IFELSE([AC_LANG_SOURCE([[]])],\n+                    [ac_cv_prog_cc_w_old_style_definition=yes],\n+                    [ac_cv_prog_cc_w_old_style_definition=no])\n+  CFLAGS=\"$save_CFLAGS\"\n+  ])\n+if test $ac_cv_prog_cc_w_old_style_definition = yes ; then\n+  strict1_warn=\"${strict1_warn} -Wold-style-definition\"\n+fi\n+\n # If the native compiler is GCC, we can enable warnings even in stage1.  \n # That's useful for people building cross-compilers, or just running a\n # quick `make'."}]}