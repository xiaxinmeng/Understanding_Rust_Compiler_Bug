{"sha": "fc8bc1753dbf100f1de181992d80f559061711d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM4YmMxNzUzZGJmMTAwZjFkZTE4MTk5MmQ4MGY1NTkwNjE3MTFkNg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2008-03-28T22:13:17Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2008-03-28T22:13:17Z"}, "message": "re PR fortran/35699 (run-time abort writing zero sized section to direct access file)\n\n2008-03-28  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libfortran/35699\n\t* io/transfer.c (write_buf):  Don't pad the record, just return if the\n\tdata is NULL.  (next_record_w): If there are bytes left in the record\n\tfor unformatted direct I/O, pad out the record with zero bytes.\n\nFrom-SVN: r133699", "tree": {"sha": "1879a1c6f152773ff9b1ee3b67a6ce9462c387ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1879a1c6f152773ff9b1ee3b67a6ce9462c387ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc8bc1753dbf100f1de181992d80f559061711d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc8bc1753dbf100f1de181992d80f559061711d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc8bc1753dbf100f1de181992d80f559061711d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc8bc1753dbf100f1de181992d80f559061711d6/comments", "author": null, "committer": null, "parents": [{"sha": "ad387dad232e58945fc3a1dadc3bd29459d945a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad387dad232e58945fc3a1dadc3bd29459d945a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad387dad232e58945fc3a1dadc3bd29459d945a0"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "9e10c90b7e42c3db6ec50245bbe8ab0b59440df5", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc8bc1753dbf100f1de181992d80f559061711d6/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc8bc1753dbf100f1de181992d80f559061711d6/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=fc8bc1753dbf100f1de181992d80f559061711d6", "patch": "@@ -1,3 +1,10 @@\n+2008-03-28  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/35699\n+\t* io/transfer.c (write_buf):  Don't pad the record, just return if the\n+\tdata is NULL.  (next_record_w): If there are bytes left in the record\n+\tfor unformatted direct I/O, pad out the record with zero bytes.\n+\n 2008-03-28  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/35721"}, {"sha": "dc80fc33f9e04143f6eb5379e981391e7ad342b3", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc8bc1753dbf100f1de181992d80f559061711d6/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc8bc1753dbf100f1de181992d80f559061711d6/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=fc8bc1753dbf100f1de181992d80f559061711d6", "patch": "@@ -639,12 +639,7 @@ write_buf (st_parameter_dt *dtp, void *buf, size_t nbytes)\n \t}\n \n       if (buf == NULL && nbytes == 0)\n-\t{\n-\t   char *p;\n-\t   p = write_block (dtp, dtp->u.p.current_unit->recl);\n-\t   memset (p, 0, dtp->u.p.current_unit->recl);\n-\t   return SUCCESS;\n-\t}\n+\treturn SUCCESS;\n \n       if (swrite (dtp->u.p.current_unit->s, buf, &nbytes) != 0)\n \t{\n@@ -2493,6 +2488,13 @@ next_record_w (st_parameter_dt *dtp, int done)\n       break;\n \n     case UNFORMATTED_DIRECT:\n+      if (dtp->u.p.current_unit->bytes_left > 0)\n+\t{\n+\t  length = (int) dtp->u.p.current_unit->bytes_left;\n+\t  p = salloc_w (dtp->u.p.current_unit->s, &length);\n+\t  memset (p, 0, length);\n+\t}\n+\n       if (sfree (dtp->u.p.current_unit->s) == FAILURE)\n \tgoto io_error;\n       break;"}]}