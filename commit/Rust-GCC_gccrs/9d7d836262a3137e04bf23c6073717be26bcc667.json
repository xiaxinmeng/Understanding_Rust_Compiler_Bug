{"sha": "9d7d836262a3137e04bf23c6073717be26bcc667", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQ3ZDgzNjI2MmEzMTM3ZTA0YmYyM2M2MDczNzE3YmUyNmJjYzY2Nw==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@redhat.com", "date": "2001-07-31T22:20:05Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2001-07-31T22:20:05Z"}, "message": "[multiple changes]\n\n2001-07-18  Alexandre Petit-Bianco  <apbianco@redhat.com>\n\n\t* parse.y (create_interface): Avoid cyclic inheritance report when\n\tsyntax error encountered during class definition.\n\tFixes PR java/2956\n\n2001-07-17  Alexandre Petit-Bianco  <apbianco@redhat.com>\n\n\t* parse.h (INTERFACE_INNER_MODIFIERS): Disallow `private.'\n\t* parse.y (check_class_interface_creation): Allow `private' if the\n\tenclosing is not an interface.\n\t(create_interface): Interface tagged public if the enclosing\n\tcontext\tis an interface.\n\t(create_class): Class tagged public if the enclosing context\n\tis an interface.\n\tFixes PR java/2959\n\n2001-07-17  Alexandre Petit-Bianco  <apbianco@redhat.com>\n\n\t* class.c (push_class): Set DECL_SIZE to `integer_zero_node.'\n\tFixes PR java/2665\n\n2001-07-13  Alexandre Petit-Bianco  <apbianco@redhat.com>\n\n\t* parse.y (java_complete_lsh): Set CAN_COMPLETE_NORMALLY and unset\n\tTREE_CONSTANT_OVERFLOW of CASE_EXPR value.\n\tFixes PR java/3602\n\n(http://gcc.gnu.org/ml/gcc-patches/2001-07/msg02297.html )\n\nFrom-SVN: r44524", "tree": {"sha": "c1431312dd508cf15c33d179d6327cc406656347", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1431312dd508cf15c33d179d6327cc406656347"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d7d836262a3137e04bf23c6073717be26bcc667", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d7d836262a3137e04bf23c6073717be26bcc667", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d7d836262a3137e04bf23c6073717be26bcc667", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d7d836262a3137e04bf23c6073717be26bcc667/comments", "author": null, "committer": null, "parents": [{"sha": "6d0f55e6bc86ecc0a8f227ade76ec0d224e6e1ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d0f55e6bc86ecc0a8f227ade76ec0d224e6e1ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d0f55e6bc86ecc0a8f227ade76ec0d224e6e1ef"}], "stats": {"total": 69, "additions": 64, "deletions": 5}, "files": [{"sha": "a694743e6ce67fb7aac14b4d2303abd2d2c1cd80", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d7d836262a3137e04bf23c6073717be26bcc667/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d7d836262a3137e04bf23c6073717be26bcc667/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=9d7d836262a3137e04bf23c6073717be26bcc667", "patch": "@@ -1,3 +1,9 @@\n+2001-07-18  Alexandre Petit-Bianco  <apbianco@redhat.com>\n+\n+\t* parse.y (create_interface): Avoid cyclic inheritance report when\n+\tsyntax error encountered during class definition.\n+\tFixes PR java/2956\n+\n 2001-07-18  Tom Tromey  <tromey@redhat.com>\n \n \tFor PR java/2812:\n@@ -7,10 +13,32 @@\n \t* Make-lang.in (jc1$(exeext)): Link against LIBICONV.\n \t(jv-scan$(exeext)): Likewise.\n \n+2001-07-17  Alexandre Petit-Bianco  <apbianco@redhat.com>\n+\n+\t* parse.h (INTERFACE_INNER_MODIFIERS): Disallow `private.'\n+\t* parse.y (check_class_interface_creation): Allow `private' if the\n+\tenclosing is not an interface.\n+\t(create_interface): Interface tagged public if the enclosing\n+\tcontext\tis an interface.\n+\t(create_class): Class tagged public if the enclosing context\n+\tis an interface.\n+\tFixes PR java/2959\n+\n+2001-07-17  Alexandre Petit-Bianco  <apbianco@redhat.com>\n+\n+\t* class.c (push_class): Set DECL_SIZE to `integer_zero_node.'\n+\tFixes PR java/2665\n+\n 2001-07-14  Tim Josling  <tej@melbpc.org.au>\n \n \t* check-init.c (check_init): Remove references to EXPON_EXPR.\n \n+2001-07-13  Alexandre Petit-Bianco  <apbianco@redhat.com>\n+\n+\t* parse.y (java_complete_lsh): Set CAN_COMPLETE_NORMALLY and unset\n+\tTREE_CONSTANT_OVERFLOW of CASE_EXPR value.\n+\tFixes PR java/3602\n+\n 2001-07-13  Tom Tromey  <tromey@redhat.com>\n \n \t* jvspec.c (jvgenmain_spec): Remove -ffilelist-file from cc1"}, {"sha": "3b56f53ff51f4202722347b7b531eccc0bcc80cc", "filename": "gcc/java/class.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d7d836262a3137e04bf23c6073717be26bcc667/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d7d836262a3137e04bf23c6073717be26bcc667/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=9d7d836262a3137e04bf23c6073717be26bcc667", "patch": "@@ -331,6 +331,10 @@ push_class (class_type, class_name)\n   input_filename = IDENTIFIER_POINTER (source_name);\n   lineno = 0;\n   decl = build_decl (TYPE_DECL, class_name, class_type);\n+\n+  /* dbxout needs a DECL_SIZE if in gstabs mode */\n+  DECL_SIZE (decl) = integer_zero_node;\n+\n   input_filename = save_input_filename;\n   lineno = save_lineno;\n   signature = identifier_subst (class_name, \"L\", '.', '/', \";\");"}, {"sha": "a47e017ed4efcf43961d179aa22167332ce462f3", "filename": "gcc/java/parse.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d7d836262a3137e04bf23c6073717be26bcc667/gcc%2Fjava%2Fparse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d7d836262a3137e04bf23c6073717be26bcc667/gcc%2Fjava%2Fparse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.h?ref=9d7d836262a3137e04bf23c6073717be26bcc667", "patch": "@@ -79,7 +79,7 @@ extern tree stabilize_reference PARAMS ((tree));\n #define METHOD_MODIFIERS ACC_PUBLIC|ACC_PROTECTED|ACC_PRIVATE|ACC_ABSTRACT| \\\n \t\t\t ACC_STATIC|ACC_FINAL|ACC_SYNCHRONIZED|ACC_NATIVE\n #define INTERFACE_MODIFIERS ACC_PUBLIC|ACC_ABSTRACT\n-#define INTERFACE_INNER_MODIFIERS ACC_PUBLIC|ACC_PROTECTED|ACC_PRIVATE|ACC_ABSTRACT|ACC_STATIC\n+#define INTERFACE_INNER_MODIFIERS ACC_PUBLIC|ACC_PROTECTED|ACC_ABSTRACT|ACC_STATIC\n #define INTERFACE_METHOD_MODIFIERS ACC_PUBLIC|ACC_ABSTRACT\n #define INTERFACE_FIELD_MODIFIERS ACC_PUBLIC|ACC_STATIC|ACC_FINAL\n "}, {"sha": "1fb08bcd343e04d34dd034cea13d9a19f4e5ac3c", "filename": "gcc/java/parse.y", "status": "modified", "additions": 31, "deletions": 4, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d7d836262a3137e04bf23c6073717be26bcc667/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d7d836262a3137e04bf23c6073717be26bcc667/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=9d7d836262a3137e04bf23c6073717be26bcc667", "patch": "@@ -3450,7 +3450,9 @@ check_class_interface_creation (is_interface, flags, raw_name, qualified_name, d\n       else\n \t{\n \t  check_modifiers_consistency (flags);\n-\t  icaf = ACC_PRIVATE|ACC_PROTECTED;\n+\t  icaf = ACC_PROTECTED;\n+\t  if (! CLASS_INTERFACE (GET_CPC ()))\n+\t    icaf |= ACC_PRIVATE;\n \t}\n     }\n \n@@ -3738,6 +3740,11 @@ create_interface (flags, id, super)\n   tree q_name = parser_qualified_classname (raw_name);\n   tree decl = IDENTIFIER_CLASS_VALUE (q_name);\n \n+  /* Certain syntax errors are making SUPER be like ID. Avoid this\n+     case. */\n+  if (ctxp->class_err && id == super)\n+    super = NULL;\n+\n   EXPR_WFL_NODE (id) = q_name;\t/* Keep source location, even if refined. */\n \n   /* Basic checks: scope, redefinition, modifiers */ \n@@ -3750,7 +3757,12 @@ create_interface (flags, id, super)\n   /* Suspend the current parsing context if we're parsing an inner\n      interface */\n   if (CPC_INNER_P ())\n-    java_parser_context_suspend ();\n+    {\n+      java_parser_context_suspend ();\n+      /* Interface members are public. */\n+      if (CLASS_INTERFACE (GET_CPC ()))\n+\tflags |= ACC_PUBLIC;\n+    }\n \n   /* Push a new context for (static) initialized upon declaration fields */\n   java_parser_context_push_initialized_field ();\n@@ -3870,6 +3882,11 @@ create_class (flags, id, super, interfaces)\n   tree class_id, decl;\n   tree super_decl_type;\n \n+  /* Certain syntax errors are making SUPER be like ID. Avoid this\n+     case. */\n+  if (ctxp->class_err && id == super)\n+    super = NULL;\n+\n   class_id = parser_qualified_classname (raw_name);\n   decl = IDENTIFIER_CLASS_VALUE (class_id);\n   EXPR_WFL_NODE (id) = class_id;\n@@ -3884,7 +3901,13 @@ create_class (flags, id, super, interfaces)\n   /* Suspend the current parsing context if we're parsing an inner\n      class or an anonymous class. */\n   if (CPC_INNER_P ())\n-    java_parser_context_suspend ();\n+    {\n+      java_parser_context_suspend ();\n+      /* Interface members are public. */\n+      if (CLASS_INTERFACE (GET_CPC ()))\n+\tflags |= ACC_PUBLIC;\n+    }\n+    \n   /* Push a new context for (static) initialized upon declaration fields */\n   java_parser_context_push_initialized_field ();\n \n@@ -7336,7 +7359,9 @@ java_reorder_fields ()\n \t  }\n       }\n     }\n-  stop_reordering = TREE_TYPE (TREE_VALUE (gclass_list));\n+  /* There are cases were gclass_list will be empty. */\n+  if (gclass_list)\n+    stop_reordering = TREE_TYPE (TREE_VALUE (gclass_list));\n }\n \n /* Layout the methods of all classes loaded in one way or another.\n@@ -11367,6 +11392,8 @@ java_complete_lhs (node)\n \t}\n \n       cn = fold (convert (int_type_node, cn));\n+      TREE_CONSTANT_OVERFLOW (cn) = 0;\n+      CAN_COMPLETE_NORMALLY (cn) = 1;\n \n       /* Multiple instance of a case label bearing the same\n \t value is checked during code generation. The case"}]}