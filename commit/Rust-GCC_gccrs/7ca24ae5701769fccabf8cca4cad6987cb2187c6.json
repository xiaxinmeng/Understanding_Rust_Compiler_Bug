{"sha": "7ca24ae5701769fccabf8cca4cad6987cb2187c6", "node_id": "C_kwDOANBUbNoAKDdjYTI0YWU1NzAxNzY5ZmNjYWJmOGNjYTRjYWQ2OTg3Y2IyMTg3YzY", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-03-09T08:12:38Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-03-09T08:12:38Z"}, "message": "simplify-rtx: Fix up SUBREG_PROMOTED_SET arguments [PR104839]\n\nThe following testcase is miscompiled on powerpc64le-linux at -O1 and higher\n(except for -Og).  The bug was introduced in r12-3252-gcad36f38576a6a7\nwhich for SIGN_EXTEND from SUBREG_PROMOTED_SIGNED_P SUBREG used\nSUBREG_PROMOTED_SET (temp, 1) (but that makes temp\nSUBREG_PROMOTED_UNSIGNED_P because SRP_UNSIGNED is 1) and similarly the\nZERO_EXTEND from SUBREG_PROMOTED_UNSIGNED_P SUBREG used\nSUBREG_PROMOTED_SET (temp, 0) (but that makes temp\nSUBREG_PROMOTED_SIGNED_P because SRP_SIGNED is 0).\nThe following patch fixes that (swaps the 0s and 1s), but for better\nreadability uses the SRP_* constants.\nrtl.h has:\n/* Valid for subregs which are SUBREG_PROMOTED_VAR_P().  In that case\n   this gives the necessary extensions:\n   0  - signed (SPR_SIGNED)\n   1  - normal unsigned (SPR_UNSIGNED)\n   2  - value is both sign and unsign extended for mode\n        (SPR_SIGNED_AND_UNSIGNED).\n   -1 - pointer unsigned, which most often can be handled like unsigned\n        extension, except for generating instructions where we need to\n        emit special code (ptr_extend insns) on some architectures\n        (SPR_POINTER). */\nThe expr.c change in the same commit looks ok to me (passes unsignedp\nto SUBREG_PROMOTED_SET, so 0 for signed, 1 for unsigned).\n\n2022-03-09  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR rtl-optimization/104839\n\t* simplify-rtx.cc (simplify_unary_operation_1) <case SIGN_EXTEND>:\n\tUse SRP_SIGNED instead of incorrect 1 in SUBREG_PROMOTED_SET.\n\t(simplify_unary_operation_1) <case ZERO_EXTEND>: Use SRP_UNSIGNED\n\tinstead of incorrect 0 in SUBREG_PROMOTED_SET.\n\n\t* gcc.c-torture/execute/pr104839.c: New test.", "tree": {"sha": "2596d7fb224db1f714201c41a41fe0a5d91f1c32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2596d7fb224db1f714201c41a41fe0a5d91f1c32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ca24ae5701769fccabf8cca4cad6987cb2187c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ca24ae5701769fccabf8cca4cad6987cb2187c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ca24ae5701769fccabf8cca4cad6987cb2187c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ca24ae5701769fccabf8cca4cad6987cb2187c6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ab70a4a5c2d5a9ffb923f13b1c3b938c60dd0f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ab70a4a5c2d5a9ffb923f13b1c3b938c60dd0f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ab70a4a5c2d5a9ffb923f13b1c3b938c60dd0f0"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "5d4939c92068877cca8d91def32cb5f902acaabb", "filename": "gcc/simplify-rtx.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ca24ae5701769fccabf8cca4cad6987cb2187c6/gcc%2Fsimplify-rtx.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ca24ae5701769fccabf8cca4cad6987cb2187c6/gcc%2Fsimplify-rtx.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.cc?ref=7ca24ae5701769fccabf8cca4cad6987cb2187c6", "patch": "@@ -1527,7 +1527,7 @@ simplify_context::simplify_unary_operation_1 (rtx_code code, machine_mode mode,\n \t\t  if (partial_subreg_p (temp))\n \t\t    {\n \t\t      SUBREG_PROMOTED_VAR_P (temp) = 1;\n-\t\t      SUBREG_PROMOTED_SET (temp, 1);\n+\t\t      SUBREG_PROMOTED_SET (temp, SRP_SIGNED);\n \t\t    }\n \t\t  return temp;\n \t\t}\n@@ -1662,7 +1662,7 @@ simplify_context::simplify_unary_operation_1 (rtx_code code, machine_mode mode,\n \t\t  if (partial_subreg_p (temp))\n \t\t    {\n \t\t      SUBREG_PROMOTED_VAR_P (temp) = 1;\n-\t\t      SUBREG_PROMOTED_SET (temp, 0);\n+\t\t      SUBREG_PROMOTED_SET (temp, SRP_UNSIGNED);\n \t\t    }\n \t\t  return temp;\n \t\t}"}, {"sha": "1703df64083c9fb37a69b143e9993fc6b678c856", "filename": "gcc/testsuite/gcc.c-torture/execute/pr104839.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ca24ae5701769fccabf8cca4cad6987cb2187c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr104839.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ca24ae5701769fccabf8cca4cad6987cb2187c6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr104839.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr104839.c?ref=7ca24ae5701769fccabf8cca4cad6987cb2187c6", "patch": "@@ -0,0 +1,37 @@\n+/* PR rtl-optimization/104839 */\n+\n+__attribute__((noipa)) short\n+foo (void)\n+{\n+  return -1;\n+}\n+\n+__attribute__((noipa)) int\n+bar (void)\n+{\n+  short i = foo ();\n+  if (i == -2)\n+    return 2;\n+  long k = i;\n+  int j = -1;\n+  volatile long s = 300;\n+  if (k < 0)\n+    {\n+      k += s;\n+      if (k < 0)\n+\tj = 0;\n+    }\n+  else if (k >= s)\n+    j = 0;\n+  if (j != -1)\n+    return 1;\n+  return 0;\n+}\n+\n+int\n+main ()\n+{\n+  if (bar () != 0)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}