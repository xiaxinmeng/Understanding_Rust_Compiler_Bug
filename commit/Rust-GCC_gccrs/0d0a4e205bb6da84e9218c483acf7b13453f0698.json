{"sha": "0d0a4e205bb6da84e9218c483acf7b13453f0698", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQwYTRlMjA1YmI2ZGE4NGU5MjE4YzQ4M2FjZjdiMTM0NTNmMDY5OA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2018-07-31T14:21:51Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-07-31T14:21:51Z"}, "message": "[09/46] Add vec_info::lookup_single_use\n\nThis patch adds a helper function for seeing whether there is a single\nuser of an SSA name, and whether that user has a stmt_vec_info.\n\n2018-07-31  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* tree-vectorizer.h (vec_info::lookup_single_use): Declare.\n\t* tree-vectorizer.c (vec_info::lookup_single_use): New function.\n\t* tree-vect-loop.c (vectorizable_reduction): Use it instead of\n\ta single_imm_use-based sequence.\n\t* tree-vect-stmts.c (supportable_widening_operation): Likewise.\n\nFrom-SVN: r263124", "tree": {"sha": "1ca4973bd7c74cc1e5bda94fe35cba4da262da40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ca4973bd7c74cc1e5bda94fe35cba4da262da40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d0a4e205bb6da84e9218c483acf7b13453f0698", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d0a4e205bb6da84e9218c483acf7b13453f0698", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d0a4e205bb6da84e9218c483acf7b13453f0698", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d0a4e205bb6da84e9218c483acf7b13453f0698/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c98d05955ba54fcdbae37f2a9e81b8cca6f1ca59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c98d05955ba54fcdbae37f2a9e81b8cca6f1ca59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c98d05955ba54fcdbae37f2a9e81b8cca6f1ca59"}], "stats": {"total": 63, "additions": 41, "deletions": 22}, "files": [{"sha": "a00fad889f5e57e14c946952a6fe7f9b37adcf3d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d0a4e205bb6da84e9218c483acf7b13453f0698/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d0a4e205bb6da84e9218c483acf7b13453f0698/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d0a4e205bb6da84e9218c483acf7b13453f0698", "patch": "@@ -1,3 +1,11 @@\n+2018-07-31  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* tree-vectorizer.h (vec_info::lookup_single_use): Declare.\n+\t* tree-vectorizer.c (vec_info::lookup_single_use): New function.\n+\t* tree-vect-loop.c (vectorizable_reduction): Use it instead of\n+\ta single_imm_use-based sequence.\n+\t* tree-vect-stmts.c (supportable_widening_operation): Likewise.\n+\n 2018-07-31  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* tree-vectorizer.h (vec_info::lookup_def): Declare."}, {"sha": "4fe3e1dc5fce054746fd99ef590258abb09f5460", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d0a4e205bb6da84e9218c483acf7b13453f0698/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d0a4e205bb6da84e9218c483acf7b13453f0698/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=0d0a4e205bb6da84e9218c483acf7b13453f0698", "patch": "@@ -6138,6 +6138,7 @@ vectorizable_reduction (gimple *stmt, gimple_stmt_iterator *gsi,\n \n   if (gimple_code (stmt) == GIMPLE_PHI)\n     {\n+      tree phi_result = gimple_phi_result (stmt);\n       /* Analysis is fully done on the reduction stmt invocation.  */\n       if (! vec_stmt)\n \t{\n@@ -6158,7 +6159,8 @@ vectorizable_reduction (gimple *stmt, gimple_stmt_iterator *gsi,\n       if (STMT_VINFO_IN_PATTERN_P (vinfo_for_stmt (reduc_stmt)))\n \treduc_stmt = STMT_VINFO_RELATED_STMT (vinfo_for_stmt (reduc_stmt));\n \n-      if (STMT_VINFO_VEC_REDUCTION_TYPE (vinfo_for_stmt (reduc_stmt))\n+      stmt_vec_info reduc_stmt_info = vinfo_for_stmt (reduc_stmt);\n+      if (STMT_VINFO_VEC_REDUCTION_TYPE (reduc_stmt_info)\n \t  == EXTRACT_LAST_REDUCTION)\n \t/* Leave the scalar phi in place.  */\n \treturn true;\n@@ -6185,15 +6187,12 @@ vectorizable_reduction (gimple *stmt, gimple_stmt_iterator *gsi,\n       else\n \tncopies = vect_get_num_copies (loop_vinfo, vectype_in);\n \n-      use_operand_p use_p;\n-      gimple *use_stmt;\n+      stmt_vec_info use_stmt_info;\n       if (ncopies > 1\n-\t  && (STMT_VINFO_RELEVANT (vinfo_for_stmt (reduc_stmt))\n-\t      <= vect_used_only_live)\n-\t  && single_imm_use (gimple_phi_result (stmt), &use_p, &use_stmt)\n-\t  && (use_stmt == reduc_stmt\n-\t      || (STMT_VINFO_RELATED_STMT (vinfo_for_stmt (use_stmt))\n-\t\t  == reduc_stmt)))\n+\t  && STMT_VINFO_RELEVANT (reduc_stmt_info) <= vect_used_only_live\n+\t  && (use_stmt_info = loop_vinfo->lookup_single_use (phi_result))\n+\t  && (use_stmt_info == reduc_stmt_info\n+\t      || STMT_VINFO_RELATED_STMT (use_stmt_info) == reduc_stmt))\n \tsingle_defuse_cycle = true;\n \n       /* Create the destination vector  */\n@@ -6955,13 +6954,13 @@ vectorizable_reduction (gimple *stmt, gimple_stmt_iterator *gsi,\n    This only works when we see both the reduction PHI and its only consumer\n    in vectorizable_reduction and there are no intermediate stmts\n    participating.  */\n-  use_operand_p use_p;\n-  gimple *use_stmt;\n+  stmt_vec_info use_stmt_info;\n+  tree reduc_phi_result = gimple_phi_result (reduc_def_stmt);\n   if (ncopies > 1\n       && (STMT_VINFO_RELEVANT (stmt_info) <= vect_used_only_live)\n-      && single_imm_use (gimple_phi_result (reduc_def_stmt), &use_p, &use_stmt)\n-      && (use_stmt == stmt\n-\t  || STMT_VINFO_RELATED_STMT (vinfo_for_stmt (use_stmt)) == stmt))\n+      && (use_stmt_info = loop_vinfo->lookup_single_use (reduc_phi_result))\n+      && (use_stmt_info == stmt_info\n+\t  || STMT_VINFO_RELATED_STMT (use_stmt_info) == stmt))\n     {\n       single_defuse_cycle = true;\n       epilog_copies = 1;"}, {"sha": "f21599ea3aab30fa6f0ab506919ef3f5451d145d", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d0a4e205bb6da84e9218c483acf7b13453f0698/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d0a4e205bb6da84e9218c483acf7b13453f0698/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=0d0a4e205bb6da84e9218c483acf7b13453f0698", "patch": "@@ -10310,14 +10310,11 @@ supportable_widening_operation (enum tree_code code, gimple *stmt,\n              same operation.  One such an example is s += a * b, where elements\n              in a and b cannot be reordered.  Here we check if the vector defined\n              by STMT is only directly used in the reduction statement.  */\n-          tree lhs = gimple_assign_lhs (stmt);\n-          use_operand_p dummy;\n-          gimple *use_stmt;\n-          stmt_vec_info use_stmt_info = NULL;\n-          if (single_imm_use (lhs, &dummy, &use_stmt)\n-              && (use_stmt_info = vinfo_for_stmt (use_stmt))\n-              && STMT_VINFO_DEF_TYPE (use_stmt_info) == vect_reduction_def)\n-            return true;\n+\t  tree lhs = gimple_assign_lhs (stmt);\n+\t  stmt_vec_info use_stmt_info = loop_info->lookup_single_use (lhs);\n+\t  if (use_stmt_info\n+\t      && STMT_VINFO_DEF_TYPE (use_stmt_info) == vect_reduction_def)\n+\t    return true;\n         }\n       c1 = VEC_WIDEN_MULT_LO_EXPR;\n       c2 = VEC_WIDEN_MULT_HI_EXPR;"}, {"sha": "2640aab1ca06dd1c5d4149b3c7e45d7c4deb8e9e", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d0a4e205bb6da84e9218c483acf7b13453f0698/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d0a4e205bb6da84e9218c483acf7b13453f0698/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=0d0a4e205bb6da84e9218c483acf7b13453f0698", "patch": "@@ -548,6 +548,20 @@ vec_info::lookup_def (tree name)\n   return NULL;\n }\n \n+/* See whether there is a single non-debug statement that uses LHS and\n+   whether that statement has an associated stmt_vec_info.  Return the\n+   stmt_vec_info if so, otherwise return null.  */\n+\n+stmt_vec_info\n+vec_info::lookup_single_use (tree lhs)\n+{\n+  use_operand_p dummy;\n+  gimple *use_stmt;\n+  if (single_imm_use (lhs, &dummy, &use_stmt))\n+    return lookup_stmt (use_stmt);\n+  return NULL;\n+}\n+\n /* A helper function to free scev and LOOP niter information, as well as\n    clear loop constraint LOOP_C_FINITE.  */\n "}, {"sha": "cbec2fbdc1dacbb7d0f7186952357a0279b32cbd", "filename": "gcc/tree-vectorizer.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d0a4e205bb6da84e9218c483acf7b13453f0698/gcc%2Ftree-vectorizer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d0a4e205bb6da84e9218c483acf7b13453f0698/gcc%2Ftree-vectorizer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.h?ref=0d0a4e205bb6da84e9218c483acf7b13453f0698", "patch": "@@ -220,6 +220,7 @@ struct vec_info {\n   stmt_vec_info add_stmt (gimple *);\n   stmt_vec_info lookup_stmt (gimple *);\n   stmt_vec_info lookup_def (tree);\n+  stmt_vec_info lookup_single_use (tree);\n \n   /* The type of vectorization.  */\n   vec_kind kind;"}]}