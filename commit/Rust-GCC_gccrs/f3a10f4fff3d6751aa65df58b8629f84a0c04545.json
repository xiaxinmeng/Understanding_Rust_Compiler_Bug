{"sha": "f3a10f4fff3d6751aa65df58b8629f84a0c04545", "node_id": "C_kwDOANBUbNoAKGYzYTEwZjRmZmYzZDY3NTFhYTY1ZGY1OGI4NjI5Zjg0YTBjMDQ1NDU", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-01T01:47:33Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-03T06:57:38Z"}, "message": "RISC-V: Fix constraint bug for binary operation\n\nCurrent constraint configuration will generate:\nvadd.vv v0,v24,v25,v0.t\nvsll.vx v0,v24,a5,v0.t\n\nThey are incorrect according to RVV ISA.\nThis patch fix this obvious issue.\n\ngcc/ChangeLog:\n\n\t* config/riscv/vector-iterators.md (sll.vi): Fix constraint bug.\n\t(sll.vv): Ditto.\n\t(%3,%4): Ditto.\n\t(%3,%v4): Ditto.\n\t* config/riscv/vector.md: Ditto.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/rvv/base/binop_vv_constraint-1.c:\n\t* gcc.target/riscv/rvv/base/shift_vx_constraint-1.c:", "tree": {"sha": "debe353dea71c282a70b93f520713c1742995e1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/debe353dea71c282a70b93f520713c1742995e1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3a10f4fff3d6751aa65df58b8629f84a0c04545", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3a10f4fff3d6751aa65df58b8629f84a0c04545", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3a10f4fff3d6751aa65df58b8629f84a0c04545", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3a10f4fff3d6751aa65df58b8629f84a0c04545/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8bd2c5f22eaa96b703531c41f7c2e6685d43584", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8bd2c5f22eaa96b703531c41f7c2e6685d43584", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8bd2c5f22eaa96b703531c41f7c2e6685d43584"}], "stats": {"total": 144, "additions": 75, "deletions": 69}, "files": [{"sha": "4f9799ade054b9149229f4939d0cef1c49943cd6", "filename": "gcc/config/riscv/vector-iterators.md", "status": "modified", "additions": 43, "deletions": 43, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3a10f4fff3d6751aa65df58b8629f84a0c04545/gcc%2Fconfig%2Friscv%2Fvector-iterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3a10f4fff3d6751aa65df58b8629f84a0c04545/gcc%2Fconfig%2Friscv%2Fvector-iterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fvector-iterators.md?ref=f3a10f4fff3d6751aa65df58b8629f84a0c04545", "patch": "@@ -229,42 +229,42 @@\n \t\t\t(umod \"register_operand\")])\n \n (define_code_attr binop_rhs1_constraint [\n-\t\t\t(plus \"vr,vr,vr\")\n-\t\t\t(minus \"vr,vr,vi\")\n-\t\t\t(ior \"vr,vr,vr\")\n-\t\t\t(xor \"vr,vr,vr\")\n-\t\t\t(and \"vr,vr,vr\")\n-\t\t\t(ashift \"vr,vr,vr\")\n-\t\t\t(ashiftrt \"vr,vr,vr\")\n-\t\t\t(lshiftrt \"vr,vr,vr\")\n-\t\t\t(smin \"vr,vr,vr\")\n-\t\t\t(smax \"vr,vr,vr\")\n-\t\t\t(umin \"vr,vr,vr\")\n-\t\t\t(umax \"vr,vr,vr\")\n-\t\t\t(mult \"vr,vr,vr\")\n-\t\t\t(div \"vr,vr,vr\")\n-\t\t\t(mod \"vr,vr,vr\")\n-\t\t\t(udiv \"vr,vr,vr\")\n-\t\t\t(umod \"vr,vr,vr\")])\n+\t\t\t(plus \"vr,vr,vr,vr,vr,vr\")\n+\t\t\t(minus \"vr,vr,vr,vr,vi,vi\")\n+\t\t\t(ior \"vr,vr,vr,vr,vr,vr\")\n+\t\t\t(xor \"vr,vr,vr,vr,vr,vr\")\n+\t\t\t(and \"vr,vr,vr,vr,vr,vr\")\n+\t\t\t(ashift \"vr,vr,vr,vr,vr,vr\")\n+\t\t\t(ashiftrt \"vr,vr,vr,vr,vr,vr\")\n+\t\t\t(lshiftrt \"vr,vr,vr,vr,vr,vr\")\n+\t\t\t(smin \"vr,vr,vr,vr,vr,vr\")\n+\t\t\t(smax \"vr,vr,vr,vr,vr,vr\")\n+\t\t\t(umin \"vr,vr,vr,vr,vr,vr\")\n+\t\t\t(umax \"vr,vr,vr,vr,vr,vr\")\n+\t\t\t(mult \"vr,vr,vr,vr,vr,vr\")\n+\t\t\t(div \"vr,vr,vr,vr,vr,vr\")\n+\t\t\t(mod \"vr,vr,vr,vr,vr,vr\")\n+\t\t\t(udiv \"vr,vr,vr,vr,vr,vr\")\n+\t\t\t(umod \"vr,vr,vr,vr,vr,vr\")])\n \n (define_code_attr binop_rhs2_constraint [\n-\t\t\t(plus \"vr,vi,vr\")\n-\t\t\t(minus \"vr,vj,vr\")\n-\t\t\t(ior \"vr,vi,vr\")\n-\t\t\t(xor \"vr,vi,vr\")\n-\t\t\t(and \"vr,vi,vr\")\n-\t\t\t(ashift \"vr,vk,vr\")\n-\t\t\t(ashiftrt \"vr,vk,vr\")\n-\t\t\t(lshiftrt \"vr,vk,vr\")\n-\t\t\t(smin \"vr,vr,vr\")\n-\t\t\t(smax \"vr,vr,vr\")\n-\t\t\t(umin \"vr,vr,vr\")\n-\t\t\t(umax \"vr,vr,vr\")\n-\t\t\t(mult \"vr,vr,vr\")\n-\t\t\t(div \"vr,vr,vr\")\n-\t\t\t(mod \"vr,vr,vr\")\n-\t\t\t(udiv \"vr,vr,vr\")\n-\t\t\t(umod \"vr,vr,vr\")])\n+\t\t\t(plus \"vr,vr,vi,vi,vr,vr\")\n+\t\t\t(minus \"vr,vr,vj,vj,vr,vr\")\n+\t\t\t(ior \"vr,vr,vi,vi,vr,vr\")\n+\t\t\t(xor \"vr,vr,vi,vi,vr,vr\")\n+\t\t\t(and \"vr,vr,vi,vi,vr,vr\")\n+\t\t\t(ashift \"vr,vr,vk,vk,vr,vr\")\n+\t\t\t(ashiftrt \"vr,vr,vk,vk,vr,vr\")\n+\t\t\t(lshiftrt \"vr,vr,vk,vk,vr,vr\")\n+\t\t\t(smin \"vr,vr,vr,vr,vr,vr\")\n+\t\t\t(smax \"vr,vr,vr,vr,vr,vr\")\n+\t\t\t(umin \"vr,vr,vr,vr,vr,vr\")\n+\t\t\t(umax \"vr,vr,vr,vr,vr,vr\")\n+\t\t\t(mult \"vr,vr,vr,vr,vr,vr\")\n+\t\t\t(div \"vr,vr,vr,vr,vr,vr\")\n+\t\t\t(mod \"vr,vr,vr,vr,vr,vr\")\n+\t\t\t(udiv \"vr,vr,vr,vr,vr,vr\")\n+\t\t\t(umod \"vr,vr,vr,vr,vr,vr\")])\n \n (define_code_attr int_binop_insn_type [\n \t\t\t(plus \"vialu\")\n@@ -285,9 +285,9 @@\n \t\t\t(udiv \"vidiv\")\n \t\t\t(umod \"vidiv\")])\n \n-;; <binop_alt1_insn> expands to the insn name of binop matching constraint alternative = 1.\n+;; <binop_imm_rhs1_insn> expands to the insn name of binop matching constraint rhs1 is immediate.\n ;; minus is negated as vadd and ss_minus is negated as vsadd, others remain <insn>.\n-(define_code_attr binop_alt1_insn [(ashift \"sll.vi\")\n+(define_code_attr binop_imm_rhs1_insn [(ashift \"sll.vi\")\n \t\t\t       (ashiftrt \"sra.vi\")\n \t\t\t       (lshiftrt \"srl.vi\")\n \t\t\t       (div \"div.vv\")\n@@ -305,9 +305,9 @@\n \t\t\t       (umax \"maxu.vv\")\n \t\t\t       (mult \"mul.vv\")])\n \n-;; <binop_alt2_insn> expands to the insn name of binop matching constraint alternative = 2.\n+;; <binop_imm_rhs2_insn> expands to the insn name of binop matching constraint rhs2 is immediate.\n ;; minus is reversed as vrsub, others remain <insn>.\n-(define_code_attr binop_alt2_insn [(ashift \"sll.vv\")\n+(define_code_attr binop_imm_rhs2_insn [(ashift \"sll.vv\")\n \t\t\t       (ashiftrt \"sra.vv\")\n \t\t\t       (lshiftrt \"srl.vv\")\n \t\t\t       (div \"div.vv\")\n@@ -325,25 +325,25 @@\n \t\t\t       (umax \"maxu.vv\")\n \t\t\t       (mult \"mul.vv\")])\n \n-(define_code_attr binop_alt1_op [(ashift \"%3,%4\")\n-\t\t\t     (ashiftrt \"%3,%4\")\n-\t\t\t     (lshiftrt \"%3,%4\")\n+(define_code_attr binop_imm_rhs1_op [(ashift \"%3,%v4\")\n+\t\t\t     (ashiftrt \"%3,%v4\")\n+\t\t\t     (lshiftrt \"%3,%v4\")\n \t\t\t     (div \"%3,%4\")\n \t\t\t     (mod \"%3,%4\")\n \t\t\t     (udiv \"%3,%4\")\n \t\t\t     (umod \"%3,%4\")\n \t\t\t     (ior \"%3,%4\")\n \t\t\t     (xor \"%3,%4\")\n \t\t\t     (and \"%3,%4\")\n-\t\t\t     (plus \"%3,%4\")\n+\t\t\t     (plus \"%3,%v4\")\n \t\t\t     (minus \"%3,%V4\")\n \t\t\t     (smin \"%3,%4\")\n \t\t\t     (smax \"%3,%4\")\n \t\t\t     (umin \"%3,%4\")\n \t\t\t     (umax \"%3,%4\")\n \t\t\t     (mult \"%3,%4\")])\n \n-(define_code_attr binop_alt2_op [(ashift \"%3,%4\")\n+(define_code_attr binop_imm_rhs2_op [(ashift \"%3,%4\")\n \t\t\t      (ashiftrt \"%3,%4\")\n \t\t\t      (lshiftrt \"%3,%4\")\n \t\t\t      (div \"%3,%4\")"}, {"sha": "5267417465ab52c5dc86b9671e952947d8a3e89c", "filename": "gcc/config/riscv/vector.md", "status": "modified", "additions": 23, "deletions": 18, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3a10f4fff3d6751aa65df58b8629f84a0c04545/gcc%2Fconfig%2Friscv%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3a10f4fff3d6751aa65df58b8629f84a0c04545/gcc%2Fconfig%2Friscv%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fvector.md?ref=f3a10f4fff3d6751aa65df58b8629f84a0c04545", "patch": "@@ -1127,25 +1127,28 @@\n ;; -------------------------------------------------------------------------------\n \n (define_insn \"@pred_<optab><mode>\"\n-  [(set (match_operand:VI 0 \"register_operand\"                   \"=vr,   vr,   vr\")\n+  [(set (match_operand:VI 0 \"register_operand\"           \"=vd, vr, vd, vr, vd, vr\")\n \t(if_then_else:VI\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \"      vmWc1,vmWc1,vmWc1\")\n-\t     (match_operand 5 \"vector_length_operand\"    \"         rK,   rK,   rK\")\n-\t     (match_operand 6 \"const_int_operand\"        \"          i,    i,    i\")\n-\t     (match_operand 7 \"const_int_operand\"        \"          i,    i,    i\")\n-\t     (match_operand 8 \"const_int_operand\"        \"          i,    i,    i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \" vm,Wc1, vm,Wc1, vm,Wc1\")\n+\t     (match_operand 5 \"vector_length_operand\"    \" rK, rK, rK, rK, rK, rK\")\n+\t     (match_operand 6 \"const_int_operand\"        \"  i,  i,  i,  i,  i,  i\")\n+\t     (match_operand 7 \"const_int_operand\"        \"  i,  i,  i,  i,  i,  i\")\n+\t     (match_operand 8 \"const_int_operand\"        \"  i,  i,  i,  i,  i,  i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (any_int_binop:VI\n \t    (match_operand:VI 3 \"<binop_rhs1_predicate>\" \"<binop_rhs1_constraint>\")\n \t    (match_operand:VI 4 \"<binop_rhs2_predicate>\" \"<binop_rhs2_constraint>\"))\n-\t  (match_operand:VI 2 \"vector_merge_operand\"     \"        0vu,  0vu,  0vu\")))]\n+\t  (match_operand:VI 2 \"vector_merge_operand\"     \"0vu,0vu,0vu,0vu,0vu,0vu\")))]\n   \"TARGET_VECTOR\"\n   \"@\n    v<insn>.vv\\t%0,%3,%4%p1\n-   v<binop_alt1_insn>\\t%0,<binop_alt1_op>%p1\n-   v<binop_alt2_insn>\\t%0,<binop_alt2_op>%p1\"\n+   v<insn>.vv\\t%0,%3,%4%p1\n+   v<binop_imm_rhs1_insn>\\t%0,<binop_imm_rhs1_op>%p1\n+   v<binop_imm_rhs1_insn>\\t%0,<binop_imm_rhs1_op>%p1\n+   v<binop_imm_rhs2_insn>\\t%0,<binop_imm_rhs2_op>%p1\n+   v<binop_imm_rhs2_insn>\\t%0,<binop_imm_rhs2_op>%p1\"\n   [(set_attr \"type\" \"<int_binop_insn_type>\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n@@ -1154,23 +1157,25 @@\n ;; For vsll.vx/vsra.vx/vsrl.vx the scalar mode should be Pmode wheras the\n ;; scalar mode is inner mode of the RVV mode for other vx patterns.\n (define_insn \"@pred_<optab><mode>_scalar\"\n-  [(set (match_operand:VI 0 \"register_operand\"             \"=vr,   vr\")\n+  [(set (match_operand:VI 0 \"register_operand\"            \"=vd, vr, vd, vr\")\n \t(if_then_else:VI\n \t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \"vmWc1,vmWc1\")\n-\t     (match_operand 5 \"vector_length_operand\"    \"   rK,   rK\")\n-\t     (match_operand 6 \"const_int_operand\"        \"    i,    i\")\n-\t     (match_operand 7 \"const_int_operand\"        \"    i,    i\")\n-\t     (match_operand 8 \"const_int_operand\"        \"    i,    i\")\n+\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \"  vm,Wc1, vm,Wc1\")\n+\t     (match_operand 5 \"vector_length_operand\"    \"  rK, rK, rK, rK\")\n+\t     (match_operand 6 \"const_int_operand\"        \"   i,  i,  i,  i\")\n+\t     (match_operand 7 \"const_int_operand\"        \"   i,  i,  i,  i\")\n+\t     (match_operand 8 \"const_int_operand\"        \"   i,  i,  i,  i\")\n \t     (reg:SI VL_REGNUM)\n \t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n \t  (any_shift:VI\n-\t    (match_operand:VI 3 \"register_operand\"         \" vr,   vr\")\n-\t    (match_operand 4 \"pmode_reg_or_uimm5_operand\"  \"  r,    K\"))\n-\t  (match_operand:VI 2 \"vector_merge_operand\"       \"0vu,  0vu\")))]\n+\t    (match_operand:VI 3 \"register_operand\"        \" vr, vr, vr, vr\")\n+\t    (match_operand 4 \"pmode_reg_or_uimm5_operand\" \"  r,  r,  K,  K\"))\n+\t  (match_operand:VI 2 \"vector_merge_operand\"      \"0vu,0vu,0vu,0vu\")))]\n   \"TARGET_VECTOR\"\n   \"@\n    v<insn>.vx\\t%0,%3,%4%p1\n+   v<insn>.vx\\t%0,%3,%4%p1\n+   v<insn>.vi\\t%0,%3,%4%p1\n    v<insn>.vi\\t%0,%3,%4%p1\"\n   [(set_attr \"type\" \"vshift\")\n    (set_attr \"mode\" \"<MODE>\")])"}, {"sha": "3372ec1d2306e57fc0f2bff4939538d9cc5cdda7", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/binop_vv_constraint-1.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3a10f4fff3d6751aa65df58b8629f84a0c04545/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fbinop_vv_constraint-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3a10f4fff3d6751aa65df58b8629f84a0c04545/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fbinop_vv_constraint-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fbinop_vv_constraint-1.c?ref=f3a10f4fff3d6751aa65df58b8629f84a0c04545", "patch": "@@ -29,7 +29,7 @@ void f1 (void * in, void *out)\n **\tvsetivli\\tzero,4,e32,m1,ta,ma\n **\tvle32.v\\tv[0-9]+,0\\([a-x0-9]+\\),v0.t\n **\tvadd\\.vv\\tv[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\n-**\tvadd\\.vv\\tv[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\n+**\tvadd\\.vv\\tv[1-9][0-9]?,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\n **\tvse32.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n **\tret\n */\n@@ -52,7 +52,7 @@ void f2 (void * in, void *out)\n **\tvle32\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n **\tvle32.v\\tv[0-9]+,0\\([a-x0-9]+\\),v0.t\n **\tvadd\\.vv\\tv[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\n-**\tvadd\\.vv\\tv[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\n+**\tvadd\\.vv\\tv[1-9][0-9]?,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\n **\tvse32.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n **\tret\n */\n@@ -93,7 +93,7 @@ void f4 (void * in, void *out)\n **\tvsetivli\\tzero,4,e8,mf8,ta,ma\n **\tvle8.v\\tv[0-9]+,0\\([a-x0-9]+\\),v0.t\n **\tvadd\\.vv\\tv[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\n-**\tvadd\\.vv\\tv[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\n+**\tvadd\\.vv\\tv[1-9][0-9]?,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\n **\tvse8.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n **\tret\n */\n@@ -116,7 +116,7 @@ void f5 (void * in, void *out)\n **\tvle8\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n **\tvle8.v\\tv[0-9]+,0\\([a-x0-9]+\\),v0.t\n **\tvadd\\.vv\\tv[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\n-**\tvadd\\.vv\\tv[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\n+**\tvadd\\.vv\\tv[1-9][0-9]?,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\n **\tvse8.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n **\tret\n */"}, {"sha": "e40e193220c3311d5411c32200117937ba60449a", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/shift_vx_constraint-1.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3a10f4fff3d6751aa65df58b8629f84a0c04545/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fshift_vx_constraint-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3a10f4fff3d6751aa65df58b8629f84a0c04545/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fshift_vx_constraint-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fshift_vx_constraint-1.c?ref=f3a10f4fff3d6751aa65df58b8629f84a0c04545", "patch": "@@ -28,9 +28,10 @@ void f1 (void * in, void *out)\n **\tvlm.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n **\t...\n **\tvsetivli\\tzero,4,e32,m1,ta,ma\n+**\t...\n **\tvle32.v\\tv[0-9]+,0\\([a-x0-9]+\\),v0.t\n **\tvsll\\.vx\\tv[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\n-**\tvsll\\.vx\\tv[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\n+**\tvsll\\.vx\\tv[1-9][0-9]?,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\n **\tvse32.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n **\tret\n */\n@@ -53,7 +54,7 @@ void f2 (void * in, void *out)\n **\tvle32\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n **\tvle32.v\\tv[0-9]+,0\\([a-x0-9]+\\),v0.t\n **\tvsll\\.vi\\tv[0-9]+,\\s*v[0-9]+,\\s*17\n-**\tvsll\\.vi\\tv[0-9]+,\\s*v[0-9]+,\\s*17,\\s*v0.t\n+**\tvsll\\.vi\\tv[1-9][0-9]?,\\s*v[0-9]+,\\s*17,\\s*v0.t\n **\tvse32.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n **\tret\n */\n@@ -94,7 +95,7 @@ void f4 (void * in, void *out, size_t x)\n **\tvsetivli\\tzero,4,e8,mf8,ta,ma\n **\tvle8.v\\tv[0-9]+,0\\([a-x0-9]+\\),v0.t\n **\tvsll\\.vi\\tv[0-9]+,\\s*v[0-9]+,\\s*5\n-**\tvsll\\.vi\\tv[0-9]+,\\s*v[0-9]+,\\s*5,\\s*v0.t\n+**\tvsll\\.vi\\tv[1-9][0-9]?,\\s*v[0-9]+,\\s*5,\\s*v0.t\n **\tvse8.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n **\tret\n */\n@@ -117,7 +118,7 @@ void f5 (void * in, void *out)\n **\tvle8\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n **\tvle8.v\\tv[0-9]+,0\\([a-x0-9]+\\),v0.t\n **\tvsll\\.vx\\tv[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+\n-**\tvsll\\.vx\\tv[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\n+**\tvsll\\.vx\\tv[1-9][0-9]?,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v0.t\n **\tvse8.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n **\tret\n */"}]}