{"sha": "a84166757c3b655bd6350268b1d82c0ff2ac7da4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg0MTY2NzU3YzNiNjU1YmQ2MzUwMjY4YjFkODJjMGZmMmFjN2RhNA==", "commit": {"author": {"name": "Keith Seitz", "email": "keiths@redhat.com", "date": "2008-07-30T14:57:07Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2008-07-30T14:57:07Z"}, "message": "config: sync with src\n2008-07-25  Keith Seitz  <keiths@redhat.com>\n\n\t* acinclude.m4: Remove libide, libgui, and all the other Tcl\n\tfunctions.\n\t* tcl.m4: New file.\n\nFrom-SVN: r138313", "tree": {"sha": "d9f43674161fc669f207656b72833fad983ac2ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9f43674161fc669f207656b72833fad983ac2ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a84166757c3b655bd6350268b1d82c0ff2ac7da4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a84166757c3b655bd6350268b1d82c0ff2ac7da4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a84166757c3b655bd6350268b1d82c0ff2ac7da4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a84166757c3b655bd6350268b1d82c0ff2ac7da4/comments", "author": {"login": "shtiek", "id": 107581324, "node_id": "U_kgDOBmmPjA", "avatar_url": "https://avatars.githubusercontent.com/u/107581324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shtiek", "html_url": "https://github.com/shtiek", "followers_url": "https://api.github.com/users/shtiek/followers", "following_url": "https://api.github.com/users/shtiek/following{/other_user}", "gists_url": "https://api.github.com/users/shtiek/gists{/gist_id}", "starred_url": "https://api.github.com/users/shtiek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shtiek/subscriptions", "organizations_url": "https://api.github.com/users/shtiek/orgs", "repos_url": "https://api.github.com/users/shtiek/repos", "events_url": "https://api.github.com/users/shtiek/events{/privacy}", "received_events_url": "https://api.github.com/users/shtiek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f410e1b3d2646dd13dca05e09c819c32a46299e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f410e1b3d2646dd13dca05e09c819c32a46299e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f410e1b3d2646dd13dca05e09c819c32a46299e0"}], "stats": {"total": 4523, "additions": 3246, "deletions": 1277}, "files": [{"sha": "a35fe14673cf08f81390bf04a285f16b0d26a14d", "filename": "config/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a84166757c3b655bd6350268b1d82c0ff2ac7da4/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a84166757c3b655bd6350268b1d82c0ff2ac7da4/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=a84166757c3b655bd6350268b1d82c0ff2ac7da4", "patch": "@@ -3,6 +3,12 @@\n \t* mh-pa: New, from gcc/config/pa/x-ada.\n \t* mh-pa-hpux10: New, from gcc/config/pa/x-ada-hpux10.\n \n+2008-07-25  Keith Seitz  <keiths@redhat.com>\n+\n+\t* acinclude.m4: Remove libide, libgui, and all the other Tcl\n+\tfunctions.\n+\t* tcl.m4: New file.\n+\n 2008-07-11  Joseph Myers  <joseph@codesourcery.com>\n \n \t* mh-mingw (LDFLAGS): Append to rather than replacing previous"}, {"sha": "8242b2c7a8ac9d8ee5b7a697fa43523c6817ee95", "filename": "config/acinclude.m4", "status": "modified", "additions": 0, "deletions": 1277, "changes": 1277, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a84166757c3b655bd6350268b1d82c0ff2ac7da4/config%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a84166757c3b655bd6350268b1d82c0ff2ac7da4/config%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Facinclude.m4?ref=a84166757c3b655bd6350268b1d82c0ff2ac7da4", "patch": "@@ -496,99 +496,6 @@ fi\n AC_SUBST(DEVOHDIR)\n ])\n \n-dnl ====================================================================\n-dnl find the IDE library and headers.\n-AC_DEFUN([CYG_AC_PATH_IDE], [\n-AC_MSG_CHECKING(for IDE headers in the source tree)\n-dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n-IDEHDIR=\n-IDELIB=\n-AC_CACHE_VAL(ac_cv_c_ideh,[\n-for i in $dirlist; do\n-    if test -f \"${srcdir}/$i/libide/src/event.h\" ; then\n-\tac_cv_c_ideh=`(cd ${srcdir}/$i/libide/src; ${PWDCMD-pwd})`;\n-    fi\n-done\n-])\n-if test x\"${ac_cv_c_ideh}\" != x; then\n-    IDEHDIR=\"-I${ac_cv_c_ideh}\"\n-    AC_MSG_RESULT(${ac_cv_c_ideh})\n-else\n-    AC_MSG_RESULT(none)\n-fi\n-\n-AC_MSG_CHECKING(for LIBIDE TCL headers in the source tree)\n-AC_CACHE_VAL(ac_cv_c_idetclh,[\n-for i in $dirlist; do\n-    if test -f \"${srcdir}/$i/libidetcl/src/idetcl.h\" ; then\n-\tac_cv_c_idetclh=`(cd ${srcdir}/$i/libidetcl/src; ${PWDCMD-pwd})`;\n-    fi\n-done\n-])\n-if test x\"${ac_cv_c_idetclh}\" != x; then\n-    IDEHDIR=\"${IDEHDIR} -I${ac_cv_c_idetclh}\"\n-    AC_MSG_RESULT(${ac_cv_c_idetclh})\n-else\n-    AC_MSG_RESULT(none)\n-fi\n-\n-AC_MSG_CHECKING(for IDE headers in the build tree)\n-AC_CACHE_VAL(ac_cv_c_ideh2,[\n-for i in $dirlist; do\n-    if test -f \"$i/libide/src/Makefile\" ; then\n-\tac_cv_c_ideh2=`(cd $i/libide/src; ${PWDCMD-pwd})`;\n-    fi\n-done\n-])\n-if test x\"${ac_cv_c_ideh2}\" != x; then\n-    IDEHDIR=\"${IDEHDIR} -I${ac_cv_c_ideh2}\"\n-    AC_MSG_RESULT(${ac_cv_c_ideh2})\n-else\n-    AC_MSG_RESULT(none)\n-fi\n-\n-dnl look for the library\n-AC_MSG_CHECKING(for IDE library)\n-AC_CACHE_VAL(ac_cv_c_idelib,[\n-if test x\"${ac_cv_c_idelib}\" = x ; then\n-    for i in $dirlist; do\n-      if test -f \"$i/libide/src/Makefile\" ; then\n-        ac_cv_c_idelib=`(cd $i/libide/src; ${PWDCMD-pwd})`\n-        break\n-      fi\n-    done\n-fi]) \n-if test x\"${ac_cv_c_idelib}\" != x ; then\n-     IDELIB=\"-L${ac_cv_c_idelib}\"\n-     AC_MSG_RESULT(${ac_cv_c_idelib})\n-else\n-     AC_MSG_RESULT(none)\n-fi\n-\n-dnl find libiddetcl.a if it exists\n-AC_MSG_CHECKING(for IDE TCL library)\n-AC_CACHE_VAL(ac_cv_c_idetcllib,[\n-if test x\"${ac_cv_c_idetcllib}\" = x ; then\n-    for i in $dirlist; do\n-      if test -f \"$i/libidetcl/src/Makefile\" ; then\n-        ac_cv_c_idetcllib=`(cd $i/libidetcl/src; ${PWDCMD-pwd})`\n-        break\n-      fi\n-    done\n-fi\n-]) \n-if test x\"${ac_cv_c_idetcllib}\" != x ; then\n-     IDELIB=\"${IDELIB} -L${ac_cv_c_idetcllib}\"\n-     IDETCLLIB=\"-lidetcl\"\n-     AC_MSG_RESULT(${ac_cv_c_idetcllib})\n-else\n-     AC_MSG_RESULT(none)\n-fi\n-AC_SUBST(IDEHDIR)\n-AC_SUBST(IDELIB)\n-AC_SUBST(IDETCLLIB)\n-])\n-\n dnl ====================================================================\n dnl Find all the ILU headers and libraries\n AC_DEFUN([CYG_AC_PATH_ILU], [\n@@ -837,1187 +744,3 @@ fi\n AC_LANG_RESTORE\n AC_SUBST(LIBGCC)\n ])\n-\n-dnl ====================================================================\n-dnl Ok, lets find the tcl source trees so we can use the headers\n-dnl Warning: transition of version 9 to 10 will break this algorithm\n-dnl because 10 sorts before 9. We also look for just tcl. We have to\n-dnl be careful that we don't match stuff like tclX by accident.\n-dnl the alternative search directory is involked by --with-tclinclude\n-AC_DEFUN([CYG_AC_PATH_TCL], [\n-    CYG_AC_PATH_TCLH\n-    CYG_AC_PATH_TCLCONFIG\n-    CYG_AC_LOAD_TCLCONFIG\n-])\n-AC_DEFUN([CYG_AC_PATH_TCLH], [\n-dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n-no_tcl=true\n-AC_MSG_CHECKING(for Tcl headers in the source tree)\n-AC_ARG_WITH(tclinclude, [  --with-tclinclude       directory where tcl headers are], with_tclinclude=${withval})\n-AC_CACHE_VAL(ac_cv_c_tclh,[\n-dnl first check to see if --with-tclinclude was specified\n-if test x\"${with_tclinclude}\" != x ; then\n-  if test -f ${with_tclinclude}/tcl.h ; then\n-    ac_cv_c_tclh=`(cd ${with_tclinclude}; ${PWDCMD-pwd})`\n-  elif test -f ${with_tclinclude}/generic/tcl.h ; then\n-    ac_cv_c_tclh=`(cd ${with_tclinclude}/generic; ${PWDCMD-pwd})`\n-  else\n-    AC_MSG_ERROR([${with_tclinclude} directory doesn't contain headers])\n-  fi\n-fi\n-\n-dnl next check if it came with Tcl configuration file\n-if test x\"${ac_cv_c_tclconfig}\" != x ; then\n-  for i in $dirlist; do\n-    if test -f $ac_cv_c_tclconfig/$i/generic/tcl.h ; then\n-      ac_cv_c_tclh=`(cd $ac_cv_c_tclconfig/$i/generic; ${PWDCMD-pwd})`\n-      break\n-    fi\n-  done\n-fi\n-\n-dnl next check in private source directory\n-dnl since ls returns lowest version numbers first, reverse its output\n-if test x\"${ac_cv_c_tclh}\" = x ; then\n-    dnl find the top level Tcl source directory\n-    for i in $dirlist; do\n-        if test -n \"`ls -dr $srcdir/$i/tcl* 2>/dev/null`\" ; then\n-\t    tclpath=$srcdir/$i\n-\t    break\n-\tfi\n-    done\n-\n-    dnl find the exact Tcl source dir. We do it this way, cause there\n-    dnl might be multiple version of Tcl, and we want the most recent one.\n-    for i in `ls -dr $tclpath/tcl* 2>/dev/null ` ; do\n-        if test -f $i/generic/tcl.h ; then\n-          ac_cv_c_tclh=`(cd $i/generic; ${PWDCMD-pwd})`\n-          break\n-        fi\n-    done\n-fi\n-\n-dnl check if its installed with the compiler\n-if test x\"${ac_cv_c_tclh}\" = x ; then\n-    dnl Get the path to the compiler\n-    ccpath=`which ${CC}  | sed -e 's:/bin/.*::'`/include\n-    if test -f $ccpath/tcl.h; then\n-        ac_cv_c_tclh=$ccpath\n-    fi\n-fi\n-\n-dnl see if one is installed\n-if test x\"${ac_cv_c_tclh}\" = x ; then\n-   AC_MSG_RESULT(none)\n-   AC_CHECK_HEADER(tcl.h, ac_cv_c_tclh=installed, ac_cv_c_tclh=\"\")\n-else\n-   AC_MSG_RESULT(${ac_cv_c_tclh})\n-fi\n-])\n-  TCLHDIR=\"\"\n-if test x\"${ac_cv_c_tclh}\" = x ; then\n-    AC_MSG_ERROR([Can't find any Tcl headers])\n-fi\n-if test x\"${ac_cv_c_tclh}\" != x ; then\n-    no_tcl=\"\"\n-    if test x\"${ac_cv_c_tclh}\" != x\"installed\" ; then\n-\tif test x\"${CC}\" = xcl ; then\n-\t    tmp=\"`cygpath --windows ${ac_cv_c_tclh}`\"\n-\t    ac_cv_c_tclh=\"`echo $tmp | sed -e s#\\\\\\\\\\\\\\\\#/#g`\"\n-\tfi\n-        AC_MSG_RESULT(${ac_cv_c_tclh})\n-        TCLHDIR=\"-I${ac_cv_c_tclh}\"\n-    fi\n-fi\n-\n-AC_SUBST(TCLHDIR)\n-])\n-\n-dnl ====================================================================\n-dnl Ok, lets find the tcl configuration\n-AC_DEFUN([CYG_AC_PATH_TCLCONFIG], [\n-dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n-dnl First, look for one uninstalled.  \n-dnl the alternative search directory is invoked by --with-tclconfig\n-if test x\"${no_tcl}\" = x ; then\n-  dnl we reset no_tcl in case something fails here\n-    no_tcl=true\n-    AC_ARG_WITH(tclconfig, [  --with-tclconfig           directory containing tcl configuration (tclConfig.sh)],\n-         with_tclconfig=${withval})\n-    AC_MSG_CHECKING([for Tcl configuration script])\n-    AC_CACHE_VAL(ac_cv_c_tclconfig,[\n-\n-    dnl First check to see if --with-tclconfig was specified.\n-    if test x\"${with_tclconfig}\" != x ; then\n-        if test -f \"${with_tclconfig}/tclConfig.sh\" ; then\n-            ac_cv_c_tclconfig=`(cd ${with_tclconfig}; ${PWDCMD-pwd})`\n-        else\n-            AC_MSG_ERROR([${with_tclconfig} directory doesn't contain tclConfig.sh])\n-        fi\n-    fi\n-\n-    dnl next check if it came with Tcl configuration file in the source tree\n-    if test x\"${ac_cv_c_tclconfig}\" = x ; then\n-        for i in $dirlist; do\n-            dnl need to test both unix and win directories, since \n-            dnl cygwin's tkConfig.sh could be in either directory depending\n-            dnl on the cygwin port of tcl.\n-            if test -f $srcdir/$i/unix/tclConfig.sh ; then\n-                ac_cv_c_tclconfig=`(cd $srcdir/$i/unix; ${PWDCMD-pwd})`\n-\t        break\n-            fi\n-            if test -f $srcdir/$i/win/tclConfig.sh ; then\n-                ac_cv_c_tclconfig=`(cd $srcdir/$i/win; ${PWDCMD-pwd})`\n-\t        break\n-            fi\n-        done\n-    fi\n-    dnl check in a few other locations\n-    if test x\"${ac_cv_c_tclconfig}\" = x ; then\n-        dnl find the top level Tcl source directory\n-        for i in $dirlist; do\n-            if test -n \"`ls -dr $i/tcl* 2>/dev/null`\" ; then\n-\t        tclconfpath=$i\n-\t        break\n-\t    fi\n-        done\n-\n-        dnl find the exact Tcl dir. We do it this way, cause there\n-        dnl might be multiple version of Tcl, and we want the most recent one.\n-        for i in `ls -dr $tclconfpath/tcl* 2>/dev/null ` ; do\n-            dnl need to test both unix and win directories, since \n-            dnl cygwin's tclConfig.sh could be in either directory depending\n-            dnl on the cygwin port of tcl.\n-            if test -f $i/unix/tclConfig.sh ; then\n-                ac_cv_c_tclconfig=`(cd $i/unix; ${PWDCMD-pwd})`\n-                break\n-            fi\n-            if test -f $i/win/tclConfig.sh ; then\n-                ac_cv_c_tclconfig=`(cd $i/win; ${PWDCMD-pwd})`\n-                break\n-            fi\n-        done\n-    fi\n-\n-    dnl Check to see if it's installed. We have to look in the $CC path\n-    dnl to find it, cause our $prefix may not match the compilers.\n-    if test x\"${ac_cv_c_tclconfig}\" = x ; then\n-        dnl Get the path to the compiler\n-\tccpath=`which ${CC}  | sed -e 's:/bin/.*::'`/lib\n-        if test -f $ccpath/tclConfig.sh; then\n-\t    ac_cv_c_tclconfig=$ccpath\n-        fi\n-    fi\n-    ])\tdnl end of cache_val\n-\n-    if test x\"${ac_cv_c_tclconfig}\" = x ; then\n-        TCLCONFIG=\"\"\n-        AC_MSG_WARN(Can't find Tcl configuration definitions)\n-    else\n-        no_tcl=\"\"\n-        TCLCONFIG=${ac_cv_c_tclconfig}/tclConfig.sh\n-        AC_MSG_RESULT(${TCLCONFIG})\n-     fi\n-fi\n-AC_SUBST(TCLCONFIG)\n-])\n-\n-dnl Defined as a separate macro so we don't have to cache the values\n-dnl from PATH_TCLCONFIG (because this can also be cached).\n-AC_DEFUN([CYG_AC_LOAD_TCLCONFIG], [\n-    . $TCLCONFIG\n-\n-dnl AC_SUBST(TCL_VERSION)\n-dnl AC_SUBST(TCL_MAJOR_VERSION)\n-dnl AC_SUBST(TCL_MINOR_VERSION)\n-dnl AC_SUBST(TCL_CC)\n-    AC_SUBST(TCL_DEFS)\n-\n-dnl not used, don't export to save symbols\n-    AC_SUBST(TCL_LIB_FILE)\n-    AC_SUBST(TCL_LIB_FULL_PATH)\n-    AC_SUBST(TCL_LIBS)\n-dnl not used, don't export to save symbols\n-dnl    AC_SUBST(TCL_PREFIX)\n-\n-    AC_SUBST(TCL_CFLAGS)\n-\n-dnl not used, don't export to save symbols\n-dnl    AC_SUBST(TCL_EXEC_PREFIX)\n-\n-    AC_SUBST(TCL_SHLIB_CFLAGS)\n-    AC_SUBST(TCL_SHLIB_LD)\n-dnl don't export, not used outside of configure\n-dnl AC_SUBST(TCL_SHLIB_LD_LIBS)\n-dnl AC_SUBST(TCL_SHLIB_SUFFIX)\n-dnl not used, don't export to save symbols\n-dnl AC_SUBST(TCL_DL_LIBS)\n-    AC_SUBST(TCL_LD_FLAGS)\n-    AC_SUBST(TCL_LD_SEARCH_FLAGS)\n-dnl don't export, not used outside of configure\n-dnl AC_SUBST(TCL_COMPAT_OBJS)\n-    AC_SUBST(TCL_RANLIB)\n-    AC_SUBST(TCL_BUILD_LIB_SPEC)\n-    AC_SUBST(TCL_LIB_SPEC)\n-    AC_SUBST(TCL_BIN_DIR)\n-dnl AC_SUBST(TCL_LIB_VERSIONS_OK)\n-\n-dnl not used, don't export to save symbols\n-dnl    AC_SUBST(TCL_SHARED_LIB_SUFFIX)\n-\n-dnl not used, don't export to save symbols\n-dnl    AC_SUBST(TCL_UNSHARED_LIB_SUFFIX)\n-])\n-\n-dnl ====================================================================\n-AC_DEFUN([CYG_AC_PATH_TK], [\n-    CYG_AC_PATH_TKH\n-    CYG_AC_PATH_TKCONFIG\n-    CYG_AC_LOAD_TKCONFIG\n-])\n-AC_DEFUN([CYG_AC_PATH_TKH], [\n-#\n-# Ok, lets find the tk source trees so we can use the headers\n-# If the directory (presumably symlink) named \"tk\" exists, use that one\n-# in preference to any others.  Same logic is used when choosing library\n-# and again with Tcl. The search order is the best place to look first, then in\n-# decreasing significance. The loop breaks if the trigger file is found.\n-# Note the gross little conversion here of srcdir by cd'ing to the found\n-# directory. This converts the path from a relative to an absolute, so\n-# recursive cache variables for the path will work right. We check all\n-# the possible paths in one loop rather than many separate loops to speed\n-# things up.\n-# the alternative search directory is involked by --with-tkinclude\n-#\n-dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n-no_tk=true\n-AC_MSG_CHECKING(for Tk headers in the source tree)\n-AC_ARG_WITH(tkinclude, [  --with-tkinclude       directory where tk headers are], with_tkinclude=${withval})\n-AC_CACHE_VAL(ac_cv_c_tkh,[\n-dnl first check to see if --with-tkinclude was specified\n-if test x\"${with_tkinclude}\" != x ; then\n-  if test -f ${with_tkinclude}/tk.h ; then\n-    ac_cv_c_tkh=`(cd ${with_tkinclude}; ${PWDCMD-pwd})`\n-  elif test -f ${with_tkinclude}/generic/tk.h ; then\n-    ac_cv_c_tkh=`(cd ${with_tkinclude}/generic; ${PWDCMD-pwd})`\n-  else\n-    AC_MSG_ERROR([${with_tkinclude} directory doesn't contain headers])\n-  fi\n-fi\n-\n-dnl next check if it came with Tk configuration file\n-if test x\"${ac_cv_c_tkconfig}\" != x ; then\n-  for i in $dirlist; do\n-    if test -f $ac_cv_c_tkconfig/$i/generic/tk.h ; then\n-      ac_cv_c_tkh=`(cd $ac_cv_c_tkconfig/$i/generic; ${PWDCMD-pwd})`\n-      break\n-    fi\n-  done\n-fi\n-\n-dnl next check in private source directory\n-dnl since ls returns lowest version numbers first, reverse its output\n-if test x\"${ac_cv_c_tkh}\" = x ; then\n-    dnl find the top level Tk source directory\n-    for i in $dirlist; do\n-        if test -n \"`ls -dr $srcdir/$i/tk* 2>/dev/null`\" ; then\n-\t    tkpath=$srcdir/$i\n-\t    break\n-\tfi\n-    done\n-\n-    dnl find the exact Tk source dir. We do it this way, cause there\n-    dnl might be multiple version of Tk, and we want the most recent one.\n-    for i in `ls -dr $tkpath/tk* 2>/dev/null ` ; do\n-        if test -f $i/generic/tk.h ; then\n-          ac_cv_c_tkh=`(cd $i/generic; ${PWDCMD-pwd})`\n-          break\n-        fi\n-    done\n-fi\n-\n-dnl see if one is installed\n-if test x\"${ac_cv_c_tkh}\" = x ; then\n-    AC_MSG_RESULT(none)\n-    dnl Get the path to the compiler. We do it this way instead of using\n-    dnl AC_CHECK_HEADER, cause this doesn't depend in having X configured.\n-    ccpath=`which ${CC}  | sed -e 's:/bin/.*::'`/include\n-    if test -f $ccpath/tk.h; then\n-\tac_cv_c_tkh=$ccpath\n-    fi\n-else\n-   AC_MSG_RESULT(${ac_cv_c_tkh})\n-fi\n-])\n-  TKHDIR=\"\"\n-if test x\"${ac_cv_c_tkh}\" = x ; then\n-    AC_MSG_ERROR([Can't find any Tk headers])\n-fi\n-if test x\"${ac_cv_c_tkh}\" != x ; then\n-    no_tk=\"\"\n-    if test x\"${ac_cv_c_tkh}\" != x\"installed\" ; then\n-\tif test x\"${CC}\" = xcl ; then\n-\t    tmp=\"`cygpath --windows ${ac_cv_c_tkh}`\"\n-\t    ac_cv_c_tkh=\"`echo $tmp | sed -e s#\\\\\\\\\\\\\\\\#/#g`\"\n-\tfi\n-        AC_MSG_RESULT([found in ${ac_cv_c_tkh}])\n-        TKHDIR=\"-I${ac_cv_c_tkh}\"\n-    fi\n-fi\n-\n-AC_SUBST(TKHDIR)\n-])\n-\n-AC_DEFUN([CYG_AC_PATH_TKCONFIG], [\n-dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n-dnl First, look for one uninstalled.  \n-dnl the alternative search directory is invoked by --with-tkconfig\n-if test x\"${no_tk}\" = x ; then\n-  dnl we reset no_tk in case something fails here\n-    no_tk=true\n-    AC_ARG_WITH(tkconfig, [  --with-tkconfig           directory containing tk configuration (tkConfig.sh)],\n-         with_tkconfig=${withval})\n-    AC_MSG_CHECKING([for Tk configuration script])\n-    AC_CACHE_VAL(ac_cv_c_tkconfig,[\n-\n-    dnl First check to see if --with-tkconfig was specified.\n-    if test x\"${with_tkconfig}\" != x ; then\n-        if test -f \"${with_tkconfig}/tkConfig.sh\" ; then\n-            ac_cv_c_tkconfig=`(cd ${with_tkconfig}; ${PWDCMD-pwd})`\n-        else\n-            AC_MSG_ERROR([${with_tkconfig} directory doesn't contain tkConfig.sh])\n-        fi\n-    fi\n-\n-    dnl next check if it came with Tk configuration file in the source tree\n-    if test x\"${ac_cv_c_tkconfig}\" = x ; then\n-        for i in $dirlist; do\n-            dnl need to test both unix and win directories, since \n-            dnl cygwin's tkConfig.sh could be in either directory depending\n-            dnl on the cygwin port of tk.\n-            if test -f $srcdir/$i/unix/tkConfig.sh ; then\n-                ac_cv_c_tkconfig=`(cd $srcdir/$i/unix; ${PWDCMD-pwd})`\n-\t        break\n-            fi\n-            if test -f $srcdir/$i/win/tkConfig.sh ; then\n-                ac_cv_c_tkconfig=`(cd $srcdir/$i/unix; ${PWDCMD-pwd})`\n-\t        break\n-            fi\n-        done\n-    fi\n-    dnl check in a few other locations\n-    if test x\"${ac_cv_c_tkconfig}\" = x ; then\n-        dnl find the top level Tk source directory\n-        for i in $dirlist; do\n-            if test -n \"`ls -dr $i/tk* 2>/dev/null`\" ; then\n-\t        tkconfpath=$i\n-\t        break\n-\t    fi\n-        done\n-\n-        dnl find the exact Tk dir. We do it this way, cause there\n-        dnl might be multiple version of Tk, and we want the most recent one.\n-        for i in `ls -dr $tkconfpath/tk* 2>/dev/null ` ; do\n-            dnl need to test both unix and win directories, since \n-            dnl cygwin's tkConfig.sh could be in either directory depending\n-            dnl on the cygwin port of tk.\n-            if test -f $i/unix/tkConfig.sh ; then\n-                ac_cv_c_tkconfig=`(cd $i/unix; ${PWDCMD-pwd})`\n-                break\n-            fi\n-            if test -f $i/win/tkConfig.sh ; then\n-                ac_cv_c_tkconfig=`(cd $i/win; ${PWDCMD-pwd})`\n-                break\n-            fi\n-        done\n-    fi\n-\n-    dnl Check to see if it's installed. We have to look in the $CC path\n-    dnl to find it, cause our $prefix may not match the compilers.\n-    if test x\"${ac_cv_c_tkconfig}\" = x ; then\n-        dnl Get the path to the compiler\n-\tccpath=`which ${CC}  | sed -e 's:/bin/.*::'`/lib\n-        if test -f $ccpath/tkConfig.sh; then\n-\t    ac_cv_c_tkconfig=$ccpath\n-        fi\n-    fi\n-    ])\tdnl end of cache_val\n-\n-    if test x\"${ac_cv_c_tkconfig}\" = x ; then\n-        TKCONFIG=\"\"\n-        AC_MSG_WARN(Can't find Tk configuration definitions)\n-    else\n-        no_tk=\"\"\n-        TKCONFIG=${ac_cv_c_tkconfig}/tkConfig.sh\n-        AC_MSG_RESULT(${TKCONFIG})\n-     fi\n-fi\n-AC_SUBST(TKCONFIG)\n-])\n-\n-dnl Defined as a separate macro so we don't have to cache the values\n-dnl from PATH_TKCONFIG (because this can also be cached).\n-AC_DEFUN([CYG_AC_LOAD_TKCONFIG], [\n-    if test -f \"$TKCONFIG\" ; then\n-      . $TKCONFIG\n-    fi\n-\n-    AC_SUBST(TK_VERSION)\n-dnl not actually used, don't export to save symbols\n-dnl    AC_SUBST(TK_MAJOR_VERSION)\n-dnl    AC_SUBST(TK_MINOR_VERSION)\n-    AC_SUBST(TK_DEFS)\n-\n-dnl not used, don't export to save symbols\n-    AC_SUBST(TK_LIB_FILE)\n-    AC_SUBST(TK_LIB_FULL_PATH)\n-    AC_SUBST(TK_LIBS)\n-dnl not used, don't export to save symbols\n-dnl    AC_SUBST(TK_PREFIX)\n-\n-dnl not used, don't export to save symbols\n-dnl    AC_SUBST(TK_EXEC_PREFIX)\n-    AC_SUBST(TK_BUILD_INCLUDES)\n-    AC_SUBST(TK_XINCLUDES)\n-    AC_SUBST(TK_XLIBSW)\n-    AC_SUBST(TK_BUILD_LIB_SPEC)\n-    AC_SUBST(TK_LIB_SPEC)\n-])\n-\n-dnl ====================================================================\n-dnl Ok, lets find the itcl source trees so we can use the headers\n-dnl the alternative search directory is involked by --with-itclinclude\n-AC_DEFUN([CYG_AC_PATH_ITCL], [\n-    CYG_AC_PATH_ITCLH\n-    CYG_AC_PATH_ITCLLIB\n-    CYG_AC_PATH_ITCLSH\n-    CYG_AC_PATH_ITCLMKIDX\n-])\n-AC_DEFUN([CYG_AC_PATH_ITCLH], [\n-dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n-no_itcl=true\n-AC_MSG_CHECKING(for Itcl headers in the source tree)\n-AC_ARG_WITH(itclinclude, [  --with-itclinclude       directory where itcl headers are], with_itclinclude=${withval})\n-AC_CACHE_VAL(ac_cv_c_itclh,[\n-dnl first check to see if --with-itclinclude was specified\n-if test x\"${with_itclinclude}\" != x ; then\n-  if test -f ${with_itclinclude}/itcl.h ; then\n-    ac_cv_c_itclh=`(cd ${with_itclinclude}; ${PWDCMD-pwd})`\n-  elif test -f ${with_itclinclude}/src/itcl.h ; then\n-    ac_cv_c_itclh=`(cd ${with_itclinclude}/src; ${PWDCMD-pwd})`\n-  else\n-    AC_MSG_ERROR([${with_itclinclude} directory doesn't contain headers])\n-  fi\n-fi\n-\n-dnl next check if it came with Itcl configuration file\n-if test x\"${ac_cv_c_itclconfig}\" != x ; then\n-  for i in $dirlist; do\n-    if test -f $ac_cv_c_itclconfig/$i/src/itcl.h ; then\n-      ac_cv_c_itclh=`(cd $ac_cv_c_itclconfig/$i/src; ${PWDCMD-pwd})`\n-      break\n-    fi\n-  done\n-fi\n-\n-dnl next check in private source directory\n-dnl since ls returns lowest version numbers first, reverse its output\n-if test x\"${ac_cv_c_itclh}\" = x ; then\n-    dnl find the top level Itcl source directory\n-    for i in $dirlist; do\n-        if test -n \"`ls -dr $srcdir/$i/itcl* 2>/dev/null`\" ; then\n-\t    itclpath=$srcdir/$i\n-\t    break\n-\tfi\n-    done\n-\n-    dnl find the exact Itcl source dir. We do it this way, cause there\n-    dnl might be multiple version of Itcl, and we want the most recent one.\n-    for i in `ls -dr $itclpath/itcl* 2>/dev/null ` ; do\n-        if test -f $i/src/itcl.h ; then\n-          ac_cv_c_itclh=`(cd $i/src; ${PWDCMD-pwd})`\n-          break\n-        fi\n-    done\n-fi\n-\n-dnl see if one is installed\n-if test x\"${ac_cv_c_itclh}\" = x ; then\n-   AC_MSG_RESULT(none)\n-   AC_CHECK_HEADER(itcl.h, ac_cv_c_itclh=installed, ac_cv_c_itclh=\"\")\n-else\n-   AC_MSG_RESULT(${ac_cv_c_itclh})\n-fi\n-])\n-  ITCLHDIR=\"\"\n-if test x\"${ac_cv_c_itclh}\" = x ; then\n-    AC_MSG_ERROR([Can't find any Itcl headers])\n-fi\n-if test x\"${ac_cv_c_itclh}\" != x ; then\n-    no_itcl=\"\"\n-    if test x\"${ac_cv_c_itclh}\" != x\"installed\" ; then\n-        AC_MSG_RESULT(${ac_cv_c_itclh})\n-        ITCLHDIR=\"-I${ac_cv_c_itclh}\"\n-    fi\n-fi\n-\n-AC_SUBST(ITCLHDIR)\n-])\n-\n-dnl Ok, lets find the itcl library\n-dnl First, look for one uninstalled.  \n-dnl the alternative search directory is invoked by --with-itcllib\n-AC_DEFUN([CYG_AC_PATH_ITCLLIB], [\n-dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n-if test x\"${no_itcl}\" = x ; then\n-    dnl we reset no_itcl incase something fails here\n-    no_itcl=true\n-    AC_ARG_WITH(itcllib,\n-\t[  --with-itcllib           directory where the itcl library is],\n-        with_itcllib=${withval})\n-    AC_MSG_CHECKING([for Itcl library])\n-    AC_CACHE_VAL(ac_cv_c_itcllib,[\n-    dnl First check to see if --with-itcllib was specified.\n-    if test x\"${with_itcllib}\" != x ; then\n-        if test -f \"${with_itcllib}/libitcl$TCL_SHARED_LIB_SUFFIX\" ; then\n-            ac_cv_c_itcllib=`(cd ${with_itcllib}; ${PWDCMD-pwd})`/libitcl$TCL_SHARED_LIB_SUFFIX\n-\telse\n-\t    if test -f \"${with_itcllib}/libitcl$TCL_UNSHARED_LIB_SUFFIX\"; then\n-\t \tac_cv_c_itcllib=`(cd ${with_itcllib}; ${PWDCMD-pwd})`/libitcl$TCL_UNSHARED_LIB_SUFFIX\n-\t    fi\n-\tfi\n-    fi\n-    dnl then check for a  Itcl library. Since these are uninstalled,\n-    dnl use the simple lib name root. \n-    if test x\"${ac_cv_c_itcllib}\" = x ; then\n-        dnl find the top level Itcl build directory\n-        for i in $dirlist; do\n-            if test -n \"`ls -dr $i/itcl* 2>/dev/null`\" ; then\n-\t        itclpath=$i/itcl\n-\t        break\n-\t    fi\n-        done\n-        dnl Itcl 7.5 and greater puts library in subdir.  Look there first.\n-        if test -f \"$itclpath/src/libitcl.$TCL_SHLIB_SUFFIX\" ; then\n-\t     ac_cv_c_itcllib=`(cd $itclpath/src; ${PWDCMD-pwd})`\n-        elif test -f \"$itclpath/src/libitcl.a\"; then\n-\t     ac_cv_c_itcllib=`(cd $itclpath/src; ${PWDCMD-pwd})`\n-\tfi\n-    fi\n-    dnl check in a few other private locations\n-    if test x\"${ac_cv_c_itcllib}\" = x ; then\n-        for i in ${dirlist}; do\n-            if test -n \"`ls -dr ${srcdir}/$i/itcl* 2>/dev/null`\" ; then\n-\t        itclpath=${srcdir}/$i\n-\t        break\n-\t    fi\n-        done\n-        for i in `ls -dr ${itclpath}/itcl* 2>/dev/null` ; do\n-            dnl Itcl 7.5 and greater puts library in subdir.  Look there first.\n-            if test -f \"$i/src/libitcl$TCL_SHLIB_SUFFIX\" ; then\n-\t        ac_cv_c_itcllib=`(cd $i/src; ${PWDCMD-pwd})`\n-\t        break\n-            elif test -f \"$i/src/libitcl.a\"; then\n-\t        ac_cv_c_itcllib=`(cd $i/src; ${PWDCMD-pwd})`\n-\t        break\n-\t    fi\t\n-        done\n-    fi\n-\n-    dnl see if one is conveniently installed with the compiler\n-    if test x\"${ac_cv_c_itcllib}\" = x ; then\n-        dnl Get the path to the compiler\n-\tccpath=`which ${CC}  | sed -e 's:/bin/.*::'`/lib\n-        dnl Itcl 7.5 and greater puts library in subdir.  Look there first.\n-        if test -f \"${ccpath}/libitcl$TCL_SHLIB_SUFFIX\" ; then\n-\t    ac_cv_c_itcllib=`(cd ${ccpath}; ${PWDCMD-pwd})`\n-        elif test -f \"${ccpath}/libitcl.a\"; then\n-\t    ac_cv_c_itcllib=`(cd ${ccpath}; ${PWDCMD-pwd})`\n-        fi\n-    fi\n-    ])\n-    if test x\"${ac_cv_c_itcllib}\" = x ; then\n-        ITCLLIB=\"\"\n-        AC_MSG_WARN(Can't find Itcl library)\n-    else\n-        ITCLLIB=\"-L${ac_cv_c_itcllib}\"\n-        AC_MSG_RESULT(${ac_cv_c_itcllib})\n-        no_itcl=\"\"\n-    fi\n-fi\n-\n-AC_PROVIDE([$0])\n-AC_SUBST(ITCLLIB)\n-])\n-\n-\n-dnl ====================================================================\n-dnl Ok, lets find the itcl source trees so we can use the itcl_sh script\n-dnl the alternative search directory is involked by --with-itclinclude\n-AC_DEFUN([CYG_AC_PATH_ITCLSH], [\n-dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n-no_itcl=true\n-AC_MSG_CHECKING(for the itcl_sh script)\n-AC_ARG_WITH(itclinclude, [  --with-itclinclude       directory where itcl headers are], with_itclinclude=${withval})\n-AC_CACHE_VAL(ac_cv_c_itclsh,[\n-dnl first check to see if --with-itclinclude was specified\n-if test x\"${with_itclinclude}\" != x ; then\n-  if test -f ${with_itclinclude}/itcl_sh ; then\n-    ac_cv_c_itclsh=`(cd ${with_itclinclude}; ${PWDCMD-pwd})`\n-  elif test -f ${with_itclinclude}/src/itcl_sh ; then\n-    ac_cv_c_itclsh=`(cd ${with_itclinclude}/src; ${PWDCMD-pwd})`\n-  else\n-    AC_MSG_ERROR([${with_itclinclude} directory doesn't contain itcl_sh])\n-  fi\n-fi\n-\n-dnl next check in private source directory\n-dnl since ls returns lowest version numbers first, reverse its output\n-if test x\"${ac_cv_c_itclsh}\" = x ; then\n-    dnl find the top level Itcl source directory\n-    for i in $dirlist; do\n-        if test -n \"`ls -dr $srcdir/$i/itcl* 2>/dev/null`\" ; then\n-\t    itclpath=$srcdir/$i\n-\t    break\n-\tfi\n-    done\n-\n-    dnl find the exact Itcl source dir. We do it this way, cause there\n-    dnl might be multiple version of Itcl, and we want the most recent one.\n-    for i in `ls -dr $itclpath/itcl* 2>/dev/null ` ; do\n-        if test -f $i/src/itcl_sh ; then\n-          ac_cv_c_itclsh=`(cd $i/src; ${PWDCMD-pwd})`/itcl_sh\n-          break\n-        fi\n-    done\n-fi\n-\n-dnl see if one is installed\n-if test x\"${ac_cv_c_itclsh}\" = x ; then\n-   AC_MSG_RESULT(none)\n-   AC_PATH_PROG(ac_cv_c_itclsh, itcl_sh)\n-else\n-   AC_MSG_RESULT(${ac_cv_c_itclsh})\n-fi\n-])\n-\n-if test x\"${ac_cv_c_itclsh}\" = x ; then\n-    AC_MSG_ERROR([Can't find the itcl_sh script])\n-fi\n-if test x\"${ac_cv_c_itclsh}\" != x ; then\n-    no_itcl=\"\"\n-    AC_MSG_RESULT(${ac_cv_c_itclsh})\n-    ITCLSH=\"${ac_cv_c_itclsh}\"\n-fi\n-AC_SUBST(ITCLSH)\n-])\n-\n-\n-dnl ====================================================================\n-dnl Ok, lets find the itcl source trees so we can use the itcl_sh script\n-dnl the alternative search directory is involked by --with-itclinclude\n-AC_DEFUN([CYG_AC_PATH_ITCLMKIDX], [\n-dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n-no_itcl=true\n-AC_MSG_CHECKING(for itcl_mkindex.tcl script)\n-AC_ARG_WITH(itclinclude, [  --with-itclinclude       directory where itcl headers are], with_itclinclude=${withval})\n-AC_CACHE_VAL(ac_cv_c_itclmkidx,[\n-dnl first check to see if --with-itclinclude was specified\n-if test x\"${with_itclinclude}\" != x ; then\n-  if test -f ${with_itclinclude}/itcl_sh ; then\n-    ac_cv_c_itclmkidx=`(cd ${with_itclinclude}; ${PWDCMD-pwd})`\n-  elif test -f ${with_itclinclude}/src/itcl_sh ; then\n-    ac_cv_c_itclmkidx=`(cd ${with_itclinclude}/src; ${PWDCMD-pwd})`\n-  else\n-    AC_MSG_ERROR([${with_itclinclude} directory doesn't contain itcl_sh])\n-  fi\n-fi\n-\n-dnl next check in private source directory\n-dnl since ls returns lowest version numbers first, reverse its output\n-if test x\"${ac_cv_c_itclmkidx}\" = x ; then\n-    dnl find the top level Itcl source directory\n-    for i in $dirlist; do\n-        if test -n \"`ls -dr $srcdir/$i/itcl* 2>/dev/null`\" ; then\n-\t    itclpath=$srcdir/$i\n-\t    break\n-\tfi\n-    done\n-\n-    dnl find the exact Itcl source dir. We do it this way, cause there\n-    dnl might be multiple version of Itcl, and we want the most recent one.\n-    for i in `ls -dr $itclpath/itcl* 2>/dev/null ` ; do\n-        if test -f $i/library/itcl_mkindex.tcl ; then\n-          ac_cv_c_itclmkidx=`(cd $i/library; ${PWDCMD-pwd})`/itcl_mkindex.tcl\n-          break\n-        fi\n-    done\n-fi\n-if test x\"${ac_cv_c_itclmkidx}\" = x ; then\n-    dnl Get the path to the compiler\n-    ccpath=`which ${CC}  | sed -e 's:/bin/.*::'`/share\n-    dnl Itcl 7.5 and greater puts library in subdir.  Look there first.\n-    for i in `ls -dr $ccpath/itcl* 2>/dev/null ` ; do\n-        if test -f $i/itcl_mkindex.tcl ; then\n-            ac_cv_c_itclmkidx=`(cd $i; ${PWDCMD-pwd})`/itcl_mkindex.tcl\n-            break\n-        fi\n-    done\n-fi\n-])\n-\n-if test x\"${ac_cv_c_itclmkidx}\" = x ; then\n-    AC_MSG_ERROR([Can't find the itcl_mkindex.tcl script])\n-fi\n-if test x\"${ac_cv_c_itclmkidx}\" != x ; then\n-    no_itcl=\"\"\n-    AC_MSG_RESULT(${ac_cv_c_itclmkidx})\n-    ITCLMKIDX=\"${ac_cv_c_itclmkidx}\"\n-else\n-   AC_MSG_RESULT(none)\n-fi\n-AC_SUBST(ITCLMKIDX)\n-])\n-\n-dnl ====================================================================\n-dnl Ok, lets find the tix source trees so we can use the headers\n-dnl the alternative search directory is involked by --with-tixinclude\n-AC_DEFUN([CYG_AC_PATH_TIX], [\n-    CYG_AC_PATH_TIXH\n-    CYG_AC_PATH_TIXLIB\n-])\n-AC_DEFUN([CYG_AC_PATH_TIXH], [\n-dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n-no_tix=true\n-AC_MSG_CHECKING(for Tix headers in the source tree)\n-AC_ARG_WITH(tixinclude, [  --with-tixinclude       directory where tix headers are], with_tixinclude=${withval})\n-AC_CACHE_VAL(ac_cv_c_tixh,[\n-dnl first check to see if --with-tixinclude was specified\n-if test x\"${with_tixinclude}\" != x ; then\n-  if test -f ${with_tixinclude}/tix.h ; then\n-    ac_cv_c_tixh=`(cd ${with_tixinclude}; ${PWDCMD-pwd})`\n-  elif test -f ${with_tixinclude}/generic/tix.h ; then\n-    ac_cv_c_tixh=`(cd ${with_tixinclude}/generic; ${PWDCMD-pwd})`\n-  else\n-    AC_MSG_ERROR([${with_tixinclude} directory doesn't contain headers])\n-  fi\n-fi\n-\n-dnl next check if it came with Tix configuration file\n-if test x\"${ac_cv_c_tixconfig}\" != x ; then\n-  for i in $dirlist; do\n-    if test -f $ac_cv_c_tixconfig/$i/generic/tix.h ; then\n-      ac_cv_c_tixh=`(cd $ac_cv_c_tixconfig/$i/generic; ${PWDCMD-pwd})`\n-      break\n-    fi\n-  done\n-fi\n-\n-dnl next check in private source directory\n-dnl since ls returns lowest version numbers first, reverse its output\n-if test x\"${ac_cv_c_tixh}\" = x ; then\n-    dnl find the top level Tix source directory\n-    for i in $dirlist; do\n-        if test -n \"`ls -dr $srcdir/$i/tix* 2>/dev/null`\" ; then\n-\t    tixpath=$srcdir/$i\n-\t    break\n-\tfi\n-    done\n-\n-    dnl find the exact Tix source dir. We do it this way, cause there\n-    dnl might be multiple version of Tix, and we want the most recent one.\n-    for i in `ls -dr $tixpath/tix* 2>/dev/null ` ; do\n-        if test -f $i/generic/tix.h ; then\n-          ac_cv_c_tixh=`(cd $i/generic; ${PWDCMD-pwd})`\n-          break\n-        fi\n-    done\n-fi\n-\n-dnl see if one is installed\n-if test x\"${ac_cv_c_tixh}\" = x ; then\n-    AC_MSG_RESULT(none)\n-    dnl Get the path to the compiler\n-\n-   dnl Get the path to the compiler. We do it this way instead of using\n-    dnl AC_CHECK_HEADER, cause this doesn't depend in having X configured.\n-    ccpath=`which ${CC}  | sed -e 's:/bin/.*::'`/include\n-    if test -f $ccpath/tix.h; then\n-\tac_cv_c_tixh=installed\n-    fi\n-else\n-   AC_MSG_RESULT(${ac_cv_c_tixh})\n-fi\n-])\n-if test x\"${ac_cv_c_tixh}\" = x ; then\n-    AC_MSG_ERROR([Can't find any Tix headers])\n-fi\n-if test x\"${ac_cv_c_tixh}\" != x ; then\n-    no_tix=\"\"\n-    AC_MSG_RESULT(${ac_cv_c_tixh})\n-    if test x\"${ac_cv_c_tixh}\" != x\"installed\" ; then\n-        TIXHDIR=\"-I${ac_cv_c_tixh}\"\n-    fi\n-fi\n-\n-AC_SUBST(TIXHDIR)\n-])\n-\n-AC_DEFUN([CYG_AC_PATH_TIXCONFIG], [\n-#\n-# Ok, lets find the tix configuration\n-# First, look for one uninstalled.  \n-# the alternative search directory is invoked by --with-tixconfig\n-#\n-\n-if test x\"${no_tix}\" = x ; then\n-  # we reset no_tix in case something fails here\n-  no_tix=true\n-  AC_ARG_WITH(tixconfig, [  --with-tixconfig           directory containing tix configuration (tixConfig.sh)],\n-         with_tixconfig=${withval})\n-  AC_MSG_CHECKING([for Tix configuration])\n-  AC_CACHE_VAL(ac_cv_c_tixconfig,[\n-\n-  # First check to see if --with-tixconfig was specified.\n-  if test x\"${with_tixconfig}\" != x ; then\n-    if test -f \"${with_tixconfig}/tixConfig.sh\" ; then\n-      ac_cv_c_tixconfig=`(cd ${with_tixconfig}; ${PWDCMD-pwd})`\n-    else\n-      AC_MSG_ERROR([${with_tixconfig} directory doesn't contain tixConfig.sh])\n-    fi\n-  fi\n-\n-  # then check for a private Tix library\n-  if test x\"${ac_cv_c_tixconfig}\" = x ; then\n-    for i in \\\n-\t\t../tix \\\n-\t\t`ls -dr ../tix[[4]]* 2>/dev/null` \\\n-\t\t../../tix \\\n-\t\t`ls -dr ../../tix[[4]]* 2>/dev/null` \\\n-\t\t../../../tix \\\n-\t\t`ls -dr ../../../tix[[4]]* 2>/dev/null` ; do\n-      if test -f \"$i/tixConfig.sh\" ; then\n-        ac_cv_c_tixconfig=`(cd $i; ${PWDCMD-pwd})`\n-\tbreak\n-      fi\n-    done\n-  fi\n-  # check in a few common install locations\n-  if test x\"${ac_cv_c_tixconfig}\" = x ; then\n-    for i in `ls -d ${prefix}/lib /usr/local/lib 2>/dev/null` ; do\n-      if test -f \"$i/tixConfig.sh\" ; then\n-        ac_cv_c_tkconfig=`(cd $i; ${PWDCMD-pwd})`\n-\tbreak\n-      fi\n-    done\n-  fi\n-  # check in a few other private locations\n-  if test x\"${ac_cv_c_tixconfig}\" = x ; then\n-    for i in \\\n-\t\t${srcdir}/../tix \\\n-\t\t`ls -dr ${srcdir}/../tix[[4-9]]* 2>/dev/null` ; do\n-      if test -f \"$i/tixConfig.sh\" ; then\n-        ac_cv_c_tixconfig=`(cd $i; ${PWDCMD-pwd})`\n-\tbreak\n-      fi\n-    done\n-  fi\n-  ])\n-  if test x\"${ac_cv_c_tixconfig}\" = x ; then\n-    TIXCONFIG=\"# no Tix configs found\"\n-    AC_MSG_WARN(Can't find Tix configuration definitions)\n-  else\n-    no_tix=\n-    TIXCONFIG=${ac_cv_c_tixconfig}/tixConfig.sh\n-    AC_MSG_RESULT(found $TIXCONFIG)\n-  fi\n-fi\n-\n-])\n-\n-# Defined as a separate macro so we don't have to cache the values\n-# from PATH_TIXCONFIG (because this can also be cached).\n-AC_DEFUN([CYG_AC_LOAD_TIXCONFIG], [\n-    if test -f \"$TIXCONFIG\" ; then\n-      . $TIXCONFIG\n-    fi\n-\n-    AC_SUBST(TIX_BUILD_LIB_SPEC)\n-    AC_SUBST(TIX_LIB_FULL_PATH)\n-])\n-\n-AC_DEFUN([CYG_AC_PATH_ITCLCONFIG], [\n-#\n-# Ok, lets find the itcl configuration\n-# First, look for one uninstalled.  \n-# the alternative search directory is invoked by --with-itclconfig\n-#\n-\n-if test x\"${no_itcl}\" = x ; then\n-  # we reset no_itcl in case something fails here\n-  no_itcl=true\n-  AC_ARG_WITH(itclconfig, [  --with-itclconfig           directory containing itcl configuration (itclConfig.sh)],\n-         with_itclconfig=${withval})\n-  AC_MSG_CHECKING([for Itcl configuration])\n-  AC_CACHE_VAL(ac_cv_c_itclconfig,[\n-\n-  # First check to see if --with-itclconfig was specified.\n-  if test x\"${with_itclconfig}\" != x ; then\n-    if test -f \"${with_itclconfig}/itclConfig.sh\" ; then\n-      ac_cv_c_itclconfig=`(cd ${with_itclconfig}; ${PWDCMD-pwd})`\n-    else\n-      AC_MSG_ERROR([${with_itclconfig} directory doesn't contain itclConfig.sh])\n-    fi\n-  fi\n-\n-  # then check for a private itcl library\n-  if test x\"${ac_cv_c_itclconfig}\" = x ; then\n-    for i in \\\n-\t\t../itcl/itcl \\\n-\t\t`ls -dr ../itcl/itcl[[3]]* 2>/dev/null` \\\n-\t\t../../itcl/itcl \\\n-\t\t`ls -dr ../../itcl/itcl[[3]]* 2>/dev/null` \\\n-\t\t../../../itcl/itcl \\\n-\t\t`ls -dr ../../../itcl/itcl[[3]]* 2>/dev/null` ; do\n-      if test -f \"$i/itclConfig.sh\" ; then\n-        ac_cv_c_itclconfig=`(cd $i; ${PWDCMD-pwd})`\n-\tbreak\n-      fi\n-    done\n-  fi\n-  # check in a few common install locations\n-  if test x\"${ac_cv_c_itclconfig}\" = x ; then\n-    for i in `ls -d ${prefix}/lib /usr/local/lib 2>/dev/null` ; do\n-      if test -f \"$i/itclConfig.sh\" ; then\n-        ac_cv_c_itclconfig=`(cd $i; ${PWDCMD-pwd})`\n-\tbreak\n-      fi\n-    done\n-  fi\n-  # check in a few other private locations\n-  if test x\"${ac_cv_c_itclconfig}\" = x ; then\n-    for i in \\\n-\t\t${srcdir}/../itcl/itcl \\\n-\t\t`ls -dr ${srcdir}/../itcl/itcl[[3]]* 2>/dev/null` ; do\n-      if test -f \"$i/itcl/itclConfig.sh\" ; then\n-        ac_cv_c_itclconfig=`(cd $i; ${PWDCMD-pwd})`\n-\tbreak\n-      fi\n-    done\n-  fi\n-  ])\n-  if test x\"${ac_cv_c_itclconfig}\" = x ; then\n-    ITCLCONFIG=\"# no itcl configs found\"\n-    AC_MSG_WARN(Can't find itcl configuration definitions)\n-  else\n-    no_itcl=\n-    ITCLCONFIG=${ac_cv_c_itclconfig}/itclConfig.sh\n-    AC_MSG_RESULT(found $ITCLCONFIG)\n-  fi\n-fi\n-\n-])\n-\n-# Defined as a separate macro so we don't have to cache the values\n-# from PATH_ITCLCONFIG (because this can also be cached).\n-AC_DEFUN([CYG_AC_LOAD_ITCLCONFIG], [\n-    if test -f \"$ITCLCONFIG\" ; then\n-      . $ITCLCONFIG\n-    fi\n-\n-    AC_SUBST(ITCL_BUILD_LIB_SPEC)\n-    AC_SUBST(ITCL_SH)\n-    AC_SUBST(ITCL_LIB_FILE)\n-    AC_SUBST(ITCL_LIB_FULL_PATH)\n-\n-])\n-\n-\n-AC_DEFUN([CYG_AC_PATH_ITKCONFIG], [\n-#\n-# Ok, lets find the itk configuration\n-# First, look for one uninstalled.  \n-# the alternative search directory is invoked by --with-itkconfig\n-#\n-\n-if test x\"${no_itk}\" = x ; then\n-  # we reset no_itk in case something fails here\n-  no_itk=true\n-  AC_ARG_WITH(itkconfig, [  --with-itkconfig           directory containing itk configuration (itkConfig.sh)],\n-         with_itkconfig=${withval})\n-  AC_MSG_CHECKING([for Itk configuration])\n-  AC_CACHE_VAL(ac_cv_c_itkconfig,[\n-\n-  # First check to see if --with-itkconfig was specified.\n-  if test x\"${with_itkconfig}\" != x ; then\n-    if test -f \"${with_itkconfig}/itkConfig.sh\" ; then\n-      ac_cv_c_itkconfig=`(cd ${with_itkconfig}; ${PWDCMD-pwd})`\n-    else\n-      AC_MSG_ERROR([${with_itkconfig} directory doesn't contain itkConfig.sh])\n-    fi\n-  fi\n-\n-  # then check for a private itk library\n-  if test x\"${ac_cv_c_itkconfig}\" = x ; then\n-    for i in \\\n-\t\t../itcl/itk \\\n-\t\t`ls -dr ../itcl/itk[[3]]* 2>/dev/null` \\\n-\t\t../../itcl/itk \\\n-\t\t`ls -dr ../../itcl/itk[[3]]* 2>/dev/null` \\\n-\t\t../../../itcl/itk \\\n-\t\t`ls -dr ../../../itcl/itk[[3]]* 2>/dev/null` ; do\n-      if test -f \"$i/itkConfig.sh\" ; then\n-        ac_cv_c_itkconfig=`(cd $i; ${PWDCMD-pwd})`\n-\tbreak\n-      fi\n-    done\n-  fi\n-  # check in a few common install locations\n-  if test x\"${ac_cv_c_itkconfig}\" = x ; then\n-    for i in `ls -d ${prefix}/lib /usr/local/lib 2>/dev/null` ; do\n-      if test -f \"$i/itcl/itkConfig.sh\" ; then\n-        ac_cv_c_itkconfig=`(cd $i; ${PWDCMD-pwd})`\n-\tbreak\n-      fi\n-    done\n-  fi\n-  # check in a few other private locations\n-  if test x\"${ac_cv_c_itkconfig}\" = x ; then\n-    for i in \\\n-\t\t${srcdir}/../itcl/itk \\\n-\t\t`ls -dr ${srcdir}/../itcl/itk[[3]]* 2>/dev/null` ; do\n-      if test -f \"$i/itkConfig.sh\" ; then\n-        ac_cv_c_itkconfig=`(cd $i; ${PWDCMD-pwd})`\n-\tbreak\n-      fi\n-    done\n-  fi\n-  ])\n-  if test x\"${ac_cv_c_itkconfig}\" = x ; then\n-    ITCLCONFIG=\"# no itk configs found\"\n-    AC_MSG_WARN(Can't find itk configuration definitions)\n-  else\n-    no_itk=\n-    ITKCONFIG=${ac_cv_c_itkconfig}/itkConfig.sh\n-    AC_MSG_RESULT(found $ITKCONFIG)\n-  fi\n-fi\n-\n-])\n-\n-# Defined as a separate macro so we don't have to cache the values\n-# from PATH_ITKCONFIG (because this can also be cached).\n-AC_DEFUN([CYG_AC_LOAD_ITKCONFIG], [\n-    if test -f \"$ITKCONFIG\" ; then\n-      . $ITKCONFIG\n-    fi\n-\n-    AC_SUBST(ITK_BUILD_LIB_SPEC)\n-    AC_SUBST(ITK_LIB_FILE)\n-    AC_SUBST(ITK_LIB_FULL_PATH)\n-])\n-\n-\n-dnl ====================================================================\n-dnl Ok, lets find the libgui source trees so we can use the headers\n-dnl the alternative search directory is involked by --with-libguiinclude\n-AC_DEFUN([CYG_AC_PATH_LIBGUI], [\n-    CYG_AC_PATH_LIBGUIH\n-    CYG_AC_PATH_LIBGUILIB\n-])\n-AC_DEFUN([CYG_AC_PATH_LIBGUIH], [\n-dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..../../../../../../../../../../..\"\n-no_libgui=true\n-AC_MSG_CHECKING(for Libgui headers in the source tree)\n-AC_ARG_WITH(libguiinclude, [  --with-libguiinclude       directory where libgui headers are], with_libguiinclude=${withval})\n-AC_CACHE_VAL(ac_cv_c_libguih,[\n-dnl first check to see if --with-libguiinclude was specified\n-if test x\"${with_libguiinclude}\" != x ; then\n-  if test -f ${with_libguiinclude}/guitcl.h ; then\n-    ac_cv_c_libguih=`(cd ${with_libguiinclude}; ${PWDCMD-pwd})`\n-  elif test -f ${with_libguiinclude}/src/guitcl.h ; then\n-    ac_cv_c_libguih=`(cd ${with_libguiinclude}/src; ${PWDCMD-pwd})`\n-  else\n-    AC_MSG_ERROR([${with_libguiinclude} directory doesn't contain headers])\n-  fi\n-fi\n-\n-dnl next check if it came with Libgui configuration file\n-if test x\"${ac_cv_c_libguiconfig}\" != x ; then\n-  for i in $dirlist; do\n-    if test -f $ac_cv_c_libguiconfig/$i/src/guitcl.h ; then\n-      ac_cv_c_libguih=`(cd $ac_cv_c_libguiconfig/$i/src; ${PWDCMD-pwd})`\n-      break\n-    fi\n-  done\n-fi\n-\n-dnl next check in private source directory\n-dnl since ls returns lowest version numbers first, reverse its output\n-if test x\"${ac_cv_c_libguih}\" = x ; then\n-    dnl find the top level Libgui source directory\n-    for i in $dirlist; do\n-        if test -n \"`ls -dr $srcdir/$i/libgui* 2>/dev/null`\" ; then\n-\t    libguipath=$srcdir/$i\n-\t    break\n-\tfi\n-    done\n-\n-    dnl find the exact Libgui source dir. We do it this way, cause there\n-    dnl might be multiple version of Libgui, and we want the most recent one.\n-    for i in `ls -dr $libguipath/libgui* 2>/dev/null ` ; do\n-        if test -f $i/src/guitcl.h ; then\n-          ac_cv_c_libguih=`(cd $i/src; ${PWDCMD-pwd})`\n-          break\n-        fi\n-    done\n-fi\n-\n-dnl see if one is installed\n-if test x\"${ac_cv_c_libguih}\" = x ; then\n-   AC_MSG_RESULT(none)\n-   AC_CHECK_HEADER(guitcl.h, ac_cv_c_libguih=installed, ac_cv_c_libguih=\"\")\n-fi\n-])\n-LIBGUIHDIR=\"\"\n-if test x\"${ac_cv_c_libguih}\" = x ; then\n-    AC_MSG_WARN([Can't find any Libgui headers])\n-fi\n-if test x\"${ac_cv_c_libguih}\" != x ; then\n-    no_libgui=\"\"\n-    if test x\"${ac_cv_c_libguih}\" != x\"installed\" ; then\n-        LIBGUIHDIR=\"-I${ac_cv_c_libguih}\"\n-    fi\n-fi\n-AC_MSG_RESULT(${ac_cv_c_libguih})\n-AC_SUBST(LIBGUIHDIR)\n-])\n-\n-dnl ====================================================================\n-dnl find the GUI library\n-AC_DEFUN([CYG_AC_PATH_LIBGUILIB], [\n-AC_MSG_CHECKING(for GUI library  in the build tree)\n-dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n-dnl look for the library\n-AC_MSG_CHECKING(for GUI library)\n-AC_CACHE_VAL(ac_cv_c_libguilib,[\n-if test x\"${ac_cv_c_libguilib}\" = x ; then\n-    for i in $dirlist; do\n-      if test -f \"$i/libgui/src/Makefile\" ; then\n-        ac_cv_c_libguilib=`(cd $i/libgui/src; ${PWDCMD-pwd})`\n-        break\n-      fi\n-    done\n-fi\n-]) \n-if test x\"${ac_cv_c_libguilib}\" != x ; then\n-     GUILIB=\"${GUILIB} -L${ac_cv_c_libguilib}\"\n-     LIBGUILIB=\"-lgui\"\n-     AC_MSG_RESULT(${ac_cv_c_libguilib})\n-else\n-     AC_MSG_RESULT(none)\n-fi\n-\n-AC_SUBST(GUILIB)\n-AC_SUBST(LIBGUILIB)\n-])"}, {"sha": "51809fdc0bd7a357a3f63bcaab5b9127d6012dfc", "filename": "config/tcl.m4", "status": "added", "additions": 3240, "deletions": 0, "changes": 3240, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a84166757c3b655bd6350268b1d82c0ff2ac7da4/config%2Ftcl.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a84166757c3b655bd6350268b1d82c0ff2ac7da4/config%2Ftcl.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Ftcl.m4?ref=a84166757c3b655bd6350268b1d82c0ff2ac7da4"}]}