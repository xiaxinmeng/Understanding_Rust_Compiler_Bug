{"sha": "72bdfcb848327020f62f72405d72cf85650666e1", "node_id": "C_kwDOANBUbNoAKDcyYmRmY2I4NDgzMjcwMjBmNjJmNzI0MDVkNzJjZjg1NjUwNjY2ZTE", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-03-27T00:38:54Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-03-28T13:35:58Z"}, "message": "c++: missing aggregate base ctor [PR102045]\n\nWhen make_base_init_ok changes a call to a complete constructor into a call\nto a base constructor, we were never marking the base ctor as used, so it\ndidn't get emitted.\n\n\tPR c++/102045\n\ngcc/cp/ChangeLog:\n\n\t* call.cc (make_base_init_ok): Call make_used.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp1z/aggr-base12.C: New test.", "tree": {"sha": "3b9160419fec1da6e98049581f2e546a651430d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b9160419fec1da6e98049581f2e546a651430d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72bdfcb848327020f62f72405d72cf85650666e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72bdfcb848327020f62f72405d72cf85650666e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72bdfcb848327020f62f72405d72cf85650666e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72bdfcb848327020f62f72405d72cf85650666e1/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71e1db540c01a13b01fae054c92878a79252b471", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71e1db540c01a13b01fae054c92878a79252b471", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71e1db540c01a13b01fae054c92878a79252b471"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "73fede5a3df4f37ca0b3fd76aea6c5f3858d6b2c", "filename": "gcc/cp/call.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72bdfcb848327020f62f72405d72cf85650666e1/gcc%2Fcp%2Fcall.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72bdfcb848327020f62f72405d72cf85650666e1/gcc%2Fcp%2Fcall.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.cc?ref=72bdfcb848327020f62f72405d72cf85650666e1", "patch": "@@ -8958,6 +8958,7 @@ make_base_init_ok (tree exp)\n        call target.  It would be possible to splice in the appropriate\n        arguments, but probably not worth the complexity.  */\n     return false;\n+  mark_used (fn);\n   AGGR_INIT_EXPR_FN (exp) = build_address (fn);\n   return true;\n }"}, {"sha": "6f5a6b2056af4bb3b786a1ef58e1f92c3c9a72a7", "filename": "gcc/testsuite/g++.dg/cpp1z/aggr-base12.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72bdfcb848327020f62f72405d72cf85650666e1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faggr-base12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72bdfcb848327020f62f72405d72cf85650666e1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faggr-base12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faggr-base12.C?ref=72bdfcb848327020f62f72405d72cf85650666e1", "patch": "@@ -0,0 +1,24 @@\n+// PR c++/102045\n+// { dg-do link { target c++17 } }\n+\n+template<typename T>\n+struct span\n+{\n+  template<unsigned long N>\n+  constexpr span(T (&a)[N]) : data(a), len(N) { }\n+  constexpr bool empty() const { return len == 0; }\n+  T* data;\n+  unsigned long len;\n+};\n+\n+struct byte_writer: span<char> {\n+  constexpr void do_something() noexcept {\n+    (void)this->empty();\n+  }\n+};\n+\n+int main() {\n+  char array[1];\n+  auto writer = byte_writer{array};\n+  writer.do_something();\n+}"}]}