{"sha": "91f66e78cc141da77ff9e0e3c8519e1af3f26c07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFmNjZlNzhjYzE0MWRhNzdmZjllMGUzYzg1MTllMWFmM2YyNmMwNw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2017-02-24T22:42:49Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2017-02-24T22:42:49Z"}, "message": "sh: Fixes for RTL checking\n\n\n\t* config/sh/sh.md (tstsi_t): If operands[0] is a SUBREG instead of\n\ta REG, look at the REG it is a SUBREG of.\n\t(splitter for cmpeqsi_t): Ditto.\n\nFrom-SVN: r245727", "tree": {"sha": "ebf775ff7f9b69d1c96846f97fb645197aa7afea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebf775ff7f9b69d1c96846f97fb645197aa7afea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91f66e78cc141da77ff9e0e3c8519e1af3f26c07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91f66e78cc141da77ff9e0e3c8519e1af3f26c07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91f66e78cc141da77ff9e0e3c8519e1af3f26c07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91f66e78cc141da77ff9e0e3c8519e1af3f26c07/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8faa81184f856447084a9ee41a63fc4be6bca572", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8faa81184f856447084a9ee41a63fc4be6bca572", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8faa81184f856447084a9ee41a63fc4be6bca572"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "cf24e79f263a6a19cfe358ee18b87aec05d1c784", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91f66e78cc141da77ff9e0e3c8519e1af3f26c07/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91f66e78cc141da77ff9e0e3c8519e1af3f26c07/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=91f66e78cc141da77ff9e0e3c8519e1af3f26c07", "patch": "@@ -1,3 +1,9 @@\n+2017-02-24  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/sh/sh.md (tstsi_t): If operands[0] is a SUBREG instead of\n+\ta REG, look at the REG it is a SUBREG of.\n+\t(splitter for cmpeqsi_t): Ditto.\n+\n 2017-02-24  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/pa/pa.c (pa_combine_instructions): Do not share RTL.  Make"}, {"sha": "e19e977087db4d5231f2276af53a42ee82bd50de", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91f66e78cc141da77ff9e0e3c8519e1af3f26c07/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91f66e78cc141da77ff9e0e3c8519e1af3f26c07/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=91f66e78cc141da77ff9e0e3c8519e1af3f26c07", "patch": "@@ -561,8 +561,12 @@\n   gcc_assert (CONST_INT_P (operands[1]));\n \n   HOST_WIDE_INT op1val = INTVAL (operands[1]);\n+  rtx reg = operands[0];\n+  if (SUBREG_P (reg))\n+    reg = SUBREG_REG (reg);\n+  gcc_assert (REG_P (reg));\n   bool op0_dead_after_this =\n-\tsh_reg_dead_or_unused_after_insn (curr_insn, REGNO (operands[0]));\n+\tsh_reg_dead_or_unused_after_insn (curr_insn, REGNO (reg));\n \n   if (optimize)\n     {\n@@ -834,7 +838,11 @@\n   /* If the tested reg is not dead after this insn, it's probably used by\n      something else after the comparison.  It's probably better to leave\n      it as it is.  */\n-  if (find_regno_note (curr_insn, REG_DEAD, REGNO (operands[0])) == NULL_RTX)\n+  rtx reg = operands[0];\n+  if (SUBREG_P (reg))\n+    reg = SUBREG_REG (reg);\n+  gcc_assert (REG_P (reg));\n+  if (find_regno_note (curr_insn, REG_DEAD, REGNO (reg)) != NULL_RTX)\n     FAIL;\n \n   /* FIXME: Maybe also search the predecessor basic blocks to catch"}]}