{"sha": "e521873c0e022770022b5ecf531e1ceb79a8f708", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTUyMTg3M2MwZTAyMjc3MDAyMmI1ZWNmNTMxZTFjZWI3OWE4ZjcwOA==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@codesourcery.com", "date": "2001-04-06T19:14:27Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2001-04-06T19:14:27Z"}, "message": "std_cmath.h: Get rid of C99 math macros.\n\n        * include/c_std/bits/std_cmath.h: Get rid of C99 math macros.\n        * testsuite/26_numerics/c99_macros.cc: Add test.\n\nFrom-SVN: r41159", "tree": {"sha": "39f0bff0a063a16d6328a164304df8c158fb79a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39f0bff0a063a16d6328a164304df8c158fb79a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e521873c0e022770022b5ecf531e1ceb79a8f708", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e521873c0e022770022b5ecf531e1ceb79a8f708", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e521873c0e022770022b5ecf531e1ceb79a8f708", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e521873c0e022770022b5ecf531e1ceb79a8f708/comments", "author": null, "committer": null, "parents": [{"sha": "6d32e2c9a51e42e77d470a3f653c133d417e45a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d32e2c9a51e42e77d470a3f653c133d417e45a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d32e2c9a51e42e77d470a3f653c133d417e45a1"}], "stats": {"total": 84, "additions": 84, "deletions": 0}, "files": [{"sha": "56078fdab06b5419f053c59e1577e1af92cd8e43", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e521873c0e022770022b5ecf531e1ceb79a8f708/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e521873c0e022770022b5ecf531e1ceb79a8f708/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e521873c0e022770022b5ecf531e1ceb79a8f708", "patch": "@@ -1,3 +1,8 @@\n+2001-04-06  Gabriel Dos Reis  <gdr@codesourcery.com>\n+\n+        * include/c_std/bits/std_cmath.h: Get rid of C99 math macros.\n+        * testsuite/26_numerics/c99_macros.cc: Add test.\n+\n 2001-04-06  Phil Edwards  <pme@sources.redhat.com>\n \n \t* docs/html/faq/index.html:  Update for 2.92, grab from RELEASE-NOTES."}, {"sha": "db3e47f6f20b6cec67da581ca5513f6e4752898e", "filename": "libstdc++-v3/include/c_std/bits/std_cmath.h", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e521873c0e022770022b5ecf531e1ceb79a8f708/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cmath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e521873c0e022770022b5ecf531e1ceb79a8f708/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cmath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cmath.h?ref=e521873c0e022770022b5ecf531e1ceb79a8f708", "patch": "@@ -67,6 +67,24 @@\n #undef tan\n #undef tanh\n \n+// These are possible macros imported from C99-land.  They tend to break\n+// well-formed C++ programs.  Just pretend we don't know about them.\n+// At some point, we should provide extensions in std:: -- Gaby\n+\n+#undef fpclassify\n+#undef isfinite\n+#undef isinf\n+#undef isnan\n+#undef isnormal\n+#undef signbit\n+\n+#undef isgreater\n+#undef isgreaterequal\n+#undef isless\n+#undef islessequal\n+#undef islessgreater\n+#undef isunordered\n+\n namespace std \n {\n   // Forward declaration of a helper function.  This really should be"}, {"sha": "6a8a3ea4b144bb7f30a508a9110e6a2a374520fa", "filename": "libstdc++-v3/testsuite/26_numerics/c99_macros.cc", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e521873c0e022770022b5ecf531e1ceb79a8f708/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fc99_macros.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e521873c0e022770022b5ecf531e1ceb79a8f708/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fc99_macros.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fc99_macros.cc?ref=e521873c0e022770022b5ecf531e1ceb79a8f708", "patch": "@@ -0,0 +1,61 @@\n+// 2001-04-06 gdr\n+\n+// Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// { dg-do compile }\n+\n+#include <math.h>\n+\n+void fpclassify() { }\n+\n+void isfinite() { }\n+\n+void isinf() { }\n+\n+void isnan() { }\n+\n+void isnormal() { }\n+\n+void signbit() { }\n+\n+void isgreater() { }\n+\n+void isgreaterequal() { }\n+\n+void isless() { }\n+\n+void islessequal() { }\n+\n+void islessgreater() { }\n+\n+void isunordered() { }\n+\n+int main()\n+{\n+  return 0;\n+}"}]}