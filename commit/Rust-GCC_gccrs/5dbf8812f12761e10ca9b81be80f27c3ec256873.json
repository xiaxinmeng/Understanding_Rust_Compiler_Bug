{"sha": "5dbf8812f12761e10ca9b81be80f27c3ec256873", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRiZjg4MTJmMTI3NjFlMTBjYTliODFiZTgwZjI3YzNlYzI1Njg3Mw==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2004-07-05T17:49:20Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2004-07-05T17:49:20Z"}, "message": "pa.md (prefetch, [...]): Only allow short displacements with the spatial-locality cache-control completer.\n\n\t* pa.md (prefetch, prefetch_32, prefetch_64): Only allow short\n\tdisplacements with the spatial-locality cache-control completer.\n\nFrom-SVN: r84125", "tree": {"sha": "545262d37317cc42d07d086316626461d84df9b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/545262d37317cc42d07d086316626461d84df9b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5dbf8812f12761e10ca9b81be80f27c3ec256873", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dbf8812f12761e10ca9b81be80f27c3ec256873", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dbf8812f12761e10ca9b81be80f27c3ec256873", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dbf8812f12761e10ca9b81be80f27c3ec256873/comments", "author": null, "committer": null, "parents": [{"sha": "bd4e926677c6c1020e6c40e712e9dc0d2a09afe2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd4e926677c6c1020e6c40e712e9dc0d2a09afe2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd4e926677c6c1020e6c40e712e9dc0d2a09afe2"}], "stats": {"total": 43, "additions": 37, "deletions": 6}, "files": [{"sha": "07c54214abfe5424a5c777ab04380ff2df248d1a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dbf8812f12761e10ca9b81be80f27c3ec256873/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dbf8812f12761e10ca9b81be80f27c3ec256873/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5dbf8812f12761e10ca9b81be80f27c3ec256873", "patch": "@@ -1,3 +1,8 @@\n+2004-07-05  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* pa.md (prefetch, prefetch_32, prefetch_64): Only allow short\n+\tdisplacements with the spatial-locality cache-control completer.\n+\n 2004-07-05  Zack Weinberg  <zack@codesourcery.com>\n \n \t* langhooks.c: Don't include gt-langhooks.h."}, {"sha": "cfa3ab3ef585c8c3fe1697c44445a1f701cb85a3", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 32, "deletions": 6, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dbf8812f12761e10ca9b81be80f27c3ec256873/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dbf8812f12761e10ca9b81be80f27c3ec256873/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=5dbf8812f12761e10ca9b81be80f27c3ec256873", "patch": "@@ -9359,6 +9359,12 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n    (match_operand 2 \"const_int_operand\" \"\")]\n   \"TARGET_PA_20\"\n {\n+  /* The PA 2.0 prefetch instructions only support short displacements\n+     when a cache control completer needs to be supplied.  Thus, we\n+     can't use LO_SUM DLT addresses with the spatial locality completer.  */\n+  if (operands[2] == const0_rtx && IS_LO_SUM_DLT_ADDR_P (operands[0]))\n+    FAIL;\n+\n   /* We change operand0 to a MEM as we don't have the infrastructure to\n      output all the supported address modes for ldw/ldd but we do have\n      it for MEMs.  */\n@@ -9385,7 +9391,14 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n   [(prefetch (match_operand:DI 0 \"prefetch_operand\" \"A,RQ\")\n \t     (match_operand:DI 1 \"const_int_operand\" \"n,n\")\n \t     (match_operand:DI 2 \"const_int_operand\" \"n,n\"))]\n-  \"TARGET_64BIT\"\n+  \"TARGET_64BIT\n+   && (operands[2] != const0_rtx\n+       || REG_P (XEXP (operands[0], 0))\n+       || IS_INDEX_ADDR_P (XEXP (operands[0], 0))\n+       || (GET_CODE (XEXP (operands[0], 0)) == PLUS\n+\t   && REG_P (XEXP (XEXP (operands[0], 0), 0))\n+\t   && GET_CODE (XEXP (XEXP (operands[0], 0), 1)) == CONST_INT\n+\t   && VAL_5_BITS_P (XEXP (XEXP (operands[0], 0), 1))))\"\n {\n   /* The SL completor indicates good spatial locality but poor temporal\n      locality.  The ldw instruction with a target of general register 0\n@@ -9394,11 +9407,11 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n   static const char * const instr[2][2][2] = {\n     {\n       {\n-\t\"ldw,sl RT'%A0,%%r0\",\n+\t\"\",\n \t\"ldw RT'%A0,%%r0\",\n       },\n       {\n-\t\"ldd,sl RT'%A0,%%r0\",\n+\t\"\",\n \t\"ldd RT'%A0,%%r0\",\n       },\n     },\n@@ -9421,6 +9434,9 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n       || (locality < 0 || locality > 3))\n     abort ();\n \n+  if (which_alternative == 0 && locality == 0)\n+    abort ();\n+\n   return instr [which_alternative][read_or_write][locality == 0 ? 0 : 1];\n }\n   [(set_attr \"type\" \"load\")\n@@ -9430,7 +9446,14 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n   [(prefetch (match_operand:SI 0 \"prefetch_operand\" \"A,RQ\")\n \t     (match_operand:SI 1 \"const_int_operand\" \"n,n\")\n \t     (match_operand:SI 2 \"const_int_operand\" \"n,n\"))]\n-  \"TARGET_PA_20\"\n+  \"TARGET_PA_20\n+   && (operands[2] != const0_rtx\n+       || REG_P (XEXP (operands[0], 0))\n+       || IS_INDEX_ADDR_P (XEXP (operands[0], 0))\n+       || (GET_CODE (XEXP (operands[0], 0)) == PLUS\n+\t   && REG_P (XEXP (XEXP (operands[0], 0), 0))\n+\t   && GET_CODE (XEXP (XEXP (operands[0], 0), 1)) == CONST_INT\n+\t   && VAL_5_BITS_P (XEXP (XEXP (operands[0], 0), 1))))\"\n {\n   /* The SL completor indicates good spatial locality but poor temporal\n      locality.  The ldw instruction with a target of general register 0\n@@ -9439,11 +9462,11 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n   static const char * const instr[2][2][2] = {\n     {\n       {\n-\t\"ldw,sl RT'%A0,%%r0\",\n+\t\"\",\n \t\"ldw RT'%A0,%%r0\",\n       },\n       {\n-\t\"ldd,sl RT'%A0,%%r0\",\n+\t\"\",\n \t\"ldd RT'%A0,%%r0\",\n       },\n     },\n@@ -9466,6 +9489,9 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n       || (locality < 0 || locality > 3))\n     abort ();\n \n+  if (which_alternative == 0 && locality == 0)\n+    abort ();\n+\n   return instr [which_alternative][read_or_write][locality == 0 ? 0 : 1];\n }\n   [(set_attr \"type\" \"load\")"}]}