{"sha": "7624c58c6b7b2b313c92b25ebbd267cf0ed7f7c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzYyNGM1OGM2YjdiMmIzMTNjOTJiMjVlYmJkMjY3Y2YwZWQ3ZjdjNA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-01-14T16:08:32Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-01-14T16:08:32Z"}, "message": "gcov: add one more pytest\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/gcov/gcov-17.C: New test.\n\t* g++.dg/gcov/test-gcov-17.py: New test.", "tree": {"sha": "5be6f8bb866e687a2a239068f713e988007f0a24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5be6f8bb866e687a2a239068f713e988007f0a24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7624c58c6b7b2b313c92b25ebbd267cf0ed7f7c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7624c58c6b7b2b313c92b25ebbd267cf0ed7f7c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7624c58c6b7b2b313c92b25ebbd267cf0ed7f7c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7624c58c6b7b2b313c92b25ebbd267cf0ed7f7c4/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "236d6a33ca63714474f0077390bff2d9d5b125eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/236d6a33ca63714474f0077390bff2d9d5b125eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/236d6a33ca63714474f0077390bff2d9d5b125eb"}], "stats": {"total": 77, "additions": 77, "deletions": 0}, "files": [{"sha": "d11883cfd397290a4145799b69139310e5f9a809", "filename": "gcc/testsuite/g++.dg/gcov/gcov-17.C", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7624c58c6b7b2b313c92b25ebbd267cf0ed7f7c4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7624c58c6b7b2b313c92b25ebbd267cf0ed7f7c4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-17.C?ref=7624c58c6b7b2b313c92b25ebbd267cf0ed7f7c4", "patch": "@@ -0,0 +1,40 @@\n+/* { dg-options \"--coverage -std=c++11\" } */\n+/* { dg-do run { target native } } */\n+\n+template <class T> class Foo\n+{\n+public:\n+  Foo () : b (1000) {}\n+\n+  void inc () { b++; }\n+\n+private:\n+  int b;\n+};\n+\n+template class Foo<int>;\n+template class Foo<char>;\n+\n+int\n+main (void)\n+{\n+  int i, total;\n+  Foo<int> counter;\n+\n+  counter.inc ();\n+  counter.inc ();\n+  total = 0;\n+\n+  for (i = 0; i < 10; i++)\n+    total += i;\n+\n+  int v = total > 100 ? 1 : 2;\n+\n+  if (total != 45)\n+    __builtin_printf (\"Failure\\n\");\n+  else\n+    __builtin_printf (\"Success\\n\");\n+  return 0;\n+}\n+\n+/* { dg-final { run-gcov-pytest gcov-17.C \"test-gcov-17.py\" } } */"}, {"sha": "ec5df3dec0361cae46bf4e8d40cad7ead1c19676", "filename": "gcc/testsuite/g++.dg/gcov/test-gcov-17.py", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7624c58c6b7b2b313c92b25ebbd267cf0ed7f7c4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Ftest-gcov-17.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7624c58c6b7b2b313c92b25ebbd267cf0ed7f7c4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Ftest-gcov-17.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Ftest-gcov-17.py?ref=7624c58c6b7b2b313c92b25ebbd267cf0ed7f7c4", "patch": "@@ -0,0 +1,37 @@\n+from gcov import gcov_from_env\n+\n+import pytest\n+\n+\n+@pytest.fixture(scope='function', autouse=True)\n+def gcov():\n+    return gcov_from_env()\n+\n+\n+def test_basics(gcov):\n+    files = gcov['files']\n+    assert len(files) == 1\n+    functions = files[0]['functions']\n+    assert len(functions) == 5\n+\n+\n+def test_lines(gcov):\n+    lines = gcov['files'][0]['lines']\n+    linesdict = {}\n+    for line in lines:\n+        lineno = int(line['line_number'])\n+        linesdict.setdefault(lineno, [])\n+        linesdict[lineno].append(line)\n+\n+    line9 = linesdict[9]\n+    assert len(line9) == 2\n+    assert line9[0]['function_name'] == '_ZN3FooIcE3incEv'\n+    assert line9[1]['function_name'] == '_ZN3FooIiE3incEv'\n+    assert line9[0]['count'] == 0\n+    assert line9[1]['count'] == 2\n+    assert line9[0]['unexecuted_block']\n+    assert not line9[1]['unexecuted_block']\n+    assert linesdict[31][0]['unexecuted_block']\n+    assert linesdict[34][0]['unexecuted_block']\n+    assert not linesdict[37][0]['unexecuted_block']\n+    assert 32 not in linesdict"}]}