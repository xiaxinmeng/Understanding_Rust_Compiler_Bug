{"sha": "0ff4ddeb5907968165ef1ef729a8d79f57cf980b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZmNGRkZWI1OTA3OTY4MTY1ZWYxZWY3MjlhOGQ3OWY1N2NmOTgwYg==", "commit": {"author": {"name": "Ilya Enkovich", "email": "enkovich.gnu@gmail.com", "date": "2015-05-20T08:23:00Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2015-05-20T08:23:00Z"}, "message": "tree-chkp.c (chkp_maybe_copy_and_register_bounds): Remove useless gimple_build_nop calls.\n\n\t* tree-chkp.c (chkp_maybe_copy_and_register_bounds): Remove useless\n\tgimple_build_nop calls.\n\t(chkp_find_bounds_for_elem): Likewise.\n\t(chkp_get_zero_bounds): Likewise.\n\t(chkp_get_none_bounds): Likewise.\n\t(chkp_get_bounds_by_definition): Likewise.\n\t(chkp_generate_extern_var_bounds): Likewise.\n\t(chkp_get_bounds_for_decl_addr): Likewise.\n\t(chkp_get_bounds_for_string_cst): Likewise.\n\nFrom-SVN: r223434", "tree": {"sha": "cb00cf20af24030a1fee1d6a0afceec8e037d3eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb00cf20af24030a1fee1d6a0afceec8e037d3eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ff4ddeb5907968165ef1ef729a8d79f57cf980b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ff4ddeb5907968165ef1ef729a8d79f57cf980b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ff4ddeb5907968165ef1ef729a8d79f57cf980b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ff4ddeb5907968165ef1ef729a8d79f57cf980b/comments", "author": null, "committer": null, "parents": [{"sha": "a7e43c57fcd0a2d107b0f8574ab4ee4c24ec03fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7e43c57fcd0a2d107b0f8574ab4ee4c24ec03fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7e43c57fcd0a2d107b0f8574ab4ee4c24ec03fa"}], "stats": {"total": 30, "additions": 21, "deletions": 9}, "files": [{"sha": "3c32a4afa9911c6476065786670c558c20ebfb44", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ff4ddeb5907968165ef1ef729a8d79f57cf980b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ff4ddeb5907968165ef1ef729a8d79f57cf980b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0ff4ddeb5907968165ef1ef729a8d79f57cf980b", "patch": "@@ -1,3 +1,15 @@\n+2015-05-20  Ilya Enkovich  <enkovich.gnu@gmail.com>\n+\n+\t* tree-chkp.c (chkp_maybe_copy_and_register_bounds): Remove useless\n+\tgimple_build_nop calls.\n+\t(chkp_find_bounds_for_elem): Likewise.\n+\t(chkp_get_zero_bounds): Likewise.\n+\t(chkp_get_none_bounds): Likewise.\n+\t(chkp_get_bounds_by_definition): Likewise.\n+\t(chkp_generate_extern_var_bounds): Likewise.\n+\t(chkp_get_bounds_for_decl_addr): Likewise.\n+\t(chkp_get_bounds_for_string_cst): Likewise.\n+\n 2015-05-20  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR tree-optimization/65447"}, {"sha": "88c1f459c182f8dab145d015a39ce38329f27c9a", "filename": "gcc/tree-chkp.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ff4ddeb5907968165ef1ef729a8d79f57cf980b/gcc%2Ftree-chkp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ff4ddeb5907968165ef1ef729a8d79f57cf980b/gcc%2Ftree-chkp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chkp.c?ref=0ff4ddeb5907968165ef1ef729a8d79f57cf980b", "patch": "@@ -1181,10 +1181,10 @@ chkp_maybe_copy_and_register_bounds (tree ptr, tree bnd)\n \t  gimple_stmt_iterator gsi;\n \n \t  if (bnd_var)\n-\t    copy = make_ssa_name (bnd_var, gimple_build_nop ());\n+\t    copy = make_ssa_name (bnd_var);\n \t  else\n \t    copy = make_temp_ssa_name (pointer_bounds_type_node,\n-\t\t\t\t       gimple_build_nop (),\n+\t\t\t\t       NULL,\n \t\t\t\t       CHKP_BOUND_TMP_NAME);\n \t  bnd = chkp_get_orginal_bounds_for_abnormal_copy (bnd);\n \t  assign = gimple_build_assign (copy, bnd);\n@@ -1544,7 +1544,7 @@ chkp_find_bounds_for_elem (tree elem, tree *all_bounds,\n     {\n       if (!all_bounds[offs / POINTER_SIZE])\n \t{\n-\t  tree temp = make_temp_ssa_name (type, gimple_build_nop (), \"\");\n+\t  tree temp = make_temp_ssa_name (type, NULL, \"\");\n \t  gimple assign = gimple_build_assign (temp, elem);\n \t  gimple_stmt_iterator gsi;\n \n@@ -2053,7 +2053,7 @@ chkp_get_zero_bounds (void)\n       gimple_stmt_iterator gsi = gsi_start_bb (chkp_get_entry_block ());\n       gimple stmt;\n \n-      zero_bounds = chkp_get_tmp_reg (gimple_build_nop ());\n+      zero_bounds = chkp_get_tmp_reg (NULL);\n       stmt = gimple_build_assign (zero_bounds, chkp_get_zero_bounds_var ());\n       gsi_insert_before (&gsi, stmt, GSI_SAME_STMT);\n     }\n@@ -2083,7 +2083,7 @@ chkp_get_none_bounds (void)\n       gimple_stmt_iterator gsi = gsi_start_bb (chkp_get_entry_block ());\n       gimple stmt;\n \n-      none_bounds = chkp_get_tmp_reg (gimple_build_nop ());\n+      none_bounds = chkp_get_tmp_reg (NULL);\n       stmt = gimple_build_assign (none_bounds, chkp_get_none_bounds_var ());\n       gsi_insert_before (&gsi, stmt, GSI_SAME_STMT);\n     }\n@@ -2738,7 +2738,7 @@ chkp_get_bounds_by_definition (tree node, gimple def_stmt,\n \t  var = chkp_get_bounds_var (SSA_NAME_VAR (node));\n \telse\n \t  var = make_temp_ssa_name (pointer_bounds_type_node,\n-\t\t\t\t    gimple_build_nop (),\n+\t\t\t\t    NULL,\n \t\t\t\t    CHKP_BOUND_TMP_NAME);\n       else\n \tvar = chkp_get_tmp_var ();\n@@ -2918,7 +2918,7 @@ chkp_generate_extern_var_bounds (tree var)\n   gimple_seq_add_stmt (&seq, stmt);\n \n   lb = chkp_build_addr_expr (var);\n-  size = make_ssa_name (chkp_get_size_tmp_var (), gimple_build_nop ());\n+  size = make_ssa_name (chkp_get_size_tmp_var ());\n \n   if (flag_chkp_zero_dynamic_size_as_infinite)\n     {\n@@ -3015,7 +3015,7 @@ chkp_get_bounds_for_decl_addr (tree decl)\n       gimple_stmt_iterator gsi = gsi_start_bb (chkp_get_entry_block ());\n       gimple stmt;\n \n-      bounds = chkp_get_tmp_reg (gimple_build_nop ());\n+      bounds = chkp_get_tmp_reg (NULL);\n       stmt = gimple_build_assign (bounds, bnd_var);\n       gsi_insert_before (&gsi, stmt, GSI_SAME_STMT);\n     }\n@@ -3059,7 +3059,7 @@ chkp_get_bounds_for_string_cst (tree cst)\n       gimple_stmt_iterator gsi = gsi_start_bb (chkp_get_entry_block ());\n       gimple stmt;\n \n-      bounds = chkp_get_tmp_reg (gimple_build_nop ());\n+      bounds = chkp_get_tmp_reg (NULL);\n       stmt = gimple_build_assign (bounds, bnd_var);\n       gsi_insert_before (&gsi, stmt, GSI_SAME_STMT);\n     }"}]}