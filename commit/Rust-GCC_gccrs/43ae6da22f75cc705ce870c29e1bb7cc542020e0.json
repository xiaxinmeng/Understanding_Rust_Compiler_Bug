{"sha": "43ae6da22f75cc705ce870c29e1bb7cc542020e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNhZTZkYTIyZjc1Y2M3MDVjZTg3MGMyOWUxYmI3Y2M1NDIwMjBlMA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2014-11-20T14:54:56Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2014-11-20T14:54:56Z"}, "message": "combine.c (combine_validate_cost): Always print the insn costs to the dump file.\n\n\t* combine.c (combine_validate_cost): Always print the insn costs\n\tto the dump file.\n\nFrom-SVN: r217864", "tree": {"sha": "f1ac1bac9afa5c63f149b1deda90d9630ae6c529", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1ac1bac9afa5c63f149b1deda90d9630ae6c529"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43ae6da22f75cc705ce870c29e1bb7cc542020e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43ae6da22f75cc705ce870c29e1bb7cc542020e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43ae6da22f75cc705ce870c29e1bb7cc542020e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43ae6da22f75cc705ce870c29e1bb7cc542020e0/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ddce04b8b9370d128bc890e27de8888c84250c5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddce04b8b9370d128bc890e27de8888c84250c5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddce04b8b9370d128bc890e27de8888c84250c5b"}], "stats": {"total": 68, "additions": 30, "deletions": 38}, "files": [{"sha": "e8e681799581a2ebbdb775b9a7ef655131b37705", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ae6da22f75cc705ce870c29e1bb7cc542020e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ae6da22f75cc705ce870c29e1bb7cc542020e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=43ae6da22f75cc705ce870c29e1bb7cc542020e0", "patch": "@@ -1,3 +1,8 @@\n+2014-11-20  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* combine.c (combine_validate_cost): Always print the insn costs\n+\tto the dump file.\n+\n 2014-11-20  Richard Henderson <rth@redhat.com>\n \n \tPR target/63977"}, {"sha": "d2415f8d2fa201e674539c13401ac2b6d293977a", "filename": "gcc/combine.c", "status": "modified", "additions": 25, "deletions": 38, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ae6da22f75cc705ce870c29e1bb7cc542020e0/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ae6da22f75cc705ce870c29e1bb7cc542020e0/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=43ae6da22f75cc705ce870c29e1bb7cc542020e0", "patch": "@@ -914,48 +914,35 @@ combine_validate_cost (rtx_insn *i0, rtx_insn *i1, rtx_insn *i2, rtx_insn *i3,\n \n   /* Disallow this combination if both new_cost and old_cost are greater than\n      zero, and new_cost is greater than old cost.  */\n-  if (old_cost > 0 && new_cost > old_cost)\n-    {\n-      if (dump_file)\n-\t{\n-\t  if (i0)\n-\t    {\n-\t      fprintf (dump_file,\n-\t\t       \"rejecting combination of insns %d, %d, %d and %d\\n\",\n-\t\t       INSN_UID (i0), INSN_UID (i1), INSN_UID (i2),\n-\t\t       INSN_UID (i3));\n-\t      fprintf (dump_file, \"original costs %d + %d + %d + %d = %d\\n\",\n-\t\t       i0_cost, i1_cost, i2_cost, i3_cost, old_cost);\n-\t    }\n-\t  else if (i1)\n-\t    {\n-\t      fprintf (dump_file,\n-\t\t       \"rejecting combination of insns %d, %d and %d\\n\",\n-\t\t       INSN_UID (i1), INSN_UID (i2), INSN_UID (i3));\n-\t      fprintf (dump_file, \"original costs %d + %d + %d = %d\\n\",\n-\t\t       i1_cost, i2_cost, i3_cost, old_cost);\n-\t    }\n-\t  else\n-\t    {\n-\t      fprintf (dump_file,\n-\t\t       \"rejecting combination of insns %d and %d\\n\",\n-\t\t       INSN_UID (i2), INSN_UID (i3));\n-\t      fprintf (dump_file, \"original costs %d + %d = %d\\n\",\n-\t\t       i2_cost, i3_cost, old_cost);\n-\t    }\n+  int reject = old_cost > 0 && new_cost > old_cost;\n \n-\t  if (newi2pat)\n-\t    {\n-\t      fprintf (dump_file, \"replacement costs %d + %d = %d\\n\",\n-\t\t       new_i2_cost, new_i3_cost, new_cost);\n-\t    }\n-\t  else\n-\t    fprintf (dump_file, \"replacement cost %d\\n\", new_cost);\n-\t}\n+  if (dump_file)\n+    {\n+      fprintf (dump_file, \"%s combination of insns \",\n+\t       reject ? \"rejecting\" : \"allowing\");\n+      if (i0)\n+\tfprintf (dump_file, \"%d, \", INSN_UID (i0));\n+      if (i1)\n+\tfprintf (dump_file, \"%d, \", INSN_UID (i1));\n+      fprintf (dump_file, \"%d and %d\\n\", INSN_UID (i2), INSN_UID (i3));\n \n-      return false;\n+      fprintf (dump_file, \"original costs \");\n+      if (i0)\n+\tfprintf (dump_file, \"%d + \", i0_cost);\n+      if (i1)\n+\tfprintf (dump_file, \"%d + \", i1_cost);\n+      fprintf (dump_file, \"%d + %d = %d\\n\", i2_cost, i3_cost, old_cost);\n+\n+      if (newi2pat)\n+\tfprintf (dump_file, \"replacement costs %d + %d = %d\\n\",\n+\t\t new_i2_cost, new_i3_cost, new_cost);\n+      else\n+\tfprintf (dump_file, \"replacement cost %d\\n\", new_cost);\n     }\n \n+  if (reject)\n+    return false;\n+\n   /* Update the uid_insn_cost array with the replacement costs.  */\n   INSN_COST (i2) = new_i2_cost;\n   INSN_COST (i3) = new_i3_cost;"}]}