{"sha": "0cfa5d9c595bc2566e0030ea30a9cfd83652e046", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNmYTVkOWM1OTViYzI1NjZlMDAzMGVhMzBhOWNmZDgzNjUyZTA0Ng==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2019-05-15T15:33:43Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2019-05-15T15:33:43Z"}, "message": "i386: Enable TM MMX intrinsics with SSE2\n\nThis patch enables TM MMX intrinsics with SSE2 when MMX is disabled.\n\n\tPR target/89021\n\t* config/i386/i386-builtins.c (bdesc_tm): Enable MMX intrinsics\n\twith SSE2.\n\nFrom-SVN: r271253", "tree": {"sha": "4d3a3e7cf4ff3cf05b6e3152100805a2ef78da1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d3a3e7cf4ff3cf05b6e3152100805a2ef78da1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cfa5d9c595bc2566e0030ea30a9cfd83652e046", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cfa5d9c595bc2566e0030ea30a9cfd83652e046", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cfa5d9c595bc2566e0030ea30a9cfd83652e046", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cfa5d9c595bc2566e0030ea30a9cfd83652e046/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ecfdb16c54ad06ac23193e5de292fc71e5958526", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecfdb16c54ad06ac23193e5de292fc71e5958526", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecfdb16c54ad06ac23193e5de292fc71e5958526"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "9484b3d2daf9f0cdc8df196198a755e800277bfd", "filename": "gcc/config/i386/i386-builtins.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cfa5d9c595bc2566e0030ea30a9cfd83652e046/gcc%2Fconfig%2Fi386%2Fi386-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cfa5d9c595bc2566e0030ea30a9cfd83652e046/gcc%2Fconfig%2Fi386%2Fi386-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtins.c?ref=0cfa5d9c595bc2566e0030ea30a9cfd83652e046", "patch": "@@ -384,13 +384,13 @@ ix86_add_new_builtins (HOST_WIDE_INT isa, HOST_WIDE_INT isa2)\n    we're lazy.  Add casts to make them fit.  */\n static const struct builtin_description bdesc_tm[] =\n {\n-  { OPTION_MASK_ISA_MMX, 0, CODE_FOR_nothing, \"__builtin__ITM_WM64\", (enum ix86_builtins) BUILT_IN_TM_STORE_M64, UNKNOWN, VOID_FTYPE_PV2SI_V2SI },\n-  { OPTION_MASK_ISA_MMX, 0, CODE_FOR_nothing, \"__builtin__ITM_WaRM64\", (enum ix86_builtins) BUILT_IN_TM_STORE_WAR_M64, UNKNOWN, VOID_FTYPE_PV2SI_V2SI },\n-  { OPTION_MASK_ISA_MMX, 0, CODE_FOR_nothing, \"__builtin__ITM_WaWM64\", (enum ix86_builtins) BUILT_IN_TM_STORE_WAW_M64, UNKNOWN, VOID_FTYPE_PV2SI_V2SI },\n-  { OPTION_MASK_ISA_MMX, 0, CODE_FOR_nothing, \"__builtin__ITM_RM64\", (enum ix86_builtins) BUILT_IN_TM_LOAD_M64, UNKNOWN, V2SI_FTYPE_PCV2SI },\n-  { OPTION_MASK_ISA_MMX, 0, CODE_FOR_nothing, \"__builtin__ITM_RaRM64\", (enum ix86_builtins) BUILT_IN_TM_LOAD_RAR_M64, UNKNOWN, V2SI_FTYPE_PCV2SI },\n-  { OPTION_MASK_ISA_MMX, 0, CODE_FOR_nothing, \"__builtin__ITM_RaWM64\", (enum ix86_builtins) BUILT_IN_TM_LOAD_RAW_M64, UNKNOWN, V2SI_FTYPE_PCV2SI },\n-  { OPTION_MASK_ISA_MMX, 0, CODE_FOR_nothing, \"__builtin__ITM_RfWM64\", (enum ix86_builtins) BUILT_IN_TM_LOAD_RFW_M64, UNKNOWN, V2SI_FTYPE_PCV2SI },\n+  { OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_nothing, \"__builtin__ITM_WM64\", (enum ix86_builtins) BUILT_IN_TM_STORE_M64, UNKNOWN, VOID_FTYPE_PV2SI_V2SI },\n+  { OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_nothing, \"__builtin__ITM_WaRM64\", (enum ix86_builtins) BUILT_IN_TM_STORE_WAR_M64, UNKNOWN, VOID_FTYPE_PV2SI_V2SI },\n+  { OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_nothing, \"__builtin__ITM_WaWM64\", (enum ix86_builtins) BUILT_IN_TM_STORE_WAW_M64, UNKNOWN, VOID_FTYPE_PV2SI_V2SI },\n+  { OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_nothing, \"__builtin__ITM_RM64\", (enum ix86_builtins) BUILT_IN_TM_LOAD_M64, UNKNOWN, V2SI_FTYPE_PCV2SI },\n+  { OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_nothing, \"__builtin__ITM_RaRM64\", (enum ix86_builtins) BUILT_IN_TM_LOAD_RAR_M64, UNKNOWN, V2SI_FTYPE_PCV2SI },\n+  { OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_nothing, \"__builtin__ITM_RaWM64\", (enum ix86_builtins) BUILT_IN_TM_LOAD_RAW_M64, UNKNOWN, V2SI_FTYPE_PCV2SI },\n+  { OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_nothing, \"__builtin__ITM_RfWM64\", (enum ix86_builtins) BUILT_IN_TM_LOAD_RFW_M64, UNKNOWN, V2SI_FTYPE_PCV2SI },\n \n   { OPTION_MASK_ISA_SSE, 0, CODE_FOR_nothing, \"__builtin__ITM_WM128\", (enum ix86_builtins) BUILT_IN_TM_STORE_M128, UNKNOWN, VOID_FTYPE_PV4SF_V4SF },\n   { OPTION_MASK_ISA_SSE, 0, CODE_FOR_nothing, \"__builtin__ITM_WaRM128\", (enum ix86_builtins) BUILT_IN_TM_STORE_WAR_M128, UNKNOWN, VOID_FTYPE_PV4SF_V4SF },\n@@ -408,7 +408,7 @@ static const struct builtin_description bdesc_tm[] =\n   { OPTION_MASK_ISA_AVX, 0, CODE_FOR_nothing, \"__builtin__ITM_RaWM256\", (enum ix86_builtins) BUILT_IN_TM_LOAD_RAW_M256, UNKNOWN, V8SF_FTYPE_PCV8SF },\n   { OPTION_MASK_ISA_AVX, 0, CODE_FOR_nothing, \"__builtin__ITM_RfWM256\", (enum ix86_builtins) BUILT_IN_TM_LOAD_RFW_M256, UNKNOWN, V8SF_FTYPE_PCV8SF },\n \n-  { OPTION_MASK_ISA_MMX, 0, CODE_FOR_nothing, \"__builtin__ITM_LM64\", (enum ix86_builtins) BUILT_IN_TM_LOG_M64, UNKNOWN, VOID_FTYPE_PCVOID },\n+  { OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_nothing, \"__builtin__ITM_LM64\", (enum ix86_builtins) BUILT_IN_TM_LOG_M64, UNKNOWN, VOID_FTYPE_PCVOID },\n   { OPTION_MASK_ISA_SSE, 0, CODE_FOR_nothing, \"__builtin__ITM_LM128\", (enum ix86_builtins) BUILT_IN_TM_LOG_M128, UNKNOWN, VOID_FTYPE_PCVOID },\n   { OPTION_MASK_ISA_AVX, 0, CODE_FOR_nothing, \"__builtin__ITM_LM256\", (enum ix86_builtins) BUILT_IN_TM_LOG_M256, UNKNOWN, VOID_FTYPE_PCVOID },\n };"}, {"sha": "c661642c608f720a714f61bd168488ea1e63b72a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cfa5d9c595bc2566e0030ea30a9cfd83652e046/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cfa5d9c595bc2566e0030ea30a9cfd83652e046/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0cfa5d9c595bc2566e0030ea30a9cfd83652e046", "patch": "@@ -1,3 +1,9 @@\n+2019-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/89021\n+\t* config/i386/i386-builtins.c (bdesc_tm): Enable MMX intrinsics\n+\twith SSE2.\n+\n 2019-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/89021"}]}