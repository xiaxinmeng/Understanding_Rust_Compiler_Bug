{"sha": "a2bf11d16a01ced5d2bd0500a6896627b7bed076", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJiZjExZDE2YTAxY2VkNWQyYmQwNTAwYTY4OTY2MjdiN2JlZDA3Ng==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-09-15T21:15:37Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-09-15T21:15:37Z"}, "message": "libgo: If compiler can split-stack and linker can not, use -fno-split-stack.\n\n    \n    If the compiler supports split-stack but we are using a gold linker that\n    does not, as happens on PPC with current GCC but old gold, then we need\n    to compile the Go code with -fno-split-stack to avoid a linker error\n    avoid the inability to call from split-stack code to non-split-stack\n    code.\n    \n    Reviewed-on: https://go-review.googlesource.com/14598\n\nFrom-SVN: r227811", "tree": {"sha": "cc1561d9c684e30e43f7804a87ab7caab0047110", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc1561d9c684e30e43f7804a87ab7caab0047110"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2bf11d16a01ced5d2bd0500a6896627b7bed076", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2bf11d16a01ced5d2bd0500a6896627b7bed076", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2bf11d16a01ced5d2bd0500a6896627b7bed076", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2bf11d16a01ced5d2bd0500a6896627b7bed076/comments", "author": null, "committer": null, "parents": [{"sha": "c8338173d725ca0690f25f54e04171ed6cad6be9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8338173d725ca0690f25f54e04171ed6cad6be9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8338173d725ca0690f25f54e04171ed6cad6be9"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "21458cde569eed781bd10e9aeb5527284420bacc", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2bf11d16a01ced5d2bd0500a6896627b7bed076/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2bf11d16a01ced5d2bd0500a6896627b7bed076/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=a2bf11d16a01ced5d2bd0500a6896627b7bed076", "patch": "@@ -1,4 +1,4 @@\n-6f0ac34e139755c319368757fe2a093f1e5bde49\n+eac8b31fec761c8da0606a70ae0547ff0b12e8db\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "ca2280dcecf73f4c10fdabb4e0c2d7ad340e4f19", "filename": "libgo/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2bf11d16a01ced5d2bd0500a6896627b7bed076/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2bf11d16a01ced5d2bd0500a6896627b7bed076/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=a2bf11d16a01ced5d2bd0500a6896627b7bed076", "patch": "@@ -2074,7 +2074,7 @@ libnetgo_a_LIBADD = netgo.o\n LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n \n GOCFLAGS = $(CFLAGS)\n-AM_GOCFLAGS = $(STRINGOPS_FLAG)\n+AM_GOCFLAGS = $(STRINGOPS_FLAG) $(GO_SPLIT_STACK)\n GOCOMPILE = $(GOC) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_GOCFLAGS) $(GOCFLAGS)\n \n LTGOCOMPILE = $(LIBTOOL) --tag GO --mode=compile $(GOC) $(INCLUDES) \\"}, {"sha": "5d7b8c9b377e0872683743ebc599daa430edba70", "filename": "libgo/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2bf11d16a01ced5d2bd0500a6896627b7bed076/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2bf11d16a01ced5d2bd0500a6896627b7bed076/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=a2bf11d16a01ced5d2bd0500a6896627b7bed076", "patch": "@@ -366,6 +366,7 @@ GOCFLAGS = $(CFLAGS)\n GOOS = @GOOS@\n GO_LIBCALL_OS_ARCH_FILE = @GO_LIBCALL_OS_ARCH_FILE@\n GO_LIBCALL_OS_FILE = @GO_LIBCALL_OS_FILE@\n+GO_SPLIT_STACK = @GO_SPLIT_STACK@\n GO_SYSCALL_OS_ARCH_FILE = @GO_SYSCALL_OS_ARCH_FILE@\n GO_SYSCALL_OS_FILE = @GO_SYSCALL_OS_FILE@\n GREP = @GREP@\n@@ -2153,7 +2154,7 @@ libgolibbegin_a_CFLAGS = $(AM_CFLAGS) -fPIC\n libnetgo_a_SOURCES = $(go_netgo_files)\n libnetgo_a_LIBADD = netgo.o\n LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n-AM_GOCFLAGS = $(STRINGOPS_FLAG)\n+AM_GOCFLAGS = $(STRINGOPS_FLAG) $(GO_SPLIT_STACK)\n GOCOMPILE = $(GOC) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_GOCFLAGS) $(GOCFLAGS)\n LTGOCOMPILE = $(LIBTOOL) --tag GO --mode=compile $(GOC) $(INCLUDES) \\\n \t$(AM_GOCFLAGS) $(GOCFLAGS)"}, {"sha": "3dfa1d8725ad3be2a5c13650ede69f7edd608f76", "filename": "libgo/configure", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2bf11d16a01ced5d2bd0500a6896627b7bed076/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2bf11d16a01ced5d2bd0500a6896627b7bed076/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=a2bf11d16a01ced5d2bd0500a6896627b7bed076", "patch": "@@ -620,6 +620,7 @@ NET_LIBS\n MATH_LIBS\n GOC_IS_LLGO_FALSE\n GOC_IS_LLGO_TRUE\n+GO_SPLIT_STACK\n USING_SPLIT_STACK_FALSE\n USING_SPLIT_STACK_TRUE\n SPLIT_STACK\n@@ -11123,7 +11124,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11126 \"configure\"\n+#line 11127 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11229,7 +11230,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11232 \"configure\"\n+#line 11233 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14050,6 +14051,13 @@ else\n fi\n \n \n+if test \"$libgo_cv_c_split_stack_supported\" = yes -a \"$libgo_cv_c_linker_split_non_split\" = no; then\n+  GO_SPLIT_STACK=-fno-split-stack\n+else\n+  GO_SPLIT_STACK=\n+fi\n+\n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether linker supports split stack\" >&5\n $as_echo_n \"checking whether linker supports split stack... \" >&6; }\n if test \"${libgo_cv_c_linker_supports_split_stack+set}\" = set; then :"}, {"sha": "15814bab9cd899fd45fb3239e0d228fc3efc7885", "filename": "libgo/configure.ac", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2bf11d16a01ced5d2bd0500a6896627b7bed076/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2bf11d16a01ced5d2bd0500a6896627b7bed076/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=a2bf11d16a01ced5d2bd0500a6896627b7bed076", "patch": "@@ -407,6 +407,15 @@ AC_SUBST(SPLIT_STACK)\n AM_CONDITIONAL(USING_SPLIT_STACK,\n \ttest \"$libgo_cv_c_split_stack_supported\" = yes -a \"$libgo_cv_c_linker_split_non_split\" = yes)\n \n+dnl If the compiler supports split-stack but the linker does not, then\n+dnl we need to explicitly disable split-stack for Go.\n+if test \"$libgo_cv_c_split_stack_supported\" = yes -a \"$libgo_cv_c_linker_split_non_split\" = no; then\n+  GO_SPLIT_STACK=-fno-split-stack\n+else\n+  GO_SPLIT_STACK=\n+fi\n+AC_SUBST(GO_SPLIT_STACK)\n+\n dnl Check whether the linker does stack munging when calling from\n dnl split-stack into non-split-stack code.  We check this by looking\n dnl at the --help output.  FIXME: This is only half right: it's"}, {"sha": "ba04a504cfb828bbe9e28faae587a982da216ac3", "filename": "libgo/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2bf11d16a01ced5d2bd0500a6896627b7bed076/libgo%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2bf11d16a01ced5d2bd0500a6896627b7bed076/libgo%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Ftestsuite%2FMakefile.in?ref=a2bf11d16a01ced5d2bd0500a6896627b7bed076", "patch": "@@ -108,6 +108,7 @@ GOCFLAGS = @GOCFLAGS@\n GOOS = @GOOS@\n GO_LIBCALL_OS_ARCH_FILE = @GO_LIBCALL_OS_ARCH_FILE@\n GO_LIBCALL_OS_FILE = @GO_LIBCALL_OS_FILE@\n+GO_SPLIT_STACK = @GO_SPLIT_STACK@\n GO_SYSCALL_OS_ARCH_FILE = @GO_SYSCALL_OS_ARCH_FILE@\n GO_SYSCALL_OS_FILE = @GO_SYSCALL_OS_FILE@\n GREP = @GREP@"}]}