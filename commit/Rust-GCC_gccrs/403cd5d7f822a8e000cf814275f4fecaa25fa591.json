{"sha": "403cd5d7f822a8e000cf814275f4fecaa25fa591", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDAzY2Q1ZDdmODIyYThlMDAwY2Y4MTQyNzVmNGZlY2FhMjVmYTU5MQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-16T21:43:38Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-16T21:43:38Z"}, "message": "(REAL_VALUE_FROM_TARGET_SINGLE, .._DOUBLE): Change arg from long to\nHOST_WIDE_INT.\n\nFrom-SVN: r7311", "tree": {"sha": "98659ed579a64c3dfd7daf04770d3784ca4777d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98659ed579a64c3dfd7daf04770d3784ca4777d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/403cd5d7f822a8e000cf814275f4fecaa25fa591", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/403cd5d7f822a8e000cf814275f4fecaa25fa591", "html_url": "https://github.com/Rust-GCC/gccrs/commit/403cd5d7f822a8e000cf814275f4fecaa25fa591", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/403cd5d7f822a8e000cf814275f4fecaa25fa591/comments", "author": null, "committer": null, "parents": [{"sha": "8e1e69c8651236a4d6a97d6c3871720d2b5c680d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e1e69c8651236a4d6a97d6c3871720d2b5c680d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e1e69c8651236a4d6a97d6c3871720d2b5c680d"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "7a885441b5280f21c880d8b940153a22b8944dfd", "filename": "gcc/real.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/403cd5d7f822a8e000cf814275f4fecaa25fa591/gcc%2Freal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/403cd5d7f822a8e000cf814275f4fecaa25fa591/gcc%2Freal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.h?ref=403cd5d7f822a8e000cf814275f4fecaa25fa591", "patch": "@@ -148,8 +148,8 @@ extern long etarsingle\t\tPROTO((REAL_VALUE_TYPE));\n extern void ereal_to_decimal\tPROTO((REAL_VALUE_TYPE, char *));\n extern int ereal_cmp\t\tPROTO((REAL_VALUE_TYPE, REAL_VALUE_TYPE));\n extern int ereal_isneg\t\tPROTO((REAL_VALUE_TYPE));\n-extern REAL_VALUE_TYPE ereal_from_float PROTO((unsigned long));\n-extern REAL_VALUE_TYPE ereal_from_double PROTO((unsigned long *));\n+extern REAL_VALUE_TYPE ereal_from_float PROTO((HOST_WIDE_INT));\n+extern REAL_VALUE_TYPE ereal_from_double PROTO((HOST_WIDE_INT *));\n \n #define REAL_VALUES_EQUAL(x, y) (ereal_cmp ((x), (y)) == 0)\n /* true if x < y : */\n@@ -194,10 +194,11 @@ extern REAL_VALUE_TYPE real_value_truncate ();\n /* IN is a REAL_VALUE_TYPE.  OUT is a long. */\n #define REAL_VALUE_TO_TARGET_SINGLE(IN, OUT) ((OUT) = etarsingle ((IN)))\n \n-/* d is an array of longs. */\n+/* d is an array of HOST_WIDE_INT that holds a double precision\n+   value in the target computer's floating point format. */\n #define REAL_VALUE_FROM_TARGET_DOUBLE(d)  (ereal_from_double (d))\n \n-/* f is a long. */\n+/* f is a HOST_WIDE_INT containing a single precision target float value. */\n #define REAL_VALUE_FROM_TARGET_SINGLE(f)  (ereal_from_float (f))\n \n /* Conversions to decimal ASCII string.  */"}]}