{"sha": "9f9c0549dd42e85e2500ca67cef89dddb142c0c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY5YzA1NDlkZDQyZTg1ZTI1MDBjYTY3Y2VmODlkZGRiMTQyYzBjNw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-08-26T16:30:31Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-08-26T16:44:23Z"}, "message": "libstdc++: Fix regression in hash containers\n\nA recent change altered the layout of EBO-helper base classes, resulting\nin an ambiguity when the hash function and equality predicate are the\nsame type.\n\nThis modifies the type of one of the base classes, so that we don't get\ntwo base classes of the same type.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/hashtable_policy.h (_Hash_code_base): Change\n\tindex of _Hashtable_ebo_helper base class.\n\t* testsuite/23_containers/unordered_map/dup_types.cc: New test.", "tree": {"sha": "51a76f6b33ad81457cbacd2d8a14101f9117cf94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51a76f6b33ad81457cbacd2d8a14101f9117cf94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f9c0549dd42e85e2500ca67cef89dddb142c0c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f9c0549dd42e85e2500ca67cef89dddb142c0c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f9c0549dd42e85e2500ca67cef89dddb142c0c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f9c0549dd42e85e2500ca67cef89dddb142c0c7/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6cd5c3786cd3cdaa794574518585caba9822b09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6cd5c3786cd3cdaa794574518585caba9822b09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6cd5c3786cd3cdaa794574518585caba9822b09"}], "stats": {"total": 37, "additions": 33, "deletions": 4}, "files": [{"sha": "0109ef86a7b524453906fd13e9eafcb17f5fe396", "filename": "libstdc++-v3/include/bits/hashtable_policy.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f9c0549dd42e85e2500ca67cef89dddb142c0c7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable_policy.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f9c0549dd42e85e2500ca67cef89dddb142c0c7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable_policy.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable_policy.h?ref=9f9c0549dd42e85e2500ca67cef89dddb142c0c7", "patch": "@@ -1190,10 +1190,10 @@ namespace __detail\n \t   typename _Hash, typename _RangeHash, typename _Unused>\n     struct _Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash,\n \t\t\t   _Unused, false>\n-    : private _Hashtable_ebo_helper<0, _Hash>\n+    : private _Hashtable_ebo_helper<1, _Hash>\n     {\n     private:\n-      using __ebo_hash = _Hashtable_ebo_helper<0, _Hash>;\n+      using __ebo_hash = _Hashtable_ebo_helper<1, _Hash>;\n \n       // Gives the local iterator implementation access to _M_bucket_index().\n       friend struct _Local_iterator_base<_Key, _Value, _ExtractKey,\n@@ -1260,10 +1260,10 @@ namespace __detail\n \t   typename _Hash, typename _RangeHash, typename _Unused>\n     struct _Hash_code_base<_Key, _Value, _ExtractKey, _Hash, _RangeHash,\n \t\t\t   _Unused, true>\n-    : private _Hashtable_ebo_helper<0, _Hash>\n+    : private _Hashtable_ebo_helper<1, _Hash>\n     {\n     private:\n-      using __ebo_hash = _Hashtable_ebo_helper<0, _Hash>;\n+      using __ebo_hash = _Hashtable_ebo_helper<1, _Hash>;\n \n     public:\n       typedef _Hash\t\t\t\t\thasher;"}, {"sha": "0a6053eca87fcb8d984283384087624b388e5db2", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/dup_types.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f9c0549dd42e85e2500ca67cef89dddb142c0c7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdup_types.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f9c0549dd42e85e2500ca67cef89dddb142c0c7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdup_types.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdup_types.cc?ref=9f9c0549dd42e85e2500ca67cef89dddb142c0c7", "patch": "@@ -0,0 +1,29 @@\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do compile { target c++11 } }\n+\n+#include <unordered_map>\n+\n+struct Evil : std::hash<int>, std::equal_to<int>\n+{ };\n+\n+void test01()\n+{\n+  std::unordered_map<int, int, Evil, Evil> h;\n+  (void) h.key_eq();\n+}"}]}