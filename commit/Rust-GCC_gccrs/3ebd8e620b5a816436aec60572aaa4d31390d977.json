{"sha": "3ebd8e620b5a816436aec60572aaa4d31390d977", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ViZDhlNjIwYjVhODE2NDM2YWVjNjA1NzJhYWE0ZDMxMzkwZDk3Nw==", "commit": {"author": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-04-24T13:16:34Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-04-24T13:16:34Z"}, "message": "Fix (PR middle-end/79931)\n\n2017-04-24  Jan Hubicka  <hubicka@ucw.cz>\n\n\tPR middle-end/79931\n\t* ipa-devirt.c (dump_possible_polymorphic_call_targets): Fix ICE.\n2017-04-24  Martin Liska  <mliska@suse.cz>\n\n\tPR middle-end/79931\n\t* g++.dg/ipa/pr79931.C: New test.\n\nFrom-SVN: r247097", "tree": {"sha": "cf080e126604d97223a82bf7269165ddebb100ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf080e126604d97223a82bf7269165ddebb100ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ebd8e620b5a816436aec60572aaa4d31390d977", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ebd8e620b5a816436aec60572aaa4d31390d977", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ebd8e620b5a816436aec60572aaa4d31390d977", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ebd8e620b5a816436aec60572aaa4d31390d977/comments", "author": null, "committer": null, "parents": [{"sha": "f30a1190ffff2c7fd5df923dbae1c16549cb8575", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f30a1190ffff2c7fd5df923dbae1c16549cb8575", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f30a1190ffff2c7fd5df923dbae1c16549cb8575"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "487e8b0189b51832f2c3d8db0ba4d1106d6e1c33", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ebd8e620b5a816436aec60572aaa4d31390d977/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ebd8e620b5a816436aec60572aaa4d31390d977/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ebd8e620b5a816436aec60572aaa4d31390d977", "patch": "@@ -1,3 +1,8 @@\n+2017-04-24  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR middle-end/79931\n+\t* ipa-devirt.c (dump_possible_polymorphic_call_targets): Fix ICE.\n+\n 2017-04-24  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/80494"}, {"sha": "e013a26a4a0d20c386b950921965aa0b7f0c6828", "filename": "gcc/ipa-devirt.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ebd8e620b5a816436aec60572aaa4d31390d977/gcc%2Fipa-devirt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ebd8e620b5a816436aec60572aaa4d31390d977/gcc%2Fipa-devirt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-devirt.c?ref=3ebd8e620b5a816436aec60572aaa4d31390d977", "patch": "@@ -3367,7 +3367,13 @@ dump_possible_polymorphic_call_targets (FILE *f,\n       fprintf (f, \"  Speculative targets:\");\n       dump_targets (f, targets);\n     }\n-  gcc_assert (targets.length () <= len);\n+  /* Ugly: during callgraph construction the target cache may get populated\n+     before all targets are found.  While this is harmless (because all local\n+     types are discovered and only in those case we devirtualize fully and we\n+     don't do speculative devirtualization before IPA stage) it triggers\n+     assert here when dumping at that stage also populates the case with\n+     speculative targets.  Quietly ignore this.  */\n+  gcc_assert (symtab->state < IPA_SSA || targets.length () <= len);\n   fprintf (f, \"\\n\");\n }\n "}, {"sha": "8032d96ed8f65e096a35e78a24b0f8de2dfc53e6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ebd8e620b5a816436aec60572aaa4d31390d977/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ebd8e620b5a816436aec60572aaa4d31390d977/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3ebd8e620b5a816436aec60572aaa4d31390d977", "patch": "@@ -1,3 +1,8 @@\n+2017-04-24  Martin Liska  <mliska@suse.cz>\n+\n+\tPR middle-end/79931\n+\t* g++.dg/ipa/pr79931.C: New test.\n+\n 2017-04-24  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/80494"}, {"sha": "78f6e03c458781d2a617ebe18d4d75791002ae95", "filename": "gcc/testsuite/g++.dg/ipa/pr79931.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ebd8e620b5a816436aec60572aaa4d31390d977/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr79931.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ebd8e620b5a816436aec60572aaa4d31390d977/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr79931.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr79931.C?ref=3ebd8e620b5a816436aec60572aaa4d31390d977", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-ipa-all\" } */\n+\n+class DocumentImpl;\n+struct NodeImpl\n+{\n+  virtual DocumentImpl * getOwnerDocument();\n+  virtual NodeImpl * getParentNode();\n+  virtual NodeImpl * removeChild(NodeImpl *oldChild);\n+};\n+struct AttrImpl : NodeImpl\n+{\n+  NodeImpl *insertBefore(NodeImpl *newChild, NodeImpl *refChild);\n+};\n+struct DocumentImpl : NodeImpl\n+{\n+  virtual NodeImpl *removeChild(NodeImpl *oldChild);\n+  virtual int* getRanges();\n+};\n+NodeImpl *AttrImpl::insertBefore(NodeImpl *newChild, NodeImpl *refChild) {\n+  NodeImpl *oldparent = newChild->getParentNode();\n+  oldparent->removeChild(newChild);\n+  this->getOwnerDocument()->getRanges();\n+}"}]}