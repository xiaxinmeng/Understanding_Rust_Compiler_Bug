{"sha": "7950c96ca667ddaab9d6e894da3958ebc2e2dccb", "node_id": "C_kwDOANBUbNoAKDc5NTBjOTZjYTY2N2RkYWFiOWQ2ZTg5NGRhMzk1OGViYzJlMmRjY2I", "commit": {"author": {"name": "Jeff Law", "email": "jeffreyalaw@gmail.com", "date": "2021-11-20T16:20:07Z"}, "committer": {"name": "Jeff Law", "email": "jeffreyalaw@gmail.com", "date": "2021-11-20T16:30:09Z"}, "message": "Clobber the condition code in the bfin doloop patterns\n\nPer Aldy's excellent, but tough to follow analysis in PR 103226, this patch\nfixes the bfin-elf regression.\n\nIn simplest terms the doloop patterns on this port may clobber the condition\ncode register, but they do not expose that until after register allocation.\nThat would be fine, except that other patterns have exposed CC earlier.  As\na result the dataflow, particularly for CC, is incorrect.\n\nThis leads the register allocators to assume that a value in CC outside the\nloop is still valid inside the loop when in fact, the value has been\nclobbered.  This is what caused pr80974 to start failing.\n\nWith this fix, not only do we fix the pr80974 regression, but we fix ~20\nother execution failures in the port.  It also reduces test time for the\nport from ~90 minutes to ~60 minutes.\n\n\tPR tree-optimization/103226\ngcc/\n\t* config/bfin/bfin.md (doloop pattern, splitter and expander): Clobber\n\tCC.", "tree": {"sha": "31152df96b876a7eaf6c9b22aa18bae5df44639e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31152df96b876a7eaf6c9b22aa18bae5df44639e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7950c96ca667ddaab9d6e894da3958ebc2e2dccb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7950c96ca667ddaab9d6e894da3958ebc2e2dccb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7950c96ca667ddaab9d6e894da3958ebc2e2dccb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7950c96ca667ddaab9d6e894da3958ebc2e2dccb/comments", "author": {"login": "JeffreyALaw", "id": 14062506, "node_id": "MDQ6VXNlcjE0MDYyNTA2", "avatar_url": "https://avatars.githubusercontent.com/u/14062506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeffreyALaw", "html_url": "https://github.com/JeffreyALaw", "followers_url": "https://api.github.com/users/JeffreyALaw/followers", "following_url": "https://api.github.com/users/JeffreyALaw/following{/other_user}", "gists_url": "https://api.github.com/users/JeffreyALaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeffreyALaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeffreyALaw/subscriptions", "organizations_url": "https://api.github.com/users/JeffreyALaw/orgs", "repos_url": "https://api.github.com/users/JeffreyALaw/repos", "events_url": "https://api.github.com/users/JeffreyALaw/events{/privacy}", "received_events_url": "https://api.github.com/users/JeffreyALaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JeffreyALaw", "id": 14062506, "node_id": "MDQ6VXNlcjE0MDYyNTA2", "avatar_url": "https://avatars.githubusercontent.com/u/14062506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeffreyALaw", "html_url": "https://github.com/JeffreyALaw", "followers_url": "https://api.github.com/users/JeffreyALaw/followers", "following_url": "https://api.github.com/users/JeffreyALaw/following{/other_user}", "gists_url": "https://api.github.com/users/JeffreyALaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeffreyALaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeffreyALaw/subscriptions", "organizations_url": "https://api.github.com/users/JeffreyALaw/orgs", "repos_url": "https://api.github.com/users/JeffreyALaw/repos", "events_url": "https://api.github.com/users/JeffreyALaw/events{/privacy}", "received_events_url": "https://api.github.com/users/JeffreyALaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f40d34b6dd30ed076f9beb9a88e7ec264c1a55a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f40d34b6dd30ed076f9beb9a88e7ec264c1a55a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f40d34b6dd30ed076f9beb9a88e7ec264c1a55a"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "10a19aac23e83929e4207ca5799d0499dda4430a", "filename": "gcc/config/bfin/bfin.md", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7950c96ca667ddaab9d6e894da3958ebc2e2dccb/gcc%2Fconfig%2Fbfin%2Fbfin.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7950c96ca667ddaab9d6e894da3958ebc2e2dccb/gcc%2Fconfig%2Fbfin%2Fbfin.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.md?ref=7950c96ca667ddaab9d6e894da3958ebc2e2dccb", "patch": "@@ -1959,7 +1959,8 @@\n \t\t   (plus:SI (match_dup 0)\n \t\t\t    (const_int -1)))\n \t      (unspec [(const_int 0)] UNSPEC_LSETUP_END)\n-\t      (clobber (match_dup 2))])] ; match_scratch\n+\t      (clobber (match_dup 2))\n+\t      (clobber (reg:BI REG_CC))])] ; match_scratch\n   \"\"\n {\n   /* The loop optimizer doesn't check the predicates... */\n@@ -1979,7 +1980,8 @@\n \t(plus (match_dup 2)\n \t      (const_int -1)))\n    (unspec [(const_int 0)] UNSPEC_LSETUP_END)\n-   (clobber (match_scratch:SI 3 \"=X,&r,&r\"))]\n+   (clobber (match_scratch:SI 3 \"=X,&r,&r\"))\n+   (clobber (reg:BI REG_CC))]\n   \"\"\n   \"@\n    /* loop end %0 %l1 */\n@@ -1997,7 +1999,8 @@\n \t(plus (match_dup 0)\n \t      (const_int -1)))\n    (unspec [(const_int 0)] UNSPEC_LSETUP_END)\n-   (clobber (match_scratch:SI 2))]\n+   (clobber (match_scratch:SI 2))\n+   (clobber (reg:BI REG_CC))]\n   \"memory_operand (operands[0], SImode) || splitting_loops\"\n   [(set (match_dup 2) (match_dup 0))\n    (set (match_dup 2) (plus:SI (match_dup 2) (const_int -1)))"}]}