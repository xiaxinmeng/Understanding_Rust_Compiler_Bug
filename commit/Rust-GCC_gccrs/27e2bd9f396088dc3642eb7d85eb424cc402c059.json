{"sha": "27e2bd9f396088dc3642eb7d85eb424cc402c059", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdlMmJkOWYzOTYwODhkYzM2NDJlYjdkODVlYjQyNGNjNDAyYzA1OQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-09-03T09:24:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-09-03T09:24:51Z"}, "message": "re PR ipa/66705 (section is missing linker error with -flto -fipa-pta)\n\n2015-09-03  Richard Biener  <rguenther@suse.de>\n\n\tPR ipa/66705\n\t* tree-ssa-structalias.c (ctor_for_analysis): New function.\n\t(create_variable_info_for_1): Use ctor_for_analysis instead\n\tof get_constructor.\n\t(create_variable_info_for): Likewise.\n\n\t* g++.dg/lto/pr66705_0.C: New testcase.\n\nFrom-SVN: r227430", "tree": {"sha": "ead69482c31370a517cfeba74e2268fa0350d7e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ead69482c31370a517cfeba74e2268fa0350d7e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27e2bd9f396088dc3642eb7d85eb424cc402c059", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27e2bd9f396088dc3642eb7d85eb424cc402c059", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27e2bd9f396088dc3642eb7d85eb424cc402c059", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27e2bd9f396088dc3642eb7d85eb424cc402c059/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "37d13ae648b7688104ddcf0e34d4fa486730a2c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37d13ae648b7688104ddcf0e34d4fa486730a2c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37d13ae648b7688104ddcf0e34d4fa486730a2c1"}], "stats": {"total": 43, "additions": 34, "deletions": 9}, "files": [{"sha": "f20e551f5ed1a66ca30c71a23245aebdd4a3c874", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e2bd9f396088dc3642eb7d85eb424cc402c059/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e2bd9f396088dc3642eb7d85eb424cc402c059/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=27e2bd9f396088dc3642eb7d85eb424cc402c059", "patch": "@@ -1,3 +1,11 @@\n+2015-09-03  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/66705\n+\t* tree-ssa-structalias.c (ctor_for_analysis): New function.\n+\t(create_variable_info_for_1): Use ctor_for_analysis instead\n+\tof get_constructor.\n+\t(create_variable_info_for): Likewise.\n+\n 2015-09-02  Charles Baylis  <charles.baylis@linaro.org>\n \n \t* cgraphunit.c (cgraph_node::create_wrapper): Set can_throw_external"}, {"sha": "97bdd7a10ea4eacf5eb61bf19feec93fc6f5a243", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e2bd9f396088dc3642eb7d85eb424cc402c059/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e2bd9f396088dc3642eb7d85eb424cc402c059/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=27e2bd9f396088dc3642eb7d85eb424cc402c059", "patch": "@@ -1,3 +1,8 @@\n+2015-09-03  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/66705\n+\t* g++.dg/lto/pr66705_0.C: New testcase.\n+\n 2015-09-02  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n \n \tPR middle-end/60586"}, {"sha": "faf3f2d24c40ba4213ed5bfd8ebc1f422dcae907", "filename": "gcc/testsuite/g++.dg/lto/pr66705_0.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e2bd9f396088dc3642eb7d85eb424cc402c059/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr66705_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e2bd9f396088dc3642eb7d85eb424cc402c059/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr66705_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr66705_0.C?ref=27e2bd9f396088dc3642eb7d85eb424cc402c059", "patch": "@@ -0,0 +1,15 @@\n+// { dg-lto-do link }\n+// { dg-lto-options { { -O2 -flto -flto-partition=max -fipa-pta } } }\n+// { dg-extra-ld-options \"-r -nostdlib\" }\n+\n+class A {\n+public:\n+    A();\n+};\n+int a = 0;\n+void foo() {\n+    a = 0;\n+    A b;\n+    for (; a;)\n+      ;\n+}"}, {"sha": "5800f8c5739c01e9fbdd32f84c32d877657db60a", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e2bd9f396088dc3642eb7d85eb424cc402c059/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e2bd9f396088dc3642eb7d85eb424cc402c059/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=27e2bd9f396088dc3642eb7d85eb424cc402c059", "patch": "@@ -5619,7 +5619,6 @@ create_variable_info_for_1 (tree decl, const char *name)\n   auto_vec<fieldoff_s> fieldstack;\n   fieldoff_s *fo;\n   unsigned int i;\n-  varpool_node *vnode;\n \n   if (!declsize\n       || !tree_fits_uhwi_p (declsize))\n@@ -5637,12 +5636,10 @@ create_variable_info_for_1 (tree decl, const char *name)\n   /* Collect field information.  */\n   if (use_field_sensitive\n       && var_can_have_subvars (decl)\n-      /* ???  Force us to not use subfields for global initializers\n-\t in IPA mode.  Else we'd have to parse arbitrary initializers.  */\n+      /* ???  Force us to not use subfields for globals in IPA mode.\n+\t Else we'd have to parse arbitrary initializers.  */\n       && !(in_ipa_mode\n-\t   && is_global_var (decl)\n-\t   && (vnode = varpool_node::get (decl))\n-\t   && vnode->get_constructor ()))\n+\t   && is_global_var (decl)))\n     {\n       fieldoff_s *fo = NULL;\n       bool notokay = false;\n@@ -5774,13 +5771,13 @@ create_variable_info_for (tree decl, const char *name)\n \n \t  /* If this is a global variable with an initializer and we are in\n \t     IPA mode generate constraints for it.  */\n-\t  if (vnode->get_constructor ()\n-\t      && vnode->definition)\n+\t  ipa_ref *ref;\n+\t  for (unsigned idx = 0; vnode->iterate_reference (idx, ref); ++idx)\n \t    {\n \t      auto_vec<ce_s> rhsc;\n \t      struct constraint_expr lhs, *rhsp;\n \t      unsigned i;\n-\t      get_constraint_for_rhs (vnode->get_constructor (), &rhsc);\n+\t      get_constraint_for_address_of (ref->referred->decl, &rhsc);\n \t      lhs.var = vi->id;\n \t      lhs.offset = 0;\n \t      lhs.type = SCALAR;"}]}