{"sha": "6c2e3cab3d07f4af06b2ddf8a0ed843e6989f936", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMyZTNjYWIzZDA3ZjRhZjA2YjJkZGY4YTBlZDg0M2U2OTg5ZjkzNg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-23T22:08:20Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-23T22:08:20Z"}, "message": "Initial revision\n\nFrom-SVN: r2577", "tree": {"sha": "e8ff6767170f1322c45a5a51bb1b9261ed806d59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8ff6767170f1322c45a5a51bb1b9261ed806d59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c2e3cab3d07f4af06b2ddf8a0ed843e6989f936", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c2e3cab3d07f4af06b2ddf8a0ed843e6989f936", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c2e3cab3d07f4af06b2ddf8a0ed843e6989f936", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c2e3cab3d07f4af06b2ddf8a0ed843e6989f936/comments", "author": null, "committer": null, "parents": [{"sha": "2cd3f8bb9b355e77fc9dcdb9bd6741a3c47b2085", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cd3f8bb9b355e77fc9dcdb9bd6741a3c47b2085", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cd3f8bb9b355e77fc9dcdb9bd6741a3c47b2085"}], "stats": {"total": 92, "additions": 92, "deletions": 0}, "files": [{"sha": "d26ecba381f7151bd1ae8aa7bc528f9ad4d4c64f", "filename": "gcc/config/i386/aix386ng.h", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c2e3cab3d07f4af06b2ddf8a0ed843e6989f936/gcc%2Fconfig%2Fi386%2Faix386ng.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c2e3cab3d07f4af06b2ddf8a0ed843e6989f936/gcc%2Fconfig%2Fi386%2Faix386ng.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Faix386ng.h?ref=6c2e3cab3d07f4af06b2ddf8a0ed843e6989f936", "patch": "@@ -0,0 +1,92 @@\n+/* Definitions for IBM PS2 running AIX/386.\n+   From: Minh Tran-Le <TRANLE@intellicorp.com>\n+   Copyright (C) 1988 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+\n+#include \"i386.h\"\n+\n+/* Get the generic definitions for system V.3.  */\n+\n+#include \"svr3.h\"\n+\n+/* Use the ATT assembler syntax.\n+   This overrides at least one macro (ASM_OUTPUT_LABELREF) from svr3.h.  */\n+\n+#include \"att386.h\"\n+\n+/* Use crt1.o as a startup file and crtn.o as a closing file.  */\n+\n+#define STARTFILE_SPEC  \\\n+  \"%{pg:gcrt1.o%s}%{!pg:%{p:mcrt1.o%s}%{!p:crt1.o%s}} crtbegin.o%s\"\n+\n+#define LIB_SPEC \"%{p:-L/usr/lib/libp}%{pg:-L/usr/lib/libp} -lc \\\n+  crtend.o%s crtn.o%s\"\n+\n+/* Special flags for the linker.  I don't know what they do.  */\n+\n+#define LINK_SPEC \"%{K} %{!K:-K} %{T*} %{z:-lm}\"\n+\n+/* Specify predefined symbols in preprocessor.  */\n+\n+#define CPP_PREDEFINES \"-D_I386 -Di386 -DAIX -D_AIX\"\n+\n+/* special flags for the aix assembler to generate the short form for all\n+   qualifying forward reference */\n+\n+#define ASM_SPEC \"-s2\"\n+\n+#undef ASM_FILE_START\n+#define ASM_FILE_START(FILE) \t\t\t\t\t\\\n+  do { fprintf (FILE, \"\\t.file\\t\\\"%s\\\"\\n\", dump_base_name);\t\\\n+       if (optimize)\t\t\t\t\t\t\\\n+          ASM_FILE_START_1 (FILE); \t\t\t\t\\\n+       else\t\t\t\t\t\t\t\\\n+          fprintf (FILE, \"\\t.noopt\\n\");\t\t\t\t\\\n+     } while (0)\n+\n+/* This was suggested, but it shouldn't be right for DBX output. -- RMS\n+   #define ASM_OUTPUT_SOURCE_FILENAME(FILE, NAME) */\n+\n+/* Writing `int' for a bitfield forces int alignment for the structure.  */\n+\n+#define PCC_BITFIELD_TYPE_MATTERS 1\n+\n+#if 0\n+/* Don't write a `.optim' pseudo; this assembler\n+   is said to have a bug when .optim is used.  */\n+\n+#undef ASM_FILE_START_1\n+#define ASM_FILE_START_1(FILE) fprintf (FILE, \"\\t.noopt\\n\");\n+#endif\n+\f\n+/* Output assembler code to FILE to increment profiler label # LABELNO\n+   for profiling a function entry.  */\n+\n+#undef FUNCTION_PROFILER\n+#define FUNCTION_PROFILER(FILE, LABELNO)  \\\n+   fprintf (FILE, \"\\tleal %sP%d,%%eax\\n\\tcall mcount\\n\", LPREFIX, (LABELNO));\n+\n+/* Note that using bss_section here caused errors\n+   in building shared libraries on system V.3.\n+   but AIX 1.2 does not have yet shareable libraries on PS2 */\n+#undef ASM_OUTPUT_LOCAL\n+#define ASM_OUTPUT_LOCAL(FILE, NAME, SIZE, ROUNDED)  \\\n+  (bss_section (),\t\t\t\t\t\\\n+   ASM_OUTPUT_LABEL ((FILE), (NAME)),\t\t\t\\\n+   fprintf ((FILE), \"\\t.set .,.+%u\\n\", (ROUNDED)))"}]}