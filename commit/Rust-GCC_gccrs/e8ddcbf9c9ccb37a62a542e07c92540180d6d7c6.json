{"sha": "e8ddcbf9c9ccb37a62a542e07c92540180d6d7c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThkZGNiZjljOWNjYjM3YTYyYTU0MmUwN2M5MjU0MDE4MGQ2ZDdjNg==", "commit": {"author": {"name": "Chen Liqin", "email": "liqin.chen@sunplusct.com", "date": "2008-12-01T08:47:26Z"}, "committer": {"name": "Chen Liqin", "email": "liqin@gcc.gnu.org", "date": "2008-12-01T08:47:26Z"}, "message": "score.h (IRA_COVER_CLASSES): Define.\n\n2008-12-01  Chen Liqin  <liqin.chen@sunplusct.com>\n\n\t* config/score/score.h (IRA_COVER_CLASSES): Define.\n\nFrom-SVN: r142307", "tree": {"sha": "c5756e16011cb39d215ce9a52cd45b22860e7d28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5756e16011cb39d215ce9a52cd45b22860e7d28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8ddcbf9c9ccb37a62a542e07c92540180d6d7c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8ddcbf9c9ccb37a62a542e07c92540180d6d7c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8ddcbf9c9ccb37a62a542e07c92540180d6d7c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8ddcbf9c9ccb37a62a542e07c92540180d6d7c6/comments", "author": null, "committer": null, "parents": [{"sha": "df72d7edbebecc77c8e7a6a4013c3109de88d56b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df72d7edbebecc77c8e7a6a4013c3109de88d56b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df72d7edbebecc77c8e7a6a4013c3109de88d56b"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "feb2d26d79bae2b56d9a47089f61fac3002362e3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ddcbf9c9ccb37a62a542e07c92540180d6d7c6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ddcbf9c9ccb37a62a542e07c92540180d6d7c6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8ddcbf9c9ccb37a62a542e07c92540180d6d7c6", "patch": "@@ -1,3 +1,7 @@\n+2008-12-01  Chen Liqin  <liqin.chen@sunplusct.com>\n+\n+\t* config/score/score.h (IRA_COVER_CLASSES): Define.\n+\n 2008-11-30  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR target/38287"}, {"sha": "7f09feb389481fdabba39c4155edd163a285adb7", "filename": "gcc/config/score/score.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ddcbf9c9ccb37a62a542e07c92540180d6d7c6/gcc%2Fconfig%2Fscore%2Fscore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ddcbf9c9ccb37a62a542e07c92540180d6d7c6/gcc%2Fconfig%2Fscore%2Fscore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fscore.h?ref=e8ddcbf9c9ccb37a62a542e07c92540180d6d7c6", "patch": "@@ -438,6 +438,18 @@ enum reg_class\n    also contains the register.  */\n #define REGNO_REG_CLASS(REGNO)         score_reg_class (REGNO)\n \n+/* The following macro defines cover classes for Integrated Register\n+   Allocator.  Cover classes is a set of non-intersected register\n+   classes covering all hard registers used for register allocation\n+   purpose.  Any move between two registers of a cover class should be\n+   cheaper than load or store of the registers.  The macro value is\n+   array of register classes with LIM_REG_CLASSES used as the end\n+   marker.  */\n+#define IRA_COVER_CLASSES\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  G32_REGS, CE_REGS, SP_REGS, LIM_REG_CLASSES\t\t\t\\\n+}\n+\n /* A macro whose definition is the name of the class to which a\n    valid base register must belong.  A base register is one used in\n    an address which is the register value plus a displacement.  */"}]}