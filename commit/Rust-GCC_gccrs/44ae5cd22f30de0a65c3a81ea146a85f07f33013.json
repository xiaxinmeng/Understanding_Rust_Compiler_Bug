{"sha": "44ae5cd22f30de0a65c3a81ea146a85f07f33013", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDRhZTVjZDIyZjMwZGUwYTY1YzNhODFlYTE0NmE4NWYwN2YzMzAxMw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-05-22T08:21:22Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-05-22T08:21:22Z"}, "message": "[AArch64] Add __extension__ and __always_inline__ to crypto intrinsics\n\n\t* config/aarch64/arm_neon.h (vaeseq_u8): Add __extension__ and\n\t__always_inline__ attribute.\n\t(vaesdq_u8): Likewise.\n\t(vaesmcq_u8): Likewise.\n\t(vaesimcq_u8): Likewise.\n\t(vsha1cq_u32): Likewise.\n\t(vsha1mq_u32): Likewise.\n\t(vsha1pq_u32): Likewise.\n\t(vsha1h_u32): Likewise.\n\t(vsha1su0q_u32): Likewise.\n\t(vsha1su1q_u32): Likewise.\n\t(vsha256hq_u32): Likewise.\n\t(vsha256h2q_u32): Likewise.\n\t(vsha256su0q_u32): Likewise.\n\t(vsha256su1q_u32): Likewise.\n\t(vmull_p64): Likewise.\n\t(vmull_high_p64): Likewise.\n\nFrom-SVN: r223523", "tree": {"sha": "5212087aa17753972b8cc31fe2839186a5340abd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5212087aa17753972b8cc31fe2839186a5340abd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44ae5cd22f30de0a65c3a81ea146a85f07f33013", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44ae5cd22f30de0a65c3a81ea146a85f07f33013", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44ae5cd22f30de0a65c3a81ea146a85f07f33013", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44ae5cd22f30de0a65c3a81ea146a85f07f33013/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d87834de87432d0ad05ca62ffcd68aba34bc0bc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d87834de87432d0ad05ca62ffcd68aba34bc0bc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d87834de87432d0ad05ca62ffcd68aba34bc0bc8"}], "stats": {"total": 54, "additions": 38, "deletions": 16}, "files": [{"sha": "fa8e76502d46dac291bfdcbb3b3d26256665b7dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44ae5cd22f30de0a65c3a81ea146a85f07f33013/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44ae5cd22f30de0a65c3a81ea146a85f07f33013/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=44ae5cd22f30de0a65c3a81ea146a85f07f33013", "patch": "@@ -1,3 +1,23 @@\n+2015-05-22  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/arm_neon.h (vaeseq_u8): Add __extension__ and\n+\t__always_inline__ attribute.\n+\t(vaesdq_u8): Likewise.\n+\t(vaesmcq_u8): Likewise.\n+\t(vaesimcq_u8): Likewise.\n+\t(vsha1cq_u32): Likewise.\n+\t(vsha1mq_u32): Likewise.\n+\t(vsha1pq_u32): Likewise.\n+\t(vsha1h_u32): Likewise.\n+\t(vsha1su0q_u32): Likewise.\n+\t(vsha1su1q_u32): Likewise.\n+\t(vsha256hq_u32): Likewise.\n+\t(vsha256h2q_u32): Likewise.\n+\t(vsha256su0q_u32): Likewise.\n+\t(vsha256su1q_u32): Likewise.\n+\t(vmull_p64): Likewise.\n+\t(vmull_high_p64): Likewise.\n+\n 2015-05-20  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* final.c (final_scan_insn): Don't check HAVE_peephole with the"}, {"sha": "114994e48b7877f4a54ddba42127a92fe837e4c6", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 18, "deletions": 16, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44ae5cd22f30de0a65c3a81ea146a85f07f33013/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44ae5cd22f30de0a65c3a81ea146a85f07f33013/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=44ae5cd22f30de0a65c3a81ea146a85f07f33013", "patch": "@@ -11400,25 +11400,25 @@ vbslq_u64 (uint64x2_t __a, uint64x2_t __b, uint64x2_t __c)\n \n /* vaes  */\n \n-static __inline uint8x16_t\n+__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vaeseq_u8 (uint8x16_t data, uint8x16_t key)\n {\n   return __builtin_aarch64_crypto_aesev16qi_uuu (data, key);\n }\n \n-static __inline uint8x16_t\n+__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vaesdq_u8 (uint8x16_t data, uint8x16_t key)\n {\n   return __builtin_aarch64_crypto_aesdv16qi_uuu (data, key);\n }\n \n-static __inline uint8x16_t\n+__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vaesmcq_u8 (uint8x16_t data)\n {\n   return __builtin_aarch64_crypto_aesmcv16qi_uu (data);\n }\n \n-static __inline uint8x16_t\n+__extension__ static __inline uint8x16_t __attribute__ ((__always_inline__))\n vaesimcq_u8 (uint8x16_t data)\n {\n   return __builtin_aarch64_crypto_aesimcv16qi_uu (data);\n@@ -21053,72 +21053,74 @@ vrsrad_n_u64 (uint64_t __a, uint64_t __b, const int __c)\n \n /* vsha1  */\n \n-static __inline uint32x4_t\n+__extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vsha1cq_u32 (uint32x4_t hash_abcd, uint32_t hash_e, uint32x4_t wk)\n {\n   return __builtin_aarch64_crypto_sha1cv4si_uuuu (hash_abcd, hash_e, wk);\n }\n-static __inline uint32x4_t\n+\n+__extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vsha1mq_u32 (uint32x4_t hash_abcd, uint32_t hash_e, uint32x4_t wk)\n {\n   return __builtin_aarch64_crypto_sha1mv4si_uuuu (hash_abcd, hash_e, wk);\n }\n-static __inline uint32x4_t\n+\n+__extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vsha1pq_u32 (uint32x4_t hash_abcd, uint32_t hash_e, uint32x4_t wk)\n {\n   return __builtin_aarch64_crypto_sha1pv4si_uuuu (hash_abcd, hash_e, wk);\n }\n \n-static __inline uint32_t\n+__extension__ static __inline uint32_t __attribute__ ((__always_inline__))\n vsha1h_u32 (uint32_t hash_e)\n {\n   return __builtin_aarch64_crypto_sha1hsi_uu (hash_e);\n }\n \n-static __inline uint32x4_t\n+__extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vsha1su0q_u32 (uint32x4_t w0_3, uint32x4_t w4_7, uint32x4_t w8_11)\n {\n   return __builtin_aarch64_crypto_sha1su0v4si_uuuu (w0_3, w4_7, w8_11);\n }\n \n-static __inline uint32x4_t\n+__extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vsha1su1q_u32 (uint32x4_t tw0_3, uint32x4_t w12_15)\n {\n   return __builtin_aarch64_crypto_sha1su1v4si_uuu (tw0_3, w12_15);\n }\n \n-static __inline uint32x4_t\n+__extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vsha256hq_u32 (uint32x4_t hash_abcd, uint32x4_t hash_efgh, uint32x4_t wk)\n {\n   return __builtin_aarch64_crypto_sha256hv4si_uuuu (hash_abcd, hash_efgh, wk);\n }\n \n-static __inline uint32x4_t\n+__extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vsha256h2q_u32 (uint32x4_t hash_efgh, uint32x4_t hash_abcd, uint32x4_t wk)\n {\n   return __builtin_aarch64_crypto_sha256h2v4si_uuuu (hash_efgh, hash_abcd, wk);\n }\n \n-static __inline uint32x4_t\n+__extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vsha256su0q_u32 (uint32x4_t w0_3, uint32x4_t w4_7)\n {\n   return __builtin_aarch64_crypto_sha256su0v4si_uuu (w0_3, w4_7);\n }\n \n-static __inline uint32x4_t\n+__extension__ static __inline uint32x4_t __attribute__ ((__always_inline__))\n vsha256su1q_u32 (uint32x4_t tw0_3, uint32x4_t w8_11, uint32x4_t w12_15)\n {\n   return __builtin_aarch64_crypto_sha256su1v4si_uuuu (tw0_3, w8_11, w12_15);\n }\n \n-static __inline poly128_t\n+__extension__ static __inline poly128_t __attribute__ ((__always_inline__))\n vmull_p64 (poly64_t a, poly64_t b)\n {\n   return\n     __builtin_aarch64_crypto_pmulldi_ppp (a, b);\n }\n \n-static __inline poly128_t\n+__extension__ static __inline poly128_t __attribute__ ((__always_inline__))\n vmull_high_p64 (poly64x2_t a, poly64x2_t b)\n {\n   return __builtin_aarch64_crypto_pmullv2di_ppp (a, b);"}]}