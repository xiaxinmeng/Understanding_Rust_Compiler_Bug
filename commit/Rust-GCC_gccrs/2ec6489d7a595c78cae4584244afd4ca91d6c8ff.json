{"sha": "2ec6489d7a595c78cae4584244afd4ca91d6c8ff", "node_id": "C_kwDOANBUbNoAKDJlYzY0ODlkN2E1OTVjNzhjYWU0NTg0MjQ0YWZkNGNhOTFkNmM4ZmY", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-09-23T07:10:16Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-09-23T07:10:16Z"}, "message": "attribs: Improve diagnostics\n\nWhen looking at the attribs code, I've noticed weird diagnostics\nlike\nint a __attribute__((section (\"foo\", \"bar\")));\na.c:1:1: error: wrong number of arguments specified for \u2018section\u2019 attribute\n    1 | int a __attribute__((section (\"foo\", \"bar\")));\n      | ^~~\na.c:1:1: note: expected between 1 and 1, found 2\nAs roughly 50% of attributes that accept any arguments have\nspec->min_length == spec->max_length, I think it is worth it to have\nseparate wording for such common case and just write simpler\na.c:1:1: note: expected 1, found 2\n\n2022-09-23  Jakub Jelinek  <jakub@redhat.com>\n\n\t* attribs.cc (decl_attributes): Improve diagnostics, instead of\n\tsaying expected between 1 and 1, found 2 just say expected 1, found 2.", "tree": {"sha": "c33aaffb1043c4b6e42f1f31aa54b720b89a1082", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c33aaffb1043c4b6e42f1f31aa54b720b89a1082"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ec6489d7a595c78cae4584244afd4ca91d6c8ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ec6489d7a595c78cae4584244afd4ca91d6c8ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ec6489d7a595c78cae4584244afd4ca91d6c8ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ec6489d7a595c78cae4584244afd4ca91d6c8ff/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a282f086ef26d90e9785e992cd09a0d118b24695", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a282f086ef26d90e9785e992cd09a0d118b24695", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a282f086ef26d90e9785e992cd09a0d118b24695"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "b1f103222aac7ad087b02ad97c4ed4da6ff699f5", "filename": "gcc/attribs.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ec6489d7a595c78cae4584244afd4ca91d6c8ff/gcc%2Fattribs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ec6489d7a595c78cae4584244afd4ca91d6c8ff/gcc%2Fattribs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.cc?ref=2ec6489d7a595c78cae4584244afd4ca91d6c8ff", "patch": "@@ -737,6 +737,9 @@ decl_attributes (tree *node, tree attributes, int flags,\n \t      if (spec->max_length < 0)\n \t\tinform (input_location, \"expected %i or more, found %i\",\n \t\t\tspec->min_length, nargs);\n+\t      else if (spec->min_length == spec->max_length)\n+\t\tinform (input_location, \"expected %i, found %i\",\n+\t\t\tspec->min_length, nargs);\n \t      else\n \t\tinform (input_location, \"expected between %i and %i, found %i\",\n \t\t\tspec->min_length, spec->max_length, nargs);"}]}