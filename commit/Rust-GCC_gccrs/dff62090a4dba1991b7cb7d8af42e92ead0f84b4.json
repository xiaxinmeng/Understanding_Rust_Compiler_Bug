{"sha": "dff62090a4dba1991b7cb7d8af42e92ead0f84b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGZmNjIwOTBhNGRiYTE5OTFiN2NiN2Q4YWY0MmU5MmVhZDBmODRiNA==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2011-07-21T22:56:29Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2011-07-21T22:56:29Z"}, "message": "Start counting nesting level from 0 and use the standard \"Polyhedral SCattering Transformed\" psct_* interface.\n\n2011-07-21  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-clast-to-gimple.c (compute_bounds_for_level): Call\n\tpsct_dynamic_dim.\n\t(translate_clast_for_loop): Pass loop level to dependency_in_loop_p.\n\t(gcc_type_for_iv_of_clast_loop): Update use of level.\n\t(gloog): Start counting nesting level from 0.\n\t* graphite-clast-to-gimple.h (get_scattering_level): Removed.\n\t* graphite-dependences.c (graphite_carried_dependence_level_k): Call\n\tpsct_dynamic_dim on level.\n\nFrom-SVN: r176596", "tree": {"sha": "58852f872382c1081c308a9b7db7a9db822a17db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58852f872382c1081c308a9b7db7a9db822a17db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dff62090a4dba1991b7cb7d8af42e92ead0f84b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dff62090a4dba1991b7cb7d8af42e92ead0f84b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dff62090a4dba1991b7cb7d8af42e92ead0f84b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dff62090a4dba1991b7cb7d8af42e92ead0f84b4/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "628c1ac95a382b5f53a8a26a8757d9df4cad7684", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/628c1ac95a382b5f53a8a26a8757d9df4cad7684", "html_url": "https://github.com/Rust-GCC/gccrs/commit/628c1ac95a382b5f53a8a26a8757d9df4cad7684"}], "stats": {"total": 43, "additions": 22, "deletions": 21}, "files": [{"sha": "cb2ceb44f7fc48d32fde7cf8c5be7613c8359c8c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dff62090a4dba1991b7cb7d8af42e92ead0f84b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dff62090a4dba1991b7cb7d8af42e92ead0f84b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dff62090a4dba1991b7cb7d8af42e92ead0f84b4", "patch": "@@ -1,3 +1,14 @@\n+2011-07-21  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-clast-to-gimple.c (compute_bounds_for_level): Call\n+\tpsct_dynamic_dim.\n+\t(translate_clast_for_loop): Pass loop level to dependency_in_loop_p.\n+\t(gcc_type_for_iv_of_clast_loop): Update use of level.\n+\t(gloog): Start counting nesting level from 0.\n+\t* graphite-clast-to-gimple.h (get_scattering_level): Removed.\n+\t* graphite-dependences.c (graphite_carried_dependence_level_k): Call\n+\tpsct_dynamic_dim on level.\n+\n 2011-07-21  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/i386.c (ix86_legitimize_address): Convert to"}, {"sha": "53af18ebdf6a13b06baf8d5946f1a6793e117ff0", "filename": "gcc/graphite-clast-to-gimple.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dff62090a4dba1991b7cb7d8af42e92ead0f84b4/gcc%2Fgraphite-clast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dff62090a4dba1991b7cb7d8af42e92ead0f84b4/gcc%2Fgraphite-clast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-clast-to-gimple.c?ref=dff62090a4dba1991b7cb7d8af42e92ead0f84b4", "patch": "@@ -622,7 +622,7 @@ compute_bounds_for_level (poly_bb_p pbb, int level, mpz_t low, mpz_t up)\n       + pbb_dim_iter_domain (pbb) + pbb_nb_params (pbb);\n \n     ppl_new_Linear_Expression_with_dimension (&le, dim);\n-    ppl_set_coef (le, 2 * level + 1, 1);\n+    ppl_set_coef (le, psct_dynamic_dim (pbb, level), 1);\n   }\n \n   ppl_max_for_le_pointset (ps, le, up);\n@@ -687,7 +687,7 @@ gcc_type_for_iv_of_clast_loop (struct clast_for *stmt_for, int level,\n \n   return max_signed_precision_type (lb_type, max_precision_type\n \t\t\t\t    (ub_type, compute_type_for_level\n-\t\t\t\t     (pbb, level - 1)));\n+\t\t\t\t     (pbb, level)));\n }\n \n /* Creates a new LOOP corresponding to Cloog's STMT.  Inserts an\n@@ -803,7 +803,7 @@ find_pbb_via_hash (htab_t bb_pbb_mapping, basic_block bb)\n   return NULL;\n }\n \n-/* Check data dependency in LOOP at scattering level LEVEL.\n+/* Check data dependency in LOOP at level LEVEL.\n    BB_PBB_MAPPING is a basic_block and it's related poly_bb_p\n    mapping.  */\n \n@@ -961,8 +961,7 @@ translate_clast_for_loop (sese region, loop_p context_loop,\n   set_immediate_dominator (CDI_DOMINATORS, next_e->dest, next_e->src);\n \n   if (flag_loop_parallelize_all\n-      && !dependency_in_loop_p (loop, bb_pbb_mapping,\n- \t\t\t\tget_scattering_level (level)))\n+      && !dependency_in_loop_p (loop, bb_pbb_mapping, level))\n     loop->can_be_parallel = true;\n \n   return last_e;\n@@ -1477,7 +1476,7 @@ gloog (scop_p scop, htab_t bb_pbb_mapping)\n   translate_clast (region, context_loop, pc.stmt,\n \t\t   if_region->true_region->entry,\n \t\t   &newivs, newivs_index,\n-\t\t   bb_pbb_mapping, 1, params_index);\n+\t\t   bb_pbb_mapping, 0, params_index);\n   graphite_verify ();\n   scev_reset ();\n   recompute_all_dominators ();"}, {"sha": "b5affd989f0acb72c697f427cd4014013067fa5e", "filename": "gcc/graphite-clast-to-gimple.h", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dff62090a4dba1991b7cb7d8af42e92ead0f84b4/gcc%2Fgraphite-clast-to-gimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dff62090a4dba1991b7cb7d8af42e92ead0f84b4/gcc%2Fgraphite-clast-to-gimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-clast-to-gimple.h?ref=dff62090a4dba1991b7cb7d8af42e92ead0f84b4", "patch": "@@ -63,16 +63,4 @@ eq_bb_pbb_map (const void *bb_pbb1, const void *bb_pbb2)\n   return (bp1->bb->index == bp2->bb->index);\n }\n \n-/* Returns the scattering dimension for STMTFOR.\n-\n-   The relationship between dimension in scattering matrix\n-   and the DEPTH of the loop is:\n-   DIMENSION = 2*DEPTH - 1\n-*/\n-\n-static inline int get_scattering_level (int depth)\n-{\n-  return 2 * depth - 1;\n-}\n-\n #endif"}, {"sha": "fb49f161480876635054d5f24642a401fa6505b3", "filename": "gcc/graphite-dependences.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dff62090a4dba1991b7cb7d8af42e92ead0f84b4/gcc%2Fgraphite-dependences.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dff62090a4dba1991b7cb7d8af42e92ead0f84b4/gcc%2Fgraphite-dependences.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-dependences.c?ref=dff62090a4dba1991b7cb7d8af42e92ead0f84b4", "patch": "@@ -745,11 +745,13 @@ graphite_carried_dependence_level_k (poly_dr_p pdr1, poly_dr_p pdr2,\n {\n   ppl_Pointset_Powerset_C_Polyhedron_t po;\n   ppl_Pointset_Powerset_C_Polyhedron_t eqpp;\n-  graphite_dim_t tdim1 = pbb_nb_scattering_transform (PDR_PBB (pdr1));\n-  graphite_dim_t ddim1 = pbb_dim_iter_domain (PDR_PBB (pdr1));\n+  poly_bb_p pbb = PDR_PBB (pdr1);\n+  graphite_dim_t tdim1 = pbb_nb_scattering_transform (pbb);\n+  graphite_dim_t ddim1 = pbb_dim_iter_domain (pbb);\n   ppl_dimension_type dim;\n   bool empty_p;\n   poly_ddr_p pddr = new_poly_ddr (pdr1, pdr2, 1, false);\n+  graphite_dim_t pos;\n \n   if (PDDR_KIND (pddr) == unknown_dependence)\n     {\n@@ -765,7 +767,8 @@ graphite_carried_dependence_level_k (poly_dr_p pdr1, poly_dr_p pdr2,\n \n   po = PDDR_DDP (pddr);\n   ppl_Pointset_Powerset_C_Polyhedron_space_dimension (po, &dim);\n-  eqpp = build_pairwise_scheduling (dim, level, tdim1 + ddim1, 1);\n+  pos = psct_dynamic_dim (pbb, level);\n+  eqpp = build_pairwise_scheduling (dim, pos, tdim1 + ddim1, 1);\n \n   ppl_Pointset_Powerset_C_Polyhedron_intersection_assign (eqpp, po);\n   empty_p = ppl_powerset_is_empty (eqpp);"}]}