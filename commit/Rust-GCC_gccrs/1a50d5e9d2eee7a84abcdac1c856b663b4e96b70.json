{"sha": "1a50d5e9d2eee7a84abcdac1c856b663b4e96b70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE1MGQ1ZTlkMmVlZTdhODRhYmNkYWMxYzg1NmI2NjNiNGU5NmI3MA==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2005-12-29T15:16:50Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2005-12-29T15:16:50Z"}, "message": "lb1sf68.asm (__cmpdf2): Fix typo in immediate mask.\n\n2005-12-29  Paul Brook  <paul@codesourcery.com>\n\n\t* config/m68k/lb1sf68.asm (__cmpdf2): Fix typo in immediate mask.\n\tCreate wrapper and rename body...\n\t(__cmpdf2_internal): ... to this.  Return correct value for unordered\n\tresult.\n\t(__cmpsf2): Create wrapper and rename body...\n\t(__cmpsf2_internal): ... to this.  Return corerct value for unordered\n\tresult.\n\t(__eqdf2, __nedf2, __gtdf2, __gedf2, __ltdf2, __ledf2): Use\n\t__cmpdf2_internal.\n\t(__eqsf2, __nesf2, __gtsf2, __gesf2, __ltsf2, __lesf2): Use\n\t__cmpsf2_internal.\n\nFrom-SVN: r109145", "tree": {"sha": "65225caebc9ca638f2f56fa8c66ba0381ae90d76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65225caebc9ca638f2f56fa8c66ba0381ae90d76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a50d5e9d2eee7a84abcdac1c856b663b4e96b70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a50d5e9d2eee7a84abcdac1c856b663b4e96b70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a50d5e9d2eee7a84abcdac1c856b663b4e96b70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a50d5e9d2eee7a84abcdac1c856b663b4e96b70/comments", "author": null, "committer": null, "parents": [{"sha": "75a75b88500f1644b55e5cfb40216690135482e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75a75b88500f1644b55e5cfb40216690135482e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75a75b88500f1644b55e5cfb40216690135482e3"}], "stats": {"total": 108, "additions": 86, "deletions": 22}, "files": [{"sha": "40f2887492ef5a41359e8f6afcbd1418197e00e3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a50d5e9d2eee7a84abcdac1c856b663b4e96b70/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a50d5e9d2eee7a84abcdac1c856b663b4e96b70/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a50d5e9d2eee7a84abcdac1c856b663b4e96b70", "patch": "@@ -1,3 +1,17 @@\n+2005-12-29  Paul Brook  <paul@codesourcery.com>\n+\n+\t* config/m68k/lb1sf68.asm (__cmpdf2): Fix typo in immediate mask.\n+\tCreate wrapper and rename body...\n+\t(__cmpdf2_internal): ... to this.  Return correct value for unordered\n+\tresult.\n+\t(__cmpsf2): Create wrapper and rename body...\n+\t(__cmpsf2_internal): ... to this.  Return corerct value for unordered\n+\tresult.\n+\t(__eqdf2, __nedf2, __gtdf2, __gedf2, __ltdf2, __ledf2): Use\n+\t__cmpdf2_internal.\n+\t(__eqsf2, __nesf2, __gtsf2, __gesf2, __ltsf2, __lesf2): Use\n+\t__cmpsf2_internal.\n+\n 2005-12-29  Paul Brook  <paul@codesourcery.com>\n \n \t* config/m68k/fpgnulib.c (__extendsfdf2): Handle negative zero."}, {"sha": "24529ccb12902c4bbe5d063eb8c17d9db5741994", "filename": "gcc/config/m68k/lb1sf68.asm", "status": "modified", "additions": 72, "deletions": 22, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a50d5e9d2eee7a84abcdac1c856b663b4e96b70/gcc%2Fconfig%2Fm68k%2Flb1sf68.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a50d5e9d2eee7a84abcdac1c856b663b4e96b70/gcc%2Fconfig%2Fm68k%2Flb1sf68.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flb1sf68.asm?ref=1a50d5e9d2eee7a84abcdac1c856b663b4e96b70", "patch": "@@ -599,6 +599,7 @@ ROUND_TO_MINUS    = 3 | round result towards minus infinity\n \t.globl SYM (__divdf3)\n \t.globl SYM (__negdf2)\n \t.globl SYM (__cmpdf2)\n+\t.globl SYM (__cmpdf2_internal)\n \n \t.text\n \t.even\n@@ -2223,8 +2224,8 @@ GREATER =  1\n LESS    = -1\n EQUAL   =  0\n \n-| int __cmpdf2(double, double);\n-SYM (__cmpdf2):\n+| int __cmpdf2_internal(double, double, int);\n+SYM (__cmpdf2_internal):\n #ifndef __mcoldfire__\n \tlink\ta6,IMM (0)\n \tmoveml\td2-d7,sp@- \t| save registers\n@@ -2243,15 +2244,15 @@ SYM (__cmpdf2):\n \tbclr\tIMM (31),d0\t| and clear signs in d0 and d2\n \tmovel\td2,d7\t\t|\n \tbclr\tIMM (31),d2\t|\n-\tcmpl\tIMM (0x7fff0000),d0 | check for a == NaN\n-\tbhi\tLd$inop\t\t| if d0 > 0x7ff00000, a is NaN\n+\tcmpl\tIMM (0x7ff00000),d0 | check for a == NaN\n+\tbhi\tLcmpd$inop\t\t| if d0 > 0x7ff00000, a is NaN\n \tbeq\tLcmpdf$a$nf\t| if equal can be INFINITY, so check d1\n \tmovel\td0,d4\t\t| copy into d4 to test for zero\n \torl\td1,d4\t\t|\n \tbeq\tLcmpdf$a$0\t|\n Lcmpdf$0:\n-\tcmpl\tIMM (0x7fff0000),d2 | check for b == NaN\n-\tbhi\tLd$inop\t\t| if d2 > 0x7ff00000, b is NaN\n+\tcmpl\tIMM (0x7ff00000),d2 | check for b == NaN\n+\tbhi\tLcmpd$inop\t\t| if d2 > 0x7ff00000, b is NaN\n \tbeq\tLcmpdf$b$nf\t| if equal can be INFINITY, so check d3\n \tmovel\td2,d4\t\t|\n \torl\td3,d4\t\t|\n@@ -2341,6 +2342,24 @@ Lcmpdf$b$nf:\n \tbne\tLd$inop\n \tbra\tLcmpdf$1\n \n+Lcmpd$inop:\n+\tmovl\ta6@(24),d0\n+\tmovew\tIMM (INEXACT_RESULT+INVALID_OPERATION),d7\n+\tmoveq\tIMM (DOUBLE_FLOAT),d6\n+\tPICJUMP\t$_exception_handler\n+\n+| int __cmpdf2(double, double);\n+SYM (__cmpdf2):\n+\tlink\ta6,IMM (0)\n+\tpea\t1\n+\tmovl\ta6@(20),sp@-\n+\tmovl\ta6@(16),sp@-\n+\tmovl\ta6@(12),sp@-\n+\tmovl\ta6@(8),sp@-\n+\tbsr\tSYM (__cmpdf2_internal)\n+\tunlk\ta6\n+\trts\n+\n |=============================================================================\n |                           rounding routines\n |=============================================================================\n@@ -2488,6 +2507,7 @@ ROUND_TO_MINUS    = 3 | round result towards minus infinity\n \t.globl SYM (__divsf3)\n \t.globl SYM (__negsf2)\n \t.globl SYM (__cmpsf2)\n+\t.globl SYM (__cmpsf2_internal)\n \n | These are common routines to return and signal exceptions.\t\n \n@@ -3633,8 +3653,8 @@ GREATER =  1\n LESS    = -1\n EQUAL   =  0\n \n-| int __cmpsf2(float, float);\n-SYM (__cmpsf2):\n+| int __cmpsf2_internal(float, float, int);\n+SYM (__cmpsf2_internal):\n #ifndef __mcoldfire__\n \tlink\ta6,IMM (0)\n \tmoveml\td2-d7,sp@- \t| save registers\n@@ -3652,13 +3672,13 @@ SYM (__cmpsf2):\n \tandl\tIMM (0x7fffffff),d0\n \tbeq\tLcmpsf$a$0\n \tcmpl\tIMM (0x7f800000),d0\n-\tbhi\tLf$inop\n+\tbhi\tLcmpf$inop\n Lcmpsf$1:\n \tmovel\td1,d7\n \tandl\tIMM (0x7fffffff),d1\n \tbeq\tLcmpsf$b$0\n \tcmpl\tIMM (0x7f800000),d1\n-\tbhi\tLf$inop\n+\tbhi\tLcmpf$inop\n Lcmpsf$2:\n | Check the signs\n \teorl\td6,d7\n@@ -3724,6 +3744,22 @@ Lcmpsf$b$0:\n \tbclr\tIMM (31),d7\n \tbra\tLcmpsf$2\n \n+Lcmpf$inop:\n+\tmovl\ta6@(16),d0\n+\tmovew\tIMM (INEXACT_RESULT+INVALID_OPERATION),d7\n+\tmoveq\tIMM (SINGLE_FLOAT),d6\n+\tPICJUMP\t$_exception_handler\n+\n+| int __cmpsf2(float, float);\n+SYM (__cmpsf2):\n+\tlink\ta6,IMM (0)\n+\tpea\t1\n+\tmovl\ta6@(12),sp@-\n+\tmovl\ta6@(8),sp@-\n+\tbsr (__cmpsf2_internal)\n+\tunlk\ta6\n+\trts\n+\n |=============================================================================\n |                           rounding routines\n |=============================================================================\n@@ -3808,18 +3844,21 @@ Lround$to$minus:\n | simply calls __cmpdf2.  It would be more efficient to give the\n | __cmpdf2 routine several names, but separating them out will make it\n | easier to write efficient versions of these routines someday.\n+| If the operands recompare unordered unordered __gtdf2 and __gedf2 return -1.\n+| The other routines return 1.\n \n #ifdef  L_eqdf2\n \t.text\n \t.proc\n \t.globl\tSYM (__eqdf2)\n SYM (__eqdf2):\n \tlink\ta6,IMM (0)\n+\tpea\t1\n \tmovl\ta6@(20),sp@-\n \tmovl\ta6@(16),sp@-\n \tmovl\ta6@(12),sp@-\n \tmovl\ta6@(8),sp@-\n-\tPICCALL\tSYM (__cmpdf2)\n+\tPICCALL\tSYM (__cmpdf2_internal)\n \tunlk\ta6\n \trts\n #endif /* L_eqdf2 */\n@@ -3830,11 +3869,12 @@ SYM (__eqdf2):\n \t.globl\tSYM (__nedf2)\n SYM (__nedf2):\n \tlink\ta6,IMM (0)\n+\tpea\t1\n \tmovl\ta6@(20),sp@-\n \tmovl\ta6@(16),sp@-\n \tmovl\ta6@(12),sp@-\n \tmovl\ta6@(8),sp@-\n-\tPICCALL\tSYM (__cmpdf2)\n+\tPICCALL\tSYM (__cmpdf2_internal)\n \tunlk\ta6\n \trts\n #endif /* L_nedf2 */\n@@ -3845,11 +3885,12 @@ SYM (__nedf2):\n \t.globl\tSYM (__gtdf2)\n SYM (__gtdf2):\n \tlink\ta6,IMM (0)\n+\tpea\t-1\n \tmovl\ta6@(20),sp@-\n \tmovl\ta6@(16),sp@-\n \tmovl\ta6@(12),sp@-\n \tmovl\ta6@(8),sp@-\n-\tPICCALL\tSYM (__cmpdf2)\n+\tPICCALL\tSYM (__cmpdf2_internal)\n \tunlk\ta6\n \trts\n #endif /* L_gtdf2 */\n@@ -3860,11 +3901,12 @@ SYM (__gtdf2):\n \t.globl\tSYM (__gedf2)\n SYM (__gedf2):\n \tlink\ta6,IMM (0)\n+\tpea\t-1\n \tmovl\ta6@(20),sp@-\n \tmovl\ta6@(16),sp@-\n \tmovl\ta6@(12),sp@-\n \tmovl\ta6@(8),sp@-\n-\tPICCALL\tSYM (__cmpdf2)\n+\tPICCALL\tSYM (__cmpdf2_internal)\n \tunlk\ta6\n \trts\n #endif /* L_gedf2 */\n@@ -3875,11 +3917,12 @@ SYM (__gedf2):\n \t.globl\tSYM (__ltdf2)\n SYM (__ltdf2):\n \tlink\ta6,IMM (0)\n+\tpea\t1\n \tmovl\ta6@(20),sp@-\n \tmovl\ta6@(16),sp@-\n \tmovl\ta6@(12),sp@-\n \tmovl\ta6@(8),sp@-\n-\tPICCALL\tSYM (__cmpdf2)\n+\tPICCALL\tSYM (__cmpdf2_internal)\n \tunlk\ta6\n \trts\n #endif /* L_ltdf2 */\n@@ -3890,11 +3933,12 @@ SYM (__ltdf2):\n \t.globl\tSYM (__ledf2)\n SYM (__ledf2):\n \tlink\ta6,IMM (0)\n+\tpea\t1\n \tmovl\ta6@(20),sp@-\n \tmovl\ta6@(16),sp@-\n \tmovl\ta6@(12),sp@-\n \tmovl\ta6@(8),sp@-\n-\tPICCALL\tSYM (__cmpdf2)\n+\tPICCALL\tSYM (__cmpdf2_internal)\n \tunlk\ta6\n \trts\n #endif /* L_ledf2 */\n@@ -3908,9 +3952,10 @@ SYM (__ledf2):\n \t.globl\tSYM (__eqsf2)\n SYM (__eqsf2):\n \tlink\ta6,IMM (0)\n+\tpea\t1\n \tmovl\ta6@(12),sp@-\n \tmovl\ta6@(8),sp@-\n-\tPICCALL\tSYM (__cmpsf2)\n+\tPICCALL\tSYM (__cmpsf2_internal)\n \tunlk\ta6\n \trts\n #endif /* L_eqsf2 */\n@@ -3921,9 +3966,10 @@ SYM (__eqsf2):\n \t.globl\tSYM (__nesf2)\n SYM (__nesf2):\n \tlink\ta6,IMM (0)\n+\tpea\t1\n \tmovl\ta6@(12),sp@-\n \tmovl\ta6@(8),sp@-\n-\tPICCALL\tSYM (__cmpsf2)\n+\tPICCALL\tSYM (__cmpsf2_internal)\n \tunlk\ta6\n \trts\n #endif /* L_nesf2 */\n@@ -3934,9 +3980,10 @@ SYM (__nesf2):\n \t.globl\tSYM (__gtsf2)\n SYM (__gtsf2):\n \tlink\ta6,IMM (0)\n+\tpea\t-1\n \tmovl\ta6@(12),sp@-\n \tmovl\ta6@(8),sp@-\n-\tPICCALL\tSYM (__cmpsf2)\n+\tPICCALL\tSYM (__cmpsf2_internal)\n \tunlk\ta6\n \trts\n #endif /* L_gtsf2 */\n@@ -3947,9 +3994,10 @@ SYM (__gtsf2):\n \t.globl\tSYM (__gesf2)\n SYM (__gesf2):\n \tlink\ta6,IMM (0)\n+\tpea\t-1\n \tmovl\ta6@(12),sp@-\n \tmovl\ta6@(8),sp@-\n-\tPICCALL\tSYM (__cmpsf2)\n+\tPICCALL\tSYM (__cmpsf2_internal)\n \tunlk\ta6\n \trts\n #endif /* L_gesf2 */\n@@ -3960,9 +4008,10 @@ SYM (__gesf2):\n \t.globl\tSYM (__ltsf2)\n SYM (__ltsf2):\n \tlink\ta6,IMM (0)\n+\tpea\t1\n \tmovl\ta6@(12),sp@-\n \tmovl\ta6@(8),sp@-\n-\tPICCALL\tSYM (__cmpsf2)\n+\tPICCALL\tSYM (__cmpsf2_internal)\n \tunlk\ta6\n \trts\n #endif /* L_ltsf2 */\n@@ -3973,9 +4022,10 @@ SYM (__ltsf2):\n \t.globl\tSYM (__lesf2)\n SYM (__lesf2):\n \tlink\ta6,IMM (0)\n+\tpea\t1\n \tmovl\ta6@(12),sp@-\n \tmovl\ta6@(8),sp@-\n-\tPICCALL\tSYM (__cmpsf2)\n+\tPICCALL\tSYM (__cmpsf2_internal)\n \tunlk\ta6\n \trts\n #endif /* L_lesf2 */"}]}