{"sha": "db253e8b1dba3ec1138d1b5ea0fac361dde9ac17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIyNTNlOGIxZGJhM2VjMTEzOGQxYjVlYTBmYWMzNjFkZGU5YWMxNw==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2020-12-16T20:45:52Z"}, "committer": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2020-12-16T20:45:52Z"}, "message": "Arm: MVE: Split refactoring of remaining complex instrinsics\n\nThis refactors the complex numbers bits of MVE to go through the same unspecs\nas the NEON variant.\n\nThis is pre-work to allow code to be shared between NEON and MVE for the complex\nvectorization patches.\n\ngcc/ChangeLog:\n\n\t* config/arm/arm_mve.h (__arm_vcmulq_rot90_f16):\n\t(__arm_vcmulq_rot270_f16, _arm_vcmulq_rot180_f16, __arm_vcmulq_f16,\n\t__arm_vcmulq_rot90_f32, __arm_vcmulq_rot270_f32,\n\t__arm_vcmulq_rot180_f32, __arm_vcmulq_f32, __arm_vcmlaq_f16,\n\t__arm_vcmlaq_rot180_f16, __arm_vcmlaq_rot270_f16,\n\t__arm_vcmlaq_rot90_f16, __arm_vcmlaq_f32, __arm_vcmlaq_rot180_f32,\n\t__arm_vcmlaq_rot270_f32, __arm_vcmlaq_rot90_f32): Update builtin calls.\n\t* config/arm/arm_mve_builtins.def (vcmulq_f, vcmulq_rot90_f,\n\tvcmulq_rot180_f, vcmulq_rot270_f, vcmlaq_f, vcmlaq_rot90_f,\n\tvcmlaq_rot180_f, vcmlaq_rot270_f): Removed.\n\t(vcmulq, vcmulq_rot90, vcmulq_rot180, vcmulq_rot270, vcmlaq,\n\tvcmlaq_rot90, vcmlaq_rot180, vcmlaq_rot270): New.\n\t* config/arm/iterators.md (mve_rot): Add UNSPEC_VCMLA, UNSPEC_VCMLA90,\n\tUNSPEC_VCMLA180, UNSPEC_VCMLA270, UNSPEC_VCMUL, UNSPEC_VCMUL90,\n\tUNSPEC_VCMUL180, UNSPEC_VCMUL270.\n\t(VCMUL): New.\n\t* config/arm/mve.md (mve_vcmulq_f<mode, mve_vcmulq_rot180_f<mode>,\n\tmve_vcmulq_rot270_f<mode>, mve_vcmulq_rot90_f<mode>, mve_vcmlaq_f<mode>,\n\tmve_vcmlaq_rot180_f<mode>, mve_vcmlaq_rot270_f<mode>,\n\tmve_vcmlaq_rot90_f<mode>): Removed.\n\t(mve_vcmlaq<mve_rot><mode>, mve_vcmulq<mve_rot><mode>,\n\tmve_vcaddq<mve_rot><mode>, cadd<rot><mode>3, mve_vcaddq<mve_rot><mode>):\n\tNew.\n\t* config/arm/unspecs.md (UNSPEC_VCMUL90, UNSPEC_VCMUL270, UNSPEC_VCMUL,\n\tUNSPEC_VCMUL180): New.\n\t(VCMULQ_F, VCMULQ_ROT180_F, VCMULQ_ROT270_F, VCMULQ_ROT90_F,\n\tVCMLAQ_F, VCMLAQ_ROT180_F, VCMLAQ_ROT90_F, VCMLAQ_ROT270_F): Removed.", "tree": {"sha": "887cee89b5ced82de957ce2d29c67f7251ceb14e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/887cee89b5ced82de957ce2d29c67f7251ceb14e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db253e8b1dba3ec1138d1b5ea0fac361dde9ac17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db253e8b1dba3ec1138d1b5ea0fac361dde9ac17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db253e8b1dba3ec1138d1b5ea0fac361dde9ac17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db253e8b1dba3ec1138d1b5ea0fac361dde9ac17/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9732dc855e59e53d2c27a9b4a3c9bfa7197f6c43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9732dc855e59e53d2c27a9b4a3c9bfa7197f6c43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9732dc855e59e53d2c27a9b4a3c9bfa7197f6c43"}], "stats": {"total": 192, "additions": 54, "deletions": 138}, "files": [{"sha": "45014621f2533497e90ddf5257fb04e1fd9325b4", "filename": "gcc/config/arm/arm_mve.h", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db253e8b1dba3ec1138d1b5ea0fac361dde9ac17/gcc%2Fconfig%2Farm%2Farm_mve.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db253e8b1dba3ec1138d1b5ea0fac361dde9ac17/gcc%2Fconfig%2Farm%2Farm_mve.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_mve.h?ref=db253e8b1dba3ec1138d1b5ea0fac361dde9ac17", "patch": "@@ -17348,28 +17348,28 @@ __extension__ extern __inline float16x8_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n __arm_vcmulq_rot90_f16 (float16x8_t __a, float16x8_t __b)\n {\n-  return __builtin_mve_vcmulq_rot90_fv8hf (__a, __b);\n+  return __builtin_mve_vcmulq_rot90v8hf (__a, __b);\n }\n \n __extension__ extern __inline float16x8_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n __arm_vcmulq_rot270_f16 (float16x8_t __a, float16x8_t __b)\n {\n-  return __builtin_mve_vcmulq_rot270_fv8hf (__a, __b);\n+  return __builtin_mve_vcmulq_rot270v8hf (__a, __b);\n }\n \n __extension__ extern __inline float16x8_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n __arm_vcmulq_rot180_f16 (float16x8_t __a, float16x8_t __b)\n {\n-  return __builtin_mve_vcmulq_rot180_fv8hf (__a, __b);\n+  return __builtin_mve_vcmulq_rot180v8hf (__a, __b);\n }\n \n __extension__ extern __inline float16x8_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n __arm_vcmulq_f16 (float16x8_t __a, float16x8_t __b)\n {\n-  return __builtin_mve_vcmulq_fv8hf (__a, __b);\n+  return __builtin_mve_vcmulqv8hf (__a, __b);\n }\n \n __extension__ extern __inline float16x8_t\n@@ -17600,28 +17600,28 @@ __extension__ extern __inline float32x4_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n __arm_vcmulq_rot90_f32 (float32x4_t __a, float32x4_t __b)\n {\n-  return __builtin_mve_vcmulq_rot90_fv4sf (__a, __b);\n+  return __builtin_mve_vcmulq_rot90v4sf (__a, __b);\n }\n \n __extension__ extern __inline float32x4_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n __arm_vcmulq_rot270_f32 (float32x4_t __a, float32x4_t __b)\n {\n-  return __builtin_mve_vcmulq_rot270_fv4sf (__a, __b);\n+  return __builtin_mve_vcmulq_rot270v4sf (__a, __b);\n }\n \n __extension__ extern __inline float32x4_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n __arm_vcmulq_rot180_f32 (float32x4_t __a, float32x4_t __b)\n {\n-  return __builtin_mve_vcmulq_rot180_fv4sf (__a, __b);\n+  return __builtin_mve_vcmulq_rot180v4sf (__a, __b);\n }\n \n __extension__ extern __inline float32x4_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n __arm_vcmulq_f32 (float32x4_t __a, float32x4_t __b)\n {\n-  return __builtin_mve_vcmulq_fv4sf (__a, __b);\n+  return __builtin_mve_vcmulqv4sf (__a, __b);\n }\n \n __extension__ extern __inline float32x4_t\n@@ -17790,28 +17790,28 @@ __extension__ extern __inline float16x8_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n __arm_vcmlaq_f16 (float16x8_t __a, float16x8_t __b, float16x8_t __c)\n {\n-  return __builtin_mve_vcmlaq_fv8hf (__a, __b, __c);\n+  return __builtin_mve_vcmlaqv8hf (__a, __b, __c);\n }\n \n __extension__ extern __inline float16x8_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n __arm_vcmlaq_rot180_f16 (float16x8_t __a, float16x8_t __b, float16x8_t __c)\n {\n-  return __builtin_mve_vcmlaq_rot180_fv8hf (__a, __b, __c);\n+  return __builtin_mve_vcmlaq_rot180v8hf (__a, __b, __c);\n }\n \n __extension__ extern __inline float16x8_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n __arm_vcmlaq_rot270_f16 (float16x8_t __a, float16x8_t __b, float16x8_t __c)\n {\n-  return __builtin_mve_vcmlaq_rot270_fv8hf (__a, __b, __c);\n+  return __builtin_mve_vcmlaq_rot270v8hf (__a, __b, __c);\n }\n \n __extension__ extern __inline float16x8_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n __arm_vcmlaq_rot90_f16 (float16x8_t __a, float16x8_t __b, float16x8_t __c)\n {\n-  return __builtin_mve_vcmlaq_rot90_fv8hf (__a, __b, __c);\n+  return __builtin_mve_vcmlaq_rot90v8hf (__a, __b, __c);\n }\n \n __extension__ extern __inline float16x8_t\n@@ -18098,28 +18098,28 @@ __extension__ extern __inline float32x4_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n __arm_vcmlaq_f32 (float32x4_t __a, float32x4_t __b, float32x4_t __c)\n {\n-  return __builtin_mve_vcmlaq_fv4sf (__a, __b, __c);\n+  return __builtin_mve_vcmlaqv4sf (__a, __b, __c);\n }\n \n __extension__ extern __inline float32x4_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n __arm_vcmlaq_rot180_f32 (float32x4_t __a, float32x4_t __b, float32x4_t __c)\n {\n-  return __builtin_mve_vcmlaq_rot180_fv4sf (__a, __b, __c);\n+  return __builtin_mve_vcmlaq_rot180v4sf (__a, __b, __c);\n }\n \n __extension__ extern __inline float32x4_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n __arm_vcmlaq_rot270_f32 (float32x4_t __a, float32x4_t __b, float32x4_t __c)\n {\n-  return __builtin_mve_vcmlaq_rot270_fv4sf (__a, __b, __c);\n+  return __builtin_mve_vcmlaq_rot270v4sf (__a, __b, __c);\n }\n \n __extension__ extern __inline float32x4_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n __arm_vcmlaq_rot90_f32 (float32x4_t __a, float32x4_t __b, float32x4_t __c)\n {\n-  return __builtin_mve_vcmlaq_rot90_fv4sf (__a, __b, __c);\n+  return __builtin_mve_vcmlaq_rot90v4sf (__a, __b, __c);\n }\n \n __extension__ extern __inline float32x4_t"}, {"sha": "56b652fff0a6729d04982cc13a479587180b0208", "filename": "gcc/config/arm/arm_mve_builtins.def", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db253e8b1dba3ec1138d1b5ea0fac361dde9ac17/gcc%2Fconfig%2Farm%2Farm_mve_builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db253e8b1dba3ec1138d1b5ea0fac361dde9ac17/gcc%2Fconfig%2Farm%2Farm_mve_builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_mve_builtins.def?ref=db253e8b1dba3ec1138d1b5ea0fac361dde9ac17", "patch": "@@ -260,10 +260,6 @@ VAR2 (BINOP_NONE_NONE_NONE, vmaxnmq_f, v8hf, v4sf)\n VAR2 (BINOP_NONE_NONE_NONE, vmaxnmavq_f, v8hf, v4sf)\n VAR2 (BINOP_NONE_NONE_NONE, vmaxnmaq_f, v8hf, v4sf)\n VAR2 (BINOP_NONE_NONE_NONE, veorq_f, v8hf, v4sf)\n-VAR2 (BINOP_NONE_NONE_NONE, vcmulq_rot90_f, v8hf, v4sf)\n-VAR2 (BINOP_NONE_NONE_NONE, vcmulq_rot270_f, v8hf, v4sf)\n-VAR2 (BINOP_NONE_NONE_NONE, vcmulq_rot180_f, v8hf, v4sf)\n-VAR2 (BINOP_NONE_NONE_NONE, vcmulq_f, v8hf, v4sf)\n VAR2 (BINOP_NONE_NONE_NONE, vbicq_f, v8hf, v4sf)\n VAR2 (BINOP_NONE_NONE_NONE, vandq_f, v8hf, v4sf)\n VAR2 (BINOP_NONE_NONE_NONE, vaddq_n_f, v8hf, v4sf)\n@@ -464,10 +460,6 @@ VAR2 (TERNOP_NONE_NONE_NONE_NONE, vfmsq_f, v8hf, v4sf)\n VAR2 (TERNOP_NONE_NONE_NONE_NONE, vfmasq_n_f, v8hf, v4sf)\n VAR2 (TERNOP_NONE_NONE_NONE_NONE, vfmaq_n_f, v8hf, v4sf)\n VAR2 (TERNOP_NONE_NONE_NONE_NONE, vfmaq_f, v8hf, v4sf)\n-VAR2 (TERNOP_NONE_NONE_NONE_NONE, vcmlaq_rot90_f, v8hf, v4sf)\n-VAR2 (TERNOP_NONE_NONE_NONE_NONE, vcmlaq_rot270_f, v8hf, v4sf)\n-VAR2 (TERNOP_NONE_NONE_NONE_NONE, vcmlaq_rot180_f, v8hf, v4sf)\n-VAR2 (TERNOP_NONE_NONE_NONE_NONE, vcmlaq_f, v8hf, v4sf)\n VAR2 (TERNOP_NONE_NONE_NONE_IMM, vshrntq_n_s, v8hi, v4si)\n VAR2 (TERNOP_NONE_NONE_NONE_IMM, vshrnbq_n_s, v8hi, v4si)\n VAR2 (TERNOP_NONE_NONE_NONE_IMM, vrshrntq_n_s, v8hi, v4si)\n@@ -890,3 +882,11 @@ VAR3 (QUADOP_UNONE_UNONE_UNONE_IMM_UNONE, vshlcq_m_carry_u, v16qi, v8hi, v4si)\n /* optabs without any suffixes.  */\n VAR5 (BINOP_NONE_NONE_NONE, vcaddq_rot90, v16qi, v8hi, v4si, v8hf, v4sf)\n VAR5 (BINOP_NONE_NONE_NONE, vcaddq_rot270, v16qi, v8hi, v4si, v8hf, v4sf)\n+VAR2 (BINOP_NONE_NONE_NONE, vcmulq_rot90, v8hf, v4sf)\n+VAR2 (BINOP_NONE_NONE_NONE, vcmulq_rot270, v8hf, v4sf)\n+VAR2 (BINOP_NONE_NONE_NONE, vcmulq_rot180, v8hf, v4sf)\n+VAR2 (BINOP_NONE_NONE_NONE, vcmulq, v8hf, v4sf)\n+VAR2 (TERNOP_NONE_NONE_NONE_NONE, vcmlaq_rot90, v8hf, v4sf)\n+VAR2 (TERNOP_NONE_NONE_NONE_NONE, vcmlaq_rot270, v8hf, v4sf)\n+VAR2 (TERNOP_NONE_NONE_NONE_NONE, vcmlaq_rot180, v8hf, v4sf)\n+VAR2 (TERNOP_NONE_NONE_NONE_NONE, vcmlaq, v8hf, v4sf)"}, {"sha": "c6b1b28c896f9fb3081021ea4efcae8abaaceb55", "filename": "gcc/config/arm/iterators.md", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db253e8b1dba3ec1138d1b5ea0fac361dde9ac17/gcc%2Fconfig%2Farm%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db253e8b1dba3ec1138d1b5ea0fac361dde9ac17/gcc%2Fconfig%2Farm%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fiterators.md?ref=db253e8b1dba3ec1138d1b5ea0fac361dde9ac17", "patch": "@@ -1183,7 +1183,18 @@\n \t\t      (UNSPEC_VCMLA270 \"270\")])\n \n (define_int_attr mve_rot [(UNSPEC_VCADD90 \"_rot90\")\n-\t\t\t  (UNSPEC_VCADD270 \"_rot270\")])\n+\t\t\t  (UNSPEC_VCADD270 \"_rot270\")\n+\t\t\t  (UNSPEC_VCMLA \"\")\n+\t\t\t  (UNSPEC_VCMLA90 \"_rot90\")\n+\t\t\t  (UNSPEC_VCMLA180 \"_rot180\")\n+\t\t\t  (UNSPEC_VCMLA270 \"_rot270\")\n+\t\t\t  (UNSPEC_VCMUL \"\")\n+\t\t\t  (UNSPEC_VCMUL90 \"_rot90\")\n+\t\t\t  (UNSPEC_VCMUL180 \"_rot180\")\n+\t\t\t  (UNSPEC_VCMUL270 \"_rot270\")])\n+\n+(define_int_iterator VCMUL [UNSPEC_VCMUL UNSPEC_VCMUL90\n+\t\t\t    UNSPEC_VCMUL180 UNSPEC_VCMUL270])\n \n (define_int_attr simd32_op [(UNSPEC_QADD8 \"qadd8\") (UNSPEC_QSUB8 \"qsub8\")\n \t\t\t    (UNSPEC_SHADD8 \"shadd8\") (UNSPEC_SHSUB8 \"shsub8\")"}, {"sha": "d3f1cc1bbc6171c5d510b7ee3c7df178004d8c5b", "filename": "gcc/config/arm/mve.md", "status": "modified", "additions": 14, "deletions": 105, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db253e8b1dba3ec1138d1b5ea0fac361dde9ac17/gcc%2Fconfig%2Farm%2Fmve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db253e8b1dba3ec1138d1b5ea0fac361dde9ac17/gcc%2Fconfig%2Farm%2Fmve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fmve.md?ref=db253e8b1dba3ec1138d1b5ea0fac361dde9ac17", "patch": "@@ -2291,62 +2291,17 @@\n ])\n \n ;;\n-;; [vcmulq_f])\n+;; [vcmulq, vcmulq_rot90, vcmulq_rot180, vcmulq_rot270])\n ;;\n-(define_insn \"mve_vcmulq_f<mode>\"\n+(define_insn \"mve_vcmulq<mve_rot><mode>\"\n   [\n    (set (match_operand:MVE_0 0 \"s_register_operand\" \"<earlyclobber_32>\")\n \t(unspec:MVE_0 [(match_operand:MVE_0 1 \"s_register_operand\" \"w\")\n \t\t       (match_operand:MVE_0 2 \"s_register_operand\" \"w\")]\n-\t VCMULQ_F))\n+\t VCMUL))\n   ]\n   \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n-  \"vcmul.f%#<V_sz_elem>\t%q0, %q1, %q2, #0\"\n-  [(set_attr \"type\" \"mve_move\")\n-])\n-\n-;;\n-;; [vcmulq_rot180_f])\n-;;\n-(define_insn \"mve_vcmulq_rot180_f<mode>\"\n-  [\n-   (set (match_operand:MVE_0 0 \"s_register_operand\" \"<earlyclobber_32>\")\n-\t(unspec:MVE_0 [(match_operand:MVE_0 1 \"s_register_operand\" \"w\")\n-\t\t       (match_operand:MVE_0 2 \"s_register_operand\" \"w\")]\n-\t VCMULQ_ROT180_F))\n-  ]\n-  \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n-  \"vcmul.f%#<V_sz_elem>\t%q0, %q1, %q2, #180\"\n-  [(set_attr \"type\" \"mve_move\")\n-])\n-\n-;;\n-;; [vcmulq_rot270_f])\n-;;\n-(define_insn \"mve_vcmulq_rot270_f<mode>\"\n-  [\n-   (set (match_operand:MVE_0 0 \"s_register_operand\" \"<earlyclobber_32>\")\n-\t(unspec:MVE_0 [(match_operand:MVE_0 1 \"s_register_operand\" \"w\")\n-\t\t       (match_operand:MVE_0 2 \"s_register_operand\" \"w\")]\n-\t VCMULQ_ROT270_F))\n-  ]\n-  \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n-  \"vcmul.f%#<V_sz_elem>\t%q0, %q1, %q2, #270\"\n-  [(set_attr \"type\" \"mve_move\")\n-])\n-\n-;;\n-;; [vcmulq_rot90_f])\n-;;\n-(define_insn \"mve_vcmulq_rot90_f<mode>\"\n-  [\n-   (set (match_operand:MVE_0 0 \"s_register_operand\" \"<earlyclobber_32>\")\n-\t(unspec:MVE_0 [(match_operand:MVE_0 1 \"s_register_operand\" \"w\")\n-\t\t       (match_operand:MVE_0 2 \"s_register_operand\" \"w\")]\n-\t VCMULQ_ROT90_F))\n-  ]\n-  \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n-  \"vcmul.f%#<V_sz_elem>\t%q0, %q1, %q2, #90\"\n+  \"vcmul.f%#<V_sz_elem>\t%q0, %q1, %q2, #<rot>\"\n   [(set_attr \"type\" \"mve_move\")\n ])\n \n@@ -4118,66 +4073,20 @@\n   [(set_attr \"type\" \"mve_move\")\n    (set_attr \"length\"\"8\")])\n ;;\n-;; [vcmlaq_f])\n-;;\n-(define_insn \"mve_vcmlaq_f<mode>\"\n-  [\n-   (set (match_operand:MVE_0 0 \"s_register_operand\" \"=w\")\n-\t(unspec:MVE_0 [(match_operand:MVE_0 1 \"s_register_operand\" \"0\")\n-\t\t       (match_operand:MVE_0 2 \"s_register_operand\" \"w\")\n-\t\t       (match_operand:MVE_0 3 \"s_register_operand\" \"w\")]\n-\t VCMLAQ_F))\n-  ]\n-  \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n-  \"vcmla.f%#<V_sz_elem>\t%q0, %q2, %q3, #0\"\n-  [(set_attr \"type\" \"mve_move\")\n-])\n-\n-;;\n-;; [vcmlaq_rot180_f])\n+;; [vcmlaq, vcmlaq_rot90, vcmlaq_rot180, vcmlaq_rot270])\n ;;\n-(define_insn \"mve_vcmlaq_rot180_f<mode>\"\n+(define_insn \"mve_vcmlaq<mve_rot><mode>\"\n   [\n-   (set (match_operand:MVE_0 0 \"s_register_operand\" \"=w\")\n-\t(unspec:MVE_0 [(match_operand:MVE_0 1 \"s_register_operand\" \"0\")\n-\t\t       (match_operand:MVE_0 2 \"s_register_operand\" \"w\")\n-\t\t       (match_operand:MVE_0 3 \"s_register_operand\" \"w\")]\n-\t VCMLAQ_ROT180_F))\n+   (set (match_operand:MVE_0 0 \"s_register_operand\" \"=w,w\")\n+\t(unspec:MVE_0 [(match_operand:MVE_0 1 \"s_register_operand\" \"0,Dz\")\n+\t\t       (match_operand:MVE_0 2 \"s_register_operand\" \"w,w\")\n+\t\t       (match_operand:MVE_0 3 \"s_register_operand\" \"w,w\")]\n+\t VCMLA))\n   ]\n   \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n-  \"vcmla.f%#<V_sz_elem>\t%q0, %q2, %q3, #180\"\n-  [(set_attr \"type\" \"mve_move\")\n-])\n-\n-;;\n-;; [vcmlaq_rot270_f])\n-;;\n-(define_insn \"mve_vcmlaq_rot270_f<mode>\"\n-  [\n-   (set (match_operand:MVE_0 0 \"s_register_operand\" \"=w\")\n-\t(unspec:MVE_0 [(match_operand:MVE_0 1 \"s_register_operand\" \"0\")\n-\t\t       (match_operand:MVE_0 2 \"s_register_operand\" \"w\")\n-\t\t       (match_operand:MVE_0 3 \"s_register_operand\" \"w\")]\n-\t VCMLAQ_ROT270_F))\n-  ]\n-  \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n-  \"vcmla.f%#<V_sz_elem>\t%q0, %q2, %q3, #270\"\n-  [(set_attr \"type\" \"mve_move\")\n-])\n-\n-;;\n-;; [vcmlaq_rot90_f])\n-;;\n-(define_insn \"mve_vcmlaq_rot90_f<mode>\"\n-  [\n-   (set (match_operand:MVE_0 0 \"s_register_operand\" \"=w\")\n-\t(unspec:MVE_0 [(match_operand:MVE_0 1 \"s_register_operand\" \"0\")\n-\t\t       (match_operand:MVE_0 2 \"s_register_operand\" \"w\")\n-\t\t       (match_operand:MVE_0 3 \"s_register_operand\" \"w\")]\n-\t VCMLAQ_ROT90_F))\n-  ]\n-  \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n-  \"vcmla.f%#<V_sz_elem>\t%q0, %q2, %q3, #90\"\n+  \"@\n+   vcmla.f%#<V_sz_elem>\t%q0, %q2, %q3, #<rot>\n+   vcmul.f%#<V_sz_elem>\t%q0, %q2, %q3, #<rot>\"\n   [(set_attr \"type\" \"mve_move\")\n ])\n "}, {"sha": "6ed23a97c0b2940a608b443ffd04328fa1b649b7", "filename": "gcc/config/arm/unspecs.md", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db253e8b1dba3ec1138d1b5ea0fac361dde9ac17/gcc%2Fconfig%2Farm%2Funspecs.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db253e8b1dba3ec1138d1b5ea0fac361dde9ac17/gcc%2Fconfig%2Farm%2Funspecs.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Funspecs.md?ref=db253e8b1dba3ec1138d1b5ea0fac361dde9ac17", "patch": "@@ -510,6 +510,10 @@\n   UNSPEC_VCMLA90\n   UNSPEC_VCMLA180\n   UNSPEC_VCMLA270\n+  UNSPEC_VCMUL\n+  UNSPEC_VCMUL90\n+  UNSPEC_VCMUL180\n+  UNSPEC_VCMUL270\n   UNSPEC_MATMUL_S\n   UNSPEC_MATMUL_U\n   UNSPEC_MATMUL_US\n@@ -717,10 +721,6 @@\n   VCMPLTQ_N_F\n   VCMPNEQ_F\n   VCMPNEQ_N_F\n-  VCMULQ_F\n-  VCMULQ_ROT180_F\n-  VCMULQ_ROT270_F\n-  VCMULQ_ROT90_F\n   VMAXNMAQ_F\n   VMAXNMAVQ_F\n   VMAXNMQ_F\n@@ -892,7 +892,6 @@\n   VMLSLDAVAQ_S\n   VQSHRUNBQ_N_S\n   VQRSHRUNTQ_N_S\n-  VCMLAQ_F\n   VMINNMAQ_M_F\n   VFMASQ_N_F\n   VDUPQ_M_N_F\n@@ -914,14 +913,12 @@\n   VADDLVAQ_P_S\n   VQMOVUNBQ_M_S\n   VCMPLEQ_M_F\n-  VCMLAQ_ROT180_F\n   VMLSLDAVAXQ_S\n   VRNDXQ_M_F\n   VFMSQ_F\n   VMINNMVQ_P_F\n   VMAXNMVQ_P_F\n   VPSELQ_F\n-  VCMLAQ_ROT90_F\n   VQMOVUNTQ_M_S\n   VREV64Q_M_F\n   VNEGQ_M_F\n@@ -934,7 +931,6 @@\n   VRMLALDAVHQ_P_S\n   VRMLALDAVHXQ_P_S\n   VCMPEQQ_M_N_F\n-  VCMLAQ_ROT270_F\n   VMAXNMAQ_M_F\n   VRNDQ_M_F\n   VMLALDAVQ_P_U"}]}