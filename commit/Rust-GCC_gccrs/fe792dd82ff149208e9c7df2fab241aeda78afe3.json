{"sha": "fe792dd82ff149208e9c7df2fab241aeda78afe3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU3OTJkZDgyZmYxNDkyMDhlOWM3ZGYyZmFiMjQxYWVkYTc4YWZlMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-03-02T16:02:37Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-03-02T16:02:37Z"}, "message": "re PR rtl-optimization/79780 (ICE in rtl_verify_bb_insns, at cfgrtl.c:2661 (error: flow control insn inside a basic block))\n\n\tPR rtl-optimization/79780\n\t* cprop.c (one_cprop_pass): When second and further conditional trap\n\tin a single basic block is turned into an unconditional trap, turn it\n\tinto a deleted note to avoid RTL verification failures.\n\n\t* gcc.c-torture/compile/pr79780.c: New test.\n\nFrom-SVN: r245843", "tree": {"sha": "036c24db59cfd5f9166e68ab892452c1abf3df5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/036c24db59cfd5f9166e68ab892452c1abf3df5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe792dd82ff149208e9c7df2fab241aeda78afe3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe792dd82ff149208e9c7df2fab241aeda78afe3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe792dd82ff149208e9c7df2fab241aeda78afe3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe792dd82ff149208e9c7df2fab241aeda78afe3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "35a4e4ed81d9aae4bbd29cf24e389269d08f1fc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35a4e4ed81d9aae4bbd29cf24e389269d08f1fc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35a4e4ed81d9aae4bbd29cf24e389269d08f1fc2"}], "stats": {"total": 76, "additions": 73, "deletions": 3}, "files": [{"sha": "4663d438a916e1a5d80eee0836200b3d1a101151", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe792dd82ff149208e9c7df2fab241aeda78afe3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe792dd82ff149208e9c7df2fab241aeda78afe3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fe792dd82ff149208e9c7df2fab241aeda78afe3", "patch": "@@ -1,3 +1,10 @@\n+2017-03-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/79780\n+\t* cprop.c (one_cprop_pass): When second and further conditional trap\n+\tin a single basic block is turned into an unconditional trap, turn it\n+\tinto a deleted note to avoid RTL verification failures.\n+\n 2017-03-02  Richard Biener  <rguenther@suse.de>\n \n \t* fold-const.c (const_binop): Use ulow () instead of elt (0)."}, {"sha": "4814b5e97c0690b43f12f1f052f8d5b73301a685", "filename": "gcc/cprop.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe792dd82ff149208e9c7df2fab241aeda78afe3/gcc%2Fcprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe792dd82ff149208e9c7df2fab241aeda78afe3/gcc%2Fcprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcprop.c?ref=fe792dd82ff149208e9c7df2fab241aeda78afe3", "patch": "@@ -1852,12 +1852,22 @@ one_cprop_pass (void)\n \t\tif (! NOTE_P (insn) && ! insn->deleted ())\n \t\t  mark_oprs_set (insn);\n \n-\t\tif (!was_uncond_trap && !seen_uncond_trap\n+\t\tif (!was_uncond_trap\n \t\t    && GET_CODE (PATTERN (insn)) == TRAP_IF\n \t\t    && XEXP (PATTERN (insn), 0) == const1_rtx)\n \t\t  {\n-\t\t    seen_uncond_trap = true;\n-\t\t    uncond_traps.safe_push (insn);\n+\t\t    /* If we have already seen an unconditional trap\n+\t\t       earlier, the rest of the bb is going to be removed\n+\t\t       as unreachable.  Just turn it into a note, so that\n+\t\t       RTL verification doesn't complain about it before\n+\t\t       it is finally removed.  */\n+\t\t    if (seen_uncond_trap)\n+\t\t      set_insn_deleted (insn);\n+\t\t    else\n+\t\t      {\n+\t\t\tseen_uncond_trap = true;\n+\t\t\tuncond_traps.safe_push (insn);\n+\t\t      }\n \t\t  }\n \t      }\n \t}"}, {"sha": "3eca2ab2194bd2d1ea4f4e5ac90a42675dd7ebb3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe792dd82ff149208e9c7df2fab241aeda78afe3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe792dd82ff149208e9c7df2fab241aeda78afe3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fe792dd82ff149208e9c7df2fab241aeda78afe3", "patch": "@@ -1,3 +1,8 @@\n+2017-03-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/79780\n+\t* gcc.c-torture/compile/pr79780.c: New test.\n+\n 2017-03-02  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/79345"}, {"sha": "c50708d9adae8f8734e771653d7742de06c4903e", "filename": "gcc/testsuite/gcc.c-torture/compile/pr79780.c", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe792dd82ff149208e9c7df2fab241aeda78afe3/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr79780.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe792dd82ff149208e9c7df2fab241aeda78afe3/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr79780.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr79780.c?ref=fe792dd82ff149208e9c7df2fab241aeda78afe3", "patch": "@@ -0,0 +1,48 @@\n+/* PR rtl-optimization/79780 */\n+\n+int t3, iy, f4, oi, gn;\n+\n+void\n+foo (long long int mh)\n+{\n+  int pi = 0;\n+\n+  if (iy != 0)\n+    for (;;)\n+      f4 = 0;\n+\n+  if (t3 != 0)\n+    {\n+      while (mh != 0LL)\n+\t{\n+\t  while (mh < 1LL)\n+\t    ++mh;\n+\t  ++mh;\n+\t}\n+      for (;;)\n+\t;\n+      for (oi = 0; oi < 1; ++oi)\n+\t{\n+\tn3:;\n+\t}\n+      gn = iy = 1;\n+    }\n+\n+  f4 = 0;\n+\n+  if (pi - (mh != 0LL) == 0)\n+    if (mh != 1LL)\n+      {\n+\toi = t3 = 0;\n+\tif (mh == 0LL)\n+\t  ++pi;\n+      }\n+\n+  if (iy != 0 && pi != 0)\n+    {\n+      t3 = 0;\n+      goto n3;\n+    }\n+\n+  t3 /= 0;\n+}"}]}