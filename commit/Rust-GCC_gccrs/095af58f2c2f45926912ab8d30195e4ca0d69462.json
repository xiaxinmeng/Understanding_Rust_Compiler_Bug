{"sha": "095af58f2c2f45926912ab8d30195e4ca0d69462", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk1YWY1OGYyYzJmNDU5MjY5MTJhYjhkMzAxOTVlNGNhMGQ2OTQ2Mg==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@linux-m68k.org", "date": "2011-12-19T13:12:26Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2011-12-19T13:12:26Z"}, "message": "Check for warning flags without no- prefix\n\nconfig/:\n\tPR bootstrap/51388\n\t* warnings.m4 (ACX_PROG_CC_WARNING_OPTS)\n\t(ACX_PROG_CC_WARNING_ALMOST_PEDANTIC): Run the test without the\n\tno- prefix.\nfixincludes/:\n\t* configure: Regenerate.\ngcc/:\n\t* configure: Regenerate.\nlibcpp/:\n\t* configure: Regenerate.\nlibdecnumber/:\n\t* configure: Regenerate.\nlibiberty/:\n\t* configure: Regenerate.\nlto-plugin/:\n\t* configure: Regenerate.\n\nFrom-SVN: r182478", "tree": {"sha": "65747ef66aa8db22b468420f30ac9bad1ada89d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65747ef66aa8db22b468420f30ac9bad1ada89d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/095af58f2c2f45926912ab8d30195e4ca0d69462", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/095af58f2c2f45926912ab8d30195e4ca0d69462", "html_url": "https://github.com/Rust-GCC/gccrs/commit/095af58f2c2f45926912ab8d30195e4ca0d69462", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/095af58f2c2f45926912ab8d30195e4ca0d69462/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c8a89d2a41c5cd9a651215d87edc6d3c0f04b9c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8a89d2a41c5cd9a651215d87edc6d3c0f04b9c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8a89d2a41c5cd9a651215d87edc6d3c0f04b9c8"}], "stats": {"total": 265, "additions": 194, "deletions": 71}, "files": [{"sha": "5c8b62c88fd139912cbb576c21932ac58642c0fd", "filename": "config/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/095af58f2c2f45926912ab8d30195e4ca0d69462/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/095af58f2c2f45926912ab8d30195e4ca0d69462/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=095af58f2c2f45926912ab8d30195e4ca0d69462", "patch": "@@ -1,3 +1,10 @@\n+2011-12-19  Andreas Schwab  <schwab@linux-m68k.org>\n+\n+\tPR bootstrap/51388\n+\t* warnings.m4 (ACX_PROG_CC_WARNING_OPTS)\n+\t(ACX_PROG_CC_WARNING_ALMOST_PEDANTIC): Run the test without the\n+\tno- prefix.\n+\n 2011-12-18  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* acx.m4 (Test for GNAT): Update comment and add quotes in final test."}, {"sha": "292e5a471a74bf87b3daaea7d2cbc1812c28e34c", "filename": "config/warnings.m4", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/095af58f2c2f45926912ab8d30195e4ca0d69462/config%2Fwarnings.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/095af58f2c2f45926912ab8d30195e4ca0d69462/config%2Fwarnings.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fwarnings.m4?ref=095af58f2c2f45926912ab8d30195e4ca0d69462", "patch": "@@ -1,6 +1,6 @@\n # Autoconf include file defining macros related to compile-time warnings.\n \n-# Copyright 2004, 2005, 2007, 2009 Free Software Foundation, Inc.\n+# Copyright 2004, 2005, 2007, 2009, 2011 Free Software Foundation, Inc.\n \n #This file is part of GCC.\n \n@@ -28,7 +28,13 @@ AC_SUBST(acx_Var)dnl\n m4_expand_once([acx_Var=\n ],m4_quote(acx_Var=))dnl\n save_CFLAGS=\"$CFLAGS\"\n-for option in $1; do\n+for real_option in $1; do\n+  # Do the check with the no- prefix removed since gcc silently\n+  # accepts any -Wno-* option on purpose\n+  case $real_option in\n+    -Wno-*) option=-W`expr $real_option : '-Wno-\\(.*\\)'` ;;\n+    *) option=$real_option ;;\n+  esac\n   AS_VAR_PUSHDEF([acx_Woption], [acx_cv_prog_cc_warning_$option])\n   AC_CACHE_CHECK([whether $CC supports $option], acx_Woption,\n     [CFLAGS=\"$option\"\n@@ -37,14 +43,14 @@ for option in $1; do\n       [AS_VAR_SET(acx_Woption, no)])\n   ])\n   AS_IF([test AS_VAR_GET(acx_Woption) = yes],\n-        [acx_Var=\"$acx_Var${acx_Var:+ }$option\"])\n+        [acx_Var=\"$acx_Var${acx_Var:+ }$real_option\"])\n   AS_VAR_POPDEF([acx_Woption])dnl\n done\n CFLAGS=\"$save_CFLAGS\"\n m4_popdef([acx_Var])dnl\n ])# ACX_PROG_CC_WARNING_OPTS\n \n-# ACX_PROG_CC_WARNING_ALMOST_PEDANTIC(WARNINGS, [VARIABLE = WARN_PEDANTIC)\n+# ACX_PROG_CC_WARNING_ALMOST_PEDANTIC(WARNINGS, [VARIABLE = WARN_PEDANTIC])\n #   Append to VARIABLE \"-pedantic\" + the argument, if the compiler is GCC\n #   and accepts all of those options simultaneously, otherwise to nothing.\n AC_DEFUN([ACX_PROG_CC_WARNING_ALMOST_PEDANTIC],\n@@ -53,11 +59,14 @@ m4_pushdef([acx_Var], [m4_default([$2], [WARN_PEDANTIC])])dnl\n AC_SUBST(acx_Var)dnl\n m4_expand_once([acx_Var=\n ],m4_quote(acx_Var=))dnl\n-AS_VAR_PUSHDEF([acx_Pedantic], [acx_cv_prog_cc_pedantic_$1])dnl\n+# Do the check with the no- prefix removed from the warning options\n+# since gcc silently accepts any -Wno-* option on purpose\n+m4_pushdef([acx_Woptions], [m4_bpatsubst([$1], [-Wno-], [-W])])dnl\n+AS_VAR_PUSHDEF([acx_Pedantic], [acx_cv_prog_cc_pedantic_]acx_Woptions)dnl\n AS_IF([test \"$GCC\" = yes],\n-[AC_CACHE_CHECK([whether $CC supports -pedantic $1], acx_Pedantic,\n+[AC_CACHE_CHECK([whether $CC supports -pedantic ]acx_Woptions, acx_Pedantic,\n [save_CFLAGS=\"$CFLAGS\"\n-CFLAGS=\"-pedantic $1\"\n+CFLAGS=\"-pedantic acx_Woptions\"\n AC_COMPILE_IFELSE([AC_LANG_PROGRAM([],[])],\n    [AS_VAR_SET(acx_Pedantic, yes)],\n    [AS_VAR_SET(acx_Pedantic, no)])\n@@ -66,6 +75,7 @@ AS_IF([test AS_VAR_GET(acx_Pedantic) = yes],\n       [acx_Var=\"$acx_Var${acx_Var:+ }-pedantic $1\"])\n ])\n AS_VAR_POPDEF([acx_Pedantic])dnl\n+m4_popdef([acx_Woptions])dnl\n m4_popdef([acx_Var])dnl\n ])# ACX_PROG_CC_WARNING_ALMOST_PEDANTIC\n "}, {"sha": "55dba23f475773c52d9193397022a19da59de8a9", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/095af58f2c2f45926912ab8d30195e4ca0d69462/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/095af58f2c2f45926912ab8d30195e4ca0d69462/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=095af58f2c2f45926912ab8d30195e4ca0d69462", "patch": "@@ -1,3 +1,7 @@\n+2011-12-19  Andreas Schwab  <schwab@linux-m68k.org>\n+\n+\t* configure: Regenerate.\n+\n 2011-11-16  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* inclhack.def (aix_once_init_[12]): New fixes."}, {"sha": "70b7b947bcd025ae082677c5dd07103c94a1e059", "filename": "fixincludes/configure", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/095af58f2c2f45926912ab8d30195e4ca0d69462/fixincludes%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/095af58f2c2f45926912ab8d30195e4ca0d69462/fixincludes%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Fconfigure?ref=095af58f2c2f45926912ab8d30195e4ca0d69462", "patch": "@@ -4563,9 +4563,15 @@ $as_echo \"$ac_cv_path_SED\" >&6; }\n \n WARN_CFLAGS=\n save_CFLAGS=\"$CFLAGS\"\n-for option in -W -Wall -Wwrite-strings -Wstrict-prototypes \\\n+for real_option in -W -Wall -Wwrite-strings -Wstrict-prototypes \\\n \t\t\t  -Wmissing-prototypes -Wold-style-definition \\\n \t\t\t  -Wmissing-format-attribute -Wno-overlength-strings; do\n+  # Do the check with the no- prefix removed since gcc silently\n+  # accepts any -Wno-* option on purpose\n+  case $real_option in\n+    -Wno-*) option=-W`expr $real_option : '-Wno-\\(.*\\)'` ;;\n+    *) option=$real_option ;;\n+  esac\n   as_acx_Woption=`$as_echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n \n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports $option\" >&5\n@@ -4597,20 +4603,22 @@ eval ac_res=\\$$as_acx_Woption\n \t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n $as_echo \"$ac_res\" >&6; }\n   if test `eval 'as_val=${'$as_acx_Woption'};$as_echo \"$as_val\"'` = yes; then :\n-  WARN_CFLAGS=\"$WARN_CFLAGS${WARN_CFLAGS:+ }$option\"\n+  WARN_CFLAGS=\"$WARN_CFLAGS${WARN_CFLAGS:+ }$real_option\"\n fi\n   done\n CFLAGS=\"$save_CFLAGS\"\n \n WARN_PEDANTIC=\n+# Do the check with the no- prefix removed from the warning options\n+# since gcc silently accepts any -Wno-* option on purpose\n if test \"$GCC\" = yes; then :\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -pedantic -Wno-long-long\" >&5\n-$as_echo_n \"checking whether $CC supports -pedantic -Wno-long-long... \" >&6; }\n-if test \"${acx_cv_prog_cc_pedantic__Wno_long_long+set}\" = set; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -pedantic -Wlong-long\" >&5\n+$as_echo_n \"checking whether $CC supports -pedantic -Wlong-long... \" >&6; }\n+if test \"${acx_cv_prog_cc_pedantic__Wlong_long+set}\" = set; then :\n   $as_echo_n \"(cached) \" >&6\n else\n   save_CFLAGS=\"$CFLAGS\"\n-CFLAGS=\"-pedantic -Wno-long-long\"\n+CFLAGS=\"-pedantic -Wlong-long\"\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n@@ -4623,16 +4631,16 @@ main ()\n }\n _ACEOF\n if ac_fn_c_try_compile \"$LINENO\"; then :\n-  acx_cv_prog_cc_pedantic__Wno_long_long=yes\n+  acx_cv_prog_cc_pedantic__Wlong_long=yes\n else\n-  acx_cv_prog_cc_pedantic__Wno_long_long=no\n+  acx_cv_prog_cc_pedantic__Wlong_long=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n CFLAGS=\"$save_CFLAGS\"\n fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_prog_cc_pedantic__Wno_long_long\" >&5\n-$as_echo \"$acx_cv_prog_cc_pedantic__Wno_long_long\" >&6; }\n-if test $acx_cv_prog_cc_pedantic__Wno_long_long = yes; then :\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_prog_cc_pedantic__Wlong_long\" >&5\n+$as_echo \"$acx_cv_prog_cc_pedantic__Wlong_long\" >&6; }\n+if test $acx_cv_prog_cc_pedantic__Wlong_long = yes; then :\n   WARN_PEDANTIC=\"$WARN_PEDANTIC${WARN_PEDANTIC:+ }-pedantic -Wno-long-long\"\n fi\n "}, {"sha": "214635a830bdd62608ad15528880c9ea99ebd710", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/095af58f2c2f45926912ab8d30195e4ca0d69462/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/095af58f2c2f45926912ab8d30195e4ca0d69462/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=095af58f2c2f45926912ab8d30195e4ca0d69462", "patch": "@@ -1,3 +1,7 @@\n+2011-12-19  Andreas Schwab  <schwab@linux-m68k.org>\n+\n+\t* configure: Regenerate.\n+\n 2011-12-19  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* emit-rtl.c (init_emit_once): Initialize const_tiny_rtx[3] for"}, {"sha": "d7d952eaaf33b10710b004485d10697ae6a3429f", "filename": "gcc/configure", "status": "modified", "additions": 53, "deletions": 21, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/095af58f2c2f45926912ab8d30195e4ca0d69462/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/095af58f2c2f45926912ab8d30195e4ca0d69462/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=095af58f2c2f45926912ab8d30195e4ca0d69462", "patch": "@@ -6400,7 +6400,13 @@ fi\n \n loose_warn=\n save_CFLAGS=\"$CFLAGS\"\n-for option in -W -Wall -Wno-narrowing -Wwrite-strings -Wcast-qual; do\n+for real_option in -W -Wall -Wno-narrowing -Wwrite-strings -Wcast-qual; do\n+  # Do the check with the no- prefix removed since gcc silently\n+  # accepts any -Wno-* option on purpose\n+  case $real_option in\n+    -Wno-*) option=-W`expr $real_option : '-Wno-\\(.*\\)'` ;;\n+    *) option=$real_option ;;\n+  esac\n   as_acx_Woption=`$as_echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n \n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports $option\" >&5\n@@ -6432,14 +6438,20 @@ eval ac_res=\\$$as_acx_Woption\n \t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n $as_echo \"$ac_res\" >&6; }\n   if test `eval 'as_val=${'$as_acx_Woption'};$as_echo \"$as_val\"'` = yes; then :\n-  loose_warn=\"$loose_warn${loose_warn:+ }$option\"\n+  loose_warn=\"$loose_warn${loose_warn:+ }$real_option\"\n fi\n   done\n CFLAGS=\"$save_CFLAGS\"\n \n c_loose_warn=\n save_CFLAGS=\"$CFLAGS\"\n-for option in -Wstrict-prototypes -Wmissing-prototypes; do\n+for real_option in -Wstrict-prototypes -Wmissing-prototypes; do\n+  # Do the check with the no- prefix removed since gcc silently\n+  # accepts any -Wno-* option on purpose\n+  case $real_option in\n+    -Wno-*) option=-W`expr $real_option : '-Wno-\\(.*\\)'` ;;\n+    *) option=$real_option ;;\n+  esac\n   as_acx_Woption=`$as_echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n \n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports $option\" >&5\n@@ -6471,14 +6483,20 @@ eval ac_res=\\$$as_acx_Woption\n \t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n $as_echo \"$ac_res\" >&6; }\n   if test `eval 'as_val=${'$as_acx_Woption'};$as_echo \"$as_val\"'` = yes; then :\n-  c_loose_warn=\"$c_loose_warn${c_loose_warn:+ }$option\"\n+  c_loose_warn=\"$c_loose_warn${c_loose_warn:+ }$real_option\"\n fi\n   done\n CFLAGS=\"$save_CFLAGS\"\n \n strict_warn=\n save_CFLAGS=\"$CFLAGS\"\n-for option in -Wmissing-format-attribute; do\n+for real_option in -Wmissing-format-attribute; do\n+  # Do the check with the no- prefix removed since gcc silently\n+  # accepts any -Wno-* option on purpose\n+  case $real_option in\n+    -Wno-*) option=-W`expr $real_option : '-Wno-\\(.*\\)'` ;;\n+    *) option=$real_option ;;\n+  esac\n   as_acx_Woption=`$as_echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n \n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports $option\" >&5\n@@ -6510,14 +6528,20 @@ eval ac_res=\\$$as_acx_Woption\n \t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n $as_echo \"$ac_res\" >&6; }\n   if test `eval 'as_val=${'$as_acx_Woption'};$as_echo \"$as_val\"'` = yes; then :\n-  strict_warn=\"$strict_warn${strict_warn:+ }$option\"\n+  strict_warn=\"$strict_warn${strict_warn:+ }$real_option\"\n fi\n   done\n CFLAGS=\"$save_CFLAGS\"\n \n c_strict_warn=\n save_CFLAGS=\"$CFLAGS\"\n-for option in -Wold-style-definition -Wc++-compat; do\n+for real_option in -Wold-style-definition -Wc++-compat; do\n+  # Do the check with the no- prefix removed since gcc silently\n+  # accepts any -Wno-* option on purpose\n+  case $real_option in\n+    -Wno-*) option=-W`expr $real_option : '-Wno-\\(.*\\)'` ;;\n+    *) option=$real_option ;;\n+  esac\n   as_acx_Woption=`$as_echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n \n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports $option\" >&5\n@@ -6549,19 +6573,21 @@ eval ac_res=\\$$as_acx_Woption\n \t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n $as_echo \"$ac_res\" >&6; }\n   if test `eval 'as_val=${'$as_acx_Woption'};$as_echo \"$as_val\"'` = yes; then :\n-  c_strict_warn=\"$c_strict_warn${c_strict_warn:+ }$option\"\n+  c_strict_warn=\"$c_strict_warn${c_strict_warn:+ }$real_option\"\n fi\n   done\n CFLAGS=\"$save_CFLAGS\"\n \n+# Do the check with the no- prefix removed from the warning options\n+# since gcc silently accepts any -Wno-* option on purpose\n if test \"$GCC\" = yes; then :\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings\" >&5\n-$as_echo_n \"checking whether $CC supports -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings... \" >&6; }\n-if test \"${acx_cv_prog_cc_pedantic__Wno_long_long__Wno_variadic_macros__Wno_overlength_strings+set}\" = set; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -pedantic -Wlong-long -Wvariadic-macros -Woverlength-strings\" >&5\n+$as_echo_n \"checking whether $CC supports -pedantic -Wlong-long -Wvariadic-macros -Woverlength-strings... \" >&6; }\n+if test \"${acx_cv_prog_cc_pedantic__Wlong_long__Wvariadic_macros__Woverlength_strings+set}\" = set; then :\n   $as_echo_n \"(cached) \" >&6\n else\n   save_CFLAGS=\"$CFLAGS\"\n-CFLAGS=\"-pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings\"\n+CFLAGS=\"-pedantic -Wlong-long -Wvariadic-macros -Woverlength-strings\"\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n@@ -6574,16 +6600,16 @@ main ()\n }\n _ACEOF\n if ac_fn_c_try_compile \"$LINENO\"; then :\n-  acx_cv_prog_cc_pedantic__Wno_long_long__Wno_variadic_macros__Wno_overlength_strings=yes\n+  acx_cv_prog_cc_pedantic__Wlong_long__Wvariadic_macros__Woverlength_strings=yes\n else\n-  acx_cv_prog_cc_pedantic__Wno_long_long__Wno_variadic_macros__Wno_overlength_strings=no\n+  acx_cv_prog_cc_pedantic__Wlong_long__Wvariadic_macros__Woverlength_strings=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n CFLAGS=\"$save_CFLAGS\"\n fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_prog_cc_pedantic__Wno_long_long__Wno_variadic_macros__Wno_overlength_strings\" >&5\n-$as_echo \"$acx_cv_prog_cc_pedantic__Wno_long_long__Wno_variadic_macros__Wno_overlength_strings\" >&6; }\n-if test $acx_cv_prog_cc_pedantic__Wno_long_long__Wno_variadic_macros__Wno_overlength_strings = yes; then :\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_prog_cc_pedantic__Wlong_long__Wvariadic_macros__Woverlength_strings\" >&5\n+$as_echo \"$acx_cv_prog_cc_pedantic__Wlong_long__Wvariadic_macros__Woverlength_strings\" >&6; }\n+if test $acx_cv_prog_cc_pedantic__Wlong_long__Wvariadic_macros__Woverlength_strings = yes; then :\n   strict_warn=\"$strict_warn${strict_warn:+ }-pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings\"\n fi\n \n@@ -6617,7 +6643,13 @@ fi\n # Disable exceptions and RTTI if building with g++\n noexception_flags=\n save_CFLAGS=\"$CFLAGS\"\n-for option in -fno-exceptions -fno-rtti; do\n+for real_option in -fno-exceptions -fno-rtti; do\n+  # Do the check with the no- prefix removed since gcc silently\n+  # accepts any -Wno-* option on purpose\n+  case $real_option in\n+    -Wno-*) option=-W`expr $real_option : '-Wno-\\(.*\\)'` ;;\n+    *) option=$real_option ;;\n+  esac\n   as_acx_Woption=`$as_echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n \n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports $option\" >&5\n@@ -6649,7 +6681,7 @@ eval ac_res=\\$$as_acx_Woption\n \t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n $as_echo \"$ac_res\" >&6; }\n   if test `eval 'as_val=${'$as_acx_Woption'};$as_echo \"$as_val\"'` = yes; then :\n-  noexception_flags=\"$noexception_flags${noexception_flags:+ }$option\"\n+  noexception_flags=\"$noexception_flags${noexception_flags:+ }$real_option\"\n fi\n   done\n CFLAGS=\"$save_CFLAGS\"\n@@ -18077,7 +18109,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18080 \"configure\"\n+#line 18112 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18183,7 +18215,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18186 \"configure\"\n+#line 18218 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "ea5690d602b8f14ac8efac64128a8c1b48f7296c", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/095af58f2c2f45926912ab8d30195e4ca0d69462/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/095af58f2c2f45926912ab8d30195e4ca0d69462/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=095af58f2c2f45926912ab8d30195e4ca0d69462", "patch": "@@ -1,3 +1,7 @@\n+2011-12-19  Andreas Schwab  <schwab@linux-m68k.org>\n+\n+\t* configure: Regenerate.\n+\n 2011-12-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/50237"}, {"sha": "0ada4e954a1f8d4d8551ad838caf5d1ae92bd9d2", "filename": "libcpp/configure", "status": "modified", "additions": 35, "deletions": 15, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/095af58f2c2f45926912ab8d30195e4ca0d69462/libcpp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/095af58f2c2f45926912ab8d30195e4ca0d69462/libcpp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure?ref=095af58f2c2f45926912ab8d30195e4ca0d69462", "patch": "@@ -4688,8 +4688,14 @@ test -n \"$AUTOHEADER\" || AUTOHEADER=\"$MISSING autoheader\"\n \n warn=\n save_CFLAGS=\"$CFLAGS\"\n-for option in -W -Wall -Wno-narrowing -Wwrite-strings \\\n+for real_option in -W -Wall -Wno-narrowing -Wwrite-strings \\\n \t\t\t  -Wmissing-format-attribute; do\n+  # Do the check with the no- prefix removed since gcc silently\n+  # accepts any -Wno-* option on purpose\n+  case $real_option in\n+    -Wno-*) option=-W`expr $real_option : '-Wno-\\(.*\\)'` ;;\n+    *) option=$real_option ;;\n+  esac\n   as_acx_Woption=`$as_echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n \n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports $option\" >&5\n@@ -4721,15 +4727,21 @@ eval ac_res=\\$$as_acx_Woption\n \t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n $as_echo \"$ac_res\" >&6; }\n   if test `eval 'as_val=${'$as_acx_Woption'};$as_echo \"$as_val\"'` = yes; then :\n-  warn=\"$warn${warn:+ }$option\"\n+  warn=\"$warn${warn:+ }$real_option\"\n fi\n   done\n CFLAGS=\"$save_CFLAGS\"\n \n c_warn=\n save_CFLAGS=\"$CFLAGS\"\n-for option in -Wstrict-prototypes -Wmissing-prototypes \\\n+for real_option in -Wstrict-prototypes -Wmissing-prototypes \\\n \t\t\t  -Wold-style-definition -Wc++-compat; do\n+  # Do the check with the no- prefix removed since gcc silently\n+  # accepts any -Wno-* option on purpose\n+  case $real_option in\n+    -Wno-*) option=-W`expr $real_option : '-Wno-\\(.*\\)'` ;;\n+    *) option=$real_option ;;\n+  esac\n   as_acx_Woption=`$as_echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n \n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports $option\" >&5\n@@ -4761,20 +4773,22 @@ eval ac_res=\\$$as_acx_Woption\n \t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n $as_echo \"$ac_res\" >&6; }\n   if test `eval 'as_val=${'$as_acx_Woption'};$as_echo \"$as_val\"'` = yes; then :\n-  c_warn=\"$c_warn${c_warn:+ }$option\"\n+  c_warn=\"$c_warn${c_warn:+ }$real_option\"\n fi\n   done\n CFLAGS=\"$save_CFLAGS\"\n \n WARN_PEDANTIC=\n+# Do the check with the no- prefix removed from the warning options\n+# since gcc silently accepts any -Wno-* option on purpose\n if test \"$GCC\" = yes; then :\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -pedantic -Wno-long-long\" >&5\n-$as_echo_n \"checking whether $CC supports -pedantic -Wno-long-long... \" >&6; }\n-if test \"${acx_cv_prog_cc_pedantic__Wno_long_long+set}\" = set; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -pedantic -Wlong-long\" >&5\n+$as_echo_n \"checking whether $CC supports -pedantic -Wlong-long... \" >&6; }\n+if test \"${acx_cv_prog_cc_pedantic__Wlong_long+set}\" = set; then :\n   $as_echo_n \"(cached) \" >&6\n else\n   save_CFLAGS=\"$CFLAGS\"\n-CFLAGS=\"-pedantic -Wno-long-long\"\n+CFLAGS=\"-pedantic -Wlong-long\"\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n@@ -4787,16 +4801,16 @@ main ()\n }\n _ACEOF\n if ac_fn_c_try_compile \"$LINENO\"; then :\n-  acx_cv_prog_cc_pedantic__Wno_long_long=yes\n+  acx_cv_prog_cc_pedantic__Wlong_long=yes\n else\n-  acx_cv_prog_cc_pedantic__Wno_long_long=no\n+  acx_cv_prog_cc_pedantic__Wlong_long=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n CFLAGS=\"$save_CFLAGS\"\n fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_prog_cc_pedantic__Wno_long_long\" >&5\n-$as_echo \"$acx_cv_prog_cc_pedantic__Wno_long_long\" >&6; }\n-if test $acx_cv_prog_cc_pedantic__Wno_long_long = yes; then :\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_prog_cc_pedantic__Wlong_long\" >&5\n+$as_echo \"$acx_cv_prog_cc_pedantic__Wlong_long\" >&6; }\n+if test $acx_cv_prog_cc_pedantic__Wlong_long = yes; then :\n   WARN_PEDANTIC=\"$WARN_PEDANTIC${WARN_PEDANTIC:+ }-pedantic -Wno-long-long\"\n fi\n \n@@ -4806,7 +4820,13 @@ fi\n # Disable exceptions and RTTI if building with g++\n noexception_flags=\n save_CFLAGS=\"$CFLAGS\"\n-for option in -fno-exceptions -fno-rtti; do\n+for real_option in -fno-exceptions -fno-rtti; do\n+  # Do the check with the no- prefix removed since gcc silently\n+  # accepts any -Wno-* option on purpose\n+  case $real_option in\n+    -Wno-*) option=-W`expr $real_option : '-Wno-\\(.*\\)'` ;;\n+    *) option=$real_option ;;\n+  esac\n   as_acx_Woption=`$as_echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n \n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports $option\" >&5\n@@ -4838,7 +4858,7 @@ eval ac_res=\\$$as_acx_Woption\n \t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n $as_echo \"$ac_res\" >&6; }\n   if test `eval 'as_val=${'$as_acx_Woption'};$as_echo \"$as_val\"'` = yes; then :\n-  noexception_flags=\"$noexception_flags${noexception_flags:+ }$option\"\n+  noexception_flags=\"$noexception_flags${noexception_flags:+ }$real_option\"\n fi\n   done\n CFLAGS=\"$save_CFLAGS\""}, {"sha": "93dfee6d46f94206b6875c65f4b16eddf17296ae", "filename": "libdecnumber/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/095af58f2c2f45926912ab8d30195e4ca0d69462/libdecnumber%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/095af58f2c2f45926912ab8d30195e4ca0d69462/libdecnumber%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2FChangeLog?ref=095af58f2c2f45926912ab8d30195e4ca0d69462", "patch": "@@ -1,3 +1,7 @@\n+2011-12-19  Andreas Schwab  <schwab@linux-m68k.org>\n+\n+\t* configure: Regenerate.\n+\n 2011-04-20  Jim Meyering  <meyering@redhat.com>\n \n \t* decNumber.c (decNumberFromString): Remove useless"}, {"sha": "5032a174f0974e19e4f3e34a2f82ed6b75fcad69", "filename": "libdecnumber/configure", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/095af58f2c2f45926912ab8d30195e4ca0d69462/libdecnumber%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/095af58f2c2f45926912ab8d30195e4ca0d69462/libdecnumber%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2Fconfigure?ref=095af58f2c2f45926912ab8d30195e4ca0d69462", "patch": "@@ -3248,9 +3248,15 @@ test -n \"$AUTOHEADER\" || AUTOHEADER=\"$MISSING autoheader\"\n \n WARN_CFLAGS=\n save_CFLAGS=\"$CFLAGS\"\n-for option in -W -Wall -Wwrite-strings -Wstrict-prototypes \\\n+for real_option in -W -Wall -Wwrite-strings -Wstrict-prototypes \\\n \t\t\t  -Wmissing-prototypes -Wold-style-definition \\\n \t\t\t  -Wmissing-format-attribute -Wcast-qual; do\n+  # Do the check with the no- prefix removed since gcc silently\n+  # accepts any -Wno-* option on purpose\n+  case $real_option in\n+    -Wno-*) option=-W`expr $real_option : '-Wno-\\(.*\\)'` ;;\n+    *) option=$real_option ;;\n+  esac\n   as_acx_Woption=`$as_echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n \n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports $option\" >&5\n@@ -3282,20 +3288,22 @@ eval ac_res=\\$$as_acx_Woption\n \t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n $as_echo \"$ac_res\" >&6; }\n   if test `eval 'as_val=${'$as_acx_Woption'};$as_echo \"$as_val\"'` = yes; then :\n-  WARN_CFLAGS=\"$WARN_CFLAGS${WARN_CFLAGS:+ }$option\"\n+  WARN_CFLAGS=\"$WARN_CFLAGS${WARN_CFLAGS:+ }$real_option\"\n fi\n   done\n CFLAGS=\"$save_CFLAGS\"\n \n WARN_PEDANTIC=\n+# Do the check with the no- prefix removed from the warning options\n+# since gcc silently accepts any -Wno-* option on purpose\n if test \"$GCC\" = yes; then :\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -pedantic -Wno-long-long\" >&5\n-$as_echo_n \"checking whether $CC supports -pedantic -Wno-long-long... \" >&6; }\n-if test \"${acx_cv_prog_cc_pedantic__Wno_long_long+set}\" = set; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -pedantic -Wlong-long\" >&5\n+$as_echo_n \"checking whether $CC supports -pedantic -Wlong-long... \" >&6; }\n+if test \"${acx_cv_prog_cc_pedantic__Wlong_long+set}\" = set; then :\n   $as_echo_n \"(cached) \" >&6\n else\n   save_CFLAGS=\"$CFLAGS\"\n-CFLAGS=\"-pedantic -Wno-long-long\"\n+CFLAGS=\"-pedantic -Wlong-long\"\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n@@ -3308,16 +3316,16 @@ main ()\n }\n _ACEOF\n if ac_fn_c_try_compile \"$LINENO\"; then :\n-  acx_cv_prog_cc_pedantic__Wno_long_long=yes\n+  acx_cv_prog_cc_pedantic__Wlong_long=yes\n else\n-  acx_cv_prog_cc_pedantic__Wno_long_long=no\n+  acx_cv_prog_cc_pedantic__Wlong_long=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n CFLAGS=\"$save_CFLAGS\"\n fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_prog_cc_pedantic__Wno_long_long\" >&5\n-$as_echo \"$acx_cv_prog_cc_pedantic__Wno_long_long\" >&6; }\n-if test $acx_cv_prog_cc_pedantic__Wno_long_long = yes; then :\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_prog_cc_pedantic__Wlong_long\" >&5\n+$as_echo \"$acx_cv_prog_cc_pedantic__Wlong_long\" >&6; }\n+if test $acx_cv_prog_cc_pedantic__Wlong_long = yes; then :\n   WARN_PEDANTIC=\"$WARN_PEDANTIC${WARN_PEDANTIC:+ }-pedantic -Wno-long-long\"\n fi\n "}, {"sha": "cab1f9751470f3162879bbb9514eea707e477ddb", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/095af58f2c2f45926912ab8d30195e4ca0d69462/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/095af58f2c2f45926912ab8d30195e4ca0d69462/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=095af58f2c2f45926912ab8d30195e4ca0d69462", "patch": "@@ -1,3 +1,7 @@\n+2011-12-19  Andreas Schwab  <schwab@linux-m68k.org>\n+\n+\t* configure: Regenerate.\n+\n 2011-11-07  Richard Henderson  <rth@redhat.com>\n \n \tMerged from transactional-memory."}, {"sha": "d26c8b5f5ba840edcf23828ee1c2788b4e7b6461", "filename": "libiberty/configure", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/095af58f2c2f45926912ab8d30195e4ca0d69462/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/095af58f2c2f45926912ab8d30195e4ca0d69462/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=095af58f2c2f45926912ab8d30195e4ca0d69462", "patch": "@@ -3920,8 +3920,14 @@ ac_c_preproc_warn_flag=yes\n \n ac_libiberty_warn_cflags=\n save_CFLAGS=\"$CFLAGS\"\n-for option in -W -Wall -Wwrite-strings -Wc++-compat \\\n+for real_option in -W -Wall -Wwrite-strings -Wc++-compat \\\n \t\t\t  -Wstrict-prototypes; do\n+  # Do the check with the no- prefix removed since gcc silently\n+  # accepts any -Wno-* option on purpose\n+  case $real_option in\n+    -Wno-*) option=-W`expr $real_option : '-Wno-\\(.*\\)'` ;;\n+    *) option=$real_option ;;\n+  esac\n   as_acx_Woption=`$as_echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n \n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports $option\" >&5\n@@ -3953,11 +3959,13 @@ eval ac_res=\\$$as_acx_Woption\n \t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n $as_echo \"$ac_res\" >&6; }\n   if test `eval 'as_val=${'$as_acx_Woption'};$as_echo \"$as_val\"'` = yes; then :\n-  ac_libiberty_warn_cflags=\"$ac_libiberty_warn_cflags${ac_libiberty_warn_cflags:+ }$option\"\n+  ac_libiberty_warn_cflags=\"$ac_libiberty_warn_cflags${ac_libiberty_warn_cflags:+ }$real_option\"\n fi\n   done\n CFLAGS=\"$save_CFLAGS\"\n \n+# Do the check with the no- prefix removed from the warning options\n+# since gcc silently accepts any -Wno-* option on purpose\n if test \"$GCC\" = yes; then :\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -pedantic \" >&5\n $as_echo_n \"checking whether $CC supports -pedantic ... \" >&6; }"}, {"sha": "345f2b2784ed07796489a64afd8ba046a0d4ae32", "filename": "lto-plugin/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/095af58f2c2f45926912ab8d30195e4ca0d69462/lto-plugin%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/095af58f2c2f45926912ab8d30195e4ca0d69462/lto-plugin%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FChangeLog?ref=095af58f2c2f45926912ab8d30195e4ca0d69462", "patch": "@@ -1,3 +1,7 @@\n+2011-12-19  Andreas Schwab  <schwab@linux-m68k.org>\n+\n+\t* configure: Regenerate.\n+\n 2011-11-21  Andreas Tobler  <andreast@fgznet.ch>\n \n \t* configure: Regenerate."}, {"sha": "fab5ef9a6c73a069498f03876a8ed6b3a228d173", "filename": "lto-plugin/configure", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/095af58f2c2f45926912ab8d30195e4ca0d69462/lto-plugin%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/095af58f2c2f45926912ab8d30195e4ca0d69462/lto-plugin%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Fconfigure?ref=095af58f2c2f45926912ab8d30195e4ca0d69462", "patch": "@@ -4043,7 +4043,13 @@ fi\n \n ac_lto_plugin_warn_cflags=\n save_CFLAGS=\"$CFLAGS\"\n-for option in -Wall; do\n+for real_option in -Wall; do\n+  # Do the check with the no- prefix removed since gcc silently\n+  # accepts any -Wno-* option on purpose\n+  case $real_option in\n+    -Wno-*) option=-W`expr $real_option : '-Wno-\\(.*\\)'` ;;\n+    *) option=$real_option ;;\n+  esac\n   as_acx_Woption=`$as_echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n \n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports $option\" >&5\n@@ -4075,7 +4081,7 @@ eval ac_res=\\$$as_acx_Woption\n \t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n $as_echo \"$ac_res\" >&6; }\n   if test `eval 'as_val=${'$as_acx_Woption'};$as_echo \"$as_val\"'` = yes; then :\n-  ac_lto_plugin_warn_cflags=\"$ac_lto_plugin_warn_cflags${ac_lto_plugin_warn_cflags:+ }$option\"\n+  ac_lto_plugin_warn_cflags=\"$ac_lto_plugin_warn_cflags${ac_lto_plugin_warn_cflags:+ }$real_option\"\n fi\n   done\n CFLAGS=\"$save_CFLAGS\"\n@@ -10538,7 +10544,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10541 \"configure\"\n+#line 10547 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10644,7 +10650,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10647 \"configure\"\n+#line 10653 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}]}