{"sha": "86464cbd91790f0bb04cb382f20a60f6afbc323a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY0NjRjYmQ5MTc5MGYwYmIwNGNiMzgyZjIwYTYwZjZhZmJjMzIzYQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "Andreas.Krebbel@de.ibm.com", "date": "2014-01-10T14:59:41Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2014-01-10T14:59:41Z"}, "message": "s390.c (s390_expand_tbegin): Remove jump over CC extraction in good case.\n\n2014-01-10  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\t* config/s390/s390.c (s390_expand_tbegin): Remove jump over CC\n\textraction in good case.\n\nFrom-SVN: r206527", "tree": {"sha": "2f0429545b9283ae756fb246e1d7e1929bd3105f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f0429545b9283ae756fb246e1d7e1929bd3105f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86464cbd91790f0bb04cb382f20a60f6afbc323a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86464cbd91790f0bb04cb382f20a60f6afbc323a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86464cbd91790f0bb04cb382f20a60f6afbc323a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86464cbd91790f0bb04cb382f20a60f6afbc323a/comments", "author": null, "committer": null, "parents": [{"sha": "48c7451eee86af2330a590d92d8f179b0d08a23f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48c7451eee86af2330a590d92d8f179b0d08a23f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48c7451eee86af2330a590d92d8f179b0d08a23f"}], "stats": {"total": 46, "additions": 15, "deletions": 31}, "files": [{"sha": "3bf48320499c71bec05a2e308a0afdd399725d35", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86464cbd91790f0bb04cb382f20a60f6afbc323a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86464cbd91790f0bb04cb382f20a60f6afbc323a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=86464cbd91790f0bb04cb382f20a60f6afbc323a", "patch": "@@ -1,3 +1,8 @@\n+2014-01-10  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n+\n+\t* config/s390/s390.c (s390_expand_tbegin): Remove jump over CC\n+\textraction in good case.\n+\n 2014-01-10  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/59374"}, {"sha": "eeccaedfb08cc27ab60156895bc375a70fd7e61e", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 10, "deletions": 31, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86464cbd91790f0bb04cb382f20a60f6afbc323a/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86464cbd91790f0bb04cb382f20a60f6afbc323a/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=86464cbd91790f0bb04cb382f20a60f6afbc323a", "patch": "@@ -10005,16 +10005,9 @@ s390_gimplify_va_arg (tree valist, tree type, gimple_seq *pre_p,\n void\n s390_expand_tbegin (rtx dest, rtx tdb, rtx retry, bool clobber_fprs_p)\n {\n-  const int CC0 = 1 << 3;\n-  const int CC1 = 1 << 2;\n-  const int CC3 = 1 << 0;\n-  rtx abort_label = gen_label_rtx ();\n-  rtx leave_label = gen_label_rtx ();\n   rtx retry_plus_two = gen_reg_rtx (SImode);\n   rtx retry_reg = gen_reg_rtx (SImode);\n   rtx retry_label = NULL_RTX;\n-  rtx jump;\n-  int very_unlikely = REG_BR_PROB_BASE / 100 - 1;\n \n   if (retry != NULL_RTX)\n     {\n@@ -10031,38 +10024,25 @@ s390_expand_tbegin (rtx dest, rtx tdb, rtx retry, bool clobber_fprs_p)\n     emit_insn (gen_tbegin_nofloat_1 (gen_rtx_CONST_INT (VOIDmode, TBEGIN_MASK),\n \t\t\t\t     tdb));\n \n-  jump = s390_emit_jump (abort_label,\n-\t\t\t gen_rtx_NE (VOIDmode,\n-\t\t\t\t     gen_rtx_REG (CCRAWmode, CC_REGNUM),\n-\t\t\t\t     gen_rtx_CONST_INT (VOIDmode, CC0)));\n-\n-  JUMP_LABEL (jump) = abort_label;\n-  LABEL_NUSES (abort_label) = 1;\n-  add_int_reg_note (jump, REG_BR_PROB, very_unlikely);\n-\n-  /* Initialize CC return value.  */\n-  emit_move_insn (dest, const0_rtx);\n-\n-  s390_emit_jump (leave_label, NULL_RTX);\n-  LABEL_NUSES (leave_label) = 1;\n-  emit_barrier ();\n-\n-  /* Abort handler code.  */\n-\n-  emit_label (abort_label);\n   emit_move_insn (dest, gen_rtx_UNSPEC (SImode,\n \t\t\t\t\tgen_rtvec (1, gen_rtx_REG (CCRAWmode,\n \t\t\t\t\t\t\t\t   CC_REGNUM)),\n \t\t\t\t\tUNSPEC_CC_TO_INT));\n   if (retry != NULL_RTX)\n     {\n+      const int CC0 = 1 << 3;\n+      const int CC1 = 1 << 2;\n+      const int CC3 = 1 << 0;\n+      rtx jump;\n       rtx count = gen_reg_rtx (SImode);\n+      rtx leave_label = gen_label_rtx ();\n+\n+      /* Exit for success and permanent failures.  */\n       jump = s390_emit_jump (leave_label,\n \t\t\t     gen_rtx_EQ (VOIDmode,\n \t\t\t       gen_rtx_REG (CCRAWmode, CC_REGNUM),\n-\t\t\t       gen_rtx_CONST_INT (VOIDmode, CC1 | CC3)));\n-      LABEL_NUSES (leave_label) = 2;\n-      add_int_reg_note (jump, REG_BR_PROB, very_unlikely);\n+\t\t\t       gen_rtx_CONST_INT (VOIDmode, CC0 | CC1 | CC3)));\n+      LABEL_NUSES (leave_label) = 1;\n \n       /* CC2 - transient failure. Perform retry with ppa.  */\n       emit_move_insn (count, retry_plus_two);\n@@ -10073,9 +10053,8 @@ s390_expand_tbegin (rtx dest, rtx tdb, rtx retry, bool clobber_fprs_p)\n \t\t\t\t\t      retry_reg));\n       JUMP_LABEL (jump) = retry_label;\n       LABEL_NUSES (retry_label) = 1;\n+      emit_label (leave_label);\n     }\n-\n-  emit_label (leave_label);\n }\n \n /* Builtins.  */"}]}