{"sha": "55cd1c090ce849ebe7110c7361d5679e54da5b5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVjZDFjMDkwY2U4NDllYmU3MTEwYzczNjFkNTY3OWU1NGRhNWI1ZQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-11-20T21:51:04Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-11-20T21:51:04Z"}, "message": "(warn_if_unused_value): Handle arbitrary number of casts\nbefore a modify.\n\nFrom-SVN: r6124", "tree": {"sha": "b0674b7bb5749d5d6802f9f9a9f85ef44e382865", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0674b7bb5749d5d6802f9f9a9f85ef44e382865"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55cd1c090ce849ebe7110c7361d5679e54da5b5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55cd1c090ce849ebe7110c7361d5679e54da5b5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55cd1c090ce849ebe7110c7361d5679e54da5b5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55cd1c090ce849ebe7110c7361d5679e54da5b5e/comments", "author": null, "committer": null, "parents": [{"sha": "25f514cb80063e4667de72ef39a7736213451d8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25f514cb80063e4667de72ef39a7736213451d8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25f514cb80063e4667de72ef39a7736213451d8f"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "9795d8f387f987d286f6375916c8d5ae83c1bbd0", "filename": "gcc/stmt.c", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55cd1c090ce849ebe7110c7361d5679e54da5b5e/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55cd1c090ce849ebe7110c7361d5679e54da5b5e/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=55cd1c090ce849ebe7110c7361d5679e54da5b5e", "patch": "@@ -1709,15 +1709,19 @@ warn_if_unused_value (exp)\n       if (TREE_NO_UNUSED_WARNING (exp))\n \treturn 0;\n       /* Assignment to a cast usually results in a cast of a modify.\n-\t Don't complain about that.  */\n-      if (TREE_CODE (TREE_OPERAND (exp, 0)) == MODIFY_EXPR)\n-\treturn 0;\n-      /* Sometimes it results in a cast of a cast of a modify.\n-\t Don't complain about that.  */\n-      if ((TREE_CODE (TREE_OPERAND (exp, 0)) == CONVERT_EXPR\n-\t   || TREE_CODE (TREE_OPERAND (exp, 0)) == NOP_EXPR)\n-\t  && TREE_CODE (TREE_OPERAND (TREE_OPERAND (exp, 0), 0)) == MODIFY_EXPR)\n-\treturn 0;\n+\t Don't complain about that.  There can be an arbitrary number of\n+\t casts before the modify, so we must loop until we find the first\n+\t non-cast expression and then test to see if that is a modify.  */\n+      {\n+\ttree tem = TREE_OPERAND (exp, 0);\n+\n+\twhile (TREE_CODE (tem) == CONVERT_EXPR || TREE_CODE (tem) == NOP_EXPR)\n+\t  tem = TREE_OPERAND (tem, 0);\n+\n+\tif (TREE_CODE (tem) == MODIFY_EXPR)\n+\t  return 0;\n+      }\n+      /* ... fall through ... */\n \n     default:\n       /* Referencing a volatile value is a side effect, so don't warn.  */"}]}