{"sha": "9976a81057ee36684234cc615df137663494af0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk3NmE4MTA1N2VlMzY2ODQyMzRjYzYxNWRmMTM3NjYzNDk0YWYwZA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2017-01-26T23:37:17Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2017-01-26T23:37:17Z"}, "message": "gimple-ssa-sprintf.c (format_floating): Test HAVE_XFmode and HAVE_DFmode before using XFmode or DFmode.\n\ngcc/ChangeLog:\n\t* gimple-ssa-sprintf.c (format_floating): Test HAVE_XFmode and\n\tHAVE_DFmode before using XFmode or DFmode.\n\t(parse_directive): Avoid using the z length modifier to avoid\n\tthe ISO C++98 does not support the \u2018z\u2019 gnu_printf length modifier.\n\nFrom-SVN: r244957", "tree": {"sha": "8e0d2c29a02067bdc6152e97d5a73d3dabe65266", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e0d2c29a02067bdc6152e97d5a73d3dabe65266"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9976a81057ee36684234cc615df137663494af0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9976a81057ee36684234cc615df137663494af0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9976a81057ee36684234cc615df137663494af0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9976a81057ee36684234cc615df137663494af0d/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "31c87a433cdbec856c6ed840482ef638ac8fc565", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31c87a433cdbec856c6ed840482ef638ac8fc565", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31c87a433cdbec856c6ed840482ef638ac8fc565"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "ac9a89f7ba882bad0f2ab5a7ff7a26e0539a6877", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9976a81057ee36684234cc615df137663494af0d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9976a81057ee36684234cc615df137663494af0d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9976a81057ee36684234cc615df137663494af0d", "patch": "@@ -1,5 +1,10 @@\n 2017-01-26  Martin Sebor  <msebor@redhat.com>\n \n+\t* gimple-ssa-sprintf.c (format_floating): Test HAVE_XFmode and\n+\tHAVE_DFmode before using XFmode or DFmode.\n+\t(parse_directive): Avoid using the z length modifier to avoid\n+\tthe ISO C++98 does not support the \u2018z\u2019 gnu_printf length modifier.\n+\n \tPR middle-end/78703\n \t* gimple-ssa-sprintf.c (adjust_for_width_or_precision): Change\n \tto accept adjustment as an array."}, {"sha": "65144acebf56d5ba03bffb3b2515e3fcd0720d64", "filename": "gcc/gimple-ssa-sprintf.c", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9976a81057ee36684234cc615df137663494af0d/gcc%2Fgimple-ssa-sprintf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9976a81057ee36684234cc615df137663494af0d/gcc%2Fgimple-ssa-sprintf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-sprintf.c?ref=9976a81057ee36684234cc615df137663494af0d", "patch": "@@ -1686,11 +1686,19 @@ format_floating (const directive &dir, tree arg)\n \tprec[0] = -1;\n       if (prec[1] < 0)\n \t{\n+#ifdef HAVE_XFmode\n+\t  /* When L is specified use long double, otherwise double.  */\n \t  unsigned fmtprec\n \t    = (dir.modifier == FMT_LEN_L\n \t       ? REAL_MODE_FORMAT (XFmode)->p\n \t       : REAL_MODE_FORMAT (DFmode)->p);\n-\n+#elif defined HAVE_DFmode\n+\t  /* No long double support, use double precision for both.  */\n+\t  unsigned fmtprec = REAL_MODE_FORMAT (DFmode)->p;\n+#else\n+\t  /* No long double or double support.  */\n+\t  unsigned fmtprec = 0;\n+#endif\n \t  /* The precision of the IEEE 754 double format is 53.\n \t     The precision of all other GCC binary double formats\n \t     is 56 or less.  */\n@@ -2706,10 +2714,11 @@ parse_directive (pass_sprintf_length::call_info &info,\n \n       if (dump_file)\n \t{\n-\t  fprintf (dump_file, \"  Directive %u at offset %zu: \\\"%.*s\\\", \"\n-\t\t   \"length = %zu\\n\",\n-\t\t   dir.dirno, (size_t)(dir.beg - info.fmtstr),\n-\t\t   (int)dir.len, dir.beg, dir.len);\n+\t  fprintf (dump_file, \"  Directive %u at offset %llu: \\\"%.*s\\\", \"\n+\t\t   \"length = %llu\\n\",\n+\t\t   dir.dirno,\n+\t\t   (unsigned long long)(size_t)(dir.beg - info.fmtstr),\n+\t\t   (int)dir.len, dir.beg, (unsigned long long)dir.len);\n \t}\n \n       return len - !*str;\n@@ -3029,8 +3038,8 @@ parse_directive (pass_sprintf_length::call_info &info,\n \n   if (dump_file)\n     {\n-      fprintf (dump_file, \"  Directive %u at offset %zu: \\\"%.*s\\\"\",\n-\t       dir.dirno, (size_t)(dir.beg - info.fmtstr),\n+      fprintf (dump_file, \"  Directive %u at offset %llu: \\\"%.*s\\\"\",\n+\t       dir.dirno, (unsigned long long)(size_t)(dir.beg - info.fmtstr),\n \t       (int)dir.len, dir.beg);\n       if (star_width)\n \t{"}]}