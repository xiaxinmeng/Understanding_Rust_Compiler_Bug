{"sha": "9b6a8d0fd1ab985408a389809fdaafdc09d2d165", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI2YThkMGZkMWFiOTg1NDA4YTM4OTgwOWZkYWFmZGMwOWQyZDE2NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-06-17T13:35:42Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-06-17T13:35:42Z"}, "message": "semantics.c (handle_omp_array_sections_1): Don't ICE when processing_template_decl when checking for bitfields and unions.\n\n\t* semantics.c (handle_omp_array_sections_1): Don't ICE when\n\tprocessing_template_decl when checking for bitfields and unions.\n\tLook through REFERENCE_REF_P as base of COMPONENT_REF.\n\t(finish_omp_clauses): Look through REFERENCE_REF_P even for\n\tarray sections with COMPONENT_REF bases.\n\n\t* testsuite/libgomp.c++/target-21.C: New test.\n\nFrom-SVN: r237554", "tree": {"sha": "fa79a694cfe82656768dfc101f5b35d41f9fea27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa79a694cfe82656768dfc101f5b35d41f9fea27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b6a8d0fd1ab985408a389809fdaafdc09d2d165", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b6a8d0fd1ab985408a389809fdaafdc09d2d165", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b6a8d0fd1ab985408a389809fdaafdc09d2d165", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b6a8d0fd1ab985408a389809fdaafdc09d2d165/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6ffccb58d64ee2383365ab4e0eb949b780dd3f14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ffccb58d64ee2383365ab4e0eb949b780dd3f14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ffccb58d64ee2383365ab4e0eb949b780dd3f14"}], "stats": {"total": 195, "additions": 193, "deletions": 2}, "files": [{"sha": "8841e15bb405f045298ed749ba808551834d4436", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b6a8d0fd1ab985408a389809fdaafdc09d2d165/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b6a8d0fd1ab985408a389809fdaafdc09d2d165/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9b6a8d0fd1ab985408a389809fdaafdc09d2d165", "patch": "@@ -1,3 +1,11 @@\n+2016-06-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* semantics.c (handle_omp_array_sections_1): Don't ICE when\n+\tprocessing_template_decl when checking for bitfields and unions.\n+\tLook through REFERENCE_REF_P as base of COMPONENT_REF.\n+\t(finish_omp_clauses): Look through REFERENCE_REF_P even for\n+\tarray sections with COMPONENT_REF bases.\n+\n 2016-06-16  Jakub Jelinek  <jakub@redhat.com>\n \n \t* parser.c (cp_parser_omp_var_list_no_open): Call"}, {"sha": "fa4698e22819392741c9f8d1f2dd78ef67f11e41", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b6a8d0fd1ab985408a389809fdaafdc09d2d165/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b6a8d0fd1ab985408a389809fdaafdc09d2d165/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=9b6a8d0fd1ab985408a389809fdaafdc09d2d165", "patch": "@@ -4487,7 +4487,8 @@ handle_omp_array_sections_1 (tree c, tree t, vec<tree> &types,\n \t      || OMP_CLAUSE_CODE (c) == OMP_CLAUSE_FROM)\n \t  && !type_dependent_expression_p (t))\n \t{\n-\t  if (DECL_BIT_FIELD (TREE_OPERAND (t, 1)))\n+\t  if (TREE_CODE (TREE_OPERAND (t, 1)) == FIELD_DECL\n+\t      && DECL_BIT_FIELD (TREE_OPERAND (t, 1)))\n \t    {\n \t      error_at (OMP_CLAUSE_LOCATION (c),\n \t\t\t\"bit-field %qE in %qs clause\",\n@@ -4496,14 +4497,17 @@ handle_omp_array_sections_1 (tree c, tree t, vec<tree> &types,\n \t    }\n \t  while (TREE_CODE (t) == COMPONENT_REF)\n \t    {\n-\t      if (TREE_CODE (TREE_TYPE (TREE_OPERAND (t, 0))) == UNION_TYPE)\n+\t      if (TREE_TYPE (TREE_OPERAND (t, 0))\n+\t\t  && TREE_CODE (TREE_TYPE (TREE_OPERAND (t, 0))) == UNION_TYPE)\n \t\t{\n \t\t  error_at (OMP_CLAUSE_LOCATION (c),\n \t\t\t    \"%qE is a member of a union\", t);\n \t\t  return error_mark_node;\n \t\t}\n \t      t = TREE_OPERAND (t, 0);\n \t    }\n+\t  if (REFERENCE_REF_P (t))\n+\t    t = TREE_OPERAND (t, 0);\n \t}\n       if (!VAR_P (t) && TREE_CODE (t) != PARM_DECL)\n \t{\n@@ -6623,6 +6627,8 @@ finish_omp_clauses (tree clauses, enum c_omp_region_type ort)\n \t\t    {\n \t\t      while (TREE_CODE (t) == COMPONENT_REF)\n \t\t\tt = TREE_OPERAND (t, 0);\n+\t\t      if (REFERENCE_REF_P (t))\n+\t\t\tt = TREE_OPERAND (t, 0);\n \t\t      if (bitmap_bit_p (&map_field_head, DECL_UID (t)))\n \t\t\tbreak;\n \t\t      if (bitmap_bit_p (&map_head, DECL_UID (t)))"}, {"sha": "22049107af104700b2ecb6abd5e95613b79451da", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b6a8d0fd1ab985408a389809fdaafdc09d2d165/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b6a8d0fd1ab985408a389809fdaafdc09d2d165/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=9b6a8d0fd1ab985408a389809fdaafdc09d2d165", "patch": "@@ -1,3 +1,7 @@\n+2016-06-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* testsuite/libgomp.c++/target-21.C: New test.\n+\n 2016-06-16  Jakub Jelinek  <jakub@redhat.com>\n \n \t* testsuite/libgomp.c++/target-20.C: New test."}, {"sha": "21a2f299bbbbdc954b456f1a448213a3f86a32c9", "filename": "libgomp/testsuite/libgomp.c++/target-21.C", "status": "added", "additions": 173, "deletions": 0, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b6a8d0fd1ab985408a389809fdaafdc09d2d165/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Ftarget-21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b6a8d0fd1ab985408a389809fdaafdc09d2d165/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Ftarget-21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Ftarget-21.C?ref=9b6a8d0fd1ab985408a389809fdaafdc09d2d165", "patch": "@@ -0,0 +1,173 @@\n+extern \"C\" void abort ();\n+struct T { char t[270]; };\n+struct S { int (&x)[10]; int *&y; T t; int &z; S (); ~S (); };\n+\n+template <int N>\n+void\n+foo (S s)\n+{\n+  int err;\n+  #pragma omp target map (s.x[0:N], s.y[0:N]) map (s.t.t[16:3]) map (from: err)\n+  {\n+    err = s.x[2] != 28 || s.y[2] != 37 || s.t.t[17] != 81;\n+    s.x[2]++;\n+    s.y[2]++;\n+    s.t.t[17]++;\n+  }\n+  if (err || s.x[2] != 29 || s.y[2] != 38 || s.t.t[17] != 82)\n+    abort ();\n+}\n+\n+template <int N>\n+void\n+bar (S s)\n+{\n+  int err;\n+  #pragma omp target map (s.x, s.z)map(from:err)\n+  {\n+    err = s.x[2] != 29 || s.z != 6;\n+    s.x[2]++;\n+    s.z++;\n+  }\n+  if (err || s.x[2] != 30 || s.z != 7)\n+    abort ();\n+}\n+\n+template <int N>\n+void\n+foo2 (S &s)\n+{\n+  int err;\n+  #pragma omp target map (s.x[N:10], s.y[N:10]) map (from: err) map (s.t.t[N+16:N+3])\n+  {\n+    err = s.x[2] != 30 || s.y[2] != 38 || s.t.t[17] != 81;\n+    s.x[2]++;\n+    s.y[2]++;\n+    s.t.t[17]++;\n+  }\n+  if (err || s.x[2] != 31 || s.y[2] != 39 || s.t.t[17] != 82)\n+    abort ();\n+}\n+\n+template <int N>\n+void\n+bar2 (S &s)\n+{\n+  int err;\n+  #pragma omp target map (s.x, s.z)map(from:err)\n+  {\n+    err = s.x[2] != 31 || s.z != 7;\n+    s.x[2]++;\n+    s.z++;\n+  }\n+  if (err || s.x[2] != 32 || s.z != 8)\n+    abort ();\n+}\n+\n+template <typename U>\n+void\n+foo3 (U s)\n+{\n+  int err;\n+  #pragma omp target map (s.x[0:10], s.y[0:10]) map (from: err) map (s.t.t[16:3])\n+  {\n+    err = s.x[2] != 32 || s.y[2] != 39 || s.t.t[17] != 82;\n+    s.x[2]++;\n+    s.y[2]++;\n+    s.t.t[17]++;\n+  }\n+  if (err || s.x[2] != 33 || s.y[2] != 40 || s.t.t[17] != 83)\n+    abort ();\n+}\n+\n+template <typename U>\n+void\n+bar3 (U s)\n+{\n+  int err;\n+  #pragma omp target map (s.x, s.z)map(from:err)\n+  {\n+    err = s.x[2] != 33 || s.z != 8;\n+    s.x[2]++;\n+    s.z++;\n+  }\n+  if (err || s.x[2] != 34 || s.z != 9)\n+    abort ();\n+}\n+\n+template <typename U>\n+void\n+foo4 (U &s)\n+{\n+  int err;\n+  #pragma omp target map (s.x[0:10], s.y[0:10]) map (from: err) map (s.t.t[16:3])\n+  {\n+    err = s.x[2] != 34 || s.y[2] != 40 || s.t.t[17] != 82;\n+    s.x[2]++;\n+    s.y[2]++;\n+    s.t.t[17]++;\n+  }\n+  if (err || s.x[2] != 35 || s.y[2] != 41 || s.t.t[17] != 83)\n+    abort ();\n+}\n+\n+template <typename U>\n+void\n+bar4 (U &s)\n+{\n+  int err;\n+  #pragma omp target map (s.x, s.z)map(from:err)\n+  {\n+    err = s.x[2] != 35 || s.z != 9;\n+    s.x[2]++;\n+    s.z++;\n+  }\n+  if (err || s.x[2] != 36 || s.z != 10)\n+    abort ();\n+}\n+\n+int xt[10] = { 1, 2, 28, 3, 4, 5, 6, 7, 8, 9 };\n+int yt[10] = { 1, 2, 37, 3, 4, 5, 6, 7, 8, 9 };\n+int *yp = yt;\n+int zt = 6;\n+\n+S::S () : x (xt), y (yp), z (zt)\n+{\n+}\n+\n+S::~S ()\n+{\n+}\n+\n+int\n+main ()\n+{\n+  S s;\n+  s.t.t[16] = 5;\n+  s.t.t[17] = 81;\n+  s.t.t[18] = 9;\n+  foo <10> (s);\n+  if (s.t.t[17] != 81)\n+    abort ();\n+  bar <7> (s);\n+  foo2 <0> (s);\n+  if (s.t.t[17] != 82)\n+    abort ();\n+  bar2 <21> (s);\n+  foo3 <S> (s);\n+  if (s.t.t[17] != 82)\n+    abort ();\n+  bar3 <S> (s);\n+  foo4 <S> (s);\n+  if (s.t.t[17] != 83)\n+    abort ();\n+  bar4 <S> (s);\n+  s.x[2] -= 4;\n+  s.y[2] -= 2;\n+  s.z -= 2;\n+  s.t.t[17]--;\n+  foo3 <S &> (s);\n+  if (s.t.t[17] != 83)\n+    abort ();\n+  bar3 <S &> (s);\n+}"}]}