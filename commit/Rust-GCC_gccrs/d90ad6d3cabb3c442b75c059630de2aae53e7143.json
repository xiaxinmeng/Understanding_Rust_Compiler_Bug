{"sha": "d90ad6d3cabb3c442b75c059630de2aae53e7143", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDkwYWQ2ZDNjYWJiM2M0NDJiNzVjMDU5NjMwZGUyYWFlNTNlNzE0Mw==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2002-09-12T17:29:26Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2002-09-12T17:29:26Z"}, "message": "Added long comments on why nil_method takes the arguments it takes and how\nit's going to be used\n\nFrom-SVN: r57073", "tree": {"sha": "188b652b63332853d53fee120afc285cc8a5ca74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/188b652b63332853d53fee120afc285cc8a5ca74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d90ad6d3cabb3c442b75c059630de2aae53e7143", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d90ad6d3cabb3c442b75c059630de2aae53e7143", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d90ad6d3cabb3c442b75c059630de2aae53e7143", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d90ad6d3cabb3c442b75c059630de2aae53e7143/comments", "author": null, "committer": null, "parents": [{"sha": "4c341bf5b799022ea0ce144a314ff756657497c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c341bf5b799022ea0ce144a314ff756657497c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c341bf5b799022ea0ce144a314ff756657497c9"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "5e37c4d5dfb432ea923908067c4044a6184f53b7", "filename": "libobjc/nil_method.c", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90ad6d3cabb3c442b75c059630de2aae53e7143/libobjc%2Fnil_method.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90ad6d3cabb3c442b75c059630de2aae53e7143/libobjc%2Fnil_method.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fnil_method.c?ref=d90ad6d3cabb3c442b75c059630de2aae53e7143", "patch": "@@ -29,10 +29,25 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"runtime.h\"\n \n-/* nil_method is declared with variable arguments but the runtime calls it\n-   in a way that does not setup the variable arguments correctly.  Some Architectures\n-   that have special arg calling conventions like x86-64 do need every function with\n-   variable arguments called the correct way.  */\n+/* When the receiver of a method invocation is nil, the runtime\n+   returns nil_method() as the method implementation.  This function\n+   will be casted to whatever function was supposed to be executed to\n+   execute that method (that function will take an id, followed by a\n+   SEL, followed by who knows what arguments, depends on the method),\n+   and executed.\n+   \n+   For this reason, nil_method() should be a function which can be\n+   called in place of any function taking an 'id' argument followed by\n+   a 'SEL' argument, followed by zero, or one, or any number of\n+   arguments (both a fixed number, or a variable number !).\n+   \n+   There is no \"proper\" implementation of such a nil_method function\n+   in C, however in all existing implementations it does not matter\n+   when extra arguments are present, so we can simply create a function\n+   taking a receiver and a selector, and all other arguments will be\n+   ignored. :-)\n+*/\n+\n id\n nil_method (id receiver, SEL op __attribute__ ((__unused__)))\n {"}]}