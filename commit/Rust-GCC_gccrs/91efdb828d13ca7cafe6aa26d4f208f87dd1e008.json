{"sha": "91efdb828d13ca7cafe6aa26d4f208f87dd1e008", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFlZmRiODI4ZDEzY2E3Y2FmZTZhYTI2ZDRmMjA4Zjg3ZGQxZTAwOA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-07-15T10:14:40Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-07-15T10:14:40Z"}, "message": "re PR libstdc++/36832 (error compiling with crope)\n\n2008-07-15  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/36832\n\t* include/ext/rope (_Destroy_const): Add.\n\t(rope<>::copy): Call it.\n\t* testsuite/ext/rope/36832.cc: New.\n\nFrom-SVN: r137829", "tree": {"sha": "591a0aea7fea486cc6545fc0ddd2554e4416e909", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/591a0aea7fea486cc6545fc0ddd2554e4416e909"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91efdb828d13ca7cafe6aa26d4f208f87dd1e008", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91efdb828d13ca7cafe6aa26d4f208f87dd1e008", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91efdb828d13ca7cafe6aa26d4f208f87dd1e008", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91efdb828d13ca7cafe6aa26d4f208f87dd1e008/comments", "author": null, "committer": null, "parents": [{"sha": "cbcd1e4520ba6e1dbf3b9c44d54a5228846da5c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbcd1e4520ba6e1dbf3b9c44d54a5228846da5c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbcd1e4520ba6e1dbf3b9c44d54a5228846da5c0"}], "stats": {"total": 69, "additions": 64, "deletions": 5}, "files": [{"sha": "e78c7d67f64a662d5f0a49114295ee5e1542c28c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91efdb828d13ca7cafe6aa26d4f208f87dd1e008/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91efdb828d13ca7cafe6aa26d4f208f87dd1e008/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=91efdb828d13ca7cafe6aa26d4f208f87dd1e008", "patch": "@@ -1,3 +1,10 @@\n+2008-07-15  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/36832\n+\t* include/ext/rope (_Destroy_const): Add.\n+\t(rope<>::copy): Call it.\n+\t* testsuite/ext/rope/36832.cc: New.\n+\n 2008-07-15  Johannes Singler  <singler@ira.uka.de>\n \n         * include/parallel/find_selectors.h:"}, {"sha": "b85f98e3be402d07400e0cf3f4b83a02f46f665d", "filename": "libstdc++-v3/include/ext/rope", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91efdb828d13ca7cafe6aa26d4f208f87dd1e008/libstdc%2B%2B-v3%2Finclude%2Fext%2Frope", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91efdb828d13ca7cafe6aa26d4f208f87dd1e008/libstdc%2B%2B-v3%2Finclude%2Fext%2Frope", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Frope?ref=91efdb828d13ca7cafe6aa26d4f208f87dd1e008", "patch": "@@ -1,6 +1,6 @@\n // SGI's rope class -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -80,6 +80,22 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n   using std::allocator;\n   using std::_Destroy;\n \n+  // See libstdc++/36832.\n+  template<typename _ForwardIterator, typename _Allocator>\n+    void\n+    _Destroy_const(_ForwardIterator __first,\n+\t\t   _ForwardIterator __last, _Allocator __alloc)\n+    {\n+      for (; __first != __last; ++__first)\n+\t__alloc.destroy(&*__first);\n+    }\n+\n+  template<typename _ForwardIterator, typename _Tp>\n+    inline void\n+    _Destroy_const(_ForwardIterator __first,\n+\t\t   _ForwardIterator __last, allocator<_Tp>)\n+    { _Destroy(__first, __last); }\n+\n   // The _S_eos function is used for those functions that\n   // convert to/from C-like strings to detect the end of the string.\n   \n@@ -1941,11 +1957,11 @@ protected:\n \tthis->_M_tree_ptr = _S_balance(this->_M_tree_ptr);\n \t_S_unref(__old);\n       }\n-      \n+\n       void\n       copy(_CharT* __buffer) const\n       {\n-\t_Destroy(__buffer, __buffer + size(), _M_get_allocator());\n+\t_Destroy_const(__buffer, __buffer + size(), _M_get_allocator());\n \t_S_flatten(this->_M_tree_ptr, __buffer);\n       }\n \n@@ -1959,8 +1975,8 @@ protected:\n       {\n \tsize_t __size = size();\n \tsize_t __len = (__pos + __n > __size? __size - __pos : __n);\n-\t\n-\t_Destroy(__buffer, __buffer + __len, _M_get_allocator());\n+\n+\t_Destroy_const(__buffer, __buffer + __len, _M_get_allocator());\n \t_S_flatten(this->_M_tree_ptr, __pos, __len, __buffer);\n \treturn __len;\n       }"}, {"sha": "93acfa122bfa7d63f2d0cbe3ff05446baadbe4b0", "filename": "libstdc++-v3/testsuite/ext/rope/36832.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91efdb828d13ca7cafe6aa26d4f208f87dd1e008/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frope%2F36832.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91efdb828d13ca7cafe6aa26d4f208f87dd1e008/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frope%2F36832.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Frope%2F36832.cc?ref=91efdb828d13ca7cafe6aa26d4f208f87dd1e008", "patch": "@@ -0,0 +1,36 @@\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// rope (SGI extension)\n+\n+#include <ext/rope>\n+\n+// libstdc++/36832\n+void test01()\n+{\n+ __gnu_cxx::crope myRope;\n+ myRope = \"1234567890\";\n+ char buffer[100]; \n+ myRope.copy(1, 1, buffer);\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}