{"sha": "59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTlmM2RkMGExNGZhNGQ0Y2U3ZWUxNDIwNjhjZjljNWUzNzZlZmMyNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-09T12:57:47Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-09T12:57:47Z"}, "message": "[multiple changes]\n\n2009-04-09  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch5.adb: Minor reformatting\n\n2009-04-09  Vincent Celier  <celier@adacore.com>\n\n\t* vms_data.ads:\n\tChange GNAT CHECK qualifier /DIAGNOSIS_LIMIT to /DIAGNOSTIC_LIMIT\n\tNew qualifier /LEXPAND_SOURCE=nnn for -gnatGnnn\n\tNew qualifier /LXDEBUG=nnn for -gnatDnnn\n\tFor H820-010\n\n\t* gnat_ugn.texi:\n\tUpdate documentation for VMS qualifiers equivalent to -gnatGnn and\n\t-gnatDnn\n\n2009-04-09  Nicolas Setton  <setton@adacore.com>\n\n\t* s-osinte-darwin.ads: (Pad_Type): Make this an array of unsigned_long,\n\tto match layout of siginfo_t in sys/signal.h.\n\n\t* gcc-interface/Makefile.in: Add section for x86_64 darwin.\n\n2009-04-09  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-socket.ads: (Fd_Set): Use Interfaces.C.long alignment.\n\n2009-04-09  Nicolas Setton  <setton@adacore.com>\n\n\t* s-oscons-tmplt.c: Allow long lines in the generated spec.\n\tAdd generation of Darwin-specific constants needed when binding to the\n\tpthread library.\n\nFrom-SVN: r145837", "tree": {"sha": "e817317357d86a40016656e79c3caae9cafafce4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e817317357d86a40016656e79c3caae9cafafce4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27/comments", "author": null, "committer": null, "parents": [{"sha": "8dc2ddaf050c1bf8da0462ae550156089bbe4d5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dc2ddaf050c1bf8da0462ae550156089bbe4d5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dc2ddaf050c1bf8da0462ae550156089bbe4d5b"}], "stats": {"total": 196, "additions": 171, "deletions": 25}, "files": [{"sha": "191ef1a554673e9c1d7667deece1e5088ab5b9b5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27", "patch": "@@ -1,3 +1,50 @@\n+2009-04-09  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch5.adb: Minor reformatting\n+\n+2009-04-09  Vincent Celier  <celier@adacore.com>\n+\n+\t* vms_data.ads:\n+\tChange GNAT CHECK qualifier /DIAGNOSIS_LIMIT to /DIAGNOSTIC_LIMIT\n+\tNew qualifier /LEXPAND_SOURCE=nnn for -gnatGnnn\n+\tNew qualifier /LXDEBUG=nnn for -gnatDnnn\n+\tFor H820-010\n+\n+\t* gnat_ugn.texi:\n+\tUpdate documentation for VMS qualifiers equivalent to -gnatGnn and\n+\t-gnatDnn\n+\n+2009-04-09  Nicolas Setton  <setton@adacore.com>\n+\n+\t* s-osinte-darwin.ads: (Pad_Type): Make this an array of unsigned_long,\n+\tto match layout of siginfo_t in sys/signal.h.\n+\n+\t* gcc-interface/Makefile.in: Add section for x86_64 darwin.\n+\n+2009-04-09  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-socket.ads: (Fd_Set): Use Interfaces.C.long alignment.\n+\n+2009-04-09  Nicolas Setton  <setton@adacore.com>\n+\n+\t* s-oscons-tmplt.c: Allow long lines in the generated spec.\n+\tAdd generation of Darwin-specific constants needed when binding to the\n+\tpthread library.\n+\n+2009-04-09  Robert Dewar  <dewar@adacore.com>\n+\n+        * checks.adb:\n+        (Insert_Valid_Check): Avoid unnecessary generation of junk declaration\n+        when no invalid values exist, Avoid duplicate read of atomic variable.\n+\n+        * cstand.adb (Build_Signed_Integer_Type): Set Is_Known_Valid\n+        (Standard_Unsigned): Set Is_Known_Valid\n+\n+        * sem_ch3.adb (Analyze_Subtype_Declaration): Copy Is_Known_Valid on\n+\tsubtype declaration if no constraint.\n+        (Set_Modular_Size): Set Is_Known_Valid if appropriate\n+        (Build_Derived_Numeric_Type): Copy Is_Known_Valid if no constraint\n+\n 2009-04-09  Robert Dewar  <dewar@adacore.com>\n \n \t* switch-c.adb, gnat_ugn.texi, vms_data.ads, switch.adb,"}, {"sha": "eab3c301c9ecb0d98d451cbf4ad28fb218c6d368", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27", "patch": "@@ -1095,7 +1095,7 @@ private\n \n    type Fd_Set is\n      new System.Storage_Elements.Storage_Array (1 .. SOSC.SIZEOF_fd_set);\n-   for Fd_Set'Alignment use Interfaces.C.int'Alignment;\n+   for Fd_Set'Alignment use Interfaces.C.long'Alignment;\n \n    type Fd_Set_Access is access all Fd_Set;\n    pragma Convention (C, Fd_Set_Access);"}, {"sha": "8d0d92c57070570f961b80c59481dc58b88b6cc3", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27", "patch": "@@ -1729,7 +1729,25 @@ ifeq ($(strip $(filter-out darwin%,$(osys))),)\n       LIBGNAT_TARGET_PAIRS += \\\n       system.ads<system-darwin-x86.ads\n     endif\n-  else\n+  endif\n+\n+  ifeq ($(strip $(filter-out %x86_64,$(arch))),)\n+    LIBGNAT_TARGET_PAIRS = \\\n+    a-intnam.ads<a-intnam-darwin.ads \\\n+    s-inmaop.adb<s-inmaop-posix.adb \\\n+    s-intman.adb<s-intman-posix.adb \\\n+    s-osinte.adb<s-osinte-darwin.adb \\\n+    s-osinte.ads<s-osinte-darwin.ads \\\n+    s-osprim.adb<s-osprim-posix.adb \\\n+    s-taprop.adb<s-taprop-posix.adb \\\n+    s-taspri.ads<s-taspri-posix.ads \\\n+    s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n+    a-numaux.ads<a-numaux-x86.ads \\\n+    a-numaux.adb<a-numaux-x86.adb \\\n+    system.ads<system-darwin-x86_64.ads\n+  endif\n+\n+  ifeq ($(strip $(filter-out powerpc%,$(arch))),)\n     LIBGNAT_TARGET_PAIRS = \\\n     a-intnam.ads<a-intnam-darwin.ads \\\n     s-inmaop.adb<s-inmaop-posix.adb \\"}, {"sha": "f21095365dbd4d23c0d5db4a2c88f2776d868be7", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27", "patch": "@@ -3882,8 +3882,13 @@ debug options. Certain debug options are relevant to applications\n programmers, and these are documented at appropriate points in this\n users guide.\n \n+@ifclear vms\n @item -gnatD\n @cindex @option{-gnatD[nn]} (@command{gcc})\n+@end ifclear\n+@ifset vms\n+@item /XDEBUG /LXDEBUG=nnn\n+@end ifset\n Create expanded source files for source level debugging. This switch\n also suppress generation of cross-reference information\n (see @option{-gnatx}).\n@@ -3949,8 +3954,13 @@ Note that @option{^-gnatg^/GNAT_INTERNAL^} implies\n so that all standard warnings and all standard style options are turned on.\n All warnings and style error messages are treated as errors.\n \n+@ifclear vms\n @item -gnatG=nn\n @cindex @option{-gnatG[nn]} (@command{gcc})\n+@end ifclear\n+@ifset vms\n+@item /EXPAND_SOURCE, /LEXPAND_SOURCE=nnn\n+@end ifset\n List generated expanded code in source form.\n \n @item ^-gnath^/HELP^\n@@ -20362,8 +20372,8 @@ a generic instantiation a full source location is a chain from the location\n of this construct in the generic unit to the place where this unit is\n instantiated.\n \n-@cindex @option{^-m^/DIAGNOSIS_LIMIT^} (@command{gnatcheck})\n-@item ^-m@i{nnn}^/DIAGNOSIS_LIMIT=@i{nnn}^\n+@cindex @option{^-m^/DIAGNOSTIC_LIMIT^} (@command{gnatcheck})\n+@item ^-m@i{nnn}^/DIAGNOSTIC_LIMIT=@i{nnn}^\n Maximum number of diagnoses to be sent to Stdout, @i{nnn} from o@dots{}1000,\n the default value is 500. Zero means that there is no limitation on\n the number of diagnostic messages to be printed into Stdout."}, {"sha": "625f1e01cec2efda5e4116031cbddf7f341972a4", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27", "patch": "@@ -32,6 +32,9 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+pragma Style_Checks (\"M32766\");\n+--  Allow long lines\n+\n */\n \n /**\n@@ -102,6 +105,10 @@\n # include <termios.h>\n #endif\n \n+#ifdef __APPLE__\n+# include <_types.h>\n+#endif\n+\n #ifdef NATIVE\n #include <stdio.h>\n #define CND(name,comment) \\\n@@ -1205,6 +1212,46 @@ CND(WSAEDISCON,         \"Disconnected\")\n    putchar ('\\n');\n #endif\n \n+#ifdef __APPLE__\n+/*\n+\n+   -------------------------------\n+   -- Darwin-specific constants --\n+   -------------------------------\n+\n+   --  These constants may be used only within the Darwin version of the GNAT\n+   --  runtime library.\n+*/\n+\n+#define PTHREAD_SIZE __PTHREAD_SIZE__\n+CND(PTHREAD_SIZE, \"Pad in pthread_t\")\n+\n+#define PTHREAD_ATTR_SIZE __PTHREAD_ATTR_SIZE__\n+CND(PTHREAD_ATTR_SIZE, \"Pad in pthread_attr_t\")\n+\n+#define PTHREAD_MUTEXATTR_SIZE __PTHREAD_MUTEXATTR_SIZE__\n+CND(PTHREAD_MUTEXATTR_SIZE, \"Pad in pthread_mutexattr_t\")\n+\n+#define PTHREAD_MUTEX_SIZE __PTHREAD_MUTEX_SIZE__\n+CND(PTHREAD_MUTEX_SIZE, \"Pad in pthread_mutex_t\")\n+\n+#define PTHREAD_CONDATTR_SIZE __PTHREAD_CONDATTR_SIZE__\n+CND(PTHREAD_CONDATTR_SIZE, \"Pad in pthread_condattr_t\")\n+\n+#define PTHREAD_COND_SIZE __PTHREAD_COND_SIZE__\n+CND(PTHREAD_COND_SIZE, \"Pad in pthread_cond_t\")\n+\n+#define PTHREAD_RWLOCKATTR_SIZE __PTHREAD_RWLOCKATTR_SIZE__\n+CND(PTHREAD_RWLOCKATTR_SIZE, \"Pad in pthread_rwlockattr_t\")\n+\n+#define PTHREAD_RWLOCK_SIZE __PTHREAD_RWLOCK_SIZE__\n+CND(PTHREAD_RWLOCK_SIZE, \"Pad in pthread_rwlock_t\")\n+\n+#define PTHREAD_ONCE_SIZE __PTHREAD_ONCE_SIZE__\n+CND(PTHREAD_ONCE_SIZE, \"Pad in pthread_once_t\")\n+\n+#endif\n+\n /*\n \n end System.OS_Constants;"}, {"sha": "2a3b9282b52a360cd9cd3925f719a6bd6fa17c38", "filename": "gcc/ada/s-osinte-darwin.ads", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27/gcc%2Fada%2Fs-osinte-darwin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27/gcc%2Fada%2Fs-osinte-darwin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-darwin.ads?ref=59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27", "patch": "@@ -41,6 +41,7 @@\n --  Elaborate_Body. It is designed to be a bottom-level (leaf) package.\n \n with Interfaces.C;\n+with System.OS_Constants;\n \n package System.OS_Interface is\n    pragma Preelaborate;\n@@ -532,7 +533,7 @@ private\n    --\n    --  Darwin specific signal implementation\n    --\n-   type Pad_Type is array (1 .. 7) of unsigned;\n+   type Pad_Type is array (1 .. 7) of unsigned_long;\n    type siginfo_t is record\n       si_signo  : int;               --  signal number\n       si_errno  : int;               --  errno association\n@@ -568,37 +569,37 @@ private\n \n    type pthread_attr_t is record\n       sig    : long;\n-      opaque : padding (1 .. 36);\n+      opaque : padding (1 .. System.OS_Constants.PTHREAD_ATTR_SIZE);\n    end record;\n    pragma Convention (C, pthread_attr_t);\n \n    type pthread_mutexattr_t is record\n       sig    : long;\n-      opaque : padding (1 .. 8);\n+      opaque : padding (1 .. System.OS_Constants.PTHREAD_MUTEXATTR_SIZE);\n    end record;\n    pragma Convention (C, pthread_mutexattr_t);\n \n    type pthread_mutex_t is record\n       sig    : long;\n-      opaque : padding (1 .. 40);\n+      opaque : padding (1 .. System.OS_Constants.PTHREAD_MUTEX_SIZE);\n    end record;\n    pragma Convention (C, pthread_mutex_t);\n \n    type pthread_condattr_t is record\n       sig    : long;\n-      opaque : padding (1 .. 4);\n+      opaque : padding (1 .. System.OS_Constants.PTHREAD_CONDATTR_SIZE);\n    end record;\n    pragma Convention (C, pthread_condattr_t);\n \n    type pthread_cond_t is record\n       sig    : long;\n-      opaque : padding (1 .. 24);\n+      opaque : padding (1 .. System.OS_Constants.PTHREAD_COND_SIZE);\n    end record;\n    pragma Convention (C, pthread_cond_t);\n \n    type pthread_once_t is record\n       sig    : long;\n-      opaque : padding (1 .. 4);\n+      opaque : padding (1 .. System.OS_Constants.PTHREAD_ONCE_SIZE);\n    end record;\n    pragma Convention (C, pthread_once_t);\n "}, {"sha": "6a387d6fc31e9459af78b8cb07521ee41ca0e4aa", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27", "patch": "@@ -88,8 +88,8 @@ package body Sem_Ch5 is\n       Decl : Node_Id;\n \n       procedure Diagnose_Non_Variable_Lhs (N : Node_Id);\n-      --  N is the node for the left hand side of an assignment, and it\n-      --  is not a variable. This routine issues an appropriate diagnostic.\n+      --  N is the node for the left hand side of an assignment, and it is not\n+      --  a variable. This routine issues an appropriate diagnostic.\n \n       procedure Kill_Lhs;\n       --  This is called to kill current value settings of a simple variable"}, {"sha": "ada55a30a0b5565d7b943c60bfb0d66a56cdc393", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 35, "deletions": 12, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=59f3dd0a14fa4d4ce7ee142068cf9c5e376efc27", "patch": "@@ -774,16 +774,16 @@ package VMS_Data is\n    --\n    --   Use full source locations references in the report file.\n \n-   S_Diagnosis   : aliased constant S := \"/DIAGNOSIS_LIMIT=#\"              &\n+   S_Diagnosis   : aliased constant S := \"/DIAGNOSTIC_LIMIT=#\"             &\n                                             \"-m#\";\n-   --        /DIAGNOSIS_LIMIT=500 (D)\n-   --        /ERROR_LIMIT=nnn\n+   --        /DIAGNOSTIC_LIMIT=500 (D)\n+   --        /DIAGNOSTIC_LIMIT=nnn\n    --\n    --   NNN is a decimal integer in the range of 1 to 1000 and limits the\n    --   number of diagnostic messages to be generated into Stdout to that\n    --   number.  Once that number has been reached, gnatcheck stops\n    --   to print out diagnoses into Stderr. If NNN is equal to 0, this means\n-   --  that there is no limit on the number of diagnoses in Stdout\n+   --   that there is no limit on the number of diagnoses in Stdout.\n \n    S_Check_Mess    : aliased constant S := \"/MESSAGES_PROJECT_FILE=\"       &\n                                              \"DEFAULT \"                    &\n@@ -1484,15 +1484,23 @@ package VMS_Data is\n                                             \"-gnatm999999\";\n    --  NODOC (see /ERROR_LIMIT)\n \n-   S_GCC_Expand  : aliased constant S := \"/EXPAND_SOURCE=#\"                 &\n+   S_GCC_Expand  : aliased constant S := \"/EXPAND_SOURCE \"                 &\n                                             \"-gnatG\";\n-   --        /NOEXPAND_SOURCE[=nnn] (D)\n+   --        /NOEXPAND_SOURCE (D)\n    --        /EXPAND_SOURCE\n    --\n    --   Produces a listing of the expanded code in Ada source form. For\n    --   example, all tasking constructs are reduced to appropriate run-time\n+   --   library calls. The maximum line length for the listing 72.\n+\n+   S_GCC_Lexpand : aliased constant S := \"/LEXPAND_SOURCE=#\"               &\n+                                            \"-gnatG#\";\n+   --        /LEXPAND_SOURCE=nnn\n+   --\n+   --   Produces a listing of the expanded code in Ada source form. For\n+   --   example, all tasking constructs are reduced to appropriate run-time\n    --   library calls. The parameter is the maximum line length for the\n-   --   listing (default is 72).\n+   --   listing.\n \n    S_GCC_Extend  : aliased constant S := \"/EXTENSIONS_ALLOWED \"            &\n                                             \"-gnatX\";\n@@ -3330,9 +3338,9 @@ package VMS_Data is\n                                              \"-gnatWn\";\n    --  NODOC (see /WIDE_CHARACTER_ENCODING)\n \n-   S_GCC_Xdebug  : aliased constant S := \"/XDEBUG=#\"                        &\n-                                             \"-gnatD\";\n-   --        /NOXDEBUG[=nnn] (D)\n+   S_GCC_Xdebug  : aliased constant S := \"/XDEBUG \"                        &\n+                                            \"-gnatD\";\n+   --        /NOXDEBUG (D)\n    --        /XDEBUG\n    --\n    --   Output expanded source files for source level debugging.\n@@ -3342,8 +3350,21 @@ package VMS_Data is\n    --   refer to the generated file. This allows source level debugging using\n    --   the generated code which is sometimes useful for complex code, for\n    --   example to find out exactly which part of a complex construction\n-   --   raised an exception. The parameter if present is the maximum line\n-   --   length for the output (default 72).\n+   --   raised an exception. The maximum line length for the output is 72.\n+\n+   S_GCC_Lxdebug : aliased constant S := \"/LXDEBUG=#\"                      &\n+                                            \"-gnatD=#\";\n+   --        /LXDEBUG=nnn\n+   --\n+   --   Output expanded source files for source level debugging.\n+   --   The expanded source (see /EXPAND_SOURCE) is written to files\n+   --   with names formed by appending \"_DG\" to the input file name,\n+   --   The debugging information generated by the /DEBUG qualifier will then\n+   --   refer to the generated file. This allows source level debugging using\n+   --   the generated code which is sometimes useful for complex code, for\n+   --   example to find out exactly which part of a complex construction\n+   --   raised an exception. The parameter is the maximum line length for\n+   --   the output.\n \n    S_GCC_Xref    : aliased constant S := \"/XREF=\"                          &\n                                             \"GENERATE \"                    &\n@@ -3383,6 +3404,7 @@ package VMS_Data is\n                      S_GCC_Error   'Access,\n                      S_GCC_ErrorX  'Access,\n                      S_GCC_Expand  'Access,\n+                     S_GCC_Lexpand 'Access,\n                      S_GCC_Extend  'Access,\n                      S_GCC_Ext     'Access,\n                      S_GCC_File    'Access,\n@@ -3446,6 +3468,7 @@ package VMS_Data is\n                      S_GCC_No_Back 'Access,\n                      S_GCC_All_Back'Access,\n                      S_GCC_Xdebug  'Access,\n+                     S_GCC_Lxdebug 'Access,\n                      S_GCC_Xref    'Access);\n \n    ----------------------------"}]}