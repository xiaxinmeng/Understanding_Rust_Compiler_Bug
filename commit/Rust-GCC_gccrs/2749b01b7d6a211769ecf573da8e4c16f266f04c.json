{"sha": "2749b01b7d6a211769ecf573da8e4c16f266f04c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc0OWIwMWI3ZDZhMjExNzY5ZWNmNTczZGE4ZTRjMTZmMjY2ZjA0Yw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2014-02-25T16:14:58Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-25T16:14:58Z"}, "message": "* gcc-interface/trans.c (Pragma_to_gnu): Deal with Warning_As_Error.\n\nFrom-SVN: r208149", "tree": {"sha": "0a8715526ba53a14f115b0b240e58ed64143f8bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a8715526ba53a14f115b0b240e58ed64143f8bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2749b01b7d6a211769ecf573da8e4c16f266f04c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2749b01b7d6a211769ecf573da8e4c16f266f04c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2749b01b7d6a211769ecf573da8e4c16f266f04c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2749b01b7d6a211769ecf573da8e4c16f266f04c/comments", "author": null, "committer": null, "parents": [{"sha": "e7ba564fca6cb914e202ed4807142b7008bcde0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7ba564fca6cb914e202ed4807142b7008bcde0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7ba564fca6cb914e202ed4807142b7008bcde0c"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "a5696282092c2f9b8a0f03d803d3d2edb0e92f61", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2749b01b7d6a211769ecf573da8e4c16f266f04c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2749b01b7d6a211769ecf573da8e4c16f266f04c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2749b01b7d6a211769ecf573da8e4c16f266f04c", "patch": "@@ -1,3 +1,7 @@\n+2014-02-25  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (Pragma_to_gnu): Deal with Warning_As_Error.\n+\n 2014-02-25  Robert Dewar  <dewar@adacore.com>\n \n \t* rtsfind.adb (Is_RTE): Protect against entity with no scope"}, {"sha": "4a4d0faa9f6294b4cb24151aa5504d7ff1f4a83c", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2749b01b7d6a211769ecf573da8e4c16f266f04c/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2749b01b7d6a211769ecf573da8e4c16f266f04c/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=2749b01b7d6a211769ecf573da8e4c16f266f04c", "patch": "@@ -1194,6 +1194,7 @@ static tree\n Pragma_to_gnu (Node_Id gnat_node)\n {\n   tree gnu_result = alloc_stmt_list ();\n+  unsigned char pragma_id;\n   Node_Id gnat_temp;\n \n   /* Do nothing if we are just annotating types and check for (and ignore)\n@@ -1202,7 +1203,8 @@ Pragma_to_gnu (Node_Id gnat_node)\n       || !Is_Pragma_Name (Chars (Pragma_Identifier (gnat_node))))\n     return gnu_result;\n \n-  switch (Get_Pragma_Id (Chars (Pragma_Identifier (gnat_node))))\n+  pragma_id = Get_Pragma_Id (Chars (Pragma_Identifier (gnat_node)));\n+  switch (pragma_id)\n     {\n     case Pragma_Inspection_Point:\n       /* Do nothing at top level: all such variables are already viewable.  */\n@@ -1319,6 +1321,7 @@ Pragma_to_gnu (Node_Id gnat_node)\n \tpost_error (\"must specify -g?\", gnat_node);\n       break;\n \n+    case Pragma_Warning_As_Error:\n     case Pragma_Warnings:\n       {\n \tNode_Id gnat_expr;\n@@ -1331,12 +1334,26 @@ Pragma_to_gnu (Node_Id gnat_node)\n \n \tgnat_temp = First (Pragma_Argument_Associations (gnat_node));\n \n-\t/* This is the String form: pragma Warnings (String).  */\n+\t/* This is the String form: pragma Warning{s|_As_Error}(String).  */\n \tif (Nkind (Expression (gnat_temp)) == N_String_Literal)\n \t  {\n-\t    kind = DK_WARNING;\n+\t    switch (pragma_id)\n+\t      {\n+\t      case Pragma_Warning_As_Error:\n+\t\tkind = DK_ERROR;\n+\t\timply = false;\n+\t\tbreak;\n+\n+\t      case Pragma_Warnings:\n+\t\tkind = DK_WARNING;\n+\t\timply = true;\n+\t\tbreak;\n+\n+\t      default:\n+\t\tgcc_unreachable ();\n+\t      }\n+\n \t    gnat_expr = Expression (gnat_temp);\n-\t    imply = true;\n \t  }\n \n \t/* This is the On/Off form: pragma Warnings (On | Off [,String]).  */"}]}