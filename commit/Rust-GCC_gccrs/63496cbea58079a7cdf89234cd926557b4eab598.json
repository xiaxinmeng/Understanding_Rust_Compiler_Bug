{"sha": "63496cbea58079a7cdf89234cd926557b4eab598", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM0OTZjYmVhNTgwNzlhN2NkZjg5MjM0Y2Q5MjY1NTdiNGVhYjU5OA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-11-16T12:13:40Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-11-16T12:26:35Z"}, "message": "modref: add missing Param Optimization keywords\n\nFixes:\n\nFAIL: compiler driver --help=common option(s): \"^ +-.*[^:.]$\" absent from output: \"  --param=modref-max-depth=   Maximum depth of DFS walk used by modref escape analysis\"\n\ngcc/ChangeLog:\n\n\t* params.opt: All modref parameters miss Optimization and Param\n\tkeyword as seen in testsuite failure.", "tree": {"sha": "0548a56da3d16baa29226482001ce86f80894185", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0548a56da3d16baa29226482001ce86f80894185"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63496cbea58079a7cdf89234cd926557b4eab598", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63496cbea58079a7cdf89234cd926557b4eab598", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63496cbea58079a7cdf89234cd926557b4eab598", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63496cbea58079a7cdf89234cd926557b4eab598/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b2e9a0aca2f915b994d3ac406d8cbde24df4329", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b2e9a0aca2f915b994d3ac406d8cbde24df4329", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b2e9a0aca2f915b994d3ac406d8cbde24df4329"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "3f1f6093c53a58e7644c481bf6e735fcf86be263", "filename": "gcc/params.opt", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63496cbea58079a7cdf89234cd926557b4eab598/gcc%2Fparams.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63496cbea58079a7cdf89234cd926557b4eab598/gcc%2Fparams.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.opt?ref=63496cbea58079a7cdf89234cd926557b4eab598", "patch": "@@ -912,23 +912,23 @@ Common Joined UInteger Var(param_switch_conversion_branch_ratio) Init(8) Integer\n The maximum ratio between array size and switch branches for a switch conversion to take place.\n \n -param=modref-max-bases=\n-Common Joined UInteger Var(param_modref_max_bases) Init(32)\n+Common Joined UInteger Var(param_modref_max_bases) Init(32) Param Optimization\n Maximum number of bases stored in each modref tree.\n \n -param=modref-max-refs=\n-Common Joined UInteger Var(param_modref_max_refs) Init(16)\n+Common Joined UInteger Var(param_modref_max_refs) Init(16) Param Optimization\n Maximum number of references stored in each modref base.\n \n -param=modref-max-accesses=\n-Common Joined UInteger Var(param_modref_max_accesses) Init(16)\n+Common Joined UInteger Var(param_modref_max_accesses) Init(16) Param Optimization\n Maximum number of accesse stored in each modref reference.\n \n -param=modref-max-tests=\n-Common Joined UInteger Var(param_modref_max_tests) Init(64)\n+Common Joined UInteger Var(param_modref_max_tests) Init(64) Param Optimization\n Maximum number of tests performed by modref query.\n \n -param=modref-max-depth=\n-Common Joined UInteger Var(param_modref_max_depth) Init(256)\n+Common Joined UInteger Var(param_modref_max_depth) Init(256) Param Optimization\n Maximum depth of DFS walk used by modref escape analysis.\n \n -param=tm-max-aggregate-size="}]}