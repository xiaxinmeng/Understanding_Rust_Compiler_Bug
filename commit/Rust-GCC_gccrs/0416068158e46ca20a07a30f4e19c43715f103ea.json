{"sha": "0416068158e46ca20a07a30f4e19c43715f103ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQxNjA2ODE1OGU0NmNhMjBhMDdhMzBmNGUxOWM0MzcxNWYxMDNlYQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel1@de.ibm.com", "date": "2007-05-09T07:40:52Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2007-05-09T07:40:52Z"}, "message": "20070507-1.c: New testcase.\n\n2007-05-09  Andreas Krebbel  <krebbel1@de.ibm.com>\n\n\t* gcc.dg/20070507-1.c: New testcase.\n\nFrom-SVN: r124567", "tree": {"sha": "132b97510d07240abcd1fbc23fe0ad6e6ad1d683", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/132b97510d07240abcd1fbc23fe0ad6e6ad1d683"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0416068158e46ca20a07a30f4e19c43715f103ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0416068158e46ca20a07a30f4e19c43715f103ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0416068158e46ca20a07a30f4e19c43715f103ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0416068158e46ca20a07a30f4e19c43715f103ea/comments", "author": null, "committer": null, "parents": [{"sha": "9e081bace44aaec8280e4f3bf3d504c56de3a0bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e081bace44aaec8280e4f3bf3d504c56de3a0bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e081bace44aaec8280e4f3bf3d504c56de3a0bc"}], "stats": {"total": 107, "additions": 107, "deletions": 0}, "files": [{"sha": "57b76d99c4edd0fc3975d0a65b28d3505daa5223", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0416068158e46ca20a07a30f4e19c43715f103ea/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0416068158e46ca20a07a30f4e19c43715f103ea/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0416068158e46ca20a07a30f4e19c43715f103ea", "patch": "@@ -1,3 +1,7 @@\n+2007-05-09  Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\t* gcc.dg/20070507-1.c: New testcase.\n+\n 2007-05-08  Chao-ying Fu  <fu@mips.com>\n \n \t* gcc.target/mips/msub-1.c, gcc.target/mips/msub-2.c,"}, {"sha": "5d29d07ce09ef43882492d957fd11eac35982b27", "filename": "gcc/testsuite/gcc.dg/20070507-1.c", "status": "added", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0416068158e46ca20a07a30f4e19c43715f103ea/gcc%2Ftestsuite%2Fgcc.dg%2F20070507-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0416068158e46ca20a07a30f4e19c43715f103ea/gcc%2Ftestsuite%2Fgcc.dg%2F20070507-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20070507-1.c?ref=0416068158e46ca20a07a30f4e19c43715f103ea", "patch": "@@ -0,0 +1,103 @@\n+/* This failed on s390x due to bug in loop.c.\n+   loop.c failed to remove a REG_EQUAL note when\n+   hoisting an insn from a loop body.  */\n+\n+/* { dg-options \"-O3 -fPIC\" } */\n+/* { dg-do run } */\n+\n+typedef __SIZE_TYPE__ size_t;\n+int memcmp(const void *s1, const void *s2, size_t n);\n+\n+typedef struct\n+{\n+  char name[30];\n+  int a;\n+} LOCAL;\n+\n+int global = 0;\n+int sy = 1;\n+int subroutine_offset;\n+\n+LOCAL local = { \"local\", 0 };\n+LOCAL keywords = { \"keywords\", 1 };\n+int local_table = 0;\n+int keywords_table = 0;\n+\n+void __attribute__((noinline)) bar (char *p_buffer)\n+{\n+  p_buffer[255] = 1;\n+}\n+\n+int __attribute__((noinline)) foo (char *p_str1)\n+{\n+  global = 1;\n+  return 1;\n+}\n+\n+int __attribute__((noinline)) loop_next (int *p_table, char *p_table_head)\n+{\n+  static loop_next = 0;\n+\n+  if (loop_next == 1)\n+    return 1;\n+\n+  loop_next = 1;\n+  return 0;\n+}\n+\n+int\n+main ()\n+{\n+  char buffer[256];\n+  int ende = 0;\n+  int index;\n+  int local_base = 2;\n+\n+  keywords.a = 1;\n+  for (sy = 0;; sy++)\n+    {\n+      for (index = 1;;)\n+\t{\n+\t  bar (buffer);\n+\t  if (buffer[sy] != 0)\n+\t    {\n+\t      ende = 1;\n+\t      break;\n+\t    };\n+\t  if (foo (buffer))\n+\t    {\n+\t      keywords.a += index - 1;\n+\t      break;\n+\t    }\n+\t  index++;\n+\t}\n+      if (ende)\n+\tbreak;\n+    }\n+\n+  subroutine_offset = 0;\n+\n+  for (;;)\n+    {\n+      if (loop_next (&keywords_table, (char*)&keywords))\n+\tbreak;\n+\n+      if ((!memcmp (keywords.name, \"+++\", 3)))\n+\tlocal_base = 100;\n+      else\n+\tlocal_base = 0;\n+\n+      if ((!memcmp (keywords.name, \"+++\", 3)))\n+\tsubroutine_offset += local_table;\n+\n+      for (;;)\n+\t{\n+\t  if (loop_next (&local_table, (char*)&local))\n+\t    break;;\n+\t  if ((local.a == 0))\n+\t    continue;;\n+\t  foo (local.name);\n+\t}\n+    }\n+  return 0;\n+}"}]}