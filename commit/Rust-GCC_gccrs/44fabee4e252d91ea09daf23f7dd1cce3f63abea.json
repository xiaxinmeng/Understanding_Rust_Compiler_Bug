{"sha": "44fabee4e252d91ea09daf23f7dd1cce3f63abea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDRmYWJlZTRlMjUyZDkxZWEwOWRhZjIzZjdkZDFjY2UzZjYzYWJlYQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-07-13T09:45:00Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-07-13T09:45:00Z"}, "message": "re PR c/53937 (Pack'ing struct causes gcc to not recognize that an field's address is aligned)\n\n2012-07-13  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/53937\n\t* builtins.c (get_pointer_alignment_1): Handle constant\n\tpointers.\n\nFrom-SVN: r189458", "tree": {"sha": "cb3d66ebbf28ef10a1d738a2fabefc36d0431206", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb3d66ebbf28ef10a1d738a2fabefc36d0431206"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44fabee4e252d91ea09daf23f7dd1cce3f63abea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44fabee4e252d91ea09daf23f7dd1cce3f63abea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44fabee4e252d91ea09daf23f7dd1cce3f63abea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44fabee4e252d91ea09daf23f7dd1cce3f63abea/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "57cee56a1efe681eac1a5c427f4ffe1c6f4f77cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57cee56a1efe681eac1a5c427f4ffe1c6f4f77cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57cee56a1efe681eac1a5c427f4ffe1c6f4f77cd"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "b317fc50ec438e59e8e163ccb8405784efc2b8a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44fabee4e252d91ea09daf23f7dd1cce3f63abea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44fabee4e252d91ea09daf23f7dd1cce3f63abea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=44fabee4e252d91ea09daf23f7dd1cce3f63abea", "patch": "@@ -1,3 +1,9 @@\n+2012-07-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/53937\n+\t* builtins.c (get_pointer_alignment_1): Handle constant\n+\tpointers.\n+\n 2012-07-13  Richard Sandiford  <rdsandiford@googlemail.com>\n \t    Steven Bosscher  <steven@gcc.gnu.org>\n \t    Bernd Schmidt  <bernds@codesourcery.com>"}, {"sha": "040f352a0fb0bd9031c6be57f057c2031e2b38c8", "filename": "gcc/builtins.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44fabee4e252d91ea09daf23f7dd1cce3f63abea/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44fabee4e252d91ea09daf23f7dd1cce3f63abea/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=44fabee4e252d91ea09daf23f7dd1cce3f63abea", "patch": "@@ -536,6 +536,13 @@ get_pointer_alignment_1 (tree exp, unsigned int *alignp,\n \t  return false;\n \t}\n     }\n+  else if (TREE_CODE (exp) == INTEGER_CST)\n+    {\n+      *alignp = BIGGEST_ALIGNMENT;\n+      *bitposp = ((TREE_INT_CST_LOW (exp) * BITS_PER_UNIT)\n+\t\t  & (BIGGEST_ALIGNMENT - 1));\n+      return true;\n+    }\n \n   *bitposp = 0;\n   *alignp = BITS_PER_UNIT;"}]}