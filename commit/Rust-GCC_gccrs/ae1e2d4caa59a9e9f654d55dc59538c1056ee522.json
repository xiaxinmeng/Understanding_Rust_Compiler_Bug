{"sha": "ae1e2d4caa59a9e9f654d55dc59538c1056ee522", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUxZTJkNGNhYTU5YTllOWY2NTRkNTVkYzU5NTM4YzEwNTZlZTUyMg==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@suse.de", "date": "2007-01-01T22:03:23Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2007-01-01T22:03:23Z"}, "message": "re PR target/29166 (broken unwind information for many life variables resulting in register corruption)\n\n\tPR target/29166\n\t* config/ia64/ia64.c (ia64_compute_frame_size): Account space for\n\tsave of BR0 in extra_spill_size instead of spill_size.\n\t(ia64_expand_prologue): Save BR0 outside of the gr/br/fr spill\n\tarea.\n\t(ia64_expand_epilogue): Restore BR0 from its new location.\n\ntestsuite/:\n\t* g++.dg/eh/pr29166.C: New test.\n\nFrom-SVN: r120319", "tree": {"sha": "c011eefb41be7be9e9e4a175d78779691c158292", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c011eefb41be7be9e9e4a175d78779691c158292"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae1e2d4caa59a9e9f654d55dc59538c1056ee522", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae1e2d4caa59a9e9f654d55dc59538c1056ee522", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae1e2d4caa59a9e9f654d55dc59538c1056ee522", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae1e2d4caa59a9e9f654d55dc59538c1056ee522/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9bed0a3480a26ae761727c210e568ca9237f2d15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bed0a3480a26ae761727c210e568ca9237f2d15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bed0a3480a26ae761727c210e568ca9237f2d15"}], "stats": {"total": 300, "additions": 255, "deletions": 45}, "files": [{"sha": "4b9e5ff975adc51f6d6d57b3e65538e664a95cbd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae1e2d4caa59a9e9f654d55dc59538c1056ee522/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae1e2d4caa59a9e9f654d55dc59538c1056ee522/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae1e2d4caa59a9e9f654d55dc59538c1056ee522", "patch": "@@ -1,3 +1,12 @@\n+2007-01-01  Andreas Schwab  <schwab@suse.de>\n+\n+\tPR target/29166\n+\t* config/ia64/ia64.c (ia64_compute_frame_size): Account space for\n+\tsave of BR0 in extra_spill_size instead of spill_size.\n+\t(ia64_expand_prologue): Save BR0 outside of the gr/br/fr spill\n+\tarea.\n+\t(ia64_expand_epilogue): Restore BR0 from its new location.\n+\n 2007-01-01  Andrew Pinski  <pinskia@gmail.com>\n \n \t* gimplify.c (gimplify_init_constructor <case VECTOR_TYPE>):"}, {"sha": "dc4cb39e2c143c542415f18512938419a0d8c9db", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 44, "deletions": 45, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae1e2d4caa59a9e9f654d55dc59538c1056ee522/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae1e2d4caa59a9e9f654d55dc59538c1056ee522/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=ae1e2d4caa59a9e9f654d55dc59538c1056ee522", "patch": "@@ -2453,7 +2453,7 @@ ia64_compute_frame_size (HOST_WIDE_INT size)\n       current_frame_info.reg_save_b0 = find_gr_spill (1);\n       if (current_frame_info.reg_save_b0 == 0)\n \t{\n-\t  spill_size += 8;\n+\t  extra_spill_size += 8;\n \t  n_spilled += 1;\n \t}\n \n@@ -2482,7 +2482,7 @@ ia64_compute_frame_size (HOST_WIDE_INT size)\n       if (regs_ever_live[BR_REG (0)] && ! call_used_regs[BR_REG (0)])\n \t{\n \t  SET_HARD_REG_BIT (mask, BR_REG (0));\n-\t  spill_size += 8;\n+\t  extra_spill_size += 8;\n \t  n_spilled += 1;\n \t}\n \n@@ -3172,6 +3172,31 @@ ia64_expand_prologue (void)\n \t}\n     }\n \n+  /* Save the return pointer.  */\n+  if (TEST_HARD_REG_BIT (current_frame_info.mask, BR_REG (0)))\n+    {\n+      reg = gen_rtx_REG (DImode, BR_REG (0));\n+      if (current_frame_info.reg_save_b0 != 0)\n+\t{\n+\t  alt_reg = gen_rtx_REG (DImode, current_frame_info.reg_save_b0);\n+\t  insn = emit_move_insn (alt_reg, reg);\n+\t  RTX_FRAME_RELATED_P (insn) = 1;\n+\n+\t  /* Even if we're not going to generate an epilogue, we still\n+\t     need to save the register so that EH works.  */\n+\t  if (! epilogue_p)\n+\t    emit_insn (gen_prologue_use (alt_reg));\n+\t}\n+      else\n+\t{\n+\t  alt_regno = next_scratch_gr_reg ();\n+\t  alt_reg = gen_rtx_REG (DImode, alt_regno);\n+\t  emit_move_insn (alt_reg, reg);\n+\t  do_spill (gen_movdi_x, alt_reg, cfa_off, reg);\n+\t  cfa_off -= 8;\n+\t}\n+    }\n+\n   if (current_frame_info.reg_save_gp)\n     {\n       insn = emit_move_insn (gen_rtx_REG (DImode,\n@@ -3198,32 +3223,6 @@ ia64_expand_prologue (void)\n \tcfa_off -= 8;\n       }\n \n-  /* Handle BR0 specially -- it may be getting stored permanently in\n-     some GR register.  */\n-  if (TEST_HARD_REG_BIT (current_frame_info.mask, BR_REG (0)))\n-    {\n-      reg = gen_rtx_REG (DImode, BR_REG (0));\n-      if (current_frame_info.reg_save_b0 != 0)\n-\t{\n-\t  alt_reg = gen_rtx_REG (DImode, current_frame_info.reg_save_b0);\n-\t  insn = emit_move_insn (alt_reg, reg);\n-\t  RTX_FRAME_RELATED_P (insn) = 1;\n-\n-\t  /* Even if we're not going to generate an epilogue, we still\n-\t     need to save the register so that EH works.  */\n-\t  if (! epilogue_p)\n-\t    emit_insn (gen_prologue_use (alt_reg));\n-\t}\n-      else\n-\t{\n-\t  alt_regno = next_scratch_gr_reg ();\n-\t  alt_reg = gen_rtx_REG (DImode, alt_regno);\n-\t  emit_move_insn (alt_reg, reg);\n-\t  do_spill (gen_movdi_x, alt_reg, cfa_off, reg);\n-\t  cfa_off -= 8;\n-\t}\n-    }\n-\n   /* Spill the rest of the BR registers.  */\n   for (regno = BR_REG (1); regno <= BR_REG (7); ++regno)\n     if (TEST_HARD_REG_BIT (current_frame_info.mask, regno))\n@@ -3357,6 +3356,22 @@ ia64_expand_epilogue (int sibcall_p)\n       emit_move_insn (reg, alt_reg);\n     }\n \n+  /* Restore the return pointer.  */\n+  if (TEST_HARD_REG_BIT (current_frame_info.mask, BR_REG (0)))\n+    {\n+      if (current_frame_info.reg_save_b0 != 0)\n+\talt_reg = gen_rtx_REG (DImode, current_frame_info.reg_save_b0);\n+      else\n+\t{\n+\t  alt_regno = next_scratch_gr_reg ();\n+\t  alt_reg = gen_rtx_REG (DImode, alt_regno);\n+\t  do_restore (gen_movdi_x, alt_reg, cfa_off);\n+\t  cfa_off -= 8;\n+\t}\n+      reg = gen_rtx_REG (DImode, BR_REG (0));\n+      emit_move_insn (reg, alt_reg);\n+    }\n+\n   /* We should now be at the base of the gr/br/fr spill area.  */\n   gcc_assert (cfa_off == (current_frame_info.spill_cfa_off\n \t\t\t  + current_frame_info.spill_size));\n@@ -3375,23 +3390,7 @@ ia64_expand_epilogue (int sibcall_p)\n \tcfa_off -= 8;\n       }\n \n-  /* Restore the branch registers.  Handle B0 specially, as it may\n-     have gotten stored in some GR register.  */\n-  if (TEST_HARD_REG_BIT (current_frame_info.mask, BR_REG (0)))\n-    {\n-      if (current_frame_info.reg_save_b0 != 0)\n-\talt_reg = gen_rtx_REG (DImode, current_frame_info.reg_save_b0);\n-      else\n-\t{\n-\t  alt_regno = next_scratch_gr_reg ();\n-\t  alt_reg = gen_rtx_REG (DImode, alt_regno);\n-\t  do_restore (gen_movdi_x, alt_reg, cfa_off);\n-\t  cfa_off -= 8;\n-\t}\n-      reg = gen_rtx_REG (DImode, BR_REG (0));\n-      emit_move_insn (reg, alt_reg);\n-    }\n-\n+  /* Restore the branch registers.  */\n   for (regno = BR_REG (1); regno <= BR_REG (7); ++regno)\n     if (TEST_HARD_REG_BIT (current_frame_info.mask, regno))\n       {"}, {"sha": "78092410a68b173a00aeb03a7f985c3d34086a42", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae1e2d4caa59a9e9f654d55dc59538c1056ee522/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae1e2d4caa59a9e9f654d55dc59538c1056ee522/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ae1e2d4caa59a9e9f654d55dc59538c1056ee522", "patch": "@@ -1,3 +1,8 @@\n+2007-01-01  Andreas Schwab  <schwab@suse.de>\n+\n+\tPR target/29166\n+\t* g++.dg/eh/pr29166.C: New test.\n+\n 2007-01-01  Joseph Myers  <joseph@codesourcery.com>\n \n \t* lib/target-supports.exp (check_effective_target_powerpc_spe):"}, {"sha": "432b64e98496bedf8dc137acf68489e02f919db9", "filename": "gcc/testsuite/g++.dg/eh/pr29166.C", "status": "added", "additions": 197, "deletions": 0, "changes": 197, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae1e2d4caa59a9e9f654d55dc59538c1056ee522/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fpr29166.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae1e2d4caa59a9e9f654d55dc59538c1056ee522/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fpr29166.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fpr29166.C?ref=ae1e2d4caa59a9e9f654d55dc59538c1056ee522", "patch": "@@ -0,0 +1,197 @@\n+// PR 29166: r4-r7 corrupted when unwinding.\n+// { dg-do run }\n+\n+class Ex \n+{ \n+public: \n+  int val; \n+\n+  Ex( int v )\n+   : val( v ) \n+   { }\n+\n+};\n+\n+void doIt() \n+{\n+  int OFF( 1000 ); \n+  register int v1=OFF+1,v2=OFF+2,v3=OFF+3,v4=OFF+4,v5=OFF+5,v6=OFF+6,v7=OFF+7,v8=OFF+8,v9=OFF+9,v10=OFF+10;\n+  register int v11=OFF+11,v12=OFF+12,v13=OFF+13,v14=OFF+14,v15=OFF+15,v16=OFF+16,v17=OFF+17,v18=OFF+18,v19=OFF+19,v20=OFF+20;\n+  register int v21=OFF+21,v22=OFF+22,v23=OFF+23,v24=OFF+24,v25=OFF+25,v26=OFF+26,v27=OFF+27,v28=OFF+28,v29=OFF+29,v30=OFF+30;\n+  register int v31=OFF+31,v32=OFF+32,v33=OFF+33,v34=OFF+34,v35=OFF+35,v36=OFF+36,v37=OFF+37,v38=OFF+38,v39=OFF+39,v40=OFF+40;\n+  register int v41=OFF+41,v42=OFF+42,v43=OFF+43,v44=OFF+44,v45=OFF+45,v46=OFF+46,v47=OFF+47,v48=OFF+48,v49=OFF+49,v50=OFF+50;\n+  register int v51=OFF+51,v52=OFF+52,v53=OFF+53,v54=OFF+54,v55=OFF+55,v56=OFF+56,v57=OFF+57,v58=OFF+58,v59=OFF+59,v60=OFF+60;\n+  register int v61=OFF+61,v62=OFF+62,v63=OFF+63,v64=OFF+64,v65=OFF+65,v66=OFF+66,v67=OFF+67,v68=OFF+68,v69=OFF+69,v70=OFF+70;\n+  register int v71=OFF+71,v72=OFF+72,v73=OFF+73,v74=OFF+74,v75=OFF+75,v76=OFF+76,v77=OFF+77,v78=OFF+78,v79=OFF+79,v80=OFF+80;\n+  register int v81=OFF+81,v82=OFF+82,v83=OFF+83,v84=OFF+84,v85=OFF+85,v86=OFF+86,v87=OFF+87,v88=OFF+88,v89=OFF+89,v90=OFF+90;\n+  register int v91=OFF+91,v92=OFF+92,v93=OFF+93,v94=OFF+94,v95=OFF+95,v96=OFF+96,v97=OFF+97,v98=OFF+98,v99=OFF+99,v100=OFF+100;\n+  register int v101=OFF+101,v102=OFF+102,v103=OFF+103,v104=OFF+104,v105=OFF+105,v106=OFF+106,v107=OFF+107,v108=OFF+108,v109=OFF+109,v110=OFF+110;\n+  register int v111=OFF+111,v112=OFF+112,v113=OFF+113,v114=OFF+114,v115=OFF+115,v116=OFF+116,v117=OFF+117,v118=OFF+118,v119=OFF+119,v120=OFF+120;\n+  register int v121=OFF+121,v122=OFF+122,v123=OFF+123,v124=OFF+124,v125=OFF+125,v126=OFF+126,v127=OFF+127,v128=OFF+128,v129=OFF+129,v130=OFF+130;\n+  register int v131=OFF+131,v132=OFF+132,v133=OFF+133,v134=OFF+134,v135=OFF+135,v136=OFF+136,v137=OFF+137,v138=OFF+138,v139=OFF+139,v140=OFF+140;\n+  register int v141=OFF+141,v142=OFF+142,v143=OFF+143,v144=OFF+144,v145=OFF+145,v146=OFF+146,v147=OFF+147,v148=OFF+148,v149=OFF+149,v150=OFF+150;\n+  register int v151=OFF+151,v152=OFF+152,v153=OFF+153,v154=OFF+154,v155=OFF+155,v156=OFF+156,v157=OFF+157,v158=OFF+158,v159=OFF+159,v160=OFF+160;\n+  register int v161=OFF+161,v162=OFF+162,v163=OFF+163,v164=OFF+164,v165=OFF+165,v166=OFF+166,v167=OFF+167,v168=OFF+168,v169=OFF+169,v170=OFF+170;\n+  register int v171=OFF+171,v172=OFF+172,v173=OFF+173,v174=OFF+174,v175=OFF+175,v176=OFF+176,v177=OFF+177,v178=OFF+178,v179=OFF+179,v180=OFF+180;\n+  register int v181=OFF+181,v182=OFF+182,v183=OFF+183,v184=OFF+184,v185=OFF+185,v186=OFF+186,v187=OFF+187,v188=OFF+188,v189=OFF+189,v190=OFF+190;\n+  register int v191=OFF+191,v192=OFF+192,v193=OFF+193,v194=OFF+194,v195=OFF+195,v196=OFF+196,v197=OFF+197,v198=OFF+198,v199=OFF+199,v200=OFF+200;\n+  register int v201=OFF+201,v202=OFF+202,v203=OFF+203,v204=OFF+204,v205=OFF+205,v206=OFF+206,v207=OFF+207,v208=OFF+208,v209=OFF+209,v210=OFF+210;\n+  register int v211=OFF+211,v212=OFF+212,v213=OFF+213,v214=OFF+214,v215=OFF+215,v216=OFF+216,v217=OFF+217,v218=OFF+218,v219=OFF+219,v220=OFF+220;\n+  register int v231=OFF+231,v232=OFF+232,v233=OFF+233,v234=OFF+234,v235=OFF+235,v236=OFF+236,v237=OFF+237,v238=OFF+238,v239=OFF+239,v240=OFF+240;\n+  register int v241=OFF+241,v242=OFF+242,v243=OFF+243,v244=OFF+244,v245=OFF+245,v246=OFF+246,v247=OFF+247,v248=OFF+248,v249=OFF+249,v250=OFF+250;\n+  register int v251=OFF+251,v252=OFF+252,v253=OFF+253,v254=OFF+254,v255=OFF+255,v256=OFF+256,v257=OFF+257,v258=OFF+258,v259=OFF+259,v260=OFF+260;\n+  register int v261=OFF+261,v262=OFF+262,v263=OFF+263,v264=OFF+264,v265=OFF+265,v266=OFF+266,v267=OFF+267,v268=OFF+268,v269=OFF+269,v270=OFF+270;\n+  register int v271=OFF+271,v272=OFF+272,v273=OFF+273,v274=OFF+274,v275=OFF+275,v276=OFF+276,v277=OFF+277,v278=OFF+278,v279=OFF+279,v280=OFF+280;\n+  register int v281=OFF+281,v282=OFF+282,v283=OFF+283,v284=OFF+284,v285=OFF+285,v286=OFF+286,v287=OFF+287,v288=OFF+288,v289=OFF+289,v290=OFF+290;\n+  register int v291=OFF+291,v292=OFF+292,v293=OFF+293,v294=OFF+294,v295=OFF+295,v296=OFF+296,v297=OFF+297,v298=OFF+298,v299=OFF+299,v300=OFF+300;\n+\n+  register int sum = 0;\n+  sum +=v1+v2+v3+v4+v5+v6+v7+v8+v9+v10;\n+  sum +=v11+v12+v13+v14+v15+v16+v17+v18+v19+v20;\n+  sum +=v21+v22+v23+v24+v25+v26+v27+v28+v29+v30;\n+  sum +=v31+v32+v33+v34+v35+v36+v37+v38+v39+v40;\n+  sum +=v41+v42+v43+v44+v45+v46+v47+v48+v49+v50;\n+  sum +=v51+v52+v53+v54+v55+v56+v57+v58+v59+v60;\n+  sum +=v61+v62+v63+v64+v65+v66+v67+v68+v69+v70;\n+  sum +=v71+v72+v73+v74+v75+v76+v77+v78+v79+v80;\n+  sum +=v81+v82+v83+v84+v85+v86+v87+v88+v89+v90;\n+  sum +=v91+v92+v93+v94+v95+v96+v97+v98+v99+v100;\n+  sum +=v101+v102+v103+v104+v105+v106+v107+v108+v109+v110;\n+  sum +=v111+v112+v113+v114+v115+v116+v117+v118+v119+v120;\n+  sum +=v121+v122+v123+v124+v125+v126+v127+v128+v129+v130;\n+  sum +=v131+v132+v133+v134+v135+v136+v137+v138+v139+v140;\n+  sum +=v141+v142+v143+v144+v145+v146+v147+v148+v149+v150;\n+  sum +=v151+v152+v153+v154+v155+v156+v157+v158+v159+v160;\n+  sum +=v161+v162+v163+v164+v165+v166+v167+v168+v169+v170;\n+  sum +=v171+v172+v173+v174+v175+v176+v177+v178+v179+v180;\n+  sum +=v181+v182+v183+v184+v185+v186+v187+v188+v189+v190;\n+  sum +=v191+v192+v193+v194+v195+v196+v197+v198+v199+v200;\n+  sum +=v201+v202+v203+v204+v205+v206+v207+v208+v209+v210;\n+  sum +=v211+v212+v213+v214+v215+v216+v217+v218+v219+v220;\n+  sum +=v231+v232+v233+v234+v235+v236+v237+v238+v239+v240;\n+  sum +=v241+v242+v243+v244+v245+v246+v247+v248+v249+v250;\n+  sum +=v251+v252+v253+v254+v255+v256+v257+v258+v259+v260;\n+  sum +=v261+v262+v263+v264+v265+v266+v267+v268+v269+v270;\n+  sum +=v271+v272+v273+v274+v275+v276+v277+v278+v279+v280;\n+  sum +=v281+v282+v283+v284+v285+v286+v287+v288+v289+v290;\n+  sum +=v291+v292+v293+v294+v295+v296+v297+v298+v299+v300;\n+\n+  throw Ex( sum );  \n+}\n+\n+void test() \n+{\n+  try {\n+    doIt(); \n+  } catch( Ex& ) { } \n+}\n+\n+int main(int argc, char** argv) \n+{\n+  int OFF(0); \n+  register int v1=OFF+1,v2=OFF+2,v3=OFF+3,v4=OFF+4,v5=OFF+5,v6=OFF+6,v7=OFF+7,v8=OFF+8,v9=OFF+9,v10=OFF+10;\n+  register int v11=OFF+11,v12=OFF+12,v13=OFF+13,v14=OFF+14,v15=OFF+15,v16=OFF+16,v17=OFF+17,v18=OFF+18,v19=OFF+19,v20=OFF+20;\n+  register int v21=OFF+21,v22=OFF+22,v23=OFF+23,v24=OFF+24,v25=OFF+25,v26=OFF+26,v27=OFF+27,v28=OFF+28,v29=OFF+29,v30=OFF+30;\n+  register int v31=OFF+31,v32=OFF+32,v33=OFF+33,v34=OFF+34,v35=OFF+35,v36=OFF+36,v37=OFF+37,v38=OFF+38,v39=OFF+39,v40=OFF+40;\n+  register int v41=OFF+41,v42=OFF+42,v43=OFF+43,v44=OFF+44,v45=OFF+45,v46=OFF+46,v47=OFF+47,v48=OFF+48,v49=OFF+49,v50=OFF+50;\n+  register int v51=OFF+51,v52=OFF+52,v53=OFF+53,v54=OFF+54,v55=OFF+55,v56=OFF+56,v57=OFF+57,v58=OFF+58,v59=OFF+59,v60=OFF+60;\n+  register int v61=OFF+61,v62=OFF+62,v63=OFF+63,v64=OFF+64,v65=OFF+65,v66=OFF+66,v67=OFF+67,v68=OFF+68,v69=OFF+69,v70=OFF+70;\n+  register int v71=OFF+71,v72=OFF+72,v73=OFF+73,v74=OFF+74,v75=OFF+75,v76=OFF+76,v77=OFF+77,v78=OFF+78,v79=OFF+79,v80=OFF+80;\n+  register int v81=OFF+81,v82=OFF+82,v83=OFF+83,v84=OFF+84,v85=OFF+85,v86=OFF+86,v87=OFF+87,v88=OFF+88,v89=OFF+89,v90=OFF+90;\n+  register int v91=OFF+91,v92=OFF+92,v93=OFF+93,v94=OFF+94,v95=OFF+95,v96=OFF+96,v97=OFF+97,v98=OFF+98,v99=OFF+99,v100=OFF+100;\n+  register int v101=OFF+101,v102=OFF+102,v103=OFF+103,v104=OFF+104,v105=OFF+105,v106=OFF+106,v107=OFF+107,v108=OFF+108,v109=OFF+109,v110=OFF+110;\n+  register int v111=OFF+111,v112=OFF+112,v113=OFF+113,v114=OFF+114,v115=OFF+115,v116=OFF+116,v117=OFF+117,v118=OFF+118,v119=OFF+119,v120=OFF+120;\n+  register int v121=OFF+121,v122=OFF+122,v123=OFF+123,v124=OFF+124,v125=OFF+125,v126=OFF+126,v127=OFF+127,v128=OFF+128,v129=OFF+129,v130=OFF+130;\n+  register int v131=OFF+131,v132=OFF+132,v133=OFF+133,v134=OFF+134,v135=OFF+135,v136=OFF+136,v137=OFF+137,v138=OFF+138,v139=OFF+139,v140=OFF+140;\n+  register int v141=OFF+141,v142=OFF+142,v143=OFF+143,v144=OFF+144,v145=OFF+145,v146=OFF+146,v147=OFF+147,v148=OFF+148,v149=OFF+149,v150=OFF+150;\n+  register int v151=OFF+151,v152=OFF+152,v153=OFF+153,v154=OFF+154,v155=OFF+155,v156=OFF+156,v157=OFF+157,v158=OFF+158,v159=OFF+159,v160=OFF+160;\n+  register int v161=OFF+161,v162=OFF+162,v163=OFF+163,v164=OFF+164,v165=OFF+165,v166=OFF+166,v167=OFF+167,v168=OFF+168,v169=OFF+169,v170=OFF+170;\n+  register int v171=OFF+171,v172=OFF+172,v173=OFF+173,v174=OFF+174,v175=OFF+175,v176=OFF+176,v177=OFF+177,v178=OFF+178,v179=OFF+179,v180=OFF+180;\n+  register int v181=OFF+181,v182=OFF+182,v183=OFF+183,v184=OFF+184,v185=OFF+185,v186=OFF+186,v187=OFF+187,v188=OFF+188,v189=OFF+189,v190=OFF+190;\n+  register int v191=OFF+191,v192=OFF+192,v193=OFF+193,v194=OFF+194,v195=OFF+195,v196=OFF+196,v197=OFF+197,v198=OFF+198,v199=OFF+199,v200=OFF+200;\n+  register int v201=OFF+201,v202=OFF+202,v203=OFF+203,v204=OFF+204,v205=OFF+205,v206=OFF+206,v207=OFF+207,v208=OFF+208,v209=OFF+209,v210=OFF+210;\n+  register int v211=OFF+211,v212=OFF+212,v213=OFF+213,v214=OFF+214,v215=OFF+215,v216=OFF+216,v217=OFF+217,v218=OFF+218,v219=OFF+219,v220=OFF+220;\n+  register int v231=OFF+231,v232=OFF+232,v233=OFF+233,v234=OFF+234,v235=OFF+235,v236=OFF+236,v237=OFF+237,v238=OFF+238,v239=OFF+239,v240=OFF+240;\n+  register int v241=OFF+241,v242=OFF+242,v243=OFF+243,v244=OFF+244,v245=OFF+245,v246=OFF+246,v247=OFF+247,v248=OFF+248,v249=OFF+249,v250=OFF+250;\n+  register int v251=OFF+251,v252=OFF+252,v253=OFF+253,v254=OFF+254,v255=OFF+255,v256=OFF+256,v257=OFF+257,v258=OFF+258,v259=OFF+259,v260=OFF+260;\n+  register int v261=OFF+261,v262=OFF+262,v263=OFF+263,v264=OFF+264,v265=OFF+265,v266=OFF+266,v267=OFF+267,v268=OFF+268,v269=OFF+269,v270=OFF+270;\n+  register int v271=OFF+271,v272=OFF+272,v273=OFF+273,v274=OFF+274,v275=OFF+275,v276=OFF+276,v277=OFF+277,v278=OFF+278,v279=OFF+279,v280=OFF+280;\n+  register int v281=OFF+281,v282=OFF+282,v283=OFF+283,v284=OFF+284,v285=OFF+285,v286=OFF+286,v287=OFF+287,v288=OFF+288,v289=OFF+289,v290=OFF+290;\n+  register int v291=OFF+291,v292=OFF+292,v293=OFF+293,v294=OFF+294,v295=OFF+295,v296=OFF+296,v297=OFF+297,v298=OFF+298,v299=OFF+299,v300=OFF+300;\n+\n+  int sum_before, sum_after; \n+\n+  {\n+    int sum( 0 );\n+    sum +=v1+v2+v3+v4+v5+v6+v7+v8+v9+v10;\n+    sum +=v11+v12+v13+v14+v15+v16+v17+v18+v19+v20;\n+    sum +=v21+v22+v23+v24+v25+v26+v27+v28+v29+v30;\n+    sum +=v31+v32+v33+v34+v35+v36+v37+v38+v39+v40;\n+    sum +=v41+v42+v43+v44+v45+v46+v47+v48+v49+v50;\n+    sum +=v51+v52+v53+v54+v55+v56+v57+v58+v59+v60;\n+    sum +=v61+v62+v63+v64+v65+v66+v67+v68+v69+v70;\n+    sum +=v71+v72+v73+v74+v75+v76+v77+v78+v79+v80;\n+    sum +=v81+v82+v83+v84+v85+v86+v87+v88+v89+v90;\n+    sum +=v91+v92+v93+v94+v95+v96+v97+v98+v99+v100;\n+    sum +=v101+v102+v103+v104+v105+v106+v107+v108+v109+v110;\n+    sum +=v111+v112+v113+v114+v115+v116+v117+v118+v119+v120;\n+    sum +=v121+v122+v123+v124+v125+v126+v127+v128+v129+v130;\n+    sum +=v131+v132+v133+v134+v135+v136+v137+v138+v139+v140;\n+    sum +=v141+v142+v143+v144+v145+v146+v147+v148+v149+v150;\n+    sum +=v151+v152+v153+v154+v155+v156+v157+v158+v159+v160;\n+    sum +=v161+v162+v163+v164+v165+v166+v167+v168+v169+v170;\n+    sum +=v171+v172+v173+v174+v175+v176+v177+v178+v179+v180;\n+    sum +=v181+v182+v183+v184+v185+v186+v187+v188+v189+v190;\n+    sum +=v191+v192+v193+v194+v195+v196+v197+v198+v199+v200;\n+    sum +=v201+v202+v203+v204+v205+v206+v207+v208+v209+v210;\n+    sum +=v211+v212+v213+v214+v215+v216+v217+v218+v219+v220;\n+    sum +=v231+v232+v233+v234+v235+v236+v237+v238+v239+v240;\n+    sum +=v241+v242+v243+v244+v245+v246+v247+v248+v249+v250;\n+    sum +=v251+v252+v253+v254+v255+v256+v257+v258+v259+v260;\n+    sum +=v261+v262+v263+v264+v265+v266+v267+v268+v269+v270;\n+    sum +=v271+v272+v273+v274+v275+v276+v277+v278+v279+v280;\n+    sum +=v281+v282+v283+v284+v285+v286+v287+v288+v289+v290;\n+    sum +=v291+v292+v293+v294+v295+v296+v297+v298+v299+v300;\n+\n+    sum_before = sum;\n+  }\n+\n+ test(); \n+\n+ {\n+   int sum( 0 );\n+   sum +=v1+v2+v3+v4+v5+v6+v7+v8+v9+v10;\n+   sum +=v11+v12+v13+v14+v15+v16+v17+v18+v19+v20;\n+   sum +=v21+v22+v23+v24+v25+v26+v27+v28+v29+v30;\n+   sum +=v31+v32+v33+v34+v35+v36+v37+v38+v39+v40;\n+   sum +=v41+v42+v43+v44+v45+v46+v47+v48+v49+v50;\n+   sum +=v51+v52+v53+v54+v55+v56+v57+v58+v59+v60;\n+   sum +=v61+v62+v63+v64+v65+v66+v67+v68+v69+v70;\n+   sum +=v71+v72+v73+v74+v75+v76+v77+v78+v79+v80;\n+   sum +=v81+v82+v83+v84+v85+v86+v87+v88+v89+v90;\n+   sum +=v91+v92+v93+v94+v95+v96+v97+v98+v99+v100;\n+   sum +=v101+v102+v103+v104+v105+v106+v107+v108+v109+v110;\n+   sum +=v111+v112+v113+v114+v115+v116+v117+v118+v119+v120;\n+   sum +=v121+v122+v123+v124+v125+v126+v127+v128+v129+v130;\n+   sum +=v131+v132+v133+v134+v135+v136+v137+v138+v139+v140;\n+   sum +=v141+v142+v143+v144+v145+v146+v147+v148+v149+v150;\n+   sum +=v151+v152+v153+v154+v155+v156+v157+v158+v159+v160;\n+   sum +=v161+v162+v163+v164+v165+v166+v167+v168+v169+v170;\n+   sum +=v171+v172+v173+v174+v175+v176+v177+v178+v179+v180;\n+   sum +=v181+v182+v183+v184+v185+v186+v187+v188+v189+v190;\n+   sum +=v191+v192+v193+v194+v195+v196+v197+v198+v199+v200;\n+   sum +=v201+v202+v203+v204+v205+v206+v207+v208+v209+v210;\n+   sum +=v211+v212+v213+v214+v215+v216+v217+v218+v219+v220;\n+   sum +=v231+v232+v233+v234+v235+v236+v237+v238+v239+v240;\n+   sum +=v241+v242+v243+v244+v245+v246+v247+v248+v249+v250;\n+   sum +=v251+v252+v253+v254+v255+v256+v257+v258+v259+v260;\n+   sum +=v261+v262+v263+v264+v265+v266+v267+v268+v269+v270;\n+   sum +=v271+v272+v273+v274+v275+v276+v277+v278+v279+v280;\n+   sum +=v281+v282+v283+v284+v285+v286+v287+v288+v289+v290;\n+   sum +=v291+v292+v293+v294+v295+v296+v297+v298+v299+v300;\n+\n+   sum_after = sum; \n+ }\n+\n+  return sum_before != sum_after;\n+}"}]}