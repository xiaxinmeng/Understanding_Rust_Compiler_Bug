{"sha": "558c362ad07e050c56a3439a5c99ce8683c2e30a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU4YzM2MmFkMDdlMDUwYzU2YTM0MzlhNWM5OWNlODY4M2MyZTMwYQ==", "commit": {"author": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2011-09-08T07:28:11Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2011-09-08T07:28:11Z"}, "message": "make darwin port a little more cross & cross native build friendly.\n\n\t*config/darwin-driver.c (darwin_find_version_from_kernel): New routine \n\tcut from ... (darwin_default_min_version): Amended to provide defaults\n\tfor the cross directory case.\n\t(darwin_driver_init): call darwin_default_min_version unconditionally.\n\t* config/darwin.h (DEF_MIN_OSX_VERSION): New.\n\t* config/darwin9.h: Likewise.\n\t* config/darwin10.h: Likewise.\n\t* config/rs6000/darwin7.h: Likewise.\n\nFrom-SVN: r178679", "tree": {"sha": "06d697fa843ff19e4d248a5c918961536bab857e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06d697fa843ff19e4d248a5c918961536bab857e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/558c362ad07e050c56a3439a5c99ce8683c2e30a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/558c362ad07e050c56a3439a5c99ce8683c2e30a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/558c362ad07e050c56a3439a5c99ce8683c2e30a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/558c362ad07e050c56a3439a5c99ce8683c2e30a/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c6a85e33bc6029579949a76acbb0590463d7c8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c6a85e33bc6029579949a76acbb0590463d7c8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c6a85e33bc6029579949a76acbb0590463d7c8b"}], "stats": {"total": 157, "additions": 104, "deletions": 53}, "files": [{"sha": "d7fc0f014bfdf573bcf1a59479df7a0347444329", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/558c362ad07e050c56a3439a5c99ce8683c2e30a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/558c362ad07e050c56a3439a5c99ce8683c2e30a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=558c362ad07e050c56a3439a5c99ce8683c2e30a", "patch": "@@ -1,3 +1,14 @@\n+2011-09-08  Iain Sandoe  <iains@gcc.gnu.org>\n+\n+\t*config/darwin-driver.c (darwin_find_version_from_kernel): New routine \n+\tcut from ... (darwin_default_min_version): Amended to provide defaults\n+\tfor the cross directory case.\n+\t(darwin_driver_init): call darwin_default_min_version unconditionally.\n+\t* config/darwin.h (DEF_MIN_OSX_VERSION): New.\n+\t* config/darwin9.h: Likewise.\n+\t* config/darwin10.h: Likewise.\n+\t* config/rs6000/darwin7.h: Likewise.\n+\n 2011-09-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/50310"}, {"sha": "48eaf191c5451f3cc8c404775c4d48db447c7065", "filename": "gcc/config/darwin-driver.c", "status": "modified", "additions": 79, "deletions": 53, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/558c362ad07e050c56a3439a5c99ce8683c2e30a/gcc%2Fconfig%2Fdarwin-driver.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/558c362ad07e050c56a3439a5c99ce8683c2e30a/gcc%2Fconfig%2Fdarwin-driver.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-driver.c?ref=558c362ad07e050c56a3439a5c99ce8683c2e30a", "patch": "@@ -29,9 +29,74 @@ along with GCC; see the file COPYING3.  If not see\n #include <sys/sysctl.h>\n #include \"xregex.h\"\n \n+static bool\n+darwin_find_version_from_kernel (char *new_flag)\n+{\n+  char osversion[32];\n+  size_t osversion_len = sizeof (osversion) - 1;\n+  static int osversion_name[2] = { CTL_KERN, KERN_OSRELEASE };\n+  int major_vers;\n+  char minor_vers[6];\n+  char * version_p;\n+  char * version_pend;\n+\n+  /* Determine the version of the running OS.  If we can't, warn user,\n+     and do nothing.  */\n+  if (sysctl (osversion_name, ARRAY_SIZE (osversion_name), osversion,\n+\t      &osversion_len, NULL, 0) == -1)\n+    {\n+      warning (0, \"sysctl for kern.osversion failed: %m\");\n+      return false;\n+    }\n+\n+  /* Try to parse the first two parts of the OS version number.  Warn\n+     user and return if it doesn't make sense.  */\n+  if (! ISDIGIT (osversion[0]))\n+    goto parse_failed;\n+  major_vers = osversion[0] - '0';\n+  version_p = osversion + 1;\n+  if (ISDIGIT (*version_p))\n+    major_vers = major_vers * 10 + (*version_p++ - '0');\n+  if (major_vers > 4 + 9)\n+    goto parse_failed;\n+  if (*version_p++ != '.')\n+    goto parse_failed;\n+  version_pend = strchr(version_p, '.');\n+  if (!version_pend)\n+    goto parse_failed;\n+  if (! ISDIGIT (*version_p))\n+    goto parse_failed;\n+  strncpy(minor_vers, version_p, version_pend - version_p);\n+  minor_vers[version_pend - version_p] = '\\0';\n+  \n+  /* The major kernel version number is 4 plus the second OS version\n+     component.  */\n+  if (major_vers - 4 <= 4)\n+    /* On 10.4 and earlier, the old linker is used which does not\n+       support three-component system versions.  */\n+    sprintf (new_flag, \"10.%d\", major_vers - 4);\n+  else\n+    sprintf (new_flag, \"10.%d.%s\", major_vers - 4,\n+\t     minor_vers);\n+\n+  return true;\n+\n+ parse_failed:\n+  warning (0, \"couldn%'t understand kern.osversion %q.*s\",\n+\t   (int) osversion_len, osversion);\n+  return false;\n+}\n+\n+#endif\n+\n /* When running on a Darwin system and using that system's headers and\n    libraries, default the -mmacosx-version-min flag to be the version\n-   of the system on which the compiler is running.  */\n+   of the system on which the compiler is running.  \n+   \n+   When building cross or native cross compilers, default to the OSX\n+   version of the target (as provided by the most specific target header\n+   included in tm.h).  This may be overidden by setting the flag explicitly\n+   (or by the MACOSX_DEPLOYMENT_TARGET environment).  */\n \n static void\n darwin_default_min_version (unsigned int *decoded_options_count,\n@@ -40,13 +105,6 @@ darwin_default_min_version (unsigned int *decoded_options_count,\n   const unsigned int argc = *decoded_options_count;\n   struct cl_decoded_option *const argv = *decoded_options;\n   unsigned int i;\n-  char osversion[32];\n-  size_t osversion_len = sizeof (osversion) - 1;\n-  static int osversion_name[2] = { CTL_KERN, KERN_OSRELEASE };\n-  char * version_p;\n-  char * version_pend;\n-  int major_vers;\n-  char minor_vers[6];\n   static char new_flag[sizeof (\"10.0.0\") + 6];\n \n   /* If the command-line is empty, just return.  */\n@@ -82,44 +140,20 @@ darwin_default_min_version (unsigned int *decoded_options_count,\n       }\n   }\n \n-  /* Determine the version of the running OS.  If we can't, warn user,\n-     and do nothing.  */\n-  if (sysctl (osversion_name, ARRAY_SIZE (osversion_name), osversion,\n-\t      &osversion_len, NULL, 0) == -1)\n-    {\n-      warning (0, \"sysctl for kern.osversion failed: %m\");\n-      return;\n-    }\n+#ifndef CROSS_DIRECTORY_STRUCTURE\n \n-  /* Try to parse the first two parts of the OS version number.  Warn\n-     user and return if it doesn't make sense.  */\n-  if (! ISDIGIT (osversion[0]))\n-    goto parse_failed;\n-  major_vers = osversion[0] - '0';\n-  version_p = osversion + 1;\n-  if (ISDIGIT (*version_p))\n-    major_vers = major_vers * 10 + (*version_p++ - '0');\n-  if (major_vers > 4 + 9)\n-    goto parse_failed;\n-  if (*version_p++ != '.')\n-    goto parse_failed;\n-  version_pend = strchr(version_p, '.');\n-  if (!version_pend)\n-    goto parse_failed;\n-  if (! ISDIGIT (*version_p))\n-    goto parse_failed;\n-  strncpy(minor_vers, version_p, version_pend - version_p);\n-  minor_vers[version_pend - version_p] = '\\0';\n-  \n-  /* The major kernel version number is 4 plus the second OS version\n-     component.  */\n-  if (major_vers - 4 <= 4)\n-    /* On 10.4 and earlier, the old linker is used which does not\n-       support three-component system versions.  */\n-    sprintf (new_flag, \"10.%d\", major_vers - 4);\n-  else\n-    sprintf (new_flag, \"10.%d.%s\", major_vers - 4,\n-\t     minor_vers);\n+ /* Try to find the version from the kernel, if we fail - we print a message \n+    and give up.  */\n+ if (!darwin_find_version_from_kernel (new_flag))\n+   return;\n+\n+#else\n+\n+ /* For cross-compilers, default to the target OS version. */\n+\n+ strncpy (new_flag, DEF_MIN_OSX_VERSION, sizeof (new_flag));\n+\n+#endif /* CROSS_DIRECTORY_STRUCTURE */\n \n   /* Add the new flag.  */\n   ++*decoded_options_count;\n@@ -132,14 +166,8 @@ darwin_default_min_version (unsigned int *decoded_options_count,\n \t  (argc - 1) * sizeof (struct cl_decoded_option));\n   return;\n   \n- parse_failed:\n-  warning (0, \"couldn%'t understand kern.osversion %q.*s\",\n-\t   (int) osversion_len, osversion);\n-  return;\n }\n \n-#endif /* CROSS_DIRECTORY_STRUCTURE */\n-\n /* Translate -filelist and -framework options in *DECODED_OPTIONS\n    (size *DECODED_OPTIONS_COUNT) to use -Xlinker so that they are\n    considered to be linker inputs in the case that no other inputs are\n@@ -192,7 +220,5 @@ darwin_driver_init (unsigned int *decoded_options_count,\n \t}\n     }\n \n-#ifndef CROSS_DIRECTORY_STRUCTURE\n   darwin_default_min_version (decoded_options_count, decoded_options);\n-#endif\n }"}, {"sha": "0c8f2769abe7995b695bf4969074d1f9ddad4ef7", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/558c362ad07e050c56a3439a5c99ce8683c2e30a/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/558c362ad07e050c56a3439a5c99ce8683c2e30a/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=558c362ad07e050c56a3439a5c99ce8683c2e30a", "patch": "@@ -945,4 +945,8 @@ extern void darwin_driver_init (unsigned int *,struct cl_decoded_option **);\n #undef SUPPORTS_INIT_PRIORITY\n #define SUPPORTS_INIT_PRIORITY 0\n \n+/* When building cross-compilers (and native crosses) we shall default to \n+   providing an osx-version-min of this unless overridden by the User.  */\n+#define DEF_MIN_OSX_VERSION \"10.4\"\n+\n #endif /* CONFIG_DARWIN_H */"}, {"sha": "d393a03c5acf3368312e27b6cb9718c31f07cf7a", "filename": "gcc/config/darwin10.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/558c362ad07e050c56a3439a5c99ce8683c2e30a/gcc%2Fconfig%2Fdarwin10.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/558c362ad07e050c56a3439a5c99ce8683c2e30a/gcc%2Fconfig%2Fdarwin10.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin10.h?ref=558c362ad07e050c56a3439a5c99ce8683c2e30a", "patch": "@@ -27,3 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n \"%:version-compare(>= 10.6 mmacosx-version-min= -no_compact_unwind) \\\n    %{!static:%{!static-libgcc: \\\n       %:version-compare(>= 10.6 mmacosx-version-min= -lSystem) } } %G %L\"\n+\n+#undef DEF_MIN_OSX_VERSION\n+#define DEF_MIN_OSX_VERSION \"10.6\""}, {"sha": "3b479122411603cee18a30b6aa7b4d1a32706260", "filename": "gcc/config/darwin9.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/558c362ad07e050c56a3439a5c99ce8683c2e30a/gcc%2Fconfig%2Fdarwin9.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/558c362ad07e050c56a3439a5c99ce8683c2e30a/gcc%2Fconfig%2Fdarwin9.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin9.h?ref=558c362ad07e050c56a3439a5c99ce8683c2e30a", "patch": "@@ -51,3 +51,7 @@ along with GCC; see the file COPYING3.  If not see\n     fprintf ((FILE), \",\"HOST_WIDE_INT_PRINT_UNSIGNED\",%u\\n\",\t\t\\\n \t     _new_size, floor_log2 ((ALIGN) / BITS_PER_UNIT));\t\t\\\n   } while (0)\n+\n+#undef DEF_MIN_OSX_VERSION\n+#define DEF_MIN_OSX_VERSION \"10.5\"\n+"}, {"sha": "90603872a38c0cb924fc3312b8ef5147fd1ff43d", "filename": "gcc/config/rs6000/darwin7.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/558c362ad07e050c56a3439a5c99ce8683c2e30a/gcc%2Fconfig%2Frs6000%2Fdarwin7.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/558c362ad07e050c56a3439a5c99ce8683c2e30a/gcc%2Fconfig%2Frs6000%2Fdarwin7.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin7.h?ref=558c362ad07e050c56a3439a5c99ce8683c2e30a", "patch": "@@ -28,3 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #define LIB_SPEC \"%{!static:\\\n   %:version-compare(!< 10.3 mmacosx-version-min= -lmx)\\\n   -lSystem}\"\n+\n+#undef DEF_MIN_OSX_VERSION\n+#define DEF_MIN_OSX_VERSION \"10.3.9\""}]}