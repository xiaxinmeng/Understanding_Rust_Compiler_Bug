{"sha": "20adfc6c1cdc9ab49f9c930e52c1bb1ca4e2f433", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBhZGZjNmMxY2RjOWFiNDlmOWM5MzBlNTJjMWJiMWNhNGUyZjQzMw==", "commit": {"author": {"name": "Christian Bruel", "email": "christian.bruel@st.com", "date": "2015-09-15T13:46:57Z"}, "committer": {"name": "Christian Bruel", "email": "chrbr@gcc.gnu.org", "date": "2015-09-15T13:46:57Z"}, "message": "arm.c (TARGET_OPTION_PRINT): Define.\n\n2015-09-15  Christian Bruel  <christian.bruel@st.com>\n\n\t* config/arm/arm.c (TARGET_OPTION_PRINT): Define.\n\t(arm_option_print): New function.\n\nFrom-SVN: r227796", "tree": {"sha": "624f5489f8689cb58ea384591e73c2ad339da2e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/624f5489f8689cb58ea384591e73c2ad339da2e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20adfc6c1cdc9ab49f9c930e52c1bb1ca4e2f433", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20adfc6c1cdc9ab49f9c930e52c1bb1ca4e2f433", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20adfc6c1cdc9ab49f9c930e52c1bb1ca4e2f433", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20adfc6c1cdc9ab49f9c930e52c1bb1ca4e2f433/comments", "author": null, "committer": null, "parents": [{"sha": "c8b6aa7c12ab17f947bba5295d010f6f05be2383", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8b6aa7c12ab17f947bba5295d010f6f05be2383", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8b6aa7c12ab17f947bba5295d010f6f05be2383"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "fda0151c22e017307cad0cf9cf89dbe49b194689", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20adfc6c1cdc9ab49f9c930e52c1bb1ca4e2f433/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20adfc6c1cdc9ab49f9c930e52c1bb1ca4e2f433/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=20adfc6c1cdc9ab49f9c930e52c1bb1ca4e2f433", "patch": "@@ -1,3 +1,8 @@\n+2015-09-15  Christian Bruel  <christian.bruel@st.com>\n+\n+\t* config/arm/arm.c (TARGET_OPTION_PRINT): Define.\n+\t(arm_option_print): New function.\n+\n 2015-09-15  Christian Bruel  <christian.bruel@st.com>\n \n \tPR target/52144\n@@ -7,7 +12,7 @@\n \t* config/arm/arm.h (TARGET_32BIT_P, TARGET_ARM_QBIT_P)\n \t(TARGET_ARM_SAT_P, TARGET_IDIV_P, TARGET_HAVE_LDREX_P)\n \t(TARGET_HAVE_LDREXBH_P, TARGET_HAVE_LDREXD_P, TARGET_DSP_MULTIPLY_P)\n-\t(TARGET_ARM_FEATURE_LDREX_P, TARGET_INT_SIMD_P): Redefine macros with:\n+\t(TARGET_ARM_FEATURE_LDREX_P, TARGET_INT_SIMD_P): Redefine macros with...\n \t(TARGET_ARM_SAT, TARGET_IDIV, TARGET_HAVE_LDREX)\n \t(TARGET_HAVE_LDREXBH, TARGET_HAVE_LDREXD, TARGET_ARM_FEATURE_LDREX)\n \t(TARGET_DSP_MULTIPLY, TARGET_INT_SIMD): Redefined macros."}, {"sha": "e5d1a458921ab2dbf6c32639324aef1ce351c9fb", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20adfc6c1cdc9ab49f9c930e52c1bb1ca4e2f433/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20adfc6c1cdc9ab49f9c930e52c1bb1ca4e2f433/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=20adfc6c1cdc9ab49f9c930e52c1bb1ca4e2f433", "patch": "@@ -245,6 +245,7 @@ static tree arm_build_builtin_va_list (void);\n static void arm_expand_builtin_va_start (tree, rtx);\n static tree arm_gimplify_va_arg_expr (tree, tree, gimple_seq *, gimple_seq *);\n static void arm_option_override (void);\n+static void arm_option_print (FILE *, int, struct cl_target_option *);\n static void arm_set_current_function (tree);\n static bool arm_can_inline_p (tree, tree);\n static bool arm_valid_target_attribute_p (tree, tree, tree, int);\n@@ -405,6 +406,9 @@ static const struct attribute_spec arm_attribute_table[] =\n #undef  TARGET_OPTION_OVERRIDE\n #define TARGET_OPTION_OVERRIDE arm_option_override\n \n+#undef TARGET_OPTION_PRINT\n+#define TARGET_OPTION_PRINT arm_option_print\n+\n #undef  TARGET_COMP_TYPE_ATTRIBUTES\n #define TARGET_COMP_TYPE_ATTRIBUTES arm_comp_type_attributes\n \n@@ -29483,6 +29487,19 @@ arm_set_current_function (tree fndecl)\n   arm_option_params_internal ();\n }\n \n+/* Implement TARGET_OPTION_PRINT.  */\n+\n+static void\n+arm_option_print (FILE *file, int indent, struct cl_target_option *ptr)\n+{\n+  int flags = ptr->x_target_flags;\n+\n+  fprintf (file, \"%*sselected arch %s\\n\", indent, \"\",\n+\t   TARGET_THUMB2_P (flags) ? \"thumb2\" :\n+\t   TARGET_THUMB_P (flags) ? \"thumb1\" :\n+\t   \"arm\");\n+}\n+\n /* Hook to determine if one function can safely inline another.  */\n \n static bool"}]}