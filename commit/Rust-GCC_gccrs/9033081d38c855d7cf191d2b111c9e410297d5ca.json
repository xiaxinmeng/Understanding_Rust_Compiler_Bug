{"sha": "9033081d38c855d7cf191d2b111c9e410297d5ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTAzMzA4MWQzOGM4NTVkN2NmMTkxZDJiMTExYzllNDEwMjk3ZDVjYQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-01-25T00:24:18Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-01-25T00:24:18Z"}, "message": "(store_split_bit_field):  For BYTES_BIG_ENDIAN, only\npad on left if value not in memory.\n\nFrom-SVN: r6429", "tree": {"sha": "6e93201056b7b67d8e37669e4c71b3aaf0e618d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e93201056b7b67d8e37669e4c71b3aaf0e618d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9033081d38c855d7cf191d2b111c9e410297d5ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9033081d38c855d7cf191d2b111c9e410297d5ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9033081d38c855d7cf191d2b111c9e410297d5ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9033081d38c855d7cf191d2b111c9e410297d5ca/comments", "author": null, "committer": null, "parents": [{"sha": "648a09eed9f2b429e36353da9f603e79caa6c18e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/648a09eed9f2b429e36353da9f603e79caa6c18e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/648a09eed9f2b429e36353da9f603e79caa6c18e"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "f20fb1868759fd8f4e68175c2c74bbfdacefc16d", "filename": "gcc/expmed.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9033081d38c855d7cf191d2b111c9e410297d5ca/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9033081d38c855d7cf191d2b111c9e410297d5ca/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=9033081d38c855d7cf191d2b111c9e410297d5ca", "patch": "@@ -721,11 +721,19 @@ store_split_bit_field (op0, bitsize, bitpos, value, align)\n \t\t\t >> (bitsize - bitsdone - thissize))\n \t\t\t& (((HOST_WIDE_INT) 1 << thissize) - 1));\n       else\n-\t/* The args are chosen so that the last part\n-\t   includes the lsb.  */\n-\tpart = extract_fixed_bit_field (word_mode, value, 0, thissize,\n-\t\t\t\t\tBITS_PER_WORD - bitsize + bitsdone,\n-\t\t\t\t\tNULL_RTX, 1, align);\n+\t{\n+\t  /* The args are chosen so that the last part\n+\t     includes the lsb.  */\n+\t  int bit_offset = 0;\n+\t  /* If the value isn't in memory, then it must be right aligned\n+\t     if a register, so skip past the padding on the left.  If it\n+\t     is in memory, then there is no padding on the left.  */\n+\t  if (GET_CODE (value) != MEM)\n+\t    bit_offset = BITS_PER_WORD - bitsize;\n+\t  part = extract_fixed_bit_field (word_mode, value, 0, thissize,\n+\t\t\t\t\t  bit_offset + bitsdone,\n+\t\t\t\t\t  NULL_RTX, 1, align);\n+\t}\n #else\n       /* Fetch successively more significant portions.  */\n       if (GET_CODE (value) == CONST_INT)"}]}