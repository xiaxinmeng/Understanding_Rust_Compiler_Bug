{"sha": "745443787599147145baf2c0cdfe8ef463944a9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ1NDQzNzg3NTk5MTQ3MTQ1YmFmMmMwY2RmZThlZjQ2Mzk0NGE5Yw==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2011-11-09T18:25:58Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2011-11-09T18:25:58Z"}, "message": "Configure cleanup.\n\n2011-11-09  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\t* configure.ac (AC_STDC_HEADERS): Remove.\n\t(AC_HEADER_TIME): Remove.\n\t(AC_HAVE_HEADERS, AC_CHECK_HEADERS): Move into a single invocation\n\tof AC_CHECK_HEADERS_ONCE, don't check for presence of C89 headers.\n\t(AC_CHECK_MEMBERS): Use single invocation.\n\t(AC_CHECK_FUNCS): Move into single invocation of\n\tAC_CHEC_FUNCS_ONCE, don't check for presence of C89 functions.\n\t* config.h.in: Regenerate.\n\t* configure: Regenerate.\n\t* intrinsics/clock.c: Include time.h.\n\t(mclock): Assume clock() is present.\n\t(mclock8): Likewise.\n\t* intrinsics/ctime.c (strctime): Assume strftime is present.\n\t(fdate): Assume time() is present.\n\t(fdate_sub): Likewise.\n\t(ctime): Likewise.\n\t* intrinsics/date_and_time.c: Don't provide abs macro.\n\t(HAVE_NO_DATE_TIME): Remove code related to macro which is never\n\tset.\n\t* intrinsics/execute_command_line.c: Assume stdlib.h is present.\n\t* intrinsics/exit.c: Likewise.\n\t* intrinsics/extends_type_of.c: Likewise.\n\t* intrinsics/gerror.c: Assume strerror() is present.\n\t* intrinsics/kill.c: Assume signal.h is present.\n\t* intrinsics/malloc.c: Assume stdlib.h is present.\n\t* intrinsics/move_alloc.c: Likewise.\n\t* intrinsics/perror.c: Assume perror() is present.\n\t* intrinsics/signal.c: Assume signal.h is present.\n\t* intrinsics/stat.c: Assume stdlib.h is present.\n\t* intrinsics/system.c: Likewise.\n\t* intrinsics/time.c: Include time.h, assume time() is present.\n\t* intrinsics/time_1.h: Conditionally include sys/time.h,\n\tunconditionally time.h.\n\t(gf_cputime): Do division in double, fallback using clock().\n\t(gf_gettime): Assume time() is present.\n\t* intrinsics/umask.c: Assume stdlib.h is present.\n\t* runtime/backtrace.c: Likewise.\n\t* runtime/compile_options.c: Assume signal.h is present, assume\n\tC89 signals are present.\n\t* runtime/error.c: Assume signal.h and stdlib.h are present.\n\nFrom-SVN: r181227", "tree": {"sha": "8b9c2e9bcc9e893681a7abd25852a18d141f8f6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b9c2e9bcc9e893681a7abd25852a18d141f8f6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/745443787599147145baf2c0cdfe8ef463944a9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/745443787599147145baf2c0cdfe8ef463944a9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/745443787599147145baf2c0cdfe8ef463944a9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/745443787599147145baf2c0cdfe8ef463944a9c/comments", "author": null, "committer": null, "parents": [{"sha": "4b6245331eca422062484f2f92f3bd8b4f868804", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b6245331eca422062484f2f92f3bd8b4f868804", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b6245331eca422062484f2f92f3bd8b4f868804"}], "stats": {"total": 1002, "additions": 265, "deletions": 737}, "files": [{"sha": "f299ccba63325d56820775c67ee6373488743131", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=745443787599147145baf2c0cdfe8ef463944a9c", "patch": "@@ -1,3 +1,46 @@\n+2011-11-09  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* configure.ac (AC_STDC_HEADERS): Remove.\n+\t(AC_HEADER_TIME): Remove.\n+\t(AC_HAVE_HEADERS, AC_CHECK_HEADERS): Move into a single invocation\n+\tof AC_CHECK_HEADERS_ONCE, don't check for presence of C89 headers.\n+\t(AC_CHECK_MEMBERS): Use single invocation.\n+\t(AC_CHECK_FUNCS): Move into single invocation of\n+\tAC_CHEC_FUNCS_ONCE, don't check for presence of C89 functions.\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* intrinsics/clock.c: Include time.h.\n+\t(mclock): Assume clock() is present.\n+\t(mclock8): Likewise.\n+\t* intrinsics/ctime.c (strctime): Assume strftime is present.\n+\t(fdate): Assume time() is present.\n+\t(fdate_sub): Likewise.\n+\t(ctime): Likewise.\n+\t* intrinsics/date_and_time.c: Don't provide abs macro.\n+\t(HAVE_NO_DATE_TIME): Remove code related to macro which is never\n+\tset.\n+\t* intrinsics/execute_command_line.c: Assume stdlib.h is present.\n+\t* intrinsics/exit.c: Likewise.\n+\t* intrinsics/extends_type_of.c: Likewise.\n+\t* intrinsics/gerror.c: Assume strerror() is present.\n+\t* intrinsics/kill.c: Assume signal.h is present.\n+\t* intrinsics/malloc.c: Assume stdlib.h is present.\n+\t* intrinsics/move_alloc.c: Likewise.\n+\t* intrinsics/perror.c: Assume perror() is present.\n+\t* intrinsics/signal.c: Assume signal.h is present.\n+\t* intrinsics/stat.c: Assume stdlib.h is present.\n+\t* intrinsics/system.c: Likewise.\n+\t* intrinsics/time.c: Include time.h, assume time() is present.\n+\t* intrinsics/time_1.h: Conditionally include sys/time.h,\n+\tunconditionally time.h.\n+\t(gf_cputime): Do division in double, fallback using clock().\n+\t(gf_gettime): Assume time() is present.\n+\t* intrinsics/umask.c: Assume stdlib.h is present.\n+\t* runtime/backtrace.c: Likewise.\n+\t* runtime/compile_options.c: Assume signal.h is present, assume\n+\tC89 signals are present.\n+\t* runtime/error.c: Assume signal.h and stdlib.h are present.\n+\n 2011-11-09  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR fortran/46686"}, {"sha": "81a4a7fb4550c5c34a049d67358f4aa54199ebb7", "filename": "libgfortran/config.h.in", "status": "modified", "additions": 6, "deletions": 42, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig.h.in?ref=745443787599147145baf2c0cdfe8ef463944a9c", "patch": "@@ -198,9 +198,6 @@\n /* Define to 1 if you have the `chsize' function. */\n #undef HAVE_CHSIZE\n \n-/* Define to 1 if you have the `clock' function. */\n-#undef HAVE_CLOCK\n-\n /* Define to 1 if you have the `clock_gettime' function. */\n #undef HAVE_CLOCK_GETTIME\n \n@@ -228,7 +225,7 @@\n /* Define to 1 if you have the `close' function. */\n #undef HAVE_CLOSE\n \n-/* complex.h exists */\n+/* Define to 1 if you have the <complex.h> header file. */\n #undef HAVE_COMPLEX_H\n \n /* libm includes copysign */\n@@ -381,9 +378,6 @@\n /* Define to 1 if you have the <floatingpoint.h> header file. */\n #undef HAVE_FLOATINGPOINT_H\n \n-/* Define to 1 if you have the <float.h> header file. */\n-#undef HAVE_FLOAT_H\n-\n /* libm includes floor */\n #undef HAVE_FLOOR\n \n@@ -435,10 +429,10 @@\n /* Define to 1 if you have the `getcwd' function. */\n #undef HAVE_GETCWD\n \n-/* libc includes geteuid */\n+/* Define to 1 if you have the `geteuid' function. */\n #undef HAVE_GETEUID\n \n-/* libc includes getgid */\n+/* Define to 1 if you have the `getgid' function. */\n #undef HAVE_GETGID\n \n /* Define to 1 if you have the `gethostname' function. */\n@@ -450,10 +444,10 @@\n /* Define to 1 if you have the `getlogin' function. */\n #undef HAVE_GETLOGIN\n \n-/* libc includes getpid */\n+/* Define to 1 if you have the `getpid' function. */\n #undef HAVE_GETPID\n \n-/* libc includes getppid */\n+/* Define to 1 if you have the `getppid' function. */\n #undef HAVE_GETPPID\n \n /* Define to 1 if you have the `getpwuid' function. */\n@@ -471,7 +465,7 @@\n /* Define to 1 if you have the `gettimeofday' function. */\n #undef HAVE_GETTIMEOFDAY\n \n-/* libc includes getuid */\n+/* Define to 1 if you have the `getuid' function. */\n #undef HAVE_GETUID\n \n /* Define to 1 if you have the `gmtime_r' function. */\n@@ -606,9 +600,6 @@\n /* libm includes nextafterl */\n #undef HAVE_NEXTAFTERL\n \n-/* Define to 1 if you have the `perror' function. */\n-#undef HAVE_PERROR\n-\n /* Define to 1 if you have the `pipe' function. */\n #undef HAVE_PIPE\n \n@@ -654,12 +645,6 @@\n /* Define to 1 if you have the `setmode' function. */\n #undef HAVE_SETMODE\n \n-/* Define to 1 if you have the `signal' function. */\n-#undef HAVE_SIGNAL\n-\n-/* Define to 1 if you have the <signal.h> header file. */\n-#undef HAVE_SIGNAL_H\n-\n /* libm includes sin */\n #undef HAVE_SIN\n \n@@ -696,30 +681,18 @@\n /* Define to 1 if you have the `stat' function. */\n #undef HAVE_STAT\n \n-/* Define to 1 if you have the <stdarg.h> header file. */\n-#undef HAVE_STDARG_H\n-\n /* Define to 1 if you have the <stdint.h> header file. */\n #undef HAVE_STDINT_H\n \n-/* Define to 1 if you have the <stdio.h> header file. */\n-#undef HAVE_STDIO_H\n-\n /* Define to 1 if you have the <stdlib.h> header file. */\n #undef HAVE_STDLIB_H\n \n /* Define to 1 if you have the `strcasestr' function. */\n #undef HAVE_STRCASESTR\n \n-/* Define to 1 if you have the `strerror' function. */\n-#undef HAVE_STRERROR\n-\n /* Define to 1 if you have the `strerror_r' function. */\n #undef HAVE_STRERROR_R\n \n-/* Define to 1 if you have the `strftime' function. */\n-#undef HAVE_STRFTIME\n-\n /* Define to 1 if you have the <strings.h> header file. */\n #undef HAVE_STRINGS_H\n \n@@ -792,15 +765,9 @@\n /* libm includes tgammal */\n #undef HAVE_TGAMMAL\n \n-/* Define to 1 if you have the `time' function. */\n-#undef HAVE_TIME\n-\n /* Define to 1 if you have the `times' function. */\n #undef HAVE_TIMES\n \n-/* Define to 1 if you have the <time.h> header file. */\n-#undef HAVE_TIME_H\n-\n /* libm includes trunc */\n #undef HAVE_TRUNC\n \n@@ -907,9 +874,6 @@\n /* Define to 1 if the target supports #pragma weak */\n #undef SUPPORTS_WEAK\n \n-/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */\n-#undef TIME_WITH_SYS_TIME\n-\n /* Enable extensions on AIX 3, Interix.  */\n #ifndef _ALL_SOURCE\n # undef _ALL_SOURCE"}, {"sha": "c39b003e9e4b0d2bfd772ec7d5432e6e8108301a", "filename": "libgfortran/configure", "status": "modified", "additions": 147, "deletions": 453, "changes": 600, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=745443787599147145baf2c0cdfe8ef463944a9c", "patch": "@@ -597,6 +597,8 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n+ac_header_list=\n+ac_func_list=\n ac_c_werror_flag=\n ac_subst_vars='am__EXEEXT_FALSE\n am__EXEEXT_TRUE\n@@ -2528,6 +2530,68 @@ $as_echo \"$as_me: creating cache $cache_file\" >&6;}\n   >$cache_file\n fi\n \n+as_fn_append ac_header_list \" unistd.h\"\n+as_fn_append ac_header_list \" sys/time.h\"\n+as_fn_append ac_header_list \" sys/times.h\"\n+as_fn_append ac_header_list \" sys/resource.h\"\n+as_fn_append ac_header_list \" sys/types.h\"\n+as_fn_append ac_header_list \" sys/stat.h\"\n+as_fn_append ac_header_list \" sys/wait.h\"\n+as_fn_append ac_header_list \" floatingpoint.h\"\n+as_fn_append ac_header_list \" ieeefp.h\"\n+as_fn_append ac_header_list \" fenv.h\"\n+as_fn_append ac_header_list \" fptrap.h\"\n+as_fn_append ac_header_list \" pwd.h\"\n+as_fn_append ac_header_list \" complex.h\"\n+as_fn_append ac_func_list \" getrusage\"\n+as_fn_append ac_func_list \" times\"\n+as_fn_append ac_func_list \" mkstemp\"\n+as_fn_append ac_func_list \" strtof\"\n+as_fn_append ac_func_list \" strtold\"\n+as_fn_append ac_func_list \" snprintf\"\n+as_fn_append ac_func_list \" ftruncate\"\n+as_fn_append ac_func_list \" chsize\"\n+as_fn_append ac_func_list \" chdir\"\n+as_fn_append ac_func_list \" getlogin\"\n+as_fn_append ac_func_list \" gethostname\"\n+as_fn_append ac_func_list \" kill\"\n+as_fn_append ac_func_list \" link\"\n+as_fn_append ac_func_list \" symlink\"\n+as_fn_append ac_func_list \" sleep\"\n+as_fn_append ac_func_list \" ttyname\"\n+as_fn_append ac_func_list \" alarm\"\n+as_fn_append ac_func_list \" access\"\n+as_fn_append ac_func_list \" fork\"\n+as_fn_append ac_func_list \" execl\"\n+as_fn_append ac_func_list \" wait\"\n+as_fn_append ac_func_list \" setmode\"\n+as_fn_append ac_func_list \" execve\"\n+as_fn_append ac_func_list \" pipe\"\n+as_fn_append ac_func_list \" dup2\"\n+as_fn_append ac_func_list \" close\"\n+as_fn_append ac_func_list \" fdopen\"\n+as_fn_append ac_func_list \" strcasestr\"\n+as_fn_append ac_func_list \" getrlimit\"\n+as_fn_append ac_func_list \" gettimeofday\"\n+as_fn_append ac_func_list \" stat\"\n+as_fn_append ac_func_list \" fstat\"\n+as_fn_append ac_func_list \" lstat\"\n+as_fn_append ac_func_list \" getpwuid\"\n+as_fn_append ac_func_list \" vsnprintf\"\n+as_fn_append ac_func_list \" dup\"\n+as_fn_append ac_func_list \" getcwd\"\n+as_fn_append ac_func_list \" localtime_r\"\n+as_fn_append ac_func_list \" gmtime_r\"\n+as_fn_append ac_func_list \" strerror_r\"\n+as_fn_append ac_func_list \" getpwuid_r\"\n+as_fn_append ac_func_list \" ttyname_r\"\n+as_fn_append ac_func_list \" clock_gettime\"\n+as_fn_append ac_func_list \" readlink\"\n+as_fn_append ac_func_list \" getgid\"\n+as_fn_append ac_func_list \" getpid\"\n+as_fn_append ac_func_list \" getppid\"\n+as_fn_append ac_func_list \" getuid\"\n+as_fn_append ac_func_list \" geteuid\"\n # Check that the precious variables saved in the cache have kept the same\n # value.\n ac_cache_corrupted=false\n@@ -12254,7 +12318,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12257 \"configure\"\n+#line 12321 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12360,7 +12424,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12363 \"configure\"\n+#line 12427 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15871,216 +15935,51 @@ _ACEOF\n fi\n \n \n-# check header files\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ANSI C header files\" >&5\n-$as_echo_n \"checking for ANSI C header files... \" >&6; }\n-if test \"${ac_cv_header_stdc+set}\" = set; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-#include <stdlib.h>\n-#include <stdarg.h>\n-#include <string.h>\n-#include <float.h>\n+# check header files (we assume C89 is available, so don't check for that)\n \n-int\n-main ()\n-{\n \n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_compile \"$LINENO\"; then :\n-  ac_cv_header_stdc=yes\n-else\n-  ac_cv_header_stdc=no\n-fi\n-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-\n-if test $ac_cv_header_stdc = yes; then\n-  # SunOS 4.x string.h does not declare mem*, contrary to ANSI.\n-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-#include <string.h>\n \n+  for ac_header in $ac_header_list\n+do :\n+  as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\n+ac_fn_c_check_header_compile \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\n+\"\n+eval as_val=\\$$as_ac_Header\n+   if test \"x$as_val\" = x\"\"yes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define `$as_echo \"HAVE_$ac_header\" | $as_tr_cpp` 1\n _ACEOF\n-if (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n-  $EGREP \"memchr\" >/dev/null 2>&1; then :\n \n-else\n-  ac_cv_header_stdc=no\n fi\n-rm -f conftest*\n \n-fi\n+done\n \n-if test $ac_cv_header_stdc = yes; then\n-  # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.\n-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-#include <stdlib.h>\n \n-_ACEOF\n-if (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n-  $EGREP \"free\" >/dev/null 2>&1; then :\n \n-else\n-  ac_cv_header_stdc=no\n-fi\n-rm -f conftest*\n \n-fi\n \n-if test $ac_cv_header_stdc = yes; then\n-  # /bin/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.\n-  if test \"$cross_compiling\" = yes; then :\n-  :\n-else\n-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-#include <ctype.h>\n-#include <stdlib.h>\n-#if ((' ' & 0x0FF) == 0x020)\n-# define ISLOWER(c) ('a' <= (c) && (c) <= 'z')\n-# define TOUPPER(c) (ISLOWER(c) ? 'A' + ((c) - 'a') : (c))\n-#else\n-# define ISLOWER(c) \\\n-\t\t   (('a' <= (c) && (c) <= 'i') \\\n-\t\t     || ('j' <= (c) && (c) <= 'r') \\\n-\t\t     || ('s' <= (c) && (c) <= 'z'))\n-# define TOUPPER(c) (ISLOWER(c) ? ((c) | 0x40) : (c))\n-#endif\n \n-#define XOR(e, f) (((e) && !(f)) || (!(e) && (f)))\n-int\n-main ()\n-{\n-  int i;\n-  for (i = 0; i < 256; i++)\n-    if (XOR (islower (i), ISLOWER (i))\n-\t|| toupper (i) != TOUPPER (i))\n-      return 2;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_run \"$LINENO\"; then :\n \n-else\n-  ac_cv_header_stdc=no\n-fi\n-rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n-  conftest.$ac_objext conftest.beam conftest.$ac_ext\n-fi\n \n-fi\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_header_stdc\" >&5\n-$as_echo \"$ac_cv_header_stdc\" >&6; }\n-if test $ac_cv_header_stdc = yes; then\n \n-$as_echo \"#define STDC_HEADERS 1\" >>confdefs.h\n \n-fi\n \n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether time.h and sys/time.h may both be included\" >&5\n-$as_echo_n \"checking whether time.h and sys/time.h may both be included... \" >&6; }\n-if test \"${ac_cv_header_time+set}\" = set; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-#include <sys/types.h>\n-#include <sys/time.h>\n-#include <time.h>\n \n-int\n-main ()\n-{\n-if ((struct tm *) 0)\n-return 0;\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_compile \"$LINENO\"; then :\n-  ac_cv_header_time=yes\n-else\n-  ac_cv_header_time=no\n-fi\n-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_header_time\" >&5\n-$as_echo \"$ac_cv_header_time\" >&6; }\n-if test $ac_cv_header_time = yes; then\n \n-$as_echo \"#define TIME_WITH_SYS_TIME 1\" >>confdefs.h\n \n-fi\n \n-for ac_header in stdio.h stdlib.h string.h unistd.h signal.h stdarg.h\n-do :\n-  as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\n-ac_fn_c_check_header_mongrel \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\"\n-eval as_val=\\$$as_ac_Header\n-   if test \"x$as_val\" = x\"\"yes; then :\n-  cat >>confdefs.h <<_ACEOF\n-#define `$as_echo \"HAVE_$ac_header\" | $as_tr_cpp` 1\n-_ACEOF\n \n-fi\n \n-done\n \n-for ac_header in time.h sys/time.h sys/times.h sys/resource.h\n-do :\n-  as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\n-ac_fn_c_check_header_mongrel \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\"\n-eval as_val=\\$$as_ac_Header\n-   if test \"x$as_val\" = x\"\"yes; then :\n-  cat >>confdefs.h <<_ACEOF\n-#define `$as_echo \"HAVE_$ac_header\" | $as_tr_cpp` 1\n-_ACEOF\n \n-fi\n \n-done\n \n-for ac_header in sys/types.h sys/stat.h sys/wait.h floatingpoint.h ieeefp.h\n-do :\n-  as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\n-ac_fn_c_check_header_mongrel \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\"\n-eval as_val=\\$$as_ac_Header\n-   if test \"x$as_val\" = x\"\"yes; then :\n-  cat >>confdefs.h <<_ACEOF\n-#define `$as_echo \"HAVE_$ac_header\" | $as_tr_cpp` 1\n-_ACEOF\n \n-fi\n \n-done\n \n-for ac_header in fenv.h fptrap.h float.h pwd.h\n-do :\n-  as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\n-ac_fn_c_check_header_mongrel \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\"\n-eval as_val=\\$$as_ac_Header\n-   if test \"x$as_val\" = x\"\"yes; then :\n-  cat >>confdefs.h <<_ACEOF\n-#define `$as_echo \"HAVE_$ac_header\" | $as_tr_cpp` 1\n-_ACEOF\n \n-fi\n \n-done\n \n-ac_fn_c_check_header_mongrel \"$LINENO\" \"complex.h\" \"ac_cv_header_complex_h\" \"$ac_includes_default\"\n-if test \"x$ac_cv_header_complex_h\" = x\"\"yes; then :\n-\n-$as_echo \"#define HAVE_COMPLEX_H 1\" >>confdefs.h\n-\n-fi\n \n \n \n@@ -16499,7 +16398,6 @@ _ACEOF\n \n \n fi\n-\n ac_fn_c_check_member \"$LINENO\" \"struct stat\" \"st_blocks\" \"ac_cv_member_struct_stat_st_blocks\" \"$ac_includes_default\"\n if test \"x$ac_cv_member_struct_stat_st_blocks\" = x\"\"yes; then :\n \n@@ -16509,7 +16407,6 @@ _ACEOF\n \n \n fi\n-\n ac_fn_c_check_member \"$LINENO\" \"struct stat\" \"st_rdev\" \"ac_cv_member_struct_stat_st_rdev\" \"$ac_includes_default\"\n if test \"x$ac_cv_member_struct_stat_st_rdev\" = x\"\"yes; then :\n \n@@ -16522,20 +16419,10 @@ fi\n \n \n # Check for library functions.\n-for ac_func in getrusage times mkstemp strtof strtold snprintf ftruncate chsize\n-do :\n-  as_ac_var=`$as_echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n-ac_fn_c_check_func \"$LINENO\" \"$ac_func\" \"$as_ac_var\"\n-eval as_val=\\$$as_ac_var\n-   if test \"x$as_val\" = x\"\"yes; then :\n-  cat >>confdefs.h <<_ACEOF\n-#define `$as_echo \"HAVE_$ac_func\" | $as_tr_cpp` 1\n-_ACEOF\n \n-fi\n-done\n \n-for ac_func in chdir strerror getlogin gethostname kill link symlink perror\n+\n+  for ac_func in $ac_func_list\n do :\n   as_ac_var=`$as_echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n ac_fn_c_check_func \"$LINENO\" \"$ac_func\" \"$as_ac_var\"\n@@ -16548,297 +16435,104 @@ _ACEOF\n fi\n done\n \n-for ac_func in sleep time ttyname signal alarm clock access fork execl\n-do :\n-  as_ac_var=`$as_echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n-ac_fn_c_check_func \"$LINENO\" \"$ac_func\" \"$as_ac_var\"\n-eval as_val=\\$$as_ac_var\n-   if test \"x$as_val\" = x\"\"yes; then :\n-  cat >>confdefs.h <<_ACEOF\n-#define `$as_echo \"HAVE_$ac_func\" | $as_tr_cpp` 1\n-_ACEOF\n \n-fi\n-done\n \n-for ac_func in wait setmode execve pipe dup2 close fdopen strcasestr getrlimit\n-do :\n-  as_ac_var=`$as_echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n-ac_fn_c_check_func \"$LINENO\" \"$ac_func\" \"$as_ac_var\"\n-eval as_val=\\$$as_ac_var\n-   if test \"x$as_val\" = x\"\"yes; then :\n-  cat >>confdefs.h <<_ACEOF\n-#define `$as_echo \"HAVE_$ac_func\" | $as_tr_cpp` 1\n-_ACEOF\n \n-fi\n-done\n \n-for ac_func in gettimeofday stat fstat lstat getpwuid vsnprintf dup getcwd\n-do :\n-  as_ac_var=`$as_echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n-ac_fn_c_check_func \"$LINENO\" \"$ac_func\" \"$as_ac_var\"\n-eval as_val=\\$$as_ac_var\n-   if test \"x$as_val\" = x\"\"yes; then :\n-  cat >>confdefs.h <<_ACEOF\n-#define `$as_echo \"HAVE_$ac_func\" | $as_tr_cpp` 1\n-_ACEOF\n \n-fi\n-done\n \n-for ac_func in localtime_r gmtime_r strerror_r getpwuid_r ttyname_r\n-do :\n-  as_ac_var=`$as_echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n-ac_fn_c_check_func \"$LINENO\" \"$ac_func\" \"$as_ac_var\"\n-eval as_val=\\$$as_ac_var\n-   if test \"x$as_val\" = x\"\"yes; then :\n-  cat >>confdefs.h <<_ACEOF\n-#define `$as_echo \"HAVE_$ac_func\" | $as_tr_cpp` 1\n-_ACEOF\n \n-fi\n-done\n \n-for ac_func in clock_gettime strftime readlink\n-do :\n-  as_ac_var=`$as_echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n-ac_fn_c_check_func \"$LINENO\" \"$ac_func\" \"$as_ac_var\"\n-eval as_val=\\$$as_ac_var\n-   if test \"x$as_val\" = x\"\"yes; then :\n-  cat >>confdefs.h <<_ACEOF\n-#define `$as_echo \"HAVE_$ac_func\" | $as_tr_cpp` 1\n-_ACEOF\n \n-fi\n-done\n \n \n-# Check libc for getgid, getpid, getuid\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for getgid in -lc\" >&5\n-$as_echo_n \"checking for getgid in -lc... \" >&6; }\n-if test \"${ac_cv_lib_c_getgid+set}\" = set; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  ac_check_lib_save_LIBS=$LIBS\n-LIBS=\"-lc  $LIBS\"\n-if test x$gcc_no_link = xyes; then\n-  as_fn_error \"Link tests are not allowed after GCC_NO_EXECUTABLES.\" \"$LINENO\" 5\n-fi\n-cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n \n-/* Override any GCC internal prototype to avoid an error.\n-   Use char because int might match the return type of a GCC\n-   builtin and then its argument prototype would still apply.  */\n-#ifdef __cplusplus\n-extern \"C\"\n-#endif\n-char getgid ();\n-int\n-main ()\n-{\n-return getgid ();\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_link \"$LINENO\"; then :\n-  ac_cv_lib_c_getgid=yes\n-else\n-  ac_cv_lib_c_getgid=no\n-fi\n-rm -f core conftest.err conftest.$ac_objext \\\n-    conftest$ac_exeext conftest.$ac_ext\n-LIBS=$ac_check_lib_save_LIBS\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_c_getgid\" >&5\n-$as_echo \"$ac_cv_lib_c_getgid\" >&6; }\n-if test \"x$ac_cv_lib_c_getgid\" = x\"\"yes; then :\n \n-$as_echo \"#define HAVE_GETGID 1\" >>confdefs.h\n \n-fi\n \n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for getpid in -lc\" >&5\n-$as_echo_n \"checking for getpid in -lc... \" >&6; }\n-if test \"${ac_cv_lib_c_getpid+set}\" = set; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  ac_check_lib_save_LIBS=$LIBS\n-LIBS=\"-lc  $LIBS\"\n-if test x$gcc_no_link = xyes; then\n-  as_fn_error \"Link tests are not allowed after GCC_NO_EXECUTABLES.\" \"$LINENO\" 5\n-fi\n-cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n \n-/* Override any GCC internal prototype to avoid an error.\n-   Use char because int might match the return type of a GCC\n-   builtin and then its argument prototype would still apply.  */\n-#ifdef __cplusplus\n-extern \"C\"\n-#endif\n-char getpid ();\n-int\n-main ()\n-{\n-return getpid ();\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_link \"$LINENO\"; then :\n-  ac_cv_lib_c_getpid=yes\n-else\n-  ac_cv_lib_c_getpid=no\n-fi\n-rm -f core conftest.err conftest.$ac_objext \\\n-    conftest$ac_exeext conftest.$ac_ext\n-LIBS=$ac_check_lib_save_LIBS\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_c_getpid\" >&5\n-$as_echo \"$ac_cv_lib_c_getpid\" >&6; }\n-if test \"x$ac_cv_lib_c_getpid\" = x\"\"yes; then :\n \n-$as_echo \"#define HAVE_GETPID 1\" >>confdefs.h\n \n-fi\n \n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for getppid in -lc\" >&5\n-$as_echo_n \"checking for getppid in -lc... \" >&6; }\n-if test \"${ac_cv_lib_c_getppid+set}\" = set; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  ac_check_lib_save_LIBS=$LIBS\n-LIBS=\"-lc  $LIBS\"\n-if test x$gcc_no_link = xyes; then\n-  as_fn_error \"Link tests are not allowed after GCC_NO_EXECUTABLES.\" \"$LINENO\" 5\n-fi\n-cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n \n-/* Override any GCC internal prototype to avoid an error.\n-   Use char because int might match the return type of a GCC\n-   builtin and then its argument prototype would still apply.  */\n-#ifdef __cplusplus\n-extern \"C\"\n-#endif\n-char getppid ();\n-int\n-main ()\n-{\n-return getppid ();\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_link \"$LINENO\"; then :\n-  ac_cv_lib_c_getppid=yes\n-else\n-  ac_cv_lib_c_getppid=no\n-fi\n-rm -f core conftest.err conftest.$ac_objext \\\n-    conftest$ac_exeext conftest.$ac_ext\n-LIBS=$ac_check_lib_save_LIBS\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_c_getppid\" >&5\n-$as_echo \"$ac_cv_lib_c_getppid\" >&6; }\n-if test \"x$ac_cv_lib_c_getppid\" = x\"\"yes; then :\n \n-$as_echo \"#define HAVE_GETPPID 1\" >>confdefs.h\n \n-fi\n \n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for getuid in -lc\" >&5\n-$as_echo_n \"checking for getuid in -lc... \" >&6; }\n-if test \"${ac_cv_lib_c_getuid+set}\" = set; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  ac_check_lib_save_LIBS=$LIBS\n-LIBS=\"-lc  $LIBS\"\n-if test x$gcc_no_link = xyes; then\n-  as_fn_error \"Link tests are not allowed after GCC_NO_EXECUTABLES.\" \"$LINENO\" 5\n-fi\n-cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n \n-/* Override any GCC internal prototype to avoid an error.\n-   Use char because int might match the return type of a GCC\n-   builtin and then its argument prototype would still apply.  */\n-#ifdef __cplusplus\n-extern \"C\"\n-#endif\n-char getuid ();\n-int\n-main ()\n-{\n-return getuid ();\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_link \"$LINENO\"; then :\n-  ac_cv_lib_c_getuid=yes\n-else\n-  ac_cv_lib_c_getuid=no\n-fi\n-rm -f core conftest.err conftest.$ac_objext \\\n-    conftest$ac_exeext conftest.$ac_ext\n-LIBS=$ac_check_lib_save_LIBS\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_c_getuid\" >&5\n-$as_echo \"$ac_cv_lib_c_getuid\" >&6; }\n-if test \"x$ac_cv_lib_c_getuid\" = x\"\"yes; then :\n \n-$as_echo \"#define HAVE_GETUID 1\" >>confdefs.h\n \n-fi\n \n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for geteuid in -lc\" >&5\n-$as_echo_n \"checking for geteuid in -lc... \" >&6; }\n-if test \"${ac_cv_lib_c_geteuid+set}\" = set; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  ac_check_lib_save_LIBS=$LIBS\n-LIBS=\"-lc  $LIBS\"\n-if test x$gcc_no_link = xyes; then\n-  as_fn_error \"Link tests are not allowed after GCC_NO_EXECUTABLES.\" \"$LINENO\" 5\n-fi\n-cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n \n-/* Override any GCC internal prototype to avoid an error.\n-   Use char because int might match the return type of a GCC\n-   builtin and then its argument prototype would still apply.  */\n-#ifdef __cplusplus\n-extern \"C\"\n-#endif\n-char geteuid ();\n-int\n-main ()\n-{\n-return geteuid ();\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_link \"$LINENO\"; then :\n-  ac_cv_lib_c_geteuid=yes\n-else\n-  ac_cv_lib_c_geteuid=no\n-fi\n-rm -f core conftest.err conftest.$ac_objext \\\n-    conftest$ac_exeext conftest.$ac_ext\n-LIBS=$ac_check_lib_save_LIBS\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_c_geteuid\" >&5\n-$as_echo \"$ac_cv_lib_c_geteuid\" >&6; }\n-if test \"x$ac_cv_lib_c_geteuid\" = x\"\"yes; then :\n \n-$as_echo \"#define HAVE_GETEUID 1\" >>confdefs.h\n \n-fi\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n \n \n # Check for C99 (and other IEEE) math functions"}, {"sha": "74fe0c2ed3fb62d7670759dba96152290fb9196b", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 12, "deletions": 25, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=745443787599147145baf2c0cdfe8ef463944a9c", "patch": "@@ -251,35 +251,22 @@ AC_TYPE_INTPTR_T\n AC_TYPE_UINTPTR_T\n AC_CHECK_TYPES([ptrdiff_t])\n \n-# check header files\n-AC_STDC_HEADERS\n-AC_HEADER_TIME\n-AC_HAVE_HEADERS(stdio.h stdlib.h string.h unistd.h signal.h stdarg.h)\n-AC_CHECK_HEADERS(time.h sys/time.h sys/times.h sys/resource.h)\n-AC_CHECK_HEADERS(sys/types.h sys/stat.h sys/wait.h floatingpoint.h ieeefp.h)\n-AC_CHECK_HEADERS(fenv.h fptrap.h float.h pwd.h)\n-AC_CHECK_HEADER([complex.h],[AC_DEFINE([HAVE_COMPLEX_H], [1], [complex.h exists])])\n+# check header files (we assume C89 is available, so don't check for that)\n+AC_CHECK_HEADERS_ONCE(unistd.h sys/time.h sys/times.h sys/resource.h \\\n+sys/types.h sys/stat.h sys/wait.h floatingpoint.h ieeefp.h fenv.h fptrap.h \\\n+pwd.h complex.h) \n+\n GCC_HEADER_STDINT(gstdint.h)\n \n-AC_CHECK_MEMBERS([struct stat.st_blksize])\n-AC_CHECK_MEMBERS([struct stat.st_blocks])\n-AC_CHECK_MEMBERS([struct stat.st_rdev])\n+AC_CHECK_MEMBERS([struct stat.st_blksize, struct stat.st_blocks, struct stat.st_rdev])\n \n # Check for library functions.\n-AC_CHECK_FUNCS(getrusage times mkstemp strtof strtold snprintf ftruncate chsize)\n-AC_CHECK_FUNCS(chdir strerror getlogin gethostname kill link symlink perror)\n-AC_CHECK_FUNCS(sleep time ttyname signal alarm clock access fork execl)\n-AC_CHECK_FUNCS(wait setmode execve pipe dup2 close fdopen strcasestr getrlimit)\n-AC_CHECK_FUNCS(gettimeofday stat fstat lstat getpwuid vsnprintf dup getcwd)\n-AC_CHECK_FUNCS(localtime_r gmtime_r strerror_r getpwuid_r ttyname_r)\n-AC_CHECK_FUNCS(clock_gettime strftime readlink)\n-\n-# Check libc for getgid, getpid, getuid\n-AC_CHECK_LIB([c],[getgid],[AC_DEFINE([HAVE_GETGID],[1],[libc includes getgid])])\n-AC_CHECK_LIB([c],[getpid],[AC_DEFINE([HAVE_GETPID],[1],[libc includes getpid])])\n-AC_CHECK_LIB([c],[getppid],[AC_DEFINE([HAVE_GETPPID],[1],[libc includes getppid])])\n-AC_CHECK_LIB([c],[getuid],[AC_DEFINE([HAVE_GETUID],[1],[libc includes getuid])])\n-AC_CHECK_LIB([c],[geteuid],[AC_DEFINE([HAVE_GETEUID],[1],[libc includes geteuid])])\n+AC_CHECK_FUNCS_ONCE(getrusage times mkstemp strtof strtold snprintf \\\n+ftruncate chsize chdir getlogin gethostname kill link symlink sleep ttyname \\\n+alarm access fork execl wait setmode execve pipe dup2 close fdopen \\\n+strcasestr getrlimit gettimeofday stat fstat lstat getpwuid vsnprintf dup \\\n+getcwd localtime_r gmtime_r strerror_r getpwuid_r ttyname_r clock_gettime \\\n+readlink getgid getpid getppid getuid geteuid)\n \n # Check for C99 (and other IEEE) math functions\n AC_CHECK_LIB([m],[acosf],[AC_DEFINE([HAVE_ACOSF],[1],[libm includes acosf])])"}, {"sha": "29ccc15cdd603bf9370ce917fa8bb7691bfb8439", "filename": "libgfortran/intrinsics/clock.c", "status": "modified", "additions": 3, "deletions": 23, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fclock.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fclock.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fclock.c?ref=745443787599147145baf2c0cdfe8ef463944a9c", "patch": "@@ -1,8 +1,8 @@\n /* Implementation of the MCLOCK and MCLOCK8 g77 intrinsics.\n-   Copyright (C) 2006, 2007, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2006, 2007, 2009, 2011 Free Software Foundation, Inc.\n    Contributed by Fran\u00e7ois-Xavier Coudert <coudert@clipper.ens.fr>\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public\n@@ -24,19 +24,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n <http://www.gnu.org/licenses/>.  */\n \n #include \"libgfortran.h\"\n-\n-#ifdef TIME_WITH_SYS_TIME\n-#  include <sys/time.h>\n-#  include <time.h>\n-#else\n-#  if HAVE_SYS_TIME_H\n-#    include <sys/time.h>\n-#  else\n-#    ifdef HAVE_TIME_H\n-#      include <time.h>\n-#    endif\n-#  endif\n-#endif\n+#include <time.h>\n \n \n /* INTEGER(KIND=4) FUNCTION MCLOCK()  */\n@@ -47,11 +35,7 @@ export_proto(mclock);\n GFC_INTEGER_4\n mclock (void)\n {\n-#ifdef HAVE_CLOCK\n   return (GFC_INTEGER_4) clock ();\n-#else\n-  return (GFC_INTEGER_4) -1;\n-#endif\n }\n \n \n@@ -63,10 +47,6 @@ export_proto(mclock8);\n GFC_INTEGER_8\n mclock8 (void)\n {\n-#ifdef HAVE_CLOCK\n   return (GFC_INTEGER_8) clock ();\n-#else\n-  return (GFC_INTEGER_8) -1;\n-#endif\n }\n "}, {"sha": "05bf31fc779d77859646400a3e63ea23348aac4e", "filename": "libgfortran/intrinsics/ctime.c", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fctime.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fctime.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fctime.c?ref=745443787599147145baf2c0cdfe8ef463944a9c", "patch": "@@ -39,7 +39,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n static size_t\n strctime (char *s, size_t max, const time_t *timep)\n {\n-#ifdef HAVE_STRFTIME\n   struct tm ltm;\n   int failed;\n   /* Some targets provide a localtime_r based on a draft of the POSIX\n@@ -52,9 +51,6 @@ strctime (char *s, size_t max, const time_t *timep)\n   if (failed)\n     return 0;\n   return strftime (s, max, \"%c\", &ltm);\n-#else\n-  return 0;\n-#endif\n }\n \n /* In the default locale, the date and time representation fits in 26\n@@ -67,15 +63,9 @@ export_proto(fdate);\n void\n fdate (char ** date, gfc_charlen_type * date_len)\n {\n-#if defined(HAVE_TIME)\n   time_t now = time(NULL);\n   *date = get_mem (CSZ);\n   *date_len = strctime (*date, CSZ, &now);\n-#else\n-\n-  *date = NULL;\n-  *date_len = 0;\n-#endif\n }\n \n \n@@ -85,15 +75,11 @@ export_proto(fdate_sub);\n void\n fdate_sub (char * date, gfc_charlen_type date_len)\n {\n-#if defined(HAVE_TIME)\n   time_t now = time(NULL);\n   char *s = get_mem (date_len + 1);\n   size_t n = strctime (s, date_len + 1, &now);\n   fstrcpy (date, date_len, s, n);\n   free (s);\n-#else\n-  memset (date, ' ', date_len);\n-#endif\n }\n \n \n@@ -104,15 +90,9 @@ export_proto_np(PREFIX(ctime));\n void\n PREFIX(ctime) (char ** date, gfc_charlen_type * date_len, GFC_INTEGER_8 t)\n {\n-#if defined(HAVE_TIME)\n   time_t now = t;\n   *date = get_mem (CSZ);\n   *date_len = strctime (*date, CSZ, &now);\n-#else\n-\n-  *date = NULL;\n-  *date_len = 0;\n-#endif\n }\n \n "}, {"sha": "3c386363df4207fed5932feeddb0a0caccd52102", "filename": "libgfortran/intrinsics/date_and_time.c", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fdate_and_time.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fdate_and_time.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fdate_and_time.c?ref=745443787599147145baf2c0cdfe8ef463944a9c", "patch": "@@ -31,10 +31,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #include \"time_1.h\"\n \n-#ifndef abs\n-#define abs(x) ((x)>=0 ? (x) : -(x))\n-#endif\n-\n \n /* If the re-entrant version of gmtime is not available, provide a\n    fallback implementation.  On some targets where the _r version is\n@@ -143,7 +139,6 @@ date_and_time (char *__date, char *__time, char *__zone,\n   char zone[ZONE_LEN + 1];\n   GFC_INTEGER_4 values[VALUES_SIZE];\n \n-#ifndef HAVE_NO_DATE_TIME\n   time_t lt;\n   struct tm local_time;\n   struct tm UTC_time;\n@@ -193,21 +188,6 @@ date_and_time (char *__date, char *__time, char *__zone,\n       for (i = 0; i < VALUES_SIZE; i++)\n \tvalues[i] = - GFC_INTEGER_4_HUGE;\n     }   \n-#else /* if defined HAVE_NO_DATE_TIME  */\n-  /* We really have *nothing* to return, so return blanks and HUGE(0).  */\n-      \n-  memset (date, ' ', DATE_LEN);\n-  date[DATE_LEN] = '\\0';\n-\n-  memset (timec, ' ', TIME_LEN);\n-  timec[TIME_LEN] = '\\0';\n-\n-  memset (zone, ' ', ZONE_LEN);\n-  zone[ZONE_LEN] = '\\0';\n-\n-  for (i = 0; i < VALUES_SIZE; i++)\n-    values[i] = - GFC_INTEGER_4_HUGE;\n-#endif  /* HAVE_NO_DATE_TIME  */\n \n   /* Copy the values into the arguments.  */\n   if (__values)\n@@ -321,7 +301,6 @@ secnds (GFC_REAL_4 *x)\n static void\n itime0 (int x[3])\n {\n-#ifndef HAVE_NO_DATE_TIME\n   time_t lt;\n   struct tm local_time;\n \n@@ -335,9 +314,6 @@ itime0 (int x[3])\n       x[1] = local_time.tm_min;\n       x[2] = local_time.tm_sec;\n     }\n-#else\n-  x[0] = x[1] = x[2] = -1;\n-#endif\n }\n \n extern void itime_i4 (gfc_array_i4 *);\n@@ -403,7 +379,6 @@ itime_i8 (gfc_array_i8 *__values)\n static void\n idate0 (int x[3])\n {\n-#ifndef HAVE_NO_DATE_TIME\n   time_t lt;\n   struct tm local_time;\n \n@@ -417,9 +392,6 @@ idate0 (int x[3])\n       x[1] = 1 + local_time.tm_mon;\n       x[2] = 1900 + local_time.tm_year;\n     }\n-#else\n-  x[0] = x[1] = x[2] = -1;\n-#endif\n }\n \n extern void idate_i4 (gfc_array_i4 *);"}, {"sha": "25eb4a3e6b8aed6c4386edb5177bf270ef73d79f", "filename": "libgfortran/intrinsics/execute_command_line.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fexecute_command_line.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fexecute_command_line.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fexecute_command_line.c?ref=745443787599147145baf2c0cdfe8ef463944a9c", "patch": "@@ -1,5 +1,5 @@\n /* Implementation of the EXECUTE_COMMAND_LINE intrinsic.\n-   Copyright (C) 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2009, 2011 Free Software Foundation, Inc.\n    Contributed by Fran\u00c3\u00a7ois-Xavier Coudert.\n \n This file is part of the GNU Fortran runtime library (libgfortran).\n@@ -26,10 +26,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n #include <string.h>\n #include <stdbool.h>\n-\n-#ifdef HAVE_STDLIB_H\n #include <stdlib.h>\n-#endif\n+\n #ifdef HAVE_UNISTD_H\n #include <unistd.h>\n #endif"}, {"sha": "c7da497997036d260cb913a533f86c1ef8217751", "filename": "libgfortran/intrinsics/exit.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fexit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fexit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fexit.c?ref=745443787599147145baf2c0cdfe8ef463944a9c", "patch": "@@ -1,8 +1,8 @@\n /* Implementation of the EXIT intrinsic.\n-   Copyright (C) 2004, 2007, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2007, 2009, 2011 Free Software Foundation, Inc.\n    Contributed by Steven G. Kargl <kargls@comcast.net>.\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public\n@@ -25,10 +25,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n \n #include \"libgfortran.h\"\n-\n-#ifdef HAVE_STDLIB_H\n #include <stdlib.h>\n-#endif\n+\n \n /* SUBROUTINE EXIT(STATUS)\n    INTEGER, INTENT(IN), OPTIONAL :: STATUS  */"}, {"sha": "223423428d572817e8f81622d3113c3a8dc50de6", "filename": "libgfortran/intrinsics/extends_type_of.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fextends_type_of.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fextends_type_of.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fextends_type_of.c?ref=745443787599147145baf2c0cdfe8ef463944a9c", "patch": "@@ -1,8 +1,8 @@\n /* Implementation of the EXTENDS_TYPE_OF intrinsic.\n-   Copyright (C) 2004, 2007, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2007, 2009, 2011 Free Software Foundation, Inc.\n    Contributed by Janus Weil <janus@gcc.gnu.org>.\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public\n@@ -25,10 +25,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n \n #include \"libgfortran.h\"\n-\n-#ifdef HAVE_STDLIB_H\n #include <stdlib.h>\n-#endif\n \n \n typedef struct vtype"}, {"sha": "492f7af118fd6dac2a7ad66776ae87b9e4d6f609", "filename": "libgfortran/intrinsics/gerror.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fgerror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fgerror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fgerror.c?ref=745443787599147145baf2c0cdfe8ef463944a9c", "patch": "@@ -1,8 +1,8 @@\n /* Implementation of the GERROR g77 intrinsic.\n-   Copyright (C) 2005, 2007, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2007, 2009, 2011 Free Software Foundation, Inc.\n    Contributed by Fran\u00e7ois-Xavier Coudert <coudert@clipper.ens.fr>\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public\n@@ -33,7 +33,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n    message corresponding to the last system error (C errno).\n    CHARACTER(len=*), INTENT(OUT) :: MESSAGE  */\n \n-#ifdef HAVE_STRERROR\n void PREFIX(gerror) (char *, gfc_charlen_type);\n export_proto_np(PREFIX(gerror));\n \n@@ -56,4 +55,3 @@ PREFIX(gerror) (char * msg, gfc_charlen_type msg_len)\n   if (msg_len > p_len)\n     memset (&msg[p_len], ' ', msg_len - p_len);\n }\n-#endif"}, {"sha": "be36b00aa1c0f1a6c2e470373d5d143071ac5750", "filename": "libgfortran/intrinsics/kill.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fkill.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fkill.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fkill.c?ref=745443787599147145baf2c0cdfe8ef463944a9c", "patch": "@@ -1,8 +1,8 @@\n /* Implementation of the KILL g77 intrinsic.\n-   Copyright (C) 2005, 2007, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2007, 2009, 2011 Free Software Foundation, Inc.\n    Contributed by Fran\u00e7ois-Xavier Coudert <coudert@clipper.ens.fr>\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public\n@@ -25,10 +25,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #include \"libgfortran.h\"\n #include <errno.h>\n-\n-#ifdef HAVE_SIGNAL_H\n #include <signal.h>\n-#endif\n+\n \n /* SUBROUTINE KILL(PID, SIGNAL, STATUS)\n    INTEGER, INTENT(IN) :: PID, SIGNAL"}, {"sha": "5edc1be8e09b1b7ee6f9d262248183c157606486", "filename": "libgfortran/intrinsics/malloc.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fmalloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fmalloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fmalloc.c?ref=745443787599147145baf2c0cdfe8ef463944a9c", "patch": "@@ -1,8 +1,8 @@\n /* Implementation of the MALLOC and FREE intrinsics\n-   Copyright (C) 2005, 2007, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2007, 2009, 2011 Free Software Foundation, Inc.\n    Contributed by Fran\u00e7ois-Xavier Coudert <coudert@clipper.ens.fr>\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public\n@@ -24,10 +24,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n <http://www.gnu.org/licenses/>.  */\n \n #include \"libgfortran.h\"\n-\n-#ifdef HAVE_STDLIB_H\n #include <stdlib.h>\n-#endif\n+\n \n extern void PREFIX(free) (void **);\n export_proto_np(PREFIX(free));"}, {"sha": "7b489ade4c79954b6a2681a8ec25a240127e4df0", "filename": "libgfortran/intrinsics/move_alloc.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fmove_alloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fmove_alloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fmove_alloc.c?ref=745443787599147145baf2c0cdfe8ef463944a9c", "patch": "@@ -1,8 +1,8 @@\n /* Generic implementation of the MOVE_ALLOC intrinsic\n-   Copyright (C) 2006, 2007, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2006, 2007, 2009, 2011 Free Software Foundation, Inc.\n    Contributed by Paul Thomas\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public\n@@ -24,10 +24,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n <http://www.gnu.org/licenses/>.  */\n \n #include \"libgfortran.h\"\n-\n-#ifdef HAVE_STDLIB_H\n #include <stdlib.h>\n-#endif\n+\n \n extern void move_alloc (gfc_array_char *, gfc_array_char *);\n export_proto(move_alloc);"}, {"sha": "bb203c4f7ec75f3916c3143d3e70e18e25fd6a3d", "filename": "libgfortran/intrinsics/perror.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fperror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fperror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fperror.c?ref=745443787599147145baf2c0cdfe8ef463944a9c", "patch": "@@ -1,8 +1,8 @@\n /* Implementation of the PERROR intrinsic.\n-   Copyright (C) 2005, 2007, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2007, 2009, 2011 Free Software Foundation, Inc.\n    Contributed by Fran\u00e7ois-Xavier Coudert <coudert@clipper.ens.fr>\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public\n@@ -31,7 +31,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n /* SUBROUTINE PERROR(STRING)\n    CHARACTER(len=*), INTENT(IN) :: STRING   */\n \n-#ifdef HAVE_PERROR\n extern void perror_sub (char *, gfc_charlen_type);\n iexport_proto(perror_sub);\n \n@@ -52,4 +51,3 @@ perror_sub (char *string, gfc_charlen_type string_len)\n   perror (str);\n }\n iexport(perror_sub);\n-#endif"}, {"sha": "85179ee30faa11646e94fe59c566e16683b3aee2", "filename": "libgfortran/intrinsics/signal.c", "status": "modified", "additions": 6, "deletions": 20, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fsignal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fsignal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fsignal.c?ref=745443787599147145baf2c0cdfe8ef463944a9c", "patch": "@@ -1,8 +1,8 @@\n /* Implementation of the SIGNAL and ALARM g77 intrinsics\n-   Copyright (C) 2005, 2007, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2007, 2009, 2011 Free Software Foundation, Inc.\n    Contributed by Fran\u00e7ois-Xavier Coudert <coudert@clipper.ens.fr>\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public\n@@ -29,9 +29,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include <unistd.h>\n #endif\n \n-#ifdef HAVE_SIGNAL_H\n #include <signal.h>\n-#endif\n \n #ifdef HAVE_INTTYPES_H\n #include <inttypes.h>\n@@ -46,7 +44,6 @@ iexport_proto(signal_sub);\n void\n signal_sub (int *number, void (*handler)(int), int *status)\n {\n-#ifdef HAVE_SIGNAL\n   intptr_t ret;\n \n   if (status != NULL)\n@@ -56,11 +53,6 @@ signal_sub (int *number, void (*handler)(int), int *status)\n     }\n   else\n     signal (*number, handler);\n-#else\n-  errno = ENOSYS;\n-  if (status != NULL)\n-    *status = -1;\n-#endif\n }\n iexport(signal_sub);\n \n@@ -72,7 +64,6 @@ iexport_proto(signal_sub_int);\n void\n signal_sub_int (int *number, int *handler, int *status)\n {\n-#ifdef HAVE_SIGNAL\n   intptr_t ptr = *handler, ret;\n \n   if (status != NULL)\n@@ -82,11 +73,6 @@ signal_sub_int (int *number, int *handler, int *status)\n     }\n   else\n     signal (*number, (void (*)(int)) ptr);\n-#else\n-  errno = ENOSYS;\n-  if (status != NULL)\n-    *status = -1;\n-#endif\n }\n iexport(signal_sub_int);\n \n@@ -129,7 +115,7 @@ alarm_sub_i4 (int * seconds __attribute__ ((unused)),\n \t      void (*handler)(int) __attribute__ ((unused)),\n \t      GFC_INTEGER_4 *status)\n {\n-#if defined (SIGALRM) && defined (HAVE_ALARM) && defined (HAVE_SIGNAL)\n+#if defined (SIGALRM) && defined (HAVE_ALARM) \n   if (status != NULL)\n     {\n       if (signal (SIGALRM, handler) == SIG_ERR)\n@@ -159,7 +145,7 @@ alarm_sub_i8 (int *seconds __attribute__ ((unused)),\n \t      void (*handler)(int) __attribute__ ((unused)),\n \t      GFC_INTEGER_8 *status)\n {\n-#if defined (SIGALRM) && defined (HAVE_ALARM) && defined (HAVE_SIGNAL)\n+#if defined (SIGALRM) && defined (HAVE_ALARM)\n   if (status != NULL)\n     {\n       if (signal (SIGALRM, handler) == SIG_ERR)\n@@ -190,7 +176,7 @@ alarm_sub_int_i4 (int *seconds __attribute__ ((unused)),\n \t\t  int *handler __attribute__ ((unused)),\n \t\t  GFC_INTEGER_4 *status)\n {\n-#if defined (SIGALRM) && defined (HAVE_ALARM) && defined (HAVE_SIGNAL)\n+#if defined (SIGALRM) && defined (HAVE_ALARM)\n   if (status != NULL)\n     {\n       if (signal (SIGALRM, (void (*)(int)) (intptr_t) *handler) == SIG_ERR)\n@@ -220,7 +206,7 @@ alarm_sub_int_i8 (int *seconds __attribute__ ((unused)),\n \t\t  int *handler __attribute__ ((unused)),\n \t\t  GFC_INTEGER_8 *status)\n {\n-#if defined (SIGALRM) && defined (HAVE_ALARM) && defined (HAVE_SIGNAL)\n+#if defined (SIGALRM) && defined (HAVE_ALARM)\n   if (status != NULL)\n     {\n       if (signal (SIGALRM, (void (*)(int)) (intptr_t) *handler) == SIG_ERR)"}, {"sha": "28821f1546d4276c5f4962f60866fb94357fa5b0", "filename": "libgfortran/intrinsics/stat.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fstat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fstat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fstat.c?ref=745443787599147145baf2c0cdfe8ef463944a9c", "patch": "@@ -1,8 +1,9 @@\n /* Implementation of the STAT and FSTAT intrinsics.\n-   Copyright (C) 2004, 2005, 2006, 2007, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2006, 2007, 2009, 2011 \n+   Free Software Foundation, Inc.\n    Contributed by Steven G. Kargl <kargls@comcast.net>.\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public\n@@ -32,9 +33,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include <sys/stat.h>\n #endif\n \n-#ifdef HAVE_STDLIB_H\n #include <stdlib.h>\n-#endif\n \n \n #ifdef HAVE_STAT"}, {"sha": "5bc083a1ad093b26abb29ad29e56991fa541c92b", "filename": "libgfortran/intrinsics/system.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fsystem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fsystem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fsystem.c?ref=745443787599147145baf2c0cdfe8ef463944a9c", "patch": "@@ -1,8 +1,8 @@\n /* Implementation of the SYSTEM intrinsic.\n-   Copyright (C) 2004, 2007, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2007, 2009, 2011 Free Software Foundation, Inc.\n    Contributed by Tobias Schl\u00fcter.\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or modify it under\n the terms of the GNU General Public License as published by the Free\n@@ -25,10 +25,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #include \"libgfortran.h\"\n #include <string.h>\n-\n-#ifdef HAVE_STDLIB_H\n #include <stdlib.h>\n-#endif\n \n extern void system_sub (const char *fcmd, GFC_INTEGER_4 * status,\n \t\t\tgfc_charlen_type cmd_len);"}, {"sha": "151466a9da019b6da94a5b7733b98db420857bdc", "filename": "libgfortran/intrinsics/time.c", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Ftime.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Ftime.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Ftime.c?ref=745443787599147145baf2c0cdfe8ef463944a9c", "patch": "@@ -1,8 +1,8 @@\n /* Implementation of the TIME and TIME8 g77 intrinsics.\n-   Copyright (C) 2005, 2007, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2007, 2009, 2011 Free Software Foundation, Inc.\n    Contributed by Fran\u00e7ois-Xavier Coudert <coudert@clipper.ens.fr>\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public\n@@ -24,24 +24,11 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n <http://www.gnu.org/licenses/>.  */\n \n #include \"libgfortran.h\"\n-\n-#ifdef TIME_WITH_SYS_TIME\n-#  include <sys/time.h>\n-#  include <time.h>\n-#else\n-#  if HAVE_SYS_TIME_H\n-#    include <sys/time.h>\n-#  else\n-#    ifdef HAVE_TIME_H\n-#      include <time.h>\n-#    endif\n-#  endif\n-#endif\n+#include <time.h>\n \n \n /* INTEGER(KIND=4) FUNCTION TIME()  */\n \n-#ifdef HAVE_TIME\n extern GFC_INTEGER_4 time_func (void);\n export_proto(time_func);\n \n@@ -61,4 +48,3 @@ time8_func (void)\n {\n   return (GFC_INTEGER_8) time (NULL);\n }\n-#endif"}, {"sha": "73977cbef617b594c359e4255a45d165cadabbea", "filename": "libgfortran/intrinsics/time_1.h", "status": "modified", "additions": 14, "deletions": 25, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Ftime_1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Ftime_1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Ftime_1.h?ref=745443787599147145baf2c0cdfe8ef463944a9c", "patch": "@@ -40,19 +40,12 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n    As usual with UNIX systems, unfortunately no single way is\n    available for all systems.  */\n \n-#ifdef TIME_WITH_SYS_TIME\n-#  include <sys/time.h>\n-#  include <time.h>\n-#else\n-#  if HAVE_SYS_TIME_H\n-#    include <sys/time.h>\n-#  else\n-#    ifdef HAVE_TIME_H\n-#      include <time.h>\n-#    endif\n-#  endif\n+#ifdef HAVE_SYS_TIME_H\n+#include <sys/time.h>\n #endif\n \n+#include <time.h>\n+\n #ifdef HAVE_SYS_TYPES_H\n      #include <sys/types.h>\n #endif\n@@ -174,20 +167,21 @@ gf_cputime (long *user_sec, long *user_usec, long *system_sec, long *system_usec\n   clock_t err;\n   err = times (&buf);\n   *user_sec = buf.tms_utime / HZ;\n-  *user_usec = buf.tms_utime % HZ * (1000000 / HZ);\n+  *user_usec = buf.tms_utime % HZ * (1000000. / HZ);\n   *system_sec = buf.tms_stime / HZ;\n-  *system_usec = buf.tms_stime % HZ * (1000000 / HZ);\n+  *system_usec = buf.tms_stime % HZ * (1000000. / HZ);\n   if ((err == (clock_t) -1) && errno != 0)\n     return -1;\n   return 0;\n \n #else \n-\n-  /* We have nothing to go on.  Return -1.  */\n-  *user_sec = *system_sec = 0;\n-  *user_usec = *system_usec = 0;\n-  errno = ENOSYS;\n-  return -1;\n+  clock_t c = clock ();\n+  *user_sec = c / CLOCKS_PER_SEC;\n+  *user_usec = c % CLOCKS_PER_SEC * (1000000. / CLOCKS_PER_SEC);\n+  *system_sec = *system_usec = 0;\n+  if (c == (clock_t) -1)\n+    return -1;\n+  return 0;\n \n #endif\n }\n@@ -218,19 +212,14 @@ gf_gettime (time_t * secs, long * usecs)\n   *secs = tv.tv_sec;\n   *usecs = tv.tv_usec;\n   return err;\n-#elif HAVE_TIME\n+#else\n   time_t t, t2;\n   t = time (&t2);\n   *secs = t2;\n   *usecs = 0;\n   if (t == ((time_t)-1))\n     return -1;\n   return 0;\n-#else\n-  *secs = 0;\n-  *usecs = 0;\n-  errno = ENOSYS;\n-  return -1;\n #endif\n }\n "}, {"sha": "d939e5de31811db4c82038b8d0edace6b1bea07e", "filename": "libgfortran/intrinsics/umask.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fumask.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fintrinsics%2Fumask.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fumask.c?ref=745443787599147145baf2c0cdfe8ef463944a9c", "patch": "@@ -1,8 +1,8 @@\n /* Implementation of the UMASK intrinsic.\n-   Copyright (C) 2004, 2007, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2007, 2009, 2011 Free Software Foundation, Inc.\n    Contributed by Steven G. Kargl <kargls@comcast.net>.\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public\n@@ -25,10 +25,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n \n #include \"libgfortran.h\"\n-\n-#ifdef HAVE_STDLIB_H\n #include <stdlib.h>\n-#endif\n \n #ifdef HAVE_SYS_STAT_H\n #include <sys/stat.h>"}, {"sha": "22150e70ce98de66f5745edeb76e22f813b3dcf8", "filename": "libgfortran/io/intrinsics.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fio%2Fintrinsics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fio%2Fintrinsics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fintrinsics.c?ref=745443787599147145baf2c0cdfe8ef463944a9c", "patch": "@@ -27,13 +27,10 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"io.h\"\n #include \"fbuf.h\"\n #include \"unix.h\"\n-\n-#ifdef HAVE_STDLIB_H\n #include <stdlib.h>\n-#endif\n-\n #include <string.h>\n \n+\n static const int five = 5;\n static const int six = 6;\n "}, {"sha": "e28bdcbc423199aec49fce02aefef32a6961be2a", "filename": "libgfortran/runtime/backtrace.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fruntime%2Fbacktrace.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fruntime%2Fbacktrace.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fbacktrace.c?ref=745443787599147145baf2c0cdfe8ef463944a9c", "patch": "@@ -25,6 +25,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n \n #include <string.h>\n+#include <stdlib.h>\n \n #ifdef HAVE_UNISTD_H\n #include <unistd.h>"}, {"sha": "0c139a2d4efb5c550d7eb2191cc6424955e48419", "filename": "libgfortran/runtime/compile_options.c", "status": "modified", "additions": 2, "deletions": 22, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fruntime%2Fcompile_options.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fruntime%2Fcompile_options.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fcompile_options.c?ref=745443787599147145baf2c0cdfe8ef463944a9c", "patch": "@@ -1,5 +1,5 @@\n /* Handling of compile-time options that influence the library.\n-   Copyright (C) 2005, 2007, 2009, 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2007, 2009, 2010, 2011 Free Software Foundation, Inc.\n \n This file is part of the GNU Fortran runtime library (libgfortran).\n \n@@ -23,10 +23,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n <http://www.gnu.org/licenses/>.  */\n \n #include \"libgfortran.h\"\n-\n-#ifdef HAVE_SIGNAL_H\n #include <signal.h>\n-#endif\n \n \n /* Useful compile-time options will be stored in here.  */\n@@ -94,32 +91,17 @@ set_options (int num, int options[])\n \n   /* If backtrace is required, we set signal handlers on the POSIX\n      2001 signals with core action.  */\n-#if defined(HAVE_SIGNAL) && (defined(SIGQUIT) || defined(SIGILL) \\\n-\t\t\t     || defined(SIGABRT) || defined(SIGFPE) \\\n-\t\t\t     || defined(SIGSEGV) || defined(SIGBUS) \\\n-\t\t\t     || defined(SIGSYS) || defined(SIGTRAP) \\\n-\t\t\t     || defined(SIGXCPU) || defined(SIGXFSZ))\n   if (compile_options.backtrace)\n     {\n #if defined(SIGQUIT)\n       signal (SIGQUIT, backtrace_handler);\n #endif\n \n-#if defined(SIGILL)\n+      /* The following 4 signals are defined by C89.  */\n       signal (SIGILL, backtrace_handler);\n-#endif\n-\n-#if defined(SIGABRT)\n       signal (SIGABRT, backtrace_handler);\n-#endif\n-\n-#if defined(SIGFPE)\n       signal (SIGFPE, backtrace_handler);\n-#endif\n-\n-#if defined(SIGSEGV)\n       signal (SIGSEGV, backtrace_handler);\n-#endif\n \n #if defined(SIGBUS)\n       signal (SIGBUS, backtrace_handler);\n@@ -143,8 +125,6 @@ set_options (int num, int options[])\n \n       maybe_find_addr2line ();\n     }\n-#endif\n-\n }\n \n "}, {"sha": "7e523bc9a573110dd80ab67983e6cd982b1a49bb", "filename": "libgfortran/runtime/error.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fruntime%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745443787599147145baf2c0cdfe8ef463944a9c/libgfortran%2Fruntime%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Ferror.c?ref=745443787599147145baf2c0cdfe8ef463944a9c", "patch": "@@ -28,18 +28,13 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include <assert.h>\n #include <string.h>\n #include <errno.h>\n-\n-#ifdef HAVE_SIGNAL_H\n #include <signal.h>\n-#endif\n \n #ifdef HAVE_UNISTD_H\n #include <unistd.h>\n #endif\n \n-#ifdef HAVE_STDLIB_H\n #include <stdlib.h>\n-#endif\n \n #ifdef HAVE_SYS_TIME_H\n #include <sys/time.h>\n@@ -172,9 +167,7 @@ sys_abort (void)\n       || (options.backtrace == -1 && compile_options.backtrace == 1))\n     {\n       show_backtrace ();\n-#if defined(HAVE_SIGNAL) && defined(SIGABRT)\n       signal (SIGABRT, SIG_DFL);\n-#endif\n     }\n \n   abort();"}]}