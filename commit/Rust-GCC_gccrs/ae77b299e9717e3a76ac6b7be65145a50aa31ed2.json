{"sha": "ae77b299e9717e3a76ac6b7be65145a50aa31ed2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU3N2IyOTllOTcxN2UzYTc2YWM2YjdiZTY1MTQ1YTUwYWEzMWVkMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-12-08T17:14:08Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-04-28T09:38:07Z"}, "message": "[Ada] Assert failure on complex code with private type and discriminant\n\ngcc/ada/\n\n\t* einfo.adb (Discriminant_Constraint): Refine assertion.", "tree": {"sha": "70af9f0efeb43485749e7e4e7dc462bad48f37fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70af9f0efeb43485749e7e4e7dc462bad48f37fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae77b299e9717e3a76ac6b7be65145a50aa31ed2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae77b299e9717e3a76ac6b7be65145a50aa31ed2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae77b299e9717e3a76ac6b7be65145a50aa31ed2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae77b299e9717e3a76ac6b7be65145a50aa31ed2/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2e59934c4f79791b337470e9ef7c34ef66b1b49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2e59934c4f79791b337470e9ef7c34ef66b1b49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2e59934c4f79791b337470e9ef7c34ef66b1b49"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "471aea345a9ad49ac780a27af3e59b4f4b296606", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae77b299e9717e3a76ac6b7be65145a50aa31ed2/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae77b299e9717e3a76ac6b7be65145a50aa31ed2/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=ae77b299e9717e3a76ac6b7be65145a50aa31ed2", "patch": "@@ -1120,7 +1120,9 @@ package body Einfo is\n \n    function Discriminant_Constraint (Id : E) return L is\n    begin\n-      pragma Assert (Is_Composite_Type (Id) and then Has_Discriminants (Id));\n+      pragma Assert\n+        (Is_Composite_Type (Id)\n+          and then (Has_Discriminants (Id) or else Is_Constrained (Id)));\n       return Elist21 (Id);\n    end Discriminant_Constraint;\n "}]}