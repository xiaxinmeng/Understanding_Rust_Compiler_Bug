{"sha": "3d8fb311338b191231790252e91889984995055c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q4ZmIzMTEzMzhiMTkxMjMxNzkwMjUyZTkxODg5OTg0OTk1MDU1Yw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-01-25T15:32:02Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-01-25T15:32:02Z"}, "message": "re PR middle-end/83977 (ICE in simd_clone_clauses_extract, at omp-simd-clone.c:184)\n\n\tPR middle-end/83977\n\t* ipa-fnsummary.c (compute_fn_summary): Clear can_change_signature\n\ton functions with #pragma omp declare simd or functions with simd\n\tattribute.\n\t* omp-simd-clone.c (expand_simd_clones): Revert 2018-01-24 change.\n\t* config/i386/i386.c (ix86_simd_clone_compute_vecsize_and_simdlen):\n\tRemove trailing \\n from warning_at calls.\n\n\t* c-c++-common/gomp/pr83977-1.c: Add -w to dg-options.\n\nFrom-SVN: r257051", "tree": {"sha": "ea08e295ac3e2e477df6b91ded05628b494e5109", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea08e295ac3e2e477df6b91ded05628b494e5109"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d8fb311338b191231790252e91889984995055c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d8fb311338b191231790252e91889984995055c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d8fb311338b191231790252e91889984995055c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d8fb311338b191231790252e91889984995055c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "58078de77b2b22bb36d28daf2a7fe79397d5f057", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58078de77b2b22bb36d28daf2a7fe79397d5f057", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58078de77b2b22bb36d28daf2a7fe79397d5f057"}], "stats": {"total": 31, "additions": 23, "deletions": 8}, "files": [{"sha": "65ef87ad44b3a51a83e552acbd80e78bf863f8fc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d8fb311338b191231790252e91889984995055c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d8fb311338b191231790252e91889984995055c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d8fb311338b191231790252e91889984995055c", "patch": "@@ -1,3 +1,13 @@\n+2018-01-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/83977\n+\t* ipa-fnsummary.c (compute_fn_summary): Clear can_change_signature\n+\ton functions with #pragma omp declare simd or functions with simd\n+\tattribute.\n+\t* omp-simd-clone.c (expand_simd_clones): Revert 2018-01-24 change.\n+\t* config/i386/i386.c (ix86_simd_clone_compute_vecsize_and_simdlen):\n+\tRemove trailing \\n from warning_at calls.\n+\n 2018-01-25  Tom de Vries  <tom@codesourcery.com>\n \n \tPR target/84028"}, {"sha": "6a49c1a161014443f9e3eb57047ed593f06ab36e", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d8fb311338b191231790252e91889984995055c/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d8fb311338b191231790252e91889984995055c/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=3d8fb311338b191231790252e91889984995055c", "patch": "@@ -50224,7 +50224,7 @@ ix86_simd_clone_compute_vecsize_and_simdlen (struct cgraph_node *node,\n \tbreak;\n       default:\n \twarning_at (DECL_SOURCE_LOCATION (node->decl), 0,\n-\t\t    \"unsupported return type %qT for simd\\n\", ret_type);\n+\t\t    \"unsupported return type %qT for simd\", ret_type);\n \treturn 0;\n       }\n \n@@ -50246,7 +50246,7 @@ ix86_simd_clone_compute_vecsize_and_simdlen (struct cgraph_node *node,\n \tbreak;\n       default:\n \twarning_at (DECL_SOURCE_LOCATION (node->decl), 0,\n-\t\t    \"unsupported argument type %qT for simd\\n\", TREE_TYPE (t));\n+\t\t    \"unsupported argument type %qT for simd\", TREE_TYPE (t));\n \treturn 0;\n       }\n "}, {"sha": "bdf9ba1c9215253906ff34d02938ec0b1b0c28f7", "filename": "gcc/ipa-fnsummary.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d8fb311338b191231790252e91889984995055c/gcc%2Fipa-fnsummary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d8fb311338b191231790252e91889984995055c/gcc%2Fipa-fnsummary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-fnsummary.c?ref=3d8fb311338b191231790252e91889984995055c", "patch": "@@ -2467,7 +2467,11 @@ compute_fn_summary (struct cgraph_node *node, bool early)\n \t info->inlinable = tree_inlinable_function_p (node->decl);\n \n        /* Type attributes can use parameter indices to describe them.  */\n-       if (TYPE_ATTRIBUTES (TREE_TYPE (node->decl)))\n+       if (TYPE_ATTRIBUTES (TREE_TYPE (node->decl))\n+\t   /* Likewise for #pragma omp declare simd functions or functions\n+\t      with simd attribute.  */\n+\t   || lookup_attribute (\"omp declare simd\",\n+\t\t\t\tDECL_ATTRIBUTES (node->decl)))\n \t node->local.can_change_signature = false;\n        else\n \t {"}, {"sha": "b7737a258248fbe20967bc1e2d7f961592ef93a0", "filename": "gcc/omp-simd-clone.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d8fb311338b191231790252e91889984995055c/gcc%2Fomp-simd-clone.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d8fb311338b191231790252e91889984995055c/gcc%2Fomp-simd-clone.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-simd-clone.c?ref=3d8fb311338b191231790252e91889984995055c", "patch": "@@ -1574,10 +1574,6 @@ expand_simd_clones (struct cgraph_node *node)\n   tree attr = lookup_attribute (\"omp declare simd\",\n \t\t\t\tDECL_ATTRIBUTES (node->decl));\n   if (attr == NULL_TREE\n-      /* Ignore artificial decls with an abstract origin, results of function\n-\t cloning, versioning etc.  We want to handle certain builtins\n-\t with simd attribute, like __builtin_sin.  */\n-      || (DECL_ARTIFICIAL (node->decl) && DECL_ABSTRACT_ORIGIN (node->decl))\n       || node->global.inlined_to\n       || lookup_attribute (\"noclone\", DECL_ATTRIBUTES (node->decl)))\n     return;"}, {"sha": "8493bcdadd63403d19da1ecf58493588f0b62e09", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d8fb311338b191231790252e91889984995055c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d8fb311338b191231790252e91889984995055c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3d8fb311338b191231790252e91889984995055c", "patch": "@@ -1,3 +1,8 @@\n+2018-01-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/83977\n+\t* c-c++-common/gomp/pr83977-1.c: Add -w to dg-options.\n+\n 2018-01-25  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* gcc.dg/vect/vect-reduc-or_1.c: Require whole_vector_shift for"}, {"sha": "bcc42ddbb81d17e94244510b88c96611cba72851", "filename": "gcc/testsuite/c-c++-common/gomp/pr83977-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d8fb311338b191231790252e91889984995055c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr83977-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d8fb311338b191231790252e91889984995055c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr83977-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr83977-1.c?ref=3d8fb311338b191231790252e91889984995055c", "patch": "@@ -1,6 +1,6 @@\n /* PR middle-end/83977 */\n /* { dg-do compile } */\n-/* { dg-additional-options \"-O2\" } */\n+/* { dg-additional-options \"-O2 -w\" } */\n \n struct S { int a, b, c; };\n "}]}