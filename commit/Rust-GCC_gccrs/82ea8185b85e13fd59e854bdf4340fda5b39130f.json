{"sha": "82ea8185b85e13fd59e854bdf4340fda5b39130f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJlYTgxODViODVlMTNmZDU5ZTg1NGJkZjQzNDBmZGE1YjM5MTMwZg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-05-26T10:42:17Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-05-26T10:42:17Z"}, "message": "decl.c (variant_desc): Rename 'record' to 'new_type'.\n\n\t* gcc-interface/decl.c (variant_desc): Rename 'record' to 'new_type'.\n\t(build_variant_list): Adjust to above renaming.\n\t(gnat_to_gnu_entity) <E_Record_Subtype>: Likewise.  Give a unique name\n\tto the type of the variant containers.\n\t(create_variant_part_from): Likewise.  Give a unique name to the type\n\tof the variant part.\n\nFrom-SVN: r187908", "tree": {"sha": "36bfc2626fadd1a3cc21a35e7655081fa98591e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36bfc2626fadd1a3cc21a35e7655081fa98591e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82ea8185b85e13fd59e854bdf4340fda5b39130f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82ea8185b85e13fd59e854bdf4340fda5b39130f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82ea8185b85e13fd59e854bdf4340fda5b39130f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82ea8185b85e13fd59e854bdf4340fda5b39130f/comments", "author": null, "committer": null, "parents": [{"sha": "083aa7444e6d3fe0a700116bf00de6f6ced8ddee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/083aa7444e6d3fe0a700116bf00de6f6ced8ddee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/083aa7444e6d3fe0a700116bf00de6f6ced8ddee"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "f92edbb11ce490c3c6bf766c157056de5c515f01", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82ea8185b85e13fd59e854bdf4340fda5b39130f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82ea8185b85e13fd59e854bdf4340fda5b39130f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=82ea8185b85e13fd59e854bdf4340fda5b39130f", "patch": "@@ -1,3 +1,12 @@\n+2012-05-26  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (variant_desc): Rename 'record' to 'new_type'.\n+\t(build_variant_list): Adjust to above renaming.\n+\t(gnat_to_gnu_entity) <E_Record_Subtype>: Likewise.  Give a unique name\n+\tto the type of the variant containers.\n+\t(create_variant_part_from): Likewise.  Give a unique name to the type\n+\tof the variant part.\n+\n 2012-05-25  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR ada/52362"}, {"sha": "76c960fee4b6a9f4ef31261c797b1e501939703e", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82ea8185b85e13fd59e854bdf4340fda5b39130f/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82ea8185b85e13fd59e854bdf4340fda5b39130f/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=82ea8185b85e13fd59e854bdf4340fda5b39130f", "patch": "@@ -119,8 +119,8 @@ typedef struct variant_desc_d {\n   /* The value of the qualifier.  */\n   tree qual;\n \n-  /* The record associated with this variant.  */\n-  tree record;\n+  /* The type of the variant after transformation.  */\n+  tree new_type;\n } variant_desc;\n \n DEF_VEC_O(variant_desc);\n@@ -3318,11 +3318,16 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t\t      {\n \t\t\ttree old_variant = v->type;\n \t\t\ttree new_variant = make_node (RECORD_TYPE);\n+\t\t\ttree suffix\n+\t\t\t  = concat_name (DECL_NAME (gnu_variant_part),\n+\t\t\t\t\t IDENTIFIER_POINTER\n+\t\t\t\t\t (DECL_NAME (v->field)));\n \t\t\tTYPE_NAME (new_variant)\n-\t\t\t  = DECL_NAME (TYPE_NAME (old_variant));\n+\t\t\t  = concat_name (TYPE_NAME (gnu_type),\n+\t\t\t\t\t IDENTIFIER_POINTER (suffix));\n \t\t\tcopy_and_substitute_in_size (new_variant, old_variant,\n \t\t\t\t\t\t     gnu_subst_list);\n-\t\t\tv->record = new_variant;\n+\t\t\tv->new_type = new_variant;\n \t\t      }\n \t\t}\n \t      else\n@@ -3426,7 +3431,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t\t\t    if (selected_variant)\n \t\t\t      gnu_cont_type = gnu_type;\n \t\t\t    else\n-\t\t\t      gnu_cont_type = v->record;\n+\t\t\t      gnu_cont_type = v->new_type;\n \t\t\t  }\n \t\t\telse\n \t\t\t  /* The front-end may pass us \"ghost\" components if\n@@ -7562,7 +7567,7 @@ build_variant_list (tree qual_union_type, VEC(subst_pair,heap) *subst_list,\n \t  v->type = variant_type;\n \t  v->field = gnu_field;\n \t  v->qual = qual;\n-\t  v->record = NULL_TREE;\n+\t  v->new_type = NULL_TREE;\n \n \t  /* Recurse on the variant subpart of the variant, if any.  */\n \t  variant_subpart = get_variant_part (variant_type);\n@@ -8238,7 +8243,9 @@ create_variant_part_from (tree old_variant_part,\n \n   /* First create the type of the variant part from that of the old one.  */\n   new_union_type = make_node (QUAL_UNION_TYPE);\n-  TYPE_NAME (new_union_type) = DECL_NAME (TYPE_NAME (old_union_type));\n+  TYPE_NAME (new_union_type)\n+    = concat_name (TYPE_NAME (record_type),\n+\t\t   IDENTIFIER_POINTER (DECL_NAME (old_variant_part)));\n \n   /* If the position of the variant part is constant, subtract it from the\n      size of the type of the parent to get the new size.  This manual CSE\n@@ -8272,7 +8279,7 @@ create_variant_part_from (tree old_variant_part,\n \tcontinue;\n \n       /* Retrieve the list of fields already added to the new variant.  */\n-      new_variant = v->record;\n+      new_variant = v->new_type;\n       field_list = TYPE_FIELDS (new_variant);\n \n       /* If the old variant had a variant subpart, we need to create a new"}]}