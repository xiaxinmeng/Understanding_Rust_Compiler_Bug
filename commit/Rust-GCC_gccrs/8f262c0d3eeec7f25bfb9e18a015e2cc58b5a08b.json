{"sha": "8f262c0d3eeec7f25bfb9e18a015e2cc58b5a08b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGYyNjJjMGQzZWVlYzdmMjViZmI5ZTE4YTAxNWUyY2M1OGI1YTA4Yg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-01-28T18:56:26Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-01-28T18:56:26Z"}, "message": "* pa.h (LEGITIMIZE_ADDRESS): Delete cases which can never happen.\n\nFrom-SVN: r3380", "tree": {"sha": "ac5fea8db9bf0ff696086b8ffe58730e4e730fdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac5fea8db9bf0ff696086b8ffe58730e4e730fdb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f262c0d3eeec7f25bfb9e18a015e2cc58b5a08b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f262c0d3eeec7f25bfb9e18a015e2cc58b5a08b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f262c0d3eeec7f25bfb9e18a015e2cc58b5a08b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f262c0d3eeec7f25bfb9e18a015e2cc58b5a08b/comments", "author": null, "committer": null, "parents": [{"sha": "3518f9049248650232458d2ed88b2b3bd23ea2ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3518f9049248650232458d2ed88b2b3bd23ea2ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3518f9049248650232458d2ed88b2b3bd23ea2ad"}], "stats": {"total": 18, "additions": 2, "deletions": 16}, "files": [{"sha": "7340090d68c1dda680647447708a4313a75c257e", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f262c0d3eeec7f25bfb9e18a015e2cc58b5a08b/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f262c0d3eeec7f25bfb9e18a015e2cc58b5a08b/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=8f262c0d3eeec7f25bfb9e18a015e2cc58b5a08b", "patch": "@@ -1216,10 +1216,7 @@ extern union tree_node *current_function_decl;\n    adressing modes to be used).\n \n    Put X and Z into registers.  Then put the entire expression into\n-   a register.\n-\n-   Other REG+(X*Y) addresses are placed into a register with the\n-   X*Y subexpression placed in a register of its own.  */\n+   a register.  */\n \n #define LEGITIMIZE_ADDRESS(X,OLDX,MODE,WIN)\t\\\n { if (GET_CODE (X) == PLUS && GET_CODE (XEXP (X, 0)) == REG\t\\\n@@ -1250,20 +1247,9 @@ extern union tree_node *current_function_decl;\n \t\t\t\tgen_rtx (MULT, SImode, reg2, \t\\\n \t\t\t\t\t GEN_INT (val)),\t\\\n \t\t\t\treg1));\t\t\t\t\\\n+      goto WIN;\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n-  if (GET_CODE (X) == PLUS && GET_CODE (XEXP (X, 0)) == MULT)\t\\\n-    (X) = force_operand (gen_rtx (PLUS, SImode, XEXP (X, 1),\t\\\n-\t\t                  force_operand (XEXP (X, 0), 0)), 0);\\\n-  if (GET_CODE (X) == PLUS && GET_CODE (XEXP (X, 1)) == MULT)\t\\\n-    (X) = force_operand (gen_rtx (PLUS, SImode, XEXP (X, 0),\t\\\n-\t\t\t\t  force_operand (XEXP (X, 1), 0)), 0);\\\n-  if (memory_address_p (MODE, X))\t\t\t\t\\\n-    goto WIN;\t\t\t\t\t\t\t\\\n   if (flag_pic) (X) = legitimize_pic_address (X, MODE, gen_reg_rtx (Pmode));\\\n-  else if (GET_CODE (X) == SYMBOL_REF \t\t\t\t\\\n-\t    || GET_CODE (X) == LABEL_REF)\t\t\t\\\n-    (X) = gen_rtx (LO_SUM, Pmode,\t\t\t\t\\\n-\t\t   copy_to_mode_reg (Pmode, gen_rtx (HIGH, Pmode, X)), X); \\\n   if (memory_address_p (MODE, X))\t\t\t\t\\\n     goto WIN;}\n "}]}