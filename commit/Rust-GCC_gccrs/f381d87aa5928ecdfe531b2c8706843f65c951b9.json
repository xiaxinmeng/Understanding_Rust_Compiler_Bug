{"sha": "f381d87aa5928ecdfe531b2c8706843f65c951b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM4MWQ4N2FhNTkyOGVjZGZlNTMxYjJjODcwNjg0M2Y2NWM5NTFiOQ==", "commit": {"author": {"name": "Sebastian Huber", "email": "sebastian.huber@embedded-brains.de", "date": "2017-10-18T07:36:38Z"}, "committer": {"name": "Sebastian Huber", "email": "sh@gcc.gnu.org", "date": "2017-10-18T07:36:38Z"}, "message": "Update -ffunction/data-sections documentation\n\ngcc/\n\t* doc/invoke.texi (ffunction-sections and fdata-sections):\n\tUpdate.\n\nFrom-SVN: r253842", "tree": {"sha": "c904b831e08df4ea1a6bdb8641008a5f121d6e63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c904b831e08df4ea1a6bdb8641008a5f121d6e63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f381d87aa5928ecdfe531b2c8706843f65c951b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f381d87aa5928ecdfe531b2c8706843f65c951b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f381d87aa5928ecdfe531b2c8706843f65c951b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f381d87aa5928ecdfe531b2c8706843f65c951b9/comments", "author": {"login": "sebhub", "id": 932056, "node_id": "MDQ6VXNlcjkzMjA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/932056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebhub", "html_url": "https://github.com/sebhub", "followers_url": "https://api.github.com/users/sebhub/followers", "following_url": "https://api.github.com/users/sebhub/following{/other_user}", "gists_url": "https://api.github.com/users/sebhub/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebhub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebhub/subscriptions", "organizations_url": "https://api.github.com/users/sebhub/orgs", "repos_url": "https://api.github.com/users/sebhub/repos", "events_url": "https://api.github.com/users/sebhub/events{/privacy}", "received_events_url": "https://api.github.com/users/sebhub/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "173a960ac907a353ac9de8bca9948ef9d41a7ec2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/173a960ac907a353ac9de8bca9948ef9d41a7ec2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/173a960ac907a353ac9de8bca9948ef9d41a7ec2"}], "stats": {"total": 37, "additions": 25, "deletions": 12}, "files": [{"sha": "a59161d9b544aecafc212e0cfeab6a3870d7948a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f381d87aa5928ecdfe531b2c8706843f65c951b9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f381d87aa5928ecdfe531b2c8706843f65c951b9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f381d87aa5928ecdfe531b2c8706843f65c951b9", "patch": "@@ -1,3 +1,8 @@\n+2017-10-18  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* doc/invoke.texi (ffunction-sections and fdata-sections):\n+\tUpdate.\n+\n 2017-10-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree-ssa-loop-ivopts.c (add_autoinc_candidates): Bail out only if"}, {"sha": "5e88279528f4b320b689e84accb059390ec088e7", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 20, "deletions": 12, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f381d87aa5928ecdfe531b2c8706843f65c951b9/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f381d87aa5928ecdfe531b2c8706843f65c951b9/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=f381d87aa5928ecdfe531b2c8706843f65c951b9", "patch": "@@ -9712,18 +9712,26 @@ file if the target supports arbitrary sections.  The name of the\n function or the name of the data item determines the section's name\n in the output file.\n \n-Use these options on systems where the linker can perform optimizations\n-to improve locality of reference in the instruction space.  Most systems\n-using the ELF object format and SPARC processors running Solaris 2 have\n-linkers with such optimizations.  AIX may have these optimizations in\n-the future.\n-\n-Only use these options when there are significant benefits from doing\n-so.  When you specify these options, the assembler and linker\n-create larger object and executable files and are also slower.\n-You cannot use @command{gprof} on all systems if you\n-specify this option, and you may have problems with debugging if\n-you specify both this option and @option{-g}.\n+Use these options on systems where the linker can perform optimizations to\n+improve locality of reference in the instruction space.  Most systems using the\n+ELF object format have linkers with such optimizations.  On AIX, the linker\n+rearranges sections (CSECTs) based on the call graph.  The performance impact\n+varies.\n+\n+Together with a linker garbage collection (linker @option{--gc-sections}\n+option) these options may lead to smaller statically-linked executables (after\n+stripping).\n+\n+On ELF/DWARF systems these options do not degenerate the quality of the debug\n+information.  There could be issues with other object files/debug info formats.\n+\n+Only use these options when there are significant benefits from doing so.  When\n+you specify these options, the assembler and linker create larger object and\n+executable files and are also slower.  These options affect code generation.\n+They prevent optimizations by the compiler and assembler using relative\n+locations inside a translation unit since the locations are unknown until\n+link time.  An example of such an optimization is relaxing calls to short call\n+instructions.\n \n @item -fbranch-target-load-optimize\n @opindex fbranch-target-load-optimize"}]}