{"sha": "66132b1f213c2907512259cd0197ef49a74897b9", "node_id": "C_kwDOANBUbNoAKDY2MTMyYjFmMjEzYzI5MDc1MTIyNTljZDAxOTdlZjQ5YTc0ODk3Yjk", "commit": {"author": {"name": "Gaius Mulley", "email": "gaiusmod2@gmail.com", "date": "2023-01-26T00:55:56Z"}, "committer": {"name": "Gaius Mulley", "email": "gaiusmod2@gmail.com", "date": "2023-01-26T00:55:56Z"}, "message": "PR-108135 Remove PACKAGE_* definitions from gm2config.h\n\nPR-108135 gcc/m2/configure generates gm2config.h and\nautomatically adds PACKAGE defines.  gcc/m2/Make-lang.in\nnow removes these PACKAGE definitions.  The patch also\ncontains fixes to remove an unused variable Dim from\nBuildConstHighFromSym and also uses withTok in StartBuildWith.\nStartBuildWith will generate a nop (for improved debugging)\nif requested.\n\ngcc/m2/ChangeLog:\n\n\t* Make-lang.in (m2/gm2config.h): Rewrite rule to be\n\tdependent upon m2/gm2config.aci.\n\t(m2/gm2config.aci): Newrule.\n\t* configure.ac (AC_CONFIG_HEADERS): Change destination\n\tto gm2config.aci.\n\t* configure: Regenerate.\n\t* gm2-libs/config-host: Regenerate.\n\t* gm2-compiler/M2GCCDeclare.mod (AddSymToWatch): Comment\n\tout.\n\t* gm2-compiler/M2Quads.mod (BuildConstHighFromSym): Remove\n\tDim.\n\t(StartBuildWith): Call BuildStmtNoteTok.\n\t(BuildStmtNoteTok): New procedure.\n\t(BuildStmtNote): Re-implement re-factor into two\n\tprocedures and call BuildStmtNoteTok.\n\t* gm2config.h.in: Remove.\n\t* gm2config.aci.in: New file.\n\nSigned-off-by: Gaius Mulley <gaiusmod2@gmail.com>", "tree": {"sha": "c48d561419557ff21ca092618fbd7523366c58fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c48d561419557ff21ca092618fbd7523366c58fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66132b1f213c2907512259cd0197ef49a74897b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66132b1f213c2907512259cd0197ef49a74897b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66132b1f213c2907512259cd0197ef49a74897b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66132b1f213c2907512259cd0197ef49a74897b9/comments", "author": null, "committer": null, "parents": [{"sha": "9bb6515b10c51a07436577d0eb73531ba279ffa4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bb6515b10c51a07436577d0eb73531ba279ffa4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bb6515b10c51a07436577d0eb73531ba279ffa4"}], "stats": {"total": 64, "additions": 39, "deletions": 25}, "files": [{"sha": "122a35c790238563d6b41a32aa260dd35ddb88ec", "filename": "gcc/m2/Make-lang.in", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66132b1f213c2907512259cd0197ef49a74897b9/gcc%2Fm2%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66132b1f213c2907512259cd0197ef49a74897b9/gcc%2Fm2%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FMake-lang.in?ref=66132b1f213c2907512259cd0197ef49a74897b9", "patch": "@@ -1503,7 +1503,10 @@ m2/gm2-libs/gm2-libs-host.h:\n # Autoconf inserts -DCROSS_DIRECTORY_STRUCTURE if we are building a\n # cross compiler and the ../Makefile.in above appends this to INTERNAL_CFLAGS.\n \n-m2/gm2config.h:\n+m2/gm2config.h: m2/gm2config.aci\n+\tgrep -v define\\ PACKAGE_ $< > $@\n+\n+m2/gm2config.aci:\n \tNEW_SRCDIR=`${srcdir}/m2/tools-src/calcpath ../ ${srcdir} m2` ; \\\n         export NEW_SRCDIR ; \\\n \tcd m2 ; \\"}, {"sha": "de78fdd37247c6ff4d00ea4b61a69885db613491", "filename": "gcc/m2/configure", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66132b1f213c2907512259cd0197ef49a74897b9/gcc%2Fm2%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66132b1f213c2907512259cd0197ef49a74897b9/gcc%2Fm2%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fconfigure?ref=66132b1f213c2907512259cd0197ef49a74897b9", "patch": "@@ -3645,7 +3645,7 @@ $as_echo \"#define HAVE_OPENDIR 1\" >>confdefs.h\n \n fi\n \n-ac_config_headers=\"$ac_config_headers gm2config.h\"\n+ac_config_headers=\"$ac_config_headers gm2config.aci\"\n \n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n@@ -4319,7 +4319,7 @@ cat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n for ac_config_target in $ac_config_targets\n do\n   case $ac_config_target in\n-    \"gm2config.h\") CONFIG_HEADERS=\"$CONFIG_HEADERS gm2config.h\" ;;\n+    \"gm2config.aci\") CONFIG_HEADERS=\"$CONFIG_HEADERS gm2config.aci\" ;;\n \n   *) as_fn_error $? \"invalid argument: \\`$ac_config_target'\" \"$LINENO\" 5;;\n   esac\n@@ -4630,7 +4630,7 @@ $as_echo \"$as_me: $ac_file is unchanged\" >&6;}\n \n \n   case $ac_file$ac_mode in\n-    \"gm2config.h\":H) echo timestamp > stamp-h ;;\n+    \"gm2config.aci\":H) echo timestamp > stamp-h ;;\n \n   esac\n done # for ac_tag"}, {"sha": "0a77caeaa17998aa89ed6b34ed5f9fc4e6488792", "filename": "gcc/m2/configure.ac", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66132b1f213c2907512259cd0197ef49a74897b9/gcc%2Fm2%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66132b1f213c2907512259cd0197ef49a74897b9/gcc%2Fm2%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fconfigure.ac?ref=66132b1f213c2907512259cd0197ef49a74897b9", "patch": "@@ -1,4 +1,4 @@\n-# configure.ac provides gm2spec.c with access to config values.\n+# configure.ac provides gm2spec.cc with access to config values.\n \n # Copyright (C) 2001-2023 Free Software Foundation, Inc.\n # Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n@@ -29,5 +29,5 @@ AC_CHECK_FUNCS([stpcpy])\n AC_CHECK_HEADERS(sys/types.h)\n AC_HEADER_DIRENT\n AC_CHECK_LIB([c],[opendir],[AC_DEFINE([HAVE_OPENDIR],[1],[found opendir])])\n-AC_CONFIG_HEADERS(gm2config.h, [echo timestamp > stamp-h])\n+AC_CONFIG_HEADERS(gm2config.aci, [echo timestamp > stamp-h])\n AC_OUTPUT"}, {"sha": "27745988c019c2989f501b65b4e9caaa971a1d30", "filename": "gcc/m2/gm2-compiler/M2GCCDeclare.mod", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66132b1f213c2907512259cd0197ef49a74897b9/gcc%2Fm2%2Fgm2-compiler%2FM2GCCDeclare.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66132b1f213c2907512259cd0197ef49a74897b9/gcc%2Fm2%2Fgm2-compiler%2FM2GCCDeclare.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2GCCDeclare.mod?ref=66132b1f213c2907512259cd0197ef49a74897b9", "patch": "@@ -347,6 +347,7 @@ END DebugSetNumbers ;\n                    lists.\n *)\n \n+(*\n PROCEDURE AddSymToWatch (sym: WORD) ;\n BEGIN\n    IF (sym#NulSym) AND (NOT IsElementInSet(WatchList, sym))\n@@ -357,6 +358,7 @@ BEGIN\n       FIO.FlushBuffer(FIO.StdOut)\n    END\n END AddSymToWatch ;\n+*)\n \n \n (*"}, {"sha": "939758fed7add5857e374277b60ce86676ffaa41", "filename": "gcc/m2/gm2-compiler/M2Quads.mod", "status": "modified", "additions": 24, "deletions": 15, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66132b1f213c2907512259cd0197ef49a74897b9/gcc%2Fm2%2Fgm2-compiler%2FM2Quads.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66132b1f213c2907512259cd0197ef49a74897b9/gcc%2Fm2%2Fgm2-compiler%2FM2Quads.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Quads.mod?ref=66132b1f213c2907512259cd0197ef49a74897b9", "patch": "@@ -8101,14 +8101,11 @@ END BuildHighFunction ;\n \n PROCEDURE BuildConstHighFromSym (tok: CARDINAL) ;\n VAR\n-   Dim,\n    NoOfParam,\n    ReturnVar: CARDINAL ;\n BEGIN\n    PopT (NoOfParam) ;\n    ReturnVar := MakeTemporary (tok, ImmediateValue) ;\n-   Dim := OperandD (1) ;\n-   INC (Dim) ;\n    GenHigh (tok, ReturnVar, 1, OperandT (1)) ;\n    PopN (NoOfParam+1) ;\n    PushTtok (ReturnVar, tok)\n@@ -11445,6 +11442,7 @@ VAR\n    Sym, Type,\n    Ref      : CARDINAL ;\n BEGIN\n+   BuildStmtNoteTok (withTok) ;\n    DisplayStack ;\n    PopTFtok (Sym, Type, tok) ;\n    Type := SkipType (Type) ;\n@@ -14107,25 +14105,36 @@ END PushLineNo ;\n \n PROCEDURE BuildStmtNote (offset: INTEGER) ;\n VAR\n-   filename: Name ;\n-   f       : QuadFrame ;\n-   i       : INTEGER ;\n+   tokenno: INTEGER ;\n BEGIN\n    IF NextQuad#Head\n    THEN\n-      f := GetQF (NextQuad-1) ;\n-      i := offset ;\n-      INC (i, GetTokenNo ()) ;\n-      (* no need to have multiple notes at the same position.  *)\n-      IF (f^.Operator # StatementNoteOp) OR (f^.Operand3 # VAL (CARDINAL, i))\n-      THEN\n-         filename := makekey (string (GetFileName ())) ;\n-         GenQuad (StatementNoteOp, WORD (filename), NulSym, i)\n-      END\n+      tokenno := offset ;\n+      INC (tokenno, GetTokenNo ()) ;\n+      BuildStmtNoteTok (VAL(CARDINAL, tokenno))\n    END\n END BuildStmtNote ;\n \n \n+(*\n+   BuildStmtNoteTok - adds a nop (with an assigned tokenno location) to the code.\n+*)\n+\n+PROCEDURE BuildStmtNoteTok (tokenno: CARDINAL) ;\n+VAR\n+   filename: Name ;\n+   f       : QuadFrame ;\n+BEGIN\n+   f := GetQF (NextQuad-1) ;\n+   (* no need to have multiple notes at the same position.  *)\n+   IF (f^.Operator # StatementNoteOp) OR (f^.Operand3 # tokenno)\n+   THEN\n+      filename := makekey (string (GetFileName ())) ;\n+      GenQuad (StatementNoteOp, WORD (filename), NulSym, tokenno)\n+   END\n+END BuildStmtNoteTok ;\n+\n+\n (*\n    AddRecordToList - adds the record held on the top of stack to the\n                      list of records and varient fields."}, {"sha": "5d6d33d2b8403f501f2ce22b0fc96460922f9b1c", "filename": "gcc/m2/gm2-libs/config-host", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66132b1f213c2907512259cd0197ef49a74897b9/gcc%2Fm2%2Fgm2-libs%2Fconfig-host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66132b1f213c2907512259cd0197ef49a74897b9/gcc%2Fm2%2Fgm2-libs%2Fconfig-host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs%2Fconfig-host?ref=66132b1f213c2907512259cd0197ef49a74897b9", "patch": "@@ -5,7 +5,7 @@\n # Report bugs to <gm2@nongnu.org>.\n #\n #\n-# Copyright (C) 1992-2023 Free Software Foundation, Inc.\n+# Copyright (C) 1992-1996, 1998-2012 Free Software Foundation, Inc.\n #\n #\n # This configure script is free software; the Free Software Foundation\n@@ -1369,7 +1369,7 @@ if $ac_init_version; then\n ASCII.def configure 1.9.5\n generated by GNU Autoconf 2.69\n \n-Copyright (C) 2012-2023 Free Software Foundation, Inc.\n+Copyright (C) 2012 Free Software Foundation, Inc.\n This configure script is free software; the Free Software Foundation\n gives unlimited permission to copy, distribute and modify it.\n _ACEOF\n@@ -5298,7 +5298,7 @@ ASCII.def config.status 1.9.5\n configured by $0, generated by GNU Autoconf 2.69,\n   with options \\\\\"\\$ac_cs_config\\\\\"\n \n-Copyright (C) 2012-2023 Free Software Foundation, Inc.\n+Copyright (C) 2012 Free Software Foundation, Inc.\n This config.status script is free software; the Free Software Foundation\n gives unlimited permission to copy, distribute and modify it.\"\n "}, {"sha": "cb9f5054f44d59802cc9ac148ac9bbba8819178f", "filename": "gcc/m2/gm2config.aci.in", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66132b1f213c2907512259cd0197ef49a74897b9/gcc%2Fm2%2Fgm2config.aci.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66132b1f213c2907512259cd0197ef49a74897b9/gcc%2Fm2%2Fgm2config.aci.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2config.aci.in?ref=66132b1f213c2907512259cd0197ef49a74897b9", "patch": "@@ -1,4 +1,4 @@\n-/* gm2config.h.in.  Generated from configure.ac by autoheader.  */\n+/* gm2config.aci.in.  Generated from configure.ac by autoheader.  */\n \n /* Define to 1 if you have the <dirent.h> header file, and it defines `DIR'.\n    */", "previous_filename": "gcc/m2/gm2config.h.in"}]}