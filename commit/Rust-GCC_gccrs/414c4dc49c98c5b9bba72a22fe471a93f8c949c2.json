{"sha": "414c4dc49c98c5b9bba72a22fe471a93f8c949c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE0YzRkYzQ5Yzk4YzViOWJiYTcyYTIyZmU0NzFhOTNmOGM5NDljMg==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2001-01-10T21:40:14Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2001-01-10T21:40:14Z"}, "message": "Remove {save|restore}_machine_status.\n\nDocument {init|mark|free}_machine_status.\n\nFrom-SVN: r38882", "tree": {"sha": "d33a69591d21d0e9be87be6a3ff5261606e9bca5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d33a69591d21d0e9be87be6a3ff5261606e9bca5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/414c4dc49c98c5b9bba72a22fe471a93f8c949c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/414c4dc49c98c5b9bba72a22fe471a93f8c949c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/414c4dc49c98c5b9bba72a22fe471a93f8c949c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/414c4dc49c98c5b9bba72a22fe471a93f8c949c2/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5c5d1ea0c8c9faf670e045f24fbe53f5115d46da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c5d1ea0c8c9faf670e045f24fbe53f5115d46da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c5d1ea0c8c9faf670e045f24fbe53f5115d46da"}], "stats": {"total": 294, "additions": 193, "deletions": 101}, "files": [{"sha": "cab2e71c6d20e1212e75fb0d5e46cbec7b148a0a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/414c4dc49c98c5b9bba72a22fe471a93f8c949c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/414c4dc49c98c5b9bba72a22fe471a93f8c949c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=414c4dc49c98c5b9bba72a22fe471a93f8c949c2", "patch": "@@ -1,3 +1,24 @@\n+2001-01-10  Nick Clifton  <nickc@redhat.com>\n+\n+\t* function.h (save_machine_status): Delete.\n+\t(restore_machine_status): Delete.\n+\tAmend comment describing {init|mark|free}_machine_status.\n+\n+\t* function.c (save_machine_status): Delete.\n+\t(restore_machine_status): Delete.\n+\tAmend comment describing {init|mark|free}_machine_status.\n+\t(push_function_context_to): Remove invocation of\n+\tsave_machine_status.\n+\t(pop_function_context_from): Remove invocation of\n+\trestore_machine_status.\n+\n+\t* emit-rtl.c (init_emit_once): Amend comment describing\n+\t{init|mark|free}_machine_status. \n+\n+\t* tm.texi (Per-Function Data): New node.  Describe the\n+\tINIT_EXPANDERS macro and the {init|mark|free}_machine_status\n+\tfunction pointers.\n+\n 2001-01-10  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n         * cppinit.c (OPT_g): Remove."}, {"sha": "33c6d90b407d9339234f87cd114bb7645263b764", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/414c4dc49c98c5b9bba72a22fe471a93f8c949c2/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/414c4dc49c98c5b9bba72a22fe471a93f8c949c2/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=414c4dc49c98c5b9bba72a22fe471a93f8c949c2", "patch": "@@ -4080,9 +4080,9 @@ init_emit_once (line_numbers)\n   ggc_add_rtx_root (global_rtl, GR_MAX);\n \n #ifdef INIT_EXPANDERS\n-  /* This is to initialize save_machine_status and restore_machine_status before\n-     the first call to push_function_context_to.  This is needed by the Chill\n-     front end which calls push_function_context_to before the first cal to\n+  /* This is to initialize {init|mark|free}_machine_status before the first\n+     call to push_function_context_to.  This is needed by the Chill front\n+     end which calls push_function_context_to before the first cal to\n      init_function_start.  */\n   INIT_EXPANDERS;\n #endif"}, {"sha": "d03f54b7064f41b0b8eeae1ae0b997f0905f5d51", "filename": "gcc/function.c", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/414c4dc49c98c5b9bba72a22fe471a93f8c949c2/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/414c4dc49c98c5b9bba72a22fe471a93f8c949c2/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=414c4dc49c98c5b9bba72a22fe471a93f8c949c2", "patch": "@@ -129,14 +129,14 @@ int current_function_uses_only_leaf_regs;\n    assign_stack_local uses frame_pointer_rtx when this is nonzero.  */\n static int virtuals_instantiated;\n \n-/* These variables hold pointers to functions to\n-   save and restore machine-specific data,\n-   in push_function_context and pop_function_context.  */\n+/* These variables hold pointers to functions to create and destroy\n+   target specific, per-function data structures.  */\n void (*init_machine_status) PARAMS ((struct function *));\n-void (*save_machine_status) PARAMS ((struct function *));\n-void (*restore_machine_status) PARAMS ((struct function *));\n-void (*mark_machine_status) PARAMS ((struct function *));\n void (*free_machine_status) PARAMS ((struct function *));\n+/* This variable holds a pointer to a function to register any\n+   data items in the target specific, per-function data structure\n+   that will need garbage collection.  */\n+void (*mark_machine_status) PARAMS ((struct function *));\n \n /* Likewise, but for language-specific data.  */\n void (*init_lang_status) PARAMS ((struct function *));\n@@ -358,8 +358,6 @@ push_function_context_to (context)\n \n   if (save_lang_status)\n     (*save_lang_status) (p);\n-  if (save_machine_status)\n-    (*save_machine_status) (p);\n \n   cfun = 0;\n }\n@@ -389,8 +387,6 @@ pop_function_context_from (context)\n \n   restore_emit_status (p);\n \n-  if (restore_machine_status)\n-    (*restore_machine_status) (p);\n   if (restore_lang_status)\n     (*restore_lang_status) (p);\n "}, {"sha": "c0aa0db1e93d7ef51b33f543436e6e28ac9d7541", "filename": "gcc/function.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/414c4dc49c98c5b9bba72a22fe471a93f8c949c2/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/414c4dc49c98c5b9bba72a22fe471a93f8c949c2/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=414c4dc49c98c5b9bba72a22fe471a93f8c949c2", "patch": "@@ -556,14 +556,14 @@ extern HOST_WIDE_INT get_frame_size\tPARAMS ((void));\n /* Likewise, but for a different than the current function.  */\n extern HOST_WIDE_INT get_func_frame_size\tPARAMS ((struct function *));\n \n-/* These variables hold pointers to functions to\n-   save and restore machine-specific data,\n-   in push_function_context and pop_function_context.  */\n+/* These variables hold pointers to functions to create and destroy\n+   target specific, per-function data structures.  */\n extern void (*init_machine_status)\tPARAMS ((struct function *));\n-extern void (*mark_machine_status)\tPARAMS ((struct function *));\n-extern void (*save_machine_status)\tPARAMS ((struct function *));\n-extern void (*restore_machine_status)\tPARAMS ((struct function *));\n extern void (*free_machine_status)\tPARAMS ((struct function *));\n+/* This variable holds a pointer to a function to register any\n+   data items in the target specific, per-function data structure\n+   that will need garbage collection.  */\n+extern void (*mark_machine_status)\tPARAMS ((struct function *));\n \n /* Likewise, but for language-specific data.  */\n extern void (*init_lang_status)         PARAMS ((struct function *));"}, {"sha": "b9cddc8c900711372a0fa802fd0bddb85e597d5c", "filename": "gcc/invoke.texi", "status": "modified", "additions": 82, "deletions": 82, "changes": 164, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/414c4dc49c98c5b9bba72a22fe471a93f8c949c2/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/414c4dc49c98c5b9bba72a22fe471a93f8c949c2/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=414c4dc49c98c5b9bba72a22fe471a93f8c949c2", "patch": "@@ -44,7 +44,7 @@ and the Info entries for @file{gcc}, @file{cpp}, @file{g77}, @file{as},\n @c man end\n @c man begin BUGS\n For instructions on reporting bugs, see\n-@w{@uref{http://gcc.gnu.org/bugs.html}}.  Use of the @command{gccbug}\n+@w{@uref{http://gcc.gnu.org/bugs.html}}.  Use of the @code{gccbug}\n script to report bugs is recommended.\n @c man end\n @c man begin AUTHOR\n@@ -85,7 +85,7 @@ options for compiling C++ programs.\n \n @cindex grouping options\n @cindex options, grouping\n-The @command{gcc} program accepts options and file names as operands.  Many\n+The @code{gcc} program accepts options and file names as operands.  Many\n options have multi-letter names; therefore multiple single-letter options\n may @emph{not} be grouped: @samp{-dr} is very different from @w{@samp{-d\n -r}}.\n@@ -701,18 +701,18 @@ handled according to their file name suffixes (as they are if @samp{-x}\n has not been used at all).\n \n @item -pass-exit-codes\n-Normally the @command{gcc} program will exit with the code of 1 if any\n+Normally the @code{gcc} program will exit with the code of 1 if any\n phase of the compiler returns a non-success return code.  If you specify\n-@samp{-pass-exit-codes}, the @command{gcc} program will instead return with\n+@samp{-pass-exit-codes}, the @code{gcc} program will instead return with\n numerically highest error produced by any phase that returned an error\n indication.\n @end table\n \n If you only want some of the stages of compilation, you can use\n-@samp{-x} (or filename suffixes) to tell @command{gcc} where to start, and\n+@samp{-x} (or filename suffixes) to tell @code{gcc} where to start, and\n one of the options @samp{-c}, @samp{-S}, or @samp{-E} to say where\n-@command{gcc} is to stop.  Note that some combinations (for example,\n-@samp{-x cpp-output -E}) instruct @command{gcc} to do nothing at all.\n+@code{gcc} is to stop.  Note that some combinations (for example,\n+@samp{-x cpp-output -E}) instruct @code{gcc} to do nothing at all.\n \n @table @gcctabopt\n @item -c\n@@ -771,10 +771,10 @@ no trouble.\n \n @item --help\n Print (on the standard output) a description of the command line options\n-understood by @command{gcc}.  If the @option{-v} option is also specified\n-then @option{--help} will also be passed on to the various processes\n-invoked by @command{gcc}, so that they can display the command line options\n-they accept.  If the @option{-W} option is also specified then command\n+understood by @code{gcc}.  If the @code{-v} option is also specified\n+then @code{--help} will also be passed on to the various processes\n+invoked by @code{gcc}, so that they can display the command line options\n+they accept.  If the @code{-W} option is also specified then command\n line options which have no documentation associated with them will also\n be displayed.\n \n@@ -793,20 +793,20 @@ C++ source files conventionally use one of the suffixes @samp{.C},\n preprocessed C++ files use the suffix @samp{.ii}.  GCC recognizes\n files with these names and compiles them as C++ programs even if you\n call the compiler the same way as for compiling C programs (usually with\n-the name @command{gcc}).\n+the name @code{gcc}).\n \n @findex g++\n @findex c++\n However, C++ programs often require class libraries as well as a\n compiler that understands the C++ language---and under some\n circumstances, you might want to compile programs from standard input,\n or otherwise without a suffix that flags them as C++ programs.\n-@command{g++} is a program that calls GCC with the default language\n+@code{g++} is a program that calls GCC with the default language\n set to C++, and automatically specifies linking against the C++\n-library.  On many systems, @command{g++} is also\n-installed with the name @command{c++}.\n+library.  On many systems, @code{g++} is also\n+installed with the name @code{c++}.\n \n-@cindex invoking @command{g++}\n+@cindex invoking @code{g++}\n When you compile C++ programs, you may specify many of the same\n command-line options that you use for compiling programs in any\n language; or command-line options meaningful for C and related\n@@ -871,7 +871,7 @@ possible values are\n \n @table @samp\n @item iso9899:1990\n-Same as @option{-ansi}\n+Same as @code{-ansi}\n \n @item iso9899:199409\n ISO C as modified in amend. 1\n@@ -881,10 +881,10 @@ ISO C99.  Note that this standard is not yet fully supported; see\n @w{@uref{http://gcc.gnu.org/c99status.html}} for more information.\n \n @item c89\n-same as @option{-std=iso9899:1990}\n+same as @code{-std=iso9899:1990}\n \n @item c99\n-same as @option{-std=iso9899:1999}\n+same as @code{-std=iso9899:1999}\n \n @item gnu89\n default, iso9899:1990 + gnu extensions\n@@ -893,20 +893,20 @@ default, iso9899:1990 + gnu extensions\n iso9899:1999 + gnu extensions\n \n @item iso9899:199x\n-same as @option{-std=iso9899:1999}, deprecated\n+same as @code{-std=iso9899:1999}, deprecated\n \n @item c9x\n-same as @option{-std=iso9899:1999}, deprecated\n+same as @code{-std=iso9899:1999}, deprecated\n \n @item gnu9x\n-same as @option{-std=gnu99}, deprecated\n+same as @code{-std=gnu99}, deprecated\n \n @end table\n \n Even when this option is not specified, you can still use some of the\n features of newer standards in so far as they do not conflict with\n previous C standards.  For example, you may use @code{__restrict__} even\n-when @option{-std=c99} is not specified.\n+when @code{-std=c99} is not specified.\n \n @xref{Standards,,Language Standards Supported by GCC}, for details of\n these standard versions.\n@@ -2436,7 +2436,7 @@ Include function returns in frequency count.\n @item __bb_trace__\n Write the sequence of basic blocks executed to file @file{bbtrace.gz}.\n The file will be compressed using the program @samp{gzip}, which must\n-exist in your @env{PATH}.  On systems without the @samp{popen}\n+exist in your @code{PATH}.  On systems without the @samp{popen}\n function, the file will be named @file{bbtrace} and will not be\n compressed.  @strong{Profiling for even a few seconds on these systems\n will produce a very large file.}  Note: @code{__bb_hidecall__} and\n@@ -2696,7 +2696,7 @@ This is useful when gcc prints the error message\n @samp{installation problem, cannot exec cpp0: No such file or directory}.\n To resolve this you either need to put @file{cpp0} and the other compiler\n components where gcc expects to find them, or you can set the environment\n-variable @env{GCC_EXEC_PREFIX} to the directory where you installed them.\n+variable @code{GCC_EXEC_PREFIX} to the directory where you installed them.\n Don't forget the trailing '/'.\n @xref{Environment Variables}.\n @end table\n@@ -2982,7 +2982,7 @@ register tying.  This is especially helpful on machines with two-operand\n instructions.  GCC enables this optimization by default with @samp{-O2}\n or higher.\n \n-Note @option{-fregmove} and @option{-foptimize-register-move} are the same\n+Note @code{-fregmove} and @code{-foptimize-register-move} are the same\n optimization.\n \n @item -fdelayed-branch\n@@ -3077,7 +3077,7 @@ Disable any machine-specific peephole optimizations.\n @item -fbranch-probabilities\n After running a program compiled with @samp{-fprofile-arcs}\n (@pxref{Debugging Options,, Options for Debugging Your Program or\n-@command{gcc}}), you can compile it a second time using\n+@code{gcc}}), you can compile it a second time using\n @samp{-fbranch-probabilities}, to improve optimizations based on\n guessing the path a branch might take.\n \n@@ -3325,7 +3325,7 @@ file to stdout normally.  If no @samp{-MF} switch is given, CPP sends\n the rules to stdout and suppresses normal preprocessed output.\n \n Another way to specify output of a @code{make} rule is by setting\n-the environment variable @env{DEPENDENCIES_OUTPUT} (@pxref{Environment\n+the environment variable @code{DEPENDENCIES_OUTPUT} (@pxref{Environment\n Variables}).\n \n @item -MG\n@@ -3474,8 +3474,8 @@ Trigraph support is not popular, so many compilers do not implement it\n properly.  Portable code should not rely on trigraphs being either\n converted or ignored.\n \n-@item -Wp,@var{option}\n-Pass @var{option} as an option to the preprocessor.  If @var{option}\n+@item -Wp@var{option}\n+Pass @code{option} as an option to the preprocessor.  If @samp{option}\n contains commas, it is split into multiple options at the commas.\n @end table\n \n@@ -3486,7 +3486,7 @@ contains commas, it is split into multiple options at the commas.\n You can pass options to the assembler.\n \n @table @gcctabopt\n-@item -Wa,@var{option}\n+@item -Wa@var{option}\n Pass @var{option} as an option to the assembler.  If @var{option}\n contains commas, it is split into multiple options at the commas.\n @end table\n@@ -3548,13 +3548,13 @@ link an Objective C program.\n \n @item -nostartfiles\n Do not use the standard system startup files when linking.\n-The standard system libraries are used normally, unless @option{-nostdlib}\n-or @option{-nodefaultlibs} is used.\n+The standard system libraries are used normally, unless @code{-nostdlib}\n+or @code{-nodefaultlibs} is used.\n \n @item -nodefaultlibs\n Do not use the standard system libraries when linking.\n Only the libraries you specify will be passed to the linker.\n-The standard startup files are used normally, unless @option{-nostartfiles}\n+The standard startup files are used normally, unless @code{-nostartfiles}\n is used.  The compiler may generate calls to memcmp, memset, and memcpy\n for System V (and ISO C) environments or to bcopy and bzero for\n BSD environments.  These entries are usually resolved by entries in\n@@ -3593,7 +3593,7 @@ other standard libraries.  In other words, when you specify @samp{-nostdlib}\n or @samp{-nodefaultlibs} you should usually specify @samp{-lgcc} as well.\n This ensures that you have no unresolved references to internal GCC\n library subroutines.  (For example, @samp{__main}, used to ensure C++\n-constructors will be called; @pxref{Collect2,,@command{collect2}}.)\n+constructors will be called; @pxref{Collect2,,@code{collect2}}.)\n \n @item -s\n Remove all symbol table and relocation information from the executable.\n@@ -3651,7 +3651,7 @@ For example, to pass @samp{-assert definitions}, you must write\n @samp{-Xlinker \"-assert definitions\"}, because this passes the entire\n string as a single argument, which is not what the linker expects.\n \n-@item -Wl,@var{option}\n+@item -Wl@var{option}\n Pass @var{option} as an option to the linker.  If @var{option} contains\n commas, it is split into multiple options at the commas.\n \n@@ -3720,7 +3720,7 @@ was not specified, the driver tries two standard prefixes, which are\n @file{/usr/lib/gcc/} and @file{/usr/local/lib/gcc-lib/}.  If neither of\n those results in a file name that is found, the unmodified program\n name is searched for using the directories specified in your\n-@env{PATH} environment variable.\n+@code{PATH} environment variable.\n \n @samp{-B} prefixes that effectively specify directory names also apply\n to libraries in the linker, because the compiler translates these\n@@ -3735,7 +3735,7 @@ standard prefixes above are tried, and that is all.  The file is left\n out of the link if it is not found by those means.\n \n Another way to specify a prefix much like the @samp{-B} prefix is to use\n-the environment variable @env{GCC_EXEC_PREFIX}.  @xref{Environment\n+the environment variable @code{GCC_EXEC_PREFIX}.  @xref{Environment\n Variables}.\n \n @item -specs=@var{file}\n@@ -3752,7 +3752,7 @@ are processed in order, from left to right.\n @node Spec Files\n @section Specifying subprocesses and the switches to pass to them\n @cindex Spec Files\n-@command{gcc} is a driver program.  It performs its job by invoking a\n+@code{gcc} is a driver program.  It performs its job by invoking a\n sequence of other programs to do the work of compiling, assembling and\n linking.  GCC interprets its command-line parameters and uses these to\n deduce which programs it should invoke, and which command-line options\n@@ -3824,7 +3824,7 @@ suffix directive can be one of the following:\n @table @code\n @item @@@var{language}\n This says that the suffix is an alias for a known @var{language}.  This is\n-similar to using the @option{-x} command-line switch to GCC to specify a\n+similar to using the @code{-x} command-line switch to GCC to specify a\n language explicitly.  For example:\n \n @smallexample\n@@ -4233,7 +4233,7 @@ file @file{80386} is a link to the file @file{i386v}, then @samp{-b\n 80386} becomes an alias for @samp{-b i386v}.\n \n In one respect, the @samp{-b} or @samp{-V} do not completely change\n-to a different compiler: the top-level driver program @command{gcc}\n+to a different compiler: the top-level driver program @code{gcc}\n that you originally invoked continues to run and invoke the other\n executables (preprocessor, compiler per se, assembler and linker)\n that do the real work.  However, since no real work is done in the\n@@ -4258,9 +4258,9 @@ however: the default version and target machine.  Therefore, you can\n install different instances of the driver program, compiled for\n different targets or versions, under different names.\n \n-For example, if the driver for version 2.0 is installed as @command{ogcc}\n-and that for version 2.1 is installed as @command{gcc}, then the command\n-@command{gcc} will use version 2.1 by default, while @command{ogcc} will use\n+For example, if the driver for version 2.0 is installed as @code{ogcc}\n+and that for version 2.1 is installed as @code{gcc}, then the command\n+@code{gcc} will use version 2.1 by default, while @code{ogcc} will use\n 2.0 by default.  However, you can choose either version with either\n command with the @samp{-V} option.\n \n@@ -6019,12 +6019,12 @@ header to indicate that @samp{eabi} extended relocations are used.\n @itemx -mno-eabi\n On System V.4 and embedded PowerPC systems do (do not) adhere to the\n Embedded Applications Binary Interface (eabi) which is a set of\n-modifications to the System V.4 specifications.  Selecting @option{-meabi}\n+modifications to the System V.4 specifications.  Selecting @code{-meabi}\n means that the stack is aligned to an 8 byte boundary, a function\n @code{__eabi} is called to from @code{main} to set up the eabi\n environment, and the @samp{-msdata} option can use both @code{r2} and\n @code{r13} to point to two separate small data areas.  Selecting\n-@option{-mno-eabi} means that the stack is aligned to a 16 byte boundary,\n+@code{-mno-eabi} means that the stack is aligned to a 16 byte boundary,\n do not call an initialization function from @code{main}, and the\n @samp{-msdata} option will only use @code{r13} to point to a single\n small data area.  The @samp{-meabi} option is on by default if you\n@@ -6821,7 +6821,7 @@ These @samp{-m} options are defined for the DEC Alpha implementations:\n @item -mno-soft-float\n @itemx -msoft-float\n Use (do not use) the hardware floating-point instructions for\n-floating-point operations.  When @option{-msoft-float} is specified,\n+floating-point operations.  When @code{-msoft-float} is specified,\n functions in @file{libgcc1.c} will be used to perform floating-point\n operations.  Unless they are replaced by routines that emulate the\n floating-point operations, or compiled in such a way as to call such\n@@ -6836,12 +6836,12 @@ required to have floating-point registers.\n @item -mfp-reg\n @itemx -mno-fp-regs\n Generate code that uses (does not use) the floating-point register set.\n-@option{-mno-fp-regs} implies @option{-msoft-float}.  If the floating-point\n+@code{-mno-fp-regs} implies @code{-msoft-float}.  If the floating-point\n register set is not used, floating point operands are passed in integer\n registers as if they were integers and floating-point results are passed\n in $0 instead of $f0.  This is a non-standard calling sequence, so any\n function with a floating-point argument or return value called by code\n-compiled with @option{-mno-fp-regs} must also be compiled with that\n+compiled with @code{-mno-fp-regs} must also be compiled with that\n option.\n \n A typical use of this option is building a kernel that does not use,\n@@ -6859,7 +6859,7 @@ during compilation.  The option is a shorthand for: @samp{-D_IEEE_FP\n code is less efficient but is able to correctly support denormalized\n numbers and exceptional IEEE values such as not-a-number and plus/minus\n infinity.  Other Alpha compilers call this option\n-@option{-ieee_with_no_inexact}.\n+@code{-ieee_with_no_inexact}.\n \n @item -mieee-with-inexact\n @c overfull hbox here --bob 22 jul96\n@@ -7165,7 +7165,7 @@ Comply with the calling conventions defined by Hitachi.\n \n @item -mnomacsave\n Mark the @code{MAC} register as call-clobbered, even if\n-@option{-mhitachi} is given.\n+@code{-mhitachi} is given.\n \n @item -misize\n Dump instruction size and location in the assembly code.\n@@ -7175,7 +7175,7 @@ This option is deprecated.  It pads structures to multiple of 4 bytes,\n which is incompatible with the SH ABI.\n \n @item -mspace\n-Optimize for space instead of speed.  Implied by @option{-Os}.\n+Optimize for space instead of speed.  Implied by @code{-Os}.\n \n @item -mprefergot\n When generating position-independent code, emit function calls using\n@@ -7207,12 +7207,12 @@ Identify the versions of each tool used by the compiler, in a\n Refrain from adding @code{.ident} directives to the output file (this is\n the default).\n \n-@item -YP,@var{dirs}\n+@item -YP@var{dirs}\n Search the directories @var{dirs}, and no others, for libraries\n specified with @samp{-l}.\n \n-@item -Ym,@var{dir}\n-Look in the directory @var{dir} to find the M4 preprocessor.\n+@item -Ym@var{dir}\n+Look in the directory @samp{dir} to find the M4 preprocessor.\n The assembler uses this option.\n @c This is supposed to go with a -Yd for predefined M4 macro files, but\n @c the generic assembler that comes with Solaris takes just -Ym.\n@@ -7720,7 +7720,7 @@ disable this option if you are compiling older C++ programs that don't\n use exception handling.\n \n @item -funwind-tables\n-Similar to @option{-fexceptions}, except that it will just generate any needed\n+Similar to @code{-fexceptions}, except that it will just generate any needed\n static data, but will not affect the generated code in any other way.\n You will normally not enable this option; instead, a language processor\n that needs this handling would enable it on your behalf.\n@@ -7780,10 +7780,10 @@ Do not output global initializations (such as C++ constructors and\n destructors) in the form used by the GNU linker (on systems where the GNU\n linker is the standard method of handling them).  Use this option when\n you want to use a non-GNU linker, which also requires using the\n-@command{collect2} program to make sure the system linker includes\n-constructors and destructors.  (@command{collect2} is included in the GCC\n-distribution.)  For systems which @emph{must} use @command{collect2}, the\n-compiler driver @command{gcc} is configured to do this automatically.\n+@code{collect2} program to make sure the system linker includes\n+constructors and destructors.  (@code{collect2} is included in the GCC\n+distribution.)  For systems which @emph{must} use @code{collect2}, the\n+compiler driver @code{gcc} is configured to do this automatically.\n \n @item -finhibit-size-directive\n Don't output a @code{.size} assembler directive, or anything else that\n@@ -8070,7 +8070,7 @@ in turn take precedence over those specified by the configuration of GCC.\n @xref{Driver}.\n @end ifset\n \n-@table @env\n+@table @code\n @item LANG\n @itemx LC_CTYPE\n @c @itemx LC_COLLATE\n@@ -8091,48 +8091,48 @@ in turn take precedence over those specified by the configuration of GCC.\n These environment variables control the way that GCC uses\n localization information that allow GCC to work with different\n national conventions.  GCC inspects the locale categories\n-@env{LC_CTYPE} and @env{LC_MESSAGES} if it has been configured to do\n+@code{LC_CTYPE} and @code{LC_MESSAGES} if it has been configured to do\n so.  These locale categories can be set to any value supported by your\n installation.  A typical value is @samp{en_UK} for English in the United\n Kingdom.\n \n-The @env{LC_CTYPE} environment variable specifies character\n+The @code{LC_CTYPE} environment variable specifies character\n classification.  GCC uses it to determine the character boundaries in\n a string; this is needed for some multibyte encodings that contain quote\n and escape characters that would otherwise be interpreted as a string\n end or escape.\n \n-The @env{LC_MESSAGES} environment variable specifies the language to\n+The @code{LC_MESSAGES} environment variable specifies the language to\n use in diagnostic messages.\n \n-If the @env{LC_ALL} environment variable is set, it overrides the value\n-of @env{LC_CTYPE} and @env{LC_MESSAGES}; otherwise, @env{LC_CTYPE}\n-and @env{LC_MESSAGES} default to the value of the @env{LANG}\n+If the @code{LC_ALL} environment variable is set, it overrides the value\n+of @code{LC_CTYPE} and @code{LC_MESSAGES}; otherwise, @code{LC_CTYPE}\n+and @code{LC_MESSAGES} default to the value of the @code{LANG}\n environment variable.  If none of these variables are set, GCC\n defaults to traditional C English behavior.\n \n @item TMPDIR\n @findex TMPDIR\n-If @env{TMPDIR} is set, it specifies the directory to use for temporary\n+If @code{TMPDIR} is set, it specifies the directory to use for temporary\n files.  GCC uses temporary files to hold the output of one stage of\n compilation which is to be used as input to the next stage: for example,\n the output of the preprocessor, which is the input to the compiler\n proper.\n \n @item GCC_EXEC_PREFIX\n @findex GCC_EXEC_PREFIX\n-If @env{GCC_EXEC_PREFIX} is set, it specifies a prefix to use in the\n+If @code{GCC_EXEC_PREFIX} is set, it specifies a prefix to use in the\n names of the subprograms executed by the compiler.  No slash is added\n when this prefix is combined with the name of a subprogram, but you can\n specify a prefix that ends with a slash if you wish.\n \n-If @env{GCC_EXEC_PREFIX} is not set, GNU CC will attempt to figure out\n+If @code{GCC_EXEC_PREFIX} is not set, GNU CC will attempt to figure out\n an appropriate prefix to use based on the pathname it was invoked with.\n \n If GCC cannot find the subprogram using the specified prefix, it\n tries looking in the usual places for the subprogram.\n \n-The default value of @env{GCC_EXEC_PREFIX} is\n+The default value of @code{GCC_EXEC_PREFIX} is\n @file{@var{prefix}/lib/gcc-lib/} where @var{prefix} is the value\n of @code{prefix} when you ran the @file{configure} script.\n \n@@ -8144,7 +8144,7 @@ used for linking.\n In addition, the prefix is used in an unusual way in finding the\n directories to search for header files.  For each of the standard\n directories whose name normally begins with @samp{/usr/local/lib/gcc-lib}\n-(more precisely, with the value of @env{GCC_INCLUDE_DIR}), GCC tries\n+(more precisely, with the value of @code{GCC_INCLUDE_DIR}), GCC tries\n replacing that beginning with the specified prefix to produce an\n alternate directory name.  Thus, with @samp{-Bfoo/}, GCC will search\n @file{foo/bar} where it would normally search @file{/usr/local/lib/bar}.\n@@ -8153,17 +8153,17 @@ come next.\n \n @item COMPILER_PATH\n @findex COMPILER_PATH\n-The value of @env{COMPILER_PATH} is a colon-separated list of\n-directories, much like @env{PATH}.  GCC tries the directories thus\n+The value of @code{COMPILER_PATH} is a colon-separated list of\n+directories, much like @code{PATH}.  GCC tries the directories thus\n specified when searching for subprograms, if it can't find the\n-subprograms using @env{GCC_EXEC_PREFIX}.\n+subprograms using @code{GCC_EXEC_PREFIX}.\n \n @item LIBRARY_PATH\n @findex LIBRARY_PATH\n-The value of @env{LIBRARY_PATH} is a colon-separated list of\n-directories, much like @env{PATH}.  When configured as a native compiler,\n+The value of @code{LIBRARY_PATH} is a colon-separated list of\n+directories, much like @code{PATH}.  When configured as a native compiler,\n GCC tries the directories thus specified when searching for special\n-linker files, if it can't find them using @env{GCC_EXEC_PREFIX}.  Linking\n+linker files, if it can't find them using @code{GCC_EXEC_PREFIX}.  Linking\n using GCC also uses these directories when searching for ordinary\n libraries for the @samp{-l} option (but directories specified with\n @samp{-L} come first).\n@@ -8177,7 +8177,7 @@ libraries for the @samp{-l} option (but directories specified with\n @c @itemx OBJCPLUS_INCLUDE_PATH\n These environment variables pertain to particular languages.  Each\n variable's value is a colon-separated list of directories, much like\n-@env{PATH}.  When GCC searches for header files, it tries the\n+@code{PATH}.  When GCC searches for header files, it tries the\n directories listed in the variable for the language you are using, after\n the directories specified with @samp{-I} but before the standard header\n file directories.\n@@ -8191,7 +8191,7 @@ output looks much like the output from the @samp{-M} option\n (@pxref{Preprocessor Options}), but it goes to a separate file, and is\n in addition to the usual results of compilation.\n \n-The value of @env{DEPENDENCIES_OUTPUT} can be just a file name, in\n+The value of @code{DEPENDENCIES_OUTPUT} can be just a file name, in\n which case the Make rules are written to that file, guessing the target\n name from the source file name.  Or the value can have the form\n @samp{@var{file} @var{target}}, in which case the rules are written to\n@@ -8204,7 +8204,7 @@ This variable is used to pass locale information to the compiler. One way in\n which this information is used is to determine the character set to be used\n when character literals, string literals and comments are parsed in C and C++.\n When the compiler is configured to allow multibyte characters,\n-the following values for @env{LANG} are recognized:\n+the following values for @code{LANG} are recognized:\n \n @table @samp\n @item C-JIS\n@@ -8215,7 +8215,7 @@ Recognize SJIS characters.\n Recognize EUCJP characters.\n @end table\n \n-If @env{LANG} is not defined, or if it has some other value, then the\n+If @code{LANG} is not defined, or if it has some other value, then the\n compiler will use mblen and mbtowc as defined by the default locale to\n recognize and translate multibyte characters.\n @end table"}, {"sha": "769583eba901fb1fc5d809ac4bd6baafa98d9da9", "filename": "gcc/tm.texi", "status": "modified", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/414c4dc49c98c5b9bba72a22fe471a93f8c949c2/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/414c4dc49c98c5b9bba72a22fe471a93f8c949c2/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=414c4dc49c98c5b9bba72a22fe471a93f8c949c2", "patch": "@@ -22,6 +22,7 @@ includes @file{tm.h} and most compiler source files include\n @menu\n * Driver::              Controlling how the driver runs the compilation passes.\n * Run-time Target::     Defining @samp{-m} options like @samp{-m68000} and @samp{-m68020}.\n+* Per-Function Data::   Defining data structures for per-function information.\n * Storage Layout::      Defining sizes and alignments of data.\n * Type Layout::         Defining sizes and properties of basic user data types.\n * Registers::           Naming and describing the hardware registers.\n@@ -704,6 +705,80 @@ pointer.  If this macro is defined, GCC will turn on the\n @samp{-fomit-frame-pointer} option whenever @samp{-O} is specified.\n @end table\n \n+@node Per-Function Data\n+@section Defining data structures for per-function information.\n+@cindex per-function data\n+@cindex data structures\n+\n+If the target needs to store information on a per-function basis, GCC\n+provides a macro and a couple of variables to allow this.  Note, just\n+using statics to store the information is a bad idea, since GCC supports\n+nested functions, so you can be halfway through encoding one function\n+when another one comes along.\n+\n+GCC defines a data structure called @code{struct function} which\n+contains all of the data specific to an individual function.  This\n+structure contains a field called @code{machine} whose type is\n+@code{struct machine_function *}, which can be used by targets to point\n+to their own specific data.\n+\n+If a target needs per-function specific data it should define the type\n+@code{struct machine_function} and also the macro\n+@code{INIT_EXPANDERS}.  This macro should be used to initialise some or\n+all of the function pointers @code{init_machine_status},\n+@code{free_machine_status} and @code{mark_machine_status}.  These\n+pointers are explained below. \n+\n+One typical use of per-function, target specific data is to create an\n+RTX to hold the register containing the function's return address.  This\n+RTX can then be used to implement the @code{__builtin_return_address}\n+function, for level 0.\n+\n+Note - earlier implementations of GCC used a single data area to hold\n+all of the per-function information.  Thus when processing of a nested\n+function began the old per-function data had to be pushed onto a\n+stack, and when the processing was finished, it had to be popped off the\n+stack.  GCC used to provide function pointers called\n+@code{save_machine_status} and @code{restore_machine_status} to handle \n+the saving and restoring of the target specific information.  Since the\n+single data area approach is no longer used, these pointers are no\n+longer supported.\n+\n+The macro and function pointers are described below.\n+\n+@table @code\n+@findex INIT_EXPANDERS\n+@item   INIT_EXPANDERS\n+Macro called to initialise any target specific information.  This macro\n+is called once per function, before generation of any RTL has begun.\n+The intention of this macro is to allow the initialisation of the\n+function pointers below.\n+\n+@findex init_machine_status\n+@item   init_machine_status\n+This is a @code{void (*)(struct function *)} function pointer.  If this\n+pointer is non-NULL it will be called once per function, before function\n+compilation starts, in order to allow the target to perform any target\n+specific initialisation of the @code{struct function} structure.  It is\n+intended that this would be used to initialise the @code{machine} of\n+that struture.\n+\n+@findex free_machine_status\n+@item   free_machine_status\n+This is a @code{void (*)(struct function *)} function pointer.  If this\n+pointer is non-NULL it will be called once per function, after the\n+function has been compiled, in order to allow any memory allocated\n+during the @code{init_machine_status} function call to be freed.\n+\n+@findex mark_machine_status\n+@item   mark_machine_status\n+This is a @code{void (*)(struct function *)} function pointer.  If this\n+pointer is non-NULL it will be called once per function in order to mark\n+any data items in the @code{struct machine_function} structure which\n+need garbage collection.\n+\n+@end table\n+\n @node Storage Layout\n @section Storage Layout\n @cindex storage layout"}]}