{"sha": "61bea3b0e5f5f7172015d54056e25c88255c4a3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFiZWEzYjBlNWY1ZjcxNzIwMTVkNTQwNTZlMjVjODgyNTVjNGEzYQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2004-05-26T23:58:33Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2004-05-26T23:58:33Z"}, "message": "rs6000.c (spe_expand_stv_builtin): New.\n\n\tPR/14924\n\t* config/rs6000/rs6000.c (spe_expand_stv_builtin): New.\n\nFrom-SVN: r82302", "tree": {"sha": "abcb21745ae549b1253ec9eaf3cf15ac9e409ce1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/abcb21745ae549b1253ec9eaf3cf15ac9e409ce1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61bea3b0e5f5f7172015d54056e25c88255c4a3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61bea3b0e5f5f7172015d54056e25c88255c4a3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61bea3b0e5f5f7172015d54056e25c88255c4a3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61bea3b0e5f5f7172015d54056e25c88255c4a3a/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4eeaf81e5b0b9345c90cedecc0abf0f0d370ebb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eeaf81e5b0b9345c90cedecc0abf0f0d370ebb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4eeaf81e5b0b9345c90cedecc0abf0f0d370ebb9"}], "stats": {"total": 67, "additions": 53, "deletions": 14}, "files": [{"sha": "38298f0b7bb8b96d959de12180a4e33af514597b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61bea3b0e5f5f7172015d54056e25c88255c4a3a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61bea3b0e5f5f7172015d54056e25c88255c4a3a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61bea3b0e5f5f7172015d54056e25c88255c4a3a", "patch": "@@ -1,3 +1,8 @@\n+2004-05-26  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR/14924\n+\t* config/rs6000/rs6000.c (spe_expand_stv_builtin): New.\n+\n 2004-05-26  Roger Sayle  <roger@eyesopen.com>\n \n \t* tree.h: Fix comment typo."}, {"sha": "e6ce004129b202db168ad9161dec3bb792556ef7", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 48, "deletions": 14, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61bea3b0e5f5f7172015d54056e25c88255c4a3a/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61bea3b0e5f5f7172015d54056e25c88255c4a3a/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=61bea3b0e5f5f7172015d54056e25c88255c4a3a", "patch": "@@ -387,6 +387,7 @@ static void enable_mask_for_builtins (struct builtin_description *, int,\n static tree build_opaque_vector_type (tree, int);\n static void spe_init_builtins (void);\n static rtx spe_expand_builtin (tree, rtx, bool *);\n+static rtx spe_expand_stv_builtin (enum insn_code, tree);\n static rtx spe_expand_predicate_builtin (enum insn_code, tree, rtx);\n static rtx spe_expand_evsel_builtin (enum insn_code, tree, rtx);\n static int rs6000_emit_int_cmove (rtx, rtx, rtx, rtx);\n@@ -6007,6 +6008,39 @@ altivec_expand_lv_builtin (enum insn_code icode, tree arglist, rtx target)\n   return target;\n }\n \n+static rtx\n+spe_expand_stv_builtin (enum insn_code icode, tree arglist)\n+{\n+  tree arg0 = TREE_VALUE (arglist);\n+  tree arg1 = TREE_VALUE (TREE_CHAIN (arglist));\n+  tree arg2 = TREE_VALUE (TREE_CHAIN (TREE_CHAIN (arglist)));\n+  rtx op0 = expand_expr (arg0, NULL_RTX, VOIDmode, 0);\n+  rtx op1 = expand_expr (arg1, NULL_RTX, VOIDmode, 0);\n+  rtx op2 = expand_expr (arg2, NULL_RTX, VOIDmode, 0);\n+  rtx pat;\n+  enum machine_mode mode0 = insn_data[icode].operand[0].mode;\n+  enum machine_mode mode1 = insn_data[icode].operand[1].mode;\n+  enum machine_mode mode2 = insn_data[icode].operand[2].mode;\n+\n+  /* Invalid arguments.  Bail before doing anything stoopid!  */\n+  if (arg0 == error_mark_node\n+      || arg1 == error_mark_node\n+      || arg2 == error_mark_node)\n+    return const0_rtx;\n+\n+  if (! (*insn_data[icode].operand[2].predicate) (op0, mode2))\n+    op0 = copy_to_mode_reg (mode2, op0);\n+  if (! (*insn_data[icode].operand[0].predicate) (op1, mode0))\n+    op1 = copy_to_mode_reg (mode0, op1);\n+  if (! (*insn_data[icode].operand[1].predicate) (op2, mode1))\n+    op2 = copy_to_mode_reg (mode1, op2);\n+\n+  pat = GEN_FCN (icode) (op1, op2, op0);\n+  if (pat)\n+    emit_insn (pat);\n+  return NULL_RTX;\n+}\n+\n static rtx\n altivec_expand_stv_builtin (enum insn_code icode, tree arglist)\n {\n@@ -6534,33 +6568,33 @@ spe_expand_builtin (tree exp, rtx target, bool *expandedp)\n   switch (fcode)\n     {\n     case SPE_BUILTIN_EVSTDDX:\n-      return altivec_expand_stv_builtin (CODE_FOR_spe_evstddx, arglist);\n+      return spe_expand_stv_builtin (CODE_FOR_spe_evstddx, arglist);\n     case SPE_BUILTIN_EVSTDHX:\n-      return altivec_expand_stv_builtin (CODE_FOR_spe_evstdhx, arglist);\n+      return spe_expand_stv_builtin (CODE_FOR_spe_evstdhx, arglist);\n     case SPE_BUILTIN_EVSTDWX:\n-      return altivec_expand_stv_builtin (CODE_FOR_spe_evstdwx, arglist);\n+      return spe_expand_stv_builtin (CODE_FOR_spe_evstdwx, arglist);\n     case SPE_BUILTIN_EVSTWHEX:\n-      return altivec_expand_stv_builtin (CODE_FOR_spe_evstwhex, arglist);\n+      return spe_expand_stv_builtin (CODE_FOR_spe_evstwhex, arglist);\n     case SPE_BUILTIN_EVSTWHOX:\n-      return altivec_expand_stv_builtin (CODE_FOR_spe_evstwhox, arglist);\n+      return spe_expand_stv_builtin (CODE_FOR_spe_evstwhox, arglist);\n     case SPE_BUILTIN_EVSTWWEX:\n-      return altivec_expand_stv_builtin (CODE_FOR_spe_evstwwex, arglist);\n+      return spe_expand_stv_builtin (CODE_FOR_spe_evstwwex, arglist);\n     case SPE_BUILTIN_EVSTWWOX:\n-      return altivec_expand_stv_builtin (CODE_FOR_spe_evstwwox, arglist);\n+      return spe_expand_stv_builtin (CODE_FOR_spe_evstwwox, arglist);\n     case SPE_BUILTIN_EVSTDD:\n-      return altivec_expand_stv_builtin (CODE_FOR_spe_evstdd, arglist);\n+      return spe_expand_stv_builtin (CODE_FOR_spe_evstdd, arglist);\n     case SPE_BUILTIN_EVSTDH:\n-      return altivec_expand_stv_builtin (CODE_FOR_spe_evstdh, arglist);\n+      return spe_expand_stv_builtin (CODE_FOR_spe_evstdh, arglist);\n     case SPE_BUILTIN_EVSTDW:\n-      return altivec_expand_stv_builtin (CODE_FOR_spe_evstdw, arglist);\n+      return spe_expand_stv_builtin (CODE_FOR_spe_evstdw, arglist);\n     case SPE_BUILTIN_EVSTWHE:\n-      return altivec_expand_stv_builtin (CODE_FOR_spe_evstwhe, arglist);\n+      return spe_expand_stv_builtin (CODE_FOR_spe_evstwhe, arglist);\n     case SPE_BUILTIN_EVSTWHO:\n-      return altivec_expand_stv_builtin (CODE_FOR_spe_evstwho, arglist);\n+      return spe_expand_stv_builtin (CODE_FOR_spe_evstwho, arglist);\n     case SPE_BUILTIN_EVSTWWE:\n-      return altivec_expand_stv_builtin (CODE_FOR_spe_evstwwe, arglist);\n+      return spe_expand_stv_builtin (CODE_FOR_spe_evstwwe, arglist);\n     case SPE_BUILTIN_EVSTWWO:\n-      return altivec_expand_stv_builtin (CODE_FOR_spe_evstwwo, arglist);\n+      return spe_expand_stv_builtin (CODE_FOR_spe_evstwwo, arglist);\n     case SPE_BUILTIN_MFSPEFSCR:\n       icode = CODE_FOR_spe_mfspefscr;\n       tmode = insn_data[icode].operand[0].mode;"}]}