{"sha": "560c94a2b972c24833d1378fff64e7fab16cc3cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTYwYzk0YTJiOTcyYzI0ODMzZDEzNzhmZmY2NGU3ZmFiMTZjYzNjZg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-21T19:27:24Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-21T19:27:24Z"}, "message": "Use CONST_DOUBLE_FROM_REAL_VALUE macro for immed_real_const_1.\n\nFrom-SVN: r7113", "tree": {"sha": "75b40b534495deaecdd20dc0b8fe9e3c46da0e67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75b40b534495deaecdd20dc0b8fe9e3c46da0e67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/560c94a2b972c24833d1378fff64e7fab16cc3cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/560c94a2b972c24833d1378fff64e7fab16cc3cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/560c94a2b972c24833d1378fff64e7fab16cc3cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/560c94a2b972c24833d1378fff64e7fab16cc3cf/comments", "author": null, "committer": null, "parents": [{"sha": "ca5ddfbcb55dd692420a33580d916b429c95d2b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca5ddfbcb55dd692420a33580d916b429c95d2b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca5ddfbcb55dd692420a33580d916b429c95d2b5"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "9c64402d1755ddb0671943a16ede5d74a6bc81b9", "filename": "gcc/cse.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/560c94a2b972c24833d1378fff64e7fab16cc3cf/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/560c94a2b972c24833d1378fff64e7fab16cc3cf/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=560c94a2b972c24833d1378fff64e7fab16cc3cf", "patch": "@@ -3178,7 +3178,7 @@ simplify_unary_operation (code, mode, op, op_mode)\n \t  abort ();\n \t}\n \n-      x = immed_real_const_1 (d, mode);\n+      x = CONST_DOUBLE_FROM_REAL_VALUE (d, mode);\n       set_float_handler (NULL_PTR);\n       return x;\n     }\n@@ -3334,7 +3334,7 @@ simplify_binary_operation (code, mode, op0, op1)\n \n       value = real_value_truncate (mode, value);\n       set_float_handler (NULL_PTR);\n-      return immed_real_const_1 (value, mode);\n+      return CONST_DOUBLE_FROM_REAL_VALUE (value, mode);\n     }\n #endif  /* not REAL_IS_NOT_DOUBLE, or REAL_ARITHMETIC */\n \n@@ -5160,7 +5160,8 @@ fold_rtx (x, insn)\n #ifdef FLOAT_STORE_FLAG_VALUE\n \t  if (GET_MODE_CLASS (mode) == MODE_FLOAT)\n \t    {\n-\t      true = immed_real_const_1 (FLOAT_STORE_FLAG_VALUE, mode);\n+\t      true = CONST_DOUBLE_FROM_REAL_VALUE (FLOAT_STORE_FLAG_VALUE,\n+\t\t\t\t\t\t   mode);\n \t      false = CONST0_RTX (mode);\n \t    }\n #endif\n@@ -5269,7 +5270,8 @@ fold_rtx (x, insn)\n #ifdef FLOAT_STORE_FLAG_VALUE\n \t      if (GET_MODE_CLASS (mode) == MODE_FLOAT)\n \t\t{\n-\t\t  true = immed_real_const_1 (FLOAT_STORE_FLAG_VALUE, mode);\n+\t\t  true = CONST_DOUBLE_FROM_REAL_VALUE (FLOAT_STORE_FLAG_VALUE,\n+\t\t\t\t\t\t       mode);\n \t\t  false = CONST0_RTX (mode);\n \t\t}\n #endif\n@@ -5298,7 +5300,7 @@ fold_rtx (x, insn)\n #ifdef FLOAT_STORE_FLAG_VALUE\n       if (new != 0 && GET_MODE_CLASS (mode) == MODE_FLOAT)\n \tnew = ((new == const0_rtx) ? CONST0_RTX (mode)\n-\t       : immed_real_const_1 (FLOAT_STORE_FLAG_VALUE, mode));\n+\t       : CONST_DOUBLE_FROM_REAL_VALUE (FLOAT_STORE_FLAG_VALUE, mode));\n #endif\n       break;\n "}]}