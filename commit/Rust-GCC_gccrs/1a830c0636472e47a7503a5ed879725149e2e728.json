{"sha": "1a830c0636472e47a7503a5ed879725149e2e728", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE4MzBjMDYzNjQ3MmU0N2E3NTAzYTVlZDg3OTcyNTE0OWUyZTcyOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-08-03T10:44:17Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-08-03T10:44:17Z"}, "message": "analyzer: Fix ICE on MD builtin [PR101721]\n\nThe following testcase ICEs because DECL_FUNCTION_CODE asserts the builtin\nis BUILT_IN_NORMAL, but it sees a backend (MD) builtin instead.\nThe FE, normal and MD builtin numbers overlap, so one should always\ncheck what kind of builtin it is before looking at specific codes.\n\nOn the other side, region-model.cc has:\n      if (fndecl_built_in_p (callee_fndecl, BUILT_IN_NORMAL)\n          && gimple_builtin_call_types_compatible_p (call, callee_fndecl))\n        switch (DECL_UNCHECKED_FUNCTION_CODE (callee_fndecl))\nwhich IMO should use DECL_FUNCTION_CODE instead, it checked first it is\na normal builtin...\n\n2021-08-03  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR analyzer/101721\n\t* sm-malloc.cc (known_allocator_p): Only check DECL_FUNCTION_CODE on\n\tBUILT_IN_NORMAL builtins.\n\n\t* gcc.dg/analyzer/pr101721.c: New test.", "tree": {"sha": "58a8711da5148b4a837d5224c5ebe332dc069120", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58a8711da5148b4a837d5224c5ebe332dc069120"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a830c0636472e47a7503a5ed879725149e2e728", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a830c0636472e47a7503a5ed879725149e2e728", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a830c0636472e47a7503a5ed879725149e2e728", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a830c0636472e47a7503a5ed879725149e2e728/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "872c1a56e3a08f9e4bb7032b38b0883e8cd7700a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/872c1a56e3a08f9e4bb7032b38b0883e8cd7700a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/872c1a56e3a08f9e4bb7032b38b0883e8cd7700a"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "74c6fee263821b647a5dde516dca74e889b668a7", "filename": "gcc/analyzer/sm-malloc.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a830c0636472e47a7503a5ed879725149e2e728/gcc%2Fanalyzer%2Fsm-malloc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a830c0636472e47a7503a5ed879725149e2e728/gcc%2Fanalyzer%2Fsm-malloc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fsm-malloc.cc?ref=1a830c0636472e47a7503a5ed879725149e2e728", "patch": "@@ -1543,7 +1543,7 @@ known_allocator_p (const_tree fndecl, const gcall *call)\n \n   /* ... or it is a builtin allocator that allocates objects freed with\n      __builtin_free.  */\n-  if (fndecl_built_in_p (fndecl))\n+  if (fndecl_built_in_p (fndecl, BUILT_IN_NORMAL))\n     switch (DECL_FUNCTION_CODE (fndecl))\n       {\n       case BUILT_IN_MALLOC:"}, {"sha": "07ef2d65cc3f18cc8c36b8602f9dcc57925fecb3", "filename": "gcc/testsuite/gcc.dg/analyzer/pr101721.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a830c0636472e47a7503a5ed879725149e2e728/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr101721.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a830c0636472e47a7503a5ed879725149e2e728/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr101721.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr101721.c?ref=1a830c0636472e47a7503a5ed879725149e2e728", "patch": "@@ -0,0 +1,8 @@\n+/* PR analyzer/101721 */\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n+\n+void\n+foo ()\n+{\n+  __builtin_ia32_pause ();\n+}"}]}