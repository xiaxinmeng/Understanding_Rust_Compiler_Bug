{"sha": "70e9ab23f4ad839bd0979da933101a0da8fbefe9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBlOWFiMjNmNGFkODM5YmQwOTc5ZGE5MzMxMDFhMGRhOGZiZWZlOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-02-26T04:27:40Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-02-26T04:27:40Z"}, "message": "re PR c++/56438 (ICE in value_dependent_expression_p, at cp/pt.c:19551)\n\n\tPR c++/56438\n\t* semantics.c (potential_constant_expression_1): In C++98, a cast\n\tto non-integral type can't be a constant expression.\n\nFrom-SVN: r196274", "tree": {"sha": "2f05abfe639fd33aacc6d14d4b41b41b3cdde14d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f05abfe639fd33aacc6d14d4b41b41b3cdde14d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70e9ab23f4ad839bd0979da933101a0da8fbefe9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70e9ab23f4ad839bd0979da933101a0da8fbefe9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70e9ab23f4ad839bd0979da933101a0da8fbefe9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70e9ab23f4ad839bd0979da933101a0da8fbefe9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d2b512dc5d40e59d5c083eaa73dda750a373fe03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2b512dc5d40e59d5c083eaa73dda750a373fe03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2b512dc5d40e59d5c083eaa73dda750a373fe03"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "eb98b044633504be0d55dff1dd7ad0fe5acb3b3c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70e9ab23f4ad839bd0979da933101a0da8fbefe9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70e9ab23f4ad839bd0979da933101a0da8fbefe9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=70e9ab23f4ad839bd0979da933101a0da8fbefe9", "patch": "@@ -1,3 +1,9 @@\n+2013-02-25  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/56438\n+\t* semantics.c (potential_constant_expression_1): In C++98, a cast\n+\tto non-integral type can't be a constant expression.\n+\n 2013-02-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/56403"}, {"sha": "60271b511ad03b04f16e6ce509f5d222dba3900c", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70e9ab23f4ad839bd0979da933101a0da8fbefe9/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70e9ab23f4ad839bd0979da933101a0da8fbefe9/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=70e9ab23f4ad839bd0979da933101a0da8fbefe9", "patch": "@@ -8607,6 +8607,18 @@ potential_constant_expression_1 (tree t, bool want_rval, tsubst_flags_t flags)\n     case STATIC_CAST_EXPR:\n     case REINTERPRET_CAST_EXPR:\n     case IMPLICIT_CONV_EXPR:\n+      if (cxx_dialect < cxx0x\n+\t  && !dependent_type_p (TREE_TYPE (t))\n+\t  && !INTEGRAL_OR_ENUMERATION_TYPE_P (TREE_TYPE (t)))\n+\t/* In C++98, a conversion to non-integral type can't be part of a\n+\t   constant expression.  */\n+\t{\n+\t  if (flags & tf_error)\n+\t    error (\"cast to non-integral type %qT in a constant expression\",\n+\t\t   TREE_TYPE (t));\n+\t  return false;\n+\t}\n+\n       return (potential_constant_expression_1\n \t      (TREE_OPERAND (t, 0),\n \t       TREE_CODE (TREE_TYPE (t)) != REFERENCE_TYPE, flags));"}, {"sha": "b343ee427b32e3740504c79e9563158541a429fb", "filename": "gcc/testsuite/g++.dg/template/cast3.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70e9ab23f4ad839bd0979da933101a0da8fbefe9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcast3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70e9ab23f4ad839bd0979da933101a0da8fbefe9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcast3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcast3.C?ref=70e9ab23f4ad839bd0979da933101a0da8fbefe9", "patch": "@@ -0,0 +1,22 @@\n+// PR c++/56438\n+\n+struct A { };\n+A& operator<<(A&, const char*);\n+\n+struct B {\n+  int size();\n+};\n+\n+struct C { };\n+\n+template <class S, class T>\n+S bar(const S& s, const T& t) {\n+  return s;\n+}\n+\n+template<class S, class T>\n+void foo() {\n+  A a;\n+  B b;\n+  a << bar(b.size(), C());\t// { dg-error \"no match\" }\n+}"}]}