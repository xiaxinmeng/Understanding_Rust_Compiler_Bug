{"sha": "aa5b94de8489f1c17727c69aec521ffa660622a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE1Yjk0ZGU4NDg5ZjFjMTc3MjdjNjlhZWM1MjFmZmE2NjA2MjJhNg==", "commit": {"author": {"name": "Fergus Henderson", "email": "fjh@cs.mu.oz.au", "date": "2001-03-05T12:17:45Z"}, "committer": {"name": "Fergus Henderson", "email": "fjh@gcc.gnu.org", "date": "2001-03-05T12:17:45Z"}, "message": "Put main() in a separate file, so that the language\n\tfront-end can use a different main().\n\n\t* main.c: New.\n\t* toplev.c: (main): Rename as toplev_main.\n\t* toplev.h: Declare toplev_main.\n\t* Makefile.in (OBJS): add toplev.o.\n\t  (BACKEND): remove toplev.o, add main.o.\n\nFrom-SVN: r40247", "tree": {"sha": "105a2919154859f7d662864db7555e317b9cc8c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/105a2919154859f7d662864db7555e317b9cc8c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa5b94de8489f1c17727c69aec521ffa660622a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa5b94de8489f1c17727c69aec521ffa660622a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa5b94de8489f1c17727c69aec521ffa660622a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa5b94de8489f1c17727c69aec521ffa660622a6/comments", "author": null, "committer": null, "parents": [{"sha": "a22f570364f4497027c873bcdcad34dd272ef115", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a22f570364f4497027c873bcdcad34dd272ef115", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a22f570364f4497027c873bcdcad34dd272ef115"}], "stats": {"total": 69, "additions": 59, "deletions": 10}, "files": [{"sha": "6946e61d116781f11a901c52e59f522681d1fd16", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa5b94de8489f1c17727c69aec521ffa660622a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa5b94de8489f1c17727c69aec521ffa660622a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa5b94de8489f1c17727c69aec521ffa660622a6", "patch": "@@ -1,3 +1,14 @@\n+2001-03-05  Fergus Henderson  <fjh@cs.mu.oz.au>\n+\n+\tPut main() in a separate file, so that the language\n+\tfront-end can use a different main().\n+\n+\t* main.c: New.\n+\t* toplev.c: (main): Rename as toplev_main.\n+\t* toplev.h: Declare toplev_main.\n+\t* Makefile.in (OBJS): add toplev.o.\n+\t  (BACKEND): remove toplev.o, add main.o.\n+\n 2001-03-04  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* cppfiles.c (search_from): Special case the empty string."}, {"sha": "365a6443140694cd78387539f82c91c3bbf24651", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa5b94de8489f1c17727c69aec521ffa660622a6/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa5b94de8489f1c17727c69aec521ffa660622a6/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=aa5b94de8489f1c17727c69aec521ffa660622a6", "patch": "@@ -746,11 +746,11 @@ OBJS =\t\t\t\t\t\t\t\t\t\\\n  recog.o reg-stack.o regclass.o regmove.o regrename.o reload.o\t\t\\\n  reload1.o reorg.o resource.o rtl.o rtlanal.o sbitmap.o sched-deps.o\t\\\n  sched-ebb.o sched-rgn.o sched-vis.o sdbout.o sibcall.o simplify-rtx.o\t\\\n- splay-tree.o ssa.o stmt.o stor-layout.o stringpool.o timevar.o tree.o\t\\\n- unroll.o varasm.o varray.o version.o xcoffout.o\t\t\t\\\n+ splay-tree.o ssa.o stmt.o stor-layout.o stringpool.o timevar.o\t\t\\\n+ toplev.o tree.o unroll.o varasm.o varray.o version.o xcoffout.o\t\\\n  $(GGC) $(out_object_file) $(EXTRA_OBJS)\n \n-BACKEND = toplev.o libbackend.a\n+BACKEND = main.o libbackend.a\n \n # GEN files are listed separately, so they can be built before doing parallel\n #  makes for cc1 or cc1plus.  Otherwise sequent parallel make attempts to load\n@@ -1348,6 +1348,7 @@ toplev.o : toplev.c $(CONFIG_H) system.h $(TREE_H) $(RTL_H) function.h \\\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(MAYBE_USE_COLLECT2) \\\n \t  -DTARGET_NAME=\\\"$(target_alias)\\\" \\\n \t  -c $(srcdir)/toplev.c\n+main.o : main.c toplev.h\n \n rtl.o : rtl.c $(GCONFIG_H) system.h $(RTL_H) bitmap.h $(GGC_H) toplev.h\n \t$(CC) -c $(ALL_CFLAGS) -DGENERATOR_FILE $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)"}, {"sha": "34f7aa865df6bcbaa25747631d9f069a48eca61f", "filename": "gcc/main.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa5b94de8489f1c17727c69aec521ffa660622a6/gcc%2Fmain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa5b94de8489f1c17727c69aec521ffa660622a6/gcc%2Fmain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmain.c?ref=aa5b94de8489f1c17727c69aec521ffa660622a6", "patch": "@@ -0,0 +1,35 @@\n+/* main.c: defines main() for cc1, cc1plus, etc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#include \"gansidecl.h\"\n+#include \"toplev.h\"\n+\n+int main PARAMS ((int argc, char **argv));\n+\n+/* We define main() to call toplev_main(), which is defined in toplev.c.\n+   We do this in a separate file in order to allow the language front-end\n+   to define a different main(), if it so desires.  */\n+\n+int\n+main (argc, argv)\n+  int argc;\n+  char **argv;\n+{\n+  return toplev_main (argc, argv);\n+}"}, {"sha": "dd1321c4f3186acc806bb2cc5ff57e2fabdbb944", "filename": "gcc/toplev.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa5b94de8489f1c17727c69aec521ffa660622a6/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa5b94de8489f1c17727c69aec521ffa660622a6/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=aa5b94de8489f1c17727c69aec521ffa660622a6", "patch": "@@ -192,7 +192,7 @@ static void print_switch_values PARAMS ((FILE *, int, int, const char *,\n \n const char *progname;\n \n-/* Copy of arguments to main.  */\n+/* Copy of arguments to toplev_main.  */\n int save_argc;\n char **save_argv;\n \f\n@@ -4582,14 +4582,15 @@ independent_decode_option (argc, argv)\n   return 1;\n }\n \f\n-/* Entry point of cc1/c++.  Decode command args, then call compile_file.\n-   Exit code is 35 if can't open files, 34 if fatal error,\n-   33 if had nonfatal errors, else success.  */\n-\n-extern int main PARAMS ((int, char **));\n+/* Entry point of cc1, cc1plus, jc1, f771, etc.\n+   Decode command args, then call compile_file.\n+   Exit code is FATAL_EXIT_CODE if can't open files or if there were\n+   any errors, or SUCCESS_EXIT_CODE if compilation succeeded.\n+   \n+   It is not safe to call this function more than once.  */\n \n int\n-main (argc, argv)\n+toplev_main (argc, argv)\n      int argc;\n      char **argv;\n {"}, {"sha": "08c6112d6b9f7d536ccd47a3a78321deacb681cf", "filename": "gcc/toplev.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa5b94de8489f1c17727c69aec521ffa660622a6/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa5b94de8489f1c17727c69aec521ffa660622a6/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=aa5b94de8489f1c17727c69aec521ffa660622a6", "patch": "@@ -31,6 +31,7 @@ struct rtx_def;\n #define skip_leading_substring(whole,  part) \\\n    (strncmp (whole, part, strlen (part)) ? NULL : whole + strlen (part))\n \n+extern int toplev_main\t\t\tPARAMS ((int argc, char **argv));\n extern int read_integral_parameter\tPARAMS ((const char *, const char *,\n \t\t\t\t\t\tconst int));\n extern int count_error\t\t\tPARAMS ((int));"}]}