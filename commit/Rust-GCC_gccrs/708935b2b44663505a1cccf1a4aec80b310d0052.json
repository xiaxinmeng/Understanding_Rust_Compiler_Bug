{"sha": "708935b2b44663505a1cccf1a4aec80b310d0052", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA4OTM1YjJiNDQ2NjM1MDVhMWNjY2YxYTRhZWM4MGIzMTBkMDA1Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-10-04T06:54:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-10-04T06:54:05Z"}, "message": "re PR c++/91974 (function not sequenced before function argument)\n\n\tPR c++/91974\n\t* cp-gimplify.c (cp_gimplify_expr) <case CALL_EXPR>: For\n\t-fstrong-eval-order ensure CALL_EXPR_FN side-effects are evaluated\n\tbefore any arguments.  Additionally, ensure CALL_EXPR_FN that isn't\n\tinvariant nor OBJ_TYPE_REF nor SSA_NAME is forced into a temporary.\n\n\t* g++.dg/cpp1z/eval-order5.C: New test.\n\nFrom-SVN: r276562", "tree": {"sha": "76c2aaee541f5a226be94bd8a91efde5aa4e5acb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76c2aaee541f5a226be94bd8a91efde5aa4e5acb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/708935b2b44663505a1cccf1a4aec80b310d0052", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/708935b2b44663505a1cccf1a4aec80b310d0052", "html_url": "https://github.com/Rust-GCC/gccrs/commit/708935b2b44663505a1cccf1a4aec80b310d0052", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/708935b2b44663505a1cccf1a4aec80b310d0052/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cf09ecdb94d617f740e938c476252e61dffacc29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf09ecdb94d617f740e938c476252e61dffacc29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf09ecdb94d617f740e938c476252e61dffacc29"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "a11bdaf693ab1dbe723110956d98866705c54921", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/708935b2b44663505a1cccf1a4aec80b310d0052/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/708935b2b44663505a1cccf1a4aec80b310d0052/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=708935b2b44663505a1cccf1a4aec80b310d0052", "patch": "@@ -1,3 +1,11 @@\n+2019-10-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/91974\n+\t* cp-gimplify.c (cp_gimplify_expr) <case CALL_EXPR>: For\n+\t-fstrong-eval-order ensure CALL_EXPR_FN side-effects are evaluated\n+\tbefore any arguments.  Additionally, ensure CALL_EXPR_FN that isn't\n+\tinvariant nor OBJ_TYPE_REF nor SSA_NAME is forced into a temporary.\n+\n 2019-10-03  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* init.c (build_new): Use cp_expr_loc_or_input_loc in two places."}, {"sha": "65453929d310c6bfc96d445e743a113b6eb09fcc", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/708935b2b44663505a1cccf1a4aec80b310d0052/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/708935b2b44663505a1cccf1a4aec80b310d0052/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=708935b2b44663505a1cccf1a4aec80b310d0052", "patch": "@@ -818,6 +818,21 @@ cp_gimplify_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p)\n \n     case CALL_EXPR:\n       ret = GS_OK;\n+      if (flag_strong_eval_order == 2\n+\t  && CALL_EXPR_FN (*expr_p)\n+\t  && cp_get_callee_fndecl_nofold (*expr_p) == NULL_TREE)\n+\t{\n+\t  enum gimplify_status t\n+\t    = gimplify_expr (&CALL_EXPR_FN (*expr_p), pre_p, NULL,\n+\t\t\t     is_gimple_call_addr, fb_rvalue);\n+\t  if (t == GS_ERROR)\n+\t    ret = GS_ERROR;\n+\t  else if (is_gimple_variable (CALL_EXPR_FN (*expr_p))\n+\t\t   && TREE_CODE (CALL_EXPR_FN (*expr_p)) != SSA_NAME)\n+\t    CALL_EXPR_FN (*expr_p)\n+\t      = get_initialized_tmp_var (CALL_EXPR_FN (*expr_p), pre_p,\n+\t\t\t\t\t NULL);\n+\t}\n       if (!CALL_EXPR_FN (*expr_p))\n \t/* Internal function call.  */;\n       else if (CALL_EXPR_REVERSE_ARGS (*expr_p))"}, {"sha": "1dce341bd58f62b7b88dbf86fccbaa2f9854cbbf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/708935b2b44663505a1cccf1a4aec80b310d0052/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/708935b2b44663505a1cccf1a4aec80b310d0052/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=708935b2b44663505a1cccf1a4aec80b310d0052", "patch": "@@ -1,3 +1,8 @@\n+2019-10-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/91974\n+\t* g++.dg/cpp1z/eval-order5.C: New test.\n+\n 2019-10-03  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/91497"}, {"sha": "a8f06ed421ac0f319ca76c7d2cce7872811a5dad", "filename": "gcc/testsuite/g++.dg/cpp1z/eval-order5.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/708935b2b44663505a1cccf1a4aec80b310d0052/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Feval-order5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/708935b2b44663505a1cccf1a4aec80b310d0052/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Feval-order5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Feval-order5.C?ref=708935b2b44663505a1cccf1a4aec80b310d0052", "patch": "@@ -0,0 +1,31 @@\n+// PR c++/91974\n+// { dg-do run }\n+// { dg-options \"-fstrong-eval-order\" }\n+\n+extern \"C\" void abort ();\n+\n+bool ok = false;\n+\n+void\n+foo (int x)\n+{\n+  if (x != 0)\n+    abort ();\n+  ok = true;\n+}\n+\n+void\n+bar (int)\n+{\n+  abort ();\n+}\n+\n+int\n+main ()\n+{\n+  typedef void (*T) (int);\n+  T fn = foo;\n+  fn ((fn = bar, 0));\n+  if (fn != bar || !ok)\n+    abort ();\n+}"}]}