{"sha": "bd7eccc44ea8e4e2947f629654c474d399bcca30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ3ZWNjYzQ0ZWE4ZTRlMjk0N2Y2Mjk2NTRjNDc0ZDM5OWJjY2EzMA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2004-07-16T08:07:08Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2004-07-16T08:07:08Z"}, "message": "* pt.c (tsubst) <TREE_BINFO case>: We should never get here.\n\nFrom-SVN: r84810", "tree": {"sha": "666239be543f1259144aacd30a94dc70d7c47ab5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/666239be543f1259144aacd30a94dc70d7c47ab5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd7eccc44ea8e4e2947f629654c474d399bcca30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd7eccc44ea8e4e2947f629654c474d399bcca30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd7eccc44ea8e4e2947f629654c474d399bcca30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd7eccc44ea8e4e2947f629654c474d399bcca30/comments", "author": null, "committer": null, "parents": [{"sha": "f128625718d842a4c6355c1f02791f32b6443bb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f128625718d842a4c6355c1f02791f32b6443bb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f128625718d842a4c6355c1f02791f32b6443bb1"}], "stats": {"total": 31, "additions": 9, "deletions": 22}, "files": [{"sha": "a2c540fbc09cb97a8ef859502939740191bac51c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd7eccc44ea8e4e2947f629654c474d399bcca30/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd7eccc44ea8e4e2947f629654c474d399bcca30/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bd7eccc44ea8e4e2947f629654c474d399bcca30", "patch": "@@ -1,3 +1,7 @@\n+2004-07-16  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* pt.c (tsubst) <TREE_BINFO case>: We should never get here.\n+\n 2004-07-15  Mark Mitchell  <mark@codesourcery.com>\n \n \t* cp-tree.h (lang_type_class): Remove has_real_assign_ref and\n@@ -432,10 +436,10 @@\n \tpush_base_cleanups): Likewise.\n \t* method.c (do_build_copy_constructor, do_build_assign_reg,\n \tsynthesize_exception_spec): Likewise.\n-\t* name-lookup.c (arg_assoc_class):\n+\t* name-lookup.c (arg_assoc_class): Likewise.\n \t* pt.c (instantiate_class_template, tsubst,\n-\tget_template_base_recursive):\n-\t* ptree.c (cxx_print_type):\n+\tget_template_base_recursive): Likewise.\n+\t* ptree.c (cxx_print_type): Likewise.\n \t* rtti.c (get_psuedo_ti_init, get_pseudo_ti_desc): Likewise.\n \t* search.c (lookup_base_r, dynamic_cast_base_recurse,\n \tdfs_access_in_type, access_in_type, lookup_field_queue_p,"}, {"sha": "3d61c98a5e95b3e85c00ca372532aa6b7cdc1943", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 19, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd7eccc44ea8e4e2947f629654c474d399bcca30/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd7eccc44ea8e4e2947f629654c474d399bcca30/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=bd7eccc44ea8e4e2947f629654c474d399bcca30", "patch": "@@ -6890,25 +6890,8 @@ tsubst (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n       }\n       \n     case TREE_BINFO:\n-      /* A binfo node.  We always need to make a copy, of the node\n-\t itself and of its BINFO_BASE_BINFOS.  */\n-      my_friendly_assert (type, 20040628);\n-      \n-      t = copy_node (t);\n-\n-      /* Make sure type isn't a typedef copy.  */\n-      type = BINFO_TYPE (TYPE_BINFO (type));\n-      \n-      TREE_TYPE (t) = complete_type (type);\n-      if (IS_AGGR_TYPE (type))\n-\t{\n-\t  BINFO_VTABLE (t) = BINFO_VTABLE (TYPE_BINFO (type));\n-\t  BINFO_VIRTUALS (t) = BINFO_VIRTUALS (TYPE_BINFO (type));\n-\t  if (BINFO_BASE_BINFOS (TYPE_BINFO (type)) != NULL_TREE)\n-\t    BINFO_BASE_BINFOS (t)\n-\t      = copy_node (BINFO_BASE_BINFOS (TYPE_BINFO (type)));\n-\t}\n-      return t;\n+      /* We should never be tsubsting a binfo.  */\n+      abort ();\n \n     case TREE_VEC:\n       /* A vector of template arguments.  */"}]}