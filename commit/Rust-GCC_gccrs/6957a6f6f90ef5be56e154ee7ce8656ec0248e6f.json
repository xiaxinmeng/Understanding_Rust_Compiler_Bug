{"sha": "6957a6f6f90ef5be56e154ee7ce8656ec0248e6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk1N2E2ZjZmOTBlZjViZTU2ZTE1NGVlN2NlODY1NmVjMDI0OGU2Zg==", "commit": {"author": {"name": "Zhouyi Zhou", "email": "yizhouzhou@ict.ac.cn", "date": "2013-04-10T09:22:04Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-04-10T09:22:04Z"}, "message": "cif-code.def (OVERWRITABLE): Correct the comment for overwritable function.\n\n2013-04-10  Zhouyi Zhou <yizhouzhou@ict.ac.cn>\n\n\t* cif-code.def (OVERWRITABLE): Correct the comment for overwritable\n\tfunction.\n\t* ipa-inline.c (can_inline_edge_p): Let dump mechanism report the\n\tinline fail caused by overwritable functions.\n\n\t* gcc.dg/tree-ssa/inline-11.c: New test\n\nFrom-SVN: r197667", "tree": {"sha": "72a7d68e142e1cc9ac621e45bb6e3ba5fc93b548", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72a7d68e142e1cc9ac621e45bb6e3ba5fc93b548"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6957a6f6f90ef5be56e154ee7ce8656ec0248e6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6957a6f6f90ef5be56e154ee7ce8656ec0248e6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6957a6f6f90ef5be56e154ee7ce8656ec0248e6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6957a6f6f90ef5be56e154ee7ce8656ec0248e6f/comments", "author": null, "committer": null, "parents": [{"sha": "34ab4a5b70675e801d0cd5a68b50e770d1fe864e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34ab4a5b70675e801d0cd5a68b50e770d1fe864e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34ab4a5b70675e801d0cd5a68b50e770d1fe864e"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "b8a67893a0a91668d0fb65433fa12e7057a98775", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6957a6f6f90ef5be56e154ee7ce8656ec0248e6f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6957a6f6f90ef5be56e154ee7ce8656ec0248e6f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6957a6f6f90ef5be56e154ee7ce8656ec0248e6f", "patch": "@@ -1,3 +1,10 @@\n+2013-04-10  Zhouyi Zhou <yizhouzhou@ict.ac.cn>\n+\n+\t* cif-code.def (OVERWRITABLE): Correct the comment for overwritable\n+\tfunction.\n+\t* ipa-inline.c (can_inline_edge_p): Let dump mechanism report the\n+\tinline fail caused by overwritable functions.\n+\n 2013-04-10  Chung-Ju Wu  <jasonwucj@gmail.com>\n \n \t* combine.c (simplify_compare_const): Use GET_MODE_MASK to filter out"}, {"sha": "d1c4941732532a6626786969cbb17f072a84a352", "filename": "gcc/cif-code.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6957a6f6f90ef5be56e154ee7ce8656ec0248e6f/gcc%2Fcif-code.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6957a6f6f90ef5be56e154ee7ce8656ec0248e6f/gcc%2Fcif-code.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcif-code.def?ref=6957a6f6f90ef5be56e154ee7ce8656ec0248e6f", "patch": "@@ -48,7 +48,7 @@ DEFCIFCODE(REDEFINED_EXTERN_INLINE,\n /* Function is not inlinable.  */\n DEFCIFCODE(FUNCTION_NOT_INLINABLE, N_(\"function not inlinable\"))\n \n-/* Function is not overwritable.  */\n+/* Function is overwritable.  */\n DEFCIFCODE(OVERWRITABLE, N_(\"function body can be overwritten at link time\"))\n \n /* Function is not an inlining candidate.  */"}, {"sha": "171d6a2266c560bdf562a4b42dd8db39da35d8b3", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6957a6f6f90ef5be56e154ee7ce8656ec0248e6f/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6957a6f6f90ef5be56e154ee7ce8656ec0248e6f/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=6957a6f6f90ef5be56e154ee7ce8656ec0248e6f", "patch": "@@ -266,7 +266,7 @@ can_inline_edge_p (struct cgraph_edge *e, bool report)\n   else if (avail <= AVAIL_OVERWRITABLE)\n     {\n       e->inline_failed = CIF_OVERWRITABLE;\n-      return false;\n+      inlinable = false;\n     }\n   else if (e->call_stmt_cannot_inline_p)\n     {"}, {"sha": "13585fc07584321bb8c3cbead4fe6e588cb2300a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6957a6f6f90ef5be56e154ee7ce8656ec0248e6f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6957a6f6f90ef5be56e154ee7ce8656ec0248e6f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6957a6f6f90ef5be56e154ee7ce8656ec0248e6f", "patch": "@@ -1,3 +1,7 @@\n+2013-04-10  Zhouyi Zhou <yizhouzhou@ict.ac.cn>\n+\n+\t* gcc.dg/tree-ssa/inline-11.c: New test\n+\n 2013-04-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/56895"}, {"sha": "7d45ec135eba734018090cc2364384fc63c468e3", "filename": "gcc/testsuite/gcc.dg/tree-ssa/inline-11.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6957a6f6f90ef5be56e154ee7ce8656ec0248e6f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6957a6f6f90ef5be56e154ee7ce8656ec0248e6f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline-11.c?ref=6957a6f6f90ef5be56e154ee7ce8656ec0248e6f", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-require-weak \"\" } */\n+/* { dg-options \"-O2 -fdump-tree-einline\" } */\n+int w;\n+int bar (void) __attribute__ ((weak));\n+int bar (){\n+  w++;\n+}\n+void foo()\n+{\n+  bar();\n+}\n+/* { dg-final { scan-tree-dump-times \"function body can be overwritten at link time\" 1 \"einline\" } } */\n+/* { dg-final { cleanup-tree-dump \"einline\" } } */"}]}