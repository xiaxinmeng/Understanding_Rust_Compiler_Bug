{"sha": "1496e7d67b028d54ed7a2f0507d8c366057fa854", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ5NmU3ZDY3YjAyOGQ1NGVkN2EyZjA1MDdkOGMzNjYwNTdmYTg1NA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-02-18T17:22:14Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-02-18T17:22:14Z"}, "message": "re PR c++/47795 (internal compiler error: tree check: expected record_type or union_type or qual_union_type, have error_mark in finish_non_static_data_member, at cp/semantics.c:1513)\n\n/cp\n2011-02-18  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/47795\n\t* semantics.c (finish_non_static_data_member): Early return if\n\tobject is error_mark_node.\n\n/testsuite\n2011-02-18  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/47795\n\t* g++.dg/cpp0x/lambda/lambda-ice3.C: New.\n\nFrom-SVN: r170275", "tree": {"sha": "36564de1b44b5c667d983aa94522af81ac22c6d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36564de1b44b5c667d983aa94522af81ac22c6d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1496e7d67b028d54ed7a2f0507d8c366057fa854", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1496e7d67b028d54ed7a2f0507d8c366057fa854", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1496e7d67b028d54ed7a2f0507d8c366057fa854", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1496e7d67b028d54ed7a2f0507d8c366057fa854/comments", "author": null, "committer": null, "parents": [{"sha": "237d62592af737acb7711b78f44304fcd18b3e13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/237d62592af737acb7711b78f44304fcd18b3e13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/237d62592af737acb7711b78f44304fcd18b3e13"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "0f6ece2eb2064a556f55fd68658214445d58b0be", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1496e7d67b028d54ed7a2f0507d8c366057fa854/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1496e7d67b028d54ed7a2f0507d8c366057fa854/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1496e7d67b028d54ed7a2f0507d8c366057fa854", "patch": "@@ -1,3 +1,9 @@\n+2011-02-18  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/47795\n+\t* semantics.c (finish_non_static_data_member): Early return if\n+\tobject is error_mark_node.\n+\n 2011-02-18  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/47208"}, {"sha": "e102ba3dcfbf9dd722936697ecfdf4c15d8b324e", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1496e7d67b028d54ed7a2f0507d8c366057fa854/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1496e7d67b028d54ed7a2f0507d8c366057fa854/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=1496e7d67b028d54ed7a2f0507d8c366057fa854", "patch": "@@ -1533,6 +1533,9 @@ finish_non_static_data_member (tree decl, tree object, tree qualifying_scope)\n       object = maybe_dummy_object (scope, NULL);\n     }\n \n+  if (object == error_mark_node)\n+    return error_mark_node;\n+\n   /* DR 613: Can use non-static data members without an associated\n      object in sizeof/decltype/alignof.  */\n   if (is_dummy_object (object) && cp_unevaluated_operand == 0"}, {"sha": "8ff36478d538bbe869b2d4cb70879485f4d45c39", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-ice3.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1496e7d67b028d54ed7a2f0507d8c366057fa854/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ice3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1496e7d67b028d54ed7a2f0507d8c366057fa854/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ice3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ice3.C?ref=1496e7d67b028d54ed7a2f0507d8c366057fa854", "patch": "@@ -0,0 +1,23 @@\n+// PR c++/47795\n+// { dg-options \"-std=c++0x\" }\n+\n+class Klass\n+{\n+  unsigned int local;\n+public:\n+  bool dostuff();\n+};\n+\n+bool Klass::dostuff()\n+{\n+  auto f = []() -> bool {\n+    if (local & 1) { return true; } // { dg-error \"not captured\" }\n+    return false;\n+  };\n+}\n+\n+int main()\n+{\n+  Klass c;\n+  return 0;\n+}"}]}