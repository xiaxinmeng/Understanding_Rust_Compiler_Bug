{"sha": "0492baf2cc32d89f32bab28a2a512132ccdd3f19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ5MmJhZjJjYzMyZDg5ZjMyYmFiMjhhMmE1MTIxMzJjY2RkM2YxOQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-11-24T15:29:44Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-11-24T15:29:44Z"}, "message": "tree-ssa-dom.c (cprop_into_successor_phis): Replace index with indx.\n\n\t* tree-ssa-dom.c (cprop_into_successor_phis): Replace index\n\twith indx.\n\nFrom-SVN: r91169", "tree": {"sha": "cca41b8a8366442ac47dd10d022878d2b139165b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cca41b8a8366442ac47dd10d022878d2b139165b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0492baf2cc32d89f32bab28a2a512132ccdd3f19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0492baf2cc32d89f32bab28a2a512132ccdd3f19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0492baf2cc32d89f32bab28a2a512132ccdd3f19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0492baf2cc32d89f32bab28a2a512132ccdd3f19/comments", "author": null, "committer": null, "parents": [{"sha": "47c321d4979121b7546a356f728577616a488961", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47c321d4979121b7546a356f728577616a488961", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47c321d4979121b7546a356f728577616a488961"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "706aa92438e719341f857d27867250560d3c1bca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0492baf2cc32d89f32bab28a2a512132ccdd3f19/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0492baf2cc32d89f32bab28a2a512132ccdd3f19/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0492baf2cc32d89f32bab28a2a512132ccdd3f19", "patch": "@@ -11,6 +11,9 @@\n \tfind the index of a PHI argument.  Use e->dest_idx instead.\n \tReplace hint with index.\n \n+\t* tree-ssa-dom.c (cprop_into_successor_phis): Replace index\n+\twith indx.\n+\n 2004-11-24  Diego Novillo  <dnovillo@redhat.com>\n \n \t* tree-ssa-alias.c (merge_pointed_to_info): Fix comment"}, {"sha": "5af8489fa41855cf66db302fe6f4929dce5f1e10", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0492baf2cc32d89f32bab28a2a512132ccdd3f19/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0492baf2cc32d89f32bab28a2a512132ccdd3f19/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=0492baf2cc32d89f32bab28a2a512132ccdd3f19", "patch": "@@ -2290,7 +2290,7 @@ cprop_into_successor_phis (basic_block bb, bitmap nonzero_vars)\n   FOR_EACH_EDGE (e, ei, bb->succs)\n     {\n       tree phi;\n-      int index;\n+      int indx;\n \n       /* If this is an abnormal edge, then we do not want to copy propagate\n \t into the PHI alternative associated with this edge.  */\n@@ -2301,7 +2301,7 @@ cprop_into_successor_phis (basic_block bb, bitmap nonzero_vars)\n       if (! phi)\n \tcontinue;\n \n-      index = e->dest_idx;\n+      indx = e->dest_idx;\n       for ( ; phi; phi = PHI_CHAIN (phi))\n \t{\n \t  tree new;\n@@ -2310,15 +2310,15 @@ cprop_into_successor_phis (basic_block bb, bitmap nonzero_vars)\n \n \t  /* The alternative may be associated with a constant, so verify\n \t     it is an SSA_NAME before doing anything with it.  */\n-\t  orig_p = PHI_ARG_DEF_PTR (phi, index);\n+\t  orig_p = PHI_ARG_DEF_PTR (phi, indx);\n \t  orig = USE_FROM_PTR (orig_p);\n \t  if (TREE_CODE (orig) != SSA_NAME)\n \t    continue;\n \n \t  /* If the alternative is known to have a nonzero value, record\n \t     that fact in the PHI node itself for future use.  */\n \t  if (bitmap_bit_p (nonzero_vars, SSA_NAME_VERSION (orig)))\n-\t    PHI_ARG_NONZERO (phi, index) = true;\n+\t    PHI_ARG_NONZERO (phi, indx) = true;\n \n \t  /* If we have *ORIG_P in our constant/copy table, then replace\n \t     ORIG_P with its value in our constant/copy table.  */"}]}