{"sha": "f4da258f520dd886a7a1dd9d1c4d71c02f68b46a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRkYTI1OGY1MjBkZDg4NmE3YTFkZDlkMWM0ZDcxYzAyZjY4YjQ2YQ==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2011-07-25T15:41:55Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2011-07-25T15:41:55Z"}, "message": "re PR target/39386 ([avr] different computation results for O1 and O0 executables)\n\n\t\n\tPR target/39386\n\t* config/avr/avr.c (out_shift_with_cnt): Use tmp_reg as\n\tshift counter for x << x and x >> x shifts.\n\nFrom-SVN: r176756", "tree": {"sha": "f2cf0b9af0561c625260a90f703264bc83459945", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2cf0b9af0561c625260a90f703264bc83459945"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4da258f520dd886a7a1dd9d1c4d71c02f68b46a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4da258f520dd886a7a1dd9d1c4d71c02f68b46a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4da258f520dd886a7a1dd9d1c4d71c02f68b46a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4da258f520dd886a7a1dd9d1c4d71c02f68b46a/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a79cb7341c9face374804f7623d309dc281056e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a79cb7341c9face374804f7623d309dc281056e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a79cb7341c9face374804f7623d309dc281056e"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "d3178e3d3ee2351e0e81d57c0f7015cdc0788741", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4da258f520dd886a7a1dd9d1c4d71c02f68b46a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4da258f520dd886a7a1dd9d1c4d71c02f68b46a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4da258f520dd886a7a1dd9d1c4d71c02f68b46a", "patch": "@@ -1,3 +1,9 @@\n+2011-07-25  Georg-Johann Lay  <avr@gjlay.de>\n+\t\n+\tPR target/39386\n+\t* config/avr/avr.c (out_shift_with_cnt): Use tmp_reg as\n+\tshift counter for x << x and x >> x shifts.\n+\n 2011-07-25  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR target/47124"}, {"sha": "eb1707e922bac653d5777e266078722df5c5ce1d", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4da258f520dd886a7a1dd9d1c4d71c02f68b46a/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4da258f520dd886a7a1dd9d1c4d71c02f68b46a/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=f4da258f520dd886a7a1dd9d1c4d71c02f68b46a", "patch": "@@ -3147,8 +3147,11 @@ out_shift_with_cnt (const char *templ, rtx insn, rtx operands[],\n     }\n   else if (register_operand (operands[2], QImode))\n     {\n-      if (reg_unused_after (insn, operands[2]))\n-\top[3] = op[2];\n+      if (reg_unused_after (insn, operands[2])\n+          && !reg_overlap_mentioned_p (operands[0], operands[2]))\n+        {\n+          op[3] = op[2];\n+        }\n       else\n \t{\n \t  op[3] = tmp_reg_rtx;"}]}