{"sha": "216183ce28d62a3897632d1077ff039a714ad280", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE2MTgzY2UyOGQ2MmEzODk3NjMyZDEwNzdmZjAzOWE3MTRhZDI4MA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-09-19T18:27:49Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-09-19T18:27:49Z"}, "message": "emit-rtl.c (try_split): Copy NORETURN, SETJMP, ALWAYS_RETURN and NON_LOCAL_GOTO notes.\n\n        * emit-rtl.c (try_split): Copy NORETURN, SETJMP, ALWAYS_RETURN\n        and NON_LOCAL_GOTO notes.\n\nFrom-SVN: r45691", "tree": {"sha": "5e0436718b5f6ede8ae870058e44c21f125230f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e0436718b5f6ede8ae870058e44c21f125230f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/216183ce28d62a3897632d1077ff039a714ad280", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/216183ce28d62a3897632d1077ff039a714ad280", "html_url": "https://github.com/Rust-GCC/gccrs/commit/216183ce28d62a3897632d1077ff039a714ad280", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/216183ce28d62a3897632d1077ff039a714ad280/comments", "author": null, "committer": null, "parents": [{"sha": "f068df3fe6fe7c87e74a999dca926594aae2c84b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f068df3fe6fe7c87e74a999dca926594aae2c84b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f068df3fe6fe7c87e74a999dca926594aae2c84b"}], "stats": {"total": 66, "additions": 53, "deletions": 13}, "files": [{"sha": "7dd1da4ac727567f82af8abec63935848c699b98", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/216183ce28d62a3897632d1077ff039a714ad280/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/216183ce28d62a3897632d1077ff039a714ad280/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=216183ce28d62a3897632d1077ff039a714ad280", "patch": "@@ -2,6 +2,9 @@\n \n \t* cfgbuild.c (find_sub_basic_blocks): Handle insns that can throw.\n \n+\t* emit-rtl.c (try_split): Copy NORETURN, SETJMP, ALWAYS_RETURN\n+\tand NON_LOCAL_GOTO notes.\n+\n 2001-09-18  Catherine Moore  <clm@redhat.com>\n \n \t* config/stormy16/stormy16.h (DEFAULT_PCC_STRUCT_RETURN): "}, {"sha": "4c487978da662ba626433324f656ad2941954a7c", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 50, "deletions": 13, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/216183ce28d62a3897632d1077ff039a714ad280/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/216183ce28d62a3897632d1077ff039a714ad280/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=216183ce28d62a3897632d1077ff039a714ad280", "patch": "@@ -2513,7 +2513,6 @@ try_split (pat, trial, last)\n       if (GET_CODE (seq) == SEQUENCE)\n \t{\n \t  int i, njumps = 0;\n-\t  rtx eh_note;\n \n \t  /* Avoid infinite loop if any insn of the result matches\n \t     the original pattern.  */\n@@ -2546,6 +2545,7 @@ try_split (pat, trial, last)\n \t\t\t\t\t   REG_NOTES (insn));\n \t\t  }\n \t      }\n+\n \t  /* If we are splitting a CALL_INSN, look for the CALL_INSN\n \t     in SEQ and copy our CALL_INSN_FUNCTION_USAGE to it.  */\n \t  if (GET_CODE (trial) == CALL_INSN)\n@@ -2554,18 +2554,55 @@ try_split (pat, trial, last)\n \t\tCALL_INSN_FUNCTION_USAGE (XVECEXP (seq, 0, i))\n \t\t  = CALL_INSN_FUNCTION_USAGE (trial);\n \n-\t  /* Copy EH notes.  */\n-\t  if ((eh_note = find_reg_note (trial, REG_EH_REGION, NULL_RTX)))\n-\t    for (i = 0; i < XVECLEN (seq, 0); i++)\n-\t      {\n-\t\trtx insn = XVECEXP (seq, 0, i);\n-\t\tif (GET_CODE (insn) == CALL_INSN\n-\t\t    || (flag_non_call_exceptions\n-\t\t\t&& may_trap_p (PATTERN (insn))))\n-\t\t  REG_NOTES (insn)\n-\t\t    = gen_rtx_EXPR_LIST (REG_EH_REGION, XEXP (eh_note, 0),\n-\t\t\t\t\t REG_NOTES (insn));\n-\t      }\n+\t  /* Copy notes, particularly those related to the CFG.  */\n+\t  for (note = REG_NOTES (trial); note ; note = XEXP (note, 1))\n+\t    {\n+\t      switch (REG_NOTE_KIND (note))\n+\t\t{\n+\t\tcase REG_EH_REGION:\n+\t\t  for (i = XVECLEN (seq, 0) - 1; i >= 0; i--)\n+\t\t    {\n+\t\t      rtx insn = XVECEXP (seq, 0, i);\n+\t\t      if (GET_CODE (insn) == CALL_INSN\n+\t\t\t  || (flag_non_call_exceptions\n+\t\t\t      && may_trap_p (PATTERN (insn))))\n+\t\t\tREG_NOTES (insn)\n+\t\t\t  = gen_rtx_EXPR_LIST (REG_EH_REGION,\n+\t\t\t\t\t       XEXP (note, 0),\n+\t\t\t\t\t       REG_NOTES (insn));\n+\t\t    }\n+\t\t  break;\n+\n+\t\tcase REG_NORETURN:\n+\t\tcase REG_SETJMP:\n+\t\tcase REG_ALWAYS_RETURN:\n+\t\t  for (i = XVECLEN (seq, 0) - 1; i >= 0; i--)\n+\t\t    {\n+\t\t      rtx insn = XVECEXP (seq, 0, i);\n+\t\t      if (GET_CODE (insn) == CALL_INSN)\n+\t\t\tREG_NOTES (insn)\n+\t\t\t  = gen_rtx_EXPR_LIST (REG_NOTE_KIND (note),\n+\t\t\t\t\t       XEXP (note, 0),\n+\t\t\t\t\t       REG_NOTES (insn));\n+\t\t    }\n+\t\t  break;\n+\n+\t\tcase REG_NON_LOCAL_GOTO:\n+\t\t  for (i = XVECLEN (seq, 0) - 1; i >= 0; i--)\n+\t\t    {\n+\t\t      rtx insn = XVECEXP (seq, 0, i);\n+\t\t      if (GET_CODE (insn) == JUMP_INSN)\n+\t\t\tREG_NOTES (insn)\n+\t\t\t  = gen_rtx_EXPR_LIST (REG_NOTE_KIND (note),\n+\t\t\t\t\t       XEXP (note, 0),\n+\t\t\t\t\t       REG_NOTES (insn));\n+\t\t    }\n+\t\t  break;\n+\n+\t\tdefault:\n+\t\t  break;\n+\t\t}\n+\t    }\n \n \t  /* If there are LABELS inside the split insns increment the\n \t     usage count so we don't delete the label.  */"}]}