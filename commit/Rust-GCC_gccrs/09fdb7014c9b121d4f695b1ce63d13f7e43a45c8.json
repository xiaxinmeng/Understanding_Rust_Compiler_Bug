{"sha": "09fdb7014c9b121d4f695b1ce63d13f7e43a45c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDlmZGI3MDE0YzliMTIxZDRmNjk1YjFjZTYzZDEzZjdlNDNhNDVjOA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-09-26T07:29:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-09-26T07:29:51Z"}, "message": "re PR tree-optimization/82320 (Compile time hog w/ -O)\n\n2017-09-26  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/82320\n\t* tree-ssa-sccvn.c (set_ssa_val_to): Changing undef to undef\n\tisn't a change.\n\n\t* gcc.dg/torture/pr82320.c: New testcase.\n\nFrom-SVN: r253188", "tree": {"sha": "f0340b9988503b0649b09dc8a759ee36ef684ec4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0340b9988503b0649b09dc8a759ee36ef684ec4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09fdb7014c9b121d4f695b1ce63d13f7e43a45c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09fdb7014c9b121d4f695b1ce63d13f7e43a45c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09fdb7014c9b121d4f695b1ce63d13f7e43a45c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09fdb7014c9b121d4f695b1ce63d13f7e43a45c8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "df2a1a265d13222bd4d109eeebbb7662f24fd5b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df2a1a265d13222bd4d109eeebbb7662f24fd5b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df2a1a265d13222bd4d109eeebbb7662f24fd5b1"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "7c6d7dce293f2650a58075750e412de9363db07c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09fdb7014c9b121d4f695b1ce63d13f7e43a45c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09fdb7014c9b121d4f695b1ce63d13f7e43a45c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=09fdb7014c9b121d4f695b1ce63d13f7e43a45c8", "patch": "@@ -1,3 +1,9 @@\n+2017-09-26  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/82320\n+\t* tree-ssa-sccvn.c (set_ssa_val_to): Changing undef to undef\n+\tisn't a change.\n+\n 2017-09-25  Jeff Law  <law@redhat.com>\n \n \t* config/rs6000/rs6000-protos.h (output_probe_stack_range): Update"}, {"sha": "64017065637057c4f8f41b4838bd8558d10c6d91", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09fdb7014c9b121d4f695b1ce63d13f7e43a45c8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09fdb7014c9b121d4f695b1ce63d13f7e43a45c8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=09fdb7014c9b121d4f695b1ce63d13f7e43a45c8", "patch": "@@ -1,3 +1,8 @@\n+2017-09-26  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/82320\n+\t* gcc.dg/torture/pr82320.c: New testcase.\n+\n 2017-09-26  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* lib/target-supports.exp (check_effective_target_vect_hw_misalign):"}, {"sha": "a4943fc0a54ba9884e5dc35755ded08471e83af6", "filename": "gcc/testsuite/gcc.dg/torture/pr82320.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09fdb7014c9b121d4f695b1ce63d13f7e43a45c8/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr82320.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09fdb7014c9b121d4f695b1ce63d13f7e43a45c8/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr82320.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr82320.c?ref=09fdb7014c9b121d4f695b1ce63d13f7e43a45c8", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do compile } */\n+\n+void\n+ec (int n4, short int ea)\n+{\n+  if (1)\n+    {\n+      if (ea != 0)\n+\t{\n+\t  int *c1 = (int *)&ea;\n+\n+nn:\n+\t  for (;;)\n+\t    ++*c1;\n+\t}\n+    }\n+  else\n+    {\n+      int *lq = &n4;\n+      int *md;\n+      int da;\n+\n+      goto nn;\n+\n+r1:\n+      md = lq;\n+      for (da = 0; da < 1; ++da)\n+\t{\n+ig:\n+\t  ++n4;\n+\t  *md += n4;\n+\t}\n+    }\n+\n+  for (ea = 0; ea < 1; ++ea)\n+    goto r1;\n+\n+  goto ig;\n+}"}, {"sha": "59397495abf6b7d0b890af4daf11ba1fe58e37bd", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09fdb7014c9b121d4f695b1ce63d13f7e43a45c8/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09fdb7014c9b121d4f695b1ce63d13f7e43a45c8/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=09fdb7014c9b121d4f695b1ce63d13f7e43a45c8", "patch": "@@ -3355,6 +3355,12 @@ set_ssa_val_to (tree from, tree to)\n \n   if (currval != to\n       && !operand_equal_p (currval, to, 0)\n+      /* Different undefined SSA names are not actually different.  See\n+         PR82320 for a testcase were we'd otherwise not terminate iteration.  */\n+      && !(TREE_CODE (currval) == SSA_NAME\n+\t   && TREE_CODE (to) == SSA_NAME\n+\t   && ssa_undefined_value_p (currval, false)\n+\t   && ssa_undefined_value_p (to, false))\n       /* ???  For addresses involving volatile objects or types operand_equal_p\n          does not reliably detect ADDR_EXPRs as equal.  We know we are only\n \t getting invariant gimple addresses here, so can use"}]}