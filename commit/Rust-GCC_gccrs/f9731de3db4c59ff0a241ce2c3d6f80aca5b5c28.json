{"sha": "f9731de3db4c59ff0a241ce2c3d6f80aca5b5c28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk3MzFkZTNkYjRjNTlmZjBhMjQxY2UyYzNkNmY4MGFjYTViNWMyOA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2018-11-13T19:57:51Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2018-11-13T19:57:51Z"}, "message": "PR middle-end/81824 - Warn for missing attributes with function aliases\n\ngcc/c-family/ChangeLog:\n\n\t* c-attribs.c (handle_copy_attribute): Exclude inlining attributes.\n\t(handle_tls_model_attribute): Improve diagnostics.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/attr-copy-5.c: New test.\n\t* gcc.dg/tls/diag-6.c: Adjust expected diagnostics.\n\nFrom-SVN: r266084", "tree": {"sha": "a1212b5c29022147c933bf559db408eba9345157", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1212b5c29022147c933bf559db408eba9345157"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9731de3db4c59ff0a241ce2c3d6f80aca5b5c28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9731de3db4c59ff0a241ce2c3d6f80aca5b5c28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9731de3db4c59ff0a241ce2c3d6f80aca5b5c28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9731de3db4c59ff0a241ce2c3d6f80aca5b5c28/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ee8393f465b6b06cc16499f7f7cfcbc3dc797d9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee8393f465b6b06cc16499f7f7cfcbc3dc797d9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee8393f465b6b06cc16499f7f7cfcbc3dc797d9b"}], "stats": {"total": 101, "additions": 92, "deletions": 9}, "files": [{"sha": "26a2b4e794dac884d019c209c1da1b45f6a5e22e", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9731de3db4c59ff0a241ce2c3d6f80aca5b5c28/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9731de3db4c59ff0a241ce2c3d6f80aca5b5c28/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=f9731de3db4c59ff0a241ce2c3d6f80aca5b5c28", "patch": "@@ -1,3 +1,9 @@\n+2018-11-13  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/81824\n+\t* c-attribs.c (handle_copy_attribute): Exclude inlining attributes.\n+\t(handle_tls_model_attribute): Improve diagnostics.\n+\n 2018-11-12  Jason Merrill  <jason@redhat.com>\n \n \t* c-cppbuiltin.c (c_cpp_builtins): Define"}, {"sha": "1657df7f9df41f0f2fcbcc3479bd9172256c3ec5", "filename": "gcc/c-family/c-attribs.c", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9731de3db4c59ff0a241ce2c3d6f80aca5b5c28/gcc%2Fc-family%2Fc-attribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9731de3db4c59ff0a241ce2c3d6f80aca5b5c28/gcc%2Fc-family%2Fc-attribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-attribs.c?ref=f9731de3db4c59ff0a241ce2c3d6f80aca5b5c28", "patch": "@@ -2239,14 +2239,17 @@ handle_copy_attribute (tree *node, tree name, tree args,\n       /* Copy decl attributes from REF to DECL.  */\n       for (tree at = attrs; at; at = TREE_CHAIN (at))\n \t{\n-\t  /* Avoid copying attributes that affect a symbol linkage or\n-\t     visibility since those in all likelihood only apply to\n-\t     the target.\n+\t  /* Avoid copying attributes that affect a symbol linkage,\n+\t     inlining, or visibility since those in all likelihood\n+\t     only apply to the target.\n \t     FIXME: make it possible to specify which attributes to\n \t     copy or not to copy in the copy attribute itself.  */\n \t  tree atname = get_attribute_name (at);\n \t  if (is_attribute_p (\"alias\", atname)\n+\t      || is_attribute_p (\"always_inline\", atname)\n+\t      || is_attribute_p (\"gnu_inline\", atname)\n \t      || is_attribute_p (\"ifunc\", atname)\n+\t      || is_attribute_p (\"noinline\", atname)\n \t      || is_attribute_p (\"visibility\", atname)\n \t      || is_attribute_p (\"weak\", atname)\n \t      || is_attribute_p (\"weakref\", atname))\n@@ -2458,17 +2461,26 @@ handle_tls_model_attribute (tree *node, tree name, tree args,\n   tree decl = *node;\n   enum tls_model kind;\n \n-  if (!VAR_P (decl) || !DECL_THREAD_LOCAL_P (decl))\n+  if (!VAR_P (decl))\n     {\n-      warning (OPT_Wattributes, \"%qE attribute ignored\", name);\n+      warning (OPT_Wattributes, \"%qE attribute ignored because %qD \"\n+\t       \"is not a variable\",\n+\t       name, decl);\n+      return NULL_TREE;\n+    }\n+\n+  if (!DECL_THREAD_LOCAL_P (decl))\n+    {\n+      warning (OPT_Wattributes, \"%qE attribute ignored because %qD does \"\n+\t       \"not have thread storage duration\", name, decl);\n       return NULL_TREE;\n     }\n \n   kind = DECL_TLS_MODEL (decl);\n   id = TREE_VALUE (args);\n   if (TREE_CODE (id) != STRING_CST)\n     {\n-      error (\"tls_model argument not a string\");\n+      error (\"%qE argument not a string\", name);\n       return NULL_TREE;\n     }\n \n@@ -2481,7 +2493,9 @@ handle_tls_model_attribute (tree *node, tree name, tree args,\n   else if (!strcmp (TREE_STRING_POINTER (id), \"global-dynamic\"))\n     kind = TLS_MODEL_GLOBAL_DYNAMIC;\n   else\n-    error (\"tls_model argument must be one of \\\"local-exec\\\", \\\"initial-exec\\\", \\\"local-dynamic\\\" or \\\"global-dynamic\\\"\");\n+    error (\"%qE argument must be one of %qs, %qs, %qs, or %qs\",\n+\t   name,\n+\t   \"local-exec\", \"initial-exec\", \"local-dynamic\", \"global-dynamic\");\n \n   set_decl_tls_model (decl, kind);\n   return NULL_TREE;"}, {"sha": "919c4787c1d9def05e175292dc46e692fadf9dda", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9731de3db4c59ff0a241ce2c3d6f80aca5b5c28/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9731de3db4c59ff0a241ce2c3d6f80aca5b5c28/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f9731de3db4c59ff0a241ce2c3d6f80aca5b5c28", "patch": "@@ -1,3 +1,9 @@\n+2018-11-13  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/81824\n+\t* gcc.dg/attr-copy-5.c: New test.\n+\t* gcc.dg/tls/diag-6.c: Adjust expected diagnostics.\n+\n 2018-11-13  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/86991"}, {"sha": "b085cf968ac9cb29765670306c1df157e08bbde2", "filename": "gcc/testsuite/gcc.dg/attr-copy-5.c", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9731de3db4c59ff0a241ce2c3d6f80aca5b5c28/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-copy-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9731de3db4c59ff0a241ce2c3d6f80aca5b5c28/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-copy-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-copy-5.c?ref=f9731de3db4c59ff0a241ce2c3d6f80aca5b5c28", "patch": "@@ -0,0 +1,57 @@\n+/* PR middle-end/81824 - Warn for missing attributes with function aliases\n+   Verify that attributes always_inline, gnu_inline, and noinline aren't\n+   copied.  Also verify that copying attribute tls_model to a non-thread\n+   variable triggers a warning.\n+   { dg-do compile }\n+   { dg-options \"-Wall\" }\n+   { dg-require-effective-target tls } */\n+\n+#define ATTR(...)   __attribute__ ((__VA_ARGS__))\n+\n+ATTR (always_inline, gnu_inline, noreturn) inline int\n+finline_noret (void)\n+{\n+  __builtin_abort ();\n+  /* Expect no -Wreturn-type.  */\n+}\n+\n+int call_finline_noret (void)\n+{\n+  finline_noret ();\n+  /* Expect no -Wreturn-type.  */\n+}\n+\n+\n+ATTR (copy (finline_noret)) int\n+fnoret (void);\n+\n+int call_fnoret (void)\n+{\n+  fnoret ();\n+  /* Expect no -Wreturn-type.  */\n+}\n+\n+\n+/* Verify that attribute always_inline on an alias target doesn't\n+   get copied and interfere with attribute noinline on the alias\n+   (trigger a warning due to a conflict).  */\n+\n+ATTR (always_inline) static inline int\n+finline (void) { return 0; }\n+\n+ATTR (alias (\"finline\"), noinline) int\n+fnoinline (void);\n+\n+ATTR (copy (finline)) int\n+fnoinline (void);\n+\n+\n+ATTR (tls_model (\"global-dynamic\")) __thread int\n+  tls_target;\n+\n+ATTR (alias (\"tls_target\"), copy (tls_target)) extern __thread int\n+  thread_alias;\n+\n+\n+ATTR (alias (\"tls_target\"), copy (tls_target)) extern int\n+  alias;            /* { dg-warning \".tls_model. attribute ignored because .alias. does not have thread storage duration\" } */"}, {"sha": "171bf21f5ebb09aff75ff48d4819dc540475c43b", "filename": "gcc/testsuite/gcc.dg/tls/diag-6.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9731de3db4c59ff0a241ce2c3d6f80aca5b5c28/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fdiag-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9731de3db4c59ff0a241ce2c3d6f80aca5b5c28/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fdiag-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fdiag-6.c?ref=f9731de3db4c59ff0a241ce2c3d6f80aca5b5c28", "patch": "@@ -4,5 +4,5 @@\n int v __attribute__((tls_model(\"initial-exec\"))); /* { dg-warning \"attribute ignored\" } */\n typedef int X __attribute__((tls_model(\"initial-exec\"))); /* { dg-warning \"attribute ignored\" } */\n void f(int x __attribute__((tls_model(\"initial-exec\")))); /* { dg-warning \"attribute ignored\" } */\n-__thread int a __attribute__((tls_model(1))); /* { dg-error \"tls_model argument not a string\" } */\n-__thread int b __attribute__((tls_model(\"unknown\"))); /* { dg-error \"tls_model argument must be one of\" } */\n+__thread int a __attribute__((tls_model(1))); /* { dg-error \".tls_model. argument not a string\" } */\n+__thread int b __attribute__((tls_model(\"unknown\"))); /* { dg-error \".tls_model. argument must be one of\" } */"}]}