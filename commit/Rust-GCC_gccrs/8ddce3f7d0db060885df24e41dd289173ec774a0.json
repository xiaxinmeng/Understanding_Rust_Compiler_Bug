{"sha": "8ddce3f7d0db060885df24e41dd289173ec774a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRkY2UzZjdkMGRiMDYwODg1ZGYyNGU0MWRkMjg5MTczZWM3NzRhMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-04-28T07:34:03Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-04-29T06:32:14Z"}, "message": "ipa/100308 - properly update the callgraph when pruning EH in IPA CP\n\nThis makes sure to fall into the delete_unreachable_blocks_update_callgraph\nhandling to remove blocks becoming unreachable when removing EH edges\nby tracking blocks to need EH cleanup and doing that after releasing\ndominance info.\n\nThis fixes an ICE seen with gfortran.dg/gomp/pr88933.f90 when enhancing\nDSE.\n\n2021-04-28  Richard Biener  <rguenther@suse.de>\n\n\tPR ipa/100308\n\t* ipa-prop.c (ipcp_modif_dom_walker::before_dom_children):\n\tTrack blocks to cleanup EH in new m_need_eh_cleanup.\n\t(ipcp_modif_dom_walker::cleanup_eh): New.\n\t(ipcp_transform_function): Release dominator info before\n\tdoing EH cleanup.", "tree": {"sha": "65945f43a32d51bc97ea8fef9dbadc188cb3bb95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65945f43a32d51bc97ea8fef9dbadc188cb3bb95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ddce3f7d0db060885df24e41dd289173ec774a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ddce3f7d0db060885df24e41dd289173ec774a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ddce3f7d0db060885df24e41dd289173ec774a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ddce3f7d0db060885df24e41dd289173ec774a0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c8bffa184dffba7976ba807ef0a1bbb6f66aa2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c8bffa184dffba7976ba807ef0a1bbb6f66aa2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c8bffa184dffba7976ba807ef0a1bbb6f66aa2d"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "02c483b10dd16119095ab2eb81f5a2fbf76bd726", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ddce3f7d0db060885df24e41dd289173ec774a0/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ddce3f7d0db060885df24e41dd289173ec774a0/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=8ddce3f7d0db060885df24e41dd289173ec774a0", "patch": "@@ -5514,17 +5514,20 @@ class ipcp_modif_dom_walker : public dom_walker\n   ipcp_modif_dom_walker (struct ipa_func_body_info *fbi,\n \t\t\t vec<ipa_param_descriptor, va_gc> *descs,\n \t\t\t struct ipa_agg_replacement_value *av,\n-\t\t\t bool *sc, bool *cc)\n+\t\t\t bool *sc)\n     : dom_walker (CDI_DOMINATORS), m_fbi (fbi), m_descriptors (descs),\n-      m_aggval (av), m_something_changed (sc), m_cfg_changed (cc) {}\n+      m_aggval (av), m_something_changed (sc) {}\n \n   virtual edge before_dom_children (basic_block);\n+  bool cleanup_eh ()\n+    { return gimple_purge_all_dead_eh_edges (m_need_eh_cleanup); }\n \n private:\n   struct ipa_func_body_info *m_fbi;\n   vec<ipa_param_descriptor, va_gc> *m_descriptors;\n   struct ipa_agg_replacement_value *m_aggval;\n-  bool *m_something_changed, *m_cfg_changed;\n+  bool *m_something_changed;\n+  auto_bitmap m_need_eh_cleanup;\n };\n \n edge\n@@ -5616,9 +5619,8 @@ ipcp_modif_dom_walker::before_dom_children (basic_block bb)\n \t}\n \n       *m_something_changed = true;\n-      if (maybe_clean_eh_stmt (stmt)\n-\t  && gimple_purge_dead_eh_edges (gimple_bb (stmt)))\n-\t*m_cfg_changed = true;\n+      if (maybe_clean_eh_stmt (stmt))\n+\tbitmap_set_bit (m_need_eh_cleanup, bb->index);\n     }\n   return NULL;\n }\n@@ -5876,7 +5878,7 @@ ipcp_transform_function (struct cgraph_node *node)\n   struct ipa_func_body_info fbi;\n   struct ipa_agg_replacement_value *aggval;\n   int param_count;\n-  bool cfg_changed = false, something_changed = false;\n+  bool something_changed = false;\n \n   gcc_checking_assert (cfun);\n   gcc_checking_assert (current_function_decl);\n@@ -5907,15 +5909,16 @@ ipcp_transform_function (struct cgraph_node *node)\n   vec_safe_grow_cleared (descriptors, param_count, true);\n   ipa_populate_param_decls (node, *descriptors);\n   calculate_dominance_info (CDI_DOMINATORS);\n-  ipcp_modif_dom_walker (&fbi, descriptors, aggval, &something_changed,\n-\t\t\t &cfg_changed).walk (ENTRY_BLOCK_PTR_FOR_FN (cfun));\n+  ipcp_modif_dom_walker walker (&fbi, descriptors, aggval, &something_changed);\n+  walker.walk (ENTRY_BLOCK_PTR_FOR_FN (cfun));\n+  free_dominance_info (CDI_DOMINATORS);\n+  bool cfg_changed = walker.cleanup_eh ();\n \n   int i;\n   struct ipa_bb_info *bi;\n   FOR_EACH_VEC_ELT (fbi.bb_infos, i, bi)\n     free_ipa_bb_info (bi);\n   fbi.bb_infos.release ();\n-  free_dominance_info (CDI_DOMINATORS);\n \n   ipcp_transformation *s = ipcp_transformation_sum->get (node);\n   s->agg_values = NULL;"}]}