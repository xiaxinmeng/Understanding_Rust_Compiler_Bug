{"sha": "d28073d4fe3c2244be42b5b8b36062ec14bdc26b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI4MDczZDRmZTNjMjI0NGJlNDJiNWI4YjM2MDYyZWMxNGJkYzI2Yg==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2013-05-22T12:48:18Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2013-05-22T12:48:18Z"}, "message": "rs6000.h (MALLOC_ABI_ALIGNMENT): New #define.\n\n2013-05-22  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* config/rs6000/rs6000.h (MALLOC_ABI_ALIGNMENT): New #define.\n\nFrom-SVN: r199198", "tree": {"sha": "0b5218b973254680b6309863d00232e773c5c08e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b5218b973254680b6309863d00232e773c5c08e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d28073d4fe3c2244be42b5b8b36062ec14bdc26b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d28073d4fe3c2244be42b5b8b36062ec14bdc26b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d28073d4fe3c2244be42b5b8b36062ec14bdc26b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d28073d4fe3c2244be42b5b8b36062ec14bdc26b/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "28a595fc801358850b92344878d1fe6055b59693", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28a595fc801358850b92344878d1fe6055b59693", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28a595fc801358850b92344878d1fe6055b59693"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "ebe67be626af9bb1b0685d7141fb87dafe0a2b12", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d28073d4fe3c2244be42b5b8b36062ec14bdc26b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d28073d4fe3c2244be42b5b8b36062ec14bdc26b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d28073d4fe3c2244be42b5b8b36062ec14bdc26b", "patch": "@@ -1,3 +1,7 @@\n+2013-05-22  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/rs6000.h (MALLOC_ABI_ALIGNMENT): New #define.\n+\n 2013-05-22  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/57349"}, {"sha": "4c24b56924d5b8641faaaeb83df8ea200421c1e5", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d28073d4fe3c2244be42b5b8b36062ec14bdc26b/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d28073d4fe3c2244be42b5b8b36062ec14bdc26b/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=d28073d4fe3c2244be42b5b8b36062ec14bdc26b", "patch": "@@ -2297,6 +2297,13 @@ extern char rs6000_reg_names[][8];\t/* register names (0 vs. %r0).  */\n /* How to align the given loop. */\n #define LOOP_ALIGN(LABEL)  rs6000_loop_align(LABEL)\n \n+/* Alignment guaranteed by __builtin_malloc.  */\n+/* FIXME:  128-bit alignment is guaranteed by glibc for TARGET_64BIT.\n+   However, specifying the stronger guarantee currently leads to\n+   a regression in SPEC CPU2006 437.leslie3d.  The stronger\n+   guarantee should be implemented here once that's fixed.  */\n+#define MALLOC_ABI_ALIGNMENT (64)\n+\n /* Pick up the return address upon entry to a procedure. Used for\n    dwarf2 unwind information.  This also enables the table driven\n    mechanism.  */"}]}