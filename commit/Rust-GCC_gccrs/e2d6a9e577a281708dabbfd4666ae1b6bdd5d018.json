{"sha": "e2d6a9e577a281708dabbfd4666ae1b6bdd5d018", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJkNmE5ZTU3N2EyODE3MDhkYWJiZmQ0NjY2YWUxYjZiZGQ1ZDAxOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-12-08T11:48:38Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-12-08T11:48:38Z"}, "message": "sem_ch5.adb (One_Bound): Remove call to Resolve...\n\n\t* sem_ch5.adb (One_Bound): Remove call to Resolve, as the bound needs\n\tto be resolved later as part of Analyze_Iteration_Scheme's call to\n\tMake_Index.\n\nFrom-SVN: r91893", "tree": {"sha": "ae0b7f126a315efc9079059efb3b49a7603ae965", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae0b7f126a315efc9079059efb3b49a7603ae965"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2d6a9e577a281708dabbfd4666ae1b6bdd5d018", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2d6a9e577a281708dabbfd4666ae1b6bdd5d018", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2d6a9e577a281708dabbfd4666ae1b6bdd5d018", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2d6a9e577a281708dabbfd4666ae1b6bdd5d018/comments", "author": null, "committer": null, "parents": [{"sha": "6e73e3ab00f849dc7facec6ad9c359e32ec67122", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e73e3ab00f849dc7facec6ad9c359e32ec67122", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e73e3ab00f849dc7facec6ad9c359e32ec67122"}], "stats": {"total": 29, "additions": 21, "deletions": 8}, "files": [{"sha": "2a4cf9d7ef8c729c52c8540584386e32b54d21d9", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d6a9e577a281708dabbfd4666ae1b6bdd5d018/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d6a9e577a281708dabbfd4666ae1b6bdd5d018/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=e2d6a9e577a281708dabbfd4666ae1b6bdd5d018", "patch": "@@ -149,7 +149,7 @@ package body Sem_Ch5 is\n          elsif Nkind (N) = N_Indexed_Component then\n             Diagnose_Non_Variable_Lhs (Prefix (N));\n \n-         --  Another special case for assignment to discriminant.\n+         --  Another special case for assignment to discriminant\n \n          elsif Nkind (N) = N_Selected_Component then\n             if Present (Entity (Selector_Name (N)))\n@@ -939,7 +939,7 @@ package body Sem_Ch5 is\n    -- Analyze_If_Statement --\n    --------------------------\n \n-   --  A special complication arises in the analysis of if statements.\n+   --  A special complication arises in the analysis of if statements\n \n    --  The expander has circuitry to completely delete code that it\n    --  can tell will not be executed (as a result of compile time known\n@@ -1141,31 +1141,44 @@ package body Sem_Ch5 is\n          ---------------\n \n          function One_Bound (Bound : Node_Id) return Node_Id is\n-            Assign : Node_Id;\n-            Id     : Entity_Id;\n-            Decl   : Node_Id;\n+            Assign   : Node_Id;\n+            Id       : Entity_Id;\n+            Decl     : Node_Id;\n+            Decl_Typ : Entity_Id;\n \n          begin\n             --  If the bound is a constant or an object, no need for a\n             --  separate declaration. If the bound is the result of previous\n             --  expansion it is already analyzed and should not be modified.\n+            --  Note that the Bound will be resolved later, if needed, as\n+            --  part of the call to Make_Index (literal bounds may need to\n+            --  be resolved to type Integer).\n \n             if Nkind (Bound) = N_Integer_Literal\n               or else Is_Entity_Name (Bound)\n               or else Analyzed (Bound)\n             then\n-               Resolve (Bound, Typ);\n                return Bound;\n             end if;\n \n             Id :=\n               Make_Defining_Identifier (Loc,\n                 Chars => New_Internal_Name ('S'));\n \n+            --  If the type of the discrete range is Universal_Integer, then\n+            --  the bound's type must be resolved to Integer, so the object\n+            --  used to hold the bound must also have type Integer.\n+\n+            if Typ = Universal_Integer then\n+               Decl_Typ := Standard_Integer;\n+            else\n+               Decl_Typ := Typ;\n+            end if;\n+\n             Decl :=\n               Make_Object_Declaration (Loc,\n                 Defining_Identifier => Id,\n-                Object_Definition   => New_Occurrence_Of (Typ, Loc));\n+                Object_Definition   => New_Occurrence_Of (Decl_Typ, Loc));\n \n             Insert_Before (Parent (N), Decl);\n             Analyze (Decl);\n@@ -1559,7 +1572,7 @@ package body Sem_Ch5 is\n             Analyze (Identifier (S));\n             Lab := Entity (Identifier (S));\n \n-            --  If we found a label mark it as reachable.\n+            --  If we found a label mark it as reachable\n \n             if Ekind (Lab) = E_Label then\n                Generate_Definition (Lab);"}]}