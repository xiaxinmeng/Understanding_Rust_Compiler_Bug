{"sha": "4c1165050677dbdc26d844fadf2b3b57da1266bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGMxMTY1MDUwNjc3ZGJkYzI2ZDg0NGZhZGYyYjNiNTdkYTEyNjZiZg==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2010-09-28T10:20:11Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2010-09-28T10:20:11Z"}, "message": "In gcc/objc/: 2010-09-28 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn gcc/objc/:\n2010-09-28  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        Merge from 'apple/trunk' branch on FSF servers.\n\n        2005-07-18  Ziemowit Laski  <zlaski@apple.com>\n\n        Radar 4175534\n        * objc-act.c (objc_compare_types): A new silent comparison\n        mode (-4), differing from regular comparison (-3) in that\n        'false' is returned instead of issuing warnings.\n\nIn gcc/testsuite/:\n2010-09-28  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        Merge from 'apple/trunk' branch on FSF servers.\n\n        2005-07-18  Ziemowit Laski  <zlaski@apple.com>\n\n        Radar 4175534\n        * obj-c++.dg/method-22.mm: New.\n\nFrom-SVN: r164681", "tree": {"sha": "a7ac33700a77cb5832f2f995916ce6c5f07d2ee0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7ac33700a77cb5832f2f995916ce6c5f07d2ee0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c1165050677dbdc26d844fadf2b3b57da1266bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c1165050677dbdc26d844fadf2b3b57da1266bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c1165050677dbdc26d844fadf2b3b57da1266bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c1165050677dbdc26d844fadf2b3b57da1266bf/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "06e67e167d96b750e484be95a0538a8aea488436", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06e67e167d96b750e484be95a0538a8aea488436", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06e67e167d96b750e484be95a0538a8aea488436"}], "stats": {"total": 79, "additions": 75, "deletions": 4}, "files": [{"sha": "b174bcfe9864f544e7303820af8bba1d52082d2c", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1165050677dbdc26d844fadf2b3b57da1266bf/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1165050677dbdc26d844fadf2b3b57da1266bf/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=4c1165050677dbdc26d844fadf2b3b57da1266bf", "patch": "@@ -1,3 +1,14 @@\n+2010-09-28  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\tMerge from 'apple/trunk' branch on FSF servers.\n+\n+\t2005-07-18  Ziemowit Laski  <zlaski@apple.com>\n+\n+\tRadar 4175534\n+\t* objc-act.c (objc_compare_types): A new silent comparison\n+\tmode (-4), differing from regular comparison (-3) in that\n+\t'false' is returned instead of issuing warnings.\n+\t\n 2010-09-28  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc-act.c (encode_type): Do not add 'r' with the next runtime."}, {"sha": "ecf3782524f706c4a9cf605f79486b64bd3ebfbd", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1165050677dbdc26d844fadf2b3b57da1266bf/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1165050677dbdc26d844fadf2b3b57da1266bf/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=4c1165050677dbdc26d844fadf2b3b57da1266bf", "patch": "@@ -1143,7 +1143,9 @@ objc_common_type (tree type1, tree type2)\n      0\t\tReturn value;\n      -1\t\tAssignment;\n      -2\t\tInitialization;\n-     -3\t\tComparison (LTYP and RTYP may match in either direction).  */\n+     -3\t\tComparison (LTYP and RTYP may match in either direction);\n+     -4\t\tSilent comparison (for C++ overload resolution).\n+  */\n \n bool\n objc_compare_types (tree ltyp, tree rtyp, int argno, tree callee)\n@@ -1198,8 +1200,9 @@ objc_compare_types (tree ltyp, tree rtyp, int argno, tree callee)\n       && !TYPE_HAS_OBJC_INFO (rtyp))\n     return false;\n \n-  /* Past this point, we are committed to returning 'true' to the caller.\n-     However, we can still warn about type and/or protocol mismatches.  */\n+  /* Past this point, we are committed to returning 'true' to the caller\n+     (unless performing a silent comparison; see below).  However, we can\n+     still warn about type and/or protocol mismatches.  */\n \n   if (TYPE_HAS_OBJC_INFO (ltyp))\n     {\n@@ -1253,7 +1256,7 @@ objc_compare_types (tree ltyp, tree rtyp, int argno, tree callee)\n       if (!pointers_compatible)\n \tpointers_compatible = DERIVED_FROM_P (ltyp, rtyp);\n \n-      if (!pointers_compatible && argno == -3)\n+      if (!pointers_compatible && argno <= -3)\n \tpointers_compatible = DERIVED_FROM_P (rtyp, ltyp);\n     }\n \n@@ -1271,11 +1274,17 @@ objc_compare_types (tree ltyp, tree rtyp, int argno, tree callee)\n \n   if (!pointers_compatible)\n     {\n+      /* The two pointers are not exactly compatible.  Issue a warning, unless\n+\t we are performing a silent comparison, in which case return 'false'\n+\t instead.  */\n       /* NB: For the time being, we shall make our warnings look like their\n \t C counterparts.  In the future, we may wish to make them more\n \t ObjC-specific.  */\n       switch (argno)\n \t{\n+\tcase -4:\n+\t  return false;\n+\n \tcase -3:\n \t  warning (0, \"comparison of distinct Objective-C types lacks a cast\");\n \t  break;"}, {"sha": "c7bb80b28ba5d1cafdb700916e35caafa8c994c3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1165050677dbdc26d844fadf2b3b57da1266bf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1165050677dbdc26d844fadf2b3b57da1266bf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4c1165050677dbdc26d844fadf2b3b57da1266bf", "patch": "@@ -1,3 +1,12 @@\n+2010-09-28  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\tMerge from 'apple/trunk' branch on FSF servers.\n+\n+\t2005-07-18  Ziemowit Laski  <zlaski@apple.com>\n+\n+\tRadar 4175534\n+\t* obj-c++.dg/method-22.mm: New.\n+\t\n 2010-09-27  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/cpp0x/rv-lvalue-req.C: New."}, {"sha": "583607b036d4448de590ed870639952c27907b6c", "filename": "gcc/testsuite/obj-c++.dg/method-22.mm", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1165050677dbdc26d844fadf2b3b57da1266bf/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-22.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1165050677dbdc26d844fadf2b3b57da1266bf/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-22.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-22.mm?ref=4c1165050677dbdc26d844fadf2b3b57da1266bf", "patch": "@@ -0,0 +1,42 @@\n+/* Ensure that overload resolution does not produce warnings as\n+   side-effects.  */\n+/* { dg-do run } */\n+\n+#include \"../objc-obj-c++-shared/Object1.h\"\n+#include <stdlib.h>\n+\n+#define CHECK_IF(E) if(!(E)) abort ()\n+\n+@interface MyCursor: Object\n++ (MyCursor *)crosshairCursor;\n+@end\n+\n+@class MyImage;\n+\n+class A {\n+public:\n+    A();\n+    \n+    int foo(MyImage *);\n+    int foo(MyCursor *);\n+};\n+\n+A::A() {}\n+int A::foo(MyCursor * c) { return 17; }\n+int A::foo(MyImage * i) { return 29; }\n+\n+@implementation MyCursor\n++ (MyCursor *)crosshairCursor {\n+  return self;\n+}\n+@end\n+\n+int main(void) {\n+  A a;\n+  \n+  int r = a.foo([MyCursor crosshairCursor]);\n+\n+  CHECK_IF (r == 17);    \n+  return 0;\n+}\n+"}]}