{"sha": "3f0063abae285ac9ded360063ab0e89aea375da9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YwMDYzYWJhZTI4NWFjOWRlZDM2MDA2M2FiMGU4OWFlYTM3NWRhOQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-01-14T00:52:26Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-01-14T00:52:26Z"}, "message": "h8300.md (movstrictqi): Add an alternative with the source being post_inc.\n\n\t* config/h8300/h8300.md (movstrictqi): Add an alternative with\n\tthe source being post_inc.  Tighten the predicate for the\n\tdestination to register_operand.\n\t(movstricthi): Likewise.\n\nFrom-SVN: r75833", "tree": {"sha": "85903ae7f66a8328681a5948e37474401043e1bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85903ae7f66a8328681a5948e37474401043e1bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f0063abae285ac9ded360063ab0e89aea375da9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f0063abae285ac9ded360063ab0e89aea375da9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f0063abae285ac9ded360063ab0e89aea375da9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f0063abae285ac9ded360063ab0e89aea375da9/comments", "author": null, "committer": null, "parents": [{"sha": "abf843c494411a0bec64aa83c462a1f77a704411", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abf843c494411a0bec64aa83c462a1f77a704411", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abf843c494411a0bec64aa83c462a1f77a704411"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "d4a70f13446aceffd4e1b9709dcd3c9a0399ac74", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f0063abae285ac9ded360063ab0e89aea375da9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f0063abae285ac9ded360063ab0e89aea375da9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3f0063abae285ac9ded360063ab0e89aea375da9", "patch": "@@ -1,3 +1,10 @@\n+2004-01-13  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.md (movstrictqi): Add an alternative with\n+\tthe source being post_inc.  Tighten the predicate for the\n+\tdestination to register_operand.\n+\t(movstricthi): Likewise.\n+\n 2004-01-13  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* system.h (SHARED_BSS_SECTION_ASM_OP): Poison."}, {"sha": "475f0e74b376f9dc26e5c85c5d90305683fcaf2e", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f0063abae285ac9ded360063ab0e89aea375da9/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f0063abae285ac9ded360063ab0e89aea375da9/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=3f0063abae285ac9ded360063ab0e89aea375da9", "patch": "@@ -214,17 +214,19 @@\n }\")\n \n (define_insn \"movstrictqi\"\n-  [(set (strict_low_part (match_operand:QI 0 \"general_operand_dst\" \"+r,r,r,r\"))\n-\t\t\t (match_operand:QI 1 \"general_operand_src\" \"I,r,n,m\"))]\n+  [(set (strict_low_part\n+\t (match_operand:QI 0 \"register_operand\"    \"+r,r,r,r,r\"))\n+\t (match_operand:QI 1 \"general_operand_src\" \" I,r,n,>,m\"))]\n   \"\"\n   \"@\n    sub.b\t%X0,%X0\n    mov.b\t%X1,%X0\n    mov.b\t%R1,%X0\n+   mov.b\t%X1,%X0\n    mov.b\t%R1,%X0\"\n   [(set (attr \"length\")\n \t(symbol_ref \"compute_mov_length (operands)\"))\n-   (set_attr \"cc\" \"set_zn,set_znv,set_znv,set_znv\")])\n+   (set_attr \"cc\" \"set_zn,set_znv,set_znv,set_znv,set_znv\")])\n \n ;; movhi\n \n@@ -325,17 +327,19 @@\n }\")\n \n (define_insn \"movstricthi\"\n-  [(set (strict_low_part (match_operand:HI 0 \"general_operand_dst\" \"+r,r,r,r\"))\n-\t\t\t (match_operand:HI 1 \"general_operand_src\" \"I,r,i,m\"))]\n+  [(set (strict_low_part\n+\t (match_operand:HI 0 \"register_operand\"    \"+r,r,r,r,r\"))\n+\t (match_operand:HI 1 \"general_operand_src\" \" I,r,i,>,m\"))]\n   \"\"\n   \"@\n    sub.w\t%T0,%T0\n    mov.w\t%T1,%T0\n    mov.w\t%T1,%T0\n+   mov.w\t%T1,%T0\n    mov.w\t%T1,%T0\"\n   [(set (attr \"length\")\n \t(symbol_ref \"compute_mov_length (operands)\"))\n-   (set_attr \"cc\" \"set_zn,set_znv,set_znv,set_znv\")])\n+   (set_attr \"cc\" \"set_zn,set_znv,set_znv,set_znv,set_znv\")])\n \n ;; movsi\n "}]}