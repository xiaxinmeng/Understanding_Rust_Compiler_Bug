{"sha": "4a87f0613c9b8c02b5402d7c70d81857e38a42ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE4N2YwNjEzYzliOGMwMmI1NDAyZDdjNzBkODE4NTdlMzhhNDJhZQ==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@twcny.rr.com", "date": "2002-05-13T21:18:59Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2002-05-13T21:18:59Z"}, "message": "* configure.in: simplify makefile fragment collection.\n\nFrom-SVN: r53436", "tree": {"sha": "32d52b1a6dc8db0b287ad370b9855c42c177fd0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32d52b1a6dc8db0b287ad370b9855c42c177fd0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a87f0613c9b8c02b5402d7c70d81857e38a42ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a87f0613c9b8c02b5402d7c70d81857e38a42ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a87f0613c9b8c02b5402d7c70d81857e38a42ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a87f0613c9b8c02b5402d7c70d81857e38a42ae/comments", "author": null, "committer": null, "parents": [{"sha": "603606e740d904a49e775f87761a5dabe6943417", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/603606e740d904a49e775f87761a5dabe6943417", "html_url": "https://github.com/Rust-GCC/gccrs/commit/603606e740d904a49e775f87761a5dabe6943417"}], "stats": {"total": 74, "additions": 38, "deletions": 36}, "files": [{"sha": "c2b01690843f47dabe24ca41a4906687fdf12bf6", "filename": "ChangeLog", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a87f0613c9b8c02b5402d7c70d81857e38a42ae/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a87f0613c9b8c02b5402d7c70d81857e38a42ae/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=4a87f0613c9b8c02b5402d7c70d81857e38a42ae", "patch": "@@ -1,6 +1,8 @@\n 2002-05-13  Nathanael Nerode  <neroden@twcny.rr.com>\n \n-\t* configure.in: remove code to build emacs.\n+\t* configure.in: Simplify makefile fragment collection.\n+\n+\t* configure.in: Remove code to build emacs.\n \n \t* configure.in : Remove --srcdir argument from targargs and buildargs\n \t(it's always overridden in the Makefile anyway).  Rearrange a bit."}, {"sha": "75ca1a3ba57ea16568b468892a928f1c51f7dbd6", "filename": "configure.in", "status": "modified", "additions": 35, "deletions": 35, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a87f0613c9b8c02b5402d7c70d81857e38a42ae/configure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a87f0613c9b8c02b5402d7c70d81857e38a42ae/configure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.in?ref=4a87f0613c9b8c02b5402d7c70d81857e38a42ae", "patch": "@@ -125,11 +125,11 @@ case \"${host}\" in\n   m68k-hp-hpux*)\n     # Avoid \"too much defining\" errors from HPUX compiler.\n     tentative_cc=\"cc -Wp,-H256000\"\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-hp300\"\n+    host_makefile_frag=\"config/mh-hp300\"\n     ;;\n   m68k-apollo-sysv*)\n     tentative_cc=\"cc -A ansi -A runtype,any -A systype,any -U__STDC__ -DUSG\"\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-apollo68\"\n+    host_makefile_frag=\"config/mh-apollo68\"\n     ;;\n   m68k-apollo-bsd*)\n     #None of the Apollo compilers can compile gas or binutils.  The preprocessor\n@@ -139,34 +139,34 @@ case \"${host}\" in\n     # or whatever), but I'm not sure leaving CC as cc is any better...\n     #CC=cc -A ansi -A runtype,any -A systype,any -U__STDC__ -DNO_STDARG\n     tentative_cc=gcc\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-a68bsd\"\n+    host_makefile_frag=\"config/mh-a68bsd\"\n     ;;\n   m88k-dg-dgux*)\n     tentative_cc=\"gcc -Wall -ansi -D__using_DGUX\"\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-dgux\"\n+    host_makefile_frag=\"config/mh-dgux\"\n     ;;\n   m88k-harris-cxux*)\n     # Under CX/UX, we want to tell the compiler to use ANSI mode.\n     tentative_cc=\"cc -Xa\"\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-cxux\"\n+    host_makefile_frag=\"config/mh-cxux\"\n     ;;\n   m88k-motorola-sysv*)\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-delta88\"\n+    host_makefile_frag=\"config/mh-delta88\"\n     ;;\n   mips*-dec-ultrix*)\n     tentative_cc=\"cc -Wf,-XNg1000\"\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-decstation\"\n+    host_makefile_frag=\"config/mh-decstation\"\n     ;;\n   mips*-nec-sysv4*)\n     # The C compiler on NEC MIPS SVR4 needs bigger tables.\n     tentative_cc=\"cc -ZXNd=5000 -ZXNg=1000\"\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-necv4\"\n+    host_makefile_frag=\"config/mh-necv4\"\n     ;;\n   mips*-sgi-irix6*)\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-irix6\"\n+    host_makefile_frag=\"config/mh-irix6\"\n     ;;\n   mips*-sgi-irix5*)\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-irix5\"\n+    host_makefile_frag=\"config/mh-irix5\"\n     ;;\n   mips*-sgi-irix4*)\n     # Tell compiler to use K&R C.  We can't compile under the SGI Ansi\n@@ -175,10 +175,10 @@ case \"${host}\" in\n     tentative_cc=\"cc -cckr -Wf,-XNg1500 -Wf,-XNk1000 -Wf,-XNh2000 -Wf,-XNl8192\"\n     ;;\n   mips*-sgi-irix3*)\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-sysv\"\n+    host_makefile_frag=\"config/mh-sysv\"\n     ;;\n   mips*-*-sysv4*)\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-sysv4\"\n+    host_makefile_frag=\"config/mh-sysv4\"\n     ;;\n   mips*-*-sysv*)\n     # This is for a MIPS running RISC/os 4.52C.\n@@ -194,24 +194,24 @@ case \"${host}\" in\n     # This is not part of CFLAGS because perhaps not all C compilers have this\n     # option.\n     tentative_cc=\"cc -systype sysv\"\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-riscos\"\n+    host_makefile_frag=\"config/mh-riscos\"\n     ;;\n   i370-ibm-opened*)\n     tentative_cc=\"c89\"\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-openedition\"\n+    host_makefile_frag=\"config/mh-openedition\"\n     ;;\n   i[3456]86-*-sysv5*)\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-sysv5\"\n+    host_makefile_frag=\"config/mh-sysv5\"\n     ;;\n   i[3456]86-*-dgux*)\n     tentative_cc=\"gcc -Wall -ansi -D__using_DGUX\"\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-dgux386\"\n+    host_makefile_frag=\"config/mh-dgux386\"\n     ;;\n   i[3456]86-ncr-sysv4.3*)\n     # The MetaWare compiler will generate a copyright message unless you\n     # turn it off by adding the -Hnocopyr flag.\n     tentative_cc=\"cc -Hnocopyr\"\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-ncrsvr43\"\n+    host_makefile_frag=\"config/mh-ncrsvr43\"\n     ;;\n   i[3456]86-ncr-sysv4*)\n     # for an NCR 3000 (i486/SVR4) system.\n@@ -220,47 +220,47 @@ case \"${host}\" in\n     # you run it, but it chokes and dies on a whole bunch of GNU source\n     # files.  Default to using the AT&T compiler installed in /usr/ccs/ATT/cc.\n     tentative_cc=\"/usr/ccs/ATT/cc\"\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-ncr3000\"\n+    host_makefile_frag=\"config/mh-ncr3000\"\n     ;;\n   i[3456]86-*-sco3.2v5*)\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-sysv\"\n+    host_makefile_frag=\"config/mh-sysv\"\n     ;;\n   i[3456]86-*-sco*)\n     # The native C compiler botches some simple uses of const.  Unfortunately,\n     # it doesn't defined anything like \"__sco__\" for us to test for in ansidecl.h.\n     tentative_cc=\"cc -Dconst=\"\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-sco\"\n+    host_makefile_frag=\"config/mh-sco\"\n     ;;\n   i[3456]86-*-udk*)\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-sysv5\"\n+    host_makefile_frag=\"config/mh-sysv5\"\n     ;;\n   i[3456]86-*-isc*)\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-sysv\"\n+    host_makefile_frag=\"config/mh-sysv\"\n     ;;\n   i[3456]86-*-solaris2*)\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-sysv4\"\n+    host_makefile_frag=\"config/mh-sysv4\"\n     ;;\n   i[3456]86-*-aix*)\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-aix386\"\n+    host_makefile_frag=\"config/mh-aix386\"\n     ;;\n   i[3456]86-*-msdosdjgpp*)\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-djgpp\"\n+    host_makefile_frag=\"config/mh-djgpp\"\n     ;;\n   *-cygwin*)\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-cygwin\"\n+    host_makefile_frag=\"config/mh-cygwin\"\n     ;;\n   *-mingw32*)\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-mingw32\"\n+    host_makefile_frag=\"config/mh-mingw32\"\n     ;;\n   *-interix*)\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-interix\"\n+    host_makefile_frag=\"config/mh-interix\"\n     ;;\n   vax-*-ultrix2*)\n     # The old BSD pcc isn't up to compiling parts of gdb so use gcc\n     tentative_cc=gcc\n     ;;\n   *-*-solaris2*)\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-solaris\"\n+    host_makefile_frag=\"config/mh-solaris\"\n     ;;\n   m68k-sun-sunos*)\n     # Sun's C compiler needs the -J flag to be able to compile cp-parse.c\n@@ -269,30 +269,30 @@ case \"${host}\" in\n     ;;\n   *-hp-hpux[78]*)\n     tentative_cc=\"cc -Wp,-H256000\"\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-hpux8\"\n+    host_makefile_frag=\"config/mh-hpux8\"\n     ;;\n   *-hp-hpux*)\n     tentative_cc=\"cc -Wp,-H256000\"\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-hpux\"\n+    host_makefile_frag=\"config/mh-hpux\"\n     ;;\n   *-*-hiux*)\n     tentative_cc=\"cc -Wp,-H256000\"\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-hpux\"\n+    host_makefile_frag=\"config/mh-hpux\"\n     ;;\n   rs6000-*-lynxos*)\n     # /bin/cc is less than useful for our purposes.  Always use GCC\n     tentative_cc=\"/usr/cygnus/progressive/bin/gcc\"\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-lynxrs6k\"\n+    host_makefile_frag=\"config/mh-lynxrs6k\"\n     ;;\n   *-*-lynxos*)\n     # /bin/cc is less than useful for our purposes.  Always use GCC\n     tentative_cc=\"/bin/gcc\"\n     ;;\n   *-*-sysv4*)\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-sysv4\"\n+    host_makefile_frag=\"config/mh-sysv4\"\n     ;;\n   *-*-sysv*)\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-sysv\"\n+    host_makefile_frag=\"config/mh-sysv\"\n     ;;\n esac\n fi"}]}