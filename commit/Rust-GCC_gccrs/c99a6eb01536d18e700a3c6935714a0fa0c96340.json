{"sha": "c99a6eb01536d18e700a3c6935714a0fa0c96340", "node_id": "C_kwDOANBUbNoAKGM5OWE2ZWIwMTUzNmQxOGU3MDBhM2M2OTM1NzE0YTBmYTBjOTYzNDA", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-01-21T16:10:07Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-01-31T08:46:44Z"}, "message": "Add mold detection for libs.\n\nlibatomic/ChangeLog:\n\n\t* acinclude.m4: Detect *_ld_is_mold and use it.\n\t* configure: Regenerate.\n\nlibgomp/ChangeLog:\n\n\t* acinclude.m4: Detect *_ld_is_mold and use it.\n\t* configure: Regenerate.\n\nlibitm/ChangeLog:\n\n\t* acinclude.m4: Detect *_ld_is_mold and use it.\n\t* configure: Regenerate.\n\nlibstdc++-v3/ChangeLog:\n\n\t* acinclude.m4: Detect *_ld_is_mold and use it.\n\t* configure: Regenerate.", "tree": {"sha": "e4be1bab051d6cc0578a1a0ad18f43c37fb76d6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4be1bab051d6cc0578a1a0ad18f43c37fb76d6b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c99a6eb01536d18e700a3c6935714a0fa0c96340", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c99a6eb01536d18e700a3c6935714a0fa0c96340", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c99a6eb01536d18e700a3c6935714a0fa0c96340", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c99a6eb01536d18e700a3c6935714a0fa0c96340/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "625f16c798757dcbfdded841f01d7c566d15c55c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/625f16c798757dcbfdded841f01d7c566d15c55c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/625f16c798757dcbfdded841f01d7c566d15c55c"}], "stats": {"total": 113, "additions": 87, "deletions": 26}, "files": [{"sha": "f35ab5b60a509b3c7324dcc4acf73b82a6cc3894", "filename": "libatomic/acinclude.m4", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99a6eb01536d18e700a3c6935714a0fa0c96340/libatomic%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99a6eb01536d18e700a3c6935714a0fa0c96340/libatomic%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Facinclude.m4?ref=c99a6eb01536d18e700a3c6935714a0fa0c96340", "patch": "@@ -299,6 +299,7 @@ dnl  LD (as a side effect of testing)\n dnl Sets:\n dnl  with_gnu_ld\n dnl  libat_ld_is_gold (possibly)\n+dnl  libat_ld_is_mold (possibly)\n dnl  libat_gnu_ld_version (possibly)\n dnl\n dnl The last will be a single integer, e.g., version 1.23.45.0.67.89 will\n@@ -331,8 +332,11 @@ AC_DEFUN([LIBAT_CHECK_LINKER_FEATURES], [\n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n   libat_ld_is_gold=no\n+  libat_ld_is_mold=no\n   if $LD --version 2>/dev/null | grep 'GNU gold'> /dev/null 2>&1; then\n     libat_ld_is_gold=yes\n+  elif $LD --version 2>/dev/null | grep 'mold' >/dev/null 2>&1; then\n+    libat_ld_is_mold=yes\n   fi\n   changequote(,)\n   ldver=`$LD --version 2>/dev/null |\n@@ -488,6 +492,8 @@ if test $enable_symvers != no && test $libat_shared_libgcc = yes; then\n       enable_symvers=gnu\n     elif test $libat_ld_is_gold = yes ; then\n       enable_symvers=gnu\n+    elif test $libat_ld_is_mold = yes ; then\n+      enable_symvers=gnu\n     else\n       # The right tools, the right setup, but too old.  Fallbacks?\n       AC_MSG_WARN(=== Linker version $libat_gnu_ld_version is too old for)"}, {"sha": "34434d21764f5658e7ec213ae658e107e4f7c747", "filename": "libatomic/configure", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99a6eb01536d18e700a3c6935714a0fa0c96340/libatomic%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99a6eb01536d18e700a3c6935714a0fa0c96340/libatomic%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fconfigure?ref=c99a6eb01536d18e700a3c6935714a0fa0c96340", "patch": "@@ -15197,8 +15197,11 @@ with_gnu_ld=$lt_cv_prog_gnu_ld\n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n   libat_ld_is_gold=no\n+  libat_ld_is_mold=no\n   if $LD --version 2>/dev/null | grep 'GNU gold'> /dev/null 2>&1; then\n     libat_ld_is_gold=yes\n+  elif $LD --version 2>/dev/null | grep 'mold' >/dev/null 2>&1; then\n+    libat_ld_is_mold=yes\n   fi\n \n   ldver=`$LD --version 2>/dev/null |\n@@ -15401,6 +15404,8 @@ if test $enable_symvers != no && test $libat_shared_libgcc = yes; then\n       enable_symvers=gnu\n     elif test $libat_ld_is_gold = yes ; then\n       enable_symvers=gnu\n+    elif test $libat_ld_is_mold = yes ; then\n+      enable_symvers=gnu\n     else\n       # The right tools, the right setup, but too old.  Fallbacks?\n       { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === Linker version $libat_gnu_ld_version is too old for\" >&5"}, {"sha": "b8154eba99c3399642fb0a59128ddcd8c381efc7", "filename": "libgomp/acinclude.m4", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99a6eb01536d18e700a3c6935714a0fa0c96340/libgomp%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99a6eb01536d18e700a3c6935714a0fa0c96340/libgomp%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Facinclude.m4?ref=c99a6eb01536d18e700a3c6935714a0fa0c96340", "patch": "@@ -117,6 +117,7 @@ dnl  LD (as a side effect of testing)\n dnl Sets:\n dnl  with_gnu_ld\n dnl  libgomp_ld_is_gold (possibly)\n+dnl  libgomp_ld_is_mold (possibly)\n dnl  libgomp_gnu_ld_version (possibly)\n dnl\n dnl The last will be a single integer, e.g., version 1.23.45.0.67.89 will\n@@ -149,8 +150,11 @@ AC_DEFUN([LIBGOMP_CHECK_LINKER_FEATURES], [\n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n   libgomp_ld_is_gold=no\n+  libgomp_ld_is_mold=no\n   if $LD --version 2>/dev/null | grep 'GNU gold'> /dev/null 2>&1; then\n     libgomp_ld_is_gold=yes\n+  elif $LD --version 2>/dev/null | grep 'mold'> /dev/null 2>&1; then\n+    libat_ld_is_mold=yes\n   fi\n   changequote(,)\n   ldver=`$LD --version 2>/dev/null |\n@@ -306,6 +310,8 @@ if test $enable_symvers != no && test $libgomp_shared_libgcc = yes; then\n       enable_symvers=gnu\n     elif test $libgomp_ld_is_gold = yes ; then\n       enable_symvers=gnu\n+    elif test $libgomp_ld_is_mold = yes ; then\n+      enable_symvers=gnu\n     else\n       # The right tools, the right setup, but too old.  Fallbacks?\n       AC_MSG_WARN(=== Linker version $libgomp_gnu_ld_version is too old for)"}, {"sha": "37390ce5d667b5efca16bdce152db1f836f7da63", "filename": "libgomp/configure", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99a6eb01536d18e700a3c6935714a0fa0c96340/libgomp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99a6eb01536d18e700a3c6935714a0fa0c96340/libgomp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure?ref=c99a6eb01536d18e700a3c6935714a0fa0c96340", "patch": "@@ -15037,7 +15037,7 @@ _ACEOF\n \n # Plugins for offload execution, configure.ac fragment.  -*- mode: autoconf -*-\n #\n-# Copyright (C) 2014-2021 Free Software Foundation, Inc.\n+# Copyright (C) 2014-2022 Free Software Foundation, Inc.\n #\n # Contributed by Mentor Embedded.\n #\n@@ -16231,8 +16231,11 @@ with_gnu_ld=$lt_cv_prog_gnu_ld\n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n   libgomp_ld_is_gold=no\n+  libgomp_ld_is_mold=no\n   if $LD --version 2>/dev/null | grep 'GNU gold'> /dev/null 2>&1; then\n     libgomp_ld_is_gold=yes\n+  elif $LD --version 2>/dev/null | grep 'mold'> /dev/null 2>&1; then\n+    libat_ld_is_mold=yes\n   fi\n \n   ldver=`$LD --version 2>/dev/null |\n@@ -16435,6 +16438,8 @@ if test $enable_symvers != no && test $libgomp_shared_libgcc = yes; then\n       enable_symvers=gnu\n     elif test $libgomp_ld_is_gold = yes ; then\n       enable_symvers=gnu\n+    elif test $libgomp_ld_is_mold = yes ; then\n+      enable_symvers=gnu\n     else\n       # The right tools, the right setup, but too old.  Fallbacks?\n       { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === Linker version $libgomp_gnu_ld_version is too old for\" >&5"}, {"sha": "9fd12e6ee7d7deef54fb29e0db5702afc768614e", "filename": "libitm/acinclude.m4", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99a6eb01536d18e700a3c6935714a0fa0c96340/libitm%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99a6eb01536d18e700a3c6935714a0fa0c96340/libitm%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Facinclude.m4?ref=c99a6eb01536d18e700a3c6935714a0fa0c96340", "patch": "@@ -210,6 +210,7 @@ dnl  LD (as a side effect of testing)\n dnl Sets:\n dnl  with_gnu_ld\n dnl  libitm_ld_is_gold (possibly)\n+dnl  libitm_ld_is_mold (possibly)\n dnl  libitm_gnu_ld_version (possibly)\n dnl\n dnl The last will be a single integer, e.g., version 1.23.45.0.67.89 will\n@@ -242,8 +243,11 @@ AC_DEFUN([LIBITM_CHECK_LINKER_FEATURES], [\n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n   libitm_ld_is_gold=no\n+  libitm_ld_is_mold=no\n   if $LD --version 2>/dev/null | grep 'GNU gold'> /dev/null 2>&1; then\n     libitm_ld_is_gold=yes\n+  elif $LD --version 2>/dev/null | grep 'mold' >/dev/null 2>&1; then\n+    libitm_ld_is_mold=yes\n   fi\n   changequote(,)\n   ldver=`$LD --version 2>/dev/null |\n@@ -399,6 +403,8 @@ if test $enable_symvers != no && test $libitm_shared_libgcc = yes; then\n       enable_symvers=gnu\n     elif test $libitm_ld_is_gold = yes ; then\n       enable_symvers=gnu\n+    elif test $libitm_ld_is_mold = yes ; then\n+      enable_symvers=gnu\n     else\n       # The right tools, the right setup, but too old.  Fallbacks?\n       AC_MSG_WARN(=== Linker version $libitm_gnu_ld_version is too old for)"}, {"sha": "966bf40537d5154600250b7815cbc62ca04e173b", "filename": "libitm/configure", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99a6eb01536d18e700a3c6935714a0fa0c96340/libitm%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99a6eb01536d18e700a3c6935714a0fa0c96340/libitm%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure?ref=c99a6eb01536d18e700a3c6935714a0fa0c96340", "patch": "@@ -12056,7 +12056,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12069 \"configure\"\n+#line 12059 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12162,7 +12162,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12175 \"configure\"\n+#line 12165 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14901,16 +14901,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -15032,7 +15022,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n # project, but have not yet been accepted: they are GCC-local changes\n # for the time being.  (See\n # https://lists.gnu.org/archive/html/libtool-patches/2018-05/msg00000.html)\n-linux* | k*bsd*-gnu | kopensolaris*-gnu | uclinuxfdpiceabi)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu* | uclinuxfdpiceabi)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -17085,8 +17075,11 @@ fi\n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n   libitm_ld_is_gold=no\n+  libitm_ld_is_mold=no\n   if $LD --version 2>/dev/null | grep 'GNU gold'> /dev/null 2>&1; then\n     libitm_ld_is_gold=yes\n+  elif $LD --version 2>/dev/null | grep 'mold' >/dev/null 2>&1; then\n+    libitm_ld_is_mold=yes\n   fi\n \n   ldver=`$LD --version 2>/dev/null |\n@@ -17289,6 +17282,8 @@ if test $enable_symvers != no && test $libitm_shared_libgcc = yes; then\n       enable_symvers=gnu\n     elif test $libitm_ld_is_gold = yes ; then\n       enable_symvers=gnu\n+    elif test $libitm_ld_is_mold = yes ; then\n+      enable_symvers=gnu\n     else\n       # The right tools, the right setup, but too old.  Fallbacks?\n       { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === Linker version $libitm_gnu_ld_version is too old for\" >&5\n@@ -17882,7 +17877,7 @@ case \"$host\" in\n     case \"$enable_cet\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n-\t# and if assembler supports CET insn.\n+\t# and if compiler and assembler support CET insn.\n \tcet_save_CFLAGS=\"$CFLAGS\"\n \tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext"}, {"sha": "32638e6bfc540ccc5f762c13148d8e13666e016a", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99a6eb01536d18e700a3c6935714a0fa0c96340/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99a6eb01536d18e700a3c6935714a0fa0c96340/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=c99a6eb01536d18e700a3c6935714a0fa0c96340", "patch": "@@ -172,6 +172,7 @@ dnl  LD (as a side effect of testing)\n dnl Sets:\n dnl  with_gnu_ld\n dnl  glibcxx_ld_is_gold (set to \"no\" or \"yes\")\n+dnl  glibcxx_ld_is_mold (set to \"no\" or \"yes\")\n dnl  glibcxx_gnu_ld_version (possibly)\n dnl\n dnl The last will be a single integer, e.g., version 1.23.45.0.67.89 will\n@@ -204,11 +205,14 @@ AC_DEFUN([GLIBCXX_CHECK_LINKER_FEATURES], [\n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n   glibcxx_ld_is_gold=no\n+  glibcxx_ld_is_mold=no\n   if test x\"$with_gnu_ld\" = x\"yes\"; then\n     AC_MSG_CHECKING([for ld version])\n     changequote(,)\n     if $LD --version 2>/dev/null | grep 'GNU gold' >/dev/null 2>&1; then\n       glibcxx_ld_is_gold=yes\n+    elif $LD --version 2>/dev/null | grep 'mold' >/dev/null 2>&1; then\n+      glibcxx_ld_is_mold=yes\n     fi\n     ldver=`$LD --version 2>/dev/null |\n \t   sed -e 's/[. ][0-9]\\{8\\}$//;s/.* \\([^ ]\\{1,\\}\\)$/\\1/; q'`\n@@ -220,7 +224,7 @@ AC_DEFUN([GLIBCXX_CHECK_LINKER_FEATURES], [\n \n   # Set --gc-sections.\n   glibcxx_have_gc_sections=no\n-  if test \"$glibcxx_ld_is_gold\" = \"yes\"; then\n+  if test \"$glibcxx_ld_is_gold\" = \"yes\" || test \"$glibcxx_ld_is_mold\" = \"yes\" ; then\n     if $LD --help 2>/dev/null | grep gc-sections >/dev/null 2>&1; then\n       glibcxx_have_gc_sections=yes\n     fi\n@@ -3796,6 +3800,8 @@ changequote([,])dnl\n     enable_symvers=no\n   elif test $glibcxx_ld_is_gold = yes ; then\n     : All versions of gold support symbol versioning.\n+  elif test $glibcxx_ld_is_mold = yes ; then\n+    : All versions of mold support symbol versioning.\n   elif test $glibcxx_gnu_ld_version -lt $glibcxx_min_gnu_ld_version ; then\n     # The right tools, the right setup, but too old.  Fallbacks?\n     AC_MSG_WARN(=== Linker version $glibcxx_gnu_ld_version is too old for)"}, {"sha": "de6eb1c60020322ef0b5f6af35751ea622128ace", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 42, "deletions": 10, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99a6eb01536d18e700a3c6935714a0fa0c96340/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99a6eb01536d18e700a3c6935714a0fa0c96340/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=c99a6eb01536d18e700a3c6935714a0fa0c96340", "patch": "@@ -22157,12 +22157,15 @@ with_gnu_ld=$lt_cv_prog_gnu_ld\n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n   glibcxx_ld_is_gold=no\n+  glibcxx_ld_is_mold=no\n   if test x\"$with_gnu_ld\" = x\"yes\"; then\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld version\" >&5\n $as_echo_n \"checking for ld version... \" >&6; }\n \n     if $LD --version 2>/dev/null | grep 'GNU gold' >/dev/null 2>&1; then\n       glibcxx_ld_is_gold=yes\n+    elif $LD --version 2>/dev/null | grep 'mold' >/dev/null 2>&1; then\n+      glibcxx_ld_is_mold=yes\n     fi\n     ldver=`$LD --version 2>/dev/null |\n \t   sed -e 's/[. ][0-9]\\{8\\}$//;s/.* \\([^ ]\\{1,\\}\\)$/\\1/; q'`\n@@ -22175,7 +22178,7 @@ $as_echo \"$glibcxx_gnu_ld_version\" >&6; }\n \n   # Set --gc-sections.\n   glibcxx_have_gc_sections=no\n-  if test \"$glibcxx_ld_is_gold\" = \"yes\"; then\n+  if test \"$glibcxx_ld_is_gold\" = \"yes\" || test \"$glibcxx_ld_is_mold\" = \"yes\" ; then\n     if $LD --help 2>/dev/null | grep gc-sections >/dev/null 2>&1; then\n       glibcxx_have_gc_sections=yes\n     fi\n@@ -29371,12 +29374,15 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n   glibcxx_ld_is_gold=no\n+  glibcxx_ld_is_mold=no\n   if test x\"$with_gnu_ld\" = x\"yes\"; then\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld version\" >&5\n $as_echo_n \"checking for ld version... \" >&6; }\n \n     if $LD --version 2>/dev/null | grep 'GNU gold' >/dev/null 2>&1; then\n       glibcxx_ld_is_gold=yes\n+    elif $LD --version 2>/dev/null | grep 'mold' >/dev/null 2>&1; then\n+      glibcxx_ld_is_mold=yes\n     fi\n     ldver=`$LD --version 2>/dev/null |\n \t   sed -e 's/[. ][0-9]\\{8\\}$//;s/.* \\([^ ]\\{1,\\}\\)$/\\1/; q'`\n@@ -29389,7 +29395,7 @@ $as_echo \"$glibcxx_gnu_ld_version\" >&6; }\n \n   # Set --gc-sections.\n   glibcxx_have_gc_sections=no\n-  if test \"$glibcxx_ld_is_gold\" = \"yes\"; then\n+  if test \"$glibcxx_ld_is_gold\" = \"yes\" || test \"$glibcxx_ld_is_mold\" = \"yes\" ; then\n     if $LD --help 2>/dev/null | grep gc-sections >/dev/null 2>&1; then\n       glibcxx_have_gc_sections=yes\n     fi\n@@ -35303,12 +35309,15 @@ done\n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n   glibcxx_ld_is_gold=no\n+  glibcxx_ld_is_mold=no\n   if test x\"$with_gnu_ld\" = x\"yes\"; then\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld version\" >&5\n $as_echo_n \"checking for ld version... \" >&6; }\n \n     if $LD --version 2>/dev/null | grep 'GNU gold' >/dev/null 2>&1; then\n       glibcxx_ld_is_gold=yes\n+    elif $LD --version 2>/dev/null | grep 'mold' >/dev/null 2>&1; then\n+      glibcxx_ld_is_mold=yes\n     fi\n     ldver=`$LD --version 2>/dev/null |\n \t   sed -e 's/[. ][0-9]\\{8\\}$//;s/.* \\([^ ]\\{1,\\}\\)$/\\1/; q'`\n@@ -35321,7 +35330,7 @@ $as_echo \"$glibcxx_gnu_ld_version\" >&6; }\n \n   # Set --gc-sections.\n   glibcxx_have_gc_sections=no\n-  if test \"$glibcxx_ld_is_gold\" = \"yes\"; then\n+  if test \"$glibcxx_ld_is_gold\" = \"yes\" || test \"$glibcxx_ld_is_mold\" = \"yes\" ; then\n     if $LD --help 2>/dev/null | grep gc-sections >/dev/null 2>&1; then\n       glibcxx_have_gc_sections=yes\n     fi\n@@ -47234,12 +47243,15 @@ done\n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n   glibcxx_ld_is_gold=no\n+  glibcxx_ld_is_mold=no\n   if test x\"$with_gnu_ld\" = x\"yes\"; then\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld version\" >&5\n $as_echo_n \"checking for ld version... \" >&6; }\n \n     if $LD --version 2>/dev/null | grep 'GNU gold' >/dev/null 2>&1; then\n       glibcxx_ld_is_gold=yes\n+    elif $LD --version 2>/dev/null | grep 'mold' >/dev/null 2>&1; then\n+      glibcxx_ld_is_mold=yes\n     fi\n     ldver=`$LD --version 2>/dev/null |\n \t   sed -e 's/[. ][0-9]\\{8\\}$//;s/.* \\([^ ]\\{1,\\}\\)$/\\1/; q'`\n@@ -47252,7 +47264,7 @@ $as_echo \"$glibcxx_gnu_ld_version\" >&6; }\n \n   # Set --gc-sections.\n   glibcxx_have_gc_sections=no\n-  if test \"$glibcxx_ld_is_gold\" = \"yes\"; then\n+  if test \"$glibcxx_ld_is_gold\" = \"yes\" || test \"$glibcxx_ld_is_mold\" = \"yes\" ; then\n     if $LD --help 2>/dev/null | grep gc-sections >/dev/null 2>&1; then\n       glibcxx_have_gc_sections=yes\n     fi\n@@ -47519,12 +47531,15 @@ done\n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n   glibcxx_ld_is_gold=no\n+  glibcxx_ld_is_mold=no\n   if test x\"$with_gnu_ld\" = x\"yes\"; then\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld version\" >&5\n $as_echo_n \"checking for ld version... \" >&6; }\n \n     if $LD --version 2>/dev/null | grep 'GNU gold' >/dev/null 2>&1; then\n       glibcxx_ld_is_gold=yes\n+    elif $LD --version 2>/dev/null | grep 'mold' >/dev/null 2>&1; then\n+      glibcxx_ld_is_mold=yes\n     fi\n     ldver=`$LD --version 2>/dev/null |\n \t   sed -e 's/[. ][0-9]\\{8\\}$//;s/.* \\([^ ]\\{1,\\}\\)$/\\1/; q'`\n@@ -47537,7 +47552,7 @@ $as_echo \"$glibcxx_gnu_ld_version\" >&6; }\n \n   # Set --gc-sections.\n   glibcxx_have_gc_sections=no\n-  if test \"$glibcxx_ld_is_gold\" = \"yes\"; then\n+  if test \"$glibcxx_ld_is_gold\" = \"yes\" || test \"$glibcxx_ld_is_mold\" = \"yes\" ; then\n     if $LD --help 2>/dev/null | grep gc-sections >/dev/null 2>&1; then\n       glibcxx_have_gc_sections=yes\n     fi\n@@ -47995,12 +48010,15 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n   glibcxx_ld_is_gold=no\n+  glibcxx_ld_is_mold=no\n   if test x\"$with_gnu_ld\" = x\"yes\"; then\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld version\" >&5\n $as_echo_n \"checking for ld version... \" >&6; }\n \n     if $LD --version 2>/dev/null | grep 'GNU gold' >/dev/null 2>&1; then\n       glibcxx_ld_is_gold=yes\n+    elif $LD --version 2>/dev/null | grep 'mold' >/dev/null 2>&1; then\n+      glibcxx_ld_is_mold=yes\n     fi\n     ldver=`$LD --version 2>/dev/null |\n \t   sed -e 's/[. ][0-9]\\{8\\}$//;s/.* \\([^ ]\\{1,\\}\\)$/\\1/; q'`\n@@ -48013,7 +48031,7 @@ $as_echo \"$glibcxx_gnu_ld_version\" >&6; }\n \n   # Set --gc-sections.\n   glibcxx_have_gc_sections=no\n-  if test \"$glibcxx_ld_is_gold\" = \"yes\"; then\n+  if test \"$glibcxx_ld_is_gold\" = \"yes\" || test \"$glibcxx_ld_is_mold\" = \"yes\" ; then\n     if $LD --help 2>/dev/null | grep gc-sections >/dev/null 2>&1; then\n       glibcxx_have_gc_sections=yes\n     fi\n@@ -54383,12 +54401,15 @@ _ACEOF\n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n   glibcxx_ld_is_gold=no\n+  glibcxx_ld_is_mold=no\n   if test x\"$with_gnu_ld\" = x\"yes\"; then\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld version\" >&5\n $as_echo_n \"checking for ld version... \" >&6; }\n \n     if $LD --version 2>/dev/null | grep 'GNU gold' >/dev/null 2>&1; then\n       glibcxx_ld_is_gold=yes\n+    elif $LD --version 2>/dev/null | grep 'mold' >/dev/null 2>&1; then\n+      glibcxx_ld_is_mold=yes\n     fi\n     ldver=`$LD --version 2>/dev/null |\n \t   sed -e 's/[. ][0-9]\\{8\\}$//;s/.* \\([^ ]\\{1,\\}\\)$/\\1/; q'`\n@@ -54401,7 +54422,7 @@ $as_echo \"$glibcxx_gnu_ld_version\" >&6; }\n \n   # Set --gc-sections.\n   glibcxx_have_gc_sections=no\n-  if test \"$glibcxx_ld_is_gold\" = \"yes\"; then\n+  if test \"$glibcxx_ld_is_gold\" = \"yes\" || test \"$glibcxx_ld_is_mold\" = \"yes\" ; then\n     if $LD --help 2>/dev/null | grep gc-sections >/dev/null 2>&1; then\n       glibcxx_have_gc_sections=yes\n     fi\n@@ -60531,12 +60552,15 @@ $as_echo \"#define HAVE_TLS 1\" >>confdefs.h\n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n   glibcxx_ld_is_gold=no\n+  glibcxx_ld_is_mold=no\n   if test x\"$with_gnu_ld\" = x\"yes\"; then\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld version\" >&5\n $as_echo_n \"checking for ld version... \" >&6; }\n \n     if $LD --version 2>/dev/null | grep 'GNU gold' >/dev/null 2>&1; then\n       glibcxx_ld_is_gold=yes\n+    elif $LD --version 2>/dev/null | grep 'mold' >/dev/null 2>&1; then\n+      glibcxx_ld_is_mold=yes\n     fi\n     ldver=`$LD --version 2>/dev/null |\n \t   sed -e 's/[. ][0-9]\\{8\\}$//;s/.* \\([^ ]\\{1,\\}\\)$/\\1/; q'`\n@@ -60549,7 +60573,7 @@ $as_echo \"$glibcxx_gnu_ld_version\" >&6; }\n \n   # Set --gc-sections.\n   glibcxx_have_gc_sections=no\n-  if test \"$glibcxx_ld_is_gold\" = \"yes\"; then\n+  if test \"$glibcxx_ld_is_gold\" = \"yes\" || test \"$glibcxx_ld_is_mold\" = \"yes\" ; then\n     if $LD --help 2>/dev/null | grep gc-sections >/dev/null 2>&1; then\n       glibcxx_have_gc_sections=yes\n     fi\n@@ -60741,12 +60765,15 @@ done\n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n   glibcxx_ld_is_gold=no\n+  glibcxx_ld_is_mold=no\n   if test x\"$with_gnu_ld\" = x\"yes\"; then\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld version\" >&5\n $as_echo_n \"checking for ld version... \" >&6; }\n \n     if $LD --version 2>/dev/null | grep 'GNU gold' >/dev/null 2>&1; then\n       glibcxx_ld_is_gold=yes\n+    elif $LD --version 2>/dev/null | grep 'mold' >/dev/null 2>&1; then\n+      glibcxx_ld_is_mold=yes\n     fi\n     ldver=`$LD --version 2>/dev/null |\n \t   sed -e 's/[. ][0-9]\\{8\\}$//;s/.* \\([^ ]\\{1,\\}\\)$/\\1/; q'`\n@@ -60759,7 +60786,7 @@ $as_echo \"$glibcxx_gnu_ld_version\" >&6; }\n \n   # Set --gc-sections.\n   glibcxx_have_gc_sections=no\n-  if test \"$glibcxx_ld_is_gold\" = \"yes\"; then\n+  if test \"$glibcxx_ld_is_gold\" = \"yes\" || test \"$glibcxx_ld_is_mold\" = \"yes\" ; then\n     if $LD --help 2>/dev/null | grep gc-sections >/dev/null 2>&1; then\n       glibcxx_have_gc_sections=yes\n     fi\n@@ -60970,12 +60997,15 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n   # Start by getting the version number.  I think the libtool test already\n   # does some of this, but throws away the result.\n   glibcxx_ld_is_gold=no\n+  glibcxx_ld_is_mold=no\n   if test x\"$with_gnu_ld\" = x\"yes\"; then\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld version\" >&5\n $as_echo_n \"checking for ld version... \" >&6; }\n \n     if $LD --version 2>/dev/null | grep 'GNU gold' >/dev/null 2>&1; then\n       glibcxx_ld_is_gold=yes\n+    elif $LD --version 2>/dev/null | grep 'mold' >/dev/null 2>&1; then\n+      glibcxx_ld_is_mold=yes\n     fi\n     ldver=`$LD --version 2>/dev/null |\n \t   sed -e 's/[. ][0-9]\\{8\\}$//;s/.* \\([^ ]\\{1,\\}\\)$/\\1/; q'`\n@@ -60988,7 +61018,7 @@ $as_echo \"$glibcxx_gnu_ld_version\" >&6; }\n \n   # Set --gc-sections.\n   glibcxx_have_gc_sections=no\n-  if test \"$glibcxx_ld_is_gold\" = \"yes\"; then\n+  if test \"$glibcxx_ld_is_gold\" = \"yes\" || test \"$glibcxx_ld_is_mold\" = \"yes\" ; then\n     if $LD --help 2>/dev/null | grep gc-sections >/dev/null 2>&1; then\n       glibcxx_have_gc_sections=yes\n     fi\n@@ -74929,6 +74959,8 @@ $as_echo \"$as_me: WARNING: === Symbol versioning will be disabled.\" >&2;}\n     enable_symvers=no\n   elif test $glibcxx_ld_is_gold = yes ; then\n     : All versions of gold support symbol versioning.\n+  elif test $glibcxx_ld_is_mold = yes ; then\n+    : All versions of mold support symbol versioning.\n   elif test $glibcxx_gnu_ld_version -lt $glibcxx_min_gnu_ld_version ; then\n     # The right tools, the right setup, but too old.  Fallbacks?\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === Linker version $glibcxx_gnu_ld_version is too old for\" >&5"}]}