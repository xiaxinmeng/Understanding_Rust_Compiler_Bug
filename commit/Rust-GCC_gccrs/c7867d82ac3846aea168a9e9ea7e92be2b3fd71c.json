{"sha": "c7867d82ac3846aea168a9e9ea7e92be2b3fd71c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc4NjdkODJhYzM4NDZhZWExNjhhOWU5ZWE3ZTkyYmUyYjNmZDcxYw==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2008-05-27T09:20:12Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-27T09:20:12Z"}, "message": "2008-05-27  Vincent Celier  <celier@adacore.com>\n\n\t* prj-nmsc.adb:\n\t(Process_Sources_In_Multi_Language_Mode): Check that there are not two\n\tsources of the same project that have the same object file name.\n\t(Find_Explicit_Sources): Always remove a source exception that was not\n\tfound.\n\nFrom-SVN: r135990", "tree": {"sha": "611af309898a82b8bd657bf502d53a5034c91e34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/611af309898a82b8bd657bf502d53a5034c91e34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7867d82ac3846aea168a9e9ea7e92be2b3fd71c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7867d82ac3846aea168a9e9ea7e92be2b3fd71c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7867d82ac3846aea168a9e9ea7e92be2b3fd71c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7867d82ac3846aea168a9e9ea7e92be2b3fd71c/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dd383eebef22066c2eff724d9d0c964975b72d79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd383eebef22066c2eff724d9d0c964975b72d79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd383eebef22066c2eff724d9d0c964975b72d79"}], "stats": {"total": 124, "additions": 113, "deletions": 11}, "files": [{"sha": "bbb0ec8f9ff0b91f6736ec4ec701016c7ed36179", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 113, "deletions": 11, "changes": 124, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7867d82ac3846aea168a9e9ea7e92be2b3fd71c/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7867d82ac3846aea168a9e9ea7e92be2b3fd71c/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=c7867d82ac3846aea168a9e9ea7e92be2b3fd71c", "patch": "@@ -162,6 +162,16 @@ package body Prj.Nmsc is\n    --  A hash table to store naming exceptions for Ada. For each file name\n    --  there is one or several unit in table Ada_Naming_Exception_Table.\n \n+   package Object_File_Names is new GNAT.HTable.Simple_HTable\n+     (Header_Num => Header_Num,\n+      Element    => File_Name_Type,\n+      No_Element => No_File,\n+      Key        => File_Name_Type,\n+      Hash       => Hash,\n+      Equal      => \"=\");\n+   --  A hash table to store the object file names for a project, to check that\n+   --  two different sources have different object file names.\n+\n    type File_Found is record\n       File     : File_Name_Type  := No_File;\n       Found    : Boolean         := False;\n@@ -678,7 +688,7 @@ package body Prj.Nmsc is\n                                         (Lang_Id).Config.Dependency_Kind;\n       Src_Data.Naming_Exception    := Naming_Exception;\n \n-      if Src_Data.Compiled then\n+      if Src_Data.Compiled and then Src_Data.Object_Exists then\n          Src_Data.Object   := Object_Name (File_Name);\n          Src_Data.Dep_Name :=\n            Dependency_Name (File_Name, Src_Data.Dependency);\n@@ -7830,7 +7840,7 @@ package body Prj.Nmsc is\n \n          --  Check if all exceptions have been found.\n          --  For Ada, it is an error if an exception is not found.\n-         --  For other language, the source is removed.\n+         --  For other language, the source is simply removed.\n \n          declare\n             Source   : Source_Id;\n@@ -7851,11 +7861,9 @@ package body Prj.Nmsc is\n                        (Project, In_Tree,\n                         \"source file %% for unit %% not found\",\n                         No_Location);\n-\n-                  else\n-                     Remove_Source\n-                       (Source, No_Source, Project, Data, In_Tree);\n                   end if;\n+\n+                  Remove_Source (Source, No_Source, Project, Data, In_Tree);\n                end if;\n \n                Source := Src_Data.Next_In_Project;\n@@ -9070,6 +9078,8 @@ package body Prj.Nmsc is\n          Find_Explicit_Sources\n            (Ada_Language_Index, Current_Dir, Project, In_Tree, Data);\n \n+         --  Mark as such the sources that are declared as excluded\n+\n          FF := Excluded_Sources_Htable.Get_First;\n          while FF /= No_File_Found loop\n             OK     := False;\n@@ -9105,6 +9115,98 @@ package body Prj.Nmsc is\n \n             FF := Excluded_Sources_Htable.Get_Next;\n          end loop;\n+\n+         --  Check that two sources of this project do not have the same object\n+         --  file name.\n+\n+         Check_Object_File_Names : declare\n+            Src_Id      : Source_Id;\n+            Src_Data    : Source_Data;\n+            Source_Name : File_Name_Type;\n+\n+            procedure Check_Object;\n+            --  Check if object file name of the current source is already in\n+            --  hash table Object_File_Names. If it is, report an error. If it\n+            --  is not, put it there with the file name of the current source.\n+\n+            ------------------\n+            -- Check_Object --\n+            ------------------\n+\n+            procedure Check_Object is\n+            begin\n+               Source_Name := Object_File_Names.Get (Src_Data.Object);\n+\n+               if Source_Name /= No_File then\n+                  Error_Msg_File_1 := Src_Data.File;\n+                  Error_Msg_File_2 := Source_Name;\n+                  Error_Msg\n+                    (Project,\n+                     In_Tree,\n+                     \"{ and { have the same object file name\",\n+                     No_Location);\n+\n+               else\n+                  Object_File_Names.Set (Src_Data.Object, Src_Data.File);\n+               end if;\n+            end Check_Object;\n+\n+         --  Start of processing for Check_Object_File_Names\n+\n+         begin\n+            Object_File_Names.Reset;\n+            Src_Id := In_Tree.First_Source;\n+            while Src_Id /= No_Source loop\n+               Src_Data := In_Tree.Sources.Table (Src_Id);\n+\n+               if Src_Data.Compiled and then Src_Data.Object_Exists\n+                 and then Project_Extends (Project, Src_Data.Project, In_Tree)\n+               then\n+                  if Src_Data.Unit = No_Name then\n+                     if Src_Data.Kind = Impl then\n+                        Check_Object;\n+                     end if;\n+\n+                  else\n+                     case Src_Data.Kind is\n+                        when Spec =>\n+                           if Src_Data.Other_Part = No_Source then\n+                              Check_Object;\n+                           end if;\n+\n+                        when Sep =>\n+                           null;\n+\n+                        when Impl =>\n+                           if Src_Data.Other_Part /= No_Source then\n+                              Check_Object;\n+\n+                           else\n+                              --  Check if it is a subunit\n+\n+                              declare\n+                                 Src_Ind : constant Source_File_Index :=\n+                                             Sinput.P.Load_Project_File\n+                                               (Get_Name_String\n+                                                  (Src_Data.Path));\n+\n+                              begin\n+                                 if Sinput.P.Source_File_Is_Subunit\n+                                     (Src_Ind)\n+                                 then\n+                                    In_Tree.Sources.Table (Src_Id).Kind := Sep;\n+                                 else\n+                                    Check_Object;\n+                                 end if;\n+                              end;\n+                           end if;\n+                     end case;\n+                  end if;\n+               end if;\n+\n+               Src_Id := Src_Data.Next_In_Sources;\n+            end loop;\n+         end Check_Object_File_Names;\n       end Process_Sources_In_Multi_Language_Mode;\n \n    --  Start of processing for Look_For_Sources\n@@ -9140,15 +9242,15 @@ package body Prj.Nmsc is\n      (File_Name : File_Name_Type;\n       Directory : Path_Name_Type) return String\n    is\n-      Result : String_Access;\n-\n+      Result        : String_Access;\n       The_Directory : constant String := Get_Name_String (Directory);\n \n    begin\n       Get_Name_String (File_Name);\n-      Result := Locate_Regular_File\n-        (File_Name => Name_Buffer (1 .. Name_Len),\n-         Path      => The_Directory);\n+      Result :=\n+        Locate_Regular_File\n+          (File_Name => Name_Buffer (1 .. Name_Len),\n+           Path      => The_Directory);\n \n       if Result = null then\n          return \"\";"}]}