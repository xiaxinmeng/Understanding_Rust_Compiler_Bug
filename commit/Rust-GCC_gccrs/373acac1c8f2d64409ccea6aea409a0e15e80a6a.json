{"sha": "373acac1c8f2d64409ccea6aea409a0e15e80a6a", "node_id": "C_kwDOANBUbNoAKDM3M2FjYWMxYzhmMmQ2NDQwOWNjZWE2YWVhNDA5YTBlMTVlODBhNmE", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-10-14T12:58:02Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-10-14T21:19:38Z"}, "message": "libstdc++: Make filesystem::path(path&&) always noexcept\n\nSince r12-4065 std::basic_string is always nothrow-move-constructible,\nso filesystem::path is too.\n\nThat also means that path::_S_convert(T) is noexcept when returning its\nargument, because T is either a basci_string or basic_string_view, and\nwill be moved into the return value.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/fs_path.h (path(path&&)): Make unconditionally\n\tnoexcept.\n\t(path::_S_convert(T)): Add condtional noexcept.", "tree": {"sha": "03c50439903eadb18815e205c41e79c6a36b1ab6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03c50439903eadb18815e205c41e79c6a36b1ab6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/373acac1c8f2d64409ccea6aea409a0e15e80a6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/373acac1c8f2d64409ccea6aea409a0e15e80a6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/373acac1c8f2d64409ccea6aea409a0e15e80a6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/373acac1c8f2d64409ccea6aea409a0e15e80a6a/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04a9b8d2f38573d0527edeea9e4fd9b7dfdc7983", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04a9b8d2f38573d0527edeea9e4fd9b7dfdc7983", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04a9b8d2f38573d0527edeea9e4fd9b7dfdc7983"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "d13fb12455ceaf152d170d5c904381ed2b4d25ca", "filename": "libstdc++-v3/include/bits/fs_path.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/373acac1c8f2d64409ccea6aea409a0e15e80a6a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/373acac1c8f2d64409ccea6aea409a0e15e80a6a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h?ref=373acac1c8f2d64409ccea6aea409a0e15e80a6a", "patch": "@@ -316,10 +316,7 @@ namespace __detail\n \n     path(const path& __p) = default;\n \n-    path(path&& __p)\n-#if _GLIBCXX_USE_CXX11_ABI || _GLIBCXX_FULLY_DYNAMIC_STRING == 0\n-      noexcept\n-#endif\n+    path(path&& __p) noexcept\n     : _M_pathname(std::move(__p._M_pathname)),\n       _M_cmpts(std::move(__p._M_cmpts))\n     { __p.clear(); }\n@@ -624,6 +621,7 @@ namespace __detail\n     template<typename _Tp>\n       static auto\n       _S_convert(_Tp __str)\n+      noexcept(is_same_v<typename _Tp::value_type, value_type>)\n       {\n \tif constexpr (is_same_v<typename _Tp::value_type, value_type>)\n \t  return __str; // No conversion needed."}]}