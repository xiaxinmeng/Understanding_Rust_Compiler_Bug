{"sha": "d724d2aff687414567caad50eda806a28480c771", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDcyNGQyYWZmNjg3NDE0NTY3Y2FhZDUwZWRhODA2YTI4NDgwYzc3MQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-03-01T15:55:56Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-03-01T15:55:56Z"}, "message": "PR c++/89532 - ICE with incomplete type in decltype.\n\n\t* semantics.c (finish_compound_literal): Return error_mark_node\n\tif digest_init_flags returns error_mark_node.\n\n\t* g++.dg/cpp2a/nontype-class14.C: New test.\n\nFrom-SVN: r269317", "tree": {"sha": "0f3979606f9d8f7af1c9e4be853d58ed0719f489", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f3979606f9d8f7af1c9e4be853d58ed0719f489"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d724d2aff687414567caad50eda806a28480c771", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d724d2aff687414567caad50eda806a28480c771", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d724d2aff687414567caad50eda806a28480c771", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d724d2aff687414567caad50eda806a28480c771/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "337f1caed6378294b8fe97347dbb0a5e6651a71b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/337f1caed6378294b8fe97347dbb0a5e6651a71b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/337f1caed6378294b8fe97347dbb0a5e6651a71b"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "ae5fd563dc30382bee0330079f527be18f817e39", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d724d2aff687414567caad50eda806a28480c771/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d724d2aff687414567caad50eda806a28480c771/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d724d2aff687414567caad50eda806a28480c771", "patch": "@@ -1,3 +1,9 @@\n+2019-03-01  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/89532 - ICE with incomplete type in decltype.\n+\t* semantics.c (finish_compound_literal): Return error_mark_node\n+\tif digest_init_flags returns error_mark_node.\n+\n 2019-03-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tImplement P1002R1, Try-catch blocks in constexpr functions"}, {"sha": "c03e4ef247c51415f4bc6d562be1e1be2349d2af", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d724d2aff687414567caad50eda806a28480c771/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d724d2aff687414567caad50eda806a28480c771/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=d724d2aff687414567caad50eda806a28480c771", "patch": "@@ -2859,6 +2859,9 @@ finish_compound_literal (tree type, tree compound_literal,\n   compound_literal = digest_init_flags (type, compound_literal,\n \t\t\t\t\tLOOKUP_NORMAL | LOOKUP_NO_NARROWING,\n \t\t\t\t\tcomplain);\n+  if (compound_literal == error_mark_node)\n+    return error_mark_node;\n+\n   /* If we're in a template, return the original compound literal.  */\n   if (orig_cl)\n     {"}, {"sha": "88cda1a9df24196833085dfec6d167a95bf8102d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d724d2aff687414567caad50eda806a28480c771/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d724d2aff687414567caad50eda806a28480c771/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d724d2aff687414567caad50eda806a28480c771", "patch": "@@ -1,3 +1,8 @@\n+2019-03-01  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/89532 - ICE with incomplete type in decltype.\n+\t* g++.dg/cpp2a/nontype-class14.C: New test.\n+\n 2019-03-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tImplement P1002R1, Try-catch blocks in constexpr functions"}, {"sha": "9cc14460734dde7c839a757687425c9d5512efaf", "filename": "gcc/testsuite/g++.dg/cpp2a/nontype-class14.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d724d2aff687414567caad50eda806a28480c771/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-class14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d724d2aff687414567caad50eda806a28480c771/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-class14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-class14.C?ref=d724d2aff687414567caad50eda806a28480c771", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/89532\n+// { dg-do compile { target c++2a } }\n+\n+struct tuple;\n+\n+template <decltype(tuple {})> // { dg-error \"invalid use of incomplete type\" }\n+struct S { };\n+\n+template<typename>\n+decltype(tuple {}) d; // { dg-error \"invalid use of incomplete type\" }"}]}