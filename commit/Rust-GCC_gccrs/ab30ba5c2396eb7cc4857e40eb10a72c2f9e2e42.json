{"sha": "ab30ba5c2396eb7cc4857e40eb10a72c2f9e2e42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWIzMGJhNWMyMzk2ZWI3Y2M0ODU3ZTQwZWIxMGE3MmMyZjllMmU0Mg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-06-29T18:20:55Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-06-29T18:20:55Z"}, "message": "filebuf.cc: Tweak.\n\n\n2000-06-28  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n\n\t* testsuite/27_io/filebuf.cc: Tweak.\n\t* testsuite/27_io/filebuf_members.cc (test_01): Fix.\n\t* config/c_io_libio.cc (__basic_file::~__basic_file): Match libio\n\tfilebuf dtor.\n\t(__basic_file::basic_file): Clean, add calls similar to\n\t_IO_file_attach.\n\t(__basic_file::open): Clean.\n\t(__basic_file::sys_open): Clean.\n\n\t* bits/std_fstream.h: Revert.\n\t* bits/fstream.tcc (filebuf::close()): Revert.\n\t(filebuf::basic_filebuf()): Revert.\n\nFrom-SVN: r34786", "tree": {"sha": "d63bf5c62e51585d6a8552206b621795cbd17a8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d63bf5c62e51585d6a8552206b621795cbd17a8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab30ba5c2396eb7cc4857e40eb10a72c2f9e2e42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab30ba5c2396eb7cc4857e40eb10a72c2f9e2e42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab30ba5c2396eb7cc4857e40eb10a72c2f9e2e42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab30ba5c2396eb7cc4857e40eb10a72c2f9e2e42/comments", "author": null, "committer": null, "parents": [{"sha": "993c790ecd5b9e8950e98fa8e2cb992e0e3590e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/993c790ecd5b9e8950e98fa8e2cb992e0e3590e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/993c790ecd5b9e8950e98fa8e2cb992e0e3590e4"}], "stats": {"total": 80, "additions": 42, "deletions": 38}, "files": [{"sha": "605040a8777112feb550980cf80037a5b343db9d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab30ba5c2396eb7cc4857e40eb10a72c2f9e2e42/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab30ba5c2396eb7cc4857e40eb10a72c2f9e2e42/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ab30ba5c2396eb7cc4857e40eb10a72c2f9e2e42", "patch": "@@ -1,3 +1,18 @@\n+2000-06-28  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n+\n+\t* testsuite/27_io/filebuf.cc: Tweak.\n+\t* testsuite/27_io/filebuf_members.cc (test_01): Fix.\n+\t* config/c_io_libio.cc (__basic_file::~__basic_file): Match libio\n+\tfilebuf dtor.\n+\t(__basic_file::basic_file): Clean, add calls similar to\n+\t_IO_file_attach.\n+\t(__basic_file::open): Clean.\n+\t(__basic_file::sys_open): Clean.\n+\n+\t* bits/std_fstream.h: Revert.\n+\t* bits/fstream.tcc (filebuf::close()): Revert.\n+\t(filebuf::basic_filebuf()): Revert.\n+\n 2000-06-27  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n \tUpdate to SGI STL 3.3\n@@ -30,7 +45,7 @@\n \n \t* docs/install.html:  Fix minor typo as reported.\n \n-2000-06-13  Brent Verner <brent@rcfile.org>\n+2000-06-26  Brent Verner <brent@rcfile.org>\n \n \t* bits/string.tcc (string::rfind): Fix.\n \t* testsuite/21_strings/rfind.cc: New file."}, {"sha": "8380abc077aff19d828b72477ee6ec9bb069a17e", "filename": "libstdc++-v3/bits/fstream.tcc", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab30ba5c2396eb7cc4857e40eb10a72c2f9e2e42/libstdc%2B%2B-v3%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab30ba5c2396eb7cc4857e40eb10a72c2f9e2e42/libstdc%2B%2B-v3%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Ffstream.tcc?ref=ab30ba5c2396eb7cc4857e40eb10a72c2f9e2e42", "patch": "@@ -56,10 +56,9 @@ namespace std\n     basic_filebuf<_CharT, _Traits>::\n     basic_filebuf() \n     : __streambuf_type(), _M_file(NULL), _M_state_cur(), _M_state_beg(), \n-    _M_last_overflowed(false), _M_fileno_based(false)\n+    _M_last_overflowed(false)\n     { _M_fcvt = &use_facet<__codecvt_type>(this->getloc()); }\n \n-\n   template<typename _CharT, typename _Traits>\n     basic_filebuf<_CharT, _Traits>::\n     basic_filebuf(int __fd, const char* /*__name*/, ios_base::openmode __mode)\n@@ -68,7 +67,6 @@ namespace std\n     {\n       _M_fcvt = &use_facet<__codecvt_type>(this->getloc());\n       _M_init_filebuf();\n-      _M_fileno_based = true;\n       _M_file->sys_open(__fd, __mode);\n       if (this->is_open() && _M_buf_size)\n \t{\n@@ -144,14 +142,10 @@ namespace std\n \t    }\n #endif\n \n-\t  bool __testclosed;\n-\t  if (_M_fileno_based)\n-\t    __testclosed = _M_file->sys_close();\n-\t  else\n-\t    __testclosed = _M_file->close();\n-\n-\t  if (__testclosed)\n+\t  if (_M_file)\n \t    {\n+\t      delete _M_file;\n+\t      _M_file = NULL;\n \t      _M_mode = ios_base::openmode(0);\n \t      if (_M_buf_size)\n \t\tdelete [] _M_buf;"}, {"sha": "f372100efc97f9ca13d9a3b036be0185bfe76dcb", "filename": "libstdc++-v3/bits/std_fstream.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab30ba5c2396eb7cc4857e40eb10a72c2f9e2e42/libstdc%2B%2B-v3%2Fbits%2Fstd_fstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab30ba5c2396eb7cc4857e40eb10a72c2f9e2e42/libstdc%2B%2B-v3%2Fbits%2Fstd_fstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fstd_fstream.h?ref=ab30ba5c2396eb7cc4857e40eb10a72c2f9e2e42", "patch": "@@ -71,7 +71,6 @@ namespace std {\n       const __codecvt_type*\t_M_fcvt;       // Cached value from use_facet.\n       __mutext_type           \t_M_lock;\n       bool\t\t\t_M_last_overflowed;  // XXX Needed?\n-      bool\t\t\t_M_fileno_based; // Open/closed via filenos.\n  \n     public:\n       // Constructors/destructor:\n@@ -85,8 +84,6 @@ namespace std {\n       { \n \tthis->close();\n \t_M_fcvt = NULL;\n-\tdelete _M_file;\n-\t_M_file = NULL;\n \t_M_last_overflowed = false;\n       }\n "}, {"sha": "7bc4a990bf9ea015302d45aaa6c66bf278619a0a", "filename": "libstdc++-v3/config/c_io_libio.cc", "status": "modified", "additions": 18, "deletions": 22, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab30ba5c2396eb7cc4857e40eb10a72c2f9e2e42/libstdc%2B%2B-v3%2Fconfig%2Fc_io_libio.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab30ba5c2396eb7cc4857e40eb10a72c2f9e2e42/libstdc%2B%2B-v3%2Fconfig%2Fc_io_libio.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fc_io_libio.cc?ref=ab30ba5c2396eb7cc4857e40eb10a72c2f9e2e42", "patch": "@@ -39,9 +39,10 @@ namespace std {\n   \n   __basic_file::__basic_file(__c_lock* __lock)\n   {\n-    this->_lock = __lock;\n-    _IO_init(this, 0);\n+    _lock = __lock;\n+    _IO_init(this, 0);     \n     _IO_file_init(this); \n+    _IO_file_attach(this, -1);\n   }\n \n   int \n@@ -50,14 +51,13 @@ namespace std {\n  \n   __basic_file::~__basic_file()\n   {\n-    if (_IO_file_is_open(this))\n+    if (this->is_open())\n       {\n \t_IO_do_flush(this);\n-\tif (!(_IO_file_flags & _IO_DELETE_DONT_CLOSE))\n+\tif (!(_flags & _IO_DELETE_DONT_CLOSE))\n \t  _IO_SYSCLOSE(this);\n       }\n-    else\n-      _IO_un_link(this);\n+    _IO_default_finish(this, 0);\n   }\n       \n   __basic_file*\n@@ -89,13 +89,12 @@ namespace std {\n \n     if (__fd >= 0)\n       {\n-\t__retval = this;\n \t_fileno = __fd;\n+\tint __mask = _IO_NO_READS + _IO_NO_WRITES + _IO_IS_APPENDING;\n+\t_flags = (_flags & ~__mask) | (__rw_mode & __mask);\n+\t_IO_link_in(this); \n+\t__retval = this;\n       }\n-\n-    int __mask = _IO_NO_READS + _IO_NO_WRITES + _IO_IS_APPENDING;\n-    _IO_file_flags = (_IO_file_flags & ~__mask) | (__rw_mode & __mask);\n-    _IO_link_in(this); \n     return __retval;\n   }\n \n@@ -148,22 +147,22 @@ namespace std {\n     if (__testb)\n       __p_mode |= O_BINARY;\n #endif\t   \n-    if ( !_IO_file_is_open(this))\n+    if (!_IO_file_is_open(this))\n       {\n #if _G_HAVE_IO_FILE_OPEN\n \t__c_file_type* __f;\n \t__f = _IO_file_open(this, __name, __p_mode, __prot, __rw_mode, 0);\n \t__retval = __f ? this: NULL;\n #else\n-\tint __i = ::open(__name, __p_mode, __prot);\n-\tif (__i >= 0)\n+\tint __fd = ::open(__name, __p_mode, __prot);\n+\tif (__fd >= 0)\n \t  {\n+\t    _fileno = __fd;\t   \n+\t    int __mask = _IO_NO_READS + _IO_NO_WRITES + _IO_IS_APPENDING;\n+\t    _flags = (_flags & ~__mask) | (__rw_mode & __mask);\n+\t    _IO_link_in(this);\n \t    __retval = this;\n-\t      _fileno = __i;\n \t  }\n-\tint __mask = _IO_NO_READS + _IO_NO_WRITES + _IO_IS_APPENDING;\n-\t_IO_file_flags = (_IO_file_flags & ~__mask) | (__rw_mode & __mask);\n-\t_IO_link_in(this);\n #endif      \n       }\n     return __retval;\n@@ -174,10 +173,7 @@ namespace std {\n   \n   __basic_file* \n   __basic_file::close()\n-  {\n-    bool __testopen = _IO_file_close_it(this);\n-    return __testopen ? static_cast<__basic_file*>(NULL) : this;\n-  }\n+  { return _IO_file_close_it(this) ? static_cast<__basic_file*>(NULL) : this; }\n \n   // NB: Unused.\n   int "}, {"sha": "ce51a5915ea3759d3846996ca48f466daabff42e", "filename": "libstdc++-v3/testsuite/27_io/filebuf.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab30ba5c2396eb7cc4857e40eb10a72c2f9e2e42/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab30ba5c2396eb7cc4857e40eb10a72c2f9e2e42/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf.cc?ref=ab30ba5c2396eb7cc4857e40eb10a72c2f9e2e42", "patch": "@@ -46,6 +46,7 @@ derived_filebuf fb_03; // in | out\n \n const int buffer_size = 8192;\n \n+\n // initialize filebufs to be the same size regardless of platform\n void test00()\n {\n@@ -54,6 +55,7 @@ void test00()\n   fb_03.set_size(buffer_size);\n }\n \n+\n // test the filebuf/stringbuf locale settings\n bool test01() {\n   std::locale loc_tmp;\n@@ -75,7 +77,7 @@ bool test02() {\n   test &= !fb_03.is_open();\n \n   // filebuf_type* open(const char* __s, ios_base::openmode __mode)\n-  fb_01.open(name_01, std::ios_base::in |  std::ios_base::ate);\n+  fb_01.open(name_01, std::ios_base::in | std::ios_base::ate);\n   fb_02.open(name_02, std::ios_base::in | std::ios_base::out | std::ios_base::trunc);\n   // Try to open two different files without closing the first:\n   // Should keep the old file attached, and disregard attempt to overthrow."}, {"sha": "5933bfd8607a31d25a5a02862f4d52f66069df92", "filename": "libstdc++-v3/testsuite/27_io/filebuf_members.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab30ba5c2396eb7cc4857e40eb10a72c2f9e2e42/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab30ba5c2396eb7cc4857e40eb10a72c2f9e2e42/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf_members.cc?ref=ab30ba5c2396eb7cc4857e40eb10a72c2f9e2e42", "patch": "@@ -60,7 +60,7 @@ test_01()\n \n   // read (standard)\n   FILE* f = fopen(name_01, \"r\");\n-  test &= !f;\n+  test &= f != NULL;\n \n   {\n     std::ifstream ifstream1(name_01);"}]}