{"sha": "2cea586a7e8f81bba8967a75701691444d9e9531", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNlYTU4NmE3ZThmODFiYmE4OTY3YTc1NzAxNjkxNDQ0ZDllOTUzMQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@cygnus.com", "date": "1998-04-28T17:55:22Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1998-04-28T17:55:22Z"}, "message": "Patch to fix sparc multiply failures, reported by Laurent Bonnaud.\n\n\t* sparc.md (mulsidi3): Call const v8plus and v8plus routines.\n\t(mulsidi3_v8plus, const_mulsidi3_v8plus): Delete asterisk from name.\n\t(smuldi3_highpart): Call const v8plus routine.\n\t(smulsi3_highpart_v8plus): Renamed from smulsidi3_highpart_v8plus.\n\t(const_smulsi3_highpart_v8plus): New pattern.\n\t(smulsi3_highpart_sp32): Renamed from smulsidi3_highpart_sp32.\n\t(umulsidi3): Call const v8plus routine.\n\t(umulsi3_highpart): Handle const before v8plus.  Call const v8plus\n\troutine.\n\t(umulsi3_highpart_v8plus): Renamed from umulsidi3_highpart_v8plus.\n\t(umulsi3_highpart_sp32): Renamed from umulsidi3_highpart_sp32.\n\nFrom-SVN: r19470", "tree": {"sha": "13b1d0d41c1f10e045304a0cf5bb87c9366ab500", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13b1d0d41c1f10e045304a0cf5bb87c9366ab500"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2cea586a7e8f81bba8967a75701691444d9e9531", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cea586a7e8f81bba8967a75701691444d9e9531", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cea586a7e8f81bba8967a75701691444d9e9531", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cea586a7e8f81bba8967a75701691444d9e9531/comments", "author": null, "committer": null, "parents": [{"sha": "b69b1501dcb82cd3bef280398637ae1ac7f4254d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b69b1501dcb82cd3bef280398637ae1ac7f4254d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b69b1501dcb82cd3bef280398637ae1ac7f4254d"}], "stats": {"total": 86, "additions": 73, "deletions": 13}, "files": [{"sha": "2a77dca930428c28f0b7e1c1b3c054208a29368c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cea586a7e8f81bba8967a75701691444d9e9531/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cea586a7e8f81bba8967a75701691444d9e9531/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2cea586a7e8f81bba8967a75701691444d9e9531", "patch": "@@ -1,3 +1,17 @@\n+Tue Apr 28 17:53:33 1998  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* sparc.md (mulsidi3): Call const v8plus and v8plus routines.\n+\t(mulsidi3_v8plus, const_mulsidi3_v8plus): Delete asterisk from name.\n+\t(smuldi3_highpart): Call const v8plus routine.\n+\t(smulsi3_highpart_v8plus): Renamed from smulsidi3_highpart_v8plus.\n+\t(const_smulsi3_highpart_v8plus): New pattern.\n+\t(smulsi3_highpart_sp32): Renamed from smulsidi3_highpart_sp32.\n+\t(umulsidi3): Call const v8plus routine.\n+\t(umulsi3_highpart): Handle const before v8plus.  Call const v8plus\n+\troutine.\n+\t(umulsi3_highpart_v8plus): Renamed from umulsidi3_highpart_v8plus.\n+\t(umulsi3_highpart_sp32): Renamed from umulsidi3_highpart_sp32.\n+\n Tue Apr 28 08:55:26 1998  Michael Meissner  <meissner@cygnus.com>\n \n \t* m32r.c (*_oper{and|ator}): Change enum arguments and return"}, {"sha": "4076f2242213599c4b217f17a301d91608696f0d", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 59, "deletions": 13, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cea586a7e8f81bba8967a75701691444d9e9531/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cea586a7e8f81bba8967a75701691444d9e9531/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=2cea586a7e8f81bba8967a75701691444d9e9531", "patch": "@@ -4049,14 +4049,25 @@ return \\\"srl %1,0,%0\\\";\n {\n   if (CONSTANT_P (operands[2]))\n     {\n+      if (TARGET_V8PLUS)\n+\t{\n+\t  emit_insn (gen_const_mulsidi3_v8plus (operands[0], operands[1],\n+\t\t\t\t\t\toperands[2]));\n+\t  DONE;\n+\t}\n       emit_insn (gen_const_mulsidi3 (operands[0], operands[1], operands[2]));\n       DONE;\n     }\n+  if (TARGET_V8PLUS)\n+    {\n+      emit_insn (gen_mulsidi3_v8plus (operands[0], operands[1], operands[2]));\n+      DONE;\n+    }\n }\")\n \n ;; V9 puts the 64 bit product in a 64 bit register.  Only out or global\n ;; registers can hold 64 bit values in the V8plus environment.\n-(define_insn \"*mulsidi3_v8plus\"\n+(define_insn \"mulsidi3_v8plus\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=h,r\")\n \t(mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"r,r\"))\n \t\t (sign_extend:DI (match_operand:SI 2 \"register_operand\" \"r,r\"))))\n@@ -4067,7 +4078,7 @@ return \\\"srl %1,0,%0\\\";\n    smul %1,%2,%3\\;srlx %3,32,%H0\\;mov %3,%L0\"\n   [(set_attr \"length\" \"2,3\")])\n \n-(define_insn \"*const_mulsidi3_v8plus\"\n+(define_insn \"const_mulsidi3_v8plus\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=h,r\")\n \t(mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"r,r\"))\n \t\t (match_operand:SI 2 \"small_int\" \"I,I\")))\n@@ -4117,18 +4128,26 @@ return \\\"srl %1,0,%0\\\";\n {\n   if (CONSTANT_P (operands[2]))\n     {\n+      if (TARGET_V8PLUS)\n+\t{\n+\t  emit_insn (gen_const_smulsi3_highpart_v8plus (operands[0],\n+\t\t\t\t\t\t\toperands[1],\n+\t\t\t\t\t\t\toperands[2],\n+\t\t\t\t\t\t\tGEN_INT (32)));\n+\t  DONE;\n+\t}\n       emit_insn (gen_const_smulsi3_highpart (operands[0], operands[1], operands[2]));\n       DONE;\n     }\n   if (TARGET_V8PLUS)\n     {\n-      emit_insn (gen_smulsidi3_highpart_v8plus (operands[0], operands[1],\n-\t\t\t\t\t\toperands[2], GEN_INT (32)));\n+      emit_insn (gen_smulsi3_highpart_v8plus (operands[0], operands[1],\n+\t\t\t\t\t      operands[2], GEN_INT (32)));\n       DONE;\n     }\n }\")\n \n-(define_insn \"smulsidi3_highpart_v8plus\"\n+(define_insn \"smulsi3_highpart_v8plus\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=h,r\")\n \t(truncate:SI\n \t (lshiftrt:DI (mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"r,r\"))\n@@ -4141,7 +4160,20 @@ return \\\"srl %1,0,%0\\\";\n    smul %1,%2,%4\\;srlx %4,%3,%0\"\n   [(set_attr \"length\" \"2\")])\n \n-(define_insn \"*smulsidi3_highpart_sp32\"\n+(define_insn \"const_smulsi3_highpart_v8plus\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=h,r\")\n+\t(truncate:SI\n+\t (lshiftrt:DI (mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"r,r\"))\n+\t\t\t       (match_operand:SI 2 \"register_operand\" \"r,r\"))\n+\t\t      (match_operand:SI 3 \"const_int_operand\" \"i,i\"))))\n+   (clobber (match_scratch:SI 4 \"=X,&h\"))]\n+  \"TARGET_V8PLUS\"\n+  \"@\n+   smul %1,%2,%0\\;srlx %0,%3,%0\n+   smul %1,%2,%4\\;srlx %4,%3,%0\"\n+  [(set_attr \"length\" \"2\")])\n+\n+(define_insn \"*smulsi3_highpart_sp32\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(truncate:SI\n \t (lshiftrt:DI (mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"r\"))\n@@ -4170,6 +4202,12 @@ return \\\"srl %1,0,%0\\\";\n {\n   if (CONSTANT_P (operands[2]))\n     {\n+      if (TARGET_V8PLUS)\n+\t{\n+\t  emit_insn (gen_const_umulsidi3_v8plus (operands[0], operands[1],\n+\t\t\t\t\t\t operands[2]));\n+\t  DONE;\n+\t}\n       emit_insn (gen_const_umulsidi3 (operands[0], operands[1], operands[2]));\n       DONE;\n     }\n@@ -4239,20 +4277,28 @@ return \\\"srl %1,0,%0\\\";\n   \"TARGET_HARD_MUL\"\n   \"\n {\n-  if (TARGET_V8PLUS)\n+  if (CONSTANT_P (operands[2]))\n     {\n-      emit_insn (gen_umulsidi3_highpart_v8plus (operands[0], operands[1],\n-\t\t\t\t\t\toperands[2], GEN_INT (32)));\n+      if (TARGET_V8PLUS)\n+\t{\n+\t  emit_insn (gen_const_umulsi3_highpart_v8plus (operands[0],\n+\t\t\t\t\t\t\toperands[1],\n+\t\t\t\t\t\t\toperands[2],\n+\t\t\t\t\t\t\tGEN_INT (32)));\n+\t  DONE;\n+\t}\n+      emit_insn (gen_const_umulsi3_highpart (operands[0], operands[1], operands[2]));\n       DONE;\n     }\n-  if (CONSTANT_P (operands[2]))\n+  if (TARGET_V8PLUS)\n     {\n-      emit_insn (gen_const_umulsi3_highpart (operands[0], operands[1], operands[2]));\n+      emit_insn (gen_umulsi3_highpart_v8plus (operands[0], operands[1],\n+\t\t\t\t\t      operands[2], GEN_INT (32)));\n       DONE;\n     }\n }\")\n \n-(define_insn \"umulsidi3_highpart_v8plus\"\n+(define_insn \"umulsi3_highpart_v8plus\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=h,r\")\n \t(truncate:SI\n \t (lshiftrt:DI (mult:DI (zero_extend:DI (match_operand:SI 1 \"register_operand\" \"r,r\"))\n@@ -4278,7 +4324,7 @@ return \\\"srl %1,0,%0\\\";\n    umul %1,%2,%4\\;srlx %4,%3,%0\"\n   [(set_attr \"length\" \"2\")])\n \n-(define_insn \"*umulsidi3_highpart_sp32\"\n+(define_insn \"*umulsi3_highpart_sp32\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(truncate:SI\n \t (lshiftrt:DI (mult:DI (zero_extend:DI (match_operand:SI 1 \"register_operand\" \"r\"))"}]}