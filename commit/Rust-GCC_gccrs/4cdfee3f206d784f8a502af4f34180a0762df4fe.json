{"sha": "4cdfee3f206d784f8a502af4f34180a0762df4fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNkZmVlM2YyMDZkNzg0ZjhhNTAyYWY0ZjM0MTgwYTA3NjJkZjRmZQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2018-07-30T08:17:26Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-07-30T08:17:26Z"}, "message": "[libgomp, nvptx] Handle per-function max-threads-per-block in default dims\n\nCurrently parallel-loop-1.c fails at -O0 on a Quadro M1200, because one of the\nkernel launch configurations exceeds the resources available in the device, due\nto the default dimensions chosen by the runtime.\n\nThis patch fixes that by taking the per-function max_threads_per_block into\naccount when using the default dimensions.\n\n2018-07-30  Tom de Vries  <tdevries@suse.de>\n\n\t* plugin/plugin-nvptx.c (MIN, MAX): Redefine.\n\t(nvptx_exec): Ensure worker and vector default dims don't exceed\n\ttarg_fn->max_threads_per_block.\n\nFrom-SVN: r263062", "tree": {"sha": "d46c15b15b238c3095358b7e75a968184b1b05d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d46c15b15b238c3095358b7e75a968184b1b05d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4cdfee3f206d784f8a502af4f34180a0762df4fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cdfee3f206d784f8a502af4f34180a0762df4fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cdfee3f206d784f8a502af4f34180a0762df4fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cdfee3f206d784f8a502af4f34180a0762df4fe/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0b210c43bbb6eddac8ba550d9c45bf679d4328c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b210c43bbb6eddac8ba550d9c45bf679d4328c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b210c43bbb6eddac8ba550d9c45bf679d4328c5"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "6cd30bbf49d0d9277276429509d9abb27eb0e3ad", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cdfee3f206d784f8a502af4f34180a0762df4fe/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cdfee3f206d784f8a502af4f34180a0762df4fe/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=4cdfee3f206d784f8a502af4f34180a0762df4fe", "patch": "@@ -1,3 +1,9 @@\n+2018-07-30  Tom de Vries  <tdevries@suse.de>\n+\n+\t* plugin/plugin-nvptx.c (MIN, MAX): Redefine.\n+\t(nvptx_exec): Ensure worker and vector default dims don't exceed\n+\ttarg_fn->max_threads_per_block.\n+\n 2018-07-30  Tom de Vries  <tdevries@suse.de>\n \n \t* plugin/plugin-nvptx.c (struct ptx_device): Add default_dims field."}, {"sha": "b6ec5f88d59a087e613f272bc45e9fe96f6915be", "filename": "libgomp/plugin/plugin-nvptx.c", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cdfee3f206d784f8a502af4f34180a0762df4fe/libgomp%2Fplugin%2Fplugin-nvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cdfee3f206d784f8a502af4f34180a0762df4fe/libgomp%2Fplugin%2Fplugin-nvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-nvptx.c?ref=4cdfee3f206d784f8a502af4f34180a0762df4fe", "patch": "@@ -141,6 +141,11 @@ init_cuda_lib (void)\n \n #include \"secure_getenv.h\"\n \n+#undef MIN\n+#undef MAX\n+#define MIN(X,Y) ((X) < (Y) ? (X) : (Y))\n+#define MAX(X,Y) ((X) > (Y) ? (X) : (Y))\n+\n /* Convenience macros for the frequently used CUDA library call and\n    error handling sequence as well as CUDA library calls that\n    do the error checking themselves or don't do it at all.  */\n@@ -1135,6 +1140,7 @@ nvptx_exec (void (*fn), size_t mapnum, void **hostaddrs, void **devaddrs,\n   void *kargs[1];\n   void *hp, *dp;\n   struct nvptx_thread *nvthd = nvptx_thread ();\n+  int warp_size = nvthd->ptx_dev->warp_size;\n   const char *maybe_abort_msg = \"(perhaps abort was called)\";\n \n   function = targ_fn->fn;\n@@ -1175,7 +1181,6 @@ nvptx_exec (void (*fn), size_t mapnum, void **hostaddrs, void **devaddrs,\n \n \t  int gang, worker, vector;\n \t  {\n-\t    int warp_size = nvthd->ptx_dev->warp_size;\n \t    int block_size = nvthd->ptx_dev->max_threads_per_block;\n \t    int cpu_size = nvthd->ptx_dev->max_threads_per_multiprocessor;\n \t    int dev_size = nvthd->ptx_dev->num_sms;\n@@ -1213,9 +1218,25 @@ nvptx_exec (void (*fn), size_t mapnum, void **hostaddrs, void **devaddrs,\n \t}\n       pthread_mutex_unlock (&ptx_dev_lock);\n \n-      for (i = 0; i != GOMP_DIM_MAX; i++)\n-\tif (!dims[i])\n-\t  dims[i] = nvthd->ptx_dev->default_dims[i];\n+      {\n+\tbool default_dim_p[GOMP_DIM_MAX];\n+\tfor (i = 0; i != GOMP_DIM_MAX; i++)\n+\t  {\n+\t    default_dim_p[i] = !dims[i];\n+\t    if (default_dim_p[i])\n+\t      dims[i] = nvthd->ptx_dev->default_dims[i];\n+\t  }\n+\n+\tif (default_dim_p[GOMP_DIM_VECTOR])\n+\t  dims[GOMP_DIM_VECTOR]\n+\t    = MIN (dims[GOMP_DIM_VECTOR],\n+\t\t   (targ_fn->max_threads_per_block / warp_size * warp_size));\n+\n+\tif (default_dim_p[GOMP_DIM_WORKER])\n+\t  dims[GOMP_DIM_WORKER]\n+\t    = MIN (dims[GOMP_DIM_WORKER],\n+\t\t   targ_fn->max_threads_per_block / dims[GOMP_DIM_VECTOR]);\n+      }\n     }\n \n   /* Check if the accelerator has sufficient hardware resources to"}]}