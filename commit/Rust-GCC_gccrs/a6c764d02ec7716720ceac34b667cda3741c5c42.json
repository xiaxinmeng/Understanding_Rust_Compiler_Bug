{"sha": "a6c764d02ec7716720ceac34b667cda3741c5c42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZjNzY0ZDAyZWM3NzE2NzIwY2VhYzM0YjY2N2NkYTM3NDFjNWM0Mg==", "commit": {"author": {"name": "Mikhail Maltsev", "email": "maltsevm@gmail.com", "date": "2015-11-04T15:01:46Z"}, "committer": {"name": "Mikhail Maltsev", "email": "miyuki@gcc.gnu.org", "date": "2015-11-04T15:01:46Z"}, "message": "ENABLE_CHECKING refactoring: remove remaining occurrences\n\nlibcpp/\n\n\t* config.in: Regenerate.\n\t* configure: Regenerate.\n\t* configure.ac: Remove ENABLE_CHECKING.\n\ngcc/\n\n\t* cfganal.c (inverted_post_order_compute): Remove conditional\n\tcompilation, use flag_checking.\n\t* config.in: Regenerate.\n\t* configure: Regenerate.\n\t* configure.ac: Remove ENABLE_CHECKING.\n\t* genconditions.c: Do not #undef ENABLE_CHECKING.\n\t* sese.h (bb_in_region): Comment out broken check.\n\t* tree-ssa-loop-manip.c (rewrite_into_loop_closed_ssa_1): Remove\n\tconditional compilation, use flag_checking.\n\nFrom-SVN: r229758", "tree": {"sha": "c74e9331855a085ae3e13ae1ba3f18655fb151da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c74e9331855a085ae3e13ae1ba3f18655fb151da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6c764d02ec7716720ceac34b667cda3741c5c42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6c764d02ec7716720ceac34b667cda3741c5c42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6c764d02ec7716720ceac34b667cda3741c5c42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6c764d02ec7716720ceac34b667cda3741c5c42/comments", "author": {"login": "miyuki", "id": 4668268, "node_id": "MDQ6VXNlcjQ2NjgyNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/4668268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miyuki", "html_url": "https://github.com/miyuki", "followers_url": "https://api.github.com/users/miyuki/followers", "following_url": "https://api.github.com/users/miyuki/following{/other_user}", "gists_url": "https://api.github.com/users/miyuki/gists{/gist_id}", "starred_url": "https://api.github.com/users/miyuki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miyuki/subscriptions", "organizations_url": "https://api.github.com/users/miyuki/orgs", "repos_url": "https://api.github.com/users/miyuki/repos", "events_url": "https://api.github.com/users/miyuki/events{/privacy}", "received_events_url": "https://api.github.com/users/miyuki/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "595278beb1772272cbd59fc022a11706d60338c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/595278beb1772272cbd59fc022a11706d60338c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/595278beb1772272cbd59fc022a11706d60338c9"}], "stats": {"total": 82, "additions": 38, "deletions": 44}, "files": [{"sha": "b41693d306bff81928a1c3f910d9f37a7dfa8139", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c764d02ec7716720ceac34b667cda3741c5c42/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c764d02ec7716720ceac34b667cda3741c5c42/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a6c764d02ec7716720ceac34b667cda3741c5c42", "patch": "@@ -1,3 +1,15 @@\n+2015-11-04  Mikhail Maltsev  <maltsevm@gmail.com>\n+\n+\t* cfganal.c (inverted_post_order_compute): Remove conditional\n+\tcompilation, use flag_checking.\n+\t* config.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* configure.ac: Remove ENABLE_CHECKING.\n+\t* genconditions.c: Do not #undef ENABLE_CHECKING.\n+\t* sese.h (bb_in_region): Comment out broken check.\n+\t* tree-ssa-loop-manip.c (rewrite_into_loop_closed_ssa_1): Remove\n+\tconditional compilation, use flag_checking.\n+\n 2015-11-04  Tom de Vries  <tom@codesourcery.com>\n \n \tPR tree-optimization/67742"}, {"sha": "0f26038b22b2e61e5a0bb1386281770d1b9b2495", "filename": "gcc/cfganal.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c764d02ec7716720ceac34b667cda3741c5c42/gcc%2Fcfganal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c764d02ec7716720ceac34b667cda3741c5c42/gcc%2Fcfganal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfganal.c?ref=a6c764d02ec7716720ceac34b667cda3741c5c42", "patch": "@@ -784,9 +784,8 @@ inverted_post_order_compute (int *post_order)\n   int post_order_num = 0;\n   sbitmap visited;\n \n-#if ENABLE_CHECKING\n-  verify_no_unreachable_blocks ();\n-#endif\n+  if (flag_checking)\n+    verify_no_unreachable_blocks ();\n \n   /* Allocate stack for back-tracking up CFG.  */\n   stack = XNEWVEC (edge_iterator, n_basic_blocks_for_fn (cfun) + 1);"}, {"sha": "6f46f7039bd2f53a1b430a38a7abfcce1eaae810", "filename": "gcc/config.in", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c764d02ec7716720ceac34b667cda3741c5c42/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c764d02ec7716720ceac34b667cda3741c5c42/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=a6c764d02ec7716720ceac34b667cda3741c5c42", "patch": "@@ -76,13 +76,6 @@\n #endif\n \n \n-/* Define if you want more run-time sanity checks. This one gets a grab bag of\n-   miscellaneous but relatively cheap checks. */\n-#ifndef USED_FOR_TARGET\n-#undef ENABLE_CHECKING\n-#endif\n-\n-\n /* Define to 1 to specify that we are using the BID decimal floating point\n    format instead of DPD */\n #ifndef USED_FOR_TARGET"}, {"sha": "1d2e8f2644dab096f44918ce08631eaef828b553", "filename": "gcc/configure", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c764d02ec7716720ceac34b667cda3741c5c42/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c764d02ec7716720ceac34b667cda3741c5c42/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=a6c764d02ec7716720ceac34b667cda3741c5c42", "patch": "@@ -7098,9 +7098,6 @@ IFS=\"$ac_save_IFS\"\n nocommon_flag=\"\"\n if test x$ac_checking != x ; then\n \n-$as_echo \"#define ENABLE_CHECKING 1\" >>confdefs.h\n-\n-\n $as_echo \"#define CHECKING_P 1\" >>confdefs.h\n \n   nocommon_flag=-fno-common\n@@ -18405,7 +18402,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18408 \"configure\"\n+#line 18405 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18511,7 +18508,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18514 \"configure\"\n+#line 18511 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "d03a0bd1c17cf9515daebcd867c692a00a9b916f", "filename": "gcc/configure.ac", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c764d02ec7716720ceac34b667cda3741c5c42/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c764d02ec7716720ceac34b667cda3741c5c42/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=a6c764d02ec7716720ceac34b667cda3741c5c42", "patch": "@@ -566,9 +566,6 @@ IFS=\"$ac_save_IFS\"\n \n nocommon_flag=\"\"\n if test x$ac_checking != x ; then\n-  AC_DEFINE(ENABLE_CHECKING, 1,\n-[Define if you want more run-time sanity checks.  This one gets a grab\n-   bag of miscellaneous but relatively cheap checks.])\n   AC_DEFINE(CHECKING_P, 1,\n [Define to 1 if you want more run-time sanity checks.  This one gets a grab\n    bag of miscellaneous but relatively cheap checks.])"}, {"sha": "dd5bc92922105c43d1643a01571cff19cc3bb566", "filename": "gcc/genconditions.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c764d02ec7716720ceac34b667cda3741c5c42/gcc%2Fgenconditions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c764d02ec7716720ceac34b667cda3741c5c42/gcc%2Fgenconditions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenconditions.c?ref=a6c764d02ec7716720ceac34b667cda3741c5c42", "patch": "@@ -59,7 +59,6 @@ write_header (void)\n #if GCC_VERSION >= 3001\\n\\\n \\n\\\n /* Do not allow checking to confuse the issue.  */\\n\\\n-#undef ENABLE_CHECKING\\n\\\n #undef CHECKING_P\\n\\\n #define CHECKING_P 0\\n\\\n #undef ENABLE_TREE_CHECKING\\n\\"}, {"sha": "98ab4911e20660d4745559685088fe297cb0f2df", "filename": "gcc/sese.h", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c764d02ec7716720ceac34b667cda3741c5c42/gcc%2Fsese.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c764d02ec7716720ceac34b667cda3741c5c42/gcc%2Fsese.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsese.h?ref=a6c764d02ec7716720ceac34b667cda3741c5c42", "patch": "@@ -108,16 +108,18 @@ sese_nb_params (sese_info_p region)\n static inline bool\n bb_in_region (basic_block bb, basic_block entry, basic_block exit)\n {\n-#ifdef ENABLE_CHECKING\n-  {\n-    edge e;\n-    edge_iterator ei;\n-\n-    /* Check that there are no edges coming in the region: all the\n-       predecessors of EXIT are dominated by ENTRY.  */\n-    FOR_EACH_EDGE (e, ei, exit->preds)\n-      dominated_by_p (CDI_DOMINATORS, e->src, entry);\n-  }\n+  /* FIXME: PR67842.  */\n+#if 0\n+  if (flag_checking)\n+    {\n+      edge e;\n+      edge_iterator ei;\n+\n+      /* Check that there are no edges coming in the region: all the\n+\t predecessors of EXIT are dominated by ENTRY.  */\n+      FOR_EACH_EDGE (e, ei, exit->preds)\n+\tgcc_assert (dominated_by_p (CDI_DOMINATORS, e->src, entry));\n+    }\n #endif\n \n   return dominated_by_p (CDI_DOMINATORS, bb, entry)"}, {"sha": "b614412e3f12c3ccdb7c55ac1f8446124278342b", "filename": "gcc/tree-ssa-loop-manip.c", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c764d02ec7716720ceac34b667cda3741c5c42/gcc%2Ftree-ssa-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c764d02ec7716720ceac34b667cda3741c5c42/gcc%2Ftree-ssa-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-manip.c?ref=a6c764d02ec7716720ceac34b667cda3741c5c42", "patch": "@@ -616,14 +616,10 @@ rewrite_into_loop_closed_ssa_1 (bitmap changed_bbs, unsigned update_flag,\n \n   /* If the pass has caused the SSA form to be out-of-date, update it\n      now.  */\n-  if (update_flag == 0)\n-    {\n-#ifdef ENABLE_CHECKING\n-      verify_ssa (true, true);\n-#endif\n-    }\n-  else\n+  if (update_flag != 0)\n     update_ssa (update_flag);\n+  else if (flag_checking)\n+    verify_ssa (true, true);\n \n   bitmap_obstack_initialize (&loop_renamer_obstack);\n "}, {"sha": "f2ce57abebd881c24c4bf81f53d12517b18f4021", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c764d02ec7716720ceac34b667cda3741c5c42/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c764d02ec7716720ceac34b667cda3741c5c42/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=a6c764d02ec7716720ceac34b667cda3741c5c42", "patch": "@@ -1,3 +1,9 @@\n+2015-11-04  Mikhail Maltsev  <maltsevm@gmail.com>\n+\n+\t* config.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* configure.ac: Remove ENABLE_CHECKING.\n+\n 2015-11-03  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* lex.c (search_line_sse42): Correctly advance the pointer to an"}, {"sha": "e02ac5efbadbdd2a7d9bd349dcd0e766b95e3d64", "filename": "libcpp/config.in", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c764d02ec7716720ceac34b667cda3741c5c42/libcpp%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c764d02ec7716720ceac34b667cda3741c5c42/libcpp%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfig.in?ref=a6c764d02ec7716720ceac34b667cda3741c5c42", "patch": "@@ -17,9 +17,6 @@\n /* Define to enable system headers canonicalization. */\n #undef ENABLE_CANONICAL_SYSTEM_HEADERS\n \n-/* Define if you want more run-time sanity checks. */\n-#undef ENABLE_CHECKING\n-\n /* Define to 1 if translation of program messages to the user's native\n    language is requested. */\n #undef ENABLE_NLS"}, {"sha": "0342f163c9cbccab28dbbf9efaf0c4beed241e47", "filename": "libcpp/configure", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c764d02ec7716720ceac34b667cda3741c5c42/libcpp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c764d02ec7716720ceac34b667cda3741c5c42/libcpp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure?ref=a6c764d02ec7716720ceac34b667cda3741c5c42", "patch": "@@ -7298,9 +7298,7 @@ IFS=\"$ac_save_IFS\"\n \n if test x$ac_checking != x ; then\n \n-$as_echo \"#define ENABLE_CHECKING 1\" >>confdefs.h\n-\n-  $as_echo \"#define CHECKING_P 1\" >>confdefs.h\n+$as_echo \"#define CHECKING_P 1\" >>confdefs.h\n \n else\n   $as_echo \"#define CHECKING_P 0\" >>confdefs.h"}, {"sha": "0005c589fcda623bc0fb2ee0be1eaf32e3244208", "filename": "libcpp/configure.ac", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c764d02ec7716720ceac34b667cda3741c5c42/libcpp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c764d02ec7716720ceac34b667cda3741c5c42/libcpp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure.ac?ref=a6c764d02ec7716720ceac34b667cda3741c5c42", "patch": "@@ -164,8 +164,6 @@ done\n IFS=\"$ac_save_IFS\"\n                 \n if test x$ac_checking != x ; then\n-  AC_DEFINE(ENABLE_CHECKING, 1,\n-[Define if you want more run-time sanity checks.])\n   AC_DEFINE(CHECKING_P, 1,\n [Define to 1 if you want more run-time sanity checks.])\n else"}]}