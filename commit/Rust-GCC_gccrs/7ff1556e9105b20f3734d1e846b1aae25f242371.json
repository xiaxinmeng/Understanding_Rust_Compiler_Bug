{"sha": "7ff1556e9105b20f3734d1e846b1aae25f242371", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZmMTU1NmU5MTA1YjIwZjM3MzRkMWU4NDZiMWFhZTI1ZjI0MjM3MQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-12-29T17:41:26Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-12-29T17:41:26Z"}, "message": "Remove superfluous blank lines\n\nFrom-SVN: r194753", "tree": {"sha": "f329d7055044dfbbbdbf7c25eb2dfd06b93ae6ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f329d7055044dfbbbdbf7c25eb2dfd06b93ae6ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ff1556e9105b20f3734d1e846b1aae25f242371", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ff1556e9105b20f3734d1e846b1aae25f242371", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ff1556e9105b20f3734d1e846b1aae25f242371", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ff1556e9105b20f3734d1e846b1aae25f242371/comments", "author": null, "committer": null, "parents": [{"sha": "4e70f25ffe90ceb16c9384c915dc8bb012e1ac62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e70f25ffe90ceb16c9384c915dc8bb012e1ac62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e70f25ffe90ceb16c9384c915dc8bb012e1ac62"}], "stats": {"total": 38, "additions": 1, "deletions": 37}, "files": [{"sha": "ae21e02ff38a235a8a0247ee3659a3198113435b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1, "deletions": 37, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ff1556e9105b20f3734d1e846b1aae25f242371/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ff1556e9105b20f3734d1e846b1aae25f242371/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7ff1556e9105b20f3734d1e846b1aae25f242371", "patch": "@@ -12875,18 +12875,14 @@\n 2012-08-22  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* doc/invoke.texi: Document -mlong-double-64/-mlong-double-80.\n-\n \t* config/i386/i386.c (flag_opts): Add -mlong-double-64.\n \t(TARGET_HAS_BIONIC): Default long double to 64-bit for Bionic.\n-\n \t* config/i386/i386.h (LONG_DOUBLE_TYPE_SIZE): Use 64 if\n \tTARGET_LONG_DOUBLE_64 is true.\n \t(LIBGCC2_LONG_DOUBLE_TYPE_SIZE): New macro.\n \t(WIDEST_HARDWARE_FP_SIZE): Defined to 80.\n-\n \t* config/i386/i386.opt (mlong-double-80): New option.\n \t(mlong-double-64): Likewise.\n-\n \t* config/i386/i386-c.c (ix86_target_macros): Define\n \t__LONG_DOUBLE_64__ for TARGET_LONG_DOUBLE_64.\n \n@@ -13298,7 +13294,6 @@\n \tPR target/20020\n \t* config/i386/i386.c (ix86_member_type_forces_blk): New function.\n \t(TARGET_MEMBER_TYPE_FORCES_BLK): New macro.\n-\n \t* config/i386/i386.h (MAX_FIXED_MODE_SIZE): New macro.\n \n 2012-08-17  Marc Glisse  <marc.glisse@inria.fr>\n@@ -13311,31 +13306,21 @@\n \t* stor-layout.c (compute_record_mode): Replace\n \tMEMBER_TYPE_FORCES_BLK with targetm.member_type_forces_blk.\n \t(layout_type): Likewise.\n-\n \t* system.h: Poison MEMBER_TYPE_FORCES_BLK.\n-\n \t* target.def (member_type_forces_blk): New target hook.\n-\n \t* targhooks.c (default_member_type_forces_blk): New.\n \t* targhooks.h (default_member_type_forces_blk): Likewise.\n-\n \t* doc/tm.texi.in (MEMBER_TYPE_FORCES_BLK): Removed.\n \t(TARGET_MEMBER_TYPE_FORCES_BLK): New hook.\n \t* doc/tm.texi: Regenerated.\n-\n \t* config/ia64/hpux.h (MEMBER_TYPE_FORCES_BLK): Removed.\n-\n \t* config/ia64/ia64.c (ia64_member_type_forces_blk): New function.\n \t(TARGET_MEMBER_TYPE_FORCES_BLK): New macro.\n-\n \t* config/rs6000/rs6000.c (TARGET_MEMBER_TYPE_FORCES_BLK): New macro.\n \t(rs6000_member_type_forces_blk): New function.\n-\n \t* config/rs6000/rs6000.h (MEMBER_TYPE_FORCES_BLK): Removed.\n-\n \t* config/xtensa/xtensa.c (xtensa_member_type_forces_blk): New function.\n \t(TARGET_MEMBER_TYPE_FORCES_BLK): New macro.\n-\n \t* config/xtensa/xtensa.h (MEMBER_TYPE_FORCES_BLK): Removed.\n \n 2012-08-17  Diego Novillo  <dnovillo@google.com>\n@@ -16012,20 +15997,15 @@\n \tPR middle-end/53865\n \t* ipa-inline-analysis.c (inline_free_summary): Return if\n \tinline_edge_summary_vec is NULL.\n-\n \t* ipa-split.c (execute_split_functions): Check if a function\n \tis inlinable only if inline_edge_summary_vec != NULL.\n-\n \t* ipa.c (symtab_remove_unreachable_nodes): Restore\n \tcgraph_propagate_frequency call when something was changed.\n \t(free_inline_summary): New function.\n \t(pass_ipa_free_inline_summary): New pass.\n-\n \t* passes.c (init_optimization_passes): Add\n \tpass_ipa_free_inline_summary before pass_ipa_tree_profile.\n-\n \t* timevar.def (TV_IPA_FREE_INLINE_SUMMARY): New.\n-\n \t* tree-pass.h (pass_ipa_free_inline_summary): New.\n \n 2012-08-02  Richard Earnshaw  <rearnsha@arm.com>\n@@ -20901,10 +20881,8 @@\n \n \tPR target/53383\n \t* doc/invoke.texi: Add a warning for -mpreferred-stack-boundary=3.\n-\n \t* config/i386/i386.c (ix86_option_override_internal): Allow\n \t-mpreferred-stack-boundary=3 for 64-bit if SSE is disabled.\n-\n \t* config/i386/i386.h (MIN_STACK_BOUNDARY): Set to 64 for 64-bit\n \tif SSE is disabled.\n \n@@ -22497,7 +22475,7 @@\n 2012-06-04  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR bootstrap/53555\n-\t* config/i386/i386.c (ix86_sched_reorder) Skip debug insns.\n+\t* config/i386/i386.c (ix86_sched_reorder): Skip debug insns.\n \n 2012-06-04  Jason Merrill  <jason@redhat.com>\n \n@@ -28788,7 +28766,6 @@\n \tPR rtl-optimization/52876\n \t* emit-rtl.c (set_reg_attrs_from_value): Handle arbitrary value.\n \tDon't call mark_reg_pointer for incompatible pointer sign extension.\n-\n \t* reginfo.c (reg_scan_mark_refs): Call set_reg_attrs_from_value\n \tdirectly.\n \n@@ -29637,21 +29614,17 @@\n \n \t* config/i386/biarch64.h (TARGET_64BIT_DEFAULT): Add\n \tOPTION_MASK_ABI_64.\n-\n \t* config/i386/gnu-user64.h (SPEC_64): Support TARGET_BI_ARCH == 2.\n \t(SPEC_X32): Likewise.\n \t(MULTILIB_DEFAULTS): Likewise.\n-\n \t* config/i386/i386.c (isa_opts): Remove -m64.\n \t(ix86_target_string): Properly handle -m32/-m64/-mx32.\n \t(ix86_option_override_internal): Properly\n \tset OPTION_MASK_ISA_64BIT and OPTION_MASK_ISA_X32 as well as\n \thandle -m32, -m64 and -mx32.\n-\n \t* config/i386/i386.h (TARGET_X32): Replace OPTION_ISA_X32\n \twith OPTION_ABI_X32.  Moved after TARGET_LP64.\n \t(TARGET_LP64): Changed to OPTION_ABI_64.\n-\n \t* config/i386/i386.opt (m64): Replace ISA_64BIT with ABI_64.\n \t(mx32): Replace ISA_X32 with ABI_X32.\n \n@@ -30349,7 +30322,6 @@\n \tif Pmode != word_mode.\n \t(legitimize_tls_address): Call gen_tls_initial_exec_x32 if\n \tPmode == SImode for TARGET_X32.\n-\n \t* config/i386/i386.md (UNSPEC_TLS_IE_X32): New.\n \t(tls_initial_exec_x32): Likewise.\n \n@@ -30656,14 +30628,10 @@\n \n \tPR target/50797\n \t* config/i386/i386-opts.h (pmode): New.\n-\n \t* config/i386/i386.c (ix86_option_override_internal): Properly\n \tcheck and set ix86_pmode.\n-\n \t* config/i386/i386.h (Pmode): Check ix86_pmode instead of TARGET_64BIT.\n-\n \t* config/i386/i386.opt (maddress-mode=): New.\n-\n \t* doc/invoke.texi: Document -maddress-mode=short|long for x86.\n \n 2012-03-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n@@ -31038,7 +31006,6 @@\n \tand ix86_gen_tls_local_dynamic_base_64.\n \t(legitimize_tls_address): Use ix86_gen_tls_global_dynamic_64 and\n \tix86_gen_tls_local_dynamic_base_64.\n-\n \t* config/i386/i386.md (*tls_global_dynamic_64): Renamed to ...\n \t(*tls_global_dynamic_64_<mode>): This.\n \t(tls_global_dynamic_64): Renamed to ...\n@@ -31055,7 +31022,6 @@\n \tinstead of TARGET_64BIT, to set ix86_gen_add3, ix86_gen_sub3,\n \tix86_gen_one_cmpl2, ix86_gen_andsp, ix86_gen_allocate_stack_worker,\n \tix86_gen_adjust_stack_and_probe and ix86_gen_probe_stack_range.\n-\n \t* config/i386/sse.md (sse3_monitor64): Renamed to ...\n \t(sse3_monitor64_<mode>): This.\n \n@@ -31320,7 +31286,6 @@\n \tif Pmode != word_mode.\n \t(legitimize_tls_address): Call gen_tls_initial_exec_x32 if\n \tPmode == SImode for TARGET_X32.\n-\n \t* config/i386/i386.md (UNSPEC_TLS_IE_X32): New.\n \t(tls_initial_exec_x32): Likewise.\n \n@@ -31446,7 +31411,6 @@\n \tword_mode.\n \t(ix86_split_to_parts): Use word_mode with PUT_MODE for push.\n \t(ix86_split_long_move): Likewise.\n-\n \t* config/i386/i386.md (W): New.\n \t(*push<mode>2_prologue): Replace :P with :W.\n \t(*pop<mode>1): Likewise."}]}