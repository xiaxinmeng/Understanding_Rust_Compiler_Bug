{"sha": "0f8754352485c6aaa6a6b85ce252585ae1eb31d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY4NzU0MzUyNDg1YzZhYWE2YTZiODVjZTI1MjU4NWFlMWViMzFkNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-04-01T15:27:11Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-04-01T15:27:11Z"}, "message": "re PR c++/70488 (ICE in tree.c:7345 triggered by warning of placement new too small on VLA)\n\n\tPR c++/70488\n\t* init.c (warn_placement_new_too_small): Test whether\n\tDECL_SIZE_UNIT or TYPE_SIZE_UNIT are integers that fit into uhwi.\n\n\t* g++.dg/init/new47.C: New test.\n\nCo-Authored-By: Marek Polacek <polacek@redhat.com>\n\nFrom-SVN: r234676", "tree": {"sha": "c676f74751d79ea607d57b64284bf39211f533b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c676f74751d79ea607d57b64284bf39211f533b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f8754352485c6aaa6a6b85ce252585ae1eb31d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f8754352485c6aaa6a6b85ce252585ae1eb31d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f8754352485c6aaa6a6b85ce252585ae1eb31d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f8754352485c6aaa6a6b85ce252585ae1eb31d7/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "41d146597caea6d5cab6def07a8b127de7b2099c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41d146597caea6d5cab6def07a8b127de7b2099c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41d146597caea6d5cab6def07a8b127de7b2099c"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "24528300fce5545ee886e2fd96743576501f7bb4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8754352485c6aaa6a6b85ce252585ae1eb31d7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8754352485c6aaa6a6b85ce252585ae1eb31d7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0f8754352485c6aaa6a6b85ce252585ae1eb31d7", "patch": "@@ -1,3 +1,10 @@\n+2016-04-01  Jakub Jelinek  <jakub@redhat.com>\n+\t    Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/70488\n+\t* init.c (warn_placement_new_too_small): Test whether\n+\tDECL_SIZE_UNIT or TYPE_SIZE_UNIT are integers that fit into uhwi.\n+\n 2016-04-01  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/68475"}, {"sha": "5997d53ddb5503dd727c09f52026289f4b7f3772", "filename": "gcc/cp/init.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8754352485c6aaa6a6b85ce252585ae1eb31d7/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8754352485c6aaa6a6b85ce252585ae1eb31d7/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=0f8754352485c6aaa6a6b85ce252585ae1eb31d7", "patch": "@@ -2430,15 +2430,17 @@ warn_placement_new_too_small (tree type, tree nelts, tree size, tree oper)\n \t though the size of a member of a union may be viewed as extending\n \t to the end of the union itself (it is by __builtin_object_size).  */\n       if ((TREE_CODE (oper) == VAR_DECL || use_obj_size)\n-\t  && DECL_SIZE_UNIT (oper))\n+\t  && DECL_SIZE_UNIT (oper)\n+\t  && tree_fits_uhwi_p (DECL_SIZE_UNIT (oper)))\n \t{\n \t  /* Use the size of the entire array object when the expression\n \t     refers to a variable or its size depends on an expression\n \t     that's not a compile-time constant.  */\n \t  bytes_avail = tree_to_uhwi (DECL_SIZE_UNIT (oper));\n \t  exact_size = !use_obj_size;\n \t}\n-      else if (TYPE_SIZE_UNIT (TREE_TYPE (oper)))\n+      else if (TYPE_SIZE_UNIT (TREE_TYPE (oper))\n+\t       && tree_fits_uhwi_p (TYPE_SIZE_UNIT (TREE_TYPE (oper))))\n \t{\n \t  /* Use the size of the type of the destination buffer object\n \t     as the optimistic estimate of the available space in it.  */"}, {"sha": "a4a1df51afcfe123091ee652a82d6a70485b2860", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8754352485c6aaa6a6b85ce252585ae1eb31d7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8754352485c6aaa6a6b85ce252585ae1eb31d7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0f8754352485c6aaa6a6b85ce252585ae1eb31d7", "patch": "@@ -1,3 +1,9 @@\n+2016-04-01  Jakub Jelinek  <jakub@redhat.com>\n+\t    Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/70488\n+\t* g++.dg/init/new47.C: New test.\n+\n 2016-04-01  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n \tPR target/70496"}, {"sha": "acd52d7993bf193a53600a83525354cf2253a534", "filename": "gcc/testsuite/g++.dg/init/new47.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8754352485c6aaa6a6b85ce252585ae1eb31d7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew47.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8754352485c6aaa6a6b85ce252585ae1eb31d7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew47.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew47.C?ref=0f8754352485c6aaa6a6b85ce252585ae1eb31d7", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/70448\n+// { dg-do compile }\n+// { dg-options \"-Wall\" }\n+\n+typedef __typeof__ (sizeof 0) size_t;\n+void *operator new (size_t, void *p) { return p; }\n+void *operator new[] (size_t, void *p) { return p; }\n+struct S { size_t s; };\n+void bar (S *);\n+\n+void\n+foo (unsigned int s)\n+{\n+  char t[sizeof (S) + s];\n+  S *f = new (t) S;\n+  bar (f);\n+  f = new (t) S[1];\n+  bar (f);\n+}"}]}