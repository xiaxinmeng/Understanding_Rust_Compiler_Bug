{"sha": "cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZjYTNmNzI2NzQxY2JiYTZlNjkwNmFmZWFjOWRkYzRjNDY2ZmIzZg==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "francois.cppdevs@free.fr", "date": "2011-05-11T19:29:02Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2011-05-11T19:29:02Z"}, "message": "hash_load_check_resize_trigger_imp.hpp (assert_valid): Replace _GLIBCXX_DEBUG_ASSERT calls with PB_DS_DEBUG_VERIFY.\n\n2011-05-11  Fran\u00e7ois Dumont  <francois.cppdevs@free.fr>\n\n        * include/ext/pb_ds/detail/resize_policy/\n        hash_load_check_resize_trigger_imp.hpp (assert_valid): Replace\n        _GLIBCXX_DEBUG_ASSERT calls with PB_DS_DEBUG_VERIFY.\n        * include/ext/pb_ds/detail/binomial_heap_base_/erase_fn_imps.hpp,\n        find_fn_imps.hpp, insert_fn_imps.hpp, binomial_heap_base_.hpp,\n        constructors_destructor_fn_imps.hpp, split_join_fn_imps.hpp\n        (PB_DS_ASSERT_VALID): Rename in PB_DS_ASSERT_VALID_COND.\n        * include/ext/pb_ds/detail/debug_map_base.hpp,\n        splay_tree_/splay_tree_.hpp, ov_tree_map_/ov_tree_map_.hpp,\n        cc_hash_table_map_/cc_ht_map_.hpp, pat_trie_/pat_trie_.hpp,\n        leaf.hpp, internal_node.hpp, gp_hash_table_map_/gp_ht_map_.hpp,\n        bin_search_tree_/bin_search_tree_.hpp, list_update_map_/lu_map_.hpp,\n        rb_tree_map_/rb_tree_.hpp (PB_DS_ASSERT_VALID, PB_DS_DEBUG_VERIFY,\n        PB_DS_CHECK_KEY_EXISTS, PB_DS_CHECK_KEY_DOES_NOT_EXIST): Duplicate\n        macro definitions move...\n        * include/ext/pb_ds/detail/container_base_dispatch.hpp: ... here...\n        * include/ext/pb_ds/detail/basic_tree_policy/traits.hpp: ... and here.\n        * include/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp,\n        resize_policy.hpp, pairing_heap_/pairing_heap_.hpp,\n        left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp,\n        binomial_heap_/binomial_heap_.hpp, thin_heap_/thin_heap_.hpp,\n        rc_binomial_heap_/rc_binomial_heap_.hpp, rc.hpp (PB_DS_ASSERT_VALID,\n        PB_DS_DEBUG_VERIFY): Duplicate macro definitions move...\n        * include/ext/pb_ds/detail/priority_queue_base_dispatch.hpp:\n        ...here.\n\nFrom-SVN: r173670", "tree": {"sha": "f31bee04d95780846a1323e56fc0d1cd0be163ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f31bee04d95780846a1323e56fc0d1cd0be163ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/comments", "author": null, "committer": null, "parents": [{"sha": "6e91d9d6b38748b6b80fe28eae442f0307dfd4da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e91d9d6b38748b6b80fe28eae442f0307dfd4da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e91d9d6b38748b6b80fe28eae442f0307dfd4da"}], "stats": {"total": 402, "additions": 108, "deletions": 294}, "files": [{"sha": "661fed45dad7c84227167ad5fd334534e54fa2ad", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -1,3 +1,31 @@\n+2011-05-11  Fran\u00e7ois Dumont  <francois.cppdevs@free.fr>\n+\n+\t* include/ext/pb_ds/detail/resize_policy/\n+\thash_load_check_resize_trigger_imp.hpp (assert_valid): Replace\n+\t_GLIBCXX_DEBUG_ASSERT calls with PB_DS_DEBUG_VERIFY.\n+\t* include/ext/pb_ds/detail/binomial_heap_base_/erase_fn_imps.hpp,\n+\tfind_fn_imps.hpp, insert_fn_imps.hpp, binomial_heap_base_.hpp,\n+\tconstructors_destructor_fn_imps.hpp, split_join_fn_imps.hpp\n+\t(PB_DS_ASSERT_VALID): Rename in PB_DS_ASSERT_VALID_COND.\n+\t* include/ext/pb_ds/detail/debug_map_base.hpp,\n+\tsplay_tree_/splay_tree_.hpp, ov_tree_map_/ov_tree_map_.hpp,\n+\tcc_hash_table_map_/cc_ht_map_.hpp, pat_trie_/pat_trie_.hpp,\n+\tleaf.hpp, internal_node.hpp, gp_hash_table_map_/gp_ht_map_.hpp,\n+\tbin_search_tree_/bin_search_tree_.hpp, list_update_map_/lu_map_.hpp,\n+\trb_tree_map_/rb_tree_.hpp (PB_DS_ASSERT_VALID, PB_DS_DEBUG_VERIFY,\n+\tPB_DS_CHECK_KEY_EXISTS,\tPB_DS_CHECK_KEY_DOES_NOT_EXIST): Duplicate\n+\tmacro definitions move...\n+\t* include/ext/pb_ds/detail/container_base_dispatch.hpp: ... here...\n+\t* include/ext/pb_ds/detail/basic_tree_policy/traits.hpp: ... and here.\n+\t* include/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp,\n+\tresize_policy.hpp, pairing_heap_/pairing_heap_.hpp,\n+\tleft_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp,\n+\tbinomial_heap_/binomial_heap_.hpp, thin_heap_/thin_heap_.hpp,\n+\trc_binomial_heap_/rc_binomial_heap_.hpp, rc.hpp (PB_DS_ASSERT_VALID,\n+\tPB_DS_DEBUG_VERIFY): Duplicate macro definitions move...\n+\t* include/ext/pb_ds/detail/priority_queue_base_dispatch.hpp:\n+\t...here.\n+\n 2011-05-09  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/48933"}, {"sha": "d245127c875c1d6e6ba41aea14bff00e5c4fa770", "filename": "libstdc++-v3/include/ext/pb_ds/detail/basic_tree_policy/traits.hpp", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbasic_tree_policy%2Ftraits.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbasic_tree_policy%2Ftraits.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbasic_tree_policy%2Ftraits.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -41,6 +41,12 @@\n #ifndef PB_DS_NODE_AND_IT_TRAITS_HPP\n #define PB_DS_NODE_AND_IT_TRAITS_HPP\n \n+#define PB_DS_DEBUG_VERIFY(_Cond)\t\t\t\t\t\\\n+  _GLIBCXX_DEBUG_VERIFY_AT(_Cond,\t\t\t\t\t\\\n+\t\t\t   _M_message(#_Cond\" assertion from %1;:%2;\")\t\\\n+\t\t\t   ._M_string(__FILE__)._M_integer(__LINE__)\t\\\n+\t\t\t   ,__file,__line)\n+\n #include <ext/pb_ds/detail/types_traits.hpp>\n #include <ext/pb_ds/detail/bin_search_tree_/traits.hpp>\n #include <ext/pb_ds/detail/tree_policy/node_metadata_selector.hpp>\n@@ -81,5 +87,6 @@ namespace __gnu_pbds\n #include <ext/pb_ds/detail/splay_tree_/traits.hpp>\n #include <ext/pb_ds/detail/ov_tree_map_/traits.hpp>\n #include <ext/pb_ds/detail/pat_trie_/traits.hpp>\n+#undef PB_DS_DEBUG_VERIFY\n \n #endif // #ifndef PB_DS_NODE_AND_IT_TRAITS_HPP"}, {"sha": "a73414a0fcc59cce9d6c79d2ece6dacdb1abbe1b", "filename": "libstdc++-v3/include/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbin_search_tree_%2Fbin_search_tree_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbin_search_tree_%2Fbin_search_tree_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbin_search_tree_%2Fbin_search_tree_.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -471,28 +471,12 @@ namespace __gnu_pbds\n       static node_allocator s_node_allocator;\n     };\n \n-#define PB_DS_ASSERT_VALID(X)\t\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_ONLY(X.assert_valid(__FILE__, __LINE__);)\n-\n #define PB_DS_STRUCT_ONLY_ASSERT_VALID(X)\t\t\t\t\\\n   _GLIBCXX_DEBUG_ONLY(X.structure_only_assert_valid(__FILE__, __LINE__);)\n \n #define PB_DS_ASSERT_NODE_CONSISTENT(_Node)\t\t\t\t\\\n   _GLIBCXX_DEBUG_ONLY(assert_node_consistent(_Node, __FILE__, __LINE__);)\n \n-#define PB_DS_CHECK_KEY_EXISTS(_Key)\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_ONLY(debug_base::check_key_exists(_Key, __FILE__, __LINE__);)\n-\n-#define PB_DS_CHECK_KEY_DOES_NOT_EXIST(_Key)\t\t\t\t\\\n-  _GLIBCXX_DEBUG_ONLY(debug_base::check_key_does_not_exist(_Key,\t\\\n-\t\t\t\t\t\t\t   __FILE__, __LINE__);)\n-\n-#define PB_DS_DEBUG_VERIFY(_Cond)\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_VERIFY_AT(_Cond,\t\t\t\t\t\\\n-\t\t\t   _M_message(#_Cond\" assertion from %1;:%2;\")\t\\\n-\t\t\t   ._M_string(__FILE__)._M_integer(__LINE__)\t\\\n-\t\t\t   ,__file,__line)\n-\n #include <ext/pb_ds/detail/bin_search_tree_/constructors_destructor_fn_imps.hpp>\n #include <ext/pb_ds/detail/bin_search_tree_/iterators_fn_imps.hpp>\n #include <ext/pb_ds/detail/bin_search_tree_/debug_fn_imps.hpp>\n@@ -504,12 +488,8 @@ namespace __gnu_pbds\n #include <ext/pb_ds/detail/bin_search_tree_/rotate_fn_imps.hpp>\n #include <ext/pb_ds/detail/bin_search_tree_/policy_access_fn_imps.hpp>\n \n-#undef PB_DS_DEBUG_VERIFY\n-#undef PB_DS_CHECK_KEY_DOES_NOT_EXIST\n-#undef PB_DS_CHECK_KEY_EXISTS\n #undef PB_DS_ASSERT_NODE_CONSISTENT\n #undef PB_DS_STRUCT_ONLY_ASSERT_VALID\n-#undef PB_DS_ASSERT_VALID\n #undef PB_DS_CLASS_C_DEC\n #undef PB_DS_CLASS_T_DEC\n #undef PB_DS_CLASS_NAME"}, {"sha": "4d65d2b6826c5662d9075a3ac481484ef7e49353", "filename": "libstdc++-v3/include/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fbinary_heap_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fbinary_heap_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fbinary_heap_.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -335,15 +335,6 @@ namespace __gnu_pbds\n       entry_pointer m_a_entries;\n     };\n \n-#define PB_DS_ASSERT_VALID(X) \\\n-  _GLIBCXX_DEBUG_ONLY(X.assert_valid(__FILE__, __LINE__);)\n-\n-#define PB_DS_DEBUG_VERIFY(_Cond)\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_VERIFY_AT(_Cond,\t\t\t\t\t\\\n-\t\t\t   _M_message(#_Cond\" assertion from %1;:%2;\")\t\\\n-\t\t\t   ._M_string(__FILE__)._M_integer(__LINE__)\t\\\n-\t\t\t   ,__file,__line)\n-\n #include <ext/pb_ds/detail/binary_heap_/insert_fn_imps.hpp>\n #include <ext/pb_ds/detail/binary_heap_/constructors_destructor_fn_imps.hpp>\n #include <ext/pb_ds/detail/binary_heap_/iterators_fn_imps.hpp>\n@@ -355,8 +346,6 @@ namespace __gnu_pbds\n #include <ext/pb_ds/detail/binary_heap_/split_join_fn_imps.hpp>\n #include <ext/pb_ds/detail/binary_heap_/policy_access_fn_imps.hpp>\n \n-#undef PB_DS_DEBUG_VERIFY\n-#undef PB_DS_ASSERT_VALID\n #undef PB_DS_CLASS_C_DEC\n #undef PB_DS_CLASS_T_DEC\n #undef PB_DS_ENTRY_CMP_DEC"}, {"sha": "c5893872e5c54697722138c8b121fd0b5eb49cb8", "filename": "libstdc++-v3/include/ext/pb_ds/detail/binary_heap_/resize_policy.hpp", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fresize_policy.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fresize_policy.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fresize_policy.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -52,15 +52,6 @@ namespace __gnu_pbds\n \n #define PB_DS_CLASS_C_DEC resize_policy<Size_Type>\n \n-#define PB_DS_ASSERT_VALID(X)\\\n-  _GLIBCXX_DEBUG_ONLY(X.assert_valid(__FILE__, __LINE__);)\n-\n-#define PB_DS_DEBUG_VERIFY(_Cond)\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_VERIFY_AT(_Cond,\t\t\t\t\t\\\n-\t\t\t   _M_message(#_Cond\" assertion from %1;:%2;\")\t\\\n-\t\t\t   ._M_string(__FILE__)._M_integer(__LINE__)\t\\\n-\t\t\t   ,__file,__line)\n-\n     template<typename Size_Type>\n     class resize_policy\n     {\n@@ -253,8 +244,6 @@ namespace __gnu_pbds\n     }\n #endif \n \n-#undef PB_DS_DEBUG_VERIFY\n-#undef PB_DS_ASSERT_VALID\n #undef PB_DS_CLASS_T_DEC\n #undef PB_DS_CLASS_C_DEC\n "}, {"sha": "a6d6098fd37c7e1ee45a9146589dff6da85f6b33", "filename": "libstdc++-v3/include/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_%2Fbinomial_heap_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_%2Fbinomial_heap_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_%2Fbinomial_heap_.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -104,13 +104,9 @@ namespace __gnu_pbds\n #endif \n     };\n \n-#define PB_DS_ASSERT_VALID(X)\t\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_ONLY(X.assert_valid(__FILE__, __LINE__);)\n-\n #include <ext/pb_ds/detail/binomial_heap_/constructors_destructor_fn_imps.hpp>\n #include <ext/pb_ds/detail/binomial_heap_/debug_fn_imps.hpp>\n \n-#undef PB_DS_ASSERT_VALID\n #undef PB_DS_CLASS_C_DEC\n \n #undef PB_DS_CLASS_T_DEC"}, {"sha": "b2add18e7a0475142ac1c72ea62964020f0658af", "filename": "libstdc++-v3/include/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_base_%2Fbinomial_heap_base_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_base_%2Fbinomial_heap_base_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_base_%2Fbinomial_heap_base_.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -217,29 +217,22 @@ namespace __gnu_pbds\n       node_pointer m_p_max;\n     };\n \n-#define PB_DS_ASSERT_VALID(X, _StrictlyBinomial)\t\t\t\\\n+#define PB_DS_ASSERT_VALID_COND(X, _StrictlyBinomial)\t\t\t\\\n   _GLIBCXX_DEBUG_ONLY(X.assert_valid(_StrictlyBinomial,__FILE__, __LINE__);)\n \n #define PB_DS_ASSERT_BASE_NODE_CONSISTENT(_Node, _Bool)\t\t\t\\\n   _GLIBCXX_DEBUG_ONLY(base_type::assert_node_consistent(_Node, _Bool,\t\\\n \t\t\t\t\t\t\t__FILE__, __LINE__);)\n \n-#define PB_DS_DEBUG_VERIFY(_Cond)\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_VERIFY_AT(_Cond,\t\t\t\t\t\\\n-\t\t\t   _M_message(#_Cond\" assertion from %1;:%2;\")\t\\\n-\t\t\t   ._M_string(__FILE__)._M_integer(__LINE__)\t\\\n-\t\t\t   ,__file,__line)\n-\n #include <ext/pb_ds/detail/binomial_heap_base_/constructors_destructor_fn_imps.hpp>\n #include <ext/pb_ds/detail/binomial_heap_base_/debug_fn_imps.hpp>\n #include <ext/pb_ds/detail/binomial_heap_base_/find_fn_imps.hpp>\n #include <ext/pb_ds/detail/binomial_heap_base_/insert_fn_imps.hpp>\n #include <ext/pb_ds/detail/binomial_heap_base_/erase_fn_imps.hpp>\n #include <ext/pb_ds/detail/binomial_heap_base_/split_join_fn_imps.hpp>\n \n-#undef PB_DS_DEBUG_VERIFY\n #undef PB_DS_ASSERT_BASE_NODE_CONSISTENT\n-#undef PB_DS_ASSERT_VALID\n+#undef PB_DS_ASSERT_VALID_COND\n #undef PB_DS_CLASS_C_DEC\n #undef PB_DS_CLASS_T_DEC\n #undef PB_DS_BASE_C_DEC"}, {"sha": "fa86c230cd2da1a11f8827b8e856e95b6eb4fb2a", "filename": "libstdc++-v3/include/ext/pb_ds/detail/binomial_heap_base_/constructors_destructor_fn_imps.hpp", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_base_%2Fconstructors_destructor_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_base_%2Fconstructors_destructor_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_base_%2Fconstructors_destructor_fn_imps.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -47,15 +47,15 @@ copy_from_range(It first_it, It last_it)\n   while (first_it != last_it)\n     push(*(first_it++));\n \n-  PB_DS_ASSERT_VALID((*this),false)\n+  PB_DS_ASSERT_VALID_COND((*this),false)\n }\n \n PB_DS_CLASS_T_DEC\n PB_DS_CLASS_C_DEC::\n binomial_heap_base_() :\n   m_p_max(0)\n {\n-  PB_DS_ASSERT_VALID((*this),false)\n+  PB_DS_ASSERT_VALID_COND((*this),false)\n }\n \n PB_DS_CLASS_T_DEC\n@@ -64,7 +64,7 @@ binomial_heap_base_(const Cmp_Fn& r_cmp_fn) :\n   PB_DS_BASE_C_DEC(r_cmp_fn),\n   m_p_max(0)\n {\n-  PB_DS_ASSERT_VALID((*this),false)\n+  PB_DS_ASSERT_VALID_COND((*this),false)\n }\n \n PB_DS_CLASS_T_DEC\n@@ -73,21 +73,21 @@ binomial_heap_base_(const PB_DS_CLASS_C_DEC& other) :\n   PB_DS_BASE_C_DEC(other),\n   m_p_max(0)\n {\n-  PB_DS_ASSERT_VALID((*this),false)\n+  PB_DS_ASSERT_VALID_COND((*this),false)\n }\n \n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n swap(PB_DS_CLASS_C_DEC& other)\n {\n-  PB_DS_ASSERT_VALID((*this),false)\n+  PB_DS_ASSERT_VALID_COND((*this),false)\n \n   base_type::swap(other);\n \n   std::swap(m_p_max, other.m_p_max);\n \n-  PB_DS_ASSERT_VALID((*this),false)\n+  PB_DS_ASSERT_VALID_COND((*this),false)\n }\n \n PB_DS_CLASS_T_DEC"}, {"sha": "e7a2dc4f6fdc46b8343a16cfac6c0fb1c25d6808", "filename": "libstdc++-v3/include/ext/pb_ds/detail/binomial_heap_base_/erase_fn_imps.hpp", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_base_%2Ferase_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_base_%2Ferase_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_base_%2Ferase_fn_imps.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -43,7 +43,7 @@ void\n PB_DS_CLASS_C_DEC::\n pop()\n {\n-  PB_DS_ASSERT_VALID((*this),true)\n+  PB_DS_ASSERT_VALID_COND((*this),true)\n   _GLIBCXX_DEBUG_ASSERT(!base_type::empty());\n \n   if (m_p_max == 0)\n@@ -59,7 +59,7 @@ pop()\n \n   m_p_max = 0;\n \n-  PB_DS_ASSERT_VALID((*this),true)\n+  PB_DS_ASSERT_VALID_COND((*this),true)\n }\n \n PB_DS_CLASS_T_DEC\n@@ -113,7 +113,7 @@ void\n PB_DS_CLASS_C_DEC::\n erase(point_iterator it)\n {\n-  PB_DS_ASSERT_VALID((*this),true)\n+  PB_DS_ASSERT_VALID_COND((*this),true)\n   _GLIBCXX_DEBUG_ASSERT(!base_type::empty());\n \n   base_type::bubble_to_top(it.m_p_nd);\n@@ -124,7 +124,7 @@ erase(point_iterator it)\n \n   m_p_max = 0;\n \n-  PB_DS_ASSERT_VALID((*this),true)\n+  PB_DS_ASSERT_VALID_COND((*this),true)\n }\n \n PB_DS_CLASS_T_DEC\n@@ -133,11 +133,11 @@ typename PB_DS_CLASS_C_DEC::size_type\n PB_DS_CLASS_C_DEC::\n erase_if(Pred pred)\n {\n-  PB_DS_ASSERT_VALID((*this),true)\n+  PB_DS_ASSERT_VALID_COND((*this),true)\n \n   if (base_type::empty())\n     {\n-      PB_DS_ASSERT_VALID((*this),true)\n+      PB_DS_ASSERT_VALID_COND((*this),true)\n \n       return 0;\n     }\n@@ -185,7 +185,7 @@ erase_if(Pred pred)\n \n   m_p_max = 0;\n \n-  PB_DS_ASSERT_VALID((*this),true)\n+  PB_DS_ASSERT_VALID_COND((*this),true)\n \n   return ersd;\n }"}, {"sha": "f832cb60c7d9fe3f5cb7a1eaf9f854f4cef33baf", "filename": "libstdc++-v3/include/ext/pb_ds/detail/binomial_heap_base_/find_fn_imps.hpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_base_%2Ffind_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_base_%2Ffind_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_base_%2Ffind_fn_imps.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -43,7 +43,7 @@ inline typename PB_DS_CLASS_C_DEC::const_reference\n PB_DS_CLASS_C_DEC::\n top() const\n {\n-  PB_DS_ASSERT_VALID((*this),false)\n+  PB_DS_ASSERT_VALID_COND((*this),false)\n   _GLIBCXX_DEBUG_ASSERT(!base_type::empty());\n \n   if (m_p_max == 0)"}, {"sha": "11bd5e1444f946f4dc2575e01c3ee65602843a3a", "filename": "libstdc++-v3/include/ext/pb_ds/detail/binomial_heap_base_/insert_fn_imps.hpp", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_base_%2Finsert_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_base_%2Finsert_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_base_%2Finsert_fn_imps.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -43,15 +43,15 @@ inline typename PB_DS_CLASS_C_DEC::point_iterator\n PB_DS_CLASS_C_DEC::\n push(const_reference r_val)\n {\n-  PB_DS_ASSERT_VALID((*this),true)\n+  PB_DS_ASSERT_VALID_COND((*this),true)\n \n   node_pointer p_nd = base_type::get_new_node_for_insert(r_val);\n \n   insert_node(p_nd);\n \n   m_p_max = 0;\n \n-  PB_DS_ASSERT_VALID((*this),true)\n+  PB_DS_ASSERT_VALID_COND((*this),true)\n \n   return point_iterator(p_nd);\n }\n@@ -171,7 +171,7 @@ void\n PB_DS_CLASS_C_DEC::\n modify(point_iterator it, const_reference r_new_val)\n {\n-  PB_DS_ASSERT_VALID((*this),true)\n+  PB_DS_ASSERT_VALID_COND((*this),true)\n   node_pointer p_nd = it.m_p_nd;\n \n   _GLIBCXX_DEBUG_ASSERT(p_nd != 0);\n@@ -198,7 +198,7 @@ modify(point_iterator it, const_reference r_new_val)\n \n       m_p_max = 0;\n \n-      PB_DS_ASSERT_VALID((*this),true)\n+      PB_DS_ASSERT_VALID_COND((*this),true)\n \n         return;\n     }\n@@ -211,6 +211,6 @@ modify(point_iterator it, const_reference r_new_val)\n \n   m_p_max = 0;\n \n-  PB_DS_ASSERT_VALID((*this),true)\n+  PB_DS_ASSERT_VALID_COND((*this),true)\n }\n "}, {"sha": "6564c54a21ae1d161a479cd5010e5fc6f3a65b6b", "filename": "libstdc++-v3/include/ext/pb_ds/detail/binomial_heap_base_/split_join_fn_imps.hpp", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_base_%2Fsplit_join_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_base_%2Fsplit_join_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinomial_heap_base_%2Fsplit_join_fn_imps.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -44,15 +44,15 @@ void\n PB_DS_CLASS_C_DEC::\n split(Pred pred, PB_DS_CLASS_C_DEC& other)\n {\n-  PB_DS_ASSERT_VALID((*this),true)\n-  PB_DS_ASSERT_VALID(other,true)\n+  PB_DS_ASSERT_VALID_COND((*this),true)\n+  PB_DS_ASSERT_VALID_COND(other,true)\n \n   other.clear();\n \n   if (base_type::empty())\n     {\n-      PB_DS_ASSERT_VALID((*this),true)\n-      PB_DS_ASSERT_VALID(other,true)\n+      PB_DS_ASSERT_VALID_COND((*this),true)\n+      PB_DS_ASSERT_VALID_COND(other,true)\n \n       return;\n     }\n@@ -86,7 +86,7 @@ split(Pred pred, PB_DS_CLASS_C_DEC& other)\n       p_out = p_next;\n     }\n \n-  PB_DS_ASSERT_VALID(other,true)\n+  PB_DS_ASSERT_VALID_COND(other,true)\n \n   node_pointer p_cur = base_type::m_p_root;\n \n@@ -114,17 +114,17 @@ split(Pred pred, PB_DS_CLASS_C_DEC& other)\n \n   m_p_max = 0;\n \n-  PB_DS_ASSERT_VALID((*this),true)\n-  PB_DS_ASSERT_VALID(other,true)\n+  PB_DS_ASSERT_VALID_COND((*this),true)\n+  PB_DS_ASSERT_VALID_COND(other,true)\n }\n \n PB_DS_CLASS_T_DEC\n inline void\n PB_DS_CLASS_C_DEC::\n join(PB_DS_CLASS_C_DEC& other)\n {\n-  PB_DS_ASSERT_VALID((*this),true)\n-  PB_DS_ASSERT_VALID(other,true)\n+  PB_DS_ASSERT_VALID_COND((*this),true)\n+  PB_DS_ASSERT_VALID_COND(other,true)\n \n   node_pointer p_other = other.m_p_root;\n \n@@ -147,8 +147,8 @@ join(PB_DS_CLASS_C_DEC& other)\n   other.m_size = 0;\n   other.m_p_max = 0;\n \n-  PB_DS_ASSERT_VALID((*this),true)\n-  PB_DS_ASSERT_VALID(other,true)\n+  PB_DS_ASSERT_VALID_COND((*this),true)\n+  PB_DS_ASSERT_VALID_COND(other,true)\n }\n \n PB_DS_CLASS_T_DEC"}, {"sha": "149a206a4e73e713bab2c381cf3b4460d30f2d32", "filename": "libstdc++-v3/include/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fcc_ht_map_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fcc_ht_map_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fcc_ht_map_.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -101,14 +101,6 @@ namespace __gnu_pbds\n #define PB_DS_V2S(X) Mapped_Data()\n #endif\n \n-#define PB_DS_CHECK_KEY_EXISTS(_Key)\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_ONLY(debug_base::check_key_exists(_Key, __FILE__, __LINE__);)\n-\n-#define PB_DS_CHECK_KEY_DOES_NOT_EXIST(_Key)\t\t\t\t\\\n-  _GLIBCXX_DEBUG_ONLY(debug_base::check_key_does_not_exist(_Key,\t\\\n-\t\t\t\t\t\t\t   __FILE__, __LINE__);)\n-\n-\n     // <011i$i0|\\|-<|-|4i|\\|i|\\|g |-|4$|-| 74813.\n     template<typename Key,\n \t     typename Mapped,\n@@ -621,15 +613,6 @@ namespace __gnu_pbds\n       PB_DS_STATIC_ASSERT(sth, store_hash_ok);\n     };\n \n-#define PB_DS_ASSERT_VALID(X)\t\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_ONLY(X.assert_valid(__FILE__, __LINE__);)\n-\n-#define PB_DS_DEBUG_VERIFY(_Cond)\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_VERIFY_AT(_Cond,\t\t\t\t\t\\\n-\t\t\t   _M_message(#_Cond\" assertion from %1;:%2;\")\t\\\n-\t\t\t   ._M_string(__FILE__)._M_integer(__LINE__)\t\\\n-\t\t\t   ,__file,__line)\n-\n #include <ext/pb_ds/detail/cc_hash_table_map_/constructor_destructor_fn_imps.hpp>\n #include <ext/pb_ds/detail/cc_hash_table_map_/entry_list_fn_imps.hpp>\n #include <ext/pb_ds/detail/cc_hash_table_map_/find_fn_imps.hpp>\n@@ -642,10 +625,6 @@ namespace __gnu_pbds\n #include <ext/pb_ds/detail/cc_hash_table_map_/insert_fn_imps.hpp>\n #include <ext/pb_ds/detail/cc_hash_table_map_/trace_fn_imps.hpp>\n \n-#undef PB_DS_DEBUG_VERIFY\n-#undef PB_DS_ASSERT_VALID\n-#undef PB_DS_CHECK_KEY_DOES_NOT_EXIST\n-#undef PB_DS_CHECK_KEY_EXISTS\n #undef PB_DS_CLASS_T_DEC\n #undef PB_DS_CLASS_C_DEC\n #undef PB_DS_HASH_EQ_FN_C_DEC"}, {"sha": "2964b2d30c6dd03509963df1859c3b4601ff1fe0", "filename": "libstdc++-v3/include/ext/pb_ds/detail/container_base_dispatch.hpp", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcontainer_base_dispatch.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcontainer_base_dispatch.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcontainer_base_dispatch.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -43,6 +43,22 @@\n \n #include <ext/typelist.h>\n \n+#define PB_DS_ASSERT_VALID(X)\t\t\t\t\t\t\\\n+  _GLIBCXX_DEBUG_ONLY(X.assert_valid(__FILE__, __LINE__);)\n+\n+#define PB_DS_DEBUG_VERIFY(_Cond)\t\t\t\t\t\\\n+  _GLIBCXX_DEBUG_VERIFY_AT(_Cond,\t\t\t\t\t\\\n+\t\t\t   _M_message(#_Cond\" assertion from %1;:%2;\")\t\\\n+\t\t\t   ._M_string(__FILE__)._M_integer(__LINE__)\t\\\n+\t\t\t   ,__file,__line)\n+\n+#define PB_DS_CHECK_KEY_EXISTS(_Key)\t\t\t\t\t\\\n+  _GLIBCXX_DEBUG_ONLY(debug_base::check_key_exists(_Key, __FILE__, __LINE__);)\n+\n+#define PB_DS_CHECK_KEY_DOES_NOT_EXIST(_Key)\t\t\t\t\\\n+  _GLIBCXX_DEBUG_ONLY(debug_base::check_key_does_not_exist(_Key,\t\\\n+\t\t\t\t\t\t\t   __FILE__, __LINE__);)\n+\n #define PB_DS_DATA_TRUE_INDICATOR\n #include <ext/pb_ds/detail/list_update_map_/lu_map_.hpp>\n #undef PB_DS_DATA_TRUE_INDICATOR\n@@ -99,6 +115,11 @@\n #include <ext/pb_ds/detail/pat_trie_/pat_trie_.hpp>\n #undef PB_DS_DATA_FALSE_INDICATOR\n \n+#undef PB_DS_CHECK_KEY_DOES_NOT_EXIST\n+#undef PB_DS_CHECK_KEY_EXISTS\n+#undef PB_DS_DEBUG_VERIFY\n+#undef PB_DS_ASSERT_VALID\n+\n namespace __gnu_pbds\n {\n namespace detail"}, {"sha": "a9a0b42d263d61f1756ec4217f2039ec8da8acda", "filename": "libstdc++-v3/include/ext/pb_ds/detail/debug_map_base.hpp", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fdebug_map_base.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fdebug_map_base.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fdebug_map_base.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -51,15 +51,6 @@\n #include <ext/throw_allocator.h>\n #include <debug/debug.h>\n \n-#define PB_DS_ASSERT_VALID(X) \\\n-  _GLIBCXX_DEBUG_ONLY(X.assert_valid(__FILE__, __LINE__);)\n-\n-#define PB_DS_DEBUG_VERIFY(_Cond)\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_VERIFY_AT(_Cond,\t\t\t\t\t\\\n-\t\t\t   _M_message(#_Cond\" assertion from %1;:%2;\")\t\\\n-\t\t\t   ._M_string(__FILE__)._M_integer(__LINE__)\t\\\n-\t\t\t   ,__file,__line)\n-\n namespace __gnu_pbds\n {\n   namespace detail\n@@ -356,8 +347,6 @@ namespace __gnu_pbds\n } // namespace detail\n } // namespace __gnu_pbds\n \n-#undef PB_DS_DEBUG_VERIFY\n-#undef PB_DS_ASSERT_VALID\n \n #endif\n "}, {"sha": "a9179d5363d4e73731d50c1c7cca6cd72d40ca89", "filename": "libstdc++-v3/include/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fgp_ht_map_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fgp_ht_map_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fgp_ht_map_.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -98,13 +98,6 @@ namespace __gnu_pbds\n #define PB_DS_V2S(X) Mapped()\n #endif\n \n-#define PB_DS_CHECK_KEY_EXISTS(_Key)\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_ONLY(debug_base::check_key_exists(_Key, __FILE__, __LINE__);)\n-\n-#define PB_DS_CHECK_KEY_DOES_NOT_EXIST(_Key)\t\t\t\t\\\n-  _GLIBCXX_DEBUG_ONLY(debug_base::check_key_does_not_exist(_Key,\t\\\n-\t\t\t\t\t\t\t   __FILE__, __LINE__);)\n-\n     template<typename Key,\n \t     typename Mapped,\n \t     typename Hash_Fn,\n@@ -658,15 +651,6 @@ namespace __gnu_pbds\n       PB_DS_STATIC_ASSERT(sth, store_hash_ok);\n     };\n \n-#define PB_DS_ASSERT_VALID(X)\t\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_ONLY(X.assert_valid(__FILE__, __LINE__);)\n-\n-#define PB_DS_DEBUG_VERIFY(_Cond)\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_VERIFY_AT(_Cond,\t\t\t\t\t\\\n-\t\t\t   _M_message(#_Cond\" assertion from %1;:%2;\")\t\\\n-\t\t\t   ._M_string(__FILE__)._M_integer(__LINE__)\t\\\n-\t\t\t   ,__file,__line)\n-\n #include <ext/pb_ds/detail/gp_hash_table_map_/constructor_destructor_fn_imps.hpp>\n #include <ext/pb_ds/detail/gp_hash_table_map_/find_fn_imps.hpp>\n #include <ext/pb_ds/detail/gp_hash_table_map_/resize_fn_imps.hpp>\n@@ -678,10 +662,6 @@ namespace __gnu_pbds\n #include <ext/pb_ds/detail/gp_hash_table_map_/insert_fn_imps.hpp>\n #include <ext/pb_ds/detail/gp_hash_table_map_/trace_fn_imps.hpp>\n \n-#undef PB_DS_DEBUG_VERIFY\n-#undef PB_DS_ASSERT_VALID\n-#undef PB_DS_CHECK_KEY_DOES_NOT_EXIST\n-#undef PB_DS_CHECK_KEY_EXISTS\n #undef PB_DS_CLASS_T_DEC\n #undef PB_DS_CLASS_C_DEC\n #undef PB_DS_HASH_EQ_FN_C_DEC"}, {"sha": "d31154638103a1afc14b4a8bdb785d4791f64f53", "filename": "libstdc++-v3/include/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fleft_child_next_sibling_heap_%2Fleft_child_next_sibling_heap_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fleft_child_next_sibling_heap_%2Fleft_child_next_sibling_heap_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fleft_child_next_sibling_heap_%2Fleft_child_next_sibling_heap_.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -332,15 +332,6 @@ namespace __gnu_pbds\n       static no_throw_copies_t s_no_throw_copies_ind;\n     };\n \n-#define PB_DS_ASSERT_VALID(X) \\\n-  _GLIBCXX_DEBUG_ONLY(X.assert_valid(__FILE__, __LINE__);)\n-\n-#define PB_DS_DEBUG_VERIFY(_Cond)\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_VERIFY_AT(_Cond,\t\t\t\t\t\\\n-\t\t\t   _M_message(#_Cond\" assertion from %1;:%2;\")\t\\\n-\t\t\t   ._M_string(__FILE__)._M_integer(__LINE__)\t\\\n-\t\t\t   ,__file,__line)\n-\n #include <ext/pb_ds/detail/left_child_next_sibling_heap_/constructors_destructor_fn_imps.hpp>\n #include <ext/pb_ds/detail/left_child_next_sibling_heap_/iterators_fn_imps.hpp>\n #include <ext/pb_ds/detail/left_child_next_sibling_heap_/debug_fn_imps.hpp>\n@@ -350,8 +341,6 @@ namespace __gnu_pbds\n #include <ext/pb_ds/detail/left_child_next_sibling_heap_/info_fn_imps.hpp>\n #include <ext/pb_ds/detail/left_child_next_sibling_heap_/policy_access_fn_imps.hpp>\n \n-#undef PB_DS_DEBUG_VERIFY\n-#undef PB_DS_ASSERT_VALID\n #undef PB_DS_CLASS_C_DEC\n #undef PB_DS_CLASS_T_DEC\n "}, {"sha": "329f2fa780ae60ceb8eec6df20c85587a94e4fa3", "filename": "libstdc++-v3/include/ext/pb_ds/detail/list_update_map_/lu_map_.hpp", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Flist_update_map_%2Flu_map_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Flist_update_map_%2Flu_map_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Flist_update_map_%2Flu_map_.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -337,22 +337,6 @@ namespace __gnu_pbds\n       mutable entry_pointer m_p_l;\n     };\n \n-#define PB_DS_ASSERT_VALID(X)\t\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_ONLY(X.assert_valid(__FILE__, __LINE__);)\n-\n-#define PB_DS_CHECK_KEY_EXISTS(_Key)\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_ONLY(debug_base::check_key_exists(_Key, __FILE__, __LINE__);)\n-\n-#define PB_DS_CHECK_KEY_DOES_NOT_EXIST(_Key)\t\t\t\t\\\n-  _GLIBCXX_DEBUG_ONLY(debug_base::check_key_does_not_exist(_Key,\t\\\n-\t\t\t\t\t\t\t   __FILE__, __LINE__);)\n-\n-#define PB_DS_DEBUG_VERIFY(_Cond)\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_VERIFY_AT(_Cond,\t\t\t\t\t\\\n-\t\t\t   _M_message(#_Cond\" assertion from %1;:%2;\")\t\\\n-\t\t\t   ._M_string(__FILE__)._M_integer(__LINE__)\t\\\n-\t\t\t   ,__file,__line)\n-\n #include <ext/pb_ds/detail/list_update_map_/constructor_destructor_fn_imps.hpp>\n #include <ext/pb_ds/detail/list_update_map_/info_fn_imps.hpp>\n #include <ext/pb_ds/detail/list_update_map_/debug_fn_imps.hpp>\n@@ -362,10 +346,6 @@ namespace __gnu_pbds\n #include <ext/pb_ds/detail/list_update_map_/insert_fn_imps.hpp>\n #include <ext/pb_ds/detail/list_update_map_/trace_fn_imps.hpp>\n \n-#undef PB_DS_DEBUG_VERIFY\n-#undef PB_DS_CHECK_KEY_DOES_NOT_EXIST\n-#undef PB_DS_CHECK_KEY_EXISTS\n-#undef PB_DS_ASSERT_VALID\n #undef PB_DS_CLASS_T_DEC\n #undef PB_DS_CLASS_C_DEC\n #undef  PB_DS_TYPES_TRAITS_C_DEC"}, {"sha": "06436591ef5d642eec0bbbb5c49317d7e50c2e75", "filename": "libstdc++-v3/include/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp", "status": "modified", "additions": 3, "deletions": 19, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fov_tree_map_%2Fov_tree_map_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fov_tree_map_%2Fov_tree_map_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fov_tree_map_%2Fov_tree_map_.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -107,15 +107,9 @@ namespace __gnu_pbds\n \t\t    Cmp_Fn, false, Allocator>\n #endif\n \n-#define PB_DS_ASSERT_VALID(X)\t\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_ONLY(X.assert_valid(__FILE__, __LINE__);)\n-\n-#define PB_DS_CHECK_KEY_EXISTS(_Key)\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_ONLY(debug_base::check_key_exists(_Key, __FILE__, __LINE__);)\n-\n-#define PB_DS_CHECK_KEY_DOES_NOT_EXIST(_Key)\t\t\t\t\\\n-  _GLIBCXX_DEBUG_ONLY(debug_base::check_key_does_not_exist(_Key,\t\\\n-\t\t\t\t\t\t\t   __FILE__, __LINE__);)\n+#ifndef PB_DS_CHECK_KEY_EXISTS\n+#  error Missing definition\n+#endif\n \n     // Ordered-vector tree associative-container.\n     template<typename Key, typename Mapped, class Cmp_Fn,\n@@ -502,12 +496,6 @@ namespace __gnu_pbds\n       size_type m_size;\n     };\n \n-#define PB_DS_DEBUG_VERIFY(_Cond)\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_VERIFY_AT(_Cond,\t\t\t\t\t\\\n-\t\t\t   _M_message(#_Cond\" assertion from %1;:%2;\")\t\\\n-\t\t\t   ._M_string(__FILE__)._M_integer(__LINE__)\t\\\n-\t\t\t   ,__file,__line)\n-\n #include <ext/pb_ds/detail/ov_tree_map_/constructors_destructor_fn_imps.hpp>\n #include <ext/pb_ds/detail/ov_tree_map_/iterators_fn_imps.hpp>\n #include <ext/pb_ds/detail/ov_tree_map_/debug_fn_imps.hpp>\n@@ -517,10 +505,6 @@ namespace __gnu_pbds\n #include <ext/pb_ds/detail/ov_tree_map_/split_join_fn_imps.hpp>\n #include <ext/pb_ds/detail/bin_search_tree_/policy_access_fn_imps.hpp>\n \n-#undef PB_DS_DEBUG_VERIFY\n-#undef PB_DS_CHECK_KEY_DOES_NOT_EXIST\n-#undef PB_DS_CHECK_KEY_EXISTS\n-#undef PB_DS_ASSERT_VALID\n #undef PB_DS_CLASS_C_DEC\n #undef PB_DS_CLASS_T_DEC\n #undef PB_DS_OV_TREE_CLASS_NAME"}, {"sha": "3bdb82fb649d699d5387f6863b0ed450dfe34019", "filename": "libstdc++-v3/include/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpairing_heap_%2Fpairing_heap_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpairing_heap_%2Fpairing_heap_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpairing_heap_%2Fpairing_heap_.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -198,29 +198,18 @@ namespace __gnu_pbds\n       remove_node(node_pointer p_nd);\n     };\n \n-#define PB_DS_ASSERT_VALID(X)\t\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_ONLY(X.assert_valid(__FILE__, __LINE__);)\n-\n #define PB_DS_ASSERT_NODE_CONSISTENT(_Node, _Bool)\t\t\t\\\n   _GLIBCXX_DEBUG_ONLY(assert_node_consistent(_Node, _Bool,\t\t\\\n \t\t\t\t\t     __FILE__, __LINE__);)\n \n-#define PB_DS_DEBUG_VERIFY(_Cond)\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_VERIFY_AT(_Cond,\t\t\t\t\t\\\n-\t\t\t   _M_message(#_Cond\" assertion from %1;:%2;\")\t\\\n-\t\t\t   ._M_string(__FILE__)._M_integer(__LINE__)\t\\\n-\t\t\t   ,__file,__line)\n-\n #include <ext/pb_ds/detail/pairing_heap_/constructors_destructor_fn_imps.hpp>\n #include <ext/pb_ds/detail/pairing_heap_/debug_fn_imps.hpp>\n #include <ext/pb_ds/detail/pairing_heap_/find_fn_imps.hpp>\n #include <ext/pb_ds/detail/pairing_heap_/insert_fn_imps.hpp>\n #include <ext/pb_ds/detail/pairing_heap_/erase_fn_imps.hpp>\n #include <ext/pb_ds/detail/pairing_heap_/split_join_fn_imps.hpp>\n \n-#undef PB_DS_DEBUG_VERIFY\n #undef PB_DS_ASSERT_NODE_CONSISTENT\n-#undef PB_DS_ASSERT_VALID\n #undef PB_DS_CLASS_C_DEC\n #undef PB_DS_CLASS_T_DEC\n #undef PB_DS_BASE_C_DEC"}, {"sha": "cb8b6740d79d9963b40e3b1f499072c6c9f05d74", "filename": "libstdc++-v3/include/ext/pb_ds/detail/pat_trie_/internal_node.hpp", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Finternal_node.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Finternal_node.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Finternal_node.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -566,12 +566,6 @@ namespace __gnu_pbds\n     }\n \n #ifdef _GLIBCXX_DEBUG\n-# define PB_DS_DEBUG_VERIFY(_Cond)\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_VERIFY_AT(_Cond,\t\t\t\t\t\\\n-\t\t\t   _M_message(#_Cond\" assertion from %1;:%2;\")\t\\\n-\t\t\t   ._M_string(__FILE__)._M_integer(__LINE__)\t\\\n-\t\t\t   ,__file,__line)\n-\n     PB_DS_CLASS_T_DEC\n     typename PB_DS_CLASS_C_DEC::subtree_debug_info\n     PB_DS_CLASS_C_DEC::\n@@ -596,7 +590,6 @@ namespace __gnu_pbds\n \t}\n       return std::make_pair(pref_b_it(), pref_e_it());\n     }\n-# undef PB_DS_DEBUG_VERIFY\n #endif \n \n #undef PB_DS_CLASS_T_DEC"}, {"sha": "de8057a02197da50d8e0cc5ae70432810a2aa716", "filename": "libstdc++-v3/include/ext/pb_ds/detail/pat_trie_/leaf.hpp", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fleaf.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fleaf.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fleaf.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -140,12 +140,6 @@ namespace __gnu_pbds\n     { return m_value; }\n \n #ifdef _GLIBCXX_DEBUG\n-# define PB_DS_DEBUG_VERIFY(_Cond)\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_VERIFY_AT(_Cond,\t\t\t\t\t\\\n-\t\t\t   _M_message(#_Cond\" assertion from %1;:%2;\")\t\\\n-\t\t\t   ._M_string(__FILE__)._M_integer(__LINE__)\t\\\n-\t\t\t   ,__file,__line)\n-\n     PB_DS_CLASS_T_DEC\n     typename PB_DS_CLASS_C_DEC::subtree_debug_info\n     PB_DS_CLASS_C_DEC::\n@@ -162,7 +156,6 @@ namespace __gnu_pbds\n     PB_DS_CLASS_T_DEC\n     PB_DS_CLASS_C_DEC::\n     ~pat_trie_leaf() { }\n-# undef PB_DS_DEBUG_VERIFY\n #endif \n \n #undef PB_DS_CLASS_T_DEC"}, {"sha": "5313c0b97120f5a632f268394ff7b6b1af4299e9", "filename": "libstdc++-v3/include/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fpat_trie_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fpat_trie_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpat_trie_%2Fpat_trie_.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -495,28 +495,12 @@ namespace __gnu_pbds\n       size_type m_size;\n     };\n \n-#define PB_DS_ASSERT_VALID(X)\t\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_ONLY(X.assert_valid(__FILE__, __LINE__);)\n-\n #define PB_DS_ASSERT_NODE_VALID(X)\t\t\t\t\t\\\n   _GLIBCXX_DEBUG_ONLY(X->assert_valid(this, __FILE__, __LINE__);)\n \n #define PB_DS_RECURSIVE_COUNT_LEAFS(X)\t\t\t\t\t\\\n   recursive_count_leafs(X, __FILE__, __LINE__)\n \n-#define PB_DS_CHECK_KEY_EXISTS(_Key)\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_ONLY(debug_base::check_key_exists(_Key, __FILE__, __LINE__);)\n-\n-#define PB_DS_CHECK_KEY_DOES_NOT_EXIST(_Key)\t\t\t\t\\\n-  _GLIBCXX_DEBUG_ONLY(debug_base::check_key_does_not_exist(_Key,\t\\\n-\t\t\t\t\t\t\t   __FILE__, __LINE__);)\n-\n-#define PB_DS_DEBUG_VERIFY(_Cond)\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_VERIFY_AT(_Cond,\t\t\t\t\t\\\n-\t\t\t   _M_message(#_Cond\" assertion from %1;:%2;\")\t\\\n-\t\t\t   ._M_string(__FILE__)._M_integer(__LINE__)\t\\\n-\t\t\t   ,__file,__line)\n-\n #include <ext/pb_ds/detail/pat_trie_/constructors_destructor_fn_imps.hpp>\n #include <ext/pb_ds/detail/pat_trie_/iterators_fn_imps.hpp>\n #include <ext/pb_ds/detail/pat_trie_/insert_join_fn_imps.hpp>\n@@ -529,12 +513,8 @@ namespace __gnu_pbds\n #include <ext/pb_ds/detail/pat_trie_/trace_fn_imps.hpp>\n #include <ext/pb_ds/detail/pat_trie_/update_fn_imps.hpp>\n \n-#undef PB_DS_DEBUG_VERIFY\n-#undef PB_DS_CHECK_KEY_DOES_NOT_EXIST\n-#undef PB_DS_CHECK_KEY_EXISTS\n #undef PB_DS_RECURSIVE_COUNT_LEAFS\n #undef PB_DS_ASSERT_NODE_VALID\n-#undef PB_DS_ASSERT_VALID\n #undef PB_DS_CLASS_C_DEC\n #undef PB_DS_CLASS_T_DEC\n #undef PB_DS_CLASS_NAME"}, {"sha": "c48ba7c6e1a1e9dc562ed369ae2c63c0e88c0d06", "filename": "libstdc++-v3/include/ext/pb_ds/detail/priority_queue_base_dispatch.hpp", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpriority_queue_base_dispatch.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpriority_queue_base_dispatch.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fpriority_queue_base_dispatch.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -41,12 +41,24 @@\n #ifndef PB_DS_PRIORITY_QUEUE_BASE_DS_DISPATCHER_HPP\n #define PB_DS_PRIORITY_QUEUE_BASE_DS_DISPATCHER_HPP\n \n+#define PB_DS_ASSERT_VALID(X)\t\t\t\t\t\t\\\n+  _GLIBCXX_DEBUG_ONLY(X.assert_valid(__FILE__, __LINE__);)\n+\n+#define PB_DS_DEBUG_VERIFY(_Cond)\t\t\t\t\t\\\n+  _GLIBCXX_DEBUG_VERIFY_AT(_Cond,\t\t\t\t\t\\\n+\t\t\t   _M_message(#_Cond\" assertion from %1;:%2;\")\t\\\n+\t\t\t   ._M_string(__FILE__)._M_integer(__LINE__)\t\\\n+\t\t\t   ,__file,__line)\n+\n #include <ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp>\n #include <ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp>\n #include <ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp>\n #include <ext/pb_ds/detail/binary_heap_/binary_heap_.hpp>\n #include <ext/pb_ds/detail/thin_heap_/thin_heap_.hpp>\n \n+#undef PB_DS_DEBUG_VERIFY\n+#undef PB_DS_ASSERT_VALID\n+\n namespace __gnu_pbds\n {\n     namespace detail"}, {"sha": "7d46c95d7e0a01fab59368571646ee6d4ddd58c5", "filename": "libstdc++-v3/include/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Frb_tree_map_%2Frb_tree_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Frb_tree_map_%2Frb_tree_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Frb_tree_map_%2Frb_tree_.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -260,28 +260,17 @@ namespace __gnu_pbds\n       split_at_node(node_pointer, PB_DS_CLASS_C_DEC&);\n     };\n \n-#define PB_DS_ASSERT_VALID(X)\t\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_ONLY(X.assert_valid(__FILE__, __LINE__);)\n-\n #define PB_DS_STRUCT_ONLY_ASSERT_VALID(X)\t\t\t\t\\\n   _GLIBCXX_DEBUG_ONLY(X.structure_only_assert_valid(__FILE__, __LINE__);)\n \n-#define PB_DS_DEBUG_VERIFY(_Cond)\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_VERIFY_AT(_Cond,\t\t\t\t\t\\\n-\t\t\t   _M_message(#_Cond\" assertion from %1;:%2;\")\t\\\n-\t\t\t   ._M_string(__FILE__)._M_integer(__LINE__)\t\\\n-\t\t\t   ,__file,__line)\n-\n #include <ext/pb_ds/detail/rb_tree_map_/constructors_destructor_fn_imps.hpp>\n #include <ext/pb_ds/detail/rb_tree_map_/insert_fn_imps.hpp>\n #include <ext/pb_ds/detail/rb_tree_map_/erase_fn_imps.hpp>\n #include <ext/pb_ds/detail/rb_tree_map_/debug_fn_imps.hpp>\n #include <ext/pb_ds/detail/rb_tree_map_/split_join_fn_imps.hpp>\n #include <ext/pb_ds/detail/rb_tree_map_/info_fn_imps.hpp>\n \n-#undef PB_DS_DEBUG_VERIFY\n #undef PB_DS_STRUCT_ONLY_ASSERT_VALID\n-#undef PB_DS_ASSERT_VALID\n #undef PB_DS_CLASS_T_DEC\n #undef PB_DS_CLASS_C_DEC\n #undef PB_DS_CLASS_NAME"}, {"sha": "845e6726db6d418abb4b90cb818110502eb9ac68", "filename": "libstdc++-v3/include/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Frc_binomial_heap_%2Frc.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Frc_binomial_heap_%2Frc.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Frc_binomial_heap_%2Frc.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -41,15 +41,6 @@\n #ifndef PB_DS_RC_HPP\n #define PB_DS_RC_HPP\n \n-#define PB_DS_ASSERT_VALID(X)\t\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_ONLY(X.assert_valid(__FILE__, __LINE__);)\n-\n-#define PB_DS_DEBUG_VERIFY(_Cond)\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_VERIFY_AT(_Cond,\t\t\t\t\t\\\n-\t\t\t   _M_message(#_Cond\" assertion from %1;:%2;\")\t\\\n-\t\t\t   ._M_string(__FILE__)._M_integer(__LINE__)\t\\\n-\t\t\t   ,__file,__line)\n-\n namespace __gnu_pbds\n {\n   namespace detail\n@@ -268,6 +259,4 @@ namespace __gnu_pbds\n } // namespace detail\n } // namespace __gnu_pbds\n \n-#undef PB_DS_DEBUG_VERIFY\n-#undef PB_DS_ASSERT_VALID\n #endif "}, {"sha": "767bf108861cc2024f3abbbc37c5096dd698174b", "filename": "libstdc++-v3/include/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Frc_binomial_heap_%2Frc_binomial_heap_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Frc_binomial_heap_%2Frc_binomial_heap_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Frc_binomial_heap_%2Frc_binomial_heap_.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -180,24 +180,13 @@ namespace __gnu_pbds\n       rc_t m_rc;\n     };\n \n-#define PB_DS_ASSERT_VALID(X)\t\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_ONLY(X.assert_valid(__FILE__, __LINE__);)\n-\n-#define PB_DS_DEBUG_VERIFY(_Cond)\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_VERIFY_AT(_Cond,\t\t\t\t\t\\\n-\t\t\t   _M_message(#_Cond\" assertion from %1;:%2;\")\t\\\n-\t\t\t   ._M_string(__FILE__)._M_integer(__LINE__)\t\\\n-\t\t\t   ,__file,__line)\n-\n #include <ext/pb_ds/detail/rc_binomial_heap_/constructors_destructor_fn_imps.hpp>\n #include <ext/pb_ds/detail/rc_binomial_heap_/debug_fn_imps.hpp>\n #include <ext/pb_ds/detail/rc_binomial_heap_/erase_fn_imps.hpp>\n #include <ext/pb_ds/detail/rc_binomial_heap_/trace_fn_imps.hpp>\n #include <ext/pb_ds/detail/rc_binomial_heap_/insert_fn_imps.hpp>\n #include <ext/pb_ds/detail/rc_binomial_heap_/split_join_fn_imps.hpp>\n \n-#undef PB_DS_DEBUG_VERIFY\n-#undef PB_DS_ASSERT_VALID\n #undef PB_DS_CLASS_C_DEC\n #undef PB_DS_CLASS_T_DEC\n #undef PB_DS_BASE_C_DEC"}, {"sha": "c8a8816d5be9a59fea69bb9e2ad9c6366b7620cb", "filename": "libstdc++-v3/include/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fresize_policy%2Fhash_load_check_resize_trigger_imp.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fresize_policy%2Fhash_load_check_resize_trigger_imp.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fresize_policy%2Fhash_load_check_resize_trigger_imp.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -286,8 +286,8 @@ void\n PB_DS_CLASS_C_DEC::\n assert_valid(const char* __file, int __line) const\n {\n-  _GLIBCXX_DEBUG_ASSERT(m_load_max > m_load_min);\n-  _GLIBCXX_DEBUG_ASSERT(m_next_grow_size >= m_next_shrink_size);\n+  PB_DS_DEBUG_VERIFY(m_load_max > m_load_min);\n+  PB_DS_DEBUG_VERIFY(m_next_grow_size >= m_next_shrink_size);\n }\n # undef PB_DS_DEBUG_VERIFY\n #endif"}, {"sha": "b6afa758eb810a75795d3dad01bb5417614f9184", "filename": "libstdc++-v3/include/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp", "status": "modified", "additions": 3, "deletions": 16, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fsplay_tree_%2Fsplay_tree_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fsplay_tree_%2Fsplay_tree_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fsplay_tree_%2Fsplay_tree_.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -136,6 +136,9 @@ namespace __gnu_pbds\n     {\n     private:\n       typedef PB_DS_BASE_C_DEC base_type;\n+#ifdef _GLIBCXX_DEBUG\n+      typedef base_type debug_base;\n+#endif\n       typedef typename base_type::node_pointer node_pointer;\n \n     public:\n@@ -277,23 +280,10 @@ namespace __gnu_pbds\n       erase_node(node_pointer);\n     };\n \n-#define PB_DS_ASSERT_VALID(X)\t\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_ONLY(X.assert_valid(__FILE__, __LINE__);)\n-\n #define PB_DS_ASSERT_BASE_NODE_CONSISTENT(_Node)\t\t\t\\\n   _GLIBCXX_DEBUG_ONLY(base_type::assert_node_consistent(_Node,\t\t\\\n \t\t\t\t\t\t\t__FILE__, __LINE__);)\n \n-#define PB_DS_CHECK_KEY_DOES_NOT_EXIST(_Key)\t\t\t\t\\\n-  _GLIBCXX_DEBUG_ONLY(base_type::check_key_does_not_exist(_Key,\t\\\n-\t\t\t\t\t\t\t   __FILE__, __LINE__);)\n-\n-#define PB_DS_DEBUG_VERIFY(_Cond)\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_VERIFY_AT(_Cond,\t\t\t\t\t\\\n-\t\t\t   _M_message(#_Cond\" assertion from %1;:%2;\")\t\\\n-\t\t\t   ._M_string(__FILE__)._M_integer(__LINE__)\t\\\n-\t\t\t   ,__file,__line)\n-\n #include <ext/pb_ds/detail/splay_tree_/constructors_destructor_fn_imps.hpp>\n #include <ext/pb_ds/detail/splay_tree_/insert_fn_imps.hpp>\n #include <ext/pb_ds/detail/splay_tree_/splay_fn_imps.hpp>\n@@ -302,10 +292,7 @@ namespace __gnu_pbds\n #include <ext/pb_ds/detail/splay_tree_/debug_fn_imps.hpp>\n #include <ext/pb_ds/detail/splay_tree_/split_join_fn_imps.hpp>\n \n-#undef PB_DS_DEBUG_VERIFY\n-#undef PB_DS_CHECK_KEY_DOES_NOT_EXIST\n #undef PB_DS_ASSERT_BASE_NODE_CONSISTENT\n-#undef PB_DS_ASSERT_VALID\n #undef PB_DS_CLASS_T_DEC\n #undef PB_DS_CLASS_C_DEC\n #undef PB_DS_CLASS_NAME"}, {"sha": "9741ef9cf1cda35bb7f5ddadd5da7a7123cc7549", "filename": "libstdc++-v3/include/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fthin_heap_%2Fthin_heap_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfca3f726741cbba6e6906afeac9ddc4c466fb3f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fthin_heap_%2Fthin_heap_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fthin_heap_%2Fthin_heap_.hpp?ref=cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "patch": "@@ -334,22 +334,13 @@ namespace __gnu_pbds\n \t/* Pot's good, let's play */\n       };\n \n-#define PB_DS_ASSERT_VALID(X)\t\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_ONLY(X.assert_valid(__FILE__, __LINE__);)\n-\n #define PB_DS_ASSERT_NODE_CONSISTENT(_Node, _Bool)\t\t\t\\\n   _GLIBCXX_DEBUG_ONLY(assert_node_consistent(_Node, _Bool,\t\t\\\n \t\t\t\t\t     __FILE__, __LINE__);)\n \n #define PB_DS_ASSERT_AUX_NULL(X)\t\t\t\t\t\t\\\n   _GLIBCXX_DEBUG_ONLY(X.assert_aux_null(__FILE__, __LINE__);)\n \n-#define PB_DS_DEBUG_VERIFY(_Cond)\t\t\t\t\t\\\n-  _GLIBCXX_DEBUG_VERIFY_AT(_Cond,\t\t\t\t\t\\\n-\t\t\t   _M_message(#_Cond\" assertion from %1;:%2;\")\t\\\n-\t\t\t   ._M_string(__FILE__)._M_integer(__LINE__)\t\\\n-\t\t\t   ,__file,__line)\n-\n #include <ext/pb_ds/detail/thin_heap_/constructors_destructor_fn_imps.hpp>\n #include <ext/pb_ds/detail/thin_heap_/debug_fn_imps.hpp>\n #include <ext/pb_ds/detail/thin_heap_/trace_fn_imps.hpp>\n@@ -358,10 +349,8 @@ namespace __gnu_pbds\n #include <ext/pb_ds/detail/thin_heap_/erase_fn_imps.hpp>\n #include <ext/pb_ds/detail/thin_heap_/split_join_fn_imps.hpp>\n \n-#undef PB_DS_DEBUG_VERIFY\n #undef PB_DS_ASSERT_AUX_NULL\n #undef PB_DS_ASSERT_NODE_CONSISTENT\n-#undef PB_DS_ASSERT_VALID\n #undef PB_DS_CLASS_C_DEC\n #undef PB_DS_CLASS_T_DEC\n #undef PB_DS_BASE_C_DEC"}]}