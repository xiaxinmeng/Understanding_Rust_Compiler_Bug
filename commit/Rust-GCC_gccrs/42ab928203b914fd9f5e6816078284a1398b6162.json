{"sha": "42ab928203b914fd9f5e6816078284a1398b6162", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJhYjkyODIwM2I5MTRmZDlmNWU2ODE2MDc4Mjg0YTEzOThiNjE2Mg==", "commit": {"author": {"name": "Giovanni Bajo", "email": "giovannibajo@libero.it", "date": "2009-02-28T18:13:31Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2009-02-28T18:13:31Z"}, "message": "add alpha_if_semocolon fix\n\nFrom-SVN: r144490", "tree": {"sha": "273c607c4d45ee958973aacbec9d4960fd5b8d63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/273c607c4d45ee958973aacbec9d4960fd5b8d63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42ab928203b914fd9f5e6816078284a1398b6162", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42ab928203b914fd9f5e6816078284a1398b6162", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42ab928203b914fd9f5e6816078284a1398b6162", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42ab928203b914fd9f5e6816078284a1398b6162/comments", "author": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7d01864f1b691a5285704e0bee236c6bba2dca7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d01864f1b691a5285704e0bee236c6bba2dca7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d01864f1b691a5285704e0bee236c6bba2dca7e"}], "stats": {"total": 78, "additions": 73, "deletions": 5}, "files": [{"sha": "e2e28db88e5d66478ca6f8a37f8956c146523ebe", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 46, "deletions": 5, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42ab928203b914fd9f5e6816078284a1398b6162/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42ab928203b914fd9f5e6816078284a1398b6162/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=42ab928203b914fd9f5e6816078284a1398b6162", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Monday January  5, 2009 at 09:53:36 AM PST\n+ * It has been AutoGen-ed  Saturday February 28, 2009 at 10:11:41 AM PST\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Mon Jan  5 09:53:36 PST 2009\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Sat Feb 28 10:11:41 PST 2009\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 179 fixup descriptions.\n+ * This file contains 180 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -916,6 +916,41 @@ static const char* apzAlpha_GetoptPatch[] = {\n     \"getopt(int, char *const[], const char *)\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Alpha_If_Semicolon fix\n+ */\n+tSCC zAlpha_If_SemicolonName[] =\n+     \"alpha_if_semicolon\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAlpha_If_SemicolonList[] =\n+  \"net/if.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzAlpha_If_SemicolonMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAlpha_If_SemicolonSelect0[] =\n+       \"struct[ \\t]+sockaddr[ \\t]+vmif_paddr[ \\t]+/\\\\*\";\n+\n+#define    ALPHA_IF_SEMICOLON_TEST_CT  1\n+static tTestDesc aAlpha_If_SemicolonTests[] = {\n+  { TT_EGREP,    zAlpha_If_SemicolonSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Alpha_If_Semicolon\n+ */\n+static const char* apzAlpha_If_SemicolonPatch[] = {\n+    \"format\",\n+    \"struct sockaddr vmif_paddr;\\t/*\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Alpha_Parens fix\n@@ -7273,9 +7308,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          225\n+#define REGEX_COUNT          226\n #define MACH_LIST_SIZE_LIMIT 181\n-#define FIX_COUNT            179\n+#define FIX_COUNT            180\n \n /*\n  *  Enumerate the fixes\n@@ -7301,6 +7336,7 @@ typedef enum {\n     ALPHA_ASSERT_FIXIDX,\n     ALPHA_BAD_LVAL_FIXIDX,\n     ALPHA_GETOPT_FIXIDX,\n+    ALPHA_IF_SEMICOLON_FIXIDX,\n     ALPHA_PARENS_FIXIDX,\n     ALPHA_PTHREAD_FIXIDX,\n     ALPHA_PTHREAD_GCC_FIXIDX,\n@@ -7563,6 +7599,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      ALPHA_GETOPT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAlpha_GetoptTests,   apzAlpha_GetoptPatch, 0 },\n \n+  {  zAlpha_If_SemicolonName,    zAlpha_If_SemicolonList,\n+     apzAlpha_If_SemicolonMachs,\n+     ALPHA_IF_SEMICOLON_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aAlpha_If_SemicolonTests,   apzAlpha_If_SemicolonPatch, 0 },\n+\n   {  zAlpha_ParensName,    zAlpha_ParensList,\n      apzAlpha_ParensMachs,\n      ALPHA_PARENS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "4a5af1df609ff7951bf8889875ef6a99b0da75e7", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42ab928203b914fd9f5e6816078284a1398b6162/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42ab928203b914fd9f5e6816078284a1398b6162/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=42ab928203b914fd9f5e6816078284a1398b6162", "patch": "@@ -562,6 +562,19 @@ fix = {\n };\n \n \n+/*\n+ *  Fix missing semicolon on Alpha OSF/4 in <net/if.h>\n+ */\n+fix = {\n+    hackname  = alpha_if_semicolon;\n+    files     = net/if.h;\n+    select    = \"struct[ \\t]+sockaddr[ \\t]+vmif_paddr[ \\t]+/\\\\*\";\n+    c_fix     = format;\n+    c_fix_arg = \"struct sockaddr vmif_paddr;\\t/*\";\n+    test_text = '     struct  sockaddr vmif_paddr     /* protocol address */';\n+};\n+\n+\n /*\n  * Remove erroneous parentheses in sym.h on Alpha OSF/1.\n  */"}, {"sha": "4c25423c5223eba4a740b347310aeb07a6a5b1ba", "filename": "fixincludes/tests/base/net/if.h", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42ab928203b914fd9f5e6816078284a1398b6162/fixincludes%2Ftests%2Fbase%2Fnet%2Fif.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42ab928203b914fd9f5e6816078284a1398b6162/fixincludes%2Ftests%2Fbase%2Fnet%2Fif.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fnet%2Fif.h?ref=42ab928203b914fd9f5e6816078284a1398b6162", "patch": "@@ -0,0 +1,14 @@\n+/*  DO NOT EDIT THIS FILE.\n+\n+    It has been auto-edited by fixincludes from:\n+\n+\t\"fixinc/tests/inc/net/if.h\"\n+\n+    This had to be done to correct non-standard usages in the\n+    original, manufacturer supplied header file.  */\n+\n+\n+\n+#if defined( ALPHA_IF_SEMICOLON_CHECK )\n+     struct sockaddr vmif_paddr;\t/* protocol address */\n+#endif  /* ALPHA_IF_SEMICOLON_CHECK */"}]}