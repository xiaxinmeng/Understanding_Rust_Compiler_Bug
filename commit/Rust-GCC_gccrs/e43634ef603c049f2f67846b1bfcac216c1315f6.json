{"sha": "e43634ef603c049f2f67846b1bfcac216c1315f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQzNjM0ZWY2MDNjMDQ5ZjJmNjc4NDZiMWJmY2FjMjE2YzEzMTVmNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-16T13:47:54Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-16T13:47:54Z"}, "message": "(GO_IF_LEGITIMATE_ADDRESS): Disallow SYMBOL_REF for current function.\n\nFrom-SVN: r10369", "tree": {"sha": "d4dce772945e63d979eefdfb91fe8c40b199a5d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4dce772945e63d979eefdfb91fe8c40b199a5d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e43634ef603c049f2f67846b1bfcac216c1315f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e43634ef603c049f2f67846b1bfcac216c1315f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e43634ef603c049f2f67846b1bfcac216c1315f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e43634ef603c049f2f67846b1bfcac216c1315f6/comments", "author": null, "committer": null, "parents": [{"sha": "a5dfb4eee245afa9d56800bf36e0fdad91858b60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5dfb4eee245afa9d56800bf36e0fdad91858b60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5dfb4eee245afa9d56800bf36e0fdad91858b60"}], "stats": {"total": 9, "additions": 0, "deletions": 9}, "files": [{"sha": "f4b76e87c359aa1516028ad33745e908d07b21a1", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43634ef603c049f2f67846b1bfcac216c1315f6/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43634ef603c049f2f67846b1bfcac216c1315f6/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=e43634ef603c049f2f67846b1bfcac216c1315f6", "patch": "@@ -1170,10 +1170,6 @@ __enable_execute_stack (addr)\t\t\t\t\t\t\\\n    forms can be surrounded with an AND that clear the low-order three bits;\n    this is an \"unaligned\" access.\n \n-   We also allow a SYMBOL_REF that is the name of the current function as\n-   valid address.  This is for CALL_INSNs.  It cannot be used in any other\n-   context.\n-\n    First define the basic valid address.  */\n \n #define GO_IF_LEGITIMATE_SIMPLE_ADDRESS(MODE, X, ADDR) \\\n@@ -1191,18 +1187,13 @@ __enable_execute_stack (addr)\t\t\t\t\t\t\\\n /* Now accept the simple address, or, for DImode only, an AND of a simple\n    address that turns off the low three bits.  */\n \n-extern char *current_function_name;\n-\n #define GO_IF_LEGITIMATE_ADDRESS(MODE, X, ADDR) \\\n { GO_IF_LEGITIMATE_SIMPLE_ADDRESS (MODE, X, ADDR); \\\n   if ((MODE) == DImode\t\t\t\t\\\n       && GET_CODE (X) == AND\t\t\t\\\n       && GET_CODE (XEXP (X, 1)) == CONST_INT\t\\\n       && INTVAL (XEXP (X, 1)) == -8)\t\t\\\n     GO_IF_LEGITIMATE_SIMPLE_ADDRESS (MODE, XEXP (X, 0), ADDR); \\\n-  if ((MODE) == Pmode && GET_CODE (X) == SYMBOL_REF\t\\\n-      && ! strcmp (XSTR (X, 0), current_function_name))\t\\\n-    goto ADDR;\t\t\t\t\t\\\n }\n \n /* Try machine-dependent ways of modifying an illegitimate address"}]}