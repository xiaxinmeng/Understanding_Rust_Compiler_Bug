{"sha": "0d3e9f35690a885eae4b5c69df4943ae6cc81c75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQzZTlmMzU2OTBhODg1ZWFlNGI1YzY5ZGY0OTQzYWU2Y2M4MWM3NQ==", "commit": {"author": {"name": "Steven Bosscher", "email": "stevenb@suse.de", "date": "2005-02-10T13:14:02Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2005-02-10T13:14:02Z"}, "message": "re PR preprocessor/19309 (Wrong documentation of predefined __GNUC__  with cpp invocation)\n\n\tPR documentation/19309\n\t* doc/cpp.texi: The __GNUC__ and related predefined macros\n\tare also defined for the \"standalone\" cpp.\n\tSome non-GCC compilers may also define __GNUC__.\n\nFrom-SVN: r94805", "tree": {"sha": "218de3a16145d004b56afb2af94e0ea19cf4a489", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/218de3a16145d004b56afb2af94e0ea19cf4a489"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d3e9f35690a885eae4b5c69df4943ae6cc81c75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d3e9f35690a885eae4b5c69df4943ae6cc81c75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d3e9f35690a885eae4b5c69df4943ae6cc81c75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d3e9f35690a885eae4b5c69df4943ae6cc81c75/comments", "author": null, "committer": null, "parents": [{"sha": "ccf7f8806152d202c5ef8c222bba54dd7bc109cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccf7f8806152d202c5ef8c222bba54dd7bc109cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccf7f8806152d202c5ef8c222bba54dd7bc109cc"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "e2c251a5a5d9e3cf18217f69c6e4a70a799aef53", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3e9f35690a885eae4b5c69df4943ae6cc81c75/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3e9f35690a885eae4b5c69df4943ae6cc81c75/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d3e9f35690a885eae4b5c69df4943ae6cc81c75", "patch": "@@ -1,3 +1,10 @@\n+2005-02-10  Steven Bosscher  <stevenb@suse.de>\n+\n+\tPR documentation/19309\n+\t* doc/cpp.texi: The __GNUC__ and related predefined macros\n+\tare also defined for the \"standalone\" cpp.\n+\tSome non-GCC compilers may also define __GNUC__.\n+\n 2005-02-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/19342"}, {"sha": "ea38218b8c14a25d01cda861c318ed3d7a0e694c", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d3e9f35690a885eae4b5c69df4943ae6cc81c75/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d3e9f35690a885eae4b5c69df4943ae6cc81c75/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=0d3e9f35690a885eae4b5c69df4943ae6cc81c75", "patch": "@@ -1927,16 +1927,16 @@ These macros are defined by all GNU compilers that use the C\n preprocessor: C, C++, and Objective-C@.  Their values are the major\n version, minor version, and patch level of the compiler, as integer\n constants.  For example, GCC 3.2.1 will define @code{__GNUC__} to 3,\n-@code{__GNUC_MINOR__} to 2, and @code{__GNUC_PATCHLEVEL__} to 1.  They\n-are defined only when the entire compiler is in use; if you invoke the\n-preprocessor directly, they are not defined.\n+@code{__GNUC_MINOR__} to 2, and @code{__GNUC_PATCHLEVEL__} to 1.  These\n+macros are also defined if you invoke the preprocessor directly.\n \n @code{__GNUC_PATCHLEVEL__} is new to GCC 3.0; it is also present in the\n widely-used development snapshots leading up to 3.0 (which identify\n themselves as GCC 2.96 or 2.97, depending on which snapshot you have).\n \n If all you need to know is whether or not your program is being compiled\n-by GCC, you can simply test @code{__GNUC__}.  If you need to write code\n+by GCC, or a non-GCC compiler that claims to accept the GNU C dialects,\n+you can simply test @code{__GNUC__}.  If you need to write code\n which depends on a specific version, you must be more careful.  Each\n time the minor version is increased, the patch level is reset to zero;\n each time the major version is increased (which happens rarely), the"}]}