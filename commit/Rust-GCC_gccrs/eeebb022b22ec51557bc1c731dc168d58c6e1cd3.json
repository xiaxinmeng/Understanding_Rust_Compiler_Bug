{"sha": "eeebb022b22ec51557bc1c731dc168d58c6e1cd3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWVlYmIwMjJiMjJlYzUxNTU3YmMxYzczMWRjMTY4ZDU4YzZlMWNkMw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2019-02-13T10:34:49Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2019-02-13T10:34:49Z"}, "message": "re PR c++/88986 (ICE: tree check: expected tree that contains 'decl minimal' structure, have 'error_mark' in member_vec_binary_search, at cp/name-lookup.c:1136)\n\n/cp\n2019-02-13  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/88986\n\t* decl.c (make_typename_type): Allow for TYPE_PACK_EXPANSION as\n\tcontext (the first argument).\n\t* pt.c (tsubst, case TYPENAME_TYPE): Handle TYPE_PACK_EXPANSION\n\tas context.\n\n/testsuite\n2019-02-13  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/88986\n\t* g++.dg/cpp1z/using4.C: New.\n\t* g++.dg/cpp1z/using5.C: Likewise.\n\t* g++.dg/cpp1z/using6.C: Likewise.\n\nFrom-SVN: r268839", "tree": {"sha": "c844cf39cd063eef35ab6d93d10efc6d758b5328", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c844cf39cd063eef35ab6d93d10efc6d758b5328"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eeebb022b22ec51557bc1c731dc168d58c6e1cd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeebb022b22ec51557bc1c731dc168d58c6e1cd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eeebb022b22ec51557bc1c731dc168d58c6e1cd3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeebb022b22ec51557bc1c731dc168d58c6e1cd3/comments", "author": null, "committer": null, "parents": [{"sha": "3e7f831c2a312ce3c8b0a60417a896203dcbbf56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e7f831c2a312ce3c8b0a60417a896203dcbbf56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e7f831c2a312ce3c8b0a60417a896203dcbbf56"}], "stats": {"total": 76, "additions": 73, "deletions": 3}, "files": [{"sha": "b423f7c9b1e5467ef7429953c8ab77595d8a220a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeebb022b22ec51557bc1c731dc168d58c6e1cd3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeebb022b22ec51557bc1c731dc168d58c6e1cd3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=eeebb022b22ec51557bc1c731dc168d58c6e1cd3", "patch": "@@ -1,3 +1,11 @@\n+2019-02-13  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/88986\n+\t* decl.c (make_typename_type): Allow for TYPE_PACK_EXPANSION as\n+\tcontext (the first argument).\n+\t* pt.c (tsubst, case TYPENAME_TYPE): Handle TYPE_PACK_EXPANSION\n+\tas context.\n+\n 2019-02-12  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/89144 - link error with constexpr initializer_list."}, {"sha": "31d7dc5be1e7fe5943d79a510fba32a3c5fe2c6c", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeebb022b22ec51557bc1c731dc168d58c6e1cd3/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeebb022b22ec51557bc1c731dc168d58c6e1cd3/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=eeebb022b22ec51557bc1c731dc168d58c6e1cd3", "patch": "@@ -3816,7 +3816,9 @@ make_typename_type (tree context, tree name, enum tag_types tag_type,\n   gcc_assert (identifier_p (name));\n   gcc_assert (TYPE_P (context));\n \n-  if (!MAYBE_CLASS_TYPE_P (context))\n+  if (TREE_CODE (context) == TYPE_PACK_EXPANSION)\n+    /* This can happen for C++17 variadic using (c++/88986).  */;\n+  else if (!MAYBE_CLASS_TYPE_P (context))\n     {\n       if (complain & tf_error)\n \terror (\"%q#T is not a class\", context);"}, {"sha": "e6782fe785bfa9cf70e0501e0b8b159b37f331c2", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeebb022b22ec51557bc1c731dc168d58c6e1cd3/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeebb022b22ec51557bc1c731dc168d58c6e1cd3/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=eeebb022b22ec51557bc1c731dc168d58c6e1cd3", "patch": "@@ -14928,8 +14928,25 @@ tsubst (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n \n     case TYPENAME_TYPE:\n       {\n-\ttree ctx = tsubst_aggr_type (TYPE_CONTEXT (t), args, complain,\n-\t\t\t\t     in_decl, /*entering_scope=*/1);\n+\ttree ctx = TYPE_CONTEXT (t);\n+\tif (TREE_CODE (ctx) == TYPE_PACK_EXPANSION)\n+\t  {\n+\t    ctx = tsubst_pack_expansion (ctx, args, complain, in_decl);\n+\t    if (ctx == error_mark_node\n+\t\t|| TREE_VEC_LENGTH (ctx) > 1)\n+\t      return error_mark_node;\n+\t    if (TREE_VEC_LENGTH (ctx) == 0)\n+\t      {\n+\t\tif (complain & tf_error)\n+\t\t  error (\"%qD is instantiated for an empty pack\",\n+\t\t\t TYPENAME_TYPE_FULLNAME (t));\n+\t\treturn error_mark_node;\n+\t      }\n+\t    ctx = TREE_VEC_ELT (ctx, 0);\n+\t  }\n+\telse\n+\t  ctx = tsubst_aggr_type (ctx, args, complain, in_decl,\n+\t\t\t\t  /*entering_scope=*/1);\n \tif (ctx == error_mark_node)\n \t  return error_mark_node;\n "}, {"sha": "d22149515aabf9527d0b2ba41068c9d7a36bf4f7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeebb022b22ec51557bc1c731dc168d58c6e1cd3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeebb022b22ec51557bc1c731dc168d58c6e1cd3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eeebb022b22ec51557bc1c731dc168d58c6e1cd3", "patch": "@@ -1,3 +1,10 @@\n+2019-02-13  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/88986\n+\t* g++.dg/cpp1z/using4.C: New.\n+\t* g++.dg/cpp1z/using5.C: Likewise.\n+\t* g++.dg/cpp1z/using6.C: Likewise.\n+\n 2019-02-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/89290"}, {"sha": "2c133d959f912b427f7c9e0dc091d765e45fe512", "filename": "gcc/testsuite/g++.dg/cpp1z/using4.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeebb022b22ec51557bc1c731dc168d58c6e1cd3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fusing4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeebb022b22ec51557bc1c731dc168d58c6e1cd3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fusing4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fusing4.C?ref=eeebb022b22ec51557bc1c731dc168d58c6e1cd3", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/88986\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"\" }\n+\n+struct B { typedef int type; };\n+\n+template<typename ...T> struct C : T... {\n+  using typename T::type ...;  // { dg-warning \"pack expansion\" \"\" { target c++14_down } }\n+  void f() { type value; }\n+};\n+\n+template struct C<B>;"}, {"sha": "90f37cc1be87bea28085e25e6974f76b1111c617", "filename": "gcc/testsuite/g++.dg/cpp1z/using5.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeebb022b22ec51557bc1c731dc168d58c6e1cd3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fusing5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeebb022b22ec51557bc1c731dc168d58c6e1cd3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fusing5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fusing5.C?ref=eeebb022b22ec51557bc1c731dc168d58c6e1cd3", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/88986\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"\" }\n+\n+template<typename ...T> struct C : T... {\n+  using typename T::type ...;  // { dg-warning \"pack expansion\" \"\" { target c++14_down } }\n+  void f() { type value; }  // { dg-error \"empty pack\" }\n+};\n+\n+template struct C<>;"}, {"sha": "af78d6dd90eb63e12a8d0807e47b3569b92241a4", "filename": "gcc/testsuite/g++.dg/cpp1z/using6.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeebb022b22ec51557bc1c731dc168d58c6e1cd3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fusing6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeebb022b22ec51557bc1c731dc168d58c6e1cd3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fusing6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fusing6.C?ref=eeebb022b22ec51557bc1c731dc168d58c6e1cd3", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/88986\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"\" }\n+\n+struct B1 { typedef int type; };\n+struct B2 { typedef double type; };\n+\n+template<typename ...T> struct C : T... {\n+  using typename T::type ...;  // { dg-warning \"pack expansion\" \"\" { target c++14_down } }\n+  // { dg-error \"redeclaration\" \"\" { target *-*-* } .-1 }\n+  void f() { type value; }\n+};\n+\n+template struct C<B1, B2>;"}]}