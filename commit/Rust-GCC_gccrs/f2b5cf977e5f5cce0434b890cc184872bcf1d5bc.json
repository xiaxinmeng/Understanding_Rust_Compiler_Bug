{"sha": "f2b5cf977e5f5cce0434b890cc184872bcf1d5bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJiNWNmOTc3ZTVmNWNjZTA0MzRiODkwY2MxODQ4NzJiY2YxZDViYw==", "commit": {"author": {"name": "David Ayers", "email": "d.ayers@inode.at", "date": "2004-06-17T17:41:40Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-06-17T17:41:40Z"}, "message": "* c-parse.in: Unify Objective-C token names.\n\nFrom-SVN: r83296", "tree": {"sha": "e91df3906346ca6835c345ce12ec131bf3645b14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e91df3906346ca6835c345ce12ec131bf3645b14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2b5cf977e5f5cce0434b890cc184872bcf1d5bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2b5cf977e5f5cce0434b890cc184872bcf1d5bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2b5cf977e5f5cce0434b890cc184872bcf1d5bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2b5cf977e5f5cce0434b890cc184872bcf1d5bc/comments", "author": null, "committer": null, "parents": [{"sha": "c50a01163c10c9467986f78e5a82cb4975556043", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c50a01163c10c9467986f78e5a82cb4975556043", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c50a01163c10c9467986f78e5a82cb4975556043"}], "stats": {"total": 71, "additions": 38, "deletions": 33}, "files": [{"sha": "7d206e9f615d382b8ab7be71d4e6154056f1b745", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2b5cf977e5f5cce0434b890cc184872bcf1d5bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2b5cf977e5f5cce0434b890cc184872bcf1d5bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2b5cf977e5f5cce0434b890cc184872bcf1d5bc", "patch": "@@ -1,3 +1,7 @@\n+2004-06-17  David Ayers  <d.ayers@inode.at>\n+ \n+\t* c-parse.in: Unify Objective-C token names.\n+\n 2004-06-17  Zack Weinberg  <zack@codesourcery.com>\n \n \tBug 14610"}, {"sha": "118573ced5fe6ec2412a6bacd03dc242ad46614a", "filename": "gcc/c-parse.in", "status": "modified", "additions": 34, "deletions": 33, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2b5cf977e5f5cce0434b890cc184872bcf1d5bc/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2b5cf977e5f5cce0434b890cc184872bcf1d5bc/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=f2b5cf977e5f5cce0434b890cc184872bcf1d5bc", "patch": "@@ -174,8 +174,9 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n /* The Objective-C keywords.  These are included in C and in\n    Objective C, so that the token codes are the same in both.  */\n-%token INTERFACE IMPLEMENTATION END SELECTOR DEFS ENCODE\n-%token CLASSNAME PUBLIC PRIVATE PROTECTED PROTOCOL OBJECTNAME CLASS ALIAS\n+%token AT_INTERFACE AT_IMPLEMENTATION AT_END AT_SELECTOR AT_DEFS AT_ENCODE\n+%token CLASSNAME AT_PUBLIC AT_PRIVATE AT_PROTECTED AT_PROTOCOL \n+%token OBJECTNAME AT_CLASS AT_ALIAS\n %token AT_THROW AT_TRY AT_CATCH AT_FINALLY AT_SYNCHRONIZED\n %token OBJC_STRING\n \n@@ -1760,7 +1761,7 @@ component_decl_list2:\t/* empty */\n \t\t    pedwarn (\"extra semicolon in struct or union specified\"); }\n @@ifobjc\n \t/* foo(sizeof(struct{ @defs(ClassName)})); */\n-\t| DEFS '(' CLASSNAME ')'\n+\t| AT_DEFS '(' CLASSNAME ')'\n \t\t{ $$ = nreverse (get_class_ivars_from_name ($3)); }\n @@end_ifobjc\n \t;\n@@ -2636,7 +2637,7 @@ objcdef:\n \t| aliasdecl\n \t| protocoldef\n \t| methoddef\n-\t| END\n+\t| AT_END\n \t\t{\n \t\t  if (objc_implementation_context)\n                     {\n@@ -2658,14 +2659,14 @@ identifier_list:\n \t;\n \n classdecl:\n-\t  CLASS identifier_list ';'\n+\t  AT_CLASS identifier_list ';'\n \t\t{\n \t\t  objc_declare_class ($2);\n \t\t}\n \t;\n \n aliasdecl:\n-\t  ALIAS identifier identifier ';'\n+\t  AT_ALIAS identifier identifier ';'\n \t\t{\n \t\t  objc_declare_alias ($2, $3);\n \t\t}\n@@ -2682,7 +2683,7 @@ class_ivars:\n \t;\n \n classdef:\n-\t  INTERFACE identifier superclass protocolrefs\n+\t  AT_INTERFACE identifier superclass protocolrefs\n \t\t{\n \t\t  objc_interface_context = objc_ivar_context\n \t\t    = start_class (CLASS_INTERFACE_TYPE, $2, $3, $4);\n@@ -2692,13 +2693,13 @@ classdef:\n \t\t{\n                   continue_class (objc_interface_context);\n \t\t}\n-\t  methodprotolist END\n+\t  methodprotolist AT_END\n \t\t{\n \t\t  finish_class (objc_interface_context);\n \t\t  objc_interface_context = NULL_TREE;\n \t\t}\n \n-\t| IMPLEMENTATION identifier superclass\n+\t| AT_IMPLEMENTATION identifier superclass\n \t\t{\n \t\t  objc_implementation_context = objc_ivar_context\n \t\t    = start_class (CLASS_IMPLEMENTATION_TYPE, $2, $3, NULL_TREE);\n@@ -2710,19 +2711,19 @@ classdef:\n \t\t    = continue_class (objc_implementation_context);\n \t\t}\n \n-\t| INTERFACE identifier '(' identifier ')' protocolrefs\n+\t| AT_INTERFACE identifier '(' identifier ')' protocolrefs\n \t\t{\n \t\t  objc_interface_context\n \t\t    = start_class (CATEGORY_INTERFACE_TYPE, $2, $4, $6);\n                   continue_class (objc_interface_context);\n \t\t}\n-\t  methodprotolist END\n+\t  methodprotolist AT_END\n \t\t{\n \t\t  finish_class (objc_interface_context);\n \t\t  objc_interface_context = NULL_TREE;\n \t\t}\n \n-\t| IMPLEMENTATION identifier '(' identifier ')'\n+\t| AT_IMPLEMENTATION identifier '(' identifier ')'\n \t\t{\n \t\t  objc_implementation_context\n \t\t    = start_class (CATEGORY_IMPLEMENTATION_TYPE, $2, $4, NULL_TREE);\n@@ -2732,13 +2733,13 @@ classdef:\n \t;\n \n protocoldef:\n-\t  PROTOCOL identifier protocolrefs\n+\t  AT_PROTOCOL identifier protocolrefs\n \t\t{\n \t\t  objc_pq_context = 1;\n \t\t  objc_interface_context\n \t\t    = start_protocol(PROTOCOL_INTERFACE_TYPE, $2, $3);\n \t\t}\n-\t  methodprotolist END\n+\t  methodprotolist AT_END\n \t\t{\n \t\t  objc_pq_context = 0;\n \t\t  finish_protocol(objc_interface_context);\n@@ -2747,7 +2748,7 @@ protocoldef:\n \t/* The @protocol forward-declaration production introduces a\n \t   reduce/reduce conflict on ';', which should be resolved in\n \t   favor of the production 'identifier_list -> identifier'.  */\n-\t| PROTOCOL identifier_list ';'\n+\t| AT_PROTOCOL identifier_list ';'\n \t\t{\n \t\t  objc_declare_protocols ($2);\n \t\t}\n@@ -2777,9 +2778,9 @@ ivar_decl_list:\n         ;\n \n visibility_spec:\n-\t  PRIVATE { objc_public_flag = 2; }\n-\t| PROTECTED { objc_public_flag = 0; }\n-\t| PUBLIC { objc_public_flag = 1; }\n+\t  AT_PRIVATE { objc_public_flag = 2; }\n+\t| AT_PROTECTED { objc_public_flag = 0; }\n+\t| AT_PUBLIC { objc_public_flag = 1; }\n \t;\n \n ivar_decls:\n@@ -3138,14 +3139,14 @@ keywordname:\n \t;\n \n objcselectorexpr:\n-\t  SELECTOR '(' selectorarg ')'\n+\t  AT_SELECTOR '(' selectorarg ')'\n \t\t{\n \t\t  $$ = $3;\n \t\t}\n \t;\n \n objcprotocolexpr:\n-\t  PROTOCOL '(' identifier ')'\n+\t  AT_PROTOCOL '(' identifier ')'\n \t\t{\n \t\t  $$ = $3;\n \t\t}\n@@ -3154,7 +3155,7 @@ objcprotocolexpr:\n /* extension to support C-structures in the archiver */\n \n objcencodeexpr:\n-\t  ENCODE '(' typename ')'\n+\t  AT_ENCODE '(' typename ')'\n \t\t{\n \t\t  $$ = groktypename ($3);\n \t\t}\n@@ -3411,23 +3412,23 @@ static const short rid_to_yy[RID_MAX] =\n \n   /* Objective C */\n   /* RID_ID */\t\t\tOBJECTNAME,\n-  /* RID_AT_ENCODE */\t\tENCODE,\n-  /* RID_AT_END */\t\tEND,\n-  /* RID_AT_CLASS */\t\tCLASS,\n-  /* RID_AT_ALIAS */\t\tALIAS,\n-  /* RID_AT_DEFS */\t\tDEFS,\n-  /* RID_AT_PRIVATE */\t\tPRIVATE,\n-  /* RID_AT_PROTECTED */\tPROTECTED,\n-  /* RID_AT_PUBLIC */\t\tPUBLIC,\n-  /* RID_AT_PROTOCOL */\t\tPROTOCOL,\n-  /* RID_AT_SELECTOR */\t\tSELECTOR,\n+  /* RID_AT_ENCODE */\t\tAT_ENCODE,\n+  /* RID_AT_END */\t\tAT_END,\n+  /* RID_AT_CLASS */\t\tAT_CLASS,\n+  /* RID_AT_ALIAS */\t\tAT_ALIAS,\n+  /* RID_AT_DEFS */\t\tAT_DEFS,\n+  /* RID_AT_PRIVATE */\t\tAT_PRIVATE,\n+  /* RID_AT_PROTECTED */\tAT_PROTECTED,\n+  /* RID_AT_PUBLIC */\t\tAT_PUBLIC,\n+  /* RID_AT_PROTOCOL */\t\tAT_PROTOCOL,\n+  /* RID_AT_SELECTOR */\t\tAT_SELECTOR,\n   /* RID_AT_THROW */\t\tAT_THROW,\n   /* RID_AT_TRY */\t\tAT_TRY,\n   /* RID_AT_CATCH */\t\tAT_CATCH,\n   /* RID_AT_FINALLY */\t\tAT_FINALLY,\n   /* RID_AT_SYNCHRONIZED */\tAT_SYNCHRONIZED,\n-  /* RID_AT_INTERFACE */\tINTERFACE,\n-  /* RID_AT_IMPLEMENTATION */\tIMPLEMENTATION\n+  /* RID_AT_INTERFACE */\tAT_INTERFACE,\n+  /* RID_AT_IMPLEMENTATION */\tAT_IMPLEMENTATION\n };\n \n static void"}]}