{"sha": "6e07ee6da03f7abe490b7bee89ba3270b48fe531", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUwN2VlNmRhMDNmN2FiZTQ5MGI3YmVlODliYTMyNzBiNDhmZTUzMQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2004-12-06T17:59:57Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2004-12-06T17:59:57Z"}, "message": "Make-lang.in (JAVA_MANFILES): Added gcj-dbtool.\n\n\t* Make-lang.in (JAVA_MANFILES): Added gcj-dbtool.\n\t(java.uninstall): Likewise.\n\t(java.maintainer-clean): Likewise.\n\t(.INTERMEDIATE): Likewise.\n\t(java.install-man): Likewise.\n\t(gcj-dbtool.pod): New target.\n\t* gcj.texi (Code Generation): Document -findirect-dispatch.\n\t(libgcj Runtime Properties): Document\n\tgnu.gcj.precompiled.db.path.\n\t(Top): Link to \"Invoking gcj-dbtool\".\n\nFrom-SVN: r91785", "tree": {"sha": "b3674482297cc419b36fd2b797fe766aa40e2127", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3674482297cc419b36fd2b797fe766aa40e2127"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e07ee6da03f7abe490b7bee89ba3270b48fe531", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e07ee6da03f7abe490b7bee89ba3270b48fe531", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e07ee6da03f7abe490b7bee89ba3270b48fe531", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e07ee6da03f7abe490b7bee89ba3270b48fe531/comments", "author": null, "committer": null, "parents": [{"sha": "b086a2eaf8ae0e915c0db1343687b924c680d2b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b086a2eaf8ae0e915c0db1343687b924c680d2b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b086a2eaf8ae0e915c0db1343687b924c680d2b8"}], "stats": {"total": 124, "additions": 119, "deletions": 5}, "files": [{"sha": "fb30719b99f522be1e3055c1f9b07e291f8cd029", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e07ee6da03f7abe490b7bee89ba3270b48fe531/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e07ee6da03f7abe490b7bee89ba3270b48fe531/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=6e07ee6da03f7abe490b7bee89ba3270b48fe531", "patch": "@@ -1,3 +1,16 @@\n+2004-12-06  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Make-lang.in (JAVA_MANFILES): Added gcj-dbtool.\n+\t(java.uninstall): Likewise.\n+\t(java.maintainer-clean): Likewise.\n+\t(.INTERMEDIATE): Likewise.\n+\t(java.install-man): Likewise.\n+\t(gcj-dbtool.pod): New target.\n+\t* gcj.texi (Code Generation): Document -findirect-dispatch.\n+\t(libgcj Runtime Properties): Document\n+\tgnu.gcj.precompiled.db.path.\n+\t(Top): Link to \"Invoking gcj-dbtool\".\n+\n 2004-12-06  Tom Tromey  <tromey@redhat.com>\n \n \tPR java/14853:"}, {"sha": "a9c47cf1ac39eade92a44b0f7b9f2ac23aa138cc", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e07ee6da03f7abe490b7bee89ba3270b48fe531/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e07ee6da03f7abe490b7bee89ba3270b48fe531/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=6e07ee6da03f7abe490b7bee89ba3270b48fe531", "patch": "@@ -177,7 +177,8 @@ java.srcinfo: doc/gcj.info\n dvi:: doc/gcj.dvi\n html:: $(htmldir)/java/index.html\n JAVA_MANFILES = doc/gcj.1 doc/gcjh.1 doc/jv-scan.1 doc/jcf-dump.1 doc/gij.1 \\\n-                doc/jv-convert.1 doc/grmic.1 doc/grmiregistry.1\n+                doc/jv-convert.1 doc/grmic.1 doc/grmiregistry.1 \\\n+\t\tdoc/gcj-dbtool.1\n \n java.man: $(JAVA_MANFILES)\n \n@@ -237,6 +238,7 @@ java.uninstall:\n \t-rm -rf $(DESTDIR)$(man1dir)/jcf-dump$(man1ext)\n \t-rm -rf $(DESTDIR)$(man1dir)/gij$(man1ext)\n \t-rm -rf $(DESTDIR)$(man1dir)/jv-convert$(man1ext)\n+\t-rm -rf $(DESTDIR)$(man1dir)/gcj-dbtool$(man1ext)\n \n install-info:: $(DESTDIR)$(infodir)/gcj.info\n \n@@ -261,6 +263,7 @@ java.maintainer-clean:\n \t-rm -f $(docobjdir)/jv-convert.1\n \t-rm -f $(docobjdir)/grmic.1\n \t-rm -f $(docobjdir)/grmiregistry.1\n+\t-rm -f $(docobjdir)/gcj-dbtool.1\n #\f\n # Stage hooks:\n # The main makefile has already created stage?/java.\n@@ -400,7 +403,7 @@ $(htmldir)/java/index.html: $(TEXI_JAVA_FILES)\n \t$(TEXI2HTML) -I $(docdir)/include -I $(srcdir)/java -o $(@D) $<\n \n .INTERMEDIATE: gcj.pod gcjh.pod jv-scan.pod jcf-dump.pod gij.pod \\\n-  jv-convert.pod grmic.pod grmiregistry.pod\n+  jv-convert.pod grmic.pod grmiregistry.pod gcj-dbtool.pod\n \n gcj.pod: java/gcj.texi\n \t-$(TEXI2POD) -D gcj < $< > $@\n@@ -418,14 +421,17 @@ grmic.pod: java/gcj.texi\n \t-$(TEXI2POD) -D grmic < $< > $@\n grmiregistry.pod: java/gcj.texi\n \t-$(TEXI2POD) -D grmiregistry < $< > $@\n+gcj-dbtool.pod: java/gcj.texi\n+\t-$(TEXI2POD) -D gcj-dbtool < $< > $@\n \n # Install the man pages.\n java.install-man: installdirs \\\n                   $(DESTDIR)$(man1dir)/$(JAVA_INSTALL_NAME)$(man1ext) \\\n \t\t  $(JAVA_TARGET_INDEPENDENT_BIN_TOOLS:%=doc/%.1) \\\n-\t\t  doc/gij.1 doc/jv-convert.1 doc/grmic.1 doc/grmiregistry.1\n+\t\t  doc/gij.1 doc/jv-convert.1 doc/grmic.1 doc/grmiregistry.1 \\\n+\t\t  doc/gcj-dbtool.1\n \tfor tool in $(JAVA_TARGET_INDEPENDENT_BIN_TOOLS) \\\n-\t\tgij jv-convert grmic grmiregistry ; do \\\n+\t\tgij jv-convert grmic grmiregistry gcj-dbtool ; do \\\n \t  tool_transformed_name=`echo $$tool|sed '$(program_transform_name)'`; \\\n \t  man_name=$(DESTDIR)$(man1dir)/$${tool_transformed_name}$(man1ext); \\\n \t  rm -f $$man_name ; \\"}, {"sha": "ae9cae7074174ad923215e7cedc5c3fcf23e3f9a", "filename": "gcc/java/gcj.texi", "status": "modified", "additions": 96, "deletions": 1, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e07ee6da03f7abe490b7bee89ba3270b48fe531/gcc%2Fjava%2Fgcj.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e07ee6da03f7abe490b7bee89ba3270b48fe531/gcc%2Fjava%2Fgcj.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgcj.texi?ref=6e07ee6da03f7abe490b7bee89ba3270b48fe531", "patch": "@@ -64,6 +64,8 @@ man page gfdl(7).\n * jcf-dump: (gcj)Invoking jcf-dump.\n                             Print information about Java class files\n * gij: (gcj)Invoking gij.   GNU interpreter for Java bytecode\n+* gcj-dbtool: (gcj)Invoking gcj-dbtool.\n+                            Tool for manipulating class file databases.\n * jv-convert: (gcj)Invoking jv-convert.\n                             Convert file from one encoding to another\n * grmic: (gcj)Invoking grmic.\n@@ -112,8 +114,9 @@ files and object files, and it can read both Java source code and\n * Invoking jv-scan::    Print information about source files\n * Invoking jcf-dump::   Print information about class files\n * Invoking gij::\tInterpreting Java bytecodes\n+* Invoking gcj-dbtool:: Tool for manipulating class file databases.\n * Invoking jv-convert:: Converting from one encoding to another\n-* Invoking grmic::        Generate stubs for Remote Method Invocation.\n+* Invoking grmic::      Generate stubs for Remote Method Invocation.\n * Invoking grmiregistry:: The remote object registry.\n * About CNI::           Description of the Compiled Native Interface\n * System properties::   Modifying runtime behavior of the libgcj library\n@@ -492,6 +495,23 @@ and we don't support any easy way to do that.\n So this flag isn't very useful yet, except to partially override\n @code{--disable-assertions}.\n \n+@item -findirect-dispatch\n+@command{gcj} has a special binary compatibility ABI, which is enabled\n+by the @code{-findirect-dispatch} option.  In this mode, the code\n+generated by @command{gcj} honors the binary compatibility guarantees\n+in the Java Language Specification, and the resulting object files do\n+not need to be directly linked against their dependencies.  Instead,\n+all dependencies are looked up at runtime.  This allows free mixing of\n+interpreted and compiled code.\n+\n+Note that, at present, @code{-findirect-dispatch} can only be used\n+when compiling @file{.class} files.  It will not work when compiling\n+from source.  CNI also does not yet work with the binary compatibility\n+ABI.  These restrictions will be lifted in some future release.\n+\n+However, if you compile CNI code with the standard ABI, you can call\n+it from code built with the binary compatibility ABI.\n+\n @end table\n \n \n@@ -961,6 +981,75 @@ Each time a class is initialized, print a short message on standard error.\n \n @c man end\n \n+@node Invoking gcj-dbtool\n+@chapter Invoking gcj-dbtool.\n+\n+@c man title gcj-dbtool Manipulate class file mapping databases for libgcj\n+\n+@ignore\n+@c man begin SYNOPSIS gcj-dbtool\n+gcj-dbtool @option{OPTION} @var{DBFILE} [@option{MORE}] @dots{}\n+\n+gcj-dbtool [@option{-n}] [@option{-a}] [@option{-t}] [@option{-l}]\n+  [@option{-v}] [@option{--version}] [@option{--help}]\n+\n+@c man end\n+@c man begin SEEALSO gij\n+gcc(1), gcj(1), gcjh(1), jv-scan(1), jcf-dump(1), gfdl(7),\n+and the Info entries for @file{gcj} and @file{gcc}.\n+@c man end\n+@end ignore\n+\n+@c man begin DESCRIPTION gcj-dbtool\n+\n+@code{gcj-dbtool} is a tool for creating and manipulating class file\n+mapping databases.  @code{libgcj} can use these databases to find a\n+shared library corresponding to the bytecode representation of a\n+class.  This functionality is useful for ahead-of-time compilation of\n+a program that has no knowledge of @code{gcj}.\n+\n+@code{gcj-dbtool} works best if all the jar files added to it are\n+compiled using @code{-findirect-dispatch}.\n+\n+Note that @code{gcj-dbtool} is currently available as ``preview\n+technology''.  We believe it is a reasonable way to allow\n+application-transparent ahead-of-time compilation, but this is an\n+unexplored area.  We welcome your comments.\n+\n+@c man end\n+\n+@c man begin OPTIONS gcj-dbtool\n+\n+@table @gcctabopt\n+@item -n @var{DBFILE} [@var{SIZE}]\n+This creates a new database.  Currently, databases cannot be resized;\n+you can choose a larger initial size if desired.  The default size is\n+32,749.\n+\n+@item -a @var{DBFILE} @var{JARFILE} @var{LIB}\n+This adds a jar file to the database.  For each class file in the jar,\n+a cryptographic signature of the bytecode representation of the class\n+is recorded in the database.  At runtime, a class is looked up by its\n+signature and the compiled form of the class is looked for in the\n+corresponding shared library.\n+\n+@item -t @var{DBFILE}\n+Test a database.\n+\n+@item -l @var{DBFILE}\n+List the contents of a database.\n+\n+@item --help\n+Print a help message, then exit.\n+\n+@item --version\n+@itemx -v\n+Print version information, then exit.\n+\n+@end table\n+\n+@c man end\n+\n @node Invoking jv-convert\n @chapter Invoking jv-convert\n \n@@ -2404,6 +2493,12 @@ This is the directory where cached shared library files are\n stored.  If not set, JIT compilation is disabled.  This should never\n be set to a directory that is writable by any other user.\n \n+@item gnu.gcj.precompiled.db.path\n+This is a sequence of file names, each referring to a file created by\n+@command{gcj-dbtool}.  These files will be used by @code{libgcj} to\n+find shared libraries corresponding to classes that are loaded from\n+bytecode.\n+\n @end table\n \n "}]}