{"sha": "5c171a745d5975a6e9c2505235fa3b9013caed22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWMxNzFhNzQ1ZDU5NzVhNmU5YzI1MDUyMzVmYTNiOTAxM2NhZWQyMg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-07-09T21:26:19Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-07-09T21:26:19Z"}, "message": "locale_facets.tcc (__int_to_char<>(_CharT*, long, const _CharT*, ios_base::fmtflags), [...]): Remove.\n\n2006-07-09  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/locale_facets.tcc (__int_to_char<>(_CharT*,\n\tlong, const _CharT*, ios_base::fmtflags), __int_to_char<>(_CharT*,\n\tunsigned long, const _CharT*, ios_base::fmtflags),\n\t__int_to_char<>(_CharT*, long long, const _CharT*, ios_base::fmtflags),\n\t__int_to_char<>(_CharT*, unsigned long long, const _CharT*,\n\tios_base::fmtflags)): Remove.\n\t(__int_to_char<>(_CharT*, _ValueT, const _CharT*, ios_base::fmtflags,\n\tbool)): Adjust.\n\t(num_put<>::_M_insert_int(_OutIter, ios_base&, _CharT, _ValueT)):\n\tLikewise.\n\nFrom-SVN: r115298", "tree": {"sha": "eb2884c9c43d3a8c3d6b5d26928d43dcec98d1b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb2884c9c43d3a8c3d6b5d26928d43dcec98d1b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c171a745d5975a6e9c2505235fa3b9013caed22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c171a745d5975a6e9c2505235fa3b9013caed22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c171a745d5975a6e9c2505235fa3b9013caed22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c171a745d5975a6e9c2505235fa3b9013caed22/comments", "author": null, "committer": null, "parents": [{"sha": "3f01f6f15d6289465e1062565bf4ffa144cef138", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f01f6f15d6289465e1062565bf4ffa144cef138", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f01f6f15d6289465e1062565bf4ffa144cef138"}], "stats": {"total": 79, "additions": 24, "deletions": 55}, "files": [{"sha": "d7a5f09ffede135a5896c1778c1571fe1ff64b84", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c171a745d5975a6e9c2505235fa3b9013caed22/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c171a745d5975a6e9c2505235fa3b9013caed22/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5c171a745d5975a6e9c2505235fa3b9013caed22", "patch": "@@ -1,3 +1,16 @@\n+2006-07-09  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/locale_facets.tcc (__int_to_char<>(_CharT*,\n+\tlong, const _CharT*, ios_base::fmtflags), __int_to_char<>(_CharT*,\n+\tunsigned long, const _CharT*, ios_base::fmtflags),\n+\t__int_to_char<>(_CharT*, long long, const _CharT*, ios_base::fmtflags),\n+\t__int_to_char<>(_CharT*, unsigned long long, const _CharT*,\n+\tios_base::fmtflags)): Remove.\n+\t(__int_to_char<>(_CharT*, _ValueT, const _CharT*, ios_base::fmtflags,\n+\tbool)): Adjust.\n+\t(num_put<>::_M_insert_int(_OutIter, ios_base&, _CharT, _ValueT)):\n+\tLikewise.\n+\n 2006-07-06  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/random (class gamma_distribution<>): Add."}, {"sha": "a889e0134ecabcf93681eeca945addfcbb726281", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 11, "deletions": 55, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c171a745d5975a6e9c2505235fa3b9013caed22/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c171a745d5975a6e9c2505235fa3b9013caed22/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=5c171a745d5975a6e9c2505235fa3b9013caed22", "patch": "@@ -925,60 +925,13 @@ _GLIBCXX_BEGIN_LDBL_NAMESPACE\n \n _GLIBCXX_END_LDBL_NAMESPACE\n \n-  // Forwarding functions to peel signed from unsigned integer types and\n-  // either cast or compute the absolute value for the former, depending\n-  // on __basefield.\n-  template<typename _CharT>\n-    inline int\n-    __int_to_char(_CharT* __bufend, long __v, const _CharT* __lit,\n-\t\t  ios_base::fmtflags __flags)\n-    {\n-      unsigned long __ul = __v;\n-      const ios_base::fmtflags __basefield = __flags & ios_base::basefield;\n-      if (__builtin_expect(__basefield != ios_base::oct\n-\t\t\t   && __basefield != ios_base::hex, true))\n-\t__ul = __v < 0 ? -__v : __ul;\n-      return __int_to_char(__bufend, __ul, __lit, __flags, false);\n-    }\n-\n-  template<typename _CharT>\n-    inline int\n-    __int_to_char(_CharT* __bufend, unsigned long __v, const _CharT* __lit,\n-\t\t  ios_base::fmtflags __flags)\n-    { return __int_to_char(__bufend, __v, __lit, __flags, false); }\n-\n-#ifdef _GLIBCXX_USE_LONG_LONG\n-  template<typename _CharT>\n-    inline int\n-    __int_to_char(_CharT* __bufend, long long __v, const _CharT* __lit,\n-\t\t  ios_base::fmtflags __flags)\n-    {\n-      unsigned long long __ull = __v;\n-      const ios_base::fmtflags __basefield = __flags & ios_base::basefield;\n-      if (__builtin_expect(__basefield != ios_base::oct\n-\t\t\t   && __basefield != ios_base::hex, true))\n-\t__ull = __v < 0 ? -__v : __ull;\n-      return __int_to_char(__bufend, __ull, __lit, __flags, false);\n-    }\n-\n-  template<typename _CharT>\n-    inline int\n-    __int_to_char(_CharT* __bufend, unsigned long long __v, \n-\t\t  const _CharT* __lit, ios_base::fmtflags __flags)\n-    { return __int_to_char(__bufend, __v, __lit, __flags, false); }\n-#endif\n-\n-  // N.B. The last argument is currently unused (see libstdc++/20914).\n   template<typename _CharT, typename _ValueT>\n     int\n     __int_to_char(_CharT* __bufend, _ValueT __v, const _CharT* __lit,\n-\t\t  ios_base::fmtflags __flags, bool)\n+\t\t  ios_base::fmtflags __flags, bool __dec)\n     {\n-      const ios_base::fmtflags __basefield = __flags & ios_base::basefield;\n       _CharT* __buf = __bufend;\n-\n-      if (__builtin_expect(__basefield != ios_base::oct\n-\t\t\t   && __basefield != ios_base::hex, true))\n+      if (__builtin_expect(__dec, true))\n \t{\n \t  // Decimal.\n \t  do\n@@ -988,7 +941,7 @@ _GLIBCXX_END_LDBL_NAMESPACE\n \t    }\n \t  while (__v != 0);\n \t}\n-      else if (__basefield == ios_base::oct)\n+      else if ((__flags & ios_base::basefield) == ios_base::oct)\n \t{\n \t  // Octal.\n \t  do\n@@ -1034,7 +987,8 @@ _GLIBCXX_BEGIN_LDBL_NAMESPACE\n       _M_insert_int(_OutIter __s, ios_base& __io, _CharT __fill,\n \t\t    _ValueT __v) const\n       {\n-\ttypedef __numpunct_cache<_CharT>\t        __cache_type;\n+\ttypedef typename __to_unsigned_type<_ValueT>::__type __unsigned_type;\n+\ttypedef __numpunct_cache<_CharT>\t             __cache_type;\n \t__use_cache<__cache_type> __uc;\n \tconst locale& __loc = __io._M_getloc();\n \tconst __cache_type* __lc = __uc(__loc);\n@@ -1048,7 +1002,11 @@ _GLIBCXX_BEGIN_LDBL_NAMESPACE\n \n \t// [22.2.2.2.2] Stage 1, numeric conversion to character.\n \t// Result is returned right-justified in the buffer.\n-\tint __len = __int_to_char(__cs + __ilen, __v, __lit, __flags);\n+\tconst ios_base::fmtflags __basefield = __flags & ios_base::basefield;\n+\tconst bool __dec = (__basefield != ios_base::oct\n+\t\t\t    && __basefield != ios_base::hex);\n+\tconst __unsigned_type __u = (__v > 0 || !__dec) ? __v : -__v;\n+ \tint __len = __int_to_char(__cs + __ilen, __u, __lit, __flags, __dec);\n \t__cs += __ilen - __len;\n \n \t// Add grouping, if necessary.\n@@ -1065,9 +1023,7 @@ _GLIBCXX_BEGIN_LDBL_NAMESPACE\n \t  }\n \n \t// Complete Stage 1, prepend numeric base or sign.\n-\tconst ios_base::fmtflags __basefield = __flags & ios_base::basefield;\n-\tif (__builtin_expect(__basefield != ios_base::oct\n-\t\t\t     && __basefield != ios_base::hex, true))\n+\tif (__builtin_expect(__dec, true))\n \t  {\n \t    // Decimal.\n \t    if (__v > 0)"}]}