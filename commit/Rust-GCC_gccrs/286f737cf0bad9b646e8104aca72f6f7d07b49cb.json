{"sha": "286f737cf0bad9b646e8104aca72f6f7d07b49cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg2ZjczN2NmMGJhZDliNjQ2ZTgxMDRhY2E3MmY2ZjdkMDdiNDljYg==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2018-05-22T05:41:45Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2018-05-22T05:41:45Z"}, "message": "re PR fortran/85841 ([F2018] reject deleted features)\n\n2018-05-22  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/85841\n\t* libgfortran.h: Remove the macros GFC_STD_F2008_TS and\n\tGFC_STD_OPT_F08TS.\n\t* error.c (notify_std_msg): Remove GFC_STD_F2008_TS.\n\t* options.c (set_default_std_flags): Ditto.\n\t(gfc_handle_option): Make -std=f2008ts an alias for -std=f2018.\n\t* array.c (gfc_match_array_spec): Replace GFC_STD_F2008_TS by\n\tGFC_STD_F2018.\n\t* check.c (gfc_check_atomic, gfc_check_event_query,\n\tgfc_check_c_f_pointer, gfc_check_c_f_procpointer, gfc_check_c_funloc,\n\tgfc_check_c_loc, gfc_check_num_images, gfc_check_this_image): Ditto.\n\t* decl.c (gfc_verify_c_interop_param, gfc_match_decl_type_spec): Ditto.\n\t* intrinsic.c (add_functions, add_subroutines,\n\tgfc_check_intrinsic_standard): Ditto.\n\t* iso-c-binding.def: Ditto.\n\t* iso-fortran-env.def: Ditto.\n\t* match.c (gfc_match_event_post, gfc_match_event_wait,\n\tgfc_match_fail_image, gfc_match_form_team, gfc_match_change_team,\n\tgfc_match_end_team, gfc_match_sync_team): Ditto.\n\t* gfortran.texi: Remove mention of -std=f2008ts.\n\tMove TSs into F2018 section.\n\t* invoke.texi: Update documentation of -std=f2008ts.\n\n\n2018-05-22  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/85841\n\t* gfortran.dg/assumed_rank_5.f90: Update error message.\n\t* gfortran.dg/assumed_type_4.f90: Ditto.\n\t* gfortran.dg/bind_c_array_params.f03: Ditto.\n\t* gfortran.dg/bind_c_usage_28.f90: Ditto.\n\t* gfortran.dg/c_funloc_tests_5.f03: Ditto.\n\t* gfortran.dg/c_funloc_tests_6.f90: Ditto.\n\t* gfortran.dg/c_loc_tests_11.f03: Ditto.\n\t* gfortran.dg/coarray_atomic_2.f90: Ditto.\n\t* gfortran.dg/coarray_collectives_2.f90: Ditto.\n\t* gfortran.dg/coarray_collectives_10.f90: Ditto.\n\t* gfortran.dg/coarray_collectives_13.f90: Ditto.\n\t* gfortran.dg/rank_3.f90: Ditto.\n\t* gfortran.dg/error_stop_4.f90: Replace -std=f2008ts by -std=f2008.\n\t* gfortran.dg/implicit_14.f90: Ditto.\n\nFrom-SVN: r260499", "tree": {"sha": "ca1c8f6898a8f7e6a833fbe15746e532af613d3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca1c8f6898a8f7e6a833fbe15746e532af613d3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/286f737cf0bad9b646e8104aca72f6f7d07b49cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/286f737cf0bad9b646e8104aca72f6f7d07b49cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/286f737cf0bad9b646e8104aca72f6f7d07b49cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/286f737cf0bad9b646e8104aca72f6f7d07b49cb/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9687412cece7a989005b9e53108c02d54ca89623", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9687412cece7a989005b9e53108c02d54ca89623", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9687412cece7a989005b9e53108c02d54ca89623"}], "stats": {"total": 291, "additions": 158, "deletions": 133}, "files": [{"sha": "00abe73f15a7a9ccf8f53b2205e0613aee8aa33a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -1,3 +1,28 @@\n+2018-05-22  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/85841\n+\t* libgfortran.h: Remove the macros GFC_STD_F2008_TS and\n+\tGFC_STD_OPT_F08TS.\n+\t* error.c (notify_std_msg): Remove GFC_STD_F2008_TS.\n+\t* options.c (set_default_std_flags): Ditto.\n+\t(gfc_handle_option): Make -std=f2008ts an alias for -std=f2018.\n+\t* array.c (gfc_match_array_spec): Replace GFC_STD_F2008_TS by\n+\tGFC_STD_F2018.\n+\t* check.c (gfc_check_atomic, gfc_check_event_query,\n+\tgfc_check_c_f_pointer, gfc_check_c_f_procpointer, gfc_check_c_funloc,\n+\tgfc_check_c_loc, gfc_check_num_images, gfc_check_this_image): Ditto.\n+\t* decl.c (gfc_verify_c_interop_param, gfc_match_decl_type_spec): Ditto.\n+\t* intrinsic.c (add_functions, add_subroutines,\n+\tgfc_check_intrinsic_standard): Ditto.\n+\t* iso-c-binding.def: Ditto.\n+\t* iso-fortran-env.def: Ditto.\n+\t* match.c (gfc_match_event_post, gfc_match_event_wait,\n+\tgfc_match_fail_image, gfc_match_form_team, gfc_match_change_team,\n+\tgfc_match_end_team, gfc_match_sync_team): Ditto.\n+\t* gfortran.texi: Remove mention of -std=f2008ts.\n+\tMove TSs into F2018 section.\n+\t* invoke.texi: Update documentation of -std=f2008ts.\n+\n 2018-05-21  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/85841"}, {"sha": "36b809e38188ce2138ac027df6229ca187d68fa1", "filename": "gcc/fortran/array.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ffortran%2Farray.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ffortran%2Farray.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farray.c?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -533,7 +533,7 @@ gfc_match_array_spec (gfc_array_spec **asp, bool match_dim, bool match_codim)\n       as->type = AS_ASSUMED_RANK;\n       as->rank = -1;\n \n-      if (!gfc_notify_std (GFC_STD_F2008_TS, \"Assumed-rank array at %C\"))\n+      if (!gfc_notify_std (GFC_STD_F2018, \"Assumed-rank array at %C\"))\n \tgoto cleanup;\n \n       if (!match_codim)"}, {"sha": "8d41fcd292f9217a897fec8945a70c1d82550218", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -1136,7 +1136,7 @@ gfc_check_atomic (gfc_expr *atom, int atom_no, gfc_expr *value, int val_no,\n       if (!kind_value_check (stat, stat_no, gfc_default_integer_kind))\n \treturn false;\n \n-      if (!gfc_notify_std (GFC_STD_F2008_TS, \"STAT= argument to %s at %L\",\n+      if (!gfc_notify_std (GFC_STD_F2018, \"STAT= argument to %s at %L\",\n \t\t\t   gfc_current_intrinsic, &stat->where))\n \treturn false;\n     }\n@@ -1349,7 +1349,7 @@ gfc_check_event_query (gfc_expr *event, gfc_expr *count, gfc_expr *stat)\n       if (!variable_check (stat, 2, false))\n \treturn false;\n \n-      if (!gfc_notify_std (GFC_STD_F2008_TS, \"STAT= argument to %s at %L\",\n+      if (!gfc_notify_std (GFC_STD_F2018, \"STAT= argument to %s at %L\",\n \t\t\t   gfc_current_intrinsic, &stat->where))\n \treturn false;\n     }\n@@ -4745,7 +4745,7 @@ gfc_check_c_f_pointer (gfc_expr *cptr, gfc_expr *fptr, gfc_expr *shape)\n     }\n \n   if (fptr->rank > 0 && !is_c_interoperable (fptr, &msg, false, true))\n-    return gfc_notify_std (GFC_STD_F2008_TS, \"Noninteroperable array FPTR \"\n+    return gfc_notify_std (GFC_STD_F2018, \"Noninteroperable array FPTR \"\n \t\t\t   \"at %L to C_F_POINTER: %s\", &fptr->where, msg);\n \n   return true;\n@@ -4786,7 +4786,7 @@ gfc_check_c_f_procpointer (gfc_expr *cptr, gfc_expr *fptr)\n     }\n \n   if (!attr.is_bind_c)\n-    return gfc_notify_std (GFC_STD_F2008_TS, \"Noninteroperable procedure \"\n+    return gfc_notify_std (GFC_STD_F2018, \"Noninteroperable procedure \"\n \t\t\t   \"pointer at %L to C_F_PROCPOINTER\", &fptr->where);\n \n   return true;\n@@ -4829,7 +4829,7 @@ gfc_check_c_funloc (gfc_expr *x)\n     }\n \n   if (!attr.is_bind_c)\n-    return gfc_notify_std (GFC_STD_F2008_TS, \"Noninteroperable procedure \"\n+    return gfc_notify_std (GFC_STD_F2018, \"Noninteroperable procedure \"\n \t\t\t   \"at %L to C_FUNLOC\", &x->where);\n   return true;\n }\n@@ -4883,7 +4883,7 @@ gfc_check_c_loc (gfc_expr *x)\n \t}\n \n       if (x->rank\n-\t  && !gfc_notify_std (GFC_STD_F2008_TS,\n+\t  && !gfc_notify_std (GFC_STD_F2018,\n \t\t\t      \"Noninteroperable array at %L as\"\n \t\t\t      \" argument to C_LOC: %s\", &x->where, msg))\n \t  return false;\n@@ -5267,7 +5267,7 @@ gfc_check_num_images (gfc_expr *distance, gfc_expr *failed)\n       if (!scalar_check (distance, 0))\n \treturn false;\n \n-      if (!gfc_notify_std (GFC_STD_F2008_TS, \"DISTANCE= argument to \"\n+      if (!gfc_notify_std (GFC_STD_F2018, \"DISTANCE= argument to \"\n \t\t\t   \"NUM_IMAGES at %L\", &distance->where))\n \treturn false;\n     }\n@@ -5280,7 +5280,7 @@ gfc_check_num_images (gfc_expr *distance, gfc_expr *failed)\n       if (!scalar_check (failed, 1))\n \treturn false;\n \n-      if (!gfc_notify_std (GFC_STD_F2008_TS, \"FAILED= argument to \"\n+      if (!gfc_notify_std (GFC_STD_F2018, \"FAILED= argument to \"\n \t\t\t   \"NUM_IMAGES at %L\", &failed->where))\n \treturn false;\n     }\n@@ -5366,7 +5366,7 @@ gfc_check_this_image (gfc_expr *coarray, gfc_expr *dim, gfc_expr *distance)\n       if (!scalar_check (distance, 2))\n \treturn false;\n \n-      if (!gfc_notify_std (GFC_STD_F2008_TS, \"DISTANCE= argument to \"\n+      if (!gfc_notify_std (GFC_STD_F2018, \"DISTANCE= argument to \"\n \t\t\t   \"THIS_IMAGE at %L\", &distance->where))\n \treturn false;\n "}, {"sha": "2f903300bab58b1e36154100e89234e34ab4810d", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -1401,15 +1401,15 @@ gfc_verify_c_interop_param (gfc_symbol *sym)\n \t     not have the allocatable, pointer, or optional attributes,\n \t     according to J3/04-007, section 5.1.  */\n \t  if (sym->attr.allocatable == 1\n-\t      && !gfc_notify_std (GFC_STD_F2008_TS, \"Variable %qs at %L with \"\n+\t      && !gfc_notify_std (GFC_STD_F2018, \"Variable %qs at %L with \"\n \t\t\t\t  \"ALLOCATABLE attribute in procedure %qs \"\n \t\t\t\t  \"with BIND(C)\", sym->name,\n \t\t\t\t  &(sym->declared_at),\n \t\t\t\t  sym->ns->proc_name->name))\n \t    retval = false;\n \n \t  if (sym->attr.pointer == 1\n-\t      && !gfc_notify_std (GFC_STD_F2008_TS, \"Variable %qs at %L with \"\n+\t      && !gfc_notify_std (GFC_STD_F2018, \"Variable %qs at %L with \"\n \t\t\t\t  \"POINTER attribute in procedure %qs \"\n \t\t\t\t  \"with BIND(C)\", sym->name,\n \t\t\t\t  &(sym->declared_at),\n@@ -1434,7 +1434,7 @@ gfc_verify_c_interop_param (gfc_symbol *sym)\n \t      retval = false;\n \t    }\n \t  else if (sym->attr.optional == 1\n-\t\t   && !gfc_notify_std (GFC_STD_F2008_TS, \"Variable %qs \"\n+\t\t   && !gfc_notify_std (GFC_STD_F2018, \"Variable %qs \"\n \t\t\t\t       \"at %L with OPTIONAL attribute in \"\n \t\t\t\t       \"procedure %qs which is BIND(C)\",\n \t\t\t\t       sym->name, &(sym->declared_at),\n@@ -1445,7 +1445,7 @@ gfc_verify_c_interop_param (gfc_symbol *sym)\n \t     either assumed size or explicit shape. Deferred shape is already\n \t     covered by the pointer/allocatable attribute.  */\n \t  if (sym->as != NULL && sym->as->type == AS_ASSUMED_SHAPE\n-\t      && !gfc_notify_std (GFC_STD_F2008_TS, \"Assumed-shape array %qs \"\n+\t      && !gfc_notify_std (GFC_STD_F2018, \"Assumed-shape array %qs \"\n \t\t\t\t  \"at %L as dummy argument to the BIND(C) \"\n \t\t\t\t  \"procedure %qs at %L\", sym->name,\n \t\t\t\t  &(sym->declared_at),\n@@ -3846,8 +3846,7 @@ gfc_match_decl_type_spec (gfc_typespec *ts, int implicit_flag)\n \t      gfc_error (\"Assumed type at %C is not allowed for components\");\n \t      return MATCH_ERROR;\n \t    }\n-\t  if (!gfc_notify_std (GFC_STD_F2008_TS, \"Assumed type \"\n-\t\t\t       \"at %C\"))\n+\t  if (!gfc_notify_std (GFC_STD_F2018, \"Assumed type at %C\"))\n \t    return MATCH_ERROR;\n \t  ts->type = BT_ASSUMED;\n \t  return MATCH_YES;"}, {"sha": "7e882ba76bf91eabfbba5cf5ab5eb3b7d90d739c", "filename": "gcc/fortran/error.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ffortran%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ffortran%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ferror.c?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -855,8 +855,6 @@ notify_std_msg(int std)\n     return _(\"Fortran 2018 obsolescent feature:\");\n   else if (std & GFC_STD_F2018)\n     return _(\"Fortran 2018:\");\n-  else if (std & GFC_STD_F2008_TS)\n-    return \"TS 29113/TS 18508:\";\n   else if (std & GFC_STD_F2008_OBS)\n     return _(\"Fortran 2008 obsolescent feature:\");\n   else if (std & GFC_STD_F2008)"}, {"sha": "1aa2bb2f0c684bbb0ad628e877a4477a5ad3fe2d", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 26, "deletions": 31, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -533,8 +533,7 @@ Specification @code{Further Interoperability of Fortran with C}\n (ISO/IEC TS 29113:2012).  Full support of those standards and future\n Fortran standards is planned.  The current status of the support is\n can be found in the @ref{Fortran 2003 status}, @ref{Fortran 2008\n-status}, @ref{TS 29113 status}, @ref{TS 18508 status} and @ref{Fortran\n-2018 status} sections of the documentation.\n+status} and @ref{Fortran 2018 status} sections of the documentation.\n \n Additionally, the GNU Fortran compilers supports the OpenMP specification\n (version 4.0 and most of the features of the 4.5 version,\n@@ -793,8 +792,6 @@ compile option was used.\n @menu\n * Fortran 2003 status::\n * Fortran 2008 status::\n-* TS 29113 status::\n-* TS 18508 status::\n * Fortran 2018 status::\n @end menu\n \n@@ -1096,8 +1093,29 @@ arrays are supported for named constants (@code{PARAMETER}).\n \n \n \n-@node TS 29113 status\n-@section Technical Specification 29113 Status\n+@node Fortran 2018 status\n+@section Status of Fortran 2018 support\n+\n+So far very little work has been done to support Fortran 2018.\n+\n+@itemize\n+@item ERROR STOP in a PURE procedure\n+An @code{ERROR STOP} statement is permitted in a @code{PURE}\n+procedure.\n+\n+@item IMPLICIT NONE with a spec-list\n+Support the @code{IMPLICIT NONE} statement with an\n+@code{implicit-none-spec-list}.\n+\n+@item Behavior of INQUIRE with the RECL= specifier\n+\n+The behavior of the @code{INQUIRE} statement with the @code{RECL=}\n+specifier now conforms to Fortran 2018.\n+\n+@end itemize\n+\n+\n+@subsection TS 29113 Status (Further Interoperability with C)\n \n GNU Fortran supports some of the new features of the Technical\n Specification (TS) 29113 on Further Interoperability of Fortran with C.\n@@ -1108,8 +1126,6 @@ following is implemented.\n See also @ref{Further Interoperability of Fortran with C}.\n \n @itemize\n-@item The @option{-std=f2008ts} option.\n-\n @item The @code{OPTIONAL} attribute is allowed for dummy arguments\n of @code{BIND(C) procedures.}\n \n@@ -1125,8 +1141,8 @@ of the TS is not yet supported.\n @end itemize\n \n \n-@node TS 18508 status\n-@section Technical Specification 18508 Status\n+\n+@subsection TS 18508 Status (Additional Parallel Features)\n \n GNU Fortran supports the following new features of the Technical\n Specification 18508 on Additional Parallel Features in Fortran:\n@@ -1147,27 +1163,6 @@ polymorphic components.\n @end itemize\n \n \n-@node Fortran 2018 status\n-@section Status of Fortran 2018 support\n-\n-So far very little work has been done to support Fortran 2018.\n-\n-@itemize\n-@item ERROR STOP in a PURE procedure\n-An @code{ERROR STOP} statement is permitted in a @code{PURE}\n-procedure.\n-\n-@item IMPLICIT NONE with a spec-list\n-Support the @code{IMPLICIT NONE} statement with an\n-@code{implicit-none-spec-list}.\n-\n-@item Behavior of INQUIRE with the RECL= specifier\n-\n-The behavior of the @code{INQUIRE} statement with the @code{RECL=}\n-specifier now conforms to Fortran 2018.\n-\n-@end itemize\n-\n @c ---------------------------------------------------------------------\n @c Compiler Characteristics\n @c ---------------------------------------------------------------------"}, {"sha": "8dd135f6b42ed3b984ae342f45db18d9a5b389be", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -1849,7 +1849,7 @@ add_functions (void)\n \t     mo, BT_UNKNOWN, 0, REQUIRED);\n \n   add_sym_2 (\"failed_images\", GFC_ISYM_FAILED_IMAGES, CLASS_TRANSFORMATIONAL,\n-\t     ACTUAL_NO, BT_INTEGER, dd, GFC_STD_F2008_TS,\n+\t     ACTUAL_NO, BT_INTEGER, dd, GFC_STD_F2018,\n \t     gfc_check_failed_or_stopped_images,\n \t     gfc_simplify_failed_or_stopped_images,\n \t     gfc_resolve_failed_images, team, BT_VOID, di, OPTIONAL,\n@@ -1947,7 +1947,7 @@ add_functions (void)\n   make_generic (\"getpid\", GFC_ISYM_GETPID, GFC_STD_GNU);\n \n   add_sym_1 (\"get_team\", GFC_ISYM_GET_TEAM, CLASS_TRANSFORMATIONAL,\n-\t     ACTUAL_NO, BT_INTEGER, di, GFC_STD_F2008_TS,\n+\t     ACTUAL_NO, BT_INTEGER, di, GFC_STD_F2018,\n \t     gfc_check_get_team, NULL, gfc_resolve_get_team,\n \t     level, BT_INTEGER, di, OPTIONAL);\n \n@@ -2102,7 +2102,7 @@ add_functions (void)\n \t     ca, BT_REAL, dr, REQUIRED, sub, BT_INTEGER, ii, REQUIRED);\n \n   add_sym_2 (\"image_status\", GFC_ISYM_IMAGE_STATUS, CLASS_ELEMENTAL, ACTUAL_NO,\n-\t     BT_INTEGER, di, GFC_STD_F2008_TS, gfc_check_image_status,\n+\t     BT_INTEGER, di, GFC_STD_F2018, gfc_check_image_status,\n \t     gfc_simplify_image_status, gfc_resolve_image_status, image,\n \t     BT_INTEGER, di, REQUIRED, team, BT_VOID, di, OPTIONAL);\n \n@@ -2715,9 +2715,9 @@ add_functions (void)\n   make_generic (\"range\", GFC_ISYM_RANGE, GFC_STD_F95);\n \n   add_sym_1 (\"rank\", GFC_ISYM_RANK, CLASS_INQUIRY, ACTUAL_NO, BT_INTEGER, di,\n-\t     GFC_STD_F2008_TS, gfc_check_rank, gfc_simplify_rank, gfc_resolve_rank,\n+\t     GFC_STD_F2018, gfc_check_rank, gfc_simplify_rank, gfc_resolve_rank,\n \t     a, BT_REAL, dr, REQUIRED);\n-  make_generic (\"rank\", GFC_ISYM_RANK, GFC_STD_F2008_TS);\n+  make_generic (\"rank\", GFC_ISYM_RANK, GFC_STD_F2018);\n \n   add_sym_2 (\"real\", GFC_ISYM_REAL, CLASS_ELEMENTAL, ACTUAL_NO, BT_REAL, dr, GFC_STD_F77,\n \t     gfc_check_real, gfc_simplify_real, gfc_resolve_real,\n@@ -3017,7 +3017,7 @@ add_functions (void)\n   make_generic (\"stat\", GFC_ISYM_STAT, GFC_STD_GNU);\n \n   add_sym_2 (\"stopped_images\", GFC_ISYM_STOPPED_IMAGES, CLASS_TRANSFORMATIONAL,\n-\t     ACTUAL_NO, BT_INTEGER, dd, GFC_STD_F2008_TS,\n+\t     ACTUAL_NO, BT_INTEGER, dd, GFC_STD_F2018,\n \t     gfc_check_failed_or_stopped_images,\n \t     gfc_simplify_failed_or_stopped_images,\n \t     gfc_resolve_stopped_images, team, BT_VOID, di, OPTIONAL,\n@@ -3070,7 +3070,7 @@ add_functions (void)\n   make_generic (\"tanh\", GFC_ISYM_TANH, GFC_STD_F77);\n \n   add_sym_1 (\"team_number\", GFC_ISYM_TEAM_NUMBER, CLASS_TRANSFORMATIONAL,\n-\t     ACTUAL_YES, BT_INTEGER, di, GFC_STD_F2008_TS,\n+\t     ACTUAL_YES, BT_INTEGER, di, GFC_STD_F2018,\n \t     gfc_check_team_number, NULL, gfc_resolve_team_number,\n \t     team, BT_DERIVED, di, OPTIONAL);\n \n@@ -3344,7 +3344,7 @@ add_subroutines (void)\n \t      stat, BT_INTEGER, di, OPTIONAL, INTENT_OUT);\n \n   add_sym_5s (\"atomic_cas\", GFC_ISYM_ATOMIC_CAS, CLASS_ATOMIC,\n-\t      BT_UNKNOWN, 0, GFC_STD_F2008_TS,\n+\t      BT_UNKNOWN, 0, GFC_STD_F2018,\n \t      gfc_check_atomic_cas, NULL, NULL,\n \t      \"atom\", BT_INTEGER, di, REQUIRED, INTENT_INOUT,\n \t      \"old\", BT_INTEGER, di, REQUIRED, INTENT_OUT,\n@@ -3353,59 +3353,59 @@ add_subroutines (void)\n \t      stat, BT_INTEGER, di, OPTIONAL, INTENT_OUT);\n \n   add_sym_3s (\"atomic_add\", GFC_ISYM_ATOMIC_ADD, CLASS_ATOMIC,\n-\t      BT_UNKNOWN, 0, GFC_STD_F2008_TS,\n+\t      BT_UNKNOWN, 0, GFC_STD_F2018,\n \t      gfc_check_atomic_op, NULL, NULL,\n \t      \"atom\", BT_INTEGER, di, REQUIRED, INTENT_OUT,\n \t      \"value\", BT_INTEGER, di, REQUIRED, INTENT_IN,\n \t      stat, BT_INTEGER, di, OPTIONAL, INTENT_OUT);\n \n   add_sym_3s (\"atomic_and\", GFC_ISYM_ATOMIC_AND, CLASS_ATOMIC,\n-\t      BT_UNKNOWN, 0, GFC_STD_F2008_TS,\n+\t      BT_UNKNOWN, 0, GFC_STD_F2018,\n \t      gfc_check_atomic_op, NULL, NULL,\n \t      \"atom\", BT_INTEGER, di, REQUIRED, INTENT_OUT,\n \t      \"value\", BT_INTEGER, di, REQUIRED, INTENT_IN,\n \t      stat, BT_INTEGER, di, OPTIONAL, INTENT_OUT);\n \n   add_sym_3s (\"atomic_or\", GFC_ISYM_ATOMIC_OR, CLASS_ATOMIC,\n-\t      BT_UNKNOWN, 0, GFC_STD_F2008_TS,\n+\t      BT_UNKNOWN, 0, GFC_STD_F2018,\n \t      gfc_check_atomic_op, NULL, NULL,\n \t      \"atom\", BT_INTEGER, di, REQUIRED, INTENT_OUT,\n \t      \"value\", BT_INTEGER, di, REQUIRED, INTENT_IN,\n \t      stat, BT_INTEGER, di, OPTIONAL, INTENT_OUT);\n \n   add_sym_3s (\"atomic_xor\", GFC_ISYM_ATOMIC_XOR, CLASS_ATOMIC,\n-\t      BT_UNKNOWN, 0, GFC_STD_F2008_TS,\n+\t      BT_UNKNOWN, 0, GFC_STD_F2018,\n \t      gfc_check_atomic_op, NULL, NULL,\n \t      \"atom\", BT_INTEGER, di, REQUIRED, INTENT_OUT,\n \t      \"value\", BT_INTEGER, di, REQUIRED, INTENT_IN,\n \t      stat, BT_INTEGER, di, OPTIONAL, INTENT_OUT);\n \n   add_sym_4s (\"atomic_fetch_add\", GFC_ISYM_ATOMIC_FETCH_ADD, CLASS_ATOMIC,\n-\t      BT_UNKNOWN, 0, GFC_STD_F2008_TS,\n+\t      BT_UNKNOWN, 0, GFC_STD_F2018,\n \t      gfc_check_atomic_fetch_op, NULL, NULL,\n \t      \"atom\", BT_INTEGER, di, REQUIRED, INTENT_OUT,\n \t      \"value\", BT_INTEGER, di, REQUIRED, INTENT_IN,\n \t      \"old\", BT_INTEGER, di, REQUIRED, INTENT_OUT,\n \t      stat, BT_INTEGER, di, OPTIONAL, INTENT_OUT);\n \n   add_sym_4s (\"atomic_fetch_and\", GFC_ISYM_ATOMIC_FETCH_AND, CLASS_ATOMIC,\n-\t      BT_UNKNOWN, 0, GFC_STD_F2008_TS,\n+\t      BT_UNKNOWN, 0, GFC_STD_F2018,\n \t      gfc_check_atomic_fetch_op, NULL, NULL,\n \t      \"atom\", BT_INTEGER, di, REQUIRED, INTENT_OUT,\n \t      \"value\", BT_INTEGER, di, REQUIRED, INTENT_IN,\n \t      \"old\", BT_INTEGER, di, REQUIRED, INTENT_OUT,\n \t      stat, BT_INTEGER, di, OPTIONAL, INTENT_OUT);\n \n   add_sym_4s (\"atomic_fetch_or\", GFC_ISYM_ATOMIC_FETCH_OR, CLASS_ATOMIC,\n-\t      BT_UNKNOWN, 0, GFC_STD_F2008_TS,\n+\t      BT_UNKNOWN, 0, GFC_STD_F2018,\n \t      gfc_check_atomic_fetch_op, NULL, NULL,\n \t      \"atom\", BT_INTEGER, di, REQUIRED, INTENT_OUT,\n \t      \"value\", BT_INTEGER, di, REQUIRED, INTENT_IN,\n \t      \"old\", BT_INTEGER, di, REQUIRED, INTENT_OUT,\n \t      stat, BT_INTEGER, di, OPTIONAL, INTENT_OUT);\n \n   add_sym_4s (\"atomic_fetch_xor\", GFC_ISYM_ATOMIC_FETCH_XOR, CLASS_ATOMIC,\n-\t      BT_UNKNOWN, 0, GFC_STD_F2008_TS,\n+\t      BT_UNKNOWN, 0, GFC_STD_F2018,\n \t      gfc_check_atomic_fetch_op, NULL, NULL,\n \t      \"atom\", BT_INTEGER, di, REQUIRED, INTENT_OUT,\n \t      \"value\", BT_INTEGER, di, REQUIRED, INTENT_IN,\n@@ -3419,7 +3419,7 @@ add_subroutines (void)\n \t      tm, BT_REAL, dr, REQUIRED, INTENT_OUT);\n \n   add_sym_3s (\"event_query\", GFC_ISYM_EVENT_QUERY, CLASS_ATOMIC,\n-\t      BT_UNKNOWN, 0, GFC_STD_F2008_TS,\n+\t      BT_UNKNOWN, 0, GFC_STD_F2018,\n \t      gfc_check_event_query, NULL, gfc_resolve_event_query,\n \t      \"event\", BT_INTEGER, di, REQUIRED, INTENT_IN,\n \t      c, BT_INTEGER, di, OPTIONAL, INTENT_IN,\n@@ -3609,39 +3609,39 @@ add_subroutines (void)\n \n   /* Coarray collectives.  */\n   add_sym_4s (\"co_broadcast\", GFC_ISYM_CO_BROADCAST, CLASS_IMPURE,\n-\t      BT_UNKNOWN, 0, GFC_STD_F2008_TS,\n+\t      BT_UNKNOWN, 0, GFC_STD_F2018,\n \t      gfc_check_co_broadcast, NULL, NULL,\n \t      a, BT_REAL, dr, REQUIRED, INTENT_INOUT,\n \t      \"source_image\", BT_INTEGER, di, REQUIRED, INTENT_IN,\n \t      stat, BT_INTEGER, di, OPTIONAL, INTENT_OUT,\n \t      errmsg, BT_CHARACTER, dc, OPTIONAL, INTENT_OUT);\n \n   add_sym_4s (\"co_max\", GFC_ISYM_CO_MAX, CLASS_IMPURE,\n-\t      BT_UNKNOWN, 0, GFC_STD_F2008_TS,\n+\t      BT_UNKNOWN, 0, GFC_STD_F2018,\n \t      gfc_check_co_minmax, NULL, NULL,\n \t      a, BT_REAL, dr, REQUIRED, INTENT_INOUT,\n \t      result_image, BT_INTEGER, di, OPTIONAL, INTENT_IN,\n \t      stat, BT_INTEGER, di, OPTIONAL, INTENT_OUT,\n \t      errmsg, BT_CHARACTER, dc, OPTIONAL, INTENT_OUT);\n \n   add_sym_4s (\"co_min\", GFC_ISYM_CO_MIN, CLASS_IMPURE,\n-\t      BT_UNKNOWN, 0, GFC_STD_F2008_TS,\n+\t      BT_UNKNOWN, 0, GFC_STD_F2018,\n \t      gfc_check_co_minmax, NULL, NULL,\n \t      a, BT_REAL, dr, REQUIRED, INTENT_INOUT,\n \t      result_image, BT_INTEGER, di, OPTIONAL, INTENT_IN,\n \t      stat, BT_INTEGER, di, OPTIONAL, INTENT_OUT,\n \t      errmsg, BT_CHARACTER, dc, OPTIONAL, INTENT_OUT);\n \n   add_sym_4s (\"co_sum\", GFC_ISYM_CO_SUM, CLASS_IMPURE,\n-\t      BT_UNKNOWN, 0, GFC_STD_F2008_TS,\n+\t      BT_UNKNOWN, 0, GFC_STD_F2018,\n \t      gfc_check_co_sum, NULL, NULL,\n \t      a, BT_REAL, dr, REQUIRED, INTENT_INOUT,\n \t      result_image, BT_INTEGER, di, OPTIONAL, INTENT_IN,\n \t      stat, BT_INTEGER, di, OPTIONAL, INTENT_OUT,\n \t      errmsg, BT_CHARACTER, dc, OPTIONAL, INTENT_OUT);\n \n   add_sym_5s (\"co_reduce\", GFC_ISYM_CO_REDUCE, CLASS_IMPURE,\n-\t      BT_UNKNOWN, 0, GFC_STD_F2008_TS,\n+\t      BT_UNKNOWN, 0, GFC_STD_F2018,\n \t      gfc_check_co_reduce, NULL, NULL,\n \t      a, BT_REAL, dr, REQUIRED, INTENT_INOUT,\n \t      \"operator\", BT_INTEGER, di, REQUIRED, INTENT_IN,\n@@ -4618,8 +4618,8 @@ gfc_check_intrinsic_standard (const gfc_intrinsic_sym* isym,\n       symstd_msg = \"new in Fortran 2008\";\n       break;\n \n-    case GFC_STD_F2008_TS:\n-      symstd_msg = \"new in TS 29113/TS 18508\";\n+    case GFC_STD_F2018:\n+      symstd_msg = \"new in Fortran 2018\";\n       break;\n \n     case GFC_STD_GNU:"}, {"sha": "bf1c86147301e778a795a075527c9ff3b17ee41c", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -481,10 +481,9 @@ conformance to the Fortran 95, Fortran 2003, Fortran 2008 and Fortran\n 2018 standards, respectively; errors are given for all extensions\n beyond the relevant language standard, and warnings are given for the\n Fortran 77 features that are permitted but obsolescent in later\n-standards. @samp{-std=f2008ts} allows the Fortran 2008 standard\n-including the additions of the Technical Specification (TS) 29113 on\n-Further Interoperability of Fortran with C and TS 18508 on Additional\n-Parallel Features in Fortran.\n+standards. The deprecated option @samp{-std=f2008ts} acts as an alias for\n+@samp{-std=f2018}. It is only present for backwards compatibility with\n+earlier gfortran versions and should not be used any more.\n \n @item -ftest-forall-temp\n @opindex @code{ftest-forall-temp}\n@@ -994,7 +993,7 @@ of the Fortran Character Set.  For continuation lines, a tab followed\n by a digit between 1 and 9 is supported.  @option{-Wtabs} will cause a\n warning to be issued if a tab is encountered. Note, @option{-Wtabs} is\n active for @option{-pedantic}, @option{-std=f95}, @option{-std=f2003},\n-@option{-std=f2008}, @option{-std=f2008ts}, @option{-std=f2018} and\n+@option{-std=f2008}, @option{-std=f2018} and\n @option{-Wall}.\n \n @item -Wundefined-do-loop"}, {"sha": "094f4b55839af0edf4251770ddb18f15ec8f816b", "filename": "gcc/fortran/iso-c-binding.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ffortran%2Fiso-c-binding.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ffortran%2Fiso-c-binding.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fiso-c-binding.def?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -66,7 +66,7 @@ NAMED_INTCST (ISOCBINDING_INTMAX_T, \"c_intmax_t\", \\\n NAMED_INTCST (ISOCBINDING_INTPTR_T, \"c_intptr_t\", \\\n               get_int_kind_from_name (INTPTR_TYPE), GFC_STD_F2003)\n NAMED_INTCST (ISOCBINDING_PTRDIFF_T, \"c_ptrdiff_t\", \\\n-              get_int_kind_from_name (PTRDIFF_TYPE), GFC_STD_F2008_TS)\n+              get_int_kind_from_name (PTRDIFF_TYPE), GFC_STD_F2018)\n NAMED_INTCST (ISOCBINDING_SIZE_T, \"c_size_t\", \\\n               gfc_index_integer_kind, GFC_STD_F2003)\n NAMED_INTCST (ISOCBINDING_SIGNED_CHAR, \"c_signed_char\", \\"}, {"sha": "92dc5edc93d0dca44e1bca507c4d48c842ef5291", "filename": "gcc/fortran/iso-fortran-env.def", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ffortran%2Fiso-fortran-env.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ffortran%2Fiso-fortran-env.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fiso-fortran-env.def?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -86,7 +86,7 @@ NAMED_INTCST (ISOFORTRANENV_FILE_STAT_LOCKED_OTHER_IMAGE, \\\n NAMED_INTCST (ISOFORTRANENV_FILE_STAT_STOPPED_IMAGE, \"stat_stopped_image\", \\\n               GFC_STAT_STOPPED_IMAGE, GFC_STD_F2008)\n NAMED_INTCST (ISOFORTRANENV_FILE_STAT_FAILED_IMAGE, \"stat_failed_image\", \\\n-              GFC_STAT_FAILED_IMAGE, GFC_STD_F2008_TS)\n+              GFC_STAT_FAILED_IMAGE, GFC_STD_F2018)\n NAMED_INTCST (ISOFORTRANENV_FILE_STAT_UNLOCKED, \"stat_unlocked\", \\\n               GFC_STAT_UNLOCKED, GFC_STD_F2008)\n \n@@ -126,12 +126,12 @@ NAMED_DERIVED_TYPE (ISOFORTRAN_LOCK_TYPE, \"lock_type\", \\\n NAMED_DERIVED_TYPE (ISOFORTRAN_EVENT_TYPE, \"event_type\", \\\n \t\t    flag_coarray == GFC_FCOARRAY_LIB\n \t\t    ?  get_int_kind_from_node (ptr_type_node)\n-\t\t    : gfc_default_integer_kind, GFC_STD_F2008_TS)\n+\t\t    : gfc_default_integer_kind, GFC_STD_F2018)\n \n NAMED_DERIVED_TYPE (ISOFORTRAN_TEAM_TYPE, \"team_type\", \\\n \t\t    flag_coarray == GFC_FCOARRAY_LIB\n \t\t    ? get_int_kind_from_node (ptr_type_node)\n-\t\t    : gfc_default_integer_kind, GFC_STD_F2008_TS)\n+\t\t    : gfc_default_integer_kind, GFC_STD_F2018)\n \n #undef NAMED_INTCST\n #undef NAMED_KINDARRAY"}, {"sha": "ef9c7c76b62d95f76643921f7ffd9426fe859642", "filename": "gcc/fortran/libgfortran.h", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ffortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ffortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flibgfortran.h?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -22,10 +22,9 @@ along with GCC; see the file COPYING3.  If not see\n    Note that no features were obsoleted nor deleted in F2003.\n    Please remember to keep those definitions in sync with\n    gfortran.texi.  */\n-#define GFC_STD_F2018_DEL      (1<<12)  /* Deleted in F2018.  */\n-#define GFC_STD_F2018_OBS      (1<<11)  /* Obsolescent in F2018.  */\n-#define GFC_STD_F2018          (1<<10)  /* New in F2018.  */\n-#define GFC_STD_F2008_TS\t(1<<9)\t/* POST-F2008 technical reports.  */\n+#define GFC_STD_F2018_DEL\t(1<<11)\t/* Deleted in F2018.  */\n+#define GFC_STD_F2018_OBS\t(1<<10)\t/* Obsolescent in F2018.  */\n+#define GFC_STD_F2018\t\t(1<<9)\t/* New in F2018.  */\n #define GFC_STD_F2008_OBS\t(1<<8)\t/* Obsolescent in F2008.  */\n #define GFC_STD_F2008\t\t(1<<7)\t/* New in F2008.  */\n #define GFC_STD_LEGACY\t\t(1<<6)\t/* Backward compatibility.  */\n@@ -44,8 +43,7 @@ along with GCC; see the file COPYING3.  If not see\n \t\t\t\t| GFC_STD_F2018_DEL)\n #define GFC_STD_OPT_F03\t\t(GFC_STD_OPT_F95 | GFC_STD_F2003)\n #define GFC_STD_OPT_F08\t\t(GFC_STD_OPT_F03 | GFC_STD_F2008)\n-#define GFC_STD_OPT_F08TS\t(GFC_STD_OPT_F08 | GFC_STD_F2008_TS)\n-#define GFC_STD_OPT_F18\t\t((GFC_STD_OPT_F08TS | GFC_STD_F2018) \\\n+#define GFC_STD_OPT_F18\t\t((GFC_STD_OPT_F08 | GFC_STD_F2018) \\\n \t\t\t\t& (~GFC_STD_F2018_DEL))\n \n /* Bitmasks for the various FPE that can be enabled.  These need to be straight integers"}, {"sha": "8379ff579449d01d0ecb9e0005d02bc635c0fe46", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -3322,7 +3322,7 @@ event_statement (gfc_statement st)\n match\n gfc_match_event_post (void)\n {\n-  if (!gfc_notify_std (GFC_STD_F2008_TS, \"EVENT POST statement at %C\"))\n+  if (!gfc_notify_std (GFC_STD_F2018, \"EVENT POST statement at %C\"))\n     return MATCH_ERROR;\n \n   return event_statement (ST_EVENT_POST);\n@@ -3332,7 +3332,7 @@ gfc_match_event_post (void)\n match\n gfc_match_event_wait (void)\n {\n-  if (!gfc_notify_std (GFC_STD_F2008_TS, \"EVENT WAIT statement at %C\"))\n+  if (!gfc_notify_std (GFC_STD_F2018, \"EVENT WAIT statement at %C\"))\n     return MATCH_ERROR;\n \n   return event_statement (ST_EVENT_WAIT);\n@@ -3344,7 +3344,7 @@ gfc_match_event_wait (void)\n match\n gfc_match_fail_image (void)\n {\n-  if (!gfc_notify_std (GFC_STD_F2008_TS, \"FAIL IMAGE statement at %C\"))\n+  if (!gfc_notify_std (GFC_STD_F2018, \"FAIL IMAGE statement at %C\"))\n     return MATCH_ERROR;\n \n   if (gfc_match_char ('(') == MATCH_YES)\n@@ -3368,7 +3368,7 @@ gfc_match_form_team (void)\n   match m;\n   gfc_expr *teamid,*team;\n \n-  if (!gfc_notify_std (GFC_STD_F2008_TS, \"FORM TEAM statement at %C\"))\n+  if (!gfc_notify_std (GFC_STD_F2018, \"FORM TEAM statement at %C\"))\n     return MATCH_ERROR;\n \n   if (gfc_match_char ('(') == MATCH_NO)\n@@ -3407,7 +3407,7 @@ gfc_match_change_team (void)\n   match m;\n   gfc_expr *team;\n \n-  if (!gfc_notify_std (GFC_STD_F2008_TS, \"CHANGE TEAM statement at %C\"))\n+  if (!gfc_notify_std (GFC_STD_F2018, \"CHANGE TEAM statement at %C\"))\n     return MATCH_ERROR;\n \n   if (gfc_match_char ('(') == MATCH_NO)\n@@ -3437,7 +3437,7 @@ gfc_match_change_team (void)\n match\n gfc_match_end_team (void)\n {\n-  if (!gfc_notify_std (GFC_STD_F2008_TS, \"END TEAM statement at %C\"))\n+  if (!gfc_notify_std (GFC_STD_F2018, \"END TEAM statement at %C\"))\n     return MATCH_ERROR;\n \n   if (gfc_match_char ('(') == MATCH_YES)\n@@ -3461,7 +3461,7 @@ gfc_match_sync_team (void)\n   match m;\n   gfc_expr *team;\n \n-  if (!gfc_notify_std (GFC_STD_F2008_TS, \"SYNC TEAM statement at %C\"))\n+  if (!gfc_notify_std (GFC_STD_F2018, \"SYNC TEAM statement at %C\"))\n     return MATCH_ERROR;\n \n   if (gfc_match_char ('(') == MATCH_NO)"}, {"sha": "85f699e7cf8c5bf6fd62d2f537795300e0778fac", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -42,7 +42,7 @@ set_default_std_flags (void)\n {\n   gfc_option.allow_std = GFC_STD_F95_OBS | GFC_STD_F95_DEL\n     | GFC_STD_F2003 | GFC_STD_F2008 | GFC_STD_F95 | GFC_STD_F77\n-    | GFC_STD_F2008_OBS | GFC_STD_F2008_TS | GFC_STD_GNU | GFC_STD_LEGACY\n+    | GFC_STD_F2008_OBS | GFC_STD_GNU | GFC_STD_LEGACY\n     | GFC_STD_F2018 | GFC_STD_F2018_DEL | GFC_STD_F2018_OBS;\n   gfc_option.warn_std = GFC_STD_F2018_DEL | GFC_STD_F95_DEL | GFC_STD_LEGACY;\n }\n@@ -731,13 +731,6 @@ gfc_handle_option (size_t scode, const char *arg, int value,\n       break;\n \n     case OPT_std_f2008ts:\n-      gfc_option.allow_std = GFC_STD_OPT_F08TS;\n-      gfc_option.warn_std = GFC_STD_F95_OBS | GFC_STD_F2008_OBS;\n-      gfc_option.max_identifier_length = 63;\n-      warn_ampersand = 1;\n-      warn_tabs = 1;\n-      break;\n-\n     case OPT_std_f2018:\n       gfc_option.allow_std = GFC_STD_OPT_F18;\n       gfc_option.warn_std = GFC_STD_F95_OBS | GFC_STD_F2008_OBS"}, {"sha": "b903b58401aa114b9302896efd682ae559a24472", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -1,3 +1,21 @@\n+2018-05-22  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/85841\n+\t* gfortran.dg/assumed_rank_5.f90: Update error message.\n+\t* gfortran.dg/assumed_type_4.f90: Ditto.\n+\t* gfortran.dg/bind_c_array_params.f03: Ditto.\n+\t* gfortran.dg/bind_c_usage_28.f90: Ditto.\n+\t* gfortran.dg/c_funloc_tests_5.f03: Ditto.\n+\t* gfortran.dg/c_funloc_tests_6.f90: Ditto.\n+\t* gfortran.dg/c_loc_tests_11.f03: Ditto.\n+\t* gfortran.dg/coarray_atomic_2.f90: Ditto.\n+\t* gfortran.dg/coarray_collectives_2.f90: Ditto.\n+\t* gfortran.dg/coarray_collectives_10.f90: Ditto.\n+\t* gfortran.dg/coarray_collectives_13.f90: Ditto.\n+\t* gfortran.dg/rank_3.f90: Ditto.\n+\t* gfortran.dg/error_stop_4.f90: Replace -std=f2008ts by -std=f2008.\n+\t* gfortran.dg/implicit_14.f90: Ditto.\n+\n 2018-05-21  Christian Groessler  <chris@groessler.org>\n \n \t* gcc.c-torture/compile/simd-5.c: Fix comment."}, {"sha": "0e6318cfea0ebd2044dbd2fd9387611d33185d4a", "filename": "gcc/testsuite/gfortran.dg/assumed_rank_5.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_rank_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_rank_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_rank_5.f90?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -5,5 +5,5 @@\n !\n !\n subroutine foo(x)\n-  integer :: x(..)  ! { dg-error \"TS 29113/TS 18508: Assumed-rank array\" }\n+  integer :: x(..)  ! { dg-error \"Fortran 2018: Assumed-rank array\" }\n end subroutine foo"}, {"sha": "b6a99a8950e098205213b2ecdd6715c0f21edf9c", "filename": "gcc/testsuite/gfortran.dg/assumed_type_4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_type_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_type_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_type_4.f90?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -6,5 +6,5 @@\n ! Test TYPE(*)\n \n subroutine one(a)\n-  type(*)  :: a ! { dg-error \"TS 29113/TS 18508: Assumed type\" }\n+  type(*)  :: a ! { dg-error \"Fortran 2018: Assumed type\" }\n end subroutine one"}, {"sha": "215db4511ebae3a12f1a423e561b4a2d2037f1ae", "filename": "gcc/testsuite/gfortran.dg/bind_c_array_params.f03", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_array_params.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_array_params.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_array_params.f03?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -5,11 +5,11 @@ module bind_c_array_params\n implicit none\n \n contains\n-  subroutine sub0(assumed_array) bind(c) ! { dg-error \"TS 29113/TS 18508: Assumed-shape array 'assumed_array' at .1. as dummy argument to the BIND.C. procedure 'sub0'\" }\n+  subroutine sub0(assumed_array) bind(c) ! { dg-error \"Fortran 2018: Assumed-shape array 'assumed_array' at .1. as dummy argument to the BIND.C. procedure 'sub0'\" }\n     integer(c_int), dimension(:) :: assumed_array\n   end subroutine sub0\n \n-  subroutine sub1(deferred_array) bind(c) ! { dg-error \"TS 29113/TS 18508: Variable 'deferred_array' at .1. with POINTER attribute in procedure 'sub1' with BIND.C.\" }\n+  subroutine sub1(deferred_array) bind(c) ! { dg-error \"Fortran 2018: Variable 'deferred_array' at .1. with POINTER attribute in procedure 'sub1' with BIND.C.\" }\n     integer(c_int), pointer :: deferred_array(:)\n   end subroutine sub1\n end module bind_c_array_params"}, {"sha": "c1230970324b326c3efc7265ad5df1993b62f7a0", "filename": "gcc/testsuite/gfortran.dg/bind_c_usage_28.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_28.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_28.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_28.f90?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -8,11 +8,11 @@\n   integer :: i\n end type\n interface\n-     subroutine psub(this) bind(c, name='Psub') ! { dg-error \"TS 29113/TS 18508: Variable 'this' at .1. with POINTER attribute in procedure 'psub' with BIND.C.\" }\n+     subroutine psub(this) bind(c, name='Psub') ! { dg-error \"Fortran 2018: Variable 'this' at .1. with POINTER attribute in procedure 'psub' with BIND.C.\" }\n        import :: c_float, cstruct\n        real(c_float), pointer  :: this(:)\n      end subroutine psub\n-     subroutine psub2(that) bind(c, name='Psub2') ! { dg-error \"TS 29113/TS 18508: Variable 'that' at .1. with ALLOCATABLE attribute in procedure 'psub2' with BIND.C.\" }\n+     subroutine psub2(that) bind(c, name='Psub2') ! { dg-error \"Fortran 2018: Variable 'that' at .1. with ALLOCATABLE attribute in procedure 'psub2' with BIND.C.\" }\n        import :: c_float, cstruct\n        type(cstruct), allocatable  :: that(:)\n      end subroutine psub2"}, {"sha": "1ebe14a70c29d679e7b3da57b71e3da01ce51895", "filename": "gcc/testsuite/gfortran.dg/c_funloc_tests_5.f03", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_funloc_tests_5.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_funloc_tests_5.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_funloc_tests_5.f03?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -8,9 +8,9 @@ module c_funloc_tests_5\n   subroutine sub0() bind(c)\n     type(c_funptr) :: my_c_funptr\n \n-    my_c_funptr = c_funloc(sub1) ! { dg-error \"TS 29113/TS 18508: Noninteroperable procedure at .1. to C_FUNLOC\" }\n+    my_c_funptr = c_funloc(sub1) ! { dg-error \"Fortran 2018: Noninteroperable procedure at .1. to C_FUNLOC\" }\n \n-    my_c_funptr = c_funloc(func0) ! { dg-error \"TS 29113/TS 18508: Noninteroperable procedure at .1. to C_FUNLOC\" }\n+    my_c_funptr = c_funloc(func0) ! { dg-error \"Fortran 2018: Noninteroperable procedure at .1. to C_FUNLOC\" }\n   end subroutine sub0\n \n   subroutine sub1() "}, {"sha": "669a119246fa68bcb86bf2abd3485e13d43ba5aa", "filename": "gcc/testsuite/gfortran.dg/c_funloc_tests_6.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_funloc_tests_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_funloc_tests_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_funloc_tests_6.f90?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -26,6 +26,6 @@ end subroutine sub\n call c_f_pointer (cfp, int)     ! { dg-error \"Argument CPTR at .1. to C_F_POINTER shall have the type TYPE.C_PTR.\" }\n call c_f_procpointer (cp, fsub) ! { dg-error \"Argument CPTR at .1. to C_F_PROCPOINTER shall have the type TYPE.C_FUNPTR.\" }\n \n-cfp = c_funloc (noCsub) ! { dg-error \"TS 29113/TS 18508: Noninteroperable procedure at .1. to C_FUNLOC\" }\n-call c_f_procpointer (cfp, fint) ! { dg-error \"TS 29113/TS 18508: Noninteroperable procedure pointer at .1. to C_F_PROCPOINTER\" }\n+cfp = c_funloc (noCsub) ! { dg-error \"Fortran 2018: Noninteroperable procedure at .1. to C_FUNLOC\" }\n+call c_f_procpointer (cfp, fint) ! { dg-error \"Fortran 2018: Noninteroperable procedure pointer at .1. to C_F_PROCPOINTER\" }\n end"}, {"sha": "545855f14500b4e6d453de8a7dacea98fdaeb53f", "filename": "gcc/testsuite/gfortran.dg/c_loc_tests_11.f03", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_loc_tests_11.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_loc_tests_11.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_loc_tests_11.f03?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -43,7 +43,7 @@ type(c_ptr) function get_foo_address(handle)\n     integer(c_int), intent(in) :: handle    \n     get_foo_address = c_loc(foo_pool(handle)%v)\n \n-    get_foo_address = c_loc(foo_pool2(handle)%v) ! { dg-error \"TS 29113/TS 18508: Noninteroperable array at .1. as argument to C_LOC: Expression is a noninteroperable derived type\" }\n+    get_foo_address = c_loc(foo_pool2(handle)%v) ! { dg-error \"Fortran 2018: Noninteroperable array at .1. as argument to C_LOC: Expression is a noninteroperable derived type\" }\n   end function get_foo_address\n \n     "}, {"sha": "3b51a27724e4390fadd2321ff74e1909c0f5b9bb", "filename": "gcc/testsuite/gfortran.dg/coarray_atomic_2.f90", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_atomic_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_atomic_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_atomic_2.f90?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -6,15 +6,15 @@\n \n intrinsic :: atomic_define\n intrinsic :: atomic_ref\n-intrinsic :: atomic_cas ! { dg-error \"not available in the current standard settings but new in TS 29113/TS 18508.\" }\n-intrinsic :: atomic_add ! { dg-error \"not available in the current standard settings but new in TS 29113/TS 18508.\" }\n-intrinsic :: atomic_and ! { dg-error \"not available in the current standard settings but new in TS 29113/TS 18508.\" }\n-intrinsic :: atomic_or ! { dg-error \"not available in the current standard settings but new in TS 29113/TS 18508.\" }\n-intrinsic :: atomic_xor ! { dg-error \"not available in the current standard settings but new in TS 29113/TS 18508.\" }\n-intrinsic :: atomic_fetch_add ! { dg-error \"not available in the current standard settings but new in TS 29113/TS 18508.\" }\n-intrinsic :: atomic_fetch_and ! { dg-error \"not available in the current standard settings but new in TS 29113/TS 18508.\" }\n-intrinsic :: atomic_fetch_or ! { dg-error \"not available in the current standard settings but new in TS 29113/TS 18508.\" }\n-intrinsic :: atomic_fetch_xor ! { dg-error \"not available in the current standard settings but new in TS 29113/TS 18508.\" }\n+intrinsic :: atomic_cas ! { dg-error \"not available in the current standard settings but new in Fortran 2018.\" }\n+intrinsic :: atomic_add ! { dg-error \"not available in the current standard settings but new in Fortran 2018.\" }\n+intrinsic :: atomic_and ! { dg-error \"not available in the current standard settings but new in Fortran 2018.\" }\n+intrinsic :: atomic_or ! { dg-error \"not available in the current standard settings but new in Fortran 2018.\" }\n+intrinsic :: atomic_xor ! { dg-error \"not available in the current standard settings but new in Fortran 2018.\" }\n+intrinsic :: atomic_fetch_add ! { dg-error \"not available in the current standard settings but new in Fortran 2018.\" }\n+intrinsic :: atomic_fetch_and ! { dg-error \"not available in the current standard settings but new in Fortran 2018.\" }\n+intrinsic :: atomic_fetch_or ! { dg-error \"not available in the current standard settings but new in Fortran 2018.\" }\n+intrinsic :: atomic_fetch_xor ! { dg-error \"not available in the current standard settings but new in Fortran 2018.\" }\n integer(atomic_int_kind) :: caf[*], var\n logical(atomic_logical_kind) :: caf_log[*], var2\n integer :: stat"}, {"sha": "f7d899dce7e263e0ab2a746b6cddfec812a4442a", "filename": "gcc/testsuite/gfortran.dg/coarray_collectives_10.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_collectives_10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_collectives_10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_collectives_10.f90?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -6,6 +6,6 @@\n !\n program test\n   implicit none\n-  intrinsic co_reduce ! { dg-error \"is not available in the current standard settings but new in TS 29113/TS 18508.\" }\n-  intrinsic co_broadcast ! { dg-error \"is not available in the current standard settings but new in TS 29113/TS 18508.\" }\n+  intrinsic co_reduce ! { dg-error \"is not available in the current standard settings but new in Fortran 2018.\" }\n+  intrinsic co_broadcast ! { dg-error \"is not available in the current standard settings but new in Fortran 2018.\" }\n end program test"}, {"sha": "f7d899dce7e263e0ab2a746b6cddfec812a4442a", "filename": "gcc/testsuite/gfortran.dg/coarray_collectives_13.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_collectives_13.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_collectives_13.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_collectives_13.f90?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -6,6 +6,6 @@\n !\n program test\n   implicit none\n-  intrinsic co_reduce ! { dg-error \"is not available in the current standard settings but new in TS 29113/TS 18508.\" }\n-  intrinsic co_broadcast ! { dg-error \"is not available in the current standard settings but new in TS 29113/TS 18508.\" }\n+  intrinsic co_reduce ! { dg-error \"is not available in the current standard settings but new in Fortran 2018.\" }\n+  intrinsic co_broadcast ! { dg-error \"is not available in the current standard settings but new in Fortran 2018.\" }\n end program test"}, {"sha": "4f8bef6d0b159f0d770df10f2b08808e15f6bf5d", "filename": "gcc/testsuite/gfortran.dg/coarray_collectives_2.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_collectives_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_collectives_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_collectives_2.f90?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -6,7 +6,7 @@\n !\n program test\n   implicit none\n-  intrinsic co_max ! { dg-error \"is not available in the current standard settings but new in TS 29113/TS 18508.\" }\n-  intrinsic co_min ! { dg-error \"is not available in the current standard settings but new in TS 29113/TS 18508.\" }\n-  intrinsic co_sum ! { dg-error \"is not available in the current standard settings but new in TS 29113/TS 18508.\" }\n+  intrinsic co_max ! { dg-error \"is not available in the current standard settings but new in Fortran 2018.\" }\n+  intrinsic co_min ! { dg-error \"is not available in the current standard settings but new in Fortran 2018.\" }\n+  intrinsic co_sum ! { dg-error \"is not available in the current standard settings but new in Fortran 2018.\" }\n end program test"}, {"sha": "d8cdefe14cbcc464b994a63d6d4f2fd5b7e7b18a", "filename": "gcc/testsuite/gfortran.dg/error_stop_4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Ferror_stop_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Ferror_stop_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ferror_stop_4.f90?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -1,5 +1,5 @@\n ! { dg-do compile }\n-! { dg-options \"-std=f2008ts\" }\n+! { dg-options \"-std=f2008\" }\n !\n ! F2018 permits ERROR STOP in PURE procedures\n !"}, {"sha": "8282c1f1f86c1daa4cc00d1b69d6e4fe40f5ab83", "filename": "gcc/testsuite/gfortran.dg/implicit_14.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_14.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_14.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fimplicit_14.f90?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -1,5 +1,5 @@\n ! { dg-do compile }\n-! { dg-options \"-std=f2008ts\" }\n+! { dg-options \"-std=f2008\" }\n !\n ! Support Fortran 2018's IMPLICIT NONE with spec list\n ! (currently implemented as vendor extension)"}, {"sha": "bd11b8fb28bef33e63f73cfbd2dbcbdabb8def8f", "filename": "gcc/testsuite/gfortran.dg/rank_3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Frank_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/286f737cf0bad9b646e8104aca72f6f7d07b49cb/gcc%2Ftestsuite%2Fgfortran.dg%2Frank_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Frank_3.f90?ref=286f737cf0bad9b646e8104aca72f6f7d07b49cb", "patch": "@@ -3,5 +3,5 @@\n !\n ! PR fortran/48820\n !\n-intrinsic :: rank  ! { dg-error \"new in TS 29113\" }\n+intrinsic :: rank  ! { dg-error \"new in Fortran 2018\" }\n end"}]}