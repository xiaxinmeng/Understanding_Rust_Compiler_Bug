{"sha": "cae5140e9b5a74e09f3dd95a5ffe664f1eefc14c", "node_id": "C_kwDOANBUbNoAKGNhZTUxNDBlOWI1YTc0ZTA5ZjNkZDk1YTVmZmU2NjRmMWVlZmMxNGM", "commit": {"author": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2023-05-05T15:54:28Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2023-05-05T18:15:06Z"}, "message": "gccrs: Add missing compile locals for constants and statics\n\nWhen we have a block expression for cosntants or statics we need to ensure\nwe compile the locals for the implicit function we generate in GIMPLE\nbefore feeding it directly into the constant folder to evaluate the data.\n\nFixes #2178\n\ngcc/rust/ChangeLog:\n\n\t* backend/rust-compile-base.cc: add missing compile_locals call\n\ngcc/testsuite/ChangeLog:\n\n\t* rust/compile/issue-2178.rs: New test.\n\nSigned-off-by: Philip Herron <herron.philip@googlemail.com>", "tree": {"sha": "2cdf2ca51d8426cb63d886eea6cd80c325fe2885", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2cdf2ca51d8426cb63d886eea6cd80c325fe2885"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cae5140e9b5a74e09f3dd95a5ffe664f1eefc14c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cae5140e9b5a74e09f3dd95a5ffe664f1eefc14c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cae5140e9b5a74e09f3dd95a5ffe664f1eefc14c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cae5140e9b5a74e09f3dd95a5ffe664f1eefc14c/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd91c5696e72038cab4ff6e8fc7be1f30200cd2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd91c5696e72038cab4ff6e8fc7be1f30200cd2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd91c5696e72038cab4ff6e8fc7be1f30200cd2a"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "11154e85e4e7e951a14b5bb9186a9d1cbb41f233", "filename": "gcc/rust/backend/rust-compile-base.cc", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae5140e9b5a74e09f3dd95a5ffe664f1eefc14c/gcc%2Frust%2Fbackend%2Frust-compile-base.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae5140e9b5a74e09f3dd95a5ffe664f1eefc14c/gcc%2Frust%2Fbackend%2Frust-compile-base.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-base.cc?ref=cae5140e9b5a74e09f3dd95a5ffe664f1eefc14c", "patch": "@@ -666,8 +666,8 @@ HIRCompileBase::compile_constant_item (\n     = ctx->get_backend ()->function (compiled_fn_type, ident, \"\", 0, locus);\n   TREE_READONLY (fndecl) = 1;\n \n+  std::vector<Bvariable *> locals;\n   tree enclosing_scope = NULL_TREE;\n-\n   Location start_location = const_value_expr->get_locus ();\n   Location end_location = const_value_expr->get_locus ();\n   if (is_block_expr)\n@@ -676,9 +676,16 @@ HIRCompileBase::compile_constant_item (\n \t= static_cast<HIR::BlockExpr *> (const_value_expr);\n       start_location = function_body->get_locus ();\n       end_location = function_body->get_end_locus ();\n+\n+      Resolver::Rib *rib = nullptr;\n+      bool ok = ctx->get_resolver ()->find_name_rib (\n+\tfunction_body->get_mappings ().get_nodeid (), &rib);\n+      rust_assert (ok);\n+\n+      locals = compile_locals_for_block (ctx, *rib, fndecl);\n     }\n \n-  tree code_block = ctx->get_backend ()->block (fndecl, enclosing_scope, {},\n+  tree code_block = ctx->get_backend ()->block (fndecl, enclosing_scope, locals,\n \t\t\t\t\t\tstart_location, end_location);\n   ctx->push_block (code_block);\n "}, {"sha": "faa22288b2b7bd491749af8447f8099515a50855", "filename": "gcc/testsuite/rust/compile/issue-2178.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae5140e9b5a74e09f3dd95a5ffe664f1eefc14c/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-2178.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae5140e9b5a74e09f3dd95a5ffe664f1eefc14c/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-2178.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-2178.rs?ref=cae5140e9b5a74e09f3dd95a5ffe664f1eefc14c", "patch": "@@ -0,0 +1,10 @@\n+const A: usize = {\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n+    let x = 23;\n+    x\n+};\n+\n+static B: usize = {\n+    let x = 23;\n+    x\n+};"}]}