{"sha": "2d71668e64c4b20aec823dbe5a1feb6338d527a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ3MTY2OGU2NGM0YjIwYWVjODIzZGJlNWExZmViNjMzOGQ1MjdhMg==", "commit": {"author": {"name": "Steve Baird", "email": "baird@adacore.com", "date": "2021-05-19T01:26:24Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-07-07T16:23:15Z"}, "message": "[Ada] Improve interactions between DSA and Put_Image routines for tagged types\n\ngcc/ada/\n\n\t* exp_dist.adb (Add_RACW_Primitive_Declarations_And_Bodies): Add\n\tTSS_Put_Image to list of predefined primitives that need special\n\ttreatment.\n\t(Build_General_Calling_Stubs, Build_Subprogram_Receiving_Stubs):\n\tRemove previous hack for dealing with TSS_Put_Image procedures.", "tree": {"sha": "a726436c73f7053302fcf2a77ee5106a51447d6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a726436c73f7053302fcf2a77ee5106a51447d6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d71668e64c4b20aec823dbe5a1feb6338d527a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d71668e64c4b20aec823dbe5a1feb6338d527a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d71668e64c4b20aec823dbe5a1feb6338d527a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d71668e64c4b20aec823dbe5a1feb6338d527a2/comments", "author": {"login": "swbaird", "id": 50751052, "node_id": "MDQ6VXNlcjUwNzUxMDUy", "avatar_url": "https://avatars.githubusercontent.com/u/50751052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swbaird", "html_url": "https://github.com/swbaird", "followers_url": "https://api.github.com/users/swbaird/followers", "following_url": "https://api.github.com/users/swbaird/following{/other_user}", "gists_url": "https://api.github.com/users/swbaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/swbaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swbaird/subscriptions", "organizations_url": "https://api.github.com/users/swbaird/orgs", "repos_url": "https://api.github.com/users/swbaird/repos", "events_url": "https://api.github.com/users/swbaird/events{/privacy}", "received_events_url": "https://api.github.com/users/swbaird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fa7097a140f007f86e81f62cd08fff15b16ef6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fa7097a140f007f86e81f62cd08fff15b16ef6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fa7097a140f007f86e81f62cd08fff15b16ef6e"}], "stats": {"total": 26, "additions": 3, "deletions": 23}, "files": [{"sha": "5cb8fb54993eb17d01462a54675130f81040c25c", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 3, "deletions": 23, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d71668e64c4b20aec823dbe5a1feb6338d527a2/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d71668e64c4b20aec823dbe5a1feb6338d527a2/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=2d71668e64c4b20aec823dbe5a1feb6338d527a2", "patch": "@@ -1424,6 +1424,7 @@ package body Exp_Dist is\n               and then Chars (Current_Primitive) /= Name_uAlignment\n               and then not\n                 (Is_TSS (Current_Primitive, TSS_Deep_Finalize) or else\n+                 Is_TSS (Current_Primitive, TSS_Put_Image)     or else\n                  Is_TSS (Current_Primitive, TSS_Stream_Input)  or else\n                  Is_TSS (Current_Primitive, TSS_Stream_Output) or else\n                  Is_TSS (Current_Primitive, TSS_Stream_Read)   or else\n@@ -4211,14 +4212,6 @@ package body Exp_Dist is\n          --  Used only for the PolyORB case\n \n       begin\n-         --  workaround for later failures in Exp_Util.Find_Prim_Op\n-         if Is_TSS (Defining_Unit_Name (Spec), TSS_Put_Image) then\n-            Append_To (Statements,\n-                       Make_Raise_Program_Error (Loc,\n-                         Reason => PE_Stream_Operation_Not_Allowed));\n-            return;\n-         end if;\n-\n          --  The general form of a calling stub for a given subprogram is:\n \n          --    procedure X (...) is P : constant Partition_ID :=\n@@ -4734,11 +4727,11 @@ package body Exp_Dist is\n          --  Formal parameter for receiving stubs: a descriptor for an incoming\n          --  request.\n \n-         Decls : List_Id := New_List;\n+         Decls : constant List_Id := New_List;\n          --  All the parameters will get declared before calling the real\n          --  subprograms. Also the out parameters will be declared.\n \n-         Statements : List_Id := New_List;\n+         Statements : constant List_Id := New_List;\n \n          Extra_Formal_Statements : constant List_Id := New_List;\n          --  Statements concerning extra formal parameters\n@@ -5173,19 +5166,6 @@ package body Exp_Dist is\n                  Parameter_Type      =>\n                    New_Occurrence_Of (RTE (RE_Request_Access), Loc))));\n \n-         --  workaround for later failures in Exp_Util.Find_Prim_Op\n-         if Is_TSS (Defining_Unit_Name (Specification (Vis_Decl)),\n-                    TSS_Put_Image)\n-         then\n-            --  drop everything on the floor\n-            Decls := New_List;\n-            Statements := New_List;\n-            Excep_Handlers := New_List;\n-            Append_To (Statements,\n-                       Make_Raise_Program_Error (Loc,\n-                         Reason => PE_Stream_Operation_Not_Allowed));\n-         end if;\n-\n          return\n            Make_Subprogram_Body (Loc,\n              Specification              => Subp_Spec,"}]}