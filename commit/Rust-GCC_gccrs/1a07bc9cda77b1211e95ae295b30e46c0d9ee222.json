{"sha": "1a07bc9cda77b1211e95ae295b30e46c0d9ee222", "node_id": "C_kwDOANBUbNoAKDFhMDdiYzljZGE3N2IxMjExZTk1YWUyOTViMzBlNDZjMGQ5ZWUyMjI", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-10-25T02:51:33Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-10-25T08:53:55Z"}, "message": "Simplify (_Float16) sqrtf((float) a) to .SQRT(a) when a is a _Float16 value.\n\nSimilar for sqrt/sqrtl.\n\ngcc/ChangeLog:\n\n\tPR target/102464\n\t* match.pd: Simplify (_Float16) sqrtf((float) a) to .SQRT(a)\n\twhen direct_internal_fn_supported_p, similar for sqrt/sqrtl.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/102464\n\t* gcc.target/i386/pr102464-sqrtph.c: New test.\n\t* gcc.target/i386/pr102464-sqrtsh.c: New test.", "tree": {"sha": "1f23e247351d667a0177d8f7accf66395158627a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f23e247351d667a0177d8f7accf66395158627a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a07bc9cda77b1211e95ae295b30e46c0d9ee222", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a07bc9cda77b1211e95ae295b30e46c0d9ee222", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a07bc9cda77b1211e95ae295b30e46c0d9ee222", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a07bc9cda77b1211e95ae295b30e46c0d9ee222/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa15952d646fd5dd569fce287b719a737ae66e4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa15952d646fd5dd569fce287b719a737ae66e4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa15952d646fd5dd569fce287b719a737ae66e4f"}], "stats": {"total": 56, "additions": 54, "deletions": 2}, "files": [{"sha": "43d1c1bc0bd5b6396d7e2b57b2b9693c3e11e70f", "filename": "gcc/match.pd", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a07bc9cda77b1211e95ae295b30e46c0d9ee222/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a07bc9cda77b1211e95ae295b30e46c0d9ee222/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=1a07bc9cda77b1211e95ae295b30e46c0d9ee222", "patch": "@@ -6228,14 +6228,16 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n \t    BUILT_IN_ROUNDEVENL BUILT_IN_ROUNDEVEN BUILT_IN_ROUNDEVENF\n \t    BUILT_IN_ROUNDL BUILT_IN_ROUND BUILT_IN_ROUNDF\n \t    BUILT_IN_NEARBYINTL BUILT_IN_NEARBYINT BUILT_IN_NEARBYINTF\n-\t    BUILT_IN_RINTL BUILT_IN_RINT BUILT_IN_RINTF)\n+\t    BUILT_IN_RINTL BUILT_IN_RINT BUILT_IN_RINTF\n+\t    BUILT_IN_SQRTL BUILT_IN_SQRT BUILT_IN_SQRTF)\n      tos (IFN_TRUNC IFN_TRUNC IFN_TRUNC\n \t  IFN_FLOOR IFN_FLOOR IFN_FLOOR\n \t  IFN_CEIL IFN_CEIL IFN_CEIL\n \t  IFN_ROUNDEVEN IFN_ROUNDEVEN IFN_ROUNDEVEN\n \t  IFN_ROUND IFN_ROUND IFN_ROUND\n \t  IFN_NEARBYINT IFN_NEARBYINT IFN_NEARBYINT\n-\t  IFN_RINT IFN_RINT IFN_RINT)\n+\t  IFN_RINT IFN_RINT IFN_RINT\n+\t  IFN_SQRT IFN_SQRT IFN_SQRT)\n  /* (_Float16) round ((doube) x) -> __built_in_roundf16 (x), etc.,\n     if x is a _Float16.  */\n  (simplify"}, {"sha": "8bd19c6e65eb2f4b3c8cd8cbf444ec2338e83550", "filename": "gcc/testsuite/gcc.target/i386/pr102464-sqrtph.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a07bc9cda77b1211e95ae295b30e46c0d9ee222/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr102464-sqrtph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a07bc9cda77b1211e95ae295b30e46c0d9ee222/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr102464-sqrtph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr102464-sqrtph.c?ref=1a07bc9cda77b1211e95ae295b30e46c0d9ee222", "patch": "@@ -0,0 +1,27 @@\n+/* PR target/102464.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx512fp16 -mavx512vl -ffast-math -ftree-vectorize\" } */\n+\n+#include<math.h>\n+void foo1 (_Float16* __restrict a, _Float16* b)\n+{\n+  for (int i = 0; i != 8; i++)\n+    a[i] =  sqrtf (b[i]);\n+}\n+\n+void foo2 (_Float16* __restrict a, _Float16* b)\n+{\n+  for (int i = 0; i != 8; i++)\n+    a[i] =  sqrt (b[i]);\n+}\n+\n+void foo3 (_Float16* __restrict a, _Float16* b)\n+{\n+  for (int i = 0; i != 8; i++)\n+    a[i] =  sqrtl (b[i]);\n+}\n+\n+/* { dg-final { scan-assembler-not \"vcvtsh2s\\[sd\\]\" } } */\n+/* { dg-final { scan-assembler-not \"vcvtph2p\\[sd\\]\" } } */\n+/* { dg-final { scan-assembler-not \"extendhfxf\" } } */\n+/* { dg-final { scan-assembler-times \"vsqrtph\\[^\\n\\r\\]*xmm\\[0-9\\]\" 3 } } */"}, {"sha": "4cf0089a67fe4172948aa3d0e985d913345b1b2d", "filename": "gcc/testsuite/gcc.target/i386/pr102464-sqrtsh.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a07bc9cda77b1211e95ae295b30e46c0d9ee222/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr102464-sqrtsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a07bc9cda77b1211e95ae295b30e46c0d9ee222/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr102464-sqrtsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr102464-sqrtsh.c?ref=1a07bc9cda77b1211e95ae295b30e46c0d9ee222", "patch": "@@ -0,0 +1,23 @@\n+/* PR target/102464.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx512fp16 -ffast-math\" } */\n+\n+#include<math.h>\n+_Float16 foo1 (_Float16 a)\n+{\n+  return sqrtf (a);\n+}\n+\n+_Float16 foo2 (_Float16 a)\n+{\n+  return sqrt (a);\n+}\n+\n+_Float16 foo3 (_Float16 a)\n+{\n+  return sqrtl (a);\n+}\n+\n+/* { dg-final { scan-assembler-not \"vcvtsh2s\\[sd\\]\" } } */\n+/* { dg-final { scan-assembler-not \"extendhfxf\" } } */\n+/* { dg-final { scan-assembler-times \"vsqrtsh\\[^\\n\\r\\]*xmm\\[0-9\\]\" 3 } } */"}]}