{"sha": "4f9427792ea37fd06a9ca0dc965acaf04a33bbb2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY5NDI3NzkyZWEzN2ZkMDZhOWNhMGRjOTY1YWNhZjA0YTMzYmJiMg==", "commit": {"author": {"name": "Renlin Li", "email": "renlin.li@arm.com", "date": "2014-09-23T12:38:37Z"}, "committer": {"name": "Marcus Shawcroft", "email": "mshawcroft@gcc.gnu.org", "date": "2014-09-23T12:38:37Z"}, "message": "[AArch64] Enable shrink wrapping.\n\nFrom-SVN: r215508", "tree": {"sha": "c7bf6e14f4e2ff61a272c74cfad6cdad819769da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7bf6e14f4e2ff61a272c74cfad6cdad819769da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f9427792ea37fd06a9ca0dc965acaf04a33bbb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f9427792ea37fd06a9ca0dc965acaf04a33bbb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f9427792ea37fd06a9ca0dc965acaf04a33bbb2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f9427792ea37fd06a9ca0dc965acaf04a33bbb2/comments", "author": null, "committer": null, "parents": [{"sha": "de72c50f4ca7c11f92daf50c88da4a725ada029a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de72c50f4ca7c11f92daf50c88da4a725ada029a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de72c50f4ca7c11f92daf50c88da4a725ada029a"}], "stats": {"total": 53, "additions": 50, "deletions": 3}, "files": [{"sha": "576835f75b2550b8260348f87073af482d1034e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f9427792ea37fd06a9ca0dc965acaf04a33bbb2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f9427792ea37fd06a9ca0dc965acaf04a33bbb2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4f9427792ea37fd06a9ca0dc965acaf04a33bbb2", "patch": "@@ -1,3 +1,10 @@\n+2014-09-23  Renlin Li  <renlin.li@arm.com>\n+\n+\t* config/aarch64/aarch64.md (return): New.\n+\t(simple_return): Likewise.\n+\t* config/aarch64/aarch64.c (aarch64_use_return_insn_p): New.\n+\t* config/aarch64/aarch64-protos.h (aarch64_use_return_insn_p): New.\n+\n 2014-09-23  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* common/config/aarch64/aarch64-common.c:"}, {"sha": "e32ef645b68d4f367cc92f3953967c5a8ff81a25", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f9427792ea37fd06a9ca0dc965acaf04a33bbb2/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f9427792ea37fd06a9ca0dc965acaf04a33bbb2/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=4f9427792ea37fd06a9ca0dc965acaf04a33bbb2", "patch": "@@ -213,6 +213,7 @@ bool aarch64_simd_valid_immediate (rtx, enum machine_mode, bool,\n \t\t\t\t   struct simd_immediate_info *);\n bool aarch64_symbolic_address_p (rtx);\n bool aarch64_uimm12_shift (HOST_WIDE_INT);\n+bool aarch64_use_return_insn_p (void);\n const char *aarch64_output_casesi (rtx *);\n const char *aarch64_rewrite_selected_cpu (const char *name);\n "}, {"sha": "348308109a98b0b0f9e2e70375b273f7d28fd0ee", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f9427792ea37fd06a9ca0dc965acaf04a33bbb2/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f9427792ea37fd06a9ca0dc965acaf04a33bbb2/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=4f9427792ea37fd06a9ca0dc965acaf04a33bbb2", "patch": "@@ -2340,6 +2340,26 @@ aarch64_expand_prologue (void)\n     }\n }\n \n+/* Return TRUE if we can use a simple_return insn.\n+\n+   This function checks whether the callee saved stack is empty, which\n+   means no restore actions are need. The pro_and_epilogue will use\n+   this to check whether shrink-wrapping opt is feasible.  */\n+\n+bool\n+aarch64_use_return_insn_p (void)\n+{\n+  if (!reload_completed)\n+    return false;\n+\n+  if (crtl->profile)\n+    return false;\n+\n+  aarch64_layout_frame ();\n+\n+  return cfun->machine->frame.frame_size == 0;\n+}\n+\n /* Generate the epilogue instructions for returning from a function.  */\n void\n aarch64_expand_epilogue (bool for_sibcall)"}, {"sha": "74b554ec4df78a963de6572c0175d0304d2bdf15", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f9427792ea37fd06a9ca0dc965acaf04a33bbb2/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f9427792ea37fd06a9ca0dc965acaf04a33bbb2/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=4f9427792ea37fd06a9ca0dc965acaf04a33bbb2", "patch": "@@ -360,6 +360,19 @@\n   [(set_attr \"type\" \"branch\")]\n )\n \n+(define_expand \"return\"\n+  [(simple_return)]\n+  \"aarch64_use_return_insn_p ()\"\n+  \"\"\n+)\n+\n+(define_insn \"simple_return\"\n+  [(simple_return)]\n+  \"\"\n+  \"ret\"\n+  [(set_attr \"type\" \"branch\")]\n+)\n+\n (define_insn \"eh_return\"\n   [(unspec_volatile [(match_operand:DI 0 \"register_operand\" \"r\")]\n     UNSPECV_EH_RETURN)]"}, {"sha": "c354a42d4753d76c84d7e2efbbcca7b8d82409a3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f9427792ea37fd06a9ca0dc965acaf04a33bbb2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f9427792ea37fd06a9ca0dc965acaf04a33bbb2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4f9427792ea37fd06a9ca0dc965acaf04a33bbb2", "patch": "@@ -1,3 +1,9 @@\n+2014-09-24  Renlin Li  <renlin.li@arm.com>\n+\n+\t* gcc.dg/ira-shrinkwrap-prep-1.c: Enable aarch64.\n+\t* gcc.dg/ira-shrinkwrap-prep-2.c: Likewise.\n+\t* gcc.dg/pr10474.c: Likewise.\n+\n 2014-09-20  Mark Wielaard  <mjw@redhat.com>\n \n \t* gcc.dg/guality/const-volatile.c (i): Mark as used."}, {"sha": "615f0329a4b1cf22b6bd04c18ad438b080557660", "filename": "gcc/testsuite/gcc.dg/ira-shrinkwrap-prep-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f9427792ea37fd06a9ca0dc965acaf04a33bbb2/gcc%2Ftestsuite%2Fgcc.dg%2Fira-shrinkwrap-prep-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f9427792ea37fd06a9ca0dc965acaf04a33bbb2/gcc%2Ftestsuite%2Fgcc.dg%2Fira-shrinkwrap-prep-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fira-shrinkwrap-prep-1.c?ref=4f9427792ea37fd06a9ca0dc965acaf04a33bbb2", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target { { x86_64-*-* && lp64 } || { { powerpc*-*-* && lp64 } || arm_nothumb } } } } */\n+/* { dg-do compile { target { { x86_64-*-* && lp64 } || { { powerpc*-*-* && lp64 } || { arm_nothumb || { aarch64*-*-* && lp64 } } } } } } */\n /* { dg-options \"-O3 -fdump-rtl-ira -fdump-rtl-pro_and_epilogue -fno-use-caller-save\"  } */\n \n long __attribute__((noinline, noclone))"}, {"sha": "5f55937380208c8cf8b9d08a13be16a908b35d65", "filename": "gcc/testsuite/gcc.dg/ira-shrinkwrap-prep-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f9427792ea37fd06a9ca0dc965acaf04a33bbb2/gcc%2Ftestsuite%2Fgcc.dg%2Fira-shrinkwrap-prep-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f9427792ea37fd06a9ca0dc965acaf04a33bbb2/gcc%2Ftestsuite%2Fgcc.dg%2Fira-shrinkwrap-prep-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fira-shrinkwrap-prep-2.c?ref=4f9427792ea37fd06a9ca0dc965acaf04a33bbb2", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target { { x86_64-*-* && lp64 } || { { powerpc*-*-* && lp64 } || arm_nothumb } } } } */\n+/* { dg-do compile { target { { x86_64-*-* && lp64 } || { { powerpc*-*-* && lp64 } || { arm_nothumb || { aarch64*-*-* && lp64 } } } } } } */\n /* { dg-options \"-O3 -fdump-rtl-ira -fdump-rtl-pro_and_epilogue -fno-use-caller-save\"  } */\n \n long __attribute__((noinline, noclone))"}, {"sha": "e8dbd3c10b0877401552dee7221150b3ffb4d3ba", "filename": "gcc/testsuite/gcc.dg/pr10474.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f9427792ea37fd06a9ca0dc965acaf04a33bbb2/gcc%2Ftestsuite%2Fgcc.dg%2Fpr10474.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f9427792ea37fd06a9ca0dc965acaf04a33bbb2/gcc%2Ftestsuite%2Fgcc.dg%2Fpr10474.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr10474.c?ref=4f9427792ea37fd06a9ca0dc965acaf04a33bbb2", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target { { x86_64-*-* && lp64 } || { { powerpc*-*-* && lp64 } || arm_nothumb } } } } */\n+/* { dg-do compile { target { { x86_64-*-* && lp64 } || { { powerpc*-*-* && lp64 } || { arm_nothumb || { aarch64*-*-* && lp64 } } } } } } */\n /* { dg-options \"-O3 -fdump-rtl-pro_and_epilogue\"  } */\n \n void f(int *i)"}]}