{"sha": "3ff2f9d1d1316c01f2880e6408116cdc5e928ae0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZmMmY5ZDFkMTMxNmMwMWYyODgwZTY0MDgxMTZjZGM1ZTkyOGFlMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2004-06-01T15:53:07Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2004-06-01T15:53:07Z"}, "message": "revert accidental checkin\n\nFrom-SVN: r82552", "tree": {"sha": "09aa51f673902473c191776109dfa8498e98cf32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09aa51f673902473c191776109dfa8498e98cf32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ff2f9d1d1316c01f2880e6408116cdc5e928ae0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ff2f9d1d1316c01f2880e6408116cdc5e928ae0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ff2f9d1d1316c01f2880e6408116cdc5e928ae0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ff2f9d1d1316c01f2880e6408116cdc5e928ae0/comments", "author": null, "committer": null, "parents": [{"sha": "43daf8ffa83f013ccc2a7db8845375df73f5556b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43daf8ffa83f013ccc2a7db8845375df73f5556b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43daf8ffa83f013ccc2a7db8845375df73f5556b"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "ecace2dd78ea7dc48edd6df62a6110dc29a939e9", "filename": "gcc/cp/call.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff2f9d1d1316c01f2880e6408116cdc5e928ae0/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff2f9d1d1316c01f2880e6408116cdc5e928ae0/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=3ff2f9d1d1316c01f2880e6408116cdc5e928ae0", "patch": "@@ -4326,20 +4326,18 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n }\n \n /* Build a call to __builtin_trap which can be used as an expression of\n-   type TYPE.  This looks like  *(__builtin_trap(), (TYPE*)NULL).  */\n+   type TYPE.  */\n \n static tree\n call_builtin_trap (tree type)\n {\n   tree fn = implicit_built_in_decls[BUILT_IN_TRAP];\n-  tree t;\n \n   my_friendly_assert (fn != NULL, 20030927);\n   fn = build_call (fn, NULL_TREE);\n-  t = convert (build_pointer_type (type), null_node);\n-  t = build (COMPOUND_EXPR, TREE_TYPE (t), fn, t);\n-  t = build_indirect_ref (t, NULL);\n-  return t;\n+  fn = build (COMPOUND_EXPR, type, fn, error_mark_node);\n+  fn = force_target_expr (type, fn);\n+  return fn;\n }\n \n /* ARG is being passed to a varargs function.  Perform any conversions"}]}