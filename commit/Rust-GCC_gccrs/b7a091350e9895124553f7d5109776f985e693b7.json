{"sha": "b7a091350e9895124553f7d5109776f985e693b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdhMDkxMzUwZTk4OTUxMjQ1NTNmN2Q1MTA5Nzc2Zjk4NWU2OTNiNw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-14T21:37:58Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-14T21:37:58Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r979", "tree": {"sha": "5887ae2244b50e8b460d879967f0a1af77e7e310", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5887ae2244b50e8b460d879967f0a1af77e7e310"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7a091350e9895124553f7d5109776f985e693b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7a091350e9895124553f7d5109776f985e693b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7a091350e9895124553f7d5109776f985e693b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7a091350e9895124553f7d5109776f985e693b7/comments", "author": null, "committer": null, "parents": [{"sha": "282ea52ada40ec3efd6e754baf7e5b701538102f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/282ea52ada40ec3efd6e754baf7e5b701538102f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/282ea52ada40ec3efd6e754baf7e5b701538102f"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "e7a9af1a0135beb1241cd5f4680cbc6d1416ea32", "filename": "gcc/expmed.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7a091350e9895124553f7d5109776f985e693b7/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7a091350e9895124553f7d5109776f985e693b7/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=b7a091350e9895124553f7d5109776f985e693b7", "patch": "@@ -972,7 +972,13 @@ extract_bit_field (str_rtx, bitsize, bitnum, unsignedp,\n \t  if (GET_MODE (xtarget) != maxmode)\n \t    {\n \t      if (GET_CODE (xtarget) == REG)\n-\t\txspec_target_subreg = xtarget = gen_lowpart (maxmode, xtarget);\n+\t\t{\n+\t\t  int wider = (GET_MODE_SIZE (maxmode)\n+\t\t\t       > GET_MODE_SIZE (GET_MODE (xtarget)));\n+\t\t  xtarget = gen_lowpart (maxmode, xtarget);\n+\t\t  if (wider)\n+\t\t    xspec_target_subreg = xtarget;\n+\t\t}\n \t      else\n \t\txtarget = gen_reg_rtx (maxmode);\n \t    }\n@@ -1098,7 +1104,13 @@ extract_bit_field (str_rtx, bitsize, bitnum, unsignedp,\n \t  if (GET_MODE (xtarget) != maxmode)\n \t    {\n \t      if (GET_CODE (xtarget) == REG)\n-\t\txspec_target_subreg = xtarget = gen_lowpart (maxmode, xtarget);\n+\t\t{\n+\t\t  int wider = (GET_MODE_SIZE (maxmode)\n+\t\t\t       > GET_MODE_SIZE (GET_MODE (xtarget)));\n+\t\t  xtarget = gen_lowpart (maxmode, xtarget);\n+\t\t  if (wider)\n+\t\t    xspec_target_subreg = xtarget;\n+\t\t}\n \t      else\n \t\txtarget = gen_reg_rtx (maxmode);\n \t    }"}]}