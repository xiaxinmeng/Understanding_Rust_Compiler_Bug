{"sha": "9b239d05ffd5a17ede44abd55bc6622c6e279868", "node_id": "C_kwDOANBUbNoAKDliMjM5ZDA1ZmZkNWExN2VkZTQ0YWJkNTViYzY2MjJjNmUyNzk4Njg", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-09-29T20:19:49Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-10-07T13:55:35Z"}, "message": "c++: Do not warn about lifetime of std::initializer_list<T>& [PR102482]\n\nAn initializer-list constructor taking a non-const lvalue cannot be\ncalled with a temporary, so the array's lifetime probably doesn't end\nwith the full expression. -Winit-list-lifetime should not warn for that\ncase.\n\n\tPR c++/102482\n\ngcc/cp/ChangeLog:\n\n\t* init.c (maybe_warn_list_ctor): Do not warn for a reference to\n\ta non-const std::initializer_list.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/warn/Winit-list5.C: New test.", "tree": {"sha": "9d80b0afbf62a56f873f4e731669d7fef3747f87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d80b0afbf62a56f873f4e731669d7fef3747f87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b239d05ffd5a17ede44abd55bc6622c6e279868", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b239d05ffd5a17ede44abd55bc6622c6e279868", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b239d05ffd5a17ede44abd55bc6622c6e279868", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b239d05ffd5a17ede44abd55bc6622c6e279868/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44b61586d8640b79e78cfdb6a555200ccee8df77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44b61586d8640b79e78cfdb6a555200ccee8df77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44b61586d8640b79e78cfdb6a555200ccee8df77"}], "stats": {"total": 72, "additions": 70, "deletions": 2}, "files": [{"sha": "771a19bc4026e65f8699d765218c3306dda14e79", "filename": "gcc/cp/init.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b239d05ffd5a17ede44abd55bc6622c6e279868/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b239d05ffd5a17ede44abd55bc6622c6e279868/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=9b239d05ffd5a17ede44abd55bc6622c6e279868", "patch": "@@ -749,8 +749,15 @@ maybe_warn_list_ctor (tree member, tree init)\n       || !is_list_ctor (current_function_decl))\n     return;\n \n-  tree parms = FUNCTION_FIRST_USER_PARMTYPE (current_function_decl);\n-  tree initlist = non_reference (TREE_VALUE (parms));\n+  tree parm = FUNCTION_FIRST_USER_PARMTYPE (current_function_decl);\n+  parm = TREE_VALUE (parm);\n+  tree initlist = non_reference (parm);\n+\n+  /* Do not warn if the parameter is an lvalue reference to non-const.  */\n+  if (TYPE_REF_P (parm) && !TYPE_REF_IS_RVALUE (parm)\n+      && !CP_TYPE_CONST_P (initlist))\n+    return;\n+\n   tree targs = CLASSTYPE_TI_ARGS (initlist);\n   tree elttype = TREE_VEC_ELT (targs, 0);\n "}, {"sha": "07b3a69e46b2676a1fb51025d06a5eb037a3577e", "filename": "gcc/testsuite/g++.dg/warn/Winit-list5.C", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b239d05ffd5a17ede44abd55bc6622c6e279868/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWinit-list5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b239d05ffd5a17ede44abd55bc6622c6e279868/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWinit-list5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWinit-list5.C?ref=9b239d05ffd5a17ede44abd55bc6622c6e279868", "patch": "@@ -0,0 +1,61 @@\n+// PR c++/102482\n+// { dg-do compile { target c++11 } }\n+// Test we don't warn for non-const lvalue refs.\n+\n+#include <initializer_list>\n+\n+struct X { };\n+\n+struct span\n+{\n+  span(std::initializer_list<int>& il)\n+  : begin(il.begin()) // { dg-bogus \"initializer_list\" }\n+  { }\n+\n+  const int* begin;\n+};\n+\n+struct span_warn\n+{\n+  span_warn(std::initializer_list<int> il)\n+  : begin(il.begin()) // { dg-warning \"initializer_list\" }\n+  { }\n+\n+  const int* begin;\n+};\n+\n+struct span_warn2\n+{\n+  span_warn2(std::initializer_list<int>&& il)\n+  : begin(il.begin()) // { dg-warning \"initializer_list\" }\n+  { }\n+\n+  const int* begin;\n+};\n+\n+struct span_warn3\n+{\n+  span_warn3(std::initializer_list<int> const& il)\n+  : begin(il.begin()) // { dg-warning \"initializer_list\" }\n+  { }\n+\n+  const int* begin;\n+};\n+\n+struct span_warn4\n+{\n+  span_warn4(std::initializer_list<int> const il)\n+  : begin(il.begin()) // { dg-warning \"initializer_list\" }\n+  { }\n+\n+  const int* begin;\n+};\n+\n+struct span_warn5\n+{\n+  span_warn5(std::initializer_list<int> const&& il)\n+  : begin(il.begin()) // { dg-warning \"initializer_list\" }\n+  { }\n+\n+  const int* begin;\n+};"}]}