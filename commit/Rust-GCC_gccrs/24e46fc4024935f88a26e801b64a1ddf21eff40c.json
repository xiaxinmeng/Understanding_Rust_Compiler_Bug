{"sha": "24e46fc4024935f88a26e801b64a1ddf21eff40c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRlNDZmYzQwMjQ5MzVmODhhMjZlODAxYjY0YTFkZGYyMWVmZjQwYw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-04-03T20:34:07Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-04-03T20:34:07Z"}, "message": "(move_deaths): Handle partial REG_DEAD note for\nmulti-reg hard register.\n\nFrom-SVN: r13836", "tree": {"sha": "964bf0bf3fea0fc22e72d2a86029e068dc8d5d71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/964bf0bf3fea0fc22e72d2a86029e068dc8d5d71"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24e46fc4024935f88a26e801b64a1ddf21eff40c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24e46fc4024935f88a26e801b64a1ddf21eff40c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24e46fc4024935f88a26e801b64a1ddf21eff40c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24e46fc4024935f88a26e801b64a1ddf21eff40c/comments", "author": null, "committer": null, "parents": [{"sha": "7b05e2866148aaa297270c0fe4bcb823c8daf17b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b05e2866148aaa297270c0fe4bcb823c8daf17b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b05e2866148aaa297270c0fe4bcb823c8daf17b"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "a2d63ea82fc8551775f46ba3bd2ba67c8b6c84a5", "filename": "gcc/combine.c", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24e46fc4024935f88a26e801b64a1ddf21eff40c/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24e46fc4024935f88a26e801b64a1ddf21eff40c/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=24e46fc4024935f88a26e801b64a1ddf21eff40c", "patch": "@@ -10800,7 +10800,7 @@ move_deaths (x, maybe_kill_insn, from_cuid, to_insn, pnotes)\n \n \t  if (note != 0 && regno < FIRST_PSEUDO_REGISTER\n \t      && (GET_MODE_SIZE (GET_MODE (XEXP (note, 0)))\n-\t\t  != GET_MODE_SIZE (GET_MODE (x))))\n+\t\t  > GET_MODE_SIZE (GET_MODE (x))))\n \t    {\n \t      int deadregno = REGNO (XEXP (note, 0));\n \t      int deadend\n@@ -10816,18 +10816,28 @@ move_deaths (x, maybe_kill_insn, from_cuid, to_insn, pnotes)\n \t\t\t       gen_rtx (REG, reg_raw_mode[i], i),\n \t\t\t       REG_NOTES (where_dead));\n \t    }\n-\t  /* If we didn't find any note, and we have a multi-reg hard\n+\t  /* If we didn't find any note, or if we found a REG_DEAD note that\n+\t     covers only part of the given reg, and we have a multi-reg hard\n \t     register, then to be safe we must check for REG_DEAD notes\n \t     for each register other than the first.  They could have\n \t     their own REG_DEAD notes lying around.  */\n-\t  else if (note == 0 && regno < FIRST_PSEUDO_REGISTER\n+\t  else if ((note == 0\n+\t\t    || (note != 0\n+\t\t\t&& (GET_MODE_SIZE (GET_MODE (XEXP (note, 0)))\n+\t\t\t    < GET_MODE_SIZE (GET_MODE (x)))))\n+\t\t   && regno < FIRST_PSEUDO_REGISTER\n \t\t   && HARD_REGNO_NREGS (regno, GET_MODE (x)) > 1)\n \t    {\n \t      int ourend = regno + HARD_REGNO_NREGS (regno, GET_MODE (x));\n-\t      int i;\n+\t      int i, offset;\n \t      rtx oldnotes = 0;\n \n-\t      for (i = regno + 1; i < ourend; i++)\n+\t      if (note)\n+\t\toffset = HARD_REGNO_NREGS (regno, GET_MODE (XEXP (note, 0)));\n+\t      else\n+\t\toffset = 1;\n+\n+\t      for (i = regno + offset; i < ourend; i++)\n \t\tmove_deaths (gen_rtx (REG, reg_raw_mode[i], i),\n \t\t\t     maybe_kill_insn, from_cuid, to_insn, &oldnotes);\n \t    }"}]}