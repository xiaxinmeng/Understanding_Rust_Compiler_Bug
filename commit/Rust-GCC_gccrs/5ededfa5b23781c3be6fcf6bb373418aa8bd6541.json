{"sha": "5ededfa5b23781c3be6fcf6bb373418aa8bd6541", "node_id": "C_kwDOANBUbNoAKDVlZGVkZmE1YjIzNzgxYzNiZTZmY2Y2YmIzNzM0MThhYThiZDY1NDE", "commit": {"author": {"name": "Gaius Mulley", "email": "gaiusmod2@gmail.com", "date": "2023-03-23T16:37:11Z"}, "committer": {"name": "Gaius Mulley", "email": "gaiusmod2@gmail.com", "date": "2023-03-23T16:37:11Z"}, "message": "PR modula2/109264 Bugfix resolve opaque types containing sets\n\nResolve opaque type handling.  The bug is caused by the compiler\nattempting to resolve the meta types of a constant constructor.\nIt incorrectly attempts to get the type on an enumeration type\n(resulting in NulSym) which causes the meta resolver to spin.\nSome PHBuild rules (building records need to be copied from P3Build\nso that hidden types are resolved in order across the compile.\n\ngcc/m2/ChangeLog:\n\n\tPR modula2/109264\n\t* gm2-compiler/M2Quads.mod (BuildConstFunctionCall): Comment\n\tout ErrorString in debugging block.\n\t(BuildConstructorStart): Replace Assert with a call to\n\tMetaErrorT3.  Import MetaErrorT3.\n\t* gm2-compiler/PCSymBuild.mod (buildConstFunction): Rename\n\tlocal variables.\n\t(WalkFunctionParam): Remove test for IsEnumeration when\n\tresolving MIN or MAX parameters.\n\t* gm2-compiler/PHBuild.bnf (BlockAssert): New procedure.\n\t(ErrorArrayat): New procedure.\n\t(Expect): Renamed parameter t to tok.\n\t(PushQualident): New rule.\n\t(ConstSetOrQualidentOrFunction): Force AutoOn.\n\t(TypeDeclaration): Add debugging assert.\n\t(SimpleType): Add debugging assert.\n\t(DefaultRecordAttributes): New rule (and bugfix).\n\t(FieldPragmaExpression): New rule (and bugfix).\n\t(PragmaConstExpression): New rule (and bugfix).\n\t(SetOrDesignatorOrFunction): Add debugging assert.\n\t(Block): Add debugging assert.\n\t* gm2-gcc/m2expr.cc (m2expr_ConstantExpressionWarning): int\n\tto bool.\n\t* gm2-gcc/m2expr.h (m2expr_TreeOverflow): int to bool.\n\t(m2expr_GetBooleanTrue): Remove.\n\t(m2expr_GetBooleanFalse): Remove.\n\t* gm2-gcc/m2options.h (M2Options_SetStatistics): Replace\n\tint with bool.\n\ngcc/testsuite/ChangeLog:\n\n\tPR modula2/109264\n\t* gm2/iso/extended-opaque/pass/iso-extended-opaque-pass.exp:\n\tNew test.\n\t* gm2/iso/extended-opaque/pass/stressset.def: New test.\n\t* gm2/iso/extended-opaque/pass/stressset.mod: New test.\n\t* gm2/iso/extended-opaque/pass/testset.mod: New test.\n\t* gm2/projects/iso/small/run/pass/iso-extended-opaque-run-pass.exp:\n\tNew test.\n\t* gm2/projects/iso/small/run/pass/stressset.def: New test.\n\t* gm2/projects/iso/small/run/pass/stressset.mod: New test.\n\t* gm2/projects/iso/small/run/pass/test1.mod: New test.\n\t* gm2/projects/iso/small/run/pass/testlib.def: New test.\n\t* gm2/projects/iso/small/run/pass/testlib.mod: New test.\n\t* gm2/projects/iso/small/run/pass/testset.mod: New test.\n\nSigned-off-by: Gaius Mulley <gaiusmod2@gmail.com>", "tree": {"sha": "4f1e0c0a7bbab2ca8a11f962148a9b45e5b1a193", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f1e0c0a7bbab2ca8a11f962148a9b45e5b1a193"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ededfa5b23781c3be6fcf6bb373418aa8bd6541", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ededfa5b23781c3be6fcf6bb373418aa8bd6541", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ededfa5b23781c3be6fcf6bb373418aa8bd6541", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/comments", "author": null, "committer": null, "parents": [{"sha": "41ade3399bd1ec9927be1bb818965831232eda4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41ade3399bd1ec9927be1bb818965831232eda4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41ade3399bd1ec9927be1bb818965831232eda4b"}], "stats": {"total": 472, "additions": 392, "deletions": 80}, "files": [{"sha": "a44c5c7e71b5d5d2853c2753c6cb34ba8389e9fa", "filename": "gcc/m2/gm2-compiler/M2Quads.mod", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Fm2%2Fgm2-compiler%2FM2Quads.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Fm2%2Fgm2-compiler%2FM2Quads.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Quads.mod?ref=5ededfa5b23781c3be6fcf6bb373418aa8bd6541", "patch": "@@ -34,7 +34,7 @@ FROM M2Scaffold IMPORT DeclareScaffold, mainFunction, initFunction,\n FROM M2MetaError IMPORT MetaError0, MetaError1, MetaError2, MetaError3,\n                         MetaErrors1, MetaErrors2, MetaErrors3,\n                         MetaErrorT0, MetaErrorT1, MetaErrorT2,\n-                        MetaErrorsT1, MetaErrorsT2,\n+                        MetaErrorsT1, MetaErrorsT2, MetaErrorT3,\n                         MetaErrorStringT0, MetaErrorStringT1,\n                         MetaErrorString1, MetaErrorString2,\n                         MetaErrorN1, MetaErrorN2,\n@@ -7492,7 +7492,7 @@ BEGIN\n    IF CompilerDebugging\n    THEN\n       printf2 ('procsym = %d  token = %d\\n', ProcSym, functok) ;\n-      ErrorStringAt (InitString ('constant function'), functok)\n+      (* ErrorStringAt (InitString ('constant function'), functok) *)\n    END ;\n    PushT (NoOfParam) ;\n    IF (ProcSym # Convert) AND\n@@ -12064,7 +12064,12 @@ VAR\n BEGIN\n    PopT (type) ;   (* we ignore the type as we already have the constructor symbol from pass C *)\n    GetConstructorFromFifoQueue (constValue) ;\n-   Assert (type = GetSType (constValue)) ;\n+   IF type # GetSType (constValue)\n+   THEN\n+      MetaErrorT3 (cbratokpos,\n+                   '{%E}the constructor type is {%1ad} and this is different from the constant {%2ad} which has a type {%2tad}',\n+                   type, constValue, constValue)\n+   END ;\n    PushTtok (constValue, cbratokpos) ;\n    PushConstructor (type)\n END BuildConstructorStart ;"}, {"sha": "59b1652baabe80634344616bfce2b57e6e09b6f3", "filename": "gcc/m2/gm2-compiler/PCSymBuild.mod", "status": "modified", "additions": 34, "deletions": 28, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Fm2%2Fgm2-compiler%2FPCSymBuild.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Fm2%2Fgm2-compiler%2FPCSymBuild.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FPCSymBuild.mod?ref=5ededfa5b23781c3be6fcf6bb373418aa8bd6541", "patch": "@@ -1154,7 +1154,7 @@ PROCEDURE InitFunction (m: constType; p, t: CARDINAL; f, s: exprNode; more: BOOL\n VAR\n    n: exprNode ;\n BEGIN\n-   NEW(n) ;\n+   NEW (n) ;\n    WITH n^ DO\n       tag := function ;\n       CASE tag OF\n@@ -1170,7 +1170,7 @@ BEGIN\n \n       END\n    END ;\n-   PushAddress(exprStack, n)\n+   PushAddress (exprStack, n)\n END InitFunction ;\n \n \n@@ -1342,21 +1342,21 @@ PROCEDURE TypeToMeta (type: CARDINAL) : constType ;\n BEGIN\n    IF type=Char\n    THEN\n-      RETURN( char )\n+      RETURN char\n    ELSIF type=Boolean\n    THEN\n-      RETURN( boolean )\n-   ELSIF IsRealType(type)\n+      RETURN boolean\n+   ELSIF IsRealType (type)\n    THEN\n-      RETURN( rtype )\n-   ELSIF IsComplexType(type)\n+      RETURN rtype\n+   ELSIF IsComplexType (type)\n    THEN\n-      RETURN( ctype )\n-   ELSIF IsOrdinalType(type)\n+      RETURN ctype\n+   ELSIF IsOrdinalType (type)\n    THEN\n-      RETURN( ztype )\n+      RETURN ztype\n    ELSE\n-      RETURN( unknown )\n+      RETURN unknown\n    END\n END TypeToMeta ;\n \n@@ -1371,33 +1371,35 @@ END TypeToMeta ;\n \n PROCEDURE buildConstFunction (func: CARDINAL; n: CARDINAL) ;\n VAR\n-   i   : CARDINAL ;\n-   f, s: exprNode ;\n+   i     : CARDINAL ;\n+   first,\n+   second: exprNode ;\n BEGIN\n-   f := NIL ;\n-   s := NIL ;\n+   first := NIL ;\n+   second := NIL ;\n    IF n=1\n    THEN\n-      f := PopAddress(exprStack)\n+      first := PopAddress (exprStack)\n    ELSIF n>=2\n    THEN\n       i := n ;\n       WHILE i>2 DO\n-         s := PopAddress(exprStack) ;\n-         DISPOSE(s) ;\n-         DEC(i)\n+         second := PopAddress (exprStack) ;\n+         DISPOSE (second) ;\n+         DEC (i)\n       END ;\n-      s := PopAddress(exprStack) ;\n-      f := PopAddress(exprStack)\n+      second := PopAddress (exprStack) ;\n+      first := PopAddress (exprStack)\n    END ;\n    IF func=Val\n    THEN\n-      InitConvert(cast, NulSym, f, s)\n+      InitConvert (cast, NulSym, first, second)\n    ELSIF (func=Max) OR (func=Min)\n    THEN\n-      InitFunction(unknown, func, NulSym, f, s, FALSE)\n+      InitFunction (unknown, func, NulSym, first, second, FALSE)\n    ELSE\n-      InitFunction(TypeToMeta(GetSkippedType(func)), func, GetSkippedType(func), f, s, n>2)\n+      InitFunction (TypeToMeta(GetSkippedType(func)), func, GetSkippedType(func),\n+                    first, second, n>2)\n    END\n END buildConstFunction ;\n \n@@ -1788,7 +1790,7 @@ BEGIN\n             THEN\n                IF (func=Min) OR (func=Max)\n                THEN\n-                  IF IsEnumeration(sym) OR IsSet(sym)\n+                  IF IsSet (sym)\n                   THEN\n                      type := SkipType(GetType(sym))\n                   ELSE\n@@ -1832,7 +1834,7 @@ BEGIN\n                type := getEtype(first) ;\n                RETURN( TRUE )\n             END ;\n-            RETURN( WalkFunctionParam(func, first) )\n+            RETURN WalkFunctionParam (func, first)\n          ELSE\n             MetaError1('not expecting this function inside a constant expression {%1Dad}', func)\n          END\n@@ -2059,9 +2061,13 @@ PROCEDURE WalkDes (d: exprNode) : BOOLEAN ;\n BEGIN\n    IF d=NIL\n    THEN\n-      RETURN( FALSE )\n+      RETURN FALSE\n    ELSE\n-      RETURN( doWalkDes(d) )\n+      IF Debugging\n+      THEN\n+         DebugDes (d)\n+      END ;\n+      RETURN doWalkDes (d)\n    END\n END WalkDes ;\n "}, {"sha": "a13da828c946d0b7eaaa507b153f8e5fcf14fdb3", "filename": "gcc/m2/gm2-compiler/PHBuild.bnf", "status": "modified", "additions": 161, "deletions": 41, "changes": 202, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Fm2%2Fgm2-compiler%2FPHBuild.bnf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Fm2%2Fgm2-compiler%2FPHBuild.bnf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FPHBuild.bnf?ref=5ededfa5b23781c3be6fcf6bb373418aa8bd6541", "patch": "@@ -44,7 +44,9 @@ see <https://www.gnu.org/licenses/>.  *)\n \n IMPLEMENTATION MODULE PHBuild ;\n \n-FROM M2LexBuf IMPORT currentstring, currenttoken, GetToken, InsertToken, InsertTokenAndRewind, GetTokenNo ;\n+FROM M2LexBuf IMPORT currentstring, currenttoken, GetToken, InsertToken,\n+                     InsertTokenAndRewind, GetTokenNo, MakeVirtualTok ;\n+\n FROM M2Error IMPORT ErrorStringAt ;\n FROM NameKey IMPORT NulName, Name, makekey ;\n FROM M2Reserved IMPORT NulTok, ByTok, PeriodPeriodTok, tokToTok, toktype ;\n@@ -55,6 +57,7 @@ FROM P2SymBuild IMPORT BuildString, BuildNumber ;\n \n FROM M2Quads IMPORT PushT, PopT, PushTF, PopTF, PopNothing, Annotate,\n                     PushTtok, PushTFtok, PopTtok, PopTFtok, OperandTok,\n+                    PushTFntok, Top,\n                     StartBuildDefFile, StartBuildModFile,\n                     BuildModuleStart,\n                     EndBuildFile,\n@@ -98,7 +101,8 @@ FROM M2Quads IMPORT PushT, PopT, PushTF, PopTF, PopNothing, Annotate,\n                     BeginVarient, EndVarient, ElseVarient,\n                     BeginVarientList, EndVarientList,\n                     AddVarientRange, AddVarientEquality,\n-                    CheckWithReference,\n+                    BuildDefaultFieldAlignment, BuildPragmaField,\n+                    CheckWithReference, DisplayStack, Annotate,\n                     IsAutoPushOn, PushAutoOff, PushAutoOn, PopAuto ;\n \n FROM P3SymBuild IMPORT P3StartBuildProgModule,\n@@ -120,6 +124,8 @@ FROM P3SymBuild IMPORT P3StartBuildProgModule,\n                        BuildSubrange,\n                        BuildNulName ;\n \n+FROM P3SymBuild IMPORT CheckCanBeImported ;\n+\n FROM SymbolTable IMPORT MakeGnuAsm, PutGnuAsmVolatile, PutGnuAsm, PutGnuAsmInput,\n                         PutGnuAsmOutput, PutGnuAsmTrash, PutGnuAsmVolatile,\n                         MakeRegInterface,\n@@ -129,7 +135,7 @@ FROM SymbolTable IMPORT MakeGnuAsm, PutGnuAsmVolatile, PutGnuAsm, PutGnuAsmInput\n                         StartScope, EndScope,\n                         PutIncluded,\n                         IsVarParam, IsProcedure, IsDefImp, IsModule,\n-                        IsRecord,\n+                        IsRecord, IsProcType,\n                         RequestSym,\n                         GetSym, GetLocalSym ;\n \n@@ -140,21 +146,34 @@ FROM M2CaseList IMPORT BeginCaseList, EndCaseList, ElseCase ;\n FROM M2Reserved IMPORT NulTok, ImportTok, ExportTok, QualifiedTok, UnQualifiedTok,\n                        EqualTok, HashTok, LessGreaterTok, LessTok, LessEqualTok,\n                        GreaterTok, GreaterEqualTok, InTok, PlusTok, MinusTok,\n-                       OrTok, TimesTok, DivTok, DivideTok, ModTok, RemTok, AndTok, AmbersandTok ;\n+                       OrTok, TimesTok, DivTok, DivideTok, ModTok, RemTok, AndTok,\n+                       AmbersandTok ;\n \n IMPORT M2Error ;\n \n \n CONST\n    Debugging = FALSE ;\n-   Pass1     = FALSE ;          (* permanently disabled for the time being *)\n-   Pass2     = FALSE ;          (* permanently disabled for the time being *)\n-   Pass3     = FALSE ;\n \n VAR\n    WasNoError: BOOLEAN ;\n \n \n+(*\n+   BlockAssert - used when developing, if disabled the bug (incorrect stack level)\n+                 will be caught by the block and a user error issued.\n+                 This procedure useful to detect the failure earlier.\n+*)\n+\n+PROCEDURE BlockAssert (value: BOOLEAN) ;\n+BEGIN\n+   IF Debugging\n+   THEN\n+      Assert (value)\n+   END\n+END BlockAssert ;\n+\n+\n PROCEDURE ErrorString (s: String) ;\n BEGIN\n    ErrorStringAt(s, GetTokenNo()) ;\n@@ -168,6 +187,11 @@ BEGIN\n END ErrorArray ;\n \n \n+PROCEDURE ErrorArrayAt (a: ARRAY OF CHAR; tok: CARDINAL) ;\n+BEGIN\n+   ErrorStringAt (InitString(a), tok)\n+END ErrorArrayAt ;\n+\n % declaration PHBuild begin\n \n \n@@ -315,7 +339,8 @@ BEGIN\n       (NOT InStopSet(identtok, stopset0, stopset1, stopset2))\n    THEN\n       (* SyntaxCheck would fail since currentoken is not part of the stopset\n-         we check to see whether any of currenttoken might be a commonly omitted token *)\n+         we check to see whether any of currenttoken might be a commonly\n+         omitted token.  *)\n       IF CheckAndInsert(semicolontok, stopset0, stopset1, stopset2) OR\n          CheckAndInsert(rsbratok, stopset0, stopset1, stopset2) OR\n          CheckAndInsert(rparatok, stopset0, stopset1, stopset2) OR\n@@ -334,19 +359,16 @@ END PeepToken ;\n    Expect -\n *)\n \n-PROCEDURE Expect (t: toktype; stopset0: SetOfStop0; stopset1: SetOfStop1; stopset2: SetOfStop2) ;\n+PROCEDURE Expect (tok: toktype; stopset0: SetOfStop0; stopset1: SetOfStop1;\n+                  stopset2: SetOfStop2) ;\n BEGIN\n-   IF currenttoken=t\n+   IF currenttoken=tok\n    THEN\n-      GetToken ;\n-      IF Pass1\n-      THEN\n-         PeepToken(stopset0, stopset1, stopset2)\n-      END\n+      GetToken\n    ELSE\n-      MissingToken(t)\n+      MissingToken (tok)\n    END ;\n-   SyntaxCheck(stopset0, stopset1, stopset2)\n+   SyntaxCheck (stopset0, stopset1, stopset2)\n END Expect ;\n \n \n@@ -358,8 +380,8 @@ END Expect ;\n PROCEDURE CompilationUnit () : BOOLEAN ;\n BEGIN\n    WasNoError := TRUE ;\n-   FileUnit(SetOfStop0{eoftok}, SetOfStop1{}, SetOfStop2{}) ;\n-   RETURN( WasNoError )\n+   FileUnit (SetOfStop0{eoftok}, SetOfStop1{}, SetOfStop2{}) ;\n+   RETURN WasNoError\n END CompilationUnit ;\n \n \n@@ -369,11 +391,11 @@ END CompilationUnit ;\n \n PROCEDURE Ident (stopset0: SetOfStop0; stopset1: SetOfStop1; stopset2: SetOfStop2) ;\n BEGIN\n-   IF IsAutoPushOn()\n+   IF IsAutoPushOn ()\n    THEN\n-      PushTF(makekey(currentstring), identtok)\n+      PushTF (makekey (currentstring), identtok)\n    END ;\n-   Expect(identtok, stopset0, stopset1, stopset2)\n+   Expect (identtok, stopset0, stopset1, stopset2)\n END Ident ;\n \n \n@@ -592,6 +614,7 @@ ImplementationOrProgramModule :=                                           % Pus\n \n Number := Integer | Real =:\n \n+\n Qualident :=                                                               % VAR name: Name ;\n                                                                                  Type, Sym, tok: CARDINAL ; %\n              Ident\n@@ -616,6 +639,71 @@ Qualident :=                                                               % VAR\n              { \".\" Ident }                                                 % END %\n            =:\n \n+PushQualident :=                                                           % VAR name         : Name ;\n+                                                                                 init, ip1    : CARDINAL ;\n+                                                                                 tok, tokstart: CARDINAL ; %\n+                                                                           % PushAutoOn %\n+             Ident                                                         % IF IsAutoPushOn()\n+                                                                             THEN\n+                                                                                PopTtok (name, tokstart) ;\n+                                                                                tok := tokstart ;\n+                                                                                init := GetSym (name) ;\n+                                                                                IF init=NulSym\n+                                                                                THEN\n+                                                                                   PushTFntok (NulSym, NulSym, name, tok)\n+                                                                                ELSE\n+                                                                                   WHILE IsDefImp (init) OR IsModule (init) DO\n+                                                                                      IF currenttoken # periodtok\n+                                                                                      THEN\n+                                                                                         ErrorArrayAt (\"expecting '.' after module in the construction of a qualident\", tok) ;\n+                                                                                         IF tok#tokstart\n+                                                                                         THEN\n+                                                                                            tok := MakeVirtualTok (tokstart, tokstart, tok)\n+                                                                                         END ;\n+                                                                                         PushTtok (init, tok) ;\n+                                                                                         PopAuto ;\n+                                                                                         RETURN\n+                                                                                      ELSE\n+                                                                                         Expect (periodtok, stopset0, stopset1, stopset2 + SetOfStop2{identtok}) ;\n+                                                                                         StartScope (init) ;\n+                                                                                         Ident (stopset0, stopset1, stopset2) ;\n+                                                                                         PopTtok (name, tok) ;\n+                                                                                         ip1 := GetSym (name) ;\n+                                                                                         IF ip1 = NulSym\n+                                                                                         THEN\n+                                                                                            ErrorArrayAt (\"unknown ident in the construction of a qualident\", tok) ;\n+                                                                                            EndScope ;\n+                                                                                            IF tok#tokstart\n+                                                                                            THEN\n+                                                                                               tok := MakeVirtualTok (tokstart, tokstart, tok)\n+                                                                                            END ;\n+                                                                                            PushTFntok (NulSym, NulSym, name, tok) ;\n+                                                                                            PopAuto ;\n+                                                                                            RETURN\n+                                                                                         ELSE\n+                                                                                            PutIncluded (ip1)\n+                                                                                         END ;\n+                                                                                         EndScope ;\n+                                                                                         CheckCanBeImported (init, ip1) ;\n+                                                                                         init := ip1\n+                                                                                      END\n+                                                                                   END ;\n+                                                                                   IF tok#tokstart\n+                                                                                   THEN\n+                                                                                      tok := MakeVirtualTok (tokstart, tokstart, tok)\n+                                                                                   END ;\n+                                                                                   IF IsProcedure (init) OR IsProcType (init)\n+                                                                                   THEN\n+                                                                                      PushTtok (init, tok)\n+                                                                                   ELSE\n+                                                                                      PushTFtok (init, GetType(init), tok)\n+                                                                                   END\n+                                                                                END\n+                                                                             ELSE %\n+             { \".\" Ident }                                                 % END %\n+                                                                           % PopAuto %\n+           =:\n+\n ConstantDeclaration :=                                                     % PushAutoOn %\n                                                                            % VAR tokno: CARDINAL ; %\n                        ( Ident \"=\"                                         % tokno := GetTokenNo () %\n@@ -709,11 +797,16 @@ Constructor := '{'                                                         % Bui\n                   [ ArraySetRecordValue ]                                  % BuildConstructorEnd (GetTokenNo())  %\n                '}' =:\n \n-ConstSetOrQualidentOrFunction := Qualident\n-                                 [ Constructor | ConstActualParameters     % BuildConstFunctionCall %\n-                                                                       ]\n-                                   |                                       % BuildTypeForConstructor %\n-                                     Constructor =:\n+ConstSetOrQualidentOrFunction :=                                            % PushAutoOn %\n+                                 (\n+                                    Qualident\n+                                    [ Constructor |\n+                                       ConstActualParameters               % BuildConstFunctionCall %\n+                                                                          ]\n+                                      |                                    % BuildTypeForConstructor %\n+                                        Constructor\n+                                 )                                          % PopAuto %\n+                                =:\n \n ConstAttribute := \"__ATTRIBUTE__\" \"__BUILTIN__\" \"(\" \"(\" ConstAttributeExpression \")\" \")\" =:\n \n@@ -730,7 +823,10 @@ ByteAlignment := '<*'                                                      % Pus\n \n Alignment := [ ByteAlignment ] =:\n \n-TypeDeclaration := Ident \"=\" Type Alignment\n+TypeDeclaration :=                                                         % VAR top: CARDINAL ; %\n+                                                                           % top := Top () %\n+                   Ident \"=\" Type Alignment\n+                                                                           % BlockAssert (top = Top ()) %\n                 =:\n \n Type :=\n@@ -742,7 +838,11 @@ Type :=\n           | ProcedureType )                                                % PopAuto %\n       =:\n \n-SimpleType := Qualident [ SubrangeType ] | Enumeration | SubrangeType =:\n+SimpleType :=                                                              % VAR top: CARDINAL ; %\n+                                                                           % top := Top () %\n+              ( Qualident [ SubrangeType ] | Enumeration | SubrangeType )\n+                                                                           % BlockAssert (top = Top ()) %\n+            =:\n \n Enumeration := \"(\"\n                    ( IdentList\n@@ -782,18 +882,24 @@ ArrayType := \"ARRAY\"\n \n RecordType := \"RECORD\" [ DefaultRecordAttributes ] FieldListSequence \"END\" =:\n \n-DefaultRecordAttributes := '<*' AttributeExpression '*>' =:\n+DefaultRecordAttributes := '<*'                                           % PushAutoOn %\n+                                AttributeExpression                       % BuildDefaultFieldAlignment %\n+                                                                          % PopAuto %\n+                                                    '*>' =:\n \n RecordFieldPragma := [ '<*' FieldPragmaExpression\n-                        { ',' FieldPragmaExpression } '*>' ] =:\n+                            { ',' FieldPragmaExpression } '*>' ] =:\n \n-FieldPragmaExpression :=                                                    % PushAutoOff %\n-                         Ident [ '(' ConstExpression ')' ]                  % PopAuto %\n+FieldPragmaExpression :=                                                   % PushAutoOn %\n+                         Ident PragmaConstExpression                       % BuildPragmaField %\n+                                                                           % PopAuto %\n                                                            =:\n \n-AttributeExpression :=                                                      % PushAutoOff %\n-                       Ident '(' ConstExpression ')'                        % PopAuto %\n-                                                      =:\n+PragmaConstExpression := ( '(' ConstExpression ')' |                       % PushT(NulSym) %\n+                                                                           % Annotate('NulSym||no pragma const') %\n+                                                     )     =:\n+\n+AttributeExpression := Ident '(' ConstExpression ')' =:\n \n FieldListSequence := FieldListStatement { \";\" FieldListStatement } =:\n \n@@ -1002,12 +1108,21 @@ Term := Factor { SilentMulOperator Factor\n Factor := Number | string | SetOrDesignatorOrFunction |\n           \"(\" Expression \")\" | \"NOT\" Factor | ConstAttribute =:\n \n--- again Set | Designator causes problems as both has a first symbol, ident or Qualident\n+-- again Set | Designator causes problems as both have a first symbol, ident or Qualident\n+\n+ParseConstructor := \"{\" [ SilentElement { \",\" SilentElement } ] \"}\" =:\n+\n \n-SetOrDesignatorOrFunction := ( Qualident [ Constructor |\n-                                           SimpleDes [ ActualParameters ]\n-                                         ] | Constructor\n+SetOrDesignatorOrFunction :=                                               % VAR n: CARDINAL ; %\n+                                                                           % n := Top () %\n+                                                                           % Assert (NOT IsAutoPushOn ()) %\n+                             ( Qualident [ ParseConstructor\n+                                                             |\n+                                           SilentSimpleDes [ SilentActualParameters ]\n+                                         ] |\n+                                             ParseConstructor\n                              )\n+                                                                           % Assert (n = Top ()) %\n                            =:\n \n -- SimpleDes := { \".\" Ident | \"[\" ExpList \"]\" | \"^\" } =:\n@@ -1147,7 +1262,12 @@ AttributeUnused := [ \"<*\" Ident \"*>\" ] =:\n ProcedureBlock := { Declaration } [ \"BEGIN\" BlockBody ] \"END\"\n                 =:\n \n-Block := { Declaration } InitialBlock FinalBlock \"END\" =:\n+Block :=                                                                   % VAR top: CARDINAL ; %\n+                                                                           % top := Top () %\n+         { Declaration }                                                   % BlockAssert (top = Top ()) %\n+                         InitialBlock                                      % BlockAssert (top = Top ()) %\n+                                      FinalBlock                           % BlockAssert (top = Top ()) %\n+                                                 \"END\" =:\n \n InitialBlock := [ \"BEGIN\" BlockBody ] =:\n "}, {"sha": "ef8368af2a446f5db9fa0773dc92f7ae5b33f783", "filename": "gcc/m2/gm2-gcc/m2expr.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Fm2%2Fgm2-gcc%2Fm2expr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Fm2%2Fgm2-gcc%2Fm2expr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2expr.cc?ref=5ededfa5b23781c3be6fcf6bb373418aa8bd6541", "patch": "@@ -939,7 +939,7 @@ m2expr_ConstantExpressionWarning (tree value)\n    an overflow.  No error message or warning is emitted and no\n    modification is made to, t.  */\n \n-int\n+bool\n m2expr_TreeOverflow (tree t)\n {\n   if ((TREE_CODE (t) == INTEGER_CST"}, {"sha": "3701bcd2772222ec671f85a450cf5c58db040200", "filename": "gcc/m2/gm2-gcc/m2expr.h", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Fm2%2Fgm2-gcc%2Fm2expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Fm2%2Fgm2-gcc%2Fm2expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2expr.h?ref=5ededfa5b23781c3be6fcf6bb373418aa8bd6541", "patch": "@@ -120,7 +120,7 @@ EXTERN tree m2expr_BuildTrunc (tree op1);\n EXTERN tree m2expr_BuildCoerce (location_t location, tree des, tree type,\n                                 tree expr);\n EXTERN tree m2expr_RemoveOverflow (tree t);\n-EXTERN int m2expr_TreeOverflow (tree t);\n+EXTERN bool m2expr_TreeOverflow (tree t);\n \n EXTERN unsigned int m2expr_StringLength (tree string);\n EXTERN tree m2expr_FoldAndStrip (tree t);\n@@ -220,11 +220,6 @@ EXTERN tree m2expr_GetWordOne (location_t location);\n EXTERN tree m2expr_GetPointerZero (location_t location);\n EXTERN tree m2expr_GetPointerOne (location_t location);\n \n-#if 0\n-EXTERN tree m2expr_GetBooleanTrue (void);\n-EXTERN tree m2expr_GetBooleanFalse (void);\n-#endif\n-\n EXTERN int m2expr_CompareTrees (tree e1, tree e2);\n EXTERN tree m2expr_build_unary_op (location_t location ATTRIBUTE_UNUSED,\n                                    enum tree_code code, tree arg,"}, {"sha": "767b617282a3a0769f0927b4e33d6ccdc7be3e3b", "filename": "gcc/m2/gm2-gcc/m2options.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Fm2%2Fgm2-gcc%2Fm2options.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Fm2%2Fgm2-gcc%2Fm2options.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2options.h?ref=5ededfa5b23781c3be6fcf6bb373418aa8bd6541", "patch": "@@ -96,7 +96,7 @@ EXTERN bool M2Options_SetCpp (bool value);\n EXTERN void M2Options_SetSwig (bool value);\n EXTERN void M2Options_SetForcedLocation (location_t location);\n EXTERN location_t M2Options_OverrideLocation (location_t location);\n-EXTERN void M2Options_SetStatistics (int on);\n+EXTERN void M2Options_SetStatistics (bool on);\n EXTERN void M2Options_CppProg (const char *program);\n EXTERN void M2Options_CppArg (const char *opt, const char *arg, bool joined);\n EXTERN void M2Options_SetWholeProgram (bool value);"}, {"sha": "8b7857e181dee2fc07593025edaa44ae56a8221a", "filename": "gcc/testsuite/gm2/iso/extended-opaque/pass/iso-extended-opaque-pass.exp", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Ftestsuite%2Fgm2%2Fiso%2Fextended-opaque%2Fpass%2Fiso-extended-opaque-pass.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Ftestsuite%2Fgm2%2Fiso%2Fextended-opaque%2Fpass%2Fiso-extended-opaque-pass.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fiso%2Fextended-opaque%2Fpass%2Fiso-extended-opaque-pass.exp?ref=5ededfa5b23781c3be6fcf6bb373418aa8bd6541", "patch": "@@ -0,0 +1,36 @@\n+# Copyright (C) 2003-2023 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# This file was written by Gaius Mulley (gaius.mulley@southwales.ac.uk)\n+# for GNU Modula-2.\n+\n+if $tracelevel then {\n+    strace $tracelevel\n+}\n+\n+# load support procs\n+load_lib gm2-torture.exp\n+\n+gm2_init_iso \"${srcdir}/gm2/iso/extended-opaque/pass\" -fextended-opaque\n+\n+foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $testcase] then {\n+\tcontinue\n+    }\n+\n+    gm2-torture $testcase\n+}"}, {"sha": "315ff70040c3631f272801364f6e9c84c880c9b2", "filename": "gcc/testsuite/gm2/iso/extended-opaque/pass/stressset.def", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Ftestsuite%2Fgm2%2Fiso%2Fextended-opaque%2Fpass%2Fstressset.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Ftestsuite%2Fgm2%2Fiso%2Fextended-opaque%2Fpass%2Fstressset.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fiso%2Fextended-opaque%2Fpass%2Fstressset.def?ref=5ededfa5b23781c3be6fcf6bb373418aa8bd6541", "patch": "@@ -0,0 +1,6 @@\n+DEFINITION MODULE stressset ;\n+\n+TYPE\n+   dataType ;\n+\n+END stressset.\n\\ No newline at end of file"}, {"sha": "940c9882c0dcb61a52e48ab85d27bb350659f221", "filename": "gcc/testsuite/gm2/iso/extended-opaque/pass/stressset.mod", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Ftestsuite%2Fgm2%2Fiso%2Fextended-opaque%2Fpass%2Fstressset.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Ftestsuite%2Fgm2%2Fiso%2Fextended-opaque%2Fpass%2Fstressset.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fiso%2Fextended-opaque%2Fpass%2Fstressset.mod?ref=5ededfa5b23781c3be6fcf6bb373418aa8bd6541", "patch": "@@ -0,0 +1,18 @@\n+IMPLEMENTATION MODULE stressset ;\n+\n+TYPE\n+   enum = (red, blue, green) ;\n+\n+CONST\n+   (* max = ORD (MAX (enum)) + 1 ; *)\n+   max = MAX (enum) + 1 ;\n+\n+\n+TYPE\n+   dataType = POINTER TO RECORD\n+                            next    : dataType ;\n+\t\t\t    contents: ARRAY [0..max] OF CARDINAL ;\n+\t\t\t    set     : SET OF enum ;\n+                         END ;\n+\n+END stressset.\n\\ No newline at end of file"}, {"sha": "d79403ed481be0fe4707975e8697f63812d86af3", "filename": "gcc/testsuite/gm2/iso/extended-opaque/pass/testset.mod", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Ftestsuite%2Fgm2%2Fiso%2Fextended-opaque%2Fpass%2Ftestset.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Ftestsuite%2Fgm2%2Fiso%2Fextended-opaque%2Fpass%2Ftestset.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fiso%2Fextended-opaque%2Fpass%2Ftestset.mod?ref=5ededfa5b23781c3be6fcf6bb373418aa8bd6541", "patch": "@@ -0,0 +1,8 @@\n+MODULE testset ;\n+\n+FROM stressset IMPORT dataType ;\n+\n+VAR\n+   data: dataType ;\n+BEGIN\n+END testset.\n\\ No newline at end of file"}, {"sha": "bb9f19ef217f9902af53777dfd159a660b9f3357", "filename": "gcc/testsuite/gm2/projects/iso/small/run/pass/iso-extended-opaque-run-pass.exp", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Fsmall%2Frun%2Fpass%2Fiso-extended-opaque-run-pass.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Fsmall%2Frun%2Fpass%2Fiso-extended-opaque-run-pass.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Fsmall%2Frun%2Fpass%2Fiso-extended-opaque-run-pass.exp?ref=5ededfa5b23781c3be6fcf6bb373418aa8bd6541", "patch": "@@ -0,0 +1,40 @@\n+# Copyright (C) 2023 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# This file was written by Gaius Mulley (gaius.mulley@southwales.ac.uk)\n+# for GNU Modula-2.\n+\n+if $tracelevel then {\n+    strace $tracelevel\n+}\n+\n+# load support procs\n+load_lib gm2-torture.exp\n+\n+gm2_init_iso \"${srcdir}/gm2/projects/iso/small/run/pass\"\n+gm2_link_obj testlib.o\n+\n+foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {\n+    # If we're only testing specific files and this isn't one of them, skip it.\n+    if ![runtest_file_p $runtests $testcase] then {\n+\tcontinue\n+    }\n+\n+    if { $testcase != \"$srcdir/$subdir/testlib.mod\" } {\n+        gm2_target_compile $srcdir/$subdir/testlib.mod testlib.o object \"-g\"\n+\tgm2-torture-execute $testcase \"\" \"pass\"\n+    }\n+}"}, {"sha": "315ff70040c3631f272801364f6e9c84c880c9b2", "filename": "gcc/testsuite/gm2/projects/iso/small/run/pass/stressset.def", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Fsmall%2Frun%2Fpass%2Fstressset.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Fsmall%2Frun%2Fpass%2Fstressset.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Fsmall%2Frun%2Fpass%2Fstressset.def?ref=5ededfa5b23781c3be6fcf6bb373418aa8bd6541", "patch": "@@ -0,0 +1,6 @@\n+DEFINITION MODULE stressset ;\n+\n+TYPE\n+   dataType ;\n+\n+END stressset.\n\\ No newline at end of file"}, {"sha": "940c9882c0dcb61a52e48ab85d27bb350659f221", "filename": "gcc/testsuite/gm2/projects/iso/small/run/pass/stressset.mod", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Fsmall%2Frun%2Fpass%2Fstressset.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Fsmall%2Frun%2Fpass%2Fstressset.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Fsmall%2Frun%2Fpass%2Fstressset.mod?ref=5ededfa5b23781c3be6fcf6bb373418aa8bd6541", "patch": "@@ -0,0 +1,18 @@\n+IMPLEMENTATION MODULE stressset ;\n+\n+TYPE\n+   enum = (red, blue, green) ;\n+\n+CONST\n+   (* max = ORD (MAX (enum)) + 1 ; *)\n+   max = MAX (enum) + 1 ;\n+\n+\n+TYPE\n+   dataType = POINTER TO RECORD\n+                            next    : dataType ;\n+\t\t\t    contents: ARRAY [0..max] OF CARDINAL ;\n+\t\t\t    set     : SET OF enum ;\n+                         END ;\n+\n+END stressset.\n\\ No newline at end of file"}, {"sha": "0bc301661130d3ecc78c40d42d8f2c00d802e590", "filename": "gcc/testsuite/gm2/projects/iso/small/run/pass/test1.mod", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Fsmall%2Frun%2Fpass%2Ftest1.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Fsmall%2Frun%2Fpass%2Ftest1.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Fsmall%2Frun%2Fpass%2Ftest1.mod?ref=5ededfa5b23781c3be6fcf6bb373418aa8bd6541", "patch": "@@ -0,0 +1,9 @@\n+MODULE test1 ;\n+\n+FROM testlib IMPORT opaque ;\n+\n+VAR\n+   ptr: opaque ;\n+BEGIN\n+\n+END test1."}, {"sha": "6b375c372d487a297acf5ff69c26f635076597fc", "filename": "gcc/testsuite/gm2/projects/iso/small/run/pass/testlib.def", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Fsmall%2Frun%2Fpass%2Ftestlib.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Fsmall%2Frun%2Fpass%2Ftestlib.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Fsmall%2Frun%2Fpass%2Ftestlib.def?ref=5ededfa5b23781c3be6fcf6bb373418aa8bd6541", "patch": "@@ -0,0 +1,16 @@\n+DEFINITION MODULE testlib ;\n+\n+(*\n+    Title      : testlib\n+    Author     : Gaius Mulley\n+    System     : GNU Modula-2\n+    Date       : Tue Mar 21 13:43:56 2023\n+    Revision   : $Version$\n+    Description:\n+*)\n+\n+TYPE\n+   opaque ;\n+\n+\n+END testlib."}, {"sha": "cd2594f5a80ad70e2371d813036e09cca57e451f", "filename": "gcc/testsuite/gm2/projects/iso/small/run/pass/testlib.mod", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Fsmall%2Frun%2Fpass%2Ftestlib.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Fsmall%2Frun%2Fpass%2Ftestlib.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Fsmall%2Frun%2Fpass%2Ftestlib.mod?ref=5ededfa5b23781c3be6fcf6bb373418aa8bd6541", "patch": "@@ -0,0 +1,21 @@\n+IMPLEMENTATION MODULE testlib ;\n+\n+\n+CONST\n+   Red = cons {2, NIL, arrayT {1, 2, 3}} ;\n+\n+TYPE\n+   cons = RECORD\n+             high: CARDINAL ;\n+             ptr : opaque ;\n+             content: arrayT ;\n+          END ;\n+\n+   arrayT = ARRAY [MIN(enum)..MAX(enum)] OF CARDINAL ;\n+\n+   enum = (red, blue, green) ;\n+\n+   opaque = POINTER TO CHAR ;\n+\n+\n+END testlib."}, {"sha": "d79403ed481be0fe4707975e8697f63812d86af3", "filename": "gcc/testsuite/gm2/projects/iso/small/run/pass/testset.mod", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Fsmall%2Frun%2Fpass%2Ftestset.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ededfa5b23781c3be6fcf6bb373418aa8bd6541/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Fsmall%2Frun%2Fpass%2Ftestset.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Fsmall%2Frun%2Fpass%2Ftestset.mod?ref=5ededfa5b23781c3be6fcf6bb373418aa8bd6541", "patch": "@@ -0,0 +1,8 @@\n+MODULE testset ;\n+\n+FROM stressset IMPORT dataType ;\n+\n+VAR\n+   data: dataType ;\n+BEGIN\n+END testset.\n\\ No newline at end of file"}]}