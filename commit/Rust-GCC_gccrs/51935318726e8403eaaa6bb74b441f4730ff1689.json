{"sha": "51935318726e8403eaaa6bb74b441f4730ff1689", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE5MzUzMTg3MjZlODQwM2VhYWE2YmI3NGI0NDFmNDczMGZmMTY4OQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2013-11-20T11:56:44Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2013-11-20T11:56:44Z"}, "message": "fold-const.c (fold_binary_loc): Use unsigned rather than signed HOST_WIDE_INTs when folding (x >> c) << c.\n\ngcc/\n\t* fold-const.c (fold_binary_loc): Use unsigned rather than signed\n\tHOST_WIDE_INTs when folding (x >> c) << c.\n\nFrom-SVN: r205101", "tree": {"sha": "351403a0f3ed8457cc8435ac88387cb1cae6f1bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/351403a0f3ed8457cc8435ac88387cb1cae6f1bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51935318726e8403eaaa6bb74b441f4730ff1689", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51935318726e8403eaaa6bb74b441f4730ff1689", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51935318726e8403eaaa6bb74b441f4730ff1689", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51935318726e8403eaaa6bb74b441f4730ff1689/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6b3b8c27548006b33b6cf3bb57889b6e460cd231", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b3b8c27548006b33b6cf3bb57889b6e460cd231", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b3b8c27548006b33b6cf3bb57889b6e460cd231"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "b83dc021ae5d7076660a90c98a8e23656cbfe03f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51935318726e8403eaaa6bb74b441f4730ff1689/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51935318726e8403eaaa6bb74b441f4730ff1689/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=51935318726e8403eaaa6bb74b441f4730ff1689", "patch": "@@ -1,3 +1,8 @@\n+2013-11-20  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* fold-const.c (fold_binary_loc): Use unsigned rather than signed\n+\tHOST_WIDE_INTs when folding (x >> c) << c.\n+\n 2013-11-20  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \t    Dominik Vogt  <vogt@linux.vnet.ibm.com>\n "}, {"sha": "4e1c9a1b3cb81443755edb5ff64853ef8ae3fcd6", "filename": "gcc/fold-const.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51935318726e8403eaaa6bb74b441f4730ff1689/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51935318726e8403eaaa6bb74b441f4730ff1689/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=51935318726e8403eaaa6bb74b441f4730ff1689", "patch": "@@ -12679,13 +12679,13 @@ fold_binary_loc (location_t loc,\n       if (((code == LSHIFT_EXPR && TREE_CODE (arg0) == RSHIFT_EXPR)\n            || (TYPE_UNSIGNED (type)\n \t       && code == RSHIFT_EXPR && TREE_CODE (arg0) == LSHIFT_EXPR))\n-\t  && tree_fits_shwi_p (arg1)\n-\t  && TREE_INT_CST_LOW (arg1) < prec\n-\t  && tree_fits_shwi_p (TREE_OPERAND (arg0, 1))\n-\t  && TREE_INT_CST_LOW (TREE_OPERAND (arg0, 1)) < prec)\n+\t  && tree_fits_uhwi_p (arg1)\n+\t  && tree_to_uhwi (arg1) < prec\n+\t  && tree_fits_uhwi_p (TREE_OPERAND (arg0, 1))\n+\t  && tree_to_uhwi (TREE_OPERAND (arg0, 1)) < prec)\n \t{\n-\t  HOST_WIDE_INT low0 = TREE_INT_CST_LOW (TREE_OPERAND (arg0, 1));\n-\t  HOST_WIDE_INT low1 = TREE_INT_CST_LOW (arg1);\n+\t  HOST_WIDE_INT low0 = tree_to_uhwi (TREE_OPERAND (arg0, 1));\n+\t  HOST_WIDE_INT low1 = tree_to_uhwi (arg1);\n \t  tree lshift;\n \t  tree arg00;\n "}]}