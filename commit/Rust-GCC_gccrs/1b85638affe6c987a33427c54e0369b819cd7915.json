{"sha": "1b85638affe6c987a33427c54e0369b819cd7915", "node_id": "C_kwDOANBUbNoAKDFiODU2MzhhZmZlNmM5ODdhMzM0MjdjNTRlMDM2OWI4MTljZDc5MTU", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-03-13T09:23:07Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-03-13T09:23:07Z"}, "message": "texi + c-target.def: Fix typos\n\ngcc/c-family/ChangeLog:\n\n\t* c-target.def (check_string_object_format_arg): Fix description typo.\n\ngcc/ChangeLog:\n\n\t* doc/invoke.texi: Fix typos.\n\t* doc/tm.texi.in: Remove duplicated word.\n\t* doc/tm.texi: Regenerate.\n\nlibgomp/ChangeLog:\n\n\t* libgomp.texi: Fix typo.", "tree": {"sha": "a552f47c24bd4849b1346a3ec45365c69fe6cdfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a552f47c24bd4849b1346a3ec45365c69fe6cdfc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b85638affe6c987a33427c54e0369b819cd7915", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b85638affe6c987a33427c54e0369b819cd7915", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b85638affe6c987a33427c54e0369b819cd7915", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b85638affe6c987a33427c54e0369b819cd7915/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57eeedda23c952951b5c40859ded3080ec9c7b03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57eeedda23c952951b5c40859ded3080ec9c7b03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57eeedda23c952951b5c40859ded3080ec9c7b03"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "141dcf307166479210561deadb717b160d8c0163", "filename": "gcc/c-family/c-target.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b85638affe6c987a33427c54e0369b819cd7915/gcc%2Fc-family%2Fc-target.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b85638affe6c987a33427c54e0369b819cd7915/gcc%2Fc-family%2Fc-target.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-target.def?ref=1b85638affe6c987a33427c54e0369b819cd7915", "patch": "@@ -81,7 +81,7 @@ DEFHOOK\n \n DEFHOOK\n (check_string_object_format_arg,\n- \"If a target implements string objects then this hook should should\\n\\\n+ \"If a target implements string objects then this hook should\\n\\\n provide a facility to check the function arguments in @var{args_list}\\n\\\n against the format specifiers in @var{format_arg} where the type of\\n\\\n @var{format_arg} is one recognized as a valid string reference type.\","}, {"sha": "2a14e1a947268182b4dcc8210fc3cb618910539d", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b85638affe6c987a33427c54e0369b819cd7915/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b85638affe6c987a33427c54e0369b819cd7915/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=1b85638affe6c987a33427c54e0369b819cd7915", "patch": "@@ -8238,7 +8238,7 @@ Warn when attempting to deallocate an object that was either not allocated\n on the heap, or by using a pointer that was not returned from a prior call\n to the corresponding allocation function.  For example, because the call\n to @code{stpcpy} returns a pointer to the terminating nul character and\n-not to the begginning of the object, the call to @code{free} below is\n+not to the beginning of the object, the call to @code{free} below is\n diagnosed.\n \n @smallexample\n@@ -9527,7 +9527,7 @@ accessing more than the maximum number of elements may be diagnosed.\n For example, the warning triggers for the following redeclarations because\n the first one allows an array of any size to be passed to @code{f} while\n the second one specifies that the array argument must have at least @code{n}\n-elements.  In addition, calling @code{f} with the assotiated VLA bound\n+elements.  In addition, calling @code{f} with the associated VLA bound\n parameter in excess of the actual VLA bound triggers a warning as well.\n \n @smallexample\n@@ -19639,7 +19639,7 @@ Generate instructions supported by barrel shifter.  This is the default\n unless @option{-mcpu=ARC601} or @samp{-mcpu=ARCEM} is in effect.\n \n @item -mjli-always\n-@opindex mjli-alawys\n+@opindex mjli-always\n Force to call a function using jli_s instruction.  This option is\n valid only for ARCv2 architecture.\n "}, {"sha": "2f92d37da8c0091e9879a493cfe8a361eb1d9299", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b85638affe6c987a33427c54e0369b819cd7915/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b85638affe6c987a33427c54e0369b819cd7915/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=1b85638affe6c987a33427c54e0369b819cd7915", "patch": "@@ -736,7 +736,7 @@ If a target implements string objects then this hook should return\n @end deftypefn\n \n @deftypefn {C Target Hook} void TARGET_CHECK_STRING_OBJECT_FORMAT_ARG (tree @var{format_arg}, tree @var{args_list})\n-If a target implements string objects then this hook should should\n+If a target implements string objects then this hook should\n provide a facility to check the function arguments in @var{args_list}\n against the format specifiers in @var{format_arg} where the type of\n @var{format_arg} is one recognized as a valid string reference type.\n@@ -2799,7 +2799,7 @@ intermediate registers or scratch registers.\n \n If copying a register @var{class} in @var{mode} to @var{x} requires an\n intermediate or scratch register, @code{SECONDARY_OUTPUT_RELOAD_CLASS}\n-was supposed to be defined be defined to return the largest register\n+was supposed to be defined to return the largest register\n class required.  If the\n requirements for input and output reloads were the same, the macro\n @code{SECONDARY_RELOAD_CLASS} should have been used instead of defining both"}, {"sha": "f869ddd5e5b8b7acbd8e9765fb103af24a1085b6", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b85638affe6c987a33427c54e0369b819cd7915/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b85638affe6c987a33427c54e0369b819cd7915/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=1b85638affe6c987a33427c54e0369b819cd7915", "patch": "@@ -2279,7 +2279,7 @@ intermediate registers or scratch registers.\n \n If copying a register @var{class} in @var{mode} to @var{x} requires an\n intermediate or scratch register, @code{SECONDARY_OUTPUT_RELOAD_CLASS}\n-was supposed to be defined be defined to return the largest register\n+was supposed to be defined to return the largest register\n class required.  If the\n requirements for input and output reloads were the same, the macro\n @code{SECONDARY_RELOAD_CLASS} should have been used instead of defining both"}, {"sha": "fcabd6e3e1053db4667a1b3bb0c4374ad9697343", "filename": "libgomp/libgomp.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b85638affe6c987a33427c54e0369b819cd7915/libgomp%2Flibgomp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b85638affe6c987a33427c54e0369b819cd7915/libgomp%2Flibgomp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.texi?ref=1b85638affe6c987a33427c54e0369b819cd7915", "patch": "@@ -245,7 +245,7 @@ The OpenMP 4.5 specification is fully supported.\n       device memory mapped by an array section @tab P @tab\n @item Mapping of Fortran pointer and allocatable variables, including pointer\n       and allocatable components of variables\n-      @tab P @tab Mapping of vars with allocatable components unspported\n+      @tab P @tab Mapping of vars with allocatable components unsupported\n @item @code{defaultmap} extensions @tab Y @tab\n @item @code{declare mapper} directive @tab N @tab\n @item @code{omp_get_supported_active_levels} routine @tab Y @tab"}]}