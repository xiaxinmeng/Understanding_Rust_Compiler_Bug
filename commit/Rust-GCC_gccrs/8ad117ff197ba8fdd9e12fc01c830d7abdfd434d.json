{"sha": "8ad117ff197ba8fdd9e12fc01c830d7abdfd434d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFkMTE3ZmYxOTdiYThmZGQ5ZTEyZmMwMWM4MzBkN2FiZGZkNDM0ZA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1991-09-12T22:22:50Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1991-09-12T22:22:50Z"}, "message": "Initial revision\n\nFrom-SVN: r39", "tree": {"sha": "d46d779ea9ebe9fce1e8bc64332160a89c699847", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d46d779ea9ebe9fce1e8bc64332160a89c699847"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ad117ff197ba8fdd9e12fc01c830d7abdfd434d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ad117ff197ba8fdd9e12fc01c830d7abdfd434d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ad117ff197ba8fdd9e12fc01c830d7abdfd434d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ad117ff197ba8fdd9e12fc01c830d7abdfd434d/comments", "author": null, "committer": null, "parents": [{"sha": "60163eae1b932f9d15ad3345e44593e27d8bfb0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60163eae1b932f9d15ad3345e44593e27d8bfb0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60163eae1b932f9d15ad3345e44593e27d8bfb0a"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "24fa9baa1cb861e8c9d480cc817e6ca74237d010", "filename": "gcc/ginclude/va-mips.h", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ad117ff197ba8fdd9e12fc01c830d7abdfd434d/gcc%2Fginclude%2Fva-mips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ad117ff197ba8fdd9e12fc01c830d7abdfd434d/gcc%2Fginclude%2Fva-mips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-mips.h?ref=8ad117ff197ba8fdd9e12fc01c830d7abdfd434d", "patch": "@@ -0,0 +1,42 @@\n+/* ---------------------------------------- */\n+/*           VARARGS  for MIPS/GNU CC       */\n+/*                                          */\n+/*                                          */\n+/*                                          */\n+/*                                          */\n+/* ---------------------------------------- */\n+\n+\n+/* These macros implement traditional (non-ANSI) varargs\n+   for GNU C.  */\n+\n+/* In GCC version 2, we want an ellipsis at the end of the declaration\n+   of the argument list.  GCC version 1 can't parse it.  */\n+\n+#if __GNUC__ > 1\n+#define __va_ellipsis ...\n+#else\n+#define __va_ellipsis\n+#endif\n+\n+#define va_alist  __builtin_va_alist\n+#define va_dcl    int __builtin_va_alist; __va_ellipsis\n+#ifndef _VA_LIST_\n+#define _VA_LIST_\n+/* Make this a macro rather than a typedef, so we can undef any other defn.  */\n+#define va_list __va___list\n+typedef char * __va___list;\n+#endif\n+\n+#define va_start(AP)  AP = (char *) &__builtin_va_alist\n+#define va_end(AP)\n+\n+#ifdef lint\t/* complains about constant in conditional context */\n+#define va_arg(list, mode) ((mode *)(list += sizeof(mode)))[-1]\n+\n+#else\t\t/* !lint */\n+#define va_arg(AP, mode) ((mode *)(AP = \\\n+\t(char *) (sizeof(mode) > 4 ? ((int)AP + 2*8 - 1) & -8 \\\n+\t\t\t\t   : ((int)AP + 2*4 - 1) & -4)))[-1]\n+#endif\t\t/* lint */\n+"}]}