{"sha": "5603790dbf233c31c60d8877f632c06c4753acfb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTYwMzc5MGRiZjIzM2MzMWM2MGQ4ODc3ZjYzMmMwNmM0NzUzYWNmYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-05-30T17:33:06Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-05-30T17:33:06Z"}, "message": "PR c++/85873 - constant initializer_list array not in .rodata.\n\n\t* tree.c (build_target_expr): Set TREE_READONLY.\n\t* call.c (set_up_extended_ref_temp): Set TREE_READONLY.\n\nFrom-SVN: r260969", "tree": {"sha": "5d31e63df88152fb776d641208e89f30804ab794", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d31e63df88152fb776d641208e89f30804ab794"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5603790dbf233c31c60d8877f632c06c4753acfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5603790dbf233c31c60d8877f632c06c4753acfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5603790dbf233c31c60d8877f632c06c4753acfb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5603790dbf233c31c60d8877f632c06c4753acfb/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd7fa7a74b672bb7d978807b2190feaf57afc43a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd7fa7a74b672bb7d978807b2190feaf57afc43a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd7fa7a74b672bb7d978807b2190feaf57afc43a"}], "stats": {"total": 39, "additions": 35, "deletions": 4}, "files": [{"sha": "2999fc30c9f571b0db7edb37f72ef2ce5c079477", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5603790dbf233c31c60d8877f632c06c4753acfb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5603790dbf233c31c60d8877f632c06c4753acfb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5603790dbf233c31c60d8877f632c06c4753acfb", "patch": "@@ -1,5 +1,9 @@\n 2018-05-30  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/85873 - constant initializer_list array not in .rodata.\n+\t* tree.c (build_target_expr): Set TREE_READONLY.\n+\t* call.c (set_up_extended_ref_temp): Set TREE_READONLY.\n+\n \t* parser.c (cp_parser_check_condition_declarator): Handle\n \tcp_error_declarator.\n "}, {"sha": "67e404d1cb234c8fce6ae12920c52b29bbad0c2f", "filename": "gcc/cp/call.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5603790dbf233c31c60d8877f632c06c4753acfb/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5603790dbf233c31c60d8877f632c06c4753acfb/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=5603790dbf233c31c60d8877f632c06c4753acfb", "patch": "@@ -10923,13 +10923,11 @@ set_up_extended_ref_temp (tree decl, tree expr, vec<tree, va_gc> **cleanups,\n \t     lvalue-rvalue conversion applied to \"a glvalue of literal type\n \t     that refers to a non-volatile temporary object initialized\n \t     with a constant expression\".  Rather than try to communicate\n-\t     that this VAR_DECL is a temporary, just mark it constexpr.\n-\n-\t     Currently this is only useful for initializer_list temporaries,\n-\t     since reference vars can't appear in constant expressions.  */\n+\t     that this VAR_DECL is a temporary, just mark it constexpr.  */\n \t  DECL_DECLARED_CONSTEXPR_P (var) = true;\n \t  DECL_INITIALIZED_BY_CONSTANT_EXPRESSION_P (var) = true;\n \t  TREE_CONSTANT (var) = true;\n+\t  TREE_READONLY (var) = true;\n \t}\n       DECL_INITIAL (var) = init;\n       init = NULL_TREE;"}, {"sha": "53bc9c7176f4b5e527b4e1cfc7e740e0dcb2f270", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5603790dbf233c31c60d8877f632c06c4753acfb/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5603790dbf233c31c60d8877f632c06c4753acfb/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=5603790dbf233c31c60d8877f632c06c4753acfb", "patch": "@@ -461,6 +461,14 @@ build_target_expr (tree decl, tree value, tsubst_flags_t complain)\n \t\t       || useless_type_conversion_p (TREE_TYPE (decl),\n \t\t\t\t\t\t     TREE_TYPE (value)));\n \n+  /* Set TREE_READONLY for optimization, such as gimplify_init_constructor\n+     moving a constant aggregate into .rodata.  */\n+  if (CP_TYPE_CONST_NON_VOLATILE_P (type)\n+      && !TYPE_HAS_NONTRIVIAL_DESTRUCTOR (type)\n+      && !VOID_TYPE_P (TREE_TYPE (value))\n+      && reduced_constant_expression_p (value))\n+    TREE_READONLY (decl) = true;\n+\n   if (complain & tf_no_cleanup)\n     /* The caller is building a new-expr and does not need a cleanup.  */\n     t = NULL_TREE;"}, {"sha": "97c2e0521c9ce835b4594f3da8c9d0fcdfb2701d", "filename": "gcc/testsuite/g++.dg/tree-ssa/array-temp1.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5603790dbf233c31c60d8877f632c06c4753acfb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Farray-temp1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5603790dbf233c31c60d8877f632c06c4753acfb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Farray-temp1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Farray-temp1.C?ref=5603790dbf233c31c60d8877f632c06c4753acfb", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/85873\n+// Test that these array temporaries are promoted to static variables as an\n+// optimization.\n+\n+// { dg-do compile { target c++11 } }\n+// { dg-additional-options -fdump-tree-gimple }\n+// { dg-final { scan-tree-dump-not \"= 42\" \"gimple\" } }\n+\n+#include <initializer_list>\n+\n+int f()\n+{\n+  using AR = const int[];\n+  return AR{ 1,42,3,4,5,6,7,8,9,0 }[5];\n+}\n+\n+int g()\n+{\n+  std::initializer_list<int> a = {1,42,3};\n+  return a.begin()[0];\n+}"}]}