{"sha": "442b6fb7c09a39577261de90413cc4db366f1c5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQyYjZmYjdjMDlhMzk1NzcyNjFkZTkwNDEzY2M0ZGIzNjZmMWM1Zg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2020-12-03T19:20:28Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2020-12-03T19:20:28Z"}, "message": "fix __builtin___clear_cache overrider fallout\n\nMachines that had CLEAR_CACHE_INSN and that would thus issue calls to\n__clear_cache with the default call expander, would fail on languages\nthat did not set up the __clear_cache builtin.  This patch arranges\nfor all languages to set up this builtin.\n\nMachines or multilibs that had ptr_mode != Pmode, such as aarch64 with\n-mabi=ilp32, would fail the RTL mode test of the arguments passed to\n__clear_cache, because we'd insist on ptr_mode.  This patch arranges\nfor Pmode to be accepted as well.\n\n\nfor  gcc/ChangeLog\n\n\t* tree.c (build_common_builtin_nodes): Declare\n\t__builtin___clear_cache for all languages.\n\t* builtins.c (maybe_emit_call_builtin___clear_cache): Accept\n\tPmode arguments.", "tree": {"sha": "72fca0cbff303ab54fb255d15194067e0643adb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72fca0cbff303ab54fb255d15194067e0643adb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/442b6fb7c09a39577261de90413cc4db366f1c5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/442b6fb7c09a39577261de90413cc4db366f1c5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/442b6fb7c09a39577261de90413cc4db366f1c5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/442b6fb7c09a39577261de90413cc4db366f1c5f/comments", "author": null, "committer": null, "parents": [{"sha": "44ac1ea0e2244343b798ff1ccc7048029cb9fa02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44ac1ea0e2244343b798ff1ccc7048029cb9fa02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44ac1ea0e2244343b798ff1ccc7048029cb9fa02"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "cd30de8bfb035c24eac51159e0512816baee7ec6", "filename": "gcc/builtins.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442b6fb7c09a39577261de90413cc4db366f1c5f/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442b6fb7c09a39577261de90413cc4db366f1c5f/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=442b6fb7c09a39577261de90413cc4db366f1c5f", "patch": "@@ -7793,7 +7793,8 @@ default_emit_call_builtin___clear_cache (rtx begin, rtx end)\n void\n maybe_emit_call_builtin___clear_cache (rtx begin, rtx end)\n {\n-  if (GET_MODE (begin) != ptr_mode || GET_MODE (end) != ptr_mode)\n+  if ((GET_MODE (begin) != ptr_mode && GET_MODE (begin) != Pmode)\n+      || (GET_MODE (end) != ptr_mode && GET_MODE (end) != Pmode))\n     {\n       error (\"both arguments to %<__builtin___clear_cache%> must be pointers\");\n       return;"}, {"sha": "72311005f57b2f0ec8b0233c178456114eac339f", "filename": "gcc/tree.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442b6fb7c09a39577261de90413cc4db366f1c5f/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442b6fb7c09a39577261de90413cc4db366f1c5f/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=442b6fb7c09a39577261de90413cc4db366f1c5f", "patch": "@@ -10733,6 +10733,12 @@ build_common_builtin_nodes (void)\n \n   ftype = build_function_type_list (void_type_node,\n \t\t\t\t    ptr_type_node, ptr_type_node, NULL_TREE);\n+  if (!builtin_decl_explicit_p (BUILT_IN_CLEAR_CACHE))\n+    local_define_builtin (\"__builtin___clear_cache\", ftype,\n+\t\t\t  BUILT_IN_CLEAR_CACHE,\n+\t\t\t  \"__builtin___clear_cache\",\n+\t\t\t  ECF_NOTHROW);\n+\n   local_define_builtin (\"__builtin_nonlocal_goto\", ftype,\n \t\t\tBUILT_IN_NONLOCAL_GOTO,\n \t\t\t\"__builtin_nonlocal_goto\","}]}