{"sha": "bf52f89914772b771d30abea73d2754268874d44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY1MmY4OTkxNDc3MmI3NzFkMzBhYmVhNzNkMjc1NDI2ODg3NGQ0NA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2002-10-08T19:20:18Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2002-10-08T19:20:18Z"}, "message": "c-opts.c (c_common_decode_option): Add warn_strict_aliasing to -Wall.\n\ngcc:\n\t* c-opts.c (c_common_decode_option): Add warn_strict_aliasing to\n\t-Wall.\n\t* c-typeck.c (build_c_cast): Use warn_strict_aliasing, tweak\n\tmessage.\n\t* flags.h (warn_strict_aliasing): Declare.\n\t* toplev.c (warn_strict_aliasing): Define.\n\t(lang_independent_options): Add it.\n\t* doc/invoke.texi (-Wstrict-aliasing): Document it.\ntestsuite:\n\t* gcc.dg/alias-1.c: Tweak expected warning.\n\nFrom-SVN: r57938", "tree": {"sha": "931ded0405225a7ea610ab31e640db7544deb6c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/931ded0405225a7ea610ab31e640db7544deb6c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf52f89914772b771d30abea73d2754268874d44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf52f89914772b771d30abea73d2754268874d44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf52f89914772b771d30abea73d2754268874d44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf52f89914772b771d30abea73d2754268874d44/comments", "author": null, "committer": null, "parents": [{"sha": "b7932de6a1df9f98fff676ec00e67f9cfd806794", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7932de6a1df9f98fff676ec00e67f9cfd806794", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7932de6a1df9f98fff676ec00e67f9cfd806794"}], "stats": {"total": 54, "additions": 45, "deletions": 9}, "files": [{"sha": "719625767fbfb61ef8826ee974d5f6c2409b5beb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf52f89914772b771d30abea73d2754268874d44/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf52f89914772b771d30abea73d2754268874d44/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf52f89914772b771d30abea73d2754268874d44", "patch": "@@ -1,3 +1,14 @@\n+2002-10-08  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* c-opts.c (c_common_decode_option): Add warn_strict_aliasing to\n+\t-Wall.\n+\t* c-typeck.c (build_c_cast): Use warn_strict_aliasing, tweak\n+\tmessage.\n+\t* flags.h (warn_strict_aliasing): Declare.\n+\t* toplev.c (warn_strict_aliasing): Define.\n+\t(lang_independent_options): Add it.\n+\t* doc/invoke.texi (-Wstrict-aliasing): Document it.\n+\n 2002-10-08  Zack Weinberg  <zack@codesourcery.com>\n \n \t* system.h (GCCBUGURL): Delete."}, {"sha": "d0e8b8e3c8e5348d9c2719d1895c7693f1056321", "filename": "gcc/c-opts.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf52f89914772b771d30abea73d2754268874d44/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf52f89914772b771d30abea73d2754268874d44/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=bf52f89914772b771d30abea73d2754268874d44", "patch": "@@ -702,7 +702,8 @@ c_common_decode_option (argc, argv)\n       warn_sequence_point = on;\t/* Was C only.  */\n       warn_sign_compare = on;\t/* Was C++ only.  */\n       warn_switch = on;\n-\n+      warn_strict_aliasing = on;\n+      \n       /* Only warn about unknown pragmas that are not in system\n \t headers.  */                                        \n       warn_unknown_pragmas = on;"}, {"sha": "b5bc210dab47207f61604b2213f9152bf88ad41a", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf52f89914772b771d30abea73d2754268874d44/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf52f89914772b771d30abea73d2754268874d44/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=bf52f89914772b771d30abea73d2754268874d44", "patch": "@@ -3763,17 +3763,17 @@ build_c_cast (type, expr)\n \t  && TREE_CODE (otype) == POINTER_TYPE\n \t  && TREE_CODE (expr) == ADDR_EXPR\n \t  && DECL_P (TREE_OPERAND (expr, 0))\n-\t  && flag_strict_aliasing && extra_warnings\n+\t  && flag_strict_aliasing && warn_strict_aliasing\n \t  && !VOID_TYPE_P (TREE_TYPE (type)))\n \t{\n  \t  /* Casting the address of a decl to non void pointer. Warn\n \t     if the cast breaks type based aliasing.  */\n \t  if (!COMPLETE_TYPE_P (TREE_TYPE (type)))\n-\t    warning (\"type punning to incomplete type might not be type based aliasing safe\");\n+\t    warning (\"type-punning to incomplete type might break strict-aliasing rules\");\n \t  else if (!alias_sets_conflict_p\n \t\t   (get_alias_set (TREE_TYPE (TREE_OPERAND (expr, 0))),\n \t\t    get_alias_set (TREE_TYPE (type))))\n-\t    warning (\"type punning cast is not type based aliasing safe\");\n+\t    warning (\"dereferencing type-punned pointer will break strict-aliasing rules\");\n \t}\n       \n       ovalue = value;"}, {"sha": "51c65466d41530b88e1cace964185110e45f3ddc", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf52f89914772b771d30abea73d2754268874d44/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf52f89914772b771d30abea73d2754268874d44/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=bf52f89914772b771d30abea73d2754268874d44", "patch": "@@ -228,7 +228,7 @@ in the following sections.\n -Wno-import  -Wnonnull  -Wpacked  -Wpadded @gol\n -Wparentheses  -Wpointer-arith  -Wredundant-decls @gol\n -Wreturn-type  -Wsequence-point  -Wshadow @gol\n--Wsign-compare  -Wswitch  -Wswitch-default -Wswitch-enum @gol\n+-Wsign-compare  -Wstrict-aliasing -Wswitch  -Wswitch-default -Wswitch-enum @gol\n -Wsystem-headers -Wtrigraphs  -Wundef  -Wuninitialized @gol\n -Wunknown-pragmas  -Wunreachable-code @gol\n -Wunused  -Wunused-function  -Wunused-label  -Wunused-parameter @gol\n@@ -2341,6 +2341,14 @@ GCC@.  If this command line option is used, warnings will even be issued\n for unknown pragmas in system header files.  This is not the case if\n the warnings were only enabled by the @option{-Wall} command line option.\n \n+@item -Wstrict-aliasing\n+@opindex Wstrict-aliasing\n+This option is only active when @option{-fstrict-aliasing} is active.\n+It warns about code which might break the strict aliasing rules that the\n+compiler is using for optimization. The warning does not catch all\n+cases, but does attempt to catch the more common pitfalls. It is\n+included in @option{-Wall}.\n+\n @item -Wall\n @opindex Wall\n All of the above @samp{-W} options combined.  This enables all the"}, {"sha": "c5492759f07bb2a2b6df58c2e209e9f79a0b7f09", "filename": "gcc/flags.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf52f89914772b771d30abea73d2754268874d44/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf52f89914772b771d30abea73d2754268874d44/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=bf52f89914772b771d30abea73d2754268874d44", "patch": "@@ -184,6 +184,11 @@ extern int warn_disabled_optimization;\n \n extern int warn_deprecated_decl;\n \n+/* Nonzero means warn about constructs which might not be strict\n+   aliasing safe.  */\n+\n+extern int warn_strict_aliasing;\n+\n /* Nonzero if generating code to do profiling.  */\n \n extern int profile_flag;"}, {"sha": "73700051cd2f3dfd5e1e3553f1352af68fef533f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf52f89914772b771d30abea73d2754268874d44/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf52f89914772b771d30abea73d2754268874d44/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bf52f89914772b771d30abea73d2754268874d44", "patch": "@@ -1,3 +1,7 @@\n+2002-10-08  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* gcc.dg/alias-1.c: Tweak expected warning.\n+\n 2002-10-06  D.Venkatasubramanian <dvenkat@noida.hcltech.com>\n \n \t* gcc.dg/20020411-1.c: Disable for 16-bit \"int\"."}, {"sha": "a723083672cecd22d1d1c6c4b2f8f433c2f6442b", "filename": "gcc/testsuite/gcc.dg/alias-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf52f89914772b771d30abea73d2754268874d44/gcc%2Ftestsuite%2Fgcc.dg%2Falias-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf52f89914772b771d30abea73d2754268874d44/gcc%2Ftestsuite%2Fgcc.dg%2Falias-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Falias-1.c?ref=bf52f89914772b771d30abea73d2754268874d44", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile }\n-// { dg-options \"-W -fstrict-aliasing\" }\n+// { dg-options \"-Wstrict-aliasing -fstrict-aliasing\" }\n \n // Copyright (C) 2002 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 29 Sep 2002 <nathan@codesourcery.com>\n@@ -19,9 +19,9 @@ YYSTYPE\n  addSibMacro(\n          YYSTYPE  list )\n  {\n-     tDefEntry** ppT   = (tDefEntry**)&list; // { dg-warning \"type punning cast\" \"\" }\n+     tDefEntry** ppT   = (tDefEntry**)&list; // { dg-warning \"type-punned pointer\" \"\" }\n  \n-     struct incomplete *p = (struct incomplete *)&list; // { dg-warning \"type punning to incomplete\" \"\" }\n+     struct incomplete *p = (struct incomplete *)&list; // { dg-warning \"type-punning to incomplete\" \"\" }\n      \n      return list;\n  }"}, {"sha": "81035b028b1a5124798934c6b868f625fc1d1372", "filename": "gcc/toplev.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf52f89914772b771d30abea73d2754268874d44/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf52f89914772b771d30abea73d2754268874d44/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=bf52f89914772b771d30abea73d2754268874d44", "patch": "@@ -1511,6 +1511,11 @@ int warn_missing_noreturn;\n \n int warn_deprecated_decl = 1;\n \n+/* Nonzero means warn about constructs which might not be\n+   strict-aliasing safe.  */\n+\n+int warn_strict_aliasing;\n+\n /* Likewise for -W.  */\n \n static const lang_independent_options W_options[] =\n@@ -1556,7 +1561,9 @@ static const lang_independent_options W_options[] =\n   {\"deprecated-declarations\", &warn_deprecated_decl, 1,\n    N_(\"Warn about uses of __attribute__((deprecated)) declarations\") },\n   {\"missing-noreturn\", &warn_missing_noreturn, 1,\n-   N_(\"Warn about functions which might be candidates for attribute noreturn\") }\n+   N_(\"Warn about functions which might be candidates for attribute noreturn\") },\n+  {\"strict-aliasing\", &warn_strict_aliasing, 1,\n+   N_ (\"Warn about code which might break the strict aliasing rules\") }\n };\n \n void"}]}