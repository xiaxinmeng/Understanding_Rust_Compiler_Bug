{"sha": "67f28219a6b5f2ee69aea599a76d15c899d8a8c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdmMjgyMTlhNmI1ZjJlZTY5YWVhNTk5YTc2ZDE1Yzg5OWQ4YThjMw==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2001-10-08T17:58:31Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2001-10-08T17:58:31Z"}, "message": "aclocal.m4 (gcc_AC_PROG_GNAT): New.\n\ntop:\n\t* aclocal.m4 (gcc_AC_PROG_GNAT): New.\n\t* configure.in: Use it.\n\t* configure: Regenerated.\n\t* config/pa/t-linux, config/pa/t-pa, config/pa/t-pa64,\n\tconfig/pa/t-pro: Set T_ADAFLAGS, not ADA_CFLAGS.\nada:\n\t* Make-lang.in (ADAFLAGS): Add -W -Wall.\n\t(ADA_FLAGS_TO_PASS): Set ADA_CFLAGS=$(CFLAGS) also.\n\t(gnat1): Also depend on attribs.o.\n\t(gnatlib, gnatlib-shared): Set CC and ADAC in recursive make.\n\t* Makefile.in (X_ADAFLAGS, T_ADAFLAGS): New.\n\t(ADAC): Set to @ADAC@ in stage1, $(CC) later.\n\t(ADAFLAGS): Add -W -Wall.\n\t(ALL_ADAFLAGS, MOST_ADAFLAGS): Add X_ADAFLAGS and T_ADAFLAGS;\n\ttake out CFLAGS.\n\n\t(.adb.o, .ads.o, a-numaux.o, a-teioed.o, s-interr.o,\n\ts-taskin.o, sdefault.o, s-tasdeb.o, s-vaflop.o, a-except.o,\n\ts-assert.o, s-stalib.o, s-memory.o, memtrack.o, mlib-tgt.o):\n\tUse $(ADAC), not $(CC), as compilation command.\n\n\t(gnattools): Depend directly on tools to build, don't use\n\trecursive make.\n\t(gnatlib): Set ADA_CFLAGS=$(GNATLIBCFLAGS) in recursive make.\n\n\t* einfo.h, sinfo.h: New files (autogenerated).\n\nFrom-SVN: r46085", "tree": {"sha": "bc545eaefeca1c114e651a287700be5bbdad760c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc545eaefeca1c114e651a287700be5bbdad760c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67f28219a6b5f2ee69aea599a76d15c899d8a8c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67f28219a6b5f2ee69aea599a76d15c899d8a8c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67f28219a6b5f2ee69aea599a76d15c899d8a8c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/comments", "author": null, "committer": null, "parents": [{"sha": "c0bfe993335d1f1ae3235019a4de1c9829efdc90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0bfe993335d1f1ae3235019a4de1c9829efdc90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0bfe993335d1f1ae3235019a4de1c9829efdc90"}], "stats": {"total": 3312, "additions": 3054, "deletions": 258}, "files": [{"sha": "532b7273a50b8170646feddeaca761ae8ecc299a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=67f28219a6b5f2ee69aea599a76d15c899d8a8c3", "patch": "@@ -1,3 +1,11 @@\n+2001-10-08  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* aclocal.m4 (gcc_AC_PROG_GNAT): New.\n+\t* configure.in: Use it.              \n+\t* configure: Regenerated.\n+\t* config/pa/t-linux, config/pa/t-pa, config/pa/t-pa64,\n+\tconfig/pa/t-pro: Set T_ADAFLAGS, not ADA_CFLAGS.      \n+\n 2001-10-08  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* cppfiles.c (open_file): Don't mark zero-length files"}, {"sha": "66c61362e2e9fb664263ef9dc241f67baab88ed3", "filename": "gcc/aclocal.m4", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/gcc%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/gcc%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Faclocal.m4?ref=67f28219a6b5f2ee69aea599a76d15c899d8a8c3", "patch": "@@ -308,6 +308,57 @@ test -z \"$INSTALL_DATA\" && INSTALL_DATA='${INSTALL} -m 644'\n AC_SUBST(INSTALL_DATA)dnl\n ])\n \n+dnl Test for GNAT.\n+dnl We require the gnatbind program, and a compiler driver that\n+dnl understands Ada.  The user may set the driver name explicitly\n+dnl with ADAC; also, the user's CC setting is tried.  Failing that,\n+dnl we try gcc and cc, then a sampling of names known to be used for\n+dnl the Ada driver on various systems.\n+dnl\n+dnl Sets the shell variable have_gnat to yes or no as appropriate, and\n+dnl substitutes GNATBIND and ADAC.\n+AC_DEFUN([gcc_AC_PROG_GNAT],\n+[AC_REQUIRE([AC_CHECK_TOOL_PREFIX])\n+AC_CHECK_TOOL(GNATBIND, gnatbind, no)\n+AC_CACHE_CHECK([for compiler driver that understands Ada],\n+\t\t gcc_cv_prog_adac,\n+[cat >conftest.adb <<EOF\n+procedure conftest is begin null; end conftest;\n+EOF\n+gcc_cv_prog_adac=no\n+# Have to do ac_tool_prefix and user overrides by hand.\n+user_adac=$ADAC\n+user_cc=$CC\n+for cand in ${ac_tool_prefix}$user_adac\t$user_adac\t\\\n+\t    ${ac_tool_prefix}$user_cc\t$user_cc\t\\\n+\t    ${ac_tool_prefix}gcc\tgcc\t\t\\\n+\t    ${ac_tool_prefix}cc\t\tcc\t\t\\\n+\t    ${ac_tool_prefix}gnatgcc\tgnatgcc\t\t\\\n+\t    ${ac_tool_prefix}gnatcc\tgnatcc\t\t\\\n+\t    ${ac_tool_prefix}adagcc\tadagcc\t\t\\\n+\t    ${ac_tool_prefix}adacc\tadacc\t\t; do\n+  # There is a bug in all released versions of GCC which causes the\n+  # driver to exit successfully when the appropriate language module\n+  # has not been installed.  This is fixed in 2.95.4, 3.0.2, and 3.1.\n+  # Therefore we must check for the error message as well as an\n+  # unsuccessful exit.\n+  errors=`$cand -c conftest.adb 2>&1 || echo failure`\n+  if test x\"$errors\" = x; then\n+    gcc_cv_prog_adac=$cand\n+    break\n+  fi\n+done\n+rm -f conftest.*])\n+ADAC=$gcc_cv_prog_adac\n+AC_SUBST(ADAC)\n+\n+if test x$GNATBIND != xno && test x$ADAC != xno; then\n+  have_gnat=yes\n+else\n+  have_gnat=no\n+fi\n+])\n+\n #serial 1\n dnl This test replaces the one in autoconf.\n dnl Currently this macro should have the same name as the autoconf macro"}, {"sha": "758a4a02fb171961adb3837747878e113a063ee4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 57, "deletions": 34, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=67f28219a6b5f2ee69aea599a76d15c899d8a8c3", "patch": "@@ -1,3 +1,26 @@\n+2001-10-08  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* Make-lang.in (ADAFLAGS): Add -W -Wall.\n+\t(ADA_FLAGS_TO_PASS): Set ADA_CFLAGS=$(CFLAGS) also.\n+\t(gnat1): Also depend on attribs.o.\n+\t(gnatlib, gnatlib-shared): Set CC and ADAC in recursive make.\n+\t* Makefile.in (X_ADAFLAGS, T_ADAFLAGS): New.\n+\t(ADAC): Set to @ADAC@ in stage1, $(CC) later.\n+\t(ADAFLAGS): Add -W -Wall.\n+\t(ALL_ADAFLAGS, MOST_ADAFLAGS): Add X_ADAFLAGS and T_ADAFLAGS;\n+\ttake out CFLAGS.\n+\n+\t(.adb.o, .ads.o, a-numaux.o, a-teioed.o, s-interr.o,\n+\ts-taskin.o, sdefault.o, s-tasdeb.o, s-vaflop.o, a-except.o,\n+\ts-assert.o, s-stalib.o, s-memory.o, memtrack.o, mlib-tgt.o):\n+\tUse $(ADAC), not $(CC), as compilation command.\n+\n+\t(gnattools): Depend directly on tools to build, don't use\n+\trecursive make.\n+\t(gnatlib): Set ADA_CFLAGS=$(GNATLIBCFLAGS) in recursive make.\n+\n+\t* einfo.h, sinfo.h: New files (autogenerated).\n+\n 2001-10-08  Richard Henderson  <rth@redhat.com>\n \n \t* comperr.adb (Abort_In_Progress): New.\n@@ -6,20 +29,20 @@\n 2001-10-08  Robert Dewar <dewar@gnat.com>\n \n \t* atree.adb: Set Error_Posted in Error node, helps error recovery.\n-\t\n-\t* par-endh.adb (Output_End_Expected): We should also not test \n+\n+\t* par-endh.adb (Output_End_Expected): We should also not test\n \tError_Posted on the Error node, since now it is always set.\n-\t\n-\t* cstand.adb (Create_Standard): Set Etype of Error to Any_Type \n+\n+\t* cstand.adb (Create_Standard): Set Etype of Error to Any_Type\n \tto help error recovery. Part of general work on 9407-004.\n-\t\n+\n \t* par.adb: Add ??? for misuse of error\n-\t\n+\n \t* sem_res.adb:\n \t(Resolve): Defend against Error, fixes 9407-003.\n \t(Resolve_Discrete_Subtype_Indication): Defend against Error.\n-\t\n-\t* sinfo.ads (N_Error): Now has Etype field (which will be set \n+\n+\t* sinfo.ads (N_Error): Now has Etype field (which will be set\n \tto Any_Type to help error recovery).\n \n 2001-10-08  Richard Kenner (kenner@gnat.com)\n@@ -50,70 +73,70 @@\n \n \t* sysdep.c (__gnat_set_binary_mode, __gnat_set_text_mode):\n \tArg is int, not FILE *, in dummy version of functions.\n-\t\n+\n \t* adaint.h (__gnat_set_binary_mode, __gnat_set_text_mode):\n \tArg is int, not FILE *.\n \n 2001-10-04  Geert Bosch  <bosch@gnat.com>\n \n \t* 3lsoccon.ads: Added file, missed with initial check ins.\n-  \n+\n \t* 4lintnam.ads: Fix header format.\n \tChange Linux to GNU/Linux.\n-  \n+\n \t* 5iosinte.adb: Change Linux to GNU/Linux.\n \n \t* 5iosinte.ads: Change Linux to GNU/Linux.\n-  \n+\n \t* 5itaprop.adb: Change Linux to GNU/Linux.\n-  \n+\n \t* 5itaspri.ads: Change Linux to GNU/Linux.\n \tUpdate copyright notice.\n-  \n+\n \t* 5lintman.adb: Change Linux to GNU/Linux.\n-  \n+\n \t* 5lml-tgt.adb: Change Linux to GNU/Linux.\n-  \n+\n \t* 5losinte.ads: Change Linux to GNU/Linux.\n-  \n+\n \t* 5lsystem.ads: Change Linux to GNU/Linux.\n-  \n+\n \t* 5qosinte.adb: Change Linux to GNU/Linux.\n-  \n+\n \t* 5qosinte.ads: Change Linux to GNU/Linux.\n-  \n+\n \t* 5qparame.ads: Change Linux to GNU/Linux.\n-  \n+\n \t* 5qtaprop.adb: Change Linux to GNU/Linux.\n-  \n+\n \t* 5qtaspri.ads: Change Linux to GNU/Linux.\n \tAdd 2001 to copyright notice.\n-  \n+\n \t* 5vintman.ads: Change Linux to GNU/Linux.\n \tFix header format.  Add 2001 to copyright notice.\n-  \n+\n \t* g-soccon.ads: Change Linux to GNU/Linux.\n-  \n+\n \t* g-trasym.ads: Change Linux to GNU/Linux.\n \tAdd 2001 to copyright notice.\n-  \n+\n \t* memtrack.adb: Change Linux to GNU/Linux.\n-  \n+\n \t* s-intman.ads: Change Linux to GNU/Linux.\n \tAdd 2001 to copyright notice.  Fix header format.\n-  \n+\n \t* s-stache.adb: Change Linux to GNU/Linux.\n-  \n+\n \t* adaint.c: Change Linux to GNU/Linux.\n-  \n+\n \t* cio.c: Change Linux to GNU/Linux.\n-  \n+\n \t* cstreams.c: Change Linux to GNU/Linux.\n-  \n+\n \t* init.c: Change Linux to GNU/Linux.\n-  \n+\n \t* gmem.c: Change Linux to GNU/Linux.\n-  \n+\n \t* tracebak.c: Change Linux to GNU/Linux.\n \n "}, {"sha": "72204ca6b95bb923f4eb95c089b3c86bc83d7a1e", "filename": "gcc/ada/Make-lang.in", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/gcc%2Fada%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/gcc%2Fada%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-lang.in?ref=67f28219a6b5f2ee69aea599a76d15c899d8a8c3", "patch": "@@ -46,14 +46,15 @@ shext  =\n \f\n # Extra flags to pass to recursive makes.\n BOOT_ADAFLAGS= $(ADAFLAGS)\n-ADAFLAGS= -gnatpg -gnata\n+ADAFLAGS= -W -Wall -gnatpg -gnata\n GNATLIBFLAGS= -gnatpg\n GNATLIBCFLAGS= -g -O2\n ADA_INCLUDE_DIR = $(libsubdir)/adainclude\n ADA_RTL_OBJ_DIR = $(libsubdir)/adalib\n THREAD_KIND=native\n GNATBIND = gnatbind\n ADA_FLAGS_TO_PASS = \\\n+\t\"ADA_CFLAGS=$(CFLAGS)\" \\\n \t\"ADA_FOR_BUILD=$(ADA_FOR_BUILD)\" \\\n \t\"ADA_INCLUDE_DIR=$(ADA_INCLUDE_DIR)\" \\\n \t\"ADA_RTL_OBJ_DIR=$(ADA_RTL_OBJ_DIR)\" \\\n@@ -70,7 +71,7 @@ Ada ada: gnat1$(exeext) gnatbind$(exeext)\n \n # There are too many Ada sources to check against here.  Let's\n # always force the recursive make.\n-gnat1$(exeext): prefix.o $(LIBDEPS) $(BACKEND) force\n+gnat1$(exeext): prefix.o attribs.o $(LIBDEPS) $(BACKEND) force\n \t$(MAKE) -C ada $(FLAGS_TO_PASS) $(ADA_FLAGS_TO_PASS) \\\n \t\t../gnat1$(exeext)\n \n@@ -155,16 +156,20 @@ cross-gnattools: force\n \t   gnatprep$(exeext) gnatpsta$(exeext) gnatpsys$(exeext) \\\n \t   gnatxref$(exeext) gnatfind$(exeext) $(EXTRA_GNATTOOLS)\n \n+# use target-gcc\n gnatlib: force\n \t$(MAKE) -C ada $(FLAGS_TO_PASS)  \\\n+\t   CC=\"../xgcc -B../\" ADAC=\"../xgcc -B../\" STAGE_PREFIX=../ \\\n \t   GNATLIBFLAGS=\"$(GNATLIBFLAGS)\" \\\n \t   GNATLIBCFLAGS=\"$(GNATLIBCFLAGS)\" \\\n \t   TARGET_LIBGCC2_CFLAGS=\"$(TARGET_LIBGCC2_CFLAGS)\" \\\n \t   THREAD_KIND=\"$(THREAD_KIND)\" \\\n \t   gnatlib\n \n+# use target-gcc\n gnatlib-shared: force\n \t$(MAKE) -C ada $(FLAGS_TO_PASS)  \\\n+\t   CC=\"../xgcc -B../\" ADAC=\"../xgcc -B../\" STAGE_PREFIX=../ \\\n \t   GNATLIBFLAGS=\"$(GNATLIBFLAGS)\" \\\n \t   GNATLIBCFLAGS=\"$(GNATLIBCFLAGS)\" \\\n \t   GNATLIBLDFLAGS=\"$(GNATLIBLDFLAGS)\" \\"}, {"sha": "85c67ed250b1a63d422298a30b0181c7363a8ebc", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 39, "deletions": 27, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=67f28219a6b5f2ee69aea599a76d15c899d8a8c3", "patch": "@@ -78,7 +78,18 @@ T_CFLAGS =\n X_CPPFLAGS =\n T_CPPFLAGS =\n \n+X_ADAFLAGS =\n+T_ADAFLAGS =\n+\n CC = cc\n+# Let the configure setting prevail only if CC hasn't been overridden\n+# to xgcc by the top level Makefile (in a later stage of bootstrap).\n+ifeq ($(findstring xgcc, $(CC)),)\n+ADAC = @ADAC@\n+else\n+ADAC = $(CC)\n+endif\n+\n BISON = bison\n BISONFLAGS =\n ECHO = echo\n@@ -103,13 +114,13 @@ MAKEINFO = makeinfo\n TEXI2DVI = texi2dvi\n GNATBIND = $(STAGE_PREFIX)gnatbind -C\n ADA_CFLAGS =\n-ADAFLAGS = -gnatpg -gnata\n+ADAFLAGS = -W -Wall -gnatpg -gnata\n SOME_ADAFLAGS =-gnata\n FORCE_DEBUG_ADAFLAGS = -g\n GNATLIBFLAGS = -gnatpg\n GNATLIBCFLAGS= -g -O2\n-ALL_ADAFLAGS = $(CFLAGS) $(ADA_CFLAGS) $(ADAFLAGS)\n-MOST_ADAFLAGS = $(CFLAGS) $(ADA_CFLAGS) $(SOME_ADAFLAGS)\n+ALL_ADAFLAGS = $(ADA_CFLAGS) $(X_ADAFLAGS) $(T_ADAFLAGS) $(ADAFLAGS)\n+MOST_ADAFLAGS = $(ADA_CFLAGS) $(X_ADAFLAGS) $(T_ADAFLAGS) $(SOME_ADAFLAGS)\n THREAD_KIND=native\n GMEM_LIB=\n MISCLIB =\n@@ -268,9 +279,9 @@ ADA_INCLUDES_FOR_SUBDIR = -I. -I$(fsrcdir)\n .c.o:\n \t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n .adb.o:\n-\t$(CC) -c $(ALL_ADAFLAGS) $(ADA_INCLUDES) $<\n+\t$(ADAC) -c $(ALL_ADAFLAGS) $(ADA_INCLUDES) $<\n .ads.o:\n-\t$(CC) -c $(ALL_ADAFLAGS) $(ADA_INCLUDES) $<\n+\t$(ADAC) -c $(ALL_ADAFLAGS) $(ADA_INCLUDES) $<\n \n # This tells GNU make version 3 not to export all the variables\n # defined in this file into the environment.\n@@ -836,11 +847,11 @@ ifeq ($(strip $(filter-out %86 interix,$(arch) $(osys))),)\n \n # Work around for gcc optimization bug wrt cxa5a09\n a-numaux.o  : a-numaux.adb a-numaux.ads                                     \n-\t$(CC) -c $(ALL_ADAFLAGS) -O2 $(ADA_INCLUDES) $<\n+\t$(ADAC) -c $(ALL_ADAFLAGS) -O2 $(ADA_INCLUDES) $<\n \n # Work around for gcc optimization bug wrt cxf3a01\n a-teioed.o  : a-teioed.adb a-teioed.ads                   \n-\t$(CC) -c $(ALL_ADAFLAGS) -O0 $(ADA_INCLUDES) $<\n+\t$(ADAC) -c $(ALL_ADAFLAGS) -O0 $(ADA_INCLUDES) $<\n \n endif\n \n@@ -960,7 +971,7 @@ ifeq ($(strip $(filter-out m68k% wrs vx%,$(targ))),)\n \n # ??? work around a gcc -O2 bug on m68k\n s-interr.o  : s-interr.adb s-interr.ads\n-\t$(CC) -c $(ALL_ADAFLAGS) -O1 $(ADA_INCLUDES) $<\n+\t$(ADAC) -c $(ALL_ADAFLAGS) -O1 $(ADA_INCLUDES) $<\n endif\n \n ifeq ($(strip $(filter-out powerpc% wrs vx%,$(targ))),)\n@@ -1140,7 +1151,7 @@ ifeq ($(strip $(filter-out %86 solaris2%,$(arch) $(osys))),)\n \n # ??? work around a gcc -O3 bug on x86\n a-numaux.o  : a-numaux.adb a-numaux.ads\n-\t$(CC) -c $(ALL_ADAFLAGS) -O2 $(ADA_INCLUDES) $<\n+\t$(ADAC) -c $(ALL_ADAFLAGS) -O2 $(ADA_INCLUDES) $<\n endif\n \n ifeq ($(strip $(filter-out %86 linux%,$(arch) $(osys))),)\n@@ -1265,7 +1276,7 @@ a-tcbinf.o: s-tpgetc.ali\n \n # force debug info so that workshop can find the All_Tasks_List symbol\n s-taskin.o: s-taskin.adb s-taskin.ads\n-\t$(CC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) $(ADA_INCLUDES) $<\n+\t$(ADAC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) $(ADA_INCLUDES) $<\n endif\n \n ifeq ($(strip $(filter-out hppa% hp hpux%,$(targ))),)\n@@ -1484,7 +1495,7 @@ ifeq ($(strip $(filter-out cygwin32% mingw32% pe,$(osys))),)\n \n # ??? work around a gcc -O3 bug on x86\n a-numaux.o  : a-numaux.adb a-numaux.ads\n-\t$(CC) -c $(ALL_ADAFLAGS) -O2 $(ADA_INCLUDES) $<\n+\t$(ADAC) -c $(ALL_ADAFLAGS) -O2 $(ADA_INCLUDES) $<\n endif\n \n # The runtime library for gnat comprises two directories.  One contains the\n@@ -2076,12 +2087,7 @@ gnatbl.o: gnatbl.c adaint.h\n \t  true; \\\n \tfi\n \n-gnattools: force\n-\t$(MAKE) \\\n-\t   \"CC=$(CC)\" \"ALL_CFLAGS=$(ALL_CFLAGS)\" \"INCLUDE=$(INCLUDES)\" \\\n-\t   \"LDFLAGS=$(LDFLAGS)\" \\\n-\t   \"MISCLIB=$(MISCLIB)\" \"exeext=$(exeext)\" \\\n-\t   ../gnatbl$(exeext) ../gnatchop$(exeext) ../gnatcmd$(exeext) \\\n+gnattools: ../gnatbl$(exeext) ../gnatchop$(exeext) ../gnatcmd$(exeext) \\\n \t   ../gnatkr$(exeext) ../gnatlink$(exeext) \\\n \t   ../gnatls$(exeext) ../gnatmake$(exeext) ../gnatmem$(exeext) \\\n \t   ../gnatprep$(exeext) ../gnatpsta$(exeext) ../gnatpsys$(exeext) \\\n@@ -2175,11 +2181,12 @@ gnatlib: ../stamp-gnatlib1 ../stamp-gnatlib2\n \t$(MAKE) -C rts CC=\"../../xgcc -B../../\" \\\n \t        INCLUDES=\"$(INCLUDES_FOR_SUBDIR) -I./../..\" \\\n                 CFLAGS=\"$(GNATLIBCFLAGS) $(TARGET_LIBGCC2_CFLAGS) -DIN_RTS\" \\\n+\t\tADA_CFLAGS=\"$(GNATLIBCFLAGS)\" \\\n \t\tsrcdir=$(fsrcdir) \\\n \t        -f ../Makefile $(LIBGNAT_OBJS)\n \t$(MAKE) -C rts CC=\"../../xgcc -B../../\" \\\n \t        ADA_INCLUDES=\"$(ADA_INCLUDES_FOR_SUBDIR)\" \\\n-                CFLAGS=\"$(GNATLIBCFLAGS)\" \\\n+                CFLAGS=\"$(GNATLIBCFLAGS)\" ADA_CFLAGS=\"$(GNATLIBCFLAGS)\" \\\n \t        ADAFLAGS=\"$(GNATLIBFLAGS)\" \\\n \t\tsrcdir=$(fsrcdir) \\\n \t        -f ../Makefile \\\n@@ -2464,51 +2471,56 @@ ADA_TREE_H = ada-tree.h ada-tree.def\n \n sdefault.o : sdefault.ads sdefault.adb types.ads unchdeal.ads \\\n    system.ads s-exctab.ads s-stalib.ads unchconv.ads \n-\t$(CC) -c -O2 $(MOST_ADAFLAGS) $(ADA_INCLUDES) sdefault.adb\n+\t$(ADAC) -c -O2 $(MOST_ADAFLAGS) $(ADA_INCLUDES) sdefault.adb\n \n # force debugging information on s-tasdeb.o so that it is always\n # possible to set conditional breakpoints on tasks.\n \n s-tasdeb.o  : s-tasdeb.adb s-tasdeb.ads\n-\t$(CC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) $(ADA_INCLUDES) $<\n+\t$(ADAC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) $(ADA_INCLUDES) $<\n \n # force debugging information on s-vaflop.o so that it is always\n # possible to call the VAX float debug print routines.\n # force at least -O so that the inline assembly works.\n \n s-vaflop.o  : s-vaflop.adb s-vaflop.ads\n-\t$(CC) -c -O $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) $(ADA_INCLUDES) $<\n+\t$(ADAC) -c -O $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) \\\n+\t $(ADA_INCLUDES) $<\n \n # force debugging information on a-except.o so that it is always\n # possible to set conditional breakpoints on exceptions.\n # use -O1 otherwise gdb isn't able to get a full backtrace on mips targets.\n \n a-except.o  : a-except.adb a-except.ads\n-\t$(CC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) -O1 -fno-inline \\\n+\t$(ADAC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) -O1 -fno-inline \\\n \t $(ADA_INCLUDES) $<\n \n # force debugging information on s-assert.o so that it is always\n # possible to set breakpoint on assert failures.\n \n s-assert.o  : s-assert.adb s-assert.ads a-except.ads\n-\t$(CC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) -O2 $(ADA_INCLUDES) $<\n+\t$(ADAC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) -O2 \\\n+\t $(ADA_INCLUDES) $<\n \n # force debugging information on s-stalib.o so that it is always\n # possible to set breakpoints on exceptions.\n \n s-stalib.o  : s-stalib.adb s-stalib.ads\n-\t$(CC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) -O2 $(ADA_INCLUDES) $<\n+\t$(ADAC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) -O2 \\\n+\t $(ADA_INCLUDES) $<\n \n # force debugging information and no optimization on s-memory.o so that it \n # is always possible to set breakpoint on __gnat_malloc and __gnat_free\n # this is important for gnatmem using GDB. memtrack.o is built from\n # memtrack.adb, and used by the post-mortem analysis with gnatmem.\n \n s-memory.o  : s-memory.adb s-memory.ads memtrack.o\n-\t$(CC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) -O0 $(ADA_INCLUDES) $<\n+\t$(ADAC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) -O0 \\\n+\t $(ADA_INCLUDES) $<\n \n memtrack.o  : memtrack.adb s-memory.ads\n-\t$(CC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) -O0 $(ADA_INCLUDES) $<\n+\t$(ADAC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) -O0 \\\n+\t $(ADA_INCLUDES) $<\n \n # Need to keep the frame pointer in this file to pop the stack properly on\n # some targets.\n@@ -2599,7 +2611,7 @@ stamp-tool_src_dir:\n \ttouch stamp-tool_src_dir\n \n mlib-tgt.o : stamp-tool_src_dir\n-\t$(CC) -c -Itools $(ALL_ADAFLAGS) $(ADA_INCLUDES) tools/mlib-tgt.adb\n+\t$(ADAC) -c -Itools $(ALL_ADAFLAGS) $(ADA_INCLUDES) tools/mlib-tgt.adb\n \n # GNAT DEPENDENCIES\n # regular dependencies"}, {"sha": "9a308c1bf43f356a7fe5c9f0240dce723953acf5", "filename": "gcc/ada/einfo.h", "status": "added", "additions": 1786, "deletions": 0, "changes": 1786, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/gcc%2Fada%2Feinfo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/gcc%2Fada%2Feinfo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.h?ref=67f28219a6b5f2ee69aea599a76d15c899d8a8c3", "patch": "@@ -0,0 +1,1786 @@\n+/*--------------------------------------------------------------------------*/\n+/*                                                                          */\n+/*                         GNAT COMPILER COMPONENTS                         */\n+/*                                                                          */\n+/*                                E I N F O                                 */\n+/*                                                                          */\n+/*                              C Header File                               */\n+/*                                                                          */\n+/*                 Generated by xeinfo revision 1.1 using                  */\n+/*                         einfo.ads revision 1.1                         */\n+/*                         einfo.adb revision 1.1                         */\n+/*                                                                          */\n+/*          Copyright (C) 1992-2001 Free Software Foundation, Inc.          */\n+/*                                                                          */\n+/* GNAT is free software;  you can  redistribute it  and/or modify it under */\n+/* terms of the  GNU General Public License as published  by the Free Soft- */\n+/* ware  Foundation;  either version 2,  or (at your option) any later ver- */\n+/* sion.  GNAT is distributed in the hope that it will be useful, but WITH- */\n+/* OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY */\n+/* or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License */\n+/* for  more details.  You should have  received  a copy of the GNU General */\n+/* Public License  distributed with GNAT;  see file COPYING.  If not, write */\n+/* to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, */\n+/* MA 02111-1307, USA.                                                      */\n+/*                                                                          */\n+/* As a special exception,  if other files  instantiate  generics from this */\n+/* unit, or you link  this unit with other files  to produce an executable, */\n+/* this  unit  does not  by itself cause  the resulting  executable  to  be */\n+/* covered  by the  GNU  General  Public  License.  This exception does not */\n+/* however invalidate  any other reasons why  the executable file  might be */\n+/* covered by the  GNU Public License.                                      */\n+/*                                                                          */\n+/* GNAT was originally developed  by the GNAT team at  New York University. */\n+/* It is now maintained by Ada Core Technologies Inc (http://www.gnat.com). */\n+/*                                                                          */\n+/*--------------------------------------------------------------------------*/\n+\n+   #define E_Void                           0\n+   #define E_Variable                       1\n+   #define E_Component                      2\n+   #define E_Constant                       3\n+   #define E_Discriminant                   4\n+   #define E_Loop_Parameter                 5\n+   #define E_In_Parameter                   6\n+   #define E_Out_Parameter                  7\n+   #define E_In_Out_Parameter               8\n+   #define E_Generic_In_Out_Parameter       9\n+   #define E_Generic_In_Parameter           10\n+   #define E_Named_Integer                  11\n+   #define E_Named_Real                     12\n+   #define E_Enumeration_Type               13\n+   #define E_Enumeration_Subtype            14\n+   #define E_Signed_Integer_Type            15\n+   #define E_Signed_Integer_Subtype         16\n+   #define E_Modular_Integer_Type           17\n+   #define E_Modular_Integer_Subtype        18\n+   #define E_Ordinary_Fixed_Point_Type      19\n+   #define E_Ordinary_Fixed_Point_Subtype   20\n+   #define E_Decimal_Fixed_Point_Type       21\n+   #define E_Decimal_Fixed_Point_Subtype    22\n+   #define E_Floating_Point_Type            23\n+   #define E_Floating_Point_Subtype         24\n+   #define E_Access_Type                    25\n+   #define E_Access_Subtype                 26\n+   #define E_Access_Attribute_Type          27\n+   #define E_Allocator_Type                 28\n+   #define E_General_Access_Type            29\n+   #define E_Access_Subprogram_Type         30\n+   #define E_Access_Protected_Subprogram_Type 31\n+   #define E_Anonymous_Access_Type          32\n+   #define E_Array_Type                     33\n+   #define E_Array_Subtype                  34\n+   #define E_String_Type                    35\n+   #define E_String_Subtype                 36\n+   #define E_String_Literal_Subtype         37\n+   #define E_Class_Wide_Type                38\n+   #define E_Class_Wide_Subtype             39\n+   #define E_Record_Type                    40\n+   #define E_Record_Subtype                 41\n+   #define E_Record_Type_With_Private       42\n+   #define E_Record_Subtype_With_Private    43\n+   #define E_Private_Type                   44\n+   #define E_Private_Subtype                45\n+   #define E_Limited_Private_Type           46\n+   #define E_Limited_Private_Subtype        47\n+   #define E_Incomplete_Type                48\n+   #define E_Task_Type                      49\n+   #define E_Task_Subtype                   50\n+   #define E_Protected_Type                 51\n+   #define E_Protected_Subtype              52\n+   #define E_Exception_Type                 53\n+   #define E_Subprogram_Type                54\n+   #define E_Enumeration_Literal            55\n+   #define E_Function                       56\n+   #define E_Operator                       57\n+   #define E_Procedure                      58\n+   #define E_Entry                          59\n+   #define E_Entry_Family                   60\n+   #define E_Block                          61\n+   #define E_Entry_Index_Parameter          62\n+   #define E_Exception                      63\n+   #define E_Generic_Function               64\n+   #define E_Generic_Package                65\n+   #define E_Generic_Procedure              66\n+   #define E_Label                          67\n+   #define E_Loop                           68\n+   #define E_Package                        69\n+   #define E_Package_Body                   70\n+   #define E_Protected_Object               71\n+   #define E_Protected_Body                 72\n+   #define E_Task_Body                      73\n+   #define E_Subprogram_Body                74\n+\n+   SUBTYPE (Access_Kind, Entity_Kind, \n+      E_Access_Type, E_Anonymous_Access_Type)\n+\n+   SUBTYPE (Array_Kind, Entity_Kind, \n+      E_Array_Type, E_String_Literal_Subtype)\n+\n+   SUBTYPE (Class_Wide_Kind, Entity_Kind, \n+      E_Class_Wide_Type, E_Class_Wide_Subtype)\n+\n+   SUBTYPE (Composite_Kind, Entity_Kind, \n+      E_Array_Type, E_Protected_Subtype)\n+\n+   SUBTYPE (Concurrent_Kind, Entity_Kind, \n+      E_Task_Type, E_Protected_Subtype)\n+\n+   SUBTYPE (Concurrent_Body_Kind, Entity_Kind, \n+      E_Protected_Body, E_Task_Body)\n+\n+   SUBTYPE (Decimal_Fixed_Point_Kind, Entity_Kind, \n+      E_Decimal_Fixed_Point_Type, E_Decimal_Fixed_Point_Subtype)\n+\n+   SUBTYPE (Digits_Kind, Entity_Kind, \n+      E_Decimal_Fixed_Point_Type, E_Floating_Point_Subtype)\n+\n+   SUBTYPE (Discrete_Kind, Entity_Kind, \n+      E_Enumeration_Type, E_Modular_Integer_Subtype)\n+\n+   SUBTYPE (Discrete_Or_Fixed_Point_Kind, Entity_Kind, \n+      E_Enumeration_Type, E_Decimal_Fixed_Point_Subtype)\n+\n+   SUBTYPE (Elementary_Kind, Entity_Kind, \n+      E_Enumeration_Type, E_Anonymous_Access_Type)\n+\n+   SUBTYPE (Enumeration_Kind, Entity_Kind, \n+      E_Enumeration_Type, E_Enumeration_Subtype)\n+\n+   SUBTYPE (Entry_Kind, Entity_Kind, \n+      E_Entry, E_Entry_Family)\n+\n+   SUBTYPE (Fixed_Point_Kind, Entity_Kind, \n+      E_Ordinary_Fixed_Point_Type, E_Decimal_Fixed_Point_Subtype)\n+\n+   SUBTYPE (Float_Kind, Entity_Kind, \n+      E_Floating_Point_Type, E_Floating_Point_Subtype)\n+\n+   SUBTYPE (Formal_Kind, Entity_Kind, \n+      E_In_Parameter, E_In_Out_Parameter)\n+\n+   SUBTYPE (Generic_Unit_Kind, Entity_Kind, \n+      E_Generic_Function, E_Generic_Procedure)\n+\n+   SUBTYPE (Incomplete_Or_Private_Kind, Entity_Kind, \n+      E_Record_Type_With_Private, E_Incomplete_Type)\n+\n+   SUBTYPE (Integer_Kind, Entity_Kind, \n+      E_Signed_Integer_Type, E_Modular_Integer_Subtype)\n+\n+   SUBTYPE (Modular_Integer_Kind, Entity_Kind, \n+      E_Modular_Integer_Type, E_Modular_Integer_Subtype)\n+\n+   SUBTYPE (Named_Kind, Entity_Kind, \n+      E_Named_Integer, E_Named_Real)\n+\n+   SUBTYPE (Numeric_Kind, Entity_Kind, \n+      E_Signed_Integer_Type, E_Floating_Point_Subtype)\n+\n+   SUBTYPE (Object_Kind, Entity_Kind, \n+      E_Variable, E_Generic_In_Parameter)\n+\n+   SUBTYPE (Ordinary_Fixed_Point_Kind, Entity_Kind, \n+      E_Ordinary_Fixed_Point_Type, E_Ordinary_Fixed_Point_Subtype)\n+\n+   SUBTYPE (Overloadable_Kind, Entity_Kind, \n+      E_Enumeration_Literal, E_Entry)\n+\n+   SUBTYPE (Private_Kind, Entity_Kind, \n+      E_Record_Type_With_Private, E_Limited_Private_Subtype)\n+\n+   SUBTYPE (Protected_Kind, Entity_Kind, \n+      E_Protected_Type, E_Protected_Subtype)\n+\n+   SUBTYPE (Real_Kind, Entity_Kind, \n+      E_Ordinary_Fixed_Point_Type, E_Floating_Point_Subtype)\n+\n+   SUBTYPE (Record_Kind, Entity_Kind, \n+      E_Class_Wide_Type, E_Record_Subtype_With_Private)\n+\n+   SUBTYPE (Scalar_Kind, Entity_Kind, \n+      E_Enumeration_Type, E_Floating_Point_Subtype)\n+\n+   SUBTYPE (String_Kind, Entity_Kind, \n+      E_String_Type, E_String_Literal_Subtype)\n+\n+   SUBTYPE (Subprogram_Kind, Entity_Kind, \n+      E_Function, E_Procedure)\n+\n+   SUBTYPE (Signed_Integer_Kind, Entity_Kind, \n+      E_Signed_Integer_Type, E_Signed_Integer_Subtype)\n+\n+   SUBTYPE (Task_Kind, Entity_Kind, \n+      E_Task_Type, E_Task_Subtype)\n+\n+   SUBTYPE (Type_Kind, Entity_Kind, \n+      E_Enumeration_Type, E_Subprogram_Type)\n+\n+   typedef int Component_Alignment_Kind;\n+      #define Calign_Default           0\n+      #define Calign_Component_Size    1\n+      #define Calign_Component_Size_4  2\n+      #define Calign_Storage_Unit      3\n+\n+   typedef Boolean B;\n+   typedef Component_Alignment_Kind C;\n+   typedef Entity_Id E;\n+   typedef Mechanism_Type M;\n+   typedef Node_Id N;\n+   typedef Uint U;\n+   typedef Ureal R;\n+   typedef Elist_Id L;\n+   typedef List_Id S;\n+\n+   INLINE L Accept_Address                     (E Id);\n+   INLINE E Access_Disp_Table                  (E Id);\n+   INLINE E Actual_Subtype                     (E Id);\n+   INLINE B Address_Taken                      (E Id);\n+   INLINE E Alias                              (E Id);\n+   INLINE U Alignment                          (E Id);\n+   INLINE E Associated_Final_Chain             (E Id);\n+   INLINE E Associated_Formal_Package          (E Id);\n+   INLINE N Associated_Node_For_Itype          (E Id);\n+   INLINE E Associated_Storage_Pool            (E Id);\n+   INLINE N Barrier_Function                   (E Id);\n+   INLINE N Block_Node                         (E Id);\n+   INLINE E Body_Entity                        (E Id);\n+   INLINE E CR_Discriminant                    (E Id);\n+   INLINE B C_Pass_By_Copy                     (E Id);\n+   INLINE E Class_Wide_Type                    (E Id);\n+   INLINE E Cloned_Subtype                     (E Id);\n+\n+   #define Component_Alignment einfo__component_alignment\n+   C Component_Alignment                (E Id);\n+\n+   INLINE N Component_Clause                   (E Id);\n+   INLINE U Component_Bit_Offset               (E Id);\n+   INLINE U Component_Size                     (E Id);\n+   INLINE E Component_Type                     (E Id);\n+   INLINE E Corresponding_Concurrent_Type      (E Id);\n+   INLINE E Corresponding_Discriminant         (E Id);\n+   INLINE E Corresponding_Equality             (E Id);\n+   INLINE E Corresponding_Record_Type          (E Id);\n+   INLINE E Corresponding_Remote_Type          (E Id);\n+   INLINE B Debug_Info_Off                     (E Id);\n+   INLINE E Debug_Renaming_Link                (E Id);\n+   INLINE E DTC_Entity                         (E Id);\n+   INLINE U DT_Entry_Count                     (E Id);\n+   INLINE U DT_Position                        (E Id);\n+   INLINE E Default_Expr_Function              (E Id);\n+   INLINE B Default_Expressions_Processed      (E Id);\n+   INLINE N Default_Value                      (E Id);\n+   INLINE B Delay_Cleanups                     (E Id);\n+   INLINE B Delay_Subprogram_Descriptors       (E Id);\n+   INLINE R Delta_Value                        (E Id);\n+   INLINE L Dependent_Instances                (E Id);\n+   INLINE B Depends_On_Private                 (E Id);\n+   INLINE U Digits_Value                       (E Id);\n+   INLINE E Directly_Designated_Type           (E Id);\n+   INLINE B Discard_Names                      (E Id);\n+   INLINE E Discriminal                        (E Id);\n+   INLINE E Discriminal_Link                   (E Id);\n+   INLINE E Discriminant_Checking_Func         (E Id);\n+   INLINE L Discriminant_Constraint            (E Id);\n+   INLINE N Discriminant_Default_Value         (E Id);\n+   INLINE U Discriminant_Number                (E Id);\n+   INLINE B Elaborate_All_Desirable            (E Id);\n+   INLINE E Elaboration_Entity                 (E Id);\n+   INLINE B Elaboration_Entity_Required        (E Id);\n+   INLINE E Enclosing_Scope                    (E Id);\n+   INLINE B Entry_Accepted                     (E Id);\n+   INLINE E Entry_Bodies_Array                 (E Id);\n+   INLINE E Entry_Cancel_Parameter             (E Id);\n+   INLINE E Entry_Component                    (E Id);\n+   INLINE E Entry_Formal                       (E Id);\n+   INLINE E Entry_Index_Constant               (E Id);\n+   INLINE E Entry_Index_Type                   (E Id);\n+   INLINE E Entry_Parameters_Type              (E Id);\n+   INLINE E Enum_Pos_To_Rep                    (E Id);\n+   INLINE U Enumeration_Pos                    (E Id);\n+   INLINE U Enumeration_Rep                    (E Id);\n+   INLINE N Enumeration_Rep_Expr               (E Id);\n+   INLINE E Equivalent_Type                    (E Id);\n+   INLINE U Esize                              (E Id);\n+   INLINE U Exception_Code                     (E Id);\n+   INLINE E Extra_Accessibility                (E Id);\n+   INLINE E Extra_Constrained                  (E Id);\n+   INLINE E Extra_Formal                       (E Id);\n+   INLINE E Finalization_Chain_Entity          (E Id);\n+\n+   #define Finalize_Storage_Only einfo__finalize_storage_only\n+   B Finalize_Storage_Only              (E Id);\n+\n+   INLINE E First_Entity                       (E Id);\n+   INLINE N First_Index                        (E Id);\n+   INLINE E First_Literal                      (E Id);\n+   INLINE E First_Optional_Parameter           (E Id);\n+   INLINE E First_Private_Entity               (E Id);\n+   INLINE N First_Rep_Item                     (E Id);\n+   INLINE N Freeze_Node                        (E Id);\n+   INLINE B From_With_Type                     (E Id);\n+   INLINE E Full_View                          (E Id);\n+   INLINE B Function_Returns_With_DSP          (E Id);\n+   INLINE L Generic_Renamings                  (E Id);\n+   INLINE L Girder_Constraint                  (E Id);\n+   INLINE S Handler_Records                    (E Id);\n+   INLINE B Has_Aliased_Components             (E Id);\n+   INLINE B Has_Alignment_Clause               (E Id);\n+   INLINE B Has_All_Calls_Remote               (E Id);\n+   INLINE B Has_Atomic_Components              (E Id);\n+   INLINE B Has_Biased_Representation          (E Id);\n+   INLINE B Has_Completion                     (E Id);\n+   INLINE B Has_Completion_In_Body             (E Id);\n+   INLINE B Has_Complex_Representation         (E Id);\n+   INLINE B Has_Component_Size_Clause          (E Id);\n+   INLINE B Has_Controlled_Component           (E Id);\n+   INLINE B Has_Controlling_Result             (E Id);\n+   INLINE B Has_Convention_Pragma              (E Id);\n+   INLINE B Has_Delayed_Freeze                 (E Id);\n+   INLINE B Has_Discriminants                  (E Id);\n+   INLINE B Has_Enumeration_Rep_Clause         (E Id);\n+   INLINE B Has_Exit                           (E Id);\n+   INLINE B Has_External_Tag_Rep_Clause        (E Id);\n+   INLINE B Has_Fully_Qualified_Name           (E Id);\n+   INLINE B Has_Gigi_Rep_Item                  (E Id);\n+   INLINE B Has_Homonym                        (E Id);\n+\n+   #define Has_Interrupt_Handler einfo__has_interrupt_handler\n+   B Has_Interrupt_Handler              (E Id);\n+\n+   INLINE B Has_Machine_Radix_Clause           (E Id);\n+   INLINE B Has_Master_Entity                  (E Id);\n+   INLINE B Has_Missing_Return                 (E Id);\n+   INLINE B Has_Nested_Block_With_Handler      (E Id);\n+   INLINE B Has_Forward_Instantiation          (E Id);\n+   INLINE B Has_Non_Standard_Rep               (E Id);\n+   INLINE B Has_Object_Size_Clause             (E Id);\n+   INLINE B Has_Per_Object_Constraint          (E Id);\n+   INLINE B Has_Pragma_Controlled              (E Id);\n+   INLINE B Has_Pragma_Elaborate_Body          (E Id);\n+   INLINE B Has_Pragma_Inline                  (E Id);\n+   INLINE B Has_Pragma_Pack                    (E Id);\n+   INLINE B Has_Primitive_Operations           (E Id);\n+   INLINE B Has_Qualified_Name                 (E Id);\n+   INLINE B Has_Record_Rep_Clause              (E Id);\n+   INLINE B Has_Recursive_Call                 (E Id);\n+   INLINE B Has_Size_Clause                    (E Id);\n+   INLINE B Has_Small_Clause                   (E Id);\n+   INLINE B Has_Specified_Layout               (E Id);\n+   INLINE B Has_Storage_Size_Clause            (E Id);\n+   INLINE B Has_Subprogram_Descriptor          (E Id);\n+   INLINE B Has_Task                           (E Id);\n+   INLINE B Has_Unchecked_Union                (E Id);\n+   INLINE B Has_Unknown_Discriminants          (E Id);\n+   INLINE B Has_Volatile_Components            (E Id);\n+   INLINE E Homonym                            (E Id);\n+   INLINE E Hiding_Loop_Variable               (E Id);\n+   INLINE B In_Package_Body                    (E Id);\n+   INLINE B In_Private_Part                    (E Id);\n+   INLINE B In_Use                             (E Id);\n+   INLINE L Inner_Instances                    (E Id);\n+   INLINE N Interface_Name                     (E Id);\n+   INLINE B Is_AST_Entry                       (E Id);\n+   INLINE B Is_Abstract                        (E Id);\n+   INLINE B Is_Access_Constant                 (E Id);\n+   INLINE B Is_Aliased                         (E Id);\n+   INLINE B Is_Asynchronous                    (E Id);\n+   INLINE B Is_Atomic                          (E Id);\n+   INLINE B Is_Bit_Packed_Array                (E Id);\n+   INLINE B Is_CPP_Class                       (E Id);\n+   INLINE B Is_Called                          (E Id);\n+   INLINE B Is_Character_Type                  (E Id);\n+   INLINE B Is_Child_Unit                      (E Id);\n+   INLINE B Is_Compilation_Unit                (E Id);\n+   INLINE B Is_Completely_Hidden               (E Id);\n+   INLINE B Is_Constr_Subt_For_UN_Aliased      (E Id);\n+   INLINE B Is_Constr_Subt_For_U_Nominal       (E Id);\n+   INLINE B Is_Constrained                     (E Id);\n+   INLINE B Is_Constructor                     (E Id);\n+   INLINE B Is_Controlled                      (E Id);\n+   INLINE B Is_Controlling_Formal              (E Id);\n+   INLINE B Is_Destructor                      (E Id);\n+   INLINE B Is_Discrim_SO_Function             (E Id);\n+   INLINE B Is_Dispatching_Operation           (E Id);\n+   INLINE B Is_Eliminated                      (E Id);\n+   INLINE B Is_Entry_Formal                    (E Id);\n+   INLINE B Is_Exported                        (E Id);\n+   INLINE B Is_First_Subtype                   (E Id);\n+   INLINE B Is_For_Access_Subtype              (E Id);\n+   INLINE B Is_Frozen                          (E Id);\n+   INLINE B Is_Generic_Instance                (E Id);\n+   INLINE B Is_Hidden                          (E Id);\n+   INLINE B Is_Hidden_Open_Scope               (E Id);\n+   INLINE B Is_Immediately_Visible             (E Id);\n+   INLINE B Is_Imported                        (E Id);\n+   INLINE B Is_Inlined                         (E Id);\n+   INLINE B Is_Instantiated                    (E Id);\n+   INLINE B Is_Internal                        (E Id);\n+   INLINE B Is_Interrupt_Handler               (E Id);\n+   INLINE B Is_Intrinsic_Subprogram            (E Id);\n+   INLINE B Is_Itype                           (E Id);\n+   INLINE B Is_Known_Valid                     (E Id);\n+   INLINE B Is_Limited_Composite               (E Id);\n+   INLINE B Is_Machine_Code_Subprogram         (E Id);\n+   INLINE B Is_Non_Static_Subtype              (E Id);\n+   INLINE B Is_Null_Init_Proc                  (E Id);\n+   INLINE B Is_Optional_Parameter              (E Id);\n+   INLINE B Is_Package_Body_Entity             (E Id);\n+   INLINE B Is_Packed                          (E Id);\n+   INLINE B Is_Packed_Array_Type               (E Id);\n+   INLINE B Is_Potentially_Use_Visible         (E Id);\n+   INLINE B Is_Preelaborated                   (E Id);\n+   INLINE B Is_Private_Composite               (E Id);\n+   INLINE B Is_Private_Descendant              (E Id);\n+   INLINE B Is_Psected                         (E Id);\n+   INLINE B Is_Public                          (E Id);\n+   INLINE B Is_Pure                            (E Id);\n+   INLINE B Is_Remote_Call_Interface           (E Id);\n+   INLINE B Is_Remote_Types                    (E Id);\n+   INLINE B Is_Renaming_Of_Object              (E Id);\n+   INLINE B Is_Shared_Passive                  (E Id);\n+   INLINE B Is_Statically_Allocated            (E Id);\n+   INLINE B Is_Tag                             (E Id);\n+   INLINE B Is_Tagged_Type                     (E Id);\n+   INLINE B Is_True_Constant                   (E Id);\n+   INLINE B Is_Unchecked_Union                 (E Id);\n+   INLINE B Is_Unsigned_Type                   (E Id);\n+   INLINE B Is_VMS_Exception                   (E Id);\n+   INLINE B Is_Valued_Procedure                (E Id);\n+   INLINE B Is_Visible_Child_Unit              (E Id);\n+   INLINE B Is_Volatile                        (E Id);\n+\n+   #define Is_Wrapper_Package einfo__is_wrapper_package\n+   B Is_Wrapper_Package                 (E Id);\n+\n+   INLINE E Last_Entity                        (E Id);\n+   INLINE E Lit_Indexes                        (E Id);\n+   INLINE E Lit_Strings                        (E Id);\n+   INLINE B Machine_Radix_10                   (E Id);\n+   INLINE E Master_Id                          (E Id);\n+   INLINE B Materialize_Entity                 (E Id);\n+   INLINE M Mechanism                          (E Id);\n+   INLINE U Modulus                            (E Id);\n+   INLINE B Needs_Debug_Info                   (E Id);\n+   INLINE B Needs_No_Actuals                   (E Id);\n+   INLINE E Next_Inlined_Subprogram            (E Id);\n+   INLINE B No_Pool_Assigned                   (E Id);\n+   INLINE B No_Return                          (E Id);\n+   INLINE B Non_Binary_Modulus                 (E Id);\n+   INLINE B Nonzero_Is_True                    (E Id);\n+   INLINE U Normalized_First_Bit               (E Id);\n+   INLINE U Normalized_Position                (E Id);\n+   INLINE U Normalized_Position_Max            (E Id);\n+   INLINE B Not_Source_Assigned                (E Id);\n+   INLINE E Object_Ref                         (E Id);\n+   INLINE E Original_Record_Component          (E Id);\n+   INLINE E Packed_Array_Type                  (E Id);\n+   INLINE E Parent_Subtype                     (E Id);\n+   INLINE L Primitive_Operations               (E Id);\n+   INLINE E Prival                             (E Id);\n+   INLINE L Privals_Chain                      (E Id);\n+   INLINE L Private_Dependents                 (E Id);\n+   INLINE N Private_View                       (E Id);\n+   INLINE E Protected_Body_Subprogram          (E Id);\n+   INLINE E Protected_Formal                   (E Id);\n+   INLINE E Protected_Operation                (E Id);\n+   INLINE U RM_Size                            (E Id);\n+   INLINE B Reachable                          (E Id);\n+   INLINE B Referenced                         (E Id);\n+   INLINE N Referenced_Object                  (E Id);\n+   INLINE N Register_Exception_Call            (E Id);\n+   INLINE E Related_Array_Object               (E Id);\n+   INLINE E Related_Instance                   (E Id);\n+   INLINE N Renamed_Entity                     (E Id);\n+   INLINE N Renamed_Object                     (E Id);\n+   INLINE U Renaming_Map                       (E Id);\n+   INLINE B Return_Present                     (E Id);\n+   INLINE B Returns_By_Ref                     (E Id);\n+   INLINE B Reverse_Bit_Order                  (E Id);\n+   INLINE N Scalar_Range                       (E Id);\n+   INLINE U Scale_Value                        (E Id);\n+   INLINE U Scope_Depth_Value                  (E Id);\n+   INLINE B Sec_Stack_Needed_For_Return        (E Id);\n+   INLINE S Shadow_Entities                    (E Id);\n+   INLINE E Shared_Var_Assign_Proc             (E Id);\n+   INLINE E Shared_Var_Read_Proc               (E Id);\n+   INLINE N Size_Check_Code                    (E Id);\n+   INLINE B Size_Known_At_Compile_Time         (E Id);\n+   INLINE B Size_Depends_On_Discriminant       (E Id);\n+   INLINE R Small_Value                        (E Id);\n+   INLINE E Spec_Entity                        (E Id);\n+   INLINE E Storage_Size_Variable              (E Id);\n+   INLINE B Strict_Alignment                   (E Id);\n+   INLINE U String_Literal_Length              (E Id);\n+   INLINE N String_Literal_Low_Bound           (E Id);\n+   INLINE B Suppress_Access_Checks             (E Id);\n+   INLINE B Suppress_Accessibility_Checks      (E Id);\n+   INLINE B Suppress_Discriminant_Checks       (E Id);\n+   INLINE B Suppress_Division_Checks           (E Id);\n+   INLINE B Suppress_Elaboration_Checks        (E Id);\n+   INLINE B Suppress_Elaboration_Warnings      (E Id);\n+   INLINE B Suppress_Index_Checks              (E Id);\n+   INLINE B Suppress_Init_Proc                 (E Id);\n+   INLINE B Suppress_Length_Checks             (E Id);\n+   INLINE B Suppress_Overflow_Checks           (E Id);\n+   INLINE B Suppress_Range_Checks              (E Id);\n+   INLINE B Suppress_Storage_Checks            (E Id);\n+   INLINE B Suppress_Style_Checks              (E Id);\n+   INLINE B Suppress_Tag_Checks                (E Id);\n+   INLINE E Underlying_Full_View               (E Id);\n+   INLINE N Unset_Reference                    (E Id);\n+   INLINE B Uses_Sec_Stack                     (E Id);\n+   INLINE B Vax_Float                          (E Id);\n+   INLINE B Warnings_Off                       (E Id);\n+   INLINE B Is_Access_Type                     (E Id);\n+   INLINE B Is_Array_Type                      (E Id);\n+   INLINE B Is_Class_Wide_Type                 (E Id);\n+   INLINE B Is_Composite_Type                  (E Id);\n+   INLINE B Is_Concurrent_Body                 (E Id);\n+   INLINE B Is_Concurrent_Record_Type          (E Id);\n+   INLINE B Is_Concurrent_Type                 (E Id);\n+   INLINE B Is_Decimal_Fixed_Point_Type        (E Id);\n+   INLINE B Is_Digits_Type                     (E Id);\n+   INLINE B Is_Discrete_Or_Fixed_Point_Type    (E Id);\n+   INLINE B Is_Discrete_Type                   (E Id);\n+   INLINE B Is_Elementary_Type                 (E Id);\n+   INLINE B Is_Entry                           (E Id);\n+   INLINE B Is_Enumeration_Type                (E Id);\n+   INLINE B Is_Fixed_Point_Type                (E Id);\n+   INLINE B Is_Floating_Point_Type             (E Id);\n+   INLINE B Is_Formal                          (E Id);\n+   INLINE B Is_Formal_Subprogram               (E Id);\n+   INLINE B Is_Generic_Actual_Type             (E Id);\n+   INLINE B Is_Generic_Type                    (E Id);\n+   INLINE B Is_Generic_Unit                    (E Id);\n+   INLINE B Is_Incomplete_Or_Private_Type      (E Id);\n+   INLINE B Is_Integer_Type                    (E Id);\n+   INLINE B Is_Limited_Record                  (E Id);\n+   INLINE B Is_Modular_Integer_Type            (E Id);\n+   INLINE B Is_Named_Number                    (E Id);\n+   INLINE B Is_Numeric_Type                    (E Id);\n+   INLINE B Is_Object                          (E Id);\n+   INLINE B Is_Ordinary_Fixed_Point_Type       (E Id);\n+   INLINE B Is_Overloadable                    (E Id);\n+   INLINE B Is_Private_Type                    (E Id);\n+   INLINE B Is_Protected_Type                  (E Id);\n+   INLINE B Is_Real_Type                       (E Id);\n+   INLINE B Is_Record_Type                     (E Id);\n+   INLINE B Is_Scalar_Type                     (E Id);\n+   INLINE B Is_Signed_Integer_Type             (E Id);\n+   INLINE B Is_Subprogram                      (E Id);\n+   INLINE B Is_Task_Type                       (E Id);\n+   INLINE B Is_Type                            (E Id);\n+\n+   #define Address_Clause einfo__address_clause\n+   N Address_Clause                     (E Id);\n+\n+   #define Alignment_Clause einfo__alignment_clause\n+   N Alignment_Clause                   (E Id);\n+\n+   #define Ancestor_Subtype einfo__ancestor_subtype\n+   E Ancestor_Subtype                   (E Id);\n+\n+   #define Base_Type einfo__base_type\n+   E Base_Type                          (E Id);\n+\n+   #define Constant_Value einfo__constant_value\n+   N Constant_Value                     (E Id);\n+\n+   #define Declaration_Node einfo__declaration_node\n+   N Declaration_Node                   (E Id);\n+\n+   #define Designated_Type einfo__designated_type\n+   E Designated_Type                    (E Id);\n+\n+   #define Enclosing_Dynamic_Scope einfo__enclosing_dynamic_scope\n+   E Enclosing_Dynamic_Scope            (E Id);\n+\n+   #define First_Component einfo__first_component\n+   E First_Component                    (E Id);\n+\n+   #define First_Discriminant einfo__first_discriminant\n+   E First_Discriminant                 (E Id);\n+\n+   #define First_Formal einfo__first_formal\n+   E First_Formal                       (E Id);\n+\n+   #define First_Girder_Discriminant einfo__first_girder_discriminant\n+   E First_Girder_Discriminant          (E Id);\n+\n+   #define First_Subtype einfo__first_subtype\n+   E First_Subtype                      (E Id);\n+\n+   #define Has_Attach_Handler einfo__has_attach_handler\n+   B Has_Attach_Handler                 (E Id);\n+\n+   #define Has_Entries einfo__has_entries\n+   B Has_Entries                        (E Id);\n+\n+   #define Has_Foreign_Convention einfo__has_foreign_convention\n+   B Has_Foreign_Convention             (E Id);\n+\n+   #define Has_Private_Ancestor einfo__has_private_ancestor\n+   B Has_Private_Ancestor               (E Id);\n+\n+   INLINE B Has_Private_Declaration            (E Id);\n+\n+   #define Implementation_Base_Type einfo__implementation_base_type\n+   E Implementation_Base_Type           (E Id);\n+\n+   #define Is_Always_Inlined einfo__is_always_inlined\n+   B Is_Always_Inlined                  (E Id);\n+\n+   #define Is_Boolean_Type einfo__is_boolean_type\n+   B Is_Boolean_Type                    (E Id);\n+\n+   #define Is_By_Copy_Type einfo__is_by_copy_type\n+   B Is_By_Copy_Type                    (E Id);\n+\n+   #define Is_By_Reference_Type einfo__is_by_reference_type\n+   B Is_By_Reference_Type               (E Id);\n+\n+   #define Is_Derived_Type einfo__is_derived_type\n+   B Is_Derived_Type                    (E Id);\n+\n+   #define Is_Dynamic_Scope einfo__is_dynamic_scope\n+   B Is_Dynamic_Scope                   (E Id);\n+\n+   #define Is_Indefinite_Subtype einfo__is_indefinite_subtype\n+   B Is_Indefinite_Subtype              (E Id);\n+\n+   #define Is_Limited_Type einfo__is_limited_type\n+   B Is_Limited_Type                    (E Id);\n+\n+   #define Is_Package einfo__is_package\n+   B Is_Package                         (E Id);\n+\n+   #define Is_Protected_Private einfo__is_protected_private\n+   B Is_Protected_Private               (E Id);\n+\n+   #define Is_Protected_Record_Type einfo__is_protected_record_type\n+   B Is_Protected_Record_Type           (E Id);\n+\n+   #define Is_Return_By_Reference_Type einfo__is_return_by_reference_type\n+   B Is_Return_By_Reference_Type        (E Id);\n+\n+   #define Is_String_Type einfo__is_string_type\n+   B Is_String_Type                     (E Id);\n+\n+   #define Is_Task_Record_Type einfo__is_task_record_type\n+   B Is_Task_Record_Type                (E Id);\n+\n+   #define Next_Component einfo__next_component\n+   E Next_Component                     (E Id);\n+\n+   #define Next_Discriminant einfo__next_discriminant\n+   E Next_Discriminant                  (E Id);\n+\n+   #define Next_Formal einfo__next_formal\n+   E Next_Formal                        (E Id);\n+\n+   #define Next_Formal_With_Extras einfo__next_formal_with_extras\n+   E Next_Formal_With_Extras            (E Id);\n+\n+   #define Next_Girder_Discriminant einfo__next_girder_discriminant\n+   E Next_Girder_Discriminant           (E Id);\n+\n+   INLINE E Next_Literal                       (E Id);\n+\n+   #define Number_Dimensions einfo__number_dimensions\n+   Pos Number_Dimensions                  (E Id);\n+\n+   #define Number_Discriminants einfo__number_discriminants\n+   Pos Number_Discriminants               (E Id);\n+\n+   #define Number_Entries einfo__number_entries\n+   Nat Number_Entries                     (E Id);\n+\n+   #define Number_Formals einfo__number_formals\n+   Pos Number_Formals                     (E Id);\n+\n+   INLINE Formal_Kind Parameter_Mode                     (E Id);\n+\n+   #define Root_Type einfo__root_type\n+   E Root_Type                          (E Id);\n+\n+   #define Scope_Depth_Set einfo__scope_depth_set\n+   B Scope_Depth_Set                    (E Id);\n+\n+   #define Size_Clause einfo__size_clause\n+   N Size_Clause                        (E Id);\n+\n+   #define Tag_Component einfo__tag_component\n+   E Tag_Component                      (E Id);\n+\n+   #define Type_High_Bound einfo__type_high_bound\n+   N Type_High_Bound                    (E Id);\n+\n+   #define Type_Low_Bound einfo__type_low_bound\n+   N Type_Low_Bound                     (E Id);\n+\n+   #define Underlying_Type einfo__underlying_type\n+   E Underlying_Type                    (E Id);\n+\n+   INLINE B Known_Alignment                       (Entity_Id E);\n+   INLINE B Known_Component_Bit_Offset            (Entity_Id E);\n+   INLINE B Known_Component_Size                  (Entity_Id E);\n+   INLINE B Known_Esize                           (Entity_Id E);\n+\n+   #define Known_Normalized_First_Bit einfo__known_normalized_first_bit\n+   B Known_Normalized_First_Bit            (Entity_Id E);\n+\n+   #define Known_Normalized_Position einfo__known_normalized_position\n+   B Known_Normalized_Position             (Entity_Id E);\n+\n+   #define Known_Normalized_Position_Max einfo__known_normalized_position_max\n+   B Known_Normalized_Position_Max         (Entity_Id E);\n+\n+   #define Known_RM_Size einfo__known_rm_size\n+   B Known_RM_Size                         (Entity_Id E);\n+\n+   #define Known_Static_Component_Bit_Offset einfo__known_static_component_bit_offset\n+   B Known_Static_Component_Bit_Offset     (Entity_Id E);\n+\n+   INLINE B Known_Static_Component_Size           (Entity_Id E);\n+   INLINE B Known_Static_Esize                    (Entity_Id E);\n+\n+   #define Known_Static_Normalized_Position einfo__known_static_normalized_position\n+   B Known_Static_Normalized_Position      (Entity_Id E);\n+\n+   #define Known_Static_Normalized_Position_Max einfo__known_static_normalized_position_max\n+   B Known_Static_Normalized_Position_Max  (Entity_Id E);\n+\n+   #define Known_Static_RM_Size einfo__known_static_rm_size\n+   B Known_Static_RM_Size                  (Entity_Id E);\n+\n+   INLINE B Unknown_Alignment                     (Entity_Id E);\n+   INLINE B Unknown_Component_Bit_Offset          (Entity_Id E);\n+   INLINE B Unknown_Component_Size                (Entity_Id E);\n+   INLINE B Unknown_Esize                         (Entity_Id E);\n+\n+   #define Unknown_Normalized_First_Bit einfo__unknown_normalized_first_bit\n+   B Unknown_Normalized_First_Bit          (Entity_Id E);\n+\n+   #define Unknown_Normalized_Position einfo__unknown_normalized_position\n+   B Unknown_Normalized_Position           (Entity_Id E);\n+\n+   #define Unknown_Normalized_Position_Max einfo__unknown_normalized_position_max\n+   B Unknown_Normalized_Position_Max       (Entity_Id E);\n+\n+   #define Unknown_RM_Size einfo__unknown_rm_size\n+   B Unknown_RM_Size                       (Entity_Id E);\n+\n+\n+   INLINE L Accept_Address (E Id)\n+      { return Elist21 (Id); }\n+\n+   INLINE E Access_Disp_Table (E Id)\n+      { return Node16 (Base_Type (Underlying_Type (Base_Type (Id)))); }\n+\n+   INLINE E Actual_Subtype (E Id)\n+      { return Node17 (Id); }\n+\n+   INLINE B Address_Taken (E Id)\n+      { return Flag104 (Id); }\n+\n+   INLINE E Alias (E Id)\n+      { return Node18 (Id); }\n+\n+   INLINE U Alignment (E Id)\n+      { return Uint14 (Id); }\n+\n+   INLINE E Associated_Final_Chain (E Id)\n+      { return Node23 (Id); }\n+\n+   INLINE E Associated_Formal_Package (E Id)\n+      { return Node12 (Id); }\n+\n+   INLINE N Associated_Node_For_Itype (E Id)\n+      { return Node8 (Id); }\n+\n+   INLINE E Associated_Storage_Pool (E Id)\n+      { return Node22 (Id); }\n+\n+   INLINE N Barrier_Function (E Id)\n+      { return Node12 (Id); }\n+\n+   INLINE N Block_Node (E Id)\n+      { return Node11 (Id); }\n+\n+   INLINE E Body_Entity (E Id)\n+      { return Node19 (Id); }\n+\n+   INLINE B C_Pass_By_Copy (E Id)\n+      { return Flag125 (Implementation_Base_Type (Id)); }\n+\n+   INLINE E Class_Wide_Type (E Id)\n+      { return Node9 (Id); }\n+\n+   INLINE E Cloned_Subtype (E Id)\n+      { return Node16 (Id); }\n+\n+   INLINE U Component_Bit_Offset (E Id)\n+      { return Uint11 (Id); }\n+\n+   INLINE N Component_Clause (E Id)\n+      { return Node13 (Id); }\n+\n+   INLINE U Component_Size (E Id)\n+      { return Uint22 (Implementation_Base_Type (Id)); }\n+\n+   INLINE E Component_Type (E Id)\n+      { return Node20 (Implementation_Base_Type (Id)); }\n+\n+   INLINE E Corresponding_Concurrent_Type (E Id)\n+      { return Node18 (Id); }\n+\n+   INLINE E Corresponding_Discriminant (E Id)\n+      { return Node19 (Id); }\n+\n+   INLINE E Corresponding_Equality (E Id)\n+      { return Node13 (Id); }\n+\n+   INLINE E Corresponding_Record_Type (E Id)\n+      { return Node18 (Id); }\n+\n+   INLINE E Corresponding_Remote_Type (E Id)\n+      { return Node22 (Id); }\n+\n+   INLINE E CR_Discriminant (E Id)\n+      { return Node23 (Id); }\n+\n+   INLINE B Debug_Info_Off (E Id)\n+      { return Flag166 (Id); }\n+\n+   INLINE E Debug_Renaming_Link (E Id)\n+      { return Node13 (Id); }\n+\n+   INLINE E Default_Expr_Function (E Id)\n+      { return Node21 (Id); }\n+\n+   INLINE B Default_Expressions_Processed (E Id)\n+      { return Flag108 (Id); }\n+\n+   INLINE N Default_Value (E Id)\n+      { return Node20 (Id); }\n+\n+   INLINE B Delay_Cleanups (E Id)\n+      { return Flag114 (Id); }\n+\n+   INLINE B Delay_Subprogram_Descriptors (E Id)\n+      { return Flag50 (Id); }\n+\n+   INLINE R Delta_Value (E Id)\n+      { return Ureal18 (Id); }\n+\n+   INLINE L Dependent_Instances (E Id)\n+      { return Elist8 (Id); }\n+\n+   INLINE B Depends_On_Private (E Id)\n+      { return Flag14 (Id); }\n+\n+   INLINE U Digits_Value (E Id)\n+      { return Uint17 (Id); }\n+\n+   INLINE E Directly_Designated_Type (E Id)\n+      { return Node20 (Id); }\n+\n+   INLINE B Discard_Names (E Id)\n+      { return Flag88 (Id); }\n+\n+   INLINE E Discriminal (E Id)\n+      { return Node17 (Id); }\n+\n+   INLINE N Discriminal_Link (E Id)\n+      { return Node10 (Id); }\n+\n+   INLINE E Discriminant_Checking_Func (E Id)\n+      { return Node20 (Id); }\n+\n+   INLINE L Discriminant_Constraint (E Id)\n+      { return Elist21 (Id); }\n+\n+   INLINE N Discriminant_Default_Value (E Id)\n+      { return Node20 (Id); }\n+\n+   INLINE U Discriminant_Number (E Id)\n+      { return Uint15 (Id); }\n+\n+   INLINE U DT_Entry_Count (E Id)\n+      { return Uint15 (Id); }\n+\n+   INLINE U DT_Position (E Id)\n+      { return Uint15 (Id); }\n+\n+   INLINE E DTC_Entity (E Id)\n+      { return Node16 (Id); }\n+\n+   INLINE B Elaborate_All_Desirable (E Id)\n+      { return Flag146 (Id); }\n+\n+   INLINE E Elaboration_Entity (E Id)\n+      { return Node13 (Id); }\n+\n+   INLINE B Elaboration_Entity_Required (E Id)\n+      { return Flag174 (Id); }\n+\n+   INLINE E Enclosing_Scope (E Id)\n+      { return Node18 (Id); }\n+\n+   INLINE B Entry_Accepted (E Id)\n+      { return Flag152 (Id); }\n+\n+   INLINE E Entry_Bodies_Array (E Id)\n+      { return Node15 (Id); }\n+\n+   INLINE E Entry_Cancel_Parameter (E Id)\n+      { return Node23 (Id); }\n+\n+   INLINE E Entry_Component (E Id)\n+      { return Node11 (Id); }\n+\n+   INLINE E Entry_Formal (E Id)\n+      { return Node16 (Id); }\n+\n+   INLINE N Entry_Index_Constant (E Id)\n+      { return Node18 (Id); }\n+\n+   INLINE E Entry_Parameters_Type (E Id)\n+      { return Node15 (Id); }\n+\n+   INLINE E Enum_Pos_To_Rep (E Id)\n+      { return Node23 (Id); }\n+\n+   INLINE Uint Enumeration_Pos (E Id)\n+      { return Uint11 (Id); }\n+\n+   INLINE U Enumeration_Rep (E Id)\n+      { return Uint12 (Id); }\n+\n+   INLINE N Enumeration_Rep_Expr (E Id)\n+      { return Node22 (Id); }\n+\n+   INLINE E Equivalent_Type (E Id)\n+      { return Node18 (Id); }\n+\n+   INLINE Uint Esize (E Id)\n+      { return Uint12 (Id); }\n+\n+   INLINE Uint Exception_Code (E Id)\n+      { return Uint22 (Id); }\n+\n+   INLINE E Extra_Accessibility (E Id)\n+      { return Node13 (Id); }\n+\n+   INLINE E Extra_Constrained (E Id)\n+      { return Node23 (Id); }\n+\n+   INLINE E Extra_Formal (E Id)\n+      { return Node15 (Id); }\n+\n+   INLINE E Finalization_Chain_Entity (E Id)\n+      { return Node19 (Id); }\n+\n+   INLINE E First_Entity (E Id)\n+      { return Node17 (Id); }\n+\n+   INLINE N First_Index (E Id)\n+      { return Node17 (Id); }\n+\n+   INLINE E First_Literal (E Id)\n+      { return Node17 (Id); }\n+\n+   INLINE E First_Optional_Parameter (E Id)\n+      { return Node14 (Id); }\n+\n+   INLINE E First_Private_Entity (E Id)\n+      { return Node16 (Id); }\n+\n+   INLINE E First_Rep_Item (E Id)\n+      { return Node6 (Id); }\n+\n+   INLINE N Freeze_Node (E Id)\n+      { return Node7 (Id); }\n+\n+   INLINE B From_With_Type (E Id)\n+      { return Flag159 (Id); }\n+\n+   INLINE E Full_View (E Id)\n+      { return Node11 (Id); }\n+\n+   INLINE B Function_Returns_With_DSP (E Id)\n+      { return Flag169 (Id); }\n+\n+   INLINE L Generic_Renamings (E Id)\n+      { return Elist23 (Id); }\n+\n+   INLINE L Girder_Constraint (E Id)\n+      { return Elist23 (Id); }\n+\n+   INLINE S Handler_Records (E Id)\n+      { return List10 (Id); }\n+\n+   INLINE B Has_Aliased_Components (E Id)\n+      { return Flag135 (Implementation_Base_Type (Id)); }\n+\n+   INLINE B Has_Alignment_Clause (E Id)\n+      { return Flag46 (Id); }\n+\n+   INLINE B Has_All_Calls_Remote (E Id)\n+      { return Flag79 (Id); }\n+\n+   INLINE B Has_Atomic_Components (E Id)\n+      { return Flag86 (Implementation_Base_Type (Id)); }\n+\n+   INLINE B Has_Biased_Representation (E Id)\n+      { return Flag139 (Id); }\n+\n+   INLINE B Has_Completion (E Id)\n+      { return Flag26 (Id); }\n+\n+   INLINE B Has_Completion_In_Body (E Id)\n+      { return Flag71 (Id); }\n+\n+   INLINE B Has_Complex_Representation (E Id)\n+      { return Flag140 (Implementation_Base_Type (Id)); }\n+\n+   INLINE B Has_Component_Size_Clause (E Id)\n+      { return Flag68 (Implementation_Base_Type (Id)); }\n+\n+   INLINE B Has_Controlled_Component (E Id)\n+      { return Flag43 (Base_Type (Id)); }\n+\n+   INLINE B Has_Controlling_Result (E Id)\n+      { return Flag98 (Id); }\n+\n+   INLINE B Has_Convention_Pragma (E Id)\n+      { return Flag119 (Id); }\n+\n+   INLINE B Has_Delayed_Freeze (E Id)\n+      { return Flag18 (Id); }\n+\n+   INLINE B Has_Discriminants (E Id)\n+      { return Flag5 (Id); }\n+\n+   INLINE B Has_Enumeration_Rep_Clause (E Id)\n+      { return Flag66 (Id); }\n+\n+   INLINE B Has_Exit (E Id)\n+      { return Flag47 (Id); }\n+\n+   INLINE B Has_External_Tag_Rep_Clause (E Id)\n+      { return Flag110 (Id); }\n+\n+   INLINE B Has_Forward_Instantiation (E Id)\n+      { return Flag175 (Id); }\n+\n+   INLINE B Has_Fully_Qualified_Name (E Id)\n+      { return Flag173 (Id); }\n+\n+   INLINE B Has_Gigi_Rep_Item (E Id)\n+      { return Flag82 (Id); }\n+\n+   INLINE B Has_Homonym (E Id)\n+      { return Flag56 (Id); }\n+\n+   INLINE B Has_Machine_Radix_Clause (E Id)\n+      { return Flag83 (Id); }\n+\n+   INLINE B Has_Master_Entity (E Id)\n+      { return Flag21 (Id); }\n+\n+   INLINE B Has_Missing_Return (E Id)\n+      { return Flag142 (Id); }\n+\n+   INLINE B Has_Nested_Block_With_Handler (E Id)\n+      { return Flag101 (Id); }\n+\n+   INLINE B Has_Non_Standard_Rep (E Id)\n+      { return Flag75 (Implementation_Base_Type (Id)); }\n+\n+   INLINE B Has_Object_Size_Clause (E Id)\n+      { return Flag172 (Id); }\n+\n+   INLINE B Has_Per_Object_Constraint (E Id)\n+      { return Flag154 (Id); }\n+\n+   INLINE B Has_Pragma_Controlled (E Id)\n+      { return Flag27 (Implementation_Base_Type (Id)); }\n+\n+   INLINE B Has_Pragma_Elaborate_Body (E Id)\n+      { return Flag150 (Id); }\n+\n+   INLINE B Has_Pragma_Inline (E Id)\n+      { return Flag157 (Id); }\n+\n+   INLINE B Has_Pragma_Pack (E Id)\n+      { return Flag121 (Implementation_Base_Type (Id)); }\n+\n+   INLINE B Has_Primitive_Operations (E Id)\n+      { return Flag120 (Base_Type (Id)); }\n+\n+   INLINE B Has_Private_Declaration (E Id)\n+      { return Flag155 (Id); }\n+\n+   INLINE B Has_Qualified_Name (E Id)\n+      { return Flag161 (Id); }\n+\n+   INLINE B Has_Record_Rep_Clause (E Id)\n+      { return Flag65 (Id); }\n+\n+   INLINE B Has_Recursive_Call (E Id)\n+      { return Flag143 (Id); }\n+\n+   INLINE B Has_Size_Clause (E Id)\n+      { return Flag29 (Id); }\n+\n+   INLINE B Has_Small_Clause (E Id)\n+      { return Flag67 (Id); }\n+\n+   INLINE B Has_Specified_Layout (E Id)\n+      { return Flag100 (Id); }\n+\n+   INLINE B Has_Storage_Size_Clause (E Id)\n+      { return Flag23 (Implementation_Base_Type (Id)); }\n+\n+   INLINE B Has_Subprogram_Descriptor (E Id)\n+      { return Flag93 (Id); }\n+\n+   INLINE B Has_Task (E Id)\n+      { return Flag30 (Base_Type (Id)); }\n+\n+   INLINE B Has_Unchecked_Union (E Id)\n+      { return Flag123 (Base_Type (Id)); }\n+\n+   INLINE B Has_Unknown_Discriminants (E Id)\n+      { return Flag72 (Id); }\n+\n+   INLINE B Has_Volatile_Components (E Id)\n+      { return Flag87 (Implementation_Base_Type (Id)); }\n+\n+   INLINE E Hiding_Loop_Variable (E Id)\n+      { return Node8 (Id); }\n+\n+   INLINE E Homonym (E Id)\n+      { return Node4 (Id); }\n+\n+   INLINE B In_Package_Body (E Id)\n+      { return Flag48 (Id); }\n+\n+   INLINE B In_Private_Part (E Id)\n+      { return Flag45 (Id); }\n+\n+   INLINE B In_Use (E Id)\n+      { return Flag8 (Id); }\n+\n+   INLINE L Inner_Instances (E Id)\n+      { return Elist23 (Id); }\n+\n+   INLINE N Interface_Name (E Id)\n+      { return Node21 (Id); }\n+\n+   INLINE B Is_Abstract (E Id)\n+      { return Flag19 (Id); }\n+\n+   INLINE B Is_Access_Constant (E Id)\n+      { return Flag69 (Id); }\n+\n+   INLINE B Is_Aliased (E Id)\n+      { return Flag15 (Id); }\n+\n+   INLINE B Is_AST_Entry (E Id)\n+      { return Flag132 (Id); }\n+\n+   INLINE B Is_Asynchronous (E Id)\n+      { return Flag81 (Id); }\n+\n+   INLINE B Is_Atomic (E Id)\n+      { return Flag85 (Id); }\n+\n+   INLINE B Is_Bit_Packed_Array (E Id)\n+      { return Flag122 (Implementation_Base_Type (Id)); }\n+\n+   INLINE B Is_Called (E Id)\n+      { return Flag102 (Id); }\n+\n+   INLINE B Is_Character_Type (E Id)\n+      { return Flag63 (Id); }\n+\n+   INLINE B Is_Child_Unit (E Id)\n+      { return Flag73 (Id); }\n+\n+   INLINE B Is_Compilation_Unit (E Id)\n+      { return Flag149 (Id); }\n+\n+   INLINE B Is_Completely_Hidden (E Id)\n+      { return Flag103 (Id); }\n+\n+   INLINE B Is_Constr_Subt_For_U_Nominal (E Id)\n+      { return Flag80 (Id); }\n+\n+   INLINE B Is_Constr_Subt_For_UN_Aliased (E Id)\n+      { return Flag141 (Id); }\n+\n+   INLINE B Is_Constrained (E Id)\n+      { return Flag12 (Id); }\n+\n+   INLINE B Is_Constructor (E Id)\n+      { return Flag76 (Id); }\n+\n+   INLINE B Is_Controlled (E Id)\n+      { return Flag42 (Base_Type (Id)); }\n+\n+   INLINE B Is_Controlling_Formal (E Id)\n+      { return Flag97 (Id); }\n+\n+   INLINE B Is_CPP_Class (E Id)\n+      { return Flag74 (Id); }\n+\n+   INLINE B Is_Destructor (E Id)\n+      { return Flag77 (Id); }\n+\n+   INLINE B Is_Discrim_SO_Function (E Id)\n+      { return Flag176 (Id); }\n+\n+   INLINE B Is_Dispatching_Operation (E Id)\n+      { return Flag6 (Id); }\n+\n+   INLINE B Is_Eliminated (E Id)\n+      { return Flag124 (Id); }\n+\n+   INLINE B Is_Entry_Formal (E Id)\n+      { return Flag52 (Id); }\n+\n+   INLINE B Is_Exported (E Id)\n+      { return Flag99 (Id); }\n+\n+   INLINE B Is_First_Subtype (E Id)\n+      { return Flag70 (Id); }\n+\n+   INLINE B Is_For_Access_Subtype (E Id)\n+      { return Flag118 (Id); }\n+\n+   INLINE B Is_Formal_Subprogram (E Id)\n+      { return Flag111 (Id); }\n+\n+   INLINE B Is_Frozen (E Id)\n+      { return Flag4 (Id); }\n+\n+   INLINE B Is_Generic_Actual_Type (E Id)\n+      { return Flag94 (Id); }\n+\n+   INLINE B Is_Generic_Instance (E Id)\n+      { return Flag130 (Id); }\n+\n+   INLINE B Is_Generic_Type (E Id)\n+      { return Flag13 (Id); }\n+\n+   INLINE B Is_Hidden (E Id)\n+      { return Flag57 (Id); }\n+\n+   INLINE B Is_Hidden_Open_Scope (E Id)\n+      { return Flag171 (Id); }\n+\n+   INLINE B Is_Immediately_Visible (E Id)\n+      { return Flag7 (Id); }\n+\n+   INLINE B Is_Imported (E Id)\n+      { return Flag24 (Id); }\n+\n+   INLINE B Is_Inlined (E Id)\n+      { return Flag11 (Id); }\n+\n+   INLINE B Is_Instantiated (E Id)\n+      { return Flag126 (Id); }\n+\n+   INLINE B Is_Internal (E Id)\n+      { return Flag17 (Id); }\n+\n+   INLINE B Is_Interrupt_Handler (E Id)\n+      { return Flag89 (Id); }\n+\n+   INLINE B Is_Intrinsic_Subprogram (E Id)\n+      { return Flag64 (Id); }\n+\n+   INLINE B Is_Itype (E Id)\n+      { return Flag91 (Id); }\n+\n+   INLINE B Is_Known_Valid (E Id)\n+      { return Flag170 (Id); }\n+\n+   INLINE B Is_Limited_Composite (E Id)\n+      { return Flag106 (Id); }\n+\n+   INLINE B Is_Limited_Record (E Id)\n+      { return Flag25 (Id); }\n+\n+   INLINE B Is_Machine_Code_Subprogram (E Id)\n+      { return Flag137 (Id); }\n+\n+   INLINE B Is_Non_Static_Subtype (E Id)\n+      { return Flag109 (Id); }\n+\n+   INLINE B Is_Null_Init_Proc (E Id)\n+      { return Flag178 (Id); }\n+\n+   INLINE B Is_Optional_Parameter (E Id)\n+      { return Flag134 (Id); }\n+\n+   INLINE B Is_Package_Body_Entity (E Id)\n+      { return Flag160 (Id); }\n+\n+   INLINE B Is_Packed (E Id)\n+      { return Flag51 (Implementation_Base_Type (Id)); }\n+\n+   INLINE B Is_Packed_Array_Type (E Id)\n+      { return Flag138 (Id); }\n+\n+   INLINE B Is_Potentially_Use_Visible (E Id)\n+      { return Flag9 (Id); }\n+\n+   INLINE B Is_Preelaborated (E Id)\n+      { return Flag59 (Id); }\n+\n+   INLINE B Is_Private_Composite (E Id)\n+      { return Flag107 (Id); }\n+\n+   INLINE B Is_Private_Descendant (E Id)\n+      { return Flag53 (Id); }\n+\n+   INLINE B Is_Psected (E Id)\n+      { return Flag153 (Id); }\n+\n+   INLINE B Is_Public (E Id)\n+      { return Flag10 (Id); }\n+\n+   INLINE B Is_Pure (E Id)\n+      { return Flag44 (Id); }\n+\n+   INLINE B Is_Remote_Call_Interface (E Id)\n+      { return Flag62 (Id); }\n+\n+   INLINE B Is_Remote_Types (E Id)\n+      { return Flag61 (Id); }\n+\n+   INLINE B Is_Renaming_Of_Object (E Id)\n+      { return Flag112 (Id); }\n+\n+   INLINE B Is_Shared_Passive (E Id)\n+      { return Flag60 (Id); }\n+\n+   INLINE B Is_Statically_Allocated (E Id)\n+      { return Flag28 (Id); }\n+\n+   INLINE B Is_Tag (E Id)\n+      { return Flag78 (Id); }\n+\n+   INLINE B Is_Tagged_Type (E Id)\n+      { return Flag55 (Id); }\n+\n+   INLINE B Is_True_Constant (E Id)\n+      { return Flag163 (Id); }\n+\n+   INLINE B Is_Unchecked_Union (E Id)\n+      { return Flag117 (Id); }\n+\n+   INLINE B Is_Unsigned_Type (E Id)\n+      { return Flag144 (Id); }\n+\n+   INLINE B Is_Valued_Procedure (E Id)\n+      { return Flag127 (Id); }\n+\n+   INLINE B Is_Visible_Child_Unit (E Id)\n+      { return Flag116 (Id); }\n+\n+   INLINE B Is_VMS_Exception (E Id)\n+      { return Flag133 (Id); }\n+\n+   INLINE B Is_Volatile (E Id)\n+      { return Flag16 (Id); }\n+\n+   INLINE E Last_Entity (E Id)\n+      { return Node20 (Id); }\n+\n+   INLINE E Lit_Indexes (E Id)\n+      { return Node15 (Id); }\n+\n+   INLINE E Lit_Strings (E Id)\n+      { return Node16 (Id); }\n+\n+   INLINE B Machine_Radix_10 (E Id)\n+      { return Flag84 (Id); }\n+\n+   INLINE E Master_Id (E Id)\n+      { return Node17 (Id); }\n+\n+   INLINE B Materialize_Entity (E Id)\n+      { return Flag168 (Id); }\n+\n+   INLINE M Mechanism (E Id)\n+      { return UI_To_Int (Uint8 (Id)); }\n+\n+   INLINE Uint Modulus (E Id)\n+      { return Uint17 (Base_Type (Id)); }\n+\n+   INLINE B Needs_Debug_Info (E Id)\n+      { return Flag147 (Id); }\n+\n+   INLINE B Needs_No_Actuals (E Id)\n+      { return Flag22 (Id); }\n+\n+   INLINE E Next_Inlined_Subprogram (E Id)\n+      { return Node12 (Id); }\n+\n+   INLINE B No_Pool_Assigned (E Id)\n+      { return Flag131 (Root_Type (Id)); }\n+\n+   INLINE B No_Return (E Id)\n+      { return Flag113 (Id); }\n+\n+   INLINE B Non_Binary_Modulus (E Id)\n+      { return Flag58 (Base_Type (Id)); }\n+\n+   INLINE B Nonzero_Is_True (E Id)\n+      { return Flag162 (Base_Type (Id)); }\n+\n+   INLINE U Normalized_First_Bit (E Id)\n+      { return Uint8 (Id); }\n+\n+   INLINE U Normalized_Position (E Id)\n+      { return Uint9 (Id); }\n+\n+   INLINE U Normalized_Position_Max (E Id)\n+      { return Uint10 (Id); }\n+\n+   INLINE B Not_Source_Assigned (E Id)\n+      { return Flag115 (Id); }\n+\n+   INLINE E Object_Ref (E Id)\n+      { return Node17 (Id); }\n+\n+   INLINE E Original_Record_Component (E Id)\n+      { return Node22 (Id); }\n+\n+   INLINE E Packed_Array_Type (E Id)\n+      { return Node23 (Id); }\n+\n+   INLINE E Parent_Subtype (E Id)\n+      { return Node19 (Id); }\n+\n+   INLINE L Primitive_Operations (E Id)\n+      { return Elist15 (Id); }\n+\n+   INLINE E Prival (E Id)\n+      { return Node17 (Id); }\n+\n+   INLINE L Privals_Chain (E Id)\n+      { return Elist23 (Id); }\n+\n+   INLINE L Private_Dependents (E Id)\n+      { return Elist18 (Id); }\n+\n+   INLINE N Private_View (E Id)\n+      { return Node22 (Id); }\n+\n+   INLINE E Protected_Body_Subprogram (E Id)\n+      { return Node11 (Id); }\n+\n+   INLINE E Protected_Formal (E Id)\n+      { return Node22 (Id); }\n+\n+   INLINE N Protected_Operation (E Id)\n+      { return Node23 (Id); }\n+\n+   INLINE B Reachable (E Id)\n+      { return Flag49 (Id); }\n+\n+   INLINE B Referenced (E Id)\n+      { return Flag156 (Id); }\n+\n+   INLINE N Referenced_Object (E Id)\n+      { return Node10 (Id); }\n+\n+   INLINE N Register_Exception_Call (E Id)\n+      { return Node20 (Id); }\n+\n+   INLINE E Related_Array_Object (E Id)\n+      { return Node19 (Id); }\n+\n+   INLINE E Related_Instance (E Id)\n+      { return Node15 (Id); }\n+\n+   INLINE N Renamed_Entity (E Id)\n+      { return Node18 (Id); }\n+\n+   INLINE N Renamed_Object (E Id)\n+      { return Node18 (Id); }\n+\n+   INLINE U Renaming_Map (E Id)\n+      { return Uint9 (Id); }\n+\n+   INLINE B Return_Present (E Id)\n+      { return Flag54 (Id); }\n+\n+   INLINE B Returns_By_Ref (E Id)\n+      { return Flag90 (Id); }\n+\n+   INLINE B Reverse_Bit_Order (E Id)\n+      { return Flag164 (Base_Type (Id)); }\n+\n+   INLINE U RM_Size (E Id)\n+      { return Uint13 (Id); }\n+\n+   INLINE N Scalar_Range (E Id)\n+      { return Node20 (Id); }\n+\n+   INLINE U Scale_Value (E Id)\n+      { return Uint15 (Id); }\n+\n+   INLINE U Scope_Depth_Value (E Id)\n+      { return Uint22 (Id); }\n+\n+   INLINE B Sec_Stack_Needed_For_Return (E Id)\n+      { return Flag167 (Id); }\n+\n+   INLINE S Shadow_Entities (E Id)\n+      { return List14 (Id); }\n+\n+   INLINE E Shared_Var_Assign_Proc (E Id)\n+      { return Node22 (Id); }\n+\n+   INLINE E Shared_Var_Read_Proc (E Id)\n+      { return Node15 (Id); }\n+\n+   INLINE N Size_Check_Code (E Id)\n+      { return Node9 (Id); }\n+\n+   INLINE B Size_Depends_On_Discriminant (E Id)\n+      { return Flag177 (Id); }\n+\n+   INLINE B Size_Known_At_Compile_Time (E Id)\n+      { return Flag92 (Id); }\n+\n+   INLINE R Small_Value (E Id)\n+      { return Ureal21 (Id); }\n+\n+   INLINE E Spec_Entity (E Id)\n+      { return Node19 (Id); }\n+\n+   INLINE E Storage_Size_Variable (E Id)\n+      { return Node15 (Implementation_Base_Type (Id)); }\n+\n+   INLINE B Strict_Alignment (E Id)\n+      { return Flag145 (Implementation_Base_Type (Id)); }\n+\n+   INLINE U String_Literal_Length (E Id)\n+      { return Uint16 (Id); }\n+\n+   INLINE N String_Literal_Low_Bound (E Id)\n+      { return Node15 (Id); }\n+\n+   INLINE B Suppress_Access_Checks (E Id)\n+      { return Flag31 (Id); }\n+\n+   INLINE B Suppress_Accessibility_Checks (E Id)\n+      { return Flag32 (Id); }\n+\n+   INLINE B Suppress_Discriminant_Checks (E Id)\n+      { return Flag33 (Id); }\n+\n+   INLINE B Suppress_Division_Checks (E Id)\n+      { return Flag34 (Id); }\n+\n+   INLINE B Suppress_Elaboration_Checks (E Id)\n+      { return Flag35 (Id); }\n+\n+   INLINE B Suppress_Elaboration_Warnings (E Id)\n+      { return Flag148 (Id); }\n+\n+   INLINE B Suppress_Index_Checks (E Id)\n+      { return Flag36 (Id); }\n+\n+   INLINE B Suppress_Init_Proc (E Id)\n+      { return Flag105 (Base_Type (Id)); }\n+\n+   INLINE B Suppress_Length_Checks (E Id)\n+      { return Flag37 (Id); }\n+\n+   INLINE B Suppress_Overflow_Checks (E Id)\n+      { return Flag38 (Id); }\n+\n+   INLINE B Suppress_Range_Checks (E Id)\n+      { return Flag39 (Id); }\n+\n+   INLINE B Suppress_Storage_Checks (E Id)\n+      { return Flag40 (Id); }\n+\n+   INLINE B Suppress_Style_Checks (E Id)\n+      { return Flag165 (Id); }\n+\n+   INLINE B Suppress_Tag_Checks (E Id)\n+      { return Flag41 (Id); }\n+\n+   INLINE E Underlying_Full_View (E Id)\n+      { return Node19 (Id); }\n+\n+   INLINE N Unset_Reference (E Id)\n+      { return Node16 (Id); }\n+\n+   INLINE B Uses_Sec_Stack (E Id)\n+      { return Flag95 (Id); }\n+\n+   INLINE B Vax_Float (E Id)\n+      { return Flag151 (Base_Type (Id)); }\n+\n+   INLINE B Warnings_Off (E Id)\n+      { return Flag96 (Id); }\n+\n+   INLINE B Is_Access_Type                      (E Id)\n+      { return IN (Ekind (Id), Access_Kind); }\n+\n+   INLINE B Is_Array_Type                       (E Id)\n+      { return IN (Ekind (Id), Array_Kind); }\n+\n+   INLINE B Is_Class_Wide_Type                  (E Id)\n+      { return IN (Ekind (Id), Class_Wide_Kind); }\n+\n+   INLINE B Is_Composite_Type                   (E Id)\n+      { return IN (Ekind (Id), Composite_Kind); }\n+\n+   INLINE B Is_Concurrent_Body                  (E Id)\n+      { return IN (Ekind (Id), Concurrent_Body_Kind); }\n+\n+   INLINE B Is_Concurrent_Record_Type           (E Id)\n+      { return Flag20 (Id); }\n+\n+   INLINE B Is_Concurrent_Type                  (E Id)\n+      { return IN (Ekind (Id), Concurrent_Kind); }\n+\n+   INLINE B Is_Decimal_Fixed_Point_Type         (E Id)\n+      { return IN (Ekind (Id), Decimal_Fixed_Point_Kind); }\n+\n+   INLINE B Is_Digits_Type                      (E Id)\n+      { return IN (Ekind (Id), Digits_Kind); }\n+\n+   INLINE B Is_Discrete_Or_Fixed_Point_Type     (E Id)\n+      { return IN (Ekind (Id), Discrete_Or_Fixed_Point_Kind); }\n+\n+   INLINE B Is_Discrete_Type                    (E Id)\n+      { return IN (Ekind (Id), Discrete_Kind); }\n+\n+   INLINE B Is_Elementary_Type                  (E Id)\n+      { return IN (Ekind (Id), Elementary_Kind); }\n+\n+   INLINE B Is_Entry                            (E Id)\n+      { return IN (Ekind (Id), Entry_Kind); }\n+\n+   INLINE B Is_Enumeration_Type                 (E Id)\n+      { return IN (Ekind (Id), Enumeration_Kind); }\n+\n+   INLINE B Is_Fixed_Point_Type                 (E Id)\n+      { return IN (Ekind (Id), Fixed_Point_Kind); }\n+\n+   INLINE B Is_Floating_Point_Type              (E Id)\n+      { return IN (Ekind (Id), Float_Kind); }\n+\n+   INLINE B Is_Formal                           (E Id)\n+      { return IN (Ekind (Id), Formal_Kind); }\n+\n+   INLINE B Is_Generic_Unit                     (E Id)\n+      { return IN (Ekind (Id), Generic_Unit_Kind); }\n+\n+   INLINE B Is_Incomplete_Or_Private_Type       (E Id)\n+      { return IN (Ekind (Id), Incomplete_Or_Private_Kind); }\n+\n+   INLINE B Is_Integer_Type                     (E Id)\n+      { return IN (Ekind (Id), Integer_Kind); }\n+\n+   INLINE B Is_Modular_Integer_Type             (E Id)\n+      { return IN (Ekind (Id), Modular_Integer_Kind); }\n+\n+   INLINE B Is_Named_Number                     (E Id)\n+      { return IN (Ekind (Id), Named_Kind); }\n+\n+   INLINE B Is_Numeric_Type                     (E Id)\n+      { return IN (Ekind (Id), Numeric_Kind); }\n+\n+   INLINE B Is_Object                           (E Id)\n+      { return IN (Ekind (Id), Object_Kind); }\n+\n+   INLINE B Is_Ordinary_Fixed_Point_Type        (E Id)\n+      { return IN (Ekind (Id), Ordinary_Fixed_Point_Kind); }\n+\n+   INLINE B Is_Overloadable                     (E Id)\n+      { return IN (Ekind (Id), Overloadable_Kind); }\n+\n+   INLINE B Is_Private_Type                     (E Id)\n+      { return IN (Ekind (Id), Private_Kind); }\n+\n+   INLINE B Is_Protected_Type                   (E Id)\n+      { return IN (Ekind (Id), Protected_Kind); }\n+\n+   INLINE B Is_Real_Type                        (E Id)\n+      { return IN (Ekind (Id), Real_Kind); }\n+\n+   INLINE B Is_Record_Type                      (E Id)\n+      { return IN (Ekind (Id), Record_Kind); }\n+\n+   INLINE B Is_Scalar_Type                      (E Id)\n+      { return IN (Ekind (Id), Scalar_Kind); }\n+\n+   INLINE B Is_Signed_Integer_Type              (E Id)\n+      { return IN (Ekind (Id), Signed_Integer_Kind); }\n+\n+   INLINE B Is_Subprogram                       (E Id)\n+      { return IN (Ekind (Id), Subprogram_Kind); }\n+\n+   INLINE B Is_Task_Type                        (E Id)\n+      { return IN (Ekind (Id), Task_Kind); }\n+\n+   INLINE B Is_Type                             (E Id)\n+      { return IN (Ekind (Id), Type_Kind); }\n+\n+   INLINE B Known_Alignment                       (Entity_Id E)\n+      { return Uint14 (E) != Uint_0; }\n+\n+   INLINE B Known_Component_Bit_Offset            (Entity_Id E)\n+      { return Uint11 (E) != No_Uint; }\n+\n+   INLINE B Known_Component_Size                  (Entity_Id E)\n+      { return Uint22 (Base_Type (E)) != Uint_0; }\n+\n+   INLINE B Known_Esize                           (Entity_Id E)\n+      { return Uint12 (E) != Uint_0; }\n+\n+   INLINE B Known_Static_Component_Size           (Entity_Id E)\n+      { return Uint22 (Base_Type (E)) > Uint_0; }\n+\n+   INLINE B Known_Static_Esize                    (Entity_Id E)\n+      { return Uint12 (E) > Uint_0; }\n+\n+   INLINE B Unknown_Alignment                     (Entity_Id E)\n+      { return Uint14 (E) == Uint_0; }\n+\n+   INLINE B Unknown_Component_Bit_Offset          (Entity_Id E)\n+      { return Uint11 (E) == No_Uint; }\n+\n+   INLINE B Unknown_Component_Size                (Entity_Id E)\n+      { return Uint22 (Base_Type (E)) == Uint_0; }\n+\n+   INLINE B Unknown_Esize                         (Entity_Id E)\n+      { return Uint12 (E) == Uint_0; }\n+\n+   INLINE N Entry_Index_Type (E Id)\n+      { return Etype (Discrete_Subtype_Definition (Parent (Id))); }\n+\n+   INLINE Node_Id Next_Index (Node_Id Id)\n+      { return Next (Id); }\n+\n+   INLINE E Next_Literal (E Id)\n+      { return Next (Id); }\n+\n+   INLINE Formal_Kind Parameter_Mode (E Id)\n+      { return Ekind (Id); }\n+\n+/* End of einfo.h (C version of Einfo package specification) */"}, {"sha": "c3e9a8d99ca9276774107e94bad2a5e8fc2fb21c", "filename": "gcc/ada/sinfo.h", "status": "added", "additions": 822, "deletions": 0, "changes": 822, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/gcc%2Fada%2Fsinfo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/gcc%2Fada%2Fsinfo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.h?ref=67f28219a6b5f2ee69aea599a76d15c899d8a8c3", "patch": "@@ -0,0 +1,822 @@\n+/*--------------------------------------------------------------------------*/\n+/*                                                                          */\n+/*                         GNAT COMPILER COMPONENTS                         */\n+/*                                                                          */\n+/*                                S I N F O                                 */\n+/*                                                                          */\n+/*                              C Header File                               */\n+/*                                                                          */\n+/*                 Generated by xsinfo revision 1.1 using                  */\n+/*                         sinfo.ads revision 1.1                         */\n+/*                                                                          */\n+/*          Copyright (C) 1992-2001, Free Software Foundation, Inc.         */\n+/*                                                                          */\n+/* GNAT is free software;  you can  redistribute it  and/or modify it under */\n+/* terms of the  GNU General Public License as published  by the Free Soft- */\n+/* ware  Foundation;  either version 2,  or (at your option) any later ver- */\n+/* sion.  GNAT is distributed in the hope that it will be useful, but WITH- */\n+/* OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY */\n+/* or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License */\n+/* for  more details.  You should have  received  a copy of the GNU General */\n+/* Public License  distributed with GNAT;  see file COPYING.  If not, write */\n+/* to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, */\n+/* MA 02111-1307, USA.                                                      */\n+/*                                                                          */\n+/* As a special exception,  if other files  instantiate  generics from this */\n+/* unit, or you link  this unit with other files  to produce an executable, */\n+/* this  unit  does not  by itself cause  the resulting  executable  to  be */\n+/* covered  by the  GNU  General  Public  License.  This exception does not */\n+/* however invalidate  any other reasons why  the executable file  might be */\n+/* covered by the  GNU Public License.                                      */\n+/*                                                                          */\n+/* GNAT was originally developed  by the GNAT team at  New York University. */\n+/* It is now maintained by Ada Core Technologies Inc (http://www.gnat.com). */\n+/*                                                                          */\n+/*--------------------------------------------------------------------------*/\n+\n+      #define N_Unused_At_Start 0\n+      #define N_At_Clause 1\n+      #define N_Component_Clause 2\n+      #define N_Enumeration_Representation_Clause 3\n+      #define N_Mod_Clause 4\n+      #define N_Record_Representation_Clause 5\n+      #define N_Attribute_Definition_Clause 6\n+      #define N_Empty 7\n+      #define N_Error 8\n+      #define N_Pragma 9\n+      #define N_Pragma_Argument_Association 10\n+      #define N_Defining_Character_Literal 11\n+      #define N_Defining_Identifier 12\n+      #define N_Defining_Operator_Symbol 13\n+      #define N_Expanded_Name 14\n+      #define N_Identifier 15\n+      #define N_Operator_Symbol 16\n+      #define N_Character_Literal 17\n+      #define N_Op_Add 18\n+      #define N_Op_Concat 19\n+      #define N_Op_Divide 20\n+      #define N_Op_Expon 21\n+      #define N_Op_Mod 22\n+      #define N_Op_Multiply 23\n+      #define N_Op_Rem 24\n+      #define N_Op_Subtract 25\n+      #define N_Op_And 26\n+      #define N_Op_Eq 27\n+      #define N_Op_Ge 28\n+      #define N_Op_Gt 29\n+      #define N_Op_Le 30\n+      #define N_Op_Lt 31\n+      #define N_Op_Ne 32\n+      #define N_Op_Or 33\n+      #define N_Op_Xor 34\n+      #define N_Op_Rotate_Left 35\n+      #define N_Op_Rotate_Right 36\n+      #define N_Op_Shift_Left 37\n+      #define N_Op_Shift_Right 38\n+      #define N_Op_Shift_Right_Arithmetic 39\n+      #define N_Op_Abs 40\n+      #define N_Op_Minus 41\n+      #define N_Op_Not 42\n+      #define N_Op_Plus 43\n+      #define N_Attribute_Reference 44\n+      #define N_And_Then 45\n+      #define N_Conditional_Expression 46\n+      #define N_Explicit_Dereference 47\n+      #define N_Function_Call 48\n+      #define N_In 49\n+      #define N_Indexed_Component 50\n+      #define N_Integer_Literal 51\n+      #define N_Not_In 52\n+      #define N_Null 53\n+      #define N_Or_Else 54\n+      #define N_Procedure_Call_Statement 55\n+      #define N_Qualified_Expression 56\n+      #define N_Raise_Constraint_Error 57\n+      #define N_Raise_Program_Error 58\n+      #define N_Raise_Storage_Error 59\n+      #define N_Aggregate 60\n+      #define N_Allocator 61\n+      #define N_Extension_Aggregate 62\n+      #define N_Range 63\n+      #define N_Real_Literal 64\n+      #define N_Reference 65\n+      #define N_Selected_Component 66\n+      #define N_Slice 67\n+      #define N_String_Literal 68\n+      #define N_Subprogram_Info 69\n+      #define N_Type_Conversion 70\n+      #define N_Unchecked_Expression 71\n+      #define N_Unchecked_Type_Conversion 72\n+      #define N_Subtype_Indication 73\n+      #define N_Component_Declaration 74\n+      #define N_Entry_Declaration 75\n+      #define N_Formal_Object_Declaration 76\n+      #define N_Formal_Type_Declaration 77\n+      #define N_Full_Type_Declaration 78\n+      #define N_Incomplete_Type_Declaration 79\n+      #define N_Loop_Parameter_Specification 80\n+      #define N_Object_Declaration 81\n+      #define N_Protected_Type_Declaration 82\n+      #define N_Private_Extension_Declaration 83\n+      #define N_Private_Type_Declaration 84\n+      #define N_Subtype_Declaration 85\n+      #define N_Function_Specification 86\n+      #define N_Procedure_Specification 87\n+      #define N_Entry_Index_Specification 88\n+      #define N_Freeze_Entity 89\n+      #define N_Access_Function_Definition 90\n+      #define N_Access_Procedure_Definition 91\n+      #define N_Task_Type_Declaration 92\n+      #define N_Package_Body_Stub 93\n+      #define N_Protected_Body_Stub 94\n+      #define N_Subprogram_Body_Stub 95\n+      #define N_Task_Body_Stub 96\n+      #define N_Function_Instantiation 97\n+      #define N_Package_Instantiation 98\n+      #define N_Procedure_Instantiation 99\n+      #define N_Package_Body 100\n+      #define N_Subprogram_Body 101\n+      #define N_Protected_Body 102\n+      #define N_Task_Body 103\n+      #define N_Implicit_Label_Declaration 104\n+      #define N_Package_Declaration 105\n+      #define N_Single_Task_Declaration 106\n+      #define N_Subprogram_Declaration 107\n+      #define N_Use_Package_Clause 108\n+      #define N_Generic_Package_Declaration 109\n+      #define N_Generic_Subprogram_Declaration 110\n+      #define N_Constrained_Array_Definition 111\n+      #define N_Unconstrained_Array_Definition 112\n+      #define N_Exception_Renaming_Declaration 113\n+      #define N_Object_Renaming_Declaration 114\n+      #define N_Package_Renaming_Declaration 115\n+      #define N_Subprogram_Renaming_Declaration 116\n+      #define N_Generic_Function_Renaming_Declaration 117\n+      #define N_Generic_Package_Renaming_Declaration 118\n+      #define N_Generic_Procedure_Renaming_Declaration 119\n+      #define N_Abort_Statement 120\n+      #define N_Accept_Statement 121\n+      #define N_Assignment_Statement 122\n+      #define N_Asynchronous_Select 123\n+      #define N_Block_Statement 124\n+      #define N_Case_Statement 125\n+      #define N_Code_Statement 126\n+      #define N_Conditional_Entry_Call 127\n+      #define N_Delay_Relative_Statement 128\n+      #define N_Delay_Until_Statement 129\n+      #define N_Entry_Call_Statement 130\n+      #define N_Free_Statement 131\n+      #define N_Goto_Statement 132\n+      #define N_Loop_Statement 133\n+      #define N_Null_Statement 134\n+      #define N_Raise_Statement 135\n+      #define N_Requeue_Statement 136\n+      #define N_Return_Statement 137\n+      #define N_Selective_Accept 138\n+      #define N_Timed_Entry_Call 139\n+      #define N_Exit_Statement 140\n+      #define N_If_Statement 141\n+      #define N_Accept_Alternative 142\n+      #define N_Delay_Alternative 143\n+      #define N_Elsif_Part 144\n+      #define N_Entry_Body_Formal_Part 145\n+      #define N_Iteration_Scheme 146\n+      #define N_Terminate_Alternative 147\n+      #define N_Abortable_Part 148\n+      #define N_Abstract_Subprogram_Declaration 149\n+      #define N_Access_Definition 150\n+      #define N_Access_To_Object_Definition 151\n+      #define N_Case_Statement_Alternative 152\n+      #define N_Compilation_Unit 153\n+      #define N_Compilation_Unit_Aux 154\n+      #define N_Component_Association 155\n+      #define N_Component_List 156\n+      #define N_Derived_Type_Definition 157\n+      #define N_Decimal_Fixed_Point_Definition 158\n+      #define N_Defining_Program_Unit_Name 159\n+      #define N_Delta_Constraint 160\n+      #define N_Designator 161\n+      #define N_Digits_Constraint 162\n+      #define N_Discriminant_Association 163\n+      #define N_Discriminant_Specification 164\n+      #define N_Enumeration_Type_Definition 165\n+      #define N_Entry_Body 166\n+      #define N_Entry_Call_Alternative 167\n+      #define N_Exception_Declaration 168\n+      #define N_Exception_Handler 169\n+      #define N_Floating_Point_Definition 170\n+      #define N_Formal_Decimal_Fixed_Point_Definition 171\n+      #define N_Formal_Derived_Type_Definition 172\n+      #define N_Formal_Discrete_Type_Definition 173\n+      #define N_Formal_Floating_Point_Definition 174\n+      #define N_Formal_Modular_Type_Definition 175\n+      #define N_Formal_Ordinary_Fixed_Point_Definition 176\n+      #define N_Formal_Package_Declaration 177\n+      #define N_Formal_Private_Type_Definition 178\n+      #define N_Formal_Signed_Integer_Type_Definition 179\n+      #define N_Formal_Subprogram_Declaration 180\n+      #define N_Generic_Association 181\n+      #define N_Handled_Sequence_Of_Statements 182\n+      #define N_Index_Or_Discriminant_Constraint 183\n+      #define N_Itype_Reference 184\n+      #define N_Label 185\n+      #define N_Modular_Type_Definition 186\n+      #define N_Number_Declaration 187\n+      #define N_Ordinary_Fixed_Point_Definition 188\n+      #define N_Others_Choice 189\n+      #define N_Package_Specification 190\n+      #define N_Parameter_Association 191\n+      #define N_Parameter_Specification 192\n+      #define N_Protected_Definition 193\n+      #define N_Range_Constraint 194\n+      #define N_Real_Range_Specification 195\n+      #define N_Record_Definition 196\n+      #define N_Signed_Integer_Type_Definition 197\n+      #define N_Single_Protected_Declaration 198\n+      #define N_Subunit 199\n+      #define N_Task_Definition 200\n+      #define N_Triggering_Alternative 201\n+      #define N_Use_Type_Clause 202\n+      #define N_Validate_Unchecked_Conversion 203\n+      #define N_Variant 204\n+      #define N_Variant_Part 205\n+      #define N_With_Clause 206\n+      #define N_With_Type_Clause 207\n+      #define N_Unused_At_End 208\n+\n+      #define Number_Node_Kinds 209\n+   SUBTYPE (N_Access_To_Subprogram_Definition, Node_Kind, \n+      N_Access_Function_Definition,\n+      N_Access_Procedure_Definition)\n+   SUBTYPE (N_Array_Type_Definition, Node_Kind, \n+      N_Constrained_Array_Definition,\n+      N_Unconstrained_Array_Definition)\n+   SUBTYPE (N_Binary_Op, Node_Kind, \n+      N_Op_Add,\n+      N_Op_Shift_Right_Arithmetic)\n+   SUBTYPE (N_Body_Stub, Node_Kind, \n+      N_Package_Body_Stub,\n+      N_Task_Body_Stub)\n+   SUBTYPE (N_Declaration, Node_Kind, \n+      N_Component_Declaration,\n+      N_Procedure_Specification)\n+   SUBTYPE (N_Direct_Name, Node_Kind, \n+      N_Identifier,\n+      N_Character_Literal)\n+   SUBTYPE (N_Entity, Node_Kind, \n+      N_Defining_Character_Literal,\n+      N_Defining_Operator_Symbol)\n+   SUBTYPE (N_Generic_Declaration, Node_Kind, \n+      N_Generic_Package_Declaration,\n+      N_Generic_Subprogram_Declaration)\n+   SUBTYPE (N_Generic_Instantiation, Node_Kind, \n+      N_Function_Instantiation,\n+      N_Procedure_Instantiation)\n+   SUBTYPE (N_Generic_Renaming_Declaration, Node_Kind, \n+      N_Generic_Function_Renaming_Declaration,\n+      N_Generic_Procedure_Renaming_Declaration)\n+   SUBTYPE (N_Has_Chars, Node_Kind, \n+      N_Attribute_Definition_Clause,\n+      N_Op_Plus)\n+   SUBTYPE (N_Has_Entity, Node_Kind, \n+      N_Expanded_Name,\n+      N_Attribute_Reference)\n+   SUBTYPE (N_Has_Etype, Node_Kind, \n+      N_Defining_Character_Literal,\n+      N_Subtype_Indication)\n+   SUBTYPE (N_Later_Decl_Item, Node_Kind, \n+      N_Task_Type_Declaration,\n+      N_Generic_Subprogram_Declaration)\n+   SUBTYPE (N_Op, Node_Kind, \n+      N_Op_Add,\n+      N_Op_Plus)\n+   SUBTYPE (N_Op_Boolean, Node_Kind, \n+      N_Op_And,\n+      N_Op_Xor)\n+   SUBTYPE (N_Op_Compare, Node_Kind, \n+      N_Op_Eq,\n+      N_Op_Ne)\n+   SUBTYPE (N_Op_Shift, Node_Kind, \n+      N_Op_Rotate_Left,\n+      N_Op_Shift_Right_Arithmetic)\n+   SUBTYPE (N_Proper_Body, Node_Kind, \n+      N_Package_Body,\n+      N_Task_Body)\n+   SUBTYPE (N_Raise_xxx_Error, Node_Kind, \n+      N_Raise_Constraint_Error,\n+      N_Raise_Storage_Error)\n+   SUBTYPE (N_Renaming_Declaration, Node_Kind, \n+      N_Exception_Renaming_Declaration,\n+      N_Generic_Procedure_Renaming_Declaration)\n+   SUBTYPE (N_Representation_Clause, Node_Kind, \n+      N_At_Clause,\n+      N_Attribute_Definition_Clause)\n+   SUBTYPE (N_Statement_Other_Than_Procedure_Call, Node_Kind, \n+      N_Abort_Statement,\n+      N_If_Statement)\n+   SUBTYPE (N_Has_Condition, Node_Kind, \n+      N_Exit_Statement,\n+      N_Terminate_Alternative)\n+   SUBTYPE (N_Subexpr, Node_Kind, \n+      N_Expanded_Name,\n+      N_Unchecked_Type_Conversion)\n+   SUBTYPE (N_Subprogram_Specification, Node_Kind, \n+      N_Function_Specification,\n+      N_Procedure_Specification)\n+   SUBTYPE (N_Unary_Op, Node_Kind, \n+      N_Op_Abs,\n+      N_Op_Plus)\n+   SUBTYPE (N_Unit_Body, Node_Kind, \n+      N_Package_Body,\n+      N_Subprogram_Body)\n+   INLINE Boolean   ABE_Is_Certain                 (Node_Id N)\n+      { return Flag18 (N); }\n+   INLINE Boolean   Abort_Present                  (Node_Id N)\n+      { return Flag15 (N); }\n+   INLINE Node_Id   Abortable_Part                 (Node_Id N)\n+      { return Node2 (N); }\n+   INLINE Boolean   Abstract_Present               (Node_Id N)\n+      { return Flag4 (N); }\n+   INLINE List_Id   Accept_Handler_Records         (Node_Id N)\n+      { return List5 (N); }\n+   INLINE Node_Id   Accept_Statement               (Node_Id N)\n+      { return Node2 (N); }\n+   INLINE Elist_Id  Access_Types_To_Process        (Node_Id N)\n+      { return Elist2 (N); }\n+   INLINE List_Id   Actions                        (Node_Id N)\n+      { return List1 (N); }\n+   INLINE Node_Id   Activation_Chain_Entity        (Node_Id N)\n+      { return Node3 (N); }\n+   INLINE Boolean   Acts_As_Spec                   (Node_Id N)\n+      { return Flag4 (N); }\n+   INLINE Node_Id   Aggregate_Bounds               (Node_Id N)\n+      { return Node3 (N); }\n+   INLINE Boolean   Aliased_Present                (Node_Id N)\n+      { return Flag4 (N); }\n+   INLINE Boolean   All_Others                     (Node_Id N)\n+      { return Flag11 (N); }\n+   INLINE Boolean   All_Present                    (Node_Id N)\n+      { return Flag15 (N); }\n+   INLINE List_Id   Alternatives                   (Node_Id N)\n+      { return List4 (N); }\n+   INLINE Node_Id   Ancestor_Part                  (Node_Id N)\n+      { return Node3 (N); }\n+   INLINE Node_Id   Array_Aggregate                (Node_Id N)\n+      { return Node3 (N); }\n+   INLINE Boolean   Assignment_OK                  (Node_Id N)\n+      { return Flag15 (N); }\n+   INLINE Node_Id   At_End_Proc                    (Node_Id N)\n+      { return Node1 (N); }\n+   INLINE Name_Id   Attribute_Name                 (Node_Id N)\n+      { return Name2 (N); }\n+   INLINE Node_Id   Aux_Decls_Node                 (Node_Id N)\n+      { return Node5 (N); }\n+   INLINE Boolean   Backwards_OK                   (Node_Id N)\n+      { return Flag6 (N); }\n+   INLINE Boolean   Bad_Is_Detected                (Node_Id N)\n+      { return Flag15 (N); }\n+   INLINE Boolean   By_Ref                         (Node_Id N)\n+      { return Flag5 (N); }\n+   INLINE Boolean   Body_Required                  (Node_Id N)\n+      { return Flag13 (N); }\n+   INLINE Node_Id   Body_To_Inline                 (Node_Id N)\n+      { return Node3 (N); }\n+   INLINE Boolean   Box_Present                    (Node_Id N)\n+      { return Flag15 (N); }\n+   INLINE Char_Code Char_Literal_Value             (Node_Id N)\n+      { return Char_Code2 (N); }\n+   INLINE Name_Id   Chars                          (Node_Id N)\n+      { return Name1 (N); }\n+   INLINE Node_Id   Choice_Parameter               (Node_Id N)\n+      { return Node2 (N); }\n+   INLINE List_Id   Choices                        (Node_Id N)\n+      { return List1 (N); }\n+   INLINE Boolean   Compile_Time_Known_Aggregate   (Node_Id N)\n+      { return Flag18 (N); }\n+   INLINE List_Id   Component_Associations         (Node_Id N)\n+      { return List2 (N); }\n+   INLINE List_Id   Component_Clauses              (Node_Id N)\n+      { return List3 (N); }\n+   INLINE List_Id   Component_Items                (Node_Id N)\n+      { return List3 (N); }\n+   INLINE Node_Id   Component_List                 (Node_Id N)\n+      { return Node1 (N); }\n+   INLINE Node_Id   Component_Name                 (Node_Id N)\n+      { return Node1 (N); }\n+   INLINE Node_Id   Condition                      (Node_Id N)\n+      { return Node1 (N); }\n+   INLINE List_Id   Condition_Actions              (Node_Id N)\n+      { return List3 (N); }\n+   INLINE Boolean   Constant_Present               (Node_Id N)\n+      { return Flag17 (N); }\n+   INLINE Node_Id   Constraint                     (Node_Id N)\n+      { return Node3 (N); }\n+   INLINE List_Id   Constraints                    (Node_Id N)\n+      { return List1 (N); }\n+   INLINE Boolean   Context_Installed              (Node_Id N)\n+      { return Flag13 (N); }\n+   INLINE List_Id   Context_Items                  (Node_Id N)\n+      { return List1 (N); }\n+   INLINE Node_Id   Controlling_Argument           (Node_Id N)\n+      { return Node1 (N); }\n+   INLINE Boolean   Conversion_OK                  (Node_Id N)\n+      { return Flag14 (N); }\n+   INLINE Node_Id   Corresponding_Body             (Node_Id N)\n+      { return Node5 (N); }\n+   INLINE Node_Id   Corresponding_Generic_Association (Node_Id N)\n+      { return Node5 (N); }\n+   INLINE Uint      Corresponding_Integer_Value    (Node_Id N)\n+      { return Uint4 (N); }\n+   INLINE Node_Id   Corresponding_Spec             (Node_Id N)\n+      { return Node5 (N); }\n+   INLINE Node_Id   Corresponding_Stub             (Node_Id N)\n+      { return Node3 (N); }\n+   INLINE Entity_Id Dcheck_Function                (Node_Id N)\n+      { return Node5 (N); }\n+   INLINE Node_Id   Debug_Statement                (Node_Id N)\n+      { return Node3 (N); }\n+   INLINE List_Id   Declarations                   (Node_Id N)\n+      { return List2 (N); }\n+   INLINE Node_Id   Default_Expression             (Node_Id N)\n+      { return Node5 (N); }\n+   INLINE Node_Id   Default_Name                   (Node_Id N)\n+      { return Node2 (N); }\n+   INLINE Entity_Id Defining_Identifier            (Node_Id N)\n+      { return Node1 (N); }\n+   INLINE Node_Id   Defining_Unit_Name             (Node_Id N)\n+      { return Node1 (N); }\n+   INLINE Node_Id   Delay_Alternative              (Node_Id N)\n+      { return Node4 (N); }\n+   INLINE Boolean   Delay_Finalize_Attach          (Node_Id N)\n+      { return Flag14 (N); }\n+   INLINE Node_Id   Delay_Statement                (Node_Id N)\n+      { return Node2 (N); }\n+   INLINE Node_Id   Delta_Expression               (Node_Id N)\n+      { return Node3 (N); }\n+   INLINE Node_Id   Digits_Expression              (Node_Id N)\n+      { return Node2 (N); }\n+   INLINE Boolean   Discr_Check_Funcs_Built        (Node_Id N)\n+      { return Flag11 (N); }\n+   INLINE List_Id   Discrete_Choices               (Node_Id N)\n+      { return List4 (N); }\n+   INLINE Node_Id   Discrete_Range                 (Node_Id N)\n+      { return Node4 (N); }\n+   INLINE Node_Id   Discrete_Subtype_Definition    (Node_Id N)\n+      { return Node4 (N); }\n+   INLINE List_Id   Discrete_Subtype_Definitions   (Node_Id N)\n+      { return List2 (N); }\n+   INLINE List_Id   Discriminant_Specifications    (Node_Id N)\n+      { return List4 (N); }\n+   INLINE Node_Id   Discriminant_Type              (Node_Id N)\n+      { return Node5 (N); }\n+   INLINE Boolean   Do_Access_Check                (Node_Id N)\n+      { return Flag11 (N); }\n+   INLINE Boolean   Do_Accessibility_Check         (Node_Id N)\n+      { return Flag13 (N); }\n+   INLINE Boolean   Do_Discriminant_Check          (Node_Id N)\n+      { return Flag13 (N); }\n+   INLINE Boolean   Do_Division_Check              (Node_Id N)\n+      { return Flag13 (N); }\n+   INLINE Boolean   Do_Length_Check                (Node_Id N)\n+      { return Flag4 (N); }\n+   INLINE Boolean   Do_Overflow_Check              (Node_Id N)\n+      { return Flag17 (N); }\n+   INLINE Boolean   Do_Range_Check                 (Node_Id N)\n+      { return Flag9 (N); }\n+   INLINE Boolean   Do_Storage_Check               (Node_Id N)\n+      { return Flag17 (N); }\n+   INLINE Boolean   Do_Tag_Check                   (Node_Id N)\n+      { return Flag13 (N); }\n+   INLINE Boolean   Elaborate_All_Present          (Node_Id N)\n+      { return Flag15 (N); }\n+   INLINE Boolean   Elaborate_Present              (Node_Id N)\n+      { return Flag4 (N); }\n+   INLINE Node_Id   Elaboration_Boolean            (Node_Id N)\n+      { return Node2 (N); }\n+   INLINE List_Id   Else_Actions                   (Node_Id N)\n+      { return List3 (N); }\n+   INLINE List_Id   Else_Statements                (Node_Id N)\n+      { return List4 (N); }\n+   INLINE List_Id   Elsif_Parts                    (Node_Id N)\n+      { return List3 (N); }\n+   INLINE Node_Id   Enclosing_Variant              (Node_Id N)\n+      { return Node2 (N); }\n+   INLINE Node_Id   End_Label                      (Node_Id N)\n+      { return Node4 (N); }\n+   INLINE Uint      End_Span                       (Node_Id N)\n+      { return Uint5 (N); }\n+   INLINE Node_Id   Entity                         (Node_Id N)\n+      { return Node4 (N); }\n+   INLINE Node_Id   Entry_Body_Formal_Part         (Node_Id N)\n+      { return Node5 (N); }\n+   INLINE Node_Id   Entry_Call_Alternative         (Node_Id N)\n+      { return Node1 (N); }\n+   INLINE Node_Id   Entry_Call_Statement           (Node_Id N)\n+      { return Node1 (N); }\n+   INLINE Node_Id   Entry_Direct_Name              (Node_Id N)\n+      { return Node1 (N); }\n+   INLINE Node_Id   Entry_Index                    (Node_Id N)\n+      { return Node5 (N); }\n+   INLINE Node_Id   Entry_Index_Specification      (Node_Id N)\n+      { return Node4 (N); }\n+   INLINE Node_Id   Etype                          (Node_Id N)\n+      { return Node5 (N); }\n+   INLINE List_Id   Exception_Choices              (Node_Id N)\n+      { return List4 (N); }\n+   INLINE List_Id   Exception_Handlers             (Node_Id N)\n+      { return List5 (N); }\n+   INLINE Boolean   Exception_Junk                 (Node_Id N)\n+      { return Flag11 (N); }\n+   INLINE Node_Id   Explicit_Actual_Parameter      (Node_Id N)\n+      { return Node3 (N); }\n+   INLINE Boolean   Expansion_Delayed              (Node_Id N)\n+      { return Flag11 (N); }\n+   INLINE Node_Id   Explicit_Generic_Actual_Parameter (Node_Id N)\n+      { return Node1 (N); }\n+   INLINE Node_Id   Expression                     (Node_Id N)\n+      { return Node3 (N); }\n+   INLINE List_Id   Expressions                    (Node_Id N)\n+      { return List1 (N); }\n+   INLINE Node_Id   First_Bit                      (Node_Id N)\n+      { return Node3 (N); }\n+   INLINE Entity_Id First_Inlined_Subprogram       (Node_Id N)\n+      { return Node3 (N); }\n+   INLINE Boolean   First_Name                     (Node_Id N)\n+      { return Flag5 (N); }\n+   INLINE Node_Id   First_Named_Actual             (Node_Id N)\n+      { return Node4 (N); }\n+   INLINE Node_Id   First_Real_Statement           (Node_Id N)\n+      { return Node2 (N); }\n+   INLINE Entity_Id First_Subtype_Link             (Node_Id N)\n+      { return Node5 (N); }\n+   INLINE Boolean   Float_Truncate                 (Node_Id N)\n+      { return Flag11 (N); }\n+   INLINE Node_Id   Formal_Type_Definition         (Node_Id N)\n+      { return Node3 (N); }\n+   INLINE Boolean   Forwards_OK                    (Node_Id N)\n+      { return Flag5 (N); }\n+   INLINE Boolean   From_At_Mod                    (Node_Id N)\n+      { return Flag4 (N); }\n+   INLINE List_Id   Generic_Associations           (Node_Id N)\n+      { return List3 (N); }\n+   INLINE List_Id   Generic_Formal_Declarations    (Node_Id N)\n+      { return List2 (N); }\n+   INLINE Node_Id   Generic_Parent                 (Node_Id N)\n+      { return Node5 (N); }\n+   INLINE Node_Id   Generic_Parent_Type            (Node_Id N)\n+      { return Node4 (N); }\n+   INLINE Node_Id   Handled_Statement_Sequence     (Node_Id N)\n+      { return Node4 (N); }\n+   INLINE Node_Id   Handler_List_Entry             (Node_Id N)\n+      { return Node2 (N); }\n+   INLINE Boolean   Has_Created_Identifier         (Node_Id N)\n+      { return Flag15 (N); }\n+   INLINE Boolean   Has_Dynamic_Length_Check       (Node_Id N)\n+      { return Flag10 (N); }\n+   INLINE Boolean   Has_Dynamic_Range_Check        (Node_Id N)\n+      { return Flag12 (N); }\n+   INLINE Boolean   Has_No_Elaboration_Code        (Node_Id N)\n+      { return Flag17 (N); }\n+   INLINE Boolean   Has_Priority_Pragma            (Node_Id N)\n+      { return Flag6 (N); }\n+   INLINE Boolean   Has_Private_View               (Node_Id N)\n+      { return Flag11 (N); }\n+   INLINE Boolean   Has_Storage_Size_Pragma        (Node_Id N)\n+      { return Flag5 (N); }\n+   INLINE Boolean   Has_Task_Info_Pragma           (Node_Id N)\n+      { return Flag7 (N); }\n+   INLINE Boolean   Has_Task_Name_Pragma           (Node_Id N)\n+      { return Flag8 (N); }\n+   INLINE Boolean   Has_Wide_Character             (Node_Id N)\n+      { return Flag11 (N); }\n+   INLINE Elist_Id  Hidden_By_Use_Clause           (Node_Id N)\n+      { return Elist4 (N); }\n+   INLINE Node_Id   High_Bound                     (Node_Id N)\n+      { return Node2 (N); }\n+   INLINE Node_Id   Identifier                     (Node_Id N)\n+      { return Node1 (N); }\n+   INLINE Boolean   Implicit_With                  (Node_Id N)\n+      { return Flag17 (N); }\n+   INLINE Boolean   In_Present                     (Node_Id N)\n+      { return Flag15 (N); }\n+   INLINE Boolean   Includes_Infinities            (Node_Id N)\n+      { return Flag11 (N); }\n+   INLINE Node_Id   Instance_Spec                  (Node_Id N)\n+      { return Node5 (N); }\n+   INLINE Uint      Intval                         (Node_Id N)\n+      { return Uint3 (N); }\n+   INLINE Boolean   Is_Asynchronous_Call_Block     (Node_Id N)\n+      { return Flag7 (N); }\n+   INLINE Boolean   Is_Component_Left_Opnd         (Node_Id N)\n+      { return Flag13 (N); }\n+   INLINE Boolean   Is_Component_Right_Opnd        (Node_Id N)\n+      { return Flag14 (N); }\n+   INLINE Boolean   Is_Controlling_Actual          (Node_Id N)\n+      { return Flag16 (N); }\n+   INLINE Boolean   Is_Machine_Number              (Node_Id N)\n+      { return Flag11 (N); }\n+   INLINE Boolean   Is_Overloaded                  (Node_Id N)\n+      { return Flag5 (N); }\n+   INLINE Boolean   Is_Power_Of_2_For_Shift        (Node_Id N)\n+      { return Flag13 (N); }\n+   INLINE Boolean   Is_Protected_Subprogram_Body   (Node_Id N)\n+      { return Flag7 (N); }\n+   INLINE Boolean   Is_Static_Expression           (Node_Id N)\n+      { return Flag6 (N); }\n+   INLINE Boolean   Is_Subprogram_Descriptor       (Node_Id N)\n+      { return Flag16 (N); }\n+   INLINE Boolean   Is_Task_Allocation_Block       (Node_Id N)\n+      { return Flag6 (N); }\n+   INLINE Boolean   Is_Task_Master                 (Node_Id N)\n+      { return Flag5 (N); }\n+   INLINE Node_Id   Iteration_Scheme               (Node_Id N)\n+      { return Node2 (N); }\n+   INLINE Entity_Id Itype                          (Node_Id N)\n+      { return Node1 (N); }\n+   INLINE Boolean   Kill_Range_Check               (Node_Id N)\n+      { return Flag11 (N); }\n+   INLINE Node_Id   Label_Construct                (Node_Id N)\n+      { return Node2 (N); }\n+   INLINE Node_Id   Left_Opnd                      (Node_Id N)\n+      { return Node2 (N); }\n+   INLINE Node_Id   Last_Bit                       (Node_Id N)\n+      { return Node4 (N); }\n+   INLINE Boolean   Last_Name                      (Node_Id N)\n+      { return Flag6 (N); }\n+   INLINE Node_Id   Library_Unit                   (Node_Id N)\n+      { return Node4 (N); }\n+   INLINE Boolean   Limited_Present                (Node_Id N)\n+      { return Flag17 (N); }\n+   INLINE List_Id   Literals                       (Node_Id N)\n+      { return List1 (N); }\n+   INLINE List_Id   Loop_Actions                   (Node_Id N)\n+      { return List2 (N); }\n+   INLINE Node_Id   Loop_Parameter_Specification   (Node_Id N)\n+      { return Node4 (N); }\n+   INLINE Node_Id   Low_Bound                      (Node_Id N)\n+      { return Node1 (N); }\n+   INLINE Node_Id   Mod_Clause                     (Node_Id N)\n+      { return Node2 (N); }\n+   INLINE Boolean   More_Ids                       (Node_Id N)\n+      { return Flag5 (N); }\n+   INLINE Boolean   Must_Not_Freeze                (Node_Id N)\n+      { return Flag8 (N); }\n+   INLINE Node_Id   Name                           (Node_Id N)\n+      { return Node2 (N); }\n+   INLINE List_Id   Names                          (Node_Id N)\n+      { return List2 (N); }\n+   INLINE Node_Id   Next_Entity                    (Node_Id N)\n+      { return Node2 (N); }\n+   INLINE Node_Id   Next_Named_Actual              (Node_Id N)\n+      { return Node4 (N); }\n+   INLINE Node_Id   Next_Rep_Item                  (Node_Id N)\n+      { return Node4 (N); }\n+   INLINE Node_Id   Next_Use_Clause                (Node_Id N)\n+      { return Node3 (N); }\n+   INLINE Boolean   No_Ctrl_Actions                (Node_Id N)\n+      { return Flag7 (N); }\n+   INLINE Boolean   No_Entities_Ref_In_Spec        (Node_Id N)\n+      { return Flag8 (N); }\n+   INLINE Boolean   No_Initialization              (Node_Id N)\n+      { return Flag13 (N); }\n+   INLINE Boolean   Null_Present                   (Node_Id N)\n+      { return Flag13 (N); }\n+   INLINE Boolean   Null_Record_Present            (Node_Id N)\n+      { return Flag17 (N); }\n+   INLINE Node_Id   Object_Definition              (Node_Id N)\n+      { return Node4 (N); }\n+   INLINE Boolean   OK_For_Stream                  (Node_Id N)\n+      { return Flag4 (N); }\n+   INLINE Node_Id   Original_Discriminant          (Node_Id N)\n+      { return Node2 (N); }\n+   INLINE List_Id   Others_Discrete_Choices        (Node_Id N)\n+      { return List1 (N); }\n+   INLINE Boolean   Out_Present                    (Node_Id N)\n+      { return Flag17 (N); }\n+   INLINE List_Id   Parameter_Associations         (Node_Id N)\n+      { return List3 (N); }\n+   INLINE Boolean   Parameter_List_Truncated       (Node_Id N)\n+      { return Flag17 (N); }\n+   INLINE List_Id   Parameter_Specifications       (Node_Id N)\n+      { return List3 (N); }\n+   INLINE Node_Id   Parameter_Type                 (Node_Id N)\n+      { return Node2 (N); }\n+   INLINE Node_Id   Parent_Spec                    (Node_Id N)\n+      { return Node4 (N); }\n+   INLINE Node_Id   Position                       (Node_Id N)\n+      { return Node2 (N); }\n+   INLINE List_Id   Pragma_Argument_Associations   (Node_Id N)\n+      { return List2 (N); }\n+   INLINE List_Id   Pragmas_After                  (Node_Id N)\n+      { return List5 (N); }\n+   INLINE List_Id   Pragmas_Before                 (Node_Id N)\n+      { return List4 (N); }\n+   INLINE Node_Id   Prefix                         (Node_Id N)\n+      { return Node3 (N); }\n+   INLINE Uint      Present_Expr                   (Node_Id N)\n+      { return Uint3 (N); }\n+   INLINE Boolean   Prev_Ids                       (Node_Id N)\n+      { return Flag6 (N); }\n+   INLINE Boolean   Print_In_Hex                   (Node_Id N)\n+      { return Flag13 (N); }\n+   INLINE List_Id   Private_Declarations           (Node_Id N)\n+      { return List3 (N); }\n+   INLINE Boolean   Private_Present                (Node_Id N)\n+      { return Flag15 (N); }\n+   INLINE Node_Id   Procedure_To_Call              (Node_Id N)\n+      { return Node4 (N); }\n+   INLINE Node_Id   Proper_Body                    (Node_Id N)\n+      { return Node1 (N); }\n+   INLINE Node_Id   Protected_Definition           (Node_Id N)\n+      { return Node3 (N); }\n+   INLINE Boolean   Protected_Present              (Node_Id N)\n+      { return Flag15 (N); }\n+   INLINE Boolean   Raises_Constraint_Error        (Node_Id N)\n+      { return Flag7 (N); }\n+   INLINE Node_Id   Range_Constraint               (Node_Id N)\n+      { return Node4 (N); }\n+   INLINE Node_Id   Range_Expression               (Node_Id N)\n+      { return Node4 (N); }\n+   INLINE Node_Id   Real_Range_Specification       (Node_Id N)\n+      { return Node4 (N); }\n+   INLINE Ureal     Realval                        (Node_Id N)\n+      { return Ureal3 (N); }\n+   INLINE Node_Id   Record_Extension_Part          (Node_Id N)\n+      { return Node3 (N); }\n+   INLINE Boolean   Redundant_Use                  (Node_Id N)\n+      { return Flag13 (N); }\n+   INLINE Node_Id   Return_Type                    (Node_Id N)\n+      { return Node2 (N); }\n+   INLINE Boolean   Reverse_Present                (Node_Id N)\n+      { return Flag15 (N); }\n+   INLINE Node_Id   Right_Opnd                     (Node_Id N)\n+      { return Node3 (N); }\n+   INLINE Boolean   Rounded_Result                 (Node_Id N)\n+      { return Flag18 (N); }\n+   INLINE Node_Id   Scope                          (Node_Id N)\n+      { return Node3 (N); }\n+   INLINE List_Id   Select_Alternatives            (Node_Id N)\n+      { return List1 (N); }\n+   INLINE Node_Id   Selector_Name                  (Node_Id N)\n+      { return Node2 (N); }\n+   INLINE List_Id   Selector_Names                 (Node_Id N)\n+      { return List1 (N); }\n+   INLINE Boolean   Shift_Count_OK                 (Node_Id N)\n+      { return Flag4 (N); }\n+   INLINE Entity_Id Source_Type                    (Node_Id N)\n+      { return Node1 (N); }\n+   INLINE Node_Id   Specification                  (Node_Id N)\n+      { return Node1 (N); }\n+   INLINE List_Id   Statements                     (Node_Id N)\n+      { return List3 (N); }\n+   INLINE Boolean   Static_Processing_OK           (Node_Id N)\n+      { return Flag4 (N); }\n+   INLINE Node_Id   Storage_Pool                   (Node_Id N)\n+      { return Node1 (N); }\n+   INLINE String_Id Strval                         (Node_Id N)\n+      { return Str3 (N); }\n+   INLINE Node_Id   Subtype_Indication             (Node_Id N)\n+      { return Node5 (N); }\n+   INLINE Node_Id   Subtype_Mark                   (Node_Id N)\n+      { return Node4 (N); }\n+   INLINE List_Id   Subtype_Marks                  (Node_Id N)\n+      { return List2 (N); }\n+   INLINE Boolean   Tagged_Present                 (Node_Id N)\n+      { return Flag15 (N); }\n+   INLINE Entity_Id Target_Type                    (Node_Id N)\n+      { return Node2 (N); }\n+   INLINE Entity_Id Task_Body_Procedure            (Node_Id N)\n+      { return Node2 (N); }\n+   INLINE Node_Id   Task_Definition                (Node_Id N)\n+      { return Node3 (N); }\n+   INLINE List_Id   Then_Actions                   (Node_Id N)\n+      { return List2 (N); }\n+   INLINE List_Id   Then_Statements                (Node_Id N)\n+      { return List2 (N); }\n+   INLINE Boolean   Treat_Fixed_As_Integer         (Node_Id N)\n+      { return Flag14 (N); }\n+   INLINE Node_Id   Triggering_Alternative         (Node_Id N)\n+      { return Node1 (N); }\n+   INLINE Node_Id   Triggering_Statement           (Node_Id N)\n+      { return Node1 (N); }\n+   INLINE Elist_Id  TSS_Elist                      (Node_Id N)\n+      { return Elist3 (N); }\n+   INLINE Node_Id   Type_Definition                (Node_Id N)\n+      { return Node3 (N); }\n+   INLINE Node_Id   Unit                           (Node_Id N)\n+      { return Node2 (N); }\n+   INLINE Boolean   Unknown_Discriminants_Present  (Node_Id N)\n+      { return Flag13 (N); }\n+   INLINE Boolean   Unreferenced_In_Spec           (Node_Id N)\n+      { return Flag7 (N); }\n+   INLINE Node_Id   Variant_Part                   (Node_Id N)\n+      { return Node4 (N); }\n+   INLINE List_Id   Variants                       (Node_Id N)\n+      { return List1 (N); }\n+   INLINE List_Id   Visible_Declarations           (Node_Id N)\n+      { return List2 (N); }\n+   INLINE Boolean   Was_Originally_Stub            (Node_Id N)\n+      { return Flag13 (N); }\n+   INLINE Boolean   Zero_Cost_Handling             (Node_Id N)\n+      { return Flag5 (N); }\n+"}, {"sha": "e6394a75166e1e26d513d2911d7bacca2d548d9e", "filename": "gcc/config/pa/t-linux", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/gcc%2Fconfig%2Fpa%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/gcc%2Fconfig%2Fpa%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Ft-linux?ref=67f28219a6b5f2ee69aea599a76d15c899d8a8c3", "patch": "@@ -15,4 +15,4 @@ CRTSTUFF_T_CFLAGS_S = -fPIC\n # Compile libgcc2.a as PIC.\n TARGET_LIBGCC2_CFLAGS = -fPIC -DELF=1 -DLINUX=1\n \n-ADA_CFLAGS=-mdisable-indexing\n+T_ADAFLAGS=-mdisable-indexing"}, {"sha": "863e8432015385ac24bc4cf152dc0a5980fbd363", "filename": "gcc/config/pa/t-pa", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/gcc%2Fconfig%2Fpa%2Ft-pa", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/gcc%2Fconfig%2Fpa%2Ft-pa", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Ft-pa?ref=67f28219a6b5f2ee69aea599a76d15c899d8a8c3", "patch": "@@ -1,4 +1,4 @@\n-ADA_CFLAGS=-mdisable-indexing\n+T_ADAFLAGS=-mdisable-indexing\n LIB2FUNCS_EXTRA=lib2funcs.asm quadlib.c\n \n lib2funcs.asm: $(srcdir)/config/pa/lib2funcs.asm"}, {"sha": "09dac2d8facd51de1858bd5ddf2b08e3f29477d3", "filename": "gcc/config/pa/t-pa64", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/gcc%2Fconfig%2Fpa%2Ft-pa64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/gcc%2Fconfig%2Fpa%2Ft-pa64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Ft-pa64?ref=67f28219a6b5f2ee69aea599a76d15c899d8a8c3", "patch": "@@ -2,7 +2,7 @@ LIB1ASMFUNCS =  _divI _divU _remI _remU _div_const\n LIB1ASMSRC = pa/milli64.S\n TARGET_LIBGCC2_CFLAGS = -fPIC -Dpa64=1 -DELF=1\n \n-ADA_CFLAGS=-mdisable-indexing\n+T_ADAFLAGS=-mdisable-indexing\n LIB2FUNCS_EXTRA=quadlib.c\n \n # We'll need this once .init sections are enabled on PA64."}, {"sha": "a47d72f98c9a5166ed1d07cf6fbc0fbf5e061261", "filename": "gcc/config/pa/t-pro", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/gcc%2Fconfig%2Fpa%2Ft-pro", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/gcc%2Fconfig%2Fpa%2Ft-pro", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Ft-pro?ref=67f28219a6b5f2ee69aea599a76d15c899d8a8c3", "patch": "@@ -1,4 +1,4 @@\n-ADA_CFLAGS=-mdisable-indexing\n+T_ADAFLAGS=-mdisable-indexing\n \n LIB2FUNCS_EXTRA=lib2funcs.asm \n "}, {"sha": "40b79533d14d1c17c70c220f44ae9246c44581fb", "filename": "gcc/configure", "status": "modified", "additions": 279, "deletions": 190, "changes": 469, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=67f28219a6b5f2ee69aea599a76d15c899d8a8c3", "patch": "@@ -2057,7 +2057,7 @@ EOF\n fi\n \n # Find some useful tools\n-for ac_prog in gawk mawk nawk awk\n+for ac_prog in mawk gawk nawk awk\n do\n # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n@@ -2877,42 +2877,130 @@ fi\n \n \n # See if GNAT has been installed\n-# Extract the first word of \"gnatbind\", so it can be a program name with args.\n+if test $host != $build; then\n+  ac_tool_prefix=${host_alias}-\n+else\n+  ac_tool_prefix=\n+fi\n+\n+\n+# Extract the first word of \"${ac_tool_prefix}gnatbind\", so it can be a program name with args.\n+set dummy ${ac_tool_prefix}gnatbind; ac_word=$2\n+echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n+echo \"configure:2891: checking for $ac_word\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_prog_GNATBIND'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  if test -n \"$GNATBIND\"; then\n+  ac_cv_prog_GNATBIND=\"$GNATBIND\" # Let the user override the test.\n+else\n+  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\":\"\n+  ac_dummy=\"$PATH\"\n+  for ac_dir in $ac_dummy; do\n+    test -z \"$ac_dir\" && ac_dir=.\n+    if test -f $ac_dir/$ac_word; then\n+      ac_cv_prog_GNATBIND=\"${ac_tool_prefix}gnatbind\"\n+      break\n+    fi\n+  done\n+  IFS=\"$ac_save_ifs\"\n+fi\n+fi\n+GNATBIND=\"$ac_cv_prog_GNATBIND\"\n+if test -n \"$GNATBIND\"; then\n+  echo \"$ac_t\"\"$GNATBIND\" 1>&6\n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+\n+\n+if test -z \"$ac_cv_prog_GNATBIND\"; then\n+if test -n \"$ac_tool_prefix\"; then\n+  # Extract the first word of \"gnatbind\", so it can be a program name with args.\n set dummy gnatbind; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:2884: checking for $ac_word\" >&5\n-if eval \"test \\\"`echo '$''{'ac_cv_prog_have_gnat'+set}'`\\\" = set\"; then\n+echo \"configure:2923: checking for $ac_word\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_prog_GNATBIND'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n-  if test -n \"$have_gnat\"; then\n-  ac_cv_prog_have_gnat=\"$have_gnat\" # Let the user override the test.\n+  if test -n \"$GNATBIND\"; then\n+  ac_cv_prog_GNATBIND=\"$GNATBIND\" # Let the user override the test.\n else\n   IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\":\"\n   ac_dummy=\"$PATH\"\n   for ac_dir in $ac_dummy; do\n     test -z \"$ac_dir\" && ac_dir=.\n     if test -f $ac_dir/$ac_word; then\n-      ac_cv_prog_have_gnat=\"yes\"\n+      ac_cv_prog_GNATBIND=\"gnatbind\"\n       break\n     fi\n   done\n   IFS=\"$ac_save_ifs\"\n-  test -z \"$ac_cv_prog_have_gnat\" && ac_cv_prog_have_gnat=\"no\"\n+  test -z \"$ac_cv_prog_GNATBIND\" && ac_cv_prog_GNATBIND=\"no\"\n fi\n fi\n-have_gnat=\"$ac_cv_prog_have_gnat\"\n-if test -n \"$have_gnat\"; then\n-  echo \"$ac_t\"\"$have_gnat\" 1>&6\n+GNATBIND=\"$ac_cv_prog_GNATBIND\"\n+if test -n \"$GNATBIND\"; then\n+  echo \"$ac_t\"\"$GNATBIND\" 1>&6\n else\n   echo \"$ac_t\"\"no\" 1>&6\n fi\n \n+else\n+  GNATBIND=\"no\"\n+fi\n+fi\n+\n+echo $ac_n \"checking for compiler driver that understands Ada\"\"... $ac_c\" 1>&6\n+echo \"configure:2956: checking for compiler driver that understands Ada\" >&5\n+if eval \"test \\\"`echo '$''{'gcc_cv_prog_adac'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat >conftest.adb <<EOF\n+procedure conftest is begin null; end conftest;\n+EOF\n+gcc_cv_prog_adac=no\n+# Have to do ac_tool_prefix and user overrides by hand.\n+user_adac=$ADAC\n+user_cc=$CC\n+for cand in ${ac_tool_prefix}$user_adac\t$user_adac\t\\\n+\t    ${ac_tool_prefix}$user_cc\t$user_cc\t\\\n+\t    ${ac_tool_prefix}gcc\tgcc\t\t\\\n+\t    ${ac_tool_prefix}cc\t\tcc\t\t\\\n+\t    ${ac_tool_prefix}gnatgcc\tgnatgcc\t\t\\\n+\t    ${ac_tool_prefix}gnatcc\tgnatcc\t\t\\\n+\t    ${ac_tool_prefix}adagcc\tadagcc\t\t\\\n+\t    ${ac_tool_prefix}adacc\tadacc\t\t; do\n+  # There is a bug in all released versions of GCC which causes the\n+  # driver to exit successfully when the appropriate language module\n+  # has not been installed.  This is fixed in 2.95.4, 3.0.2, and 3.1.\n+  # Therefore we must check for the error message as well as an\n+  # unsuccessful exit.\n+  errors=`$cand -c conftest.adb 2>&1 || echo failure`\n+  if test x\"$errors\" = x; then\n+    gcc_cv_prog_adac=$cand\n+    break\n+  fi\n+done\n+rm -f conftest.*\n+fi\n+\n+echo \"$ac_t\"\"$gcc_cv_prog_adac\" 1>&6\n+ADAC=$gcc_cv_prog_adac\n+\n+\n+if test x$GNATBIND != xno && test x$ADAC != xno; then\n+  have_gnat=yes\n+else\n+  have_gnat=no\n+fi\n+\n \n # See if we have the mktemp command.\n # Extract the first word of \"mktemp\", so it can be a program name with args.\n set dummy mktemp; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:2916: checking for $ac_word\" >&5\n+echo \"configure:3004: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_have_mktemp_command'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -2951,7 +3039,7 @@ else\n   # Extract the first word of \"makeinfo\", so it can be a program name with args.\n set dummy makeinfo; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:2955: checking for $ac_word\" >&5\n+echo \"configure:3043: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_MAKEINFO'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -2980,13 +3068,13 @@ fi\n if test -n \"$MAKEINFO\"; then\n   # Found it, now check the version.\n   echo $ac_n \"checking for modern makeinfo\"\"... $ac_c\" 1>&6\n-echo \"configure:2984: checking for modern makeinfo\" >&5\n+echo \"configure:3072: checking for modern makeinfo\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_prog_makeinfo_modern'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n     ac_prog_version=`$MAKEINFO --version 2>&1 |\n                    sed -n 's/^.*GNU texinfo.* \\([0-9][0-9.]*\\).*$/\\1/p'`\n-  echo \"configure:2990: version of makeinfo is $ac_prog_version\" >&5\n+  echo \"configure:3078: version of makeinfo is $ac_prog_version\" >&5\n   case $ac_prog_version in\n     '')     gcc_cv_prog_makeinfo_modern=no;;\n     4.*)\n@@ -3014,7 +3102,7 @@ fi\n \n # Is pod2man recent enough to regenerate manpages?\n echo $ac_n \"checking for recent Pod::Man\"\"... $ac_c\" 1>&6\n-echo \"configure:3018: checking for recent Pod::Man\" >&5\n+echo \"configure:3106: checking for recent Pod::Man\" >&5\n if perl -e 'use 1.10 Pod::Man' >/dev/null 2>&1; then\n   echo \"$ac_t\"\"yes\" 1>&6\n   GENERATED_MANPAGES=generated-manpages\t\t\n@@ -3030,7 +3118,7 @@ else\n   # Extract the first word of \"flex\", so it can be a program name with args.\n set dummy flex; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:3034: checking for $ac_word\" >&5\n+echo \"configure:3122: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_FLEX'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -3067,7 +3155,7 @@ else\n   # Extract the first word of \"bison\", so it can be a program name with args.\n set dummy bison; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:3071: checking for $ac_word\" >&5\n+echo \"configure:3159: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_BISON'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -3099,7 +3187,7 @@ fi\n # These libraries may be used by collect2.\n # We may need a special search path to get them linked.\n echo $ac_n \"checking for collect2 libraries\"\"... $ac_c\" 1>&6\n-echo \"configure:3103: checking for collect2 libraries\" >&5\n+echo \"configure:3191: checking for collect2 libraries\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_collect2_libs'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -3110,7 +3198,7 @@ for libs in '' -lld -lmld \\\n do\n \tLIBS=\"$libs\"\n \tcat > conftest.$ac_ext <<EOF\n-#line 3114 \"configure\"\n+#line 3202 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -3121,7 +3209,7 @@ int main() {\n ldopen()\n ; return 0; }\n EOF\n-if { (eval echo configure:3125: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3213: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   gcc_cv_collect2_libs=\"$libs\"; break\n else\n@@ -3147,14 +3235,14 @@ save_LIBS=\"$LIBS\"\n LIBS=\n \n echo $ac_n \"checking for library containing exc_resume\"\"... $ac_c\" 1>&6\n-echo \"configure:3151: checking for library containing exc_resume\" >&5\n+echo \"configure:3239: checking for library containing exc_resume\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_search_exc_resume'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_func_search_save_LIBS=\"$LIBS\"\n ac_cv_search_exc_resume=\"no\"\n cat > conftest.$ac_ext <<EOF\n-#line 3158 \"configure\"\n+#line 3246 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -3165,7 +3253,7 @@ int main() {\n exc_resume()\n ; return 0; }\n EOF\n-if { (eval echo configure:3169: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3257: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_search_exc_resume=\"none required\"\n else\n@@ -3176,7 +3264,7 @@ rm -f conftest*\n test \"$ac_cv_search_exc_resume\" = \"no\" && for i in exc; do\n LIBS=\"-l$i  $ac_func_search_save_LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 3180 \"configure\"\n+#line 3268 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -3187,7 +3275,7 @@ int main() {\n exc_resume()\n ; return 0; }\n EOF\n-if { (eval echo configure:3191: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3279: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_search_exc_resume=\"-l$i\"\n break\n@@ -3216,12 +3304,12 @@ LIBS=\"$save_LIBS\"\n \n \n echo $ac_n \"checking for preprocessor stringizing operator\"\"... $ac_c\" 1>&6\n-echo \"configure:3220: checking for preprocessor stringizing operator\" >&5\n+echo \"configure:3308: checking for preprocessor stringizing operator\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_stringize'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3225 \"configure\"\n+#line 3313 \"configure\"\n #include \"confdefs.h\"\n \n #define x(y) #y\n@@ -3254,20 +3342,20 @@ echo \"$ac_t\"\"${ac_cv_c_stringize}\" 1>&6\n # Use <inttypes.h> only if it exists,\n # doesn't clash with <sys/types.h>, and declares intmax_t.\n echo $ac_n \"checking for inttypes.h\"\"... $ac_c\" 1>&6\n-echo \"configure:3258: checking for inttypes.h\" >&5\n+echo \"configure:3346: checking for inttypes.h\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_header_inttypes_h'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3263 \"configure\"\n+#line 3351 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <inttypes.h>\n int main() {\n intmax_t i = -1;\n ; return 0; }\n EOF\n-if { (eval echo configure:3271: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3359: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   gcc_cv_header_inttypes_h=yes\n else\n@@ -3295,12 +3383,12 @@ for ac_func in strtoul bsearch popen times clock \\\n \tlstat\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:3299: checking for $ac_func\" >&5\n+echo \"configure:3387: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3304 \"configure\"\n+#line 3392 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -3323,7 +3411,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3327: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3415: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -3349,12 +3437,12 @@ done\n \n \n echo $ac_n \"checking for ssize_t\"\"... $ac_c\" 1>&6\n-echo \"configure:3353: checking for ssize_t\" >&5\n+echo \"configure:3441: checking for ssize_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_ssize_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3358 \"configure\"\n+#line 3446 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -3385,12 +3473,12 @@ fi\n # Try to determine the array type of the second argument of getgroups\n # for the target system (int or gid_t).\n echo $ac_n \"checking for uid_t in sys/types.h\"\"... $ac_c\" 1>&6\n-echo \"configure:3389: checking for uid_t in sys/types.h\" >&5\n+echo \"configure:3477: checking for uid_t in sys/types.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_uid_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3394 \"configure\"\n+#line 3482 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n EOF\n@@ -3419,15 +3507,15 @@ EOF\n fi\n \n echo $ac_n \"checking type of array argument to getgroups\"\"... $ac_c\" 1>&6\n-echo \"configure:3423: checking type of array argument to getgroups\" >&5\n+echo \"configure:3511: checking type of array argument to getgroups\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_getgroups'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   ac_cv_type_getgroups=cross\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3431 \"configure\"\n+#line 3519 \"configure\"\n #include \"confdefs.h\"\n \n /* Thanks to Mike Rendell for this test.  */\n@@ -3452,7 +3540,7 @@ main()\n }\n \n EOF\n-if { (eval echo configure:3456: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:3544: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n     ac_cv_type_getgroups=gid_t\n else\n@@ -3466,7 +3554,7 @@ fi\n \n if test $ac_cv_type_getgroups = cross; then\n         cat > conftest.$ac_ext <<EOF\n-#line 3470 \"configure\"\n+#line 3558 \"configure\"\n #include \"confdefs.h\"\n #include <unistd.h>\n EOF\n@@ -3507,12 +3595,12 @@ fi\n \n \n echo $ac_n \"checking for vprintf\"\"... $ac_c\" 1>&6\n-echo \"configure:3511: checking for vprintf\" >&5\n+echo \"configure:3599: checking for vprintf\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_vprintf'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3516 \"configure\"\n+#line 3604 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char vprintf(); below.  */\n@@ -3535,7 +3623,7 @@ vprintf();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3539: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3627: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_vprintf=yes\"\n else\n@@ -3559,12 +3647,12 @@ fi\n \n if test \"$ac_cv_func_vprintf\" != yes; then\n echo $ac_n \"checking for _doprnt\"\"... $ac_c\" 1>&6\n-echo \"configure:3563: checking for _doprnt\" >&5\n+echo \"configure:3651: checking for _doprnt\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func__doprnt'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3568 \"configure\"\n+#line 3656 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char _doprnt(); below.  */\n@@ -3587,7 +3675,7 @@ _doprnt();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3591: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3679: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func__doprnt=yes\"\n else\n@@ -3625,12 +3713,12 @@ fi\n for ac_func in strstr\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:3629: checking for $ac_func\" >&5\n+echo \"configure:3717: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3634 \"configure\"\n+#line 3722 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -3653,7 +3741,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3657: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3745: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -3680,15 +3768,15 @@ done\n \n    \n echo $ac_n \"checking whether the printf functions support %p\"\"... $ac_c\" 1>&6\n-echo \"configure:3684: checking whether the printf functions support %p\" >&5\n+echo \"configure:3772: checking whether the printf functions support %p\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_func_printf_ptr'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   gcc_cv_func_printf_ptr=no\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3692 \"configure\"\n+#line 3780 \"configure\"\n #include \"confdefs.h\"\n #include <stdio.h>\n \n@@ -3701,7 +3789,7 @@ int main()\n   return (p != q);\n }\n EOF\n-if { (eval echo configure:3705: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:3793: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   gcc_cv_func_printf_ptr=yes\n else\n@@ -3733,12 +3821,12 @@ case \"${host}\" in\n   ;;\n esac\n echo $ac_n \"checking for pid_t\"\"... $ac_c\" 1>&6\n-echo \"configure:3737: checking for pid_t\" >&5\n+echo \"configure:3825: checking for pid_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_pid_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3742 \"configure\"\n+#line 3830 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -3767,17 +3855,17 @@ fi\n \n ac_safe=`echo \"vfork.h\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for vfork.h\"\"... $ac_c\" 1>&6\n-echo \"configure:3771: checking for vfork.h\" >&5\n+echo \"configure:3859: checking for vfork.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3776 \"configure\"\n+#line 3864 \"configure\"\n #include \"confdefs.h\"\n #include <vfork.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:3781: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:3869: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -3802,18 +3890,18 @@ else\n fi\n \n echo $ac_n \"checking for working vfork\"\"... $ac_c\" 1>&6\n-echo \"configure:3806: checking for working vfork\" >&5\n+echo \"configure:3894: checking for working vfork\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_vfork_works'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   echo $ac_n \"checking for vfork\"\"... $ac_c\" 1>&6\n-echo \"configure:3812: checking for vfork\" >&5\n+echo \"configure:3900: checking for vfork\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_vfork'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3817 \"configure\"\n+#line 3905 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char vfork(); below.  */\n@@ -3836,7 +3924,7 @@ vfork();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3840: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3928: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_vfork=yes\"\n else\n@@ -3858,7 +3946,7 @@ fi\n ac_cv_func_vfork_works=$ac_cv_func_vfork\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3862 \"configure\"\n+#line 3950 \"configure\"\n #include \"confdefs.h\"\n /* Thanks to Paul Eggert for this test.  */\n #include <stdio.h>\n@@ -3953,7 +4041,7 @@ main() {\n   }\n }\n EOF\n-if { (eval echo configure:3957: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:4045: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_func_vfork_works=yes\n else\n@@ -3978,12 +4066,12 @@ fi\n for ac_func in getpagesize\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:3982: checking for $ac_func\" >&5\n+echo \"configure:4070: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3987 \"configure\"\n+#line 4075 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -4006,7 +4094,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:4010: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4098: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -4277,7 +4365,7 @@ main ()\n EOF\n \n echo $ac_n \"checking for working mmap from /dev/zero\"\"... $ac_c\" 1>&6\n-echo \"configure:4281: checking for working mmap from /dev/zero\" >&5\n+echo \"configure:4369: checking for working mmap from /dev/zero\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_mmap_dev_zero'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -4293,11 +4381,11 @@ else\n   esac\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4297 \"configure\"\n+#line 4385 \"configure\"\n #include \"confdefs.h\"\n #include \"ct-mmap.inc\"\n EOF\n-if { (eval echo configure:4301: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:4389: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_func_mmap_dev_zero=yes\n else\n@@ -4324,7 +4412,7 @@ EOF\n fi\n \n echo $ac_n \"checking for working mmap with MAP_ANON(YMOUS)\"\"... $ac_c\" 1>&6\n-echo \"configure:4328: checking for working mmap with MAP_ANON(YMOUS)\" >&5\n+echo \"configure:4416: checking for working mmap with MAP_ANON(YMOUS)\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_mmap_anon'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -4334,12 +4422,12 @@ else\n  ac_cv_func_mmap_anon=no\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4338 \"configure\"\n+#line 4426 \"configure\"\n #include \"confdefs.h\"\n #define USE_MAP_ANON\n #include \"ct-mmap.inc\"\n EOF\n-if { (eval echo configure:4343: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:4431: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_func_mmap_anon=yes\n else\n@@ -4367,7 +4455,7 @@ fi\n rm -f ct-mmap.inc\n \n echo $ac_n \"checking for working mmap of a file\"\"... $ac_c\" 1>&6\n-echo \"configure:4371: checking for working mmap of a file\" >&5\n+echo \"configure:4459: checking for working mmap of a file\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_mmap_file'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -4382,7 +4470,7 @@ if test \"$cross_compiling\" = yes; then\n   ac_cv_func_mmap_file=no\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4386 \"configure\"\n+#line 4474 \"configure\"\n #include \"confdefs.h\"\n \n /* Test by Zack Weinberg.  Modified from MMAP_ANYWHERE test by\n@@ -4419,7 +4507,7 @@ int main()\n   exit(0);\n }\n EOF\n-if { (eval echo configure:4423: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:4511: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_func_mmap_file=yes\n else\n@@ -4457,15 +4545,15 @@ fi\n \n \n   echo $ac_n \"checking for iconv\"\"... $ac_c\" 1>&6\n-echo \"configure:4461: checking for iconv\" >&5\n+echo \"configure:4549: checking for iconv\" >&5\n if eval \"test \\\"`echo '$''{'am_cv_func_iconv'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   \n     am_cv_func_iconv=\"no, consider installing GNU libiconv\"\n     am_cv_lib_iconv=no\n     cat > conftest.$ac_ext <<EOF\n-#line 4469 \"configure\"\n+#line 4557 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n #include <iconv.h>\n@@ -4475,7 +4563,7 @@ iconv_t cd = iconv_open(\"\",\"\");\n        iconv_close(cd);\n ; return 0; }\n EOF\n-if { (eval echo configure:4479: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4567: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   am_cv_func_iconv=yes\n else\n@@ -4487,7 +4575,7 @@ rm -f conftest*\n       am_save_LIBS=\"$LIBS\"\n       LIBS=\"$LIBS -liconv\"\n       cat > conftest.$ac_ext <<EOF\n-#line 4491 \"configure\"\n+#line 4579 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n #include <iconv.h>\n@@ -4497,7 +4585,7 @@ iconv_t cd = iconv_open(\"\",\"\");\n          iconv_close(cd);\n ; return 0; }\n EOF\n-if { (eval echo configure:4501: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4589: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   am_cv_lib_iconv=yes\n         am_cv_func_iconv=yes\n@@ -4518,13 +4606,13 @@ echo \"$ac_t\"\"$am_cv_func_iconv\" 1>&6\n EOF\n \n     echo $ac_n \"checking for iconv declaration\"\"... $ac_c\" 1>&6\n-echo \"configure:4522: checking for iconv declaration\" >&5\n+echo \"configure:4610: checking for iconv declaration\" >&5\n     if eval \"test \\\"`echo '$''{'am_cv_proto_iconv'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   \n       cat > conftest.$ac_ext <<EOF\n-#line 4528 \"configure\"\n+#line 4616 \"configure\"\n #include \"confdefs.h\"\n \n #include <stdlib.h>\n@@ -4543,7 +4631,7 @@ int main() {\n \n ; return 0; }\n EOF\n-if { (eval echo configure:4547: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:4635: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   am_cv_proto_iconv_arg1=\"\"\n else\n@@ -4581,12 +4669,12 @@ for ac_func in getenv atol sbrk abort atof getcwd getwd \\\n do\n   ac_tr_decl=HAVE_DECL_`echo $ac_func | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n echo $ac_n \"checking whether $ac_func is declared\"\"... $ac_c\" 1>&6\n-echo \"configure:4585: checking whether $ac_func is declared\" >&5\n+echo \"configure:4673: checking whether $ac_func is declared\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_have_decl_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4590 \"configure\"\n+#line 4678 \"configure\"\n #include \"confdefs.h\"\n #undef $ac_tr_decl\n #define $ac_tr_decl 1\n@@ -4600,7 +4688,7 @@ char *(*pfn) = (char *(*)) $ac_func ;\n #endif\n ; return 0; }\n EOF\n-if { (eval echo configure:4604: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:4692: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   eval \"gcc_cv_have_decl_$ac_func=yes\"\n else\n@@ -4702,12 +4790,12 @@ for ac_func in getrlimit setrlimit getrusage\n do\n   ac_tr_decl=HAVE_DECL_`echo $ac_func | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n echo $ac_n \"checking whether $ac_func is declared\"\"... $ac_c\" 1>&6\n-echo \"configure:4706: checking whether $ac_func is declared\" >&5\n+echo \"configure:4794: checking whether $ac_func is declared\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_have_decl_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4711 \"configure\"\n+#line 4799 \"configure\"\n #include \"confdefs.h\"\n #undef $ac_tr_decl\n #define $ac_tr_decl 1\n@@ -4725,7 +4813,7 @@ char *(*pfn) = (char *(*)) $ac_func ;\n #endif\n ; return 0; }\n EOF\n-if { (eval echo configure:4729: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:4817: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   eval \"gcc_cv_have_decl_$ac_func=yes\"\n else\n@@ -4767,12 +4855,12 @@ for ac_func in times\n do\n   ac_tr_decl=HAVE_DECL_`echo $ac_func | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n echo $ac_n \"checking whether $ac_func is declared\"\"... $ac_c\" 1>&6\n-echo \"configure:4771: checking whether $ac_func is declared\" >&5\n+echo \"configure:4859: checking whether $ac_func is declared\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_have_decl_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4776 \"configure\"\n+#line 4864 \"configure\"\n #include \"confdefs.h\"\n #undef $ac_tr_decl\n #define $ac_tr_decl 1\n@@ -4790,7 +4878,7 @@ char *(*pfn) = (char *(*)) $ac_func ;\n #endif\n ; return 0; }\n EOF\n-if { (eval echo configure:4794: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:4882: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   eval \"gcc_cv_have_decl_$ac_func=yes\"\n else\n@@ -4824,13 +4912,13 @@ fi\n \n # More time-related stuff.\n echo $ac_n \"checking for struct tms\"\"... $ac_c\" 1>&6\n-echo \"configure:4828: checking for struct tms\" >&5\n+echo \"configure:4916: checking for struct tms\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_struct_tms'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   \n cat > conftest.$ac_ext <<EOF\n-#line 4834 \"configure\"\n+#line 4922 \"configure\"\n #include \"confdefs.h\"\n \n #include \"ansidecl.h\"\n@@ -4843,7 +4931,7 @@ int main() {\n struct tms tms;\n ; return 0; }\n EOF\n-if { (eval echo configure:4847: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:4935: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_struct_tms=yes\n else\n@@ -4866,13 +4954,13 @@ fi\n # use gcc_cv_* here because this doesn't match the behavior of AC_CHECK_TYPE.\n # revisit after autoconf 2.50.\n echo $ac_n \"checking for clock_t\"\"... $ac_c\" 1>&6\n-echo \"configure:4870: checking for clock_t\" >&5\n+echo \"configure:4958: checking for clock_t\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_type_clock_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   \n cat > conftest.$ac_ext <<EOF\n-#line 4876 \"configure\"\n+#line 4964 \"configure\"\n #include \"confdefs.h\"\n \n #include \"ansidecl.h\"\n@@ -4882,7 +4970,7 @@ int main() {\n clock_t x;\n ; return 0; }\n EOF\n-if { (eval echo configure:4886: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:4974: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   gcc_cv_type_clock_t=yes\n else\n@@ -4907,12 +4995,12 @@ CFLAGS=\"$saved_CFLAGS\"\n \n # mkdir takes a single argument on some systems. \n echo $ac_n \"checking if mkdir takes one argument\"\"... $ac_c\" 1>&6\n-echo \"configure:4911: checking if mkdir takes one argument\" >&5\n+echo \"configure:4999: checking if mkdir takes one argument\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_mkdir_takes_one_arg'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4916 \"configure\"\n+#line 5004 \"configure\"\n #include \"confdefs.h\"\n \n #include <sys/types.h>\n@@ -4929,7 +5017,7 @@ int main() {\n mkdir (\"foo\", 0);\n ; return 0; }\n EOF\n-if { (eval echo configure:4933: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:5021: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   gcc_cv_mkdir_takes_one_arg=no\n else\n@@ -5212,15 +5300,15 @@ fi\n \n \n         echo $ac_n \"checking for strerror in -lcposix\"\"... $ac_c\" 1>&6\n-echo \"configure:5216: checking for strerror in -lcposix\" >&5\n+echo \"configure:5304: checking for strerror in -lcposix\" >&5\n ac_lib_var=`echo cposix'_'strerror | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lcposix  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 5224 \"configure\"\n+#line 5312 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -5231,7 +5319,7 @@ int main() {\n strerror()\n ; return 0; }\n EOF\n-if { (eval echo configure:5235: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:5323: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -5254,12 +5342,12 @@ fi\n   \n \n echo $ac_n \"checking for working const\"\"... $ac_c\" 1>&6\n-echo \"configure:5258: checking for working const\" >&5\n+echo \"configure:5346: checking for working const\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_const'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 5263 \"configure\"\n+#line 5351 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n@@ -5308,7 +5396,7 @@ ccp = (char const *const *) p;\n \n ; return 0; }\n EOF\n-if { (eval echo configure:5312: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:5400: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_c_const=yes\n else\n@@ -5329,12 +5417,12 @@ EOF\n fi\n \n echo $ac_n \"checking for off_t\"\"... $ac_c\" 1>&6\n-echo \"configure:5333: checking for off_t\" >&5\n+echo \"configure:5421: checking for off_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_off_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 5338 \"configure\"\n+#line 5426 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -5362,12 +5450,12 @@ EOF\n fi\n \n echo $ac_n \"checking for size_t\"\"... $ac_c\" 1>&6\n-echo \"configure:5366: checking for size_t\" >&5\n+echo \"configure:5454: checking for size_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_size_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 5371 \"configure\"\n+#line 5459 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -5400,17 +5488,17 @@ unistd.h sys/param.h\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:5404: checking for $ac_hdr\" >&5\n+echo \"configure:5492: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 5409 \"configure\"\n+#line 5497 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:5414: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:5502: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -5440,12 +5528,12 @@ done\n strdup __argz_count __argz_stringify __argz_next\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:5444: checking for $ac_func\" >&5\n+echo \"configure:5532: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 5449 \"configure\"\n+#line 5537 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -5468,7 +5556,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:5472: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:5560: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -5497,12 +5585,12 @@ done\n      for ac_func in stpcpy\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:5501: checking for $ac_func\" >&5\n+echo \"configure:5589: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 5506 \"configure\"\n+#line 5594 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -5525,7 +5613,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:5529: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:5617: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -5559,19 +5647,19 @@ EOF\n \n    if test $ac_cv_header_locale_h = yes; then\n     echo $ac_n \"checking for LC_MESSAGES\"\"... $ac_c\" 1>&6\n-echo \"configure:5563: checking for LC_MESSAGES\" >&5\n+echo \"configure:5651: checking for LC_MESSAGES\" >&5\n if eval \"test \\\"`echo '$''{'am_cv_val_LC_MESSAGES'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 5568 \"configure\"\n+#line 5656 \"configure\"\n #include \"confdefs.h\"\n #include <locale.h>\n int main() {\n return LC_MESSAGES\n ; return 0; }\n EOF\n-if { (eval echo configure:5575: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:5663: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   am_cv_val_LC_MESSAGES=yes\n else\n@@ -5592,7 +5680,7 @@ EOF\n     fi\n   fi\n    echo $ac_n \"checking whether NLS is requested\"\"... $ac_c\" 1>&6\n-echo \"configure:5596: checking whether NLS is requested\" >&5\n+echo \"configure:5684: checking whether NLS is requested\" >&5\n         # Check whether --enable-nls or --disable-nls was given.\n if test \"${enable_nls+set}\" = set; then\n   enableval=\"$enable_nls\"\n@@ -5612,7 +5700,7 @@ fi\n EOF\n \n       echo $ac_n \"checking whether included gettext is requested\"\"... $ac_c\" 1>&6\n-echo \"configure:5616: checking whether included gettext is requested\" >&5\n+echo \"configure:5704: checking whether included gettext is requested\" >&5\n       # Check whether --with-included-gettext or --without-included-gettext was given.\n if test \"${with_included_gettext+set}\" = set; then\n   withval=\"$with_included_gettext\"\n@@ -5631,17 +5719,17 @@ fi\n \n \tac_safe=`echo \"libintl.h\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for libintl.h\"\"... $ac_c\" 1>&6\n-echo \"configure:5635: checking for libintl.h\" >&5\n+echo \"configure:5723: checking for libintl.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 5640 \"configure\"\n+#line 5728 \"configure\"\n #include \"confdefs.h\"\n #include <libintl.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:5645: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:5733: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -5658,19 +5746,19 @@ fi\n if eval \"test \\\"`echo '$ac_cv_header_'$ac_safe`\\\" = yes\"; then\n   echo \"$ac_t\"\"yes\" 1>&6\n   echo $ac_n \"checking for gettext in libc\"\"... $ac_c\" 1>&6\n-echo \"configure:5662: checking for gettext in libc\" >&5\n+echo \"configure:5750: checking for gettext in libc\" >&5\n if eval \"test \\\"`echo '$''{'gt_cv_func_gettext_libc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 5667 \"configure\"\n+#line 5755 \"configure\"\n #include \"confdefs.h\"\n #include <libintl.h>\n int main() {\n return (int) gettext (\"\")\n ; return 0; }\n EOF\n-if { (eval echo configure:5674: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:5762: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   gt_cv_func_gettext_libc=yes\n else\n@@ -5686,15 +5774,15 @@ echo \"$ac_t\"\"$gt_cv_func_gettext_libc\" 1>&6\n \n \t   if test \"$gt_cv_func_gettext_libc\" != \"yes\"; then\n \t     echo $ac_n \"checking for bindtextdomain in -lintl\"\"... $ac_c\" 1>&6\n-echo \"configure:5690: checking for bindtextdomain in -lintl\" >&5\n+echo \"configure:5778: checking for bindtextdomain in -lintl\" >&5\n ac_lib_var=`echo intl'_'bindtextdomain | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lintl  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 5698 \"configure\"\n+#line 5786 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -5705,7 +5793,7 @@ int main() {\n bindtextdomain()\n ; return 0; }\n EOF\n-if { (eval echo configure:5709: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:5797: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -5721,20 +5809,20 @@ fi\n if eval \"test \\\"`echo '$ac_cv_lib_'$ac_lib_var`\\\" = yes\"; then\n   echo \"$ac_t\"\"yes\" 1>&6\n   echo $ac_n \"checking for gettext in libintl\"\"... $ac_c\" 1>&6\n-echo \"configure:5725: checking for gettext in libintl\" >&5\n+echo \"configure:5813: checking for gettext in libintl\" >&5\n if eval \"test \\\"`echo '$''{'gt_cv_func_gettext_libintl'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   echo $ac_n \"checking for gettext in -lintl\"\"... $ac_c\" 1>&6\n-echo \"configure:5730: checking for gettext in -lintl\" >&5\n+echo \"configure:5818: checking for gettext in -lintl\" >&5\n ac_lib_var=`echo intl'_'gettext | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lintl  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 5738 \"configure\"\n+#line 5826 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -5745,7 +5833,7 @@ int main() {\n gettext()\n ; return 0; }\n EOF\n-if { (eval echo configure:5749: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:5837: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -5788,7 +5876,7 @@ EOF\n \t      # Extract the first word of \"msgfmt\", so it can be a program name with args.\n set dummy msgfmt; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:5792: checking for $ac_word\" >&5\n+echo \"configure:5880: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_path_MSGFMT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -5822,12 +5910,12 @@ fi\n \t\tfor ac_func in dcgettext\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:5826: checking for $ac_func\" >&5\n+echo \"configure:5914: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 5831 \"configure\"\n+#line 5919 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -5850,7 +5938,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:5854: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:5942: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -5877,7 +5965,7 @@ done\n \t\t# Extract the first word of \"gmsgfmt\", so it can be a program name with args.\n set dummy gmsgfmt; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:5881: checking for $ac_word\" >&5\n+echo \"configure:5969: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_path_GMSGFMT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -5913,7 +6001,7 @@ fi\n \t\t# Extract the first word of \"xgettext\", so it can be a program name with args.\n set dummy xgettext; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:5917: checking for $ac_word\" >&5\n+echo \"configure:6005: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_path_XGETTEXT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -5945,15 +6033,15 @@ else\n fi\n \n \t\tcat > conftest.$ac_ext <<EOF\n-#line 5949 \"configure\"\n+#line 6037 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n extern int _nl_msg_cat_cntr;\n \t\t\t       return _nl_msg_cat_cntr\n ; return 0; }\n EOF\n-if { (eval echo configure:5957: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6045: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   CATOBJEXT=.gmo\n \t\t   DATADIRNAME=share\n@@ -5978,7 +6066,7 @@ fi\n \n         if test \"$CATOBJEXT\" = \"NONE\"; then\n \t  echo $ac_n \"checking whether catgets can be used\"\"... $ac_c\" 1>&6\n-echo \"configure:5982: checking whether catgets can be used\" >&5\n+echo \"configure:6070: checking whether catgets can be used\" >&5\n \t  # Check whether --with-catgets or --without-catgets was given.\n if test \"${with_catgets+set}\" = set; then\n   withval=\"$with_catgets\"\n@@ -5991,22 +6079,22 @@ fi\n \n \t  if test \"$nls_cv_use_catgets\" = \"yes\"; then\n \t    \t    echo $ac_n \"checking for main in -li\"\"... $ac_c\" 1>&6\n-echo \"configure:5995: checking for main in -li\" >&5\n+echo \"configure:6083: checking for main in -li\" >&5\n ac_lib_var=`echo i'_'main | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-li  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 6003 \"configure\"\n+#line 6091 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n main()\n ; return 0; }\n EOF\n-if { (eval echo configure:6010: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6098: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -6034,12 +6122,12 @@ else\n fi\n \n \t    echo $ac_n \"checking for catgets\"\"... $ac_c\" 1>&6\n-echo \"configure:6038: checking for catgets\" >&5\n+echo \"configure:6126: checking for catgets\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_catgets'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6043 \"configure\"\n+#line 6131 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char catgets(); below.  */\n@@ -6062,7 +6150,7 @@ catgets();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:6066: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6154: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_catgets=yes\"\n else\n@@ -6084,7 +6172,7 @@ EOF\n \t       # Extract the first word of \"gencat\", so it can be a program name with args.\n set dummy gencat; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:6088: checking for $ac_word\" >&5\n+echo \"configure:6176: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_path_GENCAT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -6120,7 +6208,7 @@ fi\n \t\t # Extract the first word of \"gmsgfmt\", so it can be a program name with args.\n set dummy gmsgfmt; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:6124: checking for $ac_word\" >&5\n+echo \"configure:6212: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_path_GMSGFMT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -6157,7 +6245,7 @@ fi\n \t\t   # Extract the first word of \"msgfmt\", so it can be a program name with args.\n set dummy msgfmt; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:6161: checking for $ac_word\" >&5\n+echo \"configure:6249: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_path_GMSGFMT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -6195,7 +6283,7 @@ fi\n \t\t # Extract the first word of \"xgettext\", so it can be a program name with args.\n set dummy xgettext; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:6199: checking for $ac_word\" >&5\n+echo \"configure:6287: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_path_XGETTEXT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -6253,7 +6341,7 @@ fi\n         # Extract the first word of \"msgfmt\", so it can be a program name with args.\n set dummy msgfmt; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:6257: checking for $ac_word\" >&5\n+echo \"configure:6345: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_path_MSGFMT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -6287,7 +6375,7 @@ fi\n         # Extract the first word of \"gmsgfmt\", so it can be a program name with args.\n set dummy gmsgfmt; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:6291: checking for $ac_word\" >&5\n+echo \"configure:6379: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_path_GMSGFMT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -6326,7 +6414,7 @@ fi\n         # Extract the first word of \"xgettext\", so it can be a program name with args.\n set dummy xgettext; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:6330: checking for $ac_word\" >&5\n+echo \"configure:6418: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_path_XGETTEXT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -6425,7 +6513,7 @@ fi\n        LINGUAS=\n      else\n        echo $ac_n \"checking for catalogs to be installed\"\"... $ac_c\" 1>&6\n-echo \"configure:6429: checking for catalogs to be installed\" >&5\n+echo \"configure:6517: checking for catalogs to be installed\" >&5\n        if test \"x$LINGUAS\" = \"x\"; then\n \t LINGUAS=$ALL_LINGUAS\n        else\n@@ -6457,17 +6545,17 @@ echo \"configure:6429: checking for catalogs to be installed\" >&5\n    if test \"$CATOBJEXT\" = \".cat\"; then\n      ac_safe=`echo \"linux/version.h\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for linux/version.h\"\"... $ac_c\" 1>&6\n-echo \"configure:6461: checking for linux/version.h\" >&5\n+echo \"configure:6549: checking for linux/version.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6466 \"configure\"\n+#line 6554 \"configure\"\n #include \"confdefs.h\"\n #include <linux/version.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:6471: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:6559: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -6543,7 +6631,7 @@ fi\n case $host_os in\n \twin32 | pe | cygwin* | mingw32* | uwin*)\n echo $ac_n \"checking whether windows registry support is requested\"\"... $ac_c\" 1>&6\n-echo \"configure:6547: checking whether windows registry support is requested\" >&5\n+echo \"configure:6635: checking whether windows registry support is requested\" >&5\n if test \"x$enable_win32_registry\" != xno; then\n   cat >> confdefs.h <<\\EOF\n #define ENABLE_WIN32_REGISTRY 1\n@@ -6552,14 +6640,14 @@ EOF\n   echo \"$ac_t\"\"yes\" 1>&6\n   \n echo $ac_n \"checking for library containing RegOpenKeyExA\"\"... $ac_c\" 1>&6\n-echo \"configure:6556: checking for library containing RegOpenKeyExA\" >&5\n+echo \"configure:6644: checking for library containing RegOpenKeyExA\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_search_RegOpenKeyExA'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_func_search_save_LIBS=\"$LIBS\"\n ac_cv_search_RegOpenKeyExA=\"no\"\n cat > conftest.$ac_ext <<EOF\n-#line 6563 \"configure\"\n+#line 6651 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -6570,7 +6658,7 @@ int main() {\n RegOpenKeyExA()\n ; return 0; }\n EOF\n-if { (eval echo configure:6574: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6662: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_search_RegOpenKeyExA=\"none required\"\n else\n@@ -6581,7 +6669,7 @@ rm -f conftest*\n test \"$ac_cv_search_RegOpenKeyExA\" = \"no\" && for i in advapi32; do\n LIBS=\"-l$i  $ac_func_search_save_LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 6585 \"configure\"\n+#line 6673 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -6592,7 +6680,7 @@ int main() {\n RegOpenKeyExA()\n ; return 0; }\n EOF\n-if { (eval echo configure:6596: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6684: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_search_RegOpenKeyExA=\"-l$i\"\n break\n@@ -6634,7 +6722,7 @@ esac\n \n if test \"x$enable_win32_registry\" != xno; then\n   echo $ac_n \"checking registry key on windows hosts\"\"... $ac_c\" 1>&6\n-echo \"configure:6638: checking registry key on windows hosts\" >&5\n+echo \"configure:6726: checking registry key on windows hosts\" >&5\n   cat >> confdefs.h <<EOF\n #define WIN32_REGISTRY_KEY \"$gcc_cv_win32_registry_key\"\n EOF\n@@ -6817,7 +6905,7 @@ fi\n \n # Figure out what assembler we will be using.\n echo $ac_n \"checking what assembler to use\"\"... $ac_c\" 1>&6\n-echo \"configure:6821: checking what assembler to use\" >&5\n+echo \"configure:6909: checking what assembler to use\" >&5\n gcc_cv_as=\n gcc_cv_gas_major_version=\n gcc_cv_gas_minor_version=\n@@ -6902,7 +6990,7 @@ fi\n \n # Figure out what nm we will be using.\n echo $ac_n \"checking what nm to use\"\"... $ac_c\" 1>&6\n-echo \"configure:6906: checking what nm to use\" >&5\n+echo \"configure:6994: checking what nm to use\" >&5\n if test -x nm$host_exeext; then\n \tgcc_cv_nm=./nm$host_exeext\n elif test x$host = x$target; then\n@@ -6913,7 +7001,7 @@ echo \"$ac_t\"\"$gcc_cv_nm\" 1>&6\n \n # Figure out what assembler alignment features are present.\n echo $ac_n \"checking assembler alignment features\"\"... $ac_c\" 1>&6\n-echo \"configure:6917: checking assembler alignment features\" >&5\n+echo \"configure:7005: checking assembler alignment features\" >&5\n gcc_cv_as_alignment_features=none\n if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n \t# Gas version 2.6 and later support for .balign and .p2align.\n@@ -6961,7 +7049,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_alignment_features\" 1>&6\n \n echo $ac_n \"checking assembler subsection support\"\"... $ac_c\" 1>&6\n-echo \"configure:6965: checking assembler subsection support\" >&5\n+echo \"configure:7053: checking assembler subsection support\" >&5\n gcc_cv_as_subsections=no\n if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n   if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 9 -o \"$gcc_cv_gas_major_version\" -gt 2 && grep 'obj_format = elf' ../gas/Makefile > /dev/null; then\n@@ -7001,7 +7089,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_subsections\" 1>&6\n \n echo $ac_n \"checking assembler weak support\"\"... $ac_c\" 1>&6\n-echo \"configure:7005: checking assembler weak support\" >&5\n+echo \"configure:7093: checking assembler weak support\" >&5\n gcc_cv_as_weak=no\n if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n   if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 2 -o \"$gcc_cv_gas_major_version\" -gt 2; then\n@@ -7024,7 +7112,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_weak\" 1>&6\n \n echo $ac_n \"checking assembler hidden support\"\"... $ac_c\" 1>&6\n-echo \"configure:7028: checking assembler hidden support\" >&5\n+echo \"configure:7116: checking assembler hidden support\" >&5\n gcc_cv_as_hidden=no\n if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n   if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 10 -o \"$gcc_cv_gas_major_version\" -gt 2 && grep 'obj_format = elf' ../gas/Makefile > /dev/null; then\n@@ -7048,7 +7136,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_hidden\" 1>&6\n \n echo $ac_n \"checking assembler leb128 support\"\"... $ac_c\" 1>&6\n-echo \"configure:7052: checking assembler leb128 support\" >&5\n+echo \"configure:7140: checking assembler leb128 support\" >&5\n gcc_cv_as_leb128=no\n if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n   if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 11 -o \"$gcc_cv_gas_major_version\" -gt 2 && grep 'obj_format = elf' ../gas/Makefile > /dev/null; then\n@@ -7093,7 +7181,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_leb128\" 1>&6\n \n echo $ac_n \"checking assembler eh_frame optimization\"\"... $ac_c\" 1>&6\n-echo \"configure:7097: checking assembler eh_frame optimization\" >&5\n+echo \"configure:7185: checking assembler eh_frame optimization\" >&5\n gcc_cv_as_eh_frame=no\n if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n   if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 12 -o \"$gcc_cv_gas_major_version\" -gt 2 && grep 'obj_format = elf' ../gas/Makefile > /dev/null; then\n@@ -7174,7 +7262,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_eh_frame\" 1>&6\n \n echo $ac_n \"checking assembler section merging support\"\"... $ac_c\" 1>&6\n-echo \"configure:7178: checking assembler section merging support\" >&5\n+echo \"configure:7266: checking assembler section merging support\" >&5\n gcc_cv_as_shf_merge=no\n if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n   if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 12 -o \"$gcc_cv_gas_major_version\" -gt 2 && grep 'obj_format = elf' ../gas/Makefile > /dev/null; then\n@@ -7199,7 +7287,7 @@ echo \"$ac_t\"\"$gcc_cv_as_shf_merge\" 1>&6\n case \"$target\" in \n   sparc*-*-*)\n     echo $ac_n \"checking assembler .register pseudo-op support\"\"... $ac_c\" 1>&6\n-echo \"configure:7203: checking assembler .register pseudo-op support\" >&5\n+echo \"configure:7291: checking assembler .register pseudo-op support\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_register_pseudo_op'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7227,7 +7315,7 @@ EOF\n     fi\n \n     echo $ac_n \"checking assembler supports -relax\"\"... $ac_c\" 1>&6\n-echo \"configure:7231: checking assembler supports -relax\" >&5\n+echo \"configure:7319: checking assembler supports -relax\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_relax_opt'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7257,7 +7345,7 @@ EOF\n     case \"$tm_file\" in\n     *64*)\n \techo $ac_n \"checking for 64 bit support in assembler ($gcc_cv_as)\"\"... $ac_c\" 1>&6\n-echo \"configure:7261: checking for 64 bit support in assembler ($gcc_cv_as)\" >&5\n+echo \"configure:7349: checking for 64 bit support in assembler ($gcc_cv_as)\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_flags64'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7302,7 +7390,7 @@ EOF\n \n     if test \"x$gcc_cv_as_flags64\" != xno; then\n \techo $ac_n \"checking for assembler offsetable %lo() support\"\"... $ac_c\" 1>&6\n-echo \"configure:7306: checking for assembler offsetable %lo() support\" >&5\n+echo \"configure:7394: checking for assembler offsetable %lo() support\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_offsetable_lo10'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7342,7 +7430,7 @@ EOF\n \n   i[34567]86-*-*)\n     echo $ac_n \"checking assembler instructions\"\"... $ac_c\" 1>&6\n-echo \"configure:7346: checking assembler instructions\" >&5\n+echo \"configure:7434: checking assembler instructions\" >&5\n     gcc_cv_as_instructions=\n     if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n       if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 9 -o \"$gcc_cv_gas_major_version\" -gt 2; then\n@@ -7371,7 +7459,7 @@ EOF\n esac\n \n echo $ac_n \"checking assembler dwarf2 debug_line support\"\"... $ac_c\" 1>&6\n-echo \"configure:7375: checking assembler dwarf2 debug_line support\" >&5\n+echo \"configure:7463: checking assembler dwarf2 debug_line support\" >&5\n gcc_cv_as_dwarf2_debug_line=no\n # ??? Not all targets support dwarf2 debug_line, even within a version\n # of gas.  Moreover, we need to emit a valid instruction to trigger any\n@@ -7563,7 +7651,7 @@ fi\n \n \n echo $ac_n \"checking whether to enable maintainer-specific portions of Makefiles\"\"... $ac_c\" 1>&6\n-echo \"configure:7567: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n+echo \"configure:7655: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n     # Check whether --enable-maintainer-mode or --disable-maintainer-mode was given.\n if test \"${enable_maintainer_mode+set}\" = set; then\n   enableval=\"$enable_maintainer_mode\"\n@@ -8074,7 +8162,8 @@ s%@RANLIB@%$RANLIB%g\n s%@INSTALL@%$INSTALL%g\n s%@INSTALL_PROGRAM@%$INSTALL_PROGRAM%g\n s%@INSTALL_DATA@%$INSTALL_DATA%g\n-s%@have_gnat@%$have_gnat%g\n+s%@GNATBIND@%$GNATBIND%g\n+s%@ADAC@%$ADAC%g\n s%@have_mktemp_command@%$have_mktemp_command%g\n s%@MAKEINFO@%$MAKEINFO%g\n s%@BUILD_INFO@%$BUILD_INFO%g"}, {"sha": "588da5c51734e2dbd77c4b44612bf890fac6f5e3", "filename": "gcc/configure.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f28219a6b5f2ee69aea599a76d15c899d8a8c3/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=67f28219a6b5f2ee69aea599a76d15c899d8a8c3", "patch": "@@ -469,7 +469,7 @@ gcc_AC_C_COMPILE_ENDIAN\n gcc_AC_C_FLOAT_FORMAT\n \n # See if GNAT has been installed\n-AC_CHECK_PROG(have_gnat, gnatbind, yes, no)\n+gcc_AC_PROG_GNAT\n \n # See if we have the mktemp command.\n AC_CHECK_PROG(have_mktemp_command, mktemp, yes, no)"}]}