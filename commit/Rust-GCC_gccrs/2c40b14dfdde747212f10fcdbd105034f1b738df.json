{"sha": "2c40b14dfdde747212f10fcdbd105034f1b738df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM0MGIxNGRmZGRlNzQ3MjEyZjEwZmNkYmQxMDUwMzRmMWI3MzhkZg==", "commit": {"author": {"name": "Steve Ellcey", "email": "sellcey@imgtec.com", "date": "2015-10-23T15:56:15Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2015-10-23T15:56:15Z"}, "message": "re PR rtl-optimization/67736 (Wrong optimization with -fexpensive-optimizations on mips64el)\n\n2015-10-23  Steve Ellcey  <sellcey@imgtec.com>\n\t    Andrew Pinski  <apinski@cavium.com>\n\n\tPR rtl-optimization/67736\n\t* combine.c (simplify_comparison): Use gen_lowpart_or_truncate instead\n\tof gen_lowpart.\n\nCo-Authored-By: Andrew Pinski <apinski@cavium.com>\n\nFrom-SVN: r229259", "tree": {"sha": "0dabf81de1be9e8e083e3b8ea883873cdb7d278c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dabf81de1be9e8e083e3b8ea883873cdb7d278c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c40b14dfdde747212f10fcdbd105034f1b738df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c40b14dfdde747212f10fcdbd105034f1b738df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c40b14dfdde747212f10fcdbd105034f1b738df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c40b14dfdde747212f10fcdbd105034f1b738df/comments", "author": null, "committer": null, "parents": [{"sha": "f819b3b278609360242d969027031a9a9381edeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f819b3b278609360242d969027031a9a9381edeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f819b3b278609360242d969027031a9a9381edeb"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "25e40632f6c22a4bab9bb88b859db840065601c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c40b14dfdde747212f10fcdbd105034f1b738df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c40b14dfdde747212f10fcdbd105034f1b738df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c40b14dfdde747212f10fcdbd105034f1b738df", "patch": "@@ -1,3 +1,10 @@\n+2015-10-23  Steve Ellcey  <sellcey@imgtec.com>\n+\t    Andrew Pinski  <apinski@cavium.com>\n+\n+\tPR rtl-optimization/67736\n+\t* combine.c (simplify_comparison): Use gen_lowpart_or_truncate instead\n+\tof gen_lowpart.\n+\n 2015-10-23  Ilya Enkovich  <enkovich.gnu@gmail.com>\n \n \tPR middle-end/68066"}, {"sha": "f0265d72c24719acb669de5aa835ced77a9d4e3c", "filename": "gcc/combine.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c40b14dfdde747212f10fcdbd105034f1b738df/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c40b14dfdde747212f10fcdbd105034f1b738df/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=2c40b14dfdde747212f10fcdbd105034f1b738df", "patch": "@@ -11530,8 +11530,8 @@ simplify_comparison (enum rtx_code code, rtx *pop0, rtx *pop1)\n \t\t tmode != GET_MODE (op0); tmode = GET_MODE_WIDER_MODE (tmode))\n \t      if ((unsigned HOST_WIDE_INT) c0 == GET_MODE_MASK (tmode))\n \t\t{\n-\t\t  op0 = gen_lowpart (tmode, inner_op0);\n-\t\t  op1 = gen_lowpart (tmode, inner_op1);\n+\t\t  op0 = gen_lowpart_or_truncate (tmode, inner_op0);\n+\t\t  op1 = gen_lowpart_or_truncate (tmode, inner_op1);\n \t\t  code = unsigned_condition (code);\n \t\t  changed = 1;\n \t\t  break;\n@@ -12049,12 +12049,9 @@ simplify_comparison (enum rtx_code code, rtx *pop0, rtx *pop1)\n \t\t\t\t   & GET_MODE_MASK (mode))\n \t\t\t\t  + 1)) >= 0\n \t      && const_op >> i == 0\n-\t      && (tmode = mode_for_size (i, MODE_INT, 1)) != BLKmode\n-\t      && (TRULY_NOOP_TRUNCATION_MODES_P (tmode, GET_MODE (op0))\n-\t\t  || (REG_P (XEXP (op0, 0))\n-\t\t      && reg_truncated_to_mode (tmode, XEXP (op0, 0)))))\n+\t      && (tmode = mode_for_size (i, MODE_INT, 1)) != BLKmode)\n \t    {\n-\t      op0 = gen_lowpart (tmode, XEXP (op0, 0));\n+\t      op0 = gen_lowpart_or_truncate (tmode, XEXP (op0, 0));\n \t      continue;\n \t    }\n "}]}