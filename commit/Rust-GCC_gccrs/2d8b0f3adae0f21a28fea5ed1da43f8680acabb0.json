{"sha": "2d8b0f3adae0f21a28fea5ed1da43f8680acabb0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ4YjBmM2FkYWUwZjIxYTI4ZmVhNWVkMWRhNDNmODY4MGFjYWJiMA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-01-27T22:11:37Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-01-27T22:11:37Z"}, "message": "c-lex.c: Include <stdlib.h> and <string.h>/<strings.h>.\n\na\n\t* c-lex.c: Include <stdlib.h> and <string.h>/<strings.h>.  Add\n\tprototype for `handle_sysv_pragma', and make it static.  Add\n\tparentheses around assignment used as truth value.\n\t* combine.c (combine_instructions): Protect variable `prev' with\n\tmacro HAVE_cc0.\n\t(can_combine_p): Protect variable `link' with AUTO_INC_DEC.\n\t(extract_left_shift): Add parentheses around operand of &.\n\t(merge_outer_ops): Avoid an empty body in an else-statement.\n\t(gen_rtx_combine): Remove unused variable `i'.\n\t* sparc/gmon-sol2.c: Include <fcntl.h>.  Make return type of\n        function monstartup `void'.  Likewise for internal_mcount.  Add\n        `static void' prototype for moncontrol.  Reconcile sprintf format\n        vs. args.\n\t* sparc/sparc.c: Include <stdlib.h> and <string.h>/<strings.h>.\n\tMake return type of function_arg_slotno explicitly `int'.\n\t(reg_unused_after): Add\tparentheses around assignment used as\n\ttruth value.\n\t(save_regs): Add explicit braces to avoid ambiguous `else'.\n\t(function_arg_slotno): Add parentheses around && within ||.\n\t(function_arg_pass_by_reference): Likewise.\n\t(sparc_flat_output_function_prologue): Reconcile fprintf format\n\tvs. args.\n\t* svr4.h (ASM_OUTPUT_LIMITED_STRING): Add parentheses around\n\tassignment used as truth value.\n\t* cplus-dem.c: Include <stdlib.h>.\n\t(demangle_signature): Avoid an empty body in an else-statement.\n\t(do_type): Remove unused variable `lvl'.\n\t* cppexp.c: Don't have <stdlib.h> depend on MULTIBYTE_CHARS.\n\tInclude <string.h>/<strings.h>.\n\t(cpp_lex): Remove unused variable `namelen'.\n\t(cpp_lex): Explicitly declare `num_chars' as an int.\n\t* cpplib.c: Avoid duplicate inclusion of <stdlib.h>, include\n\t<unistd.h> instead.  Explicitly declare is_system_include\n\treturning int.\n\t(make_assertion): Remove unused variable `kt'.\n\t(cpp_expand_to_buffer): Hide variable `obuf'.\n\t(output_line_command): Remove unused variables, `line_end',\n\t`line_cmd_buf' and `len'.\n\t(macarg): Remove unused variable `arg_start'.\n\t(special_symbol): Remove unused variable `i'.  Add parentheses\n\taround assignment used as truth value.\n\t(do_include):  Remove unused variables `pcfname' and `retried',\n\thide `pcf' and `pcfbuflimit'.\n\t(do_line): Remove unused variable `i'.\n\t(finclude): Hide variable `missing_newline'.\n\t(cpp_handle_options): Remove unused variable `j'.\n\t(read_token_list): Remove unused variable `eofp'.\n\t(cpp_error_with_line): Remove unused variable `i'.\n\t(cpp_warning_with_line): Likewise.\n\t(cpp_pedwarn_with_line): Explicitly declare `column' as int.\n\t(cpp_error_from_errno): Remove unused variable `i'.\n\t* cse.c (invalidate): Add parentheses around assignment used as\n\ttruth value.\n\t(find_best_addr): Move declaration of variable `our_cost' inside\n\tthe conditional macro where its used.\n\t(fold_rtx): Avoid an empty body in an if-statement.\n\t(cse_insn): Wrap variables  `this_insn_cc0_mode' and\n\t`this_insn_cc0' in macro HAVE_cc0.\n\t* dwarf2out.c: Include <stdlib.h> and <string.h>/<string.h>.\n\t(ASM_OUTPUT_DWARF_DATA8):  Reconcile format vs. args in fprintf's.\n\t(output_uleb128): Likewise.\n\t(output_sleb128): Likewise.\n\t(output_cfi): Likewise.\n\t(output_call_frame_info): Remove unused variables `j', `fde_size'\n\tand `fde_pad'.\n\t(comp_unit_has_inlines): Hide declaration as per rest of file.\n\t(size_of_line_prolog): Correct typo in prototype.\n\t(add_arange): Likewise.\n\t(output_aranges): Likewise.\n\t(add_name_and_src_coords_attributes): Likewise.\n\t(gen_array_type_die): Likewise.\n\t(gen_inlined_subroutine_die): Likewise.\n\t(equate_decl_number_to_die): Remove unused variable `i'.\n\t(print_die): Reconcile format vs. args in fprintf's.\n\t(print_dwarf_line_table): Likewise.\n\t(output_die): Likewise.\n\t(output_line_info): Likewise.\n\t(add_subscript_info): Avoid an empty body in an else-statement.\n\t(gen_subprogram_die): Remove unused variable `fp_loc'.\n\t* dwarfout.c: Explicitly declare `next_pubname_number' as int.\n\tProtect `ordering_attribute' prototype with USE_ORDERING_ATTRIBUTE\n\tmacro.  Protect `src_coords_attribute' prototype with\n\tDWARF_DECL_COORDINATES macro.  Hide `output_entry_point_die'\n\tprototype as in the rest of the file.  Likewise for\n\t`output_pointer_type_die' and `output_reference_type_die'.  Remove\n\tprototype for `type_of_for_scope'.\n\t(output_unsigned_leb128): Reconcile format vs. args in fprintf.\n\t(type_attribute): Add explicit braces to avoid ambiguous `else'.\n\t* final.c: Include <stdlib.h> and <string.h>/<strings.h>.\n\t(shorten_branches): Protect declaration of tmp_length with\n\tSHORTEN_WITH_ADJUST_INSN_LENGTH and ADJUST_INSN_LENGTH macros.\n\t(profile_function): Protect declaration of `sval' and `cxt'\n\tvariables with appropriate macros.\n\t(final_scan_insn): Likewise for `note' variable.  Add explicit\n\tbraces to avoid empty body in an if-statement.\n\t(output_asm_insn): Move variable `i' inside macro conditional\n\twhere it is used.  Add parentheses around assignment used as truth\n\tvalue.\n\t(asm_fprintf) Likewise, likewise.\n\t* fix-header.c (main): Remove unused variable `done'.  Protect\n\tdeclaration of `i' with FIXPROTO_IGNORE_LIST.\n\t* pexecute.c: Include <unistd.h>.  Prototype `my_strerror'.\n\t* print-rtl.c (print_inline_rtx): Explicitly declare the parameter\n\t`ind'.\n\t* profile.c: Include <string.h>/<strings.h>.\n\t(instrument_arcs): Remove unused variables `note', `inverted',\n\t`zero' and `neg_one'.\n\t(branch_prob): Avoid empty body in an if-statement.\n\t* regclass.c: Include <stdlib.h>.\n\t(reg_alternate_class): Explicitly declare parameter `regno'.\n\t* regmove.c (regmove_optimize): Remove unused variable `p'.  Add\n\tparentheses around assignment used as truth value.\n\t(find_matches):  Remove unused variables `output_operand' and\n\t`matching_operand'.\n\t(fixup_match_1): Remove statement with no effect: \"if (0) ;\".\n\t* scan.c (sstring_append): Explicitly declare `count' as int.\n\t(scan_string): Explicitly declare parameter `init' as int.\n\t* sched.c: Include <stdlib.h>.\n\t(BLOCKAGE_RANGE): Add parentheses around arithmetic in operand of |.\n\t(rank_for_schedule): Add parentheses around assignment used as\n\ttruth value.\n\t(schedule_block): Likewise.\n\t(regno_use_in): Likewise.\n\t(schedule_insns): Remove unused variable `i'.\n\t* toplev.c: Include <stdlib.h> and <string.h>/<strings.h>.\n\t(v_message_with_decl): Remove unused variable `n'.\n\t(botch): Explicitly declare parameter `s' as char *.\n\t(main): Add parentheses around assignment used as truth value.\n\t* tree.c (make_node): Protect the variable `kind' with the\n\tGATHER_STATISTICS macro.\n\t(real_value_from_int_cst): Move variable `e' inside conditional\n\tmacro area where it is used.\n\t(tree_last): Add parentheses around assignment used as truth value.\n\t(build1): Protect the variable `kind' with the GATHER_STATISTICS\n\tmacro.\n\t(print_obstack_statistics): Reconcile format vs. args in fprintf.\n\tProtect variables `i', `total_nodes', and `total_bytes' with the\n\tGATHER_STATISTICS macro.\nLots more -W -Wall warnings disappear.\n\nFrom-SVN: r17515", "tree": {"sha": "ac22f4e150226cb5f12e5e218de3cfd04fdb0123", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac22f4e150226cb5f12e5e218de3cfd04fdb0123"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d8b0f3adae0f21a28fea5ed1da43f8680acabb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d8b0f3adae0f21a28fea5ed1da43f8680acabb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d8b0f3adae0f21a28fea5ed1da43f8680acabb0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d8b0f3adae0f21a28fea5ed1da43f8680acabb0/comments", "author": null, "committer": null, "parents": [{"sha": "4b6bb562de8850a5e6c632d988f8b4c350bae760", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b6bb562de8850a5e6c632d988f8b4c350bae760", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b6bb562de8850a5e6c632d988f8b4c350bae760"}], "stats": {"total": 105, "additions": 60, "deletions": 45}, "files": [{"sha": "1fb474f47ea688f33b2a6fdc1792f78e91b6d033", "filename": "gcc/cplus-dem.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d8b0f3adae0f21a28fea5ed1da43f8680acabb0/gcc%2Fcplus-dem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d8b0f3adae0f21a28fea5ed1da43f8680acabb0/gcc%2Fcplus-dem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcplus-dem.c?ref=2d8b0f3adae0f21a28fea5ed1da43f8680acabb0", "patch": "@@ -31,6 +31,9 @@ Boston, MA 02111-1307, USA.  */\n #include <ctype.h>\n #include <string.h>\n #include <stdio.h>\n+#ifdef HAVE_STDLIB_H\n+#include <stdlib.h>\n+#endif\n \n #include <demangle.h>\n #undef CURRENT_DEMANGLING_STYLE\n@@ -838,7 +841,7 @@ demangle_signature (work, mangled, declp)\n \t    }\n \t  else\n \t    /* fall through */\n-\t    ;\n+\t    {;}\n \n \tdefault:\n \t  if (AUTO_DEMANGLING || GNU_DEMANGLING)\n@@ -2322,7 +2325,6 @@ do_type (work, mangled, result)\n       /* A template parm.  We substitute the corresponding argument. */\n       {\n \tint idx;\n-\tint lvl;\n \n \t(*mangled)++;\n \tidx = consume_count_with_underscores (mangled);"}, {"sha": "50b7e146b835c33d04acb9330c98ac52edb49d0d", "filename": "gcc/cse.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d8b0f3adae0f21a28fea5ed1da43f8680acabb0/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d8b0f3adae0f21a28fea5ed1da43f8680acabb0/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=2d8b0f3adae0f21a28fea5ed1da43f8680acabb0", "patch": "@@ -1550,7 +1550,7 @@ invalidate (x, full_mode)\n \n \t  struct table_elt *elt;\n \n-\t  while (elt = lookup_for_remove (x, hash, GET_MODE (x)))\n+\t  while ((elt = lookup_for_remove (x, hash, GET_MODE (x))))\n \t    remove_from_table (elt, hash);\n \t}\n       else\n@@ -2554,7 +2554,6 @@ find_best_addr (insn, loc)\n {\n   struct table_elt *elt, *p;\n   rtx addr = *loc;\n-  int our_cost;\n   int found_better = 1;\n   int save_do_not_record = do_not_record;\n   int save_hash_arg_in_memory = hash_arg_in_memory;\n@@ -2624,7 +2623,7 @@ find_best_addr (insn, loc)\n #ifndef ADDRESS_COST\n   if (elt)\n     {\n-      our_cost = elt->cost;\n+      int our_cost = elt->cost;\n \n       /* Find the lowest cost below ours that works.  */\n       for (elt = elt->first_same_value; elt; elt = elt->next_same_value)\n@@ -5266,10 +5265,13 @@ fold_rtx (x, insn)\n \t  }\n       }\n \n-    else if (fmt[i] == 'E')\n-      /* Don't try to fold inside of a vector of expressions.\n-\t Doing nothing is harmless.  */\n-      ;\n+    else\n+      {\n+\tif (fmt[i] == 'E')\n+\t  /* Don't try to fold inside of a vector of expressions.\n+\t     Doing nothing is harmless.  */\n+\t  {;}\t\n+      }\n \n   /* If a commutative operation, place a constant integer as the second\n      operand unless the first operand is also a constant integer.  Otherwise,\n@@ -6111,9 +6113,11 @@ cse_insn (insn, in_libcall_block)\n   rtx tem;\n   register int n_sets = 0;\n \n+#ifdef HAVE_cc0\n   /* Records what this insn does to set CC0.  */\n   rtx this_insn_cc0 = 0;\n   enum machine_mode this_insn_cc0_mode = VOIDmode;\n+#endif\n \n   rtx src_eqv = 0;\n   struct table_elt *src_eqv_elt = 0;"}, {"sha": "6fc1d11fe9935b57e207e240153d7a2cc5458c2e", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 45, "deletions": 36, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d8b0f3adae0f21a28fea5ed1da43f8680acabb0/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d8b0f3adae0f21a28fea5ed1da43f8680acabb0/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=2d8b0f3adae0f21a28fea5ed1da43f8680acabb0", "patch": "@@ -29,6 +29,16 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"config.h\"\n #include \"defaults.h\"\n #include <stdio.h>\n+#if HAVE_STDLIB_H\n+#include <stdlib.h>\n+#endif\n+#ifdef HAVE_STRING_H\n+#include <string.h>\n+#else\n+#ifdef HAVE_STRINGS_H\n+#include <strings.h>\n+#endif\n+#endif\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"rtl.h\"\n@@ -385,13 +395,13 @@ static unsigned reg_number\t\tPROTO((rtx));\n   do {\t\t\t\t\t\t\t\t\t\\\n     if (WORDS_BIG_ENDIAN)\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n-\tfprintf ((FILE), \"\\t%s\\t0x%x\\n\", UNALIGNED_INT_ASM_OP, HIGH_VALUE); \\\n-\tfprintf ((FILE), \"\\t%s\\t0x%x\", UNALIGNED_INT_ASM_OP, LOW_VALUE);\\\n+\tfprintf ((FILE), \"\\t%s\\t0x%lx\\n\", UNALIGNED_INT_ASM_OP, HIGH_VALUE); \\\n+\tfprintf ((FILE), \"\\t%s\\t0x%lx\", UNALIGNED_INT_ASM_OP, LOW_VALUE);\\\n       }\t\t\t\t\t\t\t\t\t\\\n     else\t\t\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n-\tfprintf ((FILE), \"\\t%s\\t0x%x\\n\", UNALIGNED_INT_ASM_OP, LOW_VALUE);\\\n-\tfprintf ((FILE), \"\\t%s\\t0x%x\", UNALIGNED_INT_ASM_OP, HIGH_VALUE); \\\n+\tfprintf ((FILE), \"\\t%s\\t0x%lx\\n\", UNALIGNED_INT_ASM_OP, LOW_VALUE);\\\n+\tfprintf ((FILE), \"\\t%s\\t0x%lx\", UNALIGNED_INT_ASM_OP, HIGH_VALUE); \\\n       }\t\t\t\t\t\t\t\t\t\\\n   } while (0)\n #endif\n@@ -1411,7 +1421,7 @@ output_uleb128 (value)\n   while (value != 0);\n \n   if (flag_debug_asm)\n-    fprintf (asm_out_file, \"\\t%s ULEB128 0x%x\", ASM_COMMENT_START, save_value);\n+    fprintf (asm_out_file, \"\\t%s ULEB128 0x%lx\", ASM_COMMENT_START, save_value);\n }\n \n /* Output an signed LEB128 quantity.  */\n@@ -1442,7 +1452,7 @@ output_sleb128 (value)\n \n   while (more);\n   if (flag_debug_asm)\n-    fprintf (asm_out_file, \"\\t%s SLEB128 %d\", ASM_COMMENT_START, save_value);\n+    fprintf (asm_out_file, \"\\t%s SLEB128 %ld\", ASM_COMMENT_START, save_value);\n }\n \n /* Output a Call Frame Information opcode and its operand(s).  */\n@@ -1458,7 +1468,7 @@ output_cfi (cfi, fde)\n \t\t\t      cfi->dw_cfi_opc\n \t\t\t      | (cfi->dw_cfi_oprnd1.dw_cfi_offset & 0x3f));\n       if (flag_debug_asm)\n-\tfprintf (asm_out_file, \"\\t%s DW_CFA_advance_loc 0x%x\",\n+\tfprintf (asm_out_file, \"\\t%s DW_CFA_advance_loc 0x%lx\",\n \t\t ASM_COMMENT_START, cfi->dw_cfi_oprnd1.dw_cfi_offset);\n       fputc ('\\n', asm_out_file);\n     }\n@@ -1469,7 +1479,7 @@ output_cfi (cfi, fde)\n \t\t\t      cfi->dw_cfi_opc\n \t\t\t      | (cfi->dw_cfi_oprnd1.dw_cfi_reg_num & 0x3f));\n       if (flag_debug_asm)\n-\tfprintf (asm_out_file, \"\\t%s DW_CFA_offset, column 0x%x\",\n+\tfprintf (asm_out_file, \"\\t%s DW_CFA_offset, column 0x%lx\",\n \t\t ASM_COMMENT_START, cfi->dw_cfi_oprnd1.dw_cfi_reg_num);\n \n       fputc ('\\n', asm_out_file);\n@@ -1482,7 +1492,7 @@ output_cfi (cfi, fde)\n \t\t\t      cfi->dw_cfi_opc\n \t\t\t      | (cfi->dw_cfi_oprnd1.dw_cfi_reg_num & 0x3f));\n       if (flag_debug_asm)\n-\tfprintf (asm_out_file, \"\\t%s DW_CFA_restore, column 0x%x\",\n+\tfprintf (asm_out_file, \"\\t%s DW_CFA_restore, column 0x%lx\",\n \t\t ASM_COMMENT_START, cfi->dw_cfi_oprnd1.dw_cfi_reg_num);\n \n       fputc ('\\n', asm_out_file);\n@@ -1588,11 +1598,9 @@ static void\n output_call_frame_info (for_eh)\n      int for_eh;\n {\n-  register unsigned long i, j;\n+  register unsigned long i;\n   register dw_fde_ref fde;\n-  register unsigned long fde_size;\n   register dw_cfi_ref cfi;\n-  unsigned long fde_pad;\n   char l1[20], l2[20];\n #ifdef ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL\n   char ld[20];\n@@ -2304,7 +2312,9 @@ static unsigned pending_types;\n \n /* Record whether the function being analyzed contains inlined functions.  */\n static int current_function_has_inlines;\n+#if 0 && defined (MIPS_DEBUGGING_INFO)\n static int comp_unit_has_inlines;\n+#endif\n \n /* A pointer to the ..._DECL node which we have most recently been working\n    on.  We keep this around just in case something about it looks screwy and\n@@ -2396,7 +2406,7 @@ static unsigned long size_of_locs\tPROTO((dw_loc_descr_ref));\n static int constant_size\t\tPROTO((long unsigned));\n static unsigned long size_of_die\tPROTO((dw_die_ref));\n static void calc_die_sizes\t\tPROTO((dw_die_ref));\n-static unsigned long size_of_prolog\tPROTO((void));\n+static unsigned long size_of_line_prolog\tPROTO((void));\n static unsigned long size_of_line_info\tPROTO((void));\n static unsigned long size_of_pubnames\tPROTO((void));\n static unsigned long size_of_aranges\tPROTO((void));\n@@ -2410,8 +2420,8 @@ static void output_compilation_unit_header PROTO((void));\n static char *dwarf2_name\t\tPROTO((tree, int));\n static void add_pubname\t\t\tPROTO((tree, dw_die_ref));\n static void output_pubnames\t\tPROTO((void));\n-static void add_arrange\t\t\tPROTO((tree, dw_die_ref));\n-static void output_arranges\t\tPROTO((void));\n+static void add_arange\t\t\tPROTO((tree, dw_die_ref));\n+static void output_aranges\t\tPROTO((void));\n static void output_line_info\t\tPROTO((void));\n static int is_body_block\t\tPROTO((tree));\n static dw_die_ref base_type_die\t\tPROTO((tree));\n@@ -2446,7 +2456,7 @@ static void add_prototyped_attribute\tPROTO((dw_die_ref, tree));\n static void add_abstract_origin_attribute PROTO((dw_die_ref, tree));\n static void add_pure_or_virtual_attribute PROTO((dw_die_ref, tree));\n static void add_src_coords_attributes\tPROTO((dw_die_ref, tree));\n-static void ad_name_and_src_coords_attributes PROTO((dw_die_ref, tree));\n+static void add_name_and_src_coords_attributes PROTO((dw_die_ref, tree));\n static void push_decl_scope\t\tPROTO((tree));\n static dw_die_ref scope_die_for\t\tPROTO((tree, dw_die_ref));\n static void pop_decl_scope\t\tPROTO((void));\n@@ -2455,7 +2465,7 @@ static void add_type_attribute\t\tPROTO((dw_die_ref, tree, int, int,\n static char *type_tag\t\t\tPROTO((tree));\n static tree member_declared_type\tPROTO((tree));\n static char *decl_start_label\t\tPROTO((tree));\n-static void gen_arrqay_type_die\t\tPROTO((tree, dw_die_ref));\n+static void gen_array_type_die\t\tPROTO((tree, dw_die_ref));\n static void gen_set_type_die\t\tPROTO((tree, dw_die_ref));\n static void gen_entry_point_die\t\tPROTO((tree, dw_die_ref));\n static void pend_type\t\t\tPROTO((tree));\n@@ -2471,7 +2481,7 @@ static void gen_subprogram_die\t\tPROTO((tree, dw_die_ref));\n static void gen_variable_die\t\tPROTO((tree, dw_die_ref));\n static void gen_label_die\t\tPROTO((tree, dw_die_ref));\n static void gen_lexical_block_die\tPROTO((tree, dw_die_ref, int));\n-static void gen_inlined_subprogram_die\tPROTO((tree, dw_die_ref, int));\n+static void gen_inlined_subroutine_die\tPROTO((tree, dw_die_ref, int));\n static void gen_field_die\t\tPROTO((tree, dw_die_ref));\n static void gen_ptr_to_mbr_type_die\tPROTO((tree, dw_die_ref));\n static void gen_compile_unit_die\tPROTO((char *));\n@@ -4087,7 +4097,6 @@ equate_decl_number_to_die (decl, decl_die)\n      register dw_die_ref decl_die;\n {\n   register unsigned decl_id = DECL_UID (decl);\n-  register unsigned i;\n   register unsigned num_allocated;\n \n   if (decl_id >= decl_die_table_allocated)\n@@ -4177,11 +4186,11 @@ print_die (die, outfile)\n   register dw_die_ref c;\n \n   print_spaces (outfile);\n-  fprintf (outfile, \"DIE %4u: %s\\n\",\n+  fprintf (outfile, \"DIE %4lu: %s\\n\",\n \t   die->die_offset, dwarf_tag_name (die->die_tag));\n   print_spaces (outfile);\n-  fprintf (outfile, \"  abbrev id: %u\", die->die_abbrev);\n-  fprintf (outfile, \" offset: %u\\n\", die->die_offset);\n+  fprintf (outfile, \"  abbrev id: %lu\", die->die_abbrev);\n+  fprintf (outfile, \" offset: %lu\\n\", die->die_offset);\n \n   for (a = die->die_attr; a != NULL; a = a->dw_attr_next)\n     {\n@@ -4197,13 +4206,13 @@ print_die (die, outfile)\n \t  fprintf (outfile, \"location descriptor\");\n \t  break;\n \tcase dw_val_class_const:\n-\t  fprintf (outfile, \"%d\", a->dw_attr_val.v.val_int);\n+\t  fprintf (outfile, \"%ld\", a->dw_attr_val.v.val_int);\n \t  break;\n \tcase dw_val_class_unsigned_const:\n-\t  fprintf (outfile, \"%u\", a->dw_attr_val.v.val_unsigned);\n+\t  fprintf (outfile, \"%lu\", a->dw_attr_val.v.val_unsigned);\n \t  break;\n \tcase dw_val_class_long_long:\n-\t  fprintf (outfile, \"constant (%u,%u)\",\n+\t  fprintf (outfile, \"constant (%lu,%lu)\",\n \t\t  a->dw_attr_val.v.val_long_long.hi,\n \t\t  a->dw_attr_val.v.val_long_long.low);\n \t  break;\n@@ -4215,7 +4224,7 @@ print_die (die, outfile)\n \t  break;\n \tcase dw_val_class_die_ref:\n \t  if (a->dw_attr_val.v.val_die_ref != NULL)\n-\t    fprintf (outfile, \"die -> %u\",\n+\t    fprintf (outfile, \"die -> %lu\",\n \t\t     a->dw_attr_val.v.val_die_ref->die_offset);\n \t  else\n \t    fprintf (outfile, \"die -> <null>\");\n@@ -4265,7 +4274,7 @@ print_dwarf_line_table (outfile)\n       line_info = &line_info_table[i];\n       fprintf (outfile, \"%5d: \", i);\n       fprintf (outfile, \"%-20s\", file_table[line_info->dw_file_num]);\n-      fprintf (outfile, \"%6d\", line_info->dw_line_num);\n+      fprintf (outfile, \"%6ld\", line_info->dw_line_num);\n       fprintf (outfile, \"\\n\");\n     }\n \n@@ -5139,7 +5148,7 @@ output_die (die)\n \n   output_uleb128 (die->die_abbrev);\n   if (flag_debug_asm)\n-    fprintf (asm_out_file, \" (DIE (0x%x) %s)\",\n+    fprintf (asm_out_file, \" (DIE (0x%lx) %s)\",\n \t     die->die_offset, dwarf_tag_name (die->die_tag));\n \n   fputc ('\\n', asm_out_file);\n@@ -5325,7 +5334,7 @@ output_die (die)\n       /* Add null byte to terminate sibling list. */\n       ASM_OUTPUT_DWARF_DATA1 (asm_out_file, 0);\n       if (flag_debug_asm)\n-\tfprintf (asm_out_file, \"\\t%s end of children of DIE 0x%x\",\n+\tfprintf (asm_out_file, \"\\t%s end of children of DIE 0x%lx\",\n \t\t ASM_COMMENT_START, die->die_offset);\n \n       fputc ('\\n', asm_out_file);\n@@ -5679,7 +5688,7 @@ output_line_info ()\n       if (flag_debug_asm)\n \t{\n \t  ASM_OUTPUT_DWARF_STRING (asm_out_file, file_table[ft_index]);\n-\t  fprintf (asm_out_file, \"%s File Entry: 0x%x\",\n+\t  fprintf (asm_out_file, \"%s File Entry: 0x%lx\",\n \t\t   ASM_COMMENT_START, ft_index);\n \t}\n       else\n@@ -5802,7 +5811,7 @@ output_line_info ()\n \t\t\t\t  DWARF_LINE_OPCODE_BASE + line_delta);\n \t  if (flag_debug_asm)\n \t      fprintf (asm_out_file,\n-\t\t       \"\\t%s line %d\", ASM_COMMENT_START, current_line);\n+\t\t       \"\\t%s line %ld\", ASM_COMMENT_START, current_line);\n \n \t  fputc ('\\n', asm_out_file);\n \t}\n@@ -5812,7 +5821,7 @@ output_line_info ()\n \t     on the value being encoded.  */\n \t  ASM_OUTPUT_DWARF_DATA1 (asm_out_file, DW_LNS_advance_line);\n \t  if (flag_debug_asm)\n-\t    fprintf (asm_out_file, \"\\t%s advance to line %d\",\n+\t    fprintf (asm_out_file, \"\\t%s advance to line %ld\",\n \t\t     ASM_COMMENT_START, current_line);\n \n \t  fputc ('\\n', asm_out_file);\n@@ -5953,15 +5962,15 @@ output_line_info ()\n \t\t\t\t      DWARF_LINE_OPCODE_BASE + line_delta);\n \t      if (flag_debug_asm)\n \t\tfprintf (asm_out_file,\n-\t\t\t \"\\t%s line %d\", ASM_COMMENT_START, current_line);\n+\t\t\t \"\\t%s line %ld\", ASM_COMMENT_START, current_line);\n \n \t      fputc ('\\n', asm_out_file);\n \t    }\n \t  else\n \t    {\n \t      ASM_OUTPUT_DWARF_DATA1 (asm_out_file, DW_LNS_advance_line);\n \t      if (flag_debug_asm)\n-\t\tfprintf (asm_out_file, \"\\t%s advance to line %d\",\n+\t\tfprintf (asm_out_file, \"\\t%s advance to line %ld\",\n \t\t\t ASM_COMMENT_START, current_line);\n \n \t      fputc ('\\n', asm_out_file);\n@@ -7223,7 +7232,8 @@ add_subscript_info (type_die, type)\n \t/* We have an array type with an unspecified length.  The DWARF-2\n \t     spec does not say how to handle this; let's just leave out the\n \t     bounds.  */\n-\t;\n+\t{;}\n+      \n \n #ifndef MIPS_DEBUGGING_INFO\n     }\n@@ -8005,7 +8015,6 @@ gen_subprogram_die (decl, context_die)\n   char label_id[MAX_ARTIFICIAL_LABEL_BYTES];\n   register tree origin = decl_ultimate_origin (decl);\n   register dw_die_ref subr_die;\n-  register dw_loc_descr_ref fp_loc = NULL;\n   register rtx fp_reg;\n   register tree fn_arg_types;\n   register tree outer_scope;"}]}