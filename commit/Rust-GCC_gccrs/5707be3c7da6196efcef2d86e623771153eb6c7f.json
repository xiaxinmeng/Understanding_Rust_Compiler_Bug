{"sha": "5707be3c7da6196efcef2d86e623771153eb6c7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTcwN2JlM2M3ZGE2MTk2ZWZjZWYyZDg2ZTYyMzc3MTE1M2ViNmM3Zg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2018-04-19T17:05:39Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2018-04-19T17:05:39Z"}, "message": "libgcc/CET: Skip signal frames when unwinding shadow stack\n\nWhen -fcf-protection -mcet is used, I got\n\nFAIL: g++.dg/eh/sighandle.C\n\n(gdb) bt\n #0  _Unwind_RaiseException (exc=exc@entry=0x416ed0)\n    at /export/gnu/import/git/sources/gcc/libgcc/unwind.inc:140\n #1  0x00007ffff7d9936b in __cxxabiv1::__cxa_throw (obj=<optimized out>,\n    tinfo=0x403dd0 <typeinfo for int@@CXXABI_1.3>, dest=0x0)\n    at /export/gnu/import/git/sources/gcc/libstdc++-v3/libsupc++/eh_throw.cc:90\n #2  0x0000000000401255 in sighandler (signo=11, si=0x7fffffffd6f8,\n    uc=0x7fffffffd5c0)\n    at /export/gnu/import/git/sources/gcc/gcc/testsuite/g++.dg/eh/sighandle.C:9\n #3  <signal handler called> <<<< Signal frame which isn't on shadow stack\n #4  dosegv ()\n    at /export/gnu/import/git/sources/gcc/gcc/testsuite/g++.dg/eh/sighandle.C:14\n #5  0x00000000004012e3 in main ()\n    at /export/gnu/import/git/sources/gcc/gcc/testsuite/g++.dg/eh/sighandle.C:30\n(gdb) p frames\n$6 = 5\n(gdb)\n\nframe count should be 4, not 5.  This patch skips signal frames when\nunwinding shadow stack.\n\ngcc/testsuite/\n\n\tPR libgcc/85334\n\t* g++.dg/torture/pr85334.C: New test.\n\nlibgcc/\n\n\tPR libgcc/85334\n\t* unwind-generic.h (_Unwind_Frames_Increment): New.\n\t* config/i386/shadow-stack-unwind.h (_Unwind_Frames_Increment):\n\tLikewise.\n\t* unwind.inc (_Unwind_RaiseException_Phase2): Increment frame\n\tcount with _Unwind_Frames_Increment.\n\t(_Unwind_ForcedUnwind_Phase2): Likewise.\n\nFrom-SVN: r259502", "tree": {"sha": "a43f6ec251c9c1de4fb01850c3b58f0720cb6b46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a43f6ec251c9c1de4fb01850c3b58f0720cb6b46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5707be3c7da6196efcef2d86e623771153eb6c7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5707be3c7da6196efcef2d86e623771153eb6c7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5707be3c7da6196efcef2d86e623771153eb6c7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5707be3c7da6196efcef2d86e623771153eb6c7f/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f22723f93dd662c419e810e04390cf2319d4b29f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f22723f93dd662c419e810e04390cf2319d4b29f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f22723f93dd662c419e810e04390cf2319d4b29f"}], "stats": {"total": 65, "additions": 63, "deletions": 2}, "files": [{"sha": "e7b9547c1a41502eff9a4f1dcf72dbdeb182a85c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5707be3c7da6196efcef2d86e623771153eb6c7f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5707be3c7da6196efcef2d86e623771153eb6c7f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5707be3c7da6196efcef2d86e623771153eb6c7f", "patch": "@@ -1,3 +1,8 @@\n+2018-04-19  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR libgcc/85334\n+\t* g++.dg/torture/pr85334.C: New test.\n+\n 2018-04-19  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR c++/85464 - missing location for -Wignored-qualifiers diagnostic"}, {"sha": "080978143bd5057c957feaecae4172fb3c7eb61e", "filename": "gcc/testsuite/g++.dg/torture/pr85334.C", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5707be3c7da6196efcef2d86e623771153eb6c7f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr85334.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5707be3c7da6196efcef2d86e623771153eb6c7f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr85334.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr85334.C?ref=5707be3c7da6196efcef2d86e623771153eb6c7f", "patch": "@@ -0,0 +1,38 @@\n+// { dg-do run { target { i?86-*-linux* i?86-*-gnu* x86_64-*-linux* } } }\n+// { dg-require-effective-target cet }\n+// { dg-additional-options \"-fexceptions -fnon-call-exceptions -fcf-protection -mcet\" }\n+\n+#include <signal.h>\n+#include <stdlib.h>\n+\n+void sighandler (int signo, siginfo_t * si, void * uc)\n+{\n+  throw (5);\n+}\n+\n+char * dosegv ()\n+{    \n+  * ((volatile int *)0) = 12;\n+  return 0;\n+}\n+\n+int main ()\n+{\n+  struct sigaction sa;\n+  int status;\n+\n+  sa.sa_sigaction = sighandler;\n+  sa.sa_flags = SA_SIGINFO;\n+    \n+  status = sigaction (SIGSEGV, & sa, NULL);\n+  status = sigaction (SIGBUS, & sa, NULL);\n+\n+  try {\n+    dosegv ();\n+  }\n+  catch (int x) {\n+    return (x != 5);\n+  }\n+\n+  return 1;\n+}"}, {"sha": "8a645c80e3d0e9fa6470b37d13b01fbe50bad0c5", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5707be3c7da6196efcef2d86e623771153eb6c7f/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5707be3c7da6196efcef2d86e623771153eb6c7f/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=5707be3c7da6196efcef2d86e623771153eb6c7f", "patch": "@@ -1,3 +1,13 @@\n+2018-04-19  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR libgcc/85334\n+\t* unwind-generic.h (_Unwind_Frames_Increment): New.\n+\t* config/i386/shadow-stack-unwind.h (_Unwind_Frames_Increment):\n+\tLikewise.\n+\t* unwind.inc (_Unwind_RaiseException_Phase2): Increment frame\n+\tcount with _Unwind_Frames_Increment.\n+\t(_Unwind_ForcedUnwind_Phase2): Likewise.\n+\n 2018-04-19  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR libgcc/85379"}, {"sha": "a32f3e74b52dffd092eab90cfc9dd76de0609840", "filename": "libgcc/config/i386/shadow-stack-unwind.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5707be3c7da6196efcef2d86e623771153eb6c7f/libgcc%2Fconfig%2Fi386%2Fshadow-stack-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5707be3c7da6196efcef2d86e623771153eb6c7f/libgcc%2Fconfig%2Fi386%2Fshadow-stack-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fshadow-stack-unwind.h?ref=5707be3c7da6196efcef2d86e623771153eb6c7f", "patch": "@@ -49,3 +49,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \t}\t\t\t\t\t\\\n     }\t\t\t\t\t\t\\\n     while (0)\n+\n+/* Increment frame count.  Skip signal frames.  */\n+#undef _Unwind_Frames_Increment\n+#define _Unwind_Frames_Increment(context, frames) \\\n+  if (!_Unwind_IsSignalFrame (context)) frames++"}, {"sha": "639c96f438ee2f068eb89d2ffb2b09b8600b9bf7", "filename": "libgcc/unwind-generic.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5707be3c7da6196efcef2d86e623771153eb6c7f/libgcc%2Funwind-generic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5707be3c7da6196efcef2d86e623771153eb6c7f/libgcc%2Funwind-generic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Funwind-generic.h?ref=5707be3c7da6196efcef2d86e623771153eb6c7f", "patch": "@@ -291,4 +291,7 @@ EXCEPTION_DISPOSITION _GCC_specific_handler (PEXCEPTION_RECORD, void *,\n /* Additional actions to unwind number of stack frames.  */\n #define _Unwind_Frames_Extra(frames)\n \n+/* Increment frame count.  */\n+#define _Unwind_Frames_Increment(context, frames) frames++\n+\n #endif /* unwind.h */"}, {"sha": "19a8e4f6c80f498f917306c36f9546978a3e40ad", "filename": "libgcc/unwind.inc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5707be3c7da6196efcef2d86e623771153eb6c7f/libgcc%2Funwind.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5707be3c7da6196efcef2d86e623771153eb6c7f/libgcc%2Funwind.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Funwind.inc?ref=5707be3c7da6196efcef2d86e623771153eb6c7f", "patch": "@@ -73,7 +73,7 @@ _Unwind_RaiseException_Phase2(struct _Unwind_Exception *exc,\n       gcc_assert (!match_handler);\n \n       uw_update_context (context, &fs);\n-      frames++;\n+      _Unwind_Frames_Increment (context, frames);\n     }\n \n   *frames_p = frames;\n@@ -190,7 +190,7 @@ _Unwind_ForcedUnwind_Phase2 (struct _Unwind_Exception *exc,\n       /* Update cur_context to describe the same frame as fs, and discard\n \t the previous context if necessary.  */\n       uw_advance_context (context, &fs);\n-      frames++;\n+      _Unwind_Frames_Increment (context, frames);\n     }\n \n   *frames_p = frames;"}]}