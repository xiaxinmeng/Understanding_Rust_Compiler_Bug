{"sha": "d555a90ebed1156180138ff9a1aabfa19ecc2d76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU1NWE5MGViZWQxMTU2MTgwMTM4ZmY5YTFhYWJmYTE5ZWNjMmQ3Ng==", "commit": {"author": {"name": "Mike Frysinger", "email": "vapier@gentoo.org", "date": "2012-07-31T06:38:27Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-07-31T06:38:27Z"}, "message": "md5.c (md5_finish_ctx): Declare swap_bytes.\n\n2012-07-27  Mike Frysinger  <vapier@gentoo.org>\n\n\t* md5.c (md5_finish_ctx): Declare swap_bytes.  Assign SWAP() output\n\tto swap_bytes, and then call memcpy to move it to ctx->buffer.\n\nFrom-SVN: r189996", "tree": {"sha": "1446cfb44f5752cf12ad70da36ed3b897399f60f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1446cfb44f5752cf12ad70da36ed3b897399f60f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d555a90ebed1156180138ff9a1aabfa19ecc2d76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d555a90ebed1156180138ff9a1aabfa19ecc2d76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d555a90ebed1156180138ff9a1aabfa19ecc2d76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d555a90ebed1156180138ff9a1aabfa19ecc2d76/comments", "author": {"login": "vapier", "id": 176950, "node_id": "MDQ6VXNlcjE3Njk1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vapier", "html_url": "https://github.com/vapier", "followers_url": "https://api.github.com/users/vapier/followers", "following_url": "https://api.github.com/users/vapier/following{/other_user}", "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vapier/subscriptions", "organizations_url": "https://api.github.com/users/vapier/orgs", "repos_url": "https://api.github.com/users/vapier/repos", "events_url": "https://api.github.com/users/vapier/events{/privacy}", "received_events_url": "https://api.github.com/users/vapier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b0f6b6129a973e1b2f44f2176f7e384376628404", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0f6b6129a973e1b2f44f2176f7e384376628404", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0f6b6129a973e1b2f44f2176f7e384376628404"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "6615047ad25b1dbef68d66a40249bf5768c8e1e6", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d555a90ebed1156180138ff9a1aabfa19ecc2d76/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d555a90ebed1156180138ff9a1aabfa19ecc2d76/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=d555a90ebed1156180138ff9a1aabfa19ecc2d76", "patch": "@@ -1,3 +1,8 @@\n+2012-07-31  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* md5.c (md5_finish_ctx): Declare swap_bytes.  Assign SWAP() output\n+\tto swap_bytes, and then call memcpy to move it to ctx->buffer.\n+\n 2012-07-26  Kazu Hirata  <kazu@codesourcery.com>\n \t    Sandra Loosemore  <sandra@codesourcery.com>\n "}, {"sha": "8cc0cb5fe96f43885f1564ba7e285a7315a04e5a", "filename": "libiberty/md5.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d555a90ebed1156180138ff9a1aabfa19ecc2d76/libiberty%2Fmd5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d555a90ebed1156180138ff9a1aabfa19ecc2d76/libiberty%2Fmd5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fmd5.c?ref=d555a90ebed1156180138ff9a1aabfa19ecc2d76", "patch": "@@ -103,6 +103,7 @@ md5_finish_ctx (struct md5_ctx *ctx, void *resbuf)\n {\n   /* Take yet unprocessed bytes into account.  */\n   md5_uint32 bytes = ctx->buflen;\n+  md5_uint32 swap_bytes;\n   size_t pad;\n \n   /* Now count remaining bytes.  */\n@@ -113,10 +114,13 @@ md5_finish_ctx (struct md5_ctx *ctx, void *resbuf)\n   pad = bytes >= 56 ? 64 + 56 - bytes : 56 - bytes;\n   memcpy (&ctx->buffer[bytes], fillbuf, pad);\n \n-  /* Put the 64-bit file length in *bits* at the end of the buffer.  */\n-  *(md5_uint32 *) &ctx->buffer[bytes + pad] = SWAP (ctx->total[0] << 3);\n-  *(md5_uint32 *) &ctx->buffer[bytes + pad + 4] = SWAP ((ctx->total[1] << 3) |\n-\t\t\t\t\t\t\t(ctx->total[0] >> 29));\n+  /* Put the 64-bit file length in *bits* at the end of the buffer.\n+     Use memcpy to avoid aliasing problems.  On most systems, this\n+     will be optimized away to the same code.  */\n+  swap_bytes = SWAP (ctx->total[0] << 3);\n+  memcpy (&ctx->buffer[bytes + pad], &swap_bytes, sizeof (swap_bytes));\n+  swap_bytes = SWAP ((ctx->total[1] << 3) | (ctx->total[0] >> 29));\n+  memcpy (&ctx->buffer[bytes + pad + 4], &swap_bytes, sizeof (swap_bytes));\n \n   /* Process last bytes.  */\n   md5_process_block (ctx->buffer, bytes + pad + 8, ctx);"}]}