{"sha": "33faafca375f8c5c4113b4f0628c69add6971ee6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNmYWFmY2EzNzVmOGM1YzQxMTNiNGYwNjI4YzY5YWRkNjk3MWVlNg==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2009-01-12T20:41:57Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2009-01-12T20:41:57Z"}, "message": "re PR target/29141 (static constructors beyond 64k fail)\n\n\tPR target/29141\n\t* config/avr/t-avr (LIB1ASMFUNCS): Add _tablejump_elpm.\n\t* config/avr/libgcc.S (__do_global_ctors, __do_global_dtors): Add\n\tvariant for devices with 3-byte PC.\n\t(__tablejump_elpm__) : New.\n\nFrom-SVN: r143306", "tree": {"sha": "c7a39deb7e47b8cb26126aa2186b6e53d7128969", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7a39deb7e47b8cb26126aa2186b6e53d7128969"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33faafca375f8c5c4113b4f0628c69add6971ee6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33faafca375f8c5c4113b4f0628c69add6971ee6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33faafca375f8c5c4113b4f0628c69add6971ee6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33faafca375f8c5c4113b4f0628c69add6971ee6/comments", "author": null, "committer": null, "parents": [{"sha": "634b5df5d5c0ccfaa523ca0f9a737df3c0f28372", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/634b5df5d5c0ccfaa523ca0f9a737df3c0f28372", "html_url": "https://github.com/Rust-GCC/gccrs/commit/634b5df5d5c0ccfaa523ca0f9a737df3c0f28372"}], "stats": {"total": 101, "additions": 92, "deletions": 9}, "files": [{"sha": "e3ccd7948275ced78b78d817786bc6fc2bf23042", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33faafca375f8c5c4113b4f0628c69add6971ee6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33faafca375f8c5c4113b4f0628c69add6971ee6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=33faafca375f8c5c4113b4f0628c69add6971ee6", "patch": "@@ -1,3 +1,11 @@\n+2009-01-03  Anatoly Sokolov  <aesok@post.ru>\n+\n+\tPR target/29141\n+\t* config/avr/t-avr (LIB1ASMFUNCS): Add _tablejump_elpm.\n+\t* config/avr/libgcc.S (__do_global_ctors, __do_global_dtors): Add\n+\tvariant for devices with 3-byte PC.\n+\t(__tablejump_elpm__) : New.\n+\n 2009-01-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/32041"}, {"sha": "14bd1d37a5085c809f8343fffdd088072a041325", "filename": "gcc/config/avr/libgcc.S", "status": "modified", "additions": 83, "deletions": 9, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33faafca375f8c5c4113b4f0628c69add6971ee6/gcc%2Fconfig%2Favr%2Flibgcc.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33faafca375f8c5c4113b4f0628c69add6971ee6/gcc%2Fconfig%2Favr%2Flibgcc.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Flibgcc.S?ref=33faafca375f8c5c4113b4f0628c69add6971ee6", "patch": "@@ -1,5 +1,5 @@\n /*  -*- Mode: Asm -*-  */\n-/* Copyright (C) 1998, 1999, 2000, 2007, 2008 \n+/* Copyright (C) 1998, 1999, 2000, 2007, 2008, 2009\n    Free Software Foundation, Inc.\n    Contributed by Denis Chertykov <denisc@overta.ru>\n \n@@ -793,38 +793,112 @@ __do_clear_bss:\n #ifdef L_ctors\n \t.section .init6,\"ax\",@progbits\n \t.global\t__do_global_ctors\n+#if defined(__AVR_HAVE_RAMPZ__)\n __do_global_ctors:\n \tldi\tr17, hi8(__ctors_start)\n+\tldi\tr16, hh8(__ctors_start)\n \tldi\tr28, lo8(__ctors_end)\n \tldi\tr29, hi8(__ctors_end)\n-\trjmp\t.do_global_ctors_start\n-.do_global_ctors_loop:\n+\tldi\tr20, hh8(__ctors_end)\n+\trjmp\t.L__do_global_ctors_start\n+.L__do_global_ctors_loop:\n+\tsbiw\tr28, 2\n+\tsbc     r20, __zero_reg__\n+\tmov_h\tr31, r29\n+\tmov_l\tr30, r28\n+\tout     __RAMPZ__, r20\n+\tXCALL\t__tablejump_elpm__\n+.L__do_global_ctors_start:\n+\tcpi\tr28, lo8(__ctors_start)\n+\tcpc\tr29, r17\n+\tcpc\tr20, r16\n+\tbrne\t.L__do_global_ctors_loop\n+#else\n+__do_global_ctors:\n+\tldi\tr17, hi8(__ctors_start)\n+\tldi\tr28, lo8(__ctors_end)\n+\tldi\tr29, hi8(__ctors_end)\n+\trjmp\t.L__do_global_ctors_start\n+.L__do_global_ctors_loop:\n \tsbiw\tr28, 2\n \tmov_h\tr31, r29\n \tmov_l\tr30, r28\n \tXCALL\t__tablejump__\n-.do_global_ctors_start:\n+.L__do_global_ctors_start:\n \tcpi\tr28, lo8(__ctors_start)\n \tcpc\tr29, r17\n-\tbrne\t.do_global_ctors_loop\n+\tbrne\t.L__do_global_ctors_loop\n+#endif /* defined(__AVR_HAVE_RAMPZ__) */\n #endif /* L_ctors */\n \n #ifdef L_dtors\n \t.section .fini6,\"ax\",@progbits\n \t.global\t__do_global_dtors\n+#if defined(__AVR_HAVE_RAMPZ__)\n __do_global_dtors:\n \tldi\tr17, hi8(__dtors_end)\n+\tldi\tr16, hh8(__dtors_end)\n \tldi\tr28, lo8(__dtors_start)\n \tldi\tr29, hi8(__dtors_start)\n-\trjmp\t.do_global_dtors_start\n-.do_global_dtors_loop:\n+\tldi\tr20, hh8(__dtors_start)\n+\trjmp\t.L__do_global_dtors_start\n+.L__do_global_dtors_loop:\n+\tsbiw\tr28, 2\n+\tsbc     r20, __zero_reg__\n+\tmov_h\tr31, r29\n+\tmov_l\tr30, r28\n+\tout     __RAMPZ__, r20\n+\tXCALL\t__tablejump_elpm__\n+.L__do_global_dtors_start:\n+\tcpi\tr28, lo8(__dtors_end)\n+\tcpc\tr29, r17\n+\tcpc\tr20, r16\n+\tbrne\t.L__do_global_dtors_loop\n+#else\n+__do_global_dtors:\n+\tldi\tr17, hi8(__dtors_end)\n+\tldi\tr28, lo8(__dtors_start)\n+\tldi\tr29, hi8(__dtors_start)\n+\trjmp\t.L__do_global_dtors_start\n+.L__do_global_dtors_loop:\n \tmov_h\tr31, r29\n \tmov_l\tr30, r28\n \tXCALL\t__tablejump__\n \tadiw\tr28, 2\n-.do_global_dtors_start:\n+.L__do_global_dtors_start:\n \tcpi\tr28, lo8(__dtors_end)\n \tcpc\tr29, r17\n-\tbrne\t.do_global_dtors_loop\n+\tbrne\t.L__do_global_dtors_loop\n+#endif /* defined(__AVR_HAVE_RAMPZ__) */\n #endif /* L_dtors */\n \n+#ifdef L_tablejump_elpm\n+\t.global __tablejump_elpm__\n+\t.func\t__tablejump_elpm__\n+__tablejump_elpm__:\n+#if defined (__AVR_HAVE_ELPM__)\n+#if defined (__AVR_HAVE_LPMX__)\n+\telpm\t__tmp_reg__, Z+\n+\telpm\tr31, Z\n+\tmov\tr30, __tmp_reg__\n+#if defined (__AVR_HAVE_EIJMP_EICALL__)\n+\teijmp\n+#else\n+\tijmp\n+#endif\n+\n+#else\n+\telpm\n+\tadiw\tr30, 1\n+\tpush\tr0\n+\telpm\n+\tpush\tr0\n+#if defined (__AVR_HAVE_EIJMP_EICALL__)\n+        push    __zero_reg__\n+#endif\n+\tret\n+#endif\n+#endif /* defined (__AVR_HAVE_ELPM__) */\n+\t.endfunc\n+#endif /* defined (L_tablejump_elpm) */\n+"}, {"sha": "cbb47817d6dd10b2d068b4243b2fc266a0fda484", "filename": "gcc/config/avr/t-avr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33faafca375f8c5c4113b4f0628c69add6971ee6/gcc%2Fconfig%2Favr%2Ft-avr", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33faafca375f8c5c4113b4f0628c69add6971ee6/gcc%2Fconfig%2Favr%2Ft-avr", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Ft-avr?ref=33faafca375f8c5c4113b4f0628c69add6971ee6", "patch": "@@ -14,6 +14,7 @@ LIB1ASMFUNCS = \\\n \t_exit \\\n \t_cleanup \\\n \t_tablejump \\\n+\t_tablejump_elpm \\\n \t_copy_data \\\n \t_clear_bss \\\n \t_ctors \\"}]}