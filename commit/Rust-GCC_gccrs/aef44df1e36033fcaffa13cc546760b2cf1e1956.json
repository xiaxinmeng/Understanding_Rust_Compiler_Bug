{"sha": "aef44df1e36033fcaffa13cc546760b2cf1e1956", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWVmNDRkZjFlMzYwMzNmY2FmZmExM2NjNTQ2NzYwYjJjZjFlMTk1Ng==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-11-12T13:28:05Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-11-12T13:28:05Z"}, "message": "[multiple changes]\n\n2015-11-12  Philippe Gil  <gil@adacore.com>\n\n\t* g-debpoo.adb (Print_Address): print address in hexadecimal as\n\tin previous GNAT version (without secondary stack use)\n\t(Deallocate): Deallocate calling once Unlock_Task.all when it\n\traise exception.\n\n2015-11-12  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Analyze_Subtype_Declaration): Remove redundant\n\tcopying of dimensions from parent type to subtype. This is\n\tproperly done in Analyze_Dimension.\n\t* sem_dim.adb (Analyze_Dimension_Subtype_Declaration): Add entity\n\tto error message, so that reference to entity can be formatted\n\tproperly.\n\t* opt.ads: Fix typo.\n\nFrom-SVN: r230254", "tree": {"sha": "073620240af642a7a16640c9ee91060c52751ee8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/073620240af642a7a16640c9ee91060c52751ee8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aef44df1e36033fcaffa13cc546760b2cf1e1956", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aef44df1e36033fcaffa13cc546760b2cf1e1956", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aef44df1e36033fcaffa13cc546760b2cf1e1956", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aef44df1e36033fcaffa13cc546760b2cf1e1956/comments", "author": null, "committer": null, "parents": [{"sha": "aff557c74c4bff664d8b65d68444a5e2b57bd048", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aff557c74c4bff664d8b65d68444a5e2b57bd048", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aff557c74c4bff664d8b65d68444a5e2b57bd048"}], "stats": {"total": 66, "additions": 59, "deletions": 7}, "files": [{"sha": "de1a91da2fe1acb8bb76360ab53b5eb31f9e6632", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef44df1e36033fcaffa13cc546760b2cf1e1956/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef44df1e36033fcaffa13cc546760b2cf1e1956/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=aef44df1e36033fcaffa13cc546760b2cf1e1956", "patch": "@@ -1,3 +1,20 @@\n+2015-11-12  Philippe Gil  <gil@adacore.com>\n+\n+\t* g-debpoo.adb (Print_Address): print address in hexadecimal as\n+\tin previous GNAT version (without secondary stack use)\n+\t(Deallocate): Deallocate calling once Unlock_Task.all when it\n+\traise exception.\n+\n+2015-11-12  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Analyze_Subtype_Declaration): Remove redundant\n+\tcopying of dimensions from parent type to subtype. This is\n+\tproperly done in Analyze_Dimension.\n+\t* sem_dim.adb (Analyze_Dimension_Subtype_Declaration): Add entity\n+\tto error message, so that reference to entity can be formatted\n+\tproperly.\n+\t* opt.ads: Fix typo.\n+\n 2015-11-12  Bob Duff  <duff@adacore.com>\n \n \t* impunit.adb, lib-xref.ads, restrict.ads, scos.ads, sem_attr.ads,"}, {"sha": "98243fd76c42fdc61ffc0b39f77127f12e046aff", "filename": "gcc/ada/g-debpoo.adb", "status": "modified", "additions": 35, "deletions": 2, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef44df1e36033fcaffa13cc546760b2cf1e1956/gcc%2Fada%2Fg-debpoo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef44df1e36033fcaffa13cc546760b2cf1e1956/gcc%2Fada%2Fg-debpoo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-debpoo.adb?ref=aef44df1e36033fcaffa13cc546760b2cf1e1956", "patch": "@@ -482,8 +482,34 @@ package body GNAT.Debug_Pools is\n       type My_Address is mod Memory_Size;\n       function To_My_Address is new Ada.Unchecked_Conversion\n         (System.Address, My_Address);\n+      Address_To_Print : My_Address := To_My_Address (Addr);\n+      type Hexadecimal_Element is range 0 .. 15;\n+      Hexadecimal_Characters : constant array\n+      (Hexadecimal_Element) of Character :=\n+        ('0', '1', '2', '3', '4', '5', '6', '7',\n+         '8', '9', 'A', 'B', 'C', 'D', 'E', 'F');\n+      pragma Warnings\n+        (Off, \"types for unchecked conversion have different sizes\");\n+      function To_Hexadecimal_Element is new Ada.Unchecked_Conversion\n+        (My_Address, Hexadecimal_Element);\n+      pragma Warnings\n+        (On, \"types for unchecked conversion have different sizes\");\n+      Number_Of_Hexadecimal_Characters_In_Address : constant Natural :=\n+        Standard'Address_Size / 4;\n+      type Hexadecimal_Elements_Range is\n+        range 1 .. Number_Of_Hexadecimal_Characters_In_Address;\n+      Hexadecimal_Elements : array (Hexadecimal_Elements_Range) of\n+        Hexadecimal_Element;\n    begin\n-      Put (File, My_Address'Image (To_My_Address (Addr)));\n+      for Index in Hexadecimal_Elements_Range loop\n+         Hexadecimal_Elements (Index) :=\n+           To_Hexadecimal_Element (Address_To_Print mod 16);\n+         Address_To_Print := Address_To_Print / 16;\n+      end loop;\n+      Put (File, \"0x\");\n+      for Index in reverse Hexadecimal_Elements_Range loop\n+         Put (File, Hexadecimal_Characters (Hexadecimal_Elements (Index)));\n+      end loop;\n    end Print_Address;\n \n    --------------\n@@ -1406,6 +1432,7 @@ package body GNAT.Debug_Pools is\n    is\n       pragma Unreferenced (Alignment);\n \n+      Unlock_Task_Required : Boolean := False;\n       Header   : constant Allocation_Header_Access :=\n         Header_Of (Storage_Address);\n       Valid    : Boolean;\n@@ -1414,9 +1441,11 @@ package body GNAT.Debug_Pools is\n    begin\n       <<Deallocate_Label>>\n       Lock_Task.all;\n+      Unlock_Task_Required := True;\n       Valid := Is_Valid (Storage_Address);\n \n       if not Valid then\n+         Unlock_Task_Required := False;\n          Unlock_Task.all;\n \n          if Storage_Address = System.Null_Address then\n@@ -1453,6 +1482,7 @@ package body GNAT.Debug_Pools is\n          end if;\n \n       elsif Header.Block_Size < 0 then\n+         Unlock_Task_Required := False;\n          Unlock_Task.all;\n          if Pool.Raise_Exceptions then\n             raise Freeing_Deallocated_Storage;\n@@ -1574,12 +1604,15 @@ package body GNAT.Debug_Pools is\n          --  Do not physically release the memory here, but in Alloc.\n          --  See comment there for details.\n \n+         Unlock_Task_Required := False;\n          Unlock_Task.all;\n       end if;\n \n    exception\n       when others =>\n-         Unlock_Task.all;\n+         if Unlock_Task_Required then\n+            Unlock_Task.all;\n+         end if;\n          raise;\n    end Deallocate;\n "}, {"sha": "f9e45540ea69dfabf53e3aec1305f30e2a805484", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef44df1e36033fcaffa13cc546760b2cf1e1956/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef44df1e36033fcaffa13cc546760b2cf1e1956/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=aef44df1e36033fcaffa13cc546760b2cf1e1956", "patch": "@@ -1376,7 +1376,7 @@ package Opt is\n    Style_Check_Main : Boolean := False;\n    --  GNAT\n    --  Set True if Style_Check was set for the main unit. This is used to\n-   --  renable style checks for units in the mail extended source that get\n+   --  enable style checks for units in the main extended source that get\n    --  with'ed indirectly. It is set True by use of either the -gnatg or\n    --  -gnaty switches, but not by use of the Style_Checks pragma.\n \n@@ -2058,7 +2058,7 @@ package Opt is\n    --  unit. This affects setting of the assert/debug pragma switches, which\n    --  are normally set false by default for an internal unit, except when the\n    --  internal unit is the main unit, in which case we use the command line\n-   --  settings).\n+   --  settings.\n \n    procedure Restore_Opt_Config_Switches (Save : Config_Switches_Type);\n    --  This procedure restores a set of switch values previously saved by a"}, {"sha": "26ed179296ff82fd34735f4650224bb047afaa0d", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef44df1e36033fcaffa13cc546760b2cf1e1956/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef44df1e36033fcaffa13cc546760b2cf1e1956/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=aef44df1e36033fcaffa13cc546760b2cf1e1956", "patch": "@@ -4833,7 +4833,9 @@ package body Sem_Ch3 is\n                Set_Scalar_Range         (Id, Scalar_Range       (T));\n                Set_Digits_Value         (Id, Digits_Value       (T));\n                Set_Is_Constrained       (Id, Is_Constrained     (T));\n-               Copy_Dimensions          (From => T, To => Id);\n+\n+               --  If the floating point type has dimensions, these will be\n+               --  inherited subsequently when Analyze_Dimensions is called.\n \n             when Signed_Integer_Kind =>\n                Set_Ekind                (Id, E_Signed_Integer_Subtype);"}, {"sha": "506769873678c749dea74c8c310dfa9d9e0572fb", "filename": "gcc/ada/sem_dim.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef44df1e36033fcaffa13cc546760b2cf1e1956/gcc%2Fada%2Fsem_dim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef44df1e36033fcaffa13cc546760b2cf1e1956/gcc%2Fada%2Fsem_dim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dim.adb?ref=aef44df1e36033fcaffa13cc546760b2cf1e1956", "patch": "@@ -2227,8 +2227,8 @@ package body Sem_Dim is\n             --  it cannot inherit a dimension from its subtype.\n \n             if Exists (Dims_Of_Id) then\n-               Error_Msg_N\n-                 (\"subtype& already\" & Dimensions_Msg_Of (Id, True), N);\n+               Error_Msg_NE\n+                 (\"subtype& already \" & Dimensions_Msg_Of (Id, True), N, Id);\n             else\n                Set_Dimensions (Id, Dims_Of_Etyp);\n                Set_Symbol (Id, Symbol_Of (Etyp));"}]}