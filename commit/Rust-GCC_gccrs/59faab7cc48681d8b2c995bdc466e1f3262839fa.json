{"sha": "59faab7cc48681d8b2c995bdc466e1f3262839fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTlmYWFiN2NjNDg2ODFkOGIyYzk5NWJkYzQ2NmUxZjMyNjI4MzlmYQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2015-10-01T06:38:24Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2015-10-01T06:38:24Z"}, "message": "bb-reorder: Add -freorder-blocks-algorithm= and wire it up\n\nThis adds an -freorder-blocks-algorithm=[simple|stc] flag, with \"simple\"\nas default.  For -O2 and up (except -Os) it is switched to \"stc\" instead.\nTargets that never want STC can override this.  This changes -freorder-blocks\nto be on at -O1 and up (was -O2 and up).\n\nIn effect, the changes are for -O1 (which now gets \"simple\" instead of\nnothing), -Os (which now gets \"simple\" instead of \"stc\", since STC results\nin much bigger code), and for targets that wish to never use STC (not in\nthis patch though).\n\n\n2015-09-23   Segher Boessenkool  <segher@kernel.crashing.org>\n\n\t* bb-reorder.c (reorder_basic_blocks): Use the algorithm selected\n\twith flag_reorder_blocks_algorithm.\n\t* common.opt (freorder-blocks-algorithm=): New flag.\n\t(reorder_blocks_algorithm): New enum.\n\t* flag-types.h (reorder_blocks_algorithm): New enum.\n\t* opts.c (default_options_table): Use -freorder-blocks at -O1 and up,\n\tand -freorder-blocks-algorithm=stc at -O2 and up (not at -Os).\n\nFrom-SVN: r228318", "tree": {"sha": "a8576e110feff8492232a921cc8f8c525d14265c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8576e110feff8492232a921cc8f8c525d14265c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59faab7cc48681d8b2c995bdc466e1f3262839fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59faab7cc48681d8b2c995bdc466e1f3262839fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59faab7cc48681d8b2c995bdc466e1f3262839fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59faab7cc48681d8b2c995bdc466e1f3262839fa/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "248c16c49ac74146a3b21f7536ede9b0f4378493", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/248c16c49ac74146a3b21f7536ede9b0f4378493", "html_url": "https://github.com/Rust-GCC/gccrs/commit/248c16c49ac74146a3b21f7536ede9b0f4378493"}], "stats": {"total": 51, "additions": 46, "deletions": 5}, "files": [{"sha": "8bfff2b106fd71df201418ee7da97627d7f81245", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59faab7cc48681d8b2c995bdc466e1f3262839fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59faab7cc48681d8b2c995bdc466e1f3262839fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=59faab7cc48681d8b2c995bdc466e1f3262839fa", "patch": "@@ -1,3 +1,13 @@\n+2015-10-01  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* bb-reorder.c (reorder_basic_blocks): Use the algorithm selected\n+\twith flag_reorder_blocks_algorithm.\n+\t* common.opt (freorder-blocks-algorithm=): New flag.\n+\t(reorder_blocks_algorithm): New enum.\n+\t* flag-types.h (reorder_blocks_algorithm): New enum.\n+\t* opts.c (default_options_table): Use -freorder-blocks at -O1 and up,\n+\tand -freorder-blocks-algorithm=stc at -O2 and up (not at -Os).\n+\n 2015-10-01  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* bb-reorder.c: Add intro comment."}, {"sha": "cb001e89f21ba6da336ecedb81fe111ddcf81939", "filename": "gcc/bb-reorder.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59faab7cc48681d8b2c995bdc466e1f3262839fa/gcc%2Fbb-reorder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59faab7cc48681d8b2c995bdc466e1f3262839fa/gcc%2Fbb-reorder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.c?ref=59faab7cc48681d8b2c995bdc466e1f3262839fa", "patch": "@@ -2444,10 +2444,19 @@ reorder_basic_blocks (void)\n   set_edge_can_fallthru_flag ();\n   mark_dfs_back_edges ();\n \n-  if (1)\n-    reorder_basic_blocks_software_trace_cache ();\n-  else\n-    reorder_basic_blocks_simple ();\n+  switch (flag_reorder_blocks_algorithm)\n+    {\n+    case REORDER_BLOCKS_ALGORITHM_SIMPLE:\n+      reorder_basic_blocks_simple ();\n+      break;\n+\n+    case REORDER_BLOCKS_ALGORITHM_STC:\n+      reorder_basic_blocks_software_trace_cache ();\n+      break;\n+\n+    default:\n+      gcc_unreachable ();\n+    }\n \n   relink_block_chain (/*stay_in_cfglayout_mode=*/true);\n "}, {"sha": "b0f70fb4e9ec3c1b78aa7128e9d308479428df03", "filename": "gcc/common.opt", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59faab7cc48681d8b2c995bdc466e1f3262839fa/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59faab7cc48681d8b2c995bdc466e1f3262839fa/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=59faab7cc48681d8b2c995bdc466e1f3262839fa", "patch": "@@ -1910,6 +1910,19 @@ freorder-blocks\n Common Report Var(flag_reorder_blocks) Optimization\n Reorder basic blocks to improve code placement\n \n+freorder-blocks-algorithm=\n+Common Joined RejectNegative Enum(reorder_blocks_algorithm) Var(flag_reorder_blocks_algorithm) Init(REORDER_BLOCKS_ALGORITHM_SIMPLE) Optimization\n+-freorder-blocks-algorithm=[simple|stc] Set the used basic block reordering algorithm\n+\n+Enum\n+Name(reorder_blocks_algorithm) Type(enum reorder_blocks_algorithm) UnknownError(unknown basic block reordering algorithm %qs)\n+\n+EnumValue\n+Enum(reorder_blocks_algorithm) String(simple) Value(REORDER_BLOCKS_ALGORITHM_SIMPLE)\n+\n+EnumValue\n+Enum(reorder_blocks_algorithm) String(stc) Value(REORDER_BLOCKS_ALGORITHM_STC)\n+\n freorder-blocks-and-partition\n Common Report Var(flag_reorder_blocks_and_partition) Optimization\n Reorder basic blocks and partition into hot and cold sections"}, {"sha": "6301cea48076c09ed4094526bbe4c5a400e797a8", "filename": "gcc/flag-types.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59faab7cc48681d8b2c995bdc466e1f3262839fa/gcc%2Fflag-types.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59faab7cc48681d8b2c995bdc466e1f3262839fa/gcc%2Fflag-types.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflag-types.h?ref=59faab7cc48681d8b2c995bdc466e1f3262839fa", "patch": "@@ -109,6 +109,13 @@ enum stack_reuse_level\n   SR_ALL\n };\n \n+/* The algorithm used for basic block reordering.  */\n+enum reorder_blocks_algorithm\n+{\n+  REORDER_BLOCKS_ALGORITHM_SIMPLE,\n+  REORDER_BLOCKS_ALGORITHM_STC\n+};\n+\n /* The algorithm used for the integrated register allocator (IRA).  */\n enum ira_algorithm\n {"}, {"sha": "896875b40e455f7bf1b30d5bae5e1856d35e76ac", "filename": "gcc/opts.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59faab7cc48681d8b2c995bdc466e1f3262839fa/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59faab7cc48681d8b2c995bdc466e1f3262839fa/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=59faab7cc48681d8b2c995bdc466e1f3262839fa", "patch": "@@ -441,6 +441,7 @@ static const struct default_options default_options_table[] =\n     { OPT_LEVELS_1_PLUS, OPT_fipa_reference, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_fipa_profile, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_fmerge_constants, NULL, 1 },\n+    { OPT_LEVELS_1_PLUS, OPT_freorder_blocks, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_fshrink_wrap, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_fsplit_wide_types, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_ftree_ccp, NULL, 1 },\n@@ -483,7 +484,8 @@ static const struct default_options default_options_table[] =\n #endif\n     { OPT_LEVELS_2_PLUS, OPT_fstrict_aliasing, NULL, 1 },\n     { OPT_LEVELS_2_PLUS, OPT_fstrict_overflow, NULL, 1 },\n-    { OPT_LEVELS_2_PLUS, OPT_freorder_blocks, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_freorder_blocks_algorithm_, NULL,\n+      REORDER_BLOCKS_ALGORITHM_STC },\n     { OPT_LEVELS_2_PLUS, OPT_freorder_functions, NULL, 1 },\n     { OPT_LEVELS_2_PLUS, OPT_ftree_vrp, NULL, 1 },\n     { OPT_LEVELS_2_PLUS, OPT_ftree_builtin_call_dce, NULL, 1 },"}]}