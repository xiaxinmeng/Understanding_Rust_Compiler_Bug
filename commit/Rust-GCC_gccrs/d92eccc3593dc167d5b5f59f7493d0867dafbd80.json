{"sha": "d92eccc3593dc167d5b5f59f7493d0867dafbd80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDkyZWNjYzM1OTNkYzE2N2Q1YjVmNTlmNzQ5M2QwODY3ZGFmYmQ4MA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2010-06-23T08:53:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-23T08:53:09Z"}, "message": "xr_tabls.adb, [...]: Update to latest lib-xref.ads Fix handling of parameters.\n\n2010-06-23  Arnaud Charlet  <charlet@adacore.com>\n\n\t* xr_tabls.adb, xref_lib.adb: Update to latest lib-xref.ads\n\tFix handling of parameters.\n\tAdd protection against unexpected cases.\n\t* sem_ch6.adb (Create_Extra_Formals): Use suffix \"L\" instead of \"A\" for\n\taccess level, since \"A\" suffix is already used elsewhere. Similarly,\n\tuse suffix \"O\" instead of \"C\" for 'Constrained since \"C\" suffix is used\n\tfor xxx'Class.\n\nFrom-SVN: r161260", "tree": {"sha": "5c8053fc1d8e4b7124ba781806c74492cf8a0ed3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c8053fc1d8e4b7124ba781806c74492cf8a0ed3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d92eccc3593dc167d5b5f59f7493d0867dafbd80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d92eccc3593dc167d5b5f59f7493d0867dafbd80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d92eccc3593dc167d5b5f59f7493d0867dafbd80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d92eccc3593dc167d5b5f59f7493d0867dafbd80/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7c4b480fb3736fd2a9f4fbad273dbafe04649c11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c4b480fb3736fd2a9f4fbad273dbafe04649c11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c4b480fb3736fd2a9f4fbad273dbafe04649c11"}], "stats": {"total": 61, "additions": 47, "deletions": 14}, "files": [{"sha": "96cd48539a91ca3f84bf5599f0230b7b8c1d5926", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d92eccc3593dc167d5b5f59f7493d0867dafbd80/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d92eccc3593dc167d5b5f59f7493d0867dafbd80/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d92eccc3593dc167d5b5f59f7493d0867dafbd80", "patch": "@@ -1,3 +1,13 @@\n+2010-06-23  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* xr_tabls.adb, xref_lib.adb: Update to latest lib-xref.ads\n+\tFix handling of parameters.\n+\tAdd protection against unexpected cases.\n+\t* sem_ch6.adb (Create_Extra_Formals): Use suffix \"L\" instead of \"A\" for\n+\taccess level, since \"A\" suffix is already used elsewhere. Similarly,\n+\tuse suffix \"O\" instead of \"C\" for 'Constrained since \"C\" suffix is used\n+\tfor xxx'Class.\n+\n 2010-06-23  Thomas Quinot  <quinot@adacore.com>\n \n \t* sem_util.adb, sem_util.ads: Minor reformatting."}, {"sha": "cbdaf68180f58555855099719948731e78b08fac", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d92eccc3593dc167d5b5f59f7493d0867dafbd80/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d92eccc3593dc167d5b5f59f7493d0867dafbd80/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=d92eccc3593dc167d5b5f59f7493d0867dafbd80", "patch": "@@ -5435,8 +5435,8 @@ package body Sem_Ch6 is\n       --  without coordinating with CodePeer, which makes use of these to\n       --  provide better messages.\n \n-      --  C denotes the Constrained bit.\n-      --  A denotes the accessibility level.\n+      --  O denotes the Constrained bit.\n+      --  L denotes the accessibility level.\n       --  BIP_xxx denotes an extra formal for a build-in-place function. See\n       --  the full list in exp_ch6.BIP_Formal_Kind.\n \n@@ -5565,7 +5565,7 @@ package body Sem_Ch6 is\n               and then not Is_Indefinite_Subtype (Formal_Type)\n             then\n                Set_Extra_Constrained\n-                 (Formal, Add_Extra_Formal (Formal, Standard_Boolean, E, \"C\"));\n+                 (Formal, Add_Extra_Formal (Formal, Standard_Boolean, E, \"O\"));\n             end if;\n          end if;\n \n@@ -5598,7 +5598,7 @@ package body Sem_Ch6 is\n                or else Present (Extra_Accessibility (P_Formal)))\n          then\n             Set_Extra_Accessibility\n-              (Formal, Add_Extra_Formal (Formal, Standard_Natural, E, \"A\"));\n+              (Formal, Add_Extra_Formal (Formal, Standard_Natural, E, \"L\"));\n          end if;\n \n          --  This label is required when skipping extra formal generation for"}, {"sha": "b75da1f8423ec94094ecd75eabbf4341570a5fcf", "filename": "gcc/ada/xr_tabls.adb", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d92eccc3593dc167d5b5f59f7493d0867dafbd80/gcc%2Fada%2Fxr_tabls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d92eccc3593dc167d5b5f59f7493d0867dafbd80/gcc%2Fada%2Fxr_tabls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxr_tabls.adb?ref=d92eccc3593dc167d5b5f59f7493d0867dafbd80", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -395,7 +395,7 @@ package body Xr_Tabls is\n \n    begin\n       case Ref_Type is\n-         when 'b' | 'c' | 'm' | 'r' | 'R' | 'i' | ' ' | 'x' =>\n+         when 'b' | 'c' | 'H' | 'm' | 'o' | 'r' | 'R' | 'i' | ' ' | 'x' =>\n             null;\n \n          when 'l' | 'w' =>\n@@ -419,7 +419,12 @@ package body Xr_Tabls is\n                  (Symbol_Length => 0,\n                   Symbol        => \"\",\n                   Key           => new String'(Key),\n-                  Decl          => null,\n+                  Decl          => new Reference_Record'\n+                                     (File          => File_Ref,\n+                                      Line          => Line,\n+                                      Column        => Column,\n+                                      Source_Line   => null,\n+                                      Next          => null),\n                   Is_Parameter  => True,\n                   Decl_Type     => ' ',\n                   Body_Ref      => null,\n@@ -458,7 +463,7 @@ package body Xr_Tabls is\n             New_Ref.Next          := Declaration.Body_Ref;\n             Declaration.Body_Ref  := New_Ref;\n \n-         when 'r' | 'R' | 'i' | 'l' | ' ' | 'x' | 'w' =>\n+         when 'r' | 'R' | 'H' | 'i' | 'l' | 'o' | ' ' | 'x' | 'w' =>\n             New_Ref.Next          := Declaration.Ref_Ref;\n             Declaration.Ref_Ref   := New_Ref;\n "}, {"sha": "ed213569e924cf15e290ce00e11ade508cfb15f2", "filename": "gcc/ada/xref_lib.adb", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d92eccc3593dc167d5b5f59f7493d0867dafbd80/gcc%2Fada%2Fxref_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d92eccc3593dc167d5b5f59f7493d0867dafbd80/gcc%2Fada%2Fxref_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxref_lib.adb?ref=d92eccc3593dc167d5b5f59f7493d0867dafbd80", "patch": "@@ -508,6 +508,7 @@ package body Xref_Lib is\n          when 'D' => return \"decimal type\";\n          when 'E' => return \"enumeration type\";\n          when 'F' => return \"float type\";\n+         when 'H' => return \"abstract type\";\n          when 'I' => return \"integer type\";\n          when 'M' => return \"modular type\";\n          when 'O' => return \"fixed type\";\n@@ -523,7 +524,6 @@ package body Xref_Lib is\n          when 'd' => return Param_String & \"decimal object\";\n          when 'e' => return Param_String & \"enumeration object\";\n          when 'f' => return Param_String & \"float object\";\n-         when 'h' => return \"interface\";\n          when 'i' => return Param_String & \"integer object\";\n          when 'm' => return Param_String & \"modular object\";\n          when 'o' => return Param_String & \"fixed object\";\n@@ -535,13 +535,16 @@ package body Xref_Lib is\n          when 'x' => return Param_String & \"abstract procedure\";\n          when 'y' => return Param_String & \"abstract function\";\n \n+         when 'h' => return \"interface\";\n+         when 'g' => return \"macro\";\n          when 'K' => return \"package\";\n          when 'k' => return \"generic package\";\n          when 'L' => return \"statement label\";\n          when 'l' => return \"loop label\";\n          when 'N' => return \"named number\";\n          when 'n' => return \"enumeration literal\";\n          when 'q' => return \"block label\";\n+         when 'Q' => return \"include file\";\n          when 'U' => return \"procedure\";\n          when 'u' => return \"generic procedure\";\n          when 'V' => return \"function\";\n@@ -557,7 +560,11 @@ package body Xref_Lib is\n          --  have an unknown Abbrev value\n \n          when others =>\n-            return \"??? (\" & Get_Type (Decl) & \")\";\n+            if Is_Parameter (Decl) then\n+               return \"parameter\";\n+            else\n+               return \"??? (\" & Get_Type (Decl) & \")\";\n+            end if;\n       end case;\n    end Get_Full_Type;\n \n@@ -1587,8 +1594,13 @@ package body Xref_Lib is\n                File := Get_File_Ref (Arr (R));\n                F := Osint.To_Host_File_Spec\n                  (Get_Gnatchop_File (Arr (R), Full_Path_Name));\n-               Write_Str (F.all & ' ');\n-               Free (F);\n+\n+               if F = null then\n+                  Write_Str (\"<unknown> \");\n+               else\n+                  Write_Str (F.all & ' ');\n+                  Free (F);\n+               end if;\n             end if;\n \n             Print_Ref (Get_Line (Arr (R)), Get_Column (Arr (R)));\n@@ -1637,8 +1649,14 @@ package body Xref_Lib is\n          Write_Str (\"  Decl:  \");\n          F := Osint.To_Host_File_Spec\n                (Get_Gnatchop_File (Decl, Full_Path_Name));\n-         Print80 (F.all & ' ');\n-         Free (F);\n+\n+         if F = null then\n+            Print80 (\"<unknown> \");\n+         else\n+            Print80 (F.all & ' ');\n+            Free (F);\n+         end if;\n+\n          Print_Ref (Get_Line (Decl), Get_Column (Decl));\n \n          Print_List"}]}