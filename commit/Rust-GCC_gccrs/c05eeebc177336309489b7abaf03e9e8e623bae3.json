{"sha": "c05eeebc177336309489b7abaf03e9e8e623bae3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA1ZWVlYmMxNzczMzYzMDk0ODliN2FiYWYwM2U5ZThlNjIzYmFlMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-12-04T09:46:45Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-12-04T09:46:45Z"}, "message": "re PR c++/56493 (Performance regression in google dense hashmap)\n\n\tPR c++/56493\n\t* convert.c (convert_to_real, convert_to_expr, convert_to_complex):\n\tHandle COMPOUND_EXPR.\n\n\t* c-c++-common/pr56493.c: New test.\n\nFrom-SVN: r218345", "tree": {"sha": "0d387792bdbd70ac6bf8e464a09d737336f1eb6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d387792bdbd70ac6bf8e464a09d737336f1eb6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c05eeebc177336309489b7abaf03e9e8e623bae3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c05eeebc177336309489b7abaf03e9e8e623bae3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c05eeebc177336309489b7abaf03e9e8e623bae3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c05eeebc177336309489b7abaf03e9e8e623bae3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7155ec314a4d59ae658eaaa490f31b76c81e476a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7155ec314a4d59ae658eaaa490f31b76c81e476a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7155ec314a4d59ae658eaaa490f31b76c81e476a"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "d4fd9cbd5a581bd534a6b3cbe87fbb447821e80b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05eeebc177336309489b7abaf03e9e8e623bae3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05eeebc177336309489b7abaf03e9e8e623bae3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c05eeebc177336309489b7abaf03e9e8e623bae3", "patch": "@@ -1,3 +1,9 @@\n+2014-12-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/56493\n+\t* convert.c (convert_to_real, convert_to_expr, convert_to_complex):\n+\tHandle COMPOUND_EXPR.\n+\n 2014-12-04  Richard Biener  <rguenther@suse.de>\n \n \t* builtins.c (target_newline): Export."}, {"sha": "00907290c211479b2e4f492f3c19c36b7b4c0b06", "filename": "gcc/convert.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05eeebc177336309489b7abaf03e9e8e623bae3/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05eeebc177336309489b7abaf03e9e8e623bae3/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=c05eeebc177336309489b7abaf03e9e8e623bae3", "patch": "@@ -99,6 +99,15 @@ convert_to_real (tree type, tree expr)\n   enum built_in_function fcode = builtin_mathfn_code (expr);\n   tree itype = TREE_TYPE (expr);\n \n+  if (TREE_CODE (expr) == COMPOUND_EXPR)\n+    {\n+      tree t = convert_to_real (type, TREE_OPERAND (expr, 1));\n+      if (t == TREE_OPERAND (expr, 1))\n+\treturn expr;\n+      return build2_loc (EXPR_LOCATION (expr), COMPOUND_EXPR, TREE_TYPE (t),\n+\t\t\t TREE_OPERAND (expr, 0), t);\n+    }    \n+\n   /* Disable until we figure out how to decide whether the functions are\n      present in runtime.  */\n   /* Convert (float)sqrt((double)x) where x is float into sqrtf(x) */\n@@ -406,6 +415,15 @@ convert_to_integer (tree type, tree expr)\n       return error_mark_node;\n     }\n \n+  if (ex_form == COMPOUND_EXPR)\n+    {\n+      tree t = convert_to_integer (type, TREE_OPERAND (expr, 1));\n+      if (t == TREE_OPERAND (expr, 1))\n+\treturn expr;\n+      return build2_loc (EXPR_LOCATION (expr), COMPOUND_EXPR, TREE_TYPE (t),\n+\t\t\t TREE_OPERAND (expr, 0), t);\n+    }    \n+\n   /* Convert e.g. (long)round(d) -> lround(d).  */\n   /* If we're converting to char, we may encounter differing behavior\n      between converting from double->char vs double->long->char.\n@@ -926,6 +944,14 @@ convert_to_complex (tree type, tree expr)\n \n \tif (TYPE_MAIN_VARIANT (elt_type) == TYPE_MAIN_VARIANT (subtype))\n \t  return expr;\n+\telse if (TREE_CODE (expr) == COMPOUND_EXPR)\n+\t  {\n+\t    tree t = convert_to_complex (type, TREE_OPERAND (expr, 1));\n+\t    if (t == TREE_OPERAND (expr, 1))\n+\t      return expr;\n+\t    return build2_loc (EXPR_LOCATION (expr), COMPOUND_EXPR,\n+\t\t\t       TREE_TYPE (t), TREE_OPERAND (expr, 0), t);\n+\t  }    \n \telse if (TREE_CODE (expr) == COMPLEX_EXPR)\n \t  return fold_build2 (COMPLEX_EXPR, type,\n \t\t\t      convert (subtype, TREE_OPERAND (expr, 0)),"}, {"sha": "06509c277f600133de961975995c35a2204ddaa5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05eeebc177336309489b7abaf03e9e8e623bae3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05eeebc177336309489b7abaf03e9e8e623bae3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c05eeebc177336309489b7abaf03e9e8e623bae3", "patch": "@@ -1,3 +1,8 @@\n+2014-12-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/56493\n+\t* c-c++-common/pr56493.c: New test.\n+\n 2014-12-04  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* lib/target-supports.exp (check_effective_target_tiny): Cache"}, {"sha": "4181260430f39f825e16a84fbd921fc9d2c6be1e", "filename": "gcc/testsuite/c-c++-common/pr56493.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05eeebc177336309489b7abaf03e9e8e623bae3/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr56493.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05eeebc177336309489b7abaf03e9e8e623bae3/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr56493.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr56493.c?ref=c05eeebc177336309489b7abaf03e9e8e623bae3", "patch": "@@ -0,0 +1,16 @@\n+/* PR c++/56493 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-gimple\" } */\n+\n+unsigned long long bar (void);\n+int x;\n+\n+void\n+foo (void)\n+{\n+  x += bar ();\n+}\n+\n+/* Verify we narrow the addition from unsigned long long to unsigned int type.  */\n+/* { dg-final { scan-tree-dump \"  (\\[a-zA-Z._0-9]*) = \\\\(unsigned int\\\\) \\[^;\\n\\r]*;.*  (\\[a-zA-Z._0-9]*) = \\\\(unsigned int\\\\) \\[^;\\n\\r]*;.* = \\\\1 \\\\+ \\\\2;\" \"gimple\" { target { ilp32 || lp64 } } } } */\n+/* { dg-final { cleanup-tree-dump \"gimple\" } } */"}]}