{"sha": "259a11555c90783e53c046c310080407ee54a31e", "node_id": "C_kwDOANBUbNoAKDI1OWExMTU1NWM5MDc4M2U1M2MwNDZjMzEwMDgwNDA3ZWU1NGEzMWU", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-10-31T08:09:48Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-10-31T08:09:48Z"}, "message": "builtins: Add various complex builtins for _Float{16,32,64,128,32x,64x,128x}\n\nThe following patch adds some complex builtins which have libm\nimplementation in glibc 2.26 and later on various arches.\nIt is needed for libstdc++ _Float128 support when long double is not\nIEEE quad.\n\n2022-10-31  Jakub Jelinek  <jakub@redhat.com>\n\n\t* builtin-types.def (BT_COMPLEX_FLOAT16, BT_COMPLEX_FLOAT32,\n\tBT_COMPLEX_FLOAT64, BT_COMPLEX_FLOAT128, BT_COMPLEX_FLOAT32X,\n\tBT_COMPLEX_FLOAT64X, BT_COMPLEX_FLOAT128X,\n\tBT_FN_COMPLEX_FLOAT16_COMPLEX_FLOAT16,\n\tBT_FN_COMPLEX_FLOAT32_COMPLEX_FLOAT32,\n\tBT_FN_COMPLEX_FLOAT64_COMPLEX_FLOAT64,\n\tBT_FN_COMPLEX_FLOAT128_COMPLEX_FLOAT128,\n\tBT_FN_COMPLEX_FLOAT32X_COMPLEX_FLOAT32X,\n\tBT_FN_COMPLEX_FLOAT64X_COMPLEX_FLOAT64X,\n\tBT_FN_COMPLEX_FLOAT128X_COMPLEX_FLOAT128X,\n\tBT_FN_FLOAT16_COMPLEX_FLOAT16, BT_FN_FLOAT32_COMPLEX_FLOAT32,\n\tBT_FN_FLOAT64_COMPLEX_FLOAT64, BT_FN_FLOAT128_COMPLEX_FLOAT128,\n\tBT_FN_FLOAT32X_COMPLEX_FLOAT32X, BT_FN_FLOAT64X_COMPLEX_FLOAT64X,\n\tBT_FN_FLOAT128X_COMPLEX_FLOAT128X,\n\tBT_FN_COMPLEX_FLOAT16_COMPLEX_FLOAT16_COMPLEX_FLOAT16,\n\tBT_FN_COMPLEX_FLOAT32_COMPLEX_FLOAT32_COMPLEX_FLOAT32,\n\tBT_FN_COMPLEX_FLOAT64_COMPLEX_FLOAT64_COMPLEX_FLOAT64,\n\tBT_FN_COMPLEX_FLOAT128_COMPLEX_FLOAT128_COMPLEX_FLOAT128,\n\tBT_FN_COMPLEX_FLOAT32X_COMPLEX_FLOAT32X_COMPLEX_FLOAT32X,\n\tBT_FN_COMPLEX_FLOAT64X_COMPLEX_FLOAT64X_COMPLEX_FLOAT64X,\n\tBT_FN_COMPLEX_FLOAT128X_COMPLEX_FLOAT128X_COMPLEX_FLOAT128X): New.\n\t* builtins.def (CABS_TYPE, CACOSH_TYPE, CARG_TYPE, CASINH_TYPE,\n\tCPOW_TYPE, CPROJ_TYPE): Define and undefine later.\n\t(BUILT_IN_CABS, BUILT_IN_CACOSH, BUILT_IN_CACOS, BUILT_IN_CARG,\n\tBUILT_IN_CASINH, BUILT_IN_CASIN, BUILT_IN_CATANH, BUILT_IN_CATAN,\n\tBUILT_IN_CCOSH, BUILT_IN_CCOS, BUILT_IN_CEXP, BUILT_IN_CLOG,\n\tBUILT_IN_CPOW, BUILT_IN_CPROJ, BUILT_IN_CSINH, BUILT_IN_CSIN,\n\tBUILT_IN_CSQRT, BUILT_IN_CTANH, BUILT_IN_CTAN): Add\n\tDEF_EXT_LIB_FLOATN_NX_BUILTINS.\n\t* fold-const-call.cc (fold_const_call_sc, fold_const_call_cc,\n\tfold_const_call_ccc): Add various CASE_CFN_*_FN: cases when\n\tCASE_CFN_* is present.\n\t* gimple-ssa-backprop.cc (backprop::process_builtin_call_use):\n\tLikewise.\n\t* builtins.cc (expand_builtin, fold_builtin_1): Likewise.\n\t* fold-const.cc (negate_mathfn_p, tree_expr_finite_p,\n\ttree_expr_maybe_signaling_nan_p, tree_expr_maybe_nan_p,\n\ttree_expr_maybe_real_minus_zero_p, tree_call_nonnegative_warnv_p):\n\tLikewise.", "tree": {"sha": "cf07e197c437b0355701a5c0a71e6336caeb088d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf07e197c437b0355701a5c0a71e6336caeb088d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/259a11555c90783e53c046c310080407ee54a31e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/259a11555c90783e53c046c310080407ee54a31e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/259a11555c90783e53c046c310080407ee54a31e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/259a11555c90783e53c046c310080407ee54a31e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29490c2a1dc00944f2420eb59374705f180a2e53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29490c2a1dc00944f2420eb59374705f180a2e53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29490c2a1dc00944f2420eb59374705f180a2e53"}], "stats": {"total": 164, "additions": 164, "deletions": 0}, "files": [{"sha": "e1e25e9c48fbf30edade83311ea23bfac0838c9f", "filename": "gcc/builtin-types.def", "status": "modified", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/259a11555c90783e53c046c310080407ee54a31e/gcc%2Fbuiltin-types.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/259a11555c90783e53c046c310080407ee54a31e/gcc%2Fbuiltin-types.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltin-types.def?ref=259a11555c90783e53c046c310080407ee54a31e", "patch": "@@ -109,6 +109,34 @@ DEF_PRIMITIVE_TYPE (BT_FLOAT128X, (float128x_type_node\n DEF_PRIMITIVE_TYPE (BT_COMPLEX_FLOAT, complex_float_type_node)\n DEF_PRIMITIVE_TYPE (BT_COMPLEX_DOUBLE, complex_double_type_node)\n DEF_PRIMITIVE_TYPE (BT_COMPLEX_LONGDOUBLE, complex_long_double_type_node)\n+DEF_PRIMITIVE_TYPE (BT_COMPLEX_FLOAT16, (float16_type_node\n+\t\t\t\t\t ? build_complex_type\n+\t\t\t\t\t\t(float16_type_node)\n+\t\t\t\t\t : error_mark_node))\n+DEF_PRIMITIVE_TYPE (BT_COMPLEX_FLOAT32, (float32_type_node\n+\t\t\t\t\t ? build_complex_type\n+\t\t\t\t\t\t(float32_type_node)\n+\t\t\t\t\t : error_mark_node))\n+DEF_PRIMITIVE_TYPE (BT_COMPLEX_FLOAT64, (float64_type_node\n+\t\t\t\t\t ? build_complex_type\n+\t\t\t\t\t\t(float64_type_node)\n+\t\t\t\t\t : error_mark_node))\n+DEF_PRIMITIVE_TYPE (BT_COMPLEX_FLOAT128, (float128_type_node\n+\t\t\t\t\t  ? build_complex_type\n+\t\t\t\t\t\t(float128_type_node)\n+\t\t\t\t\t  : error_mark_node))\n+DEF_PRIMITIVE_TYPE (BT_COMPLEX_FLOAT32X, (float32x_type_node\n+\t\t\t\t\t  ? build_complex_type\n+\t\t\t\t\t\t(float32x_type_node)\n+\t\t\t\t\t  : error_mark_node))\n+DEF_PRIMITIVE_TYPE (BT_COMPLEX_FLOAT64X, (float64x_type_node\n+\t\t\t\t\t  ? build_complex_type\n+\t\t\t\t\t\t(float64x_type_node)\n+\t\t\t\t\t  : error_mark_node))\n+DEF_PRIMITIVE_TYPE (BT_COMPLEX_FLOAT128X, (float128x_type_node\n+\t\t\t\t\t   ? build_complex_type\n+\t\t\t\t\t\t(float128x_type_node)\n+\t\t\t\t\t   : error_mark_node))\n \n DEF_PRIMITIVE_TYPE (BT_PTR, ptr_type_node)\n DEF_PRIMITIVE_TYPE (BT_FILEPTR, fileptr_type_node)\n@@ -242,12 +270,40 @@ DEF_FUNCTION_TYPE_1 (BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE,\n \t\t     BT_COMPLEX_DOUBLE, BT_COMPLEX_DOUBLE)\n DEF_FUNCTION_TYPE_1 (BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE,\n \t\t     BT_COMPLEX_LONGDOUBLE, BT_COMPLEX_LONGDOUBLE)\n+DEF_FUNCTION_TYPE_1 (BT_FN_COMPLEX_FLOAT16_COMPLEX_FLOAT16,\n+\t\t     BT_COMPLEX_FLOAT16, BT_COMPLEX_FLOAT16)\n+DEF_FUNCTION_TYPE_1 (BT_FN_COMPLEX_FLOAT32_COMPLEX_FLOAT32,\n+\t\t     BT_COMPLEX_FLOAT32, BT_COMPLEX_FLOAT32)\n+DEF_FUNCTION_TYPE_1 (BT_FN_COMPLEX_FLOAT64_COMPLEX_FLOAT64,\n+\t\t     BT_COMPLEX_FLOAT64, BT_COMPLEX_FLOAT64)\n+DEF_FUNCTION_TYPE_1 (BT_FN_COMPLEX_FLOAT128_COMPLEX_FLOAT128,\n+\t\t     BT_COMPLEX_FLOAT128, BT_COMPLEX_FLOAT128)\n+DEF_FUNCTION_TYPE_1 (BT_FN_COMPLEX_FLOAT32X_COMPLEX_FLOAT32X,\n+\t\t     BT_COMPLEX_FLOAT32X, BT_COMPLEX_FLOAT32X)\n+DEF_FUNCTION_TYPE_1 (BT_FN_COMPLEX_FLOAT64X_COMPLEX_FLOAT64X,\n+\t\t     BT_COMPLEX_FLOAT64X, BT_COMPLEX_FLOAT64X)\n+DEF_FUNCTION_TYPE_1 (BT_FN_COMPLEX_FLOAT128X_COMPLEX_FLOAT128X,\n+\t\t     BT_COMPLEX_FLOAT128X, BT_COMPLEX_FLOAT128X)\n DEF_FUNCTION_TYPE_1 (BT_FN_FLOAT_COMPLEX_FLOAT,\n \t\t     BT_FLOAT, BT_COMPLEX_FLOAT)\n DEF_FUNCTION_TYPE_1 (BT_FN_DOUBLE_COMPLEX_DOUBLE,\n \t\t     BT_DOUBLE, BT_COMPLEX_DOUBLE)\n DEF_FUNCTION_TYPE_1 (BT_FN_LONGDOUBLE_COMPLEX_LONGDOUBLE,\n \t\t     BT_LONGDOUBLE, BT_COMPLEX_LONGDOUBLE)\n+DEF_FUNCTION_TYPE_1 (BT_FN_FLOAT16_COMPLEX_FLOAT16,\n+\t\t     BT_FLOAT16, BT_COMPLEX_FLOAT16)\n+DEF_FUNCTION_TYPE_1 (BT_FN_FLOAT32_COMPLEX_FLOAT32,\n+\t\t     BT_FLOAT32, BT_COMPLEX_FLOAT32)\n+DEF_FUNCTION_TYPE_1 (BT_FN_FLOAT64_COMPLEX_FLOAT64,\n+\t\t     BT_FLOAT64, BT_COMPLEX_FLOAT64)\n+DEF_FUNCTION_TYPE_1 (BT_FN_FLOAT128_COMPLEX_FLOAT128,\n+\t\t     BT_FLOAT128, BT_COMPLEX_FLOAT128)\n+DEF_FUNCTION_TYPE_1 (BT_FN_FLOAT32X_COMPLEX_FLOAT32X,\n+\t\t     BT_FLOAT32X, BT_COMPLEX_FLOAT32X)\n+DEF_FUNCTION_TYPE_1 (BT_FN_FLOAT64X_COMPLEX_FLOAT64X,\n+\t\t     BT_FLOAT64X, BT_COMPLEX_FLOAT64X)\n+DEF_FUNCTION_TYPE_1 (BT_FN_FLOAT128X_COMPLEX_FLOAT128X,\n+\t\t     BT_FLOAT128X, BT_COMPLEX_FLOAT128X)\n DEF_FUNCTION_TYPE_1 (BT_FN_COMPLEX_FLOAT_FLOAT,\n \t\t     BT_COMPLEX_FLOAT, BT_FLOAT)\n DEF_FUNCTION_TYPE_1 (BT_FN_COMPLEX_DOUBLE_DOUBLE,\n@@ -565,6 +621,20 @@ DEF_FUNCTION_TYPE_2 (BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE_COMPLEX_DOUBLE,\n \t\t     BT_COMPLEX_DOUBLE, BT_COMPLEX_DOUBLE, BT_COMPLEX_DOUBLE)\n DEF_FUNCTION_TYPE_2 (BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE,\n \t\t     BT_COMPLEX_LONGDOUBLE, BT_COMPLEX_LONGDOUBLE, BT_COMPLEX_LONGDOUBLE)\n+DEF_FUNCTION_TYPE_2 (BT_FN_COMPLEX_FLOAT16_COMPLEX_FLOAT16_COMPLEX_FLOAT16,\n+\t\t     BT_COMPLEX_FLOAT16, BT_COMPLEX_FLOAT16, BT_COMPLEX_FLOAT16)\n+DEF_FUNCTION_TYPE_2 (BT_FN_COMPLEX_FLOAT32_COMPLEX_FLOAT32_COMPLEX_FLOAT32,\n+\t\t     BT_COMPLEX_FLOAT32, BT_COMPLEX_FLOAT32, BT_COMPLEX_FLOAT32)\n+DEF_FUNCTION_TYPE_2 (BT_FN_COMPLEX_FLOAT64_COMPLEX_FLOAT64_COMPLEX_FLOAT64,\n+\t\t     BT_COMPLEX_FLOAT64, BT_COMPLEX_FLOAT64, BT_COMPLEX_FLOAT64)\n+DEF_FUNCTION_TYPE_2 (BT_FN_COMPLEX_FLOAT128_COMPLEX_FLOAT128_COMPLEX_FLOAT128,\n+\t\t     BT_COMPLEX_FLOAT128, BT_COMPLEX_FLOAT128, BT_COMPLEX_FLOAT128)\n+DEF_FUNCTION_TYPE_2 (BT_FN_COMPLEX_FLOAT32X_COMPLEX_FLOAT32X_COMPLEX_FLOAT32X,\n+\t\t     BT_COMPLEX_FLOAT32X, BT_COMPLEX_FLOAT32X, BT_COMPLEX_FLOAT32X)\n+DEF_FUNCTION_TYPE_2 (BT_FN_COMPLEX_FLOAT64X_COMPLEX_FLOAT64X_COMPLEX_FLOAT64X,\n+\t\t     BT_COMPLEX_FLOAT64X, BT_COMPLEX_FLOAT64X, BT_COMPLEX_FLOAT64X)\n+DEF_FUNCTION_TYPE_2 (BT_FN_COMPLEX_FLOAT128X_COMPLEX_FLOAT128X_COMPLEX_FLOAT128X,\n+\t\t     BT_COMPLEX_FLOAT128X, BT_COMPLEX_FLOAT128X, BT_COMPLEX_FLOAT128X)\n DEF_FUNCTION_TYPE_2 (BT_FN_VOID_PTR_PTR, BT_VOID, BT_PTR, BT_PTR)\n DEF_FUNCTION_TYPE_2 (BT_FN_INT_CONST_STRING_PTR_CONST_STRING,\n \t\t     BT_INT, BT_CONST_STRING, BT_PTR_CONST_STRING)"}, {"sha": "b359ce2fcede9df1eec633b4f72cded36c8cb820", "filename": "gcc/builtins.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/259a11555c90783e53c046c310080407ee54a31e/gcc%2Fbuiltins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/259a11555c90783e53c046c310080407ee54a31e/gcc%2Fbuiltins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.cc?ref=259a11555c90783e53c046c310080407ee54a31e", "patch": "@@ -7393,6 +7393,7 @@ expand_builtin (tree exp, rtx target, rtx subtarget, machine_mode mode,\n       /* Just do a normal library call if we were unable to fold\n \t the values.  */\n     CASE_FLT_FN (BUILT_IN_CABS):\n+    CASE_FLT_FN_FLOATN_NX (BUILT_IN_CABS):\n       break;\n \n     CASE_FLT_FN (BUILT_IN_FMA):\n@@ -9661,6 +9662,7 @@ fold_builtin_1 (location_t loc, tree expr, tree fndecl, tree arg0)\n     break;\n \n     CASE_FLT_FN (BUILT_IN_CARG):\n+    CASE_FLT_FN_FLOATN_NX (BUILT_IN_CARG):\n       return fold_builtin_carg (loc, arg0, type);\n \n     case BUILT_IN_ISASCII:"}, {"sha": "0ea8a2b2ca041e54aa0dff38767a9c0bcb8a56fc", "filename": "gcc/builtins.def", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/259a11555c90783e53c046c310080407ee54a31e/gcc%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/259a11555c90783e53c046c310080407ee54a31e/gcc%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.def?ref=259a11555c90783e53c046c310080407ee54a31e", "patch": "@@ -709,36 +709,54 @@ DEF_EXT_LIB_BUILTIN    (BUILT_IN_YNL, \"ynl\", BT_FN_LONGDOUBLE_INT_LONGDOUBLE, AT\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CABS, \"cabs\", BT_FN_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CABSF, \"cabsf\", BT_FN_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CABSL, \"cabsl\", BT_FN_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+#define CABS_TYPE(F) BT_FN_##F##_COMPLEX_##F\n+DEF_EXT_LIB_FLOATN_NX_BUILTINS (BUILT_IN_CABS, \"cabs\", CABS_TYPE, ATTR_MATHFN_FPROUNDING)\n+#undef CABS_TYPE\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CACOS, \"cacos\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CACOSF, \"cacosf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CACOSH, \"cacosh\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CACOSHF, \"cacoshf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CACOSHL, \"cacoshl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+#define CACOSH_TYPE(F) BT_FN_COMPLEX_##F##_COMPLEX_##F\n+DEF_EXT_LIB_FLOATN_NX_BUILTINS (BUILT_IN_CACOSH, \"cacosh\", CACOSH_TYPE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CACOSL, \"cacosl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_EXT_LIB_FLOATN_NX_BUILTINS (BUILT_IN_CACOS, \"cacos\", CACOSH_TYPE, ATTR_MATHFN_FPROUNDING)\n+#undef CACOSH_TYPE\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CARG, \"carg\", BT_FN_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CARGF, \"cargf\", BT_FN_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CARGL, \"cargl\", BT_FN_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+#define CARG_TYPE(F) BT_FN_##F##_COMPLEX_##F\n+DEF_EXT_LIB_FLOATN_NX_BUILTINS (BUILT_IN_CARG, \"carg\", CARG_TYPE, ATTR_MATHFN_FPROUNDING)\n+#undef CARG_TYPE\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CASIN, \"casin\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CASINF, \"casinf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CASINH, \"casinh\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CASINHF, \"casinhf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CASINHL, \"casinhl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+#define CASINH_TYPE(F) BT_FN_COMPLEX_##F##_COMPLEX_##F\n+DEF_EXT_LIB_FLOATN_NX_BUILTINS (BUILT_IN_CASINH, \"casinh\", CASINH_TYPE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CASINL, \"casinl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_EXT_LIB_FLOATN_NX_BUILTINS (BUILT_IN_CASIN, \"casin\", CASINH_TYPE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CATAN, \"catan\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CATANF, \"catanf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CATANH, \"catanh\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CATANHF, \"catanhf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CATANHL, \"catanhl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_EXT_LIB_FLOATN_NX_BUILTINS (BUILT_IN_CATANH, \"catanh\", CASINH_TYPE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CATANL, \"catanl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_EXT_LIB_FLOATN_NX_BUILTINS (BUILT_IN_CATAN, \"catan\", CASINH_TYPE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CCOS, \"ccos\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CCOSF, \"ccosf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CCOSH, \"ccosh\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CCOSHF, \"ccoshf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CCOSHL, \"ccoshl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_EXT_LIB_FLOATN_NX_BUILTINS (BUILT_IN_CCOSH, \"ccosh\", CASINH_TYPE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CCOSL, \"ccosl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_EXT_LIB_FLOATN_NX_BUILTINS (BUILT_IN_CCOS, \"ccos\", CASINH_TYPE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CEXP, \"cexp\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CEXPF, \"cexpf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CEXPL, \"cexpl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_EXT_LIB_FLOATN_NX_BUILTINS (BUILT_IN_CEXP, \"cexp\", CASINH_TYPE, ATTR_MATHFN_FPROUNDING)\n DEF_GCC_BUILTIN        (BUILT_IN_CEXPI, \"cexpi\", BT_FN_COMPLEX_DOUBLE_DOUBLE, ATTR_MATHFN_FPROUNDING)\n DEF_GCC_BUILTIN        (BUILT_IN_CEXPIF, \"cexpif\", BT_FN_COMPLEX_FLOAT_FLOAT, ATTR_MATHFN_FPROUNDING)\n DEF_GCC_BUILTIN        (BUILT_IN_CEXPIL, \"cexpil\", BT_FN_COMPLEX_LONGDOUBLE_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n@@ -748,6 +766,8 @@ DEF_C99_COMPL_BUILTIN        (BUILT_IN_CIMAGL, \"cimagl\", BT_FN_LONGDOUBLE_COMPLE\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CLOG, \"clog\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CLOGF, \"clogf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CLOGL, \"clogl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_EXT_LIB_FLOATN_NX_BUILTINS (BUILT_IN_CLOG, \"clog\", CASINH_TYPE, ATTR_MATHFN_FPROUNDING)\n+#undef CASINH_TYPE\n DEF_EXT_C99RES_BUILTIN (BUILT_IN_CLOG10, \"clog10\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n DEF_EXT_C99RES_BUILTIN (BUILT_IN_CLOG10F, \"clog10f\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n DEF_EXT_C99RES_BUILTIN (BUILT_IN_CLOG10L, \"clog10l\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n@@ -757,9 +777,14 @@ DEF_C99_COMPL_BUILTIN        (BUILT_IN_CONJL, \"conjl\", BT_FN_COMPLEX_LONGDOUBLE_\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CPOW, \"cpow\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CPOWF, \"cpowf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CPOWL, \"cpowl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+#define CPOW_TYPE(F) BT_FN_COMPLEX_##F##_COMPLEX_##F##_COMPLEX_##F\n+DEF_EXT_LIB_FLOATN_NX_BUILTINS (BUILT_IN_CPOW, \"cpow\", CPOW_TYPE, ATTR_MATHFN_FPROUNDING)\n+#undef CPOW_TYPE\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CPROJ, \"cproj\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_CONST_NOTHROW_LEAF_LIST)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CPROJF, \"cprojf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_CONST_NOTHROW_LEAF_LIST)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CPROJL, \"cprojl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_CONST_NOTHROW_LEAF_LIST)\n+#define CPROJ_TYPE(F) BT_FN_COMPLEX_##F##_COMPLEX_##F\n+DEF_EXT_LIB_FLOATN_NX_BUILTINS (BUILT_IN_CPROJ, \"cproj\", CPROJ_TYPE, ATTR_CONST_NOTHROW_LEAF_LIST)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CREAL, \"creal\", BT_FN_DOUBLE_COMPLEX_DOUBLE, ATTR_CONST_NOTHROW_LEAF_LIST)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CREALF, \"crealf\", BT_FN_FLOAT_COMPLEX_FLOAT, ATTR_CONST_NOTHROW_LEAF_LIST)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CREALL, \"creall\", BT_FN_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_CONST_NOTHROW_LEAF_LIST)\n@@ -768,16 +793,22 @@ DEF_C99_COMPL_BUILTIN        (BUILT_IN_CSINF, \"csinf\", BT_FN_COMPLEX_FLOAT_COMPL\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CSINH, \"csinh\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CSINHF, \"csinhf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CSINHL, \"csinhl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_EXT_LIB_FLOATN_NX_BUILTINS (BUILT_IN_CSINH, \"csinh\", CPROJ_TYPE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CSINL, \"csinl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_EXT_LIB_FLOATN_NX_BUILTINS (BUILT_IN_CSIN, \"csin\", CPROJ_TYPE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CSQRT, \"csqrt\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CSQRTF, \"csqrtf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CSQRTL, \"csqrtl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_EXT_LIB_FLOATN_NX_BUILTINS (BUILT_IN_CSQRT, \"csqrt\", CPROJ_TYPE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CTAN, \"ctan\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CTANF, \"ctanf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CTANH, \"ctanh\", BT_FN_COMPLEX_DOUBLE_COMPLEX_DOUBLE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CTANHF, \"ctanhf\", BT_FN_COMPLEX_FLOAT_COMPLEX_FLOAT, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CTANHL, \"ctanhl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_EXT_LIB_FLOATN_NX_BUILTINS (BUILT_IN_CTANH, \"ctanh\", CPROJ_TYPE, ATTR_MATHFN_FPROUNDING)\n DEF_C99_COMPL_BUILTIN        (BUILT_IN_CTANL, \"ctanl\", BT_FN_COMPLEX_LONGDOUBLE_COMPLEX_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_EXT_LIB_FLOATN_NX_BUILTINS (BUILT_IN_CTAN, \"ctan\", CPROJ_TYPE, ATTR_MATHFN_FPROUNDING)\n+#undef CPROJ_TYPE\n \n /* Category: string/memory builtins.  */\n DEF_EXT_LIB_BUILTIN    (BUILT_IN_BCMP, \"bcmp\", BT_FN_INT_CONST_PTR_CONST_PTR_SIZE, ATTR_PURE_NOTHROW_NONNULL_LEAF)"}, {"sha": "8ceed8f02f974574f7a60bc270e2e2400411dd79", "filename": "gcc/fold-const-call.cc", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/259a11555c90783e53c046c310080407ee54a31e/gcc%2Ffold-const-call.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/259a11555c90783e53c046c310080407ee54a31e/gcc%2Ffold-const-call.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const-call.cc?ref=259a11555c90783e53c046c310080407ee54a31e", "patch": "@@ -1112,6 +1112,7 @@ fold_const_call_sc (real_value *result, combined_fn fn,\n   switch (fn)\n     {\n     CASE_CFN_CABS:\n+    CASE_CFN_CABS_FN:\n       return do_mpfr_arg2 (result, mpfr_hypot, arg_real, arg_imag, format);\n \n     default:\n@@ -1135,14 +1136,17 @@ fold_const_call_cc (real_value *result_real, real_value *result_imag,\n   switch (fn)\n     {\n     CASE_CFN_CCOS:\n+    CASE_CFN_CCOS_FN:\n       return do_mpc_arg1 (result_real, result_imag, mpc_cos,\n \t\t\t  arg_real, arg_imag, format);\n \n     CASE_CFN_CCOSH:\n+    CASE_CFN_CCOSH_FN:\n       return do_mpc_arg1 (result_real, result_imag, mpc_cosh,\n \t\t\t  arg_real, arg_imag, format);\n \n     CASE_CFN_CPROJ:\n+    CASE_CFN_CPROJ_FN:\n       if (real_isinf (arg_real) || real_isinf (arg_imag))\n \t{\n \t  *result_real = dconstinf;\n@@ -1157,54 +1161,67 @@ fold_const_call_cc (real_value *result_real, real_value *result_imag,\n       return true;\n \n     CASE_CFN_CSIN:\n+    CASE_CFN_CSIN_FN:\n       return do_mpc_arg1 (result_real, result_imag, mpc_sin,\n \t\t\t  arg_real, arg_imag, format);\n \n     CASE_CFN_CSINH:\n+    CASE_CFN_CSINH_FN:\n       return do_mpc_arg1 (result_real, result_imag, mpc_sinh,\n \t\t\t  arg_real, arg_imag, format);\n \n     CASE_CFN_CTAN:\n+    CASE_CFN_CTAN_FN:\n       return do_mpc_arg1 (result_real, result_imag, mpc_tan,\n \t\t\t  arg_real, arg_imag, format);\n \n     CASE_CFN_CTANH:\n+    CASE_CFN_CTANH_FN:\n       return do_mpc_arg1 (result_real, result_imag, mpc_tanh,\n \t\t\t  arg_real, arg_imag, format);\n \n     CASE_CFN_CLOG:\n+    CASE_CFN_CLOG_FN:\n       return do_mpc_arg1 (result_real, result_imag, mpc_log,\n \t\t\t  arg_real, arg_imag, format);\n \n     CASE_CFN_CSQRT:\n+    CASE_CFN_CSQRT_FN:\n       return do_mpc_arg1 (result_real, result_imag, mpc_sqrt,\n \t\t\t  arg_real, arg_imag, format);\n \n     CASE_CFN_CASIN:\n+    CASE_CFN_CASIN_FN:\n       return do_mpc_arg1 (result_real, result_imag, mpc_asin,\n \t\t\t  arg_real, arg_imag, format);\n \n     CASE_CFN_CACOS:\n+    CASE_CFN_CACOS_FN:\n       return do_mpc_arg1 (result_real, result_imag, mpc_acos,\n \t\t\t  arg_real, arg_imag, format);\n \n     CASE_CFN_CATAN:\n+    CASE_CFN_CATAN_FN:\n       return do_mpc_arg1 (result_real, result_imag, mpc_atan,\n \t\t\t  arg_real, arg_imag, format);\n \n     CASE_CFN_CASINH:\n+    CASE_CFN_CASINH_FN:\n       return do_mpc_arg1 (result_real, result_imag, mpc_asinh,\n \t\t\t  arg_real, arg_imag, format);\n \n     CASE_CFN_CACOSH:\n+    CASE_CFN_CACOSH_FN:\n       return do_mpc_arg1 (result_real, result_imag, mpc_acosh,\n \t\t\t  arg_real, arg_imag, format);\n \n     CASE_CFN_CATANH:\n+    CASE_CFN_CATANH_FN:\n       return do_mpc_arg1 (result_real, result_imag, mpc_atanh,\n \t\t\t  arg_real, arg_imag, format);\n \n     CASE_CFN_CEXP:\n+    CASE_CFN_CEXP_FN:\n       return do_mpc_arg1 (result_real, result_imag, mpc_exp,\n \t\t\t  arg_real, arg_imag, format);\n \n@@ -1532,6 +1549,7 @@ fold_const_call_ccc (real_value *result_real, real_value *result_imag,\n   switch (fn)\n     {\n     CASE_CFN_CPOW:\n+    CASE_CFN_CPOW_FN:\n       return do_mpc_arg2 (result_real, result_imag, mpc_pow,\n \t\t\t  arg0_real, arg0_imag, arg1_real, arg1_imag, format);\n "}, {"sha": "7e1ea58518be0c506f1f22ee9f9ac77096cc70d0", "filename": "gcc/fold-const.cc", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/259a11555c90783e53c046c310080407ee54a31e/gcc%2Ffold-const.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/259a11555c90783e53c046c310080407ee54a31e/gcc%2Ffold-const.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.cc?ref=259a11555c90783e53c046c310080407ee54a31e", "patch": "@@ -322,36 +322,62 @@ negate_mathfn_p (combined_fn fn)\n   switch (fn)\n     {\n     CASE_CFN_ASIN:\n+    CASE_CFN_ASIN_FN:\n     CASE_CFN_ASINH:\n+    CASE_CFN_ASINH_FN:\n     CASE_CFN_ATAN:\n+    CASE_CFN_ATAN_FN:\n     CASE_CFN_ATANH:\n+    CASE_CFN_ATANH_FN:\n     CASE_CFN_CASIN:\n+    CASE_CFN_CASIN_FN:\n     CASE_CFN_CASINH:\n+    CASE_CFN_CASINH_FN:\n     CASE_CFN_CATAN:\n+    CASE_CFN_CATAN_FN:\n     CASE_CFN_CATANH:\n+    CASE_CFN_CATANH_FN:\n     CASE_CFN_CBRT:\n+    CASE_CFN_CBRT_FN:\n     CASE_CFN_CPROJ:\n+    CASE_CFN_CPROJ_FN:\n     CASE_CFN_CSIN:\n+    CASE_CFN_CSIN_FN:\n     CASE_CFN_CSINH:\n+    CASE_CFN_CSINH_FN:\n     CASE_CFN_CTAN:\n+    CASE_CFN_CTAN_FN:\n     CASE_CFN_CTANH:\n+    CASE_CFN_CTANH_FN:\n     CASE_CFN_ERF:\n+    CASE_CFN_ERF_FN:\n     CASE_CFN_LLROUND:\n+    CASE_CFN_LLROUND_FN:\n     CASE_CFN_LROUND:\n+    CASE_CFN_LROUND_FN:\n     CASE_CFN_ROUND:\n     CASE_CFN_ROUNDEVEN:\n     CASE_CFN_ROUNDEVEN_FN:\n     CASE_CFN_SIN:\n+    CASE_CFN_SIN_FN:\n     CASE_CFN_SINH:\n+    CASE_CFN_SINH_FN:\n     CASE_CFN_TAN:\n+    CASE_CFN_TAN_FN:\n     CASE_CFN_TANH:\n+    CASE_CFN_TANH_FN:\n     CASE_CFN_TRUNC:\n+    CASE_CFN_TRUNC_FN:\n       return true;\n \n     CASE_CFN_LLRINT:\n+    CASE_CFN_LLRINT_FN:\n     CASE_CFN_LRINT:\n+    CASE_CFN_LRINT_FN:\n     CASE_CFN_NEARBYINT:\n+    CASE_CFN_NEARBYINT_FN:\n     CASE_CFN_RINT:\n+    CASE_CFN_RINT_FN:\n       return !flag_rounding_math;\n \n     default:\n@@ -14288,9 +14314,12 @@ tree_expr_finite_p (const_tree x)\n       switch (get_call_combined_fn (x))\n \t{\n \tCASE_CFN_FABS:\n+\tCASE_CFN_FABS_FN:\n \t  return tree_expr_finite_p (CALL_EXPR_ARG (x, 0));\n \tCASE_CFN_FMAX:\n+\tCASE_CFN_FMAX_FN:\n \tCASE_CFN_FMIN:\n+\tCASE_CFN_FMIN_FN:\n \t  return tree_expr_finite_p (CALL_EXPR_ARG (x, 0))\n \t\t && tree_expr_finite_p (CALL_EXPR_ARG (x, 1));\n \tdefault:\n@@ -14408,9 +14437,12 @@ tree_expr_maybe_signaling_nan_p (const_tree x)\n       switch (get_call_combined_fn (x))\n \t{\n \tCASE_CFN_FABS:\n+\tCASE_CFN_FABS_FN:\n \t  return tree_expr_maybe_signaling_nan_p (CALL_EXPR_ARG (x, 0));\n \tCASE_CFN_FMAX:\n+\tCASE_CFN_FMAX_FN:\n \tCASE_CFN_FMIN:\n+\tCASE_CFN_FMIN_FN:\n \t  return tree_expr_maybe_signaling_nan_p (CALL_EXPR_ARG (x, 0))\n \t\t || tree_expr_maybe_signaling_nan_p (CALL_EXPR_ARG (x, 1));\n \tdefault:\n@@ -14481,9 +14513,12 @@ tree_expr_maybe_nan_p (const_tree x)\n       switch (get_call_combined_fn (x))\n \t{\n \tCASE_CFN_FABS:\n+\tCASE_CFN_FABS_FN:\n \t  return tree_expr_maybe_nan_p (CALL_EXPR_ARG (x, 0));\n \tCASE_CFN_FMAX:\n+\tCASE_CFN_FMAX_FN:\n \tCASE_CFN_FMIN:\n+\tCASE_CFN_FMIN_FN:\n \t  return tree_expr_maybe_nan_p (CALL_EXPR_ARG (x, 0))\n \t\t || tree_expr_maybe_nan_p (CALL_EXPR_ARG (x, 1));\n \tdefault:\n@@ -14520,6 +14555,7 @@ tree_expr_maybe_real_minus_zero_p (const_tree x)\n       switch (get_call_combined_fn (x))\n \t{\n \tCASE_CFN_FABS:\n+\tCASE_CFN_FABS_FN:\n \t  return false;\n \tdefault:\n \t  break;\n@@ -14801,6 +14837,7 @@ tree_call_nonnegative_warnv_p (tree type, combined_fn fn, tree arg0, tree arg1,\n     CASE_CFN_ACOSH:\n     CASE_CFN_ACOSH_FN:\n     CASE_CFN_CABS:\n+    CASE_CFN_CABS_FN:\n     CASE_CFN_COSH:\n     CASE_CFN_COSH_FN:\n     CASE_CFN_ERFC:"}, {"sha": "7de6e78ecd8d88e4834f0f5440c3a71ef948786f", "filename": "gcc/gimple-ssa-backprop.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/259a11555c90783e53c046c310080407ee54a31e/gcc%2Fgimple-ssa-backprop.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/259a11555c90783e53c046c310080407ee54a31e/gcc%2Fgimple-ssa-backprop.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-backprop.cc?ref=259a11555c90783e53c046c310080407ee54a31e", "patch": "@@ -351,10 +351,15 @@ backprop::process_builtin_call_use (gcall *call, tree rhs, usage_info *info)\n       break;\n \n     CASE_CFN_COS:\n+    CASE_CFN_COS_FN:\n     CASE_CFN_COSH:\n+    CASE_CFN_COSH_FN:\n     CASE_CFN_CCOS:\n+    CASE_CFN_CCOS_FN:\n     CASE_CFN_CCOSH:\n+    CASE_CFN_CCOSH_FN:\n     CASE_CFN_HYPOT:\n+    CASE_CFN_HYPOT_FN:\n       /* The signs of all inputs are ignored.  */\n       info->flags.ignore_sign = true;\n       break;\n@@ -367,6 +372,7 @@ backprop::process_builtin_call_use (gcall *call, tree rhs, usage_info *info)\n       break;\n \n     CASE_CFN_POW:\n+    CASE_CFN_POW_FN:\n       {\n \t/* The sign of the first input is ignored as long as the second\n \t   input is an even real.  */"}]}