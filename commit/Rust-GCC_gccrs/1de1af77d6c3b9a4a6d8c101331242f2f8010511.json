{"sha": "1de1af77d6c3b9a4a6d8c101331242f2f8010511", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRlMWFmNzdkNmMzYjlhNGE2ZDhjMTAxMzMxMjQyZjJmODAxMDUxMQ==", "commit": {"author": {"name": "Jesper Nilsson", "email": "jesper.nilsson@axis.com", "date": "2007-10-12T10:23:55Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-10-12T10:23:55Z"}, "message": "20_riemann_zeta/check_value_neg.c (MAX_ITERATIONS): Add limit when target is simulator.\n\n2007-10-12  Jesper Nilsson  <jesper.nilsson@axis.com>\n\n       * testsuite/tr1/5_numerical_facilities/special_functions/\n       20_riemann_zeta/check_value_neg.c (MAX_ITERATIONS): Add limit\n       when target is simulator.\n       * testsuite/tr1/5_numerical_facilities/special_functions/\n       20_riemann_zeta/check_value_pos.c (MAX_ITERATIONS): Likewise.\n\nFrom-SVN: r129258", "tree": {"sha": "3d9e357d8b35d2d51beebaf0ab91eaef57f1167f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d9e357d8b35d2d51beebaf0ab91eaef57f1167f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1de1af77d6c3b9a4a6d8c101331242f2f8010511", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1de1af77d6c3b9a4a6d8c101331242f2f8010511", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1de1af77d6c3b9a4a6d8c101331242f2f8010511", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1de1af77d6c3b9a4a6d8c101331242f2f8010511/comments", "author": {"login": "jniax", "id": 79859639, "node_id": "MDQ6VXNlcjc5ODU5NjM5", "avatar_url": "https://avatars.githubusercontent.com/u/79859639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jniax", "html_url": "https://github.com/jniax", "followers_url": "https://api.github.com/users/jniax/followers", "following_url": "https://api.github.com/users/jniax/following{/other_user}", "gists_url": "https://api.github.com/users/jniax/gists{/gist_id}", "starred_url": "https://api.github.com/users/jniax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jniax/subscriptions", "organizations_url": "https://api.github.com/users/jniax/orgs", "repos_url": "https://api.github.com/users/jniax/repos", "events_url": "https://api.github.com/users/jniax/events{/privacy}", "received_events_url": "https://api.github.com/users/jniax/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f42054423ce58a79e82471c292996818157e17ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f42054423ce58a79e82471c292996818157e17ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f42054423ce58a79e82471c292996818157e17ad"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "6f175345ebc31c8b50187f0c4195bdc31425cd95", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1de1af77d6c3b9a4a6d8c101331242f2f8010511/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1de1af77d6c3b9a4a6d8c101331242f2f8010511/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1de1af77d6c3b9a4a6d8c101331242f2f8010511", "patch": "@@ -1,3 +1,11 @@\n+2007-10-12  Jesper Nilsson  <jesper.nilsson@axis.com>\n+\n+       * testsuite/tr1/5_numerical_facilities/special_functions/\n+       20_riemann_zeta/check_value_neg.c (MAX_ITERATIONS): Add limit\n+       when target is simulator.\n+       * testsuite/tr1/5_numerical_facilities/special_functions/\n+       20_riemann_zeta/check_value_pos.c (MAX_ITERATIONS): Likewise.\n+\n 2007-10-11  Roger Sayle  <roger@eyesopen.com>\n \n \t* acinclude.m4 (GLIBCXX_CHECK_SYSTEM_ERROR): Add EOVERFLOW for Tru64."}, {"sha": "ac80c334d31c11cf92fb99169d14c5131c6975f8", "filename": "libstdc++-v3/testsuite/tr1/5_numerical_facilities/special_functions/20_riemann_zeta/check_value_neg.cc", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1de1af77d6c3b9a4a6d8c101331242f2f8010511/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F20_riemann_zeta%2Fcheck_value_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1de1af77d6c3b9a4a6d8c101331242f2f8010511/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F20_riemann_zeta%2Fcheck_value_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F20_riemann_zeta%2Fcheck_value_neg.cc?ref=1de1af77d6c3b9a4a6d8c101331242f2f8010511", "patch": "@@ -20,6 +20,12 @@\n \n //  riemann_zeta\n \n+// This can take long on simulators, timing out the test.\n+// { dg-options \"-DMAX_ITERATIONS=5\" { target simulator } }\n+\n+#ifndef MAX_ITERATIONS\n+#define MAX_ITERATIONS (sizeof(data001) / sizeof(testcase_riemann_zeta<double>))\n+#endif\n \n //  Compare against values generated by the GNU Scientific Library.\n //  The GSL can be found on the web: http://www.gnu.org/software/gsl/\n@@ -106,8 +112,7 @@ void test001()\n   const Tp eps = std::numeric_limits<Tp>::epsilon();\n   Tp max_abs_diff = -Tp(1);\n   Tp max_abs_frac = -Tp(1);\n-  unsigned int num_datum = sizeof(data001)\n-                         / sizeof(testcase_riemann_zeta<double>);\n+  unsigned int num_datum = MAX_ITERATIONS;\n   for (unsigned int i = 0; i < num_datum; ++i)\n     {\n       const Tp f = std::tr1::riemann_zeta(Tp(data001[i].x));"}, {"sha": "e5d8758ec4d6fbed3c6e0b7d751eb606b58b1a82", "filename": "libstdc++-v3/testsuite/tr1/5_numerical_facilities/special_functions/20_riemann_zeta/check_value_pos.cc", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1de1af77d6c3b9a4a6d8c101331242f2f8010511/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F20_riemann_zeta%2Fcheck_value_pos.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1de1af77d6c3b9a4a6d8c101331242f2f8010511/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F20_riemann_zeta%2Fcheck_value_pos.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F20_riemann_zeta%2Fcheck_value_pos.cc?ref=1de1af77d6c3b9a4a6d8c101331242f2f8010511", "patch": "@@ -20,6 +20,12 @@\n \n //  riemann_zeta\n \n+// This can take long on simulators, timing out the test.\n+// { dg-options \"-DMAX_ITERATIONS=5\" { target simulator } }\n+\n+#ifndef MAX_ITERATIONS\n+#define MAX_ITERATIONS (sizeof(data001) / sizeof(testcase_riemann_zeta<double>))\n+#endif\n \n //  Compare against values generated by the GNU Scientific Library.\n //  The GSL can be found on the web: http://www.gnu.org/software/gsl/\n@@ -196,8 +202,7 @@ void test001()\n   const Tp eps = std::numeric_limits<Tp>::epsilon();\n   Tp max_abs_diff = -Tp(1);\n   Tp max_abs_frac = -Tp(1);\n-  unsigned int num_datum = sizeof(data001)\n-                         / sizeof(testcase_riemann_zeta<double>);\n+  unsigned int num_datum = MAX_ITERATIONS;\n   for (unsigned int i = 0; i < num_datum; ++i)\n     {\n       const Tp f = std::tr1::riemann_zeta(Tp(data001[i].x));"}]}