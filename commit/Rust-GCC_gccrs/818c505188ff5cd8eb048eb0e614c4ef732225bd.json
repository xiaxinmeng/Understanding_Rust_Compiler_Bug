{"sha": "818c505188ff5cd8eb048eb0e614c4ef732225bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE4YzUwNTE4OGZmNWNkOGViMDQ4ZWIwZTYxNGM0ZWY3MzIyMjViZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-09-14T14:56:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-09-14T14:56:30Z"}, "message": "c++: Update DECL_*SIZE for objects with flexible array members with initializers [PR102295]\n\nThe C FE updates DECL_*SIZE for vars which have initializers for flexible\narray members for many years, but C++ FE kept DECL_*SIZE the same as the\ntype size (i.e. as if there were zero elements in the flexible array\nmember).  This results e.g. in ELF symbol sizes being too small.\n\nNote, if the flexible array member is initialized only with non-constant\ninitializers, we have a worse bug that this patch doesn't solve, the\nsplitting of initializers into constant and dynamic initialization removes\nthe initializer and we don't have just wrong DECL_*SIZE, but nothing is\nemitted when emitting those vars into assembly either and so the dynamic\ninitialization clobbers other vars that may overlap the variable.\nI think we need keep an empty CONSTRUCTOR elt in DECL_INITIAL for the\nflexible array member in that case.\n\n2021-09-14  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/102295\n\t* decl.c (layout_var_decl): For aggregates ending with a flexible\n\tarray member, add the size of the initializer for that member to\n\tDECL_SIZE and DECL_SIZE_UNIT.\n\n\t* g++.target/i386/pr102295.C: New test.", "tree": {"sha": "a35f59d189662ac60d0dcaee58b39329cfda492e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a35f59d189662ac60d0dcaee58b39329cfda492e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/818c505188ff5cd8eb048eb0e614c4ef732225bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/818c505188ff5cd8eb048eb0e614c4ef732225bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/818c505188ff5cd8eb048eb0e614c4ef732225bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/818c505188ff5cd8eb048eb0e614c4ef732225bd/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f008fd3a480e3718436156697ebe7eeb47841457", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f008fd3a480e3718436156697ebe7eeb47841457", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f008fd3a480e3718436156697ebe7eeb47841457"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "1a2925b41087195df0fb52b27cbeffa585f50924", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/818c505188ff5cd8eb048eb0e614c4ef732225bd/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/818c505188ff5cd8eb048eb0e614c4ef732225bd/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=818c505188ff5cd8eb048eb0e614c4ef732225bd", "patch": "@@ -6124,6 +6124,38 @@ layout_var_decl (tree decl)\n \t  error_at (DECL_SOURCE_LOCATION (decl),\n \t\t    \"storage size of %qD isn%'t constant\", decl);\n \t  TREE_TYPE (decl) = error_mark_node;\n+\t  type = error_mark_node;\n+\t}\n+    }\n+\n+  /* If the final element initializes a flexible array field, add the size of\n+     that initializer to DECL's size.  */\n+  if (type != error_mark_node\n+      && DECL_INITIAL (decl)\n+      && TREE_CODE (DECL_INITIAL (decl)) == CONSTRUCTOR\n+      && !vec_safe_is_empty (CONSTRUCTOR_ELTS (DECL_INITIAL (decl)))\n+      && DECL_SIZE (decl) != NULL_TREE\n+      && TREE_CODE (DECL_SIZE (decl)) == INTEGER_CST\n+      && TYPE_SIZE (type) != NULL_TREE\n+      && TREE_CODE (TYPE_SIZE (type)) == INTEGER_CST\n+      && tree_int_cst_equal (DECL_SIZE (decl), TYPE_SIZE (type)))\n+    {\n+      constructor_elt &elt = CONSTRUCTOR_ELTS (DECL_INITIAL (decl))->last ();\n+      if (elt.index)\n+\t{\n+\t  tree itype = TREE_TYPE (elt.index);\n+\t  tree vtype = TREE_TYPE (elt.value);\n+\t  if (TREE_CODE (itype) == ARRAY_TYPE\n+\t      && TYPE_DOMAIN (itype) == NULL\n+\t      && TREE_CODE (vtype) == ARRAY_TYPE\n+\t      && COMPLETE_TYPE_P (vtype))\n+\t    {\n+\t      DECL_SIZE (decl)\n+\t\t= size_binop (PLUS_EXPR, DECL_SIZE (decl), TYPE_SIZE (vtype));\n+\t      DECL_SIZE_UNIT (decl)\n+\t\t= size_binop (PLUS_EXPR, DECL_SIZE_UNIT (decl),\n+\t\t\t      TYPE_SIZE_UNIT (vtype));\n+\t    }\n \t}\n     }\n }"}, {"sha": "09efc3c8a86ff162c44c01ca29aba5bc8ba79a0d", "filename": "gcc/testsuite/g++.target/i386/pr102295.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/818c505188ff5cd8eb048eb0e614c4ef732225bd/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fpr102295.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/818c505188ff5cd8eb048eb0e614c4ef732225bd/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fpr102295.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fpr102295.C?ref=818c505188ff5cd8eb048eb0e614c4ef732225bd", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/102295\n+// { dg-do compile { target *-*-linux* } }\n+// { dg-options \"-Wno-pedantic\" }\n+\n+struct S {\n+  int a;\n+  int b[];\n+} S;\n+\n+struct S s = { 1, { 2, 3 } };\n+\n+/* { dg-final { scan-assembler \".size\\[\\t \\]*s, 12\" } } */"}]}