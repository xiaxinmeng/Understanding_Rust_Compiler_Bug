{"sha": "414fef4e668856edb8ca885525679c5d5e691fd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE0ZmVmNGU2Njg4NTZlZGI4Y2E4ODU1MjU2NzljNWQ1ZTY5MWZkMQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-02-08T12:53:19Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-02-08T12:53:19Z"}, "message": "re PR target/84278 (claims initv4sfv2sf is available but inits through stack)\n\n2018-02-08  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/84278\n\t* tree-vect-stmts.c (vectorizable_store): When looking for\n\tsmaller vector types to perform grouped strided loads/stores\n\tmake sure the mode is supported by the target.\n\t(vectorizable_load): Likewise.\n\n\t* gcc.target/i386/pr84278.c: New testcase.\n\nFrom-SVN: r257483", "tree": {"sha": "49464308ce816e59aa6d1ded21d7cee05a912130", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49464308ce816e59aa6d1ded21d7cee05a912130"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/414fef4e668856edb8ca885525679c5d5e691fd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/414fef4e668856edb8ca885525679c5d5e691fd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/414fef4e668856edb8ca885525679c5d5e691fd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/414fef4e668856edb8ca885525679c5d5e691fd1/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3f26f054872c375e7f9a80ede7a56036d9b57597", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f26f054872c375e7f9a80ede7a56036d9b57597", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f26f054872c375e7f9a80ede7a56036d9b57597"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "4d65b9435a58853b9d1c053de75a2ede872358f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/414fef4e668856edb8ca885525679c5d5e691fd1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/414fef4e668856edb8ca885525679c5d5e691fd1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=414fef4e668856edb8ca885525679c5d5e691fd1", "patch": "@@ -1,3 +1,11 @@\n+2018-02-08  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/84278\n+\t* tree-vect-stmts.c (vectorizable_store): When looking for\n+\tsmaller vector types to perform grouped strided loads/stores\n+\tmake sure the mode is supported by the target.\n+\t(vectorizable_load): Likewise.\n+\n 2018-02-08  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_components_for_bb):"}, {"sha": "5146f7ba612eeb272ab4807e00cd213d45327131", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/414fef4e668856edb8ca885525679c5d5e691fd1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/414fef4e668856edb8ca885525679c5d5e691fd1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=414fef4e668856edb8ca885525679c5d5e691fd1", "patch": "@@ -1,3 +1,8 @@\n+2018-02-08  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/84278\n+\t* gcc.target/i386/pr84278.c: New testcase.\n+\n 2018-02-08  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \tPR rtl-optimization/84068"}, {"sha": "31e6288af0589cec14178f35b7d50ceef94e8a97", "filename": "gcc/testsuite/gcc.target/i386/pr84278.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/414fef4e668856edb8ca885525679c5d5e691fd1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr84278.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/414fef4e668856edb8ca885525679c5d5e691fd1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr84278.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr84278.c?ref=414fef4e668856edb8ca885525679c5d5e691fd1", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -msse2\" } */\n+\n+float A[1024];\n+float B[1024];\n+int s;\n+\n+void foo(void)\n+{\n+  int i;\n+  for (i = 0; i < 128; i++)\n+    {\n+      B[i*2+0] = A[i*s+0];\n+      B[i*2+1] = A[i*s+1];\n+    }\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\(%.sp\\)\" } } */"}, {"sha": "c5085ca9c0ae54c093f55bac42e781170ea02a6f", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/414fef4e668856edb8ca885525679c5d5e691fd1/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/414fef4e668856edb8ca885525679c5d5e691fd1/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=414fef4e668856edb8ca885525679c5d5e691fd1", "patch": "@@ -6510,6 +6510,7 @@ vectorizable_store (gimple *stmt, gimple_stmt_iterator *gsi, gimple **vec_stmt,\n \t      machine_mode vmode;\n \t      if (!mode_for_vector (elmode, group_size).exists (&vmode)\n \t\t  || !VECTOR_MODE_P (vmode)\n+\t\t  || !targetm.vector_mode_supported_p (vmode)\n \t\t  || (convert_optab_handler (vec_extract_optab,\n \t\t\t\t\t     TYPE_MODE (vectype), vmode)\n \t\t      == CODE_FOR_nothing))\n@@ -6528,6 +6529,7 @@ vectorizable_store (gimple *stmt, gimple_stmt_iterator *gsi, gimple **vec_stmt,\n \t\t     element size stores.  */\n \t\t  if (mode_for_vector (elmode, lnunits).exists (&vmode)\n \t\t      && VECTOR_MODE_P (vmode)\n+\t\t      && targetm.vector_mode_supported_p (vmode)\n \t\t      && (convert_optab_handler (vec_extract_optab,\n \t\t\t\t\t\t vmode, elmode)\n \t\t\t  != CODE_FOR_nothing))\n@@ -7573,6 +7575,7 @@ vectorizable_load (gimple *stmt, gimple_stmt_iterator *gsi, gimple **vec_stmt,\n \t      machine_mode vmode;\n \t      if (mode_for_vector (elmode, group_size).exists (&vmode)\n \t\t  && VECTOR_MODE_P (vmode)\n+\t\t  && targetm.vector_mode_supported_p (vmode)\n \t\t  && (convert_optab_handler (vec_init_optab,\n \t\t\t\t\t     TYPE_MODE (vectype), vmode)\n \t\t      != CODE_FOR_nothing))\n@@ -7598,6 +7601,7 @@ vectorizable_load (gimple *stmt, gimple_stmt_iterator *gsi, gimple **vec_stmt,\n \t\t     element loads of the original vector type.  */\n \t\t  if (mode_for_vector (elmode, lnunits).exists (&vmode)\n \t\t      && VECTOR_MODE_P (vmode)\n+\t\t      && targetm.vector_mode_supported_p (vmode)\n \t\t      && (convert_optab_handler (vec_init_optab, vmode, elmode)\n \t\t\t  != CODE_FOR_nothing))\n \t\t    {"}]}