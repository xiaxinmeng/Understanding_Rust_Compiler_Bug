{"sha": "019bd543a9a7c24396eab29a97e4c30c7931bf4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE5YmQ1NDNhOWE3YzI0Mzk2ZWFiMjlhOTdlNGMzMGM3OTMxYmY0ZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-05-09T14:07:01Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-05-09T14:07:01Z"}, "message": "vect-44.c: Add --param vect-max-peeling-for-alignment=0 and adjust.\n\n2017-05-09  Richard Biener  <rguenther@suse.de>\n\n\t* gcc.dg/vect/vect-44.c: Add --param vect-max-peeling-for-alignment=0\n\tand adjust.\n\t* gcc.dg/vect/vect-50.c: Likewise.\n\nFrom-SVN: r247794", "tree": {"sha": "862e718fc749e4b64f6e71adbe4ec30705126556", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/862e718fc749e4b64f6e71adbe4ec30705126556"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/019bd543a9a7c24396eab29a97e4c30c7931bf4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/019bd543a9a7c24396eab29a97e4c30c7931bf4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/019bd543a9a7c24396eab29a97e4c30c7931bf4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/019bd543a9a7c24396eab29a97e4c30c7931bf4d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6064858051d6e07bb89f3384c0d828f07c576c7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6064858051d6e07bb89f3384c0d828f07c576c7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6064858051d6e07bb89f3384c0d828f07c576c7a"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "84f72e570d5ffe5389e99ee904fa7581bc2d4302", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019bd543a9a7c24396eab29a97e4c30c7931bf4d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019bd543a9a7c24396eab29a97e4c30c7931bf4d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=019bd543a9a7c24396eab29a97e4c30c7931bf4d", "patch": "@@ -1,3 +1,9 @@\n+2017-05-09  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/vect/vect-44.c: Add --param vect-max-peeling-for-alignment=0\n+\tand adjust.\n+\t* gcc.dg/vect/vect-50.c: Likewise.\n+\n 2017-05-09  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/80525"}, {"sha": "f4efb17c0eb19294c95d4121b52d482e2ab9301f", "filename": "gcc/testsuite/gcc.dg/vect/vect-44.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019bd543a9a7c24396eab29a97e4c30c7931bf4d/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-44.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019bd543a9a7c24396eab29a97e4c30c7931bf4d/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-44.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-44.c?ref=019bd543a9a7c24396eab29a97e4c30c7931bf4d", "patch": "@@ -1,6 +1,6 @@\n /* { dg-require-effective-target vect_float } */\n+/* { dg-additional-options \"--param vect-max-peeling-for-alignment=0\" } */\n \n-#include <stdarg.h>\n #include \"tree-vect.h\"\n \n #define N 256\n@@ -65,7 +65,7 @@ int main (void)\n    two loads to be aligned).  */\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail { vect_no_align && { ! vect_hw_misalign } } } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail { { vect_no_align && { ! vect_hw_misalign } } || {! vector_alignment_reachable} } } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 3 \"vect\" { xfail { vect_no_align && { ! vect_hw_misalign } } } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" { xfail { { vect_no_align && { ! vect_hw_misalign } } || {! vector_alignment_reachable} } } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning.\" 3 \"vect\" { target { vect_no_align && { ! vect_hw_misalign } } } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning.\" 1 \"vect\" { target { {! vector_alignment_reachable} && {{! vect_no_align} && {! vect_hw_misalign} } } } } } */"}, {"sha": "cadbcbb90158412914c24b46fd0568f9369ebb1d", "filename": "gcc/testsuite/gcc.dg/vect/vect-50.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019bd543a9a7c24396eab29a97e4c30c7931bf4d/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-50.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019bd543a9a7c24396eab29a97e4c30c7931bf4d/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-50.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-50.c?ref=019bd543a9a7c24396eab29a97e4c30c7931bf4d", "patch": "@@ -1,6 +1,6 @@\n /* { dg-require-effective-target vect_float } */\n+/* { dg-additional-options \"--param vect-max-peeling-for-alignment=0\" } */\n \n-#include <stdarg.h>\n #include \"tree-vect.h\"\n \n #define N 256\n@@ -61,8 +61,8 @@ int main (void)\n    align the store will not force the two loads to be aligned).  */\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail { vect_no_align && { ! vect_hw_misalign } } } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { target vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail { { vect_no_align && { ! vect_hw_misalign } } || {! vector_alignment_reachable} } } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 3 \"vect\" { xfail { vect_no_align && { ! vect_hw_misalign } } } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 3 \"vect\" { target vect_hw_misalign } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" { xfail { { vect_no_align && { ! vect_hw_misalign } } || {! vector_alignment_reachable} } } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning.\" 3 \"vect\" { target { vect_no_align && { ! vect_hw_misalign } } } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning.\" 1 \"vect\" { target { {! vector_alignment_reachable} && { {! vect_no_align } && {! vect_hw_misalign } } } } } } */"}]}