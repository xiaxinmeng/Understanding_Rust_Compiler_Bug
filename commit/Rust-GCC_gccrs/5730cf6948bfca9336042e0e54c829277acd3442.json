{"sha": "5730cf6948bfca9336042e0e54c829277acd3442", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTczMGNmNjk0OGJmY2E5MzM2MDQyZTBlNTRjODI5Mjc3YWNkMzQ0Mg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-14T12:07:24Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-14T12:07:24Z"}, "message": "(start_function): New parameter for attributes.\n\nFrom-SVN: r9943", "tree": {"sha": "7a618078c63898507c5dbd1726c64f1c222581da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a618078c63898507c5dbd1726c64f1c222581da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5730cf6948bfca9336042e0e54c829277acd3442", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5730cf6948bfca9336042e0e54c829277acd3442", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5730cf6948bfca9336042e0e54c829277acd3442", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5730cf6948bfca9336042e0e54c829277acd3442/comments", "author": null, "committer": null, "parents": [{"sha": "866890d94a0d1cbdb9b16cf14fe6250ae96c6bcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/866890d94a0d1cbdb9b16cf14fe6250ae96c6bcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/866890d94a0d1cbdb9b16cf14fe6250ae96c6bcc"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "20ca6ad1ac6df37aa4d16e7347803ca7ace30d65", "filename": "gcc/c-decl.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5730cf6948bfca9336042e0e54c829277acd3442/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5730cf6948bfca9336042e0e54c829277acd3442/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=5730cf6948bfca9336042e0e54c829277acd3442", "patch": "@@ -5948,8 +5948,8 @@ build_enumerator (name, value)\n }\n \f\n /* Create the FUNCTION_DECL for a function definition.\n-   DECLSPECS, DECLARATOR, and ATTRIBUTES are the parts of the declaration;\n-   they describe the function's name and the type it returns,\n+   DECLSPECS, DECLARATOR, PREFIX_ATTRIBUTES and ATTRIBUTES are the parts of\n+   the declaration; they describe the function's name and the type it returns,\n    but twisted together in a fashion that parallels the syntax of C.\n \n    This function creates a binding context for the function body\n@@ -5962,8 +5962,8 @@ build_enumerator (name, value)\n    NESTED is nonzero for a function nested within another function.  */\n \n int\n-start_function (declspecs, declarator, attributes, nested)\n-     tree declarator, declspecs, attributes;\n+start_function (declspecs, declarator, prefix_attributes, attributes, nested)\n+     tree declarator, declspecs, prefix_attributes, attributes;\n      int nested;\n {\n   tree decl1, old_decl;\n@@ -5988,8 +5988,7 @@ start_function (declspecs, declarator, attributes, nested)\n   if (decl1 == 0)\n     return 0;\n \n-  if (attributes)\n-    decl_attributes (decl1, NULL_TREE, attributes);\n+  decl_attributes (decl1, prefix_attributes, attributes);\n \n   announce_function (decl1);\n "}, {"sha": "2385ebbff534b20b2420282c390ec38ef521beef", "filename": "gcc/c-tree.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5730cf6948bfca9336042e0e54c829277acd3442/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5730cf6948bfca9336042e0e54c829277acd3442/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=5730cf6948bfca9336042e0e54c829277acd3442", "patch": "@@ -303,7 +303,8 @@ extern void shadow_record_fields                PROTO((tree));\n extern void shadow_tag                          PROTO((tree));\n extern void shadow_tag_warned                   PROTO((tree, int));\n extern tree start_enum                          PROTO((tree));\n-extern int  start_function                      PROTO((tree, tree, tree, int));\n+extern int  start_function                      PROTO((tree, tree, tree,\n+\t\t\t\t\t\t       tree, int));\n extern tree start_decl                          PROTO((tree, tree, int,\n \t\t\t\t\t\t       tree, tree));\n extern tree start_struct                        PROTO((enum tree_code, tree));"}]}