{"sha": "6d28b933700949abc20728a4a8a931c4679ae329", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQyOGI5MzM3MDA5NDlhYmMyMDcyOGE0YThhOTMxYzQ2NzlhZTMyOQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2010-07-05T17:19:33Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2010-07-05T17:19:33Z"}, "message": "acinclude.m4 (LIBGOMP_ENABLE_SYMVERS): Handle sun style.\n\n\t* acinclude.m4 (LIBGOMP_ENABLE_SYMVERS): Handle sun style.\n\tDefine LIBGOMP_BUILD_VERSIONED_SHLIB_GNU,\n\tLIBGOMP_BUILD_VERSIONED_SHLIB_SUN automake conditionals.\n\t(HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT): Define unless\n\ttargetting solaris2*.\n\t* configure: Regenerate.\n\t* config.h.in: Regenerate.\n\n\t* Makefile.am [LIBGOMP_BUILD_VERSIONED_SHLIB]: Protect\n\tlibgomp_version_script with LIBGOMP_BUILD_VERSIONED_SHLIB_GNU.\n\tAdd libgomp_version_dep.\n\t[LIBGOMP_BUILD_VERSIONED_SHLIB_SUN]: Handle Sun symbol\n\tversioning.\n\t[!LIBGOMP_BUILD_VERSIONED_SHLIB]: Add libgomp_version_dep.\n\t(libgomp_la_DEPENDENCIES): Set to $(libgomp_version_dep).\n\t* Makefile.in: Regenerate.\n\n\t* libgomp.h (LIBGOMP_GNU_SYMBOL_VERSIONING): Undef unless\n\tHAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT.\n\t* libgomp.map (OMP_1.0): Move symbols both in OMP_1.0 and OMP_3.0\n\tto common block, protected by\n\tHAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT.\n\nFrom-SVN: r161842", "tree": {"sha": "70ed1ada8aa540dd60006d46db146cf2635262a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70ed1ada8aa540dd60006d46db146cf2635262a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d28b933700949abc20728a4a8a931c4679ae329", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d28b933700949abc20728a4a8a931c4679ae329", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d28b933700949abc20728a4a8a931c4679ae329", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d28b933700949abc20728a4a8a931c4679ae329/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bdf0f819d51b7e0a5f758a721658536369b4fd7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdf0f819d51b7e0a5f758a721658536369b4fd7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdf0f819d51b7e0a5f758a721658536369b4fd7a"}], "stats": {"total": 265, "additions": 237, "deletions": 28}, "files": [{"sha": "4ac37eb56c04d81e872a5f0b31217aaeee8028ab", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d28b933700949abc20728a4a8a931c4679ae329/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d28b933700949abc20728a4a8a931c4679ae329/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=6d28b933700949abc20728a4a8a931c4679ae329", "patch": "@@ -1,3 +1,28 @@\n+2010-07-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* acinclude.m4 (LIBGOMP_ENABLE_SYMVERS): Handle sun style.\n+\tDefine LIBGOMP_BUILD_VERSIONED_SHLIB_GNU,\n+\tLIBGOMP_BUILD_VERSIONED_SHLIB_SUN automake conditionals.\n+\t(HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT): Define unless\n+\ttargetting solaris2*.\n+\t* configure: Regenerate.\n+\t* config.h.in: Regenerate.\n+\n+\t* Makefile.am [LIBGOMP_BUILD_VERSIONED_SHLIB]: Protect\n+\tlibgomp_version_script with LIBGOMP_BUILD_VERSIONED_SHLIB_GNU.\n+\tAdd libgomp_version_dep.\n+\t[LIBGOMP_BUILD_VERSIONED_SHLIB_SUN]: Handle Sun symbol\n+\tversioning.\n+\t[!LIBGOMP_BUILD_VERSIONED_SHLIB]: Add libgomp_version_dep.\n+\t(libgomp_la_DEPENDENCIES): Set to $(libgomp_version_dep).\n+\t* Makefile.in: Regenerate.\n+\n+\t* libgomp.h (LIBGOMP_GNU_SYMBOL_VERSIONING): Undef unless\n+\tHAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT.\n+\t* libgomp.map (OMP_1.0): Move symbols both in OMP_1.0 and OMP_3.0\n+\tto common block, protected by\n+\tHAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT.\n+\n 2010-06-10  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* libgomp.texi: Move to GFDL version 1.3.  Update copyright years."}, {"sha": "2428e66ee7a616e190876d39d86f37ca8efa4438", "filename": "libgomp/Makefile.am", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d28b933700949abc20728a4a8a931c4679ae329/libgomp%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d28b933700949abc20728a4a8a931c4679ae329/libgomp%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FMakefile.am?ref=6d28b933700949abc20728a4a8a931c4679ae329", "patch": "@@ -22,13 +22,39 @@ toolexeclib_LTLIBRARIES = libgomp.la\n nodist_toolexeclib_HEADERS = libgomp.spec\n \n if LIBGOMP_BUILD_VERSIONED_SHLIB\n+if LIBGOMP_BUILD_VERSIONED_SHLIB_GNU\n+if LIBGOMP_BUILD_VERSIONED_SHLIB_SOL2\n+libgomp_version_script = -Wl,--version-script,libgomp.map-sol2\n+libgomp_version_dep = libgomp.map-sol2\n+libgomp.map-sol2 : $(top_srcdir)/libgomp.map\n+\tsed -e '/^#ifdef HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT/,/^#endif/d' $< \\\n+\t > $@ || (rm -f $@ ; exit 1)\n+else\n libgomp_version_script = -Wl,--version-script,$(top_srcdir)/libgomp.map\n+libgomp_version_dep = $(top_srcdir)/libgomp.map\n+endif\n+endif\n+if LIBGOMP_BUILD_VERSIONED_SHLIB_SUN\n+libgomp_version_script = -Wl,-M,libgomp.map-sun\n+libgomp_version_dep = libgomp.map-sun\n+libgomp.map-sun : $(top_srcdir)/libgomp.map \\\n+\t\t$(top_srcdir)/../contrib/make_sunver.pl \\\n+\t\t$(libgomp_la_OBJECTS) $(libgomp_la_LIBADD)\n+\tperl $(top_srcdir)/../contrib/make_sunver.pl \\\n+\t  $(top_srcdir)/libgomp.map \\\n+\t  $(libgomp_la_OBJECTS:%.lo=.libs/%.o) \\\n+\t `echo $(libgomp_la_LIBADD) | \\\n+\t    sed 's,/\\([^/.]*\\)\\.la,/.libs/\\1.a,g'` \\\n+\t > $@ || (rm -f $@ ; exit 1)\n+endif\n else\n libgomp_version_script =\n+libgomp_version_dep =\n endif\n libgomp_version_info = -version-info $(libtool_VERSION)\n libgomp_la_LDFLAGS = $(libgomp_version_info) $(libgomp_version_script) \\\n         -no-undefined -bindir \"$(bindir)\"\n+libgomp_la_DEPENDENCIES = $(libgomp_version_dep)\n libgomp_la_LINK = $(LINK) $(libgomp_la_LDFLAGS)\n \n libgomp_la_SOURCES = alloc.c barrier.c critical.c env.c error.c iter.c \\"}, {"sha": "ee57f676075e33512ab6ec7b60cc622e2077f9e2", "filename": "libgomp/Makefile.in", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d28b933700949abc20728a4a8a931c4679ae329/libgomp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d28b933700949abc20728a4a8a931c4679ae329/libgomp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FMakefile.in?ref=6d28b933700949abc20728a4a8a931c4679ae329", "patch": "@@ -297,11 +297,18 @@ AM_LDFLAGS = $(XLDFLAGS) $(SECTION_LDFLAGS) $(OPT_LDFLAGS)\n toolexeclib_LTLIBRARIES = libgomp.la\n nodist_toolexeclib_HEADERS = libgomp.spec\n @LIBGOMP_BUILD_VERSIONED_SHLIB_FALSE@libgomp_version_script = \n-@LIBGOMP_BUILD_VERSIONED_SHLIB_TRUE@libgomp_version_script = -Wl,--version-script,$(top_srcdir)/libgomp.map\n+@LIBGOMP_BUILD_VERSIONED_SHLIB_GNU_TRUE@@LIBGOMP_BUILD_VERSIONED_SHLIB_SOL2_FALSE@@LIBGOMP_BUILD_VERSIONED_SHLIB_TRUE@libgomp_version_script = -Wl,--version-script,$(top_srcdir)/libgomp.map\n+@LIBGOMP_BUILD_VERSIONED_SHLIB_GNU_TRUE@@LIBGOMP_BUILD_VERSIONED_SHLIB_SOL2_TRUE@@LIBGOMP_BUILD_VERSIONED_SHLIB_TRUE@libgomp_version_script = -Wl,--version-script,libgomp.map-sol2\n+@LIBGOMP_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBGOMP_BUILD_VERSIONED_SHLIB_TRUE@libgomp_version_script = -Wl,-M,libgomp.map-sun\n+@LIBGOMP_BUILD_VERSIONED_SHLIB_FALSE@libgomp_version_dep = \n+@LIBGOMP_BUILD_VERSIONED_SHLIB_GNU_TRUE@@LIBGOMP_BUILD_VERSIONED_SHLIB_SOL2_FALSE@@LIBGOMP_BUILD_VERSIONED_SHLIB_TRUE@libgomp_version_dep = $(top_srcdir)/libgomp.map\n+@LIBGOMP_BUILD_VERSIONED_SHLIB_GNU_TRUE@@LIBGOMP_BUILD_VERSIONED_SHLIB_SOL2_TRUE@@LIBGOMP_BUILD_VERSIONED_SHLIB_TRUE@libgomp_version_dep = libgomp.map-sol2\n+@LIBGOMP_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBGOMP_BUILD_VERSIONED_SHLIB_TRUE@libgomp_version_dep = libgomp.map-sun\n libgomp_version_info = -version-info $(libtool_VERSION)\n libgomp_la_LDFLAGS = $(libgomp_version_info) $(libgomp_version_script) \\\n         -no-undefined -bindir \"$(bindir)\"\n \n+libgomp_la_DEPENDENCIES = $(libgomp_version_dep)\n libgomp_la_LINK = $(LINK) $(libgomp_la_LDFLAGS)\n libgomp_la_SOURCES = alloc.c barrier.c critical.c env.c error.c iter.c \\\n \titer_ull.c loop.c loop_ull.c ordered.c parallel.c sections.c single.c \\\n@@ -1057,6 +1064,18 @@ uninstall-am: uninstall-dvi-am uninstall-html-am uninstall-info-am \\\n \n \n vpath % $(strip $(search_path))\n+@LIBGOMP_BUILD_VERSIONED_SHLIB_GNU_TRUE@@LIBGOMP_BUILD_VERSIONED_SHLIB_SOL2_TRUE@@LIBGOMP_BUILD_VERSIONED_SHLIB_TRUE@libgomp.map-sol2 : $(top_srcdir)/libgomp.map\n+@LIBGOMP_BUILD_VERSIONED_SHLIB_GNU_TRUE@@LIBGOMP_BUILD_VERSIONED_SHLIB_SOL2_TRUE@@LIBGOMP_BUILD_VERSIONED_SHLIB_TRUE@\tsed -e '/^#ifdef HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT/,/^#endif/d' $< \\\n+@LIBGOMP_BUILD_VERSIONED_SHLIB_GNU_TRUE@@LIBGOMP_BUILD_VERSIONED_SHLIB_SOL2_TRUE@@LIBGOMP_BUILD_VERSIONED_SHLIB_TRUE@\t > $@ || (rm -f $@ ; exit 1)\n+@LIBGOMP_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBGOMP_BUILD_VERSIONED_SHLIB_TRUE@libgomp.map-sun : $(top_srcdir)/libgomp.map \\\n+@LIBGOMP_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBGOMP_BUILD_VERSIONED_SHLIB_TRUE@\t\t$(top_srcdir)/../contrib/make_sunver.pl \\\n+@LIBGOMP_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBGOMP_BUILD_VERSIONED_SHLIB_TRUE@\t\t$(libgomp_la_OBJECTS) $(libgomp_la_LIBADD)\n+@LIBGOMP_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBGOMP_BUILD_VERSIONED_SHLIB_TRUE@\tperl $(top_srcdir)/../contrib/make_sunver.pl \\\n+@LIBGOMP_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBGOMP_BUILD_VERSIONED_SHLIB_TRUE@\t  $(top_srcdir)/libgomp.map \\\n+@LIBGOMP_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBGOMP_BUILD_VERSIONED_SHLIB_TRUE@\t  $(libgomp_la_OBJECTS:%.lo=.libs/%.o) \\\n+@LIBGOMP_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBGOMP_BUILD_VERSIONED_SHLIB_TRUE@\t `echo $(libgomp_la_LIBADD) | \\\n+@LIBGOMP_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBGOMP_BUILD_VERSIONED_SHLIB_TRUE@\t    sed 's,/\\([^/.]*\\)\\.la,/.libs/\\1.a,g'` \\\n+@LIBGOMP_BUILD_VERSIONED_SHLIB_SUN_TRUE@@LIBGOMP_BUILD_VERSIONED_SHLIB_TRUE@\t > $@ || (rm -f $@ ; exit 1)\n \n omp_lib_kinds.mod: omp_lib.mod\n \t:"}, {"sha": "8d6d0e54a7bc899b9e7ce6373420b92358aff540", "filename": "libgomp/acinclude.m4", "status": "modified", "additions": 51, "deletions": 8, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d28b933700949abc20728a4a8a931c4679ae329/libgomp%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d28b933700949abc20728a4a8a931c4679ae329/libgomp%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Facinclude.m4?ref=6d28b933700949abc20728a4a8a931c4679ae329", "patch": "@@ -223,16 +223,42 @@ AC_DEFUN([LIBGOMP_ENABLE_SYMVERS], [\n \n LIBGOMP_ENABLE(symvers,yes,[=STYLE],\n   [enables symbol versioning of the shared library],\n-  [permit yes|no|gnu])\n+  [permit yes|no|gnu|sun])\n \n # If we never went through the LIBGOMP_CHECK_LINKER_FEATURES macro, then we\n # don't know enough about $LD to do tricks...\n AC_REQUIRE([LIBGOMP_CHECK_LINKER_FEATURES])\n # FIXME  The following test is too strict, in theory.\n-if test $enable_shared = no ||\n-        test \"x$LD\" = x ||\n-        test x$libgomp_gnu_ld_version = x; then\n+if test $enable_shared = no || test \"x$LD\" = x; then\n   enable_symvers=no\n+else\n+  if test $with_gnu_ld = yes ; then\n+    enable_symvers=gnu\n+  else\n+    case ${target_os} in\n+      # Sun symbol versioning exists since Solaris 2.5.\n+      solaris2.[[5-9]]* | solaris2.1[[0-9]]*)\n+        enable_symvers=sun ;;\n+      *)\n+        enable_symvers=no ;;\n+    esac\n+  fi\n+fi\n+\n+# Check if 'sun' was requested on non-Solaris 2 platforms.\n+if test x$enable_symvers = xsun ; then\n+  case ${target_os} in\n+    solaris2*)\n+      # All fine.\n+      ;;\n+    *)\n+      # Unlikely to work.\n+      AC_MSG_WARN([=== You have requested Sun symbol versioning, but])\n+      AC_MSG_WARN([=== you are not targetting Solaris 2.])\n+      AC_MSG_WARN([=== Symbol versioning will be disabled.])\n+      enable_symvers=no\n+      ;;\n+  esac\n fi\n \n # Check to see if libgcc_s exists, indicating that shared libgcc is possible.\n@@ -269,10 +295,8 @@ libgomp_min_gnu_ld_version=21400\n \n # Check to see if unspecified \"yes\" value can win, given results above.\n # Change \"yes\" into either \"no\" or a style name.\n-if test $enable_symvers = yes; then\n-  if test $with_gnu_ld = yes &&\n-     test $libgomp_shared_libgcc = yes;\n-  then\n+if test $enable_symvers != no && test $libgomp_shared_libgcc = yes; then\n+  if test $with_gnu_ld = yes; then\n     if test $libgomp_gnu_ld_version -ge $libgomp_min_gnu_ld_version ; then\n       enable_symvers=gnu\n     elif test $libgomp_ld_is_gold = yes ; then\n@@ -295,6 +319,8 @@ if test $enable_symvers = yes; then\n         enable_symvers=no\n       fi\n     fi\n+  elif test $enable_symvers = sun; then\n+    : All interesting versions of Sun ld support sun style symbol versioning.\n   else\n     # just fail for now\n     AC_MSG_WARN([=== You have requested some kind of symbol versioning, but])\n@@ -316,5 +342,22 @@ if test $libgomp_cv_have_as_symver_directive = yes; then\n fi\n \n AM_CONDITIONAL(LIBGOMP_BUILD_VERSIONED_SHLIB, test $enable_symvers != no)\n+AM_CONDITIONAL(LIBGOMP_BUILD_VERSIONED_SHLIB_GNU, test $enable_symvers = gnu)\n+AM_CONDITIONAL(LIBGOMP_BUILD_VERSIONED_SHLIB_SUN, test $enable_symvers = sun)\n AC_MSG_NOTICE(versioning on shared library symbols is $enable_symvers)\n+\n+if test $enable_symvers != no ; then\n+   case ${target_os} in\n+     # The Solaris 2 runtime linker doesn't support the GNU extension of\n+     # binding the same symbol to different versions\n+     solaris2*)\n+       symvers_renaming=no ;;\n+     # Other platforms with GNU symbol versioning (GNU/Linux, more?) do.\n+     *)\n+       AC_DEFINE(HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT, 1,\n+         [Define to 1 if the target runtime linker supports binding the same symbol to different versions.])\n+       symvers_renaming=yes ;;\n+    esac\n+fi\n+AM_CONDITIONAL(LIBGOMP_BUILD_VERSIONED_SHLIB_SOL2, test $symvers_renaming = no)\n ])"}, {"sha": "14c7e2a9a1bda2a0223106cb3688f4975f4148b5", "filename": "libgomp/config.h.in", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d28b933700949abc20728a4a8a931c4679ae329/libgomp%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d28b933700949abc20728a4a8a931c4679ae329/libgomp%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig.h.in?ref=6d28b933700949abc20728a4a8a931c4679ae329", "patch": "@@ -54,6 +54,10 @@\n /* Define to 1 if you have the `strtoull' function. */\n #undef HAVE_STRTOULL\n \n+/* Define to 1 if the target runtime linker supports binding the same symbol\n+   to different versions. */\n+#undef HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT\n+\n /* Define to 1 if the target supports __sync_*_compare_and_swap */\n #undef HAVE_SYNC_BUILTINS\n "}, {"sha": "9074529aef5f223f95cf11f7ac5cda24a2fedfff", "filename": "libgomp/configure", "status": "modified", "additions": 96, "deletions": 10, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d28b933700949abc20728a4a8a931c4679ae329/libgomp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d28b933700949abc20728a4a8a931c4679ae329/libgomp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure?ref=6d28b933700949abc20728a4a8a931c4679ae329", "patch": "@@ -619,6 +619,12 @@ link_gomp\n XLDFLAGS\n XCFLAGS\n config_path\n+LIBGOMP_BUILD_VERSIONED_SHLIB_SOL2_FALSE\n+LIBGOMP_BUILD_VERSIONED_SHLIB_SOL2_TRUE\n+LIBGOMP_BUILD_VERSIONED_SHLIB_SUN_FALSE\n+LIBGOMP_BUILD_VERSIONED_SHLIB_SUN_TRUE\n+LIBGOMP_BUILD_VERSIONED_SHLIB_GNU_FALSE\n+LIBGOMP_BUILD_VERSIONED_SHLIB_GNU_TRUE\n LIBGOMP_BUILD_VERSIONED_SHLIB_FALSE\n LIBGOMP_BUILD_VERSIONED_SHLIB_TRUE\n OPT_LDFLAGS\n@@ -11083,7 +11089,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11086 \"configure\"\n+#line 11092 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11189,7 +11195,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11192 \"configure\"\n+#line 11198 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15754,7 +15760,7 @@ $as_echo \"$ac_sectionLDflags\" >&6; }\n if test \"${enable_symvers+set}\" = set; then :\n   enableval=$enable_symvers;\n       case \"$enableval\" in\n-       yes|no|gnu) ;;\n+       yes|no|gnu|sun) ;;\n        *) as_fn_error \"Unknown argument to enable/disable symvers\" \"$LINENO\" 5 ;;\n                           esac\n \n@@ -15768,10 +15774,39 @@ fi\n # don't know enough about $LD to do tricks...\n \n # FIXME  The following test is too strict, in theory.\n-if test $enable_shared = no ||\n-        test \"x$LD\" = x ||\n-        test x$libgomp_gnu_ld_version = x; then\n+if test $enable_shared = no || test \"x$LD\" = x; then\n   enable_symvers=no\n+else\n+  if test $with_gnu_ld = yes ; then\n+    enable_symvers=gnu\n+  else\n+    case ${target_os} in\n+      # Sun symbol versioning exists since Solaris 2.5.\n+      solaris2.[5-9]* | solaris2.1[0-9]*)\n+        enable_symvers=sun ;;\n+      *)\n+        enable_symvers=no ;;\n+    esac\n+  fi\n+fi\n+\n+# Check if 'sun' was requested on non-Solaris 2 platforms.\n+if test x$enable_symvers = xsun ; then\n+  case ${target_os} in\n+    solaris2*)\n+      # All fine.\n+      ;;\n+    *)\n+      # Unlikely to work.\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === You have requested Sun symbol versioning, but\" >&5\n+$as_echo \"$as_me: WARNING: === You have requested Sun symbol versioning, but\" >&2;}\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === you are not targetting Solaris 2.\" >&5\n+$as_echo \"$as_me: WARNING: === you are not targetting Solaris 2.\" >&2;}\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === Symbol versioning will be disabled.\" >&5\n+$as_echo \"$as_me: WARNING: === Symbol versioning will be disabled.\" >&2;}\n+      enable_symvers=no\n+      ;;\n+  esac\n fi\n \n # Check to see if libgcc_s exists, indicating that shared libgcc is possible.\n@@ -15840,10 +15875,8 @@ libgomp_min_gnu_ld_version=21400\n \n # Check to see if unspecified \"yes\" value can win, given results above.\n # Change \"yes\" into either \"no\" or a style name.\n-if test $enable_symvers = yes; then\n-  if test $with_gnu_ld = yes &&\n-     test $libgomp_shared_libgcc = yes;\n-  then\n+if test $enable_symvers != no && test $libgomp_shared_libgcc = yes; then\n+  if test $with_gnu_ld = yes; then\n     if test $libgomp_gnu_ld_version -ge $libgomp_min_gnu_ld_version ; then\n       enable_symvers=gnu\n     elif test $libgomp_ld_is_gold = yes ; then\n@@ -15870,6 +15903,8 @@ $as_echo \"$as_me: WARNING: === Symbol versioning will be disabled.\" >&2;}\n         enable_symvers=no\n       fi\n     fi\n+  elif test $enable_symvers = sun; then\n+    : All interesting versions of Sun ld support sun style symbol versioning.\n   else\n     # just fail for now\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === You have requested some kind of symbol versioning, but\" >&5\n@@ -15924,9 +15959,48 @@ else\n   LIBGOMP_BUILD_VERSIONED_SHLIB_FALSE=\n fi\n \n+ if test $enable_symvers = gnu; then\n+  LIBGOMP_BUILD_VERSIONED_SHLIB_GNU_TRUE=\n+  LIBGOMP_BUILD_VERSIONED_SHLIB_GNU_FALSE='#'\n+else\n+  LIBGOMP_BUILD_VERSIONED_SHLIB_GNU_TRUE='#'\n+  LIBGOMP_BUILD_VERSIONED_SHLIB_GNU_FALSE=\n+fi\n+\n+ if test $enable_symvers = sun; then\n+  LIBGOMP_BUILD_VERSIONED_SHLIB_SUN_TRUE=\n+  LIBGOMP_BUILD_VERSIONED_SHLIB_SUN_FALSE='#'\n+else\n+  LIBGOMP_BUILD_VERSIONED_SHLIB_SUN_TRUE='#'\n+  LIBGOMP_BUILD_VERSIONED_SHLIB_SUN_FALSE=\n+fi\n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: versioning on shared library symbols is $enable_symvers\" >&5\n $as_echo \"$as_me: versioning on shared library symbols is $enable_symvers\" >&6;}\n \n+if test $enable_symvers != no ; then\n+   case ${target_os} in\n+     # The Solaris 2 runtime linker doesn't support the GNU extension of\n+     # binding the same symbol to different versions\n+     solaris2*)\n+       symvers_renaming=no ;;\n+     # Other platforms with GNU symbol versioning (GNU/Linux, more?) do.\n+     *)\n+\n+$as_echo \"#define HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT 1\" >>confdefs.h\n+\n+       symvers_renaming=yes ;;\n+    esac\n+fi\n+ if test $symvers_renaming = no; then\n+  LIBGOMP_BUILD_VERSIONED_SHLIB_SOL2_TRUE=\n+  LIBGOMP_BUILD_VERSIONED_SHLIB_SOL2_FALSE='#'\n+else\n+  LIBGOMP_BUILD_VERSIONED_SHLIB_SOL2_TRUE='#'\n+  LIBGOMP_BUILD_VERSIONED_SHLIB_SOL2_FALSE=\n+fi\n+\n+\n \n if test $enable_symvers = gnu; then\n \n@@ -16309,6 +16383,18 @@ if test -z \"${LIBGOMP_BUILD_VERSIONED_SHLIB_TRUE}\" && test -z \"${LIBGOMP_BUILD_V\n   as_fn_error \"conditional \\\"LIBGOMP_BUILD_VERSIONED_SHLIB\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${LIBGOMP_BUILD_VERSIONED_SHLIB_GNU_TRUE}\" && test -z \"${LIBGOMP_BUILD_VERSIONED_SHLIB_GNU_FALSE}\"; then\n+  as_fn_error \"conditional \\\"LIBGOMP_BUILD_VERSIONED_SHLIB_GNU\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n+if test -z \"${LIBGOMP_BUILD_VERSIONED_SHLIB_SUN_TRUE}\" && test -z \"${LIBGOMP_BUILD_VERSIONED_SHLIB_SUN_FALSE}\"; then\n+  as_fn_error \"conditional \\\"LIBGOMP_BUILD_VERSIONED_SHLIB_SUN\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n+if test -z \"${LIBGOMP_BUILD_VERSIONED_SHLIB_SOL2_TRUE}\" && test -z \"${LIBGOMP_BUILD_VERSIONED_SHLIB_SOL2_FALSE}\"; then\n+  as_fn_error \"conditional \\\"LIBGOMP_BUILD_VERSIONED_SHLIB_SOL2\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n if test -z \"${USE_FORTRAN_TRUE}\" && test -z \"${USE_FORTRAN_FALSE}\"; then\n   as_fn_error \"conditional \\\"USE_FORTRAN\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5"}, {"sha": "edde1e97a1b961bbf60654d6535a354635cbaae2", "filename": "libgomp/libgomp.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d28b933700949abc20728a4a8a931c4679ae329/libgomp%2Flibgomp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d28b933700949abc20728a4a8a931c4679ae329/libgomp%2Flibgomp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.h?ref=6d28b933700949abc20728a4a8a931c4679ae329", "patch": "@@ -514,7 +514,8 @@ gomp_work_share_init_done (void)\n #if !defined (HAVE_ATTRIBUTE_VISIBILITY) \\\n     || !defined (HAVE_ATTRIBUTE_ALIAS) \\\n     || !defined (HAVE_AS_SYMVER_DIRECTIVE) \\\n-    || !defined (PIC)\n+    || !defined (PIC) \\\n+    || !defined (HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT)\n # undef LIBGOMP_GNU_SYMBOL_VERSIONING\n #endif\n "}, {"sha": "d95693dbddefef2af12c62b95b619e8528fb4807", "filename": "libgomp/libgomp.map", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d28b933700949abc20728a4a8a931c4679ae329/libgomp%2Flibgomp.map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d28b933700949abc20728a4a8a931c4679ae329/libgomp%2Flibgomp.map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.map?ref=6d28b933700949abc20728a4a8a931c4679ae329", "patch": "@@ -10,6 +10,10 @@ OMP_1.0 {\n \tomp_get_dynamic;\n \tomp_set_nested;\n \tomp_get_nested;\n+#ifdef HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT\n+        # If the assembler used lacks the .symver directive or the linker\n+\t# doesn't support GNU symbol versioning, we have the same symbol in\n+\t# two versions, which Sun ld chokes on. \n \tomp_init_lock;\n \tomp_init_nest_lock;\n \tomp_destroy_lock;\n@@ -22,27 +26,28 @@ OMP_1.0 {\n \tomp_test_nest_lock;\n \tomp_destroy_lock_;\n \tomp_destroy_nest_lock_;\n+\tomp_init_lock_;\n+\tomp_init_nest_lock_;\n+\tomp_set_lock_;\n+\tomp_set_nest_lock_;\n+\tomp_test_lock_;\n+\tomp_test_nest_lock_;\n+\tomp_unset_lock_;\n+\tomp_unset_nest_lock_;\n+#endif\n \tomp_get_dynamic_;\n \tomp_get_max_threads_;\n \tomp_get_nested_;\n \tomp_get_num_procs_;\n \tomp_get_num_threads_;\n \tomp_get_thread_num_;\n \tomp_in_parallel_;\n-\tomp_init_lock_;\n-\tomp_init_nest_lock_;\n \tomp_set_dynamic_;\n \tomp_set_dynamic_8_;\n-\tomp_set_lock_;\n-\tomp_set_nest_lock_;\n \tomp_set_nested_;\n \tomp_set_nested_8_;\n \tomp_set_num_threads_;\n \tomp_set_num_threads_8_;\n-\tomp_test_lock_;\n-\tomp_test_nest_lock_;\n-\tomp_unset_lock_;\n-\tomp_unset_nest_lock_;\n   local:\n \t*;\n };"}]}