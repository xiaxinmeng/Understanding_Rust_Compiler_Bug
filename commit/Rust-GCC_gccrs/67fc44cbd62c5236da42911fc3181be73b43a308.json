{"sha": "67fc44cbd62c5236da42911fc3181be73b43a308", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdmYzQ0Y2JkNjJjNTIzNmRhNDI5MTFmYzMxODFiZTczYjQzYTMwOA==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2007-02-09T00:49:48Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2007-02-09T00:49:48Z"}, "message": "m32c.c (m32c_unpend_compare): Add default to silence warnings.\n\n* config/m32c/m32c.c (m32c_unpend_compare): Add default to silence\nwarnings.\n(legal_subregs): Use unsigned char, make const.\n(m32c_illegal_subreg_p): Use ARRAY_SIZE.  Delete unused variables.\n\nFrom-SVN: r121733", "tree": {"sha": "8401c3b05ca8b61a92fa10cbc065ccca74e5cee0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8401c3b05ca8b61a92fa10cbc065ccca74e5cee0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67fc44cbd62c5236da42911fc3181be73b43a308", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67fc44cbd62c5236da42911fc3181be73b43a308", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67fc44cbd62c5236da42911fc3181be73b43a308", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67fc44cbd62c5236da42911fc3181be73b43a308/comments", "author": null, "committer": null, "parents": [{"sha": "f88e483d703ce6fd50e211629da468e00807cd05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f88e483d703ce6fd50e211629da468e00807cd05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f88e483d703ce6fd50e211629da468e00807cd05"}], "stats": {"total": 46, "additions": 27, "deletions": 19}, "files": [{"sha": "59ad7fc3ded855980548870fda70db962183d405", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67fc44cbd62c5236da42911fc3181be73b43a308/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67fc44cbd62c5236da42911fc3181be73b43a308/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=67fc44cbd62c5236da42911fc3181be73b43a308", "patch": "@@ -1,3 +1,10 @@\n+2007-02-08  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/m32c/m32c.c (m32c_unpend_compare): Add default to silence\n+\twarnings.\n+\t(legal_subregs): Use unsigned char, make const.\n+\t(m32c_illegal_subreg_p): Use ARRAY_SIZE.  Delete unused variables.\n+\n 2007-02-08  Paul Brook  <paul@codesourcery.com>\n \n \t* config/arm/lib1funcs.asm (RETLDM): Pop directly into PC when no"}, {"sha": "de7ce9d7a0f408d0790c1762e0b175cf80046814", "filename": "gcc/config/m32c/m32c.c", "status": "modified", "additions": 20, "deletions": 19, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67fc44cbd62c5236da42911fc3181be73b43a308/gcc%2Fconfig%2Fm32c%2Fm32c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67fc44cbd62c5236da42911fc3181be73b43a308/gcc%2Fconfig%2Fm32c%2Fm32c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c.c?ref=67fc44cbd62c5236da42911fc3181be73b43a308", "patch": "@@ -2750,36 +2750,35 @@ m32c_insert_attributes (tree node ATTRIBUTE_UNUSED,\n /* Predicates */\n \n /* This is a list of legal subregs of hard regs.  */\n-static struct {\n-  enum machine_mode outer_mode_size;\n-  enum machine_mode inner_mode_size;\n+static const struct {\n+  unsigned char outer_mode_size;\n+  unsigned char inner_mode_size;\n+  unsigned char byte_mask;\n+  unsigned char legal_when;\n   unsigned int regno;\n-  int byte_mask;\n-  int legal_when;\n } legal_subregs[] = {\n-  {1, 2, R0_REGNO, 0x03, 1}, /* r0h r0l */\n-  {1, 2, R1_REGNO, 0x03, 1}, /* r1h r1l */\n-  {1, 2, A0_REGNO, 0x01, 1},\n-  {1, 2, A1_REGNO, 0x01, 1},\n+  {1, 2, 0x03, 1, R0_REGNO}, /* r0h r0l */\n+  {1, 2, 0x03, 1, R1_REGNO}, /* r1h r1l */\n+  {1, 2, 0x01, 1, A0_REGNO},\n+  {1, 2, 0x01, 1, A1_REGNO},\n \n-  {1, 4, A0_REGNO, 0x01, 1},\n-  {1, 4, A1_REGNO, 0x01, 1},\n+  {1, 4, 0x01, 1, A0_REGNO},\n+  {1, 4, 0x01, 1, A1_REGNO},\n \n-  {2, 4, R0_REGNO, 0x05, 1}, /* r2 r0 */\n-  {2, 4, R1_REGNO, 0x05, 1}, /* r3 r1 */\n-  {2, 4, A0_REGNO, 0x05, 16}, /* a1 a0 */\n-  {2, 4, A0_REGNO, 0x01, 24}, /* a1 a0 */\n-  {2, 4, A1_REGNO, 0x01, 24}, /* a1 a0 */\n+  {2, 4, 0x05, 1, R0_REGNO}, /* r2 r0 */\n+  {2, 4, 0x05, 1, R1_REGNO}, /* r3 r1 */\n+  {2, 4, 0x05, 16, A0_REGNO}, /* a1 a0 */\n+  {2, 4, 0x01, 24, A0_REGNO}, /* a1 a0 */\n+  {2, 4, 0x01, 24, A1_REGNO}, /* a1 a0 */\n \n-  {4, 8, R0_REGNO, 0x55, 1}, /* r3 r1 r2 r0 */\n+  {4, 8, 0x55, 1, R0_REGNO}, /* r3 r1 r2 r0 */\n };\n \n /* Returns TRUE if OP is a subreg of a hard reg which we don't\n    support.  */\n bool\n m32c_illegal_subreg_p (rtx op)\n {\n-  rtx orig_op = op;\n   int offset;\n   unsigned int i;\n   int src_mode, dest_mode;\n@@ -2801,7 +2800,7 @@ m32c_illegal_subreg_p (rtx op)\n \n   offset = (1 << offset);\n \n-  for (i = 0; i < sizeof(legal_subregs)/sizeof(legal_subregs[0]); i ++)\n+  for (i = 0; i < ARRAY_SIZE (legal_subregs); i ++)\n     if (legal_subregs[i].outer_mode_size == GET_MODE_SIZE (dest_mode)\n \t&& legal_subregs[i].regno == REGNO (op)\n \t&& legal_subregs[i].inner_mode_size == GET_MODE_SIZE (src_mode)\n@@ -3584,6 +3583,8 @@ m32c_unpend_compare (void)\n       emit_insn (gen_cmphi_op (compare_op0, compare_op1));\n     case PSImode:\n       emit_insn (gen_cmppsi_op (compare_op0, compare_op1));\n+    default:\n+      /* Just to silence the \"missing case\" warnings.  */ ;\n     }\n }\n "}]}