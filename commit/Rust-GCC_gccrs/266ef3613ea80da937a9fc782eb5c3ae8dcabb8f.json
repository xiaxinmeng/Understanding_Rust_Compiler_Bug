{"sha": "266ef3613ea80da937a9fc782eb5c3ae8dcabb8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY2ZWYzNjEzZWE4MGRhOTM3YTlmYzc4MmViNWMzYWU4ZGNhYmI4Zg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-10-29T15:43:08Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-10-29T15:43:08Z"}, "message": "re PR tree-optimization/87785 (ICE in dr_misalignment, at tree-vectorizer.h:1245 on 454.calculix with -Ofast and -flto)\n\n2018-10-29  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/87785\n\t* tree-vect-slp.c (vect_gather_slp_loads): Only gather\n\tinternal defs.\n\n\t* gcc.dg/torture/20181029-1.c: New testcase.\n\t* gcc.dg/torture/20181029-2.c: Likewise.\n\nFrom-SVN: r265596", "tree": {"sha": "5dae5d1d7c505ada5cfae75128d5a932d7c036e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5dae5d1d7c505ada5cfae75128d5a932d7c036e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/266ef3613ea80da937a9fc782eb5c3ae8dcabb8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/266ef3613ea80da937a9fc782eb5c3ae8dcabb8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/266ef3613ea80da937a9fc782eb5c3ae8dcabb8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/266ef3613ea80da937a9fc782eb5c3ae8dcabb8f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bca81bd229115f49858380bb696b0ed193eeb5b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bca81bd229115f49858380bb696b0ed193eeb5b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bca81bd229115f49858380bb696b0ed193eeb5b1"}], "stats": {"total": 115, "additions": 114, "deletions": 1}, "files": [{"sha": "fec9ddf3e4987497c0b3014311eb194dd5f5b169", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/266ef3613ea80da937a9fc782eb5c3ae8dcabb8f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/266ef3613ea80da937a9fc782eb5c3ae8dcabb8f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=266ef3613ea80da937a9fc782eb5c3ae8dcabb8f", "patch": "@@ -1,3 +1,9 @@\n+2018-10-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87785\n+\t* tree-vect-slp.c (vect_gather_slp_loads): Only gather\n+\tinternal defs.\n+\n 2018-10-29  Olivier Hainque  <hainque@adacore.com>\n \n \t* VXWORKS_NET_LIBS_RTP: New macro, network part of VXWORKS_LIBS_RTP."}, {"sha": "6cc3e1bb86a355ed51fcdc696db7ebce808cb4c0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/266ef3613ea80da937a9fc782eb5c3ae8dcabb8f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/266ef3613ea80da937a9fc782eb5c3ae8dcabb8f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=266ef3613ea80da937a9fc782eb5c3ae8dcabb8f", "patch": "@@ -1,3 +1,9 @@\n+2018-10-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87785\n+\t* gcc.dg/torture/20181029-1.c: New testcase.\n+\t* gcc.dg/torture/20181029-2.c: Likewise.\n+\n 2018-10-29  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/87790"}, {"sha": "6576719015eec6e4ca0db3e657370cc08447e7be", "filename": "gcc/testsuite/gcc.dg/torture/20181029-1.c", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/266ef3613ea80da937a9fc782eb5c3ae8dcabb8f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2F20181029-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/266ef3613ea80da937a9fc782eb5c3ae8dcabb8f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2F20181029-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2F20181029-1.c?ref=266ef3613ea80da937a9fc782eb5c3ae8dcabb8f", "patch": "@@ -0,0 +1,81 @@\n+/* { dg-do compile } */\n+\n+typedef __SIZE_TYPE__ size_t;\n+typedef unsigned long UV;\n+typedef size_t STRLEN;\n+typedef struct sv SV;\n+typedef struct magic MAGIC;\n+typedef struct xpv XPV;\n+typedef unsigned char U8;\n+typedef int I32;\n+typedef unsigned int U32;\n+struct sv {\n+    void* sv_any;\n+    U32 sv_flags;\n+};\n+struct xpv {\n+    char * xpv_pv;\n+    STRLEN xpv_cur;\n+};\n+struct magic {\n+    char* mg_ptr;\n+};\n+extern const unsigned char PL_utf8skip[];\n+char *Perl_sv_2pv_flags (STRLEN *);\n+void Perl_utf8n_to_uvuni (U8 *);\n+void Perl_sv_magic (SV *);\n+void Perl_sv_pos_b2u( register SV* sv, I32* offsetp, MAGIC *mg)\n+{\n+  U8* s;\n+  STRLEN len;\n+  s = (U8*)(((sv)->sv_flags & (0x00040000)) == 0x00040000\n+\t    ? ((len = ((XPV*) (sv)->sv_any)->xpv_cur), ((XPV*) (sv)->sv_any)->xpv_pv)\n+\t    : Perl_sv_2pv_flags(&len));\n+  if ((I32)len < *offsetp)\n+    ;\n+  else\n+    {\n+      STRLEN *cache = ((void *)0);\n+      if (((sv)->sv_flags & (0x00002000|0x00004000|0x00008000))\n+\t  && !((sv)->sv_flags & 0x00800000))\n+\t{\n+\t  if (mg && mg->mg_ptr)\n+\t    {\n+\t      cache = (STRLEN *) mg->mg_ptr;\n+\t      STRLEN forw = *offsetp;\n+\t      STRLEN backw = cache[1] - *offsetp;\n+\t      if (!(forw < 2 * backw))\n+\t\t{\n+\t\t  U8 *p = s + cache[1];\n+\t\t  STRLEN ubackw = 0;\n+\t\t  cache[1] -= backw;\n+\t\t  while (backw--)\n+\t\t    {\n+\t\t      p--;\n+\t\t      while ((((U8)*p) >= 0x80 && (((U8)*p) <= 0xbf)))\n+\t\t\t{\n+\t\t\t  p--;\n+\t\t\t  backw--;\n+\t\t\t}\n+\t\t      ubackw++;\n+\t\t    }\n+\t\t  cache[0] -= ubackw;\n+\t\t  *offsetp = cache[0];\n+\t\t  cache[2] = 0;\n+\t\t  cache[3] = 0;\n+\t\t  return;\n+\t\t}\n+\t    }\n+\t  if (!(((UV)(*s)) < 0x80))\n+\t    Perl_utf8n_to_uvuni(s);\n+\t}\n+      if (!((sv)->sv_flags & 0x00800000))\n+\t{\n+\t  if (!mg)\n+\t    Perl_sv_magic(sv);\n+\t  cache[0] = len;\n+\t  cache[1] = *offsetp;\n+\t}\n+      *offsetp = len;\n+    }\n+}"}, {"sha": "65a36564b2be8da2271b41b87a6e260e535a8053", "filename": "gcc/testsuite/gcc.dg/torture/20181029-2.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/266ef3613ea80da937a9fc782eb5c3ae8dcabb8f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2F20181029-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/266ef3613ea80da937a9fc782eb5c3ae8dcabb8f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2F20181029-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2F20181029-2.c?ref=266ef3613ea80da937a9fc782eb5c3ae8dcabb8f", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+\n+int a, b;\n+unsigned long c;\n+unsigned long *d;\n+void e();\n+void f()\n+{\n+  if (c)\n+    {\n+      if (a)\n+\t{\n+\t  e();\n+\t  d[0] = c;\n+\t  d[1] = b;\n+\t}\n+      b = c;\n+    }\n+}"}, {"sha": "6ec7358c2dc2c7ddaa9846f7603b520a095d781f", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/266ef3613ea80da937a9fc782eb5c3ae8dcabb8f/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/266ef3613ea80da937a9fc782eb5c3ae8dcabb8f/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=266ef3613ea80da937a9fc782eb5c3ae8dcabb8f", "patch": "@@ -1645,7 +1645,8 @@ vect_gather_slp_loads (slp_instance inst, slp_tree node,\n   if (SLP_TREE_CHILDREN (node).length () == 0)\n     {\n       stmt_vec_info stmt_info = SLP_TREE_SCALAR_STMTS (node)[0];\n-      if (STMT_VINFO_GROUPED_ACCESS (stmt_info)\n+      if (SLP_TREE_DEF_TYPE (node) == vect_internal_def\n+\t  && STMT_VINFO_GROUPED_ACCESS (stmt_info)\n \t  && DR_IS_READ (STMT_VINFO_DATA_REF (stmt_info)))\n \tSLP_INSTANCE_LOADS (inst).safe_push (node);\n     }"}]}