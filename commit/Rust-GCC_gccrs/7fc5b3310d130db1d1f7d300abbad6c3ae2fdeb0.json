{"sha": "7fc5b3310d130db1d1f7d300abbad6c3ae2fdeb0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZjNWIzMzEwZDEzMGRiMWQxZjdkMzAwYWJiYWQ2YzNhZTJmZGViMA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1996-06-17T05:19:09Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1996-06-17T05:19:09Z"}, "message": "Initial revision\n\nFrom-SVN: r12284", "tree": {"sha": "9f5933ff007aef55c035c0409b804e1b034310c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f5933ff007aef55c035c0409b804e1b034310c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fc5b3310d130db1d1f7d300abbad6c3ae2fdeb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fc5b3310d130db1d1f7d300abbad6c3ae2fdeb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fc5b3310d130db1d1f7d300abbad6c3ae2fdeb0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fc5b3310d130db1d1f7d300abbad6c3ae2fdeb0/comments", "author": null, "committer": null, "parents": [{"sha": "57dea801968efff681da176cfd058162f8a4f860", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57dea801968efff681da176cfd058162f8a4f860", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57dea801968efff681da176cfd058162f8a4f860"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "cd72c4743cc4878004b94a50ce5aed222382b56b", "filename": "gcc/config/pa/pa-hpux10.h", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fc5b3310d130db1d1f7d300abbad6c3ae2fdeb0/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fc5b3310d130db1d1f7d300abbad6c3ae2fdeb0/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h?ref=7fc5b3310d130db1d1f7d300abbad6c3ae2fdeb0", "patch": "@@ -0,0 +1,55 @@\n+/* Definitions of target machine for GNU compiler, for HP PA-RISC 1.1\n+   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n+   Contributed by Tim Moore (moore@defmacro.cs.utah.edu)\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* We can debug dynamically linked executables on hpux9; we also want\n+   derefercing of a NULL pointer to cause a SEGV.  */\n+#undef LINK_SPEC\n+#if ((TARGET_DEFAULT | TARGET_CPU_DEFAULT) & 1)\n+#define LINK_SPEC \\\n+  \"%{!mpa-risc-1-0:-L/lib/pa1.1 -L/usr/lib/pa1.1} -z %{mlinker-opt:-O} %{!shared:-u main} %{static:-a archive} %{shared:-b}\"\n+#else\n+#define LINK_SPEC \\\n+  \"-z %{mlinker-opt:-O} %{!shared:-u main} %{static:-a archive} %{shared:-b}\"\n+#endif\n+\n+/* The hpux10 assembler requires a .LEVEL pseudo-op at the start of\n+   the assembly file.  */\n+#undef ASM_FILE_START\n+#define ASM_FILE_START(FILE) \\\n+do {  \\\n+     if (TARGET_SNAKE) \\\n+       fputs(\"\\t.LEVEL 1.1\\n\", FILE); \\\n+     else \\\n+       fputs(\"\\t.LEVEL 1.0\\n\", FILE); \\\n+     fputs (\"\\t.SPACE $PRIVATE$\\n\\\n+\\t.SUBSPA $DATA$,QUAD=1,ALIGN=8,ACCESS=31\\n\\\n+\\t.SUBSPA $BSS$,QUAD=1,ALIGN=8,ACCESS=31,ZERO,SORT=82\\n\\\n+\\t.SPACE $TEXT$\\n\\\n+\\t.SUBSPA $LIT$,QUAD=0,ALIGN=8,ACCESS=44\\n\\\n+\\t.SUBSPA $CODE$,QUAD=0,ALIGN=8,ACCESS=44,CODE_ONLY\\n\\\n+\\t.IMPORT $global$,DATA\\n\\\n+\\t.IMPORT $$dyncall,MILLICODE\\n\", FILE);\\\n+     if (profile_flag)\\\n+       fprintf (FILE, \"\\t.IMPORT _mcount, CODE\\n\");\\\n+     if (write_symbols != NO_DEBUG) \\\n+       output_file_directive ((FILE), main_input_filename); \\\n+   } while (0)\n+"}]}