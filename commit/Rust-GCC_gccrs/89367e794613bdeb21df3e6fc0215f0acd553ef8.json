{"sha": "89367e794613bdeb21df3e6fc0215f0acd553ef8", "node_id": "C_kwDOANBUbNoAKDg5MzY3ZTc5NDYxM2JkZWIyMWRmM2U2ZmMwMjE1ZjBhY2Q1NTNlZjg", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2022-10-21T09:37:01Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-13T02:40:46Z"}, "message": "RISC-V: Handle vlenb correctly in unwinding\n\ngcc/ChangeLog:\n\n\t* config/riscv/riscv.h (RISCV_DWARF_VLENB): New.\n\t(DWARF_FRAME_REGISTERS): New.\n\t(DWARF_REG_TO_UNWIND_COLUMN): New.\n\nlibgcc/ChangeLog:\n\n\t* config.host (riscv*-*-*): Add config/riscv/value-unwind.h.\n\t* config/riscv/value-unwind.h: New.", "tree": {"sha": "65ea9e1a31a4e4d98aa0d947b5bf3d27f6ad097b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65ea9e1a31a4e4d98aa0d947b5bf3d27f6ad097b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89367e794613bdeb21df3e6fc0215f0acd553ef8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89367e794613bdeb21df3e6fc0215f0acd553ef8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89367e794613bdeb21df3e6fc0215f0acd553ef8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89367e794613bdeb21df3e6fc0215f0acd553ef8/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22ba8570e6343e10e4a82e837166e181a1abb21b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22ba8570e6343e10e4a82e837166e181a1abb21b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22ba8570e6343e10e4a82e837166e181a1abb21b"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "5bc7f2f467d9f6e8c4efc4faa9f96f27a7854a40", "filename": "gcc/config/riscv/riscv.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89367e794613bdeb21df3e6fc0215f0acd553ef8/gcc%2Fconfig%2Friscv%2Friscv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89367e794613bdeb21df3e6fc0215f0acd553ef8/gcc%2Fconfig%2Friscv%2Friscv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.h?ref=89367e794613bdeb21df3e6fc0215f0acd553ef8", "patch": "@@ -1088,4 +1088,11 @@ extern void riscv_remove_unneeded_save_restore_calls (void);\n \n #define REGMODE_NATURAL_SIZE(MODE) riscv_regmode_natural_size (MODE)\n \n+#define RISCV_DWARF_VLENB (4096 + 0xc22)\n+\n+#define DWARF_FRAME_REGISTERS (FIRST_PSEUDO_REGISTER + 1 /* VLENB */)\n+\n+#define DWARF_REG_TO_UNWIND_COLUMN(REGNO) \\\n+  ((REGNO == RISCV_DWARF_VLENB) ? (FIRST_PSEUDO_REGISTER + 1) : REGNO)\n+\n #endif /* ! GCC_RISCV_H */"}, {"sha": "b9975de902357576003cf391850fef2dc336aee1", "filename": "libgcc/config.host", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89367e794613bdeb21df3e6fc0215f0acd553ef8/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89367e794613bdeb21df3e6fc0215f0acd553ef8/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=89367e794613bdeb21df3e6fc0215f0acd553ef8", "patch": "@@ -1559,6 +1559,9 @@ aarch64*-*-*)\n \t# ILP32 needs an extra header for unwinding\n \ttm_file=\"${tm_file} aarch64/value-unwind.h\"\n \t;;\n+riscv*-*-*)\n+\ttm_file=\"${tm_file} riscv/value-unwind.h\"\n+\t;;\n esac\n \n # Setup to build a shared libgcc for VxWorks when that was requested,"}, {"sha": "d7efdc14e6f9809c4411d705cc9d31355b1f00b9", "filename": "libgcc/config/riscv/value-unwind.h", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89367e794613bdeb21df3e6fc0215f0acd553ef8/libgcc%2Fconfig%2Friscv%2Fvalue-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89367e794613bdeb21df3e6fc0215f0acd553ef8/libgcc%2Fconfig%2Friscv%2Fvalue-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Friscv%2Fvalue-unwind.h?ref=89367e794613bdeb21df3e6fc0215f0acd553ef8", "patch": "@@ -0,0 +1,39 @@\n+/* Store register values as _Unwind_Word type in DWARF2 EH unwind context.\n+   Copyright (C) 2023 Free Software Foundation, Inc.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+/* Return the value of the VLENB register.  This should only be\n+   called if we know this is an vector extension enabled RISC-V host.  */\n+static inline long\n+riscv_vlenb (void)\n+{\n+  register long vlenb asm (\"a0\");\n+  /* 0xc2202573 == csrr a0, 0xc22 */\n+  asm (\".insn 0xc2202573\" : \"=r\"(vlenb));\n+  return vlenb;\n+}\n+\n+/* Lazily provide a value for VLENB, so that we don't try to execute RVV\n+   instructions unless we know they're needed.  */\n+#define DWARF_LAZY_REGISTER_VALUE(REGNO, VALUE) \\\n+  ((REGNO) == RISCV_DWARF_VLENB && ((*VALUE) = riscv_vlenb (), 1))"}]}