{"sha": "3f16185feb0636509d9f865e624c4c3712273cc4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YxNjE4NWZlYjA2MzY1MDlkOWY4NjVlNjI0YzRjMzcxMjI3M2NjNA==", "commit": {"author": {"name": "Alexander Malmberg", "email": "alexander@malmberg.org", "date": "2005-01-25T03:13:10Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2005-01-25T03:13:10Z"}, "message": "re PR objc/18408 (ICE compiling code that involves casting classes)\n\n2005-01-25  Alexander Malmberg  <alexander@malmberg.org>\n\n        PR objc/18408\n        * objc-act.c (objc_types_compatible_p): New function.\n        * objc-act.h (objc_types_compatible_p): Declare.\n        * objc-lang.c (LANG_HOOKS_TYPES_COMPATIBLE_P): Define.\n\nFrom-SVN: r94199", "tree": {"sha": "38df44a09f1d032b7868951f4c41192154178ce9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38df44a09f1d032b7868951f4c41192154178ce9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f16185feb0636509d9f865e624c4c3712273cc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f16185feb0636509d9f865e624c4c3712273cc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f16185feb0636509d9f865e624c4c3712273cc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f16185feb0636509d9f865e624c4c3712273cc4/comments", "author": {"login": "AlexMalmberg", "id": 4164906, "node_id": "MDQ6VXNlcjQxNjQ5MDY=", "avatar_url": "https://avatars.githubusercontent.com/u/4164906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexMalmberg", "html_url": "https://github.com/AlexMalmberg", "followers_url": "https://api.github.com/users/AlexMalmberg/followers", "following_url": "https://api.github.com/users/AlexMalmberg/following{/other_user}", "gists_url": "https://api.github.com/users/AlexMalmberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexMalmberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexMalmberg/subscriptions", "organizations_url": "https://api.github.com/users/AlexMalmberg/orgs", "repos_url": "https://api.github.com/users/AlexMalmberg/repos", "events_url": "https://api.github.com/users/AlexMalmberg/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexMalmberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a6d2976a97625bea66e80fb63384a68ab79983ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6d2976a97625bea66e80fb63384a68ab79983ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6d2976a97625bea66e80fb63384a68ab79983ae"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "bdd79fe3b8fc14b3d370af5733151035533c20b2", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f16185feb0636509d9f865e624c4c3712273cc4/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f16185feb0636509d9f865e624c4c3712273cc4/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=3f16185feb0636509d9f865e624c4c3712273cc4", "patch": "@@ -1,3 +1,10 @@\n+2005-01-25  Alexander Malmberg  <alexander@malmberg.org>\n+\n+\tPR objc/18408\n+\t* objc-act.c (objc_types_compatible_p): New function.\n+\t* objc-act.h (objc_types_compatible_p): Declare.\n+\t* objc-lang.c (LANG_HOOKS_TYPES_COMPATIBLE_P): Define.\n+\n 2005-01-16  Ziemowit Laski  <zlaski@apple.com>\n \n \t* objc-act.c (objc_push_parm): Call c_type_promotes_to()"}, {"sha": "fff747bf29d52300ffa32102c559f44b105de78a", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f16185feb0636509d9f865e624c4c3712273cc4/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f16185feb0636509d9f865e624c4c3712273cc4/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=3f16185feb0636509d9f865e624c4c3712273cc4", "patch": "@@ -73,6 +73,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"tree-iterator.h\"\n #include \"libfuncs.h\"\n #include \"hashtab.h\"\n+#include \"langhooks-def.h\"\n \n #define OBJC_VOID_AT_END\tvoid_list_node\n \n@@ -836,6 +837,27 @@ objc_is_class_id (tree type)\n   return OBJC_TYPE_NAME (type) == objc_class_id;\n }\n \n+\n+int\n+objc_types_compatible_p (tree type1, tree type2)\n+{\n+\n+  if (objc_is_object_ptr (type1) || objc_is_object_ptr (type2)\n+      || objc_is_class_name (type1) || objc_is_class_name (type2))\n+    {\n+      return lhd_types_compatible_p (type1, type2);\n+    }\n+  else\n+    {\n+#ifdef OBJCPLUS\n+      return cxx_types_compatible_p (type1, type2);\n+#else\n+      return c_types_compatible_p (type1, type2);\n+#endif\n+    }\n+}\n+\n+\n /* Return 1 if LHS and RHS are compatible types for assignment or\n    various other operations.  Return 0 if they are incompatible, and\n    return -1 if we choose to not decide (because the types are really"}, {"sha": "403c31b16a9a802c3b299a08cd1b474bff3d037f", "filename": "gcc/objc/objc-act.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f16185feb0636509d9f865e624c4c3712273cc4/gcc%2Fobjc%2Fobjc-act.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f16185feb0636509d9f865e624c4c3712273cc4/gcc%2Fobjc%2Fobjc-act.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.h?ref=3f16185feb0636509d9f865e624c4c3712273cc4", "patch": "@@ -28,6 +28,7 @@ bool objc_init (void);\n const char *objc_printable_name (tree, int);\n void objc_finish_file (void);\n tree objc_fold_obj_type_ref (tree, tree);\n+int objc_types_compatible_p (tree, tree);\n \n /* NB: The remaining public functions are prototyped in c-common.h, for the\n    benefit of stub-objc.c and objc-act.c.  */"}, {"sha": "e83ffda4b3608b310d8807389a091e1eab2d6700", "filename": "gcc/objc/objc-lang.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f16185feb0636509d9f865e624c4c3712273cc4/gcc%2Fobjc%2Fobjc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f16185feb0636509d9f865e624c4c3712273cc4/gcc%2Fobjc%2Fobjc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-lang.c?ref=3f16185feb0636509d9f865e624c4c3712273cc4", "patch": "@@ -45,6 +45,8 @@ enum c_language_kind c_language = clk_objc;\n #define LANG_HOOKS_INIT objc_init\n #undef LANG_HOOKS_DECL_PRINTABLE_NAME\n #define LANG_HOOKS_DECL_PRINTABLE_NAME objc_printable_name\n+#undef LANG_HOOKS_TYPES_COMPATIBLE_P\n+#define LANG_HOOKS_TYPES_COMPATIBLE_P objc_types_compatible_p\n \n /* Each front end provides its own lang hook initializer.  */\n const struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;"}]}