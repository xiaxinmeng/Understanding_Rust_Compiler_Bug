{"sha": "6fc4a993cebc960c9556d840dc7c109b1b08b295", "node_id": "C_kwDOANBUbNoAKDZmYzRhOTkzY2ViYzk2MGM5NTU2ZDg0MGRjN2MxMDliMWIwOGIyOTU", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-03-25T00:17:18Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-03-25T00:17:18Z"}, "message": "Daily bump.", "tree": {"sha": "931315fdc1eaa2e14915466819129aea5835394b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/931315fdc1eaa2e14915466819129aea5835394b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fc4a993cebc960c9556d840dc7c109b1b08b295", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fc4a993cebc960c9556d840dc7c109b1b08b295", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fc4a993cebc960c9556d840dc7c109b1b08b295", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fc4a993cebc960c9556d840dc7c109b1b08b295/comments", "author": null, "committer": null, "parents": [{"sha": "21079cb82bff1048596b935bbf6a86f49e78a2f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21079cb82bff1048596b935bbf6a86f49e78a2f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21079cb82bff1048596b935bbf6a86f49e78a2f3"}], "stats": {"total": 188, "additions": 187, "deletions": 1}, "files": [{"sha": "a2260e97bc8f8aecd886bcb167c975d86deca738", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fc4a993cebc960c9556d840dc7c109b1b08b295/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fc4a993cebc960c9556d840dc7c109b1b08b295/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=6fc4a993cebc960c9556d840dc7c109b1b08b295", "patch": "@@ -1,3 +1,7 @@\n+2022-03-24  Bill Schmidt  <bill.schmidt@gmail.com>\n+\n+\t* MAINTAINERS: Change my information.\n+\n 2022-03-16  Chung-Ju Wu  <jasonwucj@gmail.com>\n \n \t* MAINTAINERS: Add myself to DCO section."}, {"sha": "bddb065e8bbb0d7acd85c1fd87d13f49fa663a02", "filename": "gcc/ChangeLog", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fc4a993cebc960c9556d840dc7c109b1b08b295/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fc4a993cebc960c9556d840dc7c109b1b08b295/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6fc4a993cebc960c9556d840dc7c109b1b08b295", "patch": "@@ -1,3 +1,52 @@\n+2022-03-24  Alexandre Oliva  <oliva@adacore.com>\n+\n+\tPR debug/104564\n+\t* gimple-harden-conditionals.cc (detach_value): Keep temps\n+\tanonymous.\n+\n+2022-03-24  Alexandre Oliva  <oliva@adacore.com>\n+\n+\tPR middle-end/104975\n+\t* gimple-harden-conditionals.cc\n+\t(pass_harden_compares::execute): Force split in case of\n+\tmultiple edges.\n+\n+2022-03-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/105035\n+\t* fold-const.cc (operand_equal_p) <case COMPONENT_REF>: If either\n+\tfield0 or field1 is not a FIELD_DECL, return false.\n+\n+2022-03-24  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-predcom.cc (chain::chain): Add CTOR.\n+\t(component::component): Likewise.\n+\t(pcom_worker::release_chain): Use delete.\n+\t(release_components): Likewise.\n+\t(pcom_worker::filter_suitable_components): Likewise.\n+\t(pcom_worker::split_data_refs_to_components): Use new.\n+\t(make_invariant_chain): Likewise.\n+\t(make_rooted_chain): Likewise.\n+\t(pcom_worker::combine_chains): Likewise.\n+\t* tree-vect-loop.cc (vect_create_epilog_for_reduction):\n+\tMake sure to release previously constructed scalar_results.\n+\t* tree-vect-stmts.cc (vectorizable_load): Use auto_vec\n+\tfor vec_offsets.\n+\t* vr-values.cc (simplify_using_ranges::~simplify_using_ranges):\n+\tRelease m_flag_set_edges.\n+\n+2022-03-24  Siddhesh Poyarekar  <siddhesh@gotplt.org>\n+\n+\tPR tree-optimization/104970\n+\t* tree-object-size.cc (parm_object_size): Restrict size\n+\tcomputation scenarios to explicit access attributes.\n+\n+2022-03-24  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\tPR target/104967\n+\t* config/rs6000/rs6000-c.cc (find_instance): Skip instances with null\n+\tfunction types.\n+\n 2022-03-23  Richard Biener  <rguenther@suse.de>\n \n \tPR target/102125"}, {"sha": "575162361ccc72d3a96bca38f22ec6515dd7bc3c", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fc4a993cebc960c9556d840dc7c109b1b08b295/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fc4a993cebc960c9556d840dc7c109b1b08b295/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=6fc4a993cebc960c9556d840dc7c109b1b08b295", "patch": "@@ -1 +1 @@\n-20220324\n+20220325"}, {"sha": "932a666a38f57ea73d43a8a9dbf667f8aea79f9f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fc4a993cebc960c9556d840dc7c109b1b08b295/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fc4a993cebc960c9556d840dc7c109b1b08b295/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6fc4a993cebc960c9556d840dc7c109b1b08b295", "patch": "@@ -1,3 +1,9 @@\n+2022-03-24  Pascal Obry  <obry@adacore.com>\n+\n+\tPR ada/104767\n+\t* libgnat/g-sercom__mingw.adb (Close): Reset port handle to -1.\n+\t* libgnat/g-sercom__linux.adb (Close): Likewise.\n+\n 2022-03-10  Richard Biener  <rguenther@suse.de>\n \n \tPR ada/104861"}, {"sha": "6a1524b78ea584a306be30b862e0af78e1af4449", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fc4a993cebc960c9556d840dc7c109b1b08b295/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fc4a993cebc960c9556d840dc7c109b1b08b295/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6fc4a993cebc960c9556d840dc7c109b1b08b295", "patch": "@@ -1,3 +1,45 @@\n+2022-03-24  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/104284\n+\t* decl.cc (check_initializer): Don't call build_aggr_init in\n+\ta template.\n+\n+2022-03-24  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/96645\n+\t* cp-tree.h (type_has_default_ctor_to_be_synthesized): Declare.\n+\t* class.cc (type_has_default_ctor_to_be_synthesized): New.\n+\t(type_has_non_user_provided_default_constructor_1): Support it.\n+\t(type_has_non_user_provided_default_constructor): Now a wrapper.\n+\t* method.cc (complain_about_unparsed_dmi): New.\n+\t(constructible_expr): Call it.\n+\n+2022-03-24  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/102990\n+\t* typeck2.cc (massage_init_elt): Avoid folding CONSTRUCTORs.\n+\n+2022-03-24  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/104620\n+\t* call.cc (build_over_call): Use cxx_constant_value_sfinae\n+\tinstead of cxx_constant_value to evaluate a consteval call.\n+\t* constexpr.cc (cxx_constant_value_sfinae): Add decl parameter\n+\tand pass it to cxx_eval_outermost_constant_expr.\n+\t* cp-tree.h (cxx_constant_value_sfinae): Add decl parameter.\n+\t* pt.cc (fold_targs_r): Pass NULL_TREE as decl parameter to\n+\tcxx_constant_value_sfinae.\n+\n+2022-03-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/104994\n+\t* constexpr.cc (cxx_eval_constant_expression): Don't diagnose passing\n+\tthrough extern thread_local declarations.  Change wording from\n+\tdeclaration to definition.\n+\t(potential_constant_expression_1): Don't diagnose extern thread_local\n+\tdeclarations.  Change wording from declared to defined.\n+\t* decl.cc (start_decl): Likewise.\n+\n 2022-03-23  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/103337"}, {"sha": "e87cc860d4f09ae1ad873c2553035dd80ab946ce", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fc4a993cebc960c9556d840dc7c109b1b08b295/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fc4a993cebc960c9556d840dc7c109b1b08b295/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6fc4a993cebc960c9556d840dc7c109b1b08b295", "patch": "@@ -1,3 +1,83 @@\n+2022-03-24  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/104284\n+\t* g++.dg/cpp1y/constexpr-104284-1.C: New test.\n+\t* g++.dg/cpp1y/constexpr-104284-2.C: New test.\n+\t* g++.dg/cpp1y/constexpr-104284-3.C: New test.\n+\t* g++.dg/cpp1y/constexpr-104284-4.C: New test.\n+\n+2022-03-24  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/96645\n+\t* g++.dg/ext/is_constructible3.C: Expect error.\n+\t* g++.dg/ext/is_constructible7.C: New test.\n+\n+2022-03-24  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/102990\n+\t* g++.dg/cpp0x/nsdmi-template22.C: New test.\n+\t* g++.dg/cpp0x/nsdmi-template23.C: New test.\n+\n+2022-03-24  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/104620\n+\t* g++.dg/cpp23/consteval-if2.C: XFAIL two dg-error tests where\n+\tthe argument to the non-constant non-dependent consteval call is\n+\twrapped by NON_DEPENDENT_EXPR.\n+\t* g++.dg/cpp2a/consteval30.C: New test.\n+\n+2022-03-24  Alexandre Oliva  <oliva@adacore.com>\n+\n+\tPR debug/104564\n+\t* c-c++-common/torture/harden-comp.c: Adjust.\n+\t* c-c++-common/torture/harden-cond.c: Adjust.\n+\n+2022-03-24  Alexandre Oliva  <oliva@adacore.com>\n+\n+\tPR middle-end/104975\n+\t* gcc.dg/pr104975.c: New.\n+\n+2022-03-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/102024\n+\t* gcc.dg/compat/pr102024_main.c: New test.\n+\t* gcc.dg/compat/pr102024_test.h: New test.\n+\t* gcc.dg/compat/pr102024_x.c: New test.\n+\t* gcc.dg/compat/pr102024_y.c: New test.\n+\t* g++.dg/compat/pr102024_main.C: New test.\n+\t* g++.dg/compat/pr102024_test.h: New test.\n+\t* g++.dg/compat/pr102024_x.C: New test.\n+\t* g++.dg/compat/pr102024_y.C: New test.\n+\n+2022-03-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/105035\n+\t* g++.dg/warn/Wduplicated-cond2.C: New test.\n+\n+2022-03-24  Siddhesh Poyarekar  <siddhesh@gotplt.org>\n+\n+\tPR tree-optimization/104970\n+\t* gcc.dg/builtin-dynamic-object-size-0.c (test_parmsz_simple2,\n+\ttest_parmsz_simple3, test_parmsz_extern, test_parmsz_internal,\n+\ttest_parmsz_internal2, test_parmsz_internal3): New tests.\n+\t(main): Use them.\n+\n+2022-03-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/104994\n+\t* g++.dg/diagnostic/constexpr1.C: Change expected diagnostic wording\n+\tfrom declared to defined.\n+\t* g++.dg/cpp23/constexpr-nonlit1.C: Likewise.\n+\t(garply): Change dg-error into dg-bogus.\n+\t* g++.dg/cpp23/constexpr-nonlit2.C: Change expected diagnostic wording\n+\tfrom declaration to definition.\n+\t* g++.dg/cpp23/constexpr-nonlit6.C: Change expected diagnostic wording\n+\tfrom declared to defined.\n+\t* g++.dg/cpp23/constexpr-nonlit7.C: New test.\n+\t* g++.dg/cpp2a/constexpr-try5.C: Change expected diagnostic wording\n+\tfrom declared to defined.\n+\t* g++.dg/cpp2a/consteval3.C: Likewise.\n+\n 2022-03-23  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/104979"}, {"sha": "0038339d5810732c08e4c67155c3331cc0bdf1a0", "filename": "libatomic/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fc4a993cebc960c9556d840dc7c109b1b08b295/libatomic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fc4a993cebc960c9556d840dc7c109b1b08b295/libatomic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FChangeLog?ref=6fc4a993cebc960c9556d840dc7c109b1b08b295", "patch": "@@ -1,3 +1,8 @@\n+2022-03-24  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR target/105011\n+\t* tas_n.c (libat_test_and_set): Fix return value.\n+\n 2022-03-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/104688"}]}