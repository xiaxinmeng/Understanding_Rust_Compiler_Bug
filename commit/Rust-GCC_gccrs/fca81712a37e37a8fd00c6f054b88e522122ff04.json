{"sha": "fca81712a37e37a8fd00c6f054b88e522122ff04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNhODE3MTJhMzdlMzdhOGZkMDBjNmYwNTRiODhlNTIyMTIyZmYwNA==", "commit": {"author": {"name": "Sebastian Pop", "email": "pop@cri.ensmp.fr", "date": "2005-03-30T12:14:49Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2005-03-30T12:14:49Z"}, "message": "tree-scalar-evolution.c (instantiate_parameters_1): Return as soon as a chrec_dont_know is detected.\n\n\t* tree-scalar-evolution.c (instantiate_parameters_1): Return\n\tas soon as a chrec_dont_know is detected.\n\nFrom-SVN: r97253", "tree": {"sha": "3375533a1762558e9a7ea90af28165101380dd63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3375533a1762558e9a7ea90af28165101380dd63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fca81712a37e37a8fd00c6f054b88e522122ff04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fca81712a37e37a8fd00c6f054b88e522122ff04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fca81712a37e37a8fd00c6f054b88e522122ff04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fca81712a37e37a8fd00c6f054b88e522122ff04/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d8a7f23ee9cbb193bbe2afb82288f2943df87d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d8a7f23ee9cbb193bbe2afb82288f2943df87d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d8a7f23ee9cbb193bbe2afb82288f2943df87d2"}], "stats": {"total": 49, "additions": 43, "deletions": 6}, "files": [{"sha": "b33491d99c4a3fe12cced53469abe1c46233936b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca81712a37e37a8fd00c6f054b88e522122ff04/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca81712a37e37a8fd00c6f054b88e522122ff04/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fca81712a37e37a8fd00c6f054b88e522122ff04", "patch": "@@ -1,3 +1,8 @@\n+2005-03-30  Sebastian Pop  <pop@cri.ensmp.fr>\n+\n+\t* tree-scalar-evolution.c (instantiate_parameters_1): Return \n+\tas soon as a chrec_dont_know is detected.\n+\n 2005-03-31  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \tMerge from csl-arm-branch."}, {"sha": "576fce0ae11325d6dcebfcc83e7d92bc3d42b666", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 38, "deletions": 6, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca81712a37e37a8fd00c6f054b88e522122ff04/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca81712a37e37a8fd00c6f054b88e522122ff04/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=fca81712a37e37a8fd00c6f054b88e522122ff04", "patch": "@@ -1990,7 +1990,9 @@ instantiate_parameters_1 (struct loop *loop, tree chrec,\n \t result again.  */\n       bitmap_set_bit (already_instantiated, SSA_NAME_VERSION (chrec));\n       res = analyze_scalar_evolution (def_loop, chrec);\n-      res = instantiate_parameters_1 (loop, res, allow_superloop_chrecs, cache);\n+      if (res != chrec_dont_know)\n+\tres = instantiate_parameters_1 (loop, res, allow_superloop_chrecs,\n+\t\t\t\t\tcache);\n       bitmap_clear_bit (already_instantiated, SSA_NAME_VERSION (chrec));\n \n       /* Store the correct value to the cache.  */\n@@ -2000,8 +2002,14 @@ instantiate_parameters_1 (struct loop *loop, tree chrec,\n     case POLYNOMIAL_CHREC:\n       op0 = instantiate_parameters_1 (loop, CHREC_LEFT (chrec),\n \t\t\t\t      allow_superloop_chrecs, cache);\n+      if (op0 == chrec_dont_know)\n+\treturn chrec_dont_know;\n+\n       op1 = instantiate_parameters_1 (loop, CHREC_RIGHT (chrec),\n \t\t\t\t      allow_superloop_chrecs, cache);\n+      if (op1 == chrec_dont_know)\n+\treturn chrec_dont_know;\n+\n       if (CHREC_LEFT (chrec) != op0\n \t  || CHREC_RIGHT (chrec) != op1)\n \tchrec = build_polynomial_chrec (CHREC_VARIABLE (chrec), op0, op1);\n@@ -2010,8 +2018,14 @@ instantiate_parameters_1 (struct loop *loop, tree chrec,\n     case PLUS_EXPR:\n       op0 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 0),\n \t\t\t\t      allow_superloop_chrecs, cache);\n+      if (op0 == chrec_dont_know)\n+\treturn chrec_dont_know;\n+\n       op1 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 1),\n \t\t\t\t      allow_superloop_chrecs, cache);\n+      if (op1 == chrec_dont_know)\n+\treturn chrec_dont_know;\n+\n       if (TREE_OPERAND (chrec, 0) != op0\n \t  || TREE_OPERAND (chrec, 1) != op1)\n       \tchrec = chrec_fold_plus (TREE_TYPE (chrec), op0, op1);\n@@ -2020,8 +2034,14 @@ instantiate_parameters_1 (struct loop *loop, tree chrec,\n     case MINUS_EXPR:\n       op0 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 0),\n \t\t\t\t      allow_superloop_chrecs, cache);\n+      if (op0 == chrec_dont_know)\n+\treturn chrec_dont_know;\n+\n       op1 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 1),\n \t\t\t\t      allow_superloop_chrecs, cache);\n+      if (op1 == chrec_dont_know)\n+\treturn chrec_dont_know;\n+\n       if (TREE_OPERAND (chrec, 0) != op0\n \t  || TREE_OPERAND (chrec, 1) != op1)\n         chrec = chrec_fold_minus (TREE_TYPE (chrec), op0, op1);\n@@ -2030,8 +2050,14 @@ instantiate_parameters_1 (struct loop *loop, tree chrec,\n     case MULT_EXPR:\n       op0 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 0),\n \t\t\t\t      allow_superloop_chrecs, cache);\n+      if (op0 == chrec_dont_know)\n+\treturn chrec_dont_know;\n+\n       op1 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 1),\n \t\t\t\t      allow_superloop_chrecs, cache);\n+      if (op1 == chrec_dont_know)\n+\treturn chrec_dont_know;\n+\n       if (TREE_OPERAND (chrec, 0) != op0\n \t  || TREE_OPERAND (chrec, 1) != op1)\n \tchrec = chrec_fold_multiply (TREE_TYPE (chrec), op0, op1);\n@@ -2065,13 +2091,17 @@ instantiate_parameters_1 (struct loop *loop, tree chrec,\n     case 3:\n       op0 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 0),\n \t\t\t\t      allow_superloop_chrecs, cache);\n+      if (op0 == chrec_dont_know)\n+\treturn chrec_dont_know;\n+\n       op1 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 1),\n \t\t\t\t      allow_superloop_chrecs, cache);\n+      if (op1 == chrec_dont_know)\n+\treturn chrec_dont_know;\n+\n       op2 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 2),\n \t\t\t\t      allow_superloop_chrecs, cache);\n-      if (op0 == chrec_dont_know\n-\t  || op1 == chrec_dont_know\n-\t  || op2 == chrec_dont_know)\n+      if (op2 == chrec_dont_know)\n         return chrec_dont_know;\n \n       if (op0 == TREE_OPERAND (chrec, 0)\n@@ -2085,10 +2115,12 @@ instantiate_parameters_1 (struct loop *loop, tree chrec,\n     case 2:\n       op0 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 0),\n \t\t\t\t      allow_superloop_chrecs, cache);\n+      if (op0 == chrec_dont_know)\n+\treturn chrec_dont_know;\n+\n       op1 = instantiate_parameters_1 (loop, TREE_OPERAND (chrec, 1),\n \t\t\t\t      allow_superloop_chrecs, cache);\n-      if (op0 == chrec_dont_know\n-\t  || op1 == chrec_dont_know)\n+      if (op1 == chrec_dont_know)\n         return chrec_dont_know;\n \n       if (op0 == TREE_OPERAND (chrec, 0)"}]}