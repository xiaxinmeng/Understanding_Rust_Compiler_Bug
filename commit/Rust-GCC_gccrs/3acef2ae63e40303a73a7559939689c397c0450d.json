{"sha": "3acef2ae63e40303a73a7559939689c397c0450d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FjZWYyYWU2M2U0MDMwM2E3M2E3NTU5OTM5Njg5YzM5N2MwNDUwZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2003-08-20T12:24:18Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-08-20T12:24:18Z"}, "message": "stor-layout.c (do_type_align): Only copy DECL_USER_ALIGN from TYPE_USER_ALIGN for FIELD_DECLs.\n\n        * stor-layout.c (do_type_align): Only copy DECL_USER_ALIGN from\n        TYPE_USER_ALIGN for FIELD_DECLs.\n\n        * attribs.c (decl_attributes): Rebuild the function pointer type after\n        changing the target type.\n        * tree.c (get_qualified_type): Also check that the attributes match.\n\nFrom-SVN: r70597", "tree": {"sha": "5de64ab02077a2ceccd6dd2c4e277f161bd8ac99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5de64ab02077a2ceccd6dd2c4e277f161bd8ac99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3acef2ae63e40303a73a7559939689c397c0450d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3acef2ae63e40303a73a7559939689c397c0450d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3acef2ae63e40303a73a7559939689c397c0450d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3acef2ae63e40303a73a7559939689c397c0450d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8f7d850c97a24f9809bfc3f9505d508e8b011000", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f7d850c97a24f9809bfc3f9505d508e8b011000", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f7d850c97a24f9809bfc3f9505d508e8b011000"}], "stats": {"total": 44, "additions": 39, "deletions": 5}, "files": [{"sha": "ff2a9f70f9c92e0a137f34228a4f38dd56555882", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acef2ae63e40303a73a7559939689c397c0450d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acef2ae63e40303a73a7559939689c397c0450d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3acef2ae63e40303a73a7559939689c397c0450d", "patch": "@@ -1,3 +1,12 @@\n+2003-08-20  Jason Merrill  <jason@redhat.com>\n+\n+\t* stor-layout.c (do_type_align): Only copy DECL_USER_ALIGN from\n+\tTYPE_USER_ALIGN for FIELD_DECLs.\n+\t\n+\t* attribs.c (decl_attributes): Rebuild the function pointer type after\n+\tchanging the target type.\n+\t* tree.c (get_qualified_type): Also check that the attributes match.\n+\n 2003-08-19  Matt Kraai  <kraai@alumni.cmu.edu>\n \n \t* Makefile.in (STAGESTUFF): Move cc1obj$(exeext) from here ..."}, {"sha": "a40fea7e76109217822ca1ed692a16320d60100a", "filename": "gcc/attribs.c", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acef2ae63e40303a73a7559939689c397c0450d/gcc%2Fattribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acef2ae63e40303a73a7559939689c397c0450d/gcc%2Fattribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.c?ref=3acef2ae63e40303a73a7559939689c397c0450d", "patch": "@@ -154,6 +154,7 @@ decl_attributes (tree *node, tree attributes, int flags)\n       tree *anode = node;\n       const struct attribute_spec *spec = NULL;\n       bool no_add_attrs = 0;\n+      tree fn_ptr_tmp = NULL_TREE;\n       size_t i;\n \n       for (i = 0; i < ARRAY_SIZE (attribute_tables); i++)\n@@ -222,9 +223,18 @@ decl_attributes (tree *node, tree attributes, int flags)\n \t      && (TREE_CODE (TREE_TYPE (*anode)) == FUNCTION_TYPE\n \t\t  || TREE_CODE (TREE_TYPE (*anode)) == METHOD_TYPE))\n \t    {\n-\t      if (!(flags & (int) ATTR_FLAG_TYPE_IN_PLACE))\n-\t\t*anode = build_type_copy (*anode);\n-\t      anode = &TREE_TYPE (*anode);\n+\t      /* OK, this is a bit convoluted.  We can't just make a copy\n+\t\t of the pointer type and modify its TREE_TYPE, because if\n+\t\t we change the attributes of the target type the pointer\n+\t\t type needs to have a different TYPE_MAIN_VARIANT.  So we\n+\t\t pull out the target type now, frob it as appropriate, and\n+\t\t rebuild the pointer type later.\n+\n+\t         This would all be simpler if attributes were part of the\n+\t         declarator, grumble grumble.  */\n+\t      fn_ptr_tmp = TREE_TYPE (*anode);\n+\t      anode = &fn_ptr_tmp;\n+\t      flags &= ~(int) ATTR_FLAG_TYPE_IN_PLACE;\n \t    }\n \t  else if (flags & (int) ATTR_FLAG_FUNCTION_NEXT)\n \t    {\n@@ -291,6 +301,19 @@ decl_attributes (tree *node, tree attributes, int flags)\n \t\t\t\t\t\t\t\t  old_attrs));\n \t    }\n \t}\n+\n+      if (fn_ptr_tmp)\n+\t{\n+\t  /* Rebuild the function pointer type and put it in the\n+\t     appropriate place.  */\n+\t  fn_ptr_tmp = build_pointer_type (fn_ptr_tmp);\n+\t  if (DECL_P (*node))\n+\t    TREE_TYPE (*node) = fn_ptr_tmp;\n+\t  else if (TREE_CODE (*node) == POINTER_TYPE)\n+\t    *node = fn_ptr_tmp;\n+\t  else\n+\t    abort ();\n+\t}\n     }\n \n   return returned_attrs;"}, {"sha": "afd830d20e8b199dd9d2bd8647e37c15224d3d2b", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acef2ae63e40303a73a7559939689c397c0450d/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acef2ae63e40303a73a7559939689c397c0450d/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=3acef2ae63e40303a73a7559939689c397c0450d", "patch": "@@ -344,7 +344,8 @@ do_type_align (tree type, tree decl)\n   if (TYPE_ALIGN (type) > DECL_ALIGN (decl))\n     {\n       DECL_ALIGN (decl) = TYPE_ALIGN (type);\n-      DECL_USER_ALIGN (decl) = TYPE_USER_ALIGN (type);\n+      if (TREE_CODE (decl) == FIELD_DECL)\n+\tDECL_USER_ALIGN (decl) = TYPE_USER_ALIGN (type);\n     }\n }\n "}, {"sha": "3bae512970c3a6b97fdcf25bde01bd15f09e92d4", "filename": "gcc/tree.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3acef2ae63e40303a73a7559939689c397c0450d/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3acef2ae63e40303a73a7559939689c397c0450d/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=3acef2ae63e40303a73a7559939689c397c0450d", "patch": "@@ -2849,7 +2849,8 @@ get_qualified_type (tree type, int type_quals)\n      preserve the TYPE_NAME, since there is code that depends on this.  */\n   for (t = TYPE_MAIN_VARIANT (type); t; t = TYPE_NEXT_VARIANT (t))\n     if (TYPE_QUALS (t) == type_quals && TYPE_NAME (t) == TYPE_NAME (type)\n-        && TYPE_CONTEXT (t) == TYPE_CONTEXT (type))\n+        && TYPE_CONTEXT (t) == TYPE_CONTEXT (type)\n+\t&& attribute_list_equal (TYPE_ATTRIBUTES (t), TYPE_ATTRIBUTES (type)))\n       return t;\n \n   return NULL_TREE;"}]}