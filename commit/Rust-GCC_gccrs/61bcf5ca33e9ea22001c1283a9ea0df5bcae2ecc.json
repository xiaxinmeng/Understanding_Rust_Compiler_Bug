{"sha": "61bcf5ca33e9ea22001c1283a9ea0df5bcae2ecc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFiY2Y1Y2EzM2U5ZWEyMjAwMWMxMjgzYTllYTBkZjViY2FlMmVjYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-09T09:50:46Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-09T09:50:46Z"}, "message": "[multiple changes]\n\n2010-09-09  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch9.ads (Find_Master_Scope): New function, extracted from\n\tBuild_Master_Entity, to find the proper scope for the master entity of\n\ta type that may contain tasks, in the presence of transient scopes.\n\t* exp_ch9.adb (Build_Master_Entity) Use new function.\n\t* exp_ch3.adb (Build_Class_Wide_Master): ditto.\n\n2010-09-09  Vincent Celier  <celier@adacore.com>\n\n\t* prj-attr.adb: Add new attributes Leading_Library_Options and\n\tLinker'Leading_Switches.\n\t* snames.ads-tmpl: Add new standard names Leading_Library_Options and\n\tLeading_Switches.\n\nFrom-SVN: r164060", "tree": {"sha": "577cfd9eb82c4ec23845cdea4caae9e2eadd84ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/577cfd9eb82c4ec23845cdea4caae9e2eadd84ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61bcf5ca33e9ea22001c1283a9ea0df5bcae2ecc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61bcf5ca33e9ea22001c1283a9ea0df5bcae2ecc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61bcf5ca33e9ea22001c1283a9ea0df5bcae2ecc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61bcf5ca33e9ea22001c1283a9ea0df5bcae2ecc/comments", "author": null, "committer": null, "parents": [{"sha": "0052da204e85630c973a0ad13b49e403abe1d5d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0052da204e85630c973a0ad13b49e403abe1d5d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0052da204e85630c973a0ad13b49e403abe1d5d3"}], "stats": {"total": 109, "additions": 73, "deletions": 36}, "files": [{"sha": "85dfcc8e398afa47bf3ec955f05f692284f7f34b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61bcf5ca33e9ea22001c1283a9ea0df5bcae2ecc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61bcf5ca33e9ea22001c1283a9ea0df5bcae2ecc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=61bcf5ca33e9ea22001c1283a9ea0df5bcae2ecc", "patch": "@@ -1,3 +1,18 @@\n+2010-09-09  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch9.ads (Find_Master_Scope): New function, extracted from\n+\tBuild_Master_Entity, to find the proper scope for the master entity of\n+\ta type that may contain tasks, in the presence of transient scopes.\n+\t* exp_ch9.adb (Build_Master_Entity) Use new function.\n+\t* exp_ch3.adb (Build_Class_Wide_Master): ditto.\n+\n+2010-09-09  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-attr.adb: Add new attributes Leading_Library_Options and\n+\tLinker'Leading_Switches.\n+\t* snames.ads-tmpl: Add new standard names Leading_Library_Options and\n+\tLeading_Switches.\n+\n 2010-09-09  Javier Miranda  <miranda@adacore.com>\n \n \t* sem_ch3.adb (Derive_Subprogram): The code that checks if a"}, {"sha": "cc9f14f5b06d1cb93ad159f098b190fd48206b85", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61bcf5ca33e9ea22001c1283a9ea0df5bcae2ecc/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61bcf5ca33e9ea22001c1283a9ea0df5bcae2ecc/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=61bcf5ca33e9ea22001c1283a9ea0df5bcae2ecc", "patch": "@@ -41,8 +41,8 @@ with Exp_Strm; use Exp_Strm;\n with Exp_Tss;  use Exp_Tss;\n with Exp_Util; use Exp_Util;\n with Freeze;   use Freeze;\n-with Nlists;   use Nlists;\n with Namet;    use Namet;\n+with Nlists;   use Nlists;\n with Nmake;    use Nmake;\n with Opt;      use Opt;\n with Restrict; use Restrict;\n@@ -792,6 +792,7 @@ package body Exp_Ch3 is\n       Decl : Node_Id;\n       P    : Node_Id;\n       Par  : Node_Id;\n+      Scop : Entity_Id;\n \n    begin\n       --  Nothing to do if there is no task hierarchy\n@@ -810,9 +811,11 @@ package body Exp_Ch3 is\n          P := Parent (T);\n       end if;\n \n+      Scop := Find_Master_Scope (T);\n+\n       --  Nothing to do if we already built a master entity for this scope\n \n-      if not Has_Master_Entity (Scope (T)) then\n+      if not Has_Master_Entity (Scop) then\n \n          --  First build the master entity\n          --    _Master : constant Master_Id := Current_Master.all;\n@@ -828,9 +831,9 @@ package body Exp_Ch3 is\n                Make_Explicit_Dereference (Loc,\n                  New_Reference_To (RTE (RE_Current_Master), Loc)));\n \n+         Set_Has_Master_Entity (Scop);\n          Insert_Action (P, Decl);\n          Analyze (Decl);\n-         Set_Has_Master_Entity (Scope (T));\n \n          --  Now mark the containing scope as a task master. Masters\n          --  associated with return statements are already marked at"}, {"sha": "1e9edfecffff3f51991f4920f92fcadafe48b228", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 39, "deletions": 33, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61bcf5ca33e9ea22001c1283a9ea0df5bcae2ecc/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61bcf5ca33e9ea22001c1283a9ea0df5bcae2ecc/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=61bcf5ca33e9ea22001c1283a9ea0df5bcae2ecc", "patch": "@@ -2481,31 +2481,7 @@ package body Exp_Ch9 is\n       S    : Entity_Id;\n \n    begin\n-      S := Scope (E);\n-\n-      --  Ada 2005 (AI-287): Do not set/get the has_master_entity reminder\n-      --  in internal scopes, unless present already.. Required for nested\n-      --  limited aggregates, where the expansion of task components may\n-      --  generate inner blocks. If the block is the rewriting of a call\n-      --  or the scope is an extended return statement this is valid master.\n-      --  The master in an extended return is only used within the return,\n-      --  and is subsequently overwritten in Move_Activation_Chain, but it\n-      --  must exist now.\n-\n-      if Ada_Version >= Ada_05 then\n-         while Is_Internal (S) loop\n-            if Nkind (Parent (S)) = N_Block_Statement\n-              and then\n-                Nkind (Original_Node (Parent (S))) = N_Procedure_Call_Statement\n-            then\n-               exit;\n-            elsif Ekind (S) = E_Return_Statement then\n-               exit;\n-            else\n-               S := Scope (S);\n-            end if;\n-         end loop;\n-      end if;\n+      S := Find_Master_Scope (E);\n \n       --  Nothing to do if we already built a master entity for this scope\n       --  or if there is no task hierarchy.\n@@ -2534,14 +2510,7 @@ package body Exp_Ch9 is\n       Insert_Before (P, Decl);\n       Analyze (Decl);\n \n-      --  Ada 2005 (AI-287): Set the has_master_entity reminder in the\n-      --  non-internal scope selected above.\n-\n-      if Ada_Version >= Ada_05 then\n-         Set_Has_Master_Entity (S);\n-      else\n-         Set_Has_Master_Entity (Scope (E));\n-      end if;\n+      Set_Has_Master_Entity (S);\n \n       --  Now mark the containing scope as a task master\n \n@@ -11136,6 +11105,43 @@ package body Exp_Ch9 is\n             Make_Integer_Literal (Loc, 0)));\n    end Family_Size;\n \n+   -----------------------\n+   -- Find_Master_Scope --\n+   -----------------------\n+\n+   function Find_Master_Scope (E : Entity_Id) return Entity_Id is\n+      S : Entity_Id;\n+\n+   begin\n+      --  In Ada2005, the master is the innermost enclosing scope that is not\n+      --  transient. If the enclosing block is the rewriting of a call or the\n+      --  scope is an extended return statement this is valid master. The\n+      --  master in an extended return is only used within the return, and is\n+      --  subsequently overwritten in Move_Activation_Chain, but it must exist\n+      --  now before that overwriting occurs.\n+\n+      S := Scope (E);\n+\n+      if Ada_Version >= Ada_05 then\n+         while Is_Internal (S) loop\n+            if Nkind (Parent (S)) = N_Block_Statement\n+              and then\n+                Nkind (Original_Node (Parent (S))) = N_Procedure_Call_Statement\n+            then\n+               exit;\n+\n+            elsif Ekind (S) = E_Return_Statement then\n+               exit;\n+\n+            else\n+               S := Scope (S);\n+            end if;\n+         end loop;\n+      end if;\n+\n+      return S;\n+   end Find_Master_Scope;\n+\n    -----------------------------------\n    -- Find_Task_Or_Protected_Pragma --\n    -----------------------------------"}, {"sha": "13e3f796ef0943c7c223109a7f04dc272dd41e8b", "filename": "gcc/ada/exp_ch9.ads", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61bcf5ca33e9ea22001c1283a9ea0df5bcae2ecc/gcc%2Fada%2Fexp_ch9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61bcf5ca33e9ea22001c1283a9ea0df5bcae2ecc/gcc%2Fada%2Fexp_ch9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.ads?ref=61bcf5ca33e9ea22001c1283a9ea0df5bcae2ecc", "patch": "@@ -263,6 +263,15 @@ package Exp_Ch9 is\n    --  return the external version of a protected operation, which locks\n    --  the object before invoking the internal protected subprogram body.\n \n+   function Find_Master_Scope (E : Entity_Id) return Entity_Id;\n+   --  When a type includes tasks, a master entity is created in the scope, to\n+   --  be used by the runtime during activation. In general the master is the\n+   --  immediate scope in which the type is declared, but in Ada2005, in the\n+   --  presence of synchronized classwide interfaces, the immediate scope of\n+   --  an anonymous access type may be a transient scope, which has no run-time\n+   --  presence. In this case, the scope of the master is the innermost scope\n+   --  that comes from source.\n+\n    function First_Protected_Operation (D : List_Id) return Node_Id;\n    --  Given the declarations list for a protected body, find the\n    --  first protected operation body."}, {"sha": "ef9a96d57101604fa1b548fa723b88e6e73ca23f", "filename": "gcc/ada/prj-attr.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61bcf5ca33e9ea22001c1283a9ea0df5bcae2ecc/gcc%2Fada%2Fprj-attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61bcf5ca33e9ea22001c1283a9ea0df5bcae2ecc/gcc%2Fada%2Fprj-attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.adb?ref=61bcf5ca33e9ea22001c1283a9ea0df5bcae2ecc", "patch": "@@ -99,6 +99,7 @@ package body Prj.Attr is\n    \"SVlibrary_version#\" &\n    \"LVlibrary_interface#\" &\n    \"SVlibrary_auto_init#\" &\n+   \"LVleading_library_options#\" &\n    \"LVlibrary_options#\" &\n    \"SVlibrary_src_dir#\" &\n    \"SVlibrary_ali_dir#\" &\n@@ -246,6 +247,7 @@ package body Prj.Attr is\n    \"Plinker#\" &\n    \"LVrequired_switches#\" &\n    \"Ladefault_switches#\" &\n+   \"LcOleading_switches#\" &\n    \"LcOswitches#\" &\n    \"LVlinker_options#\" &\n    \"SVmap_file_option#\" &"}, {"sha": "3a9133e732ece723a8d851bb47a66b9ec39733a0", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61bcf5ca33e9ea22001c1283a9ea0df5bcae2ecc/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61bcf5ca33e9ea22001c1283a9ea0df5bcae2ecc/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=61bcf5ca33e9ea22001c1283a9ea0df5bcae2ecc", "patch": "@@ -1075,7 +1075,9 @@ package Snames is\n    Name_Include_Path_File                : constant Name_Id := N + $;\n    Name_Inherit_Source_Path              : constant Name_Id := N + $;\n    Name_Languages                        : constant Name_Id := N + $;\n+   Name_Leading_Library_Options          : constant Name_Id := N + $;\n    Name_Leading_Required_Switches        : constant Name_Id := N + $;\n+   Name_Leading_Switches                 : constant Name_Id := N + $;\n    Name_Library                          : constant Name_Id := N + $;\n    Name_Library_Ali_Dir                  : constant Name_Id := N + $;\n    Name_Library_Auto_Init                : constant Name_Id := N + $;"}]}