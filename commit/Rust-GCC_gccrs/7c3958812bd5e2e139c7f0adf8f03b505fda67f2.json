{"sha": "7c3958812bd5e2e139c7f0adf8f03b505fda67f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MzOTU4ODEyYmQ1ZTJlMTM5YzdmMGFkZjhmMDNiNTA1ZmRhNjdmMg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-09-30T16:21:49Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-09-30T16:21:49Z"}, "message": "Hide regs_invalidated_by_call etc.\n\nThe previous patches removed all target-independent uses of\nregs_invalidated_by_call, call_used_or_fixed_regs and\ncall_used_or_fixed_reg_p.  This patch therefore restricts\nthem to target-specific code (and reginfo.c, which sets them up).\n\n2019-09-30  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* hard-reg-set.h (regs_invalidated_by_call): Only define if\n\tIN_TARGET_CODE.\n\t(call_used_or_fixed_regs): Likewise.\n\t(call_used_or_fixed_reg_p): Likewise.\n\t* reginfo.c (regs_invalidated_by_call): New macro.\n\nFrom-SVN: r276338", "tree": {"sha": "ebf2dbfac2d083425c627ba78e9bd582d4c515b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebf2dbfac2d083425c627ba78e9bd582d4c515b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c3958812bd5e2e139c7f0adf8f03b505fda67f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c3958812bd5e2e139c7f0adf8f03b505fda67f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c3958812bd5e2e139c7f0adf8f03b505fda67f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c3958812bd5e2e139c7f0adf8f03b505fda67f2/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b21a62b6246d3344cf74c79965523e4f59db7459", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b21a62b6246d3344cf74c79965523e4f59db7459", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b21a62b6246d3344cf74c79965523e4f59db7459"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "00a1731f5eacbc4db2696d268371205599f72dde", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c3958812bd5e2e139c7f0adf8f03b505fda67f2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c3958812bd5e2e139c7f0adf8f03b505fda67f2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c3958812bd5e2e139c7f0adf8f03b505fda67f2", "patch": "@@ -1,3 +1,11 @@\n+2019-09-30  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* hard-reg-set.h (regs_invalidated_by_call): Only define if\n+\tIN_TARGET_CODE.\n+\t(call_used_or_fixed_regs): Likewise.\n+\t(call_used_or_fixed_reg_p): Likewise.\n+\t* reginfo.c (regs_invalidated_by_call): New macro.\n+\n 2019-09-30  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* shrink-wrap.c: Include function-abi.h."}, {"sha": "6e7ceabf05184a87fd8e73b892515cfac32cca71", "filename": "gcc/hard-reg-set.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c3958812bd5e2e139c7f0adf8f03b505fda67f2/gcc%2Fhard-reg-set.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c3958812bd5e2e139c7f0adf8f03b505fda67f2/gcc%2Fhard-reg-set.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhard-reg-set.h?ref=7c3958812bd5e2e139c7f0adf8f03b505fda67f2", "patch": "@@ -477,10 +477,12 @@ extern struct target_hard_regs *this_target_hard_regs;\n #endif\n #define savable_regs \\\n   (this_target_hard_regs->x_savable_regs)\n+#ifdef IN_TARGET_CODE\n #define regs_invalidated_by_call \\\n   (this_target_hard_regs->x_regs_invalidated_by_call)\n #define call_used_or_fixed_regs \\\n   (regs_invalidated_by_call | fixed_reg_set)\n+#endif\n #define reg_alloc_order \\\n   (this_target_hard_regs->x_reg_alloc_order)\n #define inv_reg_alloc_order \\\n@@ -509,6 +511,7 @@ extern const char * reg_class_names[];\n #define REG_CAN_CHANGE_MODE_P(REGN, FROM, TO)                          \\\n   (targetm.can_change_mode_class (FROM, TO, REGNO_REG_CLASS (REGN)))\n \n+#ifdef IN_TARGET_CODE\n /* Return true if register REGNO is either fixed or call-used\n    (aka call-clobbered).  */\n \n@@ -517,5 +520,6 @@ call_used_or_fixed_reg_p (unsigned int regno)\n {\n   return fixed_regs[regno] || this_target_hard_regs->x_call_used_regs[regno];\n }\n+#endif\n \n #endif /* ! GCC_HARD_REG_SET_H */"}, {"sha": "791c7a0aefbfd79452ca908b08c8dde29c14939b", "filename": "gcc/reginfo.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c3958812bd5e2e139c7f0adf8f03b505fda67f2/gcc%2Freginfo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c3958812bd5e2e139c7f0adf8f03b505fda67f2/gcc%2Freginfo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freginfo.c?ref=7c3958812bd5e2e139c7f0adf8f03b505fda67f2", "patch": "@@ -69,6 +69,8 @@ struct target_regs *this_target_regs = &default_target_regs;\n \n #define call_used_regs \\\n   (this_target_hard_regs->x_call_used_regs)\n+#define regs_invalidated_by_call \\\n+  (this_target_hard_regs->x_regs_invalidated_by_call)\n \n /* Data for initializing fixed_regs.  */\n static const char initial_fixed_regs[] = FIXED_REGISTERS;"}]}