{"sha": "e1e953d9d5c28b4153a9229f629c644f8c228fbf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFlOTUzZDlkNWMyOGI0MTUzYTkyMjlmNjI5YzY0NGY4YzIyOGZiZg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2012-12-12T13:40:15Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2012-12-12T13:40:15Z"}, "message": "Use libstdc++-raw-cxx.m4 in libjava\n\nconfig/\n\n\t* libstdc++-raw-cxx.m4 (GCC_LIBSTDCXX_RAW_CXX_FLAGS): Also\n\tAC_SUBST LIBSTDCXX_RAW_CXX_LDFLAGS.\n\nlibjava/\n\n\t* Makefile.am (lib_gnu_awt_xlib_la_CPPFLAGS): Use\n\t$(LIBSTDCXX_RAW_CXX_CXXLAGS).\n\t(lib_gnu_awt_xlib_la_LDFLAGS): Use $(LIBSTDCXX_RAW_CXX_LDLAGS).\n\t* configure.ac (GCC_LIBSTDCXX_RAW_CXX_FLAGS): New.\n\t* aclocal.m4: Regenerated.\n\t* Makefile.in:Likewise.\n\t* configure: Likewise.\n\nlibsanitizer/\n\n\t* asan/Makefile.am (libasan_la_LIBADD): Use $(LIBSTDCXX_RAW_CXX_LDLAGS).\n\t* tsan/Makefile.am (libtsan_la_LIBADD): Likewise.\n\t* Makefile.in: Regenerated.\n\t* configure: Likewise.\n\t* asan/Makefile.in: Likewise.\n\t* interception/Makefile.in: Likewise.\n\t* sanitizer_common/Makefile.in: Likewise.\n\t* tsan/Makefile.in: Likewise.\n\nFrom-SVN: r194448", "tree": {"sha": "29faca1a1f882ad2583abc1e137b8ac20698e8b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29faca1a1f882ad2583abc1e137b8ac20698e8b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1e953d9d5c28b4153a9229f629c644f8c228fbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1e953d9d5c28b4153a9229f629c644f8c228fbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1e953d9d5c28b4153a9229f629c644f8c228fbf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1e953d9d5c28b4153a9229f629c644f8c228fbf/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a62d3903d92c45b7d20a0f015890552c67f9c228", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a62d3903d92c45b7d20a0f015890552c67f9c228", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a62d3903d92c45b7d20a0f015890552c67f9c228"}], "stats": {"total": 113, "additions": 85, "deletions": 28}, "files": [{"sha": "d77edc07e267eae4eb402b64ebd038b148a7b447", "filename": "config/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e953d9d5c28b4153a9229f629c644f8c228fbf/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e953d9d5c28b4153a9229f629c644f8c228fbf/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=e1e953d9d5c28b4153a9229f629c644f8c228fbf", "patch": "@@ -1,3 +1,8 @@\n+2012-12-12  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* libstdc++-raw-cxx.m4 (GCC_LIBSTDCXX_RAW_CXX_FLAGS): Also\n+\tAC_SUBST LIBSTDCXX_RAW_CXX_LDFLAGS.\n+\n 2012-12-11  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR sanitizer/55533"}, {"sha": "8052c2fa830e428f7dce81441feb1fb8f03f7b9b", "filename": "config/libstdc++-raw-cxx.m4", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e953d9d5c28b4153a9229f629c644f8c228fbf/config%2Flibstdc%2B%2B-raw-cxx.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e953d9d5c28b4153a9229f629c644f8c228fbf/config%2Flibstdc%2B%2B-raw-cxx.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Flibstdc%2B%2B-raw-cxx.m4?ref=e1e953d9d5c28b4153a9229f629c644f8c228fbf", "patch": "@@ -14,13 +14,17 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-# Define compiler flags, LIBSTDCXX_RAW_CXX_CXXFLAGS, for libstdc++-v3\n-# header files to compile libraries in C++ with raw_cxx=true.\n+# Define flags, LIBSTDCXX_RAW_CXX_CXXFLAGS and # LIBSTDCXX_RAW_CXX_LDFLAGS,\n+# for libstdc++-v3 header files to compile and link libraries in C++ with\n+# raw_cxx=true.\n AC_DEFUN([GCC_LIBSTDCXX_RAW_CXX_FLAGS], [\n   AC_REQUIRE([ACX_NONCANONICAL_TARGET])\n   LIBSTDCXX_RAW_CXX_CXXFLAGS=\"\\\n     -I\\$(top_builddir)/../libstdc++-v3/include \\\n     -I\\$(top_builddir)/../libstdc++-v3/include/\\$(target_noncanonical) \\\n     -I\\$(top_srcdir)/../libstdc++-v3/libsupc++\"\n+  LIBSTDCXX_RAW_CXX_LDFLAGS=\"\\\n+    -I\\$(top_builddir)/../libstdc++-v3/src/libstdc++.la\"\n   AC_SUBST(LIBSTDCXX_RAW_CXX_CXXFLAGS)\n+  AC_SUBST(LIBSTDCXX_RAW_CXX_LDFLAGS)\n ])"}, {"sha": "fa62d1ec50fd002159afba6df45e79dbddc42e04", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=e1e953d9d5c28b4153a9229f629c644f8c228fbf", "patch": "@@ -1,3 +1,13 @@\n+2012-12-12  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* Makefile.am (lib_gnu_awt_xlib_la_CPPFLAGS): Use\n+\t$(LIBSTDCXX_RAW_CXX_CXXLAGS).\n+\t(lib_gnu_awt_xlib_la_LDFLAGS): Use $(LIBSTDCXX_RAW_CXX_LDLAGS).\n+\t* configure.ac (GCC_LIBSTDCXX_RAW_CXX_FLAGS): New.\n+\t* aclocal.m4: Regenerated.\n+\t* Makefile.in:Likewise.\n+\t* configure: Likewise.\n+\n 2012-11-19  Matthias Klose  <doko@ubuntu.com>\n \n \t* libtool-version: Bump soversion."}, {"sha": "c6c84e4fc6a8f35e44941d9c11064e20b24badc9", "filename": "libjava/Makefile.am", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=e1e953d9d5c28b4153a9229f629c644f8c228fbf", "patch": "@@ -590,14 +590,11 @@ lib_gnu_awt_xlib_la_DEPENDENCIES = libgcj-$(gcc_version).jar \\\n if BUILD_SUBLIBS\n lib_gnu_awt_xlib_la_DEPENDENCIES += libgcj-noncore.la\n endif\n-## We require libstdc++-v3 to be in the same build tree.\n lib_gnu_awt_xlib_la_CPPFLAGS = \\\n \t$(AM_CPPFLAGS) \\\n-\t-I../libstdc++-v3/include \\\n-\t-I../libstdc++-v3/include/$(target_noncanonical) \\\n-\t-I$(srcdir)/../libstdc++-v3/libsupc++\n+\t$(LIBSTDCXX_RAW_CXX_CXXFLAGS)\n ## The mysterious backslash in the grep pattern is consumed by make.\n-lib_gnu_awt_xlib_la_LDFLAGS = ../libstdc++-v3/src/libstdc++.la \\\n+lib_gnu_awt_xlib_la_LDFLAGS = $(LIBSTDCXX_RAW_CXX_LDLAGS) \\\n \t@X_PRE_LIBS@ @X_LIBS@ -lX11 @X_EXTRA_LIBS@ \\\n         -rpath $(toolexeclibdir) $(LIBJAVA_LDFLAGS_NOUNDEF) \\\n         -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LIBGCJ_LD_SYMBOLIC)"}, {"sha": "3544abe50d2e1fcf7b98976bbbca6ae7d89ba1b9", "filename": "libjava/Makefile.in", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=e1e953d9d5c28b4153a9229f629c644f8c228fbf", "patch": "@@ -99,6 +99,7 @@ am__aclocal_m4_deps = $(top_srcdir)/libltdl/acinclude.m4 \\\n \t$(top_srcdir)/../config/lib-ld.m4 \\\n \t$(top_srcdir)/../config/lib-link.m4 \\\n \t$(top_srcdir)/../config/lib-prefix.m4 \\\n+\t$(top_srcdir)/../config/libstdc++-raw-cxx.m4 \\\n \t$(top_srcdir)/../config/lthostflags.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n@@ -619,6 +620,8 @@ LIBMATHSPEC = @LIBMATHSPEC@\n LIBOBJS = @LIBOBJS@\n LIBS = @LIBS@\n LIBSTDCXXSPEC = @LIBSTDCXXSPEC@\n+LIBSTDCXX_RAW_CXX_CXXFLAGS = @LIBSTDCXX_RAW_CXX_CXXFLAGS@\n+LIBSTDCXX_RAW_CXX_LDFLAGS = @LIBSTDCXX_RAW_CXX_LDFLAGS@\n LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@\n@@ -1133,11 +1136,9 @@ lib_gnu_awt_xlib_la_DEPENDENCIES = libgcj-$(gcc_version).jar libgcj.la \\\n \t$(lib_gnu_awt_xlib_la_LIBADD) $(am__append_21)\n lib_gnu_awt_xlib_la_CPPFLAGS = \\\n \t$(AM_CPPFLAGS) \\\n-\t-I../libstdc++-v3/include \\\n-\t-I../libstdc++-v3/include/$(target_noncanonical) \\\n-\t-I$(srcdir)/../libstdc++-v3/libsupc++\n+\t$(LIBSTDCXX_RAW_CXX_CXXFLAGS)\n \n-lib_gnu_awt_xlib_la_LDFLAGS = ../libstdc++-v3/src/libstdc++.la \\\n+lib_gnu_awt_xlib_la_LDFLAGS = $(LIBSTDCXX_RAW_CXX_LDLAGS) \\\n \t@X_PRE_LIBS@ @X_LIBS@ -lX11 @X_EXTRA_LIBS@ \\\n         -rpath $(toolexeclibdir) $(LIBJAVA_LDFLAGS_NOUNDEF) \\\n         -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LIBGCJ_LD_SYMBOLIC)"}, {"sha": "ec1285941dcb3af438427ab6a17514090baba376", "filename": "libjava/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libjava%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libjava%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Faclocal.m4?ref=e1e953d9d5c28b4153a9229f629c644f8c228fbf", "patch": "@@ -1034,6 +1034,7 @@ m4_include([../config/lead-dot.m4])\n m4_include([../config/lib-ld.m4])\n m4_include([../config/lib-link.m4])\n m4_include([../config/lib-prefix.m4])\n+m4_include([../config/libstdc++-raw-cxx.m4])\n m4_include([../config/lthostflags.m4])\n m4_include([../config/multi.m4])\n m4_include([../config/no-executables.m4])"}, {"sha": "44acaeb8f694c5707a7f94b1519aa544b443eb21", "filename": "libjava/configure", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=e1e953d9d5c28b4153a9229f629c644f8c228fbf", "patch": "@@ -856,6 +856,8 @@ CREATE_GJDOC_TRUE\n ANTLR_JAR\n mkinstalldirs\n LN_S\n+LIBSTDCXX_RAW_CXX_LDFLAGS\n+LIBSTDCXX_RAW_CXX_CXXFLAGS\n target_noncanonical\n target_os\n target_vendor\n@@ -3195,6 +3197,20 @@ esac\n \n \n \n+\n+\n+\n+\n+  LIBSTDCXX_RAW_CXX_CXXFLAGS=\"\\\n+    -I\\$(top_builddir)/../libstdc++-v3/include \\\n+    -I\\$(top_builddir)/../libstdc++-v3/include/\\$(target_noncanonical) \\\n+    -I\\$(top_srcdir)/../libstdc++-v3/libsupc++\"\n+  LIBSTDCXX_RAW_CXX_LDFLAGS=\"\\\n+    -I\\$(top_builddir)/../libstdc++-v3/src/libstdc++.la\"\n+\n+\n+\n+\n # This works around the fact that libtool configuration may change LD\n # for this particular configuration, but some shells, instead of\n # keeping the changes in LD private, export them just because LD is\n@@ -13366,7 +13382,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 13369 \"configure\"\n+#line 13385 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13472,7 +13488,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 13475 \"configure\"\n+#line 13491 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -19467,7 +19483,7 @@ if test \"${enable_sjlj_exceptions+set}\" = set; then :\n   enableval=$enable_sjlj_exceptions; :\n else\n   cat > conftest.$ac_ext << EOF\n-#line 19470 \"configure\"\n+#line 19486 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()"}, {"sha": "ba6b3632b92e9813c4c9b82084afd2c4f083c836", "filename": "libjava/configure.ac", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libjava%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libjava%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.ac?ref=e1e953d9d5c28b4153a9229f629c644f8c228fbf", "patch": "@@ -24,6 +24,8 @@ _GCC_TOPLEV_NONCANONICAL_TARGET\n \n AC_SUBST(target_noncanonical)\n \n+GCC_LIBSTDCXX_RAW_CXX_FLAGS\n+\n # This works around the fact that libtool configuration may change LD\n # for this particular configuration, but some shells, instead of\n # keeping the changes in LD private, export them just because LD is"}, {"sha": "aa26e3eeaa3f32b4ace89152d69fe39b4190b065", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=e1e953d9d5c28b4153a9229f629c644f8c228fbf", "patch": "@@ -1,3 +1,14 @@\n+2012-12-12  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* asan/Makefile.am (libasan_la_LIBADD): Use $(LIBSTDCXX_RAW_CXX_LDLAGS).\n+\t* tsan/Makefile.am (libtsan_la_LIBADD): Likewise.\n+\t* Makefile.in: Regenerated.\n+\t* configure: Likewise.\n+\t* asan/Makefile.in: Likewise.\n+\t* interception/Makefile.in: Likewise.\n+\t* sanitizer_common/Makefile.in: Likewise.\n+\t* tsan/Makefile.in: Likewise.\n+\n 2012-12-12  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* Makefile.am (AM_MAKEFLAGS): Removed."}, {"sha": "42cde43cfaab0c14bae1c8030ff08c2eebe47673", "filename": "libsanitizer/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libsanitizer%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libsanitizer%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FMakefile.in?ref=e1e953d9d5c28b4153a9229f629c644f8c228fbf", "patch": "@@ -158,6 +158,7 @@ LDFLAGS = @LDFLAGS@\n LIBOBJS = @LIBOBJS@\n LIBS = @LIBS@\n LIBSTDCXX_RAW_CXX_CXXFLAGS = @LIBSTDCXX_RAW_CXX_CXXFLAGS@\n+LIBSTDCXX_RAW_CXX_LDFLAGS = @LIBSTDCXX_RAW_CXX_LDFLAGS@\n LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@"}, {"sha": "fcd145ccb311450b738aab396151e2bb137f53ab", "filename": "libsanitizer/asan/Makefile.am", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libsanitizer%2Fasan%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libsanitizer%2Fasan%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fasan%2FMakefile.am?ref=e1e953d9d5c28b4153a9229f629c644f8c228fbf", "patch": "@@ -36,10 +36,11 @@ asan_files = \\\n libasan_la_SOURCES = $(asan_files)\n if USING_MAC_INTERPOSE\n libasan_la_SOURCES += dynamic/asan_interceptors_dynamic.cc\n-libasan_la_LIBADD = $(top_builddir)/sanitizer_common/libsanitizer_common.la $(top_builddir)/../libstdc++-v3/src/libstdc++.la\n+libasan_la_LIBADD = $(top_builddir)/sanitizer_common/libsanitizer_common.la\n else\n-libasan_la_LIBADD = $(top_builddir)/sanitizer_common/libsanitizer_common.la $(top_builddir)/interception/libinterception.la $(top_builddir)/../libstdc++-v3/src/libstdc++.la\n+libasan_la_LIBADD = $(top_builddir)/sanitizer_common/libsanitizer_common.la $(top_builddir)/interception/libinterception.la\n endif\n+libasan_la_LIBADD += $(LIBSTDCXX_RAW_CXX_LDLAGS)\n \n libasan_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` -lpthread -ldl\n "}, {"sha": "9a397bc3f6723b33a59642f8a7b43f436618691e", "filename": "libsanitizer/asan/Makefile.in", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libsanitizer%2Fasan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libsanitizer%2Fasan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fasan%2FMakefile.in?ref=e1e953d9d5c28b4153a9229f629c644f8c228fbf", "patch": "@@ -79,10 +79,8 @@ am__base_list = \\\n am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\"\n LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n @USING_MAC_INTERPOSE_FALSE@libasan_la_DEPENDENCIES = $(top_builddir)/sanitizer_common/libsanitizer_common.la \\\n-@USING_MAC_INTERPOSE_FALSE@\t$(top_builddir)/interception/libinterception.la \\\n-@USING_MAC_INTERPOSE_FALSE@\t$(top_builddir)/../libstdc++-v3/src/libstdc++.la\n-@USING_MAC_INTERPOSE_TRUE@libasan_la_DEPENDENCIES = $(top_builddir)/sanitizer_common/libsanitizer_common.la \\\n-@USING_MAC_INTERPOSE_TRUE@\t$(top_builddir)/../libstdc++-v3/src/libstdc++.la\n+@USING_MAC_INTERPOSE_FALSE@\t$(top_builddir)/interception/libinterception.la\n+@USING_MAC_INTERPOSE_TRUE@libasan_la_DEPENDENCIES = $(top_builddir)/sanitizer_common/libsanitizer_common.la\n am__libasan_la_SOURCES_DIST = asan_allocator.cc asan_interceptors.cc \\\n \tasan_mac.cc asan_malloc_mac.cc asan_new_delete.cc \\\n \tasan_posix.cc asan_rtl.cc asan_stats.cc \\\n@@ -165,6 +163,7 @@ LDFLAGS = @LDFLAGS@\n LIBOBJS = @LIBOBJS@\n LIBS = @LIBS@\n LIBSTDCXX_RAW_CXX_CXXFLAGS = @LIBSTDCXX_RAW_CXX_CXXFLAGS@\n+LIBSTDCXX_RAW_CXX_LDFLAGS = @LIBSTDCXX_RAW_CXX_LDFLAGS@\n LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@\n@@ -286,8 +285,11 @@ asan_files = \\\n \tasan_win.cc\n \n libasan_la_SOURCES = $(asan_files) $(am__append_2)\n-@USING_MAC_INTERPOSE_FALSE@libasan_la_LIBADD = $(top_builddir)/sanitizer_common/libsanitizer_common.la $(top_builddir)/interception/libinterception.la $(top_builddir)/../libstdc++-v3/src/libstdc++.la\n-@USING_MAC_INTERPOSE_TRUE@libasan_la_LIBADD = $(top_builddir)/sanitizer_common/libsanitizer_common.la $(top_builddir)/../libstdc++-v3/src/libstdc++.la\n+@USING_MAC_INTERPOSE_FALSE@libasan_la_LIBADD = $(top_builddir)/sanitizer_common/libsanitizer_common.la \\\n+@USING_MAC_INTERPOSE_FALSE@\t$(top_builddir)/interception/libinterception.la \\\n+@USING_MAC_INTERPOSE_FALSE@\t$(LIBSTDCXX_RAW_CXX_LDLAGS)\n+@USING_MAC_INTERPOSE_TRUE@libasan_la_LIBADD = $(top_builddir)/sanitizer_common/libsanitizer_common.la \\\n+@USING_MAC_INTERPOSE_TRUE@\t$(LIBSTDCXX_RAW_CXX_LDLAGS)\n libasan_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` -lpthread -ldl\n all: all-am\n "}, {"sha": "cd720778324ef19ed32c7f3c25d8146153bfd253", "filename": "libsanitizer/configure", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libsanitizer%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libsanitizer%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure?ref=e1e953d9d5c28b4153a9229f629c644f8c228fbf", "patch": "@@ -686,6 +686,7 @@ am__isrc\n INSTALL_DATA\n INSTALL_SCRIPT\n INSTALL_PROGRAM\n+LIBSTDCXX_RAW_CXX_LDFLAGS\n LIBSTDCXX_RAW_CXX_CXXFLAGS\n target_noncanonical\n target_os\n@@ -2593,6 +2594,9 @@ esac\n     -I\\$(top_builddir)/../libstdc++-v3/include \\\n     -I\\$(top_builddir)/../libstdc++-v3/include/\\$(target_noncanonical) \\\n     -I\\$(top_srcdir)/../libstdc++-v3/libsupc++\"\n+  LIBSTDCXX_RAW_CXX_LDFLAGS=\"\\\n+    -I\\$(top_builddir)/../libstdc++-v3/src/libstdc++.la\"\n+\n \n \n \n@@ -11107,7 +11111,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11110 \"configure\"\n+#line 11114 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11213,7 +11217,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11216 \"configure\"\n+#line 11220 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "d1c4dcb10dfde4d682c8cc73df1c259603219ee1", "filename": "libsanitizer/interception/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libsanitizer%2Finterception%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libsanitizer%2Finterception%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Finterception%2FMakefile.in?ref=e1e953d9d5c28b4153a9229f629c644f8c228fbf", "patch": "@@ -118,6 +118,7 @@ LDFLAGS = @LDFLAGS@\n LIBOBJS = @LIBOBJS@\n LIBS = @LIBS@\n LIBSTDCXX_RAW_CXX_CXXFLAGS = @LIBSTDCXX_RAW_CXX_CXXFLAGS@\n+LIBSTDCXX_RAW_CXX_LDFLAGS = @LIBSTDCXX_RAW_CXX_LDFLAGS@\n LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@"}, {"sha": "8ef3d9a63f1e945ba3e3dc76fd360befcbd17468", "filename": "libsanitizer/sanitizer_common/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libsanitizer%2Fsanitizer_common%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libsanitizer%2Fsanitizer_common%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2FMakefile.in?ref=e1e953d9d5c28b4153a9229f629c644f8c228fbf", "patch": "@@ -123,6 +123,7 @@ LDFLAGS = @LDFLAGS@\n LIBOBJS = @LIBOBJS@\n LIBS = @LIBS@\n LIBSTDCXX_RAW_CXX_CXXFLAGS = @LIBSTDCXX_RAW_CXX_CXXFLAGS@\n+LIBSTDCXX_RAW_CXX_LDFLAGS = @LIBSTDCXX_RAW_CXX_LDFLAGS@\n LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@"}, {"sha": "d7719ae9d8fe9c1d620e6fd4f27b4f5fe5891b07", "filename": "libsanitizer/tsan/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libsanitizer%2Ftsan%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libsanitizer%2Ftsan%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Ftsan%2FMakefile.am?ref=e1e953d9d5c28b4153a9229f629c644f8c228fbf", "patch": "@@ -34,7 +34,7 @@ tsan_files = \\\n         tsan_symbolize_addr2line_linux.cc\n \n libtsan_la_SOURCES = $(tsan_files) \n-libtsan_la_LIBADD = $(top_builddir)/sanitizer_common/libsanitizer_common.la $(top_builddir)/interception/libinterception.la $(top_builddir)/../libstdc++-v3/src/libstdc++.la\n+libtsan_la_LIBADD = $(top_builddir)/sanitizer_common/libsanitizer_common.la $(top_builddir)/interception/libinterception.la $(LIBSTDCXX_RAW_CXX_LDLAGS)\n libtsan_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` -lpthread -ldl\n \n ## ################################################################"}, {"sha": "8d3f30e40cd5154851d575bbaf628bbb336c11ee", "filename": "libsanitizer/tsan/Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libsanitizer%2Ftsan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e953d9d5c28b4153a9229f629c644f8c228fbf/libsanitizer%2Ftsan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Ftsan%2FMakefile.in?ref=e1e953d9d5c28b4153a9229f629c644f8c228fbf", "patch": "@@ -78,8 +78,7 @@ am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\"\n LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n libtsan_la_DEPENDENCIES =  \\\n \t$(top_builddir)/sanitizer_common/libsanitizer_common.la \\\n-\t$(top_builddir)/interception/libinterception.la \\\n-\t$(top_builddir)/../libstdc++-v3/src/libstdc++.la\n+\t$(top_builddir)/interception/libinterception.la\n am__objects_1 = tsan_clock.lo tsan_interface_atomic.lo tsan_mutex.lo \\\n \ttsan_report.lo tsan_rtl_thread.lo tsan_symbolize.lo \\\n \ttsan_flags.lo tsan_interface.lo tsan_platform_linux.lo \\\n@@ -151,6 +150,7 @@ LDFLAGS = @LDFLAGS@\n LIBOBJS = @LIBOBJS@\n LIBS = @LIBS@\n LIBSTDCXX_RAW_CXX_CXXFLAGS = @LIBSTDCXX_RAW_CXX_CXXFLAGS@\n+LIBSTDCXX_RAW_CXX_LDFLAGS = @LIBSTDCXX_RAW_CXX_LDFLAGS@\n LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@\n@@ -274,7 +274,7 @@ tsan_files = \\\n         tsan_symbolize_addr2line_linux.cc\n \n libtsan_la_SOURCES = $(tsan_files) \n-libtsan_la_LIBADD = $(top_builddir)/sanitizer_common/libsanitizer_common.la $(top_builddir)/interception/libinterception.la $(top_builddir)/../libstdc++-v3/src/libstdc++.la\n+libtsan_la_LIBADD = $(top_builddir)/sanitizer_common/libsanitizer_common.la $(top_builddir)/interception/libinterception.la $(LIBSTDCXX_RAW_CXX_LDLAGS)\n libtsan_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` -lpthread -ldl\n all: all-am\n "}]}