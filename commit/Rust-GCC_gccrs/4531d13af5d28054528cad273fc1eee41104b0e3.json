{"sha": "4531d13af5d28054528cad273fc1eee41104b0e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDUzMWQxM2FmNWQyODA1NDUyOGNhZDI3M2ZjMWVlZTQxMTA0YjBlMw==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2012-08-09T10:33:48Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2012-08-09T10:33:48Z"}, "message": "Use accessor functions to manipulate xmlOutputBuffer\n\nThis is a fix to prepare the xmlj_io.c file of gnu classpath to a coming\nAPI change in libxml2.\n\nBasically, we were previously accessing fields inside the\nxmlOutputBuffer struct of libxml2.  In a coming version of libxml2,\nthat won't be possible anymore.  Client code will have to use accessor\nfunctions instead.  For the gory details, there is an interestin note\nof Daniel Veillard (author of libxml2) at\nhttps://mail.gnome.org/archives/desktop-devel-list/2012-August/msg00007.html.\n\nThis patch defines too accessor macros that, depending on the version\nof libxml2 we are using will either access the fields of\nxmlOutputBuffer directly, or use the new accessor function.\n\nTested on x86_64-unknown-linux-gnu against trunk.\n\nlibjava/classpath/\n\n\t* native/jni/xmlj/xmlj_io.c (GET_XML_OUTPUT_BUFFER_CONTENT)\n\t(GET_XML_OUTPUT_BUFFER_SIZE): New macros.\n\t(xmljOutputWriteCallback): Use them.\n\nFrom-SVN: r190249", "tree": {"sha": "5d2a00043b334a915e04702ccbf4a4c3e2b9150a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d2a00043b334a915e04702ccbf4a4c3e2b9150a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4531d13af5d28054528cad273fc1eee41104b0e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4531d13af5d28054528cad273fc1eee41104b0e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4531d13af5d28054528cad273fc1eee41104b0e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4531d13af5d28054528cad273fc1eee41104b0e3/comments", "author": null, "committer": null, "parents": [{"sha": "5100dfce9d75744aaa765884c07b7652a5fac3ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5100dfce9d75744aaa765884c07b7652a5fac3ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5100dfce9d75744aaa765884c07b7652a5fac3ab"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "cd6b8aa9d5da0a9de7eb1cd1ffcf78e68e95011d", "filename": "libjava/classpath/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4531d13af5d28054528cad273fc1eee41104b0e3/libjava%2Fclasspath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4531d13af5d28054528cad273fc1eee41104b0e3/libjava%2Fclasspath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog?ref=4531d13af5d28054528cad273fc1eee41104b0e3", "patch": "@@ -1,3 +1,10 @@\n+2012-08-09  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tUse accessor functions to manipulate xmlOutputBuffer\n+\t* native/jni/xmlj/xmlj_io.c (GET_XML_OUTPUT_BUFFER_CONTENT)\n+    \t(GET_XML_OUTPUT_BUFFER_SIZE): New macros.\n+    \t(xmljOutputWriteCallback): Use them.\n+\n 2012-03-08  Andrew John Hughes  <ahughes@redhat.com>\n \n \t* NEWS: Set correct release date."}, {"sha": "a55e48df8111c66606e2ff53d69ca111f84b94b6", "filename": "libjava/classpath/native/jni/xmlj/xmlj_io.c", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4531d13af5d28054528cad273fc1eee41104b0e3/libjava%2Fclasspath%2Fnative%2Fjni%2Fxmlj%2Fxmlj_io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4531d13af5d28054528cad273fc1eee41104b0e3/libjava%2Fclasspath%2Fnative%2Fjni%2Fxmlj%2Fxmlj_io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fxmlj%2Fxmlj_io.c?ref=4531d13af5d28054528cad273fc1eee41104b0e3", "patch": "@@ -102,6 +102,19 @@ xmljFreeOutputStreamContext (OutputStreamContext * outContext);\n xmlCharEncoding\n xmljDetectCharEncoding (JNIEnv * env, jbyteArray buffer);\n \n+\n+#ifdef LIBXML2_NEW_BUFFER\n+#define GET_XML_OUTPUT_BUFFER_CONTENT(buf) (gchar *) \\\n+  (char *) xmlOutputBufferGetContent(buf)\n+#define GET_XML_OUTPUT_BUFFER_SIZE(buf) \\\n+  xmlOutputBufferGetSize(buf)\n+#else\n+#define GET_XML_OUTPUT_BUFFER_CONTENT(buf) \\\n+ (buf)->buffer->content\n+#define GET_XML_OUTPUT_BUFFER_SIZE(buf) \\\n+  (buf)->buffer->use\n+#endif\n+\n int\n xmljOutputWriteCallback (void *context, const char *buffer, int len)\n {\n@@ -752,9 +765,10 @@ xmljLoadExternalEntity (const char *URL, const char *ID,\n       inputStream->directory = NULL;\n       inputStream->buf = inputBuffer;\n \n-      inputStream->base = inputStream->buf->buffer->content;\n-      inputStream->cur = inputStream->buf->buffer->content;\n-      inputStream->end = &inputStream->base[inputStream->buf->buffer->use];\n+      inputStream->base = GET_XML_OUTPUT_BUFFER_CONTENT (inputStream->buf);\n+      inputStream->cur = GET_XML_OUTPUT_BUFFER_CONTENT (inputStream->buf);\n+      inputStream->end =\n+      &inputStream->base[GET_XML_OUTPUT_BUFFER_SIZE (inputStream->buf)];\n       if ((ctxt->directory == NULL) && (inputStream->directory != NULL))\n         ctxt->directory =\n           (char *) xmlStrdup ((const xmlChar *) inputStream->directory);"}]}