{"sha": "5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWEzZWQ5N2FkYjhkMjE2ZmE0YTllMDhkYmExZTM2NTY4YzhkZjU3Zg==", "commit": {"author": {"name": "Dorit Naishlos", "email": "dorit@il.ibm.com", "date": "2005-01-09T17:30:24Z"}, "committer": {"name": "Dorit Nuzman", "email": "dorit@gcc.gnu.org", "date": "2005-01-09T17:30:24Z"}, "message": "tree-vectorizer.c (vect_enhance_data_refs_alignment): Add dump prints.\n\n        * tree-vectorizer.c (vect_enhance_data_refs_alignment): Add dump prints.\n        (vect_analyze_data_refs_alignment): Add dump prints.\n\n        * gcc.dg/vect/pr18400.c: Add checks for alignment prints.\n        * gcc.dg/vect/pr18425.c: Add checks for alignment prints.\n        * gcc.dg/vect/pr18536.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-1.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-2.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-3.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-4.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-5.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-6.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-7.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-13.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-17.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-18.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-19.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-20.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-21.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-22.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-23.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-24.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-25.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-26.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-27.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-28.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-29.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-31.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-32.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-33.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-34.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-35.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-36.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-37.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-40.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-41.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-42.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-43.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-44.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-46.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-47.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-48.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-50.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-52.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-53.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-56.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-58.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-60.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-62.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-64.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-65.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-66.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-67.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-68.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-69.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-72.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-73.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-74.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-75.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-76.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-77.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-78.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-80.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-86.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-87.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-88.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-89.c: Add checks for alignment prints.\n        * gcc.dg/vect/vect-all.c: Add checks for alignment prints.\n\n        * gcc.dg/vect/vect-1.c: Fix spelling.\n        * gcc.dg/vect/vect-10.c: Fix spelling.\n        * gcc.dg/vect/vect-11.c: Fix spelling.\n        * gcc.dg/vect/vect-12.c: Fix spelling.\n        * gcc.dg/vect/vect-14.c: Fix spelling.\n        * gcc.dg/vect/vect-15.c: Fix spelling.\n        * gcc.dg/vect/vect-16.c: Fix spelling.\n        * gcc.dg/vect/vect-46.c: Remove obsolete comment.\n        * gcc.dg/vect/vect-64.c: Fix comments.\n        * gcc.dg/vect/vect-none.c: Remove vectorizable loop.\n\nCo-Authored-By: Ira Rosen <irar@il.ibm.com>\n\nFrom-SVN: r93114", "tree": {"sha": "b0098c4321d59793748229ca807d3172b23fcd0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0098c4321d59793748229ca807d3172b23fcd0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/comments", "author": null, "committer": null, "parents": [{"sha": "db5dc63d6283a9c66aab3f49530e4b3c5407d5cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db5dc63d6283a9c66aab3f49530e4b3c5407d5cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db5dc63d6283a9c66aab3f49530e4b3c5407d5cf"}], "stats": {"total": 362, "additions": 326, "deletions": 36}, "files": [{"sha": "da2f470a9cd44d99820d0bf8786eaf1689c7da56", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -1,3 +1,8 @@\n+2005-01-09  Dorit Naishlos  <dorit@il.ibm.com>\n+\n+\t* tree-vectorizer.c (vect_enhance_data_refs_alignment): Add dump prints.\n+\t(vect_analyze_data_refs_alignment): Add dump prints.\n+\n 2005-01-09  Ira Rosen  <irar@il.ibm.com>\n \n \t* tree-vectorizer.c (vect_analyze_offset_expr): Use "}, {"sha": "994fd674814a21974ac84bdc9b3bdf69c57d1baa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -1,3 +1,90 @@\n+2005-01-09  Dorit Naishlos  <dorit@il.ibm.com>\n+\n+\t* gcc.dg/vect/pr18400.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/pr18425.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/pr18536.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-1.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-2.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-3.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-4.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-5.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-6.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-7.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-13.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-17.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-18.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-19.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-20.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-21.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-22.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-23.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-24.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-25.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-26.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-27.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-28.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-29.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-31.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-32.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-33.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-34.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-35.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-36.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-37.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-40.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-41.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-42.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-43.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-44.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-46.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-47.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-48.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-50.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-52.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-53.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-56.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-58.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-60.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-62.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-64.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-65.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-66.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-67.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-68.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-69.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-70.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-71.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-72.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-73.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-74.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-75.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-76.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-77.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-78.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-80.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-86.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-87.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-88.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-89.c: Add checks for alignment prints.\n+\t* gcc.dg/vect/vect-all.c: Add checks for alignment prints.\n+\n+\t* gcc.dg/vect/vect-1.c: Fix spelling.\n+\t* gcc.dg/vect/vect-10.c: Fix spelling.\n+\t* gcc.dg/vect/vect-11.c: Fix spelling.\n+\t* gcc.dg/vect/vect-12.c: Fix spelling.\n+\t* gcc.dg/vect/vect-14.c: Fix spelling.\n+\t* gcc.dg/vect/vect-15.c: Fix spelling.\n+\t* gcc.dg/vect/vect-16.c: Fix spelling.\n+\t* gcc.dg/vect/vect-46.c: Remove obsolete comment.\n+\t* gcc.dg/vect/vect-64.c: Fix comments.\n+\t* gcc.dg/vect/vect-none.c: Remove vectorizable loop.\n+\n+2005-01-09  Dorit Naishlos  <dorit@il.ibm.com>\n+\t    Ira Rosen  <irar@il.ibm.com>\n+\n+\t* gcc.dg/vect/vect-70.c: New test.\n+\t* gcc.dg/vect/vect-71.c: New test.\n+\n 2005-01-09  Manfred Hollstein  <mh@suse.com>\n \n \t* gcc.dg/pr18241-1.c: Fix dg-do parameter."}, {"sha": "3e9449e92e06c94c61144844fc0f52ad3014fee6", "filename": "gcc/testsuite/gcc.dg/vect/vect-1.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-1.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -29,15 +29,15 @@ foo (int n)\n   char image[N][N];\n   char block[N][N];\n \n-  /* Not vetorizable yet (cross-iteration cycle).  */\n+  /* Not vectorizable yet (cross-iteration cycle).  */\n   diff = 0;\n   for (i = 0; i < N; i++) {\n     diff += (cb[i] - cc[i]);\n   }\n   ibar (&diff);\n \n \n-  /* Not vetorizable yet (outer-loop: not attempted. \n+  /* Not vectorizable yet (outer-loop: not attempted. \n      inner-loop: cross iteration cycle; multi-dimensional arrays).  */\n   diff = 0;\n   for (i = 0; i < N; i++) {\n@@ -62,7 +62,7 @@ foo (int n)\n   fbar (a);\n \n \n-  /* Not vetorizable yet (access pattern).  */\n+  /* Not vectorizable yet (access pattern).  */\n   for (i = 0; i < N/2; i++){\n     a[i] = b[2*i+1] * c[2*i+1] - b[2*i] * c[2*i];\n     d[i] = b[2*i] * c[2*i+1] + b[2*i+1] * c[2*i];\n@@ -99,3 +99,4 @@ foo (int n)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */"}, {"sha": "ea27b1b76599b3558e7e4ab38c01ebbf2516ac43", "filename": "gcc/testsuite/gcc.dg/vect/vect-10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-10.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -13,7 +13,7 @@ int foo ()\n   short c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n \n \n-  /* Not vetorizable yet (strided access pattern).  */\n+  /* Not vectorizable yet (strided access pattern).  */\n   for (i = 0; i < N/2; i++)\n     {\n       a[i] = b[2*i+1] * c[2*i+1] - b[2*i] * c[2*i];"}, {"sha": "1ad27604627098adc16b1235e9855c690904bc5a", "filename": "gcc/testsuite/gcc.dg/vect/vect-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-11.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -12,7 +12,7 @@ int main1 ()\n   int ic[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n   int ib[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n \n-  /* Not vetorizable yet (integer mult).  */\n+  /* Not vectorizable yet (integer mult).  */\n   for (i = 0; i < N; i++)\n     {\n       ia[i] = ib[i] * ic[i];"}, {"sha": "359dc4f416c5877765ff996666a25e3221843198", "filename": "gcc/testsuite/gcc.dg/vect/vect-12.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-12.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -15,7 +15,7 @@ int main1 ()\n   short sc[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n   short sb[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n \n-  /* Not vetorizable yet (multiple types with different nunits in vector).  */\n+  /* Not vectorizable yet (multiple types with different nunits in vector).  */\n   for (i = 0; i < N; i++)\n     {\n       ia[i] = ib[i] + ic[i];"}, {"sha": "ad21072ce039f9976f932dec7b4290393cddef98", "filename": "gcc/testsuite/gcc.dg/vect/vect-13.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-13.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -37,3 +37,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_max } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */"}, {"sha": "26a834b33ddc48bceef6c7a172395d4bf8d7e2f4", "filename": "gcc/testsuite/gcc.dg/vect/vect-14.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-14.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -11,7 +11,7 @@ int main1 ()\n   int ia[N];\n \n \n-  /* Not vetorizable yet (induction).  */\n+  /* Not vectorizable yet (induction).  */\n   for ( i = 0; i < N; i++) {\n     ia[i] = i;\n   }"}, {"sha": "aa521d36d818302465fddbdfd8cae92608c3b270", "filename": "gcc/testsuite/gcc.dg/vect/vect-15.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-15.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -11,7 +11,7 @@ int main1 ()\n   int a[N];\n   int b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n \n-  /* Not vetorizable yet (reverse access and forward access).  */\n+  /* Not vectorizable yet (reverse access and forward access).  */\n   for (i = N; i > 0; i--)\n     {\n       a[N-i] = b[i-1];"}, {"sha": "f6f134ed4d693b7f7de72b2a3d30940a48c95826", "filename": "gcc/testsuite/gcc.dg/vect/vect-16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-16.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -13,7 +13,7 @@ int main1 ()\n   float c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n   float diff;\n \n-  /* Not vetorizable yet (reduction).  */\n+  /* Not vectorizable yet (reduction).  */\n   diff = 0;\n   for (i = 0; i < N; i++) {\n     diff += (b[i] - c[i]);"}, {"sha": "20345992fc3764237944836bd90393a16d6980fb", "filename": "gcc/testsuite/gcc.dg/vect/vect-17.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-17.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -125,3 +125,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail vect_no_bitwise } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */"}, {"sha": "c2c1ad6bf93bb6321798c0880a59bad6794e5cea", "filename": "gcc/testsuite/gcc.dg/vect/vect-18.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-18.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -124,3 +124,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail vect_no_bitwise } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */"}, {"sha": "27f168e7a5602e9a904c688297ff378acc15a545", "filename": "gcc/testsuite/gcc.dg/vect/vect-19.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-19.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -124,3 +124,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail vect_no_bitwise } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */"}, {"sha": "4a21f03d65add1ab07552c0b349ae34d2b5b52df", "filename": "gcc/testsuite/gcc.dg/vect/vect-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-2.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -34,3 +34,4 @@ int main (void)\n } \n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */"}, {"sha": "04b3cdf02db78d638936c904da39763f25957514", "filename": "gcc/testsuite/gcc.dg/vect/vect-20.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-20.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -96,3 +96,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail vect_no_bitwise } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */"}, {"sha": "a24749820fc0eedd931dfc8ca270fba97897bc8a", "filename": "gcc/testsuite/gcc.dg/vect/vect-21.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-21.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -124,4 +124,5 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n "}, {"sha": "42e3b974d19a1f44313d20d634709c975b4b22d5", "filename": "gcc/testsuite/gcc.dg/vect/vect-22.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-22.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -95,4 +95,5 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n "}, {"sha": "97c44748285b398720969bf0f158b5bb57e97a5d", "filename": "gcc/testsuite/gcc.dg/vect/vect-23.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-23.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -124,4 +124,5 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n "}, {"sha": "273bb039dc0314dd1b8b56b0dfc84ad1f9fa1258", "filename": "gcc/testsuite/gcc.dg/vect/vect-24.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-24.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -124,4 +124,5 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n "}, {"sha": "8edc5fc19b187216469b8d3689ec154eab9a9aee", "filename": "gcc/testsuite/gcc.dg/vect/vect-25.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-25.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -50,3 +50,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */"}, {"sha": "a34449bc30fa159e35469b3fada85d8400148bc6", "filename": "gcc/testsuite/gcc.dg/vect/vect-26.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-26.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-26.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-26.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -35,4 +35,6 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" } } */\n "}, {"sha": "4652fdf4777faa8e98a77630c47ea2a4bcb3286e", "filename": "gcc/testsuite/gcc.dg/vect/vect-27.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-27.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-27.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-27.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -41,4 +41,5 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n-\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */"}, {"sha": "42118d4ea9cfbcc7dea4f42aa6a3fd925e3a2dc4", "filename": "gcc/testsuite/gcc.dg/vect/vect-28.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-28.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-28.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-28.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -38,4 +38,6 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" } } */\n "}, {"sha": "818e2c831ea510dc4779276394759b77d421862b", "filename": "gcc/testsuite/gcc.dg/vect/vect-29.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-29.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-29.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-29.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -44,4 +44,6 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n "}, {"sha": "99c1a091442fec472af24eb9805aa55f0ebd7dd8", "filename": "gcc/testsuite/gcc.dg/vect/vect-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-3.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -46,6 +46,7 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n \n \n "}, {"sha": "a27de677b2191d2d396be5ae4cbeda94bf952f69", "filename": "gcc/testsuite/gcc.dg/vect/vect-31.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-31.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-31.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-31.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -86,3 +86,5 @@ int main (void)\n } \n \n /* { dg-final { scan-tree-dump-times \"vectorized 4 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" } } */"}, {"sha": "6d4745343ca0e4d5968a50d50fbc8abb9166b5d2", "filename": "gcc/testsuite/gcc.dg/vect/vect-32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-32.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -35,3 +35,4 @@ int main (void)\n } \n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */"}, {"sha": "94625a1f0004cd3759b26c10f946a7052828908a", "filename": "gcc/testsuite/gcc.dg/vect/vect-33.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-33.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-33.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-33.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -37,3 +37,5 @@ int main (void)\n \n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" } } */"}, {"sha": "aea0f2d4546bc1c3d27e92664afb17171ff4cb40", "filename": "gcc/testsuite/gcc.dg/vect/vect-34.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-34.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-34.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-34.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -36,3 +36,4 @@ int main (void)\n } \n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */"}, {"sha": "4aa7693a5da008941ca798627d69579cca8d262b", "filename": "gcc/testsuite/gcc.dg/vect/vect-35.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-35.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-35.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-35.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -45,3 +45,4 @@ int main (void)\n \n \n /* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */"}, {"sha": "023af294c133eaa15ae66f0067779804f76218d9", "filename": "gcc/testsuite/gcc.dg/vect/vect-36.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-36.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-36.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-36.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -41,3 +41,5 @@ int main (void)\n } \n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */"}, {"sha": "03937e598615fd08ca96ca56d58c2851a3d74bb1", "filename": "gcc/testsuite/gcc.dg/vect/vect-37.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-37.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-37.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-37.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -56,3 +56,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */"}, {"sha": "7d4503a9cd9876b4430395da89b3f9c8892069d1", "filename": "gcc/testsuite/gcc.dg/vect/vect-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-4.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -36,3 +36,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */"}, {"sha": "fe3dd7773c5dd07fb85d3302709007c0579fab26", "filename": "gcc/testsuite/gcc.dg/vect/vect-40.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-40.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-40.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-40.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -50,3 +50,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"} } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */"}, {"sha": "686618c67501fbcfe4940c0868a47e07b718be1b", "filename": "gcc/testsuite/gcc.dg/vect/vect-41.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-41.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-41.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-41.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -51,3 +51,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */"}, {"sha": "a29f26718f9f820d9e910d6768db2df09f3115ee", "filename": "gcc/testsuite/gcc.dg/vect/vect-42.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-42.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-42.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-42.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -53,3 +53,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"} } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */"}, {"sha": "317d9ada90c18c72a56e13991247d89ed71b95b8", "filename": "gcc/testsuite/gcc.dg/vect/vect-43.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-43.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-43.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-43.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -54,3 +54,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */"}, {"sha": "f23fbad0a902821b99312500945dfcf543998d84", "filename": "gcc/testsuite/gcc.dg/vect/vect-44.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-44.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-44.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-44.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -55,3 +55,5 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail vect_no_align } } } */"}, {"sha": "8a59b583a60d07e4dc66f8f88bc8f0289657432e", "filename": "gcc/testsuite/gcc.dg/vect/vect-46.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-46.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-46.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-46.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -50,6 +50,5 @@ int main (void)\n   return 0;\n }\n \n-/* This fails to vectorize for 64-bit powerpc but there's no way to\n-   specify that in an xfail list.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */"}, {"sha": "73253ecb468b7a8fa404bdc6cbba796f00b2b2fd", "filename": "gcc/testsuite/gcc.dg/vect/vect-47.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-47.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-47.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-47.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -52,3 +52,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */"}, {"sha": "106a57342e6fb196d36ea74ab93eef64ac2dc044", "filename": "gcc/testsuite/gcc.dg/vect/vect-48.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-48.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-48.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-48.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -53,3 +53,5 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */"}, {"sha": "09cf0b9fa374753487be5495de2df03f7fdbe8fd", "filename": "gcc/testsuite/gcc.dg/vect/vect-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-5.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -52,3 +52,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */"}, {"sha": "1245a77ad7f3c27a7bcdbe35b3fb943d593d1e26", "filename": "gcc/testsuite/gcc.dg/vect/vect-50.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-50.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-50.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-50.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -50,3 +50,5 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail vect_no_align } } } */"}, {"sha": "24228cd799b85ba3719943c126bd97cd2fdac943", "filename": "gcc/testsuite/gcc.dg/vect/vect-52.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-52.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-52.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-52.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -52,3 +52,5 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */"}, {"sha": "b169bb334520e391ac050c231db30780a6a69a28", "filename": "gcc/testsuite/gcc.dg/vect/vect-54.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-54.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-54.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-54.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -51,3 +51,5 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail vect_no_align } } } */"}, {"sha": "90570167e06894e249b2c990a7ff2e6362d9eab3", "filename": "gcc/testsuite/gcc.dg/vect/vect-56.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-56.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-56.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-56.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -51,3 +51,5 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */"}, {"sha": "df814d9452d150d79bab920994aba9397bd02ec7", "filename": "gcc/testsuite/gcc.dg/vect/vect-58.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-58.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-58.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-58.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -52,3 +52,5 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail vect_no_align } } } */"}, {"sha": "514e8753aa1a650a8259bc9895d930b93a62de69", "filename": "gcc/testsuite/gcc.dg/vect/vect-6.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-6.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -53,5 +53,6 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n \n "}, {"sha": "26a3627cf44111ffd1366846d6c43a3f43c0e240", "filename": "gcc/testsuite/gcc.dg/vect/vect-60.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-60.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-60.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-60.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -52,3 +52,5 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */"}, {"sha": "cdc28da544cd73e8fe3c77480cf63768f438bde0", "filename": "gcc/testsuite/gcc.dg/vect/vect-62.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-62.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-62.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-62.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -63,3 +63,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */"}, {"sha": "bf84ac8643431d215fb023085720305fb8d3c29d", "filename": "gcc/testsuite/gcc.dg/vect/vect-64.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-64.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -13,7 +13,7 @@ int main1 ()\n   int ic[N][N][3][13];\n   int id[N][N][N];\n \n-  /* Multidimensional array. Not aligned: not vectorizable. */\n+  /* Multidimensional array. Not aligned: vectorizable. */\n   for (i = 0; i < N; i++)\n     {\n       for (j = 0; j < N; j++)\n@@ -31,7 +31,7 @@ int main1 ()\n         }\n     }\n \n-  /* Multidimensional array. Not aligned: not vectorizable. */\n+  /* Multidimensional array. Not aligned: vectorizable. */\n   for (i = 0; i < N; i++)\n     {\n       for (j = 0; j < N; j++)\n@@ -81,3 +81,5 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" } } */"}, {"sha": "0c12d1b9ea57e2d09b0837df3eed711e7dc52834", "filename": "gcc/testsuite/gcc.dg/vect/vect-65.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-65.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-65.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-65.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -79,3 +79,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */"}, {"sha": "635297be64eb20beb33b783f9e0352724d4509c7", "filename": "gcc/testsuite/gcc.dg/vect/vect-66.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-66.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-66.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-66.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -77,3 +77,5 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" } } */"}, {"sha": "7b54a95b01b34739552822472e2b510c2eee2f8e", "filename": "gcc/testsuite/gcc.dg/vect/vect-67.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-67.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-67.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-67.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -42,3 +42,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */"}, {"sha": "4dfaad31ee7f354b9a58ddcbe4e1aec7ab7c6f16", "filename": "gcc/testsuite/gcc.dg/vect/vect-68.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-68.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-68.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-68.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -85,3 +85,5 @@ int main (void)\n } \n \n /* { dg-final { scan-tree-dump-times \"vectorized 4 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" } } */"}, {"sha": "ed213741cd9a66110b39f7c73701204458d806cf", "filename": "gcc/testsuite/gcc.dg/vect/vect-69.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-69.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-69.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-69.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -112,3 +112,5 @@ int main (void)\n } \n \n /* { dg-final { scan-tree-dump-times \"vectorized 4 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" } } */"}, {"sha": "e92cea42ad018cf8f37fcced50f0b2a8ba204e44", "filename": "gcc/testsuite/gcc.dg/vect/vect-7.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-7.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -47,3 +47,4 @@ int main (void)\n \n /* Fails for targets that don't vectorize PLUS.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" { xfail alpha*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */"}, {"sha": "38daaf371e033816a2afaeca37fbc8a0473cae83", "filename": "gcc/testsuite/gcc.dg/vect/vect-70.c", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-70.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-70.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-70.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -0,0 +1,67 @@\n+/* { dg-require-effective-target vect_int } */\n+\n+#include <stdarg.h>\n+#include \"tree-vect.h\"\n+\n+#define N 16\n+\n+struct s{\n+  int m;\n+  int n[N][N][N];\n+};\n+\n+struct test1{\n+  struct s a; /* array a.n is unaligned */\n+  int b;\n+  int c;\n+  struct s e[N]; /* array e.n is aligned */\n+};\n+\n+int main1 ()\n+{\n+  int i,j;\n+  struct test1 tmp1;\n+\n+  for (i = 0; i < N; i++)\n+    for (j = 3; j < N-3; j++)\n+      {\n+        tmp1.e[i].n[1][2][j] = 8;\n+      }\n+\n+  /* check results:  */\n+  for (i = 0; i < N; i++)\n+    for (j = 3; j < N-3; j++)\n+    {\n+      if (tmp1.e[i].n[1][2][j] != 8)\n+          abort ();\n+    }\n+  \n+  /* not consecutive */\n+  for (i = 0; i < N; i++)\n+    for (j = 3; j < N-3; j++)\n+      { \n+        tmp1.e[j].n[1][2][j] = 8;\n+      }\n+  \n+  /* check results:  */\n+  for (i = 0; i < N; i++)\n+    for (j = 3; j < N-3; j++)\n+    {\n+      if (tmp1.e[j].n[1][2][j] != 8)\n+          abort ();\n+    }\n+    \n+  return 0;\n+}\n+       \n+int main (void)\n+{\n+  check_vect ();\n+    \n+  return main1 ();\n+}\n+          \n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" } } */\n+  "}, {"sha": "1086dbc49e7a0b6b426b1318742fb084d4c94f49", "filename": "gcc/testsuite/gcc.dg/vect/vect-71.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-71.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-71.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-71.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-require-effective-target vect_int } */\n+\n+#include <stdarg.h>\n+#include \"tree-vect.h\"\n+\n+#define N 16\n+\n+/* unaligned load.  */\n+\n+int main1 ()\n+{\n+  int i;\n+  unsigned ia[N];\n+  unsigned ib[N+1] = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2};\n+\n+  for (i = 2; i < N+1; i++)\n+    {\n+      ia[ib[i]] = 0;\n+    }\n+\n+  /* check results:  */\n+  for (i = 2; i < N+1; i++)\n+    {\n+      if (ia[ib[i]] != 0)\n+        abort();\n+    }\n+\n+  return 0;\n+}\n+\n+int main (void)\n+{\n+  check_vect ();\n+\n+  return main1 ();\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  { xfail *-*-* } } } */\n+"}, {"sha": "8d9266ef7dfaee79f33e80ab6c6df1cbdf20a368", "filename": "gcc/testsuite/gcc.dg/vect/vect-72.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-72.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-72.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-72.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -41,4 +41,6 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n "}, {"sha": "a0639fd669a89f30d23c57ddf6b61f1c90f0ec57", "filename": "gcc/testsuite/gcc.dg/vect/vect-73.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-73.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-73.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-73.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -37,3 +37,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */"}, {"sha": "0c08f0aebc995153c3372ee0acff9d6961afff5d", "filename": "gcc/testsuite/gcc.dg/vect/vect-74.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-74.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-74.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-74.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -41,3 +41,4 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */"}, {"sha": "6ddbfdaf65e6de4253b468ee068f28a891fe92e3", "filename": "gcc/testsuite/gcc.dg/vect/vect-75.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-75.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-75.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-75.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -41,4 +41,5 @@ int main (void)\n \n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n "}, {"sha": "999fcb60312d7da7063339077e12a69ec008dff1", "filename": "gcc/testsuite/gcc.dg/vect/vect-76.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-76.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-76.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-76.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -68,4 +68,5 @@ int main (void)\n \n \n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n "}, {"sha": "a8781d82003990691877c2419b84881012df2ea9", "filename": "gcc/testsuite/gcc.dg/vect/vect-77.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-77.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-77.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-77.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -40,3 +40,5 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail lp64_or_vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail lp64_or_vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */"}, {"sha": "6d558218c37f035a945ac3e2eb82e92e988a04cc", "filename": "gcc/testsuite/gcc.dg/vect/vect-78.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-78.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-78.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-78.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -41,3 +41,5 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail lp64_or_vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail lp64_or_vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */"}, {"sha": "112e892f531c7b3c1fde6ea7c4134958a899af87", "filename": "gcc/testsuite/gcc.dg/vect/vect-80.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-80.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-80.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-80.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -43,3 +43,5 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" } } */"}, {"sha": "10cbf0c6c21b64bc974d18067d0656bbf6e69261", "filename": "gcc/testsuite/gcc.dg/vect/vect-86.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-86.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-86.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-86.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -47,3 +47,5 @@ int main (void)\n \n /* Fails for targets that don't vectorize PLUS.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail alpha*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */"}, {"sha": "0b90c280358c25b6b882e176c937bbd22b459972", "filename": "gcc/testsuite/gcc.dg/vect/vect-87.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-87.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-87.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-87.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -51,3 +51,5 @@ int main (void)\n \n /* Fails for targets that don't vectorize PLUS.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail alpha*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail alpha*-*-* } } } */"}, {"sha": "3b98bda33c6524f62b507ccdf7df290fcf16d4e9", "filename": "gcc/testsuite/gcc.dg/vect/vect-88.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-88.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-88.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-88.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -51,3 +51,5 @@ int main (void)\n \n /* Fails for targets that don't vectorize PLUS.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail alpha*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail alpha*-*-* } } } */"}, {"sha": "92752ec33021a827b5d34de00e13fca1a30b852e", "filename": "gcc/testsuite/gcc.dg/vect/vect-89.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-89.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-89.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-89.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -44,3 +44,5 @@ int main (void)\n } \n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" } } */"}, {"sha": "343864cbdf1ba00bd8ac3318b29d38db7647fa28", "filename": "gcc/testsuite/gcc.dg/vect/vect-all.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-all.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-all.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-all.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -213,3 +213,5 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 10 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */"}, {"sha": "f5303b93e18b2e676cc460f4e1e926d59ef31715", "filename": "gcc/testsuite/gcc.dg/vect/vect-none.c", "status": "modified", "additions": 11, "deletions": 20, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-none.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-none.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-none.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -89,23 +89,15 @@ foo (int n)\n   char block[N][N];\n \n \n-  /* Test 1 - unknown loop bound.  */\n-  for (i = 0; i < n; i++)\n-    {\n-      a[i] = b[i];\n-    }\n-  fbar (a);\n-\n-\n-  /* Test 2 - type cast.  */\n+  /* Test 1 - type cast.  */\n   for (i = 0; i < N; i++)\n     {\n       ia[i] = (int) sb[i];\n     }\n   fbar (a);\n \n \n-  /* Test 3 - strided access pattern.  */\n+  /* Test 2 - strided access pattern.  */\n   for (i = 0; i < N/2; i++)\n     {\n       a[i] = b[2*i+1] * c[2*i+1] - b[2*i] * c[2*i];\n@@ -114,15 +106,15 @@ foo (int n)\n   fbar (a);\n \n \n-  /* Test 4 - no target support for integer mult.  */\n+  /* Test 3 - no target support for integer mult.  */\n   for (i = 0; i < N; i++)\n     {\n       ia[i] = ib[i] * ic[i];\n     }\n   ibar (ia);\n \n \n-  /* Test 5 - two types with different nunits in vector.  */\n+  /* Test 4 - two types with different nunits in vector.  */\n   for (i = 0; i < N; i++)\n     {\n       ia[i] = ib[i] + ic[i];\n@@ -132,30 +124,30 @@ foo (int n)\n   sbar (sa);\n \n \n-  /* Test 6 - too conservative dependence test.  */\n+  /* Test 5 - too conservative dependence test.  */\n   for (i = 0; i < N; i++){\n     a[i] = b[i] + c[i];\n     a[i+1] = b[i] + c[i];\n   }\n   fbar (a);\n \n \n-  /* Test 7 - condition in loop.  */\n+  /* Test 6 - condition in loop.  */\n   for (i = 0; i < N; i++){\n     a[i] = (b[i] > 0 ? b[i] : 0);\n   }\n   fbar (a);\n \n \n-  /* Test 8 - cross-iteration cycle.  */\n+  /* Test 7 - cross-iteration cycle.  */\n   diff = 0;\n   for (i = 0; i < N; i++) {\n     diff += (cb[i] - cc[i]);\n   }\n   ibar (&diff);\n \n \n-  /* Test 9 - outer-loop not attempted; inner-loop has cross \n+  /* Test 8 - outer-loop not attempted; inner-loop has cross \n      iteration cycle and multi-dimensional arrays.  */\n   diff = 0;\n   for (i = 0; i < N; i++) {\n@@ -166,14 +158,14 @@ foo (int n)\n   ibar (&diff);\n \n \n-  /* Test 10 - induction.  */\n+  /* Test 9 - induction.  */\n   for ( i = 0; i < N; i++) {\n     a[i] = i;\n   }\n   fbar (a);\n \n \n-  /* Test 11 - reverse access and forward access.  */\n+  /* Test 10 - reverse access and forward access.  */\n   for (i = N; i > 0; i--)\n     {\n       a[N-i] = b[i-1];\n@@ -189,5 +181,4 @@ foo (int n)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized \" 3 \"vect\"} } */\n-/* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 2 \"vect\"} } */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 3 \"vect\"} } */"}, {"sha": "b8908013da59e68588300dc6dd9babd58a0867da", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3ed97adb8d216fa4a9e08dba1e36568c8df57f/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=5a3ed97adb8d216fa4a9e08dba1e36568c8df57f", "patch": "@@ -4415,15 +4415,23 @@ vect_enhance_data_refs_alignment (loop_vec_info loop_vinfo)\n     {\n       struct data_reference *dr = VARRAY_GENERIC_PTR (loop_write_datarefs, i);\n       if (dr == LOOP_VINFO_UNALIGNED_DR (loop_vinfo))\n-\tDR_MISALIGNMENT (dr) = 0;\n+\t{\n+\t  DR_MISALIGNMENT (dr) = 0;\n+\t  if (vect_debug_details (loop) || vect_debug_stats (loop))\n+\t    fprintf (dump_file, \"Alignment of access forced using peeling.\");\n+\t}\n       else\n \tDR_MISALIGNMENT (dr) = -1;\n     }\n   for (i = 0; i < VARRAY_ACTIVE_SIZE (loop_read_datarefs); i++)\n     {\n       struct data_reference *dr = VARRAY_GENERIC_PTR (loop_read_datarefs, i);\n       if (dr == LOOP_VINFO_UNALIGNED_DR (loop_vinfo))\n-\tDR_MISALIGNMENT (dr) = 0;\n+\t{\n+\t  DR_MISALIGNMENT (dr) = 0;\n+\t  if (vect_debug_details (loop) || vect_debug_stats (loop))\n+\t    fprintf (dump_file, \"Alignment of access forced using peeling.\");\n+\t}\n       else\n \tDR_MISALIGNMENT (dr) = -1;\n     }\n@@ -4481,6 +4489,9 @@ vect_analyze_data_refs_alignment (loop_vec_info loop_vinfo)\n \t    fprintf (dump_file, \"not vectorized: unsupported unaligned load.\");\n \t  return false;\n \t}\n+      if (supportable_dr_alignment != dr_aligned \n+\t  && (vect_debug_details (loop) || vect_debug_stats (loop)))\n+\tfprintf (dump_file, \"Vectorizing an unaligned access.\");\n     }\n   for (i = 0; i < VARRAY_ACTIVE_SIZE (loop_write_datarefs); i++)\n     {\n@@ -4492,6 +4503,9 @@ vect_analyze_data_refs_alignment (loop_vec_info loop_vinfo)\n \t    fprintf (dump_file, \"not vectorized: unsupported unaligned store.\");\n \t  return false;\n \t}\n+      if (supportable_dr_alignment != dr_aligned \n+\t  && (vect_debug_details (loop) || vect_debug_stats (loop)))\n+\tfprintf (dump_file, \"Vectorizing an unaligned access.\");\n     }\n \n   return true;"}]}