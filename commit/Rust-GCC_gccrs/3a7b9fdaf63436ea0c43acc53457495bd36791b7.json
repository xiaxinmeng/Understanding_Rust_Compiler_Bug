{"sha": "3a7b9fdaf63436ea0c43acc53457495bd36791b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E3YjlmZGFmNjM0MzZlYTBjNDNhY2M1MzQ1NzQ5NWJkMzY3OTFiNw==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2008-01-07T16:44:43Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2008-01-07T16:44:43Z"}, "message": "re PR fortran/34672 (.mod file misses renamed, USEd symbol)\n\n2008-01-07  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/34672\n\t* module.c (write_generic): Rewrite completely.\n\t(write_module): Change call to write_generic.\n\n2008-01-07  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/34672\n\t* gfortran.dg/use_only_2.f90: New test.\n\nFrom-SVN: r131377", "tree": {"sha": "933859f7a33a83b4eb1c2426b726575147920a81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/933859f7a33a83b4eb1c2426b726575147920a81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a7b9fdaf63436ea0c43acc53457495bd36791b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a7b9fdaf63436ea0c43acc53457495bd36791b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a7b9fdaf63436ea0c43acc53457495bd36791b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a7b9fdaf63436ea0c43acc53457495bd36791b7/comments", "author": null, "committer": null, "parents": [{"sha": "b61ea03d2dc7cb1852d1cf401a22f1f6935972ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b61ea03d2dc7cb1852d1cf401a22f1f6935972ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b61ea03d2dc7cb1852d1cf401a22f1f6935972ad"}], "stats": {"total": 76, "additions": 56, "deletions": 20}, "files": [{"sha": "19f822f83780371b3b0141e01d9b23e04086a682", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a7b9fdaf63436ea0c43acc53457495bd36791b7/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a7b9fdaf63436ea0c43acc53457495bd36791b7/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3a7b9fdaf63436ea0c43acc53457495bd36791b7", "patch": "@@ -1,3 +1,9 @@\n+2008-01-07  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/34672\n+\t* module.c (write_generic): Rewrite completely.\n+\t(write_module): Change call to write_generic.\n+\n 2008-01-06  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/34659"}, {"sha": "20cec83d984361651b01b5102ee5fc0c42774bad", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 15, "deletions": 20, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a7b9fdaf63436ea0c43acc53457495bd36791b7/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a7b9fdaf63436ea0c43acc53457495bd36791b7/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=3a7b9fdaf63436ea0c43acc53457495bd36791b7", "patch": "@@ -4176,13 +4176,22 @@ write_operator (gfc_user_op *uop)\n }\n \n \n-/* Write generic interfaces associated with a symbol.  */\n+/* Write generic interfaces from the namespace sym_root.  */\n \n static void\n-write_generic (gfc_symbol *sym)\n+write_generic (gfc_symtree *st)\n {\n-  const char *p;\n-  int nuse, j;\n+  gfc_symbol *sym;\n+\n+  if (st == NULL)\n+    return;\n+\n+  write_generic (st->left);\n+  write_generic (st->right);\n+\n+  sym = st->n.sym;\n+  if (!sym || check_unique_name (st->name))\n+    return;\n \n   if (sym->generic == NULL\n       || !gfc_check_access (sym->attr.access, sym->ns->default_access))\n@@ -4191,21 +4200,7 @@ write_generic (gfc_symbol *sym)\n   if (sym->module == NULL)\n     sym->module = gfc_get_string (module_name);\n \n-  /* See how many use names there are.  If none, use the symbol name.  */\n-  nuse = number_use_names (sym->name, false);\n-  if (nuse == 0)\n-    {\n-      mio_symbol_interface (&sym->name, &sym->module, &sym->generic);\n-      return;\n-    }\n-\n-  for (j = 1; j <= nuse; j++)\n-    {\n-      /* Get the jth local name for this symbol.  */\n-      p = find_use_name_n (sym->name, &j, false);\n-\n-      mio_symbol_interface (&p, &sym->module, &sym->generic);\n-    }\n+  mio_symbol_interface (&st->name, &sym->module, &sym->generic);\n }\n \n \n@@ -4263,7 +4258,7 @@ write_module (void)\n   write_char ('\\n');\n \n   mio_lparen ();\n-  gfc_traverse_ns (gfc_current_ns, write_generic);\n+  write_generic (gfc_current_ns->sym_root);\n   mio_rparen ();\n   write_char ('\\n');\n   write_char ('\\n');"}, {"sha": "ee0d67332efd360c7db47256cc6c2f1a7724ca40", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a7b9fdaf63436ea0c43acc53457495bd36791b7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a7b9fdaf63436ea0c43acc53457495bd36791b7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3a7b9fdaf63436ea0c43acc53457495bd36791b7", "patch": "@@ -1,3 +1,8 @@\n+2008-01-07  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/34672\n+\t* gfortran.dg/use_only_2.f90: New test.\n+\n 2008-01-06  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/34680"}, {"sha": "313953ec8bb03efced80aa821927a76b1b2e85c3", "filename": "gcc/testsuite/gfortran.dg/use_only_2.f90", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a7b9fdaf63436ea0c43acc53457495bd36791b7/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_only_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a7b9fdaf63436ea0c43acc53457495bd36791b7/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_only_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_only_2.f90?ref=3a7b9fdaf63436ea0c43acc53457495bd36791b7", "patch": "@@ -0,0 +1,30 @@\n+! { dg-do compile }\n+! Checks the fix for PR34672, in which generic interfaces were not\n+! being written correctly, when renamed.\n+!\n+! Contributed by Jos de Kloe <kloedej@knmi.nl> \n+!\n+MODULE MyMod1\r\n+  integer, parameter :: i2_ = Selected_Int_Kind(4)\r\n+END Module MyMod1\r\n+\r\n+module MyMod2\r\n+  INTERFACE write_int\r\n+     module procedure write_int_local\r\n+  END INTERFACE\r\n+contains\r\n+  subroutine write_int_local(value)\r\n+    integer, intent(in)  :: value\r\n+    print *,value\r\n+  end subroutine write_int_local\r\n+end module MyMod2\r\n+\r\n+module MyMod3\r\n+  USE MyMod2, only: write_MyInt   => write_int\r\n+  USE MyMod1, only: i2_\r\n+end module MyMod3\r\n+\r\n+module MyMod4\r\n+  USE MyMod3, only: write_MyInt\r\n+end module MYMOD4\r\n+! { dg-final { cleanup-modules \"MyMod1 MyMod2 MyMod3 MyMod4\" } }"}]}