{"sha": "8a0963c32789e582dc5b60e71822ee6fe5db40e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGEwOTYzYzMyNzg5ZTU4MmRjNWI2MGU3MTgyMmVlNmZlNWRiNDBlOQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2009-01-07T23:53:03Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2009-01-07T23:53:03Z"}, "message": "target-supports.exp (check_weak_override_available): New.\n\n\t* lib/target-supports.exp (check_weak_override_available): New.\n\t* lib/target-supports-dg.exp (dg-require-weak-override): New.\n\t* gcc.dg/tree-ssa/pr27781.c, g++.dg/eh/weak1.C: Use\n\tdg-require-weak-override.\n\nFrom-SVN: r143172", "tree": {"sha": "ded040516e1b86fef5c43a9bf45e66bc0e5ea049", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ded040516e1b86fef5c43a9bf45e66bc0e5ea049"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a0963c32789e582dc5b60e71822ee6fe5db40e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a0963c32789e582dc5b60e71822ee6fe5db40e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a0963c32789e582dc5b60e71822ee6fe5db40e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a0963c32789e582dc5b60e71822ee6fe5db40e9/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7da13f1d80b35d3e00ef1a4c785f49f58d8fa767", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7da13f1d80b35d3e00ef1a4c785f49f58d8fa767", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7da13f1d80b35d3e00ef1a4c785f49f58d8fa767"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "196f19136610b64c6f873e8ae94d99f0020fc718", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a0963c32789e582dc5b60e71822ee6fe5db40e9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a0963c32789e582dc5b60e71822ee6fe5db40e9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8a0963c32789e582dc5b60e71822ee6fe5db40e9", "patch": "@@ -1,3 +1,10 @@\n+2009-01-07  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* lib/target-supports.exp (check_weak_override_available): New.\n+\t* lib/target-supports-dg.exp (dg-require-weak-override): New.\n+\t* gcc.dg/tree-ssa/pr27781.c, g++.dg/eh/weak1.C: Use\n+\tdg-require-weak-override.\n+\n 2009-01-07  Nathan Froyd  <froydnj@codesourcery.com>\n \t    Alan Modra  <amodra@bigpond.net.au>\n "}, {"sha": "f78d1955b52b04cbe5bdf19e55e50277b71e19aa", "filename": "gcc/testsuite/g++.dg/eh/weak1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a0963c32789e582dc5b60e71822ee6fe5db40e9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fweak1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a0963c32789e582dc5b60e71822ee6fe5db40e9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fweak1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fweak1.C?ref=8a0963c32789e582dc5b60e71822ee6fe5db40e9", "patch": "@@ -1,6 +1,6 @@\n // PR target/29487\n // { dg-do run { xfail { hppa*-*-hpux* && { ! hppa*64*-*-* } } } }\n-// { dg-require-weak \"\" }\n+// { dg-require-weak-override \"\" }\n // { dg-additional-sources \"weak1-a.cc\" }\n // { dg-options \"-O2\" }\n "}, {"sha": "233c93dac388a8985325d3fa60506162e5426f9b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr27781.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a0963c32789e582dc5b60e71822ee6fe5db40e9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr27781.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a0963c32789e582dc5b60e71822ee6fe5db40e9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr27781.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr27781.c?ref=8a0963c32789e582dc5b60e71822ee6fe5db40e9", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-weak \"\" } */\n+/* { dg-require-weak-override \"\" } */\n /* { dg-options \"-O2 -fdump-tree-optimized\" } */\n \n void __attribute__((weak)) func(void)"}, {"sha": "fe6453bad7df1ff1317df12cb63fcdb67285dfe6", "filename": "gcc/testsuite/lib/target-supports-dg.exp", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a0963c32789e582dc5b60e71822ee6fe5db40e9/gcc%2Ftestsuite%2Flib%2Ftarget-supports-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a0963c32789e582dc5b60e71822ee6fe5db40e9/gcc%2Ftestsuite%2Flib%2Ftarget-supports-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports-dg.exp?ref=8a0963c32789e582dc5b60e71822ee6fe5db40e9", "patch": "@@ -45,6 +45,21 @@ proc dg-require-weak { args } {\n     }\n }\n \n+# If this target does not support overriding weak symbols, skip this\n+# test.\n+\n+proc dg-require-weak-override { args } {\n+    set weak_override_available [ check_weak_override_available ]\n+    if { $weak_override_available == -1 } {\n+\tupvar name name\n+\tunresolved \"$name\"\n+    }\n+    if { $weak_override_available != 1 } {\n+\tupvar dg-do-what dg-do-what\n+\tset dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n+    }\n+}\n+\n # If this target does not support the \"visibility\" attribute, skip this\n # test.\n "}, {"sha": "0eb40c6714ca83edfaca886aceeddc8f6e83059c", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a0963c32789e582dc5b60e71822ee6fe5db40e9/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a0963c32789e582dc5b60e71822ee6fe5db40e9/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=8a0963c32789e582dc5b60e71822ee6fe5db40e9", "patch": "@@ -250,6 +250,20 @@ proc check_weak_available { } {\n     }\n }\n \n+###############################\n+# proc check_weak_override_available { }\n+###############################\n+\n+# Like check_weak_available, but return 0 if weak symbol definitions\n+# cannot be overridden.\n+\n+proc check_weak_override_available { } {\n+    if { [istarget \"*-*-mingw*\"] } {\n+\treturn 0\n+    }\n+    return [check_weak_available]\n+}\n+\n ###############################\n # proc check_visibility_available { what_kind }\n ###############################"}]}