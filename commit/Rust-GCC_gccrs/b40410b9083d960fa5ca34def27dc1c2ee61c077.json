{"sha": "b40410b9083d960fa5ca34def27dc1c2ee61c077", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQwNDEwYjkwODNkOTYwZmE1Y2EzNGRlZjI3ZGMxYzJlZTYxYzA3Nw==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm@polyomino.org.uk", "date": "2004-06-21T12:37:46Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-06-21T12:37:46Z"}, "message": "tree-alias-common.h (struct tree_alias_ops): Change ip and ip_partial to unsigned int.\n\n\t* tree-alias-common.h (struct tree_alias_ops): Change ip and\n\tip_partial to unsigned int.\n\nfortran:\n\t* trans.h (stmtblock_t): Change has_scope to unsigned int.\n\njava:\n\t* jcf.h (struct JCF): Change java_source, right_zip and finished\n\tto unsigned int.\n\t* lex.h (struct java_lexer): Change hit_eof, read_anything,\n\tbyte_swap and use_fallback to unsigned int.\n\t* parse.h (struct _jdep): Change flag0 to unsigned int.\n\nFrom-SVN: r83430", "tree": {"sha": "7b1da446bf66f5879b6e982e36c900e25860b6ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b1da446bf66f5879b6e982e36c900e25860b6ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b40410b9083d960fa5ca34def27dc1c2ee61c077", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b40410b9083d960fa5ca34def27dc1c2ee61c077", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b40410b9083d960fa5ca34def27dc1c2ee61c077", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b40410b9083d960fa5ca34def27dc1c2ee61c077/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a5b9284da6acc309118a04dcba3a1cbca2ecdd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a5b9284da6acc309118a04dcba3a1cbca2ecdd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a5b9284da6acc309118a04dcba3a1cbca2ecdd4"}], "stats": {"total": 39, "additions": 28, "deletions": 11}, "files": [{"sha": "17f767f5b09d38dce8a2ffabde1718f9e9520b36", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b40410b9083d960fa5ca34def27dc1c2ee61c077/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b40410b9083d960fa5ca34def27dc1c2ee61c077/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b40410b9083d960fa5ca34def27dc1c2ee61c077", "patch": "@@ -1,3 +1,8 @@\n+2004-06-21  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\t* tree-alias-common.h (struct tree_alias_ops): Change ip and\n+\tip_partial to unsigned int.\n+\n 2004-06-21  Richard Henderson  <rth@redhat.com>\n \n \t* c-common.c (verify_sequence_points): Export."}, {"sha": "5cbbc987dc0654d3807d47d818a5a6bee423a9b9", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b40410b9083d960fa5ca34def27dc1c2ee61c077/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b40410b9083d960fa5ca34def27dc1c2ee61c077/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=b40410b9083d960fa5ca34def27dc1c2ee61c077", "patch": "@@ -1,3 +1,7 @@\n+2004-06-21  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\t* trans.h (stmtblock_t): Change has_scope to unsigned int.\n+\n 2004-06-20  Steven G. Kargl  <kargls@comcast.net>\n \n \t* arith.c (gfc_range_check): correct complex underflow."}, {"sha": "c4d8df47d7705263b4d5ef735501412477b430eb", "filename": "gcc/fortran/trans.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b40410b9083d960fa5ca34def27dc1c2ee61c077/gcc%2Ffortran%2Ftrans.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b40410b9083d960fa5ca34def27dc1c2ee61c077/gcc%2Ffortran%2Ftrans.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.h?ref=b40410b9083d960fa5ca34def27dc1c2ee61c077", "patch": "@@ -31,7 +31,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n typedef struct\n {\n   tree head;\n-  int has_scope:1;\n+  unsigned int has_scope:1;\n }\n stmtblock_t;\n "}, {"sha": "fff8cfe686aba753ef3b2ae633b0c3aaac3fbcf7", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b40410b9083d960fa5ca34def27dc1c2ee61c077/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b40410b9083d960fa5ca34def27dc1c2ee61c077/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=b40410b9083d960fa5ca34def27dc1c2ee61c077", "patch": "@@ -1,3 +1,11 @@\n+2004-06-21  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\t* jcf.h (struct JCF): Change java_source, right_zip and finished\n+\tto unsigned int.\n+\t* lex.h (struct java_lexer): Change hit_eof, read_anything,\n+\tbyte_swap and use_fallback to unsigned int.\n+\t* parse.h (struct _jdep): Change flag0 to unsigned int.\n+\n 2004-06-17  Ranjit Mathew  <rmathew@hotmail.com>\n \n \tFixes PR java/13948"}, {"sha": "09e2c1a2bc535b9fc98d6b31f2da42f27d21251e", "filename": "gcc/java/jcf.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b40410b9083d960fa5ca34def27dc1c2ee61c077/gcc%2Fjava%2Fjcf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b40410b9083d960fa5ca34def27dc1c2ee61c077/gcc%2Fjava%2Fjcf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf.h?ref=b40410b9083d960fa5ca34def27dc1c2ee61c077", "patch": "@@ -106,9 +106,9 @@ typedef struct JCF GTY(()) {\n   unsigned char * GTY ((skip)) buffer_end;\n   unsigned char * GTY ((skip)) read_ptr;\n   unsigned char * GTY ((skip)) read_end;\n-  int java_source : 1;\n-  int right_zip : 1;\n-  int finished : 1;\n+  unsigned int java_source : 1;\n+  unsigned int right_zip : 1;\n+  unsigned int finished : 1;\n   jcf_filbuf_t filbuf;\n   PTR GTY ((skip)) read_state;\n   const char *filename;"}, {"sha": "9a7cad11a12e4537333b57dbf922253ba03ea176", "filename": "gcc/java/lex.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b40410b9083d960fa5ca34def27dc1c2ee61c077/gcc%2Fjava%2Flex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b40410b9083d960fa5ca34def27dc1c2ee61c077/gcc%2Fjava%2Flex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.h?ref=b40410b9083d960fa5ca34def27dc1c2ee61c077", "patch": "@@ -115,21 +115,21 @@ struct java_lexer\n   unicode_t unget_value;\n \n   /* If nonzero, we've hit EOF.  Used only by java_get_unicode().  */\n-  int hit_eof : 1;\n+  unsigned int hit_eof : 1;\n   \n   /* Name of the character encoding we're using.  */\n   const char *encoding;\n \n #ifdef HAVE_ICONV\n   /* Nonzero if we've read any bytes.  We only recognize the\n      byte-order-marker (BOM) as the first word.  */\n-  int read_anything : 1;\n+  unsigned int read_anything : 1;\n \n   /* Nonzero if we have to byte swap.  */\n-  int byte_swap : 1;\n+  unsigned int byte_swap : 1;\n \n   /* Nonzero if we're using the fallback decoder.  */\n-  int use_fallback : 1;\n+  unsigned int use_fallback : 1;\n \n   /* The handle for the iconv converter we're using.  */\n   iconv_t handle;"}, {"sha": "cf62dae8446566dc151ef6c46317f2671efcce4f", "filename": "gcc/java/parse.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b40410b9083d960fa5ca34def27dc1c2ee61c077/gcc%2Fjava%2Fparse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b40410b9083d960fa5ca34def27dc1c2ee61c077/gcc%2Fjava%2Fparse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.h?ref=b40410b9083d960fa5ca34def27dc1c2ee61c077", "patch": "@@ -479,7 +479,7 @@ enum jdep_code {\n typedef struct _jdep {\n   ENUM_BITFIELD(jdep_code) kind : 8; /* Type of patch */\n \n-  int  flag0 : 1;\t\t/* Some flags */\n+  unsigned int  flag0 : 1;\t/* Some flags */\n   tree decl;\t\t\t/* Tied decl/or WFL */\n   tree solv;\t\t\t/* What to solve */\n   tree wfl;\t\t\t/* Where thing to resolve where found */"}, {"sha": "ec93ce3dad2a8b5bac874c98b0e2a5efddeb1948", "filename": "gcc/tree-alias-common.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b40410b9083d960fa5ca34def27dc1c2ee61c077/gcc%2Ftree-alias-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b40410b9083d960fa5ca34def27dc1c2ee61c077/gcc%2Ftree-alias-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-alias-common.h?ref=b40410b9083d960fa5ca34def27dc1c2ee61c077", "patch": "@@ -105,11 +105,11 @@ struct tree_alias_ops\n   void *data;\n \n   /* Interprocedural.  */\n-  int ip:1; \n+  unsigned int ip:1; \n \n   /* Can do conservative interprocedural analysis if we save the \n    * info.  */\n-  int ip_partial:1; \n+  unsigned int ip_partial:1; \n \n };\n "}]}