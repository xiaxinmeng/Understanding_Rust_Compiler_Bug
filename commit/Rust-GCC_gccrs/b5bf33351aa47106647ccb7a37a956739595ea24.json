{"sha": "b5bf33351aa47106647ccb7a37a956739595ea24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjViZjMzMzUxYWE0NzEwNjY0N2NjYjdhMzdhOTU2NzM5NTk1ZWEyNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-11-07T16:30:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-11-07T16:30:55Z"}, "message": "[multiple changes]\n\n2011-11-07  Olivier Hainque  <hainque@adacore.com>\n\n\t* sigtramp-ppcvxw.c: Add general comments.\n\t(CFI_COMMON_REGS): Remove rule for r1, as in other unwinders. Add\n\trules for r2 to r13, plus CTR and XER.\n\t(CFA_REG): New, register number used to hold the local CFA.\n\t(CFI_DEF_CFA, SIGTRAMP_BODY): Use it.\n\tMake that 15, not 14, with documentation.\n\t(TCR): Undef before definition, preventing conflict with reg number in\n\tVxWorks headers.\n\n2011-11-07  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_util.ads, exp_alfa.adb, a-cohama.adb, a-cohama.ads, sem_ch4.adb,\n\taspects.ads, exp_ch8.adb, exp_ch8.ads, atree.ads: Minor reformatting.\n\t* gcc-interface/Make-lang.in: Update dependencies. \n\n2011-11-07  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch6.adb: A tagged type is a legal actual for an aliased\n\tformal.\n\n2011-11-07  Pascal Obry  <obry@adacore.com>\n\n\t* g-socket.adb, g-socket.ads: Minor reformatting.\n\n2011-11-07  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_res.adb (Resolve_Actuals): Minor error message improvement.\n\n2011-11-07  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_ugn.texi: Add discussion of default mode handling of\n\tsource representation with no -gnatW option given, in particular\n\tnoting that NEL (next line) is not recognized in this context.\n\nFrom-SVN: r181094", "tree": {"sha": "e96f3aeea76722f22537edf282bc60a2833720c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e96f3aeea76722f22537edf282bc60a2833720c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5bf33351aa47106647ccb7a37a956739595ea24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5bf33351aa47106647ccb7a37a956739595ea24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5bf33351aa47106647ccb7a37a956739595ea24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5bf33351aa47106647ccb7a37a956739595ea24/comments", "author": null, "committer": null, "parents": [{"sha": "9ee76313c4ae8b4a9b9f887ae67747017096c89d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ee76313c4ae8b4a9b9f887ae67747017096c89d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ee76313c4ae8b4a9b9f887ae67747017096c89d"}], "stats": {"total": 325, "additions": 205, "deletions": 120}, "files": [{"sha": "51b2719a387b8ca786ac389a658dda0f1d372026", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b5bf33351aa47106647ccb7a37a956739595ea24", "patch": "@@ -1,3 +1,39 @@\n+2011-11-07  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* sigtramp-ppcvxw.c: Add general comments.\n+\t(CFI_COMMON_REGS): Remove rule for r1, as in other unwinders. Add\n+\trules for r2 to r13, plus CTR and XER.\n+\t(CFA_REG): New, register number used to hold the local CFA.\n+\t(CFI_DEF_CFA, SIGTRAMP_BODY): Use it.\n+\tMake that 15, not 14, with documentation.\n+\t(TCR): Undef before definition, preventing conflict with reg number in\n+\tVxWorks headers.\n+\n+2011-11-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_util.ads, exp_alfa.adb, a-cohama.adb, a-cohama.ads, sem_ch4.adb,\n+\taspects.ads, exp_ch8.adb, exp_ch8.ads, atree.ads: Minor reformatting.\n+\t* gcc-interface/Make-lang.in: Update dependencies.\n+\n+2011-11-07  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch6.adb: A tagged type is a legal actual for an aliased\n+\tformal.\n+\n+2011-11-07  Pascal Obry  <obry@adacore.com>\n+\n+\t* g-socket.adb, g-socket.ads: Minor reformatting.\n+\n+2011-11-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Actuals): Minor error message improvement.\n+\n+2011-11-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_ugn.texi: Add discussion of default mode handling of\n+\tsource representation with no -gnatW option given, in particular\n+\tnoting that NEL (next line) is not recognized in this context.\n+\n 2011-11-07  Yannick Moy  <moy@adacore.com>\n \n \t* sem_util.adb (Note_Possible_Modification): In Alfa mode,"}, {"sha": "351030d3a7b897c58200339946d0868d8967ab19", "filename": "gcc/ada/a-cohama.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fa-cohama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fa-cohama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohama.adb?ref=b5bf33351aa47106647ccb7a37a956739595ea24", "patch": "@@ -846,34 +846,34 @@ package body Ada.Containers.Hashed_Maps is\n    ---------------\n \n    function Constant_Reference\n-     (Container : aliased Map; Position : Cursor)\n-   return Constant_Reference_Type\n+     (Container : aliased Map;\n+      Position  : Cursor) return Constant_Reference_Type\n    is\n       pragma Unreferenced (Container);\n    begin\n       return (Element => Element (Position)'Unrestricted_Access);\n    end Constant_Reference;\n \n    function Reference\n-     (Container : aliased in out Map; Position : Cursor)\n-   return Reference_Type\n+     (Container : aliased in out Map;\n+      Position  : Cursor) return Reference_Type\n    is\n       pragma Unreferenced (Container);\n    begin\n       return (Element => Element (Position)'Unrestricted_Access);\n    end Reference;\n \n    function Constant_Reference\n-     (Container : aliased Map; Key : Key_Type)\n-   return Constant_Reference_Type\n+     (Container : aliased Map;\n+      Key       : Key_Type) return Constant_Reference_Type\n    is\n    begin\n       return (Element => Container.Element (Key)'Unrestricted_Access);\n    end Constant_Reference;\n \n    function Reference\n-     (Container : aliased in out Map; Key : Key_Type)\n-   return Reference_Type\n+     (Container : aliased in out Map;\n+      Key       : Key_Type) return Reference_Type\n    is\n    begin\n       return (Element => Container.Element (Key)'Unrestricted_Access);"}, {"sha": "5f01994e8ad13975658a94ca7d6744bb42f2d7b2", "filename": "gcc/ada/a-cohama.ads", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fa-cohama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fa-cohama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohama.ads?ref=b5bf33351aa47106647ccb7a37a956739595ea24", "patch": "@@ -311,28 +311,28 @@ package Ada.Containers.Hashed_Maps is\n    for Reference_Type'Read use Read;\n \n    function Constant_Reference\n-     (Container : aliased Map; Position : Cursor)\n-   return Constant_Reference_Type;\n+     (Container : aliased Map;\n+      Position  : Cursor) return Constant_Reference_Type;\n \n    function Reference\n-     (Container : aliased in out Map; Position : Cursor)\n-   return Reference_Type;\n+     (Container : aliased in out Map;\n+      Position  : Cursor) return Reference_Type;\n \n    function Constant_Reference\n-     (Container : aliased Map; Key : Key_Type)\n-   return Constant_Reference_Type;\n+     (Container : aliased Map;\n+      Key       : Key_Type) return Constant_Reference_Type;\n \n    function Reference\n-     (Container : aliased in out Map; Key : Key_Type)\n-   return Reference_Type;\n+     (Container : aliased in out Map;\n+      Key       : Key_Type) return Reference_Type;\n \n    procedure Iterate\n      (Container : Map;\n       Process   : not null access procedure (Position : Cursor));\n    --  Calls Process for each node in the map\n \n-   function Iterate (Container : Map)\n-      return Map_Iterator_Interfaces.Forward_Iterator'class;\n+   function Iterate\n+     (Container : Map) return Map_Iterator_Interfaces.Forward_Iterator'class;\n \n private\n    pragma Inline (\"=\");"}, {"sha": "582a71e7a55d1c57817951bb31d9b62ee87d3431", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=b5bf33351aa47106647ccb7a37a956739595ea24", "patch": "@@ -180,13 +180,13 @@ package Aspects is\n    --  to the class-wide type as well.\n \n    Inherited_Aspect : constant array (Aspect_Id) of Boolean :=\n-     (Aspect_Constant_Indexing    => True,\n-      Aspect_Default_Iterator     => True,\n-      Aspect_Implicit_Dereference => True,\n-      Aspect_Iterator_Element     => True,\n-      Aspect_Remote_Types         => True,\n-      Aspect_Variable_Indexing    => True,\n-      others                      => False);\n+                        (Aspect_Constant_Indexing    => True,\n+                         Aspect_Default_Iterator     => True,\n+                         Aspect_Implicit_Dereference => True,\n+                         Aspect_Iterator_Element     => True,\n+                         Aspect_Remote_Types         => True,\n+                         Aspect_Variable_Indexing    => True,\n+                         others                      => False);\n \n    --  The following subtype defines aspects corresponding to library unit\n    --  pragmas, these can only validly appear as aspects for library units,"}, {"sha": "305e914f97c2686098f8dc1d6bb93edd9afc9817", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=b5bf33351aa47106647ccb7a37a956739595ea24", "patch": "@@ -151,16 +151,16 @@ package Atree is\n    --   it is useful to be able to do untyped traversals, and an internal\n    --   package in Atree allows for direct untyped accesses in such cases.\n \n-   --   Flag4         Sixteen Boolean flags (use depends on Nkind and\n+   --   Flag4         Fifteen Boolean flags (use depends on Nkind and\n    --   Flag5         Ekind, as described for FieldN). Again the access\n    --   Flag6         is usually via subprograms in Sinfo and Einfo which\n    --   Flag7         provide high-level synonyms for these flags, and\n    --   Flag8         contain debugging code that checks that the values\n    --   Flag9         in Nkind and Ekind are appropriate for the access.\n    --   Flag10\n-   --   Flag11        Note that Flag1-2 are missing from this list. For\n+   --   Flag11        Note that Flag1-3 are missing from this list. For\n    --   Flag12        historical reasons, these flag names are unused.\n-   --   Flag13        What about Flag3???\n+   --   Flag13\n    --   Flag14\n    --   Flag15\n    --   Flag16"}, {"sha": "ab0e40fae5bf6a447e849c440c26980064211c18", "filename": "gcc/ada/exp_alfa.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fexp_alfa.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fexp_alfa.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_alfa.adb?ref=b5bf33351aa47106647ccb7a37a956739595ea24", "patch": "@@ -297,13 +297,10 @@ package body Exp_Alfa is\n       T : constant Entity_Id := Etype (N);\n \n    begin\n-      --  Substitute a reference to a renaming with the actual renamed object\n+      --  Replace a reference to a renaming with the actual renamed object\n \n-      if Ekind (E) in Object_Kind\n-        and then Present (Renamed_Object (E))\n-      then\n+      if Ekind (E) in Object_Kind and then Present (Renamed_Object (E)) then\n          Rewrite (N, New_Copy_Tree (Renamed_Object (E)));\n-\n          Reset_Analyzed_Flags (N);\n          Analyze_And_Resolve (N, T);\n       end if;"}, {"sha": "6049c452cb8f3545672eb4a42f0220dc907cb53f", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=b5bf33351aa47106647ccb7a37a956739595ea24", "patch": "@@ -2652,10 +2652,13 @@ package body Exp_Ch6 is\n             end if;\n          end if;\n \n-         --  For Ada 2012, if a parameter is aliased, the actual must be an\n-         --  aliased object.\n+         --  For Ada 2012, if a parameter is aliased, the actual must be a\n+         --  tagged type or an aliased view of an object.\n \n-         if Is_Aliased (Formal) and then not Is_Aliased_View (Actual) then\n+         if Is_Aliased (Formal)\n+           and then not Is_Aliased_View (Actual)\n+           and then not Is_Tagged_Type (Etype (Formal))\n+         then\n             Error_Msg_NE\n               (\"actual for aliased formal& must be aliased object\",\n                Actual, Formal);"}, {"sha": "a0e9d4cf1befee7519b545d829729fdc443ded33", "filename": "gcc/ada/exp_ch8.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fexp_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fexp_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch8.adb?ref=b5bf33351aa47106647ccb7a37a956739595ea24", "patch": "@@ -50,7 +50,6 @@ package body Exp_Ch8 is\n \n    procedure Expand_N_Exception_Renaming_Declaration (N : Node_Id) is\n       Decl : constant Node_Id := Debug_Renaming_Declaration (N);\n-\n    begin\n       if Present (Decl) then\n          Insert_Action (N, Decl);"}, {"sha": "1dc066c0f4bcfd43d65723a63b1d06a2d6ff57fc", "filename": "gcc/ada/exp_ch8.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fexp_ch8.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fexp_ch8.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch8.ads?ref=b5bf33351aa47106647ccb7a37a956739595ea24", "patch": "@@ -32,5 +32,4 @@ package Exp_Ch8 is\n    procedure Expand_N_Object_Renaming_Declaration     (N : Node_Id);\n    procedure Expand_N_Package_Renaming_Declaration    (N : Node_Id);\n    procedure Expand_N_Subprogram_Renaming_Declaration (N : Node_Id);\n-\n end Exp_Ch8;"}, {"sha": "c0e0082185d88066a891e06702ada3deee378c92", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=b5bf33351aa47106647ccb7a37a956739595ea24", "patch": "@@ -353,7 +353,8 @@ package Exp_Util is\n \n    procedure Evaluate_Name (Nam : Node_Id);\n    --  Remove the all side effects from a name which appears as part of an\n-   --  object renaming declaration.\n+   --  object renaming declaration. More comments are needed here that explain\n+   --  how this differs from Force_Evaluation and Remove_Side_Effects ???\n \n    procedure Evolve_And_Then (Cond : in out Node_Id; Cond1 : Node_Id);\n    --  Rewrites Cond with the expression: Cond and then Cond1. If Cond is"}, {"sha": "d48065a23f52903933ff05465c17dac31fcec580", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=b5bf33351aa47106647ccb7a37a956739595ea24", "patch": "@@ -36,8 +36,8 @@ with Ada.Unchecked_Conversion;\n \n with Interfaces.C.Strings;\n \n-with GNAT.Sockets.Thin_Common;          use GNAT.Sockets.Thin_Common;\n-with GNAT.Sockets.Thin;                 use GNAT.Sockets.Thin;\n+with GNAT.Sockets.Thin_Common; use GNAT.Sockets.Thin_Common;\n+with GNAT.Sockets.Thin;        use GNAT.Sockets.Thin;\n \n with GNAT.Sockets.Linker_Options;\n pragma Warnings (Off, GNAT.Sockets.Linker_Options);\n@@ -246,11 +246,11 @@ package body GNAT.Sockets is\n    --  Type and Stream_Socket_Stream_Type.\n \n    procedure Wait_On_Socket\n-     (Socket    : Socket_Type;\n-      For_Read  : Boolean;\n-      Timeout   : Selector_Duration;\n-      Selector  : access Selector_Type := null;\n-      Status    : out Selector_Status);\n+     (Socket   : Socket_Type;\n+      For_Read : Boolean;\n+      Timeout  : Selector_Duration;\n+      Selector : access Selector_Type := null;\n+      Status   : out Selector_Status);\n    --  Common code for variants of socket operations supporting a timeout:\n    --  block in Check_Selector on Socket for at most the indicated timeout.\n    --  If For_Read is True, Socket is added to the read set for this call, else\n@@ -490,8 +490,8 @@ package body GNAT.Sockets is\n       --  that Fd is within range (otherwise behaviour is undefined).\n \n       elsif Fd < 0 or else Fd >= SOSC.FD_SETSIZE then\n-         raise Constraint_Error with \"invalid value for socket set: \"\n-                                       & Image (Fd);\n+         raise Constraint_Error\n+           with \"invalid value for socket set: \" & Image (Fd);\n       end if;\n    end Check_For_Fd_Set;\n \n@@ -731,11 +731,11 @@ package body GNAT.Sockets is\n       --  Wait for socket to become available for writing\n \n       Wait_On_Socket\n-        (Socket    => Socket,\n-         For_Read  => False,\n-         Timeout   => Timeout,\n-         Selector  => Selector,\n-         Status    => Status);\n+        (Socket   => Socket,\n+         For_Read => False,\n+         Timeout  => Timeout,\n+         Selector => Selector,\n+         Status   => Status);\n \n       --  Reset the socket to blocking I/O\n \n@@ -1580,11 +1580,11 @@ package body GNAT.Sockets is\n    --------------------\n \n    procedure Wait_On_Socket\n-     (Socket    : Socket_Type;\n-      For_Read  : Boolean;\n-      Timeout   : Selector_Duration;\n-      Selector  : access Selector_Type := null;\n-      Status    : out Selector_Status)\n+     (Socket   : Socket_Type;\n+      For_Read : Boolean;\n+      Timeout  : Selector_Duration;\n+      Selector : access Selector_Type := null;\n+      Status   : out Selector_Status)\n    is\n       type Local_Selector_Access is access Selector_Type;\n       for Local_Selector_Access'Storage_Size use Selector_Type'Size;"}, {"sha": "462556265a6880fbbfde21e98e750c962246fc77", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=b5bf33351aa47106647ccb7a37a956739595ea24", "patch": "@@ -432,8 +432,8 @@ package GNAT.Sockets is\n \n    Immediate : constant Duration := 0.0;\n \n-   Forever         : constant Duration :=\n-                       Duration'Min (Duration'Last, 1.0 * SOSC.MAX_tv_sec);\n+   Forever : constant Duration :=\n+               Duration'Min (Duration'Last, 1.0 * SOSC.MAX_tv_sec);\n    --  Largest possible Duration that is also a valid value for struct timeval\n \n    subtype Timeval_Duration is Duration range Immediate .. Forever;\n@@ -1146,7 +1146,6 @@ private\n             R_Sig_Socket : Socket_Type := No_Socket;\n             W_Sig_Socket : Socket_Type := No_Socket;\n             --  Signalling sockets used to abort a select operation\n-\n       end case;\n    end record;\n \n@@ -1234,10 +1233,10 @@ private\n    end record;\n \n    type Service_Entry_Type (Aliases_Length : Natural) is record\n-      Official  : Name_Type;\n-      Aliases   : Name_Array (1 .. Aliases_Length);\n-      Port      : Port_Type;\n-      Protocol  : Name_Type;\n+      Official : Name_Type;\n+      Aliases  : Name_Array (1 .. Aliases_Length);\n+      Port     : Port_Type;\n+      Protocol : Name_Type;\n    end record;\n \n    type Request_Flag_Type is mod 2 ** 8;"}, {"sha": "221d326c6aa6a24aa059de6c2450db765581115c", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 37, "deletions": 37, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=b5bf33351aa47106647ccb7a37a956739595ea24", "patch": "@@ -1773,7 +1773,7 @@ ada/exp_alfa.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n    ada/atree.adb ada/casing.ads ada/debug.ads ada/einfo.ads ada/einfo.adb \\\n    ada/exp_alfa.ads ada/exp_alfa.adb ada/exp_attr.ads ada/exp_ch4.ads \\\n-   ada/exp_ch6.ads ada/exp_ch8.ads ada/exp_dbug.ads ada/exp_tss.ads \\\n+   ada/exp_ch6.ads ada/exp_dbug.ads ada/exp_tss.ads ada/exp_util.ads \\\n    ada/gnat.ads ada/g-htable.ads ada/hostparm.ads ada/interfac.ads \\\n    ada/namet.ads ada/namet.adb ada/nlists.ads ada/nlists.adb ada/nmake.ads \\\n    ada/opt.ads ada/output.ads ada/rtsfind.ads ada/sem_aux.ads \\\n@@ -4070,42 +4070,42 @@ ada/sem_ch3.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/validsw.ads ada/warnsw.ads ada/widechar.ads \n \n ada/sem_ch4.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n-   ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/aspects.adb \\\n-   ada/atree.ads ada/atree.adb ada/casing.ads ada/checks.ads ada/csets.ads \\\n-   ada/debug.ads ada/debug_a.ads ada/einfo.ads ada/einfo.adb \\\n-   ada/elists.ads ada/elists.adb ada/err_vars.ads ada/errout.ads \\\n-   ada/errout.adb ada/erroutc.ads ada/erroutc.adb ada/eval_fat.ads \\\n-   ada/exp_ch11.ads ada/exp_ch6.ads ada/exp_ch7.ads ada/exp_code.ads \\\n-   ada/exp_disp.ads ada/exp_tss.ads ada/exp_util.ads ada/expander.ads \\\n-   ada/fname.ads ada/fname-uf.ads ada/freeze.ads ada/get_targ.ads \\\n-   ada/gnat.ads ada/g-hesorg.ads ada/g-htable.ads ada/gnatvsn.ads \\\n-   ada/hlo.ads ada/hostparm.ads ada/inline.ads ada/interfac.ads \\\n-   ada/itypes.ads ada/lib.ads ada/lib.adb ada/lib-list.adb \\\n-   ada/lib-load.ads ada/lib-sort.adb ada/lib-util.ads ada/lib-xref.ads \\\n-   ada/namet.ads ada/namet.adb ada/namet-sp.ads ada/nlists.ads \\\n-   ada/nlists.adb ada/nmake.ads ada/nmake.adb ada/opt.ads ada/output.ads \\\n-   ada/par_sco.ads ada/put_alfa.ads ada/restrict.ads ada/restrict.adb \\\n-   ada/rident.ads ada/rtsfind.ads ada/scans.ads ada/sem.ads ada/sem.adb \\\n-   ada/sem_aggr.ads ada/sem_attr.ads ada/sem_aux.ads ada/sem_aux.adb \\\n-   ada/sem_case.ads ada/sem_case.adb ada/sem_cat.ads ada/sem_ch10.ads \\\n-   ada/sem_ch11.ads ada/sem_ch12.ads ada/sem_ch13.ads ada/sem_ch2.ads \\\n-   ada/sem_ch3.ads ada/sem_ch4.ads ada/sem_ch4.adb ada/sem_ch5.ads \\\n-   ada/sem_ch6.ads ada/sem_ch7.ads ada/sem_ch8.ads ada/sem_ch9.ads \\\n-   ada/sem_disp.ads ada/sem_dist.ads ada/sem_elab.ads ada/sem_elim.ads \\\n-   ada/sem_eval.ads ada/sem_eval.adb ada/sem_intr.ads ada/sem_prag.ads \\\n-   ada/sem_res.ads ada/sem_res.adb ada/sem_type.ads ada/sem_util.ads \\\n-   ada/sem_util.adb ada/sem_warn.ads ada/sem_warn.adb ada/sinfo.ads \\\n-   ada/sinfo.adb ada/sinfo-cn.ads ada/sinput.ads ada/snames.ads \\\n-   ada/stand.ads ada/stringt.ads ada/stringt.adb ada/style.ads \\\n-   ada/styleg.ads ada/styleg.adb ada/stylesw.ads ada/system.ads \\\n-   ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads \\\n-   ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads \\\n-   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n-   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n-   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/targparm.ads \\\n-   ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads \\\n-   ada/types.ads ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n-   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/widechar.ads \n+   ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n+   ada/atree.adb ada/casing.ads ada/checks.ads ada/csets.ads ada/debug.ads \\\n+   ada/debug_a.ads ada/einfo.ads ada/einfo.adb ada/elists.ads \\\n+   ada/elists.adb ada/err_vars.ads ada/errout.ads ada/errout.adb \\\n+   ada/erroutc.ads ada/erroutc.adb ada/eval_fat.ads ada/exp_ch11.ads \\\n+   ada/exp_ch6.ads ada/exp_ch7.ads ada/exp_code.ads ada/exp_disp.ads \\\n+   ada/exp_tss.ads ada/exp_util.ads ada/expander.ads ada/fname.ads \\\n+   ada/fname-uf.ads ada/freeze.ads ada/get_targ.ads ada/gnat.ads \\\n+   ada/g-hesorg.ads ada/g-htable.ads ada/gnatvsn.ads ada/hlo.ads \\\n+   ada/hostparm.ads ada/inline.ads ada/interfac.ads ada/itypes.ads \\\n+   ada/lib.ads ada/lib.adb ada/lib-list.adb ada/lib-load.ads \\\n+   ada/lib-sort.adb ada/lib-util.ads ada/lib-xref.ads ada/namet.ads \\\n+   ada/namet.adb ada/namet-sp.ads ada/nlists.ads ada/nlists.adb \\\n+   ada/nmake.ads ada/nmake.adb ada/opt.ads ada/output.ads ada/par_sco.ads \\\n+   ada/put_alfa.ads ada/restrict.ads ada/restrict.adb ada/rident.ads \\\n+   ada/rtsfind.ads ada/scans.ads ada/sem.ads ada/sem.adb ada/sem_aggr.ads \\\n+   ada/sem_attr.ads ada/sem_aux.ads ada/sem_aux.adb ada/sem_case.ads \\\n+   ada/sem_case.adb ada/sem_cat.ads ada/sem_ch10.ads ada/sem_ch11.ads \\\n+   ada/sem_ch12.ads ada/sem_ch13.ads ada/sem_ch2.ads ada/sem_ch3.ads \\\n+   ada/sem_ch4.ads ada/sem_ch4.adb ada/sem_ch5.ads ada/sem_ch6.ads \\\n+   ada/sem_ch7.ads ada/sem_ch8.ads ada/sem_ch9.ads ada/sem_disp.ads \\\n+   ada/sem_dist.ads ada/sem_elab.ads ada/sem_elim.ads ada/sem_eval.ads \\\n+   ada/sem_eval.adb ada/sem_intr.ads ada/sem_prag.ads ada/sem_res.ads \\\n+   ada/sem_res.adb ada/sem_type.ads ada/sem_util.ads ada/sem_util.adb \\\n+   ada/sem_warn.ads ada/sem_warn.adb ada/sinfo.ads ada/sinfo.adb \\\n+   ada/sinfo-cn.ads ada/sinput.ads ada/snames.ads ada/stand.ads \\\n+   ada/stringt.ads ada/stringt.adb ada/style.ads ada/styleg.ads \\\n+   ada/styleg.adb ada/stylesw.ads ada/system.ads ada/s-exctab.ads \\\n+   ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads \\\n+   ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads \\\n+   ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n+   ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads \\\n+   ada/table.ads ada/table.adb ada/targparm.ads ada/tbuild.ads \\\n+   ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads ada/types.ads \\\n+   ada/uintp.ads ada/uintp.adb ada/uname.ads ada/unchconv.ads \\\n+   ada/unchdeal.ads ada/urealp.ads ada/widechar.ads \n \n ada/sem_ch5.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\"}, {"sha": "253cfff172b453c8973c763c7395886427570e88", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=b5bf33351aa47106647ccb7a37a956739595ea24", "patch": "@@ -7155,7 +7155,10 @@ used, it must be used consistently throughout the program. However,\n since brackets encoding is always recognized, it may be conveniently\n used in standard libraries, allowing these libraries to be used with\n any of the available coding schemes.\n-scheme.\n+\n+Note that brackets encoding only applies to program text. Within comments,\n+brackets are considered to be normal graphic characters, and bracket sequences\n+are never recognized as wide characters.\n \n If no @option{-gnatW?} parameter is present, then the default\n representation is normally Brackets encoding only. However, if the\n@@ -7169,6 +7172,27 @@ for Wide_Text_IO files if not specifically overridden by a WCEM form\n parameter.\n \n @end table\n+\n+When no @option{-gnatW?} is specified, then characters (other than wide\n+characters represented using brackets notation) are treated as 8-bit\n+Latin-1 codes. The codes recognized are the Latin-1 graphic characters,\n+and ASCII format effectors (CR, LF, HT, VT). Other lower half control\n+characters in the range 16#00#..16#1F# are not accepted in program text\n+or in comments. Upper half control characters (16#80#..16#9F#) are rejected\n+in program text, but allowed and ignored in comments. Note in particular\n+that the Next Line (NEL) character whose encoding is 16#85# is not recognized\n+as an end of line in this default mode. If your source program contains\n+instances of the NEL character used as a line terminator,\n+you must use UTF-8 encoding for the whole\n+source program. In default mode, all lines must be ended by a standard\n+end of line sequence (CR, CR/LF, or LF).\n+\n+Note that the convention of simply accepting all upper half characters in\n+comments means that programs that use standard ASCII for program text, but\n+UTF-8 encoding for comments are accepted in default mode, providing that the\n+comments are ended by an appropriate (CR, or CR/LF, or LF) line terminator.\n+This is a common mode for many programs with foreign language comments.\n+\n @node File Naming Control\n @subsection File Naming Control\n "}, {"sha": "4b438e13f1ca422a9c6eae253c4589628026cf03", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=b5bf33351aa47106647ccb7a37a956739595ea24", "patch": "@@ -6507,7 +6507,6 @@ package body Sem_Ch4 is\n                   --  Add implicit dereference interpretation\n \n                   Disc := First_Discriminant (Etype (It.Nam));\n-\n                   while Present (Disc) loop\n                      if Has_Implicit_Dereference (Disc) then\n                         Add_One_Interp\n@@ -6517,6 +6516,7 @@ package body Sem_Ch4 is\n \n                      Next_Discriminant (Disc);\n                   end loop;\n+\n                   exit;\n                end if;\n                Get_Next_Interp (I, It);"}, {"sha": "ad59f952252e990f1b4896fc42169b1bbc686144", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=b5bf33351aa47106647ccb7a37a956739595ea24", "patch": "@@ -3926,16 +3926,16 @@ package body Sem_Res is\n                if Is_Atomic_Object (A)\n                  and then not Is_Atomic (Etype (F))\n                then\n-                  Error_Msg_N\n-                    (\"cannot pass atomic argument to non-atomic formal\",\n-                     N);\n+                  Error_Msg_NE\n+                    (\"cannot pass atomic argument to non-atomic formal&\",\n+                     A, F);\n \n                elsif Is_Volatile_Object (A)\n                  and then not Is_Volatile (Etype (F))\n                then\n-                  Error_Msg_N\n-                    (\"cannot pass volatile argument to non-volatile formal\",\n-                     N);\n+                  Error_Msg_NE\n+                    (\"cannot pass volatile argument to non-volatile formal&\",\n+                     A, F);\n                end if;\n             end if;\n "}, {"sha": "bebe6572ee1b66dc2feb779feae92151d4a1b007", "filename": "gcc/ada/sigtramp-ppcvxw.c", "status": "modified", "additions": 37, "deletions": 10, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fsigtramp-ppcvxw.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bf33351aa47106647ccb7a37a956739595ea24/gcc%2Fada%2Fsigtramp-ppcvxw.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsigtramp-ppcvxw.c?ref=b5bf33351aa47106647ccb7a37a956739595ea24", "patch": "@@ -55,7 +55,11 @@\n    Checking which variant should apply and getting at sc_pregs is simpler\n    to express in C (we can't use offsetof in toplevel asms and hardcoding\n    constants is not workable with the flurry of VxWorks variants), so this\n-   is the choice for our toplevel interface.  */\n+   is the choice for our toplevel interface.\n+\n+   Note that the registers we \"restore\" here are those to which we have\n+   direct access through the system sigcontext structure, which includes\n+   only a partial set of the non-volatiles ABI-wise.  */\n \n /* -----------------------------------------\n    -- Protypes for our internal asm stubs --\n@@ -120,8 +124,9 @@ void __gnat_sigtramp (int signo, void *si, void *sc,\n /* REGNO constants, dwarf column numbers for registers of interest.  */\n \n #define REGNO_LR  65\n-#define REGNO_XER 76\n+#define REGNO_CTR 66\n #define REGNO_CR  70\n+#define REGNO_XER 76\n #define REGNO_GR(N) (N)\n \n #define REGNO_PC  67  /* ARG_POINTER_REGNUM  */\n@@ -139,6 +144,8 @@ void __gnat_sigtramp (int signo, void *si, void *sc,\n    multine contents:  */\n #define TAB(S) \"\\t\" S\n #define CR(S)  S \"\\n\"\n+\n+#undef TCR\n #define TCR(S) TAB(CR(S))\n \n /*------------------------------\n@@ -147,11 +154,18 @@ void __gnat_sigtramp (int signo, void *si, void *sc,\n \n /* CFA setup block\n    ---------------\n-   Only non-volatile registers are suitable for a CFA base.  We use r14\n-   here and set it to the value we need in stub body that follows.  */\n+   Only non-volatile registers are suitable for a CFA base. These are the\n+   only ones we can expect to be able retrieve from the unwinding context\n+   while walking up the chain, saved by at least the bottom-most exception\n+   propagation services.  We use r15 here and set it to the value we need\n+   in stub body that follows.  Note that r14 is inappropriate here, even\n+   though it is non-volatile according to the ABI, because GCC uses it as\n+   an extra SCRATCH on SPE targets.  */\n+\n+#define CFA_REG 15\n \n #define CFI_DEF_CFA \\\n-CR(\".cfi_def_cfa 14, 0\")\n+CR(\".cfi_def_cfa \" S(CFA_REG) \", 0\")\n \n /* Register location blocks\n    ------------------------\n@@ -164,7 +178,18 @@ CR(\".cfi_def_cfa 14, 0\")\n \n #define CFI_COMMON_REGS \\\n CR(\"# CFI for common registers\\n\") \\\n-TCR(COMMON_CFI(GR(1)))  \\\n+TCR(COMMON_CFI(GR(2)))  \\\n+TCR(COMMON_CFI(GR(3)))  \\\n+TCR(COMMON_CFI(GR(4)))  \\\n+TCR(COMMON_CFI(GR(5)))  \\\n+TCR(COMMON_CFI(GR(6)))  \\\n+TCR(COMMON_CFI(GR(7)))  \\\n+TCR(COMMON_CFI(GR(8)))  \\\n+TCR(COMMON_CFI(GR(9)))  \\\n+TCR(COMMON_CFI(GR(10)))  \\\n+TCR(COMMON_CFI(GR(11)))  \\\n+TCR(COMMON_CFI(GR(12)))  \\\n+TCR(COMMON_CFI(GR(13)))  \\\n TCR(COMMON_CFI(GR(14))) \\\n TCR(COMMON_CFI(GR(15))) \\\n TCR(COMMON_CFI(GR(16))) \\\n@@ -185,6 +210,8 @@ TCR(COMMON_CFI(GR(30))) \\\n TCR(COMMON_CFI(GR(31))) \\\n TCR(COMMON_CFI(LR)) \\\n TCR(COMMON_CFI(CR)) \\\n+TCR(COMMON_CFI(CTR)) \\\n+TCR(COMMON_CFI(XER)) \\\n TCR(COMMON_CFI(PC)) \\\n TCR(\".cfi_return_column \" S(REGNO_PC))\n \n@@ -198,18 +225,18 @@ TCR(\"# registers we're going to modify\") \\\n TCR(\"stwu %r1,-16(%r1)\")  \\\n TCR(\"mflr %r0\")\t\\\n TCR(\"stw %r0,20(%r1)\")\t\\\n-TCR(\"stw %r14,8(%r1)\")\t\\\n+TCR(\"stw %r\" S(CFA_REG) \",8(%r1)\")\t\\\n TCR(\"\")\t\t\t\\\n-TCR(\"# Setup r14 = sc_pregs, that we'll retrieve as our CFA value\") \\\n-TCR(\"mr %r14, %r7\") \\\n+TCR(\"# Setup CFA_REG = sc_pregs, that we'll retrieve as our CFA value\") \\\n+TCR(\"mr %r\" S(CFA_REG) \", %r7\") \\\n TCR(\"\")\t\t\t\\\n TCR(\"# Call the real handler. The signo, siginfo and sigcontext\") \\\n TCR(\"# arguments are the same as those we received in r3, r4 and r5\") \\\n TCR(\"mtctr %r6\") \\\n TCR(\"bctrl\")\t\\\n TCR(\"\")\t\t\\\n TCR(\"# Restore our callee-saved items, release our frame and return\") \\\n-TCR(\"lwz %r14,8(%r1)\")\t\\\n+TCR(\"lwz %r\" S(CFA_REG) \",8(%r1)\")\t\\\n TCR(\"lwz %r0,20(%r1)\")\t\\\n TCR(\"mtlr %r0\")\t\t\\\n TCR(\"\")\t\t\t\\"}]}