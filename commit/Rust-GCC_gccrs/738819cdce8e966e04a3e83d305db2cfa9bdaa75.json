{"sha": "738819cdce8e966e04a3e83d305db2cfa9bdaa75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM4ODE5Y2RjZThlOTY2ZTA0YTNlODNkMzA1ZGIyY2ZhOWJkYWE3NQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-02-15T09:32:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-02-15T09:32:35Z"}, "message": "s-parame-mingw.adb, [...]: Removed, replaced by s-parame.adb\n\n\t* s-parame-mingw.adb, s-parame-linux.adb,\n\ts-parame-solaris.adb: Removed, replaced by s-parame.adb\n\n\t* s-parame-vxworks.ads: Fix typo.\n\n\t* s-parame-vxworks.adb: New file.\n\n\t* s-parame.adb: Version now used by all native platforms.\n\t(Default_Stack_Size): Use 2 megs for default stack size and use\n\t__gl_default_stack_size when available.\n\t(Minimum_Stack_Size): Use 12K.\n\n\t* s-taprop-mingw.adb: Set default stack size linker switch to 2megs.\n\t(Create_Task): Refine implementation taking advantage of the XP stack\n\tsize support. On XP, we now create the thread using the flag\n\tSTACK_SIZE_PARAM_IS_A_RESERVATION.\n\n\t* s-osinte-mingw.ads (Stack_Size_Param_Is_A_Reservation): New constant.\n\n\t* sysdep.c (__gnat_is_windows_xp): New routine, returns 1 on Windows\n\tXP and 0 on older Windows versions.\n\n\t* interfac-vms.ads: Removed, no longer used.\n\nFrom-SVN: r111034", "tree": {"sha": "8736f59d63ae4441980493f8f378c8eab142e59d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8736f59d63ae4441980493f8f378c8eab142e59d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/738819cdce8e966e04a3e83d305db2cfa9bdaa75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/738819cdce8e966e04a3e83d305db2cfa9bdaa75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/738819cdce8e966e04a3e83d305db2cfa9bdaa75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/738819cdce8e966e04a3e83d305db2cfa9bdaa75/comments", "author": null, "committer": null, "parents": [{"sha": "ee45a6dda7e4170ad4ff320239f340a5ce17275a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee45a6dda7e4170ad4ff320239f340a5ce17275a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee45a6dda7e4170ad4ff320239f340a5ce17275a"}], "stats": {"total": 484, "additions": 99, "deletions": 385}, "files": [{"sha": "bdd0c59c72a1e22ae8d93e5a31c1abd2b1caf048", "filename": "gcc/ada/interfac-vms.ads", "status": "removed", "additions": 0, "deletions": 175, "changes": 175, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee45a6dda7e4170ad4ff320239f340a5ce17275a/gcc%2Fada%2Finterfac-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee45a6dda7e4170ad4ff320239f340a5ce17275a/gcc%2Fada%2Finterfac-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finterfac-vms.ads?ref=ee45a6dda7e4170ad4ff320239f340a5ce17275a", "patch": "@@ -1,175 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---                           I N T E R F A C E S                            --\n---                                                                          --\n---                                 S p e c                                  --\n---                                                                          --\n---          Copyright (C) 2002-2005, Free Software Foundation, Inc.         --\n---                                                                          --\n--- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the implementation dependent sections of this file.      --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is the OpenVMS version of this package which adds Float_Representation\n---  pragmas to the IEEE floating point types to ensure they remain IEEE in\n---  the presence of a configuration pragma Float_Representation (Vax_Float).\n-\n---  It assumes integer sizes of 8, 16, 32 and 64 are available, and that IEEE\n---  floating-point formats are available.\n-\n-package Interfaces is\n-   pragma Pure;\n-\n-   type Integer_8  is range -2 **  7 .. 2 **  7 - 1;\n-   for Integer_8'Size use  8;\n-\n-   type Integer_16 is range -2 ** 15 .. 2 ** 15 - 1;\n-   for Integer_16'Size use 16;\n-\n-   type Integer_32 is range -2 ** 31 .. 2 ** 31 - 1;\n-   for Integer_32'Size use 32;\n-\n-   type Integer_64 is range -2 ** 63 .. 2 ** 63 - 1;\n-   for Integer_64'Size use 64;\n-\n-   type Unsigned_8  is mod 2 **  8;\n-   for Unsigned_8'Size use  8;\n-\n-   type Unsigned_16 is mod 2 ** 16;\n-   for Unsigned_16'Size use 16;\n-\n-   type Unsigned_32 is mod 2 ** 32;\n-   for Unsigned_32'Size use 32;\n-\n-   type Unsigned_64 is mod 2 ** 64;\n-   for Unsigned_64'Size use 64;\n-\n-   function Shift_Left\n-     (Value  : Unsigned_8;\n-      Amount : Natural) return Unsigned_8;\n-\n-   function Shift_Right\n-     (Value  : Unsigned_8;\n-      Amount : Natural) return Unsigned_8;\n-\n-   function Shift_Right_Arithmetic\n-     (Value  : Unsigned_8;\n-      Amount : Natural) return Unsigned_8;\n-\n-   function Rotate_Left\n-     (Value  : Unsigned_8;\n-      Amount : Natural) return Unsigned_8;\n-\n-   function Rotate_Right\n-     (Value  : Unsigned_8;\n-      Amount : Natural) return Unsigned_8;\n-\n-   function Shift_Left\n-     (Value  : Unsigned_16;\n-      Amount : Natural) return Unsigned_16;\n-\n-   function Shift_Right\n-     (Value  : Unsigned_16;\n-      Amount : Natural) return Unsigned_16;\n-\n-   function Shift_Right_Arithmetic\n-     (Value  : Unsigned_16;\n-      Amount : Natural) return Unsigned_16;\n-\n-   function Rotate_Left\n-     (Value  : Unsigned_16;\n-      Amount : Natural) return Unsigned_16;\n-\n-   function Rotate_Right\n-     (Value  : Unsigned_16;\n-      Amount : Natural) return Unsigned_16;\n-\n-   function Shift_Left\n-     (Value  : Unsigned_32;\n-      Amount : Natural) return Unsigned_32;\n-\n-   function Shift_Right\n-     (Value  : Unsigned_32;\n-      Amount : Natural) return Unsigned_32;\n-\n-   function Shift_Right_Arithmetic\n-     (Value  : Unsigned_32;\n-      Amount : Natural) return Unsigned_32;\n-\n-   function Rotate_Left\n-     (Value  : Unsigned_32;\n-      Amount : Natural) return Unsigned_32;\n-\n-   function Rotate_Right\n-     (Value  : Unsigned_32;\n-      Amount : Natural) return Unsigned_32;\n-\n-   function Shift_Left\n-     (Value  : Unsigned_64;\n-      Amount : Natural) return Unsigned_64;\n-\n-   function Shift_Right\n-     (Value  : Unsigned_64;\n-      Amount : Natural) return Unsigned_64;\n-\n-   function Shift_Right_Arithmetic\n-     (Value  : Unsigned_64;\n-      Amount : Natural) return Unsigned_64;\n-\n-   function Rotate_Left\n-     (Value  : Unsigned_64;\n-      Amount : Natural) return Unsigned_64;\n-\n-   function Rotate_Right\n-     (Value  : Unsigned_64;\n-      Amount : Natural) return Unsigned_64;\n-\n-   pragma Import (Intrinsic, Shift_Left);\n-   pragma Import (Intrinsic, Shift_Right);\n-   pragma Import (Intrinsic, Shift_Right_Arithmetic);\n-   pragma Import (Intrinsic, Rotate_Left);\n-   pragma Import (Intrinsic, Rotate_Right);\n-\n-   --  Floating point types. We use the digits value to define the IEEE\n-   --  forms, otherwise a configuration pragma specifying VAX float can\n-   --  default the digits to an illegal value for IEEE.\n-\n-   --  Note: it is harmless, and explicitly permitted, to include additional\n-   --  types in interfaces, so it is not wrong to have IEEE_Extended_Float\n-   --  defined even if the extended format is not available.\n-\n-   type IEEE_Float_32       is digits 6;\n-   pragma Float_Representation (IEEE_Float, IEEE_Float_32);\n-\n-   type IEEE_Float_64       is digits 15;\n-   pragma Float_Representation (IEEE_Float, IEEE_Float_64);\n-\n-   type IEEE_Extended_Float is digits 15;\n-   pragma Float_Representation (IEEE_Float, IEEE_Extended_Float);\n-\n-end Interfaces;"}, {"sha": "8cc916a62d78301ec3206b47970279bed2ad4d80", "filename": "gcc/ada/s-osinte-mingw.ads", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/738819cdce8e966e04a3e83d305db2cfa9bdaa75/gcc%2Fada%2Fs-osinte-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/738819cdce8e966e04a3e83d305db2cfa9bdaa75/gcc%2Fada%2Fs-osinte-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-mingw.ads?ref=738819cdce8e966e04a3e83d305db2cfa9bdaa75", "patch": "@@ -253,19 +253,21 @@ package System.OS_Interface is\n       pThreadId            : PDWORD) return HANDLE;\n    pragma Import (C, BeginThreadEx, \"_beginthreadex\");\n \n-   Debug_Process              : constant := 16#00000001#;\n-   Debug_Only_This_Process    : constant := 16#00000002#;\n-   Create_Suspended           : constant := 16#00000004#;\n-   Detached_Process           : constant := 16#00000008#;\n-   Create_New_Console         : constant := 16#00000010#;\n+   Debug_Process                     : constant := 16#00000001#;\n+   Debug_Only_This_Process           : constant := 16#00000002#;\n+   Create_Suspended                  : constant := 16#00000004#;\n+   Detached_Process                  : constant := 16#00000008#;\n+   Create_New_Console                : constant := 16#00000010#;\n \n-   Create_New_Process_Group   : constant := 16#00000200#;\n+   Create_New_Process_Group          : constant := 16#00000200#;\n \n-   Create_No_window           : constant := 16#08000000#;\n+   Create_No_window                  : constant := 16#08000000#;\n \n-   Profile_User               : constant := 16#10000000#;\n-   Profile_Kernel             : constant := 16#20000000#;\n-   Profile_Server             : constant := 16#40000000#;\n+   Profile_User                      : constant := 16#10000000#;\n+   Profile_Kernel                    : constant := 16#20000000#;\n+   Profile_Server                    : constant := 16#40000000#;\n+\n+   Stack_Size_Param_Is_A_Reservation : constant := 16#00010000#;\n \n    function GetExitCodeThread\n      (hThread   : HANDLE;"}, {"sha": "d6bc023afbfb5d756930b24efe661a7979804d35", "filename": "gcc/ada/s-parame-mingw.adb", "status": "removed", "additions": 0, "deletions": 79, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee45a6dda7e4170ad4ff320239f340a5ce17275a/gcc%2Fada%2Fs-parame-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee45a6dda7e4170ad4ff320239f340a5ce17275a/gcc%2Fada%2Fs-parame-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-mingw.adb?ref=ee45a6dda7e4170ad4ff320239f340a5ce17275a", "patch": "@@ -1,79 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---                    S Y S T E M . P A R A M E T E R S                     --\n---                                                                          --\n---                                 B o d y                                  --\n---                                                                          --\n---          Copyright (C) 2004-2005, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is the Windows (native) specific version\n-\n-package body System.Parameters is\n-\n-   -------------------------\n-   -- Adjust_Storage_Size --\n-   -------------------------\n-\n-   function Adjust_Storage_Size (Size : Size_Type) return Size_Type is\n-   begin\n-      if Size = Unspecified_Size then\n-         return Default_Stack_Size;\n-\n-      elsif Size < Minimum_Stack_Size then\n-         return Minimum_Stack_Size;\n-\n-      else\n-         return Size;\n-      end if;\n-   end Adjust_Storage_Size;\n-\n-   ------------------------\n-   -- Default_Stack_Size --\n-   ------------------------\n-\n-   --  Note that on Windows this is not really the default stack size. It\n-   --  is the default used for the stack checking support but there is no\n-   --  way to set the thread stack size at runtime. Only the initial thread\n-   --  stack size can be specified. The real stack size limit is set at\n-   --  link time. See GNU/Linker --stack=x,y option.\n-\n-   function Default_Stack_Size return Size_Type is\n-   begin\n-      return 20 * 1024;\n-   end Default_Stack_Size;\n-\n-   ------------------------\n-   -- Minimum_Stack_Size --\n-   ------------------------\n-\n-   function Minimum_Stack_Size return Size_Type is\n-   begin\n-      return 1024;\n-   end Minimum_Stack_Size;\n-\n-end System.Parameters;"}, {"sha": "53f4496a16e190746ce2048ae9bf22abf81f4211", "filename": "gcc/ada/s-parame-solaris.adb", "status": "removed", "additions": 0, "deletions": 80, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee45a6dda7e4170ad4ff320239f340a5ce17275a/gcc%2Fada%2Fs-parame-solaris.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee45a6dda7e4170ad4ff320239f340a5ce17275a/gcc%2Fada%2Fs-parame-solaris.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-solaris.adb?ref=ee45a6dda7e4170ad4ff320239f340a5ce17275a", "patch": "@@ -1,80 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---                    S Y S T E M . P A R A M E T E R S                     --\n---                                                                          --\n---                                 B o d y                                  --\n---                                                                          --\n---          Copyright (C) 1998-2001 Free Software Foundation, Inc.          --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is the Solaris (native) specific version\n-\n-package body System.Parameters is\n-\n-   ------------------------\n-   -- Default_Stack_Size --\n-   ------------------------\n-\n-   function Default_Stack_Size return Size_Type is\n-   begin\n-      return 100_000;\n-   end Default_Stack_Size;\n-\n-   ------------------------\n-   -- Minimum_Stack_Size --\n-   ------------------------\n-\n-   function Minimum_Stack_Size return Size_Type is\n-\n-      thr_min_stack : constant Size_Type := 1160;\n-      --  hard coded value for Solaris 8 to avoid adding dependency on\n-      --  libthread for every Ada program.\n-      --  This value does not really matter anyway, since this is checked\n-      --  and adjusted at the library level when creating a thread.\n-\n-   begin\n-      return thr_min_stack;\n-   end Minimum_Stack_Size;\n-\n-   -------------------------\n-   -- Adjust_Storage_Size --\n-   -------------------------\n-\n-   function Adjust_Storage_Size (Size : Size_Type) return Size_Type is\n-   begin\n-      if Size = Unspecified_Size then\n-         return Default_Stack_Size;\n-\n-      elsif Size < Minimum_Stack_Size then\n-         return Minimum_Stack_Size;\n-\n-      else\n-         return Size;\n-      end if;\n-   end Adjust_Storage_Size;\n-\n-end System.Parameters;"}, {"sha": "fce8584d74c755170549ac58d08994ee745c7afa", "filename": "gcc/ada/s-parame-vxworks.adb", "status": "renamed", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/738819cdce8e966e04a3e83d305db2cfa9bdaa75/gcc%2Fada%2Fs-parame-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/738819cdce8e966e04a3e83d305db2cfa9bdaa75/gcc%2Fada%2Fs-parame-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vxworks.adb?ref=738819cdce8e966e04a3e83d305db2cfa9bdaa75", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1995-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1995-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,7 +31,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the Linux (native) specific version\n+--  Version used on all VxWorks targets.\n \n package body System.Parameters is\n \n@@ -43,10 +43,8 @@ package body System.Parameters is\n    begin\n       if Size = Unspecified_Size then\n          return Default_Stack_Size;\n-\n       elsif Size < Minimum_Stack_Size then\n          return Minimum_Stack_Size;\n-\n       else\n          return Size;\n       end if;\n@@ -57,8 +55,14 @@ package body System.Parameters is\n    ------------------------\n \n    function Default_Stack_Size return Size_Type is\n+      Default_Stack_Size : Integer;\n+      pragma Import (C, Default_Stack_Size, \"__gl_default_stack_size\");\n    begin\n-      return 2 * 1024 * 1024;\n+      if Default_Stack_Size = -1 then\n+         return 20 * 1024;\n+      else\n+         return Size_Type (Default_Stack_Size);\n+      end if;\n    end Default_Stack_Size;\n \n    ------------------------\n@@ -67,11 +71,7 @@ package body System.Parameters is\n \n    function Minimum_Stack_Size return Size_Type is\n    begin\n-      --  12K is required for stack-checking to work on this target, using the\n-      --  System.Stack_Checking runtime facility and possibly relying on the\n-      --  stack greedy GCC scheme to propagate an exception in the ZCX case.\n-\n-      return 12 * 1024;\n+      return 8 * 1024;\n    end Minimum_Stack_Size;\n \n end System.Parameters;", "previous_filename": "gcc/ada/s-parame-linux.adb"}, {"sha": "f9caec5d8987a6fe7939bc4f723c8416b5d58a0a", "filename": "gcc/ada/s-parame-vxworks.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/738819cdce8e966e04a3e83d305db2cfa9bdaa75/gcc%2Fada%2Fs-parame-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/738819cdce8e966e04a3e83d305db2cfa9bdaa75/gcc%2Fada%2Fs-parame-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vxworks.ads?ref=738819cdce8e966e04a3e83d305db2cfa9bdaa75", "patch": "@@ -31,7 +31,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the default VxWorks version of the package`\n+--  This is the default VxWorks version of the package\n \n --  This package defines some system dependent parameters for GNAT. These\n --  are values that are referenced by the runtime library and are therefore"}, {"sha": "67b0d4fb03d9a16c4dae7d97e7d262fdd7c1a820", "filename": "gcc/ada/s-parame.adb", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/738819cdce8e966e04a3e83d305db2cfa9bdaa75/gcc%2Fada%2Fs-parame.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/738819cdce8e966e04a3e83d305db2cfa9bdaa75/gcc%2Fada%2Fs-parame.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame.adb?ref=738819cdce8e966e04a3e83d305db2cfa9bdaa75", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1995-2001 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1995-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,6 +31,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+--  This is the default (used on all native platforms) version of this package\n+\n package body System.Parameters is\n \n    -------------------------\n@@ -41,10 +43,8 @@ package body System.Parameters is\n    begin\n       if Size = Unspecified_Size then\n          return Default_Stack_Size;\n-\n       elsif Size < Minimum_Stack_Size then\n          return Minimum_Stack_Size;\n-\n       else\n          return Size;\n       end if;\n@@ -55,8 +55,14 @@ package body System.Parameters is\n    ------------------------\n \n    function Default_Stack_Size return Size_Type is\n+      Default_Stack_Size : Integer;\n+      pragma Import (C, Default_Stack_Size, \"__gl_default_stack_size\");\n    begin\n-      return 20 * 1024;\n+      if Default_Stack_Size = -1 then\n+         return 2 * 1024 * 1024;\n+      else\n+         return Size_Type (Default_Stack_Size);\n+      end if;\n    end Default_Stack_Size;\n \n    ------------------------\n@@ -65,7 +71,10 @@ package body System.Parameters is\n \n    function Minimum_Stack_Size return Size_Type is\n    begin\n-      return 8 * 1024;\n+      --  12K is required for stack-checking to work reliably on most platforms\n+      --  when using the GCC scheme to propagate an exception in the ZCX case.\n+\n+      return 12 * 1024;\n    end Minimum_Stack_Size;\n \n end System.Parameters;"}, {"sha": "7280f646dd26c4f183432eab2b178ce7f629dfc6", "filename": "gcc/ada/s-taprop-mingw.adb", "status": "modified", "additions": 32, "deletions": 22, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/738819cdce8e966e04a3e83d305db2cfa9bdaa75/gcc%2Fada%2Fs-taprop-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/738819cdce8e966e04a3e83d305db2cfa9bdaa75/gcc%2Fada%2Fs-taprop-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-mingw.adb?ref=738819cdce8e966e04a3e83d305db2cfa9bdaa75", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2005, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2006, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -53,12 +53,6 @@ with Interfaces.C;\n with Interfaces.C.Strings;\n --  used for Null_Ptr\n \n-with System.OS_Interface;\n---  used for various type, constant, and operations\n-\n-with System.Parameters;\n---  used for Size_Type\n-\n with System.Task_Info;\n --  used for Unspecified_Task_Info\n \n@@ -74,10 +68,12 @@ package body System.Task_Primitives.Operations is\n    use System.Parameters;\n    use System.OS_Primitives;\n \n-   pragma Link_With (\"-Xlinker --stack=0x800000,0x1000\");\n-   --  Change the stack size (8 MB) for tasking programs on Windows. This\n-   --  permit to have more than 30 tasks running at the same time. Note that\n+   pragma Link_With (\"-Xlinker --stack=0x200000,0x1000\");\n+   --  Change the default stack size (2 MB) for tasking programs on Windows.\n+   --  This allows about 1000 tasks running at the same time. Note that\n    --  we set the stack size for non tasking programs on System unit.\n+   --  Also note that under Windows XP, we use a Windows XP extension to\n+   --  specify the stack size on a per task basis, as done under other OSes.\n \n    ----------------\n    -- Local Data --\n@@ -818,12 +814,15 @@ package body System.Task_Primitives.Operations is\n       Priority   : System.Any_Priority;\n       Succeeded  : out Boolean)\n    is\n-      pragma Unreferenced (Stack_Size);\n-\n       Initial_Stack_Size : constant := 1024;\n-      --  We set the initial stack size to 1024. On Windows there is no way to\n-      --  fix a task stack size. Only the initial stack size can be set, the\n-      --  operating system will raise the task stack size if needed.\n+      --  We set the initial stack size to 1024. On Windows version prior to XP\n+      --  there is no way to fix a task stack size. Only the initial stack size\n+      --  can be set, the operating system will raise the task stack size if\n+      --  needed.\n+\n+      function Is_Windows_XP return Integer;\n+      pragma Import (C, Is_Windows_XP, \"__gnat_is_windows_xp\");\n+      --  Returns 1 if running on Windows XP\n \n       hTask          : HANDLE;\n       TaskId         : aliased DWORD;\n@@ -836,13 +835,24 @@ package body System.Task_Primitives.Operations is\n \n       Entry_Point := To_PTHREAD_START_ROUTINE (Wrapper);\n \n-      hTask := CreateThread\n-         (null,\n-          Initial_Stack_Size,\n-          Entry_Point,\n-          pTaskParameter,\n-          DWORD (Create_Suspended),\n-          TaskId'Unchecked_Access);\n+      if Is_Windows_XP = 1 then\n+         hTask := CreateThread\n+           (null,\n+            DWORD (Stack_Size),\n+            Entry_Point,\n+            pTaskParameter,\n+            DWORD (Create_Suspended) or\n+              DWORD (Stack_Size_Param_Is_A_Reservation),\n+            TaskId'Unchecked_Access);\n+      else\n+         hTask := CreateThread\n+           (null,\n+            Initial_Stack_Size,\n+            Entry_Point,\n+            pTaskParameter,\n+            DWORD (Create_Suspended),\n+            TaskId'Unchecked_Access);\n+      end if;\n \n       --  Step 1: Create the thread in blocked mode\n "}, {"sha": "376a3655542f1e98a7ff1f74af8e53a9ef4651a3", "filename": "gcc/ada/sysdep.c", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/738819cdce8e966e04a3e83d305db2cfa9bdaa75/gcc%2Fada%2Fsysdep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/738819cdce8e966e04a3e83d305db2cfa9bdaa75/gcc%2Fada%2Fsysdep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsysdep.c?ref=738819cdce8e966e04a3e83d305db2cfa9bdaa75", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2005 Free Software Foundation, Inc.          *\n+ *         Copyright (C) 1992-2006, Free Software Foundation, Inc.          *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -212,6 +212,8 @@ static void winflush_95 (void);\n \n static void winflush_nt (void);\n \n+int __gnat_is_windows_xp (void);\n+\n /* winflusfunction is set first to the winflushinit function which will check\n    the OS version 95/98 or NT/2000 */\n \n@@ -234,15 +236,40 @@ winflush_init (void)\n \n }\n \n-static void winflush_95 (void)\n+static void\n+winflush_95 (void)\n {\n   FlushConsoleInputBuffer (GetStdHandle (STD_INPUT_HANDLE));\n }\n \n-static void winflush_nt (void)\n+static void\n+winflush_nt (void)\n {\n   /* Does nothing as there is no problem under NT.  */\n }\n+\n+int\n+__gnat_is_windows_xp (void)\n+{\n+  static int is_win_xp=0, is_win_xp_checked=0;\n+\n+  if (!is_win_xp_checked)\n+    {\n+      OSVERSIONINFO version;\n+\n+      is_win_xp_checked = 1;\n+\n+      memset (&version, 0, sizeof (version));\n+      version.dwOSVersionInfoSize = sizeof (version);\n+\n+      is_win_xp = GetVersionEx (&version)\n+        && version.dwPlatformId == VER_PLATFORM_WIN32_NT\n+        && (version.dwMajorVersion > 5\n+            || (version.dwMajorVersion == 5 && version.dwMinorVersion >= 1));\n+    }\n+  return is_win_xp;\n+}\n+\n #endif\n \n #else"}]}