{"sha": "0310e5ac708a17fbbdaa3dafcbd8d6d5f7448273", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDMxMGU1YWM3MDhhMTdmYmJkYWEzZGFmY2JkOGQ2ZDVmNzQ0ODI3Mw==", "commit": {"author": {"name": "Andrew Cagney", "email": "ac131313@redhat.com", "date": "2001-08-21T00:09:09Z"}, "committer": {"name": "Andrew Cagney", "email": "cagney@gcc.gnu.org", "date": "2001-08-21T00:09:09Z"}, "message": "floatformat.h (floatformat_arm_ext): Document as deprecated.\n\n* floatformat.h (floatformat_arm_ext): Document as deprecated.\n(floatformat_arm_ext_big, floatformat_arm_ext_littlebyte_bigword)\n(floatformat_ia64_spill_little, floatformat_ia64_quad_little)\n(floatformat_ia64_spill_big, floatformat_ia64_quad_big)\n(floatformat_m88110_harris_ext): Declare.\n\nFrom-SVN: r45065", "tree": {"sha": "8509d44f7acc0132db7b1864cd566239c50c41a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8509d44f7acc0132db7b1864cd566239c50c41a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0310e5ac708a17fbbdaa3dafcbd8d6d5f7448273", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0310e5ac708a17fbbdaa3dafcbd8d6d5f7448273", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0310e5ac708a17fbbdaa3dafcbd8d6d5f7448273", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0310e5ac708a17fbbdaa3dafcbd8d6d5f7448273/comments", "author": null, "committer": null, "parents": [{"sha": "9b95b06353d86a57d417f7f04486bdda0ea9ea38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b95b06353d86a57d417f7f04486bdda0ea9ea38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b95b06353d86a57d417f7f04486bdda0ea9ea38"}], "stats": {"total": 79, "additions": 71, "deletions": 8}, "files": [{"sha": "b47b728cf4ae32857f26cde2cdf7da7af770903d", "filename": "include/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0310e5ac708a17fbbdaa3dafcbd8d6d5f7448273/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0310e5ac708a17fbbdaa3dafcbd8d6d5f7448273/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=0310e5ac708a17fbbdaa3dafcbd8d6d5f7448273", "patch": "@@ -1,3 +1,11 @@\n+2001-08-20  Andrew Cagney  <ac131313@redhat.com>\n+\n+\t* floatformat.h (floatformat_arm_ext): Document as deprecated.\n+\t(floatformat_arm_ext_big, floatformat_arm_ext_littlebyte_bigword)\n+\t(floatformat_ia64_spill_little, floatformat_ia64_quad_little)\n+\t(floatformat_ia64_spill_big, floatformat_ia64_quad_big)\n+\t(floatformat_m88110_harris_ext): Declare.\n+\n 2001-08-20  Daniel Berlin  <dan@cgsoftware.com>\n \n \t* fibheap.h: New file. Fibonacci heap."}, {"sha": "0cd09befb475caa19210e1281527bfdeeb51402e", "filename": "include/floatformat.h", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0310e5ac708a17fbbdaa3dafcbd8d6d5f7448273/include%2Ffloatformat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0310e5ac708a17fbbdaa3dafcbd8d6d5f7448273/include%2Ffloatformat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Ffloatformat.h?ref=0310e5ac708a17fbbdaa3dafcbd8d6d5f7448273", "patch": "@@ -95,7 +95,15 @@ extern const struct floatformat floatformat_i387_ext;\n extern const struct floatformat floatformat_m68881_ext;\n extern const struct floatformat floatformat_i960_ext;\n extern const struct floatformat floatformat_m88110_ext;\n-extern const struct floatformat floatformat_arm_ext;\n+extern const struct floatformat floatformat_m88110_harris_ext;\n+extern const struct floatformat floatformat_arm_ext; /* deprecated. */\n+extern const struct floatformat floatformat_arm_ext_big;\n+extern const struct floatformat floatformat_arm_ext_littlebyte_bigword;\n+/* IA-64 Floating Point register spilt into memory.  */\n+extern const struct floatformat floatformat_ia64_spill_big;\n+extern const struct floatformat floatformat_ia64_spill_little;\n+extern const struct floatformat floatformat_ia64_quad_big;\n+extern const struct floatformat floatformat_ia64_quad_little;\n \n /* Convert from FMT to a double.\n    FROM is the address of the extended float."}, {"sha": "cec4c80cd948213e09d2aa5bb2fd5d101765129c", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0310e5ac708a17fbbdaa3dafcbd8d6d5f7448273/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0310e5ac708a17fbbdaa3dafcbd8d6d5f7448273/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=0310e5ac708a17fbbdaa3dafcbd8d6d5f7448273", "patch": "@@ -1,3 +1,12 @@\n+2001-08-20  Andrew Cagney  <ac131313@redhat.com>\n+\n+\t* floatformat.c (floatformat_m88110_ext): Remove #ifdef\n+\tHARRIS_FLOAT_FORMAT.\n+\t(floatformat_ia64_spill_little, floatformat_ia64_quad_little)\n+\t(floatformat_ia64_spill_big, floatformat_ia64_quad_big)\n+\t(floatformat_arm_ext_big, floatformat_arm_ext_littlebyte_bigword)\n+\t(floatformat_m88110_harris_ext): New float formats.\n+\n 2001-08-20  Daniel Berlin  <dan@cgsoftware.com>\n \n \t* fibheap.c: New file. Fibonacci heap."}, {"sha": "b5d0121aad7498828aace7a6afb5a03ef9e2ab63", "filename": "libiberty/floatformat.c", "status": "modified", "additions": 45, "deletions": 7, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0310e5ac708a17fbbdaa3dafcbd8d6d5f7448273/libiberty%2Ffloatformat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0310e5ac708a17fbbdaa3dafcbd8d6d5f7448273/libiberty%2Ffloatformat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ffloatformat.c?ref=0310e5ac708a17fbbdaa3dafcbd8d6d5f7448273", "patch": "@@ -91,17 +91,17 @@ const struct floatformat floatformat_i960_ext =\n };\n const struct floatformat floatformat_m88110_ext =\n {\n-#ifdef HARRIS_FLOAT_FORMAT\n+  floatformat_big, 80, 0, 1, 15, 0x3fff, 0x7fff, 16, 64,\n+  floatformat_intbit_yes,\n+  \"floatformat_m88110_ext\"\n+};\n+const struct floatformat floatformat_m88110_harris_ext =\n+{\n   /* Harris uses raw format 128 bytes long, but the number is just an ieee\n      double, and the last 64 bits are wasted. */\n   floatformat_big,128, 0, 1, 11,  0x3ff,  0x7ff, 12, 52,\n   floatformat_intbit_no,\n-  \"floatformat_m88110_ext(harris)\"\n-#else\n-  floatformat_big, 80, 0, 1, 15, 0x3fff, 0x7fff, 16, 64,\n-  floatformat_intbit_yes,\n-  \"floatformat_m88110_ext\"\n-#endif /* HARRIS_FLOAT_FORMAT */\n+  \"floatformat_m88110_ext_harris\"\n };\n const struct floatformat floatformat_arm_ext =\n {\n@@ -110,6 +110,44 @@ const struct floatformat floatformat_arm_ext =\n   floatformat_intbit_yes,\n   \"floatformat_arm_ext\"\n };\n+const struct floatformat floatformat_arm_ext_big =\n+{\n+  /* Bits 1 to 16 are unused.  */\n+  floatformat_big, 96, 0, 17, 15, 0x3fff, 0x7fff, 32, 64,\n+  floatformat_intbit_yes,\n+  \"floatformat_arm_ext_big\"\n+};\n+const struct floatformat floatformat_arm_ext_littlebyte_bigword =\n+{\n+  /* Bits 1 to 16 are unused.  */\n+  floatformat_littlebyte_bigword, 96, 0, 17, 15, 0x3fff, 0x7fff, 32, 64,\n+  floatformat_intbit_yes,\n+  \"floatformat_arm_ext_littlebyte_bigword\"\n+};\n+const struct floatformat floatformat_ia64_spill_big =\n+{\n+  floatformat_big, 128, 0, 1, 17, 65535, 0x1ffff, 18, 64,\n+  floatformat_intbit_yes,\n+  \"floatformat_ia64_spill_big\"\n+};\n+const struct floatformat floatformat_ia64_spill_little =\n+{\n+  floatformat_little, 128, 0, 1, 17, 65535, 0x1ffff, 18, 64,\n+  floatformat_intbit_yes,\n+  \"floatformat_ia64_spill_little\"\n+};\n+const struct floatformat floatformat_ia64_quad_big =\n+{\n+  floatformat_big, 128, 0, 1, 15, 16383, 0x7fff, 16, 112,\n+  floatformat_intbit_no,\n+  \"floatformat_ia64_quad_big\"\n+};\n+const struct floatformat floatformat_ia64_quad_little =\n+{\n+  floatformat_little, 128, 0, 1, 15, 16383, 0x7fff, 16, 112,\n+  floatformat_intbit_no,\n+  \"floatformat_ia64_quad_little\"\n+};\n \f\n static unsigned long get_field PARAMS ((unsigned char *,\n \t\t\t\t\tenum floatformat_byteorders,"}]}