{"sha": "f9f45c6543a717b5294fa827012b739042e5e722", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjlmNDVjNjU0M2E3MTdiNTI5NGZhODI3MDEyYjczOTA0MmU1ZTcyMg==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@redhat.com", "date": "2002-01-17T07:53:56Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2002-01-17T07:53:56Z"}, "message": "r3900.h: Reformat.\n\n2002-01-16  Eric Christopher  <echristo@redhat.com>\n\n\t* config/mips/r3900.h: Reformat.\n\t(SUBTARGET_CPP_SIZE_SPEC): Remove.\n\t* config/mips/isa3264.h (SUBTARGET_CPP_SIZE_SPEC): Ditto.\n\t* config/mips/mips.h (ABI_GAS_ASM_SPEC): Default to \"\".\n\t(SUBTARGET_CPP_SIZE_SPEC): Rewrite.\n\t* config/mips/t-elf: Remove mips3 multilib.\n\nFrom-SVN: r48942", "tree": {"sha": "04a7f97127102956f0fbcae6ce9e989f22c05293", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04a7f97127102956f0fbcae6ce9e989f22c05293"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9f45c6543a717b5294fa827012b739042e5e722", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9f45c6543a717b5294fa827012b739042e5e722", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9f45c6543a717b5294fa827012b739042e5e722", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9f45c6543a717b5294fa827012b739042e5e722/comments", "author": {"login": "echristo", "id": 327308, "node_id": "MDQ6VXNlcjMyNzMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/327308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/echristo", "html_url": "https://github.com/echristo", "followers_url": "https://api.github.com/users/echristo/followers", "following_url": "https://api.github.com/users/echristo/following{/other_user}", "gists_url": "https://api.github.com/users/echristo/gists{/gist_id}", "starred_url": "https://api.github.com/users/echristo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/echristo/subscriptions", "organizations_url": "https://api.github.com/users/echristo/orgs", "repos_url": "https://api.github.com/users/echristo/repos", "events_url": "https://api.github.com/users/echristo/events{/privacy}", "received_events_url": "https://api.github.com/users/echristo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "654421eb8adb49ae7681808f53babcfc7624a872", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/654421eb8adb49ae7681808f53babcfc7624a872", "html_url": "https://github.com/Rust-GCC/gccrs/commit/654421eb8adb49ae7681808f53babcfc7624a872"}], "stats": {"total": 351, "additions": 187, "deletions": 164}, "files": [{"sha": "ba33e40024c05620af8919d00548c0d2c0f6f730", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f45c6543a717b5294fa827012b739042e5e722/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f45c6543a717b5294fa827012b739042e5e722/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f9f45c6543a717b5294fa827012b739042e5e722", "patch": "@@ -1,3 +1,12 @@\n+2002-01-16  Eric Christopher  <echristo@redhat.com>\n+\n+\t* config/mips/r3900.h: Reformat.\n+\t(SUBTARGET_CPP_SIZE_SPEC): Remove.\n+\t* config/mips/isa3264.h (SUBTARGET_CPP_SIZE_SPEC): Ditto.\n+\t* config/mips/mips.h (ABI_GAS_ASM_SPEC): Default to \"\".\n+\t(SUBTARGET_CPP_SIZE_SPEC): Rewrite.\n+\t* config/mips/t-elf: Remove mips3 multilib.\n+\n 2002-01-16  H.J. Lu <hjl@gnu.org>\n \n \t* config/mips/linux.h: Include \"mips/abi64.h\"."}, {"sha": "fc2b2894225b6c48f73f4c05eb7f379dd1329fbf", "filename": "gcc/config/mips/isa3264.h", "status": "modified", "additions": 0, "deletions": 105, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f45c6543a717b5294fa827012b739042e5e722/gcc%2Fconfig%2Fmips%2Fisa3264.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f45c6543a717b5294fa827012b739042e5e722/gcc%2Fconfig%2Fmips%2Fisa3264.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fisa3264.h?ref=f9f45c6543a717b5294fa827012b739042e5e722", "patch": "@@ -37,114 +37,9 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"mips/elf.h\"\n \n-/* This must be done after including mips.h so that the\n-   ABI_{EABI,O64,O32,...} are #defined.  */\n-\n-#if MIPS_ABI_DEFAULT == ABI_EABI\n-#undef  SUBTARGET_CPP_SIZE_SPEC\n-#define SUBTARGET_CPP_SIZE_SPEC \"\\\n-%{mabi=eabi|!mabi=*:\\\n-  %{mips1|mips2|mips32|mlong32: -D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n-  %{!mips1:%{!mips2:%{!mips32:%{!mlong32:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int}}}}} \\\n-%{mabi=o64:\\\n- %{mlong64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n- %{!mlong64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}} \\\n-%{mabi=32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n-\"\n-#endif\n-\n-#if MIPS_ABI_DEFAULT == ABI_O64\n-#undef  SUBTARGET_CPP_SIZE_SPEC\n-#define SUBTARGET_CPP_SIZE_SPEC \"\\\n-%{mabi=eabi:\\\n-  %{mips1|mips2|mips32|mlong32: -D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n-  %{!mips1:%{!mips2:%{!mips32:%{!mlong32:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int}}}}} \\\n-%{mabi=o64|!mabi=*:\\\n- %{mlong64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n- %{!mlong64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}} \\\n-%{mabi=32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n-\"\n-#endif\n-\n-#if MIPS_ABI_DEFAULT == ABI_32\n-#if MIPS_ISA_DEFAULT == 3 || MIPS_ISA_DEFAULT == 4 || MIPS_ISA_DEFAULT == 5 || MIPS_ISA_DEFAULT == 64\n-#undef  SUBTARGET_CPP_SIZE_SPEC\n-#define SUBTARGET_CPP_SIZE_SPEC \"\\\n-%{mabi=eabi:\\\n-  %{mips1|mips2|mips32|mlong32: -D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n-  %{!mips1:%{!mips2:%{!mips32:%{!mlong32:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int}}}}} \\\n-%{mabi=o64|!!mabi=*:\\\n- %{mlong64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n- %{!mlong64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}} \\\n-%{mabi=32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n-\"\n-#else /* not a 64bit default ISA */\n-#undef  SUBTARGET_CPP_SIZE_SPEC\n-#define SUBTARGET_CPP_SIZE_SPEC \"\\\n-%{mabi=eabi:\\\n-  %{mips3|mips4|mips5|mips64|mlong64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n-  %{!mips3:%{!mips4:%{!mips5:%{!mips64:%{!mlong64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}}}}}} \\\n-%{mabi=o64:\\\n- %{mlong64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n- %{!mlong64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}} \\\n-%{mabi=32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n-%{!mabi=*:\\\n- %{mips3|mips4|mips5|mips64:\\\n-  %{mlong64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n-  %{!mlong64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}} \\\n- %{!mips3:%{!mips4:%{!mips5:%{!mips64:\\\n-  -D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}}}}} \\\n-\"\n-#endif /* ISA */\n-#endif\n-\n #if MIPS_ABI_DEFAULT == ABI_MEABI\n /* For MEABI, don't link with crt0 files, let the linker start files specify\n    the appropriate crt0 file.  */\n #undef  STARTFILE_SPEC\n #define STARTFILE_SPEC \"crti%O%s crtbegin%O%s %{!mno-crt0: }\"\n-\n-/*\n-   The MIPS_ISA_DEFAULT test is for EABI, in which the size of longs depends on\n-   the ISA.\n-\n-   For MEABI the size of longs is always 32bits.  If long64 is specified then\n-   we honor that.  The errors for long64 & long32 is because while CC1 can\n-   handle overriding mlong32 with mlong64 and vise-versa, the specs cannot.  */\n-\n-#if MIPS_ISA_DEFAULT == 3 || MIPS_ISA_DEFAULT == 4 || MIPS_ISA_DEFAULT == 5 || MIPS_ISA_DEFAULT == 64\n-#undef  SUBTARGET_CPP_SIZE_SPEC\n-#define SUBTARGET_CPP_SIZE_SPEC \"\\\n-%{mabi=meabi:\\\n-  %{mips1|mips2|mips32|mlong32: -D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n-  %{!mips1:%{!mips2:%{!mips32:%{!mlong32:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int}}}}} \\\n-%{mabi=o64:\\\n- %{mlong64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int \\\n-  %{mlong32:%e-mlong32 and -mlong64 can not both be specified}} \\\n- %{!mlong64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int }} \\\n-%{mabi=32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n-%{mabi=meabi|!mabi=*:\\\n- %{mlong64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int \\\n-  %{mlong32:%e-mlong32 and -mlong64 can not both be specified}} \\\n- %{!mlong64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int }} \\\n-\"\n-\n-#else /* not a 64bit default ISA */\n-#undef  SUBTARGET_CPP_SIZE_SPEC\n-#define SUBTARGET_CPP_SIZE_SPEC \"\\\n-%{mabi=meabi:\\\n-  %{mips3|mips4|mips5|mips64|mlong64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n-  %{!mips3:%{!mips4:%{!mips5:%{!mips64:%{!mlong64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}}}}}} \\\n-%{mabi=o64:\\\n- %{mlong64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int \\\n-  %{mlong32:%e-mlong32 and -mlong64 can not both be specified}} \\\n- %{!mlong64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int }} \\\n-%{mabi=32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n-%{mabi=meabi|!mabi=*:\\\n- %{mlong64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int \\\n-  %{mlong32:%e-mlong32 and -mlong64 can not both be specified}} \\\n- %{!mlong64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int }} \\\n-\"\n-#endif /* ISA */\n #endif\n-"}, {"sha": "8653942c4dac5e1168b47e512add2dc7e88b43a7", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 165, "deletions": 37, "changes": 202, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f45c6543a717b5294fa827012b739042e5e722/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f45c6543a717b5294fa827012b739042e5e722/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=f9f45c6543a717b5294fa827012b739042e5e722", "patch": "@@ -867,47 +867,14 @@ while (0)\n #define GAS_ASM_SPEC \"%{march=*} %{mtune=*} %{mcpu=*} %{m4650} %{mmad:-m4650} %{m3900} %{v} %{mgp32} %{mgp64} %(abi_gas_asm_spec) %{mabi=32:%{!mips*:-mips1}}\"\n \n \n-/* We use the o32 abi as default for mips1 and mips2.  SGI uses n32/n64 for\n-   mips3 and mips4 by default, however, this is unsupported at this point in\n-   binutils so we use o64. This should change when n32/n64 is supported.  */\n-\n extern int mips_abi;\n \n #ifndef MIPS_ABI_DEFAULT\n #define MIPS_ABI_DEFAULT ABI_32\n #endif\n \n-#if MIPS_ABI_DEFAULT == ABI_32\n-#define ABI_GAS_ASM_SPEC \"%{mabi=*} \\\n-%{!mabi=*:%{mips3|mips4|mips5|mips64:-mabi=o64} %{!mips3:%{!mips4:%{!mips5:%{!mips64:-mabi=32}}}}}\"\n-#endif\n-\n-#if MIPS_ABI_DEFAULT == ABI_N32\n-#define ABI_GAS_ASM_SPEC \"%{mabi=*} %{!mabi=*:-mabi=n32}\"\n-#endif\n-\n-#if MIPS_ABI_DEFAULT == ABI_64\n-#define ABI_GAS_ASM_SPEC \"%{mabi=*} %{!mabi=*:-mabi=64}\"\n-#endif\n-\n-#if MIPS_ABI_DEFAULT == ABI_EABI\n-#define ABI_GAS_ASM_SPEC \"%{mabi=*} %{!mabi=*:-mabi=eabi}\"\n-#endif\n-\n-#if MIPS_ABI_DEFAULT == ABI_O64\n-#define ABI_GAS_ASM_SPEC \"\\\n-%{mabi=*} \\\n-%{!mabi=*:%{mips1|mips2|mips32:-mabi=32} %{!mips1:%{!mips2:%{!mips3:%{!mips32:-mabi=o64}}}}}\"\n-#endif\n-\n-#if MIPS_ABI_DEFAULT == ABI_MEABI\n-#define ABI_GAS_ASM_SPEC \"\\\n-%{mabi=*} \\\n-%{!mabi=*:-mabi=meabi }\"\n-#endif\n-\n #ifndef ABI_GAS_ASM_SPEC\n- #error \"Unhandled MIPS_ABI_DEFAULT\"\n+#define ABI_GAS_ASM_SPEC \"\"\n #endif\n \n /* TARGET_ASM_SPEC is used to select either MIPS_AS_ASM_SPEC or\n@@ -1070,9 +1037,171 @@ extern int mips_abi;\n    be overridden by subtargets.  */\n \n #ifndef SUBTARGET_CPP_SIZE_SPEC\n+\n+#if MIPS_ISA_DEFAULT != 3 && MIPS_ISA_DEFAULT != 4 && MIPS_ISA_DEFAULT != 5 && MIPS_ISA_DEFAULT != 64\n+\n+/* 32-bit cases first.  */\n+\n+#if MIPS_ABI_DEFAULT == ABI_EABI\n+#define SUBTARGET_CPP_SIZE_SPEC \"\\\n+%{mabi=eabi|!mabi=*:\\\n+  %{mips1|mips2|mips32|mlong32|mgp32:%{!mips3:%{!mips4:%{!mips5:%{!mips64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}}}}} \\\n+  %{mlong64:\\\n+    %{mgp64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n+    %{!mgp64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}}\\\n+  %{mips3|mips4|mips5|mips64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int}} \\\n+  %{!mips1:%{!mips2:%{!mips3:%{!mips4:%{!mips5:%{!mips32:%{!mips64:%{!mlong32:%{!mlong64:%{!mgp32:%{!mgp64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}}}}}}}}}}}\\\n+%{mabi=o64:\\\n+ %{mlong64:\\\n+   %{!mgp32:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n+   %{mgp32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}} \\\n+ %{!mlong64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}} \\\n+%{mabi=32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n+\"\n+#endif\n+\n+#if MIPS_ABI_DEFAULT == ABI_O64\n+#define SUBTARGET_CPP_SIZE_SPEC \"\\\n+%{mabi=eabi:\\\n+  %{mips1|mips2|mips32|mlong32|mgp32:%{!mips3:%{!mips4:%{!mips5:%{!mips64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}}}}} \\\n+  %{mlong64:\\\n+    %{mgp64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n+    %{!mgp64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}}\\\n+  %{mips3|mips4|mips5|mips64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int}} \\\n+  %{!mips1:%{!mips2:%{!mips3:%{!mips4:%{!mips5:%{!mips32:%{!mips64:%{!mlong32:%{!mlong64:%{!mgp32:%{!mgp64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}}}}}}}}}}}\\\n+%{mabi=o64|!mabi=*:\\\n+ %{mlong64:\\\n+   %{!mgp32:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n+   %{mgp32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}} \\\n+ %{!mlong64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}} \\\n+%{mabi=32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}\\\n+\"\n+#endif\n+\n+#if MIPS_ABI_DEFAULT == ABI_32\n #define SUBTARGET_CPP_SIZE_SPEC \"\\\n-%{mlong64:%{!mips1:%{!mips2:%{!mips32:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int}}}} \\\n-%{!mlong64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}\"\n+%{mabi=eabi:\\\n+  %{mips1|mips2|mips32|mlong32|mgp32:%{!mips3:%{!mips4:%{!mips5:%{!mips64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}}}}} \\\n+  %{mlong64:\\\n+    %{mgp64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n+    %{!mgp64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}}\\\n+  %{mips3|mips4|mips5|mips64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int}} \\\n+  %{!mips1:%{!mips2:%{!mips3:%{!mips4:%{!mips5:%{!mips32:%{!mips64:%{!mlong32:%{!mlong64:%{!mgp32:%{!mgp64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}}}}}}}}}}}\\\n+%{mabi=o64:\\\n+ %{mlong64:\\\n+   %{!mgp32:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n+   %{mgp32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}} \\\n+ %{!mlong64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}} \\\n+%{mabi=32|!mabi=*:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}\\\n+\"\n+#endif\n+\n+#if MIPS_ABI_DEFAULT == ABI_MEABI\n+#define SUBTARGET_CPP_SIZE_SPEC \"\\\n+%{mabi=eabi:\\\n+  %{mips1|mips2|mips32|mlong32|mgp32:%{!mips3:%{!mips4:%{!mips5:%{!mips64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}}}}} \\\n+  %{mlong64:\\\n+    %{mgp64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n+    %{!mgp64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}}\\\n+  %{mips3|mips4|mips5|mips64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int}} \\\n+  %{!mips1:%{!mips2:%{!mips3:%{!mips4:%{!mips5:%{!mips32:%{!mips64:%{!mlong32:%{!mlong64:%{!mgp32:%{!mgp64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}}}}}}}}}}}\\\n+%{mabi=o64:\\\n+ %{mlong64:\\\n+   %{!mgp32:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n+   %{mgp32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}} \\\n+ %{!mlong64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}} \\\n+%{mabi=32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}\\\n+%{mabi=meabi|!mabi=*:\\\n+  %{mips3|mips4|mips5|mips64|mlong64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n+  %{!mips3:%{!mips4:%{!mips5:%{!mips64:%{!mlong64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}}}}}} \\\n+\"\n+#endif\n+\n+#else\n+\n+/* 64-bit default ISA.  */\n+\n+#if MIPS_ABI_DEFAULT == ABI_EABI\n+#define SUBTARGET_CPP_SIZE_SPEC \"\\\n+%{mabi=eabi|!mabi=*: \\\n+  %{mips1|mips2|mips32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n+  %{mlong32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n+  %{mlong64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n+  %{mgp32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n+  %{mips3|mips4|mips5|mips64:%{!mips1:%{!mips2:%{!mips32:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int}}}}\\\n+  %{!mips1:%{!mips2:%{!mips3:%{!mips4:%{!mips5:%{!mips32:%{!mips64:%{!mlong32:%{!mlong64:%{!mgp32:%{!mgp64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int}}}}}}}}}}}\\\n+  %{mgp64:%{!mlong32:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int}}}\\\n+%{mabi=o64:\\\n+ %{mlong64:\\\n+   %{!mgp32:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n+   %{mgp32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}} \\\n+ %{!mlong64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}} \\\n+%{mabi=32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n+\"\n+#endif\n+\n+#if MIPS_ABI_DEFAULT == ABI_O64\n+#define SUBTARGET_CPP_SIZE_SPEC \"\\\n+%{mabi=eabi: \\\n+  %{mips1|mips2|mips32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n+  %{mlong32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n+  %{mlong64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n+  %{mgp32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n+  %{mips3|mips4|mips5|mips64:%{!mips1:%{!mips2:%{!mips32:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int}}}}\\\n+  %{!mips1:%{!mips2:%{!mips3:%{!mips4:%{!mips5:%{!mips32:%{!mips64:%{!mlong32:%{!mlong64:%{!mgp32:%{!mgp64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int}}}}}}}}}}}\\\n+  %{mgp64:%{!mlong32:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int}}}\\\n+%{mabi=o64|!mabi=*:\\\n+ %{mlong64:\\\n+   %{!mgp32:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n+   %{mgp32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}} \\\n+ %{!mlong64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}} \\\n+%{mabi=32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}\\\n+\"\n+#endif\n+\n+#if MIPS_ABI_DEFAULT == ABI_32\n+#define SUBTARGET_CPP_SIZE_SPEC \"\\\n+%{mabi=eabi:\\\n+  %{mips1|mips2|mips32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n+  %{mlong32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n+  %{mlong64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n+  %{mgp32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n+  %{mips3|mips4|mips5|mips64:%{!mips1:%{!mips2:%{!mips32:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int}}}}\\\n+  %{!mips1:%{!mips2:%{!mips3:%{!mips4:%{!mips5:%{!mips32:%{!mips64:%{!mlong32:%{!mlong64:%{!mgp32:%{!mgp64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int}}}}}}}}}}}\\\n+  %{mgp64:%{!mlong32:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int}}}\\\n+%{mabi=o64:\\\n+ %{mlong64:\\\n+   %{!mgp32:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n+   %{mgp32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}} \\\n+ %{!mlong64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}} \\\n+%{mabi=32|!mabi=*:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}\\\n+\"\n+#endif\n+\n+#if MIPS_ABI_DEFAULT == ABI_MEABI\n+#define SUBTARGET_CPP_SIZE_SPEC \"\\\n+%{mabi=eabi:\\\n+  %{mips1|mips2|mips32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n+  %{mlong32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n+  %{mlong64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n+  %{mgp32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n+  %{mips3|mips4|mips5|mips64:%{!mips1:%{!mips2:%{!mips32:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int}}}}\\\n+  %{!mips1:%{!mips2:%{!mips3:%{!mips4:%{!mips5:%{!mips32:%{!mips64:%{!mlong32:%{!mlong64:%{!mgp32:%{!mgp64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int}}}}}}}}}}}\\\n+  %{mgp64:%{!mlong32:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int}}}\\\n+%{mabi=o64:\\\n+ %{mlong64:\\\n+   %{!mgp32:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n+   %{mgp32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}} \\\n+ %{!mlong64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}} \\\n+%{mabi=32:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}\\\n+%{mabi=meabi|!mabi=*:\\\n+  %{mips1|mips2|mips32|mlong32: -D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n+  %{!mips1:%{!mips2:%{!mips32:%{!mlong32:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int}}}}} \\\n+\"\n+#endif\n+\n+#endif\n+\n #endif\n \n /* SUBTARGET_CPP_SPEC is passed to the preprocessor.  It may be\n@@ -2233,7 +2362,6 @@ extern enum reg_class mips_char_to_class[256];\n \n /* If defined, gives a class of registers that cannot be used as the\n    operand of a SUBREG that changes the mode of the object illegally.\n-\n    When FP regs are larger than integer regs... Er, anyone remember what\n    goes wrong?\n "}, {"sha": "3eb62d89da21576df721b05763f11283fd01c0c0", "filename": "gcc/config/mips/r3900.h", "status": "modified", "additions": 11, "deletions": 20, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f45c6543a717b5294fa827012b739042e5e722/gcc%2Fconfig%2Fmips%2Fr3900.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f45c6543a717b5294fa827012b739042e5e722/gcc%2Fconfig%2Fmips%2Fr3900.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fr3900.h?ref=f9f45c6543a717b5294fa827012b739042e5e722", "patch": "@@ -1,4 +1,4 @@\n-/* Definitions of MIPS sub target machine for GNU compiler. \n+/* Definitions of MIPS sub target machine for GNU compiler.\n    Toshiba r3900.  You should include mips.h after this.\n \n    Copyright (C) 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997\n@@ -22,44 +22,35 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n+#define MIPS_CPU_STRING_DEFAULT \"R3900\"\n+#define MIPS_ISA_DEFAULT 1\n+\n+#define MULTILIB_DEFAULTS { MULTILIB_ENDIAN_DEFAULT, \"msoft-float\" }\n+\n+/* We use the MIPS EABI by default.  */\n+#define MIPS_ABI_DEFAULT ABI_EABI\n+\n #define SUBTARGET_CPP_SPEC \"\\\n %{!mabi=32: %{!mabi=n32: %{!mabi=64: -D__mips_eabi}}} \\\n %{!msingle-float:-D__mips_soft_float} \\\n %{mhard-float:%e-mhard-float not supported} \\\n %{msingle-float:%{msoft-float: \\\n   %e-msingle-float and -msoft-float can not both be specified}}\"\n \n-/* The following is needed because -mips3 and -mips4 set gp64 which in\n-   combination with abi=eabi, causes long64 to be set.  */\n-#define SUBTARGET_CPP_SIZE_SPEC \"\\\n-%{mips3:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n-%{mips4:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n-%{!mips3:%{!mips4:%{!m4650:\\\n-  -D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}}} \"\n-\n /* by default (if not mips-something-else) produce code for the r3900 */\n #define SUBTARGET_CC1_SPEC \"\\\n %{mhard-float:%e-mhard-float not supported} \\\n %{msingle-float:%{msoft-float: \\\n   %e-msingle-float and -msoft-float can not both be specified}}\"\n \n-#define MIPS_CPU_STRING_DEFAULT \"R3900\"\n-#define MIPS_ISA_DEFAULT 1\n-\n-#define MULTILIB_DEFAULTS { MULTILIB_ENDIAN_DEFAULT, \"msoft-float\" }\n-\n-/* We use the MIPS EABI by default.  */\n-#define MIPS_ABI_DEFAULT ABI_EABI\n-\n-\n /* Debugging */\n \n #define DWARF2_DEBUGGING_INFO\n #define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n \n-/* For the 'preferred' cases (\"gN\" and \"ggdbN\") we need to tell the \n+/* For the 'preferred' cases (\"gN\" and \"ggdbN\") we need to tell the\n    gnu assembler not to generate debugging information.  */\n-   \n+\n #define SUBTARGET_ASM_DEBUGGING_SPEC \"\\\n %{!mmips-as: \\\n   %{g:-g0} %{g0:-g0} %{g1:-g0} %{g2:-g0} %{g3:-g0} \\"}, {"sha": "06c297c540bb324a861b2bdfb8f576a69bc6ff7e", "filename": "gcc/config/mips/t-elf", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f45c6543a717b5294fa827012b739042e5e722/gcc%2Fconfig%2Fmips%2Ft-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f45c6543a717b5294fa827012b739042e5e722/gcc%2Fconfig%2Fmips%2Ft-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-elf?ref=f9f45c6543a717b5294fa827012b739042e5e722", "patch": "@@ -53,8 +53,8 @@ fp-bit.c: $(srcdir)/config/fp-bit.c\n \n # Build the libraries for both hard and soft floating point\n \n-MULTILIB_OPTIONS = msoft-float/msingle-float EL/EB mips1/mips3\n-MULTILIB_DIRNAMES = soft-float single el eb mips1 mips3\n+MULTILIB_OPTIONS = msoft-float/msingle-float EL/EB\n+MULTILIB_DIRNAMES = soft-float single el eb\n MULTILIB_MATCHES = msingle-float=m4650\n EXTRA_MULTILIB_PARTS = crtbegin.o crtend.o crti.o crtn.o\n "}]}