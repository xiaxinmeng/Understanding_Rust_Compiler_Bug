{"sha": "ec35d57225c9cd7f69ab1b25982b90bfc0f878e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMzNWQ1NzIyNWM5Y2Q3ZjY5YWIxYjI1OTgyYjkwYmZjMGY4NzhlNw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2017-08-30T11:08:53Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2017-08-30T11:08:53Z"}, "message": "[5/77] Small tweak to array_value_type\n\nStore the type mode in a variable so that a later,\nmore mechanical patch can change its type.\n\n2017-08-30  Richard Sandiford  <richard.sandiford@linaro.org>\n\t    Alan Hayward  <alan.hayward@arm.com>\n\t    David Sherwood  <david.sherwood@arm.com>\n\ngcc/\n\t* tree-switch-conversion.c (array_value_type): Only read TYPE_MODE\n\tonce.  Use get_narrowest_mode instead of GET_CLASS_NARROWEST_MODE.\n\nCo-Authored-By: Alan Hayward <alan.hayward@arm.com>\nCo-Authored-By: David Sherwood <david.sherwood@arm.com>\n\nFrom-SVN: r251456", "tree": {"sha": "76614e3dc76ef5ed5c36c69e9e65f8e84c1c0404", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76614e3dc76ef5ed5c36c69e9e65f8e84c1c0404"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec35d57225c9cd7f69ab1b25982b90bfc0f878e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec35d57225c9cd7f69ab1b25982b90bfc0f878e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec35d57225c9cd7f69ab1b25982b90bfc0f878e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec35d57225c9cd7f69ab1b25982b90bfc0f878e7/comments", "author": null, "committer": null, "parents": [{"sha": "c94843d2422bdf77e2f86fad0329838f36773b43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c94843d2422bdf77e2f86fad0329838f36773b43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c94843d2422bdf77e2f86fad0329838f36773b43"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "8765c3cc7a326c3f73e50af546157299ef2423a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec35d57225c9cd7f69ab1b25982b90bfc0f878e7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec35d57225c9cd7f69ab1b25982b90bfc0f878e7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec35d57225c9cd7f69ab1b25982b90bfc0f878e7", "patch": "@@ -1,3 +1,10 @@\n+2017-08-30  Richard Sandiford  <richard.sandiford@linaro.org>\n+\t    Alan Hayward  <alan.hayward@arm.com>\n+\t    David Sherwood  <david.sherwood@arm.com>\n+\n+\t* tree-switch-conversion.c (array_value_type): Only read TYPE_MODE\n+\tonce.  Use get_narrowest_mode instead of GET_CLASS_NARROWEST_MODE.\n+\n 2017-08-30  Richard Sandiford  <richard.sandiford@linaro.org>\n             Alan Hayward  <alan.hayward@arm.com>\n             David Sherwood  <david.sherwood@arm.com>"}, {"sha": "85d6816d11902192f39281735ee329322d38b3ee", "filename": "gcc/tree-switch-conversion.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec35d57225c9cd7f69ab1b25982b90bfc0f878e7/gcc%2Ftree-switch-conversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec35d57225c9cd7f69ab1b25982b90bfc0f878e7/gcc%2Ftree-switch-conversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-switch-conversion.c?ref=ec35d57225c9cd7f69ab1b25982b90bfc0f878e7", "patch": "@@ -1037,7 +1037,6 @@ array_value_type (gswitch *swtch, tree type, int num,\n {\n   unsigned int i, len = vec_safe_length (info->constructors[num]);\n   constructor_elt *elt;\n-  machine_mode mode;\n   int sign = 0;\n   tree smaller_type;\n \n@@ -1051,8 +1050,9 @@ array_value_type (gswitch *swtch, tree type, int num,\n   if (!INTEGRAL_TYPE_P (type))\n     return type;\n \n-  mode = GET_CLASS_NARROWEST_MODE (GET_MODE_CLASS (TYPE_MODE (type)));\n-  if (GET_MODE_SIZE (TYPE_MODE (type)) <= GET_MODE_SIZE (mode))\n+  machine_mode type_mode = TYPE_MODE (type);\n+  machine_mode mode = get_narrowest_mode (type_mode);\n+  if (GET_MODE_SIZE (type_mode) <= GET_MODE_SIZE (mode))\n     return type;\n \n   if (len < (optimize_bb_for_size_p (gimple_bb (swtch)) ? 2 : 32))\n@@ -1090,7 +1090,7 @@ array_value_type (gswitch *swtch, tree type, int num,\n \n \t  mode = GET_MODE_WIDER_MODE (mode);\n \t  if (mode == VOIDmode\n-\t      || GET_MODE_SIZE (mode) >= GET_MODE_SIZE (TYPE_MODE (type)))\n+\t      || GET_MODE_SIZE (mode) >= GET_MODE_SIZE (type_mode))\n \t    return type;\n \t}\n     }"}]}