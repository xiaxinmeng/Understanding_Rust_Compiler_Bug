{"sha": "550386ada786f5c08050abb8fda4556ea5563ebf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTUwMzg2YWRhNzg2ZjVjMDgwNTBhYmI4ZmRhNDU1NmVhNTU2M2ViZg==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@gmail.com", "date": "2008-03-31T09:45:53Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2008-03-31T09:45:53Z"}, "message": "re PR tree-optimization/35431 (ICE with complex integer, invalid gimple)\n\n2008-03-31  Andrew Pinski  <pinskia@gmail.com>\n\n        PR tree-opt/35431\n        * tree-ssa-phiopt.c (conditional_replacement): Return early for\n        complex types.\n\n2008-03-31  Andrew Pinski  <pinskia@gmail.com>\n\n        PR tree-opt/35431\n        * gcc.c-torture/compile/pr35431.c: New testcase.\n\nFrom-SVN: r133749", "tree": {"sha": "4395ec40617170321c63880741b46a2354bd61a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4395ec40617170321c63880741b46a2354bd61a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/550386ada786f5c08050abb8fda4556ea5563ebf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/550386ada786f5c08050abb8fda4556ea5563ebf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/550386ada786f5c08050abb8fda4556ea5563ebf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/550386ada786f5c08050abb8fda4556ea5563ebf/comments", "author": {"login": "pinskia", "id": 8496799, "node_id": "MDQ6VXNlcjg0OTY3OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8496799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pinskia", "html_url": "https://github.com/pinskia", "followers_url": "https://api.github.com/users/pinskia/followers", "following_url": "https://api.github.com/users/pinskia/following{/other_user}", "gists_url": "https://api.github.com/users/pinskia/gists{/gist_id}", "starred_url": "https://api.github.com/users/pinskia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pinskia/subscriptions", "organizations_url": "https://api.github.com/users/pinskia/orgs", "repos_url": "https://api.github.com/users/pinskia/repos", "events_url": "https://api.github.com/users/pinskia/events{/privacy}", "received_events_url": "https://api.github.com/users/pinskia/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4e483a224bee8280b1233e2831dcd49dfb5c2419", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e483a224bee8280b1233e2831dcd49dfb5c2419", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e483a224bee8280b1233e2831dcd49dfb5c2419"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "f7be8f1f2ae79e0253c4322beeff1af864a40afd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/550386ada786f5c08050abb8fda4556ea5563ebf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/550386ada786f5c08050abb8fda4556ea5563ebf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=550386ada786f5c08050abb8fda4556ea5563ebf", "patch": "@@ -1,3 +1,9 @@\n+2008-03-31  Andrew Pinski  <pinskia@gmail.com>\n+\n+\tPR tree-opt/35431\n+\t* tree-ssa-phiopt.c (conditional_replacement): Return early for\n+\tcomplex types.\n+\n 2008-03-31  Jan Beulich  <jbeulich@novell.com>\n \n \t* config/ia64/constraints.md: Add 'j' constraint."}, {"sha": "06b43d93dae4e98dcbd715227ab039d4aae52e45", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/550386ada786f5c08050abb8fda4556ea5563ebf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/550386ada786f5c08050abb8fda4556ea5563ebf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=550386ada786f5c08050abb8fda4556ea5563ebf", "patch": "@@ -1,3 +1,8 @@\n+2008-03-31  Andrew Pinski  <pinskia@gmail.com>\n+\n+\tPR tree-opt/35431\n+\t* gcc.c-torture/compile/pr35431.c: New testcase.\n+\n 2008-03-30  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* g++.dg/other/error27.C: Use -fno-finite-math-only on sh*"}, {"sha": "ffe9d068a153d7c7039b13cd57deee5f6cef6f7d", "filename": "gcc/testsuite/gcc.c-torture/compile/pr35431.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/550386ada786f5c08050abb8fda4556ea5563ebf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr35431.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/550386ada786f5c08050abb8fda4556ea5563ebf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr35431.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr35431.c?ref=550386ada786f5c08050abb8fda4556ea5563ebf", "patch": "@@ -0,0 +1,15 @@\n+void bar();\n+\n+void foo(int i)\n+{\n+  __complex__ int k = 0;\n+\n+  if (i)\n+    k = 1;\n+\n+  for (i = 0; i < 1; ++i)\n+    ;\n+\n+  if (k)\n+    bar();\n+}"}, {"sha": "2a8c87827f73b3395d821769b0a4f8d4de21e529", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/550386ada786f5c08050abb8fda4556ea5563ebf/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/550386ada786f5c08050abb8fda4556ea5563ebf/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=550386ada786f5c08050abb8fda4556ea5563ebf", "patch": "@@ -463,6 +463,11 @@ conditional_replacement (basic_block cond_bb, basic_block middle_bb,\n   tree new_var = NULL;\n   tree new_var1;\n \n+  /* FIXME: Gimplification of complex type is too hard for now.  */\n+  if (TREE_CODE (TREE_TYPE (arg0)) == COMPLEX_TYPE\n+      || TREE_CODE (TREE_TYPE (arg1)) == COMPLEX_TYPE)\n+    return false;\n+\n   /* The PHI arguments have the constants 0 and 1, then convert\n      it to the conditional.  */\n   if ((integer_zerop (arg0) && integer_onep (arg1))"}]}