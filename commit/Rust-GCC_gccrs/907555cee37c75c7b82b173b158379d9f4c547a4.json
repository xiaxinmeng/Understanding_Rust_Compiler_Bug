{"sha": "907555cee37c75c7b82b173b158379d9f4c547a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA3NTU1Y2VlMzdjNzVjN2I4MmIxNzNiMTU4Mzc5ZDlmNGM1NDdhNA==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2013-08-26T16:39:25Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2013-08-26T16:39:25Z"}, "message": "avr-stdint.h (INT16_TYPE): Change default to \"int\".\n\n        * config/avr/avr-stdint.h (INT16_TYPE): Change default to \"int\".\n        (UINT16_TYPE): Change default to \"unsigned int\".\n\nFrom-SVN: r202005", "tree": {"sha": "f32ab02a8998d8ee1cd50f06a08ec691a297479b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f32ab02a8998d8ee1cd50f06a08ec691a297479b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/907555cee37c75c7b82b173b158379d9f4c547a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/907555cee37c75c7b82b173b158379d9f4c547a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/907555cee37c75c7b82b173b158379d9f4c547a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/907555cee37c75c7b82b173b158379d9f4c547a4/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2531a1d9f4bd1be785c98decc0b372c70edef943", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2531a1d9f4bd1be785c98decc0b372c70edef943", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2531a1d9f4bd1be785c98decc0b372c70edef943"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "c735059f23521cdf6b30c782f320ceb4ca0f808b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/907555cee37c75c7b82b173b158379d9f4c547a4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/907555cee37c75c7b82b173b158379d9f4c547a4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=907555cee37c75c7b82b173b158379d9f4c547a4", "patch": "@@ -1,3 +1,8 @@\n+2013-08-26  Joern Rennecke  <joern.rennecke@embecosm.com>\n+\n+\t* config/avr/avr-stdint.h (INT16_TYPE): Change default to \"int\".\n+\t(UINT16_TYPE): Change default to \"unsigned int\".\n+\n 2013-08-26  Jan Hubicka  <jh@suse.cz>\n \n \t* cgraph.c (cgraph_propagate_frequency): Do not assume that virtual"}, {"sha": "4137b0689a5328a450b52b64dd3c09476be15e28", "filename": "gcc/config/avr/avr-stdint.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/907555cee37c75c7b82b173b158379d9f4c547a4/gcc%2Fconfig%2Favr%2Favr-stdint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/907555cee37c75c7b82b173b158379d9f4c547a4/gcc%2Fconfig%2Favr%2Favr-stdint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-stdint.h?ref=907555cee37c75c7b82b173b158379d9f4c547a4", "patch": "@@ -34,11 +34,11 @@ along with GCC; see the file COPYING3.  If not see\n #define SIG_ATOMIC_TYPE \"char\"\n \n #define INT8_TYPE \"signed char\"\n-#define INT16_TYPE (INT_TYPE_SIZE == 16 ? \"short int\" : \"long int\")\n+#define INT16_TYPE (INT_TYPE_SIZE == 16 ? \"int\" : \"long int\")\n #define INT32_TYPE (INT_TYPE_SIZE == 16 ? \"long int\" : \"long long int\")\n #define INT64_TYPE (INT_TYPE_SIZE == 16 ? \"long long int\" : 0)\n #define UINT8_TYPE \"unsigned char\"\n-#define UINT16_TYPE (INT_TYPE_SIZE == 16 ? \"short unsigned int\" : \"long unsigned int\")\n+#define UINT16_TYPE (INT_TYPE_SIZE == 16 ? \"unsigned int\" : \"long unsigned int\")\n #define UINT32_TYPE (INT_TYPE_SIZE == 16 ? \"long unsigned int\" : \"long long unsigned int\")\n #define UINT64_TYPE (INT_TYPE_SIZE == 16 ? \"long long unsigned int\" : 0)\n "}]}