{"sha": "7523cace86c3739099763b969614c5cd3eee4994", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzUyM2NhY2U4NmMzNzM5MDk5NzYzYjk2OTYxNGM1Y2QzZWVlNDk5NA==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2006-11-28T05:39:42Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2006-11-28T05:39:42Z"}, "message": "re PR fortran/29976 (ICE on optional arg)\n\n2006-11-28  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/29976\n\t* trans-expr.c (gfc_conv_missing_dummy): Remove build_int_const\n\tand replace with cast to type of se->expr of integer_zero_node.\n\n2006-11-28  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/29976\n\t* gfortran.dg/missing_optional_dummy_3.f90\n\nFrom-SVN: r119273", "tree": {"sha": "cf9511adffd003ae39ceba908801955ac52d8dff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf9511adffd003ae39ceba908801955ac52d8dff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7523cace86c3739099763b969614c5cd3eee4994", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7523cace86c3739099763b969614c5cd3eee4994", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7523cace86c3739099763b969614c5cd3eee4994", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7523cace86c3739099763b969614c5cd3eee4994/comments", "author": null, "committer": null, "parents": [{"sha": "911a40abe03cc49145102efa3881e129c9d9b528", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/911a40abe03cc49145102efa3881e129c9d9b528", "html_url": "https://github.com/Rust-GCC/gccrs/commit/911a40abe03cc49145102efa3881e129c9d9b528"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "9442f687e8d9175a3aafa9a4e2d577e643b67a82", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7523cace86c3739099763b969614c5cd3eee4994/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7523cace86c3739099763b969614c5cd3eee4994/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7523cace86c3739099763b969614c5cd3eee4994", "patch": "@@ -1,3 +1,9 @@\n+2006-11-28  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/29976\n+\t* trans-expr.c (gfc_conv_missing_dummy): Remove build_int_const\n+\tand replace with cast to type of se->expr of integer_zero_node.\n+\n 2006-11-28  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/20880"}, {"sha": "d5040431f1c98d6cd951fd7a82555e2a2a729d73", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7523cace86c3739099763b969614c5cd3eee4994/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7523cace86c3739099763b969614c5cd3eee4994/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=7523cace86c3739099763b969614c5cd3eee4994", "patch": "@@ -153,7 +153,8 @@ gfc_conv_missing_dummy (gfc_se * se, gfc_expr * arg, gfc_typespec ts)\n \n   present = gfc_conv_expr_present (arg->symtree->n.sym);\n   tmp = build3 (COND_EXPR, TREE_TYPE (se->expr), present, se->expr,\n-\t\tbuild_int_cst (TREE_TYPE (se->expr), 0));\n+\t\tfold_convert (TREE_TYPE (se->expr), integer_zero_node));\n+\n   tmp = gfc_evaluate_now (tmp, &se->pre);\n   se->expr = tmp;\n   if (ts.type == BT_CHARACTER)"}, {"sha": "5c87db9650346c69c5de74b25d7cabeb9b9c98fa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7523cace86c3739099763b969614c5cd3eee4994/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7523cace86c3739099763b969614c5cd3eee4994/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7523cace86c3739099763b969614c5cd3eee4994", "patch": "@@ -1,3 +1,8 @@\n+2006-11-28  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/29976\n+\t* gfortran.dg/missing_optional_dummy_3.f90\n+\n 2006-11-28  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/20880"}, {"sha": "d330ddaea8f43fa163b7872d90877d3415e877a8", "filename": "gcc/testsuite/gfortran.dg/missing_optional_dummy_3.f90", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7523cace86c3739099763b969614c5cd3eee4994/gcc%2Ftestsuite%2Fgfortran.dg%2Fmissing_optional_dummy_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7523cace86c3739099763b969614c5cd3eee4994/gcc%2Ftestsuite%2Fgfortran.dg%2Fmissing_optional_dummy_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmissing_optional_dummy_3.f90?ref=7523cace86c3739099763b969614c5cd3eee4994", "patch": "@@ -0,0 +1,32 @@\n+! { dg-do compile }\n+! Tests the fix for PR29976, in which the call to CMPLX caused an\n+! ICE with an optional dummy for the imaginary part.\n+!\n+! Contributed by Francois-Xavier Coudert <fxcoudert@gcc.gnu.org>\n+!\n+SUBROUTINE pw_sumup (alpha_im)\n+  REAL, INTENT(in), OPTIONAL :: alpha_im\n+  COMPLEX :: my_alpha_c\n+  IF (PRESENT(alpha_im)) THEN\n+     my_alpha_c = CMPLX(0.,alpha_im)\n+  END IF\n+END SUBROUTINE pw_sumup\n+\n+! Check non-intrinsic functions.\n+SUBROUTINE pw_sumup_2 (alpha_im)\n+  REAL, INTENT(in), OPTIONAL :: alpha_im\n+  COMPLEX :: my_alpha_c\n+  IF (PRESENT(alpha_im)) THEN\n+     my_alpha_c = MY_CMPLX(0.,alpha_im)\n+  END IF\n+contains\n+  complex function MY_CMPLX (re, im)\n+    real, intent(in) :: re\n+    real, intent(in), optional :: im\n+    if (present (im)) then \n+      MY_CMPLX = cmplx (re, im)\n+    else\n+      MY_CMPLX = cmplx (re, 0.0)\n+    end if\n+  end function MY_CMPLX\n+END SUBROUTINE pw_sumup_2"}]}