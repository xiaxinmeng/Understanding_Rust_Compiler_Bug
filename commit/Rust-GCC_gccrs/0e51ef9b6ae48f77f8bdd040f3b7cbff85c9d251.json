{"sha": "0e51ef9b6ae48f77f8bdd040f3b7cbff85c9d251", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU1MWVmOWI2YWU0OGY3N2Y4YmRkMDQwZjNiN2NiZmY4NWM5ZDI1MQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-04T03:04:19Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-04T03:04:19Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r879", "tree": {"sha": "fcaa00b4cde57eb0f127aa7c297d0925dda8dd35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcaa00b4cde57eb0f127aa7c297d0925dda8dd35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e51ef9b6ae48f77f8bdd040f3b7cbff85c9d251", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e51ef9b6ae48f77f8bdd040f3b7cbff85c9d251", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e51ef9b6ae48f77f8bdd040f3b7cbff85c9d251", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e51ef9b6ae48f77f8bdd040f3b7cbff85c9d251/comments", "author": null, "committer": null, "parents": [{"sha": "dce838e17dd6494f9a54d1aa86d247ad1403ccd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dce838e17dd6494f9a54d1aa86d247ad1403ccd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dce838e17dd6494f9a54d1aa86d247ad1403ccd4"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "464e5f483f9e85feb555cc487fd4f6efe4aae839", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e51ef9b6ae48f77f8bdd040f3b7cbff85c9d251/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e51ef9b6ae48f77f8bdd040f3b7cbff85c9d251/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=0e51ef9b6ae48f77f8bdd040f3b7cbff85c9d251", "patch": "@@ -1147,7 +1147,6 @@ build_array_ref (array, index)\n     {\n       tree rval, type;\n \n-      index = default_conversion (index);\n       if (index != error_mark_node\n \t  && TREE_CODE (TREE_TYPE (index)) != INTEGER_TYPE)\n \t{\n@@ -1165,6 +1164,9 @@ build_array_ref (array, index)\n \t  && TYPE_MAIN_VARIANT (TREE_TYPE (index)) == char_type_node)\n \twarning (\"array subscript has type `char'\");\n \n+      /* Apply default promotions *after* noticing character types.  */\n+      index = default_conversion (index);\n+\n       /* An array that is indexed by a non-constant\n \t cannot be stored in a register; we must be able to do\n \t address arithmetic on its address."}]}