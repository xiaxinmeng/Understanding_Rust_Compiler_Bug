{"sha": "f30e9fd33e56a5a721346ea6140722e1b193db42", "node_id": "C_kwDOANBUbNoAKGYzMGU5ZmQzM2U1NmE1YTcyMTM0NmVhNjE0MDcyMmUxYjE5M2RiNDI", "commit": {"author": {"name": "Eugene Rozenfeld", "email": "erozen@microsoft.com", "date": "2022-04-21T23:43:24Z"}, "committer": {"name": "Eugene Rozenfeld", "email": "erozen@microsoft.com", "date": "2022-10-07T20:04:36Z"}, "message": "Set discriminators for call stmts on the same line within the same basic block.\n\nCall statements are possible split points of a basic block so they may end up\nin different basic blocks by the time pass_ipa_auto_profile executes.\n\nThis change will also simplify call site lookups since now location with discriminator\nwill uniquely identify the call site (no callee function name is needed).\n\nThis change is based on commit 1e6c4a7a8fb8e20545bb9f9032d3854f3f794c18\nby Dehao Chen in vendors/google/heads/gcc-4_8.\n\nTested on x86_64-pc-linux-gnu.\n\ngcc/ChangeLog:\n\t* tree-cfg.cc (assign_discriminators): Set discriminators for call stmts\n\ton the same line within the same basic block.", "tree": {"sha": "c52d17b412b84ea2837099ab9efae088c31eae1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c52d17b412b84ea2837099ab9efae088c31eae1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f30e9fd33e56a5a721346ea6140722e1b193db42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f30e9fd33e56a5a721346ea6140722e1b193db42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f30e9fd33e56a5a721346ea6140722e1b193db42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f30e9fd33e56a5a721346ea6140722e1b193db42/comments", "author": {"login": "erozenfeld", "id": 10624223, "node_id": "MDQ6VXNlcjEwNjI0MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/10624223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erozenfeld", "html_url": "https://github.com/erozenfeld", "followers_url": "https://api.github.com/users/erozenfeld/followers", "following_url": "https://api.github.com/users/erozenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/erozenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/erozenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erozenfeld/subscriptions", "organizations_url": "https://api.github.com/users/erozenfeld/orgs", "repos_url": "https://api.github.com/users/erozenfeld/repos", "events_url": "https://api.github.com/users/erozenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/erozenfeld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erozenfeld", "id": 10624223, "node_id": "MDQ6VXNlcjEwNjI0MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/10624223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erozenfeld", "html_url": "https://github.com/erozenfeld", "followers_url": "https://api.github.com/users/erozenfeld/followers", "following_url": "https://api.github.com/users/erozenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/erozenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/erozenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erozenfeld/subscriptions", "organizations_url": "https://api.github.com/users/erozenfeld/orgs", "repos_url": "https://api.github.com/users/erozenfeld/repos", "events_url": "https://api.github.com/users/erozenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/erozenfeld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9ad850e86b863c24f6f4f5acf08d49944cc7bbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9ad850e86b863c24f6f4f5acf08d49944cc7bbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9ad850e86b863c24f6f4f5acf08d49944cc7bbe"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "41f2925665ff8f9e802d59e66eed15d44d204aba", "filename": "gcc/tree-cfg.cc", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f30e9fd33e56a5a721346ea6140722e1b193db42/gcc%2Ftree-cfg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f30e9fd33e56a5a721346ea6140722e1b193db42/gcc%2Ftree-cfg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.cc?ref=f30e9fd33e56a5a721346ea6140722e1b193db42", "patch": "@@ -1203,8 +1203,40 @@ assign_discriminators (void)\n     {\n       edge e;\n       edge_iterator ei;\n+      gimple_stmt_iterator gsi;\n       gimple *last = last_stmt (bb);\n       location_t locus = last ? gimple_location (last) : UNKNOWN_LOCATION;\n+      location_t curr_locus = UNKNOWN_LOCATION;\n+      int curr_discr = 0;\n+\n+      /* Traverse the basic block, if two function calls within a basic block\n+\tare mapped to the same line, assign a new discriminator because a call\n+\tstmt could be a split point of a basic block.  */\n+      for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n+\t{\n+\t  gimple *stmt = gsi_stmt (gsi);\n+\t  expanded_location curr_locus_e;\n+\t  if (curr_locus == UNKNOWN_LOCATION)\n+\t    {\n+\t      curr_locus = gimple_location (stmt);\n+\t      curr_locus_e = expand_location (curr_locus);\n+\t    }\n+\t  else if (!same_line_p (curr_locus, &curr_locus_e, gimple_location (stmt)))\n+\t    {\n+\t      curr_locus = gimple_location (stmt);\n+\t      curr_locus_e = expand_location (curr_locus);\n+\t      curr_discr = 0;\n+\t    }\n+\t  else if (curr_discr != 0)\n+\t    {\n+\t      location_t loc = gimple_location (stmt);\n+\t      location_t dloc = location_with_discriminator (loc, curr_discr);\n+\t      gimple_set_location (stmt, dloc);\n+\t    }\n+\t  /* Allocate a new discriminator for CALL stmt.  */\n+\t  if (gimple_code (stmt) == GIMPLE_CALL)\n+\t    curr_discr = next_discriminator_for_locus (curr_locus);\n+\t}\n \n       if (locus == UNKNOWN_LOCATION)\n \tcontinue;"}]}