{"sha": "77b5132f66c51aa41245f9b9f110141bd1629df5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdiNTEzMmY2NmM1MWFhNDEyNDVmOWI5ZjExMDE0MWJkMTYyOWRmNQ==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2012-08-02T19:54:43Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2012-08-02T19:54:43Z"}, "message": "re PR tree-optimization/53805 (combine_comparisons changes trapping behavior)\n\n2012-08-02  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR tree-optimization/53805\n\t* gcc/fold-const.c (invert_tree_comparison): Invert ORDERED_EXPR and\n\tUNORDERED_EXPR even for trapping floating point.\n\t* gcc/testsuite/gcc.dg/fold-notunord.c: New testcase.\n\nFrom-SVN: r190100", "tree": {"sha": "9870c86ac51cc17871ae568aecaada69d0859f38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9870c86ac51cc17871ae568aecaada69d0859f38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77b5132f66c51aa41245f9b9f110141bd1629df5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77b5132f66c51aa41245f9b9f110141bd1629df5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77b5132f66c51aa41245f9b9f110141bd1629df5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77b5132f66c51aa41245f9b9f110141bd1629df5/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c2381fb2f0715cf5f0f313bc0766d73c2f7b99e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2381fb2f0715cf5f0f313bc0766d73c2f7b99e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2381fb2f0715cf5f0f313bc0766d73c2f7b99e7"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "d0929184b946b4705a17424231c3b9a208c182d9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77b5132f66c51aa41245f9b9f110141bd1629df5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77b5132f66c51aa41245f9b9f110141bd1629df5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=77b5132f66c51aa41245f9b9f110141bd1629df5", "patch": "@@ -1,3 +1,9 @@\n+2012-08-02  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/53805\n+\t* fold-const.c (invert_tree_comparison): Invert ORDERED_EXPR and\n+\tUNORDERED_EXPR even for trapping floating point.\n+\n 2012-08-02  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR middle-end/53321"}, {"sha": "dfc01cc39a5cea9c62e40cff647dd7bbf4da1fd6", "filename": "gcc/fold-const.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77b5132f66c51aa41245f9b9f110141bd1629df5/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77b5132f66c51aa41245f9b9f110141bd1629df5/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=77b5132f66c51aa41245f9b9f110141bd1629df5", "patch": "@@ -2094,12 +2094,14 @@ pedantic_non_lvalue_loc (location_t loc, tree x)\n \f\n /* Given a tree comparison code, return the code that is the logical inverse.\n    It is generally not safe to do this for floating-point comparisons, except\n-   for EQ_EXPR and NE_EXPR, so we return ERROR_MARK in this case.  */\n+   for EQ_EXPR, NE_EXPR, ORDERED_EXPR and UNORDERED_EXPR, so we return\n+   ERROR_MARK in this case.  */\n \n enum tree_code\n invert_tree_comparison (enum tree_code code, bool honor_nans)\n {\n-  if (honor_nans && flag_trapping_math && code != EQ_EXPR && code != NE_EXPR)\n+  if (honor_nans && flag_trapping_math && code != EQ_EXPR && code != NE_EXPR\n+      && code != ORDERED_EXPR && code != UNORDERED_EXPR)\n     return ERROR_MARK;\n \n   switch (code)"}, {"sha": "8ef8e789b38627686dbca636aa0fb06c7bc21691", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77b5132f66c51aa41245f9b9f110141bd1629df5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77b5132f66c51aa41245f9b9f110141bd1629df5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=77b5132f66c51aa41245f9b9f110141bd1629df5", "patch": "@@ -1,3 +1,8 @@\n+2012-08-02  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/53805\n+\t* gcc.dg/fold-notunord.c: New testcase.\n+\n 2012-08-02  Mikael Morin  <mikael@gcc.gnu.org>\n \n \tPR fortran/48820"}, {"sha": "edfe3cd0292686e6948416d04c8cb755e2b6296d", "filename": "gcc/testsuite/gcc.dg/fold-notunord.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77b5132f66c51aa41245f9b9f110141bd1629df5/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-notunord.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77b5132f66c51aa41245f9b9f110141bd1629df5/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-notunord.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-notunord.c?ref=77b5132f66c51aa41245f9b9f110141bd1629df5", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -ftrapping-math -fdump-tree-optimized\" } */\n+\n+int f (double d)\n+{\n+  return !__builtin_isnan (d);\n+}\n+\n+/* { dg-final { scan-tree-dump \" ord \" \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}]}