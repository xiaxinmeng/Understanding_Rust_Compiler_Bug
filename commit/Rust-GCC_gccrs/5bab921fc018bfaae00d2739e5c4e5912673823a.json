{"sha": "5bab921fc018bfaae00d2739e5c4e5912673823a", "node_id": "C_kwDOANBUbNoAKDViYWI5MjFmYzAxOGJmYWFlMDBkMjczOWU1YzRlNTkxMjY3MzgyM2E", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-06-24T15:45:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-24T15:45:38Z"}, "message": "Merge #1337\n\n1337: Actually set TYPE_PACKED for type_record r=dafaust a=CohenArthur\n\nWhen bootstrapping with --enable-checking=no you'll get:\r\n\r\ngcc/rust/backend/rust-compile-type.cc: In member function\r\n\u2018virtual void Rust::Compile::TyTyResolveCompile::visit(const Rust::TyTy::ADTType&)\u2019:\r\ngcc/tree.h:2312:59: error: statement has no effect [-Werror=unused-value]\r\n 2312 | #define TYPE_PACKED(NODE) (TYPE_CHECK (NODE)->base.u.bits.packed_flag)\r\n      |                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~\r\ngcc/rust/backend/rust-compile-type.cc:315:7:\r\n  note: in expansion of macro \u2018TYPE_PACKED\u2019\r\n  315 |       TYPE_PACKED (type_record);\r\n      |       ^~~~~~~~~~~\r\n\r\nWe need to actually set a value for the packed_flag.\r\n\n\nCo-authored-by: Mark Wielaard <mark@klomp.org>", "tree": {"sha": "12071edfead5fd90ae6e8b32c35afc5c00547c41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12071edfead5fd90ae6e8b32c35afc5c00547c41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bab921fc018bfaae00d2739e5c4e5912673823a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJitdwiCRBK7hj4Ov3rIwAAilIIAKUqAF7r2nI6JCWMyTKYk+8p\nKxAI6ihvgy1xpNA2UpB0o7FAMjnlFsbp09Yl1rV1XJ4lgQar/W6u31E+hqTg7/t5\nF/M6R5q19BYuceh+qjNzL4fS0EVUp7BPLkbBUXCrmNZg4Y3UYOKEv03rykR1S9vC\nk/1zmxXDkQUxq46HCzLF9qJnnCfgcwe5c5b0ElvAKmE+t8c3xhdQlb9mH1SUFefj\n7+feUHEFDWG0WEX0Chm3wCaiu88M0UCBBZp+KfnBwA1uC/r9zA0ba9OTUTMBXfSm\ng3domaNkSdDn9+Reu8+P3gaOyGo/yMEYu8iMJ4gprOE2D6jNb7n+3gCk1oD4F+w=\n=Ya9H\n-----END PGP SIGNATURE-----\n", "payload": "tree 12071edfead5fd90ae6e8b32c35afc5c00547c41\nparent fa57ab9f13601b274160f6d9cda3a83b032906bb\nparent 7e6424852e2d2db4955f6be0090244f14380cb8c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1656085538 +0000\ncommitter GitHub <noreply@github.com> 1656085538 +0000\n\nMerge #1337\n\n1337: Actually set TYPE_PACKED for type_record r=dafaust a=CohenArthur\n\nWhen bootstrapping with --enable-checking=no you'll get:\r\n\r\ngcc/rust/backend/rust-compile-type.cc: In member function\r\n\u2018virtual void Rust::Compile::TyTyResolveCompile::visit(const Rust::TyTy::ADTType&)\u2019:\r\ngcc/tree.h:2312:59: error: statement has no effect [-Werror=unused-value]\r\n 2312 | #define TYPE_PACKED(NODE) (TYPE_CHECK (NODE)->base.u.bits.packed_flag)\r\n      |                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~\r\ngcc/rust/backend/rust-compile-type.cc:315:7:\r\n  note: in expansion of macro \u2018TYPE_PACKED\u2019\r\n  315 |       TYPE_PACKED (type_record);\r\n      |       ^~~~~~~~~~~\r\n\r\nWe need to actually set a value for the packed_flag.\r\n\n\nCo-authored-by: Mark Wielaard <mark@klomp.org>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bab921fc018bfaae00d2739e5c4e5912673823a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bab921fc018bfaae00d2739e5c4e5912673823a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bab921fc018bfaae00d2739e5c4e5912673823a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa57ab9f13601b274160f6d9cda3a83b032906bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa57ab9f13601b274160f6d9cda3a83b032906bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa57ab9f13601b274160f6d9cda3a83b032906bb"}, {"sha": "7e6424852e2d2db4955f6be0090244f14380cb8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e6424852e2d2db4955f6be0090244f14380cb8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e6424852e2d2db4955f6be0090244f14380cb8c"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "eced909673e76b1ff4a048e7c0c26cb5bb364a45", "filename": "gcc/rust/backend/rust-compile-type.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bab921fc018bfaae00d2739e5c4e5912673823a/gcc%2Frust%2Fbackend%2Frust-compile-type.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bab921fc018bfaae00d2739e5c4e5912673823a/gcc%2Frust%2Fbackend%2Frust-compile-type.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-type.cc?ref=5bab921fc018bfaae00d2739e5c4e5912673823a", "patch": "@@ -312,7 +312,7 @@ TyTyResolveCompile::visit (const TyTy::ADTType &type)\n   TyTy::ADTType::ReprOptions repr = type.get_repr_options ();\n   if (repr.pack)\n     {\n-      TYPE_PACKED (type_record);\n+      TYPE_PACKED (type_record) = 1;\n       if (repr.pack > 1)\n \t{\n \t  SET_TYPE_ALIGN (type_record, repr.pack * 8);"}]}