{"sha": "ec99e58ffcdb080f1f5e69ee643b0ecd256f25b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM5OWU1OGZmY2RiMDgwZjFmNWU2OWVlNjQzYjBlY2QyNTZmMjViNA==", "commit": {"author": {"name": "Robert Lipe", "email": "robertlipe@usa.net", "date": "1999-06-07T19:46:39Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-06-07T19:46:39Z"}, "message": "varasm.c (assemble_start_function): Remove the function from the pending weak decls list when we define a function.\n\n        * varasm.c (assemble_start_function): Remove the function\n        from the pending weak decls list when we define a function.\n        (assemble_variable): Similarly for variables.\n        (weak_finish): Ignore items on the list with a NULL name.\n        (remove_from_ending_weak_list); New function to \"remove\" an item\n        from the pending weak declarations list.\n\nCo-Authored-By: Jeffrey A Law <law@cygnus.com>\n\nFrom-SVN: r27402", "tree": {"sha": "0e7e6c1fa43f5727f16d2798892cafc440774f8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e7e6c1fa43f5727f16d2798892cafc440774f8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec99e58ffcdb080f1f5e69ee643b0ecd256f25b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec99e58ffcdb080f1f5e69ee643b0ecd256f25b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec99e58ffcdb080f1f5e69ee643b0ecd256f25b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec99e58ffcdb080f1f5e69ee643b0ecd256f25b4/comments", "author": null, "committer": null, "parents": [{"sha": "729f8bf2231854123adf9485eca0765866a4b0c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/729f8bf2231854123adf9485eca0765866a4b0c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/729f8bf2231854123adf9485eca0765866a4b0c3"}], "stats": {"total": 66, "additions": 59, "deletions": 7}, "files": [{"sha": "13e893a73101b4b51ccbae3916853b6e19712d4f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec99e58ffcdb080f1f5e69ee643b0ecd256f25b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec99e58ffcdb080f1f5e69ee643b0ecd256f25b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec99e58ffcdb080f1f5e69ee643b0ecd256f25b4", "patch": "@@ -1,3 +1,13 @@\n+Mon Jun  7 20:34:20 1999  Robert Lipe <robertlipe@usa.net>\n+                          Jeffrey A Law  (law@cygnus.com)\n+\n+\t* varasm.c (assemble_start_function): Remove the function\n+\tfrom the pending weak decls list when we define a function.\n+\t(assemble_variable): Similarly for variables.\n+\t(weak_finish): Ignore items on the list with a NULL name.\n+\t(remove_from_ending_weak_list); New function to \"remove\" an item\n+\tfrom the pending weak declarations list.\n+\n Mon Jun  7 19:27:07 1999  Jerry Quinn <jquinn@nortelnetworks.com>\n \n \t* pa.md (fmpyfadd, fmpynfadd, fnegabs): New patterns."}, {"sha": "76f40587943929ca7ac0954282e25925fa61249f", "filename": "gcc/varasm.c", "status": "modified", "additions": 49, "deletions": 7, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec99e58ffcdb080f1f5e69ee643b0ecd256f25b4/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec99e58ffcdb080f1f5e69ee643b0ecd256f25b4/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=ec99e58ffcdb080f1f5e69ee643b0ecd256f25b4", "patch": "@@ -141,6 +141,7 @@ static void mark_constants\t\tPROTO((rtx));\n static int output_addressed_constants\tPROTO((tree));\n static void output_after_function_constants PROTO((void));\n static void output_constructor\t\tPROTO((tree, int));\n+static void remove_from_pending_weak_list\tPROTO ((char *));\n #ifdef ASM_OUTPUT_BSS\n static void asm_output_bss\t\tPROTO((FILE *, tree, char *, int, int));\n #endif\n@@ -1012,7 +1013,13 @@ assemble_start_function (decl, fnname)\n \n #ifdef ASM_WEAKEN_LABEL\n       if (DECL_WEAK (decl))\n-\tASM_WEAKEN_LABEL (asm_out_file, fnname);\n+\t{\n+\t  ASM_WEAKEN_LABEL (asm_out_file, fnname);\n+\t  /* Remove this function from the pending weak list so that\n+\t     we do not emit multiple .weak directives for it.  */\n+\t  remove_from_pending_weak_list\n+\t    (IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl)));\n+\t}\n       else\n #endif\n       ASM_GLOBALIZE_LABEL (asm_out_file, fnname);\n@@ -1445,8 +1452,14 @@ assemble_variable (decl, top_level, at_end, dont_output_data)\n   if (TREE_PUBLIC (decl) && DECL_NAME (decl))\n     {\n #ifdef ASM_WEAKEN_LABEL\n-      if (DECL_WEAK (decl))\n-\tASM_WEAKEN_LABEL (asm_out_file, name);\n+      if (DECL_WEAK (decl)) \n+\t{\n+\t  ASM_WEAKEN_LABEL (asm_out_file, name);\n+\t   /* Remove this variable from the pending weak list so that\n+\t      we do not emit multiple .weak directives for it.  */\n+\t  remove_from_pending_weak_list\n+\t    (IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl)));\n+\t}\n       else\n #endif\n       ASM_GLOBALIZE_LABEL (asm_out_file, name);\n@@ -4351,9 +4364,32 @@ weak_finish ()\n       struct weak_syms *t;\n       for (t = weak_decls; t; t = t->next)\n \t{\n-\t  ASM_WEAKEN_LABEL (asm_out_file, t->name);\n-\t  if (t->value)\n-\t    ASM_OUTPUT_DEF (asm_out_file, t->name, t->value);\n+\t  if (t->name)\n+\t    {\n+\t      ASM_WEAKEN_LABEL (asm_out_file, t->name);\n+\t      if (t->value)\n+\t\tASM_OUTPUT_DEF (asm_out_file, t->name, t->value);\n+\t    }\n+\t}\n+    }\n+#endif\n+}\n+\n+/* Remove NAME from the pending list of weak symbols.  This prevents\n+   the compiler from emitting multiple .weak directives which confuses\n+   some assemblers.  */\n+static void\n+remove_from_pending_weak_list (name)\n+     char *name;\n+{\n+#ifdef HANDLE_PRAGMA_WEAK\n+  if (HANDLE_PRAGMA_WEAK)\n+    {\n+      struct weak_syms *t;\n+      for (t = weak_decls; t; t = t->next)\n+\t{\n+\t  if (strcmp (name, t->name) == 0)\n+\t    t->name = NULL;\n \t}\n     }\n #endif\n@@ -4375,7 +4411,13 @@ assemble_alias (decl, target)\n     {\n #ifdef ASM_WEAKEN_LABEL\n       if (DECL_WEAK (decl))\n-\tASM_WEAKEN_LABEL (asm_out_file, name);\n+ \t{\n+\t  ASM_WEAKEN_LABEL (asm_out_file, name);\n+\t  /* Remove this function from the pending weak list so that\n+\t     we do not emit multiple .weak directives for it.  */\n+\t  remove_from_pending_weak_list\n+\t    (IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl)));\n+\t}\n       else\n #endif\n \tASM_GLOBALIZE_LABEL (asm_out_file, name);"}]}