{"sha": "7a5add18a367000a3a1056b937eac29de82cd482", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E1YWRkMThhMzY3MDAwYTNhMTA1NmI5MzdlYWMyOWRlODJjZDQ4Mg==", "commit": {"author": {"name": "Peter Bergner", "email": "bergner@gcc.gnu.org", "date": "2013-07-16T21:06:02Z"}, "committer": {"name": "Peter Bergner", "email": "bergner@gcc.gnu.org", "date": "2013-07-16T21:06:02Z"}, "message": "rs6000.h (FIRST_PSEUDO_REGISTERS): Mention HTM registers in the comment.\n\n\t* config/rs6000/rs6000.h (FIRST_PSEUDO_REGISTERS): Mention HTM\n\tregisters in the comment.\n\t(DWARF_FRAME_REGISTERS): Subtract also the 3 HTM registers.\n\t(DWARF_REG_TO_UNWIND_COLUMN): Use DWARF_FRAME_REGISTERS\n\trather than FIRST_PSEUDO_REGISTERS.\n\nFrom-SVN: r200988", "tree": {"sha": "e3b417bfaca7bb61c175ab12cac311ae9e8ee29c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3b417bfaca7bb61c175ab12cac311ae9e8ee29c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a5add18a367000a3a1056b937eac29de82cd482", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a5add18a367000a3a1056b937eac29de82cd482", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a5add18a367000a3a1056b937eac29de82cd482", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a5add18a367000a3a1056b937eac29de82cd482/comments", "author": null, "committer": null, "parents": [{"sha": "b1adb7c4a00957cf4669fb356e528ea520a837f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1adb7c4a00957cf4669fb356e528ea520a837f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1adb7c4a00957cf4669fb356e528ea520a837f2"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "d7a6e4d34e2061cb4e9d7d2fa4b03a3c12ce094e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5add18a367000a3a1056b937eac29de82cd482/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5add18a367000a3a1056b937eac29de82cd482/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a5add18a367000a3a1056b937eac29de82cd482", "patch": "@@ -1,4 +1,13 @@\n-2013-07-16  Peter Bergner <bergner@vnet.ibm.com>\n+2013-07-16  Jakub Jelinek  <jakub@redhat.com>\n+\t    Peter Bergner  <bergner@vnet.ibm.com>\n+\n+\t* config/rs6000/rs6000.h (FIRST_PSEUDO_REGISTERS): Mention HTM\n+\tregisters in the comment.\n+\t(DWARF_FRAME_REGISTERS): Subtract also the 3 HTM registers.\n+\t(DWARF_REG_TO_UNWIND_COLUMN): Use DWARF_FRAME_REGISTERS\n+\trather than FIRST_PSEUDO_REGISTERS.\n+\n+2013-07-16  Peter Bergner  <bergner@vnet.ibm.com>\n \n \t* config/rs6000/rs6000.c (rs6000_option_override_internal): Do not\n \tenable extra ISA flags with TARGET_HTM.\n@@ -13,7 +22,7 @@\n \t* tree-vect-data-refs.c (dr_group_sort_cmp): Do not use hash function\n \tin compare function for sorting.\n \n-2013-07-15  Peter Bergner <bergner@vnet.ibm.com>\n+2013-07-15  Peter Bergner  <bergner@vnet.ibm.com>\n \n \t* config.gcc (powerpc*-*-*): Install htmintrin.h and htmxlintrin.h.\n \t* config/rs6000/t-rs6000 (MD_INCLUDES): Add htm.md."}, {"sha": "8e96fbf356bc84a7162df4926a7ac76cdc2920c3", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5add18a367000a3a1056b937eac29de82cd482/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5add18a367000a3a1056b937eac29de82cd482/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=7a5add18a367000a3a1056b937eac29de82cd482", "patch": "@@ -892,15 +892,17 @@ enum data_align { align_abi, align_opt, align_both };\n    in inline functions.\n \n    Another pseudo (not included in DWARF_FRAME_REGISTERS) is soft frame\n-   pointer, which is eventually eliminated in favor of SP or FP.  */\n+   pointer, which is eventually eliminated in favor of SP or FP.\n+\n+   The 3 HTM registers aren't also included in DWARF_FRAME_REGISTERS.  */\n \n #define FIRST_PSEUDO_REGISTER 117\n \n /* This must be included for pre gcc 3.0 glibc compatibility.  */\n #define PRE_GCC3_DWARF_FRAME_REGISTERS 77\n \n /* Add 32 dwarf columns for synthetic SPE registers.  */\n-#define DWARF_FRAME_REGISTERS ((FIRST_PSEUDO_REGISTER - 1) + 32)\n+#define DWARF_FRAME_REGISTERS ((FIRST_PSEUDO_REGISTER - 4) + 32)\n \n /* The SPE has an additional 32 synthetic registers, with DWARF debug\n    info numbering for these registers starting at 1200.  While eh_frame\n@@ -916,7 +918,7 @@ enum data_align { align_abi, align_opt, align_both };\n    We must map them here to avoid huge unwinder tables mostly consisting\n    of unused space.  */\n #define DWARF_REG_TO_UNWIND_COLUMN(r) \\\n-  ((r) > 1200 ? ((r) - 1200 + FIRST_PSEUDO_REGISTER - 1) : (r))\n+  ((r) > 1200 ? ((r) - 1200 + (DWARF_FRAME_REGISTERS - 32)) : (r))\n \n /* Use standard DWARF numbering for DWARF debugging information.  */\n #define DBX_REGISTER_NUMBER(REGNO) rs6000_dbx_register_number (REGNO)"}]}