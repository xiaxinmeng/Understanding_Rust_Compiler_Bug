{"sha": "14291bc7fa7e391243dfa1077d96c8246374d319", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQyOTFiYzdmYTdlMzkxMjQzZGZhMTA3N2Q5NmM4MjQ2Mzc0ZDMxOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-12-12T06:40:27Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-12-12T06:40:27Z"}, "message": "alpha.h (TARGET_FIXUP_EV5_PREFETCH): New.\n\n        * config/alpha/alpha.h (TARGET_FIXUP_EV5_PREFETCH): New.\n        * config/alpha/linux.h (TARGET_FIXUP_EV5_PREFETCH): New.\n        * config/alpha/alpha.md (prefetch): New.\n\nFrom-SVN: r47922", "tree": {"sha": "a52a8160ddc621b801a25bf5456b2c0ff598fc8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a52a8160ddc621b801a25bf5456b2c0ff598fc8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14291bc7fa7e391243dfa1077d96c8246374d319", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14291bc7fa7e391243dfa1077d96c8246374d319", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14291bc7fa7e391243dfa1077d96c8246374d319", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14291bc7fa7e391243dfa1077d96c8246374d319/comments", "author": null, "committer": null, "parents": [{"sha": "8deb7514502cebe4e025bd278a511fd930dc28e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8deb7514502cebe4e025bd278a511fd930dc28e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8deb7514502cebe4e025bd278a511fd930dc28e0"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "391106285b054b161f3e1f56d22969956c2d3152", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14291bc7fa7e391243dfa1077d96c8246374d319/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14291bc7fa7e391243dfa1077d96c8246374d319/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=14291bc7fa7e391243dfa1077d96c8246374d319", "patch": "@@ -1,3 +1,9 @@\n+2001-12-11  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/alpha/alpha.h (TARGET_FIXUP_EV5_PREFETCH): New.\n+\t* config/alpha/linux.h (TARGET_FIXUP_EV5_PREFETCH): New.\n+\t* config/alpha/alpha.md (prefetch): New.\n+\n 2001-12-11  Richard Henderson  <rth@redhat.com>\n \n \t* combine.c (simplify_and_const_int): Simplify (AND (PLUS X Y) C)"}, {"sha": "3fc2796e524726d9cde73367674a8aaa3f8fd8e6", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14291bc7fa7e391243dfa1077d96c8246374d319/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14291bc7fa7e391243dfa1077d96c8246374d319/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=14291bc7fa7e391243dfa1077d96c8246374d319", "patch": "@@ -206,6 +206,9 @@ extern enum alpha_fp_trap_mode alpha_fptm;\n #ifndef TARGET_LD_BUGGY_LDGP\n #define TARGET_LD_BUGGY_LDGP 0\n #endif\n+#ifndef TARGET_FIXUP_EV5_PREFETCH\n+#define TARGET_FIXUP_EV5_PREFETCH 0\n+#endif\n \n /* Macro to define tables used to set the flags.\n    This is a list in braces of pairs in braces,"}, {"sha": "d1634aafea50c39a07ced7b342baa7cf00a2cd62", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14291bc7fa7e391243dfa1077d96c8246374d319/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14291bc7fa7e391243dfa1077d96c8246374d319/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=14291bc7fa7e391243dfa1077d96c8246374d319", "patch": "@@ -6716,6 +6716,44 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi\"\n   [(set_attr \"length\" \"16\")\n    (set_attr \"type\" \"multi\")])\n \n+;; Prefetch data.  \n+;;\n+;; On EV4, these instructions are nops -- no load occurs.\n+;;\n+;; On EV5, these instructions act as a normal load, and thus can trap\n+;; if the address is invalid.  The OS may (or may not) handle this in\n+;; the entMM fault handler and suppress the fault.  If so, then this\n+;; has the effect of a read prefetch instruction.\n+;;\n+;; On EV6, these become official prefetch instructions.\n+\n+(define_insn \"prefetch\"\n+  [(prefetch (match_operand:DI 0 \"address_operand\" \"p\")\n+\t     (match_operand:DI 1 \"const_int_operand\" \"n\")\n+\t     (match_operand:DI 2 \"const_int_operand\" \"n\"))]\n+  \"TARGET_FIXUP_EV5_PREFETCH || TARGET_CPU_EV6\"\n+{\n+  /* Interpret \"no temporal locality\" as this data should be evicted once\n+     it is used.  The \"evict next\" alternatives load the data into the cache\n+     and leave the LRU eviction counter pointing to that block.  */\n+  static const char * const alt[2][2] = {\n+    { \n+      \"lds $f31,%a0\",\t\t/* read, evict next */\n+      \"ldl $31,%a0\",\t\t/* read, evict last */\n+    },\n+    {\n+      \"ldt $f31,%a0\",\t\t/* write, evict next */\n+      \"ldq $31,%a0\",\t\t/* write, evict last */\n+    }\n+  };\n+\n+  bool write = INTVAL (operands[1]) != 0;\n+  bool lru = INTVAL (operands[2]) != 0;\n+\n+  return alt[write][lru];\n+}\n+  [(set_attr \"type\" \"ild\")])\n+\n ;; Close the trap shadow of preceding instructions.  This is generated\n ;; by alpha_reorg.\n "}, {"sha": "8a1b93f28234e535270d52e25356cefa157eda24", "filename": "gcc/config/alpha/linux.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14291bc7fa7e391243dfa1077d96c8246374d319/gcc%2Fconfig%2Falpha%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14291bc7fa7e391243dfa1077d96c8246374d319/gcc%2Fconfig%2Falpha%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Flinux.h?ref=14291bc7fa7e391243dfa1077d96c8246374d319", "patch": "@@ -46,6 +46,10 @@ SUB_CPP_PREDEFINES\n #undef TARGET_CAN_FAULT_IN_PROLOGUE\n #define TARGET_CAN_FAULT_IN_PROLOGUE 1\n \n+/* OS fixes up EV5 data fault on prefetch.  */\n+#undef TARGET_FIXUP_EV5_PREFETCH\n+#define TARGET_FIXUP_EV5_PREFETCH 1\n+\n #undef WCHAR_TYPE\n #define WCHAR_TYPE \"int\"\n "}]}