{"sha": "6283d5ad4779d3e5b7b2a93e76de03264a7c7cc6", "node_id": "C_kwDOANBUbNoAKDYyODNkNWFkNDc3OWQzZTViN2IyYTkzZTc2ZGUwMzI2NGE3YzdjYzY", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-04-06T15:36:54Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-04-06T15:42:07Z"}, "message": "sh: Fix up __attribute__((optimize (\"Os\"))) handling on SH [PR105069]\n\nAs mentioned in the PR, various tests on sh-elf ICE like:\nmake check-gcc RUNTESTFLAGS=\"compile.exp='pr104327.c pr58332.c pr81360.c pr84425.c'\"\nFAIL: gcc.c-torture/compile/pr104327.c   -O0  (internal compiler error: 'global_options' are modified in local context)\nFAIL: gcc.c-torture/compile/pr104327.c   -O0  (test for excess errors)\nFAIL: gcc.c-torture/compile/pr104327.c   -O1  (internal compiler error: 'global_options' are modified in local context)\nFAIL: gcc.c-torture/compile/pr104327.c   -O1  (test for excess errors)\nFAIL: gcc.c-torture/compile/pr104327.c   -O2  (internal compiler error: 'global_options' are modified in local context)\nFAIL: gcc.c-torture/compile/pr104327.c   -O2  (test for excess errors)\nFAIL: gcc.c-torture/compile/pr104327.c   -O3 -g  (internal compiler error: 'global_options' are modified in local context)\nFAIL: gcc.c-torture/compile/pr104327.c   -O3 -g  (test for excess errors)\nFAIL: gcc.c-torture/compile/pr104327.c   -Os  (test for excess errors)\nFAIL: gcc.c-torture/compile/pr58332.c   -O0  (test for excess errors)\nFAIL: gcc.c-torture/compile/pr58332.c   -O1  (internal compiler error: 'global_options' are modified in local context)\nFAIL: gcc.c-torture/compile/pr58332.c   -O1  (test for excess errors)\nFAIL: gcc.c-torture/compile/pr58332.c   -O2  (internal compiler error: 'global_options' are modified in local context)\nFAIL: gcc.c-torture/compile/pr58332.c   -O2  (test for excess errors)\nFAIL: gcc.c-torture/compile/pr58332.c   -O3 -g  (internal compiler error: 'global_options' are modified in local context)\nFAIL: gcc.c-torture/compile/pr58332.c   -O3 -g  (test for excess errors)\nFAIL: gcc.c-torture/compile/pr58332.c   -Os  (internal compiler error: 'global_options' are modified in local context)\nFAIL: gcc.c-torture/compile/pr58332.c   -Os  (test for excess errors)\nFAIL: gcc.c-torture/compile/pr81360.c   -O0  (test for excess errors)\nFAIL: gcc.c-torture/compile/pr81360.c   -O1  (internal compiler error: 'global_options' are modified in local context)\nFAIL: gcc.c-torture/compile/pr81360.c   -O1  (test for excess errors)\nFAIL: gcc.c-torture/compile/pr81360.c   -O2  (internal compiler error: 'global_options' are modified in local context)\nFAIL: gcc.c-torture/compile/pr81360.c   -O2  (test for excess errors)\nFAIL: gcc.c-torture/compile/pr81360.c   -O3 -g  (internal compiler error: 'global_options' are modified in local context)\nFAIL: gcc.c-torture/compile/pr81360.c   -O3 -g  (test for excess errors)\nFAIL: gcc.c-torture/compile/pr81360.c   -Os  (internal compiler error: 'global_options' are modified in local context)\nFAIL: gcc.c-torture/compile/pr81360.c   -Os  (test for excess errors)\nFAIL: gcc.c-torture/compile/pr84425.c   -O0  (test for excess errors)\nFAIL: gcc.c-torture/compile/pr84425.c   -O1  (internal compiler error: 'global_options' are modified in local context)\nFAIL: gcc.c-torture/compile/pr84425.c   -O1  (test for excess errors)\nFAIL: gcc.c-torture/compile/pr84425.c   -O2  (internal compiler error: 'global_options' are modified in local context)\nFAIL: gcc.c-torture/compile/pr84425.c   -O2  (test for excess errors)\nFAIL: gcc.c-torture/compile/pr84425.c   -O3 -g  (internal compiler error: 'global_options' are modified in local context)\nFAIL: gcc.c-torture/compile/pr84425.c   -O3 -g  (test for excess errors)\nFAIL: gcc.c-torture/compile/pr84425.c   -Os  (internal compiler error: 'global_options' are modified in local context)\nFAIL: gcc.c-torture/compile/pr84425.c   -Os  (test for excess errors)\nWith the following patch, none of those tests ICE anymore, though\npr104327.c still FAILs with:\nExcess errors:\n/usr/src/gcc/gcc/testsuite/gcc.c-torture/compile/pr104327.c:6:1: error: inlining failed in call to 'always_inline' 'bar': target specific option mismatch\nI think that would be fixable by overriding TARGET_CAN_INLINE_P\nhook and allowing at least for always_inline changes in sh_div_str.\n\n2022-04-06  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/105069\n\t* config/sh/sh.opt (mdiv=): Add Save.", "tree": {"sha": "ecea188ab4fd78de18f3e49248b5041efb0d2ede", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecea188ab4fd78de18f3e49248b5041efb0d2ede"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6283d5ad4779d3e5b7b2a93e76de03264a7c7cc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6283d5ad4779d3e5b7b2a93e76de03264a7c7cc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6283d5ad4779d3e5b7b2a93e76de03264a7c7cc6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6283d5ad4779d3e5b7b2a93e76de03264a7c7cc6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "717b2d4191e80dc8aae3847675de73ed3f611fb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/717b2d4191e80dc8aae3847675de73ed3f611fb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/717b2d4191e80dc8aae3847675de73ed3f611fb7"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f494ab84d4aac2a84ab4ebf5437cfd805204fb46", "filename": "gcc/config/sh/sh.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6283d5ad4779d3e5b7b2a93e76de03264a7c7cc6/gcc%2Fconfig%2Fsh%2Fsh.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6283d5ad4779d3e5b7b2a93e76de03264a7c7cc6/gcc%2Fconfig%2Fsh%2Fsh.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.opt?ref=6283d5ad4779d3e5b7b2a93e76de03264a7c7cc6", "patch": "@@ -207,7 +207,7 @@ Target RejectNegative Mask(ALIGN_DOUBLE)\n Align doubles at 64-bit boundaries.\n \n mdiv=\n-Target RejectNegative Joined Var(sh_div_str) Init(\"\")\n+Target Save RejectNegative Joined Var(sh_div_str) Init(\"\")\n Division strategy, one of: call-div1, call-fp, call-table.\n \n mdivsi3_libfunc="}]}