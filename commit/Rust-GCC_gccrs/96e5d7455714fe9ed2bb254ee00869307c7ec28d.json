{"sha": "96e5d7455714fe9ed2bb254ee00869307c7ec28d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZlNWQ3NDU1NzE0ZmU5ZWQyYmIyNTRlZTAwODY5MzA3YzdlYzI4ZA==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2006-05-28T01:01:12Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2006-05-28T01:01:12Z"}, "message": "Fix whitespacing\n\nFrom-SVN: r114164", "tree": {"sha": "183ed05f51ee8ccc424a9e836207d11f6a6d6e9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/183ed05f51ee8ccc424a9e836207d11f6a6d6e9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96e5d7455714fe9ed2bb254ee00869307c7ec28d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96e5d7455714fe9ed2bb254ee00869307c7ec28d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96e5d7455714fe9ed2bb254ee00869307c7ec28d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96e5d7455714fe9ed2bb254ee00869307c7ec28d/comments", "author": null, "committer": null, "parents": [{"sha": "80ecfbb9f884a75143360d35187d8d0c79ba5fa5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80ecfbb9f884a75143360d35187d8d0c79ba5fa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80ecfbb9f884a75143360d35187d8d0c79ba5fa5"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "6addd979f9470ab85c233ee115635f041ab837e9", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e5d7455714fe9ed2bb254ee00869307c7ec28d/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e5d7455714fe9ed2bb254ee00869307c7ec28d/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=96e5d7455714fe9ed2bb254ee00869307c7ec28d", "patch": "@@ -3540,9 +3540,9 @@ next_sjlj_build_enter_and_setjmp (void)\n   return build3 (COND_EXPR, void_type_node, cond, NULL, NULL);\n }\n \n-/* Build\n-\tDECL = objc_exception_extract(&_stack);\n-*/\n+/* Build:\n+\n+   DECL = objc_exception_extract(&_stack);  */\n    \n static tree\n next_sjlj_build_exc_extract (tree decl)\n@@ -5195,6 +5195,7 @@ generate_ivars_list (tree type, const char *name, int size, tree list)\n }\n \n /* Count only the fields occurring in T.  */\n+\n static int\n ivar_list_length (tree t)\n {\n@@ -6889,6 +6890,7 @@ lookup_method_static (tree interface, tree ident, int flags)\n \n /* Add the method to the hash list if it doesn't contain an identical\n    method already. */\n+\n static void\n add_method_to_hash_list (hash *hash_list, tree method)\n {"}]}