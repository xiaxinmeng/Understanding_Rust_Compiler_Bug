{"sha": "5d6e834ecf212e7fc6f585b154af224d2e38c749", "node_id": "C_kwDOANBUbNoAKDVkNmU4MzRlY2YyMTJlN2ZjNmY1ODViMTU0YWYyMjRkMmUzOGM3NDk", "commit": {"author": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2022-10-20T09:07:05Z"}, "committer": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2022-10-20T09:07:05Z"}, "message": "vect: Simplify first for shifted value generation [PR107240]\n\nAs PR107240 shows, when both the value to be shifted and the\ncount used for shifting are constants, it can be simplified\nto one constant value, and doesn't actually require to check\nif the current target supports vector shift operations or not.\n\nThis patch uses a canonical way proposed by Richi to generate\nthe shifted value, if it can be simplified, the shift operation\nwould be gone, otherwise it's the same as before.\n\nIt can help to fix the failures of vect-bitfield-write-{2,3}.c\non Power.\n\n\tPR tree-optimization/107240\n\n2022-10-20  Richard Biener  <rguenther@suse.de>\n\ngcc/ChangeLog:\n\n\t* tree-vect-patterns.cc (vect_recog_bit_insert_pattern): Attempt to\n\tsimplify shifted value first.", "tree": {"sha": "8a23370287fca9406da255f2286fef241f3dc0f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a23370287fca9406da255f2286fef241f3dc0f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d6e834ecf212e7fc6f585b154af224d2e38c749", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d6e834ecf212e7fc6f585b154af224d2e38c749", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d6e834ecf212e7fc6f585b154af224d2e38c749", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d6e834ecf212e7fc6f585b154af224d2e38c749/comments", "author": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2e28389354495a532eb4b7124106b21236f4f72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2e28389354495a532eb4b7124106b21236f4f72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2e28389354495a532eb4b7124106b21236f4f72"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "d18e1e609969bfc601c41bb17b683660895b3dec", "filename": "gcc/tree-vect-patterns.cc", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d6e834ecf212e7fc6f585b154af224d2e38c749/gcc%2Ftree-vect-patterns.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d6e834ecf212e7fc6f585b154af224d2e38c749/gcc%2Ftree-vect-patterns.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.cc?ref=5d6e834ecf212e7fc6f585b154af224d2e38c749", "patch": "@@ -2098,11 +2098,12 @@ vect_recog_bit_insert_pattern (vec_info *vinfo, stmt_vec_info stmt_info,\n   tree shifted = value;\n   if (shift_n)\n     {\n-      pattern_stmt\n-\t= gimple_build_assign (vect_recog_temp_ssa_var (container_type),\n-\t\t\t       LSHIFT_EXPR, value, shift);\n-      append_pattern_def_seq (vinfo, stmt_info, pattern_stmt);\n-      shifted = gimple_get_lhs (pattern_stmt);\n+      gimple_seq stmts = NULL;\n+      shifted\n+\t= gimple_build (&stmts, LSHIFT_EXPR, container_type, value, shift);\n+      if (!gimple_seq_empty_p (stmts))\n+\tappend_pattern_def_seq (vinfo, stmt_info,\n+\t\t\t\tgimple_seq_first_stmt (stmts));\n     }\n \n   tree mask_t"}]}