{"sha": "953aad61517913685a0848cdb6c3078a4a7a43f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTUzYWFkNjE1MTc5MTM2ODVhMDg0OGNkYjZjMzA3OGE0YTdhNDNmMg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-02-08T21:08:44Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-02-08T21:08:44Z"}, "message": "re PR ipa/63566 (i686 bootstrap fails: ICE RTL flag check: INSN_UID used with unexpected rtx code 'set' in INSN_UID, at rtl.h:1326)\n\n\n\tPR ipa/63566 \n\t* ipa-visibility.c (cgraph_node::non_local_p): Accept aliases.\n\t(cgraph_node::local_p): Remove thunk related FIXME.\n\nFrom-SVN: r220521", "tree": {"sha": "93581bf5a3951c0e31978c7516fe277a75b60a7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93581bf5a3951c0e31978c7516fe277a75b60a7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/953aad61517913685a0848cdb6c3078a4a7a43f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/953aad61517913685a0848cdb6c3078a4a7a43f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/953aad61517913685a0848cdb6c3078a4a7a43f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/953aad61517913685a0848cdb6c3078a4a7a43f2/comments", "author": null, "committer": null, "parents": [{"sha": "ead0ba5768adbf6a275dff580a1bf3e06d677bc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ead0ba5768adbf6a275dff580a1bf3e06d677bc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ead0ba5768adbf6a275dff580a1bf3e06d677bc8"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "6815c20c6f60bfa9934275ea0ff3bc15cd8882ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/953aad61517913685a0848cdb6c3078a4a7a43f2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/953aad61517913685a0848cdb6c3078a4a7a43f2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=953aad61517913685a0848cdb6c3078a4a7a43f2", "patch": "@@ -1,3 +1,9 @@\n+2015-02-08  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/63566 \n+\t* ipa-visibility.c (cgraph_node::non_local_p): Accept aliases.\n+\t(cgraph_node::local_p): Remove thunk related FIXME.\n+\n 2015-02-08  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR ipa/63566 "}, {"sha": "00b28e6e89c02c3572004266330b2885d3f1f2b4", "filename": "gcc/ipa-visibility.c", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/953aad61517913685a0848cdb6c3078a4a7a43f2/gcc%2Fipa-visibility.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/953aad61517913685a0848cdb6c3078a4a7a43f2/gcc%2Fipa-visibility.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-visibility.c?ref=953aad61517913685a0848cdb6c3078a4a7a43f2", "patch": "@@ -104,14 +104,15 @@ along with GCC; see the file COPYING3.  If not see\n bool\n cgraph_node::non_local_p (struct cgraph_node *node, void *data ATTRIBUTE_UNUSED)\n {\n-   /* FIXME: Aliases can be local, but i386 gets thunks wrong then.  */\n-   return !(node->only_called_directly_or_aliased_p ()\n-\t    && !node->has_aliases_p ()\n-\t    && node->definition\n-\t    && !DECL_EXTERNAL (node->decl)\n-\t    && !node->externally_visible\n-\t    && !node->used_from_other_partition\n-\t    && !node->in_other_partition);\n+  return !(node->only_called_directly_or_aliased_p ()\n+\t   /* i386 would need update to output thunk with locak calling\n+\t      ocnvetions.  */\n+\t   && !node->thunk.thunk_p\n+\t   && node->definition\n+\t   && !DECL_EXTERNAL (node->decl)\n+\t   && !node->externally_visible\n+\t   && !node->used_from_other_partition\n+\t   && !node->in_other_partition);\n }\n \n /* Return true when function can be marked local.  */\n@@ -121,12 +122,10 @@ cgraph_node::local_p (void)\n {\n    cgraph_node *n = ultimate_alias_target ();\n \n-   /* FIXME: thunks can be considered local, but we need prevent i386\n-      from attempting to change calling convention of them.  */\n    if (n->thunk.thunk_p)\n-     return false;\n+     return n->callees->callee->local_p ();\n    return !n->call_for_symbol_thunks_and_aliases (cgraph_node::non_local_p,\n-\t\t\t\t\t\tNULL, true);\n+\t\t\t\t\t\t  NULL, true);\n \t\t\t\t\t\n }\n "}]}