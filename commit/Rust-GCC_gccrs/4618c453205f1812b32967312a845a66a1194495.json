{"sha": "4618c453205f1812b32967312a845a66a1194495", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDYxOGM0NTMyMDVmMTgxMmIzMjk2NzMxMmE4NDVhNjZhMTE5NDQ5NQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-06-01T10:33:35Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-06-01T10:33:35Z"}, "message": "re PR tree-optimization/71311 (spec2006 test case 416.gamess fails since r235817)\n\n2016-06-01  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/71311\n\t* match.pd (@0 < @1 && @0 < @2 -> @0 < min(@1,@2)): Add :c and\n\trestrict to non-INTEGER_CST @0.\n\nFrom-SVN: r236980", "tree": {"sha": "2d7310dadd055735f6b4ca5fc1c0cec9f8c7e6a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d7310dadd055735f6b4ca5fc1c0cec9f8c7e6a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4618c453205f1812b32967312a845a66a1194495", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4618c453205f1812b32967312a845a66a1194495", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4618c453205f1812b32967312a845a66a1194495", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4618c453205f1812b32967312a845a66a1194495/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a8e9f9a310c7073dbf656cf4d47b72bff4605a2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8e9f9a310c7073dbf656cf4d47b72bff4605a2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8e9f9a310c7073dbf656cf4d47b72bff4605a2d"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "92a4ed521ffd0d1e85309638970cded0664c1010", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4618c453205f1812b32967312a845a66a1194495/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4618c453205f1812b32967312a845a66a1194495/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4618c453205f1812b32967312a845a66a1194495", "patch": "@@ -1,3 +1,9 @@\n+2016-06-01  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/71311\n+\t* match.pd (@0 < @1 && @0 < @2 -> @0 < min(@1,@2)): Add :c and\n+\trestrict to non-INTEGER_CST @0.\n+\n 2016-06-01  Richard Biener  <rguenther@suse.de>\n \n \t* match.pd ((A & B) - (A & ~B) -> B - (A ^ B)): Add missing :c."}, {"sha": "4d66243d78e7881364594f93779f6041ce367be3", "filename": "gcc/match.pd", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4618c453205f1812b32967312a845a66a1194495/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4618c453205f1812b32967312a845a66a1194495/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=4618c453205f1812b32967312a845a66a1194495", "patch": "@@ -3230,8 +3230,9 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n (for op (lt le gt ge)\n      ext (min min max max)\n  (simplify\n-  (bit_and (op:s @0 @1) (op:s @0 @2))\n-  (if (INTEGRAL_TYPE_P (TREE_TYPE (@0)))\n+  (bit_and (op:cs @0 @1) (op:cs @0 @2))\n+  (if (INTEGRAL_TYPE_P (TREE_TYPE (@0))\n+       && TREE_CODE (@0) != INTEGER_CST)\n    (op @0 (ext @1 @2)))))\n \n (simplify"}]}