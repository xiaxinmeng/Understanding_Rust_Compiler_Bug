{"sha": "7c476bdec6f46df5da4984a0a0cdff2ce4f00ff1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M0NzZiZGVjNmY0NmRmNWRhNDk4NGEwYTBjZGZmMmNlNGYwMGZmMQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-02-08T20:00:30Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-02-08T20:00:30Z"}, "message": "real.c (encode_ibm_extended): Normalize the input value before converting it to a double.\n\n\t* real.c (encode_ibm_extended): Normalize the input value before\n\tconverting it to a double.  Handle the case where a normal value\n\trounds to infinity.\n\nFrom-SVN: r77498", "tree": {"sha": "552097bec08beca4ae6f4b3379ee0a4735807d29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/552097bec08beca4ae6f4b3379ee0a4735807d29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c476bdec6f46df5da4984a0a0cdff2ce4f00ff1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c476bdec6f46df5da4984a0a0cdff2ce4f00ff1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c476bdec6f46df5da4984a0a0cdff2ce4f00ff1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c476bdec6f46df5da4984a0a0cdff2ce4f00ff1/comments", "author": null, "committer": null, "parents": [{"sha": "56ae04afa2cabf3efabc991cfb765cf5fe1b547c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56ae04afa2cabf3efabc991cfb765cf5fe1b547c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56ae04afa2cabf3efabc991cfb765cf5fe1b547c"}], "stats": {"total": 44, "additions": 40, "deletions": 4}, "files": [{"sha": "8ea1cd6f7cdf5a3dc35352c377d54dd7ee9008c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c476bdec6f46df5da4984a0a0cdff2ce4f00ff1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c476bdec6f46df5da4984a0a0cdff2ce4f00ff1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c476bdec6f46df5da4984a0a0cdff2ce4f00ff1", "patch": "@@ -1,3 +1,9 @@\n+2004-02-08  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* real.c (encode_ibm_extended): Normalize the input value before\n+\tconverting it to a double.  Handle the case where a normal value\n+\trounds to infinity.\n+\n 2004-02-08  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* c-objc-common.c (): Fix a typo in a warning."}, {"sha": "474da31df6c25a6531f5bb94349f0687d92a6821", "filename": "gcc/real.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c476bdec6f46df5da4984a0a0cdff2ce4f00ff1/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c476bdec6f46df5da4984a0a0cdff2ce4f00ff1/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=7c476bdec6f46df5da4984a0a0cdff2ce4f00ff1", "patch": "@@ -3230,19 +3230,24 @@ static void\n encode_ibm_extended (const struct real_format *fmt, long *buf,\n \t\t     const REAL_VALUE_TYPE *r)\n {\n-  REAL_VALUE_TYPE u, v;\n+  REAL_VALUE_TYPE u, normr, v;\n   const struct real_format *base_fmt;\n \n   base_fmt = fmt->qnan_msb_set ? &ieee_double_format : &mips_double_format;\n \n+  /* Renormlize R before doing any arithmetic on it.  */\n+  normr = *r;\n+  if (normr.class == rvc_normal)\n+    normalize (&normr);\n+\n   /* u = IEEE double precision portion of significand.  */\n-  u = *r;\n+  u = normr;\n   round_for_format (base_fmt, &u);\n   encode_ieee_double (base_fmt, &buf[0], &u);\n \n-  if (r->class == rvc_normal)\n+  if (u.class == rvc_normal)\n     {\n-      do_add (&v, r, &u, 1);\n+      do_add (&v, &normr, &u, 1);\n       round_for_format (base_fmt, &v);\n       encode_ieee_double (base_fmt, &buf[2], &v);\n     }"}, {"sha": "d8aa19d5f7770cdd593e3f88eaed74d099bfb886", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c476bdec6f46df5da4984a0a0cdff2ce4f00ff1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c476bdec6f46df5da4984a0a0cdff2ce4f00ff1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7c476bdec6f46df5da4984a0a0cdff2ce4f00ff1", "patch": "@@ -1,3 +1,7 @@\n+2004-02-08  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* gcc.c-torture/execute/20040208-[12].c: New tests.\n+\n 2004-02-08  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* g++.dg/eh/simd-2.C: Adjust line numbers for SPARC."}, {"sha": "0235759107272349eadfcb9c20775f2ca6cf2e1d", "filename": "gcc/testsuite/gcc.c-torture/execute/20040208-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c476bdec6f46df5da4984a0a0cdff2ce4f00ff1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040208-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c476bdec6f46df5da4984a0a0cdff2ce4f00ff1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040208-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040208-1.c?ref=7c476bdec6f46df5da4984a0a0cdff2ce4f00ff1", "patch": "@@ -0,0 +1,10 @@\n+int main ()\n+{\n+  long double x;\n+\n+  x = 0x1.0p-500L;\n+  x *= 0x1.0p-522L;\n+  if (x != 0x1.0p-1022L)\n+    abort ();\n+  exit (0);\n+}"}, {"sha": "d8a5afc946237e509f741f5b38f4696d08ff07a2", "filename": "gcc/testsuite/gcc.c-torture/execute/20040208-2.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c476bdec6f46df5da4984a0a0cdff2ce4f00ff1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040208-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c476bdec6f46df5da4984a0a0cdff2ce4f00ff1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040208-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040208-2.c?ref=7c476bdec6f46df5da4984a0a0cdff2ce4f00ff1", "patch": "@@ -0,0 +1,11 @@\n+int main ()\n+{\n+  long double x, y;\n+\n+  x = 0x1.fffffffffffff8p1022L;\n+  x *= 2;\n+  y = 0x1.fffffffffffff8p1023L;\n+  if (memcmp (&x, &y, sizeof (x)) != 0)\n+    abort ();\n+  exit (0);\n+}"}]}