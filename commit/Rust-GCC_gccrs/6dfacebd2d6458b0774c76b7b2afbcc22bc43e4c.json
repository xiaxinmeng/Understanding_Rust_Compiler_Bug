{"sha": "6dfacebd2d6458b0774c76b7b2afbcc22bc43e4c", "node_id": "C_kwDOANBUbNoAKDZkZmFjZWJkMmQ2NDU4YjA3NzRjNzZiN2IyYWZiY2MyMmJjNDNlNGM", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-01-29T15:34:57Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-01-30T16:42:18Z"}, "message": "RISC-V: Add VSETVL testcases for indexed loads/stores.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-72.c: New test.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-76.c: New test.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-77.c: New test.", "tree": {"sha": "10de9f9e22dff3ca04fc5355b0ace0f1fbb076e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10de9f9e22dff3ca04fc5355b0ace0f1fbb076e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6dfacebd2d6458b0774c76b7b2afbcc22bc43e4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dfacebd2d6458b0774c76b7b2afbcc22bc43e4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dfacebd2d6458b0774c76b7b2afbcc22bc43e4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dfacebd2d6458b0774c76b7b2afbcc22bc43e4c/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c9bcb6c7ec70aba260a388469fd88f31fe08d15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c9bcb6c7ec70aba260a388469fd88f31fe08d15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c9bcb6c7ec70aba260a388469fd88f31fe08d15"}], "stats": {"total": 78, "additions": 78, "deletions": 0}, "files": [{"sha": "b1e28abd4fe1abd3962048a1c90f70f3c6cf957c", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-72.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dfacebd2d6458b0774c76b7b2afbcc22bc43e4c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-72.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dfacebd2d6458b0774c76b7b2afbcc22bc43e4c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-72.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-72.c?ref=6dfacebd2d6458b0774c76b7b2afbcc22bc43e4c", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+void f (void * restrict in, void * restrict out, int n, int cond)\n+{\n+  size_t vl = 101;\n+  for (size_t i = 0; i < n; i++)\n+    {\n+      vint8mf8_t v = __riscv_vle8_v_i8mf8 (in + i, vl);\n+      __riscv_vse8_v_i8mf8 (out + i, v, vl);\n+      \n+      vint8mf8_t v2 = __riscv_vle8_v_i8mf8_tu (v, in + i + 100, vl);\n+      __riscv_vse8_v_i8mf8 (out + i + 100, v2, vl);\n+    }\n+  \n+  for (size_t i = 0; i < n; i++)\n+    {\n+      vuint8mf8_t index = __riscv_vle8_v_u8mf8 (in + i + 300, vl);\n+      vfloat32mf2_t v2 = __riscv_vluxei8_v_f32mf2 (in + i + 200, index, vl);\n+      __riscv_vse32_v_f32mf2 (out + i + 200, v2, vl);\n+    }\n+}\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "1b6e818d209332ca9f8c3fc74c76801cb645cb8b", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-76.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dfacebd2d6458b0774c76b7b2afbcc22bc43e4c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-76.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dfacebd2d6458b0774c76b7b2afbcc22bc43e4c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-76.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-76.c?ref=6dfacebd2d6458b0774c76b7b2afbcc22bc43e4c", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+void f (void * restrict in, void * restrict out, int n, int cond)\n+{\n+  size_t vl = 101;\n+  for (size_t i = 0; i < n; i++)\n+    {\n+      vint8mf8_t v = __riscv_vle8_v_i8mf8 (in + i, vl);\n+      __riscv_vse8_v_i8mf8 (out + i, v, vl);\n+    }\n+  \n+  for (size_t i = 0; i < n; i++)\n+    {\n+      vuint8mf8_t index = __riscv_vle8_v_u8mf8 (in + i + 300, vl);\n+      vfloat32mf2_t v = __riscv_vle32_v_f32mf2 (in + i + 600, vl);\n+      __riscv_vsoxei8_v_f32mf2 (out + i + 200, index, v, vl);\n+    }\n+}\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "9fb16052385201cb49812fd815fb9cb028d59b2a", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-77.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dfacebd2d6458b0774c76b7b2afbcc22bc43e4c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-77.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dfacebd2d6458b0774c76b7b2afbcc22bc43e4c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-77.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-77.c?ref=6dfacebd2d6458b0774c76b7b2afbcc22bc43e4c", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+void f (void * restrict in, void * restrict out, int n, int cond)\n+{\n+  size_t vl = 101;\n+  for (size_t i = 0; i < n; i++)\n+    {\n+      vint8mf8_t v = __riscv_vle8_v_i8mf8 (in + i, vl);\n+      __riscv_vse8_v_i8mf8 (out + i, v, vl);\n+    }\n+  \n+  for (size_t i = 0; i < n; i++)\n+    {\n+      vbool64_t mask = __riscv_vlm_v_b64 (in + 10000, vl);\n+      vuint8mf8_t index = __riscv_vle8_v_u8mf8 (in + i + 300, vl);\n+      vfloat32mf2_t v = __riscv_vle32_v_f32mf2 (in + i + 30000, vl);\n+      vfloat32mf2_t v2 = __riscv_vluxei8_v_f32mf2_tumu (mask, v, in + i + 200, index, vl);\n+      __riscv_vse32_v_f32mf2 (out + i + 200, v2, vl);\n+    }\n+}\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+"}]}