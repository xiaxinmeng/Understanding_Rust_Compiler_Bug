{"sha": "efc955c77ff5f2c792daf174f3b68e3ea793b51c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZjOTU1Yzc3ZmY1ZjJjNzkyZGFmMTc0ZjNiNjhlM2VhNzkzYjUxYw==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1994-10-21T19:14:08Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1994-10-21T19:14:08Z"}, "message": "(LIB2FUNCS): Add _pure.\n\nFrom-SVN: r8333", "tree": {"sha": "74749ff8273a6dbaf0ee158b2d15ea20eeed110e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74749ff8273a6dbaf0ee158b2d15ea20eeed110e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efc955c77ff5f2c792daf174f3b68e3ea793b51c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efc955c77ff5f2c792daf174f3b68e3ea793b51c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efc955c77ff5f2c792daf174f3b68e3ea793b51c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efc955c77ff5f2c792daf174f3b68e3ea793b51c/comments", "author": null, "committer": null, "parents": [{"sha": "ea5df1fd4c576ebd7e900d70575202c0a706ce67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea5df1fd4c576ebd7e900d70575202c0a706ce67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea5df1fd4c576ebd7e900d70575202c0a706ce67"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "63a7114bd0edb2c01c99a1f9fb932efac2687e7e", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efc955c77ff5f2c792daf174f3b68e3ea793b51c/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efc955c77ff5f2c792daf174f3b68e3ea793b51c/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=efc955c77ff5f2c792daf174f3b68e3ea793b51c", "patch": "@@ -2287,3 +2287,13 @@ __register_exceptions (exception_table *table)\n   exception_table_list = node;\n }\n #endif /* L_eh */\n+\f\n+#ifdef L_pure\n+#define MESSAGE \"pure virtual method called\\n\"\n+void\n+__pure_virtual ()\n+{\n+  write (2, MESSAGE, sizeof (MESSAGE) - 1);\n+  _exit (-1);\n+}\n+#endif"}]}