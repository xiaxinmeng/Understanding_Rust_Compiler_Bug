{"sha": "318e45ce5af90ba0a6a80a636e7ba3a758148711", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzE4ZTQ1Y2U1YWY5MGJhMGE2YTgwYTYzNmU3YmEzYTc1ODE0ODcxMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-21T19:29:50Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-21T19:29:50Z"}, "message": "Include stdio.h and ctype.h early.\n\nAdd prototypes for static functions.\n\nFrom-SVN: r7115", "tree": {"sha": "10557761b499fa7e9c3be8c3438c0cbfbd7fb00c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10557761b499fa7e9c3be8c3438c0cbfbd7fb00c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/318e45ce5af90ba0a6a80a636e7ba3a758148711", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/318e45ce5af90ba0a6a80a636e7ba3a758148711", "html_url": "https://github.com/Rust-GCC/gccrs/commit/318e45ce5af90ba0a6a80a636e7ba3a758148711", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/318e45ce5af90ba0a6a80a636e7ba3a758148711/comments", "author": null, "committer": null, "parents": [{"sha": "9bac07c3ddc891049cd5552a7ef107531bf7a819", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bac07c3ddc891049cd5552a7ef107531bf7a819", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bac07c3ddc891049cd5552a7ef107531bf7a819"}], "stats": {"total": 54, "additions": 18, "deletions": 36}, "files": [{"sha": "06d03720274bb7780a65ff95897577abd361233c", "filename": "gcc/final.c", "status": "modified", "additions": 18, "deletions": 36, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/318e45ce5af90ba0a6a80a636e7ba3a758148711/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/318e45ce5af90ba0a6a80a636e7ba3a758148711/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=318e45ce5af90ba0a6a80a636e7ba3a758148711", "patch": "@@ -49,6 +49,9 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #else\n #include <varargs.h>\n #endif\n+#include <stdio.h>\n+#include <ctype.h>\n+\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n@@ -62,10 +65,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"real.h\"\n #include \"hard-reg-set.h\"\n #include \"defaults.h\"\n-\n-#include <stdio.h>\n-#include <ctype.h>\n-\n #include \"output.h\"\n \n /* Get N_SLINE and N_SOL from stab.h if we can expect the file to exist.  */\n@@ -111,37 +110,11 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #define IS_ASM_LOGICAL_LINE_SEPARATOR(C) ((C) == ';')\n #endif\n \n-rtx peephole ();\n-void output_asm_insn ();\n-rtx alter_subreg ();\n-static rtx walk_alter_subreg ();\n-static int alter_cond ();\n-void output_asm_label ();\n-static void output_operand ();\n-void output_address ();\n-void output_addr_const ();\n-static void output_source_line ();\n-rtx final_scan_insn ();\n-void profile_function ();\n-static void profile_after_prologue ();\n-\n-#ifdef HAVE_ATTR_length\n-static int asm_insn_count ();\n-#endif\n-\n /* Nonzero means this function is a leaf function, with no function calls. \n    This variable exists to be examined in FUNCTION_PROLOGUE\n    and FUNCTION_EPILOGUE.  Always zero, unless set by some action.  */\n int leaf_function;\n \n-int leaf_function_p ();\n-\n-#ifdef LEAF_REGISTERS\n-int only_leaf_regs_used ();\n-static void leaf_renumber_regs ();\n-void leaf_renumber_regs_insn ();\n-#endif\n-\n /* Last insn processed by final_scan_insn.  */\n static rtx debug_insn = 0;\n \n@@ -283,13 +256,22 @@ struct bb_str {\n   int length;\t\t\t/* string length */\n };\n \n+extern rtx peephole\t\tPROTO((rtx));\n+\n static struct bb_str *sbb_head\t= 0;\t\t/* Head of string list.  */\n static struct bb_str **sbb_tail\t= &sbb_head;\t/* Ptr to store next bb str */\n static int sbb_label_num\t= 0;\t\t/* Last label used */\n \n-static int add_bb_string PROTO((char *, int));\n-static void add_bb PROTO((FILE *));\n-\n+static int asm_insn_count\tPROTO((rtx));\n+static void profile_function\tPROTO((FILE *));\n+static void profile_after_prologue PROTO((FILE *));\n+static void add_bb\t\tPROTO((FILE *));\n+static int add_bb_string\tPROTO((char *, int));\n+static void output_source_line\tPROTO((FILE *, rtx));\n+static rtx walk_alter_subreg\tPROTO((rtx));\n+static int alter_cond\t\tPROTO((rtx));\n+static void output_operand\tPROTO((rtx, int));\n+static void leaf_renumber_regs\tPROTO((rtx));\n \f\n /* Initialize data in final at the beginning of a compilation.  */\n \n@@ -517,7 +499,7 @@ app_enable ()\n     }\n }\n \n-/* Enable APP processing of subsequent output.\n+/* Disable APP processing of subsequent output.\n    Called from varasm.c before most kinds of output.  */\n \n void\n@@ -557,7 +539,7 @@ int *insn_addresses;\n /* Address of insn being processed.  Used by `insn_current_length'.  */\n int insn_current_address;\n \n-/* Indicate the branch shortening hasn't yet been done.  */\n+/* Indicate that branch shortening hasn't yet been done.  */\n \n void\n init_insn_lengths ()\n@@ -961,7 +943,7 @@ profile_after_prologue (file)\n #endif /* not PROFILE_BEFORE_PROLOGUE */\n }\n \n-void\n+static void\n profile_function (file)\n      FILE *file;\n {"}]}