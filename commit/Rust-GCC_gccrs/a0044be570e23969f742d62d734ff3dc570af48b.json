{"sha": "a0044be570e23969f742d62d734ff3dc570af48b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTAwNDRiZTU3MGUyMzk2OWY3NDJkNjJkNzM0ZmYzZGM1NzBhZjQ4Yg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-09-15T21:55:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-09-15T21:55:05Z"}, "message": "tree-predcom.c (filter_suitable_components): Free all refs in act->refs vector before calling release_component.\n\n\t* tree-predcom.c (filter_suitable_components): Free all refs in\n\tact->refs vector before calling release_component.\n\t(add_ref_to_chain): Free ref if not adding it to chain->refs.\n\n\t* tree-data-ref.c (free_subscripts): Free all subscript objects.\n\n\t* tree-loop-linear.c (linear_transform_loops): Initialize\n\tlambda_obstack only after calling perfect_loop_nest_depth.\n\tGoto free_and_continue instead of just continue for later failures.\n\nFrom-SVN: r140376", "tree": {"sha": "3a80fb5ba141a335e30a28fc364cb58ee7216972", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a80fb5ba141a335e30a28fc364cb58ee7216972"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0044be570e23969f742d62d734ff3dc570af48b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0044be570e23969f742d62d734ff3dc570af48b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0044be570e23969f742d62d734ff3dc570af48b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0044be570e23969f742d62d734ff3dc570af48b/comments", "author": null, "committer": null, "parents": [{"sha": "8f57ac5a83dd534f7a2be8489b7dd04f6c68e8cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f57ac5a83dd534f7a2be8489b7dd04f6c68e8cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f57ac5a83dd534f7a2be8489b7dd04f6c68e8cf"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "5a52d266e9bcc20c90f2e9599e971ac33eba8418", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0044be570e23969f742d62d734ff3dc570af48b/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0044be570e23969f742d62d734ff3dc570af48b/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=a0044be570e23969f742d62d734ff3dc570af48b", "patch": "@@ -1398,6 +1398,7 @@ free_subscripts (VEC (subscript_p, heap) *subscripts)\n     {\n       free_conflict_function (s->conflicting_iterations_in_a);\n       free_conflict_function (s->conflicting_iterations_in_b);\n+      free (s);\n     }\n   VEC_free (subscript_p, heap, subscripts);\n }"}, {"sha": "a97433bf90940ca43ab2ba18828bd1e17efdd360", "filename": "gcc/tree-loop-linear.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0044be570e23969f742d62d734ff3dc570af48b/gcc%2Ftree-loop-linear.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0044be570e23969f742d62d734ff3dc570af48b/gcc%2Ftree-loop-linear.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-linear.c?ref=a0044be570e23969f742d62d734ff3dc570af48b", "patch": "@@ -333,12 +333,12 @@ linear_transform_loops (void)\n       lambda_loopnest before, after;\n       lambda_trans_matrix trans;\n       struct obstack lambda_obstack;\n-      gcc_obstack_init (&lambda_obstack);\n \n       depth = perfect_loop_nest_depth (loop_nest);\n       if (depth == 0)\n \tcontinue;\n \n+      gcc_obstack_init (&lambda_obstack);\n       VEC_truncate (tree, oldivs, 0);\n       VEC_truncate (tree, invariants, 0);\n       VEC_truncate (tree, lambda_parameters, 0);\n@@ -347,12 +347,12 @@ linear_transform_loops (void)\n       dependence_relations = VEC_alloc (ddr_p, heap, 10 * 10);\n       if (!compute_data_dependences_for_loop (loop_nest, true, &datarefs,\n \t\t\t\t\t      &dependence_relations))\n-\tcontinue;\n+\tgoto free_and_continue;\n       \n       lambda_collect_parameters (datarefs, &lambda_parameters);\n       if (!lambda_compute_access_matrices (datarefs, lambda_parameters,\n \t\t\t\t\t   loop_nest->num))\n-\tcontinue;\n+\tgoto free_and_continue;\n \n       if (dump_file && (dump_flags & TDF_DETAILS))\n \tdump_ddrs (dump_file, dependence_relations);"}, {"sha": "b6ccfd79cc8506f0de83658ccf160ae173c69bcc", "filename": "gcc/tree-predcom.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0044be570e23969f742d62d734ff3dc570af48b/gcc%2Ftree-predcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0044be570e23969f742d62d734ff3dc570af48b/gcc%2Ftree-predcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-predcom.c?ref=a0044be570e23969f742d62d734ff3dc570af48b", "patch": "@@ -877,7 +877,12 @@ filter_suitable_components (struct loop *loop, struct component *comps)\n \tcomp = &act->next;\n       else\n \t{\n+\t  dref ref;\n+\t  unsigned i;\n+\n \t  *comp = act->next;\n+\t  for (i = 0; VEC_iterate (dref, act->refs, i, ref); i++)\n+\t    free (ref);\n \t  release_component (act);\n \t}\n     }\n@@ -920,7 +925,10 @@ add_ref_to_chain (chain_p chain, dref ref)\n   gcc_assert (double_int_scmp (root->offset, ref->offset) <= 0);\n   dist = double_int_add (ref->offset, double_int_neg (root->offset));\n   if (double_int_ucmp (uhwi_to_double_int (MAX_DISTANCE), dist) <= 0)\n-    return;\n+    {\n+      free (ref);\n+      return;\n+    }\n   gcc_assert (double_int_fits_in_uhwi_p (dist));\n \n   VEC_safe_push (dref, heap, chain->refs, ref);"}]}