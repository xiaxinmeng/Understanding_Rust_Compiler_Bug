{"sha": "e40024ffaf03922f1f0cd4fe8e2fb78b7ed2179f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQwMDI0ZmZhZjAzOTIyZjFmMGNkNGZlOGUyZmI3OGI3ZWQyMTc5Zg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-11-15T21:36:49Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-11-15T21:36:49Z"}, "message": "lib1funcs.asm (divnorm): Store the sign in bit 3 of S2L.\n\n\t* config/h8300/lib1funcs.asm (divnorm): Store the sign in bit\n\t3 of S2L.\n\t(modnorm): Likewise.\n\t(exitdiv): Look at bit 3 of S2L only.\n\nFrom-SVN: r73635", "tree": {"sha": "18f9de3ab8f0914c628ec5d3d8a2fb43ae406345", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18f9de3ab8f0914c628ec5d3d8a2fb43ae406345"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e40024ffaf03922f1f0cd4fe8e2fb78b7ed2179f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e40024ffaf03922f1f0cd4fe8e2fb78b7ed2179f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e40024ffaf03922f1f0cd4fe8e2fb78b7ed2179f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e40024ffaf03922f1f0cd4fe8e2fb78b7ed2179f/comments", "author": null, "committer": null, "parents": [{"sha": "4cd0866d1da8f571a85bf01428912533ca145b1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cd0866d1da8f571a85bf01428912533ca145b1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cd0866d1da8f571a85bf01428912533ca145b1c"}], "stats": {"total": 27, "additions": 14, "deletions": 13}, "files": [{"sha": "161f2ba03c0a717635b7df61fb0cfea8d8303aea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e40024ffaf03922f1f0cd4fe8e2fb78b7ed2179f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e40024ffaf03922f1f0cd4fe8e2fb78b7ed2179f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e40024ffaf03922f1f0cd4fe8e2fb78b7ed2179f", "patch": "@@ -1,3 +1,10 @@\n+2003-11-15  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/lib1funcs.asm (divnorm): Store the sign in bit\n+\t3 of S2L.\n+\t(modnorm): Likewise.\n+\t(exitdiv): Look at bit 3 of S2L only.\n+\n 2003-11-15  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.h (DO_GLOBAL_CTORS_BODY): Fix warnings."}, {"sha": "381b764be58444a999c4cb826d551e9bd396ada2", "filename": "gcc/config/h8300/lib1funcs.asm", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e40024ffaf03922f1f0cd4fe8e2fb78b7ed2179f/gcc%2Fconfig%2Fh8300%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e40024ffaf03922f1f0cd4fe8e2fb78b7ed2179f/gcc%2Fconfig%2Fh8300%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Flib1funcs.asm?ref=e40024ffaf03922f1f0cd4fe8e2fb78b7ed2179f", "patch": "@@ -323,8 +323,8 @@ setbit:\tinc\tA0L\t\t; do insert bit\n #ifdef __H8300__\n \n divnorm:\n-\tmov.b\t#0,S2L\t\t; keep the sign in S2\n \tmov.b\tA0H,A0H\t\t; is the numerator -ve\n+\tstc\tccr,S2L\t\t; keep the sign in bit 3 of S2L\n \tbge\tpostive\n \n \t; negate arg\n@@ -337,8 +337,6 @@ divnorm:\n \taddx\t#0,A1H\n \taddx\t#0,A0L\n \taddx\t#0,A0H\n-\n-\tmov.b\t#1,S2L\t\t; the sign will be -ve\n postive:\n \tmov.b\tA2H,A2H\t\t; is the denominator -ve\n \tbge\tpostive2\n@@ -350,15 +348,15 @@ postive:\n \taddx\t#0,A3H\n \taddx\t#0,A2L\n \taddx\t#0,A2H\n-\txor\t#1,S2L\t\t; toggle result sign\n+\txor.b\t#0x08,S2L\t; toggle the result sign\n postive2:\n \trts\n \n ;; Basically the same, except that the sign of the divisor determines\n ;; the sign.\n modnorm:\n-\tmov.b\t#0,S2L\t\t; keep the sign in S2\n \tmov.b\tA0H,A0H\t\t; is the numerator -ve\n+\tstc\tccr,S2L\t\t; keep the sign in bit 3 of S2L\n \tbge\tmpostive\n \n \t; negate arg\n@@ -371,8 +369,6 @@ modnorm:\n \taddx\t#0,A1H\n \taddx\t#0,A0L\n \taddx\t#0,A0H\n-\n-\tmov.b\t#1,S2L\t\t; the sign will be -ve\n mpostive:\n \tmov.b\tA2H,A2H\t\t; is the denominator -ve\n \tbge\tmpostive2\n@@ -390,32 +386,30 @@ mpostive2:\n #else /* __H8300H__ */\n \n divnorm:\n-\tmov.b\t#0,S2L\t\t; keep the sign in S2\n \tmov.l\tA0P,A0P\t\t; is the numerator -ve\n+\tstc\tccr,S2L\t\t; keep the sign in bit 3 of S2L\n \tbge\tpostive\n \n \tneg.l\tA0P\t\t; negate arg\n-\tmov.b\t#1,S2L\t\t; the sign will be -ve\n \n postive:\n \tmov.l\tA1P,A1P\t\t; is the denominator -ve\n \tbge\tpostive2\n \n \tneg.l\tA1P\t\t; negate arg\n-\txor.b\t#1,S2L\t\t; toggle result sign\n+\txor.b\t#0x08,S2L\t; toggle the result sign\n \n postive2:\n \trts\n \n ;; Basically the same, except that the sign of the divisor determines\n ;; the sign.\n modnorm:\n-\tmov.b\t#0,S2L\t\t; keep the sign in S2\n \tmov.l\tA0P,A0P\t\t; is the numerator -ve\n+\tstc\tccr,S2L\t\t; keep the sign in bit 3 of S2L\n \tbge\tmpostive\n \n \tneg.l\tA0P\t\t; negate arg\n-\tmov.b\t#1,S2L\t\t; the sign will be -ve\n \n mpostive:\n \tmov.l\tA1P,A1P\t\t; is the denominator -ve\n@@ -493,7 +487,7 @@ ___divsi3:\n \n \t; examine what the sign should be\n exitdiv:\n-\tor\tS2L,S2L\n+\tbtst\t#3,S2L\n \tbeq\treti\n \n \t; should be -ve"}]}