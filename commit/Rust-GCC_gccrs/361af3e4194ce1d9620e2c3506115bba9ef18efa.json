{"sha": "361af3e4194ce1d9620e2c3506115bba9ef18efa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYxYWYzZTQxOTRjZTFkOTYyMGUyYzM1MDYxMTViYmE5ZWYxOGVmYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-06-25T07:00:34Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-06-25T07:00:34Z"}, "message": "re PR sanitizer/90954 (ICE: combining undefined behavior sanitizer with openmp)\n\n\tPR sanitizer/90954\n\t* c-omp.c (c_finish_omp_atomic): Allow tree_invariant_p in addition\n\tto SAVE_EXPR in first operand of a COMPOUND_EXPR.\n\n\t* c-c++-common/gomp/pr90954.c: New test.\n\nFrom-SVN: r272635", "tree": {"sha": "cac48b84b635c08d6384529a3016fa9e781ee107", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cac48b84b635c08d6384529a3016fa9e781ee107"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/361af3e4194ce1d9620e2c3506115bba9ef18efa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/361af3e4194ce1d9620e2c3506115bba9ef18efa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/361af3e4194ce1d9620e2c3506115bba9ef18efa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/361af3e4194ce1d9620e2c3506115bba9ef18efa/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "32bab8b6ad0a9079ae306eb7c6bbfad0d749623f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32bab8b6ad0a9079ae306eb7c6bbfad0d749623f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32bab8b6ad0a9079ae306eb7c6bbfad0d749623f"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "d40073660b8686592d7f85c393fe55a5201015a6", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/361af3e4194ce1d9620e2c3506115bba9ef18efa/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/361af3e4194ce1d9620e2c3506115bba9ef18efa/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=361af3e4194ce1d9620e2c3506115bba9ef18efa", "patch": "@@ -1,3 +1,9 @@\n+2019-06-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/90954\n+\t* c-omp.c (c_finish_omp_atomic): Allow tree_invariant_p in addition\n+\tto SAVE_EXPR in first operand of a COMPOUND_EXPR.\n+\n 2019-06-24  Jan Hubicka  <jh@suse.cz>\n \n \t* c-common.c (braced_lists_to_strings): Check that"}, {"sha": "97206a122d215e3b9380473a5bb42083c69172f6", "filename": "gcc/c-family/c-omp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/361af3e4194ce1d9620e2c3506115bba9ef18efa/gcc%2Fc-family%2Fc-omp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/361af3e4194ce1d9620e2c3506115bba9ef18efa/gcc%2Fc-family%2Fc-omp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-omp.c?ref=361af3e4194ce1d9620e2c3506115bba9ef18efa", "patch": "@@ -305,7 +305,7 @@ c_finish_omp_atomic (location_t loc, enum tree_code code,\n   if (TREE_CODE (x) == COMPOUND_EXPR)\n     {\n       pre = TREE_OPERAND (x, 0);\n-      gcc_assert (TREE_CODE (pre) == SAVE_EXPR);\n+      gcc_assert (TREE_CODE (pre) == SAVE_EXPR || tree_invariant_p (pre));\n       x = TREE_OPERAND (x, 1);\n     }\n   gcc_assert (TREE_CODE (x) == MODIFY_EXPR);"}, {"sha": "ecfca8df524368346747cb92e92a6fb070415eb3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/361af3e4194ce1d9620e2c3506115bba9ef18efa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/361af3e4194ce1d9620e2c3506115bba9ef18efa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=361af3e4194ce1d9620e2c3506115bba9ef18efa", "patch": "@@ -1,3 +1,8 @@\n+2019-06-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/90954\n+\t* c-c++-common/gomp/pr90954.c: New test.\n+\n 2019-06-24  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* gcc.target/powerpc/safe-indirect-jump-1.c: Skip for Darwin."}, {"sha": "cc3a6e9e52aacd74f4891cb6ea91da3f2813afc4", "filename": "gcc/testsuite/c-c++-common/gomp/pr90954.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/361af3e4194ce1d9620e2c3506115bba9ef18efa/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr90954.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/361af3e4194ce1d9620e2c3506115bba9ef18efa/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr90954.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr90954.c?ref=361af3e4194ce1d9620e2c3506115bba9ef18efa", "patch": "@@ -0,0 +1,27 @@\n+/* PR sanitizer/90954 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fopenmp -fsanitize=undefined\" } */\n+\n+float v;\n+int i;\n+\n+void\n+foo (float x, float y)\n+{\n+  #pragma omp atomic\n+  v += x / y;\n+}\n+\n+void\n+bar (int x, int y)\n+{\n+  #pragma omp atomic\n+  i += x / y;\n+}\n+\n+void\n+baz (int x, int y)\n+{\n+  #pragma omp atomic\n+  i *= (x << y);\n+}"}]}