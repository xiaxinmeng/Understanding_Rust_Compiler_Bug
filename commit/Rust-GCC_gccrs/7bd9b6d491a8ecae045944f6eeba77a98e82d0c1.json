{"sha": "7bd9b6d491a8ecae045944f6eeba77a98e82d0c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2JkOWI2ZDQ5MWE4ZWNhZTA0NTk0NGY2ZWViYTc3YTk4ZTgyZDBjMQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2002-05-15T14:38:30Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-05-15T14:38:30Z"}, "message": "re PR libstdc++/6518 (???)\n\n\n2002-05-15  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/6518\n\t* include/bits/ostream.tcc (ostream::operator<<(const char*)): Fix\n\tfor null case.\n\t(ostream::operator<<(const _CharT*)): Same.\n\t(ostream<char>::operator<<(const char*)): Same.\n\t* testsuite/27_io/ostream_inserter_char.cc (test07): Add test.\n\nFrom-SVN: r53489", "tree": {"sha": "fe79023e5c71a60a693b8ddca9d75c4bad305887", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe79023e5c71a60a693b8ddca9d75c4bad305887"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7bd9b6d491a8ecae045944f6eeba77a98e82d0c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bd9b6d491a8ecae045944f6eeba77a98e82d0c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bd9b6d491a8ecae045944f6eeba77a98e82d0c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bd9b6d491a8ecae045944f6eeba77a98e82d0c1/comments", "author": null, "committer": null, "parents": [{"sha": "fb5b4dfdcba3e04c784a87f1b6fa5a7d088748b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5b4dfdcba3e04c784a87f1b6fa5a7d088748b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb5b4dfdcba3e04c784a87f1b6fa5a7d088748b9"}], "stats": {"total": 55, "additions": 50, "deletions": 5}, "files": [{"sha": "b1bb70159c78c9550797b6df9d596d85b7abc41d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd9b6d491a8ecae045944f6eeba77a98e82d0c1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd9b6d491a8ecae045944f6eeba77a98e82d0c1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7bd9b6d491a8ecae045944f6eeba77a98e82d0c1", "patch": "@@ -1,3 +1,12 @@\n+2002-05-15  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/6518\n+\t* include/bits/ostream.tcc (ostream::operator<<(const char*)): Fix\n+\tfor null case.\n+\t(ostream::operator<<(const _CharT*)): Same.\n+\t(ostream<char>::operator<<(const char*)): Same.\n+\t* testsuite/27_io/ostream_inserter_char.cc (test07): Add test.\n+\t\n 2002-05-15  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/6594"}, {"sha": "550e405097ce1be3f3f8e848849e1c68fdfb65b1", "filename": "libstdc++-v3/include/bits/ostream.tcc", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd9b6d491a8ecae045944f6eeba77a98e82d0c1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd9b6d491a8ecae045944f6eeba77a98e82d0c1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc?ref=7bd9b6d491a8ecae045944f6eeba77a98e82d0c1", "patch": "@@ -545,7 +545,8 @@ namespace std\n \t    {\n \t      streamsize __w = __out.width();\n \t      _CharT* __pads = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) * __w));\n-\t      streamsize __len = static_cast<streamsize>(_Traits::length(__s));\n+\t      streamsize __len = __s \n+\t\t           ? static_cast<streamsize>(_Traits::length(__s)) : 0;\n \t      if (__w > __len)\n \t\t{\n \t\t  __pad(__out, __out.fill(), __pads, __s, __w, __len, false);\n@@ -554,6 +555,8 @@ namespace std\n \t\t}\n \t      __out.write(__s, __len);\n \t      __out.width(0);\n+\t      if (!__len)\n+\t\t__out.setstate(ios_base::badbit);\n \t    }\n \t  catch(exception& __fail)\n \t    {\n@@ -575,14 +578,14 @@ namespace std\n #ifdef _GLIBCPP_RESOLVE_LIB_DEFECTS\n // 167.  Improper use of traits_type::length()\n // Note that this is only in 'Review' status.\n-      typedef char_traits<char>\t\t     __ctraits_type;\n+      typedef char_traits<char>\t\t     __traits_type;\n #endif\n       typename __ostream_type::sentry __cerb(__out);\n       if (__cerb)\n \t{\n-\t  size_t __clen = __ctraits_type::length(__s);\n+\t  size_t __clen = __s ? __traits_type::length(__s) : 0;\n \t  _CharT* __ws = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) * (__clen + 1)));\n-\t  for (size_t  __i = 0; __i <= __clen; ++__i)\n+\t  for (size_t  __i = 0; __i < __clen; ++__i)\n \t    __ws[__i] = __out.widen(__s[__i]);\n \t  _CharT* __str = __ws;\n \t  \n@@ -600,6 +603,8 @@ namespace std\n \t\t}\n \t      __out.write(__str, __len);\n \t      __out.width(0);\n+\t      if (!__len)\n+\t\t__out.setstate(ios_base::badbit);\n \t    }\n \t  catch(exception& __fail)\n \t    {\n@@ -626,7 +631,8 @@ namespace std\n \t    {\n \t      streamsize __w = __out.width();\n \t      char* __pads = static_cast<char*>(__builtin_alloca(__w));\n-\t      streamsize __len = static_cast<streamsize>(_Traits::length(__s));\n+\t      streamsize __len = __s ? \n+\t\t             static_cast<streamsize>(_Traits::length(__s)) : 0;\n \t      if (__w > __len)\n \t\t{\n \t\t  __pad(__out, __out.fill(), __pads, __s, __w, __len, false);\n@@ -635,6 +641,8 @@ namespace std\n \t\t}\n \t      __out.write(__s, __len);\n \t      __out.width(0);\n+\t      if (!__len)\n+\t\t__out.setstate(ios_base::badbit);\n \t    }\n \t  catch(exception& __fail)\n \t    {"}, {"sha": "7acaa02f54233719d649f3c8e087a70a9e93a5d8", "filename": "libstdc++-v3/testsuite/27_io/ostream_inserter_char.cc", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bd9b6d491a8ecae045944f6eeba77a98e82d0c1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_char.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bd9b6d491a8ecae045944f6eeba77a98e82d0c1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_char.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_char.cc?ref=7bd9b6d491a8ecae045944f6eeba77a98e82d0c1", "patch": "@@ -289,6 +289,33 @@ void test07()\n #endif\n }\n \n+void test08()\n+{\n+  bool test = true;\n+  char* pt = NULL;\n+\n+  // 1\n+  std::ostringstream oss;\n+  oss << pt << std::endl;\n+  VERIFY( oss.bad() );\n+  VERIFY( oss.str().size() == 0 );\n+\n+#if _GLIBCPP_USE_WCHAR_T\n+  // 2\n+  std::wostringstream woss;\n+  woss << pt << std::endl;\n+  VERIFY( woss.bad() );\n+  VERIFY( woss.str().size() == 0 );\n+\n+  // 3\n+  wchar_t* wt = NULL;\n+  woss.clear();\n+  woss << wt << std::endl;\n+  VERIFY( woss.bad() );\n+  VERIFY( woss.str().size() == 0 );\n+#endif\n+}\n+\n int main()\n {\n   test01();\n@@ -298,5 +325,6 @@ int main()\n   test05();\n   test06();\n   test07();\n+  test08();\n   return 0;\n }"}]}