{"sha": "c0b9d4c816db70e263838b57ac803ad3c451fa90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBiOWQ0YzgxNmRiNzBlMjYzODM4YjU3YWM4MDNhZDNjNDUxZmE5MA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-08-03T01:31:25Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-08-03T01:31:25Z"}, "message": "(optimize_bit_field_compare): Correct bogus use of types in expressions...\n\n(optimize_bit_field_compare): Correct bogus use of types in\nexpressions; always do computation in a type wide enough for the\nresult.\n\nFrom-SVN: r1743", "tree": {"sha": "6f6771c8e9b20882f8b6b6a5cf79a72a5486a6de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f6771c8e9b20882f8b6b6a5cf79a72a5486a6de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0b9d4c816db70e263838b57ac803ad3c451fa90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0b9d4c816db70e263838b57ac803ad3c451fa90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0b9d4c816db70e263838b57ac803ad3c451fa90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0b9d4c816db70e263838b57ac803ad3c451fa90/comments", "author": null, "committer": null, "parents": [{"sha": "fde9637ebe4dce2349ce78a751997886feb53d64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fde9637ebe4dce2349ce78a751997886feb53d64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fde9637ebe4dce2349ce78a751997886feb53d64"}], "stats": {"total": 27, "additions": 13, "deletions": 14}, "files": [{"sha": "207c75a8e17abfd19f40f2a25ada47e36094618a", "filename": "gcc/fold-const.c", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0b9d4c816db70e263838b57ac803ad3c451fa90/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0b9d4c816db70e263838b57ac803ad3c451fa90/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=c0b9d4c816db70e263838b57ac803ad3c451fa90", "patch": "@@ -2178,13 +2178,13 @@ optimize_bit_field_compare (code, compare_type, lhs, rhs)\n     /* If not comparing with constant, just rework the comparison\n        and return.  */\n     return build (code, compare_type,\n-\t\t  build (BIT_AND_EXPR, type,\n-\t\t\t make_bit_field_ref (linner, type,\n-\t\t\t\t\t     lnbitsize, lnbitpos, lunsignedp),\n+\t\t  build (BIT_AND_EXPR, unsigned_type,\n+\t\t\t make_bit_field_ref (linner, unsigned_type,\n+\t\t\t\t\t     lnbitsize, lnbitpos, 1),\n \t\t\t mask),\n-\t\t  build (BIT_AND_EXPR, type,\n-\t\t\t make_bit_field_ref (rinner, type,\n-\t\t\t\t\t     rnbitsize, rnbitpos, runsignedp),\n+\t\t  build (BIT_AND_EXPR, unsigned_type,\n+\t\t\t make_bit_field_ref (rinner, unsigned_type,\n+\t\t\t\t\t     rnbitsize, rnbitpos, 1),\n \t\t\t mask));\n \n   /* Otherwise, we are handling the constant case. See if the constant is too\n@@ -2233,17 +2233,16 @@ optimize_bit_field_compare (code, compare_type, lhs, rhs)\n   /* Make a new bitfield reference, shift the constant over the\n      appropriate number of bits and mask it with the computed mask\n      (in case this was a signed field).  If we changed it, make a new one.  */\n-  lhs = make_bit_field_ref (linner, TREE_TYPE (lhs), lnbitsize, lnbitpos, \n-\t\t\t    lunsignedp);\n+  lhs = make_bit_field_ref (linner, unsigned_type, lnbitsize, lnbitpos, 1);\n \n-  rhs = fold (build1 (NOP_EXPR, type,\n-\t\t      const_binop (BIT_AND_EXPR,\n-\t\t\t\t   const_binop (LSHIFT_EXPR,\n-\t\t\t\t\t\tconvert (unsigned_type, rhs),\n-\t\t\t\t\t\tsize_int (lbitpos)), mask)));\n+  rhs = fold (const_binop (BIT_AND_EXPR,\n+\t\t\t   const_binop (LSHIFT_EXPR,\n+\t\t\t\t\tconvert (unsigned_type, rhs),\n+\t\t\t\t\tsize_int (lbitpos)),\n+\t\t\t   mask));\n \n   return build (code, compare_type,\n-\t\tbuild (BIT_AND_EXPR, type, lhs, mask),\n+\t\tbuild (BIT_AND_EXPR, unsigned_type, lhs, mask),\n \t\trhs);\n }\n \f"}]}