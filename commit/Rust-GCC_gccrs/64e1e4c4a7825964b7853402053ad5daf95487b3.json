{"sha": "64e1e4c4a7825964b7853402053ad5daf95487b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRlMWU0YzRhNzgyNTk2NGI3ODUzNDAyMDUzYWQ1ZGFmOTU0ODdiMw==", "commit": {"author": {"name": "Steven Bosscher", "email": "stevenb@suse.de", "date": "2004-06-18T14:27:25Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2004-06-18T14:27:25Z"}, "message": "s390.md: Remove the generic pipeline description.\n\n\t* config/s390/s390.md: Remove the generic pipeline description.\n\t* config/s390/2064.md: Make all insn reservations apply to\n\tthe z900, g5 and g6.\n\t* config/s390/s390.c (s390_use_dfa_pipeline_interface): Remove.\n\t(TARGET_SCHED_USE_DFA_PIPELINE_INTERFACE):\n\tDefine to hook_int_void_1.\n\t(s390_adjust_cost): Cleanup.  Don't check address dependency here.\n\t(s390_first_cycle_multipass_dfa_lookahead):\n\nCo-Authored-By: Ulrich Weigand <uweigand@de.ibm.com>\n\nFrom-SVN: r83350", "tree": {"sha": "7e4e7162e624b2c81086dc88f681974749d7f94a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e4e7162e624b2c81086dc88f681974749d7f94a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64e1e4c4a7825964b7853402053ad5daf95487b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64e1e4c4a7825964b7853402053ad5daf95487b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64e1e4c4a7825964b7853402053ad5daf95487b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64e1e4c4a7825964b7853402053ad5daf95487b3/comments", "author": null, "committer": null, "parents": [{"sha": "06d72ee6e3ede175130413390d15726c09678cfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06d72ee6e3ede175130413390d15726c09678cfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06d72ee6e3ede175130413390d15726c09678cfb"}], "stats": {"total": 196, "additions": 40, "deletions": 156}, "files": [{"sha": "82865ebb72b2822b64bbd60764a912f2d2e56480", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64e1e4c4a7825964b7853402053ad5daf95487b3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64e1e4c4a7825964b7853402053ad5daf95487b3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=64e1e4c4a7825964b7853402053ad5daf95487b3", "patch": "@@ -1,3 +1,15 @@\n+2004-06-18  Steven Bosscher  <stevenb@suse.de>\n+\t    Ulrich Weigand <Ulrich.Weigand@de.ibm.com>\n+\n+\t* config/s390/s390.md: Remove the generic pipeline description.\n+\t* config/s390/2064.md: Make all insn reservations apply to\n+\tthe z900, g5 and g6.\n+\t* config/s390/s390.c (s390_use_dfa_pipeline_interface): Remove.\n+\t(TARGET_SCHED_USE_DFA_PIPELINE_INTERFACE):\n+\tDefine to hook_int_void_1.\n+\t(s390_adjust_cost): Cleanup.  Don't check address dependency here.\n+\t(s390_first_cycle_multipass_dfa_lookahead): Always return 4.\n+\n 2004-06-18  Daniel Berlin  <dberlin@dberlin.org>\n \t\t\tDiego Novillo  <dnovillo@redhat.com>\n "}, {"sha": "a1a6d1394ec291819bc6bbadac587d21f25c5d46", "filename": "gcc/config/s390/2064.md", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64e1e4c4a7825964b7853402053ad5daf95487b3/gcc%2Fconfig%2Fs390%2F2064.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64e1e4c4a7825964b7853402053ad5daf95487b3/gcc%2Fconfig%2Fs390%2F2064.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2F2064.md?ref=64e1e4c4a7825964b7853402053ad5daf95487b3", "patch": "@@ -40,43 +40,45 @@\n ;;                  | \n ;;                  wr\n \n+;; This scheduler description is also used for the g5 and g6.\n+\n (define_automaton \"z_ipu\")\n (define_cpu_unit \"z_e1\"   \"z_ipu\")\n (define_cpu_unit \"z_wr\"   \"z_ipu\")\n \n \n (define_insn_reservation \"z_la\" 1 \n-  (and (eq_attr \"cpu\" \"z900\")\n+  (and (eq_attr \"cpu\" \"z900,g5,g6\")\n        (eq_attr \"type\" \"la\"))\n   \"z_e1,z_wr\")\n \n (define_insn_reservation \"z_larl\" 1 \n-  (and (eq_attr \"cpu\" \"z900\")\n+  (and (eq_attr \"cpu\" \"z900,g5,g6\")\n        (eq_attr \"type\" \"larl\"))\n   \"z_e1,z_wr\")\n \n (define_insn_reservation \"z_load\" 1\n-  (and (eq_attr \"cpu\" \"z900\")\n+  (and (eq_attr \"cpu\" \"z900,g5,g6\")\n        (eq_attr \"type\" \"load\"))\n   \"z_e1,z_wr\")\n \n (define_insn_reservation \"z_store\" 1\n-  (and (eq_attr \"cpu\" \"z900\")\n+  (and (eq_attr \"cpu\" \"z900,g5,g6\")\n        (eq_attr \"type\" \"store\"))\n   \"z_e1,z_wr\")\n \n (define_insn_reservation \"z_call\" 5\n-  (and (eq_attr \"cpu\" \"z900\")\n+  (and (eq_attr \"cpu\" \"z900,g5,g6\")\n        (eq_attr \"type\" \"jsr\"))\n   \"z_e1*5,z_wr\")\n \n (define_insn_reservation \"z_o2\" 2\n-  (and (eq_attr \"cpu\" \"z900\")\n+  (and (eq_attr \"cpu\" \"z900,g5,g6\")\n        (eq_attr \"type\" \"o2\"))\n   \"z_e1*2,z_wr\")\n \n (define_insn_reservation \"z_o3\" 3\n-  (and (eq_attr \"cpu\" \"z900\")\n+  (and (eq_attr \"cpu\" \"z900,g5,g6\")\n        (eq_attr \"type\" \"o3\"))\n   \"z_e1*3,z_wr\")\n \n@@ -86,12 +88,12 @@\n ;\n \n (define_insn_reservation \"z_int\" 1\n-  (and (eq_attr \"cpu\" \"z900\")\n+  (and (eq_attr \"cpu\" \"z900,g5,g6\")\n        (eq_attr \"atype\" \"reg\"))\n   \"z_e1,z_wr\")\n \n (define_insn_reservation \"z_agen\" 1\n-  (and (eq_attr \"cpu\" \"z900\")\n+  (and (eq_attr \"cpu\" \"z900,g5,g6\")\n        (eq_attr \"atype\" \"agen\"))\n   \"z_e1,z_wr\")\n "}, {"sha": "3e2ad5a43a6ff17b26efbc5e8040010f4868887f", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 10, "deletions": 46, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64e1e4c4a7825964b7853402053ad5daf95487b3/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64e1e4c4a7825964b7853402053ad5daf95487b3/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=64e1e4c4a7825964b7853402053ad5daf95487b3", "patch": "@@ -72,7 +72,6 @@ static enum attr_type s390_safe_attr_type (rtx);\n static int s390_adjust_cost (rtx, rtx, rtx, int);\n static int s390_adjust_priority (rtx, int);\n static int s390_issue_rate (void);\n-static int s390_use_dfa_pipeline_interface (void);\n static int s390_first_cycle_multipass_dfa_lookahead (void);\n static bool s390_rtx_costs (rtx, int, int, int *);\n static int s390_address_cost (rtx);\n@@ -132,7 +131,7 @@ static bool s390_call_saved_register_used (tree);\n #undef TARGET_SCHED_ISSUE_RATE\n #define TARGET_SCHED_ISSUE_RATE s390_issue_rate\n #undef TARGET_SCHED_USE_DFA_PIPELINE_INTERFACE\n-#define TARGET_SCHED_USE_DFA_PIPELINE_INTERFACE s390_use_dfa_pipeline_interface\n+#define TARGET_SCHED_USE_DFA_PIPELINE_INTERFACE hook_int_void_1\n #undef TARGET_SCHED_FIRST_CYCLE_MULTIPASS_DFA_LOOKAHEAD\n #define TARGET_SCHED_FIRST_CYCLE_MULTIPASS_DFA_LOOKAHEAD s390_first_cycle_multipass_dfa_lookahead\n \n@@ -3902,9 +3901,6 @@ s390_agen_dep_p (rtx dep_insn, rtx insn)\n static int\n s390_adjust_cost (rtx insn, rtx link, rtx dep_insn, int cost)\n {\n-  rtx dep_rtx;\n-  int i;\n-\n   /* If the dependence is an anti-dependence, there is no cost.  For an\n      output dependence, there is sometimes a cost, but it doesn't seem\n      worth handling those few cases.  */\n@@ -3916,35 +3912,16 @@ s390_adjust_cost (rtx insn, rtx link, rtx dep_insn, int cost)\n   if (recog_memoized (insn) < 0 || recog_memoized (dep_insn) < 0)\n     return cost;\n \n-  /* DFA based scheduling checks address dependency in md file.  */\n-  if (s390_use_dfa_pipeline_interface ())\n-  {\n-    /* Operand forward in case of lr, load and la.  */\n-    if (s390_tune == PROCESSOR_2084_Z990\n-        && cost == 1\n-\t&& (s390_safe_attr_type (dep_insn) == TYPE_LA\n-\t    || s390_safe_attr_type (dep_insn) == TYPE_LR\n-\t    || s390_safe_attr_type (dep_insn) == TYPE_LOAD))\n-      return 0;\n-    return cost;\n-  }\n-\n-  dep_rtx = PATTERN (dep_insn);\n-\n-  if (GET_CODE (dep_rtx) == SET\n-      && addr_generation_dependency_p (dep_rtx, insn))\n-    cost += (s390_safe_attr_type (dep_insn) == TYPE_LA) ? 1 : 4;\n-  else if (GET_CODE (dep_rtx) == PARALLEL)\n-    {\n-      for (i = 0; i < XVECLEN (dep_rtx, 0); i++)\n-\t{\n-\t  if (addr_generation_dependency_p (XVECEXP (dep_rtx, 0, i), insn))\n-\t    cost += (s390_safe_attr_type (dep_insn) == TYPE_LA) ? 1 : 4;\n-\t}\n-    }\n-\n+  /* Operand forward in case of lr, load and la.  */\n+  if (s390_tune == PROCESSOR_2084_Z990\n+      && cost == 1\n+      && (s390_safe_attr_type (dep_insn) == TYPE_LA\n+\t  || s390_safe_attr_type (dep_insn) == TYPE_LR\n+\t  || s390_safe_attr_type (dep_insn) == TYPE_LOAD))\n+    return 0;\n   return cost;\n }\n+\n /* A C statement (sans semicolon) to update the integer scheduling priority\n    INSN_PRIORITY (INSN).  Increase the priority to execute the INSN earlier,\n    reduce the priority to execute INSN later.  Do not define this macro if\n@@ -3987,23 +3964,10 @@ s390_issue_rate (void)\n   return 1;\n }\n \n-/* If the following function returns TRUE, we will use the the DFA\n-   insn scheduler.  */\n-\n-static int\n-s390_use_dfa_pipeline_interface (void)\n-{\n-  if (s390_tune == PROCESSOR_2064_Z900\n-      || s390_tune == PROCESSOR_2084_Z990)\n-    return 1;\n-\n-  return 0;\n-}\n-\n static int\n s390_first_cycle_multipass_dfa_lookahead (void)\n {\n-  return s390_use_dfa_pipeline_interface () ? 4 : 0;\n+  return 4;\n }\n \n "}, {"sha": "b6ec023ed5fbc0577f23b2c4ac3aa9037883073d", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 7, "deletions": 101, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64e1e4c4a7825964b7853402053ad5daf95487b3/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64e1e4c4a7825964b7853402053ad5daf95487b3/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=64e1e4c4a7825964b7853402053ad5daf95487b3", "patch": "@@ -135,7 +135,9 @@\n \n \n ;; Processor type.  This attribute must exactly match the processor_type\n-;; enumeration in s390.h.\n+;; enumeration in s390.h.  The current machine description does not\n+;; distinguish between g5 and g6, but there are differences between the two\n+;; CPUs could in theory be modeled.\n \n (define_attr \"cpu\" \"g5,g6,z900,z990\"\n   (const (symbol_ref \"s390_tune\")))\n@@ -182,107 +184,11 @@\n          (eq_attr \"op_type\" \"SIY\") (const_string \"agen\")]\n   (const_string \"reg\")))\n \n-;; Generic pipeline function unit.\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"none\") 0 0)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"integer\") 1 1)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"fsimpd\") 1 1)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"fsimps\") 1 1)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"load\") 1 1)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"floadd\") 1 1)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"floads\") 1 1)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"la\") 1 1)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"larl\") 1 1)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"lr\") 1 1)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"branch\") 1 1)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"store\") 1 1)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"fstored\") 1 1)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"fstores\") 1 1)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"lm\") 2 2)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"stm\") 2 2)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"cs\") 5 5)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"vs\") 30 30)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"jsr\") 5 5)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"imul\") 7 7)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"fmuld\") 6 6)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"fmuls\") 6 6)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"idiv\") 33 33)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"fdivd\") 33 33)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"fdivs\") 33 33)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"fsqrtd\") 30 30)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"fsqrts\") 30 30)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"ftoi\") 2 2)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"itof\") 2 2)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"o2\") 2 2)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"o3\") 3 3)\n-\n-(define_function_unit \"integer\" 1 0\n-  (eq_attr \"type\" \"other\") 5 5)\n-\n-;; Pipeline description for z900\n-\n+;; Pipeline description for z900.  For lack of anything better,\n+;; this description is also used for the g5 and g6.\n (include \"2064.md\")\n+\n+;; Pipeline description for z990. \n (include \"2084.md\")\n \n ;; Length in bytes."}]}