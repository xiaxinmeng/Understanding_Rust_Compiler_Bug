{"sha": "9321405c4a8792d7e8faf39b369e5a76436c63df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTMyMTQwNWM0YTg3OTJkN2U4ZmFmMzliMzY5ZTVhNzY0MzZjNjNkZg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2007-01-12T09:35:13Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-01-12T09:35:13Z"}, "message": "m68k.h (TARGET_CPU_CPP_BUILTINS): Treat all mc68* macros besides mc68000 as tuning macros.\n\ngcc/\n\t* config/m68k/m68k.h (TARGET_CPU_CPP_BUILTINS): Treat all mc68*\n\tmacros besides mc68000 as tuning macros.  Use a switch statement\n\tto set them and mcpu32.\n\nFrom-SVN: r120715", "tree": {"sha": "cee4de9603447ad63cb8fded83e6c63c1df2dd13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cee4de9603447ad63cb8fded83e6c63c1df2dd13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9321405c4a8792d7e8faf39b369e5a76436c63df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9321405c4a8792d7e8faf39b369e5a76436c63df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9321405c4a8792d7e8faf39b369e5a76436c63df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9321405c4a8792d7e8faf39b369e5a76436c63df/comments", "author": null, "committer": null, "parents": [{"sha": "b101567e0482fe4e3c55581c01353e0694d007d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b101567e0482fe4e3c55581c01353e0694d007d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b101567e0482fe4e3c55581c01353e0694d007d5"}], "stats": {"total": 68, "additions": 44, "deletions": 24}, "files": [{"sha": "910bfb992809539876aa25212b1f4ddbe2b0e185", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9321405c4a8792d7e8faf39b369e5a76436c63df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9321405c4a8792d7e8faf39b369e5a76436c63df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9321405c4a8792d7e8faf39b369e5a76436c63df", "patch": "@@ -1,3 +1,9 @@\n+2007-01-12  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* config/m68k/m68k.h (TARGET_CPU_CPP_BUILTINS): Treat all mc68*\n+\tmacros besides mc68000 as tuning macros.  Use a switch statement\n+\tto set them and mcpu32.\n+\n 2007-01-12  Julian Brown  <julian@codesourcery.com>\n \n \t* config/m68k/m68k.h: Use TARGET_68040 instead of TARGET_68040_ONLY."}, {"sha": "030dc4d9740e0bc15913964cfc4c8e8ca0effcc2", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 38, "deletions": 24, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9321405c4a8792d7e8faf39b369e5a76436c63df/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9321405c4a8792d7e8faf39b369e5a76436c63df/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=9321405c4a8792d7e8faf39b369e5a76436c63df", "patch": "@@ -67,39 +67,53 @@ Boston, MA 02110-1301, USA.  */\n     {\t\t\t\t\t\t\t\t\t\\\n       builtin_define (\"__m68k__\");\t\t\t\t\t\\\n       builtin_define_std (\"mc68000\");\t\t\t\t\t\\\n-      if (TARGET_68040)\t\t\t\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\t\\\n-\t  if (TUNE_68060)\t\t\t\t\t\t\\\n-\t    builtin_define_std (\"mc68060\");\t\t\t\t\\\n-\t  else\t\t\t\t\t\t\t\t\\\n-\t    builtin_define_std (\"mc68040\");\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\t\\\n-      else if (TUNE_68060) /* -m68020-60 */\t\t\t\t\\\n+      /* The other mc680x0 macros have traditionally been derived\t\\\n+\t from the tuning setting.  For example, -m68020-60 defines\t\\\n+\t m68060, even though it generates pure 68020 code.  */\t\t\\\n+      switch (m68k_tune)\t\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n+\tcase u68010:\t\t\t\t\t\t\t\\\n+\t  builtin_define_std (\"mc68010\");\t\t\t\t\\\n+\t  break;\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+\tcase u68020:\t\t\t\t\t\t\t\\\n+\t  builtin_define_std (\"mc68020\");\t\t\t\t\\\n+\t  break;\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+\tcase u68030:\t\t\t\t\t\t\t\\\n+\t  builtin_define_std (\"mc68030\");\t\t\t\t\\\n+\t  break;\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+\tcase u68040:\t\t\t\t\t\t\t\\\n+\t  builtin_define_std (\"mc68040\");\t\t\t\t\\\n+\t  break;\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+\tcase u68060:\t\t\t\t\t\t\t\\\n+\t  builtin_define_std (\"mc68060\");\t\t\t\t\\\n+\t  break;\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+\tcase u68020_60:\t\t\t\t\t\t\t\\\n \t  builtin_define_std (\"mc68060\");\t\t\t\t\\\n+\t  /* Fall through.  */\t\t\t\t\t\t\\\n+\tcase u68020_40:\t\t\t\t\t\t\t\\\n \t  builtin_define_std (\"mc68040\");\t\t\t\t\\\n \t  builtin_define_std (\"mc68030\");\t\t\t\t\\\n \t  builtin_define_std (\"mc68020\");\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\t\\\n-      else if (TUNE_68040) /* -m68020-40 */\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\t\\\n-\t  builtin_define_std (\"mc68040\");\t\t\t\t\\\n-\t  builtin_define_std (\"mc68030\");\t\t\t\t\\\n+\t  break;\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+\tcase ucpu32:\t\t\t\t\t\t\t\\\n+\t  builtin_define_std (\"mc68332\");\t\t\t\t\\\n+\t  builtin_define_std (\"mcpu32\");\t\t\t\t\\\n \t  builtin_define_std (\"mc68020\");\t\t\t\t\\\n+\t  break;\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+\tdefault:\t\t\t\t\t\t\t\\\n+\t  break;\t\t\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\t\\\n-      else if (TUNE_68030)\t\t\t\t\t\t\\\n-\tbuiltin_define_std (\"mc68030\");\t\t\t\t\t\\\n-      else if (TARGET_68020)\t\t\t\t\t\t\\\n-\tbuiltin_define_std (\"mc68020\");\t\t\t\t\t\\\n-      else if (TUNE_68010)\t\t\t\t\t\t\\\n-\tbuiltin_define_std (\"mc68010\");\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n       if (TARGET_68881)\t\t\t\t\t\t\t\\\n \tbuiltin_define (\"__HAVE_68881__\");\t\t\t\t\\\n-      if (TUNE_CPU32)\t\t\t\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\t\\\n-\t  builtin_define_std (\"mc68332\");\t\t\t\t\\\n-\t  builtin_define_std (\"mcpu32\");\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n       if (TARGET_COLDFIRE)\t\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n \t  builtin_define (\"__mcoldfire__\");\t\t\t\t\\"}]}