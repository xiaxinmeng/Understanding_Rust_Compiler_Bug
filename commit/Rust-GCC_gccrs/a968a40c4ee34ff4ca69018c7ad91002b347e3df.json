{"sha": "a968a40c4ee34ff4ca69018c7ad91002b347e3df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk2OGE0MGM0ZWUzNGZmNGNhNjkwMThjN2FkOTEwMDJiMzQ3ZTNkZg==", "commit": {"author": {"name": "Mihail Ionescu", "email": "mihail.ionescu@arm.com", "date": "2020-01-17T18:14:54Z"}, "committer": {"name": "Mihail Ionescu", "email": "mihail.ionescu@arm.com", "date": "2020-01-17T18:50:38Z"}, "message": "[GCC/ARM, 2/2] Add support for ASRL(imm), LSLL(imm) and LSRL(imm) instructions for Armv8.1-M Mainline\n\nThis patch is adding the following instructions:\n\nASRL (imm)\nLSLL (imm)\nLSRL (imm)\n\n*** gcc/ChangeLog ***\n\n2020-01-17  Mihail-Calin Ionescu  <mihail.ionescu@arm.com>\n\t    Sudakshina Das  <sudi.das@arm.com>\n\n\t* config/arm/arm.md (ashldi3): Generate thumb2_lsll for both reg\n\tand valid immediate.\n\t(ashrdi3): Generate thumb2_asrl for both reg and valid immediate.\n\t(lshrdi3): Generate thumb2_lsrl for valid immediates.\n\t* config/arm/constraints.md (Pg): New.\n\t* config/arm/predicates.md (long_shift_imm): New.\n\t(arm_reg_or_long_shift_imm): Likewise.\n\t* config/arm/thumb2.md (thumb2_asrl): New immediate alternative.\n\t(thumb2_lsll): Likewise.\n\t(thumb2_lsrl): New.\n\n*** gcc/testsuite/ChangeLog ***\n\n2020-01-17  Mihail-Calin Ionescu  <mihail.ionescu@arm.com>\n\t    Sudakshina Das  <sudi.das@arm.com>\n\n\t* gcc.target/arm/armv8_1m-shift-imm_1.c: New test.", "tree": {"sha": "ef6476f8d856e0398616c1ebaa92c4ef85d478f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef6476f8d856e0398616c1ebaa92c4ef85d478f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a968a40c4ee34ff4ca69018c7ad91002b347e3df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a968a40c4ee34ff4ca69018c7ad91002b347e3df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a968a40c4ee34ff4ca69018c7ad91002b347e3df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a968a40c4ee34ff4ca69018c7ad91002b347e3df/comments", "author": null, "committer": null, "parents": [{"sha": "60d616b1f6deffcc57a4114f1a31559a17a3923c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60d616b1f6deffcc57a4114f1a31559a17a3923c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60d616b1f6deffcc57a4114f1a31559a17a3923c"}], "stats": {"total": 92, "additions": 86, "deletions": 6}, "files": [{"sha": "7986c68e53353a0f4a76a8b7220f8a0ec274d8f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a968a40c4ee34ff4ca69018c7ad91002b347e3df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a968a40c4ee34ff4ca69018c7ad91002b347e3df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a968a40c4ee34ff4ca69018c7ad91002b347e3df", "patch": "@@ -1,3 +1,17 @@\n+2020-01-17  Mihail-Calin Ionescu <mihail.ionescu@arm.com>\n+\t    Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* config/arm/arm.md (ashldi3): Generate thumb2_lsll for both reg\n+\tand valid immediate.\n+\t(ashrdi3): Generate thumb2_asrl for both reg and valid immediate.\n+\t(lshrdi3): Generate thumb2_lsrl for valid immediates.\n+\t* config/arm/constraints.md (Pg): New.\n+\t* config/arm/predicates.md (long_shift_imm): New.\n+\t(arm_reg_or_long_shift_imm): Likewise.\n+\t* config/arm/thumb2.md (thumb2_asrl): New immediate alternative.\n+\t(thumb2_lsll): Likewise.\n+\t(thumb2_lsrl): New.\n+\n 2020-01-17  Mihail-Calin Ionescu  <mihail.ionescu@arm.com>\n \t    Sudakshina Das  <sudi.das@arm.com>\n "}, {"sha": "0454908256727247b4d0a4f402ad234bdbf1907c", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a968a40c4ee34ff4ca69018c7ad91002b347e3df/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a968a40c4ee34ff4ca69018c7ad91002b347e3df/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=a968a40c4ee34ff4ca69018c7ad91002b347e3df", "patch": "@@ -4405,8 +4405,8 @@\n         operands[2] = force_reg (SImode, operands[2]);\n \n       /* Armv8.1-M Mainline double shifts are not expanded.  */\n-      if (REG_P (operands[2]))\n-\t{\n+      if (arm_reg_or_long_shift_imm (operands[2], GET_MODE (operands[2])))\n+        {\n \t  if (!reg_overlap_mentioned_p(operands[0], operands[1]))\n \t    emit_insn (gen_movdi (operands[0], operands[1]));\n \n@@ -4443,7 +4443,8 @@\n   \"TARGET_32BIT\"\n   \"\n   /* Armv8.1-M Mainline double shifts are not expanded.  */\n-  if (TARGET_HAVE_MVE && REG_P (operands[2]))\n+  if (TARGET_HAVE_MVE\n+      && arm_reg_or_long_shift_imm (operands[2], GET_MODE (operands[2])))\n     {\n       if (!reg_overlap_mentioned_p(operands[0], operands[1]))\n \temit_insn (gen_movdi (operands[0], operands[1]));\n@@ -4476,6 +4477,17 @@\n                      (match_operand:SI 2 \"reg_or_int_operand\")))]\n   \"TARGET_32BIT\"\n   \"\n+  /* Armv8.1-M Mainline double shifts are not expanded.  */\n+  if (TARGET_HAVE_MVE\n+    && long_shift_imm (operands[2], GET_MODE (operands[2])))\n+    {\n+      if (!reg_overlap_mentioned_p(operands[0], operands[1]))\n+        emit_insn (gen_movdi (operands[0], operands[1]));\n+\n+      emit_insn (gen_thumb2_lsrl (operands[0], operands[2]));\n+      DONE;\n+    }\n+\n   arm_emit_coreregs_64bit_shift (LSHIFTRT, operands[0], operands[1],\n \t\t\t\t operands[2], gen_reg_rtx (SImode),\n \t\t\t\t gen_reg_rtx (SImode));"}, {"sha": "fd120dfaf44694fd40a02c7eb06d7ddc45a4c8a8", "filename": "gcc/config/arm/constraints.md", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a968a40c4ee34ff4ca69018c7ad91002b347e3df/gcc%2Fconfig%2Farm%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a968a40c4ee34ff4ca69018c7ad91002b347e3df/gcc%2Fconfig%2Farm%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fconstraints.md?ref=a968a40c4ee34ff4ca69018c7ad91002b347e3df", "patch": "@@ -35,7 +35,7 @@\n ;;\t\t\t Dt, Dp, Dz, Tu\n ;; in Thumb-1 state: Pa, Pb, Pc, Pd, Pe\n ;; in Thumb-2 state: Ha, Pj, PJ, Ps, Pt, Pu, Pv, Pw, Px, Py, Pz\n-;; in all states: Pf\n+;; in all states: Pf, Pg\n \n ;; The following memory constraints have been used:\n ;; in ARM/Thumb-2 state: Uh, Ut, Uv, Uy, Un, Um, Us\n@@ -188,6 +188,11 @@\n \t\t    && !is_mm_consume (memmodel_from_int (ival))\n \t\t    && !is_mm_release (memmodel_from_int (ival))\")))\n \n+(define_constraint \"Pg\"\n+  \"@internal In Thumb-2 state a constant in range 1 to 32\"\n+  (and (match_code \"const_int\")\n+       (match_test \"TARGET_THUMB2 && ival >= 1 && ival <= 32\")))\n+\n (define_constraint \"Ps\"\n   \"@internal In Thumb-2 state a constant in the range -255 to +255\"\n   (and (match_code \"const_int\")"}, {"sha": "3a3941e22462c435d1bcff74b2db08d6f00ea61c", "filename": "gcc/config/arm/predicates.md", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a968a40c4ee34ff4ca69018c7ad91002b347e3df/gcc%2Fconfig%2Farm%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a968a40c4ee34ff4ca69018c7ad91002b347e3df/gcc%2Fconfig%2Farm%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpredicates.md?ref=a968a40c4ee34ff4ca69018c7ad91002b347e3df", "patch": "@@ -336,6 +336,15 @@\n \t\t              && (UINTVAL (XEXP (op, 1)) < 32)\")))\n        (match_test \"mode == GET_MODE (op)\")))\n \n+;; True for Armv8.1-M Mainline long shift instructions.\n+(define_predicate \"long_shift_imm\"\n+  (match_test \"satisfies_constraint_Pg (op)\"))\n+\n+(define_predicate \"arm_reg_or_long_shift_imm\"\n+  (ior (match_test \"TARGET_THUMB2\n+\t\t    && arm_general_register_operand (op, GET_MODE (op))\")\n+       (match_test \"satisfies_constraint_Pg (op)\")))\n+\n ;; True for MULT, to identify which variant of shift_operator is in use.\n (define_special_predicate \"mult_operator\"\n   (match_code \"mult\"))"}, {"sha": "b0d3bd1cf1c484927e6ac6522bc30f0f089291c7", "filename": "gcc/config/arm/thumb2.md", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a968a40c4ee34ff4ca69018c7ad91002b347e3df/gcc%2Fconfig%2Farm%2Fthumb2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a968a40c4ee34ff4ca69018c7ad91002b347e3df/gcc%2Fconfig%2Farm%2Fthumb2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb2.md?ref=a968a40c4ee34ff4ca69018c7ad91002b347e3df", "patch": "@@ -1630,15 +1630,23 @@\n (define_insn \"thumb2_asrl\"\n   [(set (match_operand:DI 0 \"arm_general_register_operand\" \"+r\")\n \t(ashiftrt:DI (match_dup 0)\n-\t\t     (match_operand:SI 1 \"arm_general_register_operand\" \"r\")))]\n+\t\t     (match_operand:SI 1 \"arm_reg_or_long_shift_imm\" \"rPg\")))]\n   \"TARGET_HAVE_MVE\"\n   \"asrl%?\\\\t%Q0, %R0, %1\"\n   [(set_attr \"predicable\" \"yes\")])\n \n (define_insn \"thumb2_lsll\"\n   [(set (match_operand:DI 0 \"arm_general_register_operand\" \"+r\")\n \t(ashift:DI (match_dup 0)\n-\t\t   (match_operand:SI 1 \"arm_general_register_operand\" \"r\")))]\n+\t\t   (match_operand:SI 1 \"arm_reg_or_long_shift_imm\" \"rPg\")))]\n   \"TARGET_HAVE_MVE\"\n   \"lsll%?\\\\t%Q0, %R0, %1\"\n   [(set_attr \"predicable\" \"yes\")])\n+\n+(define_insn \"thumb2_lsrl\"\n+  [(set (match_operand:DI 0 \"arm_general_register_operand\" \"+r\")\n+\t(lshiftrt:DI (match_dup 0)\n+\t\t     (match_operand:SI 1 \"long_shift_imm\" \"Pg\")))]\n+  \"TARGET_HAVE_MVE\"\n+  \"lsrl%?\\\\t%Q0, %R0, %1\"\n+  [(set_attr \"predicable\" \"yes\")])"}, {"sha": "24e9475bcfac34c2266b0a42856591bbb4d8fbc1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a968a40c4ee34ff4ca69018c7ad91002b347e3df/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a968a40c4ee34ff4ca69018c7ad91002b347e3df/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a968a40c4ee34ff4ca69018c7ad91002b347e3df", "patch": "@@ -1,3 +1,8 @@\n+2020-01-17  Mihail-Calin Ionescu <mihail.ionescu@arm.com>\n+\t    Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* gcc.target/arm/armv8_1m-shift-imm_1.c: New test.\n+\n 2020-01-17  Mihail-Calin Ionescu <mihail.ionescu@arm.com>\n \t    Sudakshina Das  <sudi.das@arm.com>\n "}, {"sha": "5ffa3769e6ba42466242d3038857734e87b2f1fc", "filename": "gcc/testsuite/gcc.target/arm/armv8_1m-shift-imm-1.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a968a40c4ee34ff4ca69018c7ad91002b347e3df/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Farmv8_1m-shift-imm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a968a40c4ee34ff4ca69018c7ad91002b347e3df/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Farmv8_1m-shift-imm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Farmv8_1m-shift-imm-1.c?ref=a968a40c4ee34ff4ca69018c7ad91002b347e3df", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=armv8.1-m.main+mve -mfloat-abi=softfp\" } */\n+\n+long long longval1;\n+long long unsigned longval2;\n+\n+long long int\n+asrl_imm ()\n+{\n+ return (longval1 >> 14);\n+}\n+\n+long long unsigned int\n+lsrl_imm ()\n+{\n+ return (longval2 >> 14);\n+}\n+\n+long long int\n+lsll_imm (long long int longval3)\n+{\n+  return (longval3 << 14);\n+}\n+\n+/* { dg-final { scan-assembler \"asrl\\\\tr\\[0-9\\], r\\[0-9\\], #14\" } } */\n+/* { dg-final { scan-assembler \"lsrl\\\\tr\\[0-9\\], r\\[0-9\\], #14\" } } */\n+/* { dg-final { scan-assembler \"lsll\\\\tr\\[0-9\\], r\\[0-9\\], #14\" } } */"}]}