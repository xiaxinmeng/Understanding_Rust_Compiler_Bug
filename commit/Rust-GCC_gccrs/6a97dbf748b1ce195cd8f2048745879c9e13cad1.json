{"sha": "6a97dbf748b1ce195cd8f2048745879c9e13cad1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE5N2RiZjc0OGIxY2UxOTVjZDhmMjA0ODc0NTg3OWM5ZTEzY2FkMQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-06-14T17:48:29Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-06-14T17:48:29Z"}, "message": "valarray (~valarray): Use noexcept.\n\n2011-06-14  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/std/valarray (~valarray): Use noexcept.\n\t* include/bits/unique_ptr.h (~unique_ptr): Likewise.\n\t* testsuite/26_numerics/valarray/noexcept_move_construct.cc: New.\n\t* testsuite/20_util/shared_ptr/cons/noexcept_move_construct.cc:\n\tLikewise.\n\t* testsuite/20_util/unique_ptr/cons/noexcept_move_construct.cc:\n\tLikewise.\n\t* testsuite/20_util/weak_ptr/cons/noexcept_move_construct.cc:\n\tLikewise.\n\nFrom-SVN: r175039", "tree": {"sha": "29dc986eb0260685a89591352c498a4515583acc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29dc986eb0260685a89591352c498a4515583acc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a97dbf748b1ce195cd8f2048745879c9e13cad1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a97dbf748b1ce195cd8f2048745879c9e13cad1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a97dbf748b1ce195cd8f2048745879c9e13cad1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a97dbf748b1ce195cd8f2048745879c9e13cad1/comments", "author": null, "committer": null, "parents": [{"sha": "fa4657624c6609bbfffb4ec5fb1e19e44691c864", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa4657624c6609bbfffb4ec5fb1e19e44691c864", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa4657624c6609bbfffb4ec5fb1e19e44691c864"}], "stats": {"total": 126, "additions": 123, "deletions": 3}, "files": [{"sha": "fbd45e6ca8c7e86e43a71b731ce5ac03e6650be9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a97dbf748b1ce195cd8f2048745879c9e13cad1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a97dbf748b1ce195cd8f2048745879c9e13cad1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6a97dbf748b1ce195cd8f2048745879c9e13cad1", "patch": "@@ -1,3 +1,15 @@\n+2011-06-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/std/valarray (~valarray): Use noexcept.\n+\t* include/bits/unique_ptr.h (~unique_ptr): Likewise.\n+\t* testsuite/26_numerics/valarray/noexcept_move_construct.cc: New.\n+\t* testsuite/20_util/shared_ptr/cons/noexcept_move_construct.cc:\n+\tLikewise.\n+\t* testsuite/20_util/unique_ptr/cons/noexcept_move_construct.cc:\n+\tLikewise.\n+\t* testsuite/20_util/weak_ptr/cons/noexcept_move_construct.cc:\n+\tLikewise.\n+\n 2011-06-14  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/std/functional: Use noexcept."}, {"sha": "a6f457ee59e33a226ac870075f35110265ea9c9a", "filename": "libstdc++-v3/include/bits/unique_ptr.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a97dbf748b1ce195cd8f2048745879c9e13cad1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a97dbf748b1ce195cd8f2048745879c9e13cad1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h?ref=6a97dbf748b1ce195cd8f2048745879c9e13cad1", "patch": "@@ -166,7 +166,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #endif\n \n       // Destructor.\n-      ~unique_ptr() { reset(); }\n+      ~unique_ptr() noexcept { reset(); }\n \n       // Assignment.\n       unique_ptr&"}, {"sha": "e66333e9af267fbd27239ff9f739ce28afd3d822", "filename": "libstdc++-v3/include/std/valarray", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a97dbf748b1ce195cd8f2048745879c9e13cad1/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvalarray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a97dbf748b1ce195cd8f2048745879c9e13cad1/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvalarray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvalarray?ref=6a97dbf748b1ce195cd8f2048745879c9e13cad1", "patch": "@@ -165,7 +165,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       template<class _Dom>\n \tvalarray(const _Expr<_Dom, _Tp>& __e);\n \n-      ~valarray();\n+      ~valarray() _GLIBCXX_NOEXCEPT;\n \n       // _lib.valarray.assign_ assignment:\n       /**\n@@ -697,7 +697,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   template<typename _Tp>\n     inline\n-    valarray<_Tp>::~valarray()\n+    valarray<_Tp>::~valarray() _GLIBCXX_NOEXCEPT\n     {\n       std::__valarray_destroy_elements(_M_data, _M_data + _M_size);\n       std::__valarray_release_memory(_M_data);"}, {"sha": "640a54bafdbbe10c7a068a6caa7c39a3d8164716", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/noexcept_move_construct.cc", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a97dbf748b1ce195cd8f2048745879c9e13cad1/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fnoexcept_move_construct.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a97dbf748b1ce195cd8f2048745879c9e13cad1/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fnoexcept_move_construct.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fnoexcept_move_construct.cc?ref=6a97dbf748b1ce195cd8f2048745879c9e13cad1", "patch": "@@ -0,0 +1,27 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2011-06-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+//\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <memory>\n+\n+typedef std::shared_ptr<int> sptype;\n+\n+static_assert(std::is_nothrow_move_constructible<sptype>::value, \"Error\");"}, {"sha": "c5de14f52f460b98b9b6190f9e87ffe206282024", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/cons/noexcept_move_construct.cc", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a97dbf748b1ce195cd8f2048745879c9e13cad1/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fnoexcept_move_construct.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a97dbf748b1ce195cd8f2048745879c9e13cad1/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fnoexcept_move_construct.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fcons%2Fnoexcept_move_construct.cc?ref=6a97dbf748b1ce195cd8f2048745879c9e13cad1", "patch": "@@ -0,0 +1,27 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2011-06-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+//\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <memory>\n+\n+typedef std::unique_ptr<int> uptype;\n+\n+static_assert(std::is_nothrow_move_constructible<uptype>::value, \"Error\");"}, {"sha": "4e9a90df63d5a2ce1d006c94d7553cbe660a237c", "filename": "libstdc++-v3/testsuite/20_util/weak_ptr/cons/noexcept_move_construct.cc", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a97dbf748b1ce195cd8f2048745879c9e13cad1/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fweak_ptr%2Fcons%2Fnoexcept_move_construct.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a97dbf748b1ce195cd8f2048745879c9e13cad1/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fweak_ptr%2Fcons%2Fnoexcept_move_construct.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fweak_ptr%2Fcons%2Fnoexcept_move_construct.cc?ref=6a97dbf748b1ce195cd8f2048745879c9e13cad1", "patch": "@@ -0,0 +1,27 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2011-06-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+//\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <memory>\n+\n+typedef std::weak_ptr<int> wptype;\n+\n+static_assert(std::is_nothrow_move_constructible<wptype>::value, \"Error\");"}, {"sha": "3d7fdc382e6c7f2ee2d7a89001ec9bf9eff5c360", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/noexcept_move_construct.cc", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a97dbf748b1ce195cd8f2048745879c9e13cad1/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fnoexcept_move_construct.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a97dbf748b1ce195cd8f2048745879c9e13cad1/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fnoexcept_move_construct.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fnoexcept_move_construct.cc?ref=6a97dbf748b1ce195cd8f2048745879c9e13cad1", "patch": "@@ -0,0 +1,27 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2011-06-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+//\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <valarray>\n+\n+typedef std::valarray<int> vtype;\n+\n+static_assert(std::is_nothrow_move_constructible<vtype>::value, \"Error\");"}]}