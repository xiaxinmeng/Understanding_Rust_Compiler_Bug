{"sha": "e3cbb8c66c930ba738674b0fcf29848dc3ecfef2", "node_id": "C_kwDOANBUbNoAKGUzY2JiOGM2NmM5MzBiYTczODY3NGIwZmNmMjk4NDhkYzNlY2ZlZjI", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-12-31T11:52:22Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-12-31T13:16:16Z"}, "message": "libgfortran: Fix bootstrap on targets without static_assert macro.\n\nAlthough we build the library with GCC which is known to support\n_Static_assert this might be done on a system without the macro\nmapping static_assert to the compiler keyword.\n\nThe use of static_assert introduced with r12-6126-g3430132f3e82\ncauses bootstrap to fail on such targets, fixed by using the keyword\ndirectly.\n\nSigned-off-by: Iain Sandoe <iain@sandoe.co.uk>\n\nlibgfortran/ChangeLog:\n\n\t* runtime/string.c (gfc_itoa): Use _Static_assert directly\n\tinstead of via the static_assert macro.", "tree": {"sha": "409935584107142f6f245892baaaea3469152317", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/409935584107142f6f245892baaaea3469152317"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3cbb8c66c930ba738674b0fcf29848dc3ecfef2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3cbb8c66c930ba738674b0fcf29848dc3ecfef2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3cbb8c66c930ba738674b0fcf29848dc3ecfef2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3cbb8c66c930ba738674b0fcf29848dc3ecfef2/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9da496a82c0ba33098d622efba34f4750c4ccb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9da496a82c0ba33098d622efba34f4750c4ccb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9da496a82c0ba33098d622efba34f4750c4ccb9"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "5bc202320c061a3b4050d8b257b4b927815ad8d6", "filename": "libgfortran/runtime/string.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3cbb8c66c930ba738674b0fcf29848dc3ecfef2/libgfortran%2Fruntime%2Fstring.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3cbb8c66c930ba738674b0fcf29848dc3ecfef2/libgfortran%2Fruntime%2Fstring.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fstring.c?ref=e3cbb8c66c930ba738674b0fcf29848dc3ecfef2", "patch": "@@ -242,8 +242,8 @@ gfc_itoa (GFC_UINTEGER_LARGEST n, char *buffer, size_t len)\n \t integers (we would need three calls), but they do suffice for all\n \t values up to 2^127, which is the largest that Fortran can produce\n \t (-HUGE(0_16)-1) with its signed integer types.  */\n-      static_assert(sizeof(GFC_UINTEGER_LARGEST) <= 2 * sizeof(uint64_t),\n-\t\t    \"integer too large\");\n+      _Static_assert (sizeof(GFC_UINTEGER_LARGEST) <= 2 * sizeof(uint64_t),\n+\t\t      \"integer too large\");\n \n       GFC_UINTEGER_LARGEST r;\n       r = n % TEN19;"}]}