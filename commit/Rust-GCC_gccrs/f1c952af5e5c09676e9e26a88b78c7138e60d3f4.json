{"sha": "f1c952af5e5c09676e9e26a88b78c7138e60d3f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFjOTUyYWY1ZTVjMDk2NzZlOWUyNmE4OGI3OGM3MTM4ZTYwZDNmNA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2011-08-01T10:31:31Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T10:31:31Z"}, "message": "aspects.ads, [...]: Add Static_Predicate and Dynamic_Predicate.\n\n2011-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* aspects.ads, aspects.adb: Add Static_Predicate and Dynamic_Predicate.\n\t* sem_ch13.adb (Analyze_Aspect_Specification): Add processing for\n\tStatic_Predicate and Dynamic_Predicate.\n\t(Build_Predicate_Function): Add processing for Static_Predicate\n\tand Dynamic_Predicate.\n\t* sinfo.ads, sinfo.adb (From_Dynamic_Predicate): New flag\n\t(From_Static_Predicate): New flag\n\t* snames.ads-tmpl: Add Name_Static_Predicate and Name_Dynamic_Predicate\n\n2011-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* usage.adb: Documentation cleanup for Ada version modes in usage.\n\t* expander.adb: Minor reformatting.\n\nFrom-SVN: r177009", "tree": {"sha": "aa193f732edbd9861ea28bf5f8bc14276547c684", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa193f732edbd9861ea28bf5f8bc14276547c684"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1c952af5e5c09676e9e26a88b78c7138e60d3f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1c952af5e5c09676e9e26a88b78c7138e60d3f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1c952af5e5c09676e9e26a88b78c7138e60d3f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1c952af5e5c09676e9e26a88b78c7138e60d3f4/comments", "author": null, "committer": null, "parents": [{"sha": "47e11d08d66896ebf33e023c1724925ff2a1546e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47e11d08d66896ebf33e023c1724925ff2a1546e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47e11d08d66896ebf33e023c1724925ff2a1546e"}], "stats": {"total": 166, "additions": 142, "deletions": 24}, "files": [{"sha": "86eb2bc401f8354eada4c96894d74948e5ca1dfa", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c952af5e5c09676e9e26a88b78c7138e60d3f4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c952af5e5c09676e9e26a88b78c7138e60d3f4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f1c952af5e5c09676e9e26a88b78c7138e60d3f4", "patch": "@@ -1,3 +1,19 @@\n+2011-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* aspects.ads, aspects.adb: Add Static_Predicate and Dynamic_Predicate.\n+\t* sem_ch13.adb (Analyze_Aspect_Specification): Add processing for\n+\tStatic_Predicate and Dynamic_Predicate.\n+\t(Build_Predicate_Function): Add processing for Static_Predicate\n+\tand Dynamic_Predicate.\n+\t* sinfo.ads, sinfo.adb (From_Dynamic_Predicate): New flag\n+\t(From_Static_Predicate): New flag\n+\t* snames.ads-tmpl: Add Name_Static_Predicate and Name_Dynamic_Predicate\n+\n+2011-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* usage.adb: Documentation cleanup for Ada version modes in usage.\n+\t* expander.adb: Minor reformatting.\n+\n 2011-08-01  Robert Dewar  <dewar@adacore.com>\n \n \t* atree.ads: Minor comment fix."}, {"sha": "ab6b454e61abb8199c8884049f9ff313c6022139", "filename": "gcc/ada/aspects.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c952af5e5c09676e9e26a88b78c7138e60d3f4/gcc%2Fada%2Faspects.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c952af5e5c09676e9e26a88b78c7138e60d3f4/gcc%2Fada%2Faspects.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.adb?ref=f1c952af5e5c09676e9e26a88b78c7138e60d3f4", "patch": "@@ -81,6 +81,7 @@ package body Aspects is\n      (Name_Atomic_Components,            Aspect_Atomic_Components),\n      (Name_Bit_Order,                    Aspect_Bit_Order),\n      (Name_Component_Size,               Aspect_Component_Size),\n+     (Name_Dynamic_Predicate,            Aspect_Dynamic_Predicate),\n      (Name_Discard_Names,                Aspect_Discard_Names),\n      (Name_External_Tag,                 Aspect_External_Tag),\n      (Name_Favor_Top_Level,              Aspect_Favor_Top_Level),\n@@ -101,6 +102,7 @@ package body Aspects is\n      (Name_Read,                         Aspect_Read),\n      (Name_Shared,                       Aspect_Shared),\n      (Name_Size,                         Aspect_Size),\n+     (Name_Static_Predicate,             Aspect_Static_Predicate),\n      (Name_Storage_Pool,                 Aspect_Storage_Pool),\n      (Name_Storage_Size,                 Aspect_Storage_Size),\n      (Name_Stream_Size,                  Aspect_Stream_Size),"}, {"sha": "bf37ffb317079c886949b40ba261d49bbbcfb930", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c952af5e5c09676e9e26a88b78c7138e60d3f4/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c952af5e5c09676e9e26a88b78c7138e60d3f4/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=f1c952af5e5c09676e9e26a88b78c7138e60d3f4", "patch": "@@ -47,6 +47,7 @@ package Aspects is\n       Aspect_Alignment,\n       Aspect_Bit_Order,\n       Aspect_Component_Size,\n+      Aspect_Dynamic_Predicate,\n       Aspect_External_Tag,\n       Aspect_Input,\n       Aspect_Invariant,\n@@ -55,9 +56,10 @@ package Aspects is\n       Aspect_Output,\n       Aspect_Post,\n       Aspect_Pre,\n-      Aspect_Predicate,\n+      Aspect_Predicate,                     -- GNAT\n       Aspect_Read,\n       Aspect_Size,\n+      Aspect_Static_Predicate,\n       Aspect_Storage_Pool,\n       Aspect_Storage_Size,\n       Aspect_Stream_Size,\n@@ -128,6 +130,7 @@ package Aspects is\n                         Aspect_Alignment                    => Expression,\n                         Aspect_Bit_Order                    => Expression,\n                         Aspect_Component_Size               => Expression,\n+                        Aspect_Dynamic_Predicate            => Expression,\n                         Aspect_External_Tag                 => Expression,\n                         Aspect_Input                        => Name,\n                         Aspect_Invariant                    => Expression,\n@@ -139,6 +142,7 @@ package Aspects is\n                         Aspect_Predicate                    => Expression,\n                         Aspect_Read                         => Name,\n                         Aspect_Size                         => Expression,\n+                        Aspect_Static_Predicate             => Expression,\n                         Aspect_Storage_Pool                 => Name,\n                         Aspect_Storage_Size                 => Expression,\n                         Aspect_Stream_Size                  => Expression,"}, {"sha": "308b5d769340731a8152a750b20a4b6ca97a1c77", "filename": "gcc/ada/expander.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c952af5e5c09676e9e26a88b78c7138e60d3f4/gcc%2Fada%2Fexpander.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c952af5e5c09676e9e26a88b78c7138e60d3f4/gcc%2Fada%2Fexpander.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpander.adb?ref=f1c952af5e5c09676e9e26a88b78c7138e60d3f4", "patch": "@@ -459,7 +459,6 @@ package body Expander is\n          --  Deal with transient scopes\n \n          if Scope_Is_Transient and then N = Node_To_Be_Wrapped then\n-\n             case Nkind (N) is\n                when N_Statement_Other_Than_Procedure_Call |\n                     N_Procedure_Call_Statement            =>"}, {"sha": "6446b33bba8ad35cdc69b63c7056a43452a22d43", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 44, "deletions": 7, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c952af5e5c09676e9e26a88b78c7138e60d3f4/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c952af5e5c09676e9e26a88b78c7138e60d3f4/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=f1c952af5e5c09676e9e26a88b78c7138e60d3f4", "patch": "@@ -1054,9 +1054,12 @@ package body Sem_Ch13 is\n                --  declaration, to get the required pragma placement. The\n                --  pragma processing takes care of the required delay.\n \n-               when Aspect_Predicate =>\n+               when Aspect_Dynamic_Predicate |\n+                    Aspect_Predicate         |\n+                    Aspect_Static_Predicate  =>\n \n-                  --  Construct the pragma\n+                  --  Construct the pragma (always a pragma Predicate, with\n+                  --  flags recording whether\n \n                   Aitem :=\n                     Make_Pragma (Loc,\n@@ -1068,6 +1071,14 @@ package body Sem_Ch13 is\n \n                   Set_From_Aspect_Specification (Aitem, True);\n \n+                  --  Set special flags for dynamic/static cases\n+\n+                  if A_Id = Aspect_Dynamic_Predicate then\n+                     Set_From_Dynamic_Predicate (Aitem);\n+                  elsif A_Id = Aspect_Static_Predicate then\n+                     Set_From_Static_Predicate (Aitem);\n+                  end if;\n+\n                   --  Make sure we have a freeze node (it might otherwise be\n                   --  missing in cases like subtype X is Y, and we would not\n                   --  have a place to build the predicate function).\n@@ -3818,6 +3829,13 @@ package body Sem_Ch13 is\n       Object_Name : constant Name_Id := New_Internal_Name ('I');\n       --  Name for argument of Predicate procedure\n \n+      Dynamic_Predicate_Present : Boolean := False;\n+      --  Set True if a dynamic predicate is present, results in the entire\n+      --  predicate being considered dynamic even if it looks static\n+\n+      Static_Predicate_Present : Node_Id := Empty;\n+      --  Set to N_Pragma node for a static predicate if one is encountered.\n+\n       --------------\n       -- Add_Call --\n       --------------\n@@ -3903,6 +3921,12 @@ package body Sem_Ch13 is\n             if Nkind (Ritem) = N_Pragma\n               and then Pragma_Name (Ritem) = Name_Predicate\n             then\n+               if From_Dynamic_Predicate (Ritem) then\n+                  Dynamic_Predicate_Present := True;\n+               elsif From_Static_Predicate (Ritem) then\n+                  Static_Predicate_Present := Ritem;\n+               end if;\n+\n                Arg1 := First (Pragma_Argument_Associations (Ritem));\n                Arg2 := Next (Arg1);\n \n@@ -3945,7 +3969,7 @@ package body Sem_Ch13 is\n    begin\n       --  Initialize for construction of statement list\n \n-      Expr  := Empty;\n+      Expr := Empty;\n \n       --  Return if already built or if type does not have predicates\n \n@@ -4034,8 +4058,19 @@ package body Sem_Ch13 is\n                            E_Modular_Integer_Subtype,\n                            E_Signed_Integer_Subtype)\n            and then Is_Static_Subtype (Typ)\n+           and then not Dynamic_Predicate_Present\n          then\n             Build_Static_Predicate (Typ, Expr, Object_Name);\n+\n+            if Present (Static_Predicate_Present)\n+              and No (Static_Predicate (Typ))\n+            then\n+               Error_Msg_F\n+                 (\"expression does not have required form for \"\n+                  & \"static predicate\",\n+                  Next (First (Pragma_Argument_Associations\n+                                (Static_Predicate_Present))));\n+            end if;\n          end if;\n       end if;\n    end Build_Predicate_Function;\n@@ -5002,10 +5037,12 @@ package body Sem_Ch13 is\n \n          --  Pre/Post/Invariant/Predicate take boolean expressions\n \n-         when Aspect_Pre       |\n-              Aspect_Post      |\n-              Aspect_Invariant |\n-              Aspect_Predicate =>\n+         when Aspect_Dynamic_Predicate |\n+              Aspect_Invariant         |\n+              Aspect_Pre               |\n+              Aspect_Post              |\n+              Aspect_Predicate         |\n+              Aspect_Static_Predicate  =>\n             T := Standard_Boolean;\n       end case;\n "}, {"sha": "3a67e72c877d368ac9acea51af76cd45aae20917", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c952af5e5c09676e9e26a88b78c7138e60d3f4/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c952af5e5c09676e9e26a88b78c7138e60d3f4/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=f1c952af5e5c09676e9e26a88b78c7138e60d3f4", "patch": "@@ -1360,6 +1360,22 @@ package body Sinfo is\n       return Flag6 (N);\n    end From_Default;\n \n+   function From_Dynamic_Predicate\n+      (N : Node_Id) return Boolean is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Pragma);\n+      return Flag7 (N);\n+   end From_Dynamic_Predicate;\n+\n+   function From_Static_Predicate\n+      (N : Node_Id) return Boolean is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Pragma);\n+      return Flag8 (N);\n+   end From_Static_Predicate;\n+\n    function Generic_Associations\n       (N : Node_Id) return List_Id is\n    begin\n@@ -4388,6 +4404,22 @@ package body Sinfo is\n       Set_Flag6 (N, Val);\n    end Set_From_Default;\n \n+   procedure Set_From_Dynamic_Predicate\n+      (N : Node_Id; Val : Boolean := True) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Pragma);\n+      Set_Flag7 (N, Val);\n+   end Set_From_Dynamic_Predicate;\n+\n+   procedure Set_From_Static_Predicate\n+      (N : Node_Id; Val : Boolean := True) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Pragma);\n+      Set_Flag8 (N, Val);\n+   end Set_From_Static_Predicate;\n+\n    procedure Set_Generic_Associations\n       (N : Node_Id; Val : List_Id) is\n    begin"}, {"sha": "facc045a23d237d38c0a48c2dd02db07effd7235", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 33, "deletions": 7, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c952af5e5c09676e9e26a88b78c7138e60d3f4/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c952af5e5c09676e9e26a88b78c7138e60d3f4/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=f1c952af5e5c09676e9e26a88b78c7138e60d3f4", "patch": "@@ -497,13 +497,6 @@ package Sinfo is\n    --    has been inserted at the flagged node. This is used to avoid the\n    --    generation of duplicate checks.\n \n-   --  Has_Local_Raise (Flag8-Sem)\n-   --    Present in exception handler nodes. Set if the handler can be entered\n-   --    via a local raise that gets transformed to a goto statement. This will\n-   --    always be set if Local_Raise_Statements is non-empty, but can also be\n-   --    set as a result of generation of N_Raise_xxx nodes, or flags set in\n-   --    nodes requiring generation of back end checks.\n-\n    ------------------------------------\n    -- Description of Semantic Fields --\n    ------------------------------------\n@@ -1108,6 +1101,14 @@ package Sinfo is\n    --    declaration is treated as an implicit reference to the formal in the\n    --    ali file.\n \n+   --  From_Dynamic_Predicate (Flag7-Sem)\n+   --    Set for generated pragma Predicate node if this is generated by a\n+   --    Dynamic_Predicate aspect.\n+\n+   --  From_Static_Predicate (Flag8-Sem)\n+   --    Set for generated pragma Predicate node if this is generated by a\n+   --    Static_Predicate aspect.\n+\n    --  Generic_Parent (Node5-Sem)\n    --    Generic_Parent is defined on declaration nodes that are instances. The\n    --    value of Generic_Parent is the generic entity from which the instance\n@@ -1132,6 +1133,13 @@ package Sinfo is\n    --    handler is deleted during optimization. For further details on why\n    --    this is required, see Exp_Ch11.Remove_Handler_Entries.\n \n+   --  Has_Local_Raise (Flag8-Sem)\n+   --    Present in exception handler nodes. Set if the handler can be entered\n+   --    via a local raise that gets transformed to a goto statement. This will\n+   --    always be set if Local_Raise_Statements is non-empty, but can also be\n+   --    set as a result of generation of N_Raise_xxx nodes, or flags set in\n+   --    nodes requiring generation of back end checks.\n+\n    --  Has_No_Elaboration_Code (Flag17-Sem)\n    --    A flag that appears in the N_Compilation_Unit node to indicate whether\n    --    or not elaboration code is present for this unit. It is initially set\n@@ -2074,6 +2082,8 @@ package Sinfo is\n       --  Aspect_Cancel (Flag11-Sem)\n       --  Split_PPC (Flag17) set if corresponding aspect had Split_PPC set\n       --  Class_Present (Flag6) set if from Aspect with 'Class\n+      --  From_Dynamic_Predicate (Flag7-Sem) Set if Dynamic_Predicate aspect\n+      --  From_Static_Predicate (Flag8-Sem) Set if Static_Predicate aspect\n \n       --  Note: we should have a section on what pragmas are passed on to\n       --  the back end to be processed. This section should note that pragma\n@@ -8390,6 +8400,12 @@ package Sinfo is\n    function From_Default\n      (N : Node_Id) return Boolean;    -- Flag6\n \n+   function From_Dynamic_Predicate\n+     (N : Node_Id) return Boolean;    -- Flag7\n+\n+   function From_Static_Predicate\n+     (N : Node_Id) return Boolean;    -- Flag8\n+\n    function Generic_Associations\n      (N : Node_Id) return List_Id;    -- List3\n \n@@ -9356,6 +9372,12 @@ package Sinfo is\n    procedure Set_From_Default\n      (N : Node_Id; Val : Boolean := True);    -- Flag6\n \n+   procedure Set_From_Dynamic_Predicate\n+     (N : Node_Id; Val : Boolean := True);    -- Flag7\n+\n+   procedure Set_From_Static_Predicate\n+     (N : Node_Id; Val : Boolean := True);    -- Flag8\n+\n    procedure Set_Generic_Associations\n      (N : Node_Id; Val : List_Id);            -- List3\n \n@@ -11775,6 +11797,8 @@ package Sinfo is\n    pragma Inline (From_At_End);\n    pragma Inline (From_At_Mod);\n    pragma Inline (From_Default);\n+   pragma Inline (From_Dynamic_Predicate);\n+   pragma Inline (From_Static_Predicate);\n    pragma Inline (Generic_Associations);\n    pragma Inline (Generic_Formal_Declarations);\n    pragma Inline (Generic_Parent);\n@@ -12094,6 +12118,8 @@ package Sinfo is\n    pragma Inline (Set_From_At_End);\n    pragma Inline (Set_From_At_Mod);\n    pragma Inline (Set_From_Default);\n+   pragma Inline (Set_From_Dynamic_Predicate);\n+   pragma Inline (Set_From_Static_Predicate);\n    pragma Inline (Set_Generic_Associations);\n    pragma Inline (Set_Generic_Formal_Declarations);\n    pragma Inline (Set_Generic_Parent);"}, {"sha": "9e5921c11239ae9287b11e17c8934ea02267f7d8", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c952af5e5c09676e9e26a88b78c7138e60d3f4/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c952af5e5c09676e9e26a88b78c7138e60d3f4/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=f1c952af5e5c09676e9e26a88b78c7138e60d3f4", "patch": "@@ -137,8 +137,10 @@ package Snames is\n    --  Names of aspects for which there are no matching pragmas or attributes\n    --  so that they need to be included for aspect specification use.\n \n+   Name_Dynamic_Predicate              : constant Name_Id := N + $;\n    Name_Post                           : constant Name_Id := N + $;\n    Name_Pre                            : constant Name_Id := N + $;\n+   Name_Static_Predicate               : constant Name_Id := N + $;\n \n    --  Some special names used by the expander. Note that the lower case u's\n    --  at the start of these names get translated to extra underscores. These"}, {"sha": "5b0f6056a43057ac91c329b2ba88f7c0a00bc4ca", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c952af5e5c09676e9e26a88b78c7138e60d3f4/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c952af5e5c09676e9e26a88b78c7138e60d3f4/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=f1c952af5e5c09676e9e26a88b78c7138e60d3f4", "patch": "@@ -594,7 +594,7 @@ begin\n    --  Line for -gnat83 switch\n \n    Write_Switch_Char (\"83\");\n-   Write_Line (\"Enforce Ada 83 restrictions\");\n+   Write_Line (\"Ada 83 mode\");\n \n    --  Line for -gnat95 switch\n \n@@ -603,27 +603,27 @@ begin\n    if Ada_Version_Default = Ada_95 then\n       Write_Line (\"Ada 95 mode (default)\");\n    else\n-      Write_Line (\"Enforce Ada 95 restrictions\");\n+      Write_Line (\"Ada 95 mode\");\n    end if;\n \n-   --  Line for -gnat05 switch\n+   --  Line for -gnat2005 switch\n \n-   Write_Switch_Char (\"05\");\n+   Write_Switch_Char (\"2005\");\n \n    if Ada_Version_Default = Ada_2005 then\n       Write_Line (\"Ada 2005 mode (default)\");\n    else\n-      Write_Line (\"Enforce Ada 2005 restrictions\");\n+      Write_Line (\"Ada 2005 mode\");\n    end if;\n \n-   --  Line for -gnat12 switch\n+   --  Line for -gnat2012 switch\n \n-   Write_Switch_Char (\"12\");\n+   Write_Switch_Char (\"2012\");\n \n    if Ada_Version_Default = Ada_2012 then\n       Write_Line (\"Ada 2012 mode (default)\");\n    else\n-      Write_Line (\"Allow Ada 2012 extensions\");\n+      Write_Line (\"Ada 2012 mode\");\n    end if;\n \n    --  Line for -gnat-p switch"}]}