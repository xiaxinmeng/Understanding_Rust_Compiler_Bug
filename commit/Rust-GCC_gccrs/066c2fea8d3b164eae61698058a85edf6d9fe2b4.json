{"sha": "066c2fea8d3b164eae61698058a85edf6d9fe2b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY2YzJmZWE4ZDNiMTY0ZWFlNjE2OTgwNThhODVlZGY2ZDlmZTJiNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1997-10-07T18:36:48Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-10-07T18:36:48Z"}, "message": "regclass.c (init_reg_modes): If we can't find a mode for the register, use the previous one.\n\n\t* regclass.c (init_reg_modes): If we can't find a mode for the\n\tregister, use the previous one.\n\nFrom-SVN: r15862", "tree": {"sha": "9bdec7a4f7ae437cc3f487c2c5d586fa965d82b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9bdec7a4f7ae437cc3f487c2c5d586fa965d82b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/066c2fea8d3b164eae61698058a85edf6d9fe2b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/066c2fea8d3b164eae61698058a85edf6d9fe2b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/066c2fea8d3b164eae61698058a85edf6d9fe2b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/066c2fea8d3b164eae61698058a85edf6d9fe2b4/comments", "author": null, "committer": null, "parents": [{"sha": "c0da11c40af197cc142294ed2422299e93a00f2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0da11c40af197cc142294ed2422299e93a00f2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0da11c40af197cc142294ed2422299e93a00f2e"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "fb9cd7cf33289fae50de1069f800e07e867ca977", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/066c2fea8d3b164eae61698058a85edf6d9fe2b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/066c2fea8d3b164eae61698058a85edf6d9fe2b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=066c2fea8d3b164eae61698058a85edf6d9fe2b4", "patch": "@@ -1,3 +1,8 @@\n+Tue Oct  7 11:00:42 1997  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* regclass.c (init_reg_modes): If we can't find a mode for the \n+\tregister, use the previous one.\n+\n Tue Oct  7 10:55:34 1997  Richard Henderson  <rth@cygnus.com>\n \n \t* haifa-sched.c (print_block_visualization): Call fprintf directly,"}, {"sha": "2932db138100ff29dfe0a4a4624700c5d6990cb5", "filename": "gcc/regclass.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/066c2fea8d3b164eae61698058a85edf6d9fe2b4/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/066c2fea8d3b164eae61698058a85edf6d9fe2b4/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=066c2fea8d3b164eae61698058a85edf6d9fe2b4", "patch": "@@ -405,14 +405,13 @@ init_reg_modes ()\n     {\n       reg_raw_mode[i] = choose_hard_reg_mode (i, 1);\n \n-      /* If we couldn't find a valid mode, fall back to `word_mode'.\n-\t ??? We assume `word_mode' has already been initialized.\n+      /* If we couldn't find a valid mode, just use the previous mode.\n          ??? One situation in which we need to do this is on the mips where\n \t HARD_REGNO_NREGS (fpreg, [SD]Fmode) returns 2.  Ideally we'd like\n \t to use DF mode for the even registers and VOIDmode for the odd\n \t (for the cpu models where the odd ones are inaccessible).  */\n       if (reg_raw_mode[i] == VOIDmode)\n-\treg_raw_mode[i] = word_mode;\n+\treg_raw_mode[i] = i == 0 ? word_mode : reg_raw_mode[i-1];\n     }\n }\n "}]}