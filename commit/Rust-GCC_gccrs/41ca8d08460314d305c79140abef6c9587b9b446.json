{"sha": "41ca8d08460314d305c79140abef6c9587b9b446", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFjYThkMDg0NjAzMTRkMzA1Yzc5MTQwYWJlZjZjOTU4N2I5YjQ0Ng==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2009-10-27T17:14:47Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2009-10-27T17:14:47Z"}, "message": "mingw32.h (CHECK_EXECUTE_STACK_ENABLED): New macro.\n\n2009-10-27  Kai Tietz <kai.tietz@onevision.com>\n\n        PR/41799\n        * config/i386/mingw32.h (CHECK_EXECUTE_STACK_ENABLED): New macro.\n        * config/i386/mingw.opt: Add fset-stack-executable.\n        * config/i386/i386.c (ix86_trampoline_init): Make call to\n        emit_library_call conditional, if CHECK_EXECUTE_STACK_ENABLED is\n        defined and its value is not zero.\n        * doc/invoke.texi\n\nFrom-SVN: r153606", "tree": {"sha": "533c525e054265aa03544fa40b7a4795744eb7c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/533c525e054265aa03544fa40b7a4795744eb7c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41ca8d08460314d305c79140abef6c9587b9b446", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41ca8d08460314d305c79140abef6c9587b9b446", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41ca8d08460314d305c79140abef6c9587b9b446", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41ca8d08460314d305c79140abef6c9587b9b446/comments", "author": null, "committer": null, "parents": [{"sha": "2c9062e2c161350768abb05284a6e334f9261145", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c9062e2c161350768abb05284a6e334f9261145", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c9062e2c161350768abb05284a6e334f9261145"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "42707f88d451a44cfa0c63a8837c04caed3c8ba1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41ca8d08460314d305c79140abef6c9587b9b446/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41ca8d08460314d305c79140abef6c9587b9b446/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=41ca8d08460314d305c79140abef6c9587b9b446", "patch": "@@ -1,3 +1,13 @@\n+2009-10-27  Kai Tietz <kai.tietz@onevision.com>\n+\n+\tPR/41799\n+\t* config/i386/mingw32.h (CHECK_EXECUTE_STACK_ENABLED): New macro.\n+\t* config/i386/mingw.opt: Add fset-stack-executable.\n+\t* config/i386/i386.c (ix86_trampoline_init): Make call to\n+\temit_library_call conditional, if CHECK_EXECUTE_STACK_ENABLED is\n+\tdefined and its value is not zero.\n+\t* doc/invoke.texi\n+\n 2009-10-27  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-structalias.c (find_func_aliases): In IPA mode"}, {"sha": "a4e51afb39509dbfb1d1a5a82d4897e360298677", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41ca8d08460314d305c79140abef6c9587b9b446/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41ca8d08460314d305c79140abef6c9587b9b446/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=41ca8d08460314d305c79140abef6c9587b9b446", "patch": "@@ -20042,6 +20042,9 @@ ix86_trampoline_init (rtx m_tramp, tree fndecl, rtx chain_value)\n     }\n \n #ifdef ENABLE_EXECUTE_STACK\n+#ifdef CHECK_EXECUTE_STACK_ENABLED\n+  if (CHECK_EXECUTE_STACK_ENABLED)\n+#endif\n   emit_library_call (gen_rtx_SYMBOL_REF (Pmode, \"__enable_execute_stack\"),\n \t\t     LCT_NORMAL, VOIDmode, 1, XEXP (m_tramp, 0), Pmode);\n #endif"}, {"sha": "bd9a4b63035dee5751fd54968e4f9bd9764b2472", "filename": "gcc/config/i386/mingw.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41ca8d08460314d305c79140abef6c9587b9b446/gcc%2Fconfig%2Fi386%2Fmingw.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41ca8d08460314d305c79140abef6c9587b9b446/gcc%2Fconfig%2Fi386%2Fmingw.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmingw.opt?ref=41ca8d08460314d305c79140abef6c9587b9b446", "patch": "@@ -21,3 +21,7 @@\n Wpedantic-ms-format\n C ObjC C++ ObjC++ Var(warn_pedantic_ms_format) Init(1) Warning\n Warn about none ISO msvcrt scanf/printf width extensions\n+\n+fset-stack-executable\n+Common Report Var(flag_setstackexecutable) Init(1) Optimization\n+For nested functions on stack executable permission is set."}, {"sha": "4f8b101a7baef253fb1cd660029ff347cc5dcd80", "filename": "gcc/config/i386/mingw32.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41ca8d08460314d305c79140abef6c9587b9b446/gcc%2Fconfig%2Fi386%2Fmingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41ca8d08460314d305c79140abef6c9587b9b446/gcc%2Fconfig%2Fi386%2Fmingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmingw32.h?ref=41ca8d08460314d305c79140abef6c9587b9b446", "patch": "@@ -202,6 +202,8 @@ __enable_execute_stack (void *addr)\t\t\t\t\t\\\n \n #undef ENABLE_EXECUTE_STACK\n #define ENABLE_EXECUTE_STACK MINGW_ENABLE_EXECUTE_STACK\n+#undef  CHECK_EXECUTE_STACK_ENABLED\n+#define CHECK_EXECUTE_STACK_ENABLED flag_setstackexecutable\n \n #ifdef IN_LIBGCC2\n #include <windows.h>"}, {"sha": "60f67c7bf2535b47dd12f2d4d2d72b30d1833772", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41ca8d08460314d305c79140abef6c9587b9b446/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41ca8d08460314d305c79140abef6c9587b9b446/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=41ca8d08460314d305c79140abef6c9587b9b446", "patch": "@@ -877,7 +877,8 @@ See i386 and x86-64 Options.\n \n @emph{i386 and x86-64 Windows Options}\n @gccoptlist{-mconsole -mcygwin -mno-cygwin -mdll\n--mnop-fun-dllimport -mthread -municode -mwin32 -mwindows}\n+-mnop-fun-dllimport -mthread -municode -mwin32 -mwindows\n+-fno-set-stack-executable}\n \n @emph{Xstormy16 Options}\n @gccoptlist{-msim}\n@@ -16704,6 +16705,14 @@ specifies that a GUI application is to be generated by\n instructing the linker to set the PE header subsystem type\n appropriately.\n \n+@item -fno-set-stack-executable\n+@opindex fno-set-stack-executable\n+This option is available for MinGW targets. It specifies that\n+the executable flag for stack used by nested functions isn't\n+set. This is necessary for binaries running in kernel mode of\n+Windows, as there the user32 API, which is used to set executable\n+privileges, isn't available.\n+\n @item -mpe-aligned-commons\n @opindex mpe-aligned-commons\n This option is available for Cygwin and MinGW targets.  It"}]}