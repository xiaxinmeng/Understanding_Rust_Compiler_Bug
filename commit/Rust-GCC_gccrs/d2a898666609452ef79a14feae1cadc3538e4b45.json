{"sha": "d2a898666609452ef79a14feae1cadc3538e4b45", "node_id": "C_kwDOANBUbNoAKGQyYTg5ODY2NjYwOTQ1MmVmNzlhMTRmZWFlMWNhZGMzNTM4ZTRiNDU", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-06-21T14:17:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-07-04T08:36:09Z"}, "message": "Put virtual operands into loop-closed SSA\n\nWhen attempting to manually update SSA form after high-level loop\ntransforms such as loop versioning it is helpful when the loop-closed\nSSA form includes virtual operands.  While we have the special\nrewrite_virtuals_into_loop_closed_ssa function that doesn't\npresently scale, invoking update_ssa by itself.  So the following\nmakes the regular loop-closed SSA form also cover virtual operands.\nFor users of loop_version this allows to use cheaper\nTODO_update_ssa_no_phi, skipping dominance frontier compute\n(for the whole function) and iterated dominance frontiers for each\ncopied def.\n\n\t* tree-ssa-loop-manip.h\n\t(rewrite_virtuals_into_loop_closed_ssa): Remove.\n\t(rewrite_into_loop_closed_ssa_1): Likewise.\n\t* tree-ssa-loop-manip.cc (rewrite_into_loop_closed_ssa_1):\n\tMake static.\n\t(rewrite_into_loop_closed_ssa): Remove loop overload,\n\talways rewrite virtuals into LC SSA.\n\t(check_loop_closed_ssa_bb): Also check virtuals.\n\t* tree-ssa-dce.cc (remove_dead_phis): Preserve virtual\n\tLC PHIs when in LC SSA.\n\t* gimple-loop-jam.cc (fuse_loops): Do not rewrite into\n\tloop-closed SSA here, but ...\n\t(tree_loop_unroll_and_jam): ... here once.\n\t* tree-if-conv.cc (version_loop_for_if_conversion): Use\n\tthe cheaper TODO_update_ssa_no_phi.\n\t* tree-loop-distribution.cc (version_loop_by_alias_check):\n\tLikewise.\n\t* tree-ssa-loop-unswitch.cc (tree_unswitch_single_loop):\n\tLikewise.\n\t* tree-vect-loop-manip.cc (vect_loop_versioning): Likewise.\n\t(tree_unswitch_outer_loop): Do not rewrite virtuals into\n\tLC ssa.\n\t* tree-parloops.cc (transform_to_exit_first_loop_alt):\n\tLikewise.\n\t(pass_parallelize_loops::execute): After finishing rewrite\n\tinto LC SSA again because we do not maintain it properly.", "tree": {"sha": "38cd98b68a3bbdc0ed71b6533be8bac5a7666af2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38cd98b68a3bbdc0ed71b6533be8bac5a7666af2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2a898666609452ef79a14feae1cadc3538e4b45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2a898666609452ef79a14feae1cadc3538e4b45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2a898666609452ef79a14feae1cadc3538e4b45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2a898666609452ef79a14feae1cadc3538e4b45/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c6bef0a33e32e6a95dca7d50cd5be37e7262775", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c6bef0a33e32e6a95dca7d50cd5be37e7262775", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c6bef0a33e32e6a95dca7d50cd5be37e7262775"}], "stats": {"total": 51, "additions": 17, "deletions": 34}, "files": [{"sha": "8cde6c7c5ce65863ccdd584f0434fc5fabcff061", "filename": "gcc/gimple-loop-jam.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2a898666609452ef79a14feae1cadc3538e4b45/gcc%2Fgimple-loop-jam.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2a898666609452ef79a14feae1cadc3538e4b45/gcc%2Fgimple-loop-jam.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-loop-jam.cc?ref=d2a898666609452ef79a14feae1cadc3538e4b45", "patch": "@@ -363,7 +363,6 @@ fuse_loops (class loop *loop)\n       delete_loop (next);\n       next = ln;\n     }\n-  rewrite_into_loop_closed_ssa_1 (NULL, 0, SSA_OP_USE, loop);\n }\n \n /* Return true if any of the access functions for dataref A\n@@ -610,6 +609,7 @@ tree_loop_unroll_and_jam (void)\n \n   if (todo)\n     {\n+      rewrite_into_loop_closed_ssa (NULL, 0);\n       scev_reset ();\n       free_dominance_info (CDI_DOMINATORS);\n     }"}, {"sha": "1c8e1a45234b8c3565edaacd55abbee23d8ea240", "filename": "gcc/tree-if-conv.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2a898666609452ef79a14feae1cadc3538e4b45/gcc%2Ftree-if-conv.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2a898666609452ef79a14feae1cadc3538e4b45/gcc%2Ftree-if-conv.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.cc?ref=d2a898666609452ef79a14feae1cadc3538e4b45", "patch": "@@ -2934,7 +2934,7 @@ version_loop_for_if_conversion (class loop *loop, vec<gimple *> *preds)\n   if (preds)\n     preds->safe_push (g);\n   gsi_insert_before (&gsi, g, GSI_SAME_STMT);\n-  update_ssa (TODO_update_ssa);\n+  update_ssa (TODO_update_ssa_no_phi);\n   return new_loop;\n }\n "}, {"sha": "ed7f432f322d4725d6c63fdc2eec9c74f24a0748", "filename": "gcc/tree-loop-distribution.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2a898666609452ef79a14feae1cadc3538e4b45/gcc%2Ftree-loop-distribution.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2a898666609452ef79a14feae1cadc3538e4b45/gcc%2Ftree-loop-distribution.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-distribution.cc?ref=d2a898666609452ef79a14feae1cadc3538e4b45", "patch": "@@ -2751,7 +2751,7 @@ version_loop_by_alias_check (vec<struct partition *> *partitions,\n       gimple_stmt_iterator cond_gsi = gsi_last_bb (cond_bb);\n       gsi_insert_seq_before (&cond_gsi, cond_stmts, GSI_SAME_STMT);\n     }\n-  update_ssa (TODO_update_ssa);\n+  update_ssa (TODO_update_ssa_no_phi);\n }\n \n /* Return true if loop versioning is needed to distrubute PARTITIONS."}, {"sha": "2d3aa78cd249b98ec2f310e89ecd4ddc7fa3fce0", "filename": "gcc/tree-parloops.cc", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2a898666609452ef79a14feae1cadc3538e4b45/gcc%2Ftree-parloops.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2a898666609452ef79a14feae1cadc3538e4b45/gcc%2Ftree-parloops.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.cc?ref=d2a898666609452ef79a14feae1cadc3538e4b45", "patch": "@@ -2355,12 +2355,6 @@ transform_to_exit_first_loop_alt (class loop *loop,\n   tree control = gimple_cond_lhs (cond_stmt);\n   edge e;\n \n-  /* Rewriting virtuals into loop-closed ssa normal form makes this\n-     transformation simpler.  It also ensures that the virtuals are in\n-     loop-closed ssa normal from after the transformation, which is required by\n-     create_parallel_loop.  */\n-  rewrite_virtuals_into_loop_closed_ssa (loop);\n-\n   /* Create the new_header block.  */\n   basic_block new_header = split_block_before_cond_jump (exit->src);\n   edge edge_at_split = single_pred_edge (new_header);\n@@ -4223,7 +4217,9 @@ pass_parallelize_loops::execute (function *fun)\n \n       checking_verify_loop_structure ();\n \n-      todo |= TODO_update_ssa;\n+      update_ssa (TODO_update_ssa);\n+      if (in_loop_pipeline)\n+\trewrite_into_loop_closed_ssa (NULL, 0);\n     }\n \n   if (!in_loop_pipeline)"}, {"sha": "bc5335826732c367a4b7b1a0f2f8ea4015679e42", "filename": "gcc/tree-ssa-dce.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2a898666609452ef79a14feae1cadc3538e4b45/gcc%2Ftree-ssa-dce.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2a898666609452ef79a14feae1cadc3538e4b45/gcc%2Ftree-ssa-dce.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.cc?ref=d2a898666609452ef79a14feae1cadc3538e4b45", "patch": "@@ -1026,7 +1026,8 @@ remove_dead_phis (basic_block bb)\n \t{\n \t  /* Virtual PHI nodes with one or identical arguments\n \t     can be removed.  */\n-\t  if (degenerate_phi_p (phi))\n+\t  if (!loops_state_satisfies_p (LOOP_CLOSED_SSA)\n+\t      && degenerate_phi_p (phi))\n \t    {\n \t      tree vdef = gimple_phi_result (phi);\n \t      tree vuse = gimple_phi_arg_def (phi, 0);"}, {"sha": "623d03b9d86a6a47a9671530583a293b2262f28b", "filename": "gcc/tree-ssa-loop-manip.cc", "status": "modified", "additions": 7, "deletions": 16, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2a898666609452ef79a14feae1cadc3538e4b45/gcc%2Ftree-ssa-loop-manip.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2a898666609452ef79a14feae1cadc3538e4b45/gcc%2Ftree-ssa-loop-manip.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-manip.cc?ref=d2a898666609452ef79a14feae1cadc3538e4b45", "patch": "@@ -625,7 +625,7 @@ find_uses_to_rename_in_loop (class loop *loop, bitmap *use_blocks,\n       UPDATE_FLAG is used in the call to update_ssa.  See\n       TODO_update_ssa* for documentation.  */\n \n-void\n+static void\n rewrite_into_loop_closed_ssa_1 (bitmap changed_bbs, unsigned update_flag,\n \t\t\t\tint use_flags, class loop *loop)\n {\n@@ -686,24 +686,16 @@ rewrite_into_loop_closed_ssa_1 (bitmap changed_bbs, unsigned update_flag,\n   free (use_blocks);\n }\n \n-/* Rewrites the non-virtual defs and uses into a loop closed ssa form.  If\n-   CHANGED_BBS is not NULL, we look for uses outside loops only in the basic\n+/* Rewrites the defs and uses into a loop closed ssa form.\n+   If CHANGED_BBS is not NULL, we look for uses outside loops only in the basic\n    blocks in this set.  UPDATE_FLAG is used in the call to update_ssa.  See\n    TODO_update_ssa* for documentation.  */\n \n void\n rewrite_into_loop_closed_ssa (bitmap changed_bbs, unsigned update_flag)\n {\n-  rewrite_into_loop_closed_ssa_1 (changed_bbs, update_flag, SSA_OP_USE, NULL);\n-}\n-\n-/* Rewrites virtual defs and uses with def in LOOP into loop closed ssa\n-   form.  */\n-\n-void\n-rewrite_virtuals_into_loop_closed_ssa (class loop *loop)\n-{\n-  rewrite_into_loop_closed_ssa_1 (NULL, 0, SSA_OP_VIRTUAL_USES, loop);\n+  rewrite_into_loop_closed_ssa_1 (changed_bbs, update_flag,\n+\t\t\t\t  SSA_OP_ALL_USES, NULL);\n }\n \n /* Check invariants of the loop closed ssa form for the def in DEF_BB.  */\n@@ -736,8 +728,7 @@ check_loop_closed_ssa_bb (basic_block bb)\n     {\n       gphi *phi = bsi.phi ();\n \n-      if (!virtual_operand_p (PHI_RESULT (phi)))\n-\tcheck_loop_closed_ssa_def (bb, PHI_RESULT (phi));\n+      check_loop_closed_ssa_def (bb, PHI_RESULT (phi));\n     }\n \n   for (gimple_stmt_iterator bsi = gsi_start_nondebug_bb (bb); !gsi_end_p (bsi);\n@@ -747,7 +738,7 @@ check_loop_closed_ssa_bb (basic_block bb)\n       tree var;\n       gimple *stmt = gsi_stmt (bsi);\n \n-      FOR_EACH_SSA_TREE_OPERAND (var, stmt, iter, SSA_OP_DEF)\n+      FOR_EACH_SSA_TREE_OPERAND (var, stmt, iter, SSA_OP_ALL_DEFS)\n \tcheck_loop_closed_ssa_def (bb, var);\n     }\n }"}, {"sha": "924cac0edff8eb6290f2ab5b6b2de109ddeafb4a", "filename": "gcc/tree-ssa-loop-manip.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2a898666609452ef79a14feae1cadc3538e4b45/gcc%2Ftree-ssa-loop-manip.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2a898666609452ef79a14feae1cadc3538e4b45/gcc%2Ftree-ssa-loop-manip.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-manip.h?ref=d2a898666609452ef79a14feae1cadc3538e4b45", "patch": "@@ -24,10 +24,7 @@ typedef void (*transform_callback)(class loop *, void *);\n \n extern void create_iv (tree, tree, tree, class loop *, gimple_stmt_iterator *,\n \t\t       bool, tree *, tree *);\n-extern void rewrite_into_loop_closed_ssa_1 (bitmap, unsigned, int,\n-\t\t\t\t\t    class loop *);\n extern void rewrite_into_loop_closed_ssa (bitmap, unsigned);\n-extern void rewrite_virtuals_into_loop_closed_ssa (class loop *);\n extern void verify_loop_closed_ssa (bool, class loop * = NULL);\n \n static inline void"}, {"sha": "7d6781d15054fc6bfde8ecf1ddd29b567a860bf2", "filename": "gcc/tree-ssa-loop-unswitch.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2a898666609452ef79a14feae1cadc3538e4b45/gcc%2Ftree-ssa-loop-unswitch.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2a898666609452ef79a14feae1cadc3538e4b45/gcc%2Ftree-ssa-loop-unswitch.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-unswitch.cc?ref=d2a898666609452ef79a14feae1cadc3538e4b45", "patch": "@@ -980,7 +980,7 @@ tree_unswitch_single_loop (class loop *loop, dump_user_location_t loc,\n       free_original_copy_tables ();\n \n       /* Update the SSA form after unswitching.  */\n-      update_ssa (TODO_update_ssa);\n+      update_ssa (TODO_update_ssa_no_phi);\n \n       /* Invoke itself on modified loops.  */\n       bitmap handled_copy = BITMAP_ALLOC (NULL);\n@@ -1068,8 +1068,6 @@ tree_unswitch_outer_loop (class loop *loop)\n   auto_vec<gimple *> dbg_to_reset;\n   while ((guard = find_loop_guard (loop, dbg_to_reset)))\n     {\n-      if (! changed)\n-\trewrite_virtuals_into_loop_closed_ssa (loop);\n       hoist_guard (loop, guard);\n       for (gimple *debug_stmt : dbg_to_reset)\n \t{"}, {"sha": "47c4fe8de86885f0569cd24f39c145527d840063", "filename": "gcc/tree-vect-loop-manip.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2a898666609452ef79a14feae1cadc3538e4b45/gcc%2Ftree-vect-loop-manip.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2a898666609452ef79a14feae1cadc3538e4b45/gcc%2Ftree-vect-loop-manip.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop-manip.cc?ref=d2a898666609452ef79a14feae1cadc3538e4b45", "patch": "@@ -3696,7 +3696,7 @@ vect_loop_versioning (loop_vec_info loop_vinfo,\n \t    }\n \t}\n \n-      update_ssa (TODO_update_ssa);\n+      update_ssa (TODO_update_ssa_no_phi);\n     }\n \n   /* Split the cost model check off to a separate BB.  Costing assumes"}]}