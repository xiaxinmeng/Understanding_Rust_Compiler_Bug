{"sha": "e439ba28035c2e4249497495308b9df4ebc69690", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQzOWJhMjgwMzVjMmU0MjQ5NDk3NDk1MzA4YjlkZjRlYmM2OTY5MA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2007-07-31T18:43:55Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2007-07-31T18:43:55Z"}, "message": "ddg.c (add_cross_iteration_register_deps): Declare bb_info only if ENABLE_CHECKING is defined.\n\n2007-07-31  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* ddg.c (add_cross_iteration_register_deps): Declare bb_info\n\tonly if ENABLE_CHECKING is defined.\n\nFrom-SVN: r127103", "tree": {"sha": "e30b323bc85840c4563e3ffd992301392067016c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e30b323bc85840c4563e3ffd992301392067016c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e439ba28035c2e4249497495308b9df4ebc69690", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e439ba28035c2e4249497495308b9df4ebc69690", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e439ba28035c2e4249497495308b9df4ebc69690", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e439ba28035c2e4249497495308b9df4ebc69690/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9b40cf1639333e361c6fc3d20eafd40e6f607ae5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b40cf1639333e361c6fc3d20eafd40e6f607ae5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b40cf1639333e361c6fc3d20eafd40e6f607ae5"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "e39bbe2ea82a273e398715e117d2f456312d5eeb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e439ba28035c2e4249497495308b9df4ebc69690/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e439ba28035c2e4249497495308b9df4ebc69690/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e439ba28035c2e4249497495308b9df4ebc69690", "patch": "@@ -1,3 +1,8 @@\n+2007-07-31  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* ddg.c (add_cross_iteration_register_deps): Declare bb_info\n+\tonly if ENABLE_CHECKING is defined.\n+\n 2007-07-31  Kenneth Zadeck <zadeck@naturalbridge.com>\n \n \t* df.h (DF_RU, DF_RU_BB_INFO, df_ru_bb_info, df_ru,"}, {"sha": "b28bdfdc828fdfe06b8d345a403c66a022595b95", "filename": "gcc/ddg.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e439ba28035c2e4249497495308b9df4ebc69690/gcc%2Fddg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e439ba28035c2e4249497495308b9df4ebc69690/gcc%2Fddg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fddg.c?ref=e439ba28035c2e4249497495308b9df4ebc69690", "patch": "@@ -239,7 +239,9 @@ add_cross_iteration_register_deps (ddg_ptr g, struct df_ref *last_def)\n   rtx def_insn = DF_REF_INSN (last_def);\n   ddg_node_ptr last_def_node = get_node_of_insn (g, def_insn);\n   ddg_node_ptr use_node;\n+#ifdef ENABLE_CHECKING\n   struct df_rd_bb_info *bb_info = DF_RD_BB_INFO (g->bb);\n+#endif\n   struct df_ref *first_def = df_bb_regno_first_def_find (g->bb, regno);\n \n   gcc_assert (last_def_node);"}]}