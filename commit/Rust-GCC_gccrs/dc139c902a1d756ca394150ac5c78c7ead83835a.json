{"sha": "dc139c902a1d756ca394150ac5c78c7ead83835a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGMxMzljOTAyYTFkNzU2Y2EzOTQxNTBhYzVjNzhjN2VhZDgzODM1YQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-01-11T00:32:57Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-01-11T00:32:57Z"}, "message": "(gen_{real,imag}part): Extract value from CONCAT directly.\n\n(gen_lowpart_common, gen_highpart): Don't do it here.\n\nFrom-SVN: r6377", "tree": {"sha": "4ef20c07d5fc140ba78bf758543809dee55febd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ef20c07d5fc140ba78bf758543809dee55febd6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc139c902a1d756ca394150ac5c78c7ead83835a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc139c902a1d756ca394150ac5c78c7ead83835a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc139c902a1d756ca394150ac5c78c7ead83835a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc139c902a1d756ca394150ac5c78c7ead83835a/comments", "author": null, "committer": null, "parents": [{"sha": "28bad1cbc3d2c0d2b942296e4f32ff32bc6701b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28bad1cbc3d2c0d2b942296e4f32ff32bc6701b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28bad1cbc3d2c0d2b942296e4f32ff32bc6701b5"}], "stats": {"total": 22, "additions": 7, "deletions": 15}, "files": [{"sha": "e59f19ec7838c27c1d0c1502a710df46a33a219a", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 7, "deletions": 15, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc139c902a1d756ca394150ac5c78c7ead83835a/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc139c902a1d756ca394150ac5c78c7ead83835a/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=dc139c902a1d756ca394150ac5c78c7ead83835a", "patch": "@@ -1,5 +1,5 @@\n /* Emit RTL for the GNU C-Compiler expander.\n-   Copyright (C) 1987, 1988, 1992, 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1988, 1992, 1993, 1994 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -620,12 +620,6 @@ gen_lowpart_common (mode, x)\n       else\n \treturn gen_rtx (SUBREG, mode, x, word);\n     }\n-  else if (GET_CODE (x) == CONCAT)\n-    {\n-      if (GET_MODE (XEXP (x, 0)) != mode)\n-\tabort ();\n-      return XEXP (x, 0);\n-    }\n   /* If X is a CONST_INT or a CONST_DOUBLE, extract the appropriate bits\n      from the low-order part of the constant.  */\n   else if ((GET_MODE_CLASS (mode) == MODE_INT\n@@ -791,7 +785,9 @@ gen_realpart (mode, x)\n      enum machine_mode mode;\n      register rtx x;\n {\n-  if (WORDS_BIG_ENDIAN)\n+  if (GET_CODE (x) == CONCAT && GET_MODE (XEXP (x, 0)) == mode)\n+    return XEXP (x, 0);\n+  else if (WORDS_BIG_ENDIAN)\n     return gen_highpart (mode, x);\n   else\n     return gen_lowpart (mode, x);\n@@ -805,7 +801,9 @@ gen_imagpart (mode, x)\n      enum machine_mode mode;\n      register rtx x;\n {\n-  if (WORDS_BIG_ENDIAN)\n+  if (GET_CODE (x) == CONCAT && GET_MODE (XEXP (x, 0)) == mode)\n+    return XEXP (x, 1);\n+  else if (WORDS_BIG_ENDIAN)\n     return gen_lowpart (mode, x);\n   else\n     return gen_highpart (mode, x);\n@@ -917,12 +915,6 @@ gen_highpart (mode, x)\n       else\n \treturn gen_rtx (SUBREG, mode, x, word);\n     }\n-  else if (GET_CODE (x) == CONCAT)\n-    {\n-      if (GET_MODE (XEXP (x, 1)) != mode)\n-\tabort ();\n-      return XEXP (x, 1);\n-    }\n   else\n     abort ();\n }"}]}