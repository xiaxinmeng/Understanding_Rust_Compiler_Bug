{"sha": "f6c5fefc1dee760599da3d7b1bc513fd59f6c6e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZjNWZlZmMxZGVlNzYwNTk5ZGEzZDdiMWJjNTEzZmQ1OWY2YzZlOA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-05-02T09:12:49Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-05-02T09:12:49Z"}, "message": "re PR tree-optimization/31146 (forwprop does not look through casts)\n\n2007-05-02  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/31146\n\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): New\n\targument, single_use_p.  If we have a single use that is\n\ta conversion to the definition rhs type, propagate that rhs.\n\t(forward_propagate_addr_expr): Pass single_use_p argument\n\tto forward_propagate_addr_expr_1.\n\n\t* g++.dg/tree-ssa/pr31146-2.C: New testcase.\n\nFrom-SVN: r124349", "tree": {"sha": "0cd1c91e1be36ab612ad8a524b6f6fdb8d5392e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cd1c91e1be36ab612ad8a524b6f6fdb8d5392e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6c5fefc1dee760599da3d7b1bc513fd59f6c6e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6c5fefc1dee760599da3d7b1bc513fd59f6c6e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6c5fefc1dee760599da3d7b1bc513fd59f6c6e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6c5fefc1dee760599da3d7b1bc513fd59f6c6e8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d7598e110d060f8b7fb6598736f68700b20c400f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7598e110d060f8b7fb6598736f68700b20c400f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7598e110d060f8b7fb6598736f68700b20c400f"}], "stats": {"total": 59, "additions": 55, "deletions": 4}, "files": [{"sha": "d45664ece7cb0ff36e237d69f03c4639ef630ff0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6c5fefc1dee760599da3d7b1bc513fd59f6c6e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6c5fefc1dee760599da3d7b1bc513fd59f6c6e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6c5fefc1dee760599da3d7b1bc513fd59f6c6e8", "patch": "@@ -1,3 +1,12 @@\n+2007-05-02  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/31146\n+\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): New\n+\targument, single_use_p.  If we have a single use that is\n+\ta conversion to the definition rhs type, propagate that rhs.\n+\t(forward_propagate_addr_expr): Pass single_use_p argument\n+\tto forward_propagate_addr_expr_1.\n+\n 2007-05-01  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/i386.c (ix86_expand_sse_comi): Remove unused"}, {"sha": "287a0973101d1cde824bf2cb08cecdfc0536d64c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6c5fefc1dee760599da3d7b1bc513fd59f6c6e8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6c5fefc1dee760599da3d7b1bc513fd59f6c6e8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f6c5fefc1dee760599da3d7b1bc513fd59f6c6e8", "patch": "@@ -1,3 +1,8 @@\n+2007-05-02  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/31146\n+\t* g++.dg/tree-ssa/pr31146-2.C: New testcase.\n+\n 2007-05-01  Geoffrey Keating  <geoffk@apple.com>\n \n \t* gcc.c-torture/compile/limits-blockid.c: New."}, {"sha": "0fd60275b5362f202bcccefd8e72c7efa6d7c2fd", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr31146-2.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6c5fefc1dee760599da3d7b1bc513fd59f6c6e8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr31146-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6c5fefc1dee760599da3d7b1bc513fd59f6c6e8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr31146-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr31146-2.C?ref=f6c5fefc1dee760599da3d7b1bc513fd59f6c6e8", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-forwprop1\" } */\n+\n+#include <new>\n+\n+template <class T>\n+struct Vec\n+{\n+  Vec()\n+  {\n+    for (int i=0; i<3; ++i)\n+      new (&a[i]) T(0);\n+  }\n+  T a[3];\n+};\n+\n+double foo (void)\n+{\n+  Vec<double> v;\n+  return v.a[2];\n+}\n+\n+/* { dg-final { scan-tree-dump \"Replaced .*iftmp.* != 0B. with .1\" \"forwprop1\" } } */\n+/* { dg-final { cleanup-tree-dump \"forwprop1\" } } */"}, {"sha": "d91aa89325d0f47a1e3f93eacd0770c22469cb93", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6c5fefc1dee760599da3d7b1bc513fd59f6c6e8/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6c5fefc1dee760599da3d7b1bc513fd59f6c6e8/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=f6c5fefc1dee760599da3d7b1bc513fd59f6c6e8", "patch": "@@ -559,7 +559,8 @@ forward_propagate_addr_into_variable_array_index (tree offset, tree lhs,\n    be not totally successful, yet things may have been changed).  */\n \n static bool\n-forward_propagate_addr_expr_1 (tree name, tree def_rhs, tree use_stmt)\n+forward_propagate_addr_expr_1 (tree name, tree def_rhs, tree use_stmt,\n+\t\t\t       bool single_use_p)\n {\n   tree lhs, rhs, array_ref;\n \n@@ -584,10 +585,20 @@ forward_propagate_addr_expr_1 (tree name, tree def_rhs, tree use_stmt)\n       /* Continue propagating into the RHS.  */\n     }\n \n-  /* Trivial case.  The use statement could be a trivial copy or a\n+  /* Trivial cases.  The use statement could be a trivial copy or a\n      useless conversion.  Recurse to the uses of the lhs as copyprop does\n      not copy through differen variant pointers and FRE does not catch\n-     all useless conversions.  */\n+     all useless conversions.  Treat the case of a single-use name and\n+     a conversion to def_rhs type separate, though.  */\n+  else if (TREE_CODE (lhs) == SSA_NAME\n+\t   && (TREE_CODE (rhs) == NOP_EXPR\n+\t       || TREE_CODE (rhs) == CONVERT_EXPR)\n+\t   && TREE_TYPE (rhs) == TREE_TYPE (def_rhs)\n+\t   && single_use_p)\n+    {\n+      GIMPLE_STMT_OPERAND (use_stmt, 1) = unshare_expr (def_rhs);\n+      return true;\n+    }\n   else if ((TREE_CODE (lhs) == SSA_NAME\n       \t    && rhs == name)\n \t   || ((TREE_CODE (rhs) == NOP_EXPR\n@@ -702,6 +713,7 @@ forward_propagate_addr_expr (tree name, tree rhs)\n   imm_use_iterator iter;\n   tree use_stmt;\n   bool all = true;\n+  bool single_use_p = has_single_use (name);\n \n   FOR_EACH_IMM_USE_STMT (use_stmt, iter, name)\n     {\n@@ -726,7 +738,8 @@ forward_propagate_addr_expr (tree name, tree rhs)\n       \n       push_stmt_changes (&use_stmt);\n \n-      result = forward_propagate_addr_expr_1 (name, rhs, use_stmt);\n+      result = forward_propagate_addr_expr_1 (name, rhs, use_stmt,\n+\t\t\t\t\t      single_use_p);\n       all &= result;\n \n       pop_stmt_changes (&use_stmt);"}]}