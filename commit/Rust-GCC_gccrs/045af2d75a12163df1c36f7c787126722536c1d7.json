{"sha": "045af2d75a12163df1c36f7c787126722536c1d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ1YWYyZDc1YTEyMTYzZGYxYzM2ZjdjNzg3MTI2NzIyNTM2YzFkNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2014-06-14T22:55:40Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-06-14T22:55:40Z"}, "message": "re PR c++/33101 ([DR 577] allow typedefs for void in empty parameter list)\n\n/cp\n2014-06-14  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/33101\n\t* decl.c (grokparms): Improve error message about void parameters.\n\t* error.c (type_to_string): Fix aka cut off code.\n\n/testsuite\n2014-06-14  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/33101\n\t* g++.dg/other/void3.C: New.\n\t* g++.dg/conversion/err-recover1.C: Update.\n\nFrom-SVN: r211673", "tree": {"sha": "87977ec332800831deddf811071c19a9e6b2e099", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87977ec332800831deddf811071c19a9e6b2e099"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/045af2d75a12163df1c36f7c787126722536c1d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/045af2d75a12163df1c36f7c787126722536c1d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/045af2d75a12163df1c36f7c787126722536c1d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/045af2d75a12163df1c36f7c787126722536c1d7/comments", "author": null, "committer": null, "parents": [{"sha": "fb3bc97798b9a2a0e5602c097319dc22d1dba708", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb3bc97798b9a2a0e5602c097319dc22d1dba708", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb3bc97798b9a2a0e5602c097319dc22d1dba708"}], "stats": {"total": 43, "additions": 36, "deletions": 7}, "files": [{"sha": "52744d80919293aa450a99786284d4cbd446206e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/045af2d75a12163df1c36f7c787126722536c1d7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/045af2d75a12163df1c36f7c787126722536c1d7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=045af2d75a12163df1c36f7c787126722536c1d7", "patch": "@@ -1,3 +1,9 @@\n+2014-06-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/33101\n+\t* decl.c (grokparms): Improve error message about void parameters.\n+\t* error.c (type_to_string): Fix aka cut off code.\n+\n 2014-06-12  Jason Merrill  <jason@redhat.com>\n \n \t* call.c (convert_arg_to_ellipsis): Use abi_version_crosses."}, {"sha": "29082240d843836389f22838fe0a0153dcf3681c", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/045af2d75a12163df1c36f7c787126722536c1d7/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/045af2d75a12163df1c36f7c787126722536c1d7/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=045af2d75a12163df1c36f7c787126722536c1d7", "patch": "@@ -11137,12 +11137,24 @@ grokparms (tree parmlist, tree *parms)\n       type = TREE_TYPE (decl);\n       if (VOID_TYPE_P (type))\n \t{\n-\t  if (same_type_p (type, void_type_node)\n-\t      && DECL_SELF_REFERENCE_P (type)\n-\t      && !DECL_NAME (decl) && !result && TREE_CHAIN (parm) == void_list_node)\n+\t  if (type == void_type_node\n+\t      && !init\n+\t      && !DECL_NAME (decl) && !result\n+\t      && TREE_CHAIN (parm) == void_list_node)\n \t    /* this is a parmlist of `(void)', which is ok.  */\n \t    break;\n-\t  cxx_incomplete_type_error (decl, type);\n+\t  else if (typedef_variant_p (type))\n+\t    error_at (DECL_SOURCE_LOCATION (decl),\n+\t\t      \"invalid use of typedef-name %qT in \"\n+\t\t      \"parameter declaration\", type);\n+\t  else if (cv_qualified_p (type))\n+\t    error_at (DECL_SOURCE_LOCATION (decl),\n+\t\t      \"invalid use of cv-qualified type %qT in \"\n+\t\t      \"parameter declaration\", type);\n+\t  else\n+\t    error_at (DECL_SOURCE_LOCATION (decl),\n+\t\t      \"invalid use of type %<void%> in parameter \"\n+\t\t      \"declaration\");\n \t  /* It's not a good idea to actually create parameters of\n \t     type `void'; other parts of the compiler assume that a\n \t     void type terminates the parameter list.  */"}, {"sha": "27a167a001a839ec02e1558ea55d604f8ad8746f", "filename": "gcc/cp/error.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/045af2d75a12163df1c36f7c787126722536c1d7/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/045af2d75a12163df1c36f7c787126722536c1d7/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=045af2d75a12163df1c36f7c787126722536c1d7", "patch": "@@ -2922,7 +2922,7 @@ type_to_string (tree typ, int verbose)\n   if (typ && TYPE_P (typ) && typ != TYPE_CANONICAL (typ)\n       && !uses_template_parms (typ))\n     {\n-      int aka_start; char *p;\n+      int aka_start, aka_len; char *p;\n       struct obstack *ob = pp_buffer (cxx_pp)->obstack;\n       /* Remember the end of the initial dump.  */\n       int len = obstack_object_size (ob);\n@@ -2932,10 +2932,11 @@ type_to_string (tree typ, int verbose)\n       /* And remember the start of the aka dump.  */\n       aka_start = obstack_object_size (ob);\n       dump_type (cxx_pp, aka, flags);\n+      aka_len = obstack_object_size (ob) - aka_start;\n       pp_right_brace (cxx_pp);\n       p = (char*)obstack_base (ob);\n       /* If they are identical, cut off the aka with a NUL.  */\n-      if (memcmp (p, p+aka_start, len) == 0)\n+      if (len == aka_len && memcmp (p, p+aka_start, len) == 0)\n \tp[len] = '\\0';\n     }\n   return pp_ggc_formatted_text (cxx_pp);"}, {"sha": "a9b14ddf888393c736f78fc2eaa7b84f1eaf1495", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/045af2d75a12163df1c36f7c787126722536c1d7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/045af2d75a12163df1c36f7c787126722536c1d7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=045af2d75a12163df1c36f7c787126722536c1d7", "patch": "@@ -1,3 +1,9 @@\n+2014-06-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/33101\n+\t* g++.dg/other/void3.C: New.\n+\t* g++.dg/conversion/err-recover1.C: Update.\n+\n 2014-06-13  Peter Bergner  <bergner@vnet.ibm.com>\n \n \tPR target/61415"}, {"sha": "4773b1faebe0400ba48781b7472c6494b409cbe5", "filename": "gcc/testsuite/g++.dg/conversion/err-recover1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/045af2d75a12163df1c36f7c787126722536c1d7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Ferr-recover1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/045af2d75a12163df1c36f7c787126722536c1d7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Ferr-recover1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Ferr-recover1.C?ref=045af2d75a12163df1c36f7c787126722536c1d7", "patch": "@@ -1,6 +1,6 @@\n // PR c++/42219\n \n-void foo(const void);\t\t// { dg-error \"incomplete|const\" }\n+void foo(const void);\t\t// { dg-error \"invalid use of cv-qualified\" }\n \n void bar()\n {"}, {"sha": "3494d2aefdb392163f936cdf8d9f6094f3eba77c", "filename": "gcc/testsuite/g++.dg/other/void3.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/045af2d75a12163df1c36f7c787126722536c1d7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fvoid3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/045af2d75a12163df1c36f7c787126722536c1d7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fvoid3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fvoid3.C?ref=045af2d75a12163df1c36f7c787126722536c1d7", "patch": "@@ -0,0 +1,4 @@\n+// PR c++/33101\n+\n+typedef void v;\n+typedef v (*pf)(v);  // { dg-error \"invalid use of typedef-name\" }"}]}