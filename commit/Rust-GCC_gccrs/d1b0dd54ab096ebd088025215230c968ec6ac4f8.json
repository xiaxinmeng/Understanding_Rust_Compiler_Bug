{"sha": "d1b0dd54ab096ebd088025215230c968ec6ac4f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFiMGRkNTRhYjA5NmViZDA4ODAyNTIxNTIzMGM5NjhlYzZhYzRmOA==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2018-06-21T11:01:05Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2018-06-21T11:01:05Z"}, "message": "[ARM] libgcc: Remove unsupported code for __ARM_ARCH__ < 4\n\n2018-06-21  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\tlibgcc/\n\t* config/arm/ieee754-df.S: Remove code for __ARM_ARCH__ < 4, no\n\tlonger supported.\n\t* config/arm/ieee754-sf.S: Likewise.\n\nFrom-SVN: r261840", "tree": {"sha": "a3a5680f91c71b24ccd579be7174098a6d2c289a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3a5680f91c71b24ccd579be7174098a6d2c289a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1b0dd54ab096ebd088025215230c968ec6ac4f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1b0dd54ab096ebd088025215230c968ec6ac4f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1b0dd54ab096ebd088025215230c968ec6ac4f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1b0dd54ab096ebd088025215230c968ec6ac4f8/comments", "author": null, "committer": null, "parents": [{"sha": "9b57fd3d96f312194b49fb4774dd2ce075ef5c17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b57fd3d96f312194b49fb4774dd2ce075ef5c17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b57fd3d96f312194b49fb4774dd2ce075ef5c17"}], "stats": {"total": 111, "additions": 8, "deletions": 103}, "files": [{"sha": "22535f5fc6e835ce5018873dd0a433f51896f9d8", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1b0dd54ab096ebd088025215230c968ec6ac4f8/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1b0dd54ab096ebd088025215230c968ec6ac4f8/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=d1b0dd54ab096ebd088025215230c968ec6ac4f8", "patch": "@@ -1,3 +1,9 @@\n+2018-06-21  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* config/arm/ieee754-df.S: Remove code for __ARM_ARCH__ < 4, no\n+\tlonger supported.\n+\t* config/arm/ieee754-sf.S: Likewise.\n+\n 2018-06-20  Than McIntosh  <thanm@google.com>\n \n \tPR libgcc/86213"}, {"sha": "c6c60670b4a069ae8e7a83e102f06e9ad4a87a6b", "filename": "libgcc/config/arm/ieee754-df.S", "status": "modified", "additions": 1, "deletions": 73, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1b0dd54ab096ebd088025215230c968ec6ac4f8/libgcc%2Fconfig%2Farm%2Fieee754-df.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1b0dd54ab096ebd088025215230c968ec6ac4f8/libgcc%2Fconfig%2Farm%2Fieee754-df.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Fieee754-df.S?ref=d1b0dd54ab096ebd088025215230c968ec6ac4f8", "patch": "@@ -656,78 +656,8 @@ ARM_FUNC_ALIAS aeabi_dmul muldf3\n \torr\tyh, yh, #0x00100000\n \tbeq\tLSYM(Lml_1)\n \n-#if __ARM_ARCH__ < 4\n-\n-\t@ Put sign bit in r6, which will be restored in yl later.\n-\tand   r6, r6, #0x80000000\n-\n-\t@ Well, no way to make it shorter without the umull instruction.\n-\tstmfd   sp!, {r6, r7, r8, r9, sl, fp}   @ sp -= 24\n-\t.cfi_remember_state         @ Save the current CFI state.\n-\t.cfi_adjust_cfa_offset 24   @ CFA is now sp + previousOffset + 24.\n-\t.cfi_rel_offset r6, 0       @ Registers are saved from sp to sp + 20.\n-\t.cfi_rel_offset r7, 4\n-\t.cfi_rel_offset r8, 8\n-\t.cfi_rel_offset r9, 12\n-\t.cfi_rel_offset sl, 16\n-\t.cfi_rel_offset fp, 20\n-\n-\tmov\tr7, xl, lsr #16\n-\tmov\tr8, yl, lsr #16\n-\tmov\tr9, xh, lsr #16\n-\tmov\tsl, yh, lsr #16\n-\tbic\txl, xl, r7, lsl #16\n-\tbic\tyl, yl, r8, lsl #16\n-\tbic\txh, xh, r9, lsl #16\n-\tbic\tyh, yh, sl, lsl #16\n-\tmul\tip, xl, yl\n-\tmul\tfp, xl, r8\n-\tmov\tlr, #0\n-\tadds\tip, ip, fp, lsl #16\n-\tadc\tlr, lr, fp, lsr #16\n-\tmul\tfp, r7, yl\n-\tadds\tip, ip, fp, lsl #16\n-\tadc\tlr, lr, fp, lsr #16\n-\tmul\tfp, xl, sl\n-\tmov\tr5, #0\n-\tadds\tlr, lr, fp, lsl #16\n-\tadc\tr5, r5, fp, lsr #16\n-\tmul\tfp, r7, yh\n-\tadds\tlr, lr, fp, lsl #16\n-\tadc\tr5, r5, fp, lsr #16\n-\tmul\tfp, xh, r8\n-\tadds\tlr, lr, fp, lsl #16\n-\tadc\tr5, r5, fp, lsr #16\n-\tmul\tfp, r9, yl\n-\tadds\tlr, lr, fp, lsl #16\n-\tadc\tr5, r5, fp, lsr #16\n-\tmul\tfp, xh, sl\n-\tmul\tr6, r9, sl\n-\tadds\tr5, r5, fp, lsl #16\n-\tadc\tr6, r6, fp, lsr #16\n-\tmul\tfp, r9, yh\n-\tadds\tr5, r5, fp, lsl #16\n-\tadc\tr6, r6, fp, lsr #16\n-\tmul\tfp, xl, yh\n-\tadds\tlr, lr, fp\n-\tmul\tfp, r7, sl\n-\tadcs\tr5, r5, fp\n-\tmul\tfp, xh, yl\n-\tadc\tr6, r6, #0\n-\tadds\tlr, lr, fp\n-\tmul\tfp, r9, r8\n-\tadcs\tr5, r5, fp\n-\tmul\tfp, r7, r8\n-\tadc\tr6, r6, #0\n-\tadds\tlr, lr, fp\n-\tmul\tfp, xh, yh\n-\tadcs\tr5, r5, fp\n-\tadc\tr6, r6, #0\n-\tldmfd   sp!, {yl, r7, r8, r9, sl, fp}   @ sp += 24\n-\t.cfi_restore_state   @ Restore the previous CFI state.\n-#else\n-\n \t@ Here is the actual multiplication.\n+\t@ This code works on architecture versions > 4\n \tumull\tip, lr, xl, yl\n \tmov\tr5, #0\n \tumlal\tlr, r5, xh, yl\n@@ -736,8 +666,6 @@ ARM_FUNC_ALIAS aeabi_dmul muldf3\n \tmov\tr6, #0\n \tumlal\tr5, r6, xh, yh\n \n-#endif\n-\n \t@ The LSBs in ip are only significant for the final rounding.\n \t@ Fold them into lr.\n \tteq\tip, #0"}, {"sha": "fbef7bcb04967b50eee4bafa35ce1d76d95af387", "filename": "libgcc/config/arm/ieee754-sf.S", "status": "modified", "additions": 1, "deletions": 30, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1b0dd54ab096ebd088025215230c968ec6ac4f8/libgcc%2Fconfig%2Farm%2Fieee754-sf.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1b0dd54ab096ebd088025215230c968ec6ac4f8/libgcc%2Fconfig%2Farm%2Fieee754-sf.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Fieee754-sf.S?ref=d1b0dd54ab096ebd088025215230c968ec6ac4f8", "patch": "@@ -460,42 +460,13 @@ LSYM(Lml_x):\n \torr\tr0, r3, r0, lsr #5\n \torr\tr1, r3, r1, lsr #5\n \n-#if __ARM_ARCH__ < 4\n-\n-\t@ Put sign bit in r3, which will be restored into r0 later.\n-\tand\tr3, ip, #0x80000000\n-\n-\t@ Well, no way to make it shorter without the umull instruction.\n-\tdo_push\t{r3, r4, r5}       @ sp -= 12\n-\t.cfi_remember_state        @ Save the current CFI state\n-\t.cfi_adjust_cfa_offset 12  @ CFA is now sp + previousOffset + 12\n-\t.cfi_rel_offset r3, 0      @ Registers are saved from sp to sp + 8\n-\t.cfi_rel_offset r4, 4\n-\t.cfi_rel_offset r5, 8\n-\n-\tmov\tr4, r0, lsr #16\n-\tmov\tr5, r1, lsr #16\n-\tbic\tr0, r0, r4, lsl #16\n-\tbic\tr1, r1, r5, lsl #16\n-\tmul\tip, r4, r5\n-\tmul\tr3, r0, r1\n-\tmul\tr0, r5, r0\n-\tmla\tr0, r4, r1, r0\n-\tadds\tr3, r3, r0, lsl #16\n-\tadc\tr1, ip, r0, lsr #16\n-\tdo_pop\t{r0, r4, r5}       @ sp += 12\n-\t.cfi_restore_state         @ Restore the previous CFI state\n-\n-#else\n-\n \t@ The actual multiplication.\n+\t@ This code works on architecture versions > 4\n \tumull\tr3, r1, r0, r1\n \n \t@ Put final sign in r0.\n \tand\tr0, ip, #0x80000000\n \n-#endif\n-\n \t@ Adjust result upon the MSB position.\n \tcmp\tr1, #(1 << 23)\n \tdo_it\tcc, tt"}]}