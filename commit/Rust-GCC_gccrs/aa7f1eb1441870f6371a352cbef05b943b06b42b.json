{"sha": "aa7f1eb1441870f6371a352cbef05b943b06b42b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE3ZjFlYjE0NDE4NzBmNjM3MWEzNTJjYmVmMDViOTQzYjA2YjQyYg==", "commit": {"author": {"name": "Matt Kraai", "email": "kraai@gcc.gnu.org", "date": "2003-06-13T11:36:31Z"}, "committer": {"name": "Matt Kraai", "email": "kraai@gcc.gnu.org", "date": "2003-06-13T11:36:31Z"}, "message": "ChangeLog.1: Fix spelling of \"outputting\".\n\n(gcc)\n\t* ChangeLog.1: Fix spelling of \"outputting\".\n\t* ChangeLog.3: Likewise.\n\t* diagnostic.h: Likewise.\n\t* genautomata.c: Likewise.\n\t* config/pa/pa.c: Likewise.\n\n(gcc/ada)\n\t* gnatls.adb: Fix spelling of \"outputting\".\n\t* gnatmem.adb: Likewise.\n\t* prj-pp.adb: Likewise.\n\nFrom-SVN: r67890", "tree": {"sha": "503644136256f217ad0a50adb3d3855180a30a67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/503644136256f217ad0a50adb3d3855180a30a67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa7f1eb1441870f6371a352cbef05b943b06b42b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa7f1eb1441870f6371a352cbef05b943b06b42b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa7f1eb1441870f6371a352cbef05b943b06b42b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa7f1eb1441870f6371a352cbef05b943b06b42b/comments", "author": null, "committer": null, "parents": [{"sha": "16ae108b35ae3f09bc9b405a9b2d51a351368d67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16ae108b35ae3f09bc9b405a9b2d51a351368d67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16ae108b35ae3f09bc9b405a9b2d51a351368d67"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "389b702dac67a92e9cbcfb9495fd9912ff7b067a", "filename": "gcc/ChangeLog.1", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa7f1eb1441870f6371a352cbef05b943b06b42b/gcc%2FChangeLog.1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa7f1eb1441870f6371a352cbef05b943b06b42b/gcc%2FChangeLog.1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.1?ref=aa7f1eb1441870f6371a352cbef05b943b06b42b", "patch": "@@ -1251,7 +1251,7 @@ Wed Apr 14 13:59:27 1999  Martin von Loewis  <loewis@informatik.hu-berlin.de>\n \n Wed Apr 14 00:18:22 1999  Jan Hubicka <hubicka@freesoft.cz>\n \n-\t* i386.md (SImode logical compare): Avoid outputing non-pariable testw\n+\t* i386.md (SImode logical compare): Avoid outputting non-pariable testw\n \tand testl on Pentium.\n \t(register and memory bit tests): Likewise.\n \t(setcc, normal and reversed conditional branches): Use shorter"}, {"sha": "2d1fb5f7108e64441eb1551a6c269e1f5002b08c", "filename": "gcc/ChangeLog.3", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa7f1eb1441870f6371a352cbef05b943b06b42b/gcc%2FChangeLog.3", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa7f1eb1441870f6371a352cbef05b943b06b42b/gcc%2FChangeLog.3", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.3?ref=aa7f1eb1441870f6371a352cbef05b943b06b42b", "patch": "@@ -6424,7 +6424,7 @@ Mon Apr 17 14:59:36 MET DST 2000  Jan Hubicka  <jh@suse.cz>\n \n \t* i370.c (mvs_add_label): Change spacing for coding conventions.\n \t* i370.h (ASM_OUTPUT_CASE_LABEL): Change to the data CSECT for the\n-\toutputing case vectors.\n+\toutputting case vectors.\n \t(ASM_OUTPUT_CASE_END): New, put assembler back into code CSECT.\n \t(ASM_OUTPUT_ADDR_VEC_ELT, ASM_OUTPUT_ADDR_DIFF_ELT): Remove page check,\n \tsince vector in in the data CSECT."}, {"sha": "81a6c4c7340c9e849c71e46640198bf5c24e3105", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa7f1eb1441870f6371a352cbef05b943b06b42b/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa7f1eb1441870f6371a352cbef05b943b06b42b/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=aa7f1eb1441870f6371a352cbef05b943b06b42b", "patch": "@@ -973,7 +973,7 @@ begin\n                Output_Unit (U);\n \n                --  Output source now, unless if it will be done as part of\n-               --  outputing dependencies.\n+               --  outputting dependencies.\n \n                if not (Dependable and then Print_Source) then\n                   Output_Source (Corresponding_Sdep_Entry (Id, U));"}, {"sha": "624bf90f3bfc423575e924c2adfb98fba439de9c", "filename": "gcc/ada/gnatmem.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa7f1eb1441870f6371a352cbef05b943b06b42b/gcc%2Fada%2Fgnatmem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa7f1eb1441870f6371a352cbef05b943b06b42b/gcc%2Fada%2Fgnatmem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatmem.adb?ref=aa7f1eb1441870f6371a352cbef05b943b06b42b", "patch": "@@ -315,7 +315,7 @@ procedure Gnatmem is\n          --  At this point, gdb knows about __gnat_malloc and __gnat_free\n       end if;\n \n-      --  Make sure that outputing long backtraces do not pause\n+      --  Make sure that outputting long backtraces do not pause\n \n       Put_Line (FD, \"set height 0\");\n       Put_Line (FD, \"set width 0\");"}, {"sha": "91580e4ae845360a4719b889c2f909b199b3bafe", "filename": "gcc/ada/prj-pp.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa7f1eb1441870f6371a352cbef05b943b06b42b/gcc%2Fada%2Fprj-pp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa7f1eb1441870f6371a352cbef05b943b06b42b/gcc%2Fada%2Fprj-pp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pp.adb?ref=aa7f1eb1441870f6371a352cbef05b943b06b42b", "patch": "@@ -42,7 +42,7 @@ package body Prj.PP is\n \n    Column : Natural := 0;\n    --  Column number of the last character in the line. Used to avoid\n-   --  outputing lines longer than Max_Line_Length.\n+   --  outputting lines longer than Max_Line_Length.\n \n    procedure Indicate_Tested (Kind : Project_Node_Kind);\n    --  Set the corresponding component of array Not_Tested to False."}, {"sha": "4fa4e8c8b8743ba6fa37b5e02f7b75b55c4c1b1f", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa7f1eb1441870f6371a352cbef05b943b06b42b/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa7f1eb1441870f6371a352cbef05b943b06b42b/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=aa7f1eb1441870f6371a352cbef05b943b06b42b", "patch": "@@ -5791,7 +5791,7 @@ output_lbranch (dest, insn)\n \t   the only other use of this location is for copying a\n \t   floating point double argument from a floating-point\n \t   register to two general registers.  The copy is done\n-\t   as an \"atomic\" operation when outputing a call, so it\n+\t   as an \"atomic\" operation when outputting a call, so it\n \t   won't interfere with our using the location here.  */\n \toutput_asm_insn (\"stw %%r1,-12(%%r30)\", xoperands);\n     }"}, {"sha": "1b6c1721035089c7fc1aebf1dc298424b932b87c", "filename": "gcc/diagnostic.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa7f1eb1441870f6371a352cbef05b943b06b42b/gcc%2Fdiagnostic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa7f1eb1441870f6371a352cbef05b943b06b42b/gcc%2Fdiagnostic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.h?ref=aa7f1eb1441870f6371a352cbef05b943b06b42b", "patch": "@@ -88,7 +88,7 @@ typedef struct\n   /* Nonzero if current PREFIX was emitted at least once.  */\n   bool emitted_prefix_p;\n \n-  /* Nonzero means one should emit a newline before outputing anything.  */\n+  /* Nonzero means one should emit a newline before outputting anything.  */\n   bool need_newline_p;\n \n   /* Current prefixing rule.  */"}, {"sha": "826da68f113b145a5dfc4445a076e494633d01ed", "filename": "gcc/genautomata.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa7f1eb1441870f6371a352cbef05b943b06b42b/gcc%2Fgenautomata.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa7f1eb1441870f6371a352cbef05b943b06b42b/gcc%2Fgenautomata.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenautomata.c?ref=aa7f1eb1441870f6371a352cbef05b943b06b42b", "patch": "@@ -9870,7 +9870,7 @@ write_automata (void)\n     fatal (\"Errors in DFA description\");\n   ticker_on (&all_time);\n   output_time = create_ticker ();\n-  fprintf (stderr, \"Forming and outputing automata tables...\");\n+  fprintf (stderr, \"Forming and outputting automata tables...\");\n   fflush (stderr);\n   output_dfa_max_issue_rate ();\n   output_tables ();"}]}