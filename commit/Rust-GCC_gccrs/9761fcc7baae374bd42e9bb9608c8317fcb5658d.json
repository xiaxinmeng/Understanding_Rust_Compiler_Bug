{"sha": "9761fcc7baae374bd42e9bb9608c8317fcb5658d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc2MWZjYzdiYWFlMzc0YmQ0MmU5YmI5NjA4YzgzMTdmY2I1NjU4ZA==", "commit": {"author": {"name": "Harsha Jagasia", "email": "harsha.jagasia@amd.com", "date": "2009-01-05T21:03:45Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-01-05T21:03:45Z"}, "message": "re PR middle-end/38510 (Matrix.c from pymol 1.1r2 fails to compile with -O2 -fgraphite)\n\n2009-01-05  Harsha Jagasia  <harsha.jagasia@amd.com>\n\n\tPR tree-optimization/38510\n\t* graphite.c (recompute_all_dominators): Call mark_irreducible_loops.\n\t(translate_clast): Call recompute_all_dominators before\n\tgraphite_verify.\n\t(gloog): Call recompute_all_dominators before graphite_verify.\n\n2009-01-05  Harsha Jagasia  <harsha.jagasia@amd.com>\n\t    Jan Sjodin <jan.sjodin@amd.com>\n\n\tPR tree-optimization/38500\n\t* graphite.c (create_sese_edges): Call fix_loop_structure after\n\tsplitting blocks.\n\n2009-01-05  Harsha Jagasia  <harsha.jagasia@amd.com>\n\n\tPR tree-optimization/38510\n\t* gcc.dg/graphite/pr38510.c: New.\n\n2009-01-05  Harsha Jagasia  <harsha.jagasia@amd.com>\n\t    Jan Sjodin <jan.sjodin@amd.com>\n\n\tPR tree-optimization/38500\n\t* gcc.dg/graphite/pr38500.c: New.\n\n\nCo-Authored-By: Jan Sjodin <jan.sjodin@amd.com>\n\nFrom-SVN: r143094", "tree": {"sha": "64647e1b99479b8f262929b8c381f1c409440a7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64647e1b99479b8f262929b8c381f1c409440a7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9761fcc7baae374bd42e9bb9608c8317fcb5658d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9761fcc7baae374bd42e9bb9608c8317fcb5658d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9761fcc7baae374bd42e9bb9608c8317fcb5658d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9761fcc7baae374bd42e9bb9608c8317fcb5658d/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4564ac62c5ff525b7846e0557aa2037ee5c4dba4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4564ac62c5ff525b7846e0557aa2037ee5c4dba4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4564ac62c5ff525b7846e0557aa2037ee5c4dba4"}], "stats": {"total": 102, "additions": 102, "deletions": 0}, "files": [{"sha": "d7efd58b3e1b9829af293213e08f3912aff926c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9761fcc7baae374bd42e9bb9608c8317fcb5658d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9761fcc7baae374bd42e9bb9608c8317fcb5658d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9761fcc7baae374bd42e9bb9608c8317fcb5658d", "patch": "@@ -1,3 +1,18 @@\n+2009-01-05  Harsha Jagasia  <harsha.jagasia@amd.com>\n+\n+\tPR tree-optimization/38510\n+\t* graphite.c (recompute_all_dominators): Call mark_irreducible_loops.\n+\t(translate_clast): Call recompute_all_dominators before\n+\tgraphite_verify.\n+\t(gloog): Call recompute_all_dominators before graphite_verify.\n+\n+2009-01-05  Harsha Jagasia  <harsha.jagasia@amd.com>\n+\t    Jan Sjodin <jan.sjodin@amd.com>\n+\n+\tPR tree-optimization/38500\n+\t* graphite.c (create_sese_edges): Call fix_loop_structure after\n+\tsplitting blocks.\n+\n 2009-01-05  Joel Sherrill <joel.sherrill@oarcorp.com>\n \n \t* config.gcc: Add m32r*-*-rtems*."}, {"sha": "b051b5b0d2c206bd835a2ded1e5fa25b89a26421", "filename": "gcc/graphite.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9761fcc7baae374bd42e9bb9608c8317fcb5658d/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9761fcc7baae374bd42e9bb9608c8317fcb5658d/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=9761fcc7baae374bd42e9bb9608c8317fcb5658d", "patch": "@@ -1951,6 +1951,7 @@ mark_exit_edges (VEC (sd_region, heap) *regions)\n static inline void\n recompute_all_dominators (void)\n {\n+  mark_irreducible_loops ();\n   free_dominance_info (CDI_DOMINATORS);\n   free_dominance_info (CDI_POST_DOMINATORS);\n   calculate_dominance_info (CDI_DOMINATORS);\n@@ -1988,6 +1989,8 @@ create_sese_edges (VEC (sd_region, heap) *regions)\n \n   unmark_exit_edges (regions);\n \n+  fix_loop_structure (NULL);\n+\n #ifdef ENABLE_CHECKING\n   verify_loop_structure ();\n   verify_dominators (CDI_DOMINATORS);\n@@ -4283,6 +4286,7 @@ translate_clast (scop_p scop, struct loop *context_loop,\n       next_e = translate_clast (scop, context_loop, \n \t\t\t\t((struct clast_guard *) stmt)->then,\n \t\t\t\ttrue_e, ivstack);\n+      recompute_all_dominators ();\n       graphite_verify ();\n       return translate_clast (scop, context_loop, stmt->next, last_e, ivstack);\n     }\n@@ -4292,6 +4296,7 @@ translate_clast (scop_p scop, struct loop *context_loop,\n       next_e = translate_clast (scop, context_loop,\n \t\t\t\t((struct clast_block *) stmt)->body,\n \t\t\t\tnext_e, ivstack);\n+      recompute_all_dominators ();\n       graphite_verify ();\n       return translate_clast (scop, context_loop, stmt->next, next_e, ivstack);\n     }\n@@ -4975,12 +4980,14 @@ gloog (scop_p scop, struct clast_stmt *stmt)\n \t\t\t\tif_region->region->exit->src,\n \t\t\t\tif_region->false_region->exit,\n \t\t\t\tif_region->true_region->exit);\n+  recompute_all_dominators ();\n   graphite_verify ();\n   context_loop = SESE_ENTRY (SCOP_REGION (scop))->src->loop_father;\n   compute_cloog_iv_types (stmt);\n   new_scop_exit_edge = translate_clast (scop, context_loop,\n \t\t\t\t\tstmt, if_region->true_region->entry,\n \t\t\t\t\t&ivstack);\n+  recompute_all_dominators ();\n   graphite_verify ();\n   cleanup_tree_cfg ();\n   recompute_all_dominators ();"}, {"sha": "6a6bc136b2681b441ac8fde76b61d584a330902b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9761fcc7baae374bd42e9bb9608c8317fcb5658d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9761fcc7baae374bd42e9bb9608c8317fcb5658d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9761fcc7baae374bd42e9bb9608c8317fcb5658d", "patch": "@@ -1,3 +1,14 @@\n+2009-01-05  Harsha Jagasia  <harsha.jagasia@amd.com>\n+\n+\tPR tree-optimization/38510\n+\t* gcc.dg/graphite/pr38510.c: New.\n+\n+2009-01-05  Harsha Jagasia  <harsha.jagasia@amd.com>\n+\t    Jan Sjodin <jan.sjodin@amd.com>\n+\n+\tPR tree-optimization/38500\n+\t* gcc.dg/graphite/pr38500.c: New.\n+\n 2009-01-05  Laurent GUERBY  <laurent@guerby.net>\n \n \t* gcc.c-torture/compile/20001226-1.c: Generalize "}, {"sha": "f5292d173c1e9e781800516879c6ae494807f90e", "filename": "gcc/testsuite/gcc.dg/graphite/pr38500.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9761fcc7baae374bd42e9bb9608c8317fcb5658d/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr38500.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9761fcc7baae374bd42e9bb9608c8317fcb5658d/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr38500.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr38500.c?ref=9761fcc7baae374bd42e9bb9608c8317fcb5658d", "patch": "@@ -0,0 +1,29 @@\n+/* { dg-options \"-O3 -fgraphite-identity\" } */\n+\n+typedef unsigned char U8;\n+extern char test1;\n+\n+char *Perl_screaminstr (int, int, int);\n+\n+void\n+Perl_re_intuit_start( int minlen,  char *strend, unsigned int flags, int i)\n+{\n+  register int start_shift = 0;\n+  register int end_shift = 0;\n+  register char *s;\n+  char *strbeg;\n+  char *t;\n+  if(i > 0)\n+    goto success_at_start;\n+  int end = 0;\n+  int eshift = (test1 ? Perl_utf8_distance((U8*)strend,(U8*)s) : (U8*)strend - (U8*)s) - end;\n+  if (end_shift < eshift)\n+    end_shift = eshift;\n+ restart:\n+  s = Perl_screaminstr(start_shift + (s - strbeg), end_shift, 0);\n+  while( t < strend - minlen){  \n+  }\n+ success_at_start:\n+  eshift = (test1 ? Perl_utf8_distance((U8*)strend,(U8*)s) : (U8*)strend - (U8*)s) - end;\n+  goto restart;\n+}"}, {"sha": "07ddb6ef1666ede30a24e6e56ef65794c2a44433", "filename": "gcc/testsuite/gcc.dg/graphite/pr38510.c", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9761fcc7baae374bd42e9bb9608c8317fcb5658d/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr38510.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9761fcc7baae374bd42e9bb9608c8317fcb5658d/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr38510.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr38510.c?ref=9761fcc7baae374bd42e9bb9608c8317fcb5658d", "patch": "@@ -0,0 +1,40 @@\n+/* { dg-options \"-O2 -fgraphite-identity\" } */\n+typedef long int integer;\n+typedef double doublereal;\n+\n+static int balanc_(nm, n, a, low, igh, scale)\n+doublereal *a;\n+{\n+ integer a_dim1, a_offset, i__1, i__2;\n+ integer iexc;\n+ integer i__, j, k, l, m;\n+ integer jj;\n+goto L100;\n+L20:\n+if (j == m) {\n+goto L50;\n+}\n+for (i__ = 1; i__ <= i__1; ++i__) {\n+a[i__ + j * a_dim1] = a[i__ + m * a_dim1];\n+}\n+L50:\n+switch ((int)iexc) {\n+case 2: goto L130;\n+}\n+L100:\n+for (jj = 1; jj <= i__1; ++jj) {\n+goto L20;\n+}\n+L130:\n+for (j = k; j <= i__1; ++j) {\n+goto L20;\n+}\n+}\n+\n+int pymol_rg_(integer *nm, integer *n, doublereal *a, doublereal *wr,\n+              doublereal *fv1,integer *ierr)\n+{\n+    integer a_dim1, a_offset, z_dim1, z_offset;\n+    integer is1, is2;\n+    balanc_(nm, n, &a[a_offset], &is1, &is2, &fv1[1]);\n+}"}]}