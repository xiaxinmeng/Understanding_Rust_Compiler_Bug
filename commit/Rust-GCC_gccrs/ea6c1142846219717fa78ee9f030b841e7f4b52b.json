{"sha": "ea6c1142846219717fa78ee9f030b841e7f4b52b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE2YzExNDI4NDYyMTk3MTdmYTc4ZWU5ZjAzMGI4NDFlN2Y0YjUyYg==", "commit": {"author": {"name": "Dave Brolley", "email": "brolley@cygnus.com", "date": "1998-07-27T12:37:16Z"}, "committer": {"name": "Dave Brolley", "email": "brolley@gcc.gnu.org", "date": "1998-07-27T12:37:16Z"}, "message": "c-lex.c (yylex): Fix boundary conditions in character literal and string literal loops.\n\n1998-07-27  Dave Brolley  <brolley@cygnus.com>\n\t* c-lex.c (yylex): Fix boundary conditions in character literal and\n\tstring literal loops.\n\nFrom-SVN: r21412", "tree": {"sha": "f4c89445d52b7f99065872aa75b0cf6717cb486b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4c89445d52b7f99065872aa75b0cf6717cb486b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea6c1142846219717fa78ee9f030b841e7f4b52b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea6c1142846219717fa78ee9f030b841e7f4b52b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea6c1142846219717fa78ee9f030b841e7f4b52b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea6c1142846219717fa78ee9f030b841e7f4b52b/comments", "author": null, "committer": null, "parents": [{"sha": "84530511d2506d48804420cae40495950199ff0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84530511d2506d48804420cae40495950199ff0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84530511d2506d48804420cae40495950199ff0e"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "d707577883fd9fc1472e9745e0246a0187ddf024", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea6c1142846219717fa78ee9f030b841e7f4b52b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea6c1142846219717fa78ee9f030b841e7f4b52b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ea6c1142846219717fa78ee9f030b841e7f4b52b", "patch": "@@ -1,3 +1,8 @@\n+1998-07-27  Dave Brolley  <brolley@cygnus.com>\n+\n+\t* c-lex.c (yylex): Fix boundary conditions in character literal and\n+\tstring literal loops.\n+\n 1998-07-24  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* decl.c (lookup_name_real): OK, do return the from_obj value"}, {"sha": "d127ddceed283d874daec67e268e6ac13154837e", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea6c1142846219717fa78ee9f030b841e7f4b52b/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea6c1142846219717fa78ee9f030b841e7f4b52b/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=ea6c1142846219717fa78ee9f030b841e7f4b52b", "patch": "@@ -4132,7 +4132,7 @@ real_yylex ()\n \t\tint char_len = -1;\n \t\tfor (i = 0; i < longest_char; ++i)\n \t\t  {\n-\t\t    if (p + i == token_buffer + maxtoken)\n+\t\t    if (p + i >= token_buffer + maxtoken)\n \t\t      p = extend_token_buffer (p);\n \t\t    p[i] = c;\n \n@@ -4169,7 +4169,7 @@ real_yylex ()\n \t\tunsigned bytemask = (1 << width) - 1;\n \t\tint byte;\n \n-\t\tif (p + WCHAR_BYTES >= token_buffer + maxtoken)\n+\t\tif (p + WCHAR_BYTES > token_buffer + maxtoken)\n \t\t  p = extend_token_buffer (p);\n \n \t\tfor (byte = 0; byte < WCHAR_BYTES; ++byte)\n@@ -4188,7 +4188,7 @@ real_yylex ()\n \t      }\n \t    else\n \t      {\n-\t\tif (p == token_buffer + maxtoken)\n+\t\tif (p >= token_buffer + maxtoken)\n \t\t  p = extend_token_buffer (p);\n \t\t*p++ = c;\n \t      }\n@@ -4205,14 +4205,14 @@ real_yylex ()\n \t   or with a wide zero.  */\n \tif (wide_flag)\n \t  {\n-\t    if (p + WCHAR_BYTES >= token_buffer + maxtoken)\n+\t    if (p + WCHAR_BYTES > token_buffer + maxtoken)\n \t      p = extend_token_buffer (p);\n \t    bzero (p, WCHAR_BYTES);\n \t    p += WCHAR_BYTES;\n \t  }\n \telse\n \t  {\n-\t    if (p == token_buffer + maxtoken)\n+\t    if (p >= token_buffer + maxtoken)\n \t      p = extend_token_buffer (p);\n \t    *p++ = 0;\n \t  }"}]}