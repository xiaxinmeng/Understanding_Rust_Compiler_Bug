{"sha": "5d2d755e862d70f29ba26ad71c563de35ec230de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQyZDc1NWU4NjJkNzBmMjliYTI2YWQ3MWM1NjNkZTM1ZWMyMzBkZQ==", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@codesourcery.com", "date": "2014-11-18T16:52:02Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@gcc.gnu.org", "date": "2014-11-18T16:52:02Z"}, "message": "mips.md (compression): Add `micromips32' setting.\n\n\t* config/mips/mips.md (compression): Add `micromips32' setting.\n\t(enabled, length): Handle it.\n\t(shift_compression): Replace `micromips' with `micromips32' in\n\tthe `compression' attribute.\n\t(*add<mode>3, sub<mode>3): Likewise.\n\nFrom-SVN: r217728", "tree": {"sha": "699648242172eaad1720284cc87c8b92a96cfaaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/699648242172eaad1720284cc87c8b92a96cfaaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d2d755e862d70f29ba26ad71c563de35ec230de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d2d755e862d70f29ba26ad71c563de35ec230de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d2d755e862d70f29ba26ad71c563de35ec230de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d2d755e862d70f29ba26ad71c563de35ec230de/comments", "author": null, "committer": null, "parents": [{"sha": "73af680eb946cd6e0b97a1fda313d12e0926c8f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73af680eb946cd6e0b97a1fda313d12e0926c8f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73af680eb946cd6e0b97a1fda313d12e0926c8f0"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "2fa58caeb38f8309404a91d4435e67f91e74dadd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d2d755e862d70f29ba26ad71c563de35ec230de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d2d755e862d70f29ba26ad71c563de35ec230de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d2d755e862d70f29ba26ad71c563de35ec230de", "patch": "@@ -1,3 +1,11 @@\n+2014-11-18  Maciej W. Rozycki  <macro@codesourcery.com>\n+\n+\t* config/mips/mips.md (compression): Add `micromips32' setting.\n+\t(enabled, length): Handle it.\n+\t(shift_compression): Replace `micromips' with `micromips32' in\n+\tthe `compression' attribute.\n+\t(*add<mode>3, sub<mode>3): Likewise.\n+\n 2014-11-18  Maciej W. Rozycki  <macro@codesourcery.com>\n \n \t* gcc/config/mips/mips.md (*jump_absolute): Use a branch when in"}, {"sha": "65c0a3f18fed68fd8b9646137e380f09100797ec", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d2d755e862d70f29ba26ad71c563de35ec230de/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d2d755e862d70f29ba26ad71c563de35ec230de/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=5d2d755e862d70f29ba26ad71c563de35ec230de", "patch": "@@ -429,7 +429,7 @@\n \t\t(const_string \"yes\")\n \t\t(const_string \"no\")))\n \n-(define_attr \"compression\" \"none,all,micromips\"\n+(define_attr \"compression\" \"none,all,micromips32,micromips\"\n   (const_string \"none\"))\n \n (define_attr \"enabled\" \"no,yes\"\n@@ -440,7 +440,7 @@\n \t\t\t   || TARGET_O32_FP64A_ABI\")\n \t      (eq_attr \"dword_mode\" \"yes\"))\n \t (const_string \"no\")\n-\t (and (eq_attr \"compression\" \"micromips\")\n+\t (and (eq_attr \"compression\" \"micromips32,micromips\")\n \t      (match_test \"!TARGET_MICROMIPS\"))\n \t (const_string \"no\")]\n \t(const_string \"yes\")))\n@@ -526,7 +526,9 @@\n ;; but there are special cases for branches (which must be handled here)\n ;; and for compressed single instructions.\n (define_attr \"length\" \"\"\n-   (cond [(and (eq_attr \"compression\" \"micromips,all\")\n+   (cond [(and (ior (eq_attr \"compression\" \"micromips,all\")\n+\t\t    (and (eq_attr \"compression\" \"micromips32\")\n+\t\t\t (eq_attr \"mode\" \"SI,SF\")))\n \t       (eq_attr \"dword_mode\" \"no\")\n \t       (match_test \"TARGET_MICROMIPS\"))\n \t  (const_int 2)\n@@ -979,8 +981,8 @@\n \t\t\t\t  (xor \"xori\")\n \t\t\t\t  (and \"andi\")])\n \n-(define_code_attr shift_compression [(ashift \"micromips\")\n-\t\t\t\t     (lshiftrt \"micromips\")\n+(define_code_attr shift_compression [(ashift \"micromips32\")\n+\t\t\t\t     (lshiftrt \"micromips32\")\n \t\t\t\t     (ashiftrt \"none\")])\n \n ;; <fcond> is the c.cond.fmt condition associated with a particular code.\n@@ -1163,7 +1165,7 @@\n     return \"<d>addiu\\t%0,%1,%2\";\n }\n   [(set_attr \"alu_type\" \"add\")\n-   (set_attr \"compression\" \"micromips,*,micromips,micromips,micromips,micromips,*\")\n+   (set_attr \"compression\" \"micromips32,*,micromips32,micromips32,micromips32,micromips32,*\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"*add<mode>3_mips16\"\n@@ -1381,7 +1383,7 @@\n   \"\"\n   \"<d>subu\\t%0,%1,%2\"\n   [(set_attr \"alu_type\" \"sub\")\n-   (set_attr \"compression\" \"micromips,*\")\n+   (set_attr \"compression\" \"micromips32,*\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"*subsi3_extended\""}]}