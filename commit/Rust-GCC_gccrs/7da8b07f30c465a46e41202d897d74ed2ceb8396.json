{"sha": "7da8b07f30c465a46e41202d897d74ed2ceb8396", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RhOGIwN2YzMGM0NjVhNDZlNDEyMDJkODk3ZDc0ZWQyY2ViODM5Ng==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2018-07-16T14:11:42Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-07-16T14:11:42Z"}, "message": "[Ada] Deconstruct unused Withed_Body filed of N_With_Clause node\n\nThe Withed_Body field was added to N_With_Clause node to help the\nWalk_Library_Items routine, which was created for the CodePeer backend\nand later adopted by the GNATprove.\n\nThis routine is meant to traverse all library units, such that declarations\nare visited before references. However, for complex units (in particular,\nwith generics and child packages) it never worked reliably and backends\ndeveloped their own workarounds. This patch deconstructs the field, as it\nhasn't been used for years.\n\nSemantics unaffected; no test provided.\n\n2018-07-16  Piotr Trojanek  <trojanek@adacore.com>\n\ngcc/ada/\n\n\t* sinfo.ads, sinfo.adb (Withed_Body): Remove.\n\t(Set_Withed_Body): Remove.\n\nFrom-SVN: r262721", "tree": {"sha": "e8d12816b594865ccbd13a5a87c3d42cd1d72e8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8d12816b594865ccbd13a5a87c3d42cd1d72e8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7da8b07f30c465a46e41202d897d74ed2ceb8396", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7da8b07f30c465a46e41202d897d74ed2ceb8396", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7da8b07f30c465a46e41202d897d74ed2ceb8396", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7da8b07f30c465a46e41202d897d74ed2ceb8396/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1d6c2060053f0a3adc3a43831539f2f7bb9ce44e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d6c2060053f0a3adc3a43831539f2f7bb9ce44e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d6c2060053f0a3adc3a43831539f2f7bb9ce44e"}], "stats": {"total": 36, "additions": 5, "deletions": 31}, "files": [{"sha": "1a14dae784e04d26ee7b3c5cb15805a4e787fbf5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da8b07f30c465a46e41202d897d74ed2ceb8396/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da8b07f30c465a46e41202d897d74ed2ceb8396/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7da8b07f30c465a46e41202d897d74ed2ceb8396", "patch": "@@ -1,3 +1,8 @@\n+2018-07-16  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sinfo.ads, sinfo.adb (Withed_Body): Remove.\n+\t(Set_Withed_Body): Remove.\n+\n 2018-07-16  Piotr Trojanek  <trojanek@adacore.com>\n \n \t* sem.adb (Walk_Library_Items): Skip units with configuration pragmas"}, {"sha": "e6ff0e774afa165ec16096bab86ea2ff0f7fac6e", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da8b07f30c465a46e41202d897d74ed2ceb8396/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da8b07f30c465a46e41202d897d74ed2ceb8396/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=7da8b07f30c465a46e41202d897d74ed2ceb8396", "patch": "@@ -3522,14 +3522,6 @@ package body Sinfo is\n       return Flag13 (N);\n    end Was_Originally_Stub;\n \n-   function Withed_Body\n-      (N : Node_Id) return Node_Id is\n-   begin\n-      pragma Assert (False\n-        or else NT (N).Nkind = N_With_Clause);\n-      return Node1 (N);\n-   end Withed_Body;\n-\n    --------------------------\n    -- Field Set Procedures --\n    --------------------------\n@@ -6990,14 +6982,6 @@ package body Sinfo is\n       Set_Flag13 (N, Val);\n    end Set_Was_Originally_Stub;\n \n-   procedure Set_Withed_Body\n-     (N : Node_Id; Val : Node_Id) is\n-   begin\n-      pragma Assert (False\n-        or else NT (N).Nkind = N_With_Clause);\n-      Set_Node1 (N, Val);\n-   end Set_Withed_Body;\n-\n    -------------------------\n    -- Iterator Procedures --\n    -------------------------"}, {"sha": "ae296612ed31fb06505a3b38c38a07c029e2c611", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da8b07f30c465a46e41202d897d74ed2ceb8396/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da8b07f30c465a46e41202d897d74ed2ceb8396/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=7da8b07f30c465a46e41202d897d74ed2ceb8396", "patch": "@@ -2504,12 +2504,6 @@ package Sinfo is\n    --    Original_Node here because of the case of nested instantiations where\n    --    the substituted node can be copied.\n \n-   --  Withed_Body (Node1-Sem)\n-   --    Present in N_With_Clause nodes. Set if the unit in whose context\n-   --    the with_clause appears instantiates a generic contained in the\n-   --    library unit of the with_clause and as a result loads its body.\n-   --    Used for a more precise unit traversal for CodePeer.\n-\n    --------------------------------------------------\n    -- Note on Use of End_Label and End_Span Fields --\n    --------------------------------------------------\n@@ -6743,7 +6737,6 @@ package Sinfo is\n \n       --  N_With_Clause\n       --  Sloc points to first token of library unit name\n-      --  Withed_Body (Node1-Sem)\n       --  Name (Node2)\n       --  Private_Present (Flag15) set if with_clause has private keyword\n       --  Limited_Present (Flag17) set if LIMITED is present\n@@ -10307,9 +10300,6 @@ package Sinfo is\n    function Was_Originally_Stub\n      (N : Node_Id) return Boolean;    -- Flag13\n \n-   function Withed_Body\n-     (N : Node_Id) return Node_Id;    -- Node1\n-\n    --  End functions (note used by xsinfo utility program to end processing)\n \n    ----------------------------\n@@ -11408,9 +11398,6 @@ package Sinfo is\n    procedure Set_Was_Originally_Stub\n      (N : Node_Id; Val : Boolean := True);    -- Flag13\n \n-   procedure Set_Withed_Body\n-     (N : Node_Id; Val : Node_Id);            -- Node1\n-\n    -------------------------\n    -- Iterator Procedures --\n    -------------------------\n@@ -13613,7 +13600,6 @@ package Sinfo is\n    pragma Inline (Was_Attribute_Reference);\n    pragma Inline (Was_Expression_Function);\n    pragma Inline (Was_Originally_Stub);\n-   pragma Inline (Withed_Body);\n \n    pragma Inline (Set_Abort_Present);\n    pragma Inline (Set_Abortable_Part);\n@@ -13975,6 +13961,5 @@ package Sinfo is\n    pragma Inline (Set_Was_Attribute_Reference);\n    pragma Inline (Set_Was_Expression_Function);\n    pragma Inline (Set_Was_Originally_Stub);\n-   pragma Inline (Set_Withed_Body);\n \n end Sinfo;"}]}