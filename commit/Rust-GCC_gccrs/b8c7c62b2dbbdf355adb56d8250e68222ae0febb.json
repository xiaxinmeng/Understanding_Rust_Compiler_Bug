{"sha": "b8c7c62b2dbbdf355adb56d8250e68222ae0febb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhjN2M2MmIyZGJiZGYzNTVhZGI1NmQ4MjUwZTY4MjIyYWUwZmViYg==", "commit": {"author": {"name": "Christian Bruel", "email": "christian.bruel@st.com", "date": "2015-11-16T11:20:02Z"}, "committer": {"name": "Christian Bruel", "email": "chrbr@gcc.gnu.org", "date": "2015-11-16T11:20:02Z"}, "message": "re PR target/65837 ([arm-linux-gnueabihf] lto1 target specific builtin not available)\n\n2015-11-16  Christian Bruel  <christian.bruel@st.com>\n\n\tPR target/65837\n\t* config/arm/arm-c.c (arm_cpu_builtins): Conditionally set and reset\n\t__ARM_FEATURE_FMA and __ARM_NEON_FP, __ARM_FP.\n\nFrom-SVN: r230410", "tree": {"sha": "62c2cae1bac8edac08d47fcba98f2253d0e8b249", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62c2cae1bac8edac08d47fcba98f2253d0e8b249"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8c7c62b2dbbdf355adb56d8250e68222ae0febb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8c7c62b2dbbdf355adb56d8250e68222ae0febb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8c7c62b2dbbdf355adb56d8250e68222ae0febb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8c7c62b2dbbdf355adb56d8250e68222ae0febb/comments", "author": null, "committer": null, "parents": [{"sha": "67707f65c09d25a16dc09d801a99977f3bf3cd00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67707f65c09d25a16dc09d801a99977f3bf3cd00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67707f65c09d25a16dc09d801a99977f3bf3cd00"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "72f0e9e2a0cde6af372d01577514b08b19dd2ed0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8c7c62b2dbbdf355adb56d8250e68222ae0febb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8c7c62b2dbbdf355adb56d8250e68222ae0febb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b8c7c62b2dbbdf355adb56d8250e68222ae0febb", "patch": "@@ -1,3 +1,9 @@\n+2015-11-16  Christian Bruel  <christian.bruel@st.com>\n+\n+\tPR target/65837\n+\t* config/arm/arm-c.c (arm_cpu_builtins): Conditionally set and reset\n+\t__ARM_FEATURE_FMA and __ARM_NEON_FP, __ARM_FP.\n+\n 2015-11-16  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/aarch64/aarch64.c (cortexa57_branch_costs): New."}, {"sha": "c336a167086d46e60a90bda47690b1abc5adb671", "filename": "gcc/config/arm/arm-c.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8c7c62b2dbbdf355adb56d8250e68222ae0febb/gcc%2Fconfig%2Farm%2Farm-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8c7c62b2dbbdf355adb56d8250e68222ae0febb/gcc%2Fconfig%2Farm%2Farm-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-c.c?ref=b8c7c62b2dbbdf355adb56d8250e68222ae0febb", "patch": "@@ -129,18 +129,22 @@ arm_cpu_builtins (struct cpp_reader* pfile)\n \n   if (TARGET_ARM_FP)\n     builtin_define_with_int_value (\"__ARM_FP\", TARGET_ARM_FP);\n+  else\n+    cpp_undef (pfile, \"__ARM_FP\");\n+\n   if (arm_fp16_format == ARM_FP16_FORMAT_IEEE)\n     builtin_define (\"__ARM_FP16_FORMAT_IEEE\");\n   if (arm_fp16_format == ARM_FP16_FORMAT_ALTERNATIVE)\n     builtin_define (\"__ARM_FP16_FORMAT_ALTERNATIVE\");\n-  if (TARGET_FMA)\n-    builtin_define (\"__ARM_FEATURE_FMA\");\n \n+  def_or_undef_macro (pfile, \"__ARM_FEATURE_FMA\", TARGET_FMA);\n   def_or_undef_macro (pfile, \"__ARM_NEON__\", TARGET_NEON);\n   def_or_undef_macro (pfile, \"__ARM_NEON\", TARGET_NEON);\n \n   if (TARGET_NEON_FP)\n     builtin_define_with_int_value (\"__ARM_NEON_FP\", TARGET_NEON_FP);\n+  else\n+    cpp_undef (pfile, \"__ARM_NEON_FP\");\n \n   /* Add a define for interworking. Needed when building libgcc.a.  */\n   if (arm_cpp_interwork)"}]}