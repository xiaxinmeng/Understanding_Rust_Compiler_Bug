{"sha": "c718820a974fa2cbd5a181e02d8d19ac2b3dd8f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzcxODgyMGE5NzRmYTJjYmQ1YTE4MWUwMmQ4ZDE5YWMyYjNkZDhmNg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-04-28T10:28:24Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-04-28T10:28:24Z"}, "message": "re PR middle-end/43880 (internal compiler error: in make_decl_rtl)\n\n2010-04-28  Richard Guenther  <rguenther@suse.de>\n\n\tPR c++/43880\n\t* tree-inline.c (copy_bind_expr): Also copy bind expr vars\n\tvalue-exprs.\n\n\t* g++.dg/torture/pr43880.C: New testcase.\n\nFrom-SVN: r158824", "tree": {"sha": "7999d339ebaee84237dd0f4491fd8a82fb8f6cb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7999d339ebaee84237dd0f4491fd8a82fb8f6cb1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c718820a974fa2cbd5a181e02d8d19ac2b3dd8f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c718820a974fa2cbd5a181e02d8d19ac2b3dd8f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c718820a974fa2cbd5a181e02d8d19ac2b3dd8f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c718820a974fa2cbd5a181e02d8d19ac2b3dd8f6/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4b414c93f0d6e1e70bff5eaca0fb8f066f793883", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b414c93f0d6e1e70bff5eaca0fb8f066f793883", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b414c93f0d6e1e70bff5eaca0fb8f066f793883"}], "stats": {"total": 47, "additions": 44, "deletions": 3}, "files": [{"sha": "528c3eb516a602ce135d92f5cafcfb4655ebd3b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c718820a974fa2cbd5a181e02d8d19ac2b3dd8f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c718820a974fa2cbd5a181e02d8d19ac2b3dd8f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c718820a974fa2cbd5a181e02d8d19ac2b3dd8f6", "patch": "@@ -1,3 +1,9 @@\n+2010-04-28  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR c++/43880\n+\t* tree-inline.c (copy_bind_expr): Also copy bind expr vars\n+\tvalue-exprs.\n+\n 2010-04-27  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \t    Jan Hubicka <hubicka@ucw.cz>\n "}, {"sha": "9ee30f083f5b36010d9eb3f111aa2ced22bf6c2c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c718820a974fa2cbd5a181e02d8d19ac2b3dd8f6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c718820a974fa2cbd5a181e02d8d19ac2b3dd8f6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c718820a974fa2cbd5a181e02d8d19ac2b3dd8f6", "patch": "@@ -1,3 +1,8 @@\n+2010-04-28  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR c++/43880\n+\t* g++.dg/torture/pr43880.C: New testcase.\n+\n 2010-04-28  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR c++/9335"}, {"sha": "bf82bc54bc668e407f8959b486dcbe934803fe25", "filename": "gcc/testsuite/g++.dg/torture/pr43880.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c718820a974fa2cbd5a181e02d8d19ac2b3dd8f6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr43880.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c718820a974fa2cbd5a181e02d8d19ac2b3dd8f6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr43880.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr43880.C?ref=c718820a974fa2cbd5a181e02d8d19ac2b3dd8f6", "patch": "@@ -0,0 +1,16 @@\n+// { dg-do compile }\n+\n+extern void xread(void *);\n+class test\n+{\n+public:\n+    test(void);\n+};\n+test::test(void)\n+{\n+  union {\n+      char pngpal[1];\n+  };\n+  xread(pngpal);\n+}\n+"}, {"sha": "7f35c4d60caf37aafba94984315ec286d8b776a5", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c718820a974fa2cbd5a181e02d8d19ac2b3dd8f6/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c718820a974fa2cbd5a181e02d8d19ac2b3dd8f6/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=c718820a974fa2cbd5a181e02d8d19ac2b3dd8f6", "patch": "@@ -665,9 +665,23 @@ copy_bind_expr (tree *tp, int *walk_subtrees, copy_body_data *id)\n     }\n \n   if (BIND_EXPR_VARS (*tp))\n-    /* This will remap a lot of the same decls again, but this should be\n-       harmless.  */\n-    BIND_EXPR_VARS (*tp) = remap_decls (BIND_EXPR_VARS (*tp), NULL, id);\n+    {\n+      tree t;\n+\n+      /* This will remap a lot of the same decls again, but this should be\n+\t harmless.  */\n+      BIND_EXPR_VARS (*tp) = remap_decls (BIND_EXPR_VARS (*tp), NULL, id);\n+ \n+      /* Also copy value-expressions.  */\n+      for (t = BIND_EXPR_VARS (*tp); t; t = TREE_CHAIN (t))\n+\tif (TREE_CODE (t) == VAR_DECL\n+\t    && DECL_HAS_VALUE_EXPR_P (t))\n+\t  {\n+\t    tree tem = DECL_VALUE_EXPR (t);\n+\t    walk_tree (&tem, copy_tree_body_r, id, NULL);\n+\t    SET_DECL_VALUE_EXPR (t, tem);\n+\t  }\n+    }\n }\n \n "}]}