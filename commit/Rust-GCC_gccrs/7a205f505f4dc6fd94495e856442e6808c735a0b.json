{"sha": "7a205f505f4dc6fd94495e856442e6808c735a0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2EyMDVmNTA1ZjRkYzZmZDk0NDk1ZTg1NjQ0MmU2ODA4YzczNWEwYg==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2018-06-07T05:44:53Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2018-06-07T05:44:53Z"}, "message": "2018-06-07  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n\n\t* src/c++11/debug.cc\n\t(_Safe_iterator_base::_M_detach()): Reset state only if needed.\n\t(_Safe_iterator_base::_M_detach_single()): Likewise.\n\t(_Safe_local_iterator_base::_M_detach()): Reset state only if needed.\n\t(_Safe_local_iterator_base::_M_detach_single()): Likewise.\n\nFrom-SVN: r261262", "tree": {"sha": "82c46d5a5da47b055cea5765d4007502723ece96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82c46d5a5da47b055cea5765d4007502723ece96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a205f505f4dc6fd94495e856442e6808c735a0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a205f505f4dc6fd94495e856442e6808c735a0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a205f505f4dc6fd94495e856442e6808c735a0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a205f505f4dc6fd94495e856442e6808c735a0b/comments", "author": null, "committer": null, "parents": [{"sha": "244aebfd6c5195efd123fcd8304b4bc36be7d922", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/244aebfd6c5195efd123fcd8304b4bc36be7d922", "html_url": "https://github.com/Rust-GCC/gccrs/commit/244aebfd6c5195efd123fcd8304b4bc36be7d922"}], "stats": {"total": 36, "additions": 24, "deletions": 12}, "files": [{"sha": "47c6b1fe52d1ee51c09ae5be14ed8ac4f79ce007", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a205f505f4dc6fd94495e856442e6808c735a0b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a205f505f4dc6fd94495e856442e6808c735a0b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7a205f505f4dc6fd94495e856442e6808c735a0b", "patch": "@@ -1,3 +1,11 @@\n+2018-06-07  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\t* src/c++11/debug.cc\n+\t(_Safe_iterator_base::_M_detach()): Reset state only if needed.\n+\t(_Safe_iterator_base::_M_detach_single()): Likewise.\n+\t(_Safe_local_iterator_base::_M_detach()): Reset state only if needed.\n+\t(_Safe_local_iterator_base::_M_detach_single()): Likewise.\n+\n 2018-06-06  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/bits/shared_ptr_base.h (__shared_count): Remove redundant"}, {"sha": "cb64dd9240e7ceed4f8c64290181bd8015ee053d", "filename": "libstdc++-v3/src/c++11/debug.cc", "status": "modified", "additions": 16, "deletions": 12, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a205f505f4dc6fd94495e856442e6808c735a0b/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a205f505f4dc6fd94495e856442e6808c735a0b/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc?ref=7a205f505f4dc6fd94495e856442e6808c735a0b", "patch": "@@ -377,19 +377,21 @@ namespace __gnu_debug\n   _M_detach()\n   {\n     if (_M_sequence)\n-      _M_sequence->_M_detach(this);\n-\n-    _M_reset();\n+      {\n+\t_M_sequence->_M_detach(this);\n+\t_M_reset();\n+      }\n   }\n \n   void\n   _Safe_iterator_base::\n   _M_detach_single() throw ()\n   {\n     if (_M_sequence)\n-      _M_sequence->_M_detach_single(this);\n-\n-    _M_reset();\n+      {\n+\t_M_sequence->_M_detach_single(this);\n+\t_M_reset();\n+      }\n   }\n \n   void\n@@ -460,19 +462,21 @@ namespace __gnu_debug\n   _M_detach()\n   {\n     if (_M_sequence)\n-      _M_get_container()->_M_detach_local(this);\n-\n-    _M_reset();\n+      {\n+\t_M_get_container()->_M_detach_local(this);\n+\t_M_reset();\n+      }\n   }\n \n   void\n   _Safe_local_iterator_base::\n   _M_detach_single() throw ()\n   {\n     if (_M_sequence)\n-      _M_get_container()->_M_detach_local_single(this);\n-\n-    _M_reset();\n+      {\n+\t_M_get_container()->_M_detach_local_single(this);\n+\t_M_reset();\n+      }\n   }\n \n   void"}]}