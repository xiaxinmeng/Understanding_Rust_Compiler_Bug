{"sha": "f9da97f03ce8200d7ad3893ea0a5a181b92fd185", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjlkYTk3ZjAzY2U4MjAwZDdhZDM4OTNlYTBhNWExODFiOTJmZDE4NQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2004-04-21T15:27:17Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2004-04-21T15:27:17Z"}, "message": "rs6000.c (symbol_ref_operand): Remove hack for TARGET_MACHO.\n\n2004-04-21  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        * config/rs6000/rs6000.c (symbol_ref_operand): Remove hack\n        for TARGET_MACHO.\n        (print_operand): For TARGET_MACHO check to see if we need a stub\n        and output one if we need it.\n\nFrom-SVN: r80966", "tree": {"sha": "6d7b09b2b0dc8ca480915577670151e718699420", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d7b09b2b0dc8ca480915577670151e718699420"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9da97f03ce8200d7ad3893ea0a5a181b92fd185", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9da97f03ce8200d7ad3893ea0a5a181b92fd185", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9da97f03ce8200d7ad3893ea0a5a181b92fd185", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9da97f03ce8200d7ad3893ea0a5a181b92fd185/comments", "author": null, "committer": null, "parents": [{"sha": "0d8c9baf8139f34242119871453b67ec64be5014", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d8c9baf8139f34242119871453b67ec64be5014", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d8c9baf8139f34242119871453b67ec64be5014"}], "stats": {"total": 36, "additions": 17, "deletions": 19}, "files": [{"sha": "3fc6309c5f5899d5ca1555c56bdf3c989f6e6323", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9da97f03ce8200d7ad3893ea0a5a181b92fd185/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9da97f03ce8200d7ad3893ea0a5a181b92fd185/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f9da97f03ce8200d7ad3893ea0a5a181b92fd185", "patch": "@@ -1,4 +1,9 @@\n-2004-04-12  Andrew Pinski  <pinskia@physics.uc.edu>\n+2004-04-21  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\t* config/rs6000/rs6000.c (symbol_ref_operand): Remove hack\n+\tfor TARGET_MACHO.\n+\t(print_operand): For TARGET_MACHO check to see if we need a stub\n+\tand output one if we need it.\n \n \tPR debug/15033\n \t* dwarf2out.c (rtl_for_decl_location): Check for NULL"}, {"sha": "c9a5558396ef6d8341e3b945a80821be2b2dafaf", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 11, "deletions": 18, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9da97f03ce8200d7ad3893ea0a5a181b92fd185/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9da97f03ce8200d7ad3893ea0a5a181b92fd185/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=f9da97f03ce8200d7ad3893ea0a5a181b92fd185", "patch": "@@ -2315,23 +2315,6 @@ symbol_ref_operand (rtx op, enum machine_mode mode)\n   if (mode != VOIDmode && GET_MODE (op) != mode)\n     return 0;\n \n-#if TARGET_MACHO\n-  if (GET_CODE (op) == SYMBOL_REF && TARGET_MACHO && MACHOPIC_INDIRECT)\n-    {\n-      /* Macho says it has to go through a stub or be local \n-         when indirect mode.  Stubs are considered local.  */\n-      const char *t = XSTR (op, 0);\n-      /* \"&\" means that it is it a local defined symbol\n-          so it is okay to call to.  */\n-      if (t[0] == '&')\n-        return true;\n-     \n-      /* \"!T\" means that the function is local defined.  */ \n-      return (t[0] == '!' && t[1] == 'T');\n-    }\n-#endif\n-\n-\n   return (GET_CODE (op) == SYMBOL_REF\n \t  && (DEFAULT_ABI != ABI_AIX || SYMBOL_REF_FUNCTION_P (op)));\n }\n@@ -9507,7 +9490,17 @@ print_operand (FILE *file, rtx x, int code)\n \t      break;\n \t    }\n \t}\n-      if (TARGET_AIX)\n+      /* For macho, we need to check it see if we need a stub.  */\n+      if (TARGET_MACHO)\n+\t{\n+\t  const char *name = XSTR (x, 0);\n+#ifdef TARGET_MACHO\n+\t  if (machopic_classify_name (name) == MACHOPIC_UNDEFINED_FUNCTION)\n+\t    name = machopic_stub_name (name);\n+#endif\n+\t  assemble_name (file, name);\n+\t}\n+     else if (TARGET_AIX)\n \tRS6000_OUTPUT_BASENAME (file, XSTR (x, 0));\n       else\n \tassemble_name (file, XSTR (x, 0));"}]}