{"sha": "bf0d50f1784b5badcaf6f76f29ceca1f90470c9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmYwZDUwZjE3ODRiNWJhZGNhZjZmNzZmMjljZWNhMWY5MDQ3MGM5ZA==", "commit": {"author": {"name": "Kenneth Zadeck", "email": "zadeck@gcc.gnu.org", "date": "2005-07-17T01:28:29Z"}, "committer": {"name": "Kenneth Zadeck", "email": "zadeck@gcc.gnu.org", "date": "2005-07-17T01:28:29Z"}, "message": "Move the changelog entry from the top level to the gcc directory.\n\nFrom-SVN: r102106", "tree": {"sha": "2f461d3692d3e8524738638c5f5b3a337f887e06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f461d3692d3e8524738638c5f5b3a337f887e06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf0d50f1784b5badcaf6f76f29ceca1f90470c9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf0d50f1784b5badcaf6f76f29ceca1f90470c9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf0d50f1784b5badcaf6f76f29ceca1f90470c9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf0d50f1784b5badcaf6f76f29ceca1f90470c9d/comments", "author": null, "committer": null, "parents": [{"sha": "e51c47fbed890c42fef60a80f82f5d3af97c8501", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e51c47fbed890c42fef60a80f82f5d3af97c8501", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e51c47fbed890c42fef60a80f82f5d3af97c8501"}], "stats": {"total": 100, "additions": 50, "deletions": 50}, "files": [{"sha": "fab8bd585745a65befb70d9f5b19d9225e9c00b0", "filename": "ChangeLog", "status": "modified", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf0d50f1784b5badcaf6f76f29ceca1f90470c9d/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf0d50f1784b5badcaf6f76f29ceca1f90470c9d/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=bf0d50f1784b5badcaf6f76f29ceca1f90470c9d", "patch": "@@ -1,53 +1,3 @@\n-2005-07-16 Danny Berlin <dberlin@dberlin.org>\n-\t   Kenneth Zadeck <zadeck@naturalbridge.com>\n-\n-\t* Makefile.in: Added rules for ipa-pure-const.c, ipa-reference.c,\n-\tipa-reference.h, ipa-utils.c, ipa-utils.h, ipa-type-escape.c,\n-\tipa-type-escape.h, tree-promote-statics.c\n-\t* ipa-pure-const.c, ipa-reference.c, ipa-reference.h, ipa-utils.c,\n-\tipa-utils.h, ipa-type-escape.c, ipa-type-escape.h, \n-\ttree-promote-statics.c: new files.\n-\t* alias.c: (nonlocal_mentioned_p_1, nonlocal_mentioned_p,\n-\tnonlocal_referenced_p_1, nonlocal_referenced_p, nonlocal_set_p_1,\n-\tint nonlocal_set_p, mark_constant_function): Deleted.\n-\t(rest_of_handle_cfg): Removed call to mark_constant_function. \n-        (nonoverlapping_component_refs_p): Added calls to support\n-\ttype based aliasing.    \n-        * tree-ssa-alias.c (may_alias_p,\n-\tcompute_flow_insensitive_aliasing): Ditto.\n-\t* calls.c (flags_from_decl_or_type): Removed reference to\n-\tcgraph_rtl_info. \n-\t(flags_from_decl_or_type): Support ECF_POINTER_NO_CAPTURE attribute.\n-\t* c-common.c (handle_pointer_no_capture_attribute): New function\n-\tand added pointer_no_capture attribute.\n-      \t* c-typeck.c (convert_arguments): Make builtins tolerant of having\n-\ttoo many arguments.  This is necessary for Spec 2000.\n-\t* cgraph.h (const_function, pure_function): Removed.\n-\t* common.opt: Added \"fipa-pure-const\", \"fipa-reference\",  \n-\t\"fipa-type-escape\", and \"ftree-promote-static\".\n-\t* opts.c: Ditto.\n-\t* passes.c: Added ipa and tree-promote-statics passes. \n-\t* timevar.def: Added TV_IPA_PURE_CONST, TV_IPA_REFERENCE,\n-\tTV_IPA_TYPE_ESCAPE, and TV_PROMOTE_STATICS.\n-\t* tree.h: Support ECF_POINTER_NO_CAPTURE attribute.\n-\t* tree-dfa.c (referenced_var_lookup_if_exists): New function.\n-\t* tree-flow.h: Added exposed sra calls and addition of \n-\treference_vars_info field for FUNCTION_DECLS.\n-\t* tree-pass.h: Added passes.\n-\t* tree-sra.c: (sra_init_cache): New function.\n-\t(sra_insert_before, sra_insert_after) Made public.\n-\t(type_can_be_decomposed_p): Renamed from type_can_be_decomposed_p\n-\tand made public.\n-\t* tree-ssa-alias.c (dump_alias_stats): Added stats for type based\n-\taliasing. (may_alias_p): Added code to use type escape analysis to\n-\timprove alias sets.\n-\t* tree-ssa-operands.c (add_call_clobber_ops): Added parameter and\n-\tcode to prune clobbers of static variables based on information\n-\tproduced in ipa-reference pass.  Changed call clobbering so that\n-\tstatics are not marked as clobbered if the call does not clobber\n-\tthem.\n-\n-\n 2005-07-16  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* all files: Update FSF address."}, {"sha": "216112ce31b197d5417160a13e8a26baef33a44c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf0d50f1784b5badcaf6f76f29ceca1f90470c9d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf0d50f1784b5badcaf6f76f29ceca1f90470c9d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf0d50f1784b5badcaf6f76f29ceca1f90470c9d", "patch": "@@ -1,3 +1,53 @@\n+2005-07-16 Danny Berlin <dberlin@dberlin.org>\n+\t   Kenneth Zadeck <zadeck@naturalbridge.com>\n+\n+\t* Makefile.in: Added rules for ipa-pure-const.c, ipa-reference.c,\n+\tipa-reference.h, ipa-utils.c, ipa-utils.h, ipa-type-escape.c,\n+\tipa-type-escape.h, tree-promote-statics.c\n+\t* ipa-pure-const.c, ipa-reference.c, ipa-reference.h, ipa-utils.c,\n+\tipa-utils.h, ipa-type-escape.c, ipa-type-escape.h, \n+\ttree-promote-statics.c: new files.\n+\t* alias.c: (nonlocal_mentioned_p_1, nonlocal_mentioned_p,\n+\tnonlocal_referenced_p_1, nonlocal_referenced_p, nonlocal_set_p_1,\n+\tint nonlocal_set_p, mark_constant_function): Deleted.\n+\t(rest_of_handle_cfg): Removed call to mark_constant_function. \n+        (nonoverlapping_component_refs_p): Added calls to support\n+\ttype based aliasing.    \n+        * tree-ssa-alias.c (may_alias_p,\n+\tcompute_flow_insensitive_aliasing): Ditto.\n+\t* calls.c (flags_from_decl_or_type): Removed reference to\n+\tcgraph_rtl_info. \n+\t(flags_from_decl_or_type): Support ECF_POINTER_NO_CAPTURE attribute.\n+\t* c-common.c (handle_pointer_no_capture_attribute): New function\n+\tand added pointer_no_capture attribute.\n+      \t* c-typeck.c (convert_arguments): Make builtins tolerant of having\n+\ttoo many arguments.  This is necessary for Spec 2000.\n+\t* cgraph.h (const_function, pure_function): Removed.\n+\t* common.opt: Added \"fipa-pure-const\", \"fipa-reference\",  \n+\t\"fipa-type-escape\", and \"ftree-promote-static\".\n+\t* opts.c: Ditto.\n+\t* passes.c: Added ipa and tree-promote-statics passes. \n+\t* timevar.def: Added TV_IPA_PURE_CONST, TV_IPA_REFERENCE,\n+\tTV_IPA_TYPE_ESCAPE, and TV_PROMOTE_STATICS.\n+\t* tree.h: Support ECF_POINTER_NO_CAPTURE attribute.\n+\t* tree-dfa.c (referenced_var_lookup_if_exists): New function.\n+\t* tree-flow.h: Added exposed sra calls and addition of \n+\treference_vars_info field for FUNCTION_DECLS.\n+\t* tree-pass.h: Added passes.\n+\t* tree-sra.c: (sra_init_cache): New function.\n+\t(sra_insert_before, sra_insert_after) Made public.\n+\t(type_can_be_decomposed_p): Renamed from type_can_be_decomposed_p\n+\tand made public.\n+\t* tree-ssa-alias.c (dump_alias_stats): Added stats for type based\n+\taliasing. (may_alias_p): Added code to use type escape analysis to\n+\timprove alias sets.\n+\t* tree-ssa-operands.c (add_call_clobber_ops): Added parameter and\n+\tcode to prune clobbers of static variables based on information\n+\tproduced in ipa-reference pass.  Changed call clobbering so that\n+\tstatics are not marked as clobbered if the call does not clobber\n+\tthem.\n+\n+\n 2005-07-16  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* tree-ssa-structalias.c (need_to_solve): Need to check for preds,"}]}