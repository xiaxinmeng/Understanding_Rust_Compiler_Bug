{"sha": "33a3539d4363baf4e94ebaac6fded4c6fddfd50f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNhMzUzOWQ0MzYzYmFmNGU5NGViYWFjNmZkZWQ0YzZmZGRmZDUwZg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-01-13T23:54:09Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-01-13T23:54:09Z"}, "message": "Add 64 bit support.\n\nFrom-SVN: r6394", "tree": {"sha": "57d639f8ccb24c31f77bed4bb8991f58da433df2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57d639f8ccb24c31f77bed4bb8991f58da433df2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33a3539d4363baf4e94ebaac6fded4c6fddfd50f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33a3539d4363baf4e94ebaac6fded4c6fddfd50f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33a3539d4363baf4e94ebaac6fded4c6fddfd50f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33a3539d4363baf4e94ebaac6fded4c6fddfd50f/comments", "author": null, "committer": null, "parents": [{"sha": "bb621ad7c4b272baae2a803fa2daf2d48ec6fcd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb621ad7c4b272baae2a803fa2daf2d48ec6fcd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb621ad7c4b272baae2a803fa2daf2d48ec6fcd8"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "3ea04af47c7e264f6cb00a4c400021850908cc43", "filename": "gcc/ginclude/va-mips.h", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33a3539d4363baf4e94ebaac6fded4c6fddfd50f/gcc%2Fginclude%2Fva-mips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33a3539d4363baf4e94ebaac6fded4c6fddfd50f/gcc%2Fginclude%2Fva-mips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-mips.h?ref=33a3539d4363baf4e94ebaac6fded4c6fddfd50f", "patch": "@@ -29,16 +29,30 @@ typedef char * __gnuc_va_list;\n #define __va_ellipsis\n #endif\n \n+#if __mips==3\n+#define __va_rounded_size(__TYPE)  \\\n+  (((sizeof (__TYPE) + 8 - 1) / 8) * 8)\n+#else\n #define __va_rounded_size(__TYPE)  \\\n   (((sizeof (__TYPE) + sizeof (int) - 1) / sizeof (int)) * sizeof (int))\n+#endif\n \n #ifdef _STDARG_H\n+#if __mips==3\n+#define va_start(__AP, __LASTARG)\t(__AP = __builtin_next_arg ())\n+#else\n #define va_start(__AP, __LASTARG) \t\t\t\t\t\t\\\n  (__AP = ((char *) &(__LASTARG) + __va_rounded_size (__LASTARG)))\n+#endif\n \n #else\n #define va_alist  __builtin_va_alist\n+#if __mips==3\n+/* This assumes that `long long int' is always a 64 bit type.  */\n+#define va_dcl    long long int __builtin_va_alist; __va_ellipsis\n+#else\n #define va_dcl    int __builtin_va_alist; __va_ellipsis\n+#endif\n #define va_start(__AP)  __AP = (char *) &__builtin_va_alist\n #endif\n \n@@ -49,6 +63,11 @@ void va_end (__gnuc_va_list);\t\t/* Defined in libgcc.a */\n \n /* We cast to void * and then to TYPE * because this avoids\n    a warning about increasing the alignment requirement.  */\n+#if __mips==3\n+#define va_arg(__AP, __type)                                    \\\n+  ((__type *) (void *) (__AP = (char *) ((((int)__AP + 8 - 1) & -8)     \\\n+                     + __va_rounded_size (__type))))[-1]\n+#else\n #ifdef __MIPSEB__\n /* For big-endian machines.  */\n #define va_arg(__AP, __type)\t\t\t\t\t\\\n@@ -65,5 +84,6 @@ void va_end (__gnuc_va_list);\t\t/* Defined in libgcc.a */\n \t\t\t\t\t  : ((int)__AP + 4 - 1) & -4)\t    \\\n \t\t\t\t\t + __va_rounded_size(__type))))[-1]\n #endif\n+#endif\n \n #endif /* defined (_STDARG_H) || defined (_VARARGS_H) */"}]}