{"sha": "3054eeed1ddb62a0fd7fcef6bee287c7cbe4b121", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA1NGVlZWQxZGRiNjJhMGZkN2ZjZWY2YmVlMjg3YzdjYmU0YjEyMQ==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2001-10-04T08:38:41Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2001-10-04T08:38:41Z"}, "message": "mips.c (init_cumulative_args): Remember to set cum->prototype.\n\n2001-10-04  Eric Christopher  <echristo@redhat.com>\n\n\t* config/mips/mips.c (init_cumulative_args): Remember to set\n\tcum->prototype.\n\t* config.gcc: Redo linux configuration. Add target_cpu_default\n\tof soft-float to all mipsisa32 combinations and tx39.\n\t* config/mips/linux.h: Remove include of mips.h.\n\nFrom-SVN: r46008", "tree": {"sha": "dc37bdc6e66629397f75eb9dc11d41a49c012e61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc37bdc6e66629397f75eb9dc11d41a49c012e61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3054eeed1ddb62a0fd7fcef6bee287c7cbe4b121", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3054eeed1ddb62a0fd7fcef6bee287c7cbe4b121", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3054eeed1ddb62a0fd7fcef6bee287c7cbe4b121", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3054eeed1ddb62a0fd7fcef6bee287c7cbe4b121/comments", "author": null, "committer": null, "parents": [{"sha": "3bdeffacad9e07fe3a0f6864cbfb065c92d3168d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bdeffacad9e07fe3a0f6864cbfb065c92d3168d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bdeffacad9e07fe3a0f6864cbfb065c92d3168d"}], "stats": {"total": 37, "additions": 25, "deletions": 12}, "files": [{"sha": "affc203689c1a996ba4f24410832e57fd42832d9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3054eeed1ddb62a0fd7fcef6bee287c7cbe4b121/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3054eeed1ddb62a0fd7fcef6bee287c7cbe4b121/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3054eeed1ddb62a0fd7fcef6bee287c7cbe4b121", "patch": "@@ -1,3 +1,11 @@\n+2001-10-04  Eric Christopher  <echristo@redhat.com>\n+\n+\t* config/mips/mips.c (init_cumulative_args): Remember to set\n+\tcum->prototype.\n+\t* config.gcc: Redo linux configuration. Add target_cpu_default\n+\tof soft-float to all mipsisa32 combinations and tx39.\n+\t* config/mips/linux.h: Remove include of mips.h.\n+\n 2001-10-03  Loren J. Rittle  <ljrittle@acm.org>\n \n \t* Makefile.in (STAGE2_FLAGS_TO_PASS): Propagate HOST_CFLAGS,\n@@ -101,7 +109,7 @@ Tue Oct  2 12:46:01 CEST 2001  Bo Thorsen     <bo@suse.co.uk>,\n Tue Oct  2 12:46:01 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.c (legitimize_pic_address): Add missing bits of 64bit support.\n-\t(ix86_expand_int_movcc): Optimize DImode conditional moves with \n+\t(ix86_expand_int_movcc): Optimize DImode conditional moves with\n \tconstants on x86_64.\n \t(ix86_attr_length_immediate_default): Support MODE_DI.\n \t* i386.md (fixdi splitter): Add missing \"&& 1\" in splitter\n@@ -264,7 +272,7 @@ Mon Oct  1 06:43:41 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \t(MEM_DECL, MEM_OFFSET, MEM_SIZE, MEM_ALIGN): New macros.\n \t(MEM_COPY_ATTRIBUTES): Copy MEM_ATTRS.\n \t(set_mem_alias_set): Delete decl from here.\n-\t\n+\n \t* alias.c (set_mem_alias_set): Delete from here.\n \t* emit-rtl.c (mem_attrs_htab): New variable.\n \t(rtx_htab_mark, rtx_htab_mark_1): Deleted.\n@@ -455,7 +463,7 @@ Sat Sep 29 15:08:16 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \tmmx_pshufw, umaxv8qi3, smaxv4hi3, uminv8qi3, sminv4hi3, sfence,\n \tsfence_insn, prefetch): Make these available if TARGET_SSE or\n \tTARGET_3DNOW_A.\n-\t\n+\n Fri Sep 28 19:18:40 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* i386-protos.h (ix86_setup_incoming_varargs, ix86_va_arg,\n@@ -471,7 +479,7 @@ Fri Sep 28 19:18:40 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* cpplex.c (new_buff, _cpp_get_buff, _cpp_extend_buff):\n \tUse size_t everywhere, make definitions consistent with\n-\tprototypes.\t\n+\tprototypes.\n \n Fri Sep 28 14:59:34 CEST 2001  Jan Hubicka  <jh@suse.cz>\n "}, {"sha": "d4b6f86b809f853f4f2f4cc2fab41bedf5fdb437", "filename": "gcc/config.gcc", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3054eeed1ddb62a0fd7fcef6bee287c7cbe4b121/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3054eeed1ddb62a0fd7fcef6bee287c7cbe4b121/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=3054eeed1ddb62a0fd7fcef6bee287c7cbe4b121", "patch": "@@ -2228,13 +2228,17 @@ mipsel-*-netbsd* | mips-dec-netbsd*)    # Decstation running NetBSD\n \t;;\n mips*-*-linux*)\t\t\t\t# Linux MIPS, either endian.\n \txmake_file=x-linux\n-\ttm_file=\"linux.h mips/linux.h\"\n \tcase $machine in\n \t\tmipsisa32el-*)\n-\t\t\ttm_file=\"mips/little.h $tm_file mips/isa32-linux.h\";;\n+\t\t\ttm_file=\"elfos.h mips/elfl.h mips/linux.h mips/isa32-linux.h\"\n+\t\t\ttarget_cpu_default=\"MASK_SOFT_FLOAT\"\n+\t\t\t;;\n                 mipsisa32-*)\n-\t\t\ttm_file=\"$tm_file mips/isa32-linux.h\";;\n-\t       \tmips*el-*)  tm_file=\"mips/little.h $tm_file\" ;;\n+\t\t\ttm_file=\"elfos.h mips/elf.h mips/linux.h mips/isa32-linux.h\"\n+\t\t\ttarget_cpu_default=\"MASK_SOFT_FLOAT\"\n+\t\t\t;;\n+\t       \tmips*el-*)  tm_file=\"elfos.h mips/elfl.h mips/linux.h\" ;;\n+\t\t*) tm_file=\"elfos.h mips/elf.h mips/linux.h\"\n \tesac\n \ttmake_file=\"t-slibgcc-elf-ver t-linux\"\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n@@ -2456,6 +2460,7 @@ mips-*-ecoff*)\n mipsisa32-*-elf*)\n \ttm_file=\"mips/isa3264.h mips/abi64.h\"\n \ttmake_file=mips/t-isa3264\n+\ttarget_cpu_default=\"MASK_SOFT_FLOAT\"\n \t;;\n mipsel-*-elf*)\n \ttm_file=\"mips/elfl.h\"\n@@ -2498,6 +2503,7 @@ mips*-*-rtems*)\n mipstx39el-*-elf*)\n \ttm_file=\"mips/r3900.h mips/elfl.h mips/abi64.h\"\n \ttmake_file=mips/t-r3900\n+\ttarget_cpu_default=\"MASK_SOFT_FLOAT\"\n \t;;\n mipstx39-*-elf*)\n \ttm_file=\"mips/r3900.h mips/elf.h mips/abi64.h\""}, {"sha": "91f15102725386188210a72e26b221a740b5059c", "filename": "gcc/config/mips/linux.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3054eeed1ddb62a0fd7fcef6bee287c7cbe4b121/gcc%2Fconfig%2Fmips%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3054eeed1ddb62a0fd7fcef6bee287c7cbe4b121/gcc%2Fconfig%2Fmips%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux.h?ref=3054eeed1ddb62a0fd7fcef6bee287c7cbe4b121", "patch": "@@ -23,8 +23,6 @@ Boston, MA 02111-1307, USA.  */\n /* US Software GOFAST library support.  */\n #define INIT_SUBTARGET_OPTABS INIT_GOFAST_OPTABS\n \n-#include \"mips/mips.h\"\n-\n #undef WCHAR_TYPE\n #define WCHAR_TYPE \"int\"\n \n@@ -98,7 +96,7 @@ do {\t\t\t\t\t\t\t\t\\\n    given time.  */\n #undef EXTRA_SECTIONS\n #define EXTRA_SECTIONS in_sdata, in_sbss, in_rdata\n- \n+\n #undef EXTRA_SECTION_FUNCTIONS\n #define EXTRA_SECTION_FUNCTIONS                                         \\\n   SECTION_FUNCTION_TEMPLATE(sdata_section, in_sdata, SDATA_SECTION_ASM_OP) \\"}, {"sha": "d88b61d8a7fdb6344cc382af255939cd3012a06f", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3054eeed1ddb62a0fd7fcef6bee287c7cbe4b121/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3054eeed1ddb62a0fd7fcef6bee287c7cbe4b121/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=3054eeed1ddb62a0fd7fcef6bee287c7cbe4b121", "patch": "@@ -3854,6 +3854,7 @@ init_cumulative_args (cum, fntype, libname)\n     }\n \n   *cum = zero_cum;\n+  cum->prototype = (fntype && TYPE_ARG_TYPES (fntype));\n \n   /* Determine if this function has variable arguments.  This is\n      indicated by the last argument being 'void_type_mode' if there\n@@ -6650,7 +6651,7 @@ mips_emit_frame_related_store (mem, reg, offset)\n     }\n   else\n     dwarf_expr = mips_frame_set (GET_MODE (reg), REGNO (reg), offset);\n-      \n+\n   mips_annotate_frame_insn (emit_move_insn (mem, reg), dwarf_expr);\n }\n "}]}