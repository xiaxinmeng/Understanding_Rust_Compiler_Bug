{"sha": "70a841609455d827919e6384fa466a6658e5a23d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBhODQxNjA5NDU1ZDgyNzkxOWU2Mzg0ZmE0NjZhNjY1OGU1YTIzZA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2003-12-22T20:09:23Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-12-22T20:09:23Z"}, "message": "5.cc: Don't use stdc++.h.gch.\n\n\n2003-12-22  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* testsuite/27_io/objects/char/5.cc: Don't use stdc++.h.gch.\n\t* testsuite/27_io/objects/wchar_t/5.cc: Same.\n\t* docs/html/test.html: Add docs for constructing test files that\n\tdon't use stdc++.h.gch.\n\t* scripts/testsuite_flags.in (PCHFLAGS): Move to --cxxpchflags.\n\t* testsuite/libstdc++-dg/normal.exp: Compute DEFAULT_CXXFLAGS\n\tdifferently.\n\n\t* include/bits/ios_base.h (ios_base::Init::_S_initialized): Remove.\n\t* src/ios_init.cc: Same.\n\t* config/linker-map.gnu: Same.\n\t* testsuite/27_io/ios_base/cons/copy_neg.cc: Adjust line numbers.\n\t* testsuite/27_io/ios_base/cons/assign_neg.cc: Same.\n\nFrom-SVN: r74946", "tree": {"sha": "48ab9c30978737c10e3bfabd704679a083c150a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48ab9c30978737c10e3bfabd704679a083c150a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70a841609455d827919e6384fa466a6658e5a23d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70a841609455d827919e6384fa466a6658e5a23d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70a841609455d827919e6384fa466a6658e5a23d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70a841609455d827919e6384fa466a6658e5a23d/comments", "author": null, "committer": null, "parents": [{"sha": "ff954f39fbeef326d649a13e40b0d3184118e135", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff954f39fbeef326d649a13e40b0d3184118e135", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff954f39fbeef326d649a13e40b0d3184118e135"}], "stats": {"total": 83, "additions": 57, "deletions": 26}, "files": [{"sha": "06deeb102de9c14cb24acd0568e1fad340c6fe69", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a841609455d827919e6384fa466a6658e5a23d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a841609455d827919e6384fa466a6658e5a23d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=70a841609455d827919e6384fa466a6658e5a23d", "patch": "@@ -1,3 +1,19 @@\n+2003-12-22  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* testsuite/27_io/objects/char/5.cc: Don't use stdc++.h.gch.\n+\t* testsuite/27_io/objects/wchar_t/5.cc: Same.\n+\t* docs/html/test.html: Add docs for constructing test files that\n+\tdon't use stdc++.h.gch.\n+\t* scripts/testsuite_flags.in (PCHFLAGS): Move to --cxxpchflags.\t\n+\t* testsuite/libstdc++-dg/normal.exp: Compute DEFAULT_CXXFLAGS\n+\tdifferently.\n+\n+\t* include/bits/ios_base.h (ios_base::Init::_S_initialized): Remove.\n+\t* src/ios_init.cc: Same.\n+\t* config/linker-map.gnu: Same.\n+\t* testsuite/27_io/ios_base/cons/copy_neg.cc: Adjust line numbers.\n+\t* testsuite/27_io/ios_base/cons/assign_neg.cc: Same.\n+\t\t\n 2003-12-22  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR libstdc++/13462"}, {"sha": "7931953705811d4f9b7074bece71b8b937dac199", "filename": "libstdc++-v3/config/linker-map.gnu", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a841609455d827919e6384fa466a6658e5a23d/libstdc%2B%2B-v3%2Fconfig%2Flinker-map.gnu", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a841609455d827919e6384fa466a6658e5a23d/libstdc%2B%2B-v3%2Fconfig%2Flinker-map.gnu", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flinker-map.gnu?ref=70a841609455d827919e6384fa466a6658e5a23d", "patch": "@@ -33,7 +33,6 @@ GLIBCXX_3.4 {\n       std::ios_base::_M_grow_words*;\n       std::ios_base::_M_init*;\n       std::ios_base::Init::[A-Za-z]*;\n-      std::ios_base::Init::_S_initialized*;\n       std::ios_base::[J-Za-z]*;\n       std::i[p-z]*;\n       std::[A-Zj-k]*;"}, {"sha": "8c761113eb6ba453c3c9f034f9ba9cb4625123dc", "filename": "libstdc++-v3/docs/html/test.html", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a841609455d827919e6384fa466a6658e5a23d/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ftest.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a841609455d827919e6384fa466a6658e5a23d/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ftest.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ftest.html?ref=70a841609455d827919e6384fa466a6658e5a23d", "patch": "@@ -392,6 +392,12 @@ <h2><a name=\"new\">How to write a new test case</a></h2>\n Example 4: Testing for compilation errors on line 41\n // { dg-do compile }\n // { dg-error \"no match for\" \"\" { target *-*-* } 41 }\n+\n+Example 5: Testing with special command line settings, or without the\n+use of pre-compiled headers, in particular the stdc++.h.gch file. Any\n+options here will override the DEFAULT_CXXFLAGS set up in the\n+normal.exp file.\n+// { dg-options \"-O0\" { target *-*-* } }\n </pre>\n \n    <p>"}, {"sha": "587bda4b0928d0c884c3f09e655f01d08548bbdb", "filename": "libstdc++-v3/include/bits/ios_base.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a841609455d827919e6384fa466a6658e5a23d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a841609455d827919e6384fa466a6658e5a23d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h?ref=70a841609455d827919e6384fa466a6658e5a23d", "patch": "@@ -492,11 +492,6 @@ namespace std\n       Init();\n       ~Init();\n       \n-      // NB: Allows debugger applications use of the standard streams\n-      // from operator new. \n-      static bool\n-      _S_initialized();\n-\n     private:\n       static _Atomic_word\t_S_refcount;\n       static bool\t\t_S_synced_with_stdio;"}, {"sha": "f66082e2fae97240953e8112aa7aa502fd21518a", "filename": "libstdc++-v3/scripts/testsuite_flags.in", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a841609455d827919e6384fa466a6658e5a23d/libstdc%2B%2B-v3%2Fscripts%2Ftestsuite_flags.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a841609455d827919e6384fa466a6658e5a23d/libstdc%2B%2B-v3%2Fscripts%2Ftestsuite_flags.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fscripts%2Ftestsuite_flags.in?ref=70a841609455d827919e6384fa466a6658e5a23d", "patch": "@@ -17,6 +17,7 @@ Usage:\n \t\t    --build-cxx\n \t\t    --install-cxx\n \t\t    --cxxflags\n+\t\t    --cxxpchflags\n EOF\n }\n \n@@ -41,8 +42,7 @@ case ${query} in\n       echo ${CXX}\n       ;;\n     --build-cxx)\n-      PCHFLAGS=\"@glibcxx_PCHFLAGS@\"\n-      CXX_build=\"@CXX@ ${PCHFLAGS}\"\n+      CXX_build=\"@CXX@\"\n       CXX=`echo \"$CXX_build\" | sed 's,gcc/xgcc ,gcc/g++ ,'`\n       echo ${CXX}\n       ;;\n@@ -52,8 +52,12 @@ case ${query} in\n  \t\t      @EXTRA_CXX_FLAGS@ -DLOCALEDIR=\"@glibcxx_localedir@\" '\n       echo ${CXXFLAGS_save} ${CXXFLAGS_config}\n       ;;\n+    --cxxpchflags)\n+      PCHFLAGS=\"@glibcxx_PCHFLAGS@\"\n+      echo ${PCHFLAGS}\n+      ;;\n     *)\n-      print_usage\n+      print_usagex\n       ;;\n esac\n "}, {"sha": "b40202553e53a4fd6795fec70df5f68068891476", "filename": "libstdc++-v3/src/ios_init.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a841609455d827919e6384fa466a6658e5a23d/libstdc%2B%2B-v3%2Fsrc%2Fios_init.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a841609455d827919e6384fa466a6658e5a23d/libstdc%2B%2B-v3%2Fsrc%2Fios_init.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fios_init.cc?ref=70a841609455d827919e6384fa466a6658e5a23d", "patch": "@@ -142,12 +142,6 @@ namespace std\n       }\n   } \n \n-  bool\n-  ios_base::Init::_S_initialized()\n-  {\n-    return _S_refcount > 0;\n-  }\n-\n   bool \n   ios_base::sync_with_stdio(bool __sync)\n   { "}, {"sha": "6e80b878fd5d5187f153dd61c8607d40984de93a", "filename": "libstdc++-v3/testsuite/27_io/ios_base/cons/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a841609455d827919e6384fa466a6658e5a23d/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a841609455d827919e6384fa466a6658e5a23d/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fassign_neg.cc?ref=70a841609455d827919e6384fa466a6658e5a23d", "patch": "@@ -41,5 +41,5 @@ void test01()\n   io1 = io2;\n }\n // { dg-error \"within this context\" \"\" { target *-*-* } 41 } \n-// { dg-error \"is private\" \"\" { target *-*-* } 745 } \n+// { dg-error \"is private\" \"\" { target *-*-* } 740 } \n // { dg-error \"operator=\" \"\" { target *-*-* } 0 } "}, {"sha": "b4cf359d3ac0a57e5ce1516bcac466ce6231fed6", "filename": "libstdc++-v3/testsuite/27_io/ios_base/cons/copy_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a841609455d827919e6384fa466a6658e5a23d/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a841609455d827919e6384fa466a6658e5a23d/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fcopy_neg.cc?ref=70a841609455d827919e6384fa466a6658e5a23d", "patch": "@@ -41,5 +41,5 @@ void test02()\n   test_base io2 = io1; \n }\n // { dg-error \"within this context\" \"\" { target *-*-* } 41 } \n-// { dg-error \"is private\" \"\" { target *-*-* } 742 } \n+// { dg-error \"is private\" \"\" { target *-*-* } 737 } \n // { dg-error \"copy constructor\" \"\" { target *-*-* } 0 } "}, {"sha": "acf8d6d3f0a0261d6429ee6e64e7b9d340b847f6", "filename": "libstdc++-v3/testsuite/27_io/objects/char/5.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a841609455d827919e6384fa466a6658e5a23d/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a841609455d827919e6384fa466a6658e5a23d/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F5.cc?ref=70a841609455d827919e6384fa466a6658e5a23d", "patch": "@@ -1,3 +1,4 @@\n+// { dg-options \"-D_GLIBCXX_ASSERT\" { target *-*-* } }\n // 2003-04-26 Petur Runolfsson  <peturr02@ru.is>\n \n // Copyright (C) 2003 Free Software Foundation"}, {"sha": "ed6f317325644b44b8fd4ac0c60fc88e09dac8f2", "filename": "libstdc++-v3/testsuite/27_io/objects/wchar_t/5.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a841609455d827919e6384fa466a6658e5a23d/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fwchar_t%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a841609455d827919e6384fa466a6658e5a23d/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fwchar_t%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fwchar_t%2F5.cc?ref=70a841609455d827919e6384fa466a6658e5a23d", "patch": "@@ -1,3 +1,4 @@\n+// { dg-options \"-D_GLIBCXX_ASSERT\" { target *-*-* } }\n // 2003-05-01 Petur Runolfsson  <peturr02@ru.is>\n \n // Copyright (C) 2003 Free Software Foundation"}, {"sha": "a5665438aa523084972c4d26827905a94da67c55", "filename": "libstdc++-v3/testsuite/libstdc++-dg/normal.exp", "status": "modified", "additions": 24, "deletions": 9, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a841609455d827919e6384fa466a6658e5a23d/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-dg%2Fnormal.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a841609455d827919e6384fa466a6658e5a23d/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-dg%2Fnormal.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-dg%2Fnormal.exp?ref=70a841609455d827919e6384fa466a6658e5a23d", "patch": "@@ -16,21 +16,36 @@\n \n # libstdc++-v3 testsuite that uses the 'dg.exp' driver.\n \n-global target_triplet\n+# Initialization.\n+dg-init\n+v3-init\n \n-# If a testcase doesn't have special options, use these.\n+# If a libstdc++ test file doesn't have special options, use DEFAULT_CXXFLAGS.\n+# Use this variable if the behavior\n+# 1) only applies to libstdc++ testing\n+# 2) might need to be negated \n+# In particular, some tests have to be run without precompiled\n+# headers, or without assertions.\n+global blddir\n+global target_triplet\n global DEFAULT_CXXFLAGS\n if ![info exists DEFAULT_CXXFLAGS] then {\n-    if { [string match \"powerpc-*-darwin*\" $target_triplet] } {\n-\tset DEFAULT_CXXFLAGS \"-D_GLIBCXX_ASSERT -multiply_defined suppress\"\n+    set DEFAULT_CXXFLAGS \"-D_GLIBCXX_ASSERT\"\n+\n+    # Set up includes for stdc++.h.gch, the precompiled header file.\n+    set flags_file \"${blddir}/scripts/testsuite_flags\"\n+    if { [file exists $flags_file] } {\n+\tset cxxpchflags [exec sh $flags_file --cxxpchflags]\n     } else {\n-\tset DEFAULT_CXXFLAGS \"-D_GLIBCXX_ASSERT\"\n+\tset cxxpchflags \"\"\n     }\n-}\n+    append DEFAULT_CXXFLAGS \" ${cxxpchflags}\"\n \n-# Initialization.\n-dg-init\n-v3-init\n+    # Host specific goo here.\n+    if { [string match \"powerpc-*-darwin*\" $target_triplet] } {\n+\tappend DEFAULT_CXXFLAGS \" -multiply_defined suppress\"\n+    } \n+}\n \n # Main loop.\n dg-runtest [v3-list-tests testsuite_files] \"\" $DEFAULT_CXXFLAGS"}]}