{"sha": "ef482a861f1c3d4e1834e0d17d466955a022b52d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY0ODJhODYxZjFjM2Q0ZTE4MzRlMGQxN2Q0NjY5NTVhMDIyYjUyZA==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.ch", "date": "2004-04-14T18:50:53Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2004-04-14T18:50:53Z"}, "message": "bb-reorder.c (fix_crossing_conditional_branches): Adjust the previous fix to check HAVE_return at runtime too.\n\n2004-04-14  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* bb-reorder.c (fix_crossing_conditional_branches): Adjust the\n\tprevious fix to check HAVE_return at runtime too.\n\nFrom-SVN: r80685", "tree": {"sha": "a9922d959dedca3a25fee194af629c1ebfb331be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9922d959dedca3a25fee194af629c1ebfb331be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef482a861f1c3d4e1834e0d17d466955a022b52d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef482a861f1c3d4e1834e0d17d466955a022b52d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef482a861f1c3d4e1834e0d17d466955a022b52d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef482a861f1c3d4e1834e0d17d466955a022b52d/comments", "author": null, "committer": null, "parents": [{"sha": "d7afe286b32d866128d542bd8a733c4f21bd2206", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7afe286b32d866128d542bd8a733c4f21bd2206", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7afe286b32d866128d542bd8a733c4f21bd2206"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "644f2a3ba495fc9f60b349d794a09ebb5430419b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef482a861f1c3d4e1834e0d17d466955a022b52d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef482a861f1c3d4e1834e0d17d466955a022b52d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ef482a861f1c3d4e1834e0d17d466955a022b52d", "patch": "@@ -1,3 +1,8 @@\n+2004-04-14  Andreas Tobler  <a.tobler@schweiz.ch>\n+\n+\t* bb-reorder.c (fix_crossing_conditional_branches): Adjust the\n+\tprevious fix to check HAVE_return at runtime too.\n+\n 2004-04-14  Nick Clifton  <nickc@redhat.com>\n \n \t* config/arm/arm.c (arm_override_options): If the user has not"}, {"sha": "2d7280788894f7c182e92f577890896c38a6acf8", "filename": "gcc/bb-reorder.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef482a861f1c3d4e1834e0d17d466955a022b52d/gcc%2Fbb-reorder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef482a861f1c3d4e1834e0d17d466955a022b52d/gcc%2Fbb-reorder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.c?ref=ef482a861f1c3d4e1834e0d17d466955a022b52d", "patch": "@@ -78,6 +78,7 @@\n #include \"fibheap.h\"\n #include \"target.h\"\n #include \"function.h\"\n+#include \"tm_p.h\"\n #include \"obstack.h\"\n #include \"expr.h\"\n #include \"regs.h\"\n@@ -87,6 +88,15 @@\n    the .o file there will be an extra round.*/\n #define N_ROUNDS 5\n \n+/* Stubs in case we don't have a return insn.\n+   We have to check at runtime too, not only compiletime.  */  \n+\n+#ifndef HAVE_return\n+#define HAVE_return 0\n+#define gen_return() NULL_RTX\n+#endif\n+\n+\n /* Branch thresholds in thousandths (per mille) of the REG_BR_PROB_BASE.  */\n static int branch_threshold[N_ROUNDS] = {400, 200, 100, 0, 0};\n \n@@ -1684,11 +1694,10 @@ fix_crossing_conditional_branches (void)\n \t\t\t\t\t\t       (old_label), \n \t\t\t\t\t\t       BB_END (new_bb));\n \t\t    }\n-#ifdef HAVE_return\n-\t\t  else if (GET_CODE (old_label) == RETURN)\n+\t\t  else if (HAVE_return\n+\t\t\t   && GET_CODE (old_label) == RETURN)\n \t\t    new_jump = emit_jump_insn_after (gen_return (), \n \t\t\t\t\t\t     BB_END (new_bb));\n-#endif\n \t\t  else\n \t\t    abort ();\n \t\t  "}]}