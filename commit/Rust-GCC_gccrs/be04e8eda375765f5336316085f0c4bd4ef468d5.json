{"sha": "be04e8eda375765f5336316085f0c4bd4ef468d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUwNGU4ZWRhMzc1NzY1ZjUzMzYzMTYwODVmMGM0YmQ0ZWY0NjhkNQ==", "commit": {"author": {"name": "Patrick Bernardi", "email": "bernardi@adacore.com", "date": "2019-07-11T08:03:04Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-11T08:03:04Z"}, "message": "[Ada] Minimal binder\n\nThe new minimal binder option (\"-minimal\") suppresses the generation of\nbinder objects that are not strictly required for program operation.\nThis option is suitable for space constrained applications and comes\nwith the restriction that programs can no longer be debugged using GDB.\n\n2019-07-11  Patrick Bernardi  <bernardi@adacore.com>\n\ngcc/ada/\n\n\t* bindgen.adb (Gen_Main): Do not generate a reference to\n\tAda_Main_Program_Name when the Minimal_Binder flag is set.\n\t(Gen_Output_File_Ada): Do not output GNAT_Version and\n\tAda_Main_Program_Name info if Minimal_Binder flag is set.\n\t* bindusg.adb: Add documentation for new -minimal switch.\n\t* gnatbind.adb (Scan_Bind_Arg): Scan -minimal switch.\n\t* opt.ads: Add new global flag Minimal_Binder to indicate if the\n\tbinder should not produce global variables.\n\t* doc/gnat_ugn/building_executable_programs_with_gnat.rst:\n\tUpdate documentation with new binder -minimal switch.\n\t* gnat_ugn.texi: Regenerate.\n\nFrom-SVN: r273401", "tree": {"sha": "87e4c592f29537b2b43154e1c074b8e4cac0c289", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87e4c592f29537b2b43154e1c074b8e4cac0c289"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be04e8eda375765f5336316085f0c4bd4ef468d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be04e8eda375765f5336316085f0c4bd4ef468d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be04e8eda375765f5336316085f0c4bd4ef468d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be04e8eda375765f5336316085f0c4bd4ef468d5/comments", "author": {"login": "burratoo", "id": 23646118, "node_id": "MDQ6VXNlcjIzNjQ2MTE4", "avatar_url": "https://avatars.githubusercontent.com/u/23646118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/burratoo", "html_url": "https://github.com/burratoo", "followers_url": "https://api.github.com/users/burratoo/followers", "following_url": "https://api.github.com/users/burratoo/following{/other_user}", "gists_url": "https://api.github.com/users/burratoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/burratoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/burratoo/subscriptions", "organizations_url": "https://api.github.com/users/burratoo/orgs", "repos_url": "https://api.github.com/users/burratoo/repos", "events_url": "https://api.github.com/users/burratoo/events{/privacy}", "received_events_url": "https://api.github.com/users/burratoo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "49d7a324591251967dd2ad759e903e393795310e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49d7a324591251967dd2ad759e903e393795310e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49d7a324591251967dd2ad759e903e393795310e"}], "stats": {"total": 103, "additions": 86, "deletions": 17}, "files": [{"sha": "472a6fdcd2df2837a724ecc6fb2eeb0fd3df4049", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be04e8eda375765f5336316085f0c4bd4ef468d5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be04e8eda375765f5336316085f0c4bd4ef468d5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=be04e8eda375765f5336316085f0c4bd4ef468d5", "patch": "@@ -1,3 +1,17 @@\n+2019-07-11  Patrick Bernardi  <bernardi@adacore.com>\n+\n+\t* bindgen.adb (Gen_Main): Do not generate a reference to\n+\tAda_Main_Program_Name when the Minimal_Binder flag is set.\n+\t(Gen_Output_File_Ada): Do not output GNAT_Version and\n+\tAda_Main_Program_Name info if Minimal_Binder flag is set.\n+\t* bindusg.adb: Add documentation for new -minimal switch.\n+\t* gnatbind.adb (Scan_Bind_Arg): Scan -minimal switch.\n+\t* opt.ads: Add new global flag Minimal_Binder to indicate if the\n+\tbinder should not produce global variables.\n+\t* doc/gnat_ugn/building_executable_programs_with_gnat.rst:\n+\tUpdate documentation with new binder -minimal switch.\n+\t* gnat_ugn.texi: Regenerate.\n+\n 2019-07-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* Makefile.rtl: Add warning note about compilation flags and"}, {"sha": "8ea8a6b94da024c04a7a7984e9afde02c235cc20", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 20, "deletions": 16, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be04e8eda375765f5336316085f0c4bd4ef468d5/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be04e8eda375765f5336316085f0c4bd4ef468d5/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=be04e8eda375765f5336316085f0c4bd4ef468d5", "patch": "@@ -1810,9 +1810,11 @@ package body Bindgen is\n       --  with a pragma Volatile in order to tell the compiler to preserve\n       --  this variable at any level of optimization.\n \n-      --  CodePeer and CCG do not need this extra code on the other hand\n+      --  CodePeer and CCG do not need this extra code. The code is also not\n+      --  needed if the binder is in \"Minimal Binder\" mode.\n \n       if Bind_Main_Program\n+        and then not Minimal_Binder\n         and then not CodePeer_Mode\n         and then not Generate_C_Code\n       then\n@@ -2354,25 +2356,27 @@ package body Bindgen is\n          --  program uses two Ada libraries). Also zero terminate the string\n          --  so that its end can be found reliably at run time.\n \n-         WBI (\"\");\n-         WBI (\"   GNAT_Version : constant String :=\");\n-         WBI (\"                    \"\"\" & Ver_Prefix &\n-                                   Gnat_Version_String &\n-                                   \"\"\" & ASCII.NUL;\");\n-         WBI (\"   pragma Export (C, GNAT_Version, \"\"__gnat_version\"\");\");\n+         if not Minimal_Binder then\n+            WBI (\"\");\n+            WBI (\"   GNAT_Version : constant String :=\");\n+            WBI (\"                    \"\"\" & Ver_Prefix &\n+                                      Gnat_Version_String &\n+                                      \"\"\" & ASCII.NUL;\");\n+            WBI (\"   pragma Export (C, GNAT_Version, \"\"__gnat_version\"\");\");\n \n-         WBI (\"\");\n-         Set_String (\"   Ada_Main_Program_Name : constant String := \"\"\");\n-         Get_Name_String (Units.Table (First_Unit_Entry).Uname);\n+            WBI (\"\");\n+            Set_String (\"   Ada_Main_Program_Name : constant String := \"\"\");\n+            Get_Name_String (Units.Table (First_Unit_Entry).Uname);\n \n-         Set_Main_Program_Name;\n-         Set_String (\"\"\" & ASCII.NUL;\");\n+            Set_Main_Program_Name;\n+            Set_String (\"\"\" & ASCII.NUL;\");\n \n-         Write_Statement_Buffer;\n+            Write_Statement_Buffer;\n \n-         WBI\n-           (\"   pragma Export (C, Ada_Main_Program_Name, \" &\n-            \"\"\"__gnat_ada_main_program_name\"\");\");\n+            WBI\n+              (\"   pragma Export (C, Ada_Main_Program_Name, \" &\n+               \"\"\"__gnat_ada_main_program_name\"\");\");\n+         end if;\n       end if;\n \n       WBI (\"\");"}, {"sha": "833174571c863fff1d1cc2c59b3230226df215b1", "filename": "gcc/ada/bindusg.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be04e8eda375765f5336316085f0c4bd4ef468d5/gcc%2Fada%2Fbindusg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be04e8eda375765f5336316085f0c4bd4ef468d5/gcc%2Fada%2Fbindusg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindusg.adb?ref=be04e8eda375765f5336316085f0c4bd4ef468d5", "patch": "@@ -178,6 +178,12 @@ package body Bindusg is\n         (\"  -mnnn     Limit number of detected errors/warnings to nnn \"\n          & \"(1-999999)\");\n \n+      --  Line for -minimal switch\n+\n+      Write_Line\n+        (\"  -minimal  Generate binder file suitable for space-constrained \"\n+         & \"applications\");\n+\n       --  Line for -M switch\n \n       Write_Line"}, {"sha": "2e867e2c0b27d581e615eead93b10704935f31b0", "filename": "gcc/ada/doc/gnat_ugn/building_executable_programs_with_gnat.rst", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be04e8eda375765f5336316085f0c4bd4ef468d5/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be04e8eda375765f5336316085f0c4bd4ef468d5/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst?ref=be04e8eda375765f5336316085f0c4bd4ef468d5", "patch": "@@ -6475,7 +6475,6 @@ be presented in subsequent sections.\n   Rename generated main program from main to xyz. This option is\n   supported on cross environments only.\n \n-\n   .. index:: -m  (gnatbind)\n \n :switch:`-m{n}`\n@@ -6488,6 +6487,16 @@ be presented in subsequent sections.\n   A value of zero means that no limit is enforced. The equal\n   sign is optional.\n \n+  .. index:: -minimal  (gnatbind)\n+\n+:switch:`-minimal`\n+  Generate a binder file suitable for space-constrained applications. When\n+  active, binder-generated objects not required for program operation are no\n+  longer generated. **Warning:** this option comes with the following\n+  limitations:\n+\n+  * Debugging will not work;\n+  * Programs using GNAT.Compiler_Version will not link.\n \n   .. index:: -n  (gnatbind)\n "}, {"sha": "e3d6a3a6acbba642215ff08d2ce763cc208466ea", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be04e8eda375765f5336316085f0c4bd4ef468d5/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be04e8eda375765f5336316085f0c4bd4ef468d5/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=be04e8eda375765f5336316085f0c4bd4ef468d5", "patch": "@@ -15892,6 +15892,25 @@ limit, then a message is output and the bind is abandoned.\n A value of zero means that no limit is enforced. The equal\n sign is optional.\n \n+@geindex -minimal (gnatbind)\n+\n+@item @code{-minimal}\n+\n+Generate a binder file suitable for space-constrained applications. When\n+active, binder-generated objects not required for program operation are no\n+longer generated. @strong{Warning:} this option comes with the following\n+limitations:\n+\n+\n+@itemize *\n+\n+@item \n+Debugging will not work;\n+\n+@item \n+Programs using GNAT.Compiler_Version will not link.\n+@end itemize\n+\n @geindex -n (gnatbind)\n \n @item @code{-n}"}, {"sha": "a3b6a7eb359a8f3063aba4bbd2ad66142b1810b4", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be04e8eda375765f5336316085f0c4bd4ef468d5/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be04e8eda375765f5336316085f0c4bd4ef468d5/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=be04e8eda375765f5336316085f0c4bd4ef468d5", "patch": "@@ -474,6 +474,17 @@ procedure Gnatbind is\n \n             Mapping_File := new String'(Argv (4 .. Argv'Last));\n \n+         --  -minimal\n+\n+         elsif Argv (2 .. Argv'Last) = \"minimal\" then\n+            if not Is_Cross_Compiler then\n+               Write_Line\n+                 (\"gnatbind: -minimal not expected to be used on native \" &\n+                  \"platforms\");\n+            end if;\n+\n+            Opt.Minimal_Binder := True;\n+\n          --  -Mname\n \n          elsif Argv'Length >= 3 and then Argv (2) = 'M' then"}, {"sha": "4d3e87edc80cc3c963f7db89ff6137f327dd84b7", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be04e8eda375765f5336316085f0c4bd4ef468d5/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be04e8eda375765f5336316085f0c4bd4ef468d5/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=be04e8eda375765f5336316085f0c4bd4ef468d5", "patch": "@@ -1120,6 +1120,12 @@ package Opt is\n    --  Maximum number of processes that should be spawned to carry out\n    --  compilations.\n \n+   Minimal_Binder : Boolean := False;\n+   --  GNATBIND\n+   --  Set to True to suppress the generation of objects by the binder that\n+   --  are not strictly required for a program to run. Intended for ZFP\n+   --  applications that have tight memory constraints.\n+\n    Minimal_Recompilation : Boolean := False;\n    --  GNATMAKE\n    --  Set to True if minimal recompilation mode requested"}]}