{"sha": "b5c525860dc6e776b1ae2593bb9ed1a1b4fd42d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjVjNTI1ODYwZGM2ZTc3NmIxYWUyNTkzYmI5ZWQxYTFiNGZkNDJkOA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-11T08:33:24Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-11T08:33:24Z"}, "message": "(fold):  Don't fold (A op B ? A : C) if A is IEEE\nfloating point, because A might be -0.0 or NaN.\n\nFrom-SVN: r1793", "tree": {"sha": "e20291866f3e71ef73bf79ae0d46ed317c3d0c1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e20291866f3e71ef73bf79ae0d46ed317c3d0c1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5c525860dc6e776b1ae2593bb9ed1a1b4fd42d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5c525860dc6e776b1ae2593bb9ed1a1b4fd42d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5c525860dc6e776b1ae2593bb9ed1a1b4fd42d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5c525860dc6e776b1ae2593bb9ed1a1b4fd42d8/comments", "author": null, "committer": null, "parents": [{"sha": "a6bf434760ab3c33eb6232cb5eba34ca6e4184ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6bf434760ab3c33eb6232cb5eba34ca6e4184ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6bf434760ab3c33eb6232cb5eba34ca6e4184ab"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "6a1297097adda149911053c70d8c4806eb9ec869", "filename": "gcc/fold-const.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5c525860dc6e776b1ae2593bb9ed1a1b4fd42d8/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5c525860dc6e776b1ae2593bb9ed1a1b4fd42d8/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=b5c525860dc6e776b1ae2593bb9ed1a1b4fd42d8", "patch": "@@ -4007,9 +4007,12 @@ fold (expr)\n \n       /* If we have A op B ? A : C, we may be able to convert this to a\n \t simpler expression, depending on the operation and the values\n-\t of B and C.  */\n+\t of B and C.  IEEE floating point prevents this though,\n+\t because A or B might be -0.0 or a NaN.  */\n \n       if (TREE_CODE_CLASS (TREE_CODE (arg0)) == '<'\n+\t  && (TARGET_FLOAT_FORMAT != IEEE_FLOAT_FORMAT\n+\t      || TREE_CODE (TREE_TYPE (TREE_OPERAND (arg0, 0))) != REAL_TYPE)\n \t  && operand_equal_for_comparison_p (TREE_OPERAND (arg0, 0),\n \t\t\t\t\t     arg1, TREE_OPERAND (arg0, 1)))\n \t{"}]}