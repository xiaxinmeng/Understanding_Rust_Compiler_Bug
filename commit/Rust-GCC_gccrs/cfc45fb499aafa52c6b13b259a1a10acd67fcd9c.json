{"sha": "cfc45fb499aafa52c6b13b259a1a10acd67fcd9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZjNDVmYjQ5OWFhZmE1MmM2YjEzYjI1OWExYTEwYWNkNjdmY2Q5Yw==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@codesourcery.com", "date": "2001-12-01T08:16:25Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2001-12-01T08:16:25Z"}, "message": "gencheck.c, [...]: Don't define xmalloc.\n\n\t* gencheck.c, gengenrtl.c: Don't define xmalloc.\n\t* gensupport.c: Don't define xstrdup, xcalloc, xrealloc,\n\txmalloc.\n\t* f/fini.c: Use xmalloc.\n\nFrom-SVN: r47506", "tree": {"sha": "3b43b1e5c740bd5316f62a3d857f18b639d3902c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b43b1e5c740bd5316f62a3d857f18b639d3902c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfc45fb499aafa52c6b13b259a1a10acd67fcd9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfc45fb499aafa52c6b13b259a1a10acd67fcd9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfc45fb499aafa52c6b13b259a1a10acd67fcd9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfc45fb499aafa52c6b13b259a1a10acd67fcd9c/comments", "author": null, "committer": null, "parents": [{"sha": "af46cdde202aec94a5f65dc69a1f1f0a9704c67b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af46cdde202aec94a5f65dc69a1f1f0a9704c67b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af46cdde202aec94a5f65dc69a1f1f0a9704c67b"}], "stats": {"total": 103, "additions": 11, "deletions": 92}, "files": [{"sha": "6af1446ef3112f42b83a336121abcbb2b16233c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfc45fb499aafa52c6b13b259a1a10acd67fcd9c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfc45fb499aafa52c6b13b259a1a10acd67fcd9c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cfc45fb499aafa52c6b13b259a1a10acd67fcd9c", "patch": "@@ -1,3 +1,9 @@\n+2001-12-01  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* gencheck.c, gengenrtl.c: Don't define xmalloc.\n+\t* gensupport.c: Don't define xstrdup, xcalloc, xrealloc,\n+\txmalloc.\n+\n 2001-11-30  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* pa.c (output_ascii): Cast `p' to unsigned char."}, {"sha": "969a47655fdb997ecab838c299d7e922bccdceab", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfc45fb499aafa52c6b13b259a1a10acd67fcd9c/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfc45fb499aafa52c6b13b259a1a10acd67fcd9c/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=cfc45fb499aafa52c6b13b259a1a10acd67fcd9c", "patch": "@@ -1,3 +1,7 @@\n+2001-12-01  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* f/fini.c: Use xmalloc.\n+\n Fri Nov 30 20:54:02 2001  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* Make-lang.in: Delete references to proj.[co], proj-h.[co]."}, {"sha": "28d9028df13793ca97e07d6bc62c9b13fa043143", "filename": "gcc/f/fini.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfc45fb499aafa52c6b13b259a1a10acd67fcd9c/gcc%2Ff%2Ffini.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfc45fb499aafa52c6b13b259a1a10acd67fcd9c/gcc%2Ff%2Ffini.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Ffini.c?ref=cfc45fb499aafa52c6b13b259a1a10acd67fcd9c", "patch": "@@ -367,7 +367,7 @@ main (int argc, char **argv)\n \n       /* Make new name object to store name and its keyword. */\n \n-      newname = (name) really_call_malloc (sizeof (*newname));\n+      newname = (name) xmalloc (sizeof (*newname));\n       newname->namelen = strlen (buf);\n       newname->kwlen = strlen (kwname);\n       total_length = newname->kwlen + fixlengths;"}, {"sha": "c676ef9ecd52936236c57c6c48d888e424c1792d", "filename": "gcc/gencheck.c", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfc45fb499aafa52c6b13b259a1a10acd67fcd9c/gcc%2Fgencheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfc45fb499aafa52c6b13b259a1a10acd67fcd9c/gcc%2Fgencheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgencheck.c?ref=cfc45fb499aafa52c6b13b259a1a10acd67fcd9c", "patch": "@@ -70,24 +70,3 @@ main (argc, argv)\n   puts (\"\\n#endif /* GCC_TREE_CHECK_H */\");\n   return 0;\n }\n-\n-#if defined(USE_C_ALLOCA)\n-/* FIXME: We only need an xmalloc definition because we are forced to\n-   link with alloca.o on some platforms.  This should go away if/when\n-   we link against libiberty.a. (ghazi@caip.rutgers.edu 6/3/98) */\n-PTR\n-xmalloc (nbytes)\n-     size_t nbytes;\n-{\n-  PTR tmp = (PTR) really_call_malloc (nbytes);\n-\n-  if (!tmp)\n-    {\n-      fprintf (stderr, \"can't allocate %d bytes (out of virtual memory)\\n\",\n-\t       nbytes);\n-      exit (FATAL_EXIT_CODE);\n-    }\n-\n-  return tmp;\n-}\n-#endif /* USE_C_ALLOCA */"}, {"sha": "0d40025f76eeb36e91d9700a1be933d82faaf596", "filename": "gcc/gengenrtl.c", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfc45fb499aafa52c6b13b259a1a10acd67fcd9c/gcc%2Fgengenrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfc45fb499aafa52c6b13b259a1a10acd67fcd9c/gcc%2Fgengenrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengenrtl.c?ref=cfc45fb499aafa52c6b13b259a1a10acd67fcd9c", "patch": "@@ -390,24 +390,6 @@ gencode ()\n     gendef (*fmt);\n }\n \n-#if defined(USE_C_ALLOCA)\n-PTR\n-xmalloc (nbytes)\n-  size_t nbytes;\n-{\n-  PTR tmp = (PTR) really_call_malloc (nbytes);\n-\n-  if (!tmp)\n-    {\n-      fprintf (stderr, \"can't allocate %d bytes (out of virtual memory)\\n\",\n-\t       nbytes);\n-      exit (FATAL_EXIT_CODE);\n-    }\n-\n-  return tmp;\n-}\n-#endif /* USE_C_ALLOCA */\n-\n /* This is the main program.  We accept only one argument, \"-h\", which\n    says we are writing the genrtl.h file.  Otherwise we are writing the\n    genrtl.c file.  */"}, {"sha": "ae42a41f2b5f70143840855d94e80878dc0bdf26", "filename": "gcc/gensupport.c", "status": "modified", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfc45fb499aafa52c6b13b259a1a10acd67fcd9c/gcc%2Fgensupport.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfc45fb499aafa52c6b13b259a1a10acd67fcd9c/gcc%2Fgensupport.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgensupport.c?ref=cfc45fb499aafa52c6b13b259a1a10acd67fcd9c", "patch": "@@ -1102,55 +1102,3 @@ read_md_rtx (lineno, seqnr)\n \n   return desc;\n }\n-\n-/* Until we can use the versions in libiberty.  */\n-char *\n-xstrdup (input)\n-  const char *input;\n-{\n-  size_t len = strlen (input) + 1;\n-  char *output = xmalloc (len);\n-  memcpy (output, input, len);\n-  return output;\n-}\n-\n-PTR\n-xcalloc (nelem, elsize)\n-  size_t nelem, elsize;\n-{\n-  PTR newmem;\n-\n-  if (nelem == 0 || elsize == 0)\n-    nelem = elsize = 1;\n-\n-  newmem = really_call_calloc (nelem, elsize);\n-  if (!newmem)\n-    fatal (\"virtual memory exhausted\");\n-  return (newmem);\n-}\n-\n-PTR\n-xrealloc (old, size)\n-  PTR old;\n-  size_t size;\n-{\n-  PTR ptr;\n-  if (old)\n-    ptr = (PTR) really_call_realloc (old, size);\n-  else\n-    ptr = (PTR) really_call_malloc (size);\n-  if (!ptr)\n-    fatal (\"virtual memory exhausted\");\n-  return ptr;\n-}\n-\n-PTR\n-xmalloc (size)\n-  size_t size;\n-{\n-  PTR val = (PTR) really_call_malloc (size);\n-\n-  if (val == 0)\n-    fatal (\"virtual memory exhausted\");\n-  return val;\n-}"}]}