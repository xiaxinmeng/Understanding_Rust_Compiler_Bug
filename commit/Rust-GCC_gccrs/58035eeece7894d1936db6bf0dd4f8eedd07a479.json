{"sha": "58035eeece7894d1936db6bf0dd4f8eedd07a479", "node_id": "C_kwDOANBUbNoAKDU4MDM1ZWVlY2U3ODk0ZDE5MzZkYjZiZjBkZDRmOGVlZGQwN2E0Nzk", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-11-03T00:17:32Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-11-03T00:17:32Z"}, "message": "Daily bump.", "tree": {"sha": "f4e1a9d6cc3f995e6c02aac4308c9bb160b766cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4e1a9d6cc3f995e6c02aac4308c9bb160b766cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58035eeece7894d1936db6bf0dd4f8eedd07a479", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58035eeece7894d1936db6bf0dd4f8eedd07a479", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58035eeece7894d1936db6bf0dd4f8eedd07a479", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58035eeece7894d1936db6bf0dd4f8eedd07a479/comments", "author": null, "committer": null, "parents": [{"sha": "41602c85ac2414edfbca5c4b0ba520d47f0189ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41602c85ac2414edfbca5c4b0ba520d47f0189ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41602c85ac2414edfbca5c4b0ba520d47f0189ce"}], "stats": {"total": 115, "additions": 114, "deletions": 1}, "files": [{"sha": "ecbd2f83af750822bdc542c1c1da3c6d9b57e059", "filename": "gcc/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58035eeece7894d1936db6bf0dd4f8eedd07a479/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58035eeece7894d1936db6bf0dd4f8eedd07a479/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=58035eeece7894d1936db6bf0dd4f8eedd07a479", "patch": "@@ -1,3 +1,32 @@\n+2022-11-02  Christoph M\u00fcllner  <christoph.muellner@vrull.eu>\n+\n+\t* common/config/riscv/riscv-common.cc: Add zawrs extension.\n+\t* config/riscv/riscv-opts.h (MASK_ZAWRS): New.\n+\t(TARGET_ZAWRS): New.\n+\t* config/riscv/riscv.opt: New.\n+\n+2022-11-02  Rasmus Villemoes  <rv@rasmusvillemoes.dk>\n+\n+\tPR driver/93371\n+\t* gcc.cc (ASM_MAP): Honour -ffile-prefix-map.\n+\n+2022-11-02  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* value-range.cc (frange::contains_p): Fix signed zero handling.\n+\t(range_tests_signed_zeros): New test.\n+\n+2022-11-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* builtins.cc (mathfn_built_in_2): #undef HUGE_VAL, NAN.\n+\n+2022-11-02  Xionghu Luo  <xionghuluo@tencent.com>\n+\n+\tPR target/100866\n+\t* config/rs6000/altivec.md: (*altivec_vrl<VI_char>): Named to...\n+\t(altivec_vrl<VI_char>): ...this.\n+\t* config/rs6000/vsx.md (revb_<mode>): Call vspltish and vrlh when\n+\ttarget is Power8 and mode is V8HI.\n+\n 2022-11-01  David Seifert  <soap@gentoo.org>\n \n \t* configure.ac: Add AC_CACHE_CHECK(..., gcc_cv_sys_sdt_h)."}, {"sha": "99ca02330bd53573629d4b5d1ed6b6f78c894858", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58035eeece7894d1936db6bf0dd4f8eedd07a479/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58035eeece7894d1936db6bf0dd4f8eedd07a479/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=58035eeece7894d1936db6bf0dd4f8eedd07a479", "patch": "@@ -1 +1 @@\n-20221102\n+20221103"}, {"sha": "b397adf8d32212cf11f8ea848475a12e8a7bcbd1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58035eeece7894d1936db6bf0dd4f8eedd07a479/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58035eeece7894d1936db6bf0dd4f8eedd07a479/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=58035eeece7894d1936db6bf0dd4f8eedd07a479", "patch": "@@ -1,3 +1,12 @@\n+2022-11-02  Christoph M\u00fcllner  <christoph.muellner@vrull.eu>\n+\n+\t* gcc.target/riscv/zawrs.c: New test.\n+\n+2022-11-02  Xionghu Luo  <xionghuluo@tencent.com>\n+\n+\tPR target/100866\n+\t* gcc.target/powerpc/pr100866-2.c: New.\n+\n 2022-11-01  Nathan Sidwell  <nathan@acm.org>\n \n \t* g++.dg/abi/lambda-sig1-18.C: New."}, {"sha": "7302bde4052dd359c30df577f812f24267714ea9", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58035eeece7894d1936db6bf0dd4f8eedd07a479/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58035eeece7894d1936db6bf0dd4f8eedd07a479/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=58035eeece7894d1936db6bf0dd4f8eedd07a479", "patch": "@@ -1,3 +1,38 @@\n+2022-11-02  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR libgomp/106643\n+\tPR fortran/96668\n+\t* oacc-mem.c (goacc_enter_data_internal): Support\n+\tOpenACC 'declare create' with Fortran allocatable arrays, part II.\n+\t* testsuite/libgomp.oacc-fortran/declare-allocatable-array_descriptor-1-directive.f90:\n+\tAdjust.\n+\t* testsuite/libgomp.oacc-fortran/pr106643-1.f90: New.\n+\n+2022-11-02  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR libgomp/106643\n+\t* oacc-mem.c (goacc_enter_data_internal): Support\n+\tOpenACC 'declare create' with Fortran allocatable arrays, part I.\n+\t* testsuite/libgomp.oacc-fortran/declare-allocatable-1-directive.f90:\n+\tNew.\n+\t* testsuite/libgomp.oacc-fortran/declare-allocatable-array_descriptor-1-directive.f90:\n+\tNew.\n+\n+2022-11-02  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-fortran/declare-allocatable-array_descriptor-1-runtime.f90:\n+\tNew.\n+\n+2022-11-02  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-fortran/declare-allocatable-1-runtime.f90:\n+\tNew.\n+\n+2022-11-02  Cesar Philippidis  <cesar@codesourcery.com>\n+\t    Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-fortran/declare-allocatable-1.f90: New.\n+\n 2022-10-28  Julian Brown  <julian@codesourcery.com>\n \t    Thomas Schwinge  <thomas@codesourcery.com>\n "}, {"sha": "65dfc3231ad1feff5bce7463f554620651b2491e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58035eeece7894d1936db6bf0dd4f8eedd07a479/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58035eeece7894d1936db6bf0dd4f8eedd07a479/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=58035eeece7894d1936db6bf0dd4f8eedd07a479", "patch": "@@ -1,3 +1,43 @@\n+2022-11-02  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* libsupc++/eh_globals.cc (constant_init::unused): Remove.\n+\t* src/c++11/system_error.cc (constant_init::unused): Remove.\n+\t* src/c++17/memory_resource.cc (constant_init::unused): Remove.\n+\n+2022-11-02  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* src/c++17/floating_from_chars.cc (from_chars_impl): In the\n+\tERANGE case, distinguish between a denormal result and true\n+\tunderflow by checking if the return value is 0.\n+\n+2022-11-02  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/expected (expected::_M_invalid): Remove.\n+\n+2022-11-02  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/variant (__variant::_Multi_array::__untag_result):\n+\tUse pragma to suppress warning.\n+\n+2022-11-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* libsupc++/compare (_Strong_order::_Fp_fmt): Add _Bfloat16.\n+\t(_Strong_order::_Bfloat16): New static data member.\n+\t(_Strong_order::_S_fp_fmt): Return _Bfloat16 for std::bfloat16_t.\n+\n+2022-11-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* src/c++17/floating_to_chars.cc (__floating_to_chars_hex): Drop const\n+\tfrom unbiased_exponent.  Canonicalize denormals such that they have\n+\tthe leading bit set by shifting effective mantissa up and decreasing\n+\tunbiased_exponent.\n+\t(__floating_to_chars_shortest): Don't instantiate\n+\t__floating_to_chars_hex for float16_t either and use float instead.\n+\t* testsuite/20_util/to_chars/float.cc (float_to_chars_test_cases):\n+\tAdjust testcases for shortest hex denormals.\n+\t* testsuite/20_util/to_chars/double.cc (double_to_chars_test_cases):\n+\tLikewise.\n+\n 2022-11-01  Jakub Jelinek  <jakub@redhat.com>\n \n \t* include/std/charconv (__from_chars_float16_t,"}]}