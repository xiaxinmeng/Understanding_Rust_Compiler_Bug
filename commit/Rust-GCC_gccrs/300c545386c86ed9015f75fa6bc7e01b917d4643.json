{"sha": "300c545386c86ed9015f75fa6bc7e01b917d4643", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzAwYzU0NTM4NmM4NmVkOTAxNWY3NWZhNmJjN2UwMWI5MTdkNDY0Mw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2001-09-14T05:02:00Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2001-09-14T05:02:00Z"}, "message": "Whitespace fixes.\n\nFrom-SVN: r45587", "tree": {"sha": "01770389724b6df158a67e862cf27c14fc981504", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01770389724b6df158a67e862cf27c14fc981504"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/300c545386c86ed9015f75fa6bc7e01b917d4643", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/300c545386c86ed9015f75fa6bc7e01b917d4643", "html_url": "https://github.com/Rust-GCC/gccrs/commit/300c545386c86ed9015f75fa6bc7e01b917d4643", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/300c545386c86ed9015f75fa6bc7e01b917d4643/comments", "author": null, "committer": null, "parents": [{"sha": "6d334db81105d8e66f7daf68b43cf31351d4785a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d334db81105d8e66f7daf68b43cf31351d4785a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d334db81105d8e66f7daf68b43cf31351d4785a"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "fa39c743bca464ebe427c29c42ec40898c4183ae", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/300c545386c86ed9015f75fa6bc7e01b917d4643/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/300c545386c86ed9015f75fa6bc7e01b917d4643/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=300c545386c86ed9015f75fa6bc7e01b917d4643", "patch": "@@ -2965,14 +2965,14 @@ barrier_align (barrier_or_label)\n \t  && JUMP_LABEL (prev))\n \t{\n \t  rtx x;\n-\t  if (jump_to_next \n+\t  if (jump_to_next\n \t      || next_real_insn (JUMP_LABEL (prev)) == next\n \t      /* If relax_delay_slots() decides NEXT was redundant\n \t\t with some previous instruction, it will have\n \t\t redirected PREV's jump to the following insn.  */\n \t      || JUMP_LABEL (prev) == next_nonnote_insn (next)\n-\t      /* There is no upper bound on redundant instructions that\n-\t\t might have been skipped, but we must not put an\n+\t      /* There is no upper bound on redundant instructions\n+\t\t that might have been skipped, but we must not put an\n \t\t alignment where none had been before.  */\n \t      || (x = (NEXT_INSN (NEXT_INSN (PREV_INSN (prev)))),\t    \n \t\t  (INSN_P (x) \n@@ -2981,11 +2981,11 @@ barrier_align (barrier_or_label)\n \t    {\n \t      rtx pat = PATTERN (prev);\n \t      if (GET_CODE (pat) == PARALLEL)\n-\t      pat = XVECEXP (pat, 0, 0);\n+\t\tpat = XVECEXP (pat, 0, 0);\n \t      if (credit - slot >= (GET_CODE (SET_SRC (pat)) == PC ? 2 : 0))\n \t\treturn 0;\n \t    }\n-\t}     \n+\t}\n     }\n   \n   return CACHE_LOG;"}]}