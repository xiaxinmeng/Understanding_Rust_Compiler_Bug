{"sha": "2d4b90b1832bba12ababda73ce8110c94a5adf78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ0YjkwYjE4MzJiYmExMmFiYWJkYTczY2U4MTEwYzk0YTVhZGY3OA==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2009-07-30T16:26:09Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2009-07-30T16:26:09Z"}, "message": "re PR tree-optimization/40570 (ICE with recursion at -O3)\n\n2009-07-30  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/40570\n\t* ipa-inline.c (cgraph_decide_inlining): Watch out for dead single\n\tuse inlining loops.\n\n\t* testsuite/gcc.c-torture/compile/pr40570.c: New test.\n\nFrom-SVN: r150263", "tree": {"sha": "f6460af39d2f4f54a9cf53ee18228403a092a227", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6460af39d2f4f54a9cf53ee18228403a092a227"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d4b90b1832bba12ababda73ce8110c94a5adf78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d4b90b1832bba12ababda73ce8110c94a5adf78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d4b90b1832bba12ababda73ce8110c94a5adf78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d4b90b1832bba12ababda73ce8110c94a5adf78/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4380ae3548817d753ca153c7bfbf1d77c9469e9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4380ae3548817d753ca153c7bfbf1d77c9469e9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4380ae3548817d753ca153c7bfbf1d77c9469e9b"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "f5b3ba34104665168c31bb3233e35f4262fa953f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4b90b1832bba12ababda73ce8110c94a5adf78/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4b90b1832bba12ababda73ce8110c94a5adf78/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2d4b90b1832bba12ababda73ce8110c94a5adf78", "patch": "@@ -1,3 +1,9 @@\n+2009-07-30  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/40570\n+\t* ipa-inline.c (cgraph_decide_inlining): Watch out for dead single\n+\tuse inlining loops.\n+\n 2009-07-30  Razya Ladelsky <razya@il.ibm.com>\n \n \t* ssa-loop-manip.c: Include langhooks.h."}, {"sha": "dde8181c86cd4ec774906a5127948be7c3d8efb5", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4b90b1832bba12ababda73ce8110c94a5adf78/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4b90b1832bba12ababda73ce8110c94a5adf78/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=2d4b90b1832bba12ababda73ce8110c94a5adf78", "patch": "@@ -1227,6 +1227,8 @@ cgraph_decide_inlining (void)\n \t      && !node->needed\n \t      && node->local.inlinable\n \t      && node->callers->inline_failed\n+\t      && node->callers->caller != node\n+\t      && node->callers->caller->global.inlined_to != node\n \t      && !gimple_call_cannot_inline_p (node->callers->call_stmt)\n \t      && !DECL_EXTERNAL (node->decl)\n \t      && !DECL_COMDAT (node->decl))"}, {"sha": "f86fc53c2fdeb19b59e40babd13922efd5e9331b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4b90b1832bba12ababda73ce8110c94a5adf78/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4b90b1832bba12ababda73ce8110c94a5adf78/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2d4b90b1832bba12ababda73ce8110c94a5adf78", "patch": "@@ -1,3 +1,8 @@\n+2009-07-30  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/40570\n+\t* gcc.c-torture/compile/pr40570.c: New test.\n+\n 2009-07-29  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/14912"}, {"sha": "7c3f4d83b2e06b3d2eca1cfef1704a392fb5d2eb", "filename": "gcc/testsuite/gcc.c-torture/compile/pr40570.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4b90b1832bba12ababda73ce8110c94a5adf78/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr40570.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4b90b1832bba12ababda73ce8110c94a5adf78/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr40570.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr40570.c?ref=2d4b90b1832bba12ababda73ce8110c94a5adf78", "patch": "@@ -0,0 +1,22 @@\n+extern void anything(int);\n+\n+static int foo(int i);\n+\n+static int bar(int i) { foo(i); }\n+\n+extern int j;\n+\n+static int foo(int i)\n+{\n+  if (j)\n+    anything(j);\n+  return bar(i);\n+}\n+\n+int baz()\n+{\n+  foo(0);\n+  if (baz())\n+    return 1;\n+  return 0;\n+}"}]}