{"sha": "161c21b6242127527b7a63f65f6d5a7c331ea0cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTYxYzIxYjYyNDIxMjc1MjdiN2E2M2Y2NWY2ZDVhN2MzMzFlYTBjYw==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernd.schmidt@analog.com", "date": "2005-07-12T10:38:45Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2005-07-12T10:38:45Z"}, "message": "extend.texi (Blackfin Built-in Functions): New section.\n\n\t* doc/extend.texi (Blackfin Built-in Functions): New section.\n\t* doc/invoke.texi (mcsync-anomaly, mno-csync-anomaly): Fix the\n\t@opindex.\n\nFrom-SVN: r101919", "tree": {"sha": "76db931bacde75fdd72ea59e5348e49db551f380", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76db931bacde75fdd72ea59e5348e49db551f380"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/161c21b6242127527b7a63f65f6d5a7c331ea0cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/161c21b6242127527b7a63f65f6d5a7c331ea0cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/161c21b6242127527b7a63f65f6d5a7c331ea0cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/161c21b6242127527b7a63f65f6d5a7c331ea0cc/comments", "author": null, "committer": null, "parents": [{"sha": "40c1d5f85484c2c48cc9e663708c77ebb3fc887d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40c1d5f85484c2c48cc9e663708c77ebb3fc887d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40c1d5f85484c2c48cc9e663708c77ebb3fc887d"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "07f53773f820f88eef9b233884d0cd89671d3d9e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/161c21b6242127527b7a63f65f6d5a7c331ea0cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/161c21b6242127527b7a63f65f6d5a7c331ea0cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=161c21b6242127527b7a63f65f6d5a7c331ea0cc", "patch": "@@ -1,3 +1,9 @@\n+2005-07-12  Bernd Schmidt  <bernd.schmidt@analog.com>\n+\n+\t* doc/extend.texi (Blackfin Built-in Functions): New section.\n+\t* doc/invoke.texi (mcsync-anomaly, mno-csync-anomaly): Fix the\n+\t@opindex.\n+\n 2005-07-12  Adrian Straetling  <straetling@de.ibm.com>\n \n \t* builtins.c: (expand_builtin_memcmp, expand_builtin_strncmp):"}, {"sha": "cc6ea2de0535913af0eb7c13bd14b37e9fc0bb43", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/161c21b6242127527b7a63f65f6d5a7c331ea0cc/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/161c21b6242127527b7a63f65f6d5a7c331ea0cc/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=161c21b6242127527b7a63f65f6d5a7c331ea0cc", "patch": "@@ -5766,6 +5766,7 @@ instructions, but allow the compiler to schedule those calls.\n @menu\n * Alpha Built-in Functions::\n * ARM Built-in Functions::\n+* Blackfin Built-in Functions::\n * FR-V Built-in Functions::\n * X86 Built-in Functions::\n * MIPS Paired-Single Support::\n@@ -6002,6 +6003,20 @@ long long __builtin_arm_wxor (long long, long long)\n long long __builtin_arm_wzero ()\n @end smallexample\n \n+@node Blackfin Built-in Functions\n+@subsection Blackfin Built-in Functions\n+\n+Currently, there are two Blackfin-specific built-in functions.  These are\n+used for generating @code{CSYNC} and @code{SSYNC} machine insns without\n+using inline assembly; by using these built-in functions the compiler can\n+automatically add workarounds for hardware errata involving these\n+instructions.  These functions are named as follows:\n+\n+@smallexample\n+void __builtin_bfin_csync (void)\n+void __builtin_bfin_ssync (void)\n+@end smallexample\n+\n @node FR-V Built-in Functions\n @subsection FR-V Built-in Functions\n "}, {"sha": "0f509d0ce7b43213c5141ffbca2668e7363fbaf4", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/161c21b6242127527b7a63f65f6d5a7c331ea0cc/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/161c21b6242127527b7a63f65f6d5a7c331ea0cc/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=161c21b6242127527b7a63f65f6d5a7c331ea0cc", "patch": "@@ -7415,13 +7415,13 @@ by default.\n Don't generate extra code to prevent speculative loads from occurring.\n \n @item -mcsync-anomaly\n-@opindex mspecld-anomaly\n+@opindex mcsync-anomaly\n When enabled, the compiler will ensure that the generated code does not\n contain CSYNC or SSYNC instructions too soon after conditional branches.\n This option is enabled by default.\n \n @item -mno-csync-anomaly\n-@opindex mno-specld-anomaly\n+@opindex mno-csync-anomaly\n Don't generate extra code to prevent CSYNC or SSYNC instructions from\n occurring too soon after a conditional branch.\n "}]}