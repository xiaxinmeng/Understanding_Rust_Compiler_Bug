{"sha": "00b4e148ffba89302141d135c4d1493da1fb9432", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBiNGUxNDhmZmJhODkzMDIxNDFkMTM1YzRkMTQ5M2RhMWZiOTQzMg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-03-05T20:13:08Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-03-05T20:13:08Z"}, "message": "pa.c (output_function_epilogue): Perform an early %r2 restore even if actual_fsize is zero.\n\n        * pa.c (output_function_epilogue): Perform an early %r2 restore\n        even if actual_fsize is zero.  This can happen if %r2 is used\n        as a temporary in a leaf function.\n\n        * pa.c (compute_frame_size): Update to take into account\n        register which are no longer known to the compiler.\n        (output_function_prologue): Likewise.\n        (output_function_epilogue): Likewise.\n        (output_arg_descriptor): Likewise.\n\nFrom-SVN: r3658", "tree": {"sha": "a67f63e3f2fc3a37668c34c7be35b06bf425a672", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a67f63e3f2fc3a37668c34c7be35b06bf425a672"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00b4e148ffba89302141d135c4d1493da1fb9432", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00b4e148ffba89302141d135c4d1493da1fb9432", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00b4e148ffba89302141d135c4d1493da1fb9432", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00b4e148ffba89302141d135c4d1493da1fb9432/comments", "author": null, "committer": null, "parents": [{"sha": "a07c19158a3695623b979aef180ebe9cb03cc149", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a07c19158a3695623b979aef180ebe9cb03cc149", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a07c19158a3695623b979aef180ebe9cb03cc149"}], "stats": {"total": 35, "additions": 17, "deletions": 18}, "files": [{"sha": "452052083568bae9879f4c86dfa26512c12e2f27", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 17, "deletions": 18, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00b4e148ffba89302141d135c4d1493da1fb9432/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00b4e148ffba89302141d135c4d1493da1fb9432/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=00b4e148ffba89302141d135c4d1493da1fb9432", "patch": "@@ -1645,7 +1645,7 @@ compute_frame_size (size, fregs_live)\n \n   if (!TARGET_SNAKE)\n     {\n-      for (i = 47; i >= 44; i--)\n+      for (i = 43; i >= 40; i--)\n \tif (regs_ever_live[i])\n \t  {\n \t    fsize += 8;\n@@ -1655,7 +1655,7 @@ compute_frame_size (size, fregs_live)\n     }\n   else\n     {\n-      for (i = 90; i >= 72; i -= 2)\n+      for (i = 78; i >= 60; i -= 2)\n \tif (regs_ever_live[i] || regs_ever_live[i + 1])\n \t  {\n \t    fsize += 8;\n@@ -1845,15 +1845,15 @@ output_function_prologue (file, size)\n \t}\n       if (!TARGET_SNAKE)\n \t{\n-\t  for (i = 47; i >= 44; i--)\n+\t  for (i = 43; i >= 40; i--)\n \t    {\n \t      if (regs_ever_live[i])\n \t\tfprintf (file, \"\\tfstds,ma %s,8(0,%%r1)\\n\", reg_names[i]);\n \t    }\n \t}\n       else\n \t{\n-\t  for (i = 90; i >= 72; i -= 2)\n+\t  for (i = 78; i >= 60; i -= 2)\n \t    if (regs_ever_live[i] || regs_ever_live[i + 1])\n \t      {\n \t\tfprintf (file, \"\\tfstds,ma %s,8(0,%%r1)\\n\", reg_names[i]);\n@@ -1877,8 +1877,7 @@ output_function_epilogue (file, size)\n   if (frame_pointer_needed\n       && (regs_ever_live [2] || profile_flag))\n     fprintf (file, \"\\tldw -20(%%r4),%%r2\\n\");\n-  else if (actual_fsize\n-\t   && VAL_14_BITS_P (actual_fsize + 20)\n+  else if (VAL_14_BITS_P (actual_fsize + 20)\n \t   && (regs_ever_live [2] || profile_flag))\n     fprintf(file,\"\\tldw %d(0,%%r30),%%r2\\n\", - (actual_fsize + 20));\n \n@@ -1949,15 +1948,15 @@ output_function_epilogue (file, size)\n \t}\n       if (!TARGET_SNAKE)\n \t{\n-\t  for (i = 47; i >= 44; i--)\n+\t  for (i = 43; i >= 40; i--)\n \t    {\n \t      if (regs_ever_live[i])\n \t\tfprintf (file, \"\\tfldds,ma 8(0,%%r1),%s\\n\", reg_names[i]);\n \t    }\n \t}\n       else\n \t{\n-\t  for (i = 90; i >= 72; i -= 2)\n+\t  for (i = 78; i >= 60; i -= 2)\n \t    if (regs_ever_live[i] || regs_ever_live[i + 1])\n \t      {\n \t\tfprintf (file, \"\\tfldds,ma 8(0,%%r1),%s\\n\", reg_names[i]);\n@@ -2742,30 +2741,30 @@ output_arg_descriptor (insn)\n       else if (!TARGET_SNAKE)\t/* fp args */\n \t{\n \t  if (arg_mode == SFmode)\n-\t    arg_regs[regno - 36] = \"FR\";\n+\t    arg_regs[regno - 32] = \"FR\";\n \t  else\n \t    {\n #ifdef HP_FP_ARG_DESCRIPTOR_REVERSED\n-\t      arg_regs[regno - 37] = \"FR\";\n-\t      arg_regs[regno - 36] = \"FU\";\n+\t      arg_regs[regno - 33] = \"FR\";\n+\t      arg_regs[regno - 32] = \"FU\";\n #else\n-\t      arg_regs[regno - 37] = \"FU\";\n-\t      arg_regs[regno - 36] = \"FR\";\n+\t      arg_regs[regno - 33] = \"FU\";\n+\t      arg_regs[regno - 32] = \"FR\";\n #endif\n \t    }\n \t}\n       else\n \t{\n \t  if (arg_mode == SFmode)\n-\t    arg_regs[(regno - 56) / 2] = \"FR\";\n+\t    arg_regs[(regno - 44) / 2] = \"FR\";\n \t  else\n \t    {\n #ifdef HP_FP_ARG_DESCRIPTOR_REVERSED\n-\t      arg_regs[(regno - 58) / 2] = \"FR\";\n-\t      arg_regs[(regno - 58) / 2 + 1] = \"FU\";\n+\t      arg_regs[(regno - 46) / 2] = \"FR\";\n+\t      arg_regs[(regno - 46) / 2 + 1] = \"FU\";\n #else\n-\t      arg_regs[(regno - 58) / 2] = \"FU\";\n-\t      arg_regs[(regno - 58) / 2 + 1] = \"FR\";\n+\t      arg_regs[(regno - 46) / 2] = \"FU\";\n+\t      arg_regs[(regno - 46) / 2 + 1] = \"FR\";\n #endif\n \t    }\n \t}"}]}