{"sha": "e1e97c4f15e638cbace4f54ec987525f20893fa5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFlOTdjNGYxNWU2MzhjYmFjZTRmNTRlYzk4NzUyNWYyMDg5M2ZhNQ==", "commit": {"author": {"name": "Neil Booth", "email": "neilb@earthling.net", "date": "2000-03-16T14:15:17Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2000-03-16T14:15:17Z"}, "message": "cppinit.c (handle_option): Implement #unassert directive as -A- command line option.\n\n2000-03-16  Neil Booth  <NeilB@earthling.net>\n\n\t* cppinit.c (handle_option):  Implement #unassert directive\n        as -A- command line option.\n\t(print_help):  Update.\n\t* cpptexi.c:  Update.\n\nFrom-SVN: r32584", "tree": {"sha": "9a081f508fa06313ce5b328de9f83aa0d9ab98d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a081f508fa06313ce5b328de9f83aa0d9ab98d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1e97c4f15e638cbace4f54ec987525f20893fa5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1e97c4f15e638cbace4f54ec987525f20893fa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1e97c4f15e638cbace4f54ec987525f20893fa5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1e97c4f15e638cbace4f54ec987525f20893fa5/comments", "author": null, "committer": null, "parents": [{"sha": "d26eedb65705486dc550d5c20322ad360c93840f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d26eedb65705486dc550d5c20322ad360c93840f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d26eedb65705486dc550d5c20322ad360c93840f"}], "stats": {"total": 59, "additions": 39, "deletions": 20}, "files": [{"sha": "d45e3e66be15366e6cf499e8719bcf7326c3abc4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e97c4f15e638cbace4f54ec987525f20893fa5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e97c4f15e638cbace4f54ec987525f20893fa5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e1e97c4f15e638cbace4f54ec987525f20893fa5", "patch": "@@ -1,3 +1,10 @@\n+2000-03-16  Neil Booth  <NeilB@earthling.net>\n+\n+\t* cppinit.c (handle_option):  Implement #unassert directive\n+        as -A- command line option.\n+\t(print_help):  Update.\n+\t* cpptexi.c:  Update.\n+\n Thu Mar 16 02:14:16 2000  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* md.texi (Standard Names): Document `jump'."}, {"sha": "0d2b2ee335f572ab35c585d70fb78ec3d0419851", "filename": "gcc/cpp.texi", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e97c4f15e638cbace4f54ec987525f20893fa5/gcc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e97c4f15e638cbace4f54ec987525f20893fa5/gcc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpp.texi?ref=e1e97c4f15e638cbace4f54ec987525f20893fa5", "patch": "@@ -2887,10 +2887,12 @@ Define the macros @var{__GNUC__}, @var{__GNUC_MINOR__} and\n Make an assertion with the predicate @var{predicate} and answer\n @var{answer}.  @xref{Assertions}.\n \n-@noindent\n-You can use @samp{-A-} to disable all predefined assertions; it also\n-undefines all predefined macros and all macros that preceded it on the\n-command line.\n+@item -A -@var{predicate}(@var{answer})\n+Disable an assertion with the predicate @var{predicate} and answer\n+@var{answer}.  Specifiying no predicate, by @samp{-A-} or @samp{-A -},\n+disables all predefined assertions and all assertions preceding it on\n+the command line; and also undefines all predefined macros and all\n+macros preceding it on the command line.\n \n @item -dM\n @findex -dM"}, {"sha": "419257308a4f25d5fda32ea1eb0ddd2b2d63b040", "filename": "gcc/cppinit.c", "status": "modified", "additions": 26, "deletions": 16, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e97c4f15e638cbace4f54ec987525f20893fa5/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e97c4f15e638cbace4f54ec987525f20893fa5/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=e1e97c4f15e638cbace4f54ec987525f20893fa5", "patch": "@@ -1493,26 +1493,35 @@ handle_option (pfile, argc, argv)\n \t      opts->no_output = 1;\n \t  break;\n \tcase OPT_A:\n-\t  if (strcmp (arg, \"-\"))\n-\t    new_pending_directive (opts, arg, cpp_assert);\n-\t  else\n+\t  if (arg[0] == '-')\n \t    {\n-\t      /* -A- eliminates all predefined macros and assertions.\n-\t\t Let's include also any that were specified earlier\n-\t\t on the command line.  That way we can get rid of any\n-\t\t that were passed automatically in from GCC.  */\n-\t      struct pending_option *o1, *o2;\n-\n-\t      o1 = opts->pending->directive_head;\n-\t      while (o1)\n+\t      /* -A with an argument beginning with '-' acts as\n+\t\t #unassert on whatever immediately follows the '-'.\n+\t\t If \"-\" is the whole argument, we eliminate all\n+\t\t predefined macros and assertions, including those\n+\t\t that were specified earlier on the command line.\n+\t\t That way we can get rid of any that were passed\n+\t\t automatically in from GCC.  */\n+\n+\t      if (arg[1] == '\\0')\n \t\t{\n-\t\t  o2 = o1->next;\n-\t\t  free (o1);\n-\t\t  o1 = o2;\n+\t\t  struct pending_option *o1, *o2;\n+\n+\t\t  o1 = opts->pending->directive_head;\n+\t\t  while (o1)\n+\t\t    {\n+\t\t      o2 = o1->next;\n+\t\t      free (o1);\n+\t\t      o1 = o2;\n+\t\t    }\n+\t\t  opts->pending->directive_head = NULL;\n+\t\t  opts->pending->directive_tail = NULL;\n \t\t}\n-\t      opts->pending->directive_head = NULL;\n-\t      opts->pending->directive_tail = NULL;\n+\t      else\n+\t\tnew_pending_directive (opts, arg + 1, cpp_unassert);\n \t    }\n+\t  else\n+\t    new_pending_directive (opts, arg, cpp_assert);\n \t  break;\n \tcase OPT_U:\n \t  new_pending_directive (opts, arg, cpp_undef);\n@@ -1750,6 +1759,7 @@ Switches:\\n\\\n   -D<macro>                 Define a <macro> with string '1' as its value\\n\\\n   -D<macro>=<val>           Define a <macro> with <val> as its value\\n\\\n   -A<question> (<answer>)   Assert the <answer> to <question>\\n\\\n+  -A-<question> (<answer>)  Disable the <answer> to <question>\\n\\\n   -U<macro>                 Undefine <macro> \\n\\\n   -v                        Display the version number\\n\\\n   -H                        Print the name of header files as they are used\\n\\"}]}