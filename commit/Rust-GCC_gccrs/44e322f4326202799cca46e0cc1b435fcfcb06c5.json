{"sha": "44e322f4326202799cca46e0cc1b435fcfcb06c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDRlMzIyZjQzMjYyMDI3OTljY2E0NmUwY2MxYjQzNWZjZmNiMDZjNQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2021-07-26T15:27:23Z"}, "committer": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2021-07-26T15:27:23Z"}, "message": "Regenerate .pot files.\n\ngcc/po/\n\t* gcc.pot: Regenerate.\n\nlibcpp/po/\n\t* cpplib.pot: Regenerate.", "tree": {"sha": "b75019ed7341a80e211b34d502d10f1b2c99528b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b75019ed7341a80e211b34d502d10f1b2c99528b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44e322f4326202799cca46e0cc1b435fcfcb06c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44e322f4326202799cca46e0cc1b435fcfcb06c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44e322f4326202799cca46e0cc1b435fcfcb06c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44e322f4326202799cca46e0cc1b435fcfcb06c5/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f384e2f551fef6dd73b815675633814fb8ff1e13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f384e2f551fef6dd73b815675633814fb8ff1e13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f384e2f551fef6dd73b815675633814fb8ff1e13"}], "stats": {"total": 21436, "additions": 11051, "deletions": 10385}, "files": [{"sha": "212c4122084e05e1ae2d1ee337b197e6bf08cfb2", "filename": "gcc/po/gcc.pot", "status": "modified", "additions": 10865, "deletions": 10205, "changes": 21070, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e322f4326202799cca46e0cc1b435fcfcb06c5/gcc%2Fpo%2Fgcc.pot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e322f4326202799cca46e0cc1b435fcfcb06c5/gcc%2Fpo%2Fgcc.pot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2Fgcc.pot?ref=44e322f4326202799cca46e0cc1b435fcfcb06c5"}, {"sha": "8894fb89fad994b9786520cc781a18b2512dbab1", "filename": "libcpp/po/cpplib.pot", "status": "modified", "additions": 186, "deletions": 180, "changes": 366, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e322f4326202799cca46e0cc1b435fcfcb06c5/libcpp%2Fpo%2Fcpplib.pot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e322f4326202799cca46e0cc1b435fcfcb06c5/libcpp%2Fpo%2Fcpplib.pot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2Fcpplib.pot?ref=44e322f4326202799cca46e0cc1b435fcfcb06c5", "patch": "@@ -8,7 +8,7 @@ msgid \"\"\n msgstr \"\"\n \"Project-Id-Version: PACKAGE VERSION\\n\"\n \"Report-Msgid-Bugs-To: https://gcc.gnu.org/bugs/\\n\"\n-\"POT-Creation-Date: 2021-02-05 21:38+0000\\n\"\n+\"POT-Creation-Date: 2021-07-26 15:25+0000\\n\"\n \"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n\"\n \"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n\"\n \"Language-Team: LANGUAGE <LL@li.org>\\n\"\n@@ -173,271 +173,273 @@ msgstr \"\"\n msgid \"failure to convert %s to %s\"\n msgstr \"\"\n \n-#: directives.c:229\n-#: directives.c:272\n+#: directives.c:237\n+#: directives.c:280\n #, c-format\n msgid \"extra tokens at end of #%s directive\"\n msgstr \"\"\n \n-#: directives.c:379\n+#: directives.c:387\n #, c-format\n msgid \"#%s is a GCC extension\"\n msgstr \"\"\n \n-#: directives.c:384\n+#: directives.c:392\n #, c-format\n msgid \"#%s is a deprecated GCC extension\"\n msgstr \"\"\n \n-#: directives.c:397\n+#: directives.c:405\n msgid \"suggest not using #elif in traditional C\"\n msgstr \"\"\n \n-#: directives.c:400\n+#: directives.c:408\n #, c-format\n msgid \"traditional C ignores #%s with the # indented\"\n msgstr \"\"\n \n-#: directives.c:404\n+#: directives.c:412\n #, c-format\n msgid \"suggest hiding #%s from traditional C with an indented #\"\n msgstr \"\"\n \n-#: directives.c:430\n+#: directives.c:438\n msgid \"embedding a directive within macro arguments is not portable\"\n msgstr \"\"\n \n-#: directives.c:450\n+#: directives.c:462\n msgid \"style of line directive is a GCC extension\"\n msgstr \"\"\n \n-#: directives.c:531\n+#: directives.c:543\n #, c-format\n msgid \"invalid preprocessing directive #%s\"\n msgstr \"\"\n \n-#: directives.c:601\n+#: directives.c:613\n #, c-format\n msgid \"\\\"%s\\\" cannot be used as a macro name\"\n msgstr \"\"\n \n-#: directives.c:608\n+#: directives.c:620\n #, c-format\n msgid \"\\\"%s\\\" cannot be used as a macro name as it is an operator in C++\"\n msgstr \"\"\n \n-#: directives.c:611\n+#: directives.c:623\n #, c-format\n msgid \"no macro name given in #%s directive\"\n msgstr \"\"\n \n-#: directives.c:614\n+#: directives.c:626\n msgid \"macro names must be identifiers\"\n msgstr \"\"\n \n-#: directives.c:663\n-#: directives.c:668\n+#: directives.c:675\n+#: directives.c:680\n #, c-format\n msgid \"undefining \\\"%s\\\"\"\n msgstr \"\"\n \n-#: directives.c:725\n+#: directives.c:737\n msgid \"missing terminating > character\"\n msgstr \"\"\n \n-#: directives.c:784\n+#: directives.c:796\n #, c-format\n msgid \"#%s expects \\\"FILENAME\\\" or <FILENAME>\"\n msgstr \"\"\n \n-#: directives.c:830\n+#: directives.c:842\n #, c-format\n msgid \"empty filename in #%s\"\n msgstr \"\"\n \n-#: directives.c:839\n+#: directives.c:851\n #, c-format\n msgid \"\"\n \"#include nested depth %u exceeds maximum of %u (use -fmax-include-\"\n \"depth=DEPTH to increase the maximum)\"\n msgstr \"\"\n \n-#: directives.c:884\n+#: directives.c:896\n msgid \"#include_next in primary source file\"\n msgstr \"\"\n \n-#: directives.c:910\n+#: directives.c:922\n #, c-format\n msgid \"invalid flag \\\"%s\\\" in line directive\"\n msgstr \"\"\n \n-#: directives.c:970\n+#: directives.c:989\n msgid \"unexpected end of file after #line\"\n msgstr \"\"\n \n-#: directives.c:973\n+#: directives.c:992\n #, c-format\n msgid \"\\\"%s\\\" after #line is not a positive integer\"\n msgstr \"\"\n \n-#: directives.c:979\n-#: directives.c:981\n+#: directives.c:998\n+#: directives.c:1000\n msgid \"line number out of range\"\n msgstr \"\"\n \n-#: directives.c:994\n-#: directives.c:1075\n+#: directives.c:1013\n+#: directives.c:1094\n #, c-format\n msgid \"\\\"%s\\\" is not a valid filename\"\n msgstr \"\"\n \n-#: directives.c:1035\n+#: directives.c:1054\n #, c-format\n msgid \"\\\"%s\\\" after # is not a positive integer\"\n msgstr \"\"\n \n-#: directives.c:1102\n+#: directives.c:1121\n #, c-format\n msgid \"file \\\"%s\\\" linemarker ignored due to incorrect nesting\"\n msgstr \"\"\n \n-#: directives.c:1180\n-#: directives.c:1182\n-#: directives.c:1184\n-#: directives.c:1772\n+#: directives.c:1199\n+#: directives.c:1201\n+#: directives.c:1203\n+#: directives.c:1791\n #, c-format\n msgid \"%s\"\n msgstr \"\"\n \n-#: directives.c:1208\n+#: directives.c:1227\n #, c-format\n msgid \"invalid #%s directive\"\n msgstr \"\"\n \n-#: directives.c:1271\n+#: directives.c:1290\n #, c-format\n msgid \"registering pragmas in namespace \\\"%s\\\" with mismatched name expansion\"\n msgstr \"\"\n \n-#: directives.c:1280\n+#: directives.c:1299\n #, c-format\n msgid \"registering pragma \\\"%s\\\" with name expansion and no namespace\"\n msgstr \"\"\n \n-#: directives.c:1298\n+#: directives.c:1317\n #, c-format\n msgid \"registering \\\"%s\\\" as both a pragma and a pragma namespace\"\n msgstr \"\"\n \n-#: directives.c:1301\n+#: directives.c:1320\n #, c-format\n msgid \"#pragma %s %s is already registered\"\n msgstr \"\"\n \n-#: directives.c:1304\n+#: directives.c:1323\n #, c-format\n msgid \"#pragma %s is already registered\"\n msgstr \"\"\n \n-#: directives.c:1334\n+#: directives.c:1353\n msgid \"registering pragma with NULL handler\"\n msgstr \"\"\n \n-#: directives.c:1551\n+#: directives.c:1570\n msgid \"#pragma once in main file\"\n msgstr \"\"\n \n-#: directives.c:1574\n+#: directives.c:1593\n msgid \"invalid #pragma push_macro directive\"\n msgstr \"\"\n \n-#: directives.c:1631\n+#: directives.c:1650\n msgid \"invalid #pragma pop_macro directive\"\n msgstr \"\"\n \n-#: directives.c:1686\n+#: directives.c:1705\n msgid \"invalid #pragma GCC poison directive\"\n msgstr \"\"\n \n-#: directives.c:1695\n+#: directives.c:1714\n #, c-format\n msgid \"poisoning existing macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: directives.c:1714\n+#: directives.c:1733\n msgid \"#pragma system_header ignored outside include file\"\n msgstr \"\"\n \n-#: directives.c:1739\n+#: directives.c:1758\n #, c-format\n msgid \"cannot find source file %s\"\n msgstr \"\"\n \n-#: directives.c:1743\n+#: directives.c:1762\n #, c-format\n msgid \"current file is older than %s\"\n msgstr \"\"\n \n-#: directives.c:1767\n+#: directives.c:1786\n #, c-format\n msgid \"invalid \\\"#pragma GCC %s\\\" directive\"\n msgstr \"\"\n \n-#: directives.c:1968\n+#: directives.c:1987\n msgid \"_Pragma takes a parenthesized string literal\"\n msgstr \"\"\n \n-#: directives.c:2051\n+#: directives.c:2070\n msgid \"#else without #if\"\n msgstr \"\"\n \n-#: directives.c:2056\n+#: directives.c:2075\n msgid \"#else after #else\"\n msgstr \"\"\n \n-#: directives.c:2058\n-#: directives.c:2091\n+#: directives.c:2077\n+#: directives.c:2111\n msgid \"the conditional began here\"\n msgstr \"\"\n \n-#: directives.c:2084\n-msgid \"#elif without #if\"\n+#: directives.c:2103\n+#, c-format\n+msgid \"#%s without #if\"\n msgstr \"\"\n \n-#: directives.c:2089\n-msgid \"#elif after #else\"\n+#: directives.c:2108\n+#, c-format\n+msgid \"#%s after #else\"\n msgstr \"\"\n \n-#: directives.c:2120\n+#: directives.c:2175\n msgid \"#endif without #if\"\n msgstr \"\"\n \n-#: directives.c:2196\n+#: directives.c:2251\n msgid \"missing '(' after predicate\"\n msgstr \"\"\n \n-#: directives.c:2214\n+#: directives.c:2269\n msgid \"missing ')' to complete answer\"\n msgstr \"\"\n \n-#: directives.c:2226\n+#: directives.c:2281\n msgid \"predicate's answer is empty\"\n msgstr \"\"\n \n-#: directives.c:2256\n+#: directives.c:2311\n msgid \"assertion without predicate\"\n msgstr \"\"\n \n-#: directives.c:2259\n+#: directives.c:2314\n msgid \"predicate must be an identifier\"\n msgstr \"\"\n \n-#: directives.c:2341\n+#: directives.c:2396\n #, c-format\n msgid \"\\\"%s\\\" re-asserted\"\n msgstr \"\"\n \n-#: directives.c:2659\n+#: directives.c:2714\n #, c-format\n msgid \"unterminated #%s\"\n msgstr \"\"\n@@ -451,180 +453,180 @@ msgstr \"\"\n msgid \"stdout\"\n msgstr \"\"\n \n-#: expr.c:636\n-#: expr.c:753\n+#: expr.c:632\n+#: expr.c:749\n msgid \"fixed-point constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:661\n+#: expr.c:657\n msgid \"invalid prefix \\\"0b\\\" for floating constant\"\n msgstr \"\"\n \n-#: expr.c:674\n+#: expr.c:670\n msgid \"use of C++17 hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:677\n+#: expr.c:673\n msgid \"use of C99 hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:721\n+#: expr.c:717\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" on floating constant\"\n msgstr \"\"\n \n-#: expr.c:732\n-#: expr.c:799\n+#: expr.c:728\n+#: expr.c:795\n #, c-format\n msgid \"traditional C rejects the \\\"%.*s\\\" suffix\"\n msgstr \"\"\n \n-#: expr.c:740\n+#: expr.c:736\n msgid \"suffix for double constant is a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:746\n+#: expr.c:742\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" with hexadecimal floating constant\"\n msgstr \"\"\n \n+#: expr.c:755\n #: expr.c:759\n-#: expr.c:763\n msgid \"decimal float constants are a C2X feature\"\n msgstr \"\"\n \n-#: expr.c:782\n+#: expr.c:778\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" on integer constant\"\n msgstr \"\"\n \n-#: expr.c:807\n+#: expr.c:803\n msgid \"use of C++11 long long integer constant\"\n msgstr \"\"\n \n-#: expr.c:808\n+#: expr.c:804\n msgid \"use of C99 long long integer constant\"\n msgstr \"\"\n \n-#: expr.c:822\n+#: expr.c:818\n msgid \"use of C++23 %<size_t%> integer constant\"\n msgstr \"\"\n \n-#: expr.c:823\n+#: expr.c:819\n msgid \"use of C++23 %<make_signed_t<size_t>%> integer constant\"\n msgstr \"\"\n \n-#: expr.c:834\n+#: expr.c:830\n msgid \"imaginary constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:841\n+#: expr.c:837\n msgid \"binary constants are a C++14 feature or GCC extension\"\n msgstr \"\"\n \n-#: expr.c:843\n+#: expr.c:839\n msgid \"binary constants are a C2X feature or GCC extension\"\n msgstr \"\"\n \n-#: expr.c:848\n+#: expr.c:844\n msgid \"binary constants are a C2X feature\"\n msgstr \"\"\n \n-#: expr.c:944\n+#: expr.c:940\n msgid \"integer constant is too large for its type\"\n msgstr \"\"\n \n-#: expr.c:975\n+#: expr.c:971\n msgid \"integer constant is so large that it is unsigned\"\n msgstr \"\"\n \n-#: expr.c:1070\n+#: expr.c:1066\n msgid \"missing ')' after \\\"defined\\\"\"\n msgstr \"\"\n \n-#: expr.c:1077\n+#: expr.c:1073\n msgid \"operator \\\"defined\\\" requires an identifier\"\n msgstr \"\"\n \n-#: expr.c:1085\n+#: expr.c:1081\n #, c-format\n msgid \"(\\\"%s\\\" is an alternative token for \\\"%s\\\" in C++)\"\n msgstr \"\"\n \n-#: expr.c:1098\n+#: expr.c:1094\n msgid \"this use of \\\"defined\\\" may not be portable\"\n msgstr \"\"\n \n-#: expr.c:1143\n+#: expr.c:1139\n msgid \"user-defined literal in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1148\n+#: expr.c:1144\n msgid \"floating constant in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1154\n+#: expr.c:1150\n msgid \"imaginary number in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1203\n+#: expr.c:1199\n #, c-format\n msgid \"\\\"%s\\\" is not defined, evaluates to 0\"\n msgstr \"\"\n \n-#: expr.c:1216\n+#: expr.c:1212\n msgid \"assertions are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:1219\n+#: expr.c:1215\n msgid \"assertions are a deprecated extension\"\n msgstr \"\"\n \n-#: expr.c:1465\n+#: expr.c:1461\n #, c-format\n msgid \"unbalanced stack in %s\"\n msgstr \"\"\n \n-#: expr.c:1485\n+#: expr.c:1481\n #, c-format\n msgid \"impossible operator '%u'\"\n msgstr \"\"\n \n-#: expr.c:1586\n+#: expr.c:1582\n msgid \"missing ')' in expression\"\n msgstr \"\"\n \n-#: expr.c:1615\n+#: expr.c:1611\n msgid \"'?' without following ':'\"\n msgstr \"\"\n \n-#: expr.c:1625\n+#: expr.c:1621\n msgid \"integer overflow in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1630\n+#: expr.c:1626\n msgid \"missing '(' in expression\"\n msgstr \"\"\n \n-#: expr.c:1662\n+#: expr.c:1658\n #, c-format\n msgid \"the left operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.c:1667\n+#: expr.c:1663\n #, c-format\n msgid \"the right operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.c:1926\n+#: expr.c:1922\n msgid \"traditional C rejects the unary plus operator\"\n msgstr \"\"\n \n-#: expr.c:2024\n+#: expr.c:2020\n msgid \"comma operator in operand of #if\"\n msgstr \"\"\n \n-#: expr.c:2160\n+#: expr.c:2156\n msgid \"division by zero in #if\"\n msgstr \"\"\n \n@@ -636,47 +638,47 @@ msgstr \"\"\n msgid \"use -Winvalid-pch for more information\"\n msgstr \"\"\n \n-#: files.c:1051\n+#: files.c:1055\n #, c-format\n msgid \"no include path in which to search for %s\"\n msgstr \"\"\n \n-#: files.c:1546\n+#: files.c:1573\n msgid \"Multiple include guards may be useful for:\\n\"\n msgstr \"\"\n \n-#: init.c:614\n+#: init.c:617\n msgid \"cppchar_t must be an unsigned type\"\n msgstr \"\"\n \n-#: init.c:618\n+#: init.c:621\n #, c-format\n msgid \"\"\n \"preprocessor arithmetic has maximum precision of %lu bits; target requires \"\n \"%lu bits\"\n msgstr \"\"\n \n-#: init.c:625\n+#: init.c:628\n msgid \"CPP arithmetic must be at least as precise as a target int\"\n msgstr \"\"\n \n-#: init.c:628\n+#: init.c:631\n msgid \"target char is less than 8 bits wide\"\n msgstr \"\"\n \n-#: init.c:632\n+#: init.c:635\n msgid \"target wchar_t is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:636\n+#: init.c:639\n msgid \"target int is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:641\n+#: init.c:644\n msgid \"CPP half-integer narrower than CPP character\"\n msgstr \"\"\n \n-#: init.c:645\n+#: init.c:648\n #, c-format\n msgid \"\"\n \"CPP on this host cannot handle wide character constants over %lu bits, but \"\n@@ -754,90 +756,94 @@ msgstr \"\"\n msgid \"identifier \\\"%s\\\" is a special operator name in C++\"\n msgstr \"\"\n \n-#: lex.c:1879\n+#: lex.c:1572\n+msgid \"adjacent digit separators\"\n+msgstr \"\"\n+\n+#: lex.c:1889\n msgid \"raw string delimiter longer than 16 characters\"\n msgstr \"\"\n \n-#: lex.c:1883\n+#: lex.c:1893\n msgid \"invalid new-line in raw string delimiter\"\n msgstr \"\"\n \n-#: lex.c:1887\n-#: lex.c:4639\n+#: lex.c:1897\n+#: lex.c:4652\n #, c-format\n msgid \"invalid character '%c' in raw string delimiter\"\n msgstr \"\"\n \n-#: lex.c:1926\n-#: lex.c:1949\n+#: lex.c:1936\n+#: lex.c:1959\n msgid \"unterminated raw string\"\n msgstr \"\"\n \n-#: lex.c:1971\n-#: lex.c:2100\n+#: lex.c:1981\n+#: lex.c:2110\n msgid \"\"\n \"invalid suffix on literal; C++11 requires a space between literal and string \"\n \"macro\"\n msgstr \"\"\n \n-#: lex.c:2083\n+#: lex.c:2093\n msgid \"null character(s) preserved in literal\"\n msgstr \"\"\n \n-#: lex.c:2086\n+#: lex.c:2096\n #, c-format\n msgid \"missing terminating %c character\"\n msgstr \"\"\n \n-#: lex.c:2118\n+#: lex.c:2128\n msgid \"C++11 requires a space between string literal and macro\"\n msgstr \"\"\n \n-#: lex.c:2711\n+#: lex.c:2721\n msgid \"module control-line cannot be in included file\"\n msgstr \"\"\n \n-#: lex.c:2725\n+#: lex.c:2735\n #, c-format\n msgid \"module control-line \\\"%s\\\" cannot be an object-like macro\"\n msgstr \"\"\n \n-#: lex.c:3099\n-#: lex.c:4472\n+#: lex.c:3109\n+#: lex.c:4485\n #: traditional.c:174\n msgid \"unterminated comment\"\n msgstr \"\"\n \n-#: lex.c:3113\n-#: lex.c:3147\n+#: lex.c:3123\n+#: lex.c:3157\n msgid \"C++ style comments are not allowed in ISO C90\"\n msgstr \"\"\n \n-#: lex.c:3115\n-#: lex.c:3126\n-#: lex.c:3150\n+#: lex.c:3125\n+#: lex.c:3136\n+#: lex.c:3160\n msgid \"(this will be reported only once per input file)\"\n msgstr \"\"\n \n-#: lex.c:3124\n+#: lex.c:3134\n msgid \"C++ style comments are incompatible with C90\"\n msgstr \"\"\n \n-#: lex.c:3156\n+#: lex.c:3166\n msgid \"multi-line comment\"\n msgstr \"\"\n \n-#: lex.c:3550\n+#: lex.c:3560\n #, c-format\n msgid \"unspellable token %s\"\n msgstr \"\"\n \n-#: lex.c:4627\n+#: lex.c:4640\n #, c-format\n msgid \"raw string delimiter longer than %d characters\"\n msgstr \"\"\n \n-#: lex.c:4697\n+#: lex.c:4710\n msgid \"unterminated literal\"\n msgstr \"\"\n \n@@ -871,13 +877,13 @@ msgid \"macro \\\"%s\\\" is not used\"\n msgstr \"\"\n \n #: macro.c:487\n-#: macro.c:778\n+#: macro.c:784\n #, c-format\n msgid \"invalid built-in macro \\\"%s\\\"\"\n msgstr \"\"\n \n #: macro.c:494\n-#: macro.c:596\n+#: macro.c:602\n #, c-format\n msgid \"macro \\\"%s\\\" might prevent reproducible builds\"\n msgstr \"\"\n@@ -886,142 +892,142 @@ msgstr \"\"\n msgid \"could not determine file timestamp\"\n msgstr \"\"\n \n-#: macro.c:610\n+#: macro.c:616\n msgid \"could not determine date and time\"\n msgstr \"\"\n \n-#: macro.c:642\n+#: macro.c:648\n msgid \"__COUNTER__ expanded inside directive with -fdirectives-only\"\n msgstr \"\"\n \n-#: macro.c:897\n+#: macro.c:903\n msgid \"invalid string literal, ignoring final '\\\\'\"\n msgstr \"\"\n \n-#: macro.c:959\n+#: macro.c:965\n #, c-format\n msgid \"pasting \\\"%s\\\" and \\\"%s\\\" does not give a valid preprocessing token\"\n msgstr \"\"\n \n-#: macro.c:1085\n+#: macro.c:1091\n msgid \"\"\n \"ISO C++11 requires at least one argument for the \\\"...\\\" in a variadic macro\"\n msgstr \"\"\n \n-#: macro.c:1089\n+#: macro.c:1095\n msgid \"\"\n \"ISO C99 requires at least one argument for the \\\"...\\\" in a variadic macro\"\n msgstr \"\"\n \n-#: macro.c:1096\n+#: macro.c:1102\n #, c-format\n msgid \"macro \\\"%s\\\" requires %u arguments, but only %u given\"\n msgstr \"\"\n \n-#: macro.c:1101\n+#: macro.c:1107\n #, c-format\n msgid \"macro \\\"%s\\\" passed %u arguments, but takes just %u\"\n msgstr \"\"\n \n-#: macro.c:1299\n+#: macro.c:1305\n #: traditional.c:822\n #, c-format\n msgid \"unterminated argument list invoking macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:1442\n+#: macro.c:1448\n #, c-format\n msgid \"function-like macro \\\"%s\\\" must be used with arguments in traditional C\"\n msgstr \"\"\n \n-#: macro.c:2220\n+#: macro.c:2226\n #, c-format\n msgid \"\"\n \"invoking macro %s argument %d: empty macro arguments are undefined in ISO C+\"\n \"+98\"\n msgstr \"\"\n \n-#: macro.c:2228\n-#: macro.c:2237\n+#: macro.c:2234\n+#: macro.c:2243\n #, c-format\n msgid \"\"\n \"invoking macro %s argument %d: empty macro arguments are undefined in ISO C90\"\n msgstr \"\"\n \n-#: macro.c:3279\n+#: macro.c:3285\n #, c-format\n msgid \"duplicate macro parameter \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:3361\n+#: macro.c:3367\n #, c-format\n msgid \"expected parameter name, found \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:3362\n+#: macro.c:3368\n #, c-format\n msgid \"expected ',' or ')', found \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:3363\n+#: macro.c:3369\n msgid \"expected parameter name before end of line\"\n msgstr \"\"\n \n-#: macro.c:3364\n+#: macro.c:3370\n msgid \"expected ')' before end of line\"\n msgstr \"\"\n \n-#: macro.c:3365\n+#: macro.c:3371\n msgid \"expected ')' after \\\"...\\\"\"\n msgstr \"\"\n \n-#: macro.c:3422\n+#: macro.c:3428\n msgid \"anonymous variadic macros were introduced in C++11\"\n msgstr \"\"\n \n-#: macro.c:3423\n-#: macro.c:3427\n+#: macro.c:3429\n+#: macro.c:3433\n msgid \"anonymous variadic macros were introduced in C99\"\n msgstr \"\"\n \n-#: macro.c:3433\n+#: macro.c:3439\n msgid \"ISO C++ does not permit named variadic macros\"\n msgstr \"\"\n \n-#: macro.c:3434\n+#: macro.c:3440\n msgid \"ISO C does not permit named variadic macros\"\n msgstr \"\"\n \n-#: macro.c:3480\n+#: macro.c:3486\n msgid \"'##' cannot appear at either end of a macro expansion\"\n msgstr \"\"\n \n-#: macro.c:3518\n+#: macro.c:3524\n msgid \"ISO C++11 requires whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:3519\n+#: macro.c:3525\n msgid \"ISO C99 requires whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:3543\n+#: macro.c:3549\n msgid \"missing whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:3593\n+#: macro.c:3599\n msgid \"'#' is not followed by a macro parameter\"\n msgstr \"\"\n \n-#: macro.c:3749\n+#: macro.c:3755\n #, c-format\n msgid \"\\\"%s\\\" redefined\"\n msgstr \"\"\n \n-#: macro.c:3754\n+#: macro.c:3760\n msgid \"this is the location of the previous definition\"\n msgstr \"\"\n \n-#: macro.c:3891\n+#: macro.c:3897\n #, c-format\n msgid \"macro argument \\\"%s\\\" would be stringified in traditional C\"\n msgstr \"\""}]}