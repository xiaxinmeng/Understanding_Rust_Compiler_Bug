{"sha": "6ca23bff71cdeddab002b28c86d09364ea435850", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNhMjNiZmY3MWNkZWRkYWIwMDJiMjhjODZkMDkzNjRlYTQzNTg1MA==", "commit": {"author": {"name": "Danny Smith", "email": "dannysmith@users.sourceforge.net", "date": "2003-03-12T08:59:29Z"}, "committer": {"name": "Danny Smith", "email": "dannysmith@gcc.gnu.org", "date": "2003-03-12T08:59:29Z"}, "message": "winnt.c (DLL_IMPORT_PREFIX): New define.\n\n\t* config/i386/winnt.c (DLL_IMPORT_PREFIX): New define.\n\tUse throughout instead of DLL_IMPORT_EXPORT_PREFIX and \"e.\"\n\t(DLL_EXPORT_PREFIX): New define. Use throughout instead of\n\tDLL_IMPORT_EXPORT_PREFIX and \"i.\"\n\t(i386_pe_dllexport_name_p): Here.\n\t(i386_pe_dllimport_name_p): Here.\n        (i386_pe_mark_dllexport): Here. Remove DLL_IMPORT_PREFIX,\n\tnot 9 chars when getting identifier name.\n\t(i386_pe_mark_dllimport): Here.\n\t(i386_pe_encode_section_info): Here. Remove DLL_IMPORT_PREFIX,\n\tnot 9 chars when getting identifier name. Correct comment.\n\t(i386_pe_strip_name_encoding): Here. Add comments for different\n\tcases.\n\t(gen_fastcall_suffix): Break down xmalloc() argument to\n\tcomponents.\n\t(gen_stdcall_suffix): Likewise.\n\tUpdate copyright year.\n\nFrom-SVN: r64227", "tree": {"sha": "0ae82257883f173ce93238a6ac745daffb87529e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ae82257883f173ce93238a6ac745daffb87529e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ca23bff71cdeddab002b28c86d09364ea435850", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ca23bff71cdeddab002b28c86d09364ea435850", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ca23bff71cdeddab002b28c86d09364ea435850", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ca23bff71cdeddab002b28c86d09364ea435850/comments", "author": null, "committer": null, "parents": [{"sha": "9b73c90a3b78e8b5d50ba9afbe2dc6317a1c066c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b73c90a3b78e8b5d50ba9afbe2dc6317a1c066c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b73c90a3b78e8b5d50ba9afbe2dc6317a1c066c"}], "stats": {"total": 91, "additions": 66, "deletions": 25}, "files": [{"sha": "5d8f291dc9d9f0f4e2b64454cab00477a0d32fc8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ca23bff71cdeddab002b28c86d09364ea435850/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ca23bff71cdeddab002b28c86d09364ea435850/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ca23bff71cdeddab002b28c86d09364ea435850", "patch": "@@ -1,3 +1,23 @@\n+2003-03-12  Danny Smith  <dannysmith@users.sourceforge.net>\n+ \n+\t* config/i386/winnt.c (DLL_IMPORT_PREFIX): New define.\n+\tUse throughout instead of DLL_IMPORT_EXPORT_PREFIX and \"e.\"\n+\t(DLL_EXPORT_PREFIX): New define. Use throughout instead of\n+\tDLL_IMPORT_EXPORT_PREFIX and \"i.\"\n+\t(i386_pe_dllexport_name_p): Here.\n+\t(i386_pe_dllimport_name_p): Here.\n+        (i386_pe_mark_dllexport): Here. Remove DLL_IMPORT_PREFIX,\n+\tnot 9 chars when getting identifier name.\n+\t(i386_pe_mark_dllimport): Here.\n+\t(i386_pe_encode_section_info): Here. Remove DLL_IMPORT_PREFIX,\n+\tnot 9 chars when getting identifier name. Correct comment.\n+\t(i386_pe_strip_name_encoding): Here. Add comments for different\n+\tcases.\n+\t(gen_fastcall_suffix): Break down xmalloc() argument to\n+\tcomponents.\n+\t(gen_stdcall_suffix): Likewise.\n+\tUpdate copyright year.\n+\n 2003-03-12  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR optimization/9888"}, {"sha": "566e75fbda68ddf656174303d56151173bfc0d1a", "filename": "gcc/config/i386/winnt.c", "status": "modified", "additions": 46, "deletions": 25, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ca23bff71cdeddab002b28c86d09364ea435850/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ca23bff71cdeddab002b28c86d09364ea435850/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=6ca23bff71cdeddab002b28c86d09364ea435850", "patch": "@@ -1,6 +1,6 @@\n /* Subroutines for insn-output.c for Windows NT.\n    Contributed by Douglas Rupp (drupp@cs.washington.edu)\n-   Copyright (C) 1995, 1997, 1998, 1999, 2000, 2001, 2002\n+   Copyright (C) 1995, 1997, 1998, 1999, 2000, 2001, 2002, 2003\n    Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n@@ -54,6 +54,15 @@ int i386_pe_dllimport_p PARAMS ((tree));\n void i386_pe_mark_dllexport PARAMS ((tree));\n void i386_pe_mark_dllimport PARAMS ((tree));\n \n+/* This is we how mark internal identifiers with dllimport or dllexport\n+   attributes.  */\n+#ifndef DLL_IMPORT_PREFIX\n+#define DLL_IMPORT_PREFIX \"#i.\"\n+#endif\n+#ifndef DLL_EXPORT_PREFIX\n+#define DLL_EXPORT_PREFIX \"#e.\"\n+#endif\n+\n /* Handle a \"dllimport\" or \"dllexport\" attribute;\n    arguments as in struct attribute_spec.handler.  */\n tree\n@@ -202,8 +211,8 @@ int\n i386_pe_dllexport_name_p (symbol)\n      const char *symbol;\n {\n-  return symbol[0] == DLL_IMPORT_EXPORT_PREFIX\n-         && symbol[1] == 'e' && symbol[2] == '.';\n+  return (strncmp (DLL_EXPORT_PREFIX, symbol,\n+\t\t   strlen (DLL_EXPORT_PREFIX)) == 0);\n }\n \n /* Return nonzero if SYMBOL is marked as being dllimport'd.  */\n@@ -212,8 +221,8 @@ int\n i386_pe_dllimport_name_p (symbol)\n      const char *symbol;\n {\n-  return symbol[0] == DLL_IMPORT_EXPORT_PREFIX\n-         && symbol[1] == 'i' && symbol[2] == '.';\n+  return (strncmp (DLL_IMPORT_PREFIX, symbol,\n+\t\t   strlen (DLL_IMPORT_PREFIX)) == 0);\n }\n \n /* Mark a DECL as being dllexport'd.\n@@ -237,12 +246,13 @@ i386_pe_mark_dllexport (decl)\n   else\n     abort ();\n   if (i386_pe_dllimport_name_p (oldname))\n-    oldname += 9;\n+    /* Remove DLL_IMPORT_PREFIX.  */\n+    oldname += strlen (DLL_IMPORT_PREFIX);\n   else if (i386_pe_dllexport_name_p (oldname))\n     return; /* already done */\n \n-  newname = alloca (strlen (oldname) + 4);\n-  sprintf (newname, \"%ce.%s\", DLL_IMPORT_EXPORT_PREFIX, oldname);\n+  newname = alloca (strlen (DLL_EXPORT_PREFIX) + strlen (oldname) + 1);\n+  sprintf (newname, \"%s%s\", DLL_EXPORT_PREFIX, oldname);\n \n   /* We pass newname through get_identifier to ensure it has a unique\n      address.  RTL processing can sometimes peek inside the symbol ref\n@@ -316,8 +326,8 @@ i386_pe_mark_dllimport (decl)\n       return;\n     }\n \n-  newname = alloca (strlen (oldname) + 4);\n-  sprintf (newname, \"%ci.%s\", DLL_IMPORT_EXPORT_PREFIX, oldname);\n+  newname = alloca (strlen (DLL_IMPORT_PREFIX) + strlen (oldname) + 1);\n+  sprintf (newname, \"%s%s\", DLL_IMPORT_PREFIX, oldname);\n \n   /* We pass newname through get_identifier to ensure it has a unique\n      address.  RTL processing can sometimes peek inside the symbol ref\n@@ -366,7 +376,8 @@ gen_fastcall_suffix (decl)\n \t  }\n       }\n \n-  newsym = xmalloc (strlen (asmname) + 11);\n+  /* Assume max of 8 base 10 digits in the suffix.  */ \n+  newsym = xmalloc (1 + strlen (asmname) + 1 + 8 + 1);\n   sprintf (newsym, \"%c%s@%d\", FASTCALL_PREFIX, asmname, total/BITS_PER_UNIT);\n   return IDENTIFIER_POINTER (get_identifier (newsym));\n }\n@@ -404,7 +415,8 @@ gen_stdcall_suffix (decl)\n \t  }\n       }\n \n-  newsym = xmalloc (strlen (asmname) + 10);\n+  /* Assume max of 8 base 10 digits in the suffix.  */ \n+  newsym = xmalloc (strlen (asmname) + 1 + 8 + 1);\n   sprintf (newsym, \"%s@%d\", asmname, total/BITS_PER_UNIT);\n   return IDENTIFIER_POINTER (get_identifier (newsym));\n }\n@@ -447,8 +459,8 @@ i386_pe_encode_section_info (decl, first)\n     i386_pe_mark_dllimport (decl);\n   /* It might be that DECL has already been marked as dllimport, but a\n      subsequent definition nullified that.  The attribute is gone but\n-     DECL_RTL still has (DLL_IMPORT_EXPORT_PREFIX)i._imp__foo.  We need\n-     to remove that. Ditto for the DECL_NON_ADDR_CONST_P flag.  */\n+     DECL_RTL still has (DLL_IMPORT_PREFIX) prefixed. We need to remove\n+     that. Ditto for the DECL_NON_ADDR_CONST_P flag.  */\n   else if ((TREE_CODE (decl) == FUNCTION_DECL\n \t    || TREE_CODE (decl) == VAR_DECL)\n \t   && DECL_RTL (decl) != NULL_RTX\n@@ -458,7 +470,8 @@ i386_pe_encode_section_info (decl, first)\n \t   && i386_pe_dllimport_name_p (XSTR (XEXP (XEXP (DECL_RTL (decl), 0), 0), 0)))\n     {\n       const char *oldname = XSTR (XEXP (XEXP (DECL_RTL (decl), 0), 0), 0);\n-      tree idp = get_identifier (oldname + 9);\n+      /* Remove DLL_IMPORT_PREFIX.  */\n+      tree idp = get_identifier (oldname + strlen (DLL_IMPORT_PREFIX));\n       rtx newrtl = gen_rtx (SYMBOL_REF, Pmode, IDENTIFIER_POINTER (idp));\n \n       XEXP (DECL_RTL (decl), 0) = newrtl;\n@@ -477,8 +490,12 @@ const char *\n i386_pe_strip_name_encoding (str)\n      const char *str;\n {\n-  if (*str == DLL_IMPORT_EXPORT_PREFIX)\n-    str += 3;\n+  if (strncmp (str, DLL_IMPORT_PREFIX, strlen (DLL_IMPORT_PREFIX))\n+      == 0)\n+    str += strlen (DLL_IMPORT_PREFIX);\n+  else if (strncmp (str, DLL_EXPORT_PREFIX, strlen (DLL_EXPORT_PREFIX))\n+\t   == 0)\n+    str += strlen (DLL_EXPORT_PREFIX);\n   if (*str == '*')\n     str += 1;\n   return str;\n@@ -508,30 +525,34 @@ void i386_pe_output_labelref (stream, name)\n      FILE *stream;\n      const char *name;\n {\n-  char prefix[4];\n-\n-  sprintf (prefix, \"%ci.\", DLL_IMPORT_EXPORT_PREFIX);\n-  if (strncmp (name, prefix, strlen (prefix)) == 0)\n-    {\n-      if (name[3] == FASTCALL_PREFIX)\n+  if (strncmp (name, DLL_IMPORT_PREFIX, strlen (DLL_IMPORT_PREFIX))\n+      == 0)\n+   /* A dll import */ \n+   {\n+      if (name[strlen (DLL_IMPORT_PREFIX)] == FASTCALL_PREFIX)\n+      /* A dllimport fastcall symbol.  */   \n         {\n           fprintf (stream, \"__imp_%s\",\n                    i386_pe_strip_name_encoding (name));\n         }\n       else\n+      /* A dllimport non-fastcall symbol.  */ \n         {\n           fprintf (stream, \"__imp__%s\",\n                    i386_pe_strip_name_encoding (name));\n         }\n     }\n   else if ((name[0] == FASTCALL_PREFIX)\n-           || ((name[0] == DLL_IMPORT_EXPORT_PREFIX)\n-               && (name[3] == FASTCALL_PREFIX)))\n+           || (strncmp (name, DLL_EXPORT_PREFIX, strlen (DLL_EXPORT_PREFIX)\n+\t       == 0 \n+\t       && name[strlen (DLL_EXPORT_PREFIX)] == FASTCALL_PREFIX)))\n+    /* A fastcall symbol.  */\n     {\n       fprintf (stream, \"%s\",\n                i386_pe_strip_name_encoding (name));\n     }\n   else\n+    /* Everything else.  */\n     {\n       fprintf (stream, \"%s%s\", USER_LABEL_PREFIX,\n                i386_pe_strip_name_encoding (name));"}]}