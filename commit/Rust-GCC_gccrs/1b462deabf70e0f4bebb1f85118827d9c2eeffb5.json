{"sha": "1b462deabf70e0f4bebb1f85118827d9c2eeffb5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI0NjJkZWFiZjcwZTBmNGJlYmIxZjg1MTE4ODI3ZDljMmVlZmZiNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-04-29T09:11:37Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-04-29T09:11:37Z"}, "message": "c++: Fix up detach clause vs. data-sharing clause checking [PR100319]\n\nThe standard says that \"The event-handle will be considered as if it\nwas specified on a firstprivate clause.\" which means that it can't\nbe explicitly specified in some other data-sharing clause.\nThe checking is implemented correctly for C, but for C++ when detach_seen\nis true (i.e. the construct had detach clause) we were comparing\nOMP_CLAUSE_DECL (c) with t, which was previously initialized to\nOMP_CLAUSE_DECL (c), which means it complained about any explicit\ndata-sharing clause on the same construct with a detach clause.\n\nFixed by remembering the detach clause in detach_seen (instead of a boolean\nflag) and comparing against its OMP_CLAUSE_DECL.\n\n2021-04-29  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/100319\n\t* semantics.c (finish_omp_clauses): Fix up check that variable\n\tmentioned in detach clause doesn't appear in data-sharing clauses.\n\n\t* c-c++-common/gomp/task-detach-3.c: New test.", "tree": {"sha": "ebf9101771dff41bf9e4782ded4a8fc67a198797", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebf9101771dff41bf9e4782ded4a8fc67a198797"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b462deabf70e0f4bebb1f85118827d9c2eeffb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b462deabf70e0f4bebb1f85118827d9c2eeffb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b462deabf70e0f4bebb1f85118827d9c2eeffb5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b462deabf70e0f4bebb1f85118827d9c2eeffb5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c57a8aea0c3ab8394f7dbfa417ee27b4613f63b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c57a8aea0c3ab8394f7dbfa417ee27b4613f63b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c57a8aea0c3ab8394f7dbfa417ee27b4613f63b7"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "3a6468fd5f3b5a4033117207f99f8f65079829e2", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b462deabf70e0f4bebb1f85118827d9c2eeffb5/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b462deabf70e0f4bebb1f85118827d9c2eeffb5/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=1b462deabf70e0f4bebb1f85118827d9c2eeffb5", "patch": "@@ -6527,7 +6527,7 @@ finish_omp_clauses (tree clauses, enum c_omp_region_type ort)\n      has been seen, -2 if mixed inscan/normal reduction diagnosed.  */\n   int reduction_seen = 0;\n   bool allocate_seen = false;\n-  bool detach_seen = false;\n+  tree detach_seen = NULL_TREE;\n   bool mergeable_seen = false;\n \n   bitmap_obstack_initialize (NULL);\n@@ -7578,7 +7578,7 @@ finish_omp_clauses (tree clauses, enum c_omp_region_type ort)\n \t\t\t    type);\n \t\t  remove = true;\n \t\t}\n-\t      detach_seen = true;\n+\t      detach_seen = c;\n \t      cxx_mark_addressable (t);\n \t    }\n \t  break;\n@@ -8548,7 +8548,7 @@ finish_omp_clauses (tree clauses, enum c_omp_region_type ort)\n \t      || OMP_CLAUSE_CODE (c) == OMP_CLAUSE_PRIVATE\n \t      || OMP_CLAUSE_CODE (c) == OMP_CLAUSE_FIRSTPRIVATE\n \t      || OMP_CLAUSE_CODE (c) == OMP_CLAUSE_LASTPRIVATE)\n-\t  && OMP_CLAUSE_DECL (c) == t)\n+\t  && OMP_CLAUSE_DECL (c) == OMP_CLAUSE_DECL (detach_seen))\n \t{\n \t  error_at (OMP_CLAUSE_LOCATION (c),\n \t\t    \"the event handle of a %<detach%> clause \""}, {"sha": "97e622de2cd0e82c0a3a616c2137eee7277215da", "filename": "gcc/testsuite/c-c++-common/gomp/task-detach-3.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b462deabf70e0f4bebb1f85118827d9c2eeffb5/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Ftask-detach-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b462deabf70e0f4bebb1f85118827d9c2eeffb5/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Ftask-detach-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Ftask-detach-3.c?ref=1b462deabf70e0f4bebb1f85118827d9c2eeffb5", "patch": "@@ -0,0 +1,19 @@\n+/* PR c++/100319 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fopenmp\" } */\n+\n+typedef enum omp_event_handle_t\n+{\n+  __omp_event_handle_t_max__ = __UINTPTR_MAX__\n+} omp_event_handle_t;\n+\n+extern void omp_fulfill_event (omp_event_handle_t);\n+\n+void f (omp_event_handle_t x, omp_event_handle_t y, int z)\n+{\n+  #pragma omp task detach (x) firstprivate (y, z)\t/* { dg-bogus \"the event handle of a 'detach' clause should not be in a data-sharing clause\" } */\n+    ;\n+\n+  #pragma omp task detach (x) shared (y)\t\t/* { dg-bogus \"the event handle of a 'detach' clause should not be in a data-sharing clause\" } */\n+    ;\n+}"}]}