{"sha": "5abe0657553580bd1b7488dd84d55138a8d9f23c", "node_id": "C_kwDOANBUbNoAKDVhYmUwNjU3NTUzNTgwYmQxYjc0ODhkZDg0ZDU1MTM4YThkOWYyM2M", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-08-22T14:42:17Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-08-22T21:52:24Z"}, "message": "libstdc++: Fix for explicit copy ctors in <thread> and <future> [PR106695]\n\nWhen I changed std::thread and std::async to avoid unnecessary move\nconstruction of temporaries, I introduced a regression where types with\nan explicit copy constructor could not be passed to std::thread or\nstd::async. The fix is to add a constructor instead of using aggregate\ninitialization of an unnamed temporary.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/106695\n\t* include/bits/std_thread.h (thread::_State_impl): Forward\n\tindividual arguments to _Invoker constructor.\n\t(thread::_Invoker): Add constructor. Delete copies.\n\t* include/std/future (__future_base::_Deferred_state): Forward\n\tindividual arguments to _Invoker constructor.\n\t(__future_base::_Async_state_impl): Likewise.\n\t* testsuite/30_threads/async/106695.cc: New test.\n\t* testsuite/30_threads/thread/106695.cc: New test.", "tree": {"sha": "a5841e9abbf074b0f1cd9dd4f9ed57e048a3fd9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5841e9abbf074b0f1cd9dd4f9ed57e048a3fd9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5abe0657553580bd1b7488dd84d55138a8d9f23c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5abe0657553580bd1b7488dd84d55138a8d9f23c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5abe0657553580bd1b7488dd84d55138a8d9f23c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5abe0657553580bd1b7488dd84d55138a8d9f23c/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b09eea33f2bf9d1eae73b25cc25efb05ea1dc3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b09eea33f2bf9d1eae73b25cc25efb05ea1dc3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b09eea33f2bf9d1eae73b25cc25efb05ea1dc3f"}], "stats": {"total": 62, "additions": 59, "deletions": 3}, "files": [{"sha": "3a7db12c6bac33898a0500a9d3449dfb96e2275f", "filename": "libstdc++-v3/include/bits/std_thread.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5abe0657553580bd1b7488dd84d55138a8d9f23c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_thread.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5abe0657553580bd1b7488dd84d55138a8d9f23c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_thread.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_thread.h?ref=5abe0657553580bd1b7488dd84d55138a8d9f23c", "patch": "@@ -227,7 +227,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n \ttemplate<typename... _Args>\n \t  _State_impl(_Args&&... __args)\n-\t  : _M_func{{std::forward<_Args>(__args)...}}\n+\t  : _M_func(std::forward<_Args>(__args)...)\n \t  { }\n \n \tvoid\n@@ -261,6 +261,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     template<typename _Tuple>\n       struct _Invoker\n       {\n+\ttemplate<typename... _Args>\n+\t  explicit\n+\t  _Invoker(_Args&&... __args)\n+\t  : _M_t(std::forward<_Args>(__args)...)\n+\t  { }\n+\n \t_Tuple _M_t;\n \n \ttemplate<typename>"}, {"sha": "ba1f28c6c759790e0472232fc1ac351f9682bfc1", "filename": "libstdc++-v3/include/std/future", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5abe0657553580bd1b7488dd84d55138a8d9f23c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5abe0657553580bd1b7488dd84d55138a8d9f23c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture?ref=5abe0657553580bd1b7488dd84d55138a8d9f23c", "patch": "@@ -1681,7 +1681,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \texplicit\n \t_Deferred_state(_Args&&... __args)\n \t: _M_result(new _Result<_Res>()),\n-\t  _M_fn{{std::forward<_Args>(__args)...}}\n+\t  _M_fn(std::forward<_Args>(__args)...)\n \t{ }\n \n     private:\n@@ -1748,7 +1748,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \texplicit\n \t_Async_state_impl(_Args&&... __args)\n \t: _M_result(new _Result<_Res>()),\n-\t  _M_fn{{std::forward<_Args>(__args)...}}\n+\t  _M_fn(std::forward<_Args>(__args)...)\n \t{\n \t  _M_thread = std::thread{&_Async_state_impl::_M_run, this};\n \t}"}, {"sha": "74996342dc7f01461ea742b58970eae563d08764", "filename": "libstdc++-v3/testsuite/30_threads/async/106695.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5abe0657553580bd1b7488dd84d55138a8d9f23c/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2F106695.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5abe0657553580bd1b7488dd84d55138a8d9f23c/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2F106695.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2F106695.cc?ref=5abe0657553580bd1b7488dd84d55138a8d9f23c", "patch": "@@ -0,0 +1,29 @@\n+// { dg-do compile { target c++11 } }\n+// { dg-require-gthreads \"\" }\n+\n+// PR libstdc++/106695\n+// Explicit copy constructor does not work for a parameter passed via std::async\n+\n+#include <future>\n+\n+struct A {\n+  A() = default;\n+  explicit A(const A&) = default;\n+};\n+\n+void func(const A&) { }\n+\n+void\n+test_async()\n+{\n+  (void) std::async(std::launch::async, func, A{});\n+  (void) std::async(std::launch::deferred, func, A{});\n+  (void) std::async(func, A{});\n+}\n+\n+void\n+test_task()\n+{\n+  std::packaged_task<void(const A&)> task(func);\n+  task(A{});\n+}"}, {"sha": "97e9e922d8e04895f86bd00a31cf84d8c77e67e0", "filename": "libstdc++-v3/testsuite/30_threads/thread/106695.cc", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5abe0657553580bd1b7488dd84d55138a8d9f23c/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2F106695.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5abe0657553580bd1b7488dd84d55138a8d9f23c/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2F106695.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2F106695.cc?ref=5abe0657553580bd1b7488dd84d55138a8d9f23c", "patch": "@@ -0,0 +1,21 @@\n+// { dg-do compile { target c++11 } }\n+// { dg-require-gthreads \"\" }\n+\n+// PR libstdc++/106695\n+// Explicit copy constructor does not work for a parameter passed via std::async\n+\n+#include <thread>\n+\n+struct A {\n+  A() = default;\n+  explicit A(const A&) = default;\n+};\n+\n+void func(const A&) { }\n+\n+void\n+test_thread()\n+{\n+  std::thread t(func, A{});\n+  t.join();\n+}"}]}