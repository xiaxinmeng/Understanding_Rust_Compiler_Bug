{"sha": "5da1234bb7aaf95dd7e3b5e5438cd92be95daf0f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRhMTIzNGJiN2FhZjk1ZGQ3ZTNiNWU1NDM4Y2Q5MmJlOTVkYWYwZg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2018-06-27T23:21:46Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2018-06-27T23:21:46Z"}, "message": "C++: don't offer bogus \"._0\" suggestions (PR c++/86329)\n\nPR c++/86329 reports that the C++ frontend can offer bogus suggestions like:\n\n#include <string>\n\nint compare()\n{\n  return __n1 - __n2;\n}\n\nsuggested.cc: In function 'int compare()':\nsuggested.cc:5:10: error: '__n1' was not declared in this scope\n   return __n1 - __n2;\n          ^~~~\nsuggested.cc:5:10: note: suggested alternative: '._61'\n   return __n1 - __n2;\n          ^~~~\n          ._61\nsuggested.cc:5:17: error: '__n2' was not declared in this scope\n   return __n1 - __n2;\n                 ^~~~\nsuggested.cc:5:17: note: suggested alternative: '._72'\n   return __n1 - __n2;\n                 ^~~~\n                 ._72\n\nThe dot-prefixed names are an implementation detail of how we implement\nanonymous enums found in the header files, generated via\nanon_aggrname_format in make_anon_name.\n\nThis patch uses anon_aggrname_p to filter them out when considering\nwhich names to suggest.\n\ngcc/cp/ChangeLog:\n\tPR c++/86329\n\t* name-lookup.c (consider_binding_level): Filter out names that\n\tmatch anon_aggrname_p.\n\ngcc/testsuite/ChangeLog:\n\tPR c++/86329\n\t* g++.dg/lookup/pr86329.C: New test.\n\nFrom-SVN: r262199", "tree": {"sha": "12eafa9bd3a739d78c5cd45154533aa9946be2cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12eafa9bd3a739d78c5cd45154533aa9946be2cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5da1234bb7aaf95dd7e3b5e5438cd92be95daf0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5da1234bb7aaf95dd7e3b5e5438cd92be95daf0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5da1234bb7aaf95dd7e3b5e5438cd92be95daf0f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5da1234bb7aaf95dd7e3b5e5438cd92be95daf0f/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b4324a144b4499725143baf1f69722f92814572e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4324a144b4499725143baf1f69722f92814572e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4324a144b4499725143baf1f69722f92814572e"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "040a84d021693cf1d6a0457622f36dc265005b79", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da1234bb7aaf95dd7e3b5e5438cd92be95daf0f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da1234bb7aaf95dd7e3b5e5438cd92be95daf0f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5da1234bb7aaf95dd7e3b5e5438cd92be95daf0f", "patch": "@@ -1,3 +1,9 @@\n+2018-06-27  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c++/86329\n+\t* name-lookup.c (consider_binding_level): Filter out names that\n+\tmatch anon_aggrname_p.\n+\n 2018-06-27  Jason Merrill  <jason@redhat.com>\n \n \t* name-lookup.c (do_pushtag): If we skip a class level, also skip"}, {"sha": "3aafb0f0ccf8190fa3416fdb30458c14f2e480a7", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da1234bb7aaf95dd7e3b5e5438cd92be95daf0f/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da1234bb7aaf95dd7e3b5e5438cd92be95daf0f/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=5da1234bb7aaf95dd7e3b5e5438cd92be95daf0f", "patch": "@@ -5786,6 +5786,11 @@ consider_binding_level (tree name, best_match <tree, const char *> &bm,\n       if (!suggestion)\n \tcontinue;\n \n+      /* Don't suggest names that are for anonymous aggregate types, as\n+\t they are an implementation detail generated by the compiler.  */\n+      if (anon_aggrname_p (suggestion))\n+\tcontinue;\n+\n       const char *suggestion_str = IDENTIFIER_POINTER (suggestion);\n \n       /* Ignore internal names with spaces in them.  */"}, {"sha": "3b33d2051f004075258a9a557ba3d51a179de231", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da1234bb7aaf95dd7e3b5e5438cd92be95daf0f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da1234bb7aaf95dd7e3b5e5438cd92be95daf0f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5da1234bb7aaf95dd7e3b5e5438cd92be95daf0f", "patch": "@@ -1,3 +1,8 @@\n+2018-06-27  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c++/86329\n+\t* g++.dg/lookup/pr86329.C: New test.\n+\n 2018-06-27  Carl Love  <cel@us.ibm.com>\n \n Add test case that was supposed to be added in commit 255556 on 2017-12-11."}, {"sha": "fc091ba35de68e13d7c3a44b8f91795ef311d4a4", "filename": "gcc/testsuite/g++.dg/lookup/pr86329.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da1234bb7aaf95dd7e3b5e5438cd92be95daf0f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fpr86329.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da1234bb7aaf95dd7e3b5e5438cd92be95daf0f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fpr86329.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fpr86329.C?ref=5da1234bb7aaf95dd7e3b5e5438cd92be95daf0f", "patch": "@@ -0,0 +1,11 @@\n+/* PR c++/86329: ensure we don't erroneously offer suggestions like \"._0\",\n+   which are an implementation detail of how e.g. anonymous enums are\n+   handled internally.  */\n+   \n+enum {NONEMPTY};\n+\n+int test()\n+{\n+  return __0; // { dg-error \"'__0' was not declared in this scope\" }\n+  // { dg-bogus \"suggested alternative\" \"\" { target *-*-* } .-1 }\n+}"}]}