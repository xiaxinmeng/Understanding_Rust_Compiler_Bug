{"sha": "ab869e7f7548537a16b57658fb0826f92b3d2af6", "node_id": "C_kwDOANBUbNoAKGFiODY5ZTdmNzU0ODUzN2ExNmI1NzY1OGZiMDgyNmY5MmIzZDJhZjY", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-05-06T00:16:26Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-05-06T00:16:26Z"}, "message": "Daily bump.", "tree": {"sha": "2fa5c1db2a45308de3cea603e5deebe6cf0631de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2fa5c1db2a45308de3cea603e5deebe6cf0631de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab869e7f7548537a16b57658fb0826f92b3d2af6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab869e7f7548537a16b57658fb0826f92b3d2af6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab869e7f7548537a16b57658fb0826f92b3d2af6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab869e7f7548537a16b57658fb0826f92b3d2af6/comments", "author": null, "committer": null, "parents": [{"sha": "2d8752c5923e2ed4dc33b95038fed82b46526feb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d8752c5923e2ed4dc33b95038fed82b46526feb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d8752c5923e2ed4dc33b95038fed82b46526feb"}], "stats": {"total": 235, "additions": 234, "deletions": 1}, "files": [{"sha": "c17c35fbc2ebd3694a845ec9618a29af5463103a", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab869e7f7548537a16b57658fb0826f92b3d2af6/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab869e7f7548537a16b57658fb0826f92b3d2af6/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=ab869e7f7548537a16b57658fb0826f92b3d2af6", "patch": "@@ -1,3 +1,8 @@\n+2022-05-05  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\t* MAINTAINERS: Add myself as PowerPC port co-maintainer and to DCO\n+\tsection.\n+\n 2022-04-19  Richard Henderson  <rth@gcc.gnu.org>\n \n \t* MAINTAINERS: Update my email address."}, {"sha": "99ef848cd4672970eaec5ec82bc6142c1ecc4562", "filename": "gcc/ChangeLog", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab869e7f7548537a16b57658fb0826f92b3d2af6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab869e7f7548537a16b57658fb0826f92b3d2af6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ab869e7f7548537a16b57658fb0826f92b3d2af6", "patch": "@@ -1,3 +1,66 @@\n+2022-05-05  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* gimplify.cc (gimplify_omp_for): Update messages for SCHEDULED\n+\tand ORDERED clause conflict errors.  Add check for GRAINSIZE and\n+\tNUM_TASKS on TASKLOOP.\n+\n+2022-05-05  Martin Liska  <mliska@suse.cz>\n+\n+\t* genautomata.cc (create_composed_state): Remove dead code.\n+\t* graphite-poly.cc (print_pdrs): Likewise.\n+\t* lto-wrapper.cc (run_gcc): Likewise.\n+\t* tree-switch-conversion.cc (switch_decision_tree::balance_case_nodes):\n+\tLikewise.\n+\n+2022-05-05  Martin Liska  <mliska@suse.cz>\n+\n+\t* tree-profile.cc (gimple_gen_ic_profiler): Prefix names with\n+\tPROF_*.\n+\t(gimple_gen_time_profiler): Likewise.\n+\n+2022-05-05  Martin Liska  <mliska@suse.cz>\n+\n+\t* value-prof.cc (stream_out_histogram_value): Remove sanity\n+\tchecking.\n+\n+2022-05-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/104162\n+\t* tree-ssa-sccvn.cc (vn_reference_lookup): Handle\n+\t&MEM[_1 + 5].a[i] like a POINTER_PLUS_EXPR if the offset\n+\tbecomes invariant.\n+\t(vn_reference_insert): Likewise.\n+\n+2022-05-05  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-core.h (tree_real_cst::real_cst_ptr): Remove pointer\n+\tto real_value field.\n+\t(tree_real_cst::value): Add real_value field.\n+\t* tree.h (TREE_REAL_CST_PTR): Adjust.\n+\t* tree.cc (build_real): Remove separate allocation.\n+\t* tree-streamer-in.cc (unpack_ts_real_cst_value_fields):\n+\tLikewise.\n+\n+2022-05-05  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-ifcombine.cc (bb_no_side_effects_p): Avoid executing\n+\tdivisions with undefined overflow unconditionally.\n+\t(pass_tree_ifcombine::execute): Rewrite stmts with undefined\n+\toverflow to defined.\n+\n+2022-05-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/105484\n+\t* gimple-isel.cc (gimple_expand_vec_set_expr): Clean EH, return\n+\twhether the CFG changed.\n+\t(gimple_expand_vec_exprs): When the CFG changed, clean it up.\n+\n+2022-05-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/104595\n+\t* tree-vect-patterns.cc (vect_recog_bool_pattern): For\n+\tCOND_EXPR do not fail if check_bool_pattern returns false.\n+\n 2022-05-04  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* omp-low.cc (lower_omp_target): Fix use_device_{addr,ptr} with list"}, {"sha": "50478337b491d9f9dcc404a36e402efc6b72ecf9", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab869e7f7548537a16b57658fb0826f92b3d2af6/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab869e7f7548537a16b57658fb0826f92b3d2af6/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=ab869e7f7548537a16b57658fb0826f92b3d2af6", "patch": "@@ -1 +1 @@\n-20220505\n+20220506"}, {"sha": "94cdfe01d5428e5ff4f53888a6388dbd3d610910", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab869e7f7548537a16b57658fb0826f92b3d2af6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab869e7f7548537a16b57658fb0826f92b3d2af6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ab869e7f7548537a16b57658fb0826f92b3d2af6", "patch": "@@ -1,3 +1,20 @@\n+2022-05-05  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/64679\n+\t* parser.cc (cp_parser_parameter_declaration_clause): Maintain\n+\ta vector of parameters that haven't been pushed yet.  Push them at the\n+\tend of a valid parameter-declaration-clause.\n+\t(cp_parser_parameter_declaration_list): Take a new auto_vec parameter.\n+\tDo not pushdecl while parsing tentatively when pushdecl-ing a parameter\n+\twould result in a hard error.\n+\t(cp_parser_cache_defarg): Adjust the call to\n+\tcp_parser_parameter_declaration_list.\n+\n+2022-05-05  Richard Biener  <rguenther@suse.de>\n+\n+\t* module.cc (trees_in::core_vals): Remove separate allocation\n+\tfor REAL_CST.\n+\n 2022-05-04  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/104470"}, {"sha": "e084d9872564b8cab1f8d9e6eba34df0cb6638fc", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab869e7f7548537a16b57658fb0826f92b3d2af6/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab869e7f7548537a16b57658fb0826f92b3d2af6/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ab869e7f7548537a16b57658fb0826f92b3d2af6", "patch": "@@ -1,3 +1,14 @@\n+2022-05-05  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* gfortran.h (struct gfc_omp_clauses): Add non_rectangular bit.\n+\t* openmp.cc (is_outer_iteration_variable): New function.\n+\t(expr_is_invariant): New function.\n+\t(bound_expr_is_canonical): New function.\n+\t(resolve_omp_do): Replace existing non-rectangularity error with\n+\tcheck for canonical form and setting non_rectangular bit.\n+\t* trans-openmp.cc (gfc_trans_omp_do): Transfer non_rectangular\n+\tflag to generated tree structure.\n+\n 2022-05-02  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* trans-openmp.cc (gfc_trans_omp_critical): Set location on OMP"}, {"sha": "1972f9a9681df674c2d33031a4ef35f294ff2a57", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab869e7f7548537a16b57658fb0826f92b3d2af6/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab869e7f7548537a16b57658fb0826f92b3d2af6/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=ab869e7f7548537a16b57658fb0826f92b3d2af6", "patch": "@@ -1,3 +1,7 @@\n+2022-05-05  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.pot: Regenerate.\n+\n 2022-05-03  Joseph Myers  <joseph@codesourcery.com>\n \n \t* sv.po: Update."}, {"sha": "4b7f49dfba2706c0b05e84c1daba4c8510f81144", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab869e7f7548537a16b57658fb0826f92b3d2af6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab869e7f7548537a16b57658fb0826f92b3d2af6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ab869e7f7548537a16b57658fb0826f92b3d2af6", "patch": "@@ -1,3 +1,57 @@\n+2022-05-05  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/64679\n+\t* g++.dg/parse/ambig11.C: New test.\n+\t* g++.dg/parse/ambig12.C: New test.\n+\t* g++.dg/parse/ambig13.C: New test.\n+\t* g++.dg/parse/ambig14.C: New test.\n+\n+2022-05-05  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/i386/pr103611-2.c (dg-do): Compile for target ia32.\n+\t(dg-options): Remove -m32.\n+\t* gcc.target/i386/pr105032.c (dg-do): Compile for taget ia32.\n+\t(dg-additional-options): Remove.\n+\t* gcc.target/i386/pr104732.c (dg-options): Remove -m32.\n+\t* gcc.target/i386/pr99753.c (dg-options): Ditto.\n+\n+2022-05-05  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* c-c++-common/gomp/loop-6.c (f3): New function to test TASKLOOP\n+\tdiagnostics.\n+\t* gfortran.dg/gomp/collapse1.f90: Update expected messages.\n+\t* gfortran.dg/gomp/pr85313.f90: Remove dg-error on non-rectangular\n+\tloops that are now accepted.\n+\t* gfortran.dg/gomp/non-rectangular-loop.f90: New file.\n+\t* gfortran.dg/gomp/canonical-loop-1.f90: New file.\n+\t* gfortran.dg/gomp/canonical-loop-2.f90: New file.\n+\n+2022-05-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/104162\n+\t* gcc.dg/tree-ssa/ssa-fre-99.c: New testcase.\n+\t* gcc.dg/asan/pr99673.c: Adjust.\n+\n+2022-05-05  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR testsuite/105486\n+\t* gcc.dg/pr102950.c: Use explicit \"signed char\" in test case.\n+\n+2022-05-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR testsuite/105486\n+\t* gcc.dg/vect/bb-slp-pr104240.c: Align all data.\n+\n+2022-05-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/105484\n+\t* gcc.dg/torture/pr105484.c: New testcase.\n+\n+2022-05-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/104595\n+\t* gcc.dg/vect/pr104595.c: New testcase.\n+\n 2022-05-04  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/105476"}, {"sha": "3011b372f25c6ca7ffe8623e22163e7782fffc77", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab869e7f7548537a16b57658fb0826f92b3d2af6/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab869e7f7548537a16b57658fb0826f92b3d2af6/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=ab869e7f7548537a16b57658fb0826f92b3d2af6", "patch": "@@ -1,3 +1,7 @@\n+2022-05-05  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* libgomp.texi (OpenMP 5.0): Feature is now fully supported.\n+\n 2022-05-04  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* plugin/plugin-gcn.c (isa_matches_agent): Suggest -foffload-options."}, {"sha": "52050be947650819e25bfe96d5836e5191ba1795", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab869e7f7548537a16b57658fb0826f92b3d2af6/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab869e7f7548537a16b57658fb0826f92b3d2af6/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=ab869e7f7548537a16b57658fb0826f92b3d2af6", "patch": "@@ -1,3 +1,7 @@\n+2022-05-05  Martin Liska  <mliska@suse.cz>\n+\n+\t* LOCAL_PATCHES: Update.\n+\n 2022-05-04  Martin Liska  <mliska@suse.cz>\n \n \t* tsan/Makefile.am: Update Makefile.am files."}, {"sha": "700044afa4604d247aa24a2530739f0334f569c6", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab869e7f7548537a16b57658fb0826f92b3d2af6/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab869e7f7548537a16b57658fb0826f92b3d2af6/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ab869e7f7548537a16b57658fb0826f92b3d2af6", "patch": "@@ -1,3 +1,74 @@\n+2022-05-05  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/experimental/memory_resource [!__cpp_rtti]\n+\t(__resource_adaptor_imp::do_is_equal): Do not use dynamic_cast\n+\twhen RTTI is disabled.\n+\t* testsuite/17_intro/freestanding.cc: Require RTTI.\n+\t* testsuite/18_support/exception/38732.cc: Likewise.\n+\t* testsuite/18_support/exception_ptr/rethrow_exception.cc:\n+\tLikewise.\n+\t* testsuite/18_support/nested_exception/68139.cc: Likewise.\n+\t* testsuite/18_support/nested_exception/rethrow_if_nested.cc:\n+\tLikewise.\n+\t* testsuite/18_support/type_info/103240.cc: Likewise.\n+\t* testsuite/18_support/type_info/fundamental.cc: Likewise.\n+\t* testsuite/18_support/type_info/hash_code.cc: Likewise.\n+\t* testsuite/20_util/any/assign/emplace.cc: Likewise.\n+\t* testsuite/20_util/any/cons/in_place.cc: Likewise.\n+\t* testsuite/20_util/any/misc/any_cast.cc: Likewise.\n+\t* testsuite/20_util/any/observers/type.cc: Likewise.\n+\t* testsuite/20_util/function/1.cc: Likewise.\n+\t* testsuite/20_util/function/2.cc: Likewise.\n+\t* testsuite/20_util/function/3.cc: Likewise.\n+\t* testsuite/20_util/function/4.cc: Likewise.\n+\t* testsuite/20_util/function/5.cc: Likewise.\n+\t* testsuite/20_util/function/6.cc: Likewise.\n+\t* testsuite/20_util/function/7.cc: Likewise.\n+\t* testsuite/20_util/function/8.cc: Likewise.\n+\t* testsuite/20_util/polymorphic_allocator/resource.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/casts/1.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/casts/rval.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/unique_ptr_deleter_ref_2.cc:\n+\tLikewise.\n+\t* testsuite/20_util/shared_ptr/misc/get_deleter.cc: Likewise.\n+\t* testsuite/20_util/typeindex/comparison_operators.cc: Likewise.\n+\t* testsuite/20_util/typeindex/comparison_operators_c++20.cc:\n+\tLikewise.\n+\t* testsuite/20_util/typeindex/hash.cc: Likewise.\n+\t* testsuite/20_util/typeindex/hash_code.cc: Likewise.\n+\t* testsuite/20_util/typeindex/name.cc: Likewise.\n+\t* testsuite/22_locale/ctype/is/string/89728_neg.cc: Likewise.\n+\t* testsuite/22_locale/global_templates/standard_facet_hierarchies.cc:\n+\tLikewise.\n+\t* testsuite/22_locale/global_templates/user_facet_hierarchies.cc:\n+\tLikewise.\n+\t* testsuite/22_locale/locale/13630.cc: Check type without using\n+\tRTTI.\n+\t* testsuite/23_containers/array/requirements/non_default_constructible.cc:\n+\tRequire RTTI.\n+\t* testsuite/27_io/basic_ostream/emit/1.cc: Likewise.\n+\t* testsuite/27_io/fpos/14320-1.cc: Check type without using RTTI.\n+\t* testsuite/27_io/fpos/mbstate_t/12065.cc: Require RTTI.\n+\t* testsuite/27_io/ios_base/failure/dual_abi.cc: Likewise.\n+\t* testsuite/experimental/any/misc/any_cast.cc: Likewise.\n+\t* testsuite/experimental/any/observers/type.cc: Likewise.\n+\t* testsuite/experimental/memory_resource/resource_adaptor.cc:\n+\tLikewise.\n+\t* testsuite/lib/libstdc++.exp (check_effective_target_rtti):\n+\tDefine new proc.\n+\t* testsuite/tr1/3_function_objects/function/1.cc: Likewise.\n+\t* testsuite/tr1/3_function_objects/function/2.cc: Likewise.\n+\t* testsuite/tr1/3_function_objects/function/3.cc: Likewise.\n+\t* testsuite/tr1/3_function_objects/function/4.cc: Likewise.\n+\t* testsuite/tr1/3_function_objects/function/5.cc: Likewise.\n+\t* testsuite/tr1/3_function_objects/function/6.cc: Likewise.\n+\t* testsuite/tr1/3_function_objects/function/7.cc: Likewise.\n+\t* testsuite/tr1/3_function_objects/function/8.cc: Likewise.\n+\t* testsuite/tr2/bases/value.cc: Likewise.\n+\t* testsuite/tr2/direct_bases/value.cc: Likewise.\n+\t* testsuite/util/exception/safety.h [!__cpp_rtti]: Don't print\n+\ttypes without RTTI.\n+\n 2022-05-04  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/104719"}]}