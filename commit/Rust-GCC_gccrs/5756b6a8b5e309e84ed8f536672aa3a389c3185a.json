{"sha": "5756b6a8b5e309e84ed8f536672aa3a389c3185a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc1NmI2YThiNWUzMDllODRlZDhmNTM2NjcyYWEzYTM4OWMzMTg1YQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2018-11-09T09:52:43Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2018-11-09T09:52:43Z"}, "message": "vr-values.c (vr_values::get_value_range): Use value_range API instead of piecing together ranges.\n\n\t* vr-values.c (vr_values::get_value_range): Use value_range API\n\tinstead of piecing together ranges.\n\t(vr_values::update_value_range): Same.\n\nFrom-SVN: r265953", "tree": {"sha": "3f67e7d2a1542e81a6b31416b590e9821d7d4345", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f67e7d2a1542e81a6b31416b590e9821d7d4345"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5756b6a8b5e309e84ed8f536672aa3a389c3185a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5756b6a8b5e309e84ed8f536672aa3a389c3185a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5756b6a8b5e309e84ed8f536672aa3a389c3185a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5756b6a8b5e309e84ed8f536672aa3a389c3185a/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c89af696c372d94688b06618a226ed49235ad212", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c89af696c372d94688b06618a226ed49235ad212", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c89af696c372d94688b06618a226ed49235ad212"}], "stats": {"total": 31, "additions": 12, "deletions": 19}, "files": [{"sha": "c84b0fd1860f372b3457baa39ce986277113e02d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5756b6a8b5e309e84ed8f536672aa3a389c3185a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5756b6a8b5e309e84ed8f536672aa3a389c3185a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5756b6a8b5e309e84ed8f536672aa3a389c3185a", "patch": "@@ -1,3 +1,9 @@\n+2018-11-08  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* vr-values.c (vr_values::get_value_range): Use value_range API\n+\tinstead of piecing together ranges.\n+\t(vr_values::update_value_range): Same.\n+\n 2018-11-08  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* gimple-fold.c (size_must_be_zero_p): Use value_range API instead"}, {"sha": "4edc5a467eee7754f0ca13de17b71cc0d6926567", "filename": "gcc/vr-values.c", "status": "modified", "additions": 6, "deletions": 19, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5756b6a8b5e309e84ed8f536672aa3a389c3185a/gcc%2Fvr-values.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5756b6a8b5e309e84ed8f536672aa3a389c3185a/gcc%2Fvr-values.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvr-values.c?ref=5756b6a8b5e309e84ed8f536672aa3a389c3185a", "patch": "@@ -121,15 +121,9 @@ vr_values::get_value_range (const_tree var)\n \t    set_value_range_to_nonnull (vr, TREE_TYPE (sym));\n \t  else if (INTEGRAL_TYPE_P (TREE_TYPE (sym)))\n \t    {\n-\t      wide_int min, max;\n-\t      value_range_kind rtype = get_range_info (var, &min, &max);\n-\t      if (rtype == VR_RANGE || rtype == VR_ANTI_RANGE)\n-\t\tset_value_range (vr, rtype,\n-\t\t\t\t wide_int_to_tree (TREE_TYPE (var), min),\n-\t\t\t\t wide_int_to_tree (TREE_TYPE (var), max),\n-\t\t\t\t NULL);\n-\t      else\n-\t\tset_value_range_to_varying (vr);\n+\t      get_range_info (var, *vr);\n+\t      if (vr->undefined_p ())\n+\t\tvr->set_varying ();\n \t    }\n \t  else\n \t    set_value_range_to_varying (vr);\n@@ -178,17 +172,10 @@ vr_values::update_value_range (const_tree var, value_range *new_vr)\n      factor that in.  */\n   if (INTEGRAL_TYPE_P (TREE_TYPE (var)))\n     {\n-      wide_int min, max;\n-      value_range_kind rtype = get_range_info (var, &min, &max);\n+      value_range nr;\n+      value_range_kind rtype = get_range_info (var, nr);\n       if (rtype == VR_RANGE || rtype == VR_ANTI_RANGE)\n-\t{\n-\t  tree nr_min, nr_max;\n-\t  nr_min = wide_int_to_tree (TREE_TYPE (var), min);\n-\t  nr_max = wide_int_to_tree (TREE_TYPE (var), max);\n-\t  value_range nr;\n-\t  nr.set_and_canonicalize (rtype, nr_min, nr_max, NULL);\n-\t  new_vr->intersect (&nr);\n-\t}\n+\tnew_vr->intersect (&nr);\n     }\n \n   /* Update the value range, if necessary.  */"}]}