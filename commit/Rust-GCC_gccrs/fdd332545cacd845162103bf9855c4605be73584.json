{"sha": "fdd332545cacd845162103bf9855c4605be73584", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRkMzMyNTQ1Y2FjZDg0NTE2MjEwM2JmOTg1NWM0NjA1YmU3MzU4NA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-04-13T08:35:32Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-04-13T08:35:32Z"}, "message": "re PR middle-end/81657 (FAIL: gcc.dg/20050503-1.c scan-assembler-not call)\n\n\tPR middle-end/81657\n\t* expr.h (enum block_op_methods): Add BLOCK_OP_NO_LIBCALL_RET.\n\t* expr.c (emit_block_move_hints): Handle BLOCK_OP_NO_LIBCALL_RET.\n\t* builtins.c (expand_builtin_memory_copy_args): Use\n\tBLOCK_OP_NO_LIBCALL_RET method for mempcpy with non-ignored target,\n\thandle dest_addr == pc_rtx.\n\n\t* gcc.dg/string-opt-1.c: Remove bogus comment.  Expect a mempcpy\n\tcall.\n\nCo-Authored-By: Jakub Jelinek <jakub@redhat.com>\n\nFrom-SVN: r259366", "tree": {"sha": "2c2fff0f0c8d64c99dc10974991256116f113a2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c2fff0f0c8d64c99dc10974991256116f113a2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fdd332545cacd845162103bf9855c4605be73584", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdd332545cacd845162103bf9855c4605be73584", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdd332545cacd845162103bf9855c4605be73584", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdd332545cacd845162103bf9855c4605be73584/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6888a172d3e9a19921783a31fd8bce5bde8a9c31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6888a172d3e9a19921783a31fd8bce5bde8a9c31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6888a172d3e9a19921783a31fd8bce5bde8a9c31"}], "stats": {"total": 51, "additions": 41, "deletions": 10}, "files": [{"sha": "4a3f07f9713cf160e1a1ca67250f7f51c5304fb0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdd332545cacd845162103bf9855c4605be73584/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdd332545cacd845162103bf9855c4605be73584/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fdd332545cacd845162103bf9855c4605be73584", "patch": "@@ -1,3 +1,13 @@\n+2018-04-13  Martin Liska  <mliska@suse.cz>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/81657\n+\t* expr.h (enum block_op_methods): Add BLOCK_OP_NO_LIBCALL_RET.\n+\t* expr.c (emit_block_move_hints): Handle BLOCK_OP_NO_LIBCALL_RET.\n+\t* builtins.c (expand_builtin_memory_copy_args): Use\n+\tBLOCK_OP_NO_LIBCALL_RET method for mempcpy with non-ignored target,\n+\thandle dest_addr == pc_rtx.\n+\n 2018-04-12  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR target/85291"}, {"sha": "93c617e81ff6f26c500e3e85531892e4ca649167", "filename": "gcc/builtins.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdd332545cacd845162103bf9855c4605be73584/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdd332545cacd845162103bf9855c4605be73584/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=fdd332545cacd845162103bf9855c4605be73584", "patch": "@@ -3650,12 +3650,16 @@ expand_builtin_memory_copy_args (tree dest, tree src, tree len,\n   set_mem_align (src_mem, src_align);\n \n   /* Copy word part most expediently.  */\n-  dest_addr = emit_block_move_hints (dest_mem, src_mem, len_rtx,\n-\t\t\t\t     CALL_EXPR_TAILCALL (exp)\n-\t\t\t\t     && (endp == 0 || target == const0_rtx)\n-\t\t\t\t     ? BLOCK_OP_TAILCALL : BLOCK_OP_NORMAL,\n+  enum block_op_methods method = BLOCK_OP_NORMAL;\n+  if (CALL_EXPR_TAILCALL (exp) && (endp == 0 || target == const0_rtx))\n+    method = BLOCK_OP_TAILCALL;\n+  if (endp == 1 && target != const0_rtx)\n+    method = BLOCK_OP_NO_LIBCALL_RET;\n+  dest_addr = emit_block_move_hints (dest_mem, src_mem, len_rtx, method,\n \t\t\t\t     expected_align, expected_size,\n \t\t\t\t     min_size, max_size, probable_max_size);\n+  if (dest_addr == pc_rtx)\n+    return NULL_RTX;\n \n   if (dest_addr == 0)\n     {"}, {"sha": "cf5b63172f1cddcb0c1ea4ba6bd488c2e3b817df", "filename": "gcc/expr.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdd332545cacd845162103bf9855c4605be73584/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdd332545cacd845162103bf9855c4605be73584/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=fdd332545cacd845162103bf9855c4605be73584", "patch": "@@ -1565,7 +1565,7 @@ emit_block_move_hints (rtx x, rtx y, rtx size, enum block_op_methods method,\n \t\t       unsigned HOST_WIDE_INT max_size,\n \t\t       unsigned HOST_WIDE_INT probable_max_size)\n {\n-  bool may_use_call;\n+  int may_use_call;\n   rtx retval = 0;\n   unsigned int align;\n \n@@ -1577,7 +1577,7 @@ emit_block_move_hints (rtx x, rtx y, rtx size, enum block_op_methods method,\n     {\n     case BLOCK_OP_NORMAL:\n     case BLOCK_OP_TAILCALL:\n-      may_use_call = true;\n+      may_use_call = 1;\n       break;\n \n     case BLOCK_OP_CALL_PARM:\n@@ -1589,7 +1589,11 @@ emit_block_move_hints (rtx x, rtx y, rtx size, enum block_op_methods method,\n       break;\n \n     case BLOCK_OP_NO_LIBCALL:\n-      may_use_call = false;\n+      may_use_call = 0;\n+      break;\n+\n+    case BLOCK_OP_NO_LIBCALL_RET:\n+      may_use_call = -1;\n       break;\n \n     default:\n@@ -1625,6 +1629,9 @@ emit_block_move_hints (rtx x, rtx y, rtx size, enum block_op_methods method,\n \t   && ADDR_SPACE_GENERIC_P (MEM_ADDR_SPACE (x))\n \t   && ADDR_SPACE_GENERIC_P (MEM_ADDR_SPACE (y)))\n     {\n+      if (may_use_call < 0)\n+\treturn pc_rtx;\n+\n       /* Since x and y are passed to a libcall, mark the corresponding\n \t tree EXPR as addressable.  */\n       tree y_expr = MEM_EXPR (y);"}, {"sha": "52a26e7c2a3e1be48ee09909782b7045715dbec2", "filename": "gcc/expr.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdd332545cacd845162103bf9855c4605be73584/gcc%2Fexpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdd332545cacd845162103bf9855c4605be73584/gcc%2Fexpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.h?ref=fdd332545cacd845162103bf9855c4605be73584", "patch": "@@ -100,7 +100,11 @@ enum block_op_methods\n   BLOCK_OP_NO_LIBCALL,\n   BLOCK_OP_CALL_PARM,\n   /* Like BLOCK_OP_NORMAL, but the libcall can be tail call optimized.  */\n-  BLOCK_OP_TAILCALL\n+  BLOCK_OP_TAILCALL,\n+  /* Like BLOCK_OP_NO_LIBCALL, but instead of emitting a libcall return\n+     pc_rtx to indicate nothing has been emitted and let the caller handle\n+     it.  */\n+  BLOCK_OP_NO_LIBCALL_RET\n };\n \n typedef rtx (*by_pieces_constfn) (void *, HOST_WIDE_INT, scalar_int_mode);"}, {"sha": "665a3d85152535e7f03909393964f299d7a95222", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdd332545cacd845162103bf9855c4605be73584/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdd332545cacd845162103bf9855c4605be73584/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fdd332545cacd845162103bf9855c4605be73584", "patch": "@@ -1,3 +1,10 @@\n+2018-04-13  Martin Liska  <mliska@suse.cz>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/81657\n+\t* gcc.dg/string-opt-1.c: Remove bogus comment.  Expect a mempcpy\n+\tcall.\n+\n 2018-04-12  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c++/85385"}, {"sha": "7945ef39c57725956031eb668f2de122fecf2ad8", "filename": "gcc/testsuite/gcc.dg/string-opt-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdd332545cacd845162103bf9855c4605be73584/gcc%2Ftestsuite%2Fgcc.dg%2Fstring-opt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdd332545cacd845162103bf9855c4605be73584/gcc%2Ftestsuite%2Fgcc.dg%2Fstring-opt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstring-opt-1.c?ref=fdd332545cacd845162103bf9855c4605be73584", "patch": "@@ -1,4 +1,3 @@\n-/* Ensure mempcpy is \"optimized\" into memcpy followed by addition.  */\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n \n@@ -48,5 +47,5 @@ main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler-not \"\\<mempcpy\\>\" } } */\n+/* { dg-final { scan-assembler \"mempcpy\" } } */\n /* { dg-final { scan-assembler \"memcpy\" } } */"}]}