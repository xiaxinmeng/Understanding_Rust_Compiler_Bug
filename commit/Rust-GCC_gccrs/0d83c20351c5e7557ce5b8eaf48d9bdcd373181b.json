{"sha": "0d83c20351c5e7557ce5b8eaf48d9bdcd373181b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ4M2MyMDM1MWM1ZTc1NTdjZTViOGVhZjQ4ZDliZGNkMzczMTgxYg==", "commit": {"author": {"name": "John Carr", "email": "jfc@gcc.gnu.org", "date": "1998-09-06T05:51:59Z"}, "committer": {"name": "John Carr", "email": "jfc@gcc.gnu.org", "date": "1998-09-06T05:51:59Z"}, "message": "final.c (final): If a label is reached only from a single jump...\n\n0\n\t* final.c (final): If a label is reached only from a single jump,\n\tcall NOTICE_UPDATE_CC on the jump and its predecessor before\n\temitting the insn after the label.\n\t* i386.h: Add AMD K6 support.\n\tChange TARGET_* macros to use table lookup.\n\t(INITIALIZE_TRAMPOLINE): Improve trampoline code.\n\t(ADJUST_COST): Change definition to call function in i386.c.\n\t(ISSUE_RATE): Define as 2 for anything newer than an 80486.\n\t* i386.c: Add AMD K6 support.\n\tAdd constants for feature tests used by TARGET_* macros.\n\t(split_di): If before reload, call gen_lowpart and gen_highpart.\n\t(x86_adjust_cost): New function.\n\t(put_jump_code): New function.\n\t(print_operand): New codes 'D' and 'd'.\n\t* i386.md: New insn types.  New insn attribute \"memory\".\n\tRedefine scheduling parameters to use new types and add AMD K6\n\tsupport.  Explicitly set type of most insns.\n\t(move insns): K6 prefers movl $0,reg to xorl reg,reg.  Pentium\n\tPro and K6 prefer movl $1,reg to incl reg.\n\t(adddi3, subdi3): Set cc_status.\n\t(DImode shift patterns): Change label counters from HOST_WIDE_INT\n\tto int; x86 can't have more than 2^31 DImode shifts per\tfile.\n\t(setcc): Combine all setcc patterns.  Allow writing memory.\n\tCombine all jump patterns using match_operator.\n\t(*bzero): Name pattern.  Emit mutliple stos instructions when that\n\tis faster than rep stos.\n\t(xordi3, anddi3, iordi3): Simplify DImode logical patterns and\n\tadd define_split.\n\t* ch/Make-lang.in: Comment ^L characters.  Sun make doesn't like them.\n\nFrom-SVN: r22289", "tree": {"sha": "029c516ab6d566e60483a7fea850b39b5228667b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/029c516ab6d566e60483a7fea850b39b5228667b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d83c20351c5e7557ce5b8eaf48d9bdcd373181b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d83c20351c5e7557ce5b8eaf48d9bdcd373181b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d83c20351c5e7557ce5b8eaf48d9bdcd373181b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d83c20351c5e7557ce5b8eaf48d9bdcd373181b/comments", "author": null, "committer": null, "parents": [{"sha": "ccc9661c66b20711d06cc8344d24a286299adedd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccc9661c66b20711d06cc8344d24a286299adedd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccc9661c66b20711d06cc8344d24a286299adedd"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "b8d82d681c6e58534852b3b64e356cc4174e1b38", "filename": "gcc/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d83c20351c5e7557ce5b8eaf48d9bdcd373181b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d83c20351c5e7557ce5b8eaf48d9bdcd373181b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d83c20351c5e7557ce5b8eaf48d9bdcd373181b", "patch": "@@ -1,3 +1,35 @@\n+Sat Sep  6 12:05:18 1998  John Carr  <jfc@mit.edu>\n+\n+\t* final.c (final): If a label is reached only from a single jump,\n+\tcall NOTICE_UPDATE_CC on the jump and its predecessor before\n+\temitting the insn after the label.\n+\t\n+\t* i386.h: Add AMD K6 support.\n+\tChange TARGET_* macros to use table lookup.\n+\t(INITIALIZE_TRAMPOLINE): Improve trampoline code.\n+\t(ADJUST_COST): Change definition to call function in i386.c.\n+\t(ISSUE_RATE): Define as 2 for anything newer than an 80486.\n+\t* i386.c: Add AMD K6 support.\n+\tAdd constants for feature tests used by TARGET_* macros.\n+\t(split_di): If before reload, call gen_lowpart and gen_highpart.\n+\t(x86_adjust_cost): New function.\n+\t(put_jump_code): New function.\n+\t(print_operand): New codes 'D' and 'd'.\n+\t* i386.md: New insn types.  New insn attribute \"memory\".\n+\tRedefine scheduling parameters to use new types and add AMD K6\n+\tsupport.  Explicitly set type of most insns.\n+\t(move insns): K6 prefers movl $0,reg to xorl reg,reg.  Pentium\n+\tPro and K6 prefer movl $1,reg to incl reg.\n+\t(adddi3, subdi3): Set cc_status.\n+\t(DImode shift patterns): Change label counters from HOST_WIDE_INT\n+\tto int; x86 can't have more than 2^31 DImode shifts per\tfile.\n+\t(setcc): Combine all setcc patterns.  Allow writing memory.\n+\tCombine all jump patterns using match_operator.\n+\t(*bzero): Name pattern.  Emit mutliple stos instructions when that\n+\tis faster than rep stos.\n+\t(xordi3, anddi3, iordi3): Simplify DImode logical patterns and\n+\tadd define_split.\n+\n Sun Sep  6 11:17:20 1998  Dave Love  <d.love@dl.ac.uk>\n \n \t* config/m68k/x-next (BOOT_LDFLAGS): Define suitably for f771"}]}