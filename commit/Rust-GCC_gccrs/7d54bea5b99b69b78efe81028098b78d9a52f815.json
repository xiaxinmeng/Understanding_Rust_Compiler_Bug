{"sha": "7d54bea5b99b69b78efe81028098b78d9a52f815", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q1NGJlYTViOTliNjliNzhlZmU4MTAyODA5OGI3OGQ5YTUyZjgxNQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-05-08T14:04:12Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-05-08T14:04:12Z"}, "message": "Franz Sirl <Franz.Sirl-kernel@lauterbach.com>\n\ngcc/\n2015-05-08  Richard Sandiford  <richard.sandiford@arm.com>\n\t    Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n\n\t* config/i386/i386.md (<mode>_ldx, *<mode>_ldx): Remove mode\n\tfrom (set ...).\n\t* config/rx/rx.md (movdi, movdf): Likewise.\n\tLikewise for define_peephole2s.\n\nCo-Authored-By: Franz Sirl <Franz.Sirl-kernel@lauterbach.com>\n\nFrom-SVN: r222911", "tree": {"sha": "36493dd6a44731ceae83388aaadb317f047d683f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36493dd6a44731ceae83388aaadb317f047d683f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d54bea5b99b69b78efe81028098b78d9a52f815", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d54bea5b99b69b78efe81028098b78d9a52f815", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d54bea5b99b69b78efe81028098b78d9a52f815", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d54bea5b99b69b78efe81028098b78d9a52f815/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a8105959bdd74007458c528e053dcf22c245474b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8105959bdd74007458c528e053dcf22c245474b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8105959bdd74007458c528e053dcf22c245474b"}], "stats": {"total": 76, "additions": 42, "deletions": 34}, "files": [{"sha": "e85dc316d12fbd056fa2261482c4bf2e37838a3e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d54bea5b99b69b78efe81028098b78d9a52f815/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d54bea5b99b69b78efe81028098b78d9a52f815/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7d54bea5b99b69b78efe81028098b78d9a52f815", "patch": "@@ -1,3 +1,11 @@\n+2015-05-08  Richard Sandiford  <richard.sandiford@arm.com>\n+\t    Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n+\n+\t* config/i386/i386.md (<mode>_ldx, *<mode>_ldx): Remove mode\n+\tfrom (set ...).\n+\t* config/rx/rx.md (movdi, movdf): Likewise.\n+\tLikewise for define_peephole2s.\n+\n 2015-05-08  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* config/aarch64/arm_neon.h (vceq_s64, vceq_u64, vceqz_s64, vceqz_u64,"}, {"sha": "0959aef7a0d69325437d5250cd4c4fffd89f677f", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d54bea5b99b69b78efe81028098b78d9a52f815/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d54bea5b99b69b78efe81028098b78d9a52f815/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=7d54bea5b99b69b78efe81028098b78d9a52f815", "patch": "@@ -18879,13 +18879,13 @@\n   [(set_attr \"type\" \"mpxchk\")])\n \n (define_expand \"<mode>_ldx\"\n-  [(parallel [(set:BND (match_operand:BND 0 \"register_operand\")\n-                       (unspec:BND\n-\t\t         [(mem:<bnd_ptr>\n-\t\t\t   (match_par_dup 3\n-\t\t\t     [(match_operand:<bnd_ptr> 1 \"address_mpx_no_index_operand\")\n-\t                      (match_operand:<bnd_ptr> 2 \"register_operand\")]))]\n-\t\t\t UNSPEC_BNDLDX))\n+  [(parallel [(set (match_operand:BND 0 \"register_operand\")\n+                   (unspec:BND\n+\t\t     [(mem:<bnd_ptr>\n+\t\t       (match_par_dup 3\n+\t\t\t [(match_operand:<bnd_ptr> 1 \"address_mpx_no_index_operand\")\n+\t\t\t  (match_operand:<bnd_ptr> 2 \"register_operand\")]))]\n+\t\t     UNSPEC_BNDLDX))\n               (use (mem:BLK (match_dup 1)))])]\n   \"TARGET_MPX\"\n {\n@@ -18909,14 +18909,14 @@\n })\n \n (define_insn \"*<mode>_ldx\"\n-  [(parallel [(set:BND (match_operand:BND 0 \"register_operand\" \"=w\")\n-                       (unspec:BND\n-\t\t         [(match_operator:<bnd_ptr> 3 \"bnd_mem_operator\"\n-\t\t\t   [(unspec:<bnd_ptr>\n-\t\t\t     [(match_operand:<bnd_ptr> 1 \"address_mpx_no_index_operand\" \"Ti\")\n-\t                      (match_operand:<bnd_ptr> 2 \"register_operand\" \"l\")]\n-\t\t\t    UNSPEC_BNDLDX_ADDR)])]\n-\t\t\t UNSPEC_BNDLDX))\n+  [(parallel [(set (match_operand:BND 0 \"register_operand\" \"=w\")\n+\t\t   (unspec:BND\n+\t\t     [(match_operator:<bnd_ptr> 3 \"bnd_mem_operator\"\n+\t\t       [(unspec:<bnd_ptr>\n+\t\t\t [(match_operand:<bnd_ptr> 1 \"address_mpx_no_index_operand\" \"Ti\")\n+\t\t\t  (match_operand:<bnd_ptr> 2 \"register_operand\" \"l\")]\n+\t\t\tUNSPEC_BNDLDX_ADDR)])]\n+\t\t     UNSPEC_BNDLDX))\n               (use (mem:BLK (match_dup 1)))])]\n   \"TARGET_MPX\"\n   \"bndldx\\t{%3, %0|%0, %3}\""}, {"sha": "8b124759b0bac6567d192a1d9f4f5d9b90f02e0a", "filename": "gcc/config/rx/rx.md", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d54bea5b99b69b78efe81028098b78d9a52f815/gcc%2Fconfig%2Frx%2Frx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d54bea5b99b69b78efe81028098b78d9a52f815/gcc%2Fconfig%2Frx%2Frx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.md?ref=7d54bea5b99b69b78efe81028098b78d9a52f815", "patch": "@@ -1734,9 +1734,9 @@\n \t\t\t\t\t (match_dup 2)))\n \t      (clobber (reg:CC CC_REG))])]\n   \"peep2_regno_dead_p (2, REGNO (operands[0])) && (optimize < 3 || optimize_size)\"\n-  [(parallel [(set:SI (match_dup 2)\n-\t\t      (memex_commutative:SI (match_dup 2)\n-\t\t\t\t\t    (extend_types:SI (match_dup 1))))\n+  [(parallel [(set (match_dup 2)\n+\t\t   (memex_commutative:SI (match_dup 2)\n+\t\t\t\t\t (extend_types:SI (match_dup 1))))\n \t      (clobber (reg:CC CC_REG))])]\n )\n \n@@ -1748,9 +1748,9 @@\n \t\t\t\t\t (match_dup 0)))\n \t      (clobber (reg:CC CC_REG))])]\n   \"peep2_regno_dead_p (2, REGNO (operands[0])) && (optimize < 3 || optimize_size)\"\n-  [(parallel [(set:SI (match_dup 2)\n-\t\t      (memex_commutative:SI (match_dup 2)\n-\t\t\t\t\t    (extend_types:SI (match_dup 1))))\n+  [(parallel [(set (match_dup 2)\n+\t\t   (memex_commutative:SI (match_dup 2)\n+\t\t\t\t\t (extend_types:SI (match_dup 1))))\n \t      (clobber (reg:CC CC_REG))])]\n )\n \n@@ -1762,9 +1762,9 @@\n \t\t\t\t     (match_dup 0)))\n \t      (clobber (reg:CC CC_REG))])]\n   \"peep2_regno_dead_p (2, REGNO (operands[0])) && (optimize < 3 || optimize_size)\"\n-  [(parallel [(set:SI (match_dup 2)\n-\t\t      (memex_noncomm:SI (match_dup 2)\n-\t\t\t\t\t(extend_types:SI (match_dup 1))))\n+  [(parallel [(set (match_dup 2)\n+\t\t   (memex_noncomm:SI (match_dup 2)\n+\t\t\t\t     (extend_types:SI (match_dup 1))))\n \t      (clobber (reg:CC CC_REG))])]\n )\n \n@@ -1775,9 +1775,9 @@\n \t(memex_nocc:SI (match_dup 0)\n \t\t       (match_dup 2)))]\n   \"peep2_regno_dead_p (2, REGNO (operands[0])) && (optimize < 3 || optimize_size)\"\n-  [(set:SI (match_dup 2)\n-\t   (memex_nocc:SI (match_dup 2)\n-\t\t\t  (extend_types:SI (match_dup 1))))]\n+  [(set (match_dup 2)\n+\t(memex_nocc:SI (match_dup 2)\n+\t\t       (extend_types:SI (match_dup 1))))]\n )\n \n (define_peephole2\n@@ -1787,9 +1787,9 @@\n \t(memex_nocc:SI (match_dup 2)\n \t\t       (match_dup 0)))]\n   \"peep2_regno_dead_p (2, REGNO (operands[0])) && (optimize < 3 || optimize_size)\"\n-  [(set:SI (match_dup 2)\n-\t   (memex_nocc:SI (match_dup 2)\n-\t\t\t  (extend_types:SI (match_dup 1))))]\n+  [(set (match_dup 2)\n+\t(memex_nocc:SI (match_dup 2)\n+\t\t       (extend_types:SI (match_dup 1))))]\n )\n \n (define_insn \"<memex_commutative:code>si3_<extend_types:code><small_int_modes:mode>\"\n@@ -2623,17 +2623,17 @@\n )\n \n (define_insn \"movdi\"\n-  [(set:DI (match_operand:DI 0 \"nonimmediate_operand\" \"=rm\")\n-\t   (match_operand:DI 1 \"general_operand\"      \"rmi\"))]\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=rm\")\n+        (match_operand:DI 1 \"general_operand\"      \"rmi\"))]\n   \"TARGET_ENABLE_LRA\"\n   { return rx_gen_move_template (operands, false); }\n   [(set_attr \"length\" \"16\")\n    (set_attr \"timings\" \"22\")]\n )\n \n (define_insn \"movdf\"\n-  [(set:DF (match_operand:DF 0 \"nonimmediate_operand\" \"=rm\")\n-\t   (match_operand:DF 1 \"general_operand\"      \"rmi\"))]\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=rm\")\n+        (match_operand:DF 1 \"general_operand\"      \"rmi\"))]\n   \"TARGET_ENABLE_LRA\"\n   { return rx_gen_move_template (operands, false); }\n   [(set_attr \"length\" \"16\")"}]}