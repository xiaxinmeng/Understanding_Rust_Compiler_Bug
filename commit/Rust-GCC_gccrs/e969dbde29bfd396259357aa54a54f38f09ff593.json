{"sha": "e969dbde29bfd396259357aa54a54f38f09ff593", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk2OWRiZGUyOWJmZDM5NjI1OTM1N2FhNTRhNTRmMzhmMDlmZjU5Mw==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@gmail.com", "date": "2006-11-29T07:23:11Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2006-11-29T07:23:11Z"}, "message": "re PR tree-optimization/29984 (SPE GCC segfaults with MAX_EXPR <a, a>)\n\n2006-11-28  Andrew Pinski  <pinskia@gmail.com>\n\n        PR tree-opt/29984\n        * gcc.dg/tree-ssa/reassoc-12.c: New test.\n\n2006-11-28  Andrew Pinski  <pinskia@gmail.com>\n\n        PR tree-opt/29984\n        * tree-ssa-reassoc.c (eliminate_duplicate_pair): Handle MAX_EXPR\n        and MIN_EXRP.\n\nFrom-SVN: r119303", "tree": {"sha": "869f90739651886a919f4571e43bead73dcdfefa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/869f90739651886a919f4571e43bead73dcdfefa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e969dbde29bfd396259357aa54a54f38f09ff593", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e969dbde29bfd396259357aa54a54f38f09ff593", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e969dbde29bfd396259357aa54a54f38f09ff593", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e969dbde29bfd396259357aa54a54f38f09ff593/comments", "author": {"login": "pinskia", "id": 8496799, "node_id": "MDQ6VXNlcjg0OTY3OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8496799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pinskia", "html_url": "https://github.com/pinskia", "followers_url": "https://api.github.com/users/pinskia/followers", "following_url": "https://api.github.com/users/pinskia/following{/other_user}", "gists_url": "https://api.github.com/users/pinskia/gists{/gist_id}", "starred_url": "https://api.github.com/users/pinskia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pinskia/subscriptions", "organizations_url": "https://api.github.com/users/pinskia/orgs", "repos_url": "https://api.github.com/users/pinskia/repos", "events_url": "https://api.github.com/users/pinskia/events{/privacy}", "received_events_url": "https://api.github.com/users/pinskia/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fd074cfecc4d544776f7c1ba12882e5023dd2c79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd074cfecc4d544776f7c1ba12882e5023dd2c79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd074cfecc4d544776f7c1ba12882e5023dd2c79"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "c838be7693a6488d92fc3d9a18d19d09804a7686", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e969dbde29bfd396259357aa54a54f38f09ff593/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e969dbde29bfd396259357aa54a54f38f09ff593/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e969dbde29bfd396259357aa54a54f38f09ff593", "patch": "@@ -1,3 +1,9 @@\n+2006-11-28  Andrew Pinski  <pinskia@gmail.com>\n+\n+\tPR tree-opt/29984\n+\t* tree-ssa-reassoc.c (eliminate_duplicate_pair): Handle MAX_EXPR\n+\tand MIN_EXRP.\n+\n 2006-11-28  Bob Wilson  <bob.wilson@acm.org>\n \n \t* config/xtensa/lib1funcs.asm (__umulsidi3): Restore a12-a15 on exit."}, {"sha": "a08b86a37bd9b23fa65a8f01ad525fa11a346110", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e969dbde29bfd396259357aa54a54f38f09ff593/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e969dbde29bfd396259357aa54a54f38f09ff593/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e969dbde29bfd396259357aa54a54f38f09ff593", "patch": "@@ -1,3 +1,8 @@\n+2006-11-28  Andrew Pinski  <pinskia@gmail.com>\n+\n+\tPR tree-opt/29984\n+\t* gcc.dg/tree-ssa/reassoc-12.c: New test.\n+\n 2006-11-28  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc.dg/memcpy-1.c: New test."}, {"sha": "65e2931ad4a7d735939fe62530ef73a294987554", "filename": "gcc/testsuite/gcc.dg/tree-ssa/reassoc-12.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e969dbde29bfd396259357aa54a54f38f09ff593/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e969dbde29bfd396259357aa54a54f38f09ff593/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-12.c?ref=e969dbde29bfd396259357aa54a54f38f09ff593", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */ \n+/* { dg-options \"-O2 -fdump-tree-reassoc1-details\" } */\n+int f(int a, int b)\n+{\n+  /* MAX_EXPR <a, a> should cause it to be equivalent to a.  */\n+  int c = a>=b?a:b;\n+  int d = c>=a?c:a;\n+  return d;\n+}\n+/* { dg-final { scan-tree-dump-times \"Equivalence:\" 1 \"reassoc1\"} } */\n+/* { dg-final { cleanup-tree-dump \"reassoc1\" } } */"}, {"sha": "8b5d34a0f309194cb8fc5e23af9a2f28588b6001", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e969dbde29bfd396259357aa54a54f38f09ff593/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e969dbde29bfd396259357aa54a54f38f09ff593/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=e969dbde29bfd396259357aa54a54f38f09ff593", "patch": "@@ -417,22 +417,24 @@ eliminate_duplicate_pair (enum tree_code opcode,\n \t\t\t  operand_entry_t last)\n {\n \n-  /* If we have two of the same op, and the opcode is & or |, we can\n-     eliminate one of them.\n+  /* If we have two of the same op, and the opcode is & |, min, or max,\n+     we can eliminate one of them.\n      If we have two of the same op, and the opcode is ^, we can\n      eliminate both of them.  */\n \n   if (last && last->op == curr->op)\n     {\n       switch (opcode)\n \t{\n+\tcase MAX_EXPR:\n+\tcase MIN_EXPR:\n \tcase BIT_IOR_EXPR:\n \tcase BIT_AND_EXPR:\n \t  if (dump_file && (dump_flags & TDF_DETAILS))\n \t    {\n \t      fprintf (dump_file, \"Equivalence: \");\n \t      print_generic_expr (dump_file, curr->op, 0);\n-\t      fprintf (dump_file, \" [&|] \");\n+\t      fprintf (dump_file, \" [&|minmax] \");\n \t      print_generic_expr (dump_file, last->op, 0);\n \t      fprintf (dump_file, \" -> \");\n \t      print_generic_stmt (dump_file, last->op, 0);"}]}