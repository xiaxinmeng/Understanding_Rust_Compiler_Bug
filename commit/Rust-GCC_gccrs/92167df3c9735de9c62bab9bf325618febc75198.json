{"sha": "92167df3c9735de9c62bab9bf325618febc75198", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTIxNjdkZjNjOTczNWRlOWM2MmJhYjliZjMyNTYxOGZlYmM3NTE5OA==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2019-09-17T07:59:48Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-09-17T07:59:48Z"}, "message": "[Ada] Ignore missing ALI files in GNATprove mode\n\nThis change only affects GNATprove backend, where it avoids spurious\nerrors on missing ALI files for units indirectly withed from the current\nunit and processed as part of a different .gpr project.\n\nNo test provided, because only GNATprove is affected.\n\n2019-09-17  Piotr Trojanek  <trojanek@adacore.com>\n\ngcc/ada/\n\n\t* ali.ads: Fix casing in comment.\n\t* ali-util.ads, ali-util.adb (Read_Withed_ALIs): Remove\n\tIgnore_Errors parameter; it was only set to non-default value of\n\tTrue when running in GNATprove_Mode and wrongly reset to False\n\twhen calling this routine recursively. Now in GNATprove mode we\n\twant it to be always True, so in fact it is equivalent to\n\tGNATProve_Mode flag itself (which was already used in this\n\troutine).\n\nFrom-SVN: r275775", "tree": {"sha": "61d58024c1e2707d537aa9ec42c516c550f2e147", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61d58024c1e2707d537aa9ec42c516c550f2e147"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92167df3c9735de9c62bab9bf325618febc75198", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92167df3c9735de9c62bab9bf325618febc75198", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92167df3c9735de9c62bab9bf325618febc75198", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92167df3c9735de9c62bab9bf325618febc75198/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5c7cf10a6334dc9fcd8ad2362e809920ee205ff5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c7cf10a6334dc9fcd8ad2362e809920ee205ff5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c7cf10a6334dc9fcd8ad2362e809920ee205ff5"}], "stats": {"total": 35, "additions": 20, "deletions": 15}, "files": [{"sha": "fb1f7f5a2ff4601c851abc270f578d8c87b99d44", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92167df3c9735de9c62bab9bf325618febc75198/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92167df3c9735de9c62bab9bf325618febc75198/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=92167df3c9735de9c62bab9bf325618febc75198", "patch": "@@ -1,3 +1,14 @@\n+2019-09-17  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* ali.ads: Fix casing in comment.\n+\t* ali-util.ads, ali-util.adb (Read_Withed_ALIs): Remove\n+\tIgnore_Errors parameter; it was only set to non-default value of\n+\tTrue when running in GNATprove_Mode and wrongly reset to False\n+\twhen calling this routine recursively. Now in GNATprove mode we\n+\twant it to be always True, so in fact it is equivalent to\n+\tGNATProve_Mode flag itself (which was already used in this\n+\troutine).\n+\n 2019-09-17  Arnaud Charlet  <charlet@adacore.com>\n \n \t* adaint.c (_REENTRANT, _THREAD_SAFE): Only define if needed."}, {"sha": "1efad4de17c1b148c17ee088e0869272559ce30f", "filename": "gcc/ada/ali-util.adb", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92167df3c9735de9c62bab9bf325618febc75198/gcc%2Fada%2Fali-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92167df3c9735de9c62bab9bf325618febc75198/gcc%2Fada%2Fali-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali-util.adb?ref=92167df3c9735de9c62bab9bf325618febc75198", "patch": "@@ -215,10 +215,7 @@ package body ALI.Util is\n    -- Read_Withed_ALIs --\n    ----------------------\n \n-   procedure Read_Withed_ALIs\n-     (Id            : ALI_Id;\n-      Ignore_Errors : Boolean := False)\n-   is\n+   procedure Read_Withed_ALIs (Id : ALI_Id) is\n       Afile  : File_Name_Type;\n       Text   : Text_Buffer_Ptr;\n       Idread : ALI_Id;\n@@ -240,14 +237,14 @@ package body ALI.Util is\n             then\n                Text := Read_Library_Info (Afile);\n \n-               --  Unless Ignore_Errors is true, return with an error if source\n+               --  Unless in GNATprove mode, return with an error if source\n                --  cannot be found. We used to skip this check when we did not\n                --  compile library generics separately, but we now always do,\n                --  so there is no special case here anymore.\n \n                if Text = null then\n \n-                  if not Ignore_Errors then\n+                  if not GNATprove_Mode then\n                      Error_Msg_File_1 := Afile;\n                      Error_Msg_File_2 := Withs.Table (W).Sfile;\n                      Error_Msg (\"{ not found, { must be compiled\");\n@@ -268,7 +265,7 @@ package body ALI.Util is\n                   Free (Text);\n \n                   if ALIs.Table (Idread).Compile_Errors\n-                    and then not Ignore_Errors\n+                    and then not GNATprove_Mode\n                   then\n                      Error_Msg_File_1 := Withs.Table (W).Sfile;\n                      Error_Msg (\"{ had errors, must be fixed, and recompiled\");\n@@ -279,7 +276,6 @@ package body ALI.Util is\n \n                   elsif ALIs.Table (Idread).No_Object\n                     and then not GNATprove_Mode\n-                    and then not Ignore_Errors\n                   then\n                      Error_Msg_File_1 := Withs.Table (W).Sfile;\n                      Error_Msg (\"{ must be recompiled\");"}, {"sha": "7b3f9a5b19cb50add5c0da39bf1fa52dd79eff17", "filename": "gcc/ada/ali-util.ads", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92167df3c9735de9c62bab9bf325618febc75198/gcc%2Fada%2Fali-util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92167df3c9735de9c62bab9bf325618febc75198/gcc%2Fada%2Fali-util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali-util.ads?ref=92167df3c9735de9c62bab9bf325618febc75198", "patch": "@@ -107,15 +107,13 @@ package ALI.Util is\n    -- Subprograms for Manipulating ALI Information --\n    --------------------------------------------------\n \n-   procedure Read_Withed_ALIs\n-     (Id            : ALI_Id;\n-      Ignore_Errors : Boolean := False);\n+   procedure Read_Withed_ALIs (Id : ALI_Id);\n    --  Process an ALI file which has been read and scanned by looping through\n    --  all withed units in the ALI file, checking if they have been processed.\n    --  Each unit that has not yet been processed will be read, scanned, and\n-   --  processed recursively. If Ignore_Errors is True, then failure to read an\n-   --  ALI file is not reported as an error, and scanning continues with other\n-   --  ALI files.\n+   --  processed recursively. In GNATprove mode a failure to read an ALI file\n+   --  is not reported as an error, and scanning continues with other ALI\n+   --  files.\n \n    procedure Set_Source_Table (A : ALI_Id);\n    --  Build source table entry corresponding to the ALI file whose id is A"}, {"sha": "7e12c7bb6dc1e6623cbc402eb38c536844080463", "filename": "gcc/ada/ali.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92167df3c9735de9c62bab9bf325618febc75198/gcc%2Fada%2Fali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92167df3c9735de9c62bab9bf325618febc75198/gcc%2Fada%2Fali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.ads?ref=92167df3c9735de9c62bab9bf325618febc75198", "patch": "@@ -1429,7 +1429,7 @@ package ALI is\n    --    both. If both are provided then only the Read_Lines value is used,\n    --    and the Ignore_Lines parameter is ignored.\n    --\n-   --    Read_XREF is set True to read and acquire the cross-reference\n+   --    Read_Xref is set True to read and acquire the cross-reference\n    --    information. If Read_XREF is set to True, then the effect is to ignore\n    --    all lines other than U, W, D and X lines and the Ignore_Lines and\n    --    Read_Lines parameters are ignored (i.e. the use of True for Read_XREF"}]}