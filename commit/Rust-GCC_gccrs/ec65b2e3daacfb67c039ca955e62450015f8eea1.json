{"sha": "ec65b2e3daacfb67c039ca955e62450015f8eea1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM2NWIyZTNkYWFjZmI2N2MwMzljYTk1NWU2MjQ1MDAxNWY4ZWVhMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-02-13T21:46:22Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-02-13T21:46:22Z"}, "message": "re PR rtl-optimization/5547 (g++ 3.1 crash in output_operand)\n\n\tPR optimization/5547:\n\t* config/i386/i386.c (i386_simplify_dwarf_addr): Simplify\n\tall valid IA-32 address modes involving non-scaled %ebx and\n\tGOT/GOTOFF as displacement.\n\n\t* g++.dg/other/debug3.C: New test.\n\nFrom-SVN: r49745", "tree": {"sha": "209f638cb0a7ef6ec425acc8b38da9da667447d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/209f638cb0a7ef6ec425acc8b38da9da667447d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec65b2e3daacfb67c039ca955e62450015f8eea1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec65b2e3daacfb67c039ca955e62450015f8eea1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec65b2e3daacfb67c039ca955e62450015f8eea1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec65b2e3daacfb67c039ca955e62450015f8eea1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "658311e053abebc6fa24f2863d81e802e776057e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/658311e053abebc6fa24f2863d81e802e776057e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/658311e053abebc6fa24f2863d81e802e776057e"}], "stats": {"total": 98, "additions": 94, "deletions": 4}, "files": [{"sha": "ca7c17af6448fe8c9c7bd38364dd50af0a18f55d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec65b2e3daacfb67c039ca955e62450015f8eea1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec65b2e3daacfb67c039ca955e62450015f8eea1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec65b2e3daacfb67c039ca955e62450015f8eea1", "patch": "@@ -1,3 +1,10 @@\n+2002-02-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR optimization/5547:\n+\t* config/i386/i386.c (i386_simplify_dwarf_addr): Simplify\n+\tall valid IA-32 address modes involving non-scaled %ebx and\n+\tGOT/GOTOFF as displacement.\n+\n 2002-02-13  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* config/s390/s390.c (s390_final_chunkify): Re-run shorten_branches"}, {"sha": "40f88b5cc2f2f5fd791ad68554a08dc3b3160681", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 36, "deletions": 4, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec65b2e3daacfb67c039ca955e62450015f8eea1/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec65b2e3daacfb67c039ca955e62450015f8eea1/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=ec65b2e3daacfb67c039ca955e62450015f8eea1", "patch": "@@ -5365,7 +5365,7 @@ rtx\n i386_simplify_dwarf_addr (orig_x)\n      rtx orig_x;\n {\n-  rtx x = orig_x;\n+  rtx x = orig_x, y;\n \n   if (TARGET_64BIT)\n     {\n@@ -5377,22 +5377,54 @@ i386_simplify_dwarf_addr (orig_x)\n     }\n \n   if (GET_CODE (x) != PLUS\n-      || GET_CODE (XEXP (x, 0)) != REG\n       || GET_CODE (XEXP (x, 1)) != CONST)\n     return orig_x;\n \n+  if (GET_CODE (XEXP (x, 0)) == REG\n+      && REGNO (XEXP (x, 0)) == PIC_OFFSET_TABLE_REGNUM)\n+    /* %ebx + GOT/GOTOFF */\n+    y = NULL;\n+  else if (GET_CODE (XEXP (x, 0)) == PLUS)\n+    {\n+      /* %ebx + %reg * scale + GOT/GOTOFF */\n+      y = XEXP (x, 0);\n+      if (GET_CODE (XEXP (y, 0)) == REG\n+\t  && REGNO (XEXP (y, 0)) == PIC_OFFSET_TABLE_REGNUM)\n+\ty = XEXP (y, 1);\n+      else if (GET_CODE (XEXP (y, 1)) == REG\n+\t       && REGNO (XEXP (y, 1)) == PIC_OFFSET_TABLE_REGNUM)\n+\ty = XEXP (y, 0);\n+      else\n+\treturn orig_x;\n+      if (GET_CODE (y) != REG\n+\t  && GET_CODE (y) != MULT\n+\t  && GET_CODE (y) != ASHIFT)\n+\treturn orig_x;\n+    }\n+  else\n+    return orig_x;\n+\n   x = XEXP (XEXP (x, 1), 0);\n   if (GET_CODE (x) == UNSPEC\n       && (XINT (x, 1) == 6\n \t  || XINT (x, 1) == 7))\n-    return XVECEXP (x, 0, 0);\n+    {\n+      if (y)\n+\treturn gen_rtx_PLUS (Pmode, y, XVECEXP (x, 0, 0));\n+      return XVECEXP (x, 0, 0);\n+    }\n \n   if (GET_CODE (x) == PLUS\n       && GET_CODE (XEXP (x, 0)) == UNSPEC\n       && GET_CODE (XEXP (x, 1)) == CONST_INT\n       && (XINT (XEXP (x, 0), 1) == 6\n \t  || XINT (XEXP (x, 0), 1) == 7))\n-    return gen_rtx_PLUS (VOIDmode, XVECEXP (XEXP (x, 0), 0, 0), XEXP (x, 1));\n+    {\n+      x = gen_rtx_PLUS (VOIDmode, XVECEXP (XEXP (x, 0), 0, 0), XEXP (x, 1));\n+      if (y)\n+\treturn gen_rtx_PLUS (Pmode, y, x);\n+      return x;\n+    }\n \n   return orig_x;\n }"}, {"sha": "58118cf9082aa784aeec582788ee8451809545f9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec65b2e3daacfb67c039ca955e62450015f8eea1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec65b2e3daacfb67c039ca955e62450015f8eea1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ec65b2e3daacfb67c039ca955e62450015f8eea1", "patch": "@@ -1,3 +1,7 @@\n+2002-02-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.dg/other/debug3.C: New test.\n+\n 2002-02-13  Richard Smith <richard@ex-parrot.com>\n \n \t* g++.old-deja/g++.other/thunk1.C: New test."}, {"sha": "8525eef91992540fcadb9d6fab8313379480d077", "filename": "gcc/testsuite/g++.dg/other/debug3.C", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec65b2e3daacfb67c039ca955e62450015f8eea1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdebug3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec65b2e3daacfb67c039ca955e62450015f8eea1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdebug3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdebug3.C?ref=ec65b2e3daacfb67c039ca955e62450015f8eea1", "patch": "@@ -0,0 +1,47 @@\n+// PR optimization/5547\n+// This testcase caused ICE on IA-32, since DWARF-2 was unable\n+// to emit location expression for parameter a of operator+.\n+// { dg-do compile }\n+// { dg-options \"-O2 -g -fpic\" }\n+\n+struct A { char *s; };\n+\n+inline A operator+ (char a, const A &b)\n+{\n+  A s;\n+  s.s = new char[12];\n+  s.s[0] = a;\n+  return s;\n+}\n+\n+int b (const A &);\n+\n+void test1 (const A &x, int y)\n+{\n+  int j = b (\"012345\"[y] + x);\n+  for (int i = 0; i < y; i++);\n+}\n+\n+void test2 (const A &x, int y)\n+{\n+  int j = b (\"012345678\"[y + 2] + x);\n+  for (int i = 0; i < y; i++);\n+}\n+\n+void test3 (const A &x, int y)\n+{\n+  int j = b (\"012345678\"[y - 6] + x);\n+  for (int i = 0; i < y; i++);\n+}\n+\n+void test4 (const A &x, int y)\n+{\n+  int j = b (\"012345678\"[2 * y - 10] + x);\n+  for (int i = 0; i < y; i++);\n+}\n+\n+void test5 (const A &x, int y)\n+{\n+  int j = b (\"012345678\"[4 * y] + x);\n+  for (int i = 0; i < y; i++);\n+}"}]}