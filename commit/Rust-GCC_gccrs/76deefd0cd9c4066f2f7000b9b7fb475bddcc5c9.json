{"sha": "76deefd0cd9c4066f2f7000b9b7fb475bddcc5c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZkZWVmZDBjZDljNDA2NmYyZjcwMDBiOWI3ZmI0NzViZGRjYzVjOQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-09-22T21:14:43Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-09-22T21:14:43Z"}, "message": "runtime: Mark runtime_goexit function as noinline.\n\nIf the compiler inlines this function into kickoff, it may reuse\nthe TLS block address to load g. However, this is not necessarily\ncorrect, as the call to g->entry in kickoff may cause the TLS\naddress to change. If the wrong value is loaded for g->status in\nruntime_goexit, it may cause a runtime panic.\n\nBy marking the function as noinline we prevent the compiler from\nreusing the TLS address.\n\nFrom-SVN: r215484", "tree": {"sha": "082a0c27401b1c808011f524ac48284b258eb287", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/082a0c27401b1c808011f524ac48284b258eb287"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76deefd0cd9c4066f2f7000b9b7fb475bddcc5c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76deefd0cd9c4066f2f7000b9b7fb475bddcc5c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76deefd0cd9c4066f2f7000b9b7fb475bddcc5c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76deefd0cd9c4066f2f7000b9b7fb475bddcc5c9/comments", "author": null, "committer": null, "parents": [{"sha": "d87fc699839f068bc14ea189bc2aba4afc986a9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d87fc699839f068bc14ea189bc2aba4afc986a9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d87fc699839f068bc14ea189bc2aba4afc986a9c"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "87cd3edac00aebce9602b0f1d6d011607db9bf65", "filename": "libgo/runtime/proc.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76deefd0cd9c4066f2f7000b9b7fb475bddcc5c9/libgo%2Fruntime%2Fproc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76deefd0cd9c4066f2f7000b9b7fb475bddcc5c9/libgo%2Fruntime%2Fproc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fproc.c?ref=76deefd0cd9c4066f2f7000b9b7fb475bddcc5c9", "patch": "@@ -1894,6 +1894,7 @@ runtime_gosched0(G *gp)\n // Need to mark it as nosplit, because it runs with sp > stackbase (as runtime_lessstack).\n // Since it does not return it does not matter.  But if it is preempted\n // at the split stack check, GC will complain about inconsistent sp.\n+void runtime_goexit(void) __attribute__ ((noinline));\n void\n runtime_goexit(void)\n {"}]}