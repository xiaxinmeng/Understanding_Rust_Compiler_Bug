{"sha": "d66f9f0b1a6139c8871a5a359167c078eb1293e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY2ZjlmMGIxYTYxMzljODg3MWE1YTM1OTE2N2MwNzhlYjEyOTNlNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-31T16:03:54Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-31T16:03:54Z"}, "message": "[multiple changes]\n\n2014-01-31  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch9.adb: Minor reformatting.\n\n2014-01-31  Emmanuel Briot  <briot@adacore.com>\n\n\t* g-comlin.adb (Set_Command_Line): Take the switches\n\tconfiguration from the Command_Line_Config.\n\n2014-01-31  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_prag.adb (Analyze_Refinement_Clause): Guard against a malformed\n\trefinement clause.\n\n2014-01-31  Vincent Celier  <celier@adacore.com>\n\n\t* projects.texi: Add more documentation about others used as an\n\tindex in indexed attributes.\n\nFrom-SVN: r207358", "tree": {"sha": "e7601456a3bb8a7e4d3478e0aec16ff0561fe066", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7601456a3bb8a7e4d3478e0aec16ff0561fe066"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d66f9f0b1a6139c8871a5a359167c078eb1293e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d66f9f0b1a6139c8871a5a359167c078eb1293e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d66f9f0b1a6139c8871a5a359167c078eb1293e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d66f9f0b1a6139c8871a5a359167c078eb1293e6/comments", "author": null, "committer": null, "parents": [{"sha": "f3920a1360919acd091ba23a9566ecfda3dc37f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3920a1360919acd091ba23a9566ecfda3dc37f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3920a1360919acd091ba23a9566ecfda3dc37f4"}], "stats": {"total": 53, "additions": 45, "deletions": 8}, "files": [{"sha": "d17dbbc322362e406f3a707e13d7d644caa7d454", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d66f9f0b1a6139c8871a5a359167c078eb1293e6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d66f9f0b1a6139c8871a5a359167c078eb1293e6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d66f9f0b1a6139c8871a5a359167c078eb1293e6", "patch": "@@ -1,3 +1,22 @@\n+2014-01-31  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch9.adb: Minor reformatting.\n+\n+2014-01-31  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* g-comlin.adb (Set_Command_Line): Take the switches\n+\tconfiguration from the Command_Line_Config.\n+\n+2014-01-31  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Refinement_Clause): Guard against a malformed\n+\trefinement clause.\n+\n+2014-01-31  Vincent Celier  <celier@adacore.com>\n+\n+\t* projects.texi: Add more documentation about others used as an\n+\tindex in indexed attributes.\n+\n 2014-01-31  Robert Dewar  <dewar@adacore.com>\n \n \t* gnat_ugn.texi: Minor update."}, {"sha": "88e1ea79ea3bf99e0efd70470ccf18398e74e68a", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d66f9f0b1a6139c8871a5a359167c078eb1293e6/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d66f9f0b1a6139c8871a5a359167c078eb1293e6/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=d66f9f0b1a6139c8871a5a359167c078eb1293e6", "patch": "@@ -6195,6 +6195,7 @@ package body Exp_Ch9 is\n       function Is_Global_Entity (N : Node_Id) return Traverse_Result is\n          E : Entity_Id;\n          S : Entity_Id;\n+\n       begin\n          if Is_Entity_Name (N) and then Present (Entity (N)) then\n             E := Entity (N);\n@@ -6213,16 +6214,15 @@ package body Exp_Ch9 is\n                --  this safe. This is a common (if dubious) idiom.\n \n                elsif S = Scope (Prot)\n-                 and then (Ekind (S) = E_Package\n-                   or else Ekind (S) = E_Generic_Package)\n+                 and then Ekind_In (S, E_Package, E_Generic_Package)\n                  and then Nkind (Parent (E)) = N_Object_Declaration\n                  and then Nkind (Parent (Parent (E))) = N_Package_Body\n                then\n                   null;\n \n                else\n-                  Error_Msg_N (\"potentially unsynchronized barrier ?\", N);\n-                  Error_Msg_N (\"!& should be private component of type?\", N);\n+                  Error_Msg_N (\"potentially unsynchronized barrier?\", N);\n+                  Error_Msg_N (\"\\& should be private component of type?\", N);\n                end if;\n             end if;\n          end if;\n@@ -6231,8 +6231,9 @@ package body Exp_Ch9 is\n       end Is_Global_Entity;\n \n       procedure Check_Unprotected_Barrier is\n-         new Traverse_Proc (Is_Global_Entity);\n-      --  Start of processing for Expand_Entry_Barrier\n+        new Traverse_Proc (Is_Global_Entity);\n+\n+   --  Start of processing for Expand_Entry_Barrier\n \n    begin\n       if No_Run_Time_Mode then"}, {"sha": "4f84bd9e2821a218c41ea6f8124e32f857641573", "filename": "gcc/ada/g-comlin.adb", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d66f9f0b1a6139c8871a5a359167c078eb1293e6/gcc%2Fada%2Fg-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d66f9f0b1a6139c8871a5a359167c078eb1293e6/gcc%2Fada%2Fg-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.adb?ref=d66f9f0b1a6139c8871a5a359167c078eb1293e6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1999-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1681,7 +1681,13 @@ package body GNAT.Command_Line is\n                   --  the argument. In the second case, the switch matches \"*\",\n                   --  and is then decomposed below.\n \n-                  S := Getopt (Switches    => \"*\",\n+                  --  Note: When a Command_Line object is associated with a\n+                  --  Command_Line_Config (which is mostly the case for tools\n+                  --  that let users chose the command line before spawning\n+                  --  other tools, for instance IDEs), the configuration of\n+                  --  the switches must be taken from the Command_Line_Config.\n+\n+                  S := Getopt (Switches    => \"* \" & Get_Switches (Cmd.Config),\n                                Concatenate => False,\n                                Parser      => Parser);\n "}, {"sha": "1040a6d891abf0433f386090c5157907a457a27f", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d66f9f0b1a6139c8871a5a359167c078eb1293e6/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d66f9f0b1a6139c8871a5a359167c078eb1293e6/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=d66f9f0b1a6139c8871a5a359167c078eb1293e6", "patch": "@@ -3806,6 +3806,9 @@ depending on the platform.\n For an indexed attribute, if it is allowed to use @b{others} as the index,\n this is indicated by the words \"others allowed\".\n \n+When @b{others} is used as the index of an indexed attribute, the value of\n+the attribute indexed by @b{others} is used when no other index would apply.\n+\n @end itemize\n \n @node Project Level Attributes"}, {"sha": "fb4ddfc202316497dc1e90d38efb4bd031607c53", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d66f9f0b1a6139c8871a5a359167c078eb1293e6/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d66f9f0b1a6139c8871a5a359167c078eb1293e6/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=d66f9f0b1a6139c8871a5a359167c078eb1293e6", "patch": "@@ -23137,6 +23137,14 @@ package body Sem_Prag is\n       --  Start of processing for Analyze_Refinement_Clause\n \n       begin\n+         --  A refinement clause appears as a component association where the\n+         --  sole choice is the state and the expressions are the constituents.\n+\n+         if Nkind (Clause) /= N_Component_Association then\n+            Error_Msg_N (\"malformed state refinement clause\", Clause);\n+            return;\n+         end if;\n+\n          --  Analyze the state name of a refinement clause\n \n          State := First (Choices (Clause));"}]}