{"sha": "1b04be5d4a6109d44b54ad398da63623db9dab94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWIwNGJlNWQ0YTYxMDlkNDRiNTRhZDM5OGRhNjM2MjNkYjlkYWI5NA==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2012-09-30T16:36:02Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2012-09-30T16:36:02Z"}, "message": "re PR fortran/54667 ([OOP] gimplification failure with c_f_pointer)\n\n2012-09-30  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/54667\n\t* intrinsic.texi (C_F_POINTER): Fix description.\n\t* resolve.c (gfc_iso_c_sub_interface): Add a check for FPTR argument\n\tof C_F_POINTER. Modify two error messages. Cleanup.\n\n2012-09-30  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/54667\n\t* gfortran.dg/c_funloc_tests_6.f90: Modified error message.\n\t* gfortran.dg/c_f_pointer_shape_test.f90: Ditto.\n\t* gfortran.dg/c_f_pointer_tests_5.f90: New.\n\nFrom-SVN: r191870", "tree": {"sha": "f8809ca55ffd12c09363fc709ab4fae5951abfab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8809ca55ffd12c09363fc709ab4fae5951abfab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b04be5d4a6109d44b54ad398da63623db9dab94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b04be5d4a6109d44b54ad398da63623db9dab94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b04be5d4a6109d44b54ad398da63623db9dab94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b04be5d4a6109d44b54ad398da63623db9dab94/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4ca0e1a10478580672eccf006c6bf1daaf84f3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4ca0e1a10478580672eccf006c6bf1daaf84f3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4ca0e1a10478580672eccf006c6bf1daaf84f3d"}], "stats": {"total": 88, "additions": 62, "deletions": 26}, "files": [{"sha": "e1cb45affb1ed9fb6b6fcc10e30905ad4381950c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b04be5d4a6109d44b54ad398da63623db9dab94/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b04be5d4a6109d44b54ad398da63623db9dab94/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1b04be5d4a6109d44b54ad398da63623db9dab94", "patch": "@@ -1,3 +1,10 @@\n+2012-09-30  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/54667\n+\t* intrinsic.texi (C_F_POINTER): Fix description.\n+\t* resolve.c (gfc_iso_c_sub_interface): Add a check for FPTR argument\n+\tof C_F_POINTER. Modify two error messages. Cleanup.\n+\n 2012-09-24  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/54618"}, {"sha": "a8ec1ed76b4f79ca4ea8e96c03929d435163fd1c", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b04be5d4a6109d44b54ad398da63623db9dab94/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b04be5d4a6109d44b54ad398da63623db9dab94/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=1b04be5d4a6109d44b54ad398da63623db9dab94", "patch": "@@ -2362,9 +2362,8 @@ end program main\n \n @table @asis\n @item @emph{Description}:\n-@code{C_F_POINTER(CPTR, FPTR[, SHAPE])} Assign the target the C pointer\n-@var{CPTR} to the Fortran pointer @var{FPTR} and specify its\n-shape.\n+@code{C_F_POINTER(CPTR, FPTR[, SHAPE])} assigns the target of the C pointer\n+@var{CPTR} to the Fortran pointer @var{FPTR} and specifies its shape.\n \n @item @emph{Standard}:\n Fortran 2003 and later"}, {"sha": "3e23ca2e31128d736a8034a2429e3fc130368b6a", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 27, "deletions": 18, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b04be5d4a6109d44b54ad398da63623db9dab94/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b04be5d4a6109d44b54ad398da63623db9dab94/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=1b04be5d4a6109d44b54ad398da63623db9dab94", "patch": "@@ -3532,36 +3532,45 @@ gfc_iso_c_sub_interface (gfc_code *c, gfc_symbol *sym)\n \t{\n \t  if (c->ext.actual != NULL && c->ext.actual->next != NULL)\n \t    {\n-\t      if (c->ext.actual->expr->ts.type != BT_DERIVED\n-\t\t  || c->ext.actual->expr->ts.u.derived->intmod_sym_id\n-\t\t     != ISOCBINDING_PTR)\n+\t      gfc_actual_arglist *arg1 = c->ext.actual;\n+\t      gfc_actual_arglist *arg2 = c->ext.actual->next;\n+\t      gfc_actual_arglist *arg3 = c->ext.actual->next->next;\n+\n+\t      /* Check first argument (CPTR).  */\n+\t      if (arg1->expr->ts.type != BT_DERIVED\n+\t\t  || arg1->expr->ts.u.derived->intmod_sym_id != ISOCBINDING_PTR)\n+\t\t{\n+\t\t  gfc_error (\"Argument CPTR to C_F_POINTER at %L shall have \"\n+\t\t\t     \"the type C_PTR\", &arg1->expr->where);\n+\t\t  m = MATCH_ERROR;\n+\t\t}\n+\n+\t      /* Check second argument (FPTR).  */\n+\t      if (arg2->expr->ts.type == BT_CLASS)\n \t\t{\n-\t\t  gfc_error (\"Argument at %L to C_F_POINTER shall have the type\"\n-\t\t\t     \" C_PTR\", &c->ext.actual->expr->where);\n+\t\t  gfc_error (\"Argument FPTR to C_F_POINTER at %L must not be \"\n+\t\t\t     \"polymorphic\", &arg2->expr->where);\n \t\t  m = MATCH_ERROR;\n \t\t}\n \n-\t      /* Make sure we got a third arg if the second arg has non-zero\n-\t\t rank.\tWe must also check that the type and rank are\n+\t      /* Make sure we got a third arg (SHAPE) if the second arg has\n+\t\t non-zero rank. We must also check that the type and rank are\n \t\t correct since we short-circuit this check in\n \t\t gfc_procedure_use() (called above to sort actual args).  */\n-\t      if (c->ext.actual->next->expr->rank != 0)\n+\t      if (arg2->expr->rank != 0)\n \t\t{\n-\t\t  if(c->ext.actual->next->next == NULL \n-\t\t     || c->ext.actual->next->next->expr == NULL)\n+\t\t  if (arg3 == NULL || arg3->expr == NULL)\n \t\t    {\n \t\t      m = MATCH_ERROR;\n-\t\t      gfc_error (\"Missing SHAPE parameter for call to %s \"\n-\t\t\t\t \"at %L\", sym->name, &(c->loc));\n+\t\t      gfc_error (\"Missing SHAPE argument for call to %s at %L\", \n+\t\t\t\t sym->name, &c->loc);\n \t\t    }\n-\t\t  else if (c->ext.actual->next->next->expr->ts.type\n-\t\t\t   != BT_INTEGER\n-\t\t\t   || c->ext.actual->next->next->expr->rank != 1)\n+\t\t  else if (arg3->expr->ts.type != BT_INTEGER\n+\t\t\t   || arg3->expr->rank != 1)\n \t\t    {\n \t\t      m = MATCH_ERROR;\n-\t\t      gfc_error (\"SHAPE parameter for call to %s at %L must \"\n-\t\t\t\t \"be a rank 1 INTEGER array\", sym->name,\n-\t\t\t\t &(c->loc));\n+\t\t      gfc_error (\"SHAPE argument for call to %s at %L must be \"\n+\t\t\t\t \"a rank 1 INTEGER array\", sym->name, &c->loc);\n \t\t    }\n \t\t}\n \t    }"}, {"sha": "9acf70eb5edc6098fcf4cf62814f041eb5c296d0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b04be5d4a6109d44b54ad398da63623db9dab94/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b04be5d4a6109d44b54ad398da63623db9dab94/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1b04be5d4a6109d44b54ad398da63623db9dab94", "patch": "@@ -1,3 +1,10 @@\n+2012-09-30  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/54667\n+\t* gfortran.dg/c_funloc_tests_6.f90: Modified error message.\n+\t* gfortran.dg/c_f_pointer_shape_test.f90: Ditto.\n+\t* gfortran.dg/c_f_pointer_tests_5.f90: New.\n+\n 2012-09-30  Janus Weil  <janus@gcc.gnu.org> \n \n \t* gfortran.dg/allocate_derived_1.f90: Re-enable class array checks,"}, {"sha": "f27730a431d335ab88aa3ef7895b8ad944f4e26a", "filename": "gcc/testsuite/gfortran.dg/c_f_pointer_shape_test.f90", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b04be5d4a6109d44b54ad398da63623db9dab94/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_f_pointer_shape_test.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b04be5d4a6109d44b54ad398da63623db9dab94/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_f_pointer_shape_test.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_f_pointer_shape_test.f90?ref=1b04be5d4a6109d44b54ad398da63623db9dab94", "patch": "@@ -1,7 +1,7 @@\n ! { dg-do compile }\n-! verify that the compiler catches the error in the call to c_f_pointer \n-! because it is missing the required SHAPE parameter.  the SHAPE parameter \n-! is optional, in general, but must exist if given a fortran pointer \n+! Verify that the compiler catches the error in the call to c_f_pointer \n+! because it is missing the required SHAPE argument. The SHAPE argument \n+! is optional, in general, but must exist if given a Fortran pointer \n ! to a non-zero rank object.  --Rickett, 09.26.06\n module c_f_pointer_shape_test\n contains\n@@ -13,7 +13,8 @@ subroutine test_0(myAssumedArray, cPtr)\n     type(c_ptr), value :: cPtr\n     \n     myArrayPtr => myArray\n-    call c_f_pointer(cPtr, myArrayPtr) ! { dg-error \"Missing SHAPE parameter\" }\n+    call c_f_pointer(cPtr, myArrayPtr) ! { dg-error \"Missing SHAPE argument\" }\n   end subroutine test_0\n end module c_f_pointer_shape_test\n \n+! { dg-final { cleanup-modules \"c_f_pointer_shape_test\" } }"}, {"sha": "05a3d8b85488fe88652759984dedb11597525ac9", "filename": "gcc/testsuite/gfortran.dg/c_f_pointer_tests_5.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b04be5d4a6109d44b54ad398da63623db9dab94/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_f_pointer_tests_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b04be5d4a6109d44b54ad398da63623db9dab94/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_f_pointer_tests_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_f_pointer_tests_5.f90?ref=1b04be5d4a6109d44b54ad398da63623db9dab94", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do compile }\n+!\n+! PR 54667: [OOP] gimplification failure with c_f_pointer\n+!\n+! Contributed by Andrew Benson <abensonca@gmail.com>\n+\n+use, intrinsic :: ISO_C_Binding\n+type :: nc\n+end type\n+type(c_ptr) :: cSelf\n+class(nc), pointer :: self\n+call c_f_pointer(cSelf, self)  ! { dg-error \"must not be polymorphic\" }\n+end"}, {"sha": "13ca9d91d9e3c5ec3ffbae84e6cb70bf0ffae55c", "filename": "gcc/testsuite/gfortran.dg/c_funloc_tests_6.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b04be5d4a6109d44b54ad398da63623db9dab94/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_funloc_tests_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b04be5d4a6109d44b54ad398da63623db9dab94/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_funloc_tests_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_funloc_tests_6.f90?ref=1b04be5d4a6109d44b54ad398da63623db9dab94", "patch": "@@ -23,7 +23,7 @@ end subroutine sub\n cp = c_funloc (sub) ! { dg-error \"Can't convert TYPE.c_funptr. to TYPE.c_ptr.\" })\n cfp = c_loc (int)   ! { dg-error \"Can't convert TYPE.c_ptr. to TYPE.c_funptr.\" }\n \n-call c_f_pointer (cfp, int)     ! { dg-error \"Argument at .1. to C_F_POINTER shall have the type C_PTR\" }\n+call c_f_pointer (cfp, int)     ! { dg-error \"Argument CPTR to C_F_POINTER at .1. shall have the type C_PTR\" }\n call c_f_procpointer (cp, fsub) ! { dg-error \"Argument at .1. to C_F_FUNPOINTER shall have the type C_FUNPTR\" }\n \n cfp = c_funloc (noCsub) ! { dg-error \"TS 29113: Noninteroperable argument 'nocsub' to 'c_funloc'\" }"}]}