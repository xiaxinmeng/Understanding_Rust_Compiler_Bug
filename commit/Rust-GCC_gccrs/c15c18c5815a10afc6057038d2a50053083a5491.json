{"sha": "c15c18c5815a10afc6057038d2a50053083a5491", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE1YzE4YzU4MTVhMTBhZmM2MDU3MDM4ZDJhNTAwNTMwODNhNTQ5MQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@redhat.com", "date": "2002-10-15T22:46:31Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2002-10-15T22:46:31Z"}, "message": "Fix x86 miscompilation of gdb mips simulator.\n\n\t* reload1.c (merge_assigned_reloads): After converting overlapping\n\treloads to RELOAD_OTHER, abort if there are now conflicting reloads.\n\t* config/i386/i386.md (adddi3_1): Add call to ix86_binary_operator_ok.\n\nFrom-SVN: r58184", "tree": {"sha": "085aaa50a332ab656a80e21bcfc25d0732cae018", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/085aaa50a332ab656a80e21bcfc25d0732cae018"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c15c18c5815a10afc6057038d2a50053083a5491", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c15c18c5815a10afc6057038d2a50053083a5491", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c15c18c5815a10afc6057038d2a50053083a5491", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c15c18c5815a10afc6057038d2a50053083a5491/comments", "author": null, "committer": null, "parents": [{"sha": "1a55127d2253848d525bb62ff95bd70fc65a5d2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a55127d2253848d525bb62ff95bd70fc65a5d2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a55127d2253848d525bb62ff95bd70fc65a5d2f"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "6026be3b5e55c988d3afdb4ece81efb1d88ae9ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c15c18c5815a10afc6057038d2a50053083a5491/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c15c18c5815a10afc6057038d2a50053083a5491/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c15c18c5815a10afc6057038d2a50053083a5491", "patch": "@@ -1,3 +1,10 @@\n+2002-10-15  Jim Wilson  <wilson@redhat.com>\n+\n+\t* reload1.c (merge_assigned_reloads): After converting overlapping\n+\treloads to RELOAD_OTHER, abort if there are now conflicting reloads.\n+\n+\t* config/i386/i386.md (adddi3_1): Add call to ix86_binary_operator_ok.\n+\n Tue Oct 15 22:08:35 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* expr.c (do_tablejump): Fix typo in my previous commit."}, {"sha": "de6216f9d0d8903f6a05cc5234456ac98500c52d", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c15c18c5815a10afc6057038d2a50053083a5491/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c15c18c5815a10afc6057038d2a50053083a5491/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=c15c18c5815a10afc6057038d2a50053083a5491", "patch": "@@ -4705,7 +4705,7 @@\n \t(plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n \t\t (match_operand:DI 2 \"general_operand\" \"roiF,riF\")))\n    (clobber (reg:CC 17))]\n-  \"!TARGET_64BIT\"\n+  \"!TARGET_64BIT && ix86_binary_operator_ok (PLUS, DImode, operands)\"\n   \"#\")\n \n (define_split"}, {"sha": "a163b8afb517fa716d838dfce1c96ebd804243ae", "filename": "gcc/reload1.c", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c15c18c5815a10afc6057038d2a50053083a5491/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c15c18c5815a10afc6057038d2a50053083a5491/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=c15c18c5815a10afc6057038d2a50053083a5491", "patch": "@@ -6119,10 +6119,24 @@ merge_assigned_reloads (insn)\n \t\t      || rld[j].when_needed == RELOAD_FOR_INPADDR_ADDRESS)\n \t\t  && reg_overlap_mentioned_for_reload_p (rld[j].in,\n \t\t\t\t\t\t\t rld[i].in))\n-\t\trld[j].when_needed\n-\t\t  = ((rld[j].when_needed == RELOAD_FOR_INPUT_ADDRESS\n-\t\t      || rld[j].when_needed == RELOAD_FOR_INPADDR_ADDRESS)\n-\t\t     ? RELOAD_FOR_OTHER_ADDRESS : RELOAD_OTHER);\n+\t\t{\n+\t\t  int k;\n+\n+\t\t  rld[j].when_needed\n+\t\t    = ((rld[j].when_needed == RELOAD_FOR_INPUT_ADDRESS\n+\t\t\t|| rld[j].when_needed == RELOAD_FOR_INPADDR_ADDRESS)\n+\t\t       ? RELOAD_FOR_OTHER_ADDRESS : RELOAD_OTHER);\n+\n+\t\t  /* Check to see if we accidentally converted two reloads\n+\t\t     that use the same reload register to the same type.\n+\t\t     If so, the resulting code won't work, so abort.  */\n+\t\t  if (rld[j].reg_rtx)\n+\t\t    for (k = 0; k < j; k++)\n+\t\t      if (rld[k].in != 0 && rld[k].reg_rtx != 0\n+\t\t\t  && rld[k].when_needed == rld[j].when_needed\n+\t\t\t  && rtx_equal_p (rld[k].reg_rtx, rld[j].reg_rtx))\n+\t\t\tabort ();\n+\t\t}\n \t}\n     }\n }"}]}