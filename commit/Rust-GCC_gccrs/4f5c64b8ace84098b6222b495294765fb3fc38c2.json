{"sha": "4f5c64b8ace84098b6222b495294765fb3fc38c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY1YzY0YjhhY2U4NDA5OGI2MjIyYjQ5NTI5NDc2NWZiM2ZjMzhjMg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-01-29T15:47:19Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-01-29T15:47:19Z"}, "message": "re PR tree-optimization/35006 (Segfault in remove_unused_locals with nested functions)\n\n2008-01-29  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/35006\n\t* tree-inline.h (struct copy_body_data): Add remapping_type_depth\n\tfield.\n\t* tree-inline.c (remap_type): Increment remapping_type_depth\n\taround remapping types.\n\t(copy_body_r): Only add referenced variables if they are referenced\n\tfrom code, not types.\n\n\t* gcc.c-torture/compile/pr35006.c: New testcase.\n\nFrom-SVN: r131939", "tree": {"sha": "7b6cda1d150280c50f4c6d2bbb388db41dc4fa4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b6cda1d150280c50f4c6d2bbb388db41dc4fa4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f5c64b8ace84098b6222b495294765fb3fc38c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f5c64b8ace84098b6222b495294765fb3fc38c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f5c64b8ace84098b6222b495294765fb3fc38c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f5c64b8ace84098b6222b495294765fb3fc38c2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7b3e2d465d6f267d34a18b46c1ab6650c67785d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b3e2d465d6f267d34a18b46c1ab6650c67785d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b3e2d465d6f267d34a18b46c1ab6650c67785d9"}], "stats": {"total": 61, "additions": 57, "deletions": 4}, "files": [{"sha": "cb097d93c946895384bd95467e9c69d61a828e3f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f5c64b8ace84098b6222b495294765fb3fc38c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f5c64b8ace84098b6222b495294765fb3fc38c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4f5c64b8ace84098b6222b495294765fb3fc38c2", "patch": "@@ -1,3 +1,13 @@\n+2008-01-29  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/35006\n+\t* tree-inline.h (struct copy_body_data): Add remapping_type_depth\n+\tfield.\n+\t* tree-inline.c (remap_type): Increment remapping_type_depth\n+\taround remapping types.\n+\t(copy_body_r): Only add referenced variables if they are referenced\n+\tfrom code, not types.\n+\n 2008-01-29  Douglas Gregor  <doug.gregor@gmail.com>\n \n \tPR c++/34055"}, {"sha": "86bfcc7a34b460713d54d492d767a13e1cd16d19", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f5c64b8ace84098b6222b495294765fb3fc38c2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f5c64b8ace84098b6222b495294765fb3fc38c2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4f5c64b8ace84098b6222b495294765fb3fc38c2", "patch": "@@ -1,3 +1,8 @@\n+2008-01-29  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/35006\n+\t* gcc.c-torture/compile/pr35006.c: New testcase.\n+\n 2008-01-29  Douglas Gregor  <doug.gregor@gmail.com>\n \n \tPR c++/34055"}, {"sha": "53de05cdb403eb99bc3a2206de7e20209cafdde4", "filename": "gcc/testsuite/gcc.c-torture/compile/pr35006.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f5c64b8ace84098b6222b495294765fb3fc38c2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr35006.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f5c64b8ace84098b6222b495294765fb3fc38c2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr35006.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr35006.c?ref=4f5c64b8ace84098b6222b495294765fb3fc38c2", "patch": "@@ -0,0 +1,29 @@\n+typedef unsigned long grub_uint64_t;\n+typedef grub_uint64_t grub_size_t;\n+grub_cmdline_get (unsigned max_len, int echo_char)\n+{\n+  unsigned xpos, ypos, ystart;\n+  grub_size_t lpos, llen;\n+  char buf[max_len];\n+  void cl_print (int pos, int c)\n+  {\n+      char *p;\n+      for (p = buf + pos; *p; p++)\n+      {\n+        if (xpos++ > 78)\n+          grub_putchar ('\\n');\n+        grub_putchar (*p);\n+      }\n+ }\n+ void cl_delete (unsigned len)\n+ {\n+   cl_set_pos ();\n+   cl_print (lpos, ' ');\n+   grub_memmove ();\n+   cl_print (lpos, echo_char);\n+   cl_set_pos ();\n+ }\n+ cl_delete (llen);\n+ grub_size_t n = lpos;\n+ cl_delete (n);\n+}"}, {"sha": "d2ef9619eb2d8069e43ae0637e996dcc5afc2913", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f5c64b8ace84098b6222b495294765fb3fc38c2/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f5c64b8ace84098b6222b495294765fb3fc38c2/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=4f5c64b8ace84098b6222b495294765fb3fc38c2", "patch": "@@ -409,6 +409,7 @@ tree\n remap_type (tree type, copy_body_data *id)\n {\n   tree *node;\n+  tree tmp;\n \n   if (type == NULL)\n     return type;\n@@ -425,7 +426,11 @@ remap_type (tree type, copy_body_data *id)\n       return type;\n     }\n \n-  return remap_type_1 (type, id);\n+  id->remapping_type_depth++;\n+  tmp = remap_type_1 (type, id);\n+  id->remapping_type_depth--;\n+\n+  return tmp;\n }\n \n static tree\n@@ -723,9 +728,10 @@ copy_body_r (tree *tp, int *walk_subtrees, void *data)\n \t tweak some special cases.  */\n       copy_tree_r (tp, walk_subtrees, NULL);\n \n-      /* Global variables we didn't seen yet needs to go into referenced\n-\t vars.  */\n-      if (gimple_in_ssa_p (cfun) && TREE_CODE (*tp) == VAR_DECL)\n+      /* Global variables we haven't seen yet needs to go into referenced\n+\t vars.  If not referenced from types only.  */\n+      if (gimple_in_ssa_p (cfun) && TREE_CODE (*tp) == VAR_DECL\n+\t  && id->remapping_type_depth == 0)\n \tadd_referenced_var (*tp);\n        \n       /* If EXPR has block defined, map it to newly constructed block."}, {"sha": "562713a3299093dae61ae78a9a08e1bd91e817a5", "filename": "gcc/tree-inline.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f5c64b8ace84098b6222b495294765fb3fc38c2/gcc%2Ftree-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f5c64b8ace84098b6222b495294765fb3fc38c2/gcc%2Ftree-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.h?ref=4f5c64b8ace84098b6222b495294765fb3fc38c2", "patch": "@@ -95,6 +95,9 @@ typedef struct copy_body_data\n   /* True if this statement will need to be regimplified.  */\n   bool regimplify;\n \n+  /* > 0 if we are remapping a type currently.  */\n+  int remapping_type_depth;\n+\n   /* Statements that might be possibly folded.  */\n   struct pointer_set_t *statements_to_fold;\n "}]}