{"sha": "a023f8c8dc9ef41f4212b964326a2d16a3f00b27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTAyM2Y4YzhkYzllZjQxZjQyMTJiOTY0MzI2YTJkMTZhM2YwMGIyNw==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2016-10-19T10:19:24Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2016-10-19T10:19:24Z"}, "message": "[PR tree-optimization/78024] Clear basic block flags before using BB_VISITED for OpenACC loops processing\n\n\tgcc/\n\t* omp-low.c (oacc_loop_discovery): Call clear_bb_flags before, and\n\tdon't clear BB_VISITED after processing.\n\n\tgcc/testsuite/\n\t* gcc.dg/goacc/loop-processing-1.c: New file.\n\nFrom-SVN: r241334", "tree": {"sha": "90af851b2b5f659fea4c389ca23aff204e59bcae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90af851b2b5f659fea4c389ca23aff204e59bcae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a023f8c8dc9ef41f4212b964326a2d16a3f00b27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a023f8c8dc9ef41f4212b964326a2d16a3f00b27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a023f8c8dc9ef41f4212b964326a2d16a3f00b27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a023f8c8dc9ef41f4212b964326a2d16a3f00b27/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d40627f9335050467ae3fdb8bcf31ed695b290ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d40627f9335050467ae3fdb8bcf31ed695b290ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d40627f9335050467ae3fdb8bcf31ed695b290ea"}], "stats": {"total": 37, "additions": 32, "deletions": 5}, "files": [{"sha": "4117eb34637dbdb92f6c034bb1bbc5016cdad2c1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a023f8c8dc9ef41f4212b964326a2d16a3f00b27/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a023f8c8dc9ef41f4212b964326a2d16a3f00b27/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a023f8c8dc9ef41f4212b964326a2d16a3f00b27", "patch": "@@ -1,3 +1,9 @@\n+2016-10-19  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR tree-optimization/78024\n+\t* omp-low.c (oacc_loop_discovery): Call clear_bb_flags before, and\n+\tdon't clear BB_VISITED after processing.\n+\n 2016-10-19  Richard Biener  <rguenther@suse.de>\n \n \t* domwalk.c (dom_walker::walk): Use RPO order."}, {"sha": "3ef796f3c2419b10183efb2be71c2c7129145ec4", "filename": "gcc/omp-low.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a023f8c8dc9ef41f4212b964326a2d16a3f00b27/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a023f8c8dc9ef41f4212b964326a2d16a3f00b27/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=a023f8c8dc9ef41f4212b964326a2d16a3f00b27", "patch": "@@ -19236,7 +19236,9 @@ oacc_loop_sibling_nreverse (oacc_loop *loop)\n static oacc_loop *\n oacc_loop_discovery ()\n {\n-  basic_block bb;\n+  /* Clear basic block flags, in particular BB_VISITED which we're going to use\n+     in the following.  */\n+  clear_bb_flags ();\n   \n   oacc_loop *top = new_oacc_loop_outer (current_function_decl);\n   oacc_loop_discover_walk (top, ENTRY_BLOCK_PTR_FOR_FN (cfun));\n@@ -19245,10 +19247,6 @@ oacc_loop_discovery ()\n      that diagnostics come out in an unsurprising order.  */\n   top = oacc_loop_sibling_nreverse (top);\n \n-  /* Reset the visited flags.  */\n-  FOR_ALL_BB_FN (bb, cfun)\n-    bb->flags &= ~BB_VISITED;\n-\n   return top;\n }\n "}, {"sha": "ec875aaa5cae5ff394bde31bb3a706a32857ff88", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a023f8c8dc9ef41f4212b964326a2d16a3f00b27/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a023f8c8dc9ef41f4212b964326a2d16a3f00b27/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a023f8c8dc9ef41f4212b964326a2d16a3f00b27", "patch": "@@ -1,3 +1,8 @@\n+2016-10-19  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR tree-optimization/78024\n+\t* gcc.dg/goacc/loop-processing-1.c: New file.\n+\n 2016-10-19  Richard Biener  <rguenther@suse.de>\n \n \t* gcc.dg/tree-ssa/pr61839_2.c: Fix testcase."}, {"sha": "619576a17eed7655345d0263b3ac2a30cb5d1a0f", "filename": "gcc/testsuite/gcc.dg/goacc/loop-processing-1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a023f8c8dc9ef41f4212b964326a2d16a3f00b27/gcc%2Ftestsuite%2Fgcc.dg%2Fgoacc%2Floop-processing-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a023f8c8dc9ef41f4212b964326a2d16a3f00b27/gcc%2Ftestsuite%2Fgcc.dg%2Fgoacc%2Floop-processing-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgoacc%2Floop-processing-1.c?ref=a023f8c8dc9ef41f4212b964326a2d16a3f00b27", "patch": "@@ -0,0 +1,18 @@\n+/* Make sure that OpenACC loop processing happens.  */\n+/* { dg-additional-options \"-O2 -fdump-tree-oaccdevlow\" } */\n+\n+extern int place ();\n+\n+void vector_1 (int *ary, int size)\n+{\n+#pragma acc parallel num_workers (32) vector_length(32) copy(ary[0:size]) firstprivate (size)\n+  {\n+#pragma acc loop gang\n+    for (int jx = 0; jx < 1; jx++)\n+#pragma acc loop auto\n+      for (int ix = 0; ix < size; ix++)\n+\tary[ix] = place ();\n+  }\n+}\n+\n+/* { dg-final { scan-tree-dump {OpenACC loops.*Loop 0\\(0\\).*Loop 14\\(1\\).*\\.data_dep\\.[0-9_]+ = UNIQUE \\(OACC_HEAD_MARK, 0, 1, 20\\);.*Head-0:.*\\.data_dep\\.[0-9_]+ = UNIQUE \\(OACC_HEAD_MARK, 0, 1, 20\\);.*\\.data_dep\\.[0-9_]+ = UNIQUE \\(OACC_FORK, \\.data_dep\\.[0-9_]+, 0\\);.*Tail-0:.*\\.data_dep\\.[0-9_]+ = UNIQUE \\(OACC_TAIL_MARK, \\.data_dep\\.[0-9_]+, 1\\);.*\\.data_dep\\.[0-9_]+ = UNIQUE \\(OACC_JOIN, \\.data_dep\\.[0-9_]+, 0\\);.*Loop 6\\(4\\).*\\.data_dep\\.[0-9_]+ = UNIQUE \\(OACC_HEAD_MARK, 0, 1, 6\\);.*Head-0:.*\\.data_dep\\.[0-9_]+ = UNIQUE \\(OACC_HEAD_MARK, 0, 1, 6\\);.*\\.data_dep\\.[0-9_]+ = UNIQUE \\(OACC_FORK, \\.data_dep\\.[0-9_]+, 2\\);.*Tail-0:.*\\.data_dep\\.[0-9_]+ = UNIQUE \\(OACC_TAIL_MARK, \\.data_dep\\.[0-9_]+, 1\\);.*\\.data_dep\\.[0-9_]+ = UNIQUE \\(OACC_JOIN, \\.data_dep\\.[0-9_]+, 2\\);} \"oaccdevlow\" } } */"}]}