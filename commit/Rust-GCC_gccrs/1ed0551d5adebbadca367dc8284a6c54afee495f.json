{"sha": "1ed0551d5adebbadca367dc8284a6c54afee495f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVkMDU1MWQ1YWRlYmJhZGNhMzY3ZGM4Mjg0YTZjNTRhZmVlNDk1Zg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-03-21T19:03:58Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-12T08:29:17Z"}, "message": "[Ada] ACATS 4.1Q - CDD2A04 - RLS not followed\n\n2020-06-12  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* exp_strm.adb (Build_Elementary_Input_Call): Add support for 24\n\tbits elementary types.\n\t* rtsfind.ads: Add 24 bits integer streaming routines.\n\t* sem_ch13.adb (Analyze_Attribute_Definition_Clause\n\t[Attribute_Stream_Size]): Add support for 24 bits elementary\n\ttypes.\n\t* libgnat/s-stratt.ads, libgnat/s-stratt.adb,\n\tlibgnat/s-stratt__xdr.adb: Add support for signed and unsigned\n\t24 bits integers.", "tree": {"sha": "0f700743e8758006f1684d4721f2fbe36dab807f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f700743e8758006f1684d4721f2fbe36dab807f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ed0551d5adebbadca367dc8284a6c54afee495f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ed0551d5adebbadca367dc8284a6c54afee495f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ed0551d5adebbadca367dc8284a6c54afee495f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ed0551d5adebbadca367dc8284a6c54afee495f/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51ebdbc91a8bbbd7509273075f3953b335b8c7c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51ebdbc91a8bbbd7509273075f3953b335b8c7c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51ebdbc91a8bbbd7509273075f3953b335b8c7c1"}], "stats": {"total": 268, "additions": 246, "deletions": 22}, "files": [{"sha": "6cda955760f4bf4ab50c8ca2ec04a6121c995521", "filename": "gcc/ada/exp_strm.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed0551d5adebbadca367dc8284a6c54afee495f/gcc%2Fada%2Fexp_strm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed0551d5adebbadca367dc8284a6c54afee495f/gcc%2Fada%2Fexp_strm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_strm.adb?ref=1ed0551d5adebbadca367dc8284a6c54afee495f", "patch": "@@ -569,6 +569,9 @@ package body Exp_Strm is\n          elsif P_Size <= Standard_Short_Integer_Size then\n             Lib_RE := RE_I_SI;\n \n+         elsif P_Size = 24 then\n+            Lib_RE := RE_I_I24;\n+\n          elsif P_Size <= Standard_Integer_Size then\n             Lib_RE := RE_I_I;\n \n@@ -597,6 +600,9 @@ package body Exp_Strm is\n          elsif P_Size <= Standard_Short_Integer_Size then\n             Lib_RE := RE_I_SU;\n \n+         elsif P_Size = 24 then\n+            Lib_RE := RE_I_U24;\n+\n          elsif P_Size <= Standard_Integer_Size then\n             Lib_RE := RE_I_U;\n \n@@ -798,6 +804,8 @@ package body Exp_Strm is\n             Lib_RE := RE_W_SSI;\n          elsif P_Size <= Standard_Short_Integer_Size then\n             Lib_RE := RE_W_SI;\n+         elsif P_Size = 24 then\n+            Lib_RE := RE_W_I24;\n          elsif P_Size <= Standard_Integer_Size then\n             Lib_RE := RE_W_I;\n          elsif P_Size <= Standard_Long_Integer_Size then\n@@ -822,6 +830,8 @@ package body Exp_Strm is\n             Lib_RE := RE_W_SSU;\n          elsif P_Size <= Standard_Short_Integer_Size then\n             Lib_RE := RE_W_SU;\n+         elsif P_Size = 24 then\n+            Lib_RE := RE_W_U24;\n          elsif P_Size <= Standard_Integer_Size then\n             Lib_RE := RE_W_U;\n          elsif P_Size <= Standard_Long_Integer_Size then"}, {"sha": "64f3f04008165821fe2b8ea53bac73921e7c0791", "filename": "gcc/ada/libgnat/s-stratt.adb", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed0551d5adebbadca367dc8284a6c54afee495f/gcc%2Fada%2Flibgnat%2Fs-stratt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed0551d5adebbadca367dc8284a6c54afee495f/gcc%2Fada%2Flibgnat%2Fs-stratt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-stratt.adb?ref=1ed0551d5adebbadca367dc8284a6c54afee495f", "patch": "@@ -59,6 +59,7 @@ package body System.Stream_Attributes is\n    subtype S_C   is SEA (1 .. (Character'Size                + SU - 1) / SU);\n    subtype S_F   is SEA (1 .. (Float'Size                    + SU - 1) / SU);\n    subtype S_I   is SEA (1 .. (Integer'Size                  + SU - 1) / SU);\n+   subtype S_I24 is SEA (1 .. (Integer_24'Size               + SU - 1) / SU);\n    subtype S_LF  is SEA (1 .. (Long_Float'Size               + SU - 1) / SU);\n    subtype S_LI  is SEA (1 .. (Long_Integer'Size             + SU - 1) / SU);\n    subtype S_LLF is SEA (1 .. (Long_Long_Float'Size          + SU - 1) / SU);\n@@ -71,6 +72,7 @@ package body System.Stream_Attributes is\n    subtype S_SSU is SEA (1 .. (UST.Short_Short_Unsigned'Size + SU - 1) / SU);\n    subtype S_SU  is SEA (1 .. (UST.Short_Unsigned'Size       + SU - 1) / SU);\n    subtype S_U   is SEA (1 .. (UST.Unsigned'Size             + SU - 1) / SU);\n+   subtype S_U24 is SEA (1 .. (Unsigned_24'Size              + SU - 1) / SU);\n    subtype S_WC  is SEA (1 .. (Wide_Character'Size           + SU - 1) / SU);\n    subtype S_WWC is SEA (1 .. (Wide_Wide_Character'Size      + SU - 1) / SU);\n \n@@ -80,6 +82,7 @@ package body System.Stream_Attributes is\n    function From_AS  is new UC (Thin_Pointer,             S_AS);\n    function From_F   is new UC (Float,                    S_F);\n    function From_I   is new UC (Integer,                  S_I);\n+   function From_I24 is new UC (Integer_24,               S_I24);\n    function From_LF  is new UC (Long_Float,               S_LF);\n    function From_LI  is new UC (Long_Integer,             S_LI);\n    function From_LLF is new UC (Long_Long_Float,          S_LLF);\n@@ -92,6 +95,7 @@ package body System.Stream_Attributes is\n    function From_SSU is new UC (UST.Short_Short_Unsigned, S_SSU);\n    function From_SU  is new UC (UST.Short_Unsigned,       S_SU);\n    function From_U   is new UC (UST.Unsigned,             S_U);\n+   function From_U24 is new UC (Unsigned_24,              S_U24);\n    function From_WC  is new UC (Wide_Character,           S_WC);\n    function From_WWC is new UC (Wide_Wide_Character,      S_WWC);\n \n@@ -101,6 +105,7 @@ package body System.Stream_Attributes is\n    function To_AS  is new UC (S_AS,  Thin_Pointer);\n    function To_F   is new UC (S_F,   Float);\n    function To_I   is new UC (S_I,   Integer);\n+   function To_I24 is new UC (S_I24, Integer_24);\n    function To_LF  is new UC (S_LF,  Long_Float);\n    function To_LI  is new UC (S_LI,  Long_Integer);\n    function To_LLF is new UC (S_LLF, Long_Long_Float);\n@@ -113,6 +118,7 @@ package body System.Stream_Attributes is\n    function To_SSU is new UC (S_SSU, UST.Short_Short_Unsigned);\n    function To_SU  is new UC (S_SU,  UST.Short_Unsigned);\n    function To_U   is new UC (S_U,   UST.Unsigned);\n+   function To_U24 is new UC (S_U24, Unsigned_24);\n    function To_WC  is new UC (S_WC,  Wide_Character);\n    function To_WWC is new UC (S_WWC, Wide_Wide_Character);\n \n@@ -233,6 +239,24 @@ package body System.Stream_Attributes is\n       end if;\n    end I_I;\n \n+   -----------\n+   -- I_I24 --\n+   -----------\n+\n+   function I_I24 (Stream : not null access RST) return Integer_24 is\n+      T : S_I24;\n+      L : SEO;\n+\n+   begin\n+      Ada.Streams.Read (Stream.all, T, L);\n+\n+      if L < T'Last then\n+         raise Err;\n+      else\n+         return To_I24 (T);\n+      end if;\n+   end I_I24;\n+\n    ----------\n    -- I_LF --\n    ----------\n@@ -453,6 +477,24 @@ package body System.Stream_Attributes is\n       end if;\n    end I_U;\n \n+   -----------\n+   -- I_U24 --\n+   -----------\n+\n+   function I_U24 (Stream : not null access RST) return Unsigned_24 is\n+      T : S_U24;\n+      L : SEO;\n+\n+   begin\n+      Ada.Streams.Read (Stream.all, T, L);\n+\n+      if L < T'Last then\n+         raise Err;\n+      else\n+         return To_U24 (T);\n+      end if;\n+   end I_U24;\n+\n    ----------\n    -- I_WC --\n    ----------\n@@ -551,6 +593,16 @@ package body System.Stream_Attributes is\n       Ada.Streams.Write (Stream.all, T);\n    end W_I;\n \n+   -----------\n+   -- W_I24 --\n+   -----------\n+\n+   procedure W_I24 (Stream : not null access RST; Item : Integer_24) is\n+      T : constant S_I24 := From_I24 (Item);\n+   begin\n+      Ada.Streams.Write (Stream.all, T);\n+   end W_I24;\n+\n    ----------\n    -- W_LF --\n    ----------\n@@ -683,6 +735,16 @@ package body System.Stream_Attributes is\n       Ada.Streams.Write (Stream.all, T);\n    end W_U;\n \n+   -----------\n+   -- W_U24 --\n+   -----------\n+\n+   procedure W_U24 (Stream : not null access RST; Item : Unsigned_24) is\n+      T : constant S_U24 := From_U24 (Item);\n+   begin\n+      Ada.Streams.Write (Stream.all, T);\n+   end W_U24;\n+\n    ----------\n    -- W_WC --\n    ----------"}, {"sha": "733694901469d6c49e0688f0d26df0b8396d7459", "filename": "gcc/ada/libgnat/s-stratt.ads", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed0551d5adebbadca367dc8284a6c54afee495f/gcc%2Fada%2Flibgnat%2Fs-stratt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed0551d5adebbadca367dc8284a6c54afee495f/gcc%2Fada%2Flibgnat%2Fs-stratt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-stratt.ads?ref=1ed0551d5adebbadca367dc8284a6c54afee495f", "patch": "@@ -53,6 +53,12 @@ package System.Stream_Attributes is\n \n    subtype SEC is Ada.Streams.Stream_Element_Count;\n \n+   type Integer_24 is range -2 ** 23 .. 2 ** 23 - 1;\n+   for Integer_24'Size use 24;\n+\n+   type Unsigned_24 is mod 2 ** 24;\n+   for Unsigned_24'Size use 24;\n+\n    --  Enumeration types are usually transferred using the routine for the\n    --  corresponding integer. The exception is that special routines are\n    --  provided for Boolean and the character types, in case the protocol\n@@ -104,6 +110,7 @@ package System.Stream_Attributes is\n    function I_C   (Stream : not null access RST) return Character;\n    function I_F   (Stream : not null access RST) return Float;\n    function I_I   (Stream : not null access RST) return Integer;\n+   function I_I24 (Stream : not null access RST) return Integer_24;\n    function I_LF  (Stream : not null access RST) return Long_Float;\n    function I_LI  (Stream : not null access RST) return Long_Integer;\n    function I_LLF (Stream : not null access RST) return Long_Long_Float;\n@@ -117,6 +124,7 @@ package System.Stream_Attributes is\n                                                    UST.Short_Short_Unsigned;\n    function I_SU  (Stream : not null access RST) return UST.Short_Unsigned;\n    function I_U   (Stream : not null access RST) return UST.Unsigned;\n+   function I_U24 (Stream : not null access RST) return Unsigned_24;\n    function I_WC  (Stream : not null access RST) return Wide_Character;\n    function I_WWC (Stream : not null access RST) return Wide_Wide_Character;\n \n@@ -135,6 +143,7 @@ package System.Stream_Attributes is\n    procedure W_C   (Stream : not null access RST; Item : Character);\n    procedure W_F   (Stream : not null access RST; Item : Float);\n    procedure W_I   (Stream : not null access RST; Item : Integer);\n+   procedure W_I24 (Stream : not null access RST; Item : Integer_24);\n    procedure W_LF  (Stream : not null access RST; Item : Long_Float);\n    procedure W_LI  (Stream : not null access RST; Item : Long_Integer);\n    procedure W_LLF (Stream : not null access RST; Item : Long_Long_Float);\n@@ -149,6 +158,7 @@ package System.Stream_Attributes is\n                                                     UST.Short_Short_Unsigned);\n    procedure W_SU  (Stream : not null access RST; Item : UST.Short_Unsigned);\n    procedure W_U   (Stream : not null access RST; Item : UST.Unsigned);\n+   procedure W_U24 (Stream : not null access RST; Item : Unsigned_24);\n    procedure W_WC  (Stream : not null access RST; Item : Wide_Character);\n    procedure W_WWC (Stream : not null access RST; Item : Wide_Wide_Character);\n "}, {"sha": "7e32fcf9b91f18104f4625af804d0c19bcd907f7", "filename": "gcc/ada/libgnat/s-stratt__xdr.adb", "status": "modified", "additions": 151, "deletions": 17, "changes": 168, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed0551d5adebbadca367dc8284a6c54afee495f/gcc%2Fada%2Flibgnat%2Fs-stratt__xdr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed0551d5adebbadca367dc8284a6c54afee495f/gcc%2Fada%2Flibgnat%2Fs-stratt__xdr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-stratt__xdr.adb?ref=1ed0551d5adebbadca367dc8284a6c54afee495f", "patch": "@@ -139,40 +139,47 @@ package body System.Stream_Attributes is\n \n    SSI_L : constant := 1;\n    SI_L  : constant := 2;\n+   I24_L : constant := 3;\n    I_L   : constant := 4;\n    LI_L  : constant := 8;\n    LLI_L : constant := 8;\n \n    subtype XDR_S_SSI is SEA (1 .. SSI_L);\n    subtype XDR_S_SI  is SEA (1 .. SI_L);\n+   subtype XDR_S_I24 is SEA (1 .. I24_L);\n    subtype XDR_S_I   is SEA (1 .. I_L);\n    subtype XDR_S_LI  is SEA (1 .. LI_L);\n    subtype XDR_S_LLI is SEA (1 .. LLI_L);\n \n    function Short_Short_Integer_To_XDR_S_SSI is\n-      new Ada.Unchecked_Conversion (Short_Short_Integer, XDR_S_SSI);\n+     new Ada.Unchecked_Conversion (Short_Short_Integer, XDR_S_SSI);\n    function XDR_S_SSI_To_Short_Short_Integer is\n-      new Ada.Unchecked_Conversion (XDR_S_SSI, Short_Short_Integer);\n+     new Ada.Unchecked_Conversion (XDR_S_SSI, Short_Short_Integer);\n \n    function Short_Integer_To_XDR_S_SI is\n-      new Ada.Unchecked_Conversion (Short_Integer, XDR_S_SI);\n+     new Ada.Unchecked_Conversion (Short_Integer, XDR_S_SI);\n    function XDR_S_SI_To_Short_Integer is\n-      new Ada.Unchecked_Conversion (XDR_S_SI, Short_Integer);\n+     new Ada.Unchecked_Conversion (XDR_S_SI, Short_Integer);\n+\n+   function Integer_To_XDR_S_I24 is\n+     new Ada.Unchecked_Conversion (Integer_24, XDR_S_I24);\n+   function XDR_S_I24_To_Integer is\n+     new Ada.Unchecked_Conversion (XDR_S_I24, Integer_24);\n \n    function Integer_To_XDR_S_I is\n-      new Ada.Unchecked_Conversion (Integer, XDR_S_I);\n+     new Ada.Unchecked_Conversion (Integer, XDR_S_I);\n    function XDR_S_I_To_Integer is\n      new Ada.Unchecked_Conversion (XDR_S_I, Integer);\n \n    function Long_Long_Integer_To_XDR_S_LI is\n-      new Ada.Unchecked_Conversion (Long_Long_Integer, XDR_S_LI);\n+     new Ada.Unchecked_Conversion (Long_Long_Integer, XDR_S_LI);\n    function XDR_S_LI_To_Long_Long_Integer is\n-      new Ada.Unchecked_Conversion (XDR_S_LI, Long_Long_Integer);\n+     new Ada.Unchecked_Conversion (XDR_S_LI, Long_Long_Integer);\n \n    function Long_Long_Integer_To_XDR_S_LLI is\n-      new Ada.Unchecked_Conversion (Long_Long_Integer, XDR_S_LLI);\n+     new Ada.Unchecked_Conversion (Long_Long_Integer, XDR_S_LLI);\n    function XDR_S_LLI_To_Long_Long_Integer is\n-      new Ada.Unchecked_Conversion (XDR_S_LLI, Long_Long_Integer);\n+     new Ada.Unchecked_Conversion (XDR_S_LLI, Long_Long_Integer);\n \n    --  An XDR unsigned integer is a 32-bit datum that encodes a nonnegative\n    --  integer in the range [0,4294967295]. It is represented by an unsigned\n@@ -187,39 +194,47 @@ package body System.Stream_Attributes is\n \n    SSU_L : constant := 1;\n    SU_L  : constant := 2;\n+   U24_L : constant := 3;\n    U_L   : constant := 4;\n    LU_L  : constant := 8;\n    LLU_L : constant := 8;\n \n    subtype XDR_S_SSU is SEA (1 .. SSU_L);\n    subtype XDR_S_SU  is SEA (1 .. SU_L);\n+   subtype XDR_S_U24 is SEA (1 .. U24_L);\n    subtype XDR_S_U   is SEA (1 .. U_L);\n    subtype XDR_S_LU  is SEA (1 .. LU_L);\n    subtype XDR_S_LLU is SEA (1 .. LLU_L);\n \n    type XDR_SSU is mod BB ** SSU_L;\n    type XDR_SU  is mod BB ** SU_L;\n    type XDR_U   is mod BB ** U_L;\n+   type XDR_U24 is mod BB ** U24_L;\n \n    function Short_Unsigned_To_XDR_S_SU is\n-      new Ada.Unchecked_Conversion (Short_Unsigned, XDR_S_SU);\n+     new Ada.Unchecked_Conversion (Short_Unsigned, XDR_S_SU);\n    function XDR_S_SU_To_Short_Unsigned is\n-      new Ada.Unchecked_Conversion (XDR_S_SU, Short_Unsigned);\n+     new Ada.Unchecked_Conversion (XDR_S_SU, Short_Unsigned);\n+\n+   function Unsigned_To_XDR_S_U24 is\n+     new Ada.Unchecked_Conversion (Unsigned_24, XDR_S_U24);\n+   function XDR_S_U24_To_Unsigned is\n+     new Ada.Unchecked_Conversion (XDR_S_U24, Unsigned_24);\n \n    function Unsigned_To_XDR_S_U is\n-      new Ada.Unchecked_Conversion (Unsigned, XDR_S_U);\n+     new Ada.Unchecked_Conversion (Unsigned, XDR_S_U);\n    function XDR_S_U_To_Unsigned is\n-      new Ada.Unchecked_Conversion (XDR_S_U, Unsigned);\n+     new Ada.Unchecked_Conversion (XDR_S_U, Unsigned);\n \n    function Long_Long_Unsigned_To_XDR_S_LU is\n-      new Ada.Unchecked_Conversion (Long_Long_Unsigned, XDR_S_LU);\n+     new Ada.Unchecked_Conversion (Long_Long_Unsigned, XDR_S_LU);\n    function XDR_S_LU_To_Long_Long_Unsigned is\n-      new Ada.Unchecked_Conversion (XDR_S_LU, Long_Long_Unsigned);\n+     new Ada.Unchecked_Conversion (XDR_S_LU, Long_Long_Unsigned);\n \n    function Long_Long_Unsigned_To_XDR_S_LLU is\n-      new Ada.Unchecked_Conversion (Long_Long_Unsigned, XDR_S_LLU);\n+     new Ada.Unchecked_Conversion (Long_Long_Unsigned, XDR_S_LLU);\n    function XDR_S_LLU_To_Long_Long_Unsigned is\n-      new Ada.Unchecked_Conversion (XDR_S_LLU, Long_Long_Unsigned);\n+     new Ada.Unchecked_Conversion (XDR_S_LLU, Long_Long_Unsigned);\n \n    --  The standard defines the floating-point data type \"float\" (32 bits\n    --  or 4 bytes). The encoding used is the IEEE standard for normalized\n@@ -484,6 +499,40 @@ package body System.Stream_Attributes is\n       end if;\n    end I_I;\n \n+   -----------\n+   -- I_I24 --\n+   -----------\n+\n+   function I_I24 (Stream : not null access RST) return Integer_24 is\n+      S : XDR_S_I24;\n+      L : SEO;\n+      U : XDR_U24 := 0;\n+\n+   begin\n+      Ada.Streams.Read (Stream.all, S, L);\n+\n+      if L /= S'Last then\n+         raise Data_Error;\n+\n+      elsif Optimize_Integers then\n+         return XDR_S_I24_To_Integer (S);\n+\n+      else\n+         for N in S'Range loop\n+            U := U * BB + XDR_U24 (S (N));\n+         end loop;\n+\n+         --  Test sign and apply two complement notation\n+\n+         if S (1) < BL then\n+            return Integer_24 (U);\n+\n+         else\n+            return Integer_24 (-((XDR_U24'Last xor U) + 1));\n+         end if;\n+      end if;\n+   end I_I24;\n+\n    ----------\n    -- I_LF --\n    ----------\n@@ -1042,6 +1091,33 @@ package body System.Stream_Attributes is\n       end if;\n    end I_U;\n \n+   -----------\n+   -- I_U24 --\n+   -----------\n+\n+   function I_U24 (Stream : not null access RST) return Unsigned_24 is\n+      S : XDR_S_U24;\n+      L : SEO;\n+      U : XDR_U24 := 0;\n+\n+   begin\n+      Ada.Streams.Read (Stream.all, S, L);\n+\n+      if L /= S'Last then\n+         raise Data_Error;\n+\n+      elsif Optimize_Integers then\n+         return XDR_S_U24_To_Unsigned (S);\n+\n+      else\n+         for N in S'Range loop\n+            U := U * BB + XDR_U24 (S (N));\n+         end loop;\n+\n+         return Unsigned_24 (U);\n+      end if;\n+   end I_U24;\n+\n    ----------\n    -- I_WC --\n    ----------\n@@ -1289,6 +1365,38 @@ package body System.Stream_Attributes is\n       Ada.Streams.Write (Stream.all, S);\n    end W_I;\n \n+   -----------\n+   -- W_I24 --\n+   -----------\n+\n+   procedure W_I24 (Stream : not null access RST; Item : Integer_24) is\n+      S : XDR_S_I24;\n+      U : XDR_U24;\n+\n+   begin\n+      if Optimize_Integers then\n+         S := Integer_To_XDR_S_I24 (Item);\n+\n+      else\n+         --  Test sign and apply two complement notation\n+\n+         U := (if Item < 0\n+               then XDR_U24'Last xor XDR_U24 (-(Item + 1))\n+               else XDR_U24 (Item));\n+\n+         for N in reverse S'Range loop\n+            S (N) := SE (U mod BB);\n+            U := U / BB;\n+         end loop;\n+\n+         if U /= 0 then\n+            raise Data_Error;\n+         end if;\n+      end if;\n+\n+      Ada.Streams.Write (Stream.all, S);\n+   end W_I24;\n+\n    ----------\n    -- W_LF --\n    ----------\n@@ -1846,6 +1954,32 @@ package body System.Stream_Attributes is\n       Ada.Streams.Write (Stream.all, S);\n    end W_U;\n \n+   -----------\n+   -- W_U24 --\n+   -----------\n+\n+   procedure W_U24 (Stream : not null access RST; Item : Unsigned_24) is\n+      S : XDR_S_U24;\n+      U : XDR_U24 := XDR_U24 (Item);\n+\n+   begin\n+      if Optimize_Integers then\n+         S := Unsigned_To_XDR_S_U24 (Item);\n+\n+      else\n+         for N in reverse S'Range loop\n+            S (N) := SE (U mod BB);\n+            U := U / BB;\n+         end loop;\n+\n+         if U /= 0 then\n+            raise Data_Error;\n+         end if;\n+      end if;\n+\n+      Ada.Streams.Write (Stream.all, S);\n+   end W_U24;\n+\n    ----------\n    -- W_WC --\n    ----------"}, {"sha": "3dee2c0b698922dd88912eb0f0c128862fbdf0fe", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed0551d5adebbadca367dc8284a6c54afee495f/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed0551d5adebbadca367dc8284a6c54afee495f/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=1ed0551d5adebbadca367dc8284a6c54afee495f", "patch": "@@ -1377,6 +1377,7 @@ package Rtsfind is\n      RE_I_C,                             -- System.Stream_Attributes\n      RE_I_F,                             -- System.Stream_Attributes\n      RE_I_I,                             -- System.Stream_Attributes\n+     RE_I_I24,                           -- System.Stream_Attributes\n      RE_I_LF,                            -- System.Stream_Attributes\n      RE_I_LI,                            -- System.Stream_Attributes\n      RE_I_LLF,                           -- System.Stream_Attributes\n@@ -1389,6 +1390,7 @@ package Rtsfind is\n      RE_I_SSU,                           -- System.Stream_Attributes\n      RE_I_SU,                            -- System.Stream_Attributes\n      RE_I_U,                             -- System.Stream_Attributes\n+     RE_I_U24,                           -- System.Stream_Attributes\n      RE_I_WC,                            -- System.Stream_Attributes\n      RE_I_WWC,                           -- System.Stream_Attributes\n \n@@ -1398,6 +1400,7 @@ package Rtsfind is\n      RE_W_C,                             -- System.Stream_Attributes\n      RE_W_F,                             -- System.Stream_Attributes\n      RE_W_I,                             -- System.Stream_Attributes\n+     RE_W_I24,                           -- System.Stream_Attributes\n      RE_W_LF,                            -- System.Stream_Attributes\n      RE_W_LI,                            -- System.Stream_Attributes\n      RE_W_LLF,                           -- System.Stream_Attributes\n@@ -1410,6 +1413,7 @@ package Rtsfind is\n      RE_W_SSU,                           -- System.Stream_Attributes\n      RE_W_SU,                            -- System.Stream_Attributes\n      RE_W_U,                             -- System.Stream_Attributes\n+     RE_W_U24,                           -- System.Stream_Attributes\n      RE_W_WC,                            -- System.Stream_Attributes\n      RE_W_WWC,                           -- System.Stream_Attributes\n \n@@ -2654,6 +2658,7 @@ package Rtsfind is\n      RE_I_C                              => System_Stream_Attributes,\n      RE_I_F                              => System_Stream_Attributes,\n      RE_I_I                              => System_Stream_Attributes,\n+     RE_I_I24                            => System_Stream_Attributes,\n      RE_I_LF                             => System_Stream_Attributes,\n      RE_I_LI                             => System_Stream_Attributes,\n      RE_I_LLF                            => System_Stream_Attributes,\n@@ -2666,6 +2671,7 @@ package Rtsfind is\n      RE_I_SSU                            => System_Stream_Attributes,\n      RE_I_SU                             => System_Stream_Attributes,\n      RE_I_U                              => System_Stream_Attributes,\n+     RE_I_U24                            => System_Stream_Attributes,\n      RE_I_WC                             => System_Stream_Attributes,\n      RE_I_WWC                            => System_Stream_Attributes,\n \n@@ -2675,6 +2681,7 @@ package Rtsfind is\n      RE_W_C                              => System_Stream_Attributes,\n      RE_W_F                              => System_Stream_Attributes,\n      RE_W_I                              => System_Stream_Attributes,\n+     RE_W_I24                            => System_Stream_Attributes,\n      RE_W_LF                             => System_Stream_Attributes,\n      RE_W_LI                             => System_Stream_Attributes,\n      RE_W_LLF                            => System_Stream_Attributes,\n@@ -2687,6 +2694,7 @@ package Rtsfind is\n      RE_W_SSU                            => System_Stream_Attributes,\n      RE_W_SU                             => System_Stream_Attributes,\n      RE_W_U                              => System_Stream_Attributes,\n+     RE_W_U24                            => System_Stream_Attributes,\n      RE_W_WC                             => System_Stream_Attributes,\n      RE_W_WWC                            => System_Stream_Attributes,\n "}, {"sha": "61695fcbab3976784e9de6856bfe33dfc4cd445c", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed0551d5adebbadca367dc8284a6c54afee495f/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed0551d5adebbadca367dc8284a6c54afee495f/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=1ed0551d5adebbadca367dc8284a6c54afee495f", "patch": "@@ -6593,19 +6593,19 @@ package body Sem_Ch13 is\n             elsif Is_Elementary_Type (U_Ent) then\n                if Size /= System_Storage_Unit\n                  and then Size /= System_Storage_Unit * 2\n+                 and then Size /= System_Storage_Unit * 3\n                  and then Size /= System_Storage_Unit * 4\n                  and then Size /= System_Storage_Unit * 8\n                then\n-                  Error_Msg_Uint_1 := UI_From_Int (System_Storage_Unit);\n                   Error_Msg_N\n-                    (\"stream size for elementary type must be a power of 2 \"\n-                     & \"and at least ^\", N);\n+                    (\"stream size for elementary type must be 8, 16, 24, \" &\n+                     \"32 or 64\", N);\n \n                elsif RM_Size (U_Ent) > Size then\n                   Error_Msg_Uint_1 := RM_Size (U_Ent);\n                   Error_Msg_N\n-                    (\"stream size for elementary type must be a power of 2 \"\n-                     & \"and at least ^\", N);\n+                    (\"stream size for elementary type must be 8, 16, 24, \" &\n+                     \"32 or 64 and at least ^\", N);\n                end if;\n \n                Set_Has_Stream_Size_Clause (U_Ent);"}]}