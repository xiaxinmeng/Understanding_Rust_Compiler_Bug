{"sha": "f559e62f2030798aa8462c02143b64419c989ef2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU1OWU2MmYyMDMwNzk4YWE4NDYyYzAyMTQzYjY0NDE5Yzk4OWVmMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-10T15:01:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-10T15:01:10Z"}, "message": "[multiple changes]\n\n2009-04-10  Sergey Rybin  <rybin@adacore.com>\n\n\t* vms_data.ads:\n\tAdd qualifier for new gnatstub option '--no-exception'\n\n\t* gnat_ugn.texi:\n\tAdd the description of the new gnatstub option '--no-exception'\n\n2009-04-10  Robert Dewar  <dewar@adacore.com>\n\n\t* rtsfind.adb: Minor reformatting\n\n2009-04-10  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_disp.adb: Minor reformatting.\n\tAdd comment pointing to RM clause for the case of warning against a\n\t(failed) attempt at declaring a primitive operation elsewhere than in a\n\tpackage spec.\n\n2009-04-10  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Denotes_Formal_Package): Check whether the package is\n\tan actual for a previous formal package of the current instance.\n\nFrom-SVN: r145917", "tree": {"sha": "a4170edea6f8832c8b176426a6a0ba0f94348b68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4170edea6f8832c8b176426a6a0ba0f94348b68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f559e62f2030798aa8462c02143b64419c989ef2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f559e62f2030798aa8462c02143b64419c989ef2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f559e62f2030798aa8462c02143b64419c989ef2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f559e62f2030798aa8462c02143b64419c989ef2/comments", "author": null, "committer": null, "parents": [{"sha": "e50e1c5ee10099b0edb4cc966f90124452033cc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e50e1c5ee10099b0edb4cc966f90124452033cc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e50e1c5ee10099b0edb4cc966f90124452033cc5"}], "stats": {"total": 118, "additions": 101, "deletions": 17}, "files": [{"sha": "1a645a185d2be10e47b521964594ae676ab98a4b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f559e62f2030798aa8462c02143b64419c989ef2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f559e62f2030798aa8462c02143b64419c989ef2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f559e62f2030798aa8462c02143b64419c989ef2", "patch": "@@ -1,3 +1,27 @@\n+2009-04-10  Sergey Rybin  <rybin@adacore.com>\n+\n+\t* vms_data.ads:\n+\tAdd qualifier for new gnatstub option '--no-exception'\n+\n+\t* gnat_ugn.texi:\n+\tAdd the description of the new gnatstub option '--no-exception'\n+\n+2009-04-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* rtsfind.adb: Minor reformatting\n+\n+2009-04-10  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_disp.adb: Minor reformatting.\n+\tAdd comment pointing to RM clause for the case of warning against a\n+\t(failed) attempt at declaring a primitive operation elsewhere than in a\n+\tpackage spec.\n+\n+2009-04-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Denotes_Formal_Package): Check whether the package is\n+\tan actual for a previous formal package of the current instance.\n+\n 2009-04-10  Bob Duff  <duff@adacore.com>\n \n \t* rtsfind.adb (RTE): Put implicit with_clauses on whatever unit needs"}, {"sha": "f48a55fdf9d93710bd1ee0db00540a1806c201b5", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f559e62f2030798aa8462c02143b64419c989ef2/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f559e62f2030798aa8462c02143b64419c989ef2/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=f559e62f2030798aa8462c02143b64419c989ef2", "patch": "@@ -22066,6 +22066,11 @@ units located outside the current directory, you have to provide\n the source search path when calling @command{gnatstub}, see the description\n of @command{gnatstub} switches below.\n \n+By default, all the program unit body stubs generated by @code{gnatstub}\n+raise the predefined @code{Program_Error} exception, which will catch\n+accidental calls of generated stubs. This behavior can be changed with\n+option @option{^--no-exception^/NO_EXCEPTION^} (see below).\n+\n @menu\n * Running gnatstub::\n * Switches for gnatstub::\n@@ -22191,7 +22196,12 @@ structures used by @command{gnatstub}) after creating the body stub.\n @cindex @option{^-l^/LINE_LENGTH^} (@command{gnatstub})\n Same as @option{^-gnatyM^/MAX_LINE_LENGTH=^@var{n}}\n \n-@item ^-o^/BODY=^@var{body-name}\n+@item ^--no-exception^/NO_EXCEPTION^\n+@cindex @option{^--no-exception^/NO_EXCEPTION^} (@command{gnatstub})\n+Avoind raising PROGRAM_ERROR in the generated bodies of program unit stubs.\n+This is not always possible for function stubs.\n+\n+@item ^-o ^/BODY=^@var{body-name}\n @cindex @option{^-o^/BODY^} (@command{gnatstub})\n Body file name.  This should be set if the argument file name does not\n follow"}, {"sha": "ebd850191f611157be96f7adf934b0441a257673", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f559e62f2030798aa8462c02143b64419c989ef2/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f559e62f2030798aa8462c02143b64419c989ef2/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=f559e62f2030798aa8462c02143b64419c989ef2", "patch": "@@ -1069,7 +1069,7 @@ package body Rtsfind is\n       --  for a call issued from RTE_Available.\n \n    <<Found>>\n-      if (not U.Withed) and then not RTE_Available_Call then\n+      if not U.Withed and then not RTE_Available_Call then\n          U.Withed := True;\n \n          declare"}, {"sha": "739cbafa133c0f469aba1f518ad233f07ca90dbe", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 49, "deletions": 6, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f559e62f2030798aa8462c02143b64419c989ef2/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f559e62f2030798aa8462c02143b64419c989ef2/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=f559e62f2030798aa8462c02143b64419c989ef2", "patch": "@@ -424,15 +424,19 @@ package body Sem_Ch12 is\n    --  illegal circular instantiation.\n \n    function Denotes_Formal_Package\n-     (Pack    : Entity_Id;\n-      On_Exit : Boolean := False) return Boolean;\n+     (Pack     : Entity_Id;\n+      On_Exit  : Boolean := False;\n+      Instance : Entity_Id := Empty) return Boolean;\n    --  Returns True if E is a formal package of an enclosing generic, or\n    --  the actual for such a formal in an enclosing instantiation. If such\n    --  a package is used as a formal in an nested generic, or as an actual\n    --  in a nested instantiation, the visibility of ITS formals should not\n    --  be modified. When called from within Restore_Private_Views, the flag\n    --  On_Exit is true, to indicate that the search for a possible enclosing\n-   --  instance should ignore the current one.\n+   --  instance should ignore the current one. In that case Instance denotes\n+   --  the declaration for which this is an actual. This declaration may be\n+   --  an instantiation in the source, or the internal instantiation that\n+   --  corresponds to the actual for a formal package.\n \n    function Find_Actual_Type\n      (Typ       : Entity_Id;\n@@ -6130,13 +6134,46 @@ package body Sem_Ch12 is\n    ----------------------------\n \n    function Denotes_Formal_Package\n-     (Pack    : Entity_Id;\n-      On_Exit : Boolean := False) return Boolean\n+     (Pack     : Entity_Id;\n+      On_Exit  : Boolean := False;\n+      Instance : Entity_Id := Empty) return Boolean\n    is\n       Par  : Entity_Id;\n       Scop : constant Entity_Id := Scope (Pack);\n       E    : Entity_Id;\n \n+      function Is_Actual_Of_Previous_Formal (P : Entity_Id) return Boolean;\n+      --  The package in question may be an actual for a previous formal\n+      --  package P of the current instance, so examine its actuals as well.\n+\n+      ----------------------------------\n+      -- Is_Actual_Of_Previous_Formal --\n+      ----------------------------------\n+\n+      function Is_Actual_Of_Previous_Formal (P : Entity_Id) return Boolean is\n+         E1 : Entity_Id;\n+\n+      begin\n+         E1 := First_Entity (E);\n+         while Present (E1) and then  E1 /= Instance loop\n+            if Ekind (E1) = E_Package\n+              and then Nkind (Parent (E1)) = N_Package_Renaming_Declaration\n+              and then Renamed_Object (E1) = Pack\n+            then\n+               return True;\n+\n+            elsif Renamed_Object (E1) = P then\n+               return False;\n+            end if;\n+\n+            Next_Entity (E1);\n+         end loop;\n+\n+         return False;\n+      end Is_Actual_Of_Previous_Formal;\n+\n+   --  Start processing of Denotes_Formal_Package\n+\n    begin\n       if On_Exit then\n          Par :=\n@@ -6176,6 +6213,10 @@ package body Sem_Ch12 is\n \n             elsif Renamed_Object (E) = Pack then\n                return True;\n+\n+            elsif Is_Actual_Of_Previous_Formal (E) then\n+               return True;\n+\n             end if;\n \n             Next_Entity (E);\n@@ -11142,7 +11183,9 @@ package body Sem_Ch12 is\n             elsif Nkind (Parent (E)) /= N_Package_Renaming_Declaration then\n                null;\n \n-            elsif Denotes_Formal_Package (Renamed_Object (E), True) then\n+            elsif\n+              Denotes_Formal_Package (Renamed_Object (E), True, Pack_Id)\n+            then\n                Set_Is_Hidden (E, False);\n \n             else"}, {"sha": "a1faa3f415214de61c1e943fad5fb7af657d0c35", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f559e62f2030798aa8462c02143b64419c989ef2/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f559e62f2030798aa8462c02143b64419c989ef2/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=f559e62f2030798aa8462c02143b64419c989ef2", "patch": "@@ -764,11 +764,10 @@ package body Sem_Disp is\n                   --  be delayed until after the spec is seen, but that's\n                   --  a tricky change to the delicate freezing code.\n \n-                  --  Look at each declaration following the type up\n-                  --  until the new subprogram body. If any of the\n-                  --  declarations is a body then the type has been\n-                  --  frozen already so the overriding primitive is\n-                  --  illegal.\n+                  --  Look at each declaration following the type up until the\n+                  --  new subprogram body. If any of the declarations is a body\n+                  --  then the type has been frozen already so the overriding\n+                  --  primitive is illegal.\n \n                   while Present (Decl_Item)\n                     and then (Decl_Item /= Subp_Body)\n@@ -788,9 +787,8 @@ package body Sem_Disp is\n                   end loop;\n \n                   --  If the subprogram doesn't follow in the list of\n-                  --  declarations including the type then the type\n-                  --  has definitely been frozen already and the body\n-                  --  is illegal.\n+                  --  declarations including the type then the type has\n+                  --  definitely been frozen already and the body is illegal.\n \n                   if No (Decl_Item) then\n                      Error_Msg_N (\"overriding of& is too late!\", Subp);\n@@ -852,7 +850,8 @@ package body Sem_Disp is\n \n          --  If the type is not frozen yet and we are not in the overriding\n          --  case it looks suspiciously like an attempt to define a primitive\n-         --  operation.\n+         --  operation, which requires the declaration to be in a package spec\n+         --  (3.2.3(6)).\n \n          elsif not Is_Frozen (Tagged_Type) then\n             Error_Msg_N"}, {"sha": "21529e02e2b211c069587d1756dae40358076b87", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f559e62f2030798aa8462c02143b64419c989ef2/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f559e62f2030798aa8462c02143b64419c989ef2/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=f559e62f2030798aa8462c02143b64419c989ef2", "patch": "@@ -6511,6 +6511,13 @@ package VMS_Data is\n    --      HIGH         A great number of messages are output, most of them not\n    --                   being useful for the user.\n \n+   S_Stub_No_Exc  : aliased constant S := \"/NO_EXCEPTION \"                 &\n+                                          \"--no-exception\";\n+   --        /NONO_EXCEPTION (D)\n+   --        /NO_EXCEPTION\n+   --\n+   --  Avoid raising PROGRAM_ERROR in the generated program unit stubs.\n+\n    S_Stub_Output  : aliased constant S := \"/OUTPUT=@\"                      &\n                                             \"-o@\";\n    --        /OUTPUT=filespec\n@@ -6607,6 +6614,7 @@ package VMS_Data is\n                       S_Stub_Mess       'Access,\n                       S_Stub_Output     'Access,\n                       S_Stub_Project    'Access,\n+                      S_Stub_No_Exc     'Access,\n                       S_Stub_Quiet      'Access,\n                       S_Stub_Search     'Access,\n                       S_Stub_Subdirs    'Access,"}]}