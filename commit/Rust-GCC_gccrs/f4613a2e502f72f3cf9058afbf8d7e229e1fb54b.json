{"sha": "f4613a2e502f72f3cf9058afbf8d7e229e1fb54b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQ2MTNhMmU1MDJmNzJmM2NmOTA1OGFmYmY4ZDdlMjI5ZTFmYjU0Yg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-03-20T06:43:29Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-03-20T06:43:29Z"}, "message": "h8300.md (*addsi3_and_r_1): New.\n\n\t* config/h8300/h8300.md (*addsi3_and_r_1): New.\n\t(*addsi3_and_not_r_1): Likewise.\n\nFrom-SVN: r64607", "tree": {"sha": "0a3dd4501da6eb64dbcd0654948e98418fbc4e99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a3dd4501da6eb64dbcd0654948e98418fbc4e99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4613a2e502f72f3cf9058afbf8d7e229e1fb54b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4613a2e502f72f3cf9058afbf8d7e229e1fb54b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4613a2e502f72f3cf9058afbf8d7e229e1fb54b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4613a2e502f72f3cf9058afbf8d7e229e1fb54b/comments", "author": null, "committer": null, "parents": [{"sha": "31260fb8469ba4c69f53e354704fbf151798af5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31260fb8469ba4c69f53e354704fbf151798af5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31260fb8469ba4c69f53e354704fbf151798af5e"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "43217ac140430c4e6c17542c88a020548e4c8ac8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4613a2e502f72f3cf9058afbf8d7e229e1fb54b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4613a2e502f72f3cf9058afbf8d7e229e1fb54b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4613a2e502f72f3cf9058afbf8d7e229e1fb54b", "patch": "@@ -1,3 +1,8 @@\n+2003-03-20  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.md (*addsi3_and_r_1): New.\n+\t(*addsi3_and_not_r_1): Likewise.\n+\n 2003-03-19  Loren James Rittle  <ljrittle@acm.org>\n \n \t* Makefile.in (STRICT2_WARN): Add @WERROR@."}, {"sha": "785be85c8945f733d442202fab008abcace3bd47", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4613a2e502f72f3cf9058afbf8d7e229e1fb54b/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4613a2e502f72f3cf9058afbf8d7e229e1fb54b/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=f4613a2e502f72f3cf9058afbf8d7e229e1fb54b", "patch": "@@ -2855,6 +2855,52 @@\n   [(set_attr \"cc\" \"clobber\")\n    (set_attr \"length\" \"2\")])\n \n+(define_insn_and_split \"*addsi3_and_r_1\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(plus:SI (and:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t\t (const_int 1))\n+\t\t (match_operand:SI 2 \"register_operand\" \"0\")))]\n+  \"(TARGET_H8300H || TARGET_H8300S)\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(set (cc0)\n+\t(zero_extract:SI (match_dup 1)\n+\t\t\t (const_int 1)\n+\t\t\t (const_int 0)))\n+   (set (pc)\n+        (if_then_else (eq (cc0)\n+\t\t\t  (const_int 0))\n+\t\t      (label_ref (match_dup 3))\n+\t\t      (pc)))\n+   (set (match_dup 2)\n+        (plus:SI (match_dup 2)\n+\t\t (const_int 1)))\n+   (match_dup 3)]\n+  \"operands[3] = gen_label_rtx ();\")\n+\n+(define_insn_and_split \"*addsi3_and_not_r_1\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(plus:SI (and:SI (not:SI (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t\t\t (const_int 1))\n+\t\t (match_operand:SI 2 \"register_operand\" \"0\")))]\n+  \"(TARGET_H8300H || TARGET_H8300S)\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(set (cc0)\n+\t(zero_extract:SI (match_dup 1)\n+\t\t\t (const_int 1)\n+\t\t\t (const_int 0)))\n+   (set (pc)\n+        (if_then_else (ne (cc0)\n+\t\t\t  (const_int 0))\n+\t\t      (label_ref (match_dup 3))\n+\t\t      (pc)))\n+   (set (match_dup 2)\n+        (plus:SI (match_dup 2)\n+\t\t (const_int 1)))\n+   (match_dup 3)]\n+  \"operands[3] = gen_label_rtx ();\")\n+\n ;; ior:HI\n \n (define_insn \"*iorhi3_ashift_8\""}]}