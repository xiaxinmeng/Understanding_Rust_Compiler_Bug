{"sha": "dff008b446fd93001c3e0c97d503042c37fa8574", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGZmMDA4YjQ0NmZkOTMwMDFjM2UwYzk3ZDUwMzA0MmMzN2ZhODU3NA==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2004-06-02T17:34:35Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2004-06-02T17:34:35Z"}, "message": "i386.c (ix86_adjust_cost): Don't increase the cost for load+operation for PROCESSOR_PENTIUMPRO...\n\n\t* i386.c (ix86_adjust_cost): Don't increase the cost for\n\tload+operation for PROCESSOR_PENTIUMPRO, it is already\n\tmodelled in the DFA description\n\nFrom-SVN: r82571", "tree": {"sha": "591a79896d3b020f48172df70066c3a38a9d29e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/591a79896d3b020f48172df70066c3a38a9d29e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dff008b446fd93001c3e0c97d503042c37fa8574", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dff008b446fd93001c3e0c97d503042c37fa8574", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dff008b446fd93001c3e0c97d503042c37fa8574", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dff008b446fd93001c3e0c97d503042c37fa8574/comments", "author": null, "committer": null, "parents": [{"sha": "2fa548415aa2a47d71a01155e6c1cd9dac1f5b36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fa548415aa2a47d71a01155e6c1cd9dac1f5b36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fa548415aa2a47d71a01155e6c1cd9dac1f5b36"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "bb675bb3fea21e8ead9810cff4e917c65121552f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dff008b446fd93001c3e0c97d503042c37fa8574/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dff008b446fd93001c3e0c97d503042c37fa8574/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dff008b446fd93001c3e0c97d503042c37fa8574", "patch": "@@ -1,3 +1,9 @@\n+2004-06-02  Steven Bosscher  <stevenb@suse.de>\n+\n+\t* i386.c (ix86_adjust_cost): Don't increase the cost for\n+\tload+operation for PROCESSOR_PENTIUMPRO, it is already\n+\tmodelled in the DFA description\n+\n 2004-06-01  Jerry Quinn  <jlquinn@optonline.net>\n \n \t* Makefile.in (EXPR_H): Add insn-config.h, function.h,\n@@ -45,7 +51,7 @@\n \tand rewrite for __builtin_offsetof.\n \n 2004-06-01  Peter Barada  <peter@the-baradas.com>\n-            Peter Jakubek  <peter@laseranimation.com>\n+\t    Peter Jakubek  <peter@laseranimation.com>\n \n \t* config/m68k/m68k.c(m68k_output_mi_thunk):  For ColdFire, use %d0 as\n \ta scratch to perform an add to memory.\n@@ -72,8 +78,8 @@\n \n 2004-06-01  Jeff Law  <law@redhat.com>\n \n-        * stmt.c (expand_decl): Be more selective about calling\n-        mark_reg_pointer.\n+\t* stmt.c (expand_decl): Be more selective about calling\n+\tmark_reg_pointer.\n \n 2004-06-01  Nicola Pero  <nicola@brainstorm.co.uk>\n "}, {"sha": "d8775ade8ae161aca9c469a65750f2d418a94095", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dff008b446fd93001c3e0c97d503042c37fa8574/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dff008b446fd93001c3e0c97d503042c37fa8574/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=dff008b446fd93001c3e0c97d503042c37fa8574", "patch": "@@ -12261,14 +12261,6 @@ ix86_adjust_cost (rtx insn, rtx link, rtx dep_insn, int cost)\n \n     case PROCESSOR_PENTIUMPRO:\n       memory = get_attr_memory (insn);\n-      dep_memory = get_attr_memory (dep_insn);\n-\n-      /* Since we can't represent delayed latencies of load+operation,\n-\t increase the cost here for non-imov insns.  */\n-      if (dep_insn_type != TYPE_IMOV\n-          && dep_insn_type != TYPE_FMOV\n-          && (dep_memory == MEMORY_LOAD || dep_memory == MEMORY_BOTH))\n-\tcost += 1;\n \n       /* INT->FP conversion is expensive.  */\n       if (get_attr_fp_int_src (dep_insn))"}]}