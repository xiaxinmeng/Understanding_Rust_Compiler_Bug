{"sha": "34dd38384440cabb02cc4c201e61fb76505bde32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRkZDM4Mzg0NDQwY2FiYjAyY2M0YzIwMWU2MWZiNzY1MDViZGUzMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-22T22:37:01Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-22T22:37:01Z"}, "message": "(SWITCH_TAKES_ARG): Add `x'.\n\n(process_command): -Wl, -Xlinker, and -lm values always go to linker\neven if -x was specified.\n\nFrom-SVN: r9035", "tree": {"sha": "582c8c94452567a803bd127e53d11aadd886a22f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/582c8c94452567a803bd127e53d11aadd886a22f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34dd38384440cabb02cc4c201e61fb76505bde32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34dd38384440cabb02cc4c201e61fb76505bde32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34dd38384440cabb02cc4c201e61fb76505bde32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34dd38384440cabb02cc4c201e61fb76505bde32/comments", "author": null, "committer": null, "parents": [{"sha": "56c98e5b32112e3f52778822083a7a53fc348aa1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56c98e5b32112e3f52778822083a7a53fc348aa1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56c98e5b32112e3f52778822083a7a53fc348aa1"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "d10403e339ced699d7a29a4e06dab7a5e5feb6fc", "filename": "gcc/gcc.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34dd38384440cabb02cc4c201e61fb76505bde32/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34dd38384440cabb02cc4c201e61fb76505bde32/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=34dd38384440cabb02cc4c201e61fb76505bde32", "patch": "@@ -535,7 +535,7 @@ static char *multilib_select = MULTILIB_SELECT;\n #define SWITCH_TAKES_ARG(CHAR)      \\\n   ((CHAR) == 'D' || (CHAR) == 'U' || (CHAR) == 'o' \\\n    || (CHAR) == 'e' || (CHAR) == 'T' || (CHAR) == 'u' \\\n-   || (CHAR) == 'I' || (CHAR) == 'm' \\\n+   || (CHAR) == 'I' || (CHAR) == 'm' || (CHAR) == 'x' \\\n    || (CHAR) == 'L' || (CHAR) == 'A')\n #endif\n \n@@ -2884,23 +2884,23 @@ process_command (argc, argv)\n \t  for (j = 4; argv[i][j]; j++)\n \t    if (argv[i][j] == ',')\n \t      {\n-\t\tinfiles[n_infiles].language = spec_lang;\n+\t\tinfiles[n_infiles].language = 0;\n \t\tinfiles[n_infiles++].name\n \t\t  = save_string (argv[i] + prev, j - prev);\n \t\tprev = j + 1;\n \t      }\n \t  /* Record the part after the last comma.  */\n-\t  infiles[n_infiles].language = spec_lang;\n+\t  infiles[n_infiles].language = 0;\n \t  infiles[n_infiles++].name = argv[i] + prev;\n \t}\n       else if (strcmp (argv[i], \"-Xlinker\") == 0)\n \t{\n-\t  infiles[n_infiles].language = spec_lang;\n+\t  infiles[n_infiles].language = 0;\n \t  infiles[n_infiles++].name = argv[++i];\n \t}\n       else if (strncmp (argv[i], \"-l\", 2) == 0)\n \t{\n-\t  infiles[n_infiles].language = spec_lang;\n+\t  infiles[n_infiles].language = 0;\n \t  infiles[n_infiles++].name = argv[i];\n \t}\n       else if (argv[i][0] == '-' && argv[i][1] != 0)\n@@ -2924,9 +2924,9 @@ process_command (argc, argv)\n \t      else\n \t\tspec_lang = p + 1;\n \t      if (! strcmp (spec_lang, \"none\"))\n-\t\t/* Suppress the warning if -xnone comes after the last input file,\n-\t\t   because alternate command interfaces like g++ might find it\n-\t\t   useful to place -xnone after each input file.  */\n+\t\t/* Suppress the warning if -xnone comes after the last input\n+\t\t   file, because alternate command interfaces like g++ might\n+\t\t   find it useful to place -xnone after each input file.  */\n \t\tspec_lang = 0;\n \t      else\n \t\tlast_language_n_infiles = n_infiles;"}]}