{"sha": "1c6c6771b61a8d083d8bf25bb97cf392599d1581", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM2YzY3NzFiNjFhOGQwODNkOGJmMjViYjk3Y2YzOTI1OTlkMTU4MQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonber@gnat.com", "date": "2004-10-04T14:56:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-10-04T14:56:27Z"}, "message": "sem_util.adb (Explain_Limited_Type): Ignore internal components when searching for a limited component to flag.\n\n2004-10-04  Ed Schonberg  <schonberg@gnat.com>\n\n\t* sem_util.adb (Explain_Limited_Type): Ignore internal components when\n\tsearching for a limited component to flag.\n\n\t* exp_attr.adb (Freeze_Stream_Subprogram): Subsidiary procedure to\n\texpansion of Input, to account for the fact that the implicit call\n\tgenerated by the attribute reference must freeze the user-defined\n\tstream subprogram. This is only relevant to 'Input, because it can\n\tappear in an object declaration, prior to the body of the subprogram.\n\n\t* sem_ch13.adb (Rep_Item_Too_Late): Make the error non-serious, so that\n\texpansion can proceed and further errors uncovered.\n\t(Minor clean up): Fix cases of using | instead of \\ for continuation\n\tmessages.\n\nFrom-SVN: r88494", "tree": {"sha": "3765443613cb76c583fd3d45714d1ffc39b1086d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3765443613cb76c583fd3d45714d1ffc39b1086d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c6c6771b61a8d083d8bf25bb97cf392599d1581", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c6c6771b61a8d083d8bf25bb97cf392599d1581", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c6c6771b61a8d083d8bf25bb97cf392599d1581", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c6c6771b61a8d083d8bf25bb97cf392599d1581/comments", "author": null, "committer": null, "parents": [{"sha": "8005f3e521332d1d97818240fa269fed40f9adb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8005f3e521332d1d97818240fa269fed40f9adb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8005f3e521332d1d97818240fa269fed40f9adb5"}], "stats": {"total": 121, "additions": 107, "deletions": 14}, "files": [{"sha": "fbd3a898f841468364313bc4c8907478cad41d47", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c6c6771b61a8d083d8bf25bb97cf392599d1581/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c6c6771b61a8d083d8bf25bb97cf392599d1581/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1c6c6771b61a8d083d8bf25bb97cf392599d1581", "patch": "@@ -1,3 +1,19 @@\n+2004-10-04  Ed Schonberg  <schonberg@gnat.com>\n+\n+\t* sem_util.adb (Explain_Limited_Type): Ignore internal components when\n+\tsearching for a limited component to flag.\n+\n+\t* exp_attr.adb (Freeze_Stream_Subprogram): Subsidiary procedure to\n+\texpansion of Input, to account for the fact that the implicit call\n+\tgenerated by the attribute reference must freeze the user-defined\n+\tstream subprogram. This is only relevant to 'Input, because it can\n+\tappear in an object declaration, prior to the body of the subprogram.\n+\n+\t* sem_ch13.adb (Rep_Item_Too_Late): Make the error non-serious, so that\n+\texpansion can proceed and further errors uncovered.\n+\t(Minor clean up): Fix cases of using | instead of \\ for continuation\n+\tmessages.\n+\n 2004-10-04  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* cuintp.c, decl.c, utils2.c: Use gcc_assert and gcc_unreachable."}, {"sha": "1ba1e03ca140f81e8897672e50ce5552444417b2", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c6c6771b61a8d083d8bf25bb97cf392599d1581/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c6c6771b61a8d083d8bf25bb97cf392599d1581/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=1c6c6771b61a8d083d8bf25bb97cf392599d1581", "patch": "@@ -1737,6 +1737,44 @@ package body Exp_Attr is\n          --  the dispatching (class-wide type) case, where it is a reference\n          --  to the dummy object initialized to the right internal tag.\n \n+         procedure Freeze_Stream_Subprogram (F : Entity_Id);\n+         --  The expansion of the attribute reference may generate a call to\n+         --  a user-defined stream subprogram that is frozen by the call. This\n+         --  can lead to access-before-elaboration problem if the reference\n+         --  appears in an object declaration and the subprogram body has not\n+         --  been seen. The freezing of the subprogram requires special code\n+         --  because it appears in an expanded context where expressions do\n+         --  not freeze their constituents.\n+\n+         ------------------------------\n+         -- Freeze_Stream_Subprogram --\n+         ------------------------------\n+\n+         procedure Freeze_Stream_Subprogram (F : Entity_Id) is\n+            Decl : constant Node_Id := Unit_Declaration_Node (F);\n+            Bod  : Node_Id;\n+\n+         begin\n+            --  If this is user-defined subprogram, the corresponding\n+            --  stream function appears as a renaming-as-body, and the\n+            --  user subprogram must be retrieved by tree traversal.\n+\n+            if Present (Decl)\n+              and then Nkind (Decl) = N_Subprogram_Declaration\n+              and then Present (Corresponding_Body (Decl))\n+            then\n+               Bod := Corresponding_Body (Decl);\n+\n+               if Nkind (Unit_Declaration_Node (Bod)) =\n+                 N_Subprogram_Renaming_Declaration\n+               then\n+                  Set_Is_Frozen (Entity (Name (Unit_Declaration_Node (Bod))));\n+               end if;\n+            end if;\n+         end Freeze_Stream_Subprogram;\n+\n+      --  Start of processing for Input\n+\n       begin\n          --  If no underlying type, we have an error that will be diagnosed\n          --  elsewhere, so here we just completely ignore the expansion.\n@@ -1902,6 +1940,32 @@ package body Exp_Attr is\n                Build_Record_Or_Elementary_Input_Function\n                  (Loc, Base_Type (U_Type), Decl, Fname);\n                Insert_Action (N, Decl);\n+\n+               if Nkind (Parent (N)) = N_Object_Declaration\n+                 and then Is_Record_Type (U_Type)\n+               then\n+                  --  The stream function may contain calls to user-defined\n+                  --  Read procedures for individual components.\n+\n+                  declare\n+                     Comp : Entity_Id;\n+                     Func : Entity_Id;\n+\n+                  begin\n+                     Comp := First_Component (U_Type);\n+                     while Present (Comp) loop\n+                        Func :=\n+                          Find_Stream_Subprogram\n+                            (Etype (Comp), TSS_Stream_Read);\n+\n+                        if Present (Func) then\n+                           Freeze_Stream_Subprogram (Func);\n+                        end if;\n+\n+                        Next_Component (Comp);\n+                     end loop;\n+                  end;\n+               end if;\n             end if;\n          end if;\n \n@@ -1918,6 +1982,10 @@ package body Exp_Attr is\n          Set_Controlling_Argument (Call, Cntrl);\n          Rewrite (N, Unchecked_Convert_To (P_Type, Call));\n          Analyze_And_Resolve (N, P_Type);\n+\n+         if Nkind (Parent (N)) = N_Object_Declaration then\n+            Freeze_Stream_Subprogram (Fname);\n+         end if;\n       end Input;\n \n       -------------------"}, {"sha": "a3fadf2014953cf8c9cec9da23140fc4cdb843ed", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c6c6771b61a8d083d8bf25bb97cf392599d1581/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c6c6771b61a8d083d8bf25bb97cf392599d1581/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=1c6c6771b61a8d083d8bf25bb97cf392599d1581", "patch": "@@ -207,7 +207,7 @@ package body Sem_Ch13 is\n          Error_Msg_N\n            (\"at clause is an obsolescent feature ('R'M 'J.7(2))?\", N);\n          Error_Msg_N\n-           (\"|use address attribute definition clause instead?\", N);\n+           (\"\\use address attribute definition clause instead?\", N);\n       end if;\n \n       Rewrite (N,\n@@ -360,7 +360,7 @@ package body Sem_Ch13 is\n                     (\"attaching interrupt to task entry is an \" &\n                      \"obsolescent feature ('R'M 'J.7.1)?\", N);\n                   Error_Msg_N\n-                    (\"|use interrupt procedure instead?\", N);\n+                    (\"\\use interrupt procedure instead?\", N);\n                end if;\n \n             --  Case of an address clause for a controlled object:\n@@ -1192,7 +1192,7 @@ package body Sem_Ch13 is\n                     (\"storage size clause for task is an \" &\n                      \"obsolescent feature ('R'M 'J.9)?\", N);\n                   Error_Msg_N\n-                    (\"|use Storage_Size pragma instead?\", N);\n+                    (\"\\use Storage_Size pragma instead?\", N);\n                end if;\n \n                FOnly := True;\n@@ -1957,7 +1957,7 @@ package body Sem_Ch13 is\n                Error_Msg_N\n                  (\"mod clause is an obsolescent feature ('R'M 'J.8)?\", N);\n                Error_Msg_N\n-                 (\"|use alignment attribute definition clause instead?\", N);\n+                 (\"\\use alignment attribute definition clause instead?\", N);\n             end if;\n \n             if Present (P) then\n@@ -3478,11 +3478,17 @@ package body Sem_Ch13 is\n       Parent_Type : Entity_Id;\n \n       procedure Too_Late;\n-      --  Output the too late message\n+      --  Output the too late message. Note that this is not considered a\n+      --  serious error, since the effect is simply that we ignore the\n+      --  representation clause in this case.\n+\n+      --------------\n+      -- Too_Late --\n+      --------------\n \n       procedure Too_Late is\n       begin\n-         Error_Msg_N (\"representation item appears too late!\", N);\n+         Error_Msg_N (\"|representation item appears too late!\", N);\n       end Too_Late;\n \n    --  Start of processing for Rep_Item_Too_Late"}, {"sha": "af36937145fd16c34e362a08ad4c04f8dc01d7c5", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c6c6771b61a8d083d8bf25bb97cf392599d1581/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c6c6771b61a8d083d8bf25bb97cf392599d1581/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=1c6c6771b61a8d083d8bf25bb97cf392599d1581", "patch": "@@ -1933,7 +1933,9 @@ package body Sem_Util is\n \n          C := First_Component (T);\n          while Present (C) loop\n-            if Is_Limited_Type (Etype (C)) then\n+            if Is_Limited_Type (Etype (C))\n+              and then Comes_From_Source (C)\n+            then\n                Error_Msg_Node_2 := T;\n                Error_Msg_NE (\"\\component& of type& has limited type\", N, C);\n                Explain_Limited_Type (Etype (C), N);\n@@ -1943,9 +1945,8 @@ package body Sem_Util is\n             Next_Component (C);\n          end loop;\n \n-         --  It's odd if the loop falls through, but this is only an extra\n-         --  error message, so we just let it go and ignore the situation.\n-\n+         --  The type may be declared explicitly limited, even if no component\n+         --  of it is limited, in which case we fall out of the loop.\n          return;\n       end if;\n    end Explain_Limited_Type;\n@@ -3772,14 +3773,16 @@ package body Sem_Util is\n          while Present (Discr) loop\n             if Nkind (Parent (Discr)) = N_Discriminant_Specification then\n                Discr_Val := Expression (Parent (Discr));\n-               if not Is_OK_Static_Expression (Discr_Val) then\n-                  return False;\n-               else\n+\n+               if Present (Discr_Val)\n+                 and then Is_OK_Static_Expression (Discr_Val)\n+               then\n                   Append_To (Constraints,\n                     Make_Component_Association (Loc,\n                       Choices    => New_List (New_Occurrence_Of (Discr, Loc)),\n                       Expression => New_Copy (Discr_Val)));\n-\n+               else\n+                  return False;\n                end if;\n             else\n                return False;"}]}