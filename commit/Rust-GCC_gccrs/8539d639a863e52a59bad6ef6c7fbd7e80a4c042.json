{"sha": "8539d639a863e52a59bad6ef6c7fbd7e80a4c042", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODUzOWQ2MzlhODYzZTUyYTU5YmFkNmVmNmM3ZmJkN2U4MGE0YzA0Mg==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2012-07-31T13:03:53Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2012-07-31T13:03:53Z"}, "message": "re PR fortran/54134 ([OOP] ICE overriding derived type bound function with allocatable character as result)\n\n2012-07-31  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/54134\n\t* dependency.c (gfc_dep_compare_expr): Check if arguments are NULL.\n\n2012-07-31  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/54134\n\t* gfortran.dg/typebound_override_3.f90: New.\n\nFrom-SVN: r190010", "tree": {"sha": "d89feb8370f0f1f19d52dbd2d74516b16acdd884", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d89feb8370f0f1f19d52dbd2d74516b16acdd884"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8539d639a863e52a59bad6ef6c7fbd7e80a4c042", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8539d639a863e52a59bad6ef6c7fbd7e80a4c042", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8539d639a863e52a59bad6ef6c7fbd7e80a4c042", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8539d639a863e52a59bad6ef6c7fbd7e80a4c042/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "315bdf71bd62b8efd04c426a2be7d641cda8658e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/315bdf71bd62b8efd04c426a2be7d641cda8658e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/315bdf71bd62b8efd04c426a2be7d641cda8658e"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "7eb4db4b2aadf46c66166c33d19981c682bf9e1e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8539d639a863e52a59bad6ef6c7fbd7e80a4c042/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8539d639a863e52a59bad6ef6c7fbd7e80a4c042/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8539d639a863e52a59bad6ef6c7fbd7e80a4c042", "patch": "@@ -1,3 +1,8 @@\n+2012-07-31  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/54134\n+\t* dependency.c (gfc_dep_compare_expr): Check if arguments are NULL.\n+\n 2012-07-31  Tobias Burnus  <burnus@net-b.de>\n \n \t* interface.c (gfc_procedure_use): Return gfc_try instead of void."}, {"sha": "ea1245dbb0b702b06649d9c04e5fa14f38d338d5", "filename": "gcc/fortran/dependency.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8539d639a863e52a59bad6ef6c7fbd7e80a4c042/gcc%2Ffortran%2Fdependency.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8539d639a863e52a59bad6ef6c7fbd7e80a4c042/gcc%2Ffortran%2Fdependency.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdependency.c?ref=8539d639a863e52a59bad6ef6c7fbd7e80a4c042", "patch": "@@ -261,6 +261,9 @@ gfc_dep_compare_expr (gfc_expr *e1, gfc_expr *e2)\n   n1 = NULL;\n   n2 = NULL;\n \n+  if (e1 == NULL && e2 == NULL)\n+    return 0;\n+\n   /* Remove any integer conversion functions to larger types.  */\n   if (e1->expr_type == EXPR_FUNCTION && e1->value.function.isym\n       && e1->value.function.isym->id == GFC_ISYM_CONVERSION"}, {"sha": "6a56342c018d678ae79d880e8d98e8568d8dde93", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8539d639a863e52a59bad6ef6c7fbd7e80a4c042/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8539d639a863e52a59bad6ef6c7fbd7e80a4c042/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8539d639a863e52a59bad6ef6c7fbd7e80a4c042", "patch": "@@ -1,3 +1,8 @@\n+2012-07-31  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/54134\n+\t* gfortran.dg/typebound_override_3.f90: New.\n+\n 2012-07-31  Bill Schmidt  <wschmidt@linux.ibm.com>\n \n \tPR tree-optimization/53773"}, {"sha": "36d84737e18cb8ea402a757c16f9f23a145028f2", "filename": "gcc/testsuite/gfortran.dg/typebound_override_3.f90", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8539d639a863e52a59bad6ef6c7fbd7e80a4c042/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_override_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8539d639a863e52a59bad6ef6c7fbd7e80a4c042/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_override_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_override_3.f90?ref=8539d639a863e52a59bad6ef6c7fbd7e80a4c042", "patch": "@@ -0,0 +1,34 @@\n+! { dg-do compile }\n+!\n+! PR 54134: [OOP] ICE overriding derived type bound function with allocatable character as result\n+!\n+! Contributed by <koen.poppe@cs.kuleuven.be>\n+\n+module dtAs\n+  implicit none\n+  type :: A\n+  contains\n+    procedure, nopass :: name => name_A\n+  end type\n+contains\n+  function name_A() result( name )\n+    character(:), allocatable :: name \n+    name = \"name_A\"\n+  end function\n+end module\n+\n+module dtBs\n+  use dtAs\n+  implicit none\n+  type, extends( A ) :: B\n+  contains\n+    procedure, nopass :: name => name_B\n+  end type\n+contains\n+  function name_B() result( name )\n+    character(:), allocatable :: name \n+    name = \"name_B\"\n+  end function\n+end module\n+\n+! { dg-final { cleanup-modules \"dtAs dtBs\" } }"}]}