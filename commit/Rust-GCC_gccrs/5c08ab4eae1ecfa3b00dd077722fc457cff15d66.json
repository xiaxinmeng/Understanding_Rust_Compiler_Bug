{"sha": "5c08ab4eae1ecfa3b00dd077722fc457cff15d66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWMwOGFiNGVhZTFlY2ZhM2IwMGRkMDc3NzIyZmM0NTdjZmYxNWQ2Ng==", "commit": {"author": {"name": "Hariharan Sandanagobalane", "email": "hariharan@picochip.com", "date": "2008-12-15T16:20:44Z"}, "committer": {"name": "Hariharan Sandanagobalane", "email": "hariharans@gcc.gnu.org", "date": "2008-12-15T16:20:44Z"}, "message": "picochip.c (picochip_override_options): Disable CFI asm and change the signature of brev and byteSwap functions to use...\n\n        * config/picochip/picochip.c (picochip_override_options): Disable CFI\n        asm and change the signature of brev and byteSwap functions to use\n        unsigned values.\n        * config/picochip/picochip.md (commsTestPort): This is a complex\n        instruction and should not be vliwed. Dont set insn type.\n\nFrom-SVN: r142765", "tree": {"sha": "926bb0df95cea72c6ecf211a03dce8d2f7c87c6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/926bb0df95cea72c6ecf211a03dce8d2f7c87c6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c08ab4eae1ecfa3b00dd077722fc457cff15d66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c08ab4eae1ecfa3b00dd077722fc457cff15d66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c08ab4eae1ecfa3b00dd077722fc457cff15d66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c08ab4eae1ecfa3b00dd077722fc457cff15d66/comments", "author": null, "committer": null, "parents": [{"sha": "618f4f46bd9b08eb519da2a8d12ecf57fd76afee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/618f4f46bd9b08eb519da2a8d12ecf57fd76afee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/618f4f46bd9b08eb519da2a8d12ecf57fd76afee"}], "stats": {"total": 29, "additions": 21, "deletions": 8}, "files": [{"sha": "a5314980c244cc467a50e092d51f101b8ab98480", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c08ab4eae1ecfa3b00dd077722fc457cff15d66/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c08ab4eae1ecfa3b00dd077722fc457cff15d66/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c08ab4eae1ecfa3b00dd077722fc457cff15d66", "patch": "@@ -1,5 +1,12 @@\n-2008-12-15  Wolfgang Gellerich  <gellerich@de.ibm.com>\n+2008-12-15  Hariharan Sandanagobalane <hariharan@picochip.com>\n+\n+\t* config/picochip/picochip.c (picochip_override_options): Disable CFI\n+\tasm and change the signature of brev and byteSwap functions to use\n+\tunsigned values.\n+\t* config/picochip/picochip.md (commsTestPort): This is a complex\n+\tinstruction and should not be vliwed. Dont set insn type.\n \n+2008-12-15  Wolfgang Gellerich  <gellerich@de.ibm.com>\n \t* config/s390/s390.c (s390_swap_cmp): New function.\n \t(s390_non_addr_reg_read_p): New function.\n \t(s390_z10_optimize_cmp): New function."}, {"sha": "d92948685940eb2b6f6056653854ba8597444fbf", "filename": "gcc/config/picochip/picochip.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c08ab4eae1ecfa3b00dd077722fc457cff15d66/gcc%2Fconfig%2Fpicochip%2Fpicochip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c08ab4eae1ecfa3b00dd077722fc457cff15d66/gcc%2Fconfig%2Fpicochip%2Fpicochip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpicochip%2Fpicochip.c?ref=5c08ab4eae1ecfa3b00dd077722fc457cff15d66", "patch": "@@ -324,6 +324,9 @@ picochip_override_options (void)\n      This isnt the default at O2 as yet. */\n   flag_section_anchors = 1;\n \n+  /* CFI asm labels are not supported by the picochip assembler yet */\n+  flag_dwarf2_cfi_asm = 0;\n+\n   /* Turn off the second scheduling pass, and move it to\n      picochip_reorg, to avoid having the second jump optimisation\n      trash the instruction modes (e.g., instructions are changed to\n@@ -3914,6 +3917,7 @@ picochip_init_builtins (void)\n {\n   tree endlink = void_list_node;\n   tree int_endlink = tree_cons (NULL_TREE, integer_type_node, endlink);\n+  tree unsigned_endlink = tree_cons (NULL_TREE, unsigned_type_node, endlink);\n   tree long_endlink = tree_cons (NULL_TREE, long_integer_type_node, endlink);\n   tree int_int_endlink =\n     tree_cons (NULL_TREE, integer_type_node, int_endlink);\n@@ -3929,7 +3933,7 @@ picochip_init_builtins (void)\n   tree long_ftype_int, long_ftype_int_int, long_ftype_int_int_int;\n   tree void_ftype_int_long, int_ftype_int_int_int,\n     void_ftype_long_int_int_int;\n-  tree void_ftype_void, void_ftype_int;\n+  tree void_ftype_void, void_ftype_int, unsigned_ftype_unsigned;\n \n   /* void func (void) */\n   void_ftype_void = build_function_type (void_type_node, endlink);\n@@ -3948,6 +3952,9 @@ picochip_init_builtins (void)\n   /* int func (int) */\n   int_ftype_int = build_function_type (integer_type_node, int_endlink);\n \n+  /* unsigned int func (unsigned int) */\n+  unsigned_ftype_unsigned = build_function_type (unsigned_type_node, unsigned_endlink);\n+\n   /* int func(int, int) */\n   int_ftype_int_int\n     = build_function_type (integer_type_node, int_int_endlink);\n@@ -3991,18 +3998,18 @@ picochip_init_builtins (void)\n \t\t\t       NULL_TREE);\n \n   /* Initialise the bit reverse function. */\n-  add_builtin_function (\"__builtin_brev\", int_ftype_int,\n+  add_builtin_function (\"__builtin_brev\", unsigned_ftype_unsigned,\n \t\t\t       PICOCHIP_BUILTIN_BREV, BUILT_IN_MD, NULL,\n \t\t\t       NULL_TREE);\n-  add_builtin_function (\"picoBrev\", int_ftype_int,\n+  add_builtin_function (\"picoBrev\", unsigned_ftype_unsigned,\n \t\t\t       PICOCHIP_BUILTIN_BREV, BUILT_IN_MD, NULL,\n \t\t\t       NULL_TREE);\n \n   /* Initialise the byte swap function. */\n-  add_builtin_function (\"__builtin_byteswap\", int_ftype_int,\n+  add_builtin_function (\"__builtin_byteswap\", unsigned_ftype_unsigned,\n \t\t\t       PICOCHIP_BUILTIN_BYTESWAP, BUILT_IN_MD, NULL,\n \t\t\t       NULL_TREE);\n-  add_builtin_function (\"picoByteSwap\", int_ftype_int,\n+  add_builtin_function (\"picoByteSwap\", unsigned_ftype_unsigned,\n \t\t\t       PICOCHIP_BUILTIN_BYTESWAP, BUILT_IN_MD, NULL,\n \t\t\t       NULL_TREE);\n "}, {"sha": "fbe2280e12369b6644aba07b28d915ad9bd0ba36", "filename": "gcc/config/picochip/picochip.md", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c08ab4eae1ecfa3b00dd077722fc457cff15d66/gcc%2Fconfig%2Fpicochip%2Fpicochip.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c08ab4eae1ecfa3b00dd077722fc457cff15d66/gcc%2Fconfig%2Fpicochip%2Fpicochip.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpicochip%2Fpicochip.md?ref=5c08ab4eae1ecfa3b00dd077722fc457cff15d66", "patch": "@@ -2367,8 +2367,7 @@\n    (clobber (reg:CC CC_REGNUM))]\n   \"\"\n   \"// %0 := TestPort(%1)\\;TSTPORT %1\\;COPYSW.0 %0\\;AND.0 %0,8,%0\"\n-  [(set_attr \"length\" \"9\")\n-   (set_attr \"type\" \"picoAlu\")])\n+  [(set_attr \"length\" \"9\")])\n \n ; Entry point for array tstport (the actual port index is computed as the\n ; sum of the index, and the base)."}]}