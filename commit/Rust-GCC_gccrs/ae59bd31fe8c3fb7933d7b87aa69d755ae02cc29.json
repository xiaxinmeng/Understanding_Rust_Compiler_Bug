{"sha": "ae59bd31fe8c3fb7933d7b87aa69d755ae02cc29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU1OWJkMzFmZThjM2ZiNzkzM2Q3Yjg3YWE2OWQ3NTVhZTAyY2MyOQ==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2014-11-01T10:12:24Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2014-11-01T10:12:24Z"}, "message": "[Patch 4/7 sh] Deprecate *_BY_PIECES_P, move to hookized version\n\ngcc/\n\n\t* config/sh/sh.c (TARGET_USE_BY_PIECES_INFRASTRUCTURE_P): New.\n\t(sh_use_by_pieces_infrastructure_p): Likewise.\n\t* config/sh/sh.h (MOVE_BY_PIECES_P): Remove.\n\t(STORE_BY_PIECES_P): Likewise.\n\t(SET_BY_PIECES_P): Likewise.\n\nFrom-SVN: r217001", "tree": {"sha": "98a16409825cc41f5ed43354d08e13f2c7bfb39d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98a16409825cc41f5ed43354d08e13f2c7bfb39d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae59bd31fe8c3fb7933d7b87aa69d755ae02cc29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae59bd31fe8c3fb7933d7b87aa69d755ae02cc29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae59bd31fe8c3fb7933d7b87aa69d755ae02cc29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae59bd31fe8c3fb7933d7b87aa69d755ae02cc29/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ad23f5d41174ce13f2b3d912a3f6633d1d6bc0f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad23f5d41174ce13f2b3d912a3f6633d1d6bc0f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad23f5d41174ce13f2b3d912a3f6633d1d6bc0f5"}], "stats": {"total": 49, "additions": 39, "deletions": 10}, "files": [{"sha": "f193459a08c1d274974811f61ee4bce7a8523a09", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae59bd31fe8c3fb7933d7b87aa69d755ae02cc29/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae59bd31fe8c3fb7933d7b87aa69d755ae02cc29/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae59bd31fe8c3fb7933d7b87aa69d755ae02cc29", "patch": "@@ -1,3 +1,11 @@\n+2014-11-01  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/sh/sh.c (TARGET_USE_BY_PIECES_INFRASTRUCTURE_P): New.\n+\t(sh_use_by_pieces_infrastructure_p): Likewise.\n+\t* config/sh/sh.h (MOVE_BY_PIECES_P): Remove.\n+\t(STORE_BY_PIECES_P): Likewise.\n+\t(SET_BY_PIECES_P): Likewise.\n+\n 2014-11-01  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/arc/arc.c (TARGET_USE_BY_PIECES_INFRASTRUCTURE_P): New."}, {"sha": "3bbbd230406dfa6f14fc54f071808aa566fd9a35", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae59bd31fe8c3fb7933d7b87aa69d755ae02cc29/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae59bd31fe8c3fb7933d7b87aa69d755ae02cc29/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=ae59bd31fe8c3fb7933d7b87aa69d755ae02cc29", "patch": "@@ -338,6 +338,10 @@ static void sh_conditional_register_usage (void);\n static bool sh_legitimate_constant_p (machine_mode, rtx);\n static int mov_insn_size (machine_mode, bool);\n static int mov_insn_alignment_mask (machine_mode, bool);\n+static bool sh_use_by_pieces_infrastructure_p (unsigned int,\n+\t\t\t\t\t       unsigned int,\n+\t\t\t\t\t       enum by_pieces_operation,\n+\t\t\t\t\t       bool);\n static bool sequence_insn_p (rtx_insn *);\n static void sh_canonicalize_comparison (int *, rtx *, rtx *, bool);\n static void sh_canonicalize_comparison (enum rtx_code&, rtx&, rtx&,\n@@ -640,6 +644,10 @@ static const struct attribute_spec sh_attribute_table[] =\n #undef TARGET_FIXED_CONDITION_CODE_REGS\n #define TARGET_FIXED_CONDITION_CODE_REGS sh_fixed_condition_code_regs\n \n+#undef TARGET_USE_BY_PIECES_INFRASTRUCTURE_P\n+#define TARGET_USE_BY_PIECES_INFRASTRUCTURE_P \\\n+  sh_use_by_pieces_infrastructure_p\n+\n /* Machine-specific symbol_ref flags.  */\n #define SYMBOL_FLAG_FUNCVEC_FUNCTION\t(SYMBOL_FLAG_MACH_DEP << 0)\n \n@@ -13674,4 +13682,27 @@ sh_mode_priority (int entity ATTRIBUTE_UNUSED, int n)\n   return ((TARGET_FPU_SINGLE != 0) ^ (n) ? FP_MODE_SINGLE : FP_MODE_DOUBLE);\n }\n \n+/* Implement TARGET_USE_BY_PIECES_INFRASTRUCTURE_P.  */\n+\n+static bool\n+sh_use_by_pieces_infrastructure_p (unsigned int size,\n+\t\t\t\t   unsigned int align,\n+\t\t\t\t   enum by_pieces_operation op,\n+\t\t\t\t   bool speed_p)\n+{\n+  switch (op)\n+    {\n+      case MOVE_BY_PIECES:\n+\treturn move_by_pieces_ninsns (size, align, MOVE_MAX_PIECES + 1)\n+\t  < (!speed_p ? 2 : (align >= 32) ? 16 : 2);\n+      case STORE_BY_PIECES:\n+      case SET_BY_PIECES:\n+\treturn move_by_pieces_ninsns (size, align, STORE_MAX_PIECES + 1)\n+\t  < (!speed_p ? 2 : (align >= 32) ? 16 : 2);\n+      default:\n+\treturn default_use_by_pieces_infrastructure_p (size, align,\n+\t\t\t\t\t\t       op, speed_p);\n+    }\n+}\n+\n #include \"gt-sh.h\""}, {"sha": "92835d7d8e0fd09d7a48abb8f9d36b595b37201a", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae59bd31fe8c3fb7933d7b87aa69d755ae02cc29/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae59bd31fe8c3fb7933d7b87aa69d755ae02cc29/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=ae59bd31fe8c3fb7933d7b87aa69d755ae02cc29", "patch": "@@ -1591,16 +1591,6 @@ struct sh_args {\n #define USE_STORE_PRE_DECREMENT(mode)    ((mode == SImode || mode == DImode) \\\n \t\t\t\t\t  ? 0 : TARGET_SH1)\n \n-#define MOVE_BY_PIECES_P(SIZE, ALIGN) \\\n-  (move_by_pieces_ninsns (SIZE, ALIGN, MOVE_MAX_PIECES + 1) \\\n-   < (optimize_size ? 2 : ((ALIGN >= 32) ? 16 : 2)))\n-\n-#define STORE_BY_PIECES_P(SIZE, ALIGN) \\\n-  (move_by_pieces_ninsns (SIZE, ALIGN, STORE_MAX_PIECES + 1) \\\n-   < (optimize_size ? 2 : ((ALIGN >= 32) ? 16 : 2)))\n-\n-#define SET_BY_PIECES_P(SIZE, ALIGN) STORE_BY_PIECES_P(SIZE, ALIGN)\n-\n /* If a memory clear move would take CLEAR_RATIO or more simple\n    move-instruction pairs, we will do a setmem instead.  */\n "}]}