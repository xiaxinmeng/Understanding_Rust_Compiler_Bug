{"sha": "729e750fba284e8d99988a71983a6a5dd7bbb96a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI5ZTc1MGZiYTI4NGU4ZDk5OTg4YTcxOTgzYTZhNWRkN2JiYjk2YQ==", "commit": {"author": {"name": "Wolfgang Gellerich", "email": "gellerich@de.ibm.com", "date": "2009-01-28T16:36:42Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2009-01-28T16:36:42Z"}, "message": "s390.md (*tmsi_reg): Fixed z10prop attribute.\n\n2009-01-28  Wolfgang Gellerich  <gellerich@de.ibm.com>\n\n\t* config/s390/s390.md (*tmsi_reg): Fixed z10prop attribute.\n\t(*tm<mode>_full): Fixed z10prop attribute.\n\t(*tst<mode>_extimm): Fixed z10prop attribute.\n\t(*tst<mode>_cconly_extimm): Fixed z10prop attribute.\n\t(*tstqiCCT_cconly): Fixed z10prop attribute.\n\t(*cmpsi_ccu_zerohi_rlsi): Fixed z10prop attribute.\n\t(*movsi_larl): Fixed z10prop attribute.\n\t(*movsi_zarch): Fixed z10prop attribute.\n\t(*movsi_eas): Fixed z10prop attribute.\n\t(*movhi): Fixed z10prop attribute.\n\t(*movqi): Fixed z10prop attribute.\n\t(*movstrictqi): Fixed z10prop attribute.\n\t(*mov<mode>): Fixed z10prop attribute.\n\t(*movcc): Fixed z10prop attribute.\n\t(*sethighpartdi_64): Fixed z10prop attribute.\n\t(*zero_extendhi<mode>2_z10): Fixed z10prop attribute.\n\t(*negdi2_sign_cc): Fixed z10prop attribute.\n\t(*negdi2_sign): Fixed z10prop attribute.\n\t(*absdi2_sign_cc): Fixed z10prop attribute.\n\t(*absdi2_sign): Fixed z10prop attribute.\n\t(*negabsdi2_sign_cc): Fixed z10prop attribute.\n\t(*negabsdi2_sign): Fixed z10prop attribute.\n\t(*cmp_and_trap_signed_int<mode>): Fixed z10prop attribute.\n\t(*cmp_and_trap_unsigned_int<mode>): Fixed z10prop attribute.\n\t(doloop_si64): Fixed z10prop attribute.\n\t(doloop_si31): Fixed z10prop attribute.\n\t(doloop_long): Fixed z10prop attribute.\n\t(indirect_jump): Fixed z10prop attribute.\n\t(nop): Fixed z10prop attribute.\n\t(main_base_64): Fixed z10prop attribute.\n\t(reload_base_64): Fixed z10prop attribute.\n\nFrom-SVN: r143734", "tree": {"sha": "6375b2b1673c4ec4e4883381aa8bf2dfe545fb35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6375b2b1673c4ec4e4883381aa8bf2dfe545fb35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/729e750fba284e8d99988a71983a6a5dd7bbb96a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/729e750fba284e8d99988a71983a6a5dd7bbb96a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/729e750fba284e8d99988a71983a6a5dd7bbb96a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/729e750fba284e8d99988a71983a6a5dd7bbb96a/comments", "author": null, "committer": null, "parents": [{"sha": "c7789bfb8c6f12d57f24952a4ac3c0ae935db61b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7789bfb8c6f12d57f24952a4ac3c0ae935db61b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7789bfb8c6f12d57f24952a4ac3c0ae935db61b"}], "stats": {"total": 111, "additions": 78, "deletions": 33}, "files": [{"sha": "83443083cc98d9f22b05383fc623da072ab15b11", "filename": "gcc/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/729e750fba284e8d99988a71983a6a5dd7bbb96a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/729e750fba284e8d99988a71983a6a5dd7bbb96a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=729e750fba284e8d99988a71983a6a5dd7bbb96a", "patch": "@@ -1,3 +1,37 @@\n+2009-01-28  Wolfgang Gellerich  <gellerich@de.ibm.com>\n+\n+\t* config/s390/s390.md (*tmsi_reg): Fixed z10prop attribute.\n+\t(*tm<mode>_full): Fixed z10prop attribute.\n+\t(*tst<mode>_extimm): Fixed z10prop attribute.\n+\t(*tst<mode>_cconly_extimm): Fixed z10prop attribute.\n+\t(*tstqiCCT_cconly): Fixed z10prop attribute.\n+\t(*cmpsi_ccu_zerohi_rlsi): Fixed z10prop attribute.\n+\t(*movsi_larl): Fixed z10prop attribute.\n+\t(*movsi_zarch): Fixed z10prop attribute.\n+\t(*movsi_eas): Fixed z10prop attribute.\n+\t(*movhi): Fixed z10prop attribute.\n+\t(*movqi): Fixed z10prop attribute.\n+\t(*movstrictqi): Fixed z10prop attribute.\n+\t(*mov<mode>): Fixed z10prop attribute.\n+\t(*movcc): Fixed z10prop attribute.\n+\t(*sethighpartdi_64): Fixed z10prop attribute.\n+\t(*zero_extendhi<mode>2_z10): Fixed z10prop attribute.\n+\t(*negdi2_sign_cc): Fixed z10prop attribute.\n+\t(*negdi2_sign): Fixed z10prop attribute.\n+\t(*absdi2_sign_cc): Fixed z10prop attribute.\n+\t(*absdi2_sign): Fixed z10prop attribute.\n+\t(*negabsdi2_sign_cc): Fixed z10prop attribute.\n+\t(*negabsdi2_sign): Fixed z10prop attribute.\n+\t(*cmp_and_trap_signed_int<mode>): Fixed z10prop attribute.\n+\t(*cmp_and_trap_unsigned_int<mode>): Fixed z10prop attribute.\n+\t(doloop_si64): Fixed z10prop attribute.\n+\t(doloop_si31): Fixed z10prop attribute.\n+\t(doloop_long): Fixed z10prop attribute.\n+\t(indirect_jump): Fixed z10prop attribute.\n+\t(nop): Fixed z10prop attribute.\n+\t(main_base_64): Fixed z10prop attribute.\n+\t(reload_base_64): Fixed z10prop attribute.\n+\n 2009-01-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/38740"}, {"sha": "adcce8ab3efb7d22e053e0eae6210f3cb81f29b0", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 44, "deletions": 33, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/729e750fba284e8d99988a71983a6a5dd7bbb96a/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/729e750fba284e8d99988a71983a6a5dd7bbb96a/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=729e750fba284e8d99988a71983a6a5dd7bbb96a", "patch": "@@ -558,15 +558,17 @@\n   \"@\n    tmh\\t%0,%i1\n    tml\\t%0,%i1\"\n-  [(set_attr \"op_type\" \"RI\")])\n+  [(set_attr \"op_type\" \"RI\")\n+   (set_attr \"z10prop\" \"z10_super,z10_super\")])\n \n (define_insn \"*tm<mode>_full\"\n   [(set (reg CC_REGNUM)\n         (compare (match_operand:HQI 0 \"register_operand\" \"d\")\n                  (match_operand:HQI 1 \"immediate_operand\" \"n\")))]\n   \"s390_match_ccmode (insn, s390_tm_ccmode (constm1_rtx, operands[1], true))\"\n   \"tml\\t%0,<max_uint>\"\n-  [(set_attr \"op_type\" \"RI\")])\n+  [(set_attr \"op_type\" \"RI\")\n+   (set_attr \"z10prop\" \"z10_super\")])\n \n \n ;\n@@ -604,7 +606,7 @@\n    lt<g>r\\t%2,%0\n    lt<g>\\t%2,%0\"\n   [(set_attr \"op_type\" \"RR<E>,RXY\")\n-   (set_attr \"z10prop\" \"z10_fr_E1,z10_fr_A3\") ])\n+   (set_attr \"z10prop\" \"z10_fr_E1,z10_fwd_A3\") ])\n \n ; ltr, lt, ltgr, ltg\n (define_insn \"*tst<mode>_cconly_extimm\"\n@@ -617,7 +619,7 @@\n    lt<g>r\\t%0,%0\n    lt<g>\\t%2,%0\"\n   [(set_attr \"op_type\" \"RR<E>,RXY\")\n-   (set_attr \"z10prop\" \"z10_fr_E1,z10_fr_A3\")])\n+   (set_attr \"z10prop\" \"z10_fr_E1,z10_fwd_A3\")])\n \n (define_insn \"*tstdi\"\n   [(set (reg CC_REGNUM)\n@@ -715,7 +717,7 @@\n    cliy\\t%S0,0\n    tml\\t%0,255\"\n   [(set_attr \"op_type\" \"SI,SIY,RI\")\n-   (set_attr \"z10prop\" \"z10_super,z10_super,*\")])\n+   (set_attr \"z10prop\" \"z10_super,z10_super,z10_super\")])\n \n (define_insn \"*tst<mode>\"\n   [(set (reg CC_REGNUM)\n@@ -856,7 +858,8 @@\n   \"s390_match_ccmode(insn, CCURmode) && TARGET_Z10\"\n   \"clhrl\\t%0,%1\"\n   [(set_attr \"op_type\" \"RIL\")\n-   (set_attr \"type\"    \"larl\")])\n+   (set_attr \"type\"    \"larl\")\n+   (set_attr \"z10prop\" \"z10_super\")])\n \n ; clhrl, clghrl\n (define_insn \"*cmp<GPR:mode>_ccu_zerohi_rldi\"\n@@ -1527,7 +1530,7 @@\n   \"larl\\t%0,%1\"\n    [(set_attr \"op_type\" \"RIL\")\n     (set_attr \"type\"    \"larl\")\n-    (set_attr \"z10prop\" \"z10_super_A1\")])\n+    (set_attr \"z10prop\" \"z10_fwd_A1\")])\n \n (define_insn \"*movsi_zarch\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\"\n@@ -1593,7 +1596,7 @@\n                         z10_fr_E1,\n                         z10_fwd_A3,\n                         z10_fwd_A3,\n-                        z10_super,\n+                        z10_rec,\n                         z10_rec,\n                         *,\n                         *,\n@@ -1628,7 +1631,7 @@\n    (set_attr \"z10prop\" \"z10_fwd_A1,\n                         z10_fr_E1,\n                         z10_fwd_A3,\n-                        z10_super,\n+                        z10_rec,\n                         *,\n                         *,\n                         *,\n@@ -1766,7 +1769,7 @@\n                        z10_super_E1,\n                        z10_super_E1,\n                        z10_super_E1,\n-                       z10_super,\n+                       z10_rec,\n                        z10_rec,\n                        z10_rec,\n                        z10_super\")])\n@@ -1822,7 +1825,7 @@\n                         z10_fwd_A1,\n                         z10_super_E1,\n                         z10_super_E1,\n-                        z10_super,\n+                        z10_rec,\n                         z10_rec,\n                         z10_super,\n                         z10_super\")])\n@@ -1849,7 +1852,7 @@\n    ic\\t%0,%1\n    icy\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RX,RXY\")\n-   (set_attr \"z10prop\" \"z10_super_E1,z10_super\")])\n+   (set_attr \"z10prop\" \"z10_super_E1,z10_super_E1\")])\n \n ;\n ; movstricthi instruction pattern(s).\n@@ -2167,7 +2170,7 @@\n                         z10_fr_E1,\n                         z10_fwd_A3,\n                         z10_fwd_A3,\n-                        z10_super,\n+                        z10_rec,\n                         z10_rec\")])\n \n ;\n@@ -2188,7 +2191,7 @@\n    ly\\t%1,%0\"\n   [(set_attr \"op_type\" \"RR,RI,RRE,RX,RXY,RX,RXY\")\n    (set_attr \"type\" \"lr,*,*,store,store,load,load\")\n-   (set_attr \"z10prop\" \"z10_fr_E1,*,*,z10_super,z10_rec,z10_fwd_A3,z10_fwd_A3\")])\n+   (set_attr \"z10prop\" \"z10_fr_E1,z10_super,*,z10_rec,z10_rec,z10_fwd_A3,z10_fwd_A3\")])\n \n ;\n ; Block move (MVC) patterns.\n@@ -3153,7 +3156,8 @@\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n   \"icmh\\t%0,%2,%S1\"\n-  [(set_attr \"op_type\" \"RSY\")])\n+  [(set_attr \"op_type\" \"RSY\")\n+   (set_attr \"z10prop\" \"z10_super\")])\n \n (define_insn \"*sethighpartdi_31\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n@@ -3696,7 +3700,7 @@\n   [(set_attr \"op_type\"      \"RXY,RRE,RIL\")\n    (set_attr \"type\"         \"*,*,larl\")\n    (set_attr \"cpu_facility\" \"*,*,z10\")\n-   (set_attr \"z10prop\" \"z10_fwd_A3\")])\n+   (set_attr \"z10prop\" \"z10_super_E1,z10_fwd_A3,z10_fwd_A3\")])\n \n ; llhr, llcr, llghr, llgcr, llh, llc, llgh, llgc\n (define_insn \"*zero_extend<HQI:mode><GPR:mode>2_extimm\"\n@@ -6630,15 +6634,17 @@\n         (neg:DI (sign_extend:DI (match_dup 1))))]\n   \"TARGET_64BIT && s390_match_ccmode (insn, CCAmode)\"\n   \"lcgfr\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RRE\")])\n+  [(set_attr \"op_type\"  \"RRE\")\n+   (set_attr \"z10prop\" \"z10_c\")])\n \n (define_insn \"*negdi2_sign\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n         (neg:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"d\"))))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n   \"lcgfr\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RRE\")])\n+  [(set_attr \"op_type\"  \"RRE\")\n+   (set_attr \"z10prop\" \"z10_c\")])\n \n ; lcr, lcgr\n (define_insn \"*neg<mode>2_cc\"\n@@ -6774,15 +6780,17 @@\n         (abs:DI (sign_extend:DI (match_dup 1))))]\n   \"TARGET_64BIT && s390_match_ccmode (insn, CCAmode)\"\n   \"lpgfr\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RRE\")])\n+  [(set_attr \"op_type\"  \"RRE\")\n+   (set_attr \"z10prop\" \"z10_c\")])\n \n (define_insn \"*absdi2_sign\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n         (abs:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"d\"))))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n   \"lpgfr\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RRE\")])\n+  [(set_attr \"op_type\"  \"RRE\")\n+   (set_attr \"z10prop\" \"z10_c\")])\n \n ; lpr, lpgr\n (define_insn \"*abs<mode>2_cc\"\n@@ -6890,7 +6898,8 @@\n         (neg:DI (abs:DI (sign_extend:DI (match_dup 1)))))]\n   \"TARGET_64BIT && s390_match_ccmode (insn, CCAmode)\"\n   \"lngfr\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"RRE\")])\n+  [(set_attr \"op_type\"  \"RRE\")\n+   (set_attr \"z10prop\" \"z10_c\")])\n \n (define_insn \"*negabsdi2_sign\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n@@ -6899,7 +6908,8 @@\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n   \"lngfr\\t%0,%1\"\n-  [(set_attr \"op_type\" \"RRE\")])\n+  [(set_attr \"op_type\" \"RRE\")\n+   (set_attr \"z10prop\" \"z10_c\")])\n \n ; lnr, lngr\n (define_insn \"*negabs<mode>2_cc\"\n@@ -7516,7 +7526,7 @@\n    c<g>it%C0\\t%1,%h2\"\n   [(set_attr \"op_type\" \"RRF,RIE\")\n    (set_attr \"type\"    \"branch\")\n-   (set_attr \"z10prop\" \"z10_c,*\")])\n+   (set_attr \"z10prop\" \"z10_super_c,z10_super\")])\n \n ; clrt, clgrt, clfit, clgit\n (define_insn \"*cmp_and_trap_unsigned_int<mode>\"\n@@ -7530,7 +7540,7 @@\n    cl<gf>it%C0\\t%1,%x2\"\n   [(set_attr \"op_type\" \"RRF,RIE\")\n    (set_attr \"type\"    \"branch\")\n-   (set_attr \"z10prop\" \"z10_c,*\")])\n+   (set_attr \"z10prop\" \"z10_super_c,z10_super\")])\n \n ;;\n ;;- Loop instructions.\n@@ -7594,7 +7604,7 @@\n   [(set_attr \"op_type\"  \"RI\")\n    ; Strictly speaking, the z10 properties are valid for brct only, however, it does not\n    ; hurt us in the (rare) case of ahi.\n-   (set_attr \"z10prop\"  \"z10_super\")\n+   (set_attr \"z10prop\"  \"z10_super_E1\")\n    (set_attr \"type\"  \"branch\")\n    (set (attr \"length\")\n         (if_then_else (lt (abs (minus (pc) (match_dup 0))) (const_int 60000))\n@@ -7636,7 +7646,7 @@\n   [(set_attr \"op_type\"  \"RI\")\n    ; Strictly speaking, the z10 properties are valid for brct only, however, it does not\n    ; hurt us in the (rare) case of ahi.\n-   (set_attr \"z10prop\"  \"z10_super\")\n+   (set_attr \"z10prop\"  \"z10_super_E1\")\n    (set_attr \"type\"  \"branch\")\n    (set (attr \"length\")\n         (if_then_else (eq (symbol_ref \"flag_pic\") (const_int 0))\n@@ -7667,7 +7677,8 @@\n         (if_then_else (match_operand 0 \"register_operand\" \"\")\n                       (const_string \"RR\") (const_string \"RX\")))\n    (set_attr \"type\"  \"branch\")\n-   (set_attr \"atype\" \"agen\")])\n+   (set_attr \"atype\" \"agen\")\n+   (set_attr \"z10prop\"  \"z10_cobra\")])\n \n (define_insn_and_split \"doloop_di\"\n   [(set (pc)\n@@ -7705,7 +7716,7 @@\n   [(set_attr \"op_type\"  \"RI\")\n    ; Strictly speaking, the z10 properties are valid for brct only, however, it does not\n    ; hurt us in the (rare) case of ahi.\n-   (set_attr \"z10prop\"  \"z10_super\")\n+   (set_attr \"z10prop\"  \"z10_super_E1\")\n    (set_attr \"type\"  \"branch\")\n    (set (attr \"length\")\n         (if_then_else (lt (abs (minus (pc) (match_dup 0))) (const_int 60000))\n@@ -7772,8 +7783,7 @@\n         (if_then_else (match_operand 0 \"register_operand\" \"\")\n                       (const_string \"RR\") (const_string \"RX\")))\n    (set_attr \"type\"  \"branch\")\n-   (set_attr \"atype\" \"agen\")\n-   (set_attr \"z10prop\" \"z10_super\")])\n+   (set_attr \"atype\" \"agen\")])\n \n ;\n ; casesi instruction pattern(s).\n@@ -8468,7 +8478,8 @@\n   [(const_int 0)]\n   \"\"\n   \"lr\\t0,0\"\n-  [(set_attr \"op_type\" \"RR\")])\n+  [(set_attr \"op_type\" \"RR\")\n+   (set_attr \"z10prop\"  \"z10_fr_E1\")])\n \n (define_insn \"nop1\"\n   [(const_int 1)]\n@@ -8536,7 +8547,7 @@\n   \"larl\\t%0,%1\"\n   [(set_attr \"op_type\" \"RIL\")\n    (set_attr \"type\"    \"larl\")\n-   (set_attr \"z10prop\" \"z10_super_A1\")])\n+   (set_attr \"z10prop\" \"z10_fwd_A1\")])\n \n (define_insn \"main_pool\"\n   [(set (match_operand 0 \"register_operand\" \"=a\")\n@@ -8564,7 +8575,7 @@\n   \"larl\\t%0,%1\"\n   [(set_attr \"op_type\" \"RIL\")\n    (set_attr \"type\"    \"larl\")\n-   (set_attr \"z10prop\" \"z10_super_A1\")])\n+   (set_attr \"z10prop\" \"z10_fwd_A1\")])\n \n (define_insn \"pool\"\n   [(unspec_volatile [(match_operand 0 \"const_int_operand\" \"n\")] UNSPECV_POOL)]"}]}