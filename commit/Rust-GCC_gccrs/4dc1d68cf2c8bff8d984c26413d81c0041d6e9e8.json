{"sha": "4dc1d68cf2c8bff8d984c26413d81c0041d6e9e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRjMWQ2OGNmMmM4YmZmOGQ5ODRjMjY0MTNkODFjMDA0MWQ2ZTllOA==", "commit": {"author": {"name": "Xinliang David Li", "email": "davidxl@google.com", "date": "2013-03-02T18:42:26Z"}, "committer": {"name": "Xinliang David Li", "email": "davidxl@gcc.gnu.org", "date": "2013-03-02T18:42:26Z"}, "message": "PR/56490\n\nFrom-SVN: r196406", "tree": {"sha": "3cba7a065bd86c94ed2986ecdbffb19b6794ffef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cba7a065bd86c94ed2986ecdbffb19b6794ffef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4dc1d68cf2c8bff8d984c26413d81c0041d6e9e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dc1d68cf2c8bff8d984c26413d81c0041d6e9e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dc1d68cf2c8bff8d984c26413d81c0041d6e9e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dc1d68cf2c8bff8d984c26413d81c0041d6e9e8/comments", "author": {"login": "vns-mn", "id": 57157229, "node_id": "MDQ6VXNlcjU3MTU3MjI5", "avatar_url": "https://avatars.githubusercontent.com/u/57157229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vns-mn", "html_url": "https://github.com/vns-mn", "followers_url": "https://api.github.com/users/vns-mn/followers", "following_url": "https://api.github.com/users/vns-mn/following{/other_user}", "gists_url": "https://api.github.com/users/vns-mn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vns-mn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vns-mn/subscriptions", "organizations_url": "https://api.github.com/users/vns-mn/orgs", "repos_url": "https://api.github.com/users/vns-mn/repos", "events_url": "https://api.github.com/users/vns-mn/events{/privacy}", "received_events_url": "https://api.github.com/users/vns-mn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2609a39863cad3d83ec3fbc6f35164a194c3a18d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2609a39863cad3d83ec3fbc6f35164a194c3a18d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2609a39863cad3d83ec3fbc6f35164a194c3a18d"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "32f6e4b6f0fe55f1288e16b6cd8b1d7b5ff89643", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dc1d68cf2c8bff8d984c26413d81c0041d6e9e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dc1d68cf2c8bff8d984c26413d81c0041d6e9e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4dc1d68cf2c8bff8d984c26413d81c0041d6e9e8", "patch": "@@ -1,3 +1,8 @@\n+2013-03-01  Xinliang David Li  <davidxl@google.com>\n+\n+\t* tree-ssa-uninit.c (compute_control_dep_chain): Limit post-dom\n+\twalk length.\n+\n 2013-03-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/56461"}, {"sha": "e8f3ff7e7302fef5652d89e58f1618be672e8293", "filename": "gcc/tree-ssa-uninit.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dc1d68cf2c8bff8d984c26413d81c0041d6e9e8/gcc%2Ftree-ssa-uninit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dc1d68cf2c8bff8d984c26413d81c0041d6e9e8/gcc%2Ftree-ssa-uninit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uninit.c?ref=4dc1d68cf2c8bff8d984c26413d81c0041d6e9e8", "patch": "@@ -229,6 +229,7 @@ find_control_equiv_block (basic_block bb)\n \n #define MAX_NUM_CHAINS 8\n #define MAX_CHAIN_LEN 5\n+#define MAX_POSTDOM_CHECK 8\n \n /* Computes the control dependence chains (paths of edges)\n    for DEP_BB up to the dominating basic block BB (the head node of a\n@@ -269,6 +270,7 @@ compute_control_dep_chain (basic_block bb, basic_block dep_bb,\n   FOR_EACH_EDGE (e, ei, bb->succs)\n     {\n       basic_block cd_bb;\n+      int post_dom_check = 0;\n       if (e->flags & (EDGE_FAKE | EDGE_ABNORMAL))\n         continue;\n \n@@ -298,7 +300,8 @@ compute_control_dep_chain (basic_block bb, basic_block dep_bb,\n             }\n \n           cd_bb = find_pdom (cd_bb);\n-          if (cd_bb == EXIT_BLOCK_PTR)\n+          post_dom_check++;\n+          if (cd_bb == EXIT_BLOCK_PTR || post_dom_check > MAX_POSTDOM_CHECK)\n             break;\n         }\n       cur_cd_chain->pop ();"}]}