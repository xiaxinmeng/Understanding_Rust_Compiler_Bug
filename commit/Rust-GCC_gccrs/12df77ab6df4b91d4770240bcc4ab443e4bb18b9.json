{"sha": "12df77ab6df4b91d4770240bcc4ab443e4bb18b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJkZjc3YWI2ZGY0YjkxZDQ3NzAyNDBiY2M0YWI0NDNlNGJiMThiOQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-06-16T18:18:31Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-06-16T18:23:58Z"}, "message": "OpenACC/Fortran: permit 'routine' inside PURE\n\ngcc/fortran/ChangeLog\n\n\t* parse.c (decode_oacc_directive): Permit 'acc routine' also\n\tinside pure procedures.\n\t* openmp.c (gfc_match_oacc_routine): Inside pure procedures\n\tdo not permit gang, worker or vector clauses.\n\nlibgomp/ChangeLog:\n\n\t* testsuite/libgomp.oacc-fortran/routine-10.f90: New test.\n\ngcc/testsuite/ChangeLog:\n\n\t* gfortran.dg/goacc/pure-elemental-procedures-2.f90: New test.\n\nReviewed-by: Thomas Schwinge <thomas@codesourcery.com>", "tree": {"sha": "bc813b527747e25caf6648269c40345834fe047f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc813b527747e25caf6648269c40345834fe047f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12df77ab6df4b91d4770240bcc4ab443e4bb18b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12df77ab6df4b91d4770240bcc4ab443e4bb18b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12df77ab6df4b91d4770240bcc4ab443e4bb18b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12df77ab6df4b91d4770240bcc4ab443e4bb18b9/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "244ed2adaa3d349d381ca6ce090c2fa69b6e8d8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/244ed2adaa3d349d381ca6ce090c2fa69b6e8d8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/244ed2adaa3d349d381ca6ce090c2fa69b6e8d8b"}], "stats": {"total": 115, "additions": 102, "deletions": 13}, "files": [{"sha": "94522d16e6d6bca85ac70876fa98cddc86eb8559", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12df77ab6df4b91d4770240bcc4ab443e4bb18b9/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12df77ab6df4b91d4770240bcc4ab443e4bb18b9/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=12df77ab6df4b91d4770240bcc4ab443e4bb18b9", "patch": "@@ -2525,6 +2525,14 @@ gfc_match_oacc_routine (void)\n     /* Something has gone wrong, possibly a syntax error.  */\n     goto cleanup;\n \n+  if (gfc_pure (NULL) && c && (c->gang || c->worker || c->vector))\n+    {\n+      gfc_error (\"!$ACC ROUTINE with GANG, WORKER, or VECTOR clause is not \"\n+\t\t \"permitted in PURE procedure at %C\");\n+      goto cleanup;\n+    }\n+\n+\n   if (n)\n     n->clauses = c;\n   else if (gfc_current_ns->oacc_routine)"}, {"sha": "36715134a2cf768ccbe40cd92d8a8d7556b45c7d", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12df77ab6df4b91d4770240bcc4ab443e4bb18b9/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12df77ab6df4b91d4770240bcc4ab443e4bb18b9/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=12df77ab6df4b91d4770240bcc4ab443e4bb18b9", "patch": "@@ -639,20 +639,10 @@ decode_oacc_directive (void)\n \n   gfc_matching_function = false;\n \n-  if (gfc_pure (NULL))\n-    {\n-      gfc_error_now (\"OpenACC directives at %C may not appear in PURE \"\n-\t\t     \"procedures\");\n-      gfc_error_recovery ();\n-      return ST_NONE;\n-    }\n-\n   if (gfc_current_state () == COMP_FUNCTION\n       && gfc_current_block ()->result->ts.kind == -1)\n     spec_only = true;\n \n-  gfc_unset_implicit_pure (NULL);\n-\n   old_locus = gfc_current_locus;\n \n   /* General OpenACC directive matching: Instead of testing every possible\n@@ -661,6 +651,21 @@ decode_oacc_directive (void)\n \n   c = gfc_peek_ascii_char ();\n \n+  switch (c)\n+    {\n+    case 'r':\n+      matcha (\"routine\", gfc_match_oacc_routine, ST_OACC_ROUTINE);\n+      break;\n+    }\n+\n+  gfc_unset_implicit_pure (NULL);\n+  if (gfc_pure (NULL))\n+    {\n+      gfc_error_now (\"OpenACC directives other than ROUTINE may not appear in PURE \"\n+\t\t     \"procedures at %C\");\n+      goto error_handling;\n+    }\n+\n   switch (c)\n     {\n     case 'a':\n@@ -705,9 +710,6 @@ decode_oacc_directive (void)\n     case 'l':\n       matcha (\"loop\", gfc_match_oacc_loop, ST_OACC_LOOP);\n       break;\n-    case 'r':\n-      match (\"routine\", gfc_match_oacc_routine, ST_OACC_ROUTINE);\n-      break;\n     case 's':\n       matcha (\"serial loop\", gfc_match_oacc_serial_loop, ST_OACC_SERIAL_LOOP);\n       matcha (\"serial\", gfc_match_oacc_serial, ST_OACC_SERIAL);"}, {"sha": "97d92c3becc1ef705c76cb52996fd0d8a8d26f4b", "filename": "gcc/testsuite/gfortran.dg/goacc/pure-elemental-procedures-2.f90", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12df77ab6df4b91d4770240bcc4ab443e4bb18b9/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpure-elemental-procedures-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12df77ab6df4b91d4770240bcc4ab443e4bb18b9/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpure-elemental-procedures-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpure-elemental-procedures-2.f90?ref=12df77ab6df4b91d4770240bcc4ab443e4bb18b9", "patch": "@@ -0,0 +1,27 @@\n+pure elemental subroutine foo()\n+!$acc routine vector  ! { dg-error \"ROUTINE with GANG, WORKER, or VECTOR clause is not permitted in PURE procedure\" }\n+end\n+\n+elemental subroutine foo2()\n+!$acc routine (myfoo2) gang  ! { dg-error \"Invalid NAME 'myfoo2' in\" }\n+end\n+\n+elemental subroutine foo2a()\n+!$acc routine gang  ! { dg-error \"ROUTINE with GANG, WORKER, or VECTOR clause is not permitted in PURE procedure\" }\n+end\n+\n+pure subroutine foo3()\n+!$acc routine vector ! { dg-error \"ROUTINE with GANG, WORKER, or VECTOR clause is not permitted in PURE procedure\" }\n+end\n+\n+elemental impure subroutine foo4()\n+!$acc routine vector ! OK: impure\n+end\n+\n+pure subroutine foo5()\n+!$acc routine seq ! OK: seq\n+end\n+\n+pure subroutine foo6()\n+!$acc routine ! OK (implied 'seq')\n+end"}, {"sha": "90cca7c1024ba319daa27603bb7ab85a5654aab9", "filename": "libgomp/testsuite/libgomp.oacc-fortran/routine-10.f90", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12df77ab6df4b91d4770240bcc4ab443e4bb18b9/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Froutine-10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12df77ab6df4b91d4770240bcc4ab443e4bb18b9/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Froutine-10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Froutine-10.f90?ref=12df77ab6df4b91d4770240bcc4ab443e4bb18b9", "patch": "@@ -0,0 +1,52 @@\n+! { dg-do run }\n+!\n+module m\n+  implicit none\n+contains\n+  pure subroutine add_ps_routine(a, b, c)\n+    implicit none\n+    !$acc routine seq\n+    integer, intent(in)  :: a, b\n+    integer, intent(out) :: c\n+    integer, parameter :: n = 10\n+    integer :: i\n+\n+    do i = 1, n\n+       if (i .eq. 5) then\n+          c = a + b\n+       end if\n+    end do\n+  end subroutine add_ps_routine\n+\n+  elemental impure function add_ef(a, b) result(c)\n+    implicit none\n+    !$acc routine\n+    integer, intent(in)  :: a, b\n+    integer :: c\n+\n+    call add_ps_routine(a, b, c)\n+  end function add_ef\n+end module m\n+\n+program main\n+  use m\n+  implicit none\n+  integer, parameter :: n = 10\n+  integer, dimension(n) :: a_a\n+  integer, dimension(n) :: b_a\n+  integer, dimension(n) :: c_a\n+  integer :: i\n+\n+  a_a = [(3 * i, i = 1, n)]\n+  b_a = [(-2 * i, i = 1, n)]\n+  !$acc parallel copyin(a_a, b_a) copyout(c_a)\n+  !$acc loop gang\n+  do i = 1, n\n+     if (i .eq. 4) then\n+        c_a = add_ef(a_a, b_a)\n+     end if\n+  end do\n+  !$acc end parallel\n+  if (any (c_a /= [(i, i=1, 10)])) stop 1\n+  !print *, a\n+end program main"}]}