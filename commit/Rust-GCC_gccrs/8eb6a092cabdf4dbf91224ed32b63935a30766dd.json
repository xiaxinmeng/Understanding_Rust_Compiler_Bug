{"sha": "8eb6a092cabdf4dbf91224ed32b63935a30766dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGViNmEwOTJjYWJkZjRkYmY5MTIyNGVkMzJiNjM5MzVhMzA3NjZkZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2003-06-08T06:41:28Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-06-08T06:41:28Z"}, "message": "re PR pch/9830 (PCH not working on Solaris)\n\n\tPR pch/9830\n\t* ggc-common.c (HAVE_MMAP_FILE): Include sys/types.h\n\tif HAVE_MINCORE is defined.\n\t(MAP_FAILED): Define if not defined.\n\t(gt_pch_save): Test against MAP_FAILED.\n\t(gt_pch_restore): If HAVE_MINCORE, use MAP_FIXED to force\n\tthe mapping address to the preferred base after checking it\n\tis possible to do so. Test against MAP_FAILED.\n\t* configure.in: Test for the presence of mincore in libc.\n\t* config.in: Regenerate.\n\t* configure: Regenerate.\n\nFrom-SVN: r67614", "tree": {"sha": "88ecf2cfe1c6969a132fe87f02608ce70f8f7757", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88ecf2cfe1c6969a132fe87f02608ce70f8f7757"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8eb6a092cabdf4dbf91224ed32b63935a30766dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eb6a092cabdf4dbf91224ed32b63935a30766dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8eb6a092cabdf4dbf91224ed32b63935a30766dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eb6a092cabdf4dbf91224ed32b63935a30766dd/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2236275562e5a37fa3e8d14aa65d5708d5cc0dac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2236275562e5a37fa3e8d14aa65d5708d5cc0dac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2236275562e5a37fa3e8d14aa65d5708d5cc0dac"}], "stats": {"total": 71, "additions": 64, "deletions": 7}, "files": [{"sha": "4bddae4d12bd0244b402b5f42004db5603f728df", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb6a092cabdf4dbf91224ed32b63935a30766dd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb6a092cabdf4dbf91224ed32b63935a30766dd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8eb6a092cabdf4dbf91224ed32b63935a30766dd", "patch": "@@ -1,3 +1,18 @@\n+2003-06-07 \ufffdEric Botcazou \ufffd<ebotcazou@libertysurf.fr>\n+ \ufffd \ufffd \ufffd \ufffd \ufffd \ufffdUlrich Weigand  <Ulrich.Weigand@de.ibm.com>\n+\n+\tPR pch/9830\n+\t* ggc-common.c (HAVE_MMAP_FILE): Include sys/types.h\n+\tif HAVE_MINCORE is defined.\n+\t(MAP_FAILED): Define if not defined.\n+\t(gt_pch_save): Test against MAP_FAILED.\n+\t(gt_pch_restore): If HAVE_MINCORE, use MAP_FIXED to force\n+\tthe mapping address to the preferred base after checking it\n+\tis possible to do so. Test against MAP_FAILED.\n+\t* configure.in: Test for the presence of mincore in libc.\n+\t* config.in: Regenerate.\n+\t* configure: Regenerate.\n+\n 2003-06-07  Richard Henderson  <rth@redhat.com>\n \n \t* config/alpha/alpha.c (alpha_setup_incoming_varargs): Fix"}, {"sha": "76b29200d46d2a9380139751ae61528090c54acd", "filename": "gcc/config.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb6a092cabdf4dbf91224ed32b63935a30766dd/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb6a092cabdf4dbf91224ed32b63935a30766dd/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=8eb6a092cabdf4dbf91224ed32b63935a30766dd", "patch": "@@ -165,6 +165,9 @@\n /* Define if you have the mempcpy function.  */\n #undef HAVE_MEMPCPY\n \n+/* Define if you have the mincore function.  */\n+#undef HAVE_MINCORE\n+\n /* Define if you have the mmap function.  */\n #undef HAVE_MMAP\n "}, {"sha": "597fd80312b639d5794e974a191cfcdd03b73ca5", "filename": "gcc/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb6a092cabdf4dbf91224ed32b63935a30766dd/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb6a092cabdf4dbf91224ed32b63935a30766dd/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=8eb6a092cabdf4dbf91224ed32b63935a30766dd", "patch": "@@ -3726,7 +3726,7 @@ fi\n for ac_func in times clock dup2 kill getrlimit setrlimit atoll atoq \\\n \tsysconf strsignal putc_unlocked fputc_unlocked fputs_unlocked \\\n \tfwrite_unlocked fprintf_unlocked getrusage nl_langinfo lstat \\\n-        scandir alphasort gettimeofday mbstowcs wcswidth mmap\n+        scandir alphasort gettimeofday mbstowcs wcswidth mmap mincore\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n echo \"configure:3733: checking for $ac_func\" >&5"}, {"sha": "d7e08b90702899135659dc8b593eb70a0c77e8d4", "filename": "gcc/configure.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb6a092cabdf4dbf91224ed32b63935a30766dd/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb6a092cabdf4dbf91224ed32b63935a30766dd/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=8eb6a092cabdf4dbf91224ed32b63935a30766dd", "patch": "@@ -797,7 +797,7 @@ dnl gcc_AC_C_ENUM_BF_UNSIGNED\n AC_CHECK_FUNCS(times clock dup2 kill getrlimit setrlimit atoll atoq \\\n \tsysconf strsignal putc_unlocked fputc_unlocked fputs_unlocked \\\n \tfwrite_unlocked fprintf_unlocked getrusage nl_langinfo lstat \\\n-        scandir alphasort gettimeofday mbstowcs wcswidth mmap)\n+        scandir alphasort gettimeofday mbstowcs wcswidth mmap mincore)\n \n if test x$ac_cv_func_mbstowcs = xyes; then\n   AC_CACHE_CHECK(whether mbstowcs works, gcc_cv_func_mbstowcs_works,"}, {"sha": "4d1889c41d031c599638b15c12fcb8692de2e75c", "filename": "gcc/ggc-common.c", "status": "modified", "additions": 44, "deletions": 5, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb6a092cabdf4dbf91224ed32b63935a30766dd/gcc%2Fggc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb6a092cabdf4dbf91224ed32b63935a30766dd/gcc%2Fggc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-common.c?ref=8eb6a092cabdf4dbf91224ed32b63935a30766dd", "patch": "@@ -36,6 +36,14 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #ifdef HAVE_MMAP_FILE\n # include <sys/mman.h>\n+# ifdef HAVE_MINCORE\n+/* This is on Solaris.  */\n+#  include <sys/types.h> \n+# endif\n+#endif\n+\n+#ifndef MAP_FAILED\n+# define MAP_FAILED ((void *)-1)\n #endif\n \n #ifdef ENABLE_VALGRIND_CHECKING\n@@ -449,7 +457,7 @@ gt_pch_save (FILE *f)\n   mmi.preferred_base = mmap (NULL, mmi.size,\n \t\t\t     PROT_READ | PROT_WRITE, MAP_PRIVATE,\n \t\t\t     fileno (state.f), 0);\n-  if (mmi.preferred_base == (void *)-1)\n+  if (mmi.preferred_base == MAP_FAILED)\n     mmi.preferred_base = NULL;\n   else\n     munmap (mmi.preferred_base, mmi.size);\n@@ -567,10 +575,41 @@ gt_pch_restore (FILE *f)\n   addr = mmap (mmi.preferred_base, mmi.size,\n \t       PROT_READ | PROT_WRITE, MAP_PRIVATE,\n \t       fileno (f), mmi.offset);\n-#else\n-  addr = (void *)-1;\n-#endif\n-  if (addr == (void *)-1)\n+\n+#if HAVE_MINCORE\n+  if (addr != mmi.preferred_base)\n+    {\n+      size_t page_size = getpagesize();\n+      char one_byte;\n+\n+      if (addr != MAP_FAILED)\n+\tmunmap (addr, mmi.size);\n+\n+      /* We really want to be mapped at mmi.preferred_base\n+\t so we're going to resort to MAP_FIXED.  But before,\n+\t make sure that we can do so without destroying a\n+\t previously mapped area, by looping over all pages\n+\t that would be affected by the fixed mapping.  */\n+      errno = 0;\n+\n+      for (i = 0; i < mmi.size; i+= page_size)\n+\tif (mincore ((char *)mmi.preferred_base + i, page_size, (void *)&one_byte) == -1\n+\t    && errno == ENOMEM)\n+\t  continue; /* The page is not mapped.  */\n+\telse\n+\t  break;\n+\n+      if (i >= mmi.size)\n+\taddr = mmap (mmi.preferred_base, mmi.size, \n+\t\t     PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_FIXED,\n+\t\t     fileno (f), mmi.offset);\n+    }\n+#endif /* HAVE_MINCORE */\n+\n+#else /* HAVE_MMAP_FILE */\n+  addr = MAP_FAILED;\n+#endif /* HAVE_MMAP_FILE */\n+  if (addr == MAP_FAILED)\n     {\n       addr = xmalloc (mmi.size);\n       if (fseek (f, mmi.offset, SEEK_SET) != 0"}]}