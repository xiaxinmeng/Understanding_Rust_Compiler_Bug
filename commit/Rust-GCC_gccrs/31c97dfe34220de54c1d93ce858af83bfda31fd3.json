{"sha": "31c97dfe34220de54c1d93ce858af83bfda31fd3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFjOTdkZmUzNDIyMGRlNTRjMWQ5M2NlODU4YWY4M2JmZGEzMWZkMw==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2007-07-01T16:24:38Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2007-07-01T16:24:38Z"}, "message": "re PR fortran/32239 (optimize power in loops, use __builtin_powi instead of _gfortran_pow_r4_i4)\n\ngcc/fortran:\n\t\n2007-07-01  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\tPR fortran/32239\n\t* trans-expr.c (gfc_conv_power_op): Use builtin_powi for\n\treal**int4 powers.\n\t* f95-lang.c (gfc_init_builtin_functions): Add builtin_powi to the\n\tbuiltins table.\n\n\t\nlibgfortran:\n\t\n2007-07-01  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\tPR fortran/32239\n\t* Makefile.am: Don't generate real**int4 pow functions.\n\t* gfortran.map: Remove real**int4 pow symbols.\n\t* Makefile.in: Regenerated.\n\ntestsuite\n\n2007-07-01  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\tPR fortran/32239\n\t* gfortran.fortran-torture/execute/intrinsic_fraction_exponent.f90\n\t(test_4): Use proper test for floating point equality.\n\t(test_8): Likewise.\n\nFrom-SVN: r126175", "tree": {"sha": "15fabe5c15ab032733629223977c9d3590761024", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15fabe5c15ab032733629223977c9d3590761024"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31c97dfe34220de54c1d93ce858af83bfda31fd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31c97dfe34220de54c1d93ce858af83bfda31fd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31c97dfe34220de54c1d93ce858af83bfda31fd3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31c97dfe34220de54c1d93ce858af83bfda31fd3/comments", "author": null, "committer": null, "parents": [{"sha": "c7b6844eb5412f068bbb097d4129fbc5181a3d67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7b6844eb5412f068bbb097d4129fbc5181a3d67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7b6844eb5412f068bbb097d4129fbc5181a3d67"}], "stats": {"total": 125, "additions": 66, "deletions": 59}, "files": [{"sha": "d0fe5d714551619143aa7317ba351d593a217158", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31c97dfe34220de54c1d93ce858af83bfda31fd3/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31c97dfe34220de54c1d93ce858af83bfda31fd3/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=31c97dfe34220de54c1d93ce858af83bfda31fd3", "patch": "@@ -1,3 +1,11 @@\n+2007-07-01  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/32239\n+\t* trans-expr.c (gfc_conv_power_op): Use builtin_powi for\n+\treal**int4 powers.\n+\t* f95-lang.c (gfc_init_builtin_functions): Add builtin_powi to the\n+\tbuiltins table.\n+\n 2007-07-01  Janne Blomqvist  <jb@gcc.gnu.org>\n \n         * trans.h: Remove decls for 64-bit allocation functions."}, {"sha": "314fc3796d11e62074b9ac2cde1d9cbc3d42bffc", "filename": "gcc/fortran/f95-lang.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31c97dfe34220de54c1d93ce858af83bfda31fd3/gcc%2Ffortran%2Ff95-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31c97dfe34220de54c1d93ce858af83bfda31fd3/gcc%2Ffortran%2Ff95-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ff95-lang.c?ref=31c97dfe34220de54c1d93ce858af83bfda31fd3", "patch": "@@ -950,6 +950,13 @@ gfc_init_builtin_functions (void)\n \t\t      BUILT_IN_POW, \"pow\", true);\n   gfc_define_builtin (\"__builtin_powf\", mfunc_float[1], \n \t\t      BUILT_IN_POWF, \"powf\", true);\n+  gfc_define_builtin (\"__builtin_powil\", mfunc_longdouble[2], \n+\t\t      BUILT_IN_POWIL, \"powil\", true);\n+  gfc_define_builtin (\"__builtin_powi\", mfunc_double[2], \n+\t\t      BUILT_IN_POWI, \"powi\", true);\n+  gfc_define_builtin (\"__builtin_powif\", mfunc_float[2], \n+\t\t      BUILT_IN_POWIF, \"powif\", true);\n+\n \n   if (TARGET_C99_FUNCTIONS)\n     {"}, {"sha": "d70e4d53888b716bc0e90b715057e13404972ffc", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31c97dfe34220de54c1d93ce858af83bfda31fd3/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31c97dfe34220de54c1d93ce858af83bfda31fd3/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=31c97dfe34220de54c1d93ce858af83bfda31fd3", "patch": "@@ -780,9 +780,9 @@ gfc_conv_power_op (gfc_se * se, gfc_expr * expr)\n   gfc_add_block_to_block (&se->pre, &rse.pre);\n \n   if (expr->value.op.op2->ts.type == BT_INTEGER\n-\t && expr->value.op.op2->expr_type == EXPR_CONSTANT)\n+      && expr->value.op.op2->expr_type == EXPR_CONSTANT)\n     if (gfc_conv_cst_int_power (se, lse.expr, rse.expr))\n-      return;        \n+      return;\n \n   gfc_int4_type_node = gfc_get_int_type (4);\n \n@@ -852,7 +852,30 @@ gfc_conv_power_op (gfc_se * se, gfc_expr * expr)\n \t  break;\n \n \tcase BT_REAL:\n-\t  fndecl = gfor_fndecl_math_powi[kind][ikind].real;\n+\t  /* Use builtins for real ** int4.  */\n+\t  if (ikind == 0)\n+\t    {\n+\t      switch (kind)\n+\t\t{\n+\t\tcase 0:\n+\t\t  fndecl = built_in_decls[BUILT_IN_POWIF];\n+\t\t  break;\n+\t\t\n+\t\tcase 1:\n+\t\t  fndecl = built_in_decls[BUILT_IN_POWI];\n+\t\t  break;\n+\n+\t\tcase 2:\n+\t\tcase 3:\n+\t\t  fndecl = built_in_decls[BUILT_IN_POWIL];\n+\t\t  break;\n+\n+\t\tdefault:\n+\t\t  gcc_unreachable ();\n+\t\t}\n+\t    }\n+\t  else\n+\t    fndecl = gfor_fndecl_math_powi[kind][ikind].real;\n \t  break;\n \n \tcase BT_COMPLEX:"}, {"sha": "6a556cd57b8ca183fbbdcb181a5e9549ce5c060e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31c97dfe34220de54c1d93ce858af83bfda31fd3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31c97dfe34220de54c1d93ce858af83bfda31fd3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=31c97dfe34220de54c1d93ce858af83bfda31fd3", "patch": "@@ -1,3 +1,10 @@\n+2007-07-01  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/32239\n+\t* gfortran.fortran-torture/execute/intrinsic_fraction_exponent.f90\n+\t(test_4): Use proper test for floating point equality.\n+\t(test_8): Likewise.\n+\n 2007-06-29  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/32554"}, {"sha": "c469cb4340b33ccab1645d1480b90a67909cbd2f", "filename": "gcc/testsuite/gfortran.fortran-torture/execute/intrinsic_fraction_exponent.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31c97dfe34220de54c1d93ce858af83bfda31fd3/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_fraction_exponent.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31c97dfe34220de54c1d93ce858af83bfda31fd3/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_fraction_exponent.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_fraction_exponent.f90?ref=31c97dfe34220de54c1d93ce858af83bfda31fd3", "patch": "@@ -66,7 +66,7 @@ subroutine test_4(x)\n else\n   y = (y / 2.) * (2. ** (z + 1))\n end if\n-if (abs (x - y) .gt. abs(x * 1e-6)) call abort()\n+if (abs (x - y) .gt. spacing (max (abs (x), abs (y)))) call abort()\n end\n \n subroutine test_8(x)\n@@ -79,6 +79,6 @@ subroutine test_8(x)\n else\n   y = (y / 2._8) * (2._8 ** (z + 1))\n end if\n-if (abs (x - y) .gt. abs(x * 1e-6)) call abort()\n+if (abs (x - y) .gt. spacing (max (abs (x), abs(y)))) call abort()\n end\n "}, {"sha": "c3d2b7165af06e2f65fd81946e3b9d12a7087ce0", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31c97dfe34220de54c1d93ce858af83bfda31fd3/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31c97dfe34220de54c1d93ce858af83bfda31fd3/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=31c97dfe34220de54c1d93ce858af83bfda31fd3", "patch": "@@ -1,3 +1,10 @@\n+2007-07-01  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/32239\n+\t* Makefile.am: Don't generate real**int4 pow functions.\n+\t* gfortran.map: Remove real**int4 pow symbols.\n+\t* Makefile.in: Regenerated.\n+\n 2007-07-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/32554\n@@ -6,14 +13,14 @@\n \n 2007-07-01  Janne Blomqvist  <jb@gcc.gnu.org>\n \n-        * runtime/memory.c (internal_realloc): Use index_type for size\n-        argument instead of GFC_INTEGER_4.\n-        (allocate_array): Likewise.\n-        (allocate): Likewise, add ifdef around unnecessary check.\n-        (internal_reallo64): Remove.\n-        (allocate_array64): Remove.\n-        (allocate64): Remove.\n-        * gfortran.map: Remove symbols for 64-bit allocation functions.\n+\t* runtime/memory.c (internal_realloc): Use index_type for size\n+\targument instead of GFC_INTEGER_4.\n+\t(allocate_array): Likewise.\n+\t(allocate): Likewise, add ifdef around unnecessary check.\n+\t(internal_reallo64): Remove.\n+\t(allocate_array64): Remove.\n+\t(allocate64): Remove.\n+\t* gfortran.map: Remove symbols for 64-bit allocation functions.\n \n 2007-06-29  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n "}, {"sha": "0e7453001728e4d8446a7a464a08154dd5f363fe", "filename": "libgfortran/Makefile.am", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31c97dfe34220de54c1d93ce858af83bfda31fd3/libgfortran%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31c97dfe34220de54c1d93ce858af83bfda31fd3/libgfortran%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.am?ref=31c97dfe34220de54c1d93ce858af83bfda31fd3", "patch": "@@ -430,10 +430,6 @@ i_pow_c = \\\n $(srcdir)/generated/pow_i4_i4.c \\\n $(srcdir)/generated/pow_i8_i4.c \\\n $(srcdir)/generated/pow_i16_i4.c \\\n-$(srcdir)/generated/pow_r4_i4.c \\\n-$(srcdir)/generated/pow_r8_i4.c \\\n-$(srcdir)/generated/pow_r10_i4.c \\\n-$(srcdir)/generated/pow_r16_i4.c \\\n $(srcdir)/generated/pow_c4_i4.c \\\n $(srcdir)/generated/pow_c8_i4.c \\\n $(srcdir)/generated/pow_c10_i4.c \\"}, {"sha": "c2acb1353a7fe7217d30a8b38bf314694cf94776", "filename": "libgfortran/Makefile.in", "status": "modified", "additions": 1, "deletions": 38, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31c97dfe34220de54c1d93ce858af83bfda31fd3/libgfortran%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31c97dfe34220de54c1d93ce858af83bfda31fd3/libgfortran%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.in?ref=31c97dfe34220de54c1d93ce858af83bfda31fd3", "patch": "@@ -158,8 +158,7 @@ am__objects_25 = nearest_r4.lo nearest_r8.lo nearest_r10.lo \\\n \tnearest_r16.lo\n am__objects_26 = set_exponent_r4.lo set_exponent_r8.lo \\\n \tset_exponent_r10.lo set_exponent_r16.lo\n-am__objects_27 = pow_i4_i4.lo pow_i8_i4.lo pow_i16_i4.lo pow_r4_i4.lo \\\n-\tpow_r8_i4.lo pow_r10_i4.lo pow_r16_i4.lo pow_c4_i4.lo \\\n+am__objects_27 = pow_i4_i4.lo pow_i8_i4.lo pow_i16_i4.lo pow_c4_i4.lo \\\n \tpow_c8_i4.lo pow_c10_i4.lo pow_c16_i4.lo pow_i4_i8.lo \\\n \tpow_i8_i8.lo pow_i16_i8.lo pow_r4_i8.lo pow_r8_i8.lo \\\n \tpow_r10_i8.lo pow_r16_i8.lo pow_c4_i8.lo pow_c8_i8.lo \\\n@@ -816,10 +815,6 @@ i_pow_c = \\\n $(srcdir)/generated/pow_i4_i4.c \\\n $(srcdir)/generated/pow_i8_i4.c \\\n $(srcdir)/generated/pow_i16_i4.c \\\n-$(srcdir)/generated/pow_r4_i4.c \\\n-$(srcdir)/generated/pow_r8_i4.c \\\n-$(srcdir)/generated/pow_r10_i4.c \\\n-$(srcdir)/generated/pow_r16_i4.c \\\n $(srcdir)/generated/pow_c4_i4.c \\\n $(srcdir)/generated/pow_c8_i4.c \\\n $(srcdir)/generated/pow_c10_i4.c \\\n@@ -1412,16 +1407,12 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pow_i8_i4.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pow_i8_i8.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pow_r10_i16.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pow_r10_i4.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pow_r10_i8.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pow_r16_i16.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pow_r16_i4.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pow_r16_i8.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pow_r4_i16.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pow_r4_i4.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pow_r4_i8.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pow_r8_i16.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pow_r8_i4.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pow_r8_i8.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/product_c10.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/product_c16.Plo@am__quote@\n@@ -3786,34 +3777,6 @@ pow_i16_i4.lo: $(srcdir)/generated/pow_i16_i4.c\n @AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n @am__fastdepCC_FALSE@\t$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pow_i16_i4.lo `test -f '$(srcdir)/generated/pow_i16_i4.c' || echo '$(srcdir)/'`$(srcdir)/generated/pow_i16_i4.c\n \n-pow_r4_i4.lo: $(srcdir)/generated/pow_r4_i4.c\n-@am__fastdepCC_TRUE@\tif $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pow_r4_i4.lo -MD -MP -MF \"$(DEPDIR)/pow_r4_i4.Tpo\" -c -o pow_r4_i4.lo `test -f '$(srcdir)/generated/pow_r4_i4.c' || echo '$(srcdir)/'`$(srcdir)/generated/pow_r4_i4.c; \\\n-@am__fastdepCC_TRUE@\tthen mv -f \"$(DEPDIR)/pow_r4_i4.Tpo\" \"$(DEPDIR)/pow_r4_i4.Plo\"; else rm -f \"$(DEPDIR)/pow_r4_i4.Tpo\"; exit 1; fi\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='$(srcdir)/generated/pow_r4_i4.c' object='pow_r4_i4.lo' libtool=yes @AMDEPBACKSLASH@\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n-@am__fastdepCC_FALSE@\t$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pow_r4_i4.lo `test -f '$(srcdir)/generated/pow_r4_i4.c' || echo '$(srcdir)/'`$(srcdir)/generated/pow_r4_i4.c\n-\n-pow_r8_i4.lo: $(srcdir)/generated/pow_r8_i4.c\n-@am__fastdepCC_TRUE@\tif $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pow_r8_i4.lo -MD -MP -MF \"$(DEPDIR)/pow_r8_i4.Tpo\" -c -o pow_r8_i4.lo `test -f '$(srcdir)/generated/pow_r8_i4.c' || echo '$(srcdir)/'`$(srcdir)/generated/pow_r8_i4.c; \\\n-@am__fastdepCC_TRUE@\tthen mv -f \"$(DEPDIR)/pow_r8_i4.Tpo\" \"$(DEPDIR)/pow_r8_i4.Plo\"; else rm -f \"$(DEPDIR)/pow_r8_i4.Tpo\"; exit 1; fi\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='$(srcdir)/generated/pow_r8_i4.c' object='pow_r8_i4.lo' libtool=yes @AMDEPBACKSLASH@\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n-@am__fastdepCC_FALSE@\t$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pow_r8_i4.lo `test -f '$(srcdir)/generated/pow_r8_i4.c' || echo '$(srcdir)/'`$(srcdir)/generated/pow_r8_i4.c\n-\n-pow_r10_i4.lo: $(srcdir)/generated/pow_r10_i4.c\n-@am__fastdepCC_TRUE@\tif $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pow_r10_i4.lo -MD -MP -MF \"$(DEPDIR)/pow_r10_i4.Tpo\" -c -o pow_r10_i4.lo `test -f '$(srcdir)/generated/pow_r10_i4.c' || echo '$(srcdir)/'`$(srcdir)/generated/pow_r10_i4.c; \\\n-@am__fastdepCC_TRUE@\tthen mv -f \"$(DEPDIR)/pow_r10_i4.Tpo\" \"$(DEPDIR)/pow_r10_i4.Plo\"; else rm -f \"$(DEPDIR)/pow_r10_i4.Tpo\"; exit 1; fi\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='$(srcdir)/generated/pow_r10_i4.c' object='pow_r10_i4.lo' libtool=yes @AMDEPBACKSLASH@\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n-@am__fastdepCC_FALSE@\t$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pow_r10_i4.lo `test -f '$(srcdir)/generated/pow_r10_i4.c' || echo '$(srcdir)/'`$(srcdir)/generated/pow_r10_i4.c\n-\n-pow_r16_i4.lo: $(srcdir)/generated/pow_r16_i4.c\n-@am__fastdepCC_TRUE@\tif $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pow_r16_i4.lo -MD -MP -MF \"$(DEPDIR)/pow_r16_i4.Tpo\" -c -o pow_r16_i4.lo `test -f '$(srcdir)/generated/pow_r16_i4.c' || echo '$(srcdir)/'`$(srcdir)/generated/pow_r16_i4.c; \\\n-@am__fastdepCC_TRUE@\tthen mv -f \"$(DEPDIR)/pow_r16_i4.Tpo\" \"$(DEPDIR)/pow_r16_i4.Plo\"; else rm -f \"$(DEPDIR)/pow_r16_i4.Tpo\"; exit 1; fi\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='$(srcdir)/generated/pow_r16_i4.c' object='pow_r16_i4.lo' libtool=yes @AMDEPBACKSLASH@\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n-@am__fastdepCC_FALSE@\t$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pow_r16_i4.lo `test -f '$(srcdir)/generated/pow_r16_i4.c' || echo '$(srcdir)/'`$(srcdir)/generated/pow_r16_i4.c\n-\n pow_c4_i4.lo: $(srcdir)/generated/pow_c4_i4.c\n @am__fastdepCC_TRUE@\tif $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pow_c4_i4.lo -MD -MP -MF \"$(DEPDIR)/pow_c4_i4.Tpo\" -c -o pow_c4_i4.lo `test -f '$(srcdir)/generated/pow_c4_i4.c' || echo '$(srcdir)/'`$(srcdir)/generated/pow_c4_i4.c; \\\n @am__fastdepCC_TRUE@\tthen mv -f \"$(DEPDIR)/pow_c4_i4.Tpo\" \"$(DEPDIR)/pow_c4_i4.Plo\"; else rm -f \"$(DEPDIR)/pow_c4_i4.Tpo\"; exit 1; fi"}, {"sha": "6aebef3cb82edfe41d986c1a5565edd980589188", "filename": "libgfortran/gfortran.map", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31c97dfe34220de54c1d93ce858af83bfda31fd3/libgfortran%2Fgfortran.map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31c97dfe34220de54c1d93ce858af83bfda31fd3/libgfortran%2Fgfortran.map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgfortran.map?ref=31c97dfe34220de54c1d93ce858af83bfda31fd3", "patch": "@@ -526,16 +526,12 @@ GFORTRAN_1.0 {\n     _gfortran_pow_i8_i4;\n     _gfortran_pow_i8_i8;\n     _gfortran_pow_r10_i16;\n-    _gfortran_pow_r10_i4;\n     _gfortran_pow_r10_i8;\n     _gfortran_pow_r16_i16;\n-    _gfortran_pow_r16_i4;\n     _gfortran_pow_r16_i8;\n     _gfortran_pow_r4_i16;\n-    _gfortran_pow_r4_i4;\n     _gfortran_pow_r4_i8;\n     _gfortran_pow_r8_i16;\n-    _gfortran_pow_r8_i4;\n     _gfortran_pow_r8_i8;\n     _gfortran_product_c10;\n     _gfortran_product_c16;"}]}