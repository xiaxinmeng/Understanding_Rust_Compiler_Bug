{"sha": "e2f97e264e2e7806c47e31e3f8048d66d7b8623c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJmOTdlMjY0ZTJlNzgwNmM0N2UzMWUzZjgwNDhkNjZkN2I4NjIzYw==", "commit": {"author": {"name": "Krister Walfridsson", "email": "cato@df.lth.se", "date": "2002-09-08T16:06:18Z"}, "committer": {"name": "Krister Walfridsson", "email": "kristerw@gcc.gnu.org", "date": "2002-09-08T16:06:18Z"}, "message": "netbsd.h (INITIALIZE_TRAMPOLINE): Redefine.\n\n\t* config/arm/netbsd.h (INITIALIZE_TRAMPOLINE): Redefine.\n\t(CLEAR_INSN_CACHE): Define.\n\nFrom-SVN: r56954", "tree": {"sha": "d838ecbeca067721e56611eb4c15aa431390ce3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d838ecbeca067721e56611eb4c15aa431390ce3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2f97e264e2e7806c47e31e3f8048d66d7b8623c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2f97e264e2e7806c47e31e3f8048d66d7b8623c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2f97e264e2e7806c47e31e3f8048d66d7b8623c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2f97e264e2e7806c47e31e3f8048d66d7b8623c/comments", "author": null, "committer": null, "parents": [{"sha": "f69257d6afd477bd75de85db1019a0c10115b6df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f69257d6afd477bd75de85db1019a0c10115b6df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f69257d6afd477bd75de85db1019a0c10115b6df"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "8dc77e2b08cdae0d33ad3e921ef821219dd4b892", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2f97e264e2e7806c47e31e3f8048d66d7b8623c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2f97e264e2e7806c47e31e3f8048d66d7b8623c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e2f97e264e2e7806c47e31e3f8048d66d7b8623c", "patch": "@@ -1,3 +1,8 @@\n+2002-09-08  Krister Walfridsson  <cato@df.lth.se>\n+\n+\t* config/arm/netbsd.h (INITIALIZE_TRAMPOLINE): Redefine.\n+\t(CLEAR_INSN_CACHE): Define.\n+\n 2002-09-08  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* basic-block.h: Fix comment formatting."}, {"sha": "e5582673671eb3ffaa02a7177814d3780a937139", "filename": "gcc/config/arm/netbsd.h", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2f97e264e2e7806c47e31e3f8048d66d7b8623c/gcc%2Fconfig%2Farm%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2f97e264e2e7806c47e31e3f8048d66d7b8623c/gcc%2Fconfig%2Farm%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fnetbsd.h?ref=e2f97e264e2e7806c47e31e3f8048d66d7b8623c", "patch": "@@ -147,3 +147,30 @@ Boston, MA 02111-1307, USA.  */\n    requirements.  */\n #undef  DEFAULT_STRUCTURE_SIZE_BOUNDARY\n #define DEFAULT_STRUCTURE_SIZE_BOUNDARY 8\n+\n+/* Emit code to set up a trampoline and synchronise the caches.  */\n+#undef  INITIALIZE_TRAMPOLINE\n+#define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT)                      \\\n+{                                                                      \\\n+  emit_move_insn (gen_rtx (MEM, SImode, plus_constant ((TRAMP), 8)),   \\\n+                 (CXT));                                               \\\n+  emit_move_insn (gen_rtx (MEM, SImode, plus_constant ((TRAMP), 12)),  \\\n+                 (FNADDR));                                            \\\n+  emit_library_call (gen_rtx_SYMBOL_REF (Pmode, \"__clear_cache\"),      \\\n+                    0, VOIDmode, 2, TRAMP, Pmode,                      \\\n+                    plus_constant (TRAMP, TRAMPOLINE_SIZE), Pmode);    \\\n+}\n+\n+/* Clear the instruction cache from `BEG' to `END'.  This makes a\n+   call to the ARM32_SYNC_ICACHE architecture specific syscall.  */\n+#define CLEAR_INSN_CACHE(BEG, END)                                     \\\n+{                                                                      \\\n+  extern int sysarch(int number, void *args);                          \\\n+  struct {                                                             \\\n+    unsigned int  addr;                                                \\\n+    int           len;                                                 \\\n+  } s;                                                                 \\\n+  s.addr = (unsigned int)(BEG);                                        \\\n+  s.len = (END) - (BEG);                                               \\\n+  (void)sysarch(0, &s);                                                \\\n+}"}]}