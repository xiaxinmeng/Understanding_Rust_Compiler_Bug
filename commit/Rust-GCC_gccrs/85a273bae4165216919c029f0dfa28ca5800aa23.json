{"sha": "85a273bae4165216919c029f0dfa28ca5800aa23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVhMjczYmFlNDE2NTIxNjkxOWMwMjlmMGRmYTI4Y2E1ODAwYWEyMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-03-16T20:03:46Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-16T20:03:46Z"}, "message": "re PR c++/48115 (internal compiler error: in type_has_nontrivial_copy_init, at cp/tree.c:2482)\n\n\tPR c++/48115\n\t* call.c (convert_arg_to_ellipsis): Handle incomplete type.\n\nFrom-SVN: r171066", "tree": {"sha": "261f49586db7d14d30580f1d98f41222c349990b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/261f49586db7d14d30580f1d98f41222c349990b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85a273bae4165216919c029f0dfa28ca5800aa23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85a273bae4165216919c029f0dfa28ca5800aa23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85a273bae4165216919c029f0dfa28ca5800aa23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85a273bae4165216919c029f0dfa28ca5800aa23/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "51fd6b9057dd38a0566c86df2dcda8ace597eed9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51fd6b9057dd38a0566c86df2dcda8ace597eed9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51fd6b9057dd38a0566c86df2dcda8ace597eed9"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "336c22e808c928bb3b0c3a4a4fe840af2d14f930", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85a273bae4165216919c029f0dfa28ca5800aa23/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85a273bae4165216919c029f0dfa28ca5800aa23/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=85a273bae4165216919c029f0dfa28ca5800aa23", "patch": "@@ -1,3 +1,8 @@\n+2011-03-16  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/48115\n+\t* call.c (convert_arg_to_ellipsis): Handle incomplete type.\n+\n 2011-03-16  Jason Merrill  <jason@redhat.com>\n \n \t* parser.c (cp_parser_abort_tentative_parse): Make sure we haven't"}, {"sha": "f75c2485e31476ea8419698e4b33e87483de5a4b", "filename": "gcc/cp/call.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85a273bae4165216919c029f0dfa28ca5800aa23/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85a273bae4165216919c029f0dfa28ca5800aa23/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=85a273bae4165216919c029f0dfa28ca5800aa23", "patch": "@@ -5671,6 +5671,10 @@ convert_arg_to_ellipsis (tree arg)\n   arg_type = TREE_TYPE (arg);\n \n   if (arg != error_mark_node\n+      /* In a template (or ill-formed code), we can have an incomplete type\n+\t even after require_complete_type, in which case we don't know\n+\t whether it has trivial copy or not.  */\n+      && COMPLETE_TYPE_P (arg_type)\n       && (type_has_nontrivial_copy_init (arg_type)\n \t  || TYPE_HAS_NONTRIVIAL_DESTRUCTOR (arg_type)))\n     {"}, {"sha": "ca82c7409c7547f40ef8bfa87c04801fd4277edd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85a273bae4165216919c029f0dfa28ca5800aa23/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85a273bae4165216919c029f0dfa28ca5800aa23/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=85a273bae4165216919c029f0dfa28ca5800aa23", "patch": "@@ -1,3 +1,7 @@\n+2011-03-16  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/template/incomplete6.C: New.\n+\n 2011-03-16  Jeff Law <law@redhat.com>\n \n \t* gcc.dg/tree-ssa/vrp55.c: New test."}, {"sha": "7138b6a3b417655b6d193dec09f1d03bc29d4d62", "filename": "gcc/testsuite/g++.dg/template/incomplete6.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85a273bae4165216919c029f0dfa28ca5800aa23/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85a273bae4165216919c029f0dfa28ca5800aa23/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete6.C?ref=85a273bae4165216919c029f0dfa28ca5800aa23", "patch": "@@ -0,0 +1,22 @@\n+// PR c++/48115\n+\n+template<typename> struct templ { };\n+\n+template<typename T> T declval();\n+\n+typedef int (*F2)(...);\n+\n+template<int> struct Int { };\n+\n+template<typename F, typename T>\n+struct S\n+{\n+    template<typename A>\n+        Int<sizeof( declval<F>()(T()) )>\n+        f(A);\n+};\n+\n+int main()\n+{\n+    S<F2, templ<int> >().f(0);\n+}"}]}