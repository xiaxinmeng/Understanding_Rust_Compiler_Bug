{"sha": "7364fdd8e0b52133f3cd8e49d72f465ae6128118", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM2NGZkZDhlMGI1MjEzM2YzY2Q4ZTQ5ZDcyZjQ2NWFlNjEyODExOA==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-08-07T20:37:26Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-08-07T20:37:26Z"}, "message": "cppinit.c (cpp_finish): Pop the final buffer without comment.\n\n\t* cppinit.c (cpp_finish): Pop the final buffer without comment.\n\t* cpplex.c (_cpp_lex_token): Don't pop the final buffer; and\n\ttake care to avoid multiple no-newline at EOF warnings in that\n\tcase.\n\nFrom-SVN: r44701", "tree": {"sha": "92814bff08429f0e6508827020d533983932b668", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92814bff08429f0e6508827020d533983932b668"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7364fdd8e0b52133f3cd8e49d72f465ae6128118", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7364fdd8e0b52133f3cd8e49d72f465ae6128118", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7364fdd8e0b52133f3cd8e49d72f465ae6128118", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7364fdd8e0b52133f3cd8e49d72f465ae6128118/comments", "author": null, "committer": null, "parents": [{"sha": "570a98eb7c116ea107e1c2167da244782cc4b988", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/570a98eb7c116ea107e1c2167da244782cc4b988", "html_url": "https://github.com/Rust-GCC/gccrs/commit/570a98eb7c116ea107e1c2167da244782cc4b988"}], "stats": {"total": 37, "additions": 25, "deletions": 12}, "files": [{"sha": "b995be20fa5ab3ac85e54849950bf46cc42aeb86", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7364fdd8e0b52133f3cd8e49d72f465ae6128118/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7364fdd8e0b52133f3cd8e49d72f465ae6128118/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7364fdd8e0b52133f3cd8e49d72f465ae6128118", "patch": "@@ -1,3 +1,10 @@\n+2001-08-07  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* cppinit.c (cpp_finish): Pop the final buffer without comment.\n+\t* cpplex.c (_cpp_lex_token): Don't pop the final buffer; and\n+\ttake care to avoid multiple no-newline at EOF warnings in that\n+\tcase.\n+\n Tue Aug  7 22:18:06 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* calls.c (expand_call): Do not emit INSN_SETJMP note."}, {"sha": "5a3873464fcbe01035182d177d588ce6d6bdd876", "filename": "gcc/cppinit.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7364fdd8e0b52133f3cd8e49d72f465ae6128118/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7364fdd8e0b52133f3cd8e49d72f465ae6128118/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=7364fdd8e0b52133f3cd8e49d72f465ae6128118", "patch": "@@ -1010,12 +1010,13 @@ void\n cpp_finish (pfile)\n      cpp_reader *pfile;\n {\n-  if (CPP_BUFFER (pfile))\n-    {\n-      cpp_ice (pfile, \"buffers still stacked in cpp_finish\");\n-      while (CPP_BUFFER (pfile))\n-\t_cpp_pop_buffer (pfile);\n-    }\n+  /* cpplex.c leaves the final buffer on the stack.  This it so that\n+     it returns an unending stream of CPP_EOFs to the client.  If we\n+     popped the buffer, we'd derefence a NULL buffer pointer and\n+     segfault.  It's nice to allow the client to do worry-free excess\n+     cpp_get_token calls.  */\n+  while (pfile->buffer)\n+    _cpp_pop_buffer (pfile);\n \n   /* Don't write the deps file if preprocessing has failed.  */\n   if (CPP_OPTION (pfile, print_deps) && pfile->errors == 0)"}, {"sha": "5e0aa5a4f8549c848632240d4329af7bfbe2db39", "filename": "gcc/cpplex.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7364fdd8e0b52133f3cd8e49d72f465ae6128118/gcc%2Fcpplex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7364fdd8e0b52133f3cd8e49d72f465ae6128118/gcc%2Fcpplex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplex.c?ref=7364fdd8e0b52133f3cd8e49d72f465ae6128118", "patch": "@@ -897,21 +897,26 @@ _cpp_lex_token (pfile, result)\n \tpfile->line--;\n       else if (! pfile->state.parsing_args)\n \t{\n-\t  unsigned char ret = pfile->buffer->return_at_eof;\n-\n \t  /* Non-empty files should end in a newline.  Don't warn for\n \t     command line and _Pragma buffers.  */\n \t  if (pfile->lexer_pos.col != 0)\n \t    {\n-\t      /* Account for the missing \\n.  */\n+\t      /* Account for the missing \\n, prevent multiple warnings.  */\n \t      pfile->line++;\n+\t      pfile->lexer_pos.col = 0;\n \t      if (!buffer->from_stage3)\n \t\tcpp_pedwarn (pfile, \"no newline at end of file\");\n \t    }\n \n-\t  _cpp_pop_buffer (pfile);\n-\t  if (pfile->buffer && !ret)\n-\t    goto next_token;\n+\t  /* Don't pop the last file.  */\n+\t  if (buffer->prev)\n+\t    {\n+\t      unsigned char stop = buffer->return_at_eof;\n+\n+\t      _cpp_pop_buffer (pfile);\n+\t      if (!stop)\n+\t\tgoto next_token;\n+\t    }\n \t}\n       result->type = CPP_EOF;\n       return;"}]}