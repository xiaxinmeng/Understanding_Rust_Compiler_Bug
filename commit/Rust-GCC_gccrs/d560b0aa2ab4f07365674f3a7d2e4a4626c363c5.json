{"sha": "d560b0aa2ab4f07365674f3a7d2e4a4626c363c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU2MGIwYWEyYWI0ZjA3MzY1Njc0ZjNhN2QyZTRhNDYyNmMzNjNjNQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2004-02-02T12:20:52Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-02-02T12:20:52Z"}, "message": "sparc.c (function_arg_slotno): Align TImode arguments on a 16-byte boundary in the parameter array if ARCH64.\n\n\t* config/sparc/sparc.c (function_arg_slotno): Align TImode\n\targuments on a 16-byte boundary in the parameter array if ARCH64.\n\tSplit handling of TFmode.\n\nFrom-SVN: r77107", "tree": {"sha": "762a44f8ce2364a2c1a05d1beb19c3b6dfa48f3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/762a44f8ce2364a2c1a05d1beb19c3b6dfa48f3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d560b0aa2ab4f07365674f3a7d2e4a4626c363c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d560b0aa2ab4f07365674f3a7d2e4a4626c363c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d560b0aa2ab4f07365674f3a7d2e4a4626c363c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d560b0aa2ab4f07365674f3a7d2e4a4626c363c5/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6f626d1bdf012ca311c77ec48194d1add0e5e052", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f626d1bdf012ca311c77ec48194d1add0e5e052", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f626d1bdf012ca311c77ec48194d1add0e5e052"}], "stats": {"total": 59, "additions": 54, "deletions": 5}, "files": [{"sha": "c750598ca5b9072b3b354c33fea5ad23aa999578", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d560b0aa2ab4f07365674f3a7d2e4a4626c363c5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d560b0aa2ab4f07365674f3a7d2e4a4626c363c5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d560b0aa2ab4f07365674f3a7d2e4a4626c363c5", "patch": "@@ -1,3 +1,9 @@\n+2004-02-02  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* config/sparc/sparc.c (function_arg_slotno): Align TImode\n+\targuments on a 16-byte boundary in the parameter array if ARCH64.\n+\tSplit handling of TFmode.\n+\n 2004-02-02  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* rtlanal.c (reg_overlap_mentioned_p) [!ENABLE_CHECKING]:"}, {"sha": "e7dd4fa13fa4a80a7f13ef3f765e587a15b18fb7", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d560b0aa2ab4f07365674f3a7d2e4a4626c363c5/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d560b0aa2ab4f07365674f3a7d2e4a4626c363c5/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=d560b0aa2ab4f07365674f3a7d2e4a4626c363c5", "patch": "@@ -4979,19 +4979,27 @@ function_arg_slotno (const struct sparc_args *cum, enum machine_mode mode,\n \t See emit_call_1.  */\n       return -1;\n \n+    case TImode : case CTImode :\n+      if (TARGET_ARCH64 && (slotno & 1) != 0)\n+\tslotno++, *ppadding = 1;\n+      /* fallthrough */\n+\n     case QImode : case CQImode :\n     case HImode : case CHImode :\n     case SImode : case CSImode :\n     case DImode : case CDImode :\n-    case TImode : case CTImode :\n       if (slotno >= SPARC_INT_ARG_MAX)\n \treturn -1;\n       regno = regbase + slotno;\n       break;\n \n+    case TFmode : case TCmode :\n+      if (TARGET_ARCH64 && (slotno & 1) != 0)\n+\tslotno++, *ppadding = 1;\n+      /* fallthrough */\n+\n     case SFmode : case SCmode :\n     case DFmode : case DCmode :\n-    case TFmode : case TCmode :\n       if (TARGET_ARCH32)\n \t{\n \t  if (slotno >= SPARC_INT_ARG_MAX)\n@@ -5000,9 +5008,6 @@ function_arg_slotno (const struct sparc_args *cum, enum machine_mode mode,\n \t}\n       else\n \t{\n-\t  if ((mode == TFmode || mode == TCmode)\n-\t      && (slotno & 1) != 0)\n-\t    slotno++, *ppadding = 1;\n \t  if (TARGET_FPU && named)\n \t    {\n \t      if (slotno >= SPARC_FP_ARG_MAX)"}, {"sha": "c748d780dc39290d305b425503992bcc8a2f81fc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d560b0aa2ab4f07365674f3a7d2e4a4626c363c5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d560b0aa2ab4f07365674f3a7d2e4a4626c363c5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d560b0aa2ab4f07365674f3a7d2e4a4626c363c5", "patch": "@@ -1,3 +1,7 @@\n+2004-02-02  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.dg/titype-1.c: New test.\n+\n 2004-02-01  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n \n \tPR c++/13957"}, {"sha": "ab38f1fd272d74c0e3d1cbd30e9581847ac5a513", "filename": "gcc/testsuite/gcc.dg/titype-1.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d560b0aa2ab4f07365674f3a7d2e4a4626c363c5/gcc%2Ftestsuite%2Fgcc.dg%2Ftitype-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d560b0aa2ab4f07365674f3a7d2e4a4626c363c5/gcc%2Ftestsuite%2Fgcc.dg%2Ftitype-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftitype-1.c?ref=d560b0aa2ab4f07365674f3a7d2e4a4626c363c5", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+\n+/* Not all platforms support TImode integers.  */\n+#if defined(__LP64__) || defined(__sparc__)\n+typedef int TItype __attribute__ ((mode (TI)));  /* { dg-error \"no data type for mode\" \"TI\" { target sparc-sun-solaris2.[0-6]* } } */\n+#else\n+typedef long TItype;\n+#endif\n+\n+#include <stdarg.h>\n+\n+extern void abort(void);\n+\n+\n+void foo(int i, ...)\n+{\n+  TItype q;\n+  va_list va;\n+\n+  va_start(va, i);\n+  q = va_arg(va, TItype);\n+  va_end(va);\n+\n+  if (q != 5)\n+    abort();\n+}\n+\n+int main(void)\n+{\n+  TItype q = 5;\n+\n+  foo(1, q);\n+  return 0;\n+}"}]}