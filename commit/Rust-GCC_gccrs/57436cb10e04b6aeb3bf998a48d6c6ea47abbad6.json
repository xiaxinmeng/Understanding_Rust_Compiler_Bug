{"sha": "57436cb10e04b6aeb3bf998a48d6c6ea47abbad6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc0MzZjYjEwZTA0YjZhZWIzYmY5OThhNDhkNmM2ZWE0N2FiYmFkNg==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2019-08-06T00:08:45Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2019-08-06T00:08:45Z"}, "message": "PR c++/60517 - warning/error for taking address of member of a temporary object\n\ntestsuite/ChangeLog:\n\t* g++.dg/pr60517.C: New test.\n\nFrom-SVN: r274130", "tree": {"sha": "89050b41895e1b922010c11ed7be0b3b26242067", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89050b41895e1b922010c11ed7be0b3b26242067"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57436cb10e04b6aeb3bf998a48d6c6ea47abbad6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57436cb10e04b6aeb3bf998a48d6c6ea47abbad6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57436cb10e04b6aeb3bf998a48d6c6ea47abbad6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57436cb10e04b6aeb3bf998a48d6c6ea47abbad6/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "05989533687016da302b801efe1ba30710252609", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05989533687016da302b801efe1ba30710252609", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05989533687016da302b801efe1ba30710252609"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "4b871aaa9a42e8f51b4087479332726418169b2b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57436cb10e04b6aeb3bf998a48d6c6ea47abbad6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57436cb10e04b6aeb3bf998a48d6c6ea47abbad6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=57436cb10e04b6aeb3bf998a48d6c6ea47abbad6", "patch": "@@ -1,3 +1,8 @@\n+2019-08-05  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c++/60517\n+\t* g++.dg/pr60517.C: New test.\n+\n 2019-08-02  Tom Honermann  <tom@honermann.net>\n \n \tPR c++/88095"}, {"sha": "2997fa1cf52f5f4769928323ca745f8e7676968e", "filename": "gcc/testsuite/g++.dg/pr60517.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57436cb10e04b6aeb3bf998a48d6c6ea47abbad6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr60517.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57436cb10e04b6aeb3bf998a48d6c6ea47abbad6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr60517.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr60517.C?ref=57436cb10e04b6aeb3bf998a48d6c6ea47abbad6", "patch": "@@ -0,0 +1,22 @@\n+// PR c++/60517 - warning/error for taking address of member of a temporary\n+// object\n+// { dg-do compile }\n+\n+class B\n+{\n+public:\n+  double x[2];\n+};\n+\n+class A\n+{\n+  B b;\n+public:\n+  B getB () { return b; }\n+};\n+\n+double foo (A a)\n+{\n+  double * x = &(a.getB().x[0]);   // { dg-error \"taking address of rvalue\" }\n+  return x[0];\n+}"}]}