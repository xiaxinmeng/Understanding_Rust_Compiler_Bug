{"sha": "9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE5YzdhNjI1ZDM4MTNkMDYyYTZiMTdkMDcxYmQ4Y2M5ZmU1Y2I4Yg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-06-17T08:18:17Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-06-17T08:18:17Z"}, "message": "Fix tests that fail without PCH\n\nThe recent change to stop transitively including <string> broke some\ntests, but only when the library is configured without PCH, because\notherwise the <string> header still gets included via the precompiled\n<bits/stdc++.h> header.\n\n\t* testsuite/20_util/bad_function_call/what.cc: Include <string> header\n\tfor std::string.\n\t* testsuite/20_util/shared_ptr/cons/weak_ptr_expired.cc: Likewise.\n\t* testsuite/20_util/tuple/cons/allocator_with_any.cc: Include <memory>\n\theader for std::allocator.\n\t* testsuite/23_containers/array/tuple_interface/tuple_element.cc: Add\n\tusing-declaration for std::size_t.\n\t* testsuite/23_containers/array/tuple_interface/tuple_size.cc:\n\tLikewise.\n\t* testsuite/23_containers/deque/cons/55977.cc: Include <istream> for\n\tstd::istream.\n\t* testsuite/23_containers/vector/cons/55977.cc: Likewise.\n\t* testsuite/experimental/map/erasure.cc: Include <string> for\n\tstd::string.\n\t* testsuite/experimental/unordered_map/erasure.cc: Likewise.\n\nFrom-SVN: r272376", "tree": {"sha": "aa317d58a6f20f203c9bfbd20061d1dc039ddd9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa317d58a6f20f203c9bfbd20061d1dc039ddd9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61efadedfdc723491bc13cc33bf80bd262465cca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61efadedfdc723491bc13cc33bf80bd262465cca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61efadedfdc723491bc13cc33bf80bd262465cca"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "542c937c4ab6327ec28420bf4ad99990adb1edb1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b", "patch": "@@ -1,3 +1,21 @@\n+2019-06-17  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/20_util/bad_function_call/what.cc: Include <string> header\n+\tfor std::string.\n+\t* testsuite/20_util/shared_ptr/cons/weak_ptr_expired.cc: Likewise.\n+\t* testsuite/20_util/tuple/cons/allocator_with_any.cc: Include <memory>\n+\theader for std::allocator.\n+\t* testsuite/23_containers/array/tuple_interface/tuple_element.cc: Add\n+\tusing-declaration for std::size_t.\n+\t* testsuite/23_containers/array/tuple_interface/tuple_size.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/deque/cons/55977.cc: Include <istream> for\n+\tstd::istream.\n+\t* testsuite/23_containers/vector/cons/55977.cc: Likewise.\n+\t* testsuite/experimental/map/erasure.cc: Include <string> for\n+\tstd::string.\n+\t* testsuite/experimental/unordered_map/erasure.cc: Likewise.\n+\n 2019-06-14  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/experimental/type_traits (experimental::nonesuch): Use"}, {"sha": "229c7ef1cab58a50271d1a835f6cba76b195e7f0", "filename": "libstdc++-v3/testsuite/20_util/bad_function_call/what.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbad_function_call%2Fwhat.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbad_function_call%2Fwhat.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbad_function_call%2Fwhat.cc?ref=9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b", "patch": "@@ -18,6 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n #include <functional>\n+#include <string>\n #include <testsuite_hooks.h>\n \n int main()"}, {"sha": "a32a5c919430c72db836ec1686e42b4dd9da049d", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/weak_ptr_expired.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fweak_ptr_expired.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fweak_ptr_expired.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fweak_ptr_expired.cc?ref=9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b", "patch": "@@ -20,6 +20,7 @@\n // 20.6.6.2 Template class shared_ptr [util.smartptr.shared]\n \n #include <memory>\n+#include <string>\n #include <testsuite_hooks.h>\n \n struct A { };"}, {"sha": "154ec9161bd11df2e392c547c86392dcbc5117f2", "filename": "libstdc++-v3/testsuite/20_util/tuple/cons/allocator_with_any.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fallocator_with_any.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fallocator_with_any.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fallocator_with_any.cc?ref=9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b", "patch": "@@ -23,6 +23,7 @@\n // this test may begin to fail.\n \n #include <tuple>\n+#include <memory>\n #include <experimental/any>\n #include <testsuite_hooks.h>\n "}, {"sha": "e8b6bc12e77932f0ae56465442d3019c7794c194", "filename": "libstdc++-v3/testsuite/23_containers/array/tuple_interface/tuple_element.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_element.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_element.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_element.cc?ref=9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b", "patch": "@@ -29,7 +29,7 @@ test01()\n   // This relies on the fact that <utility> includes <type_traits>:\n   using std::is_same;\n \n-  const size_t len = 3;\n+  const std::size_t len = 3;\n   typedef array<int, len> array_type;\n \n   static_assert(is_same<tuple_element<0, array_type>::type, int>::value, \"\" );"}, {"sha": "740c42a89145473636ea5d20fcd1bf3afb5129ec", "filename": "libstdc++-v3/testsuite/23_containers/array/tuple_interface/tuple_size.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_size.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_size.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_size.cc?ref=9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b", "patch": "@@ -26,6 +26,7 @@ test01()\n {\n   using std::array;\n   using std::tuple_size;\n+  using std::size_t;\n   // This relies on the fact that <utility> includes <type_traits>:\n   using std::is_same;\n "}, {"sha": "5ab516a29508cac697f6e5edced30891ab59dc0a", "filename": "libstdc++-v3/testsuite/23_containers/deque/cons/55977.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2F55977.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2F55977.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2F55977.cc?ref=9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b", "patch": "@@ -21,6 +21,7 @@\n #include <utility>\n #include <deque>\n #include <iterator>\n+#include <istream>\n \n template <class T>\n struct MyAllocator"}, {"sha": "efa03b1edfdd076adb6673f046ee19fb0da4703c", "filename": "libstdc++-v3/testsuite/23_containers/vector/cons/55977.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F55977.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F55977.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2F55977.cc?ref=9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b", "patch": "@@ -21,6 +21,7 @@\n #include <utility>\n #include <vector>\n #include <iterator>\n+#include <istream>\n \n template <class T>\n struct MyAllocator"}, {"sha": "aa3d42da29965522cc1feca2dca042a98e5e86f5", "filename": "libstdc++-v3/testsuite/experimental/map/erasure.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmap%2Ferasure.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmap%2Ferasure.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fmap%2Ferasure.cc?ref=9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b", "patch": "@@ -18,6 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n #include <experimental/map>\n+#include <string>\n #include <testsuite_hooks.h>\n \n auto is_odd_pair = [](const std::pair<const int, std::string>& p)"}, {"sha": "79a42ffbdf907ef8ac2182172bf6a597c159fb8c", "filename": "libstdc++-v3/testsuite/experimental/unordered_map/erasure.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Funordered_map%2Ferasure.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Funordered_map%2Ferasure.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Funordered_map%2Ferasure.cc?ref=9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b", "patch": "@@ -18,6 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n #include <experimental/unordered_map>\n+#include <string>\n #include <testsuite_hooks.h>\n \n auto is_odd_pair = [](const std::pair<const int, std::string>& p)"}]}