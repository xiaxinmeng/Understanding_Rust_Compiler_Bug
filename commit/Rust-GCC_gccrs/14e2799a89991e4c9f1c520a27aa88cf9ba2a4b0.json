{"sha": "14e2799a89991e4c9f1c520a27aa88cf9ba2a4b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRlMjc5OWE4OTk5MWU0YzlmMWM1MjBhMjdhYTg4Y2Y5YmEyYTRiMA==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-01-28T11:27:22Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-01-28T11:27:22Z"}, "message": "* gcc.dg/cpp/avoidpaste1.c: Test case.\n\nFrom-SVN: r39319", "tree": {"sha": "d414672bdbfac05998d28c38bdbab5140cd55c25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d414672bdbfac05998d28c38bdbab5140cd55c25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14e2799a89991e4c9f1c520a27aa88cf9ba2a4b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14e2799a89991e4c9f1c520a27aa88cf9ba2a4b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14e2799a89991e4c9f1c520a27aa88cf9ba2a4b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14e2799a89991e4c9f1c520a27aa88cf9ba2a4b0/comments", "author": null, "committer": null, "parents": [{"sha": "26ec42ee4d266cf25be73a29888abf906b2d10ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26ec42ee4d266cf25be73a29888abf906b2d10ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26ec42ee4d266cf25be73a29888abf906b2d10ef"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "d5e7c9e88a875776b0904ab14c766a9c873b2000", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e2799a89991e4c9f1c520a27aa88cf9ba2a4b0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e2799a89991e4c9f1c520a27aa88cf9ba2a4b0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=14e2799a89991e4c9f1c520a27aa88cf9ba2a4b0", "patch": "@@ -1,3 +1,7 @@\n+2001-01-28  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+        * gcc.dg/cpp/avoidpaste1.c: Test case.\n+\n 2001-01-28  Jakub Jelinek  <jakub@redhat.com>\n \n \t* g++.old-deja/g++.other/inline18.C: New test."}, {"sha": "54233e8a5237d3bf08c34f70e2c9bb260b3b380b", "filename": "gcc/testsuite/gcc.dg/cpp/avoidpaste1.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e2799a89991e4c9f1c520a27aa88cf9ba2a4b0/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Favoidpaste1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e2799a89991e4c9f1c520a27aa88cf9ba2a4b0/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Favoidpaste1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Favoidpaste1.c?ref=14e2799a89991e4c9f1c520a27aa88cf9ba2a4b0", "patch": "@@ -0,0 +1,32 @@\n+/* Copyright (C) 2000 Free Software Foundation, Inc.  */\n+\n+/* { dg-do preprocess } */\n+\n+/* This tests that we avoid accidental pasting only before and after\n+   macros and arguments, and not when the tokens are already pasted\n+   in the souce file (e.g. \"::\" in a C source file).\n+\n+   Neil Booth, 28 Jan 2001.  */\n+\n+#define f(x) x\n+#define g\n+\n+/* This should preprocess as\n+\n+:: : : : : :^:\n+: : : .. . 0\n+\n+It relies on the fact that even preprocessing C we bother to separate\n+the colons of C++'s :: operator.  If we confine this behaviour to C++\n+in future, this test needs to change.  */\n+\n+:: :g: :f(): :f(^):\n+:f(:): .. .__INCLUDE_LEVEL__\t/* Check builtins, too.  */\n+\n+/*\n+   { dg-final { if ![file exists avoidpaste1.i] { return }                } }\n+   { dg-final { if { [grep avoidpaste1.i \":: : : : : :\\\\^:\"] != \"\" } \\{   } }\n+   { dg-final { if { [grep avoidpaste1.i \": : : \\\\\\.\\\\\\. \\\\\\. 0\"] != \"\" } \\{  } }\n+   { dg-final { return \\} \\}                                              } }\n+   { dg-final { fail \"avoidpaste1.c: paste avoidance\"                     } }\n+*/"}]}