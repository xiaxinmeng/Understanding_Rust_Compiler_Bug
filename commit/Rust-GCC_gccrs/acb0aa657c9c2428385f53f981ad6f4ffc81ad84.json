{"sha": "acb0aa657c9c2428385f53f981ad6f4ffc81ad84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNiMGFhNjU3YzljMjQyODM4NWY1M2Y5ODFhZDZmNGZmYzgxYWQ4NA==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2001-10-20T15:33:59Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2001-10-20T15:33:59Z"}, "message": "fix spelling typo\n\nFrom-SVN: r46382", "tree": {"sha": "4408770378a834317d9ed0eba1539fac2daf71aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4408770378a834317d9ed0eba1539fac2daf71aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/acb0aa657c9c2428385f53f981ad6f4ffc81ad84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acb0aa657c9c2428385f53f981ad6f4ffc81ad84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acb0aa657c9c2428385f53f981ad6f4ffc81ad84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acb0aa657c9c2428385f53f981ad6f4ffc81ad84/comments", "author": null, "committer": null, "parents": [{"sha": "129c089988b855514665829f645965729099a15b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/129c089988b855514665829f645965729099a15b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/129c089988b855514665829f645965729099a15b"}], "stats": {"total": 181, "additions": 93, "deletions": 88}, "files": [{"sha": "f0fe8e79e6be4ad6e475aa1a18bd6d7ef6a60bfd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acb0aa657c9c2428385f53f981ad6f4ffc81ad84/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acb0aa657c9c2428385f53f981ad6f4ffc81ad84/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=acb0aa657c9c2428385f53f981ad6f4ffc81ad84", "patch": "@@ -1,3 +1,7 @@\n+2001-10-20  Nick Clifton  <nickc@cambridge.redhat.com>\n+\n+\t* doc/invoke.texi (i386 and x86-64 Options): Fix typo.\n+\n 2001-10-20  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* reload1.c (reload): Check CONSTANT_P before calling\n@@ -86,6 +90,7 @@ Sat Oct 20 12:01:07 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \tcall run_directive directly.\n \t(_cpp_do__Pragma): Simplify.\n \n+>>>>>>> 1.11604\n 2001-10-19  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* pe.c (arm_pe_unique_section): Const-ify."}, {"sha": "58deebcb20f48b34a089f3fefc76b05cd0af1a88", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 88, "deletions": 88, "changes": 176, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acb0aa657c9c2428385f53f981ad6f4ffc81ad84/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acb0aa657c9c2428385f53f981ad6f4ffc81ad84/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=acb0aa657c9c2428385f53f981ad6f4ffc81ad84", "patch": "@@ -7762,9 +7762,9 @@ Generates the @code{pinsrw} machine instruction.\n Generates the @code{pmovmskb} machine instruction.\n @item void __builtin_ia32_maskmovq (v8qi, v8qi, char *)\n Generates the @code{maskmovq} machine instruction.\n-@item void __buitlin_ia32_movntq (di *, di)\n+@item void __builtin_ia32_movntq (di *, di)\n Generates the @code{movntq} machine instruction.\n-@item void __buitlin_ia32_sfence (void)\n+@item void __builtin_ia32_sfence (void)\n Generates the @code{sfence} machine instruction.\n @item void __builtin_ia32_prefetch (char *, int selector)\n Generates a prefetch machine instruction, depending on the value of\n@@ -7777,211 +7777,211 @@ a value of 1, it generates @code{prefetcht0}; for a value of 2, it generates\n The following built-in functions are available when @option{-msse} is used.\n \n @table @code\n-@item int __buitlin_ia32_comieq (v4sf, v4sf)\n+@item int __builtin_ia32_comieq (v4sf, v4sf)\n Generates the @code{comiss} machine instruction and performs an equality\n comparison.  The return value is the truth value of that comparison.\n-@item int __buitlin_ia32_comineq (v4sf, v4sf)\n+@item int __builtin_ia32_comineq (v4sf, v4sf)\n Generates the @code{comiss} machine instruction and performs an inequality\n comparison.  The return value is the truth value of that comparison.\n-@item int __buitlin_ia32_comilt (v4sf, v4sf)\n+@item int __builtin_ia32_comilt (v4sf, v4sf)\n Generates the @code{comiss} machine instruction and performs a ``less than''\n comparison.  The return value is the truth value of that comparison.\n-@item int __buitlin_ia32_comile (v4sf, v4sf)\n+@item int __builtin_ia32_comile (v4sf, v4sf)\n Generates the @code{comiss} machine instruction and performs a ``less or\n equal'' comparison.  The return value is the truth value of that comparison.\n-@item int __buitlin_ia32_comigt (v4sf, v4sf)\n+@item int __builtin_ia32_comigt (v4sf, v4sf)\n Generates the @code{comiss} machine instruction and performs a ``greater than''\n comparison.  The return value is the truth value of that comparison.\n-@item int __buitlin_ia32_comige (v4sf, v4sf)\n+@item int __builtin_ia32_comige (v4sf, v4sf)\n Generates the @code{comiss} machine instruction and performs a ``greater or\n equal'' comparison.  The return value is the truth value of that comparison.\n \n-@item int __buitlin_ia32_ucomieq (v4sf, v4sf)\n+@item int __builtin_ia32_ucomieq (v4sf, v4sf)\n Generates the @code{ucomiss} machine instruction and performs an equality\n comparison.  The return value is the truth value of that comparison.\n-@item int __buitlin_ia32_ucomineq (v4sf, v4sf)\n+@item int __builtin_ia32_ucomineq (v4sf, v4sf)\n Generates the @code{ucomiss} machine instruction and performs an inequality\n comparison.  The return value is the truth value of that comparison.\n-@item int __buitlin_ia32_ucomilt (v4sf, v4sf)\n+@item int __builtin_ia32_ucomilt (v4sf, v4sf)\n Generates the @code{ucomiss} machine instruction and performs a ``less than''\n comparison.  The return value is the truth value of that comparison.\n-@item int __buitlin_ia32_ucomile (v4sf, v4sf)\n+@item int __builtin_ia32_ucomile (v4sf, v4sf)\n Generates the @code{ucomiss} machine instruction and performs a ``less or\n equal'' comparison.  The return value is the truth value of that comparison.\n-@item int __buitlin_ia32_ucomigt (v4sf, v4sf)\n+@item int __builtin_ia32_ucomigt (v4sf, v4sf)\n Generates the @code{ucomiss} machine instruction and performs a ``greater than''\n comparison.  The return value is the truth value of that comparison.\n-@item int __buitlin_ia32_ucomige (v4sf, v4sf)\n+@item int __builtin_ia32_ucomige (v4sf, v4sf)\n Generates the @code{ucomiss} machine instruction and performs a ``greater or\n equal'' comparison.  The return value is the truth value of that comparison.\n \n-@item v4sf __buitlin_ia32_addps (v4sf, v4sf)\n+@item v4sf __builtin_ia32_addps (v4sf, v4sf)\n Generates the @code{addps} machine instruction.\n-@item v4sf __buitlin_ia32_addss (v4sf, v4sf)\n+@item v4sf __builtin_ia32_addss (v4sf, v4sf)\n Generates the @code{addss} machine instruction.\n-@item v4sf __buitlin_ia32_subps (v4sf, v4sf)\n+@item v4sf __builtin_ia32_subps (v4sf, v4sf)\n Generates the @code{subps} machine instruction.\n-@item v4sf __buitlin_ia32_subss (v4sf, v4sf)\n+@item v4sf __builtin_ia32_subss (v4sf, v4sf)\n Generates the @code{subss} machine instruction.\n-@item v4sf __buitlin_ia32_mulps (v4sf, v4sf)\n+@item v4sf __builtin_ia32_mulps (v4sf, v4sf)\n Generates the @code{mulps} machine instruction.\n-@item v4sf __buitlin_ia32_mulss (v4sf, v4sf)\n+@item v4sf __builtin_ia32_mulss (v4sf, v4sf)\n Generates the @code{mulss} machine instruction.\n-@item v4sf __buitlin_ia32_divps (v4sf, v4sf)\n+@item v4sf __builtin_ia32_divps (v4sf, v4sf)\n Generates the @code{divps} machine instruction.\n-@item v4sf __buitlin_ia32_divss (v4sf, v4sf)\n+@item v4sf __builtin_ia32_divss (v4sf, v4sf)\n Generates the @code{divss} machine instruction.\n \n-@item v4si __buitlin_ia32_cmpeqps (v4sf, v4sf)\n+@item v4si __builtin_ia32_cmpeqps (v4sf, v4sf)\n Generates the @code{cmpeqps} machine instruction.\n-@item v4si __buitlin_ia32_cmplts (v4sf, v4sf)\n+@item v4si __builtin_ia32_cmplts (v4sf, v4sf)\n Generates the @code{cmpltps} machine instruction.\n-@item v4si __buitlin_ia32_cmpleps (v4sf, v4sf)\n+@item v4si __builtin_ia32_cmpleps (v4sf, v4sf)\n Generates the @code{cmpleps} machine instruction.\n-@item v4si __buitlin_ia32_cmpgtps (v4sf, v4sf)\n+@item v4si __builtin_ia32_cmpgtps (v4sf, v4sf)\n Generates the @code{cmpgtps} machine instruction.\n-@item v4si __buitlin_ia32_cmpgeps (v4sf, v4sf)\n+@item v4si __builtin_ia32_cmpgeps (v4sf, v4sf)\n Generates the @code{cmpgeps} machine instruction.\n-@item v4si __buitlin_ia32_cmpunordps (v4sf, v4sf)\n+@item v4si __builtin_ia32_cmpunordps (v4sf, v4sf)\n Generates the @code{cmpunodps} machine instruction.\n-@item v4si __buitlin_ia32_cmpneqps (v4sf, v4sf)\n+@item v4si __builtin_ia32_cmpneqps (v4sf, v4sf)\n Generates the @code{cmpeqps} machine instruction.\n-@item v4si __buitlin_ia32_cmpnltps (v4sf, v4sf)\n+@item v4si __builtin_ia32_cmpnltps (v4sf, v4sf)\n Generates the @code{cmpltps} machine instruction.\n-@item v4si __buitlin_ia32_cmpnleps (v4sf, v4sf)\n+@item v4si __builtin_ia32_cmpnleps (v4sf, v4sf)\n Generates the @code{cmpleps} machine instruction.\n-@item v4si __buitlin_ia32_cmpngtps (v4sf, v4sf)\n+@item v4si __builtin_ia32_cmpngtps (v4sf, v4sf)\n Generates the @code{cmpgtps} machine instruction.\n-@item v4si __buitlin_ia32_cmpngeps (v4sf, v4sf)\n+@item v4si __builtin_ia32_cmpngeps (v4sf, v4sf)\n Generates the @code{cmpgeps} machine instruction.\n-@item v4si __buitlin_ia32_cmpordps (v4sf, v4sf)\n+@item v4si __builtin_ia32_cmpordps (v4sf, v4sf)\n Generates the @code{cmpunodps} machine instruction.\n \n-@item v4si __buitlin_ia32_cmpeqss (v4sf, v4sf)\n+@item v4si __builtin_ia32_cmpeqss (v4sf, v4sf)\n Generates the @code{cmpeqss} machine instruction.\n-@item v4si __buitlin_ia32_cmpltss (v4sf, v4sf)\n+@item v4si __builtin_ia32_cmpltss (v4sf, v4sf)\n Generates the @code{cmpltss} machine instruction.\n-@item v4si __buitlin_ia32_cmpless (v4sf, v4sf)\n+@item v4si __builtin_ia32_cmpless (v4sf, v4sf)\n Generates the @code{cmpless} machine instruction.\n-@item v4si __buitlin_ia32_cmpgtss (v4sf, v4sf)\n+@item v4si __builtin_ia32_cmpgtss (v4sf, v4sf)\n Generates the @code{cmpgtss} machine instruction.\n-@item v4si __buitlin_ia32_cmpgess (v4sf, v4sf)\n+@item v4si __builtin_ia32_cmpgess (v4sf, v4sf)\n Generates the @code{cmpgess} machine instruction.\n-@item v4si __buitlin_ia32_cmpunordss (v4sf, v4sf)\n+@item v4si __builtin_ia32_cmpunordss (v4sf, v4sf)\n Generates the @code{cmpunodss} machine instruction.\n-@item v4si __buitlin_ia32_cmpneqss (v4sf, v4sf)\n+@item v4si __builtin_ia32_cmpneqss (v4sf, v4sf)\n Generates the @code{cmpeqss} machine instruction.\n-@item v4si __buitlin_ia32_cmpnlts (v4sf, v4sf)\n+@item v4si __builtin_ia32_cmpnlts (v4sf, v4sf)\n Generates the @code{cmpltss} machine instruction.\n-@item v4si __buitlin_ia32_cmpnless (v4sf, v4sf)\n+@item v4si __builtin_ia32_cmpnless (v4sf, v4sf)\n Generates the @code{cmpless} machine instruction.\n-@item v4si __buitlin_ia32_cmpngtss (v4sf, v4sf)\n+@item v4si __builtin_ia32_cmpngtss (v4sf, v4sf)\n Generates the @code{cmpgtss} machine instruction.\n-@item v4si __buitlin_ia32_cmpngess (v4sf, v4sf)\n+@item v4si __builtin_ia32_cmpngess (v4sf, v4sf)\n Generates the @code{cmpgess} machine instruction.\n-@item v4si __buitlin_ia32_cmpordss (v4sf, v4sf)\n+@item v4si __builtin_ia32_cmpordss (v4sf, v4sf)\n Generates the @code{cmpunodss} machine instruction.\n \n-@item v4sf __buitlin_ia32_maxps (v4sf, v4sf)\n+@item v4sf __builtin_ia32_maxps (v4sf, v4sf)\n Generates the @code{maxps} machine instruction.\n-@item v4sf __buitlin_ia32_maxsss (v4sf, v4sf)\n+@item v4sf __builtin_ia32_maxsss (v4sf, v4sf)\n Generates the @code{maxss} machine instruction.\n-@item v4sf __buitlin_ia32_minps (v4sf, v4sf)\n+@item v4sf __builtin_ia32_minps (v4sf, v4sf)\n Generates the @code{minps} machine instruction.\n-@item v4sf __buitlin_ia32_minsss (v4sf, v4sf)\n+@item v4sf __builtin_ia32_minsss (v4sf, v4sf)\n Generates the @code{minss} machine instruction.\n \n-@item ti __buitlin_ia32_andps (ti, ti)\n+@item ti __builtin_ia32_andps (ti, ti)\n Generates the @code{andps} machine instruction.\n-@item ti __buitlin_ia32_andnps (ti, ti)\n+@item ti __builtin_ia32_andnps (ti, ti)\n Generates the @code{andnps} machine instruction.\n-@item ti __buitlin_ia32_orps (ti, ti)\n+@item ti __builtin_ia32_orps (ti, ti)\n Generates the @code{orps} machine instruction.\n-@item ti __buitlin_ia32_xorps (ti, ti)\n+@item ti __builtin_ia32_xorps (ti, ti)\n Generates the @code{xorps} machine instruction.\n \n-@item v4sf __buitlin_ia32_movps (v4sf, v4sf)\n+@item v4sf __builtin_ia32_movps (v4sf, v4sf)\n Generates the @code{movps} machine instruction.\n-@item v4sf __buitlin_ia32_movhlps (v4sf, v4sf)\n+@item v4sf __builtin_ia32_movhlps (v4sf, v4sf)\n Generates the @code{movhlps} machine instruction.\n-@item v4sf __buitlin_ia32_movlhps (v4sf, v4sf)\n+@item v4sf __builtin_ia32_movlhps (v4sf, v4sf)\n Generates the @code{movlhps} machine instruction.\n-@item v4sf __buitlin_ia32_unpckhps (v4sf, v4sf)\n+@item v4sf __builtin_ia32_unpckhps (v4sf, v4sf)\n Generates the @code{unpckhps} machine instruction.\n-@item v4sf __buitlin_ia32_unpcklps (v4sf, v4sf)\n+@item v4sf __builtin_ia32_unpcklps (v4sf, v4sf)\n Generates the @code{unpcklps} machine instruction.\n \n-@item v4sf __buitlin_ia32_cvtpi2ps (v4sf, v2si)\n+@item v4sf __builtin_ia32_cvtpi2ps (v4sf, v2si)\n Generates the @code{cvtpi2ps} machine instruction.\n-@item v2si __buitlin_ia32_cvtps2pi (v4sf)\n+@item v2si __builtin_ia32_cvtps2pi (v4sf)\n Generates the @code{cvtps2pi} machine instruction.\n-@item v4sf __buitlin_ia32_cvtsi2ss (v4sf, int)\n+@item v4sf __builtin_ia32_cvtsi2ss (v4sf, int)\n Generates the @code{cvtsi2ss} machine instruction.\n-@item int __buitlin_ia32_cvtss2si (v4sf)\n+@item int __builtin_ia32_cvtss2si (v4sf)\n Generates the @code{cvtsi2ss} machine instruction.\n-@item v2si __buitlin_ia32_cvttps2pi (v4sf)\n+@item v2si __builtin_ia32_cvttps2pi (v4sf)\n Generates the @code{cvttps2pi} machine instruction.\n-@item int __buitlin_ia32_cvttss2si (v4sf)\n+@item int __builtin_ia32_cvttss2si (v4sf)\n Generates the @code{cvttsi2ss} machine instruction.\n \n-@item v4sf __buitlin_ia32_rcpps (v4sf)\n+@item v4sf __builtin_ia32_rcpps (v4sf)\n Generates the @code{rcpps} machine instruction.\n-@item v4sf __buitlin_ia32_rsqrtps (v4sf)\n+@item v4sf __builtin_ia32_rsqrtps (v4sf)\n Generates the @code{rsqrtps} machine instruction.\n-@item v4sf __buitlin_ia32_sqrtps (v4sf)\n+@item v4sf __builtin_ia32_sqrtps (v4sf)\n Generates the @code{sqrtps} machine instruction.\n-@item v4sf __buitlin_ia32_rcpss (v4sf)\n+@item v4sf __builtin_ia32_rcpss (v4sf)\n Generates the @code{rcpss} machine instruction.\n-@item v4sf __buitlin_ia32_rsqrtss (v4sf)\n+@item v4sf __builtin_ia32_rsqrtss (v4sf)\n Generates the @code{rsqrtss} machine instruction.\n-@item v4sf __buitlin_ia32_sqrtss (v4sf)\n+@item v4sf __builtin_ia32_sqrtss (v4sf)\n Generates the @code{sqrtss} machine instruction.\n \n-@item v4sf __buitlin_ia32_shufps (v4sf, v4sf, int)\n+@item v4sf __builtin_ia32_shufps (v4sf, v4sf, int)\n Generates the @code{shufps} machine instruction.\n \n-@item v4sf __buitlin_ia32_loadaps (float *)\n+@item v4sf __builtin_ia32_loadaps (float *)\n Generates the @code{movaps} machine instruction as a load from memory.\n-@item void __buitlin_ia32_storeaps (float *, v4sf)\n+@item void __builtin_ia32_storeaps (float *, v4sf)\n Generates the @code{movaps} machine instruction as a store to memory.\n-@item v4sf __buitlin_ia32_loadups (float *)\n+@item v4sf __builtin_ia32_loadups (float *)\n Generates the @code{movups} machine instruction as a load from memory.\n-@item void __buitlin_ia32_storeups (float *, v4sf)\n+@item void __builtin_ia32_storeups (float *, v4sf)\n Generates the @code{movups} machine instruction as a store to memory.\n-@item v4sf __buitlin_ia32_loadsss (float *)\n+@item v4sf __builtin_ia32_loadsss (float *)\n Generates the @code{movss} machine instruction as a load from memory.\n-@item void __buitlin_ia32_storess (float *, v4sf)\n+@item void __builtin_ia32_storess (float *, v4sf)\n Generates the @code{movss} machine instruction as a store to memory.\n \n-@item v4sf __buitlin_ia32_loadhps (v4sf, v2si *)\n+@item v4sf __builtin_ia32_loadhps (v4sf, v2si *)\n Generates the @code{movhps} machine instruction as a load from memory.\n-@item v4sf __buitlin_ia32_loadlps (v4sf, v2si *)\n+@item v4sf __builtin_ia32_loadlps (v4sf, v2si *)\n Generates the @code{movlps} machine instruction as a load from memory\n-@item void __buitlin_ia32_storehps (v4sf, v2si *)\n+@item void __builtin_ia32_storehps (v4sf, v2si *)\n Generates the @code{movhps} machine instruction as a store to memory.\n-@item void __buitlin_ia32_storelps (v4sf, v2si *)\n+@item void __builtin_ia32_storelps (v4sf, v2si *)\n Generates the @code{movlps} machine instruction as a store to memory.\n \n-@item void __buitlin_ia32_movntps (float *, v4sf)\n+@item void __builtin_ia32_movntps (float *, v4sf)\n Generates the @code{movntps} machine instruction.\n-@item int __buitlin_ia32_movmskps (v4sf)\n+@item int __builtin_ia32_movmskps (v4sf)\n Generates the @code{movntps} machine instruction.\n \n-@item void __buitlin_ia32_storeps1 (float *, v4sf)\n+@item void __builtin_ia32_storeps1 (float *, v4sf)\n Generates the @code{movaps} machine instruction as a store to memory.\n Before storing, the value is modified with a @code{shufps} instruction\n so that the lowest of the four floating point elements is replicated\n across the entire vector that is stored.\n-@item void __buitlin_ia32_storerps (float *, v4sf)\n+@item void __builtin_ia32_storerps (float *, v4sf)\n Generates the @code{movaps} machine instruction as a store to memory.\n Before storing, the value is modified with a @code{shufps} instruction\n so that the order of the four floating point elements in the vector is\n reversed.\n-@item v4sf __buitlin_ia32_loadps1 (float *)\n+@item v4sf __builtin_ia32_loadps1 (float *)\n Generates a @code{movss} machine instruction to load a floating point\n value from memory, and a @code{shufps} instruction to replicate the\n loaded value across all four elements of the result vector.\n-@item v4sf __buitlin_ia32_loadrps (float *)\n+@item v4sf __builtin_ia32_loadrps (float *)\n Generates a @code{movaps} machine instruction to load a vector from\n memory, and a @code{shufps} instruction to reverse the order of the\n four floating point elements in the result vector."}]}