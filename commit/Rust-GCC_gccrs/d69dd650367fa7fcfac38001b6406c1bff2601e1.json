{"sha": "d69dd650367fa7fcfac38001b6406c1bff2601e1", "node_id": "C_kwDOANBUbNoAKGQ2OWRkNjUwMzY3ZmE3ZmNmYWMzODAwMWI2NDA2YzFiZmYyNjAxZTE", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-04-26T18:54:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-26T18:54:01Z"}, "message": "Merge #1176\n\n1176: Keep `SimplePath{Segment}`s in mappings r=CohenArthur a=CohenArthur\n\nAddresses #1159 \n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>", "tree": {"sha": "fa16ce49470a14c6e63f36b3b73ef3125651641f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa16ce49470a14c6e63f36b3b73ef3125651641f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d69dd650367fa7fcfac38001b6406c1bff2601e1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiaD/JCRBK7hj4Ov3rIwAAN60IACK66kgajYbfq5JUlYwI5RMW\nSl2R01ozaWWbRen40+Fi97Av5MeGNCxPbFncM/x05mT8GcoDUfQRbMY3n9JYVciA\nhXc1WqcAQdBed2DUK8eSqI+duTm0QelrdYtGdn0g/w6Rk2whqjp1jsTgV15ip56m\nFDEBv7j8OSf3BQdxiyXqoQfRgKgEyVtrr+e/Ar7Gc8zxfm/OTQu2rXbIotS30YU4\nRxrgnm2LKsdsuVY45/k1PMEpC06y7tG+mJYJKbGkZFnzh2g+1+1+8+j42/o7RX+V\nf7YZ9HSaBwCPelOJJrtwgEWwjvX3L6mBIvgxw4Hl4GD1lxAJuc5rIGifs5ZVKFg=\n=/wJq\n-----END PGP SIGNATURE-----\n", "payload": "tree fa16ce49470a14c6e63f36b3b73ef3125651641f\nparent 8b2e6da73956c8f12a4a150b5b9dcf8f1b5656ba\nparent 6f07a7689284a89d25a6e236193fca0b06f8e82e\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1650999241 +0000\ncommitter GitHub <noreply@github.com> 1650999241 +0000\n\nMerge #1176\n\n1176: Keep `SimplePath{Segment}`s in mappings r=CohenArthur a=CohenArthur\n\nAddresses #1159 \n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d69dd650367fa7fcfac38001b6406c1bff2601e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d69dd650367fa7fcfac38001b6406c1bff2601e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d69dd650367fa7fcfac38001b6406c1bff2601e1/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b2e6da73956c8f12a4a150b5b9dcf8f1b5656ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b2e6da73956c8f12a4a150b5b9dcf8f1b5656ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b2e6da73956c8f12a4a150b5b9dcf8f1b5656ba"}, {"sha": "6f07a7689284a89d25a6e236193fca0b06f8e82e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f07a7689284a89d25a6e236193fca0b06f8e82e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f07a7689284a89d25a6e236193fca0b06f8e82e"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "4062ce7e4e25fc3d79c33e72394ebed803c63fd6", "filename": "gcc/rust/util/rust-hir-map.cc", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d69dd650367fa7fcfac38001b6406c1bff2601e1/gcc%2Frust%2Futil%2Frust-hir-map.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d69dd650367fa7fcfac38001b6406c1bff2601e1/gcc%2Frust%2Futil%2Frust-hir-map.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-hir-map.cc?ref=d69dd650367fa7fcfac38001b6406c1bff2601e1", "patch": "@@ -426,6 +426,56 @@ Mappings::lookup_hir_path_expr_seg (CrateNum crateNum, HirId id)\n   return iy->second;\n }\n \n+void\n+Mappings::insert_simple_path_segment (CrateNum crateNum, HirId id,\n+\t\t\t\t      AST::SimplePathSegment *path)\n+{\n+  rust_assert (lookup_simple_path_segment (crateNum, id) == nullptr);\n+\n+  astSimplePathSegmentMappings[crateNum][id] = path;\n+  nodeIdToHirMappings[crateNum][path->get_node_id ()] = id;\n+  insert_location (crateNum, id, path->get_locus ());\n+}\n+\n+AST::SimplePathSegment *\n+Mappings::lookup_simple_path_segment (CrateNum crateNum, HirId id)\n+{\n+  auto it = astSimplePathSegmentMappings.find (crateNum);\n+  if (it == astSimplePathSegmentMappings.end ())\n+    return nullptr;\n+\n+  auto iy = it->second.find (id);\n+  if (iy == it->second.end ())\n+    return nullptr;\n+\n+  return iy->second;\n+}\n+\n+void\n+Mappings::insert_simple_path (CrateNum crateNum, HirId id,\n+\t\t\t      AST::SimplePath *path)\n+{\n+  rust_assert (lookup_simple_path (crateNum, id) == nullptr);\n+\n+  astSimplePathMappings[crateNum][id] = path;\n+  nodeIdToHirMappings[crateNum][path->get_node_id ()] = id;\n+  insert_location (crateNum, id, path->get_locus ());\n+}\n+\n+AST::SimplePath *\n+Mappings::lookup_simple_path (CrateNum crateNum, HirId id)\n+{\n+  auto it = astSimplePathMappings.find (crateNum);\n+  if (it == astSimplePathMappings.end ())\n+    return nullptr;\n+\n+  auto iy = it->second.find (id);\n+  if (iy == it->second.end ())\n+    return nullptr;\n+\n+  return iy->second;\n+}\n+\n void\n Mappings::insert_hir_generic_param (CrateNum crateNum, HirId id,\n \t\t\t\t    HIR::GenericParam *param)"}, {"sha": "19c2f0aae3882690ac7bcb0f61a8d9e6dee0173b", "filename": "gcc/rust/util/rust-hir-map.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d69dd650367fa7fcfac38001b6406c1bff2601e1/gcc%2Frust%2Futil%2Frust-hir-map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d69dd650367fa7fcfac38001b6406c1bff2601e1/gcc%2Frust%2Futil%2Frust-hir-map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-hir-map.h?ref=d69dd650367fa7fcfac38001b6406c1bff2601e1", "patch": "@@ -147,6 +147,14 @@ class Mappings\n \t\t\t\t HIR::PathExprSegment *expr);\n   HIR::PathExprSegment *lookup_hir_path_expr_seg (CrateNum crateNum, HirId id);\n \n+  void insert_simple_path_segment (CrateNum crateNum, HirId id,\n+\t\t\t\t   AST::SimplePathSegment *path);\n+  AST::SimplePathSegment *lookup_simple_path_segment (CrateNum crateNum,\n+\t\t\t\t\t\t      HirId id);\n+\n+  void insert_simple_path (CrateNum crateNum, HirId id, AST::SimplePath *path);\n+  AST::SimplePath *lookup_simple_path (CrateNum crateNum, HirId id);\n+\n   void insert_hir_generic_param (CrateNum crateNum, HirId id,\n \t\t\t\t HIR::GenericParam *expr);\n   HIR::GenericParam *lookup_hir_generic_param (CrateNum crateNum, HirId id);\n@@ -330,6 +338,9 @@ class Mappings\n   std::map<CrateNum, std::map<HirId, HIR::TraitItem *>> hirTraitItemMappings;\n   std::map<CrateNum, std::map<HirId, HIR::ExternalItem *>>\n     hirExternItemMappings;\n+  std::map<CrateNum, std::map<HirId, AST::SimplePath *>> astSimplePathMappings;\n+  std::map<CrateNum, std::map<HirId, AST::SimplePathSegment *>>\n+    astSimplePathSegmentMappings;\n   std::map<CrateNum, std::map<HirId, HIR::PathExprSegment *>>\n     hirPathSegMappings;\n   std::map<CrateNum, std::map<HirId, HIR::GenericParam *>>"}]}