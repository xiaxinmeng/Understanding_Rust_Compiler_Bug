{"sha": "810097a72d1767627d2439bb94627b443f41bf7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODEwMDk3YTcyZDE3Njc2MjdkMjQzOWJiOTQ2MjdiNDQzZjQxYmY3Zg==", "commit": {"author": {"name": "Dmitriy Anisimkov", "email": "anisimko@adacore.com", "date": "2019-07-11T08:02:49Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-11T08:02:49Z"}, "message": "[Ada] GNAT.Sockets: support ICMP, IGMP and RAW IP protocol levels\n\n2019-07-11  Dmitriy Anisimkov  <anisimko@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/g-socket.ads (Level_Type): Add enumerators for\n\tIP_Protocol_For_ICMP, IP_Protocol_For_IGMP,\n\tIP_Protocol_For_RAW_Level.\n\t* libgnat/g-socket.adb (Levels): Handle them.\n\t* s-oscons-tmplt.c: Import socket protocols defined in\n\tnetinet/in.h.\n\nFrom-SVN: r273398", "tree": {"sha": "147af898e56b2f02fc9bc68cd4dac24e1dbc2cc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/147af898e56b2f02fc9bc68cd4dac24e1dbc2cc1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/810097a72d1767627d2439bb94627b443f41bf7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/810097a72d1767627d2439bb94627b443f41bf7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/810097a72d1767627d2439bb94627b443f41bf7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/810097a72d1767627d2439bb94627b443f41bf7f/comments", "author": {"login": "anisimkov", "id": 15864134, "node_id": "MDQ6VXNlcjE1ODY0MTM0", "avatar_url": "https://avatars.githubusercontent.com/u/15864134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anisimkov", "html_url": "https://github.com/anisimkov", "followers_url": "https://api.github.com/users/anisimkov/followers", "following_url": "https://api.github.com/users/anisimkov/following{/other_user}", "gists_url": "https://api.github.com/users/anisimkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/anisimkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anisimkov/subscriptions", "organizations_url": "https://api.github.com/users/anisimkov/orgs", "repos_url": "https://api.github.com/users/anisimkov/repos", "events_url": "https://api.github.com/users/anisimkov/events{/privacy}", "received_events_url": "https://api.github.com/users/anisimkov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1048a1839fde97a1bd790b002dad8b79e172724f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1048a1839fde97a1bd790b002dad8b79e172724f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1048a1839fde97a1bd790b002dad8b79e172724f"}], "stats": {"total": 124, "additions": 122, "deletions": 2}, "files": [{"sha": "3b04ce8463f573822a943bd1062a1a5647607ab2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810097a72d1767627d2439bb94627b443f41bf7f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810097a72d1767627d2439bb94627b443f41bf7f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=810097a72d1767627d2439bb94627b443f41bf7f", "patch": "@@ -1,3 +1,12 @@\n+2019-07-11  Dmitriy Anisimkov  <anisimko@adacore.com>\n+\n+\t* libgnat/g-socket.ads (Level_Type): Add enumerators for\n+\tIP_Protocol_For_ICMP, IP_Protocol_For_IGMP,\n+\tIP_Protocol_For_RAW_Level.\n+\t* libgnat/g-socket.adb (Levels): Handle them.\n+\t* s-oscons-tmplt.c: Import socket protocols defined in\n+\tnetinet/in.h.\n+\n 2019-07-11  Claire Dross  <dross@adacore.com>\n \n \t* libgnat/a-cfhama.adb, libgnat/a-cfhase.adb (Free): Do not"}, {"sha": "ceb2cb03c6a7648cca39ee354f17e50daf7ba0a1", "filename": "gcc/ada/libgnat/g-socket.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810097a72d1767627d2439bb94627b443f41bf7f/gcc%2Fada%2Flibgnat%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810097a72d1767627d2439bb94627b443f41bf7f/gcc%2Fada%2Flibgnat%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-socket.adb?ref=810097a72d1767627d2439bb94627b443f41bf7f", "patch": "@@ -73,7 +73,10 @@ package body GNAT.Sockets is\n                IP_Protocol_For_IP_Level   => SOSC.IPPROTO_IP,\n                IP_Protocol_For_IPv6_Level => SOSC.IPPROTO_IPV6,\n                IP_Protocol_For_UDP_Level  => SOSC.IPPROTO_UDP,\n-               IP_Protocol_For_TCP_Level  => SOSC.IPPROTO_TCP);\n+               IP_Protocol_For_TCP_Level  => SOSC.IPPROTO_TCP,\n+               IP_Protocol_For_ICMP_Level => SOSC.IPPROTO_ICMP,\n+               IP_Protocol_For_IGMP_Level => SOSC.IPPROTO_IGMP,\n+               IP_Protocol_For_RAW_Level  => SOSC.IPPROTO_RAW);\n \n    Modes : constant array (Mode_Type) of C.int :=\n              (Socket_Stream   => SOSC.SOCK_STREAM,"}, {"sha": "acd72f1e6502715695f21099ddc8d174f530786b", "filename": "gcc/ada/libgnat/g-socket.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810097a72d1767627d2439bb94627b443f41bf7f/gcc%2Fada%2Flibgnat%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810097a72d1767627d2439bb94627b443f41bf7f/gcc%2Fada%2Flibgnat%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-socket.ads?ref=810097a72d1767627d2439bb94627b443f41bf7f", "patch": "@@ -773,7 +773,10 @@ package GNAT.Sockets is\n       IP_Protocol_For_IP_Level,\n       IP_Protocol_For_IPv6_Level,\n       IP_Protocol_For_UDP_Level,\n-      IP_Protocol_For_TCP_Level);\n+      IP_Protocol_For_TCP_Level,\n+      IP_Protocol_For_ICMP_Level,\n+      IP_Protocol_For_IGMP_Level,\n+      IP_Protocol_For_RAW_Level);\n \n    --  There are several options available to manipulate sockets. Each option\n    --  has a name and several values available. Most of the time, the value"}, {"sha": "655d68a79f2a9b96886532e9766c6cc88d72aadc", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 105, "deletions": 0, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810097a72d1767627d2439bb94627b443f41bf7f/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810097a72d1767627d2439bb94627b443f41bf7f/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=810097a72d1767627d2439bb94627b443f41bf7f", "patch": "@@ -1292,6 +1292,111 @@ CND(IPPROTO_UDP, \"UDP\")\n #endif\n CND(IPPROTO_TCP, \"TCP\")\n \n+#ifndef IPPROTO_ICMP\n+# define IPPROTO_ICMP -1\n+#endif\n+CND(IPPROTO_ICMP, \"Internet Control Message Protocol\")\n+\n+#ifndef IPPROTO_IGMP\n+# define IPPROTO_IGMP -1\n+#endif\n+CND(IPPROTO_IGMP, \"Internet Group Management Protocol\")\n+\n+#ifndef IPPROTO_IPIP\n+# define IPPROTO_IPIP -1\n+#endif\n+CND(IPPROTO_IPIP, \"IPIP tunnels (older KA9Q tunnels use 94)\")\n+\n+#ifndef IPPROTO_EGP\n+# define IPPROTO_EGP -1\n+#endif\n+CND(IPPROTO_EGP, \"Exterior Gateway Protocol\")\n+\n+#ifndef IPPROTO_PUP\n+# define IPPROTO_PUP -1\n+#endif\n+CND(IPPROTO_PUP, \"PUP protocol\")\n+\n+#ifndef IPPROTO_IDP\n+# define IPPROTO_IDP -1\n+#endif\n+CND(IPPROTO_IDP, \"XNS IDP protocol\")\n+\n+#ifndef IPPROTO_TP\n+# define IPPROTO_TP -1\n+#endif\n+CND(IPPROTO_TP, \"SO Transport Protocol Class 4\")\n+\n+#ifndef IPPROTO_DCCP\n+# define IPPROTO_DCCP -1\n+#endif\n+CND(IPPROTO_DCCP, \"Datagram Congestion Control Protocol\")\n+\n+#ifndef IPPROTO_RSVP\n+# define IPPROTO_RSVP -1\n+#endif\n+CND(IPPROTO_RSVP, \"Reservation Protocol\")\n+\n+#ifndef IPPROTO_GRE\n+# define IPPROTO_GRE -1\n+#endif\n+CND(IPPROTO_GRE, \"General Routing Encapsulation\")\n+\n+#ifndef IPPROTO_ESP\n+# define IPPROTO_ESP -1\n+#endif\n+CND(IPPROTO_ESP, \"encapsulating security payload\")\n+\n+#ifndef IPPROTO_AH\n+# define IPPROTO_AH -1\n+#endif\n+CND(IPPROTO_AH, \"authentication header\")\n+\n+#ifndef IPPROTO_MTP\n+# define IPPROTO_MTP -1\n+#endif\n+CND(IPPROTO_MTP, \"Multicast Transport Protocol\")\n+\n+#ifndef IPPROTO_BEETPH\n+# define IPPROTO_BEETPH -1\n+#endif\n+CND(IPPROTO_BEETPH, \"IP option pseudo header for BEET\")\n+\n+#ifndef IPPROTO_ENCAP\n+# define IPPROTO_ENCAP -1\n+#endif\n+CND(IPPROTO_ENCAP, \"Encapsulation Header\")\n+\n+#ifndef IPPROTO_PIM\n+# define IPPROTO_PIM -1\n+#endif\n+CND(IPPROTO_PIM, \"Protocol Independent Multicast\")\n+\n+#ifndef IPPROTO_COMP\n+# define IPPROTO_COMP -1\n+#endif\n+CND(IPPROTO_COMP, \"Compression Header Protocol\")\n+\n+#ifndef IPPROTO_SCTP\n+# define IPPROTO_SCTP -1\n+#endif\n+CND(IPPROTO_SCTP, \"Stream Control Transmission Protocol\")\n+\n+#ifndef IPPROTO_UDPLITE\n+# define IPPROTO_UDPLITE -1\n+#endif\n+CND(IPPROTO_UDPLITE, \"UDP-Lite protocol\")\n+\n+#ifndef IPPROTO_MPLS\n+# define IPPROTO_MPLS -1\n+#endif\n+CND(IPPROTO_MPLS, \"MPLS in IP\")\n+\n+#ifndef IPPROTO_RAW\n+# define IPPROTO_RAW -1\n+#endif\n+CND(IPPROTO_RAW, \"Raw IP packets\")\n+\n /*\n \n    -------------------"}]}