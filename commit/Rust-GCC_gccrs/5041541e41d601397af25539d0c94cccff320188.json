{"sha": "5041541e41d601397af25539d0c94cccff320188", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA0MTU0MWU0MWQ2MDEzOTdhZjI1NTM5ZDBjOTRjY2NmZjMyMDE4OA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2007-02-03T16:21:55Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2007-02-03T16:21:55Z"}, "message": "* java-tree.h, javaop.def, jcf-parse.c: Fix comment typos.\n\nFrom-SVN: r121543", "tree": {"sha": "fa790caf0e354f821c5c0f2f2c49024d43c1d092", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa790caf0e354f821c5c0f2f2c49024d43c1d092"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5041541e41d601397af25539d0c94cccff320188", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5041541e41d601397af25539d0c94cccff320188", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5041541e41d601397af25539d0c94cccff320188", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5041541e41d601397af25539d0c94cccff320188/comments", "author": null, "committer": null, "parents": [{"sha": "d1ad84c20452e63a38a6b414a6eb7001711c520a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1ad84c20452e63a38a6b414a6eb7001711c520a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1ad84c20452e63a38a6b414a6eb7001711c520a"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "6333d011d35db95018b00310f6ab0fa3edaa598d", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5041541e41d601397af25539d0c94cccff320188/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5041541e41d601397af25539d0c94cccff320188/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=5041541e41d601397af25539d0c94cccff320188", "patch": "@@ -1,3 +1,7 @@\n+2007-02-03  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* java-tree.h, javaop.def, jcf-parse.c: Fix comment typos.\n+\n 2007-02-02  Andrew Haley  <aph@redhat.com>\n \n \t* expr.c (expand_byte_code): Call cache_this_class_ref() and"}, {"sha": "ab3ff47e467f37411383a3174872ec442f5e6828", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5041541e41d601397af25539d0c94cccff320188/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5041541e41d601397af25539d0c94cccff320188/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=5041541e41d601397af25539d0c94cccff320188", "patch": "@@ -764,7 +764,7 @@ union lang_tree_node\n #define FIELD_LOCAL_ALIAS(DECL) DECL_LANG_FLAG_6 (VAR_OR_FIELD_CHECK (DECL))\n \n /* True when DECL, which aliases an outer context local variable is\n-   used by the inner classe */\n+   used by the inner classes.  */\n #define FIELD_LOCAL_ALIAS_USED(DECL) DECL_LANG_FLAG_7 (VAR_OR_FIELD_CHECK (DECL))\n \n /* True when DECL is a this$<n> field. Note that"}, {"sha": "bb3543034ff909336929fb39b85350953996a3fa", "filename": "gcc/java/javaop.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5041541e41d601397af25539d0c94cccff320188/gcc%2Fjava%2Fjavaop.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5041541e41d601397af25539d0c94cccff320188/gcc%2Fjava%2Fjavaop.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjavaop.def?ref=5041541e41d601397af25539d0c94cccff320188", "patch": "@@ -88,7 +88,7 @@ TEST: Compares an integer (popped from the stack) against zero.\n \tIf the test (in OPERAND_VALUE) is true, goto a relative\n \toffset given by the next two bytes.\n \n-COND:  Compares two values (popped from the stack) againt each other.\n+COND:  Compares two values (popped from the stack) against each other.\n \tIf the test (in OPERAND_VALUE) is true, goto a relative\n \toffset given by the next two bytes.\n "}, {"sha": "39abb57a63e5c85a9197d1a8f05a8bf7d24b4098", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5041541e41d601397af25539d0c94cccff320188/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5041541e41d601397af25539d0c94cccff320188/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=5041541e41d601397af25539d0c94cccff320188", "patch": "@@ -259,7 +259,7 @@ java_read_sourcefilenames (const char *fsource_filename)\n /* Given a relative pathname such as foo/bar.java, attempt to find a\n    longer pathname with the same suffix.  \n \n-   This is a best guess heuristic; with some weird class hierarcies we\n+   This is a best guess heuristic; with some weird class hierarchies we\n    may fail to pick the correct source file.  For example, if we have\n    the filenames foo/bar.java and also foo/foo/bar.java, we do not\n    have enough information to know which one is the right match for"}]}