{"sha": "6ceb677f26951e8c06da7f565db05ce482a80f8a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNlYjY3N2YyNjk1MWU4YzA2ZGE3ZjU2NWRiMDVjZTQ4MmE4MGY4YQ==", "commit": {"author": {"name": "Tristan Gingold", "email": "gingold@adacore.com", "date": "2012-03-16T09:55:56Z"}, "committer": {"name": "Tristan Gingold", "email": "gingold@gcc.gnu.org", "date": "2012-03-16T09:55:56Z"}, "message": "vms.h (TARGET_OS_CPP_BUILTINS): Define __CRTL_VER and __VMS_VER.\n\n2012-03-16  Tristan Gingold  <gingold@adacore.com>\n\n\t* config/vms/vms.h (TARGET_OS_CPP_BUILTINS): Define\n\t__CRTL_VER and __VMS_VER.\n\t* config/vms/vms-protos.h: Declare vms_c_get_crtl_ver\n\tand vms_c_get_vms_ver.\n\t* config/vms/vms-c.c (vms_c_get_crtl_ver, vms_c_get_vms_ver): New\n\tfunctions.\n\t* config/alpha/vms.h (VMS_DEFAULT_CRTL_VER)\n\t(VMS_DEFAULT_VMS_VER): Define.\n\t* config/ia64/vms.h (VMS_DEFAULT_CRTL_VER)\n\t(VMS_DEFAULT_VMS_VER): Define.\n\nFrom-SVN: r185462", "tree": {"sha": "ec92c1c2ce8d94be3e26a29eede93df562606771", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec92c1c2ce8d94be3e26a29eede93df562606771"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ceb677f26951e8c06da7f565db05ce482a80f8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ceb677f26951e8c06da7f565db05ce482a80f8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ceb677f26951e8c06da7f565db05ce482a80f8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ceb677f26951e8c06da7f565db05ce482a80f8a/comments", "author": {"login": "gingold-adacore", "id": 16334725, "node_id": "MDQ6VXNlcjE2MzM0NzI1", "avatar_url": "https://avatars.githubusercontent.com/u/16334725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gingold-adacore", "html_url": "https://github.com/gingold-adacore", "followers_url": "https://api.github.com/users/gingold-adacore/followers", "following_url": "https://api.github.com/users/gingold-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/gingold-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/gingold-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gingold-adacore/subscriptions", "organizations_url": "https://api.github.com/users/gingold-adacore/orgs", "repos_url": "https://api.github.com/users/gingold-adacore/repos", "events_url": "https://api.github.com/users/gingold-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/gingold-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "50a763ab474ddf0f9c2d3649c5a89fdb511d8ca7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50a763ab474ddf0f9c2d3649c5a89fdb511d8ca7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50a763ab474ddf0f9c2d3649c5a89fdb511d8ca7"}], "stats": {"total": 67, "additions": 54, "deletions": 13}, "files": [{"sha": "5ba4e523e6281b7cd94ac3eae0e832d8c6a51719", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ceb677f26951e8c06da7f565db05ce482a80f8a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ceb677f26951e8c06da7f565db05ce482a80f8a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ceb677f26951e8c06da7f565db05ce482a80f8a", "patch": "@@ -1,3 +1,16 @@\n+2012-03-16  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* config/vms/vms.h (TARGET_OS_CPP_BUILTINS): Define\n+\t__CRTL_VER and __VMS_VER.\n+\t* config/vms/vms-protos.h: Declare vms_c_get_crtl_ver\n+\tand vms_c_get_vms_ver.\n+\t* config/vms/vms-c.c (vms_c_get_crtl_ver, vms_c_get_vms_ver): New\n+\tfunctions.\n+\t* config/alpha/vms.h (VMS_DEFAULT_CRTL_VER)\n+\t(VMS_DEFAULT_VMS_VER): Define.\n+\t* config/ia64/vms.h (VMS_DEFAULT_CRTL_VER)\n+\t(VMS_DEFAULT_VMS_VER): Define.\n+\n 2012-03-16  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-vect-loop.c (get_initial_def_for_induction): Use"}, {"sha": "7b4dd30fafd440c6e1d13353c514791107714d63", "filename": "gcc/config/alpha/vms.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ceb677f26951e8c06da7f565db05ce482a80f8a/gcc%2Fconfig%2Falpha%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ceb677f26951e8c06da7f565db05ce482a80f8a/gcc%2Fconfig%2Falpha%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fvms.h?ref=6ceb677f26951e8c06da7f565db05ce482a80f8a", "patch": "@@ -289,3 +289,7 @@ do {                                                \\\n \n #undef TARGET_VALID_POINTER_MODE\n #define TARGET_VALID_POINTER_MODE vms_valid_pointer_mode\n+\n+/* Default values for _CRTL_VER and _VMS_VER.  */\n+#define VMS_DEFAULT_CRTL_VER 70320000\n+#define VMS_DEFAULT_VMS_VER 70320000"}, {"sha": "1908c47d585dc0eea88808a4ef5bcf9ca1ee68df", "filename": "gcc/config/ia64/vms.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ceb677f26951e8c06da7f565db05ce482a80f8a/gcc%2Fconfig%2Fia64%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ceb677f26951e8c06da7f565db05ce482a80f8a/gcc%2Fconfig%2Fia64%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fvms.h?ref=6ceb677f26951e8c06da7f565db05ce482a80f8a", "patch": "@@ -157,3 +157,7 @@ STATIC func_ptr __CTOR_LIST__[1]                                             \\\n /* IA64 VMS doesn't fully support COMDAT sections.  */\n \n #define SUPPORTS_ONE_ONLY 0\n+\n+/* Default values for _CRTL_VER and _VMS_VER.  */\n+#define VMS_DEFAULT_CRTL_VER 80300000\n+#define VMS_DEFAULT_VMS_VER 80300000"}, {"sha": "6f8a1cf613853fa1ff31ccd5996a47625a9e9ad5", "filename": "gcc/config/vms/vms-c.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ceb677f26951e8c06da7f565db05ce482a80f8a/gcc%2Fconfig%2Fvms%2Fvms-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ceb677f26951e8c06da7f565db05ce482a80f8a/gcc%2Fconfig%2Fvms%2Fvms-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvms%2Fvms-c.c?ref=6ceb677f26951e8c06da7f565db05ce482a80f8a", "patch": "@@ -466,3 +466,19 @@ vms_c_common_override_options (void)\n       break;\n     }\n }\n+\n+/* The default value for _CRTL_VER macro.  */\n+\n+int\n+vms_c_get_crtl_ver (void)\n+{\n+  return VMS_DEFAULT_CRTL_VER;\n+}\n+\n+/* The default value for _VMS_VER macro.  */\n+\n+int\n+vms_c_get_vms_ver (void)\n+{\n+  return VMS_DEFAULT_VMS_VER;\n+}"}, {"sha": "ff97c314c2a21627a80e635f391f52b19eb0a211", "filename": "gcc/config/vms/vms-protos.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ceb677f26951e8c06da7f565db05ce482a80f8a/gcc%2Fconfig%2Fvms%2Fvms-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ceb677f26951e8c06da7f565db05ce482a80f8a/gcc%2Fconfig%2Fvms%2Fvms-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvms%2Fvms-protos.h?ref=6ceb677f26951e8c06da7f565db05ce482a80f8a", "patch": "@@ -20,6 +20,8 @@ along with GCC; see the file COPYING3.  If not see\n /* vms-c.c  */\n extern void vms_c_register_pragma (void);\n extern void vms_c_common_override_options (void);\n+extern int vms_c_get_crtl_ver (void);\n+extern int vms_c_get_vms_ver (void);\n \n /* vms.c  */\n void vms_patch_builtins (void);"}, {"sha": "f2bc354d684114052ab29435b49416e7ff3cad50", "filename": "gcc/config/vms/vms.h", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ceb677f26951e8c06da7f565db05ce482a80f8a/gcc%2Fconfig%2Fvms%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ceb677f26951e8c06da7f565db05ce482a80f8a/gcc%2Fconfig%2Fvms%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvms%2Fvms.h?ref=6ceb677f26951e8c06da7f565db05ce482a80f8a", "patch": "@@ -21,19 +21,21 @@ along with GCC; see the file COPYING3.  If not see\n #define TARGET_OBJECT_SUFFIX \".obj\"\n #define TARGET_EXECUTABLE_SUFFIX \".exe\"\n \n-#define TARGET_OS_CPP_BUILTINS()                                \\\n-  do {                                                          \\\n-    builtin_define_std (\"vms\");                                 \\\n-    builtin_define_std (\"VMS\");                                 \\\n-    builtin_assert (\"system=vms\");                              \\\n-    SUBTARGET_OS_CPP_BUILTINS();                                \\\n-    builtin_define (\"__int64=long long\");                       \\\n-    if (flag_vms_pointer_size == VMS_POINTER_SIZE_32)           \\\n-      builtin_define (\"__INITIAL_POINTER_SIZE=32\");             \\\n-    else if (flag_vms_pointer_size == VMS_POINTER_SIZE_64)      \\\n-      builtin_define (\"__INITIAL_POINTER_SIZE=64\");             \\\n-    if (POINTER_SIZE == 64)                                     \\\n-      builtin_define (\"__LONG_POINTERS=1\");                     \\\n+#define TARGET_OS_CPP_BUILTINS()\t\t\t\t\t \\\n+  do {\t\t\t\t\t\t\t\t\t \\\n+    builtin_define_std (\"vms\");\t\t\t\t\t\t \\\n+    builtin_define_std (\"VMS\");\t\t\t\t\t\t \\\n+    builtin_assert (\"system=vms\");\t\t\t\t\t \\\n+    SUBTARGET_OS_CPP_BUILTINS();\t\t\t\t\t \\\n+    builtin_define (\"__int64=long long\");\t\t\t\t \\\n+    if (flag_vms_pointer_size == VMS_POINTER_SIZE_32)\t\t\t \\\n+      builtin_define (\"__INITIAL_POINTER_SIZE=32\");\t\t\t \\\n+    else if (flag_vms_pointer_size == VMS_POINTER_SIZE_64)\t\t \\\n+      builtin_define (\"__INITIAL_POINTER_SIZE=64\");\t\t\t \\\n+    if (POINTER_SIZE == 64)\t\t\t\t\t\t \\\n+      builtin_define (\"__LONG_POINTERS=1\");\t\t\t\t \\\n+    builtin_define_with_int_value (\"__CRTL_VER\", vms_c_get_crtl_ver ()); \\\n+    builtin_define_with_int_value (\"__VMS_VER\", vms_c_get_vms_ver ());   \\\n   } while (0)\n \n extern void vms_c_register_includes (const char *, const char *, int);"}]}