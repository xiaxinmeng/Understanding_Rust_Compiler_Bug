{"sha": "63e76c876f20c338c03091b3c38828ca23eb5cb8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNlNzZjODc2ZjIwYzMzOGMwMzA5MWIzYzM4ODI4Y2EyM2ViNWNiOA==", "commit": {"author": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-05-13T12:46:34Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-05-13T12:46:34Z"}, "message": "Grrr! ChangeLog omitted for last warning fix update.\n\nFrom-SVN: r19720", "tree": {"sha": "6b97cb0c9891dfcc27bde04c22f1b232f6aa6539", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b97cb0c9891dfcc27bde04c22f1b232f6aa6539"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63e76c876f20c338c03091b3c38828ca23eb5cb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63e76c876f20c338c03091b3c38828ca23eb5cb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63e76c876f20c338c03091b3c38828ca23eb5cb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63e76c876f20c338c03091b3c38828ca23eb5cb8/comments", "author": null, "committer": null, "parents": [{"sha": "d6f4ec5199c42d44d7dab21c45a82ec6f9382819", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6f4ec5199c42d44d7dab21c45a82ec6f9382819", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6f4ec5199c42d44d7dab21c45a82ec6f9382819"}], "stats": {"total": 153, "additions": 153, "deletions": 0}, "files": [{"sha": "cce3da58cc68eb48f6d7a0974749330c5b47a5e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 153, "deletions": 0, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e76c876f20c338c03091b3c38828ca23eb5cb8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e76c876f20c338c03091b3c38828ca23eb5cb8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=63e76c876f20c338c03091b3c38828ca23eb5cb8", "patch": "@@ -1,3 +1,156 @@\n+Wed May 13 15:43:44 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (c-lang.o): Depend on c-tree.h, c-lex.h and toplev.h.\n+\t(c-lex.o): Depend on output.h.\n+\t(c-common.o): Likewise.\n+\t(stmt.o): Likewise.\n+\t(calls.o): Likewise.\n+\t(integrate.o): Depend on toplev.h.\n+\t(regclass.o): Depend on output.h.\n+\t(final.o): Depend on reload.h.\n+\n+\t* c-common.c: Include output.h.\n+\t(check_format_info): Remove unused variable `integral_format'.\n+\n+\t* c-decl.c (print_lang_decl): Mark parameters `file', `node' and\n+\t`indent' with ATTRIBUTE_UNUSED.\n+\t(print_lang_type): Likewise.\n+\t(maybe_build_cleanup): Likewise for parameter `decl'.\n+\t(copy_lang_decl): Likewise for parameter `node'.\n+\n+\t* c-lang.c: Include c-tree.h, c-lex.h and toplev.h.\n+\t(lang_print_xnode): Mark parameters `file', `node' and `indent'\n+ \twith ATTRIBUTE_UNUSED.\n+\t(lookup_interface): Likewise for parameter `arg'.\n+\t(is_class_name): Likewise.\n+\t(maybe_objc_check_decl): Likewise for parameter `decl'.\n+\t(maybe_objc_comptypes): Likewise for parameters `lhs', `rhs' and\n+\t`reflexive'.\n+\t(maybe_objc_method_name): Likewise for parameter `decl'.\n+\t(build_objc_string): Likewise for parameters `len' and `str'.\n+\n+\t* c-lex.c: Include output.h.\n+\n+\t* c-lex.h (position_after_white_space): Correct typo in prototype.\n+\n+\t* c-tree.h (finish_file, c_expand_start_cond, c_expand_start_else,\n+ \tc_expand_end_cond, init_iterators): Add prototypes.\n+\n+\t* caller-save.c (set_reg_live): Mark parameters `reg' and `setter'\n+\twith ATTRIBUTE_UNUSED.\n+\n+\t* calls.c: Include output.h.\n+\n+\t* cccp.c (pipe_closed): Mark parameter `signo' with\n+ \tATTRIBUTE_UNUSED.\n+\n+\t* combine.c: Move inclusion of expr.h to after insn-config.h.\n+\n+\t* iris6.h (ASM_IDENTIFY_GCC, ASM_IDENTIFY_LANGUAGE): Don't define\n+\tas empty, rather define as ((void)0).\n+\n+\t* sparc.c (sparc_check_64): Add braces around ambiguous `else'.\n+\tAdd parentheses around assignment used as truth value.\n+\n+\t* cplus-dem.c (squangle_mop_up): Change return type to void.\n+\t(internal_cplus_demangle): Remove unused parameter `options'.\n+\tAll callers changed.\n+\t(cplus_demangle_opname): Remove function wide variable `int i' and\n+ \treplace with `size_t i' at each location where it is used.\n+\t(cplus_demangle_opname): change type of `i' from int to size_t.\n+\n+\t* cppexp.c (right_shift): Mark parameter `pfile' with\n+\tATTRIBUTE_UNUSED.\n+\n+\t* cpphash.c (cpp_lookup): Likewise.\n+\t(cpp_hash_cleanup): Likewise.\n+\n+\t* cpplib.c (parse_name): Add a prototype and make it static.\n+\t(null_underflow): Mark parameter `pfile' with ATTRIBUTE_UNUSED.\n+\t(null_cleanup): Likewise for parameters `pbuf' and `pfile'.\n+\t(macro_cleanup): Likewise for parameter `pfile'.\n+\t(file_cleanup): Likewise.\n+\n+\t* cpplib.h (cpp_reader_init, cpp_options_init, cpp_start_read,\n+ \tcpp_read_check_assertion, skip_rest_of_line): Add prototypes.\n+\n+\t* crtstuff.c (force_to_data, __CTOR_LIST__, force_to_data,\n+\t__DTOR_END__, __FRAME_END__): Mark with ATTRIBUTE_UNUSED.\n+\n+\t* cse.c (cse_check_loop_start): Mark parameter `set' with\n+ \tATTRIBUTE_UNUSED.\n+\n+\t* dbxout.c (flag_minimal_debug, have_used_extensions,\n+\tsource_label_number): Move inside macro wrapper check against\n+\tdefined (DBX_DEBUGGING_INFO) || defined (XCOFF_DEBUGGING_INFO).\n+\n+\t* dwarf2out.c (gen_entry_point_die): Hide prototype and definition.\n+\n+\t* except.h (doing_eh): Provide prototype.\n+\n+\t* expr.c: Move inclusion of expr.h to after insn-config.h.\n+\n+\t* final.c: Include reload.h.\n+\t(shorten_branches): Cast the first argument of bzero to char *.\n+\n+\t* fix-header.c (cpp_print_containing_files): Mark parameter\n+ \t`pfile' with ATTRIBUTE_UNUSED.\n+\t(cpp_fatal): Likewise.\n+\n+\t* flow.c (find_basic_blocks_1): Cast the first argument of bzero\n+\tto char *.\n+\n+\t* genattrtab.c (make_length_attrs): Change the type of variable\n+\t`i' from int to size_t.\n+\t(zero_fn): Mark parameter `exp' with ATTRIBUTE_UNUSED.\n+\t(one_fn): Likewise.\n+\t\n+\t* genextract.c (main): When generating insn-extract.c, mark\n+\tvariable `junk' with ATTRIBUTE_UNUSED.\n+\n+\t* gengenrtl.c (gencode): When generating genrtl.c, cast the first\n+\targument of bzero to char*.\n+\n+\t* integrate.c: Include toplev.h.\n+\n+\t* libgcc2.c: Wrap `struct exception_table' and\n+\t`find_exception_handler' in macro DWARF2_UNWIND_INFO.\n+\n+\t* objc/Make-lang.in (objc-act.o): Depend on toplev.h.\n+\t\n+\t* objc/objc-act.c: Include toplev.h.\n+\t(lang_print_xnode): Mark parameters `file', `node' and `indent'\n+\twith ATTRIBUTE_UNUSED.\n+\t(finish_protocol): Likewise for parameter `protocol'.\n+\n+\t* output.h (declare_weak): Add prototype.\n+\t(decode_reg_name): Don't wrap with TREE_CODE macro.\n+\t(assemble_alias): Add prototype.\n+\n+\t* regclass.c: Include output.h.\n+\n+\t* reload.h (reloads_conflict): Add prototype.\n+\n+\t* rtl.h (print_rtl_single, mark_elimiation, reg_class_subset_p,\n+\toutput_func_start_profiler): Add prototypes.\n+\n+\t* rtlanal.c (reg_set_p_1): Mark parameters `x' and `pat' with\n+ \tATTRIBUTE_UNUSED.\n+\n+\t* scan-decls.c: Include scan.h.\n+\n+\t* scan.h (recognized_function, recognized_extern): Add prototypes.\n+\n+\t* stmt.c: Include output.h.\n+\n+\t* toplev.c (error_for_asm, warning_for_asm): Remove prototypes.\n+\t(output_lang_identify): Hide prototype and definition.\n+\t(float_signal): Mark parameter `signo' with ATTRIBUTE_UNUSED.\n+\t(pipe_closed): Likewise.\n+\n+\t* toplev.h (count_error, strip_off_ending, error_for_asm,\n+ \twarning_for_asm): Add prototypes.\n+\n Wed May 13 12:54:19 1998  Michael Meissner  <meissner@cygnus.com>\n \n \t* toplev.c (rest_of_compilation): \"Charge\" final for any time"}]}