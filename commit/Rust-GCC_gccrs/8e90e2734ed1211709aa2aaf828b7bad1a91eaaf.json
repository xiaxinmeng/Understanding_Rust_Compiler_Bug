{"sha": "8e90e2734ed1211709aa2aaf828b7bad1a91eaaf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU5MGUyNzM0ZWQxMjExNzA5YWEyYWFmODI4YjdiYWQxYTkxZWFhZg==", "commit": {"author": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1996-12-10T18:47:02Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1996-12-10T18:47:02Z"}, "message": "(ADJUST_INSN_LENGTH): don't break from loop when only a LOOP_BEG is found.\n\nCalculate padding in new variable pad.\n\nFrom-SVN: r13261", "tree": {"sha": "761d620d0e8bb49c35fdee33187e8c08caf4a7af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/761d620d0e8bb49c35fdee33187e8c08caf4a7af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e90e2734ed1211709aa2aaf828b7bad1a91eaaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e90e2734ed1211709aa2aaf828b7bad1a91eaaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e90e2734ed1211709aa2aaf828b7bad1a91eaaf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e90e2734ed1211709aa2aaf828b7bad1a91eaaf/comments", "author": null, "committer": null, "parents": [{"sha": "cc3af271e681b358eed6e9fbbf5971a2fdd01a84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc3af271e681b358eed6e9fbbf5971a2fdd01a84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc3af271e681b358eed6e9fbbf5971a2fdd01a84"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "8408bc64597f48cf3fd1a6fce05c316ffd1d3181", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e90e2734ed1211709aa2aaf828b7bad1a91eaaf/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e90e2734ed1211709aa2aaf828b7bad1a91eaaf/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=8e90e2734ed1211709aa2aaf828b7bad1a91eaaf", "patch": "@@ -1650,27 +1650,34 @@ extern int pragma_interrupt;\n     LENGTH += 2;\t\t\t\t\t\t\\\n   if (! TARGET_SMALLCODE)\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n+      /* After the folowing loop,  PAD will be an upper bound\t\\\n+\t for the number of padding bytes the alignment will\t\\\n+\t require.  */\t\t\t\t\t\t\\\n        rtx aip;\t\t\t\t\t\t\t\\\n+       int pad = 0;\t\t\t\t\t\t\\\n        for (aip = PREV_INSN (X); aip; aip = PREV_INSN (aip))\t\\\n \t {\t\t\t\t\t\t\t\\\n \t   if (GET_CODE (aip) == BARRIER)\t\t\t\\\n \t     {\t\t\t\t\t\t\t\\\n \t       if (TARGET_SH3 || TARGET_SH3E)\t\t\t\\\n-\t\t LENGTH += 14;\t\t\t\t\t\\\n+\t\t pad = 14;\t\t\t\t\t\\\n \t       else\t\t\t\t\t\t\\\n-\t\t LENGTH += 2;\t\t\t\t\t\\\n+\t\t pad = 2;\t\t\t\t\t\\\n \t       break;\t\t\t\t\t\t\\\n \t     }\t\t\t\t\t\t\t\\\n \t   else if ((GET_CODE (aip) == NOTE\t\t\t\\\n \t\t     && NOTE_LINE_NUMBER (aip) == NOTE_INSN_LOOP_BEG)) \\\n \t     {\t\t\t\t\t\t\t\\\n-\t       LENGTH += 2;\t\t\t\t\t\\\n-\t       break;\t\t\t\t\t\t\\\n+\t       pad = 2;\t\t\t\t\t\\\n+\t       /* Don't break here, because there might be a\t\\\n+\t\t  preceding BARRIER, which requires mores\t\\\n+\t\t  alignment for SH3[E] .  */\t\t\t\\\n \t     }\t\t\t\t\t\t\t\\\n \t   else if (GET_CODE (aip) != NOTE\t\t\t\\\n \t\t    && GET_CODE (aip) != CODE_LABEL)\t\t\\\n \t     break;\t\t\t\t\t\t\\\n \t }\t\t\t\t\t\t\t\\\n+       LENGTH += pad;\t\t\t\t\t\t\\\n     }\n \n /* Enable a bug fix for the shorten_branches pass.  */"}]}