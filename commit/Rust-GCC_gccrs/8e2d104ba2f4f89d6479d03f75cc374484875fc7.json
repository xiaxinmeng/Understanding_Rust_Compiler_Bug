{"sha": "8e2d104ba2f4f89d6479d03f75cc374484875fc7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUyZDEwNGJhMmY0Zjg5ZDY0NzlkMDNmNzVjYzM3NDQ4NDg3NWZjNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-11-25T15:30:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-11-25T15:30:09Z"}, "message": "[multiple changes]\n\n2015-11-25  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* gnatlink.adb (Gnatlink): Do not reinstate -fsjlj for the linker\n\tfrom the switches saved in the ALI file but from the exception\n\tsettings.\n\n2015-11-25  Arnaud Charlet  <charlet@adacore.com>\n\n\t* lib-xref-spark_specific.adb\n\t(Add_SPARK_Scope): Take entry families into account.\n\t* a-exetim.ads, a-exetim-default.ads, a-exetim-mingw.ads (Clock,\n\tClock_For_Interrupts): preconditions added.\n\t* a-extiin.ads (Clock): preconditions added.\n\t* par-ch3.adb (P_Declarative_Items): In case of misplaced\n\taspect specifications, ensure that flag Done is properly set to\n\tcontinue parsing.\n\nFrom-SVN: r230879", "tree": {"sha": "0b4ee010f8f17eeae93b58244a06c4db1d8650d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b4ee010f8f17eeae93b58244a06c4db1d8650d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e2d104ba2f4f89d6479d03f75cc374484875fc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e2d104ba2f4f89d6479d03f75cc374484875fc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e2d104ba2f4f89d6479d03f75cc374484875fc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e2d104ba2f4f89d6479d03f75cc374484875fc7/comments", "author": null, "committer": null, "parents": [{"sha": "7b52257cfa555812c6755dd69f21ee92e7d2bd5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b52257cfa555812c6755dd69f21ee92e7d2bd5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b52257cfa555812c6755dd69f21ee92e7d2bd5b"}], "stats": {"total": 73, "additions": 60, "deletions": 13}, "files": [{"sha": "d7df276aa1a2ee77a5823b81eee0d5661aae0928", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e2d104ba2f4f89d6479d03f75cc374484875fc7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e2d104ba2f4f89d6479d03f75cc374484875fc7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8e2d104ba2f4f89d6479d03f75cc374484875fc7", "patch": "@@ -1,3 +1,20 @@\n+2015-11-25  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnatlink.adb (Gnatlink): Do not reinstate -fsjlj for the linker\n+\tfrom the switches saved in the ALI file but from the exception\n+\tsettings.\n+\n+2015-11-25  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* lib-xref-spark_specific.adb\n+\t(Add_SPARK_Scope): Take entry families into account.\n+\t* a-exetim.ads, a-exetim-default.ads, a-exetim-mingw.ads (Clock,\n+\tClock_For_Interrupts): preconditions added.\n+\t* a-extiin.ads (Clock): preconditions added.\n+\t* par-ch3.adb (P_Declarative_Items): In case of misplaced\n+\taspect specifications, ensure that flag Done is properly set to\n+\tcontinue parsing.\n+\n 2015-11-25  Arnaud Charlet  <charlet@adacore.com>\n \n \t* exp_util.adb (Remove_Side_Effects): Minimize extra temporaries"}, {"sha": "50b9bc50fab55d71d07a45cd9ad1389c935b21a3", "filename": "gcc/ada/a-exetim-default.ads", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e2d104ba2f4f89d6479d03f75cc374484875fc7/gcc%2Fada%2Fa-exetim-default.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e2d104ba2f4f89d6479d03f75cc374484875fc7/gcc%2Fada%2Fa-exetim-default.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exetim-default.ads?ref=8e2d104ba2f4f89d6479d03f75cc374484875fc7", "patch": "@@ -47,13 +47,16 @@ is\n    CPU_Time_Unit  : constant := Ada.Real_Time.Time_Unit;\n    CPU_Tick       : constant Ada.Real_Time.Time_Span;\n \n+   use type Ada.Task_Identification.Task_Id;\n+\n    function Clock\n      (T : Ada.Task_Identification.Task_Id :=\n         Ada.Task_Identification.Current_Task)\n       return CPU_Time\n    with\n      Volatile_Function,\n-     Global => Ada.Real_Time.Clock_Time;\n+     Global => Ada.Real_Time.Clock_Time,\n+     Pre    => T /= Ada.Task_Identification.Null_Task_Id;\n \n    function \"+\"\n      (Left  : CPU_Time;\n@@ -105,9 +108,12 @@ is\n    Interrupt_Clocks_Supported          : constant Boolean := False;\n    Separate_Interrupt_Clocks_Supported : constant Boolean := False;\n \n+   pragma Warnings (Off, \"check will fail at run time\");\n    function Clock_For_Interrupts return CPU_Time with\n      Volatile_Function,\n-     Global => Ada.Real_Time.Clock_Time;\n+     Global => Ada.Real_Time.Clock_Time,\n+     Pre    => Interrupt_Clocks_Supported;\n+   pragma Warnings (On, \"check will fail at run time\");\n \n private\n    pragma SPARK_Mode (Off);"}, {"sha": "5ba3e08c386683f0d0cb7b1208946e11d3df9d9c", "filename": "gcc/ada/a-exetim-mingw.ads", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e2d104ba2f4f89d6479d03f75cc374484875fc7/gcc%2Fada%2Fa-exetim-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e2d104ba2f4f89d6479d03f75cc374484875fc7/gcc%2Fada%2Fa-exetim-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exetim-mingw.ads?ref=8e2d104ba2f4f89d6479d03f75cc374484875fc7", "patch": "@@ -49,13 +49,16 @@ is\n    CPU_Time_Unit  : constant := 0.000001;\n    CPU_Tick       : constant Ada.Real_Time.Time_Span;\n \n+   use type Ada.Task_Identification.Task_Id;\n+\n    function Clock\n      (T : Ada.Task_Identification.Task_Id :=\n         Ada.Task_Identification.Current_Task)\n       return CPU_Time\n    with\n      Volatile_Function,\n-     Global => Ada.Real_Time.Clock_Time;\n+     Global => Ada.Real_Time.Clock_Time,\n+     Pre    => T /= Ada.Task_Identification.Null_Task_Id;\n \n    function \"+\"\n      (Left  : CPU_Time;\n@@ -105,9 +108,12 @@ is\n    Interrupt_Clocks_Supported          : constant Boolean := False;\n    Separate_Interrupt_Clocks_Supported : constant Boolean := False;\n \n+   pragma Warnings (Off, \"check will fail at run time\");\n    function Clock_For_Interrupts return CPU_Time with\n      Volatile_Function,\n-     Global => Ada.Real_Time.Clock_Time;\n+     Global => Ada.Real_Time.Clock_Time,\n+     Pre    => Interrupt_Clocks_Supported;\n+   pragma Warnings (On, \"check will fail at run time\");\n \n private\n    pragma SPARK_Mode (Off);"}, {"sha": "d75b6befb6f7dd90622a5b2413025ffa35c5ea91", "filename": "gcc/ada/a-exetim.ads", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e2d104ba2f4f89d6479d03f75cc374484875fc7/gcc%2Fada%2Fa-exetim.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e2d104ba2f4f89d6479d03f75cc374484875fc7/gcc%2Fada%2Fa-exetim.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exetim.ads?ref=8e2d104ba2f4f89d6479d03f75cc374484875fc7", "patch": "@@ -38,13 +38,16 @@ is\n    CPU_Time_Unit  : constant := 0.000001;\n    CPU_Tick       : constant Ada.Real_Time.Time_Span;\n \n+   use type Ada.Task_Identification.Task_Id;\n+\n    function Clock\n      (T : Ada.Task_Identification.Task_Id :=\n         Ada.Task_Identification.Current_Task)\n       return CPU_Time\n    with\n      Volatile_Function,\n-     Global => Ada.Real_Time.Clock_Time;\n+     Global => Ada.Real_Time.Clock_Time,\n+     Pre    => T /= Ada.Task_Identification.Null_Task_Id;\n \n    function \"+\"\n      (Left  : CPU_Time;\n@@ -96,9 +99,12 @@ is\n    Interrupt_Clocks_Supported          : constant Boolean := False;\n    Separate_Interrupt_Clocks_Supported : constant Boolean := False;\n \n+   pragma Warnings (Off, \"check will fail at run time\");\n    function Clock_For_Interrupts return CPU_Time with\n      Volatile_Function,\n-     Global => Ada.Real_Time.Clock_Time;\n+     Global => Ada.Real_Time.Clock_Time,\n+     Pre    => Interrupt_Clocks_Supported;\n+   pragma Warnings (On, \"check will fail at run time\");\n \n private\n    pragma SPARK_Mode (Off);"}, {"sha": "a4edb8f28e7600f9cadd5ca1047c52cca9af88b1", "filename": "gcc/ada/a-extiin.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e2d104ba2f4f89d6479d03f75cc374484875fc7/gcc%2Fada%2Fa-extiin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e2d104ba2f4f89d6479d03f75cc374484875fc7/gcc%2Fada%2Fa-extiin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-extiin.ads?ref=8e2d104ba2f4f89d6479d03f75cc374484875fc7", "patch": "@@ -25,7 +25,8 @@ is\n    function Clock (Interrupt : Ada.Interrupts.Interrupt_ID) return CPU_Time\n    with\n      Volatile_Function,\n-     Global => Ada.Real_Time.Clock_Time;\n+     Global => Ada.Real_Time.Clock_Time,\n+     Pre    => Separate_Interrupt_Clocks_Supported;\n \n    function Supported (Interrupt : Ada.Interrupts.Interrupt_ID) return Boolean\n    with"}, {"sha": "0d190eb1a31111849febb75d6dc4f2c9195f2d3e", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e2d104ba2f4f89d6479d03f75cc374484875fc7/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e2d104ba2f4f89d6479d03f75cc374484875fc7/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=8e2d104ba2f4f89d6479d03f75cc374484875fc7", "patch": "@@ -1588,6 +1588,16 @@ begin\n                   end if;\n                end;\n             end loop;\n+\n+            --  Pass -fsjlj to the linker with back-end SJLJ exceptions\n+\n+            if not ALIs.Table (A).Frontend_Exceptions\n+              and then not ALIs.Table (A).Zero_Cost_Exceptions\n+            then\n+               Linker_Options.Increment_Last;\n+               Linker_Options.Table\n+                (Linker_Options.Last) := new String'(\"-fsjlj\");\n+            end if;\n          end if;\n       end;\n    end if;"}, {"sha": "c857b0f6944a266a801705c86b9b44e7b93daead", "filename": "gcc/ada/lib-xref-spark_specific.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e2d104ba2f4f89d6479d03f75cc374484875fc7/gcc%2Fada%2Flib-xref-spark_specific.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e2d104ba2f4f89d6479d03f75cc374484875fc7/gcc%2Fada%2Flib-xref-spark_specific.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-spark_specific.adb?ref=8e2d104ba2f4f89d6479d03f75cc374484875fc7", "patch": "@@ -260,6 +260,7 @@ package body SPARK_Specific is\n \n       case Ekind (E) is\n          when E_Entry\n+            | E_Entry_Family\n             | E_Function\n             | E_Generic_Function\n             | E_Generic_Package\n@@ -330,7 +331,7 @@ package body SPARK_Specific is\n \n       function Is_SPARK_Scope (E : Entity_Id) return Boolean;\n       --  Return whether the entity or reference scope meets requirements for\n-      --  being an SPARK scope.\n+      --  being a SPARK scope.\n \n       function Lt (Op1 : Natural; Op2 : Natural) return Boolean;\n       --  Comparison function for Sort call"}, {"sha": "3863c5a56f3db62a5b9b9715a1ed00999eccd767", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e2d104ba2f4f89d6479d03f75cc374484875fc7/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e2d104ba2f4f89d6479d03f75cc374484875fc7/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=8e2d104ba2f4f89d6479d03f75cc374484875fc7", "patch": "@@ -4441,13 +4441,13 @@ package body Ch3 is\n \n                else\n                   Error_Msg_SC (\"aspect specifications not allowed here\");\n+               end if;\n \n-                  --  Assume that this is a misplaced aspect specification\n-                  --  within a declarative list. After discarding the\n-                  --  misplaced aspects we can continue the scan.\n+               --  Assume that this is a misplaced aspect specification within\n+               --  a declarative list. After discarding the misplaced aspects\n+               --  we can continue the scan.\n \n-                  Done := False;\n-               end if;\n+               Done := False;\n \n                declare\n                   Dummy_Node : constant Node_Id :="}]}