{"sha": "a1b418cb9ff3805dadc1b140f96ad545484618ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFiNDE4Y2I5ZmYzODA1ZGFkYzFiMTQwZjk2YWQ1NDU0ODQ2MThhZA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-12-24T18:12:02Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-12-24T18:12:02Z"}, "message": "[multiple changes]\n\n2009-12-24  Edward Smith-Rowland  <3dw4rd@verizon.net>\n\t    Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/std/bitset (bitset<>::bitset(const char*)): Add.\n\n2009-12-24  Jonathan Wakely  <jwakely.gcc@gmail.com>\n\t    Edward Smith-Rowland  <3dw4rd@verizon.net>\n\n\t* testsuite/23_containers/bitset/cons/2.cc: New.\n\nFrom-SVN: r155458", "tree": {"sha": "e03de1e9b02147e3164675b91b695f4038290978", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e03de1e9b02147e3164675b91b695f4038290978"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1b418cb9ff3805dadc1b140f96ad545484618ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1b418cb9ff3805dadc1b140f96ad545484618ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1b418cb9ff3805dadc1b140f96ad545484618ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1b418cb9ff3805dadc1b140f96ad545484618ad/comments", "author": null, "committer": null, "parents": [{"sha": "c5a2375241372f3c2106878a91843c3285fb72be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5a2375241372f3c2106878a91843c3285fb72be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5a2375241372f3c2106878a91843c3285fb72be"}], "stats": {"total": 76, "additions": 76, "deletions": 0}, "files": [{"sha": "333a51f7d149794e29f243256930af46cdee8269", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1b418cb9ff3805dadc1b140f96ad545484618ad/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1b418cb9ff3805dadc1b140f96ad545484618ad/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a1b418cb9ff3805dadc1b140f96ad545484618ad", "patch": "@@ -1,3 +1,13 @@\n+2009-12-24  Edward Smith-Rowland  <3dw4rd@verizon.net>\n+\t    Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/std/bitset (bitset<>::bitset(const char*)): Add.\n+\n+2009-12-24  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\t    Edward Smith-Rowland  <3dw4rd@verizon.net>\n+\n+\t* testsuite/23_containers/bitset/cons/2.cc: New.\n+\n 2009-12-24  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* include/std/functional (bind): Avoid invalid instantiations"}, {"sha": "3aee5c08974ceb06cd4a0611b09a92f56e47a085", "filename": "libstdc++-v3/include/std/bitset", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1b418cb9ff3805dadc1b140f96ad545484618ad/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1b418cb9ff3805dadc1b140f96ad545484618ad/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset?ref=a1b418cb9ff3805dadc1b140f96ad545484618ad", "patch": "@@ -798,6 +798,26 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \t  _M_copy_from_string(__s, __position, __n, __zero, __one);\n \t}\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      /**\n+       *  @brief  Construct from a string.\n+       *  @param  str  A string of '0' and '1' characters.\n+       *  @throw  std::invalid_argument  If a character appears in the string\n+       *                                 which is neither '0' nor '1'.\n+       */\n+      explicit\n+      bitset(const char* __str)\n+      : _Base()\n+      {\n+\tif (!__str)\n+\t  __throw_logic_error(__N(\"bitset::bitset(const char*)\"));\n+\n+\tconst size_t __len = __builtin_strlen(__str);\n+\t_M_copy_from_ptr<char, std::char_traits<char>>(__str, __len, 0,\n+\t\t\t\t\t\t       __len, '0', '1');\n+      }\n+#endif\n+\n       // 23.3.5.2 bitset operations:\n       //@{\n       /**"}, {"sha": "a1b9c649c9d8580060178d91b1237d289a3de036", "filename": "libstdc++-v3/testsuite/23_containers/bitset/cons/2.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1b418cb9ff3805dadc1b140f96ad545484618ad/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1b418cb9ff3805dadc1b140f96ad545484618ad/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F2.cc?ref=a1b418cb9ff3805dadc1b140f96ad545484618ad", "patch": "@@ -0,0 +1,46 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <bitset>\n+#include <string>\n+#include <testsuite_hooks.h>\n+\n+struct X\n+{\n+  operator const char*() { return \"10101010\"; }\n+};\n+\n+void\n+test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  X x;\n+  std::string s(x);\n+  std::bitset<32> b1(x);\n+  std::bitset<32> b2(s);\n+  VERIFY( b1 == b2 );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  return 0;\n+}"}]}