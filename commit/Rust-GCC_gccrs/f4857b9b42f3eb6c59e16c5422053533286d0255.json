{"sha": "f4857b9b42f3eb6c59e16c5422053533286d0255", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQ4NTdiOWI0MmYzZWI2YzU5ZTE2YzU0MjIwNTM1MzMyODZkMDI1NQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2002-08-02T02:53:24Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2002-08-02T02:53:24Z"}, "message": "* config/rs6000/rs6000.c (output_cbranch): Hint differently for power4.\n\nFrom-SVN: r55967", "tree": {"sha": "13abb91a05bc1b6a0d0e6a0caf0df775712263d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13abb91a05bc1b6a0d0e6a0caf0df775712263d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4857b9b42f3eb6c59e16c5422053533286d0255", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4857b9b42f3eb6c59e16c5422053533286d0255", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4857b9b42f3eb6c59e16c5422053533286d0255", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4857b9b42f3eb6c59e16c5422053533286d0255/comments", "author": null, "committer": null, "parents": [{"sha": "77ca7b2ecbc8572ece14e8853a08d118e83d2b45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77ca7b2ecbc8572ece14e8853a08d118e83d2b45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77ca7b2ecbc8572ece14e8853a08d118e83d2b45"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "f86aa87b6d6a444a5b2e4b7d101141b199a1dc72", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4857b9b42f3eb6c59e16c5422053533286d0255/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4857b9b42f3eb6c59e16c5422053533286d0255/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4857b9b42f3eb6c59e16c5422053533286d0255", "patch": "@@ -1,3 +1,7 @@\n+2002-08-02  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* config/rs6000/rs6000.c (output_cbranch): Hint differently for power4.\n+\n 2002-08-01  Daniel Jacobowitz  <drow@mvista.com>\n \n \t* Makefile.in ($(BUILD_PREFIX_1)ggc-none.o): Use $(GGC_H)."}, {"sha": "026e30f2c042ea01002813e92e1cf06e52294dd7", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4857b9b42f3eb6c59e16c5422053533286d0255/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4857b9b42f3eb6c59e16c5422053533286d0255/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=f4857b9b42f3eb6c59e16c5422053533286d0255", "patch": "@@ -8438,21 +8438,30 @@ output_cbranch (op, label, reversed, insn)\n   \n   /* Maybe we have a guess as to how likely the branch is.  \n      The old mnemonics don't have a way to specify this information.  */\n+  pred = \"\";\n   note = find_reg_note (insn, REG_BR_PROB, NULL_RTX);\n   if (note != NULL_RTX)\n     {\n       /* PROB is the difference from 50%.  */\n       int prob = INTVAL (XEXP (note, 0)) - REG_BR_PROB_BASE / 2;\n-      \n-      /* For branches that are very close to 50%, assume not-taken.  */\n-      if (abs (prob) > REG_BR_PROB_BASE / 20\n-\t  && ((prob > 0) ^ need_longbranch))\n-\tpred = \"+\";\n-      else\n-\tpred = \"-\";\n+      bool always_hint = rs6000_cpu != PROCESSOR_POWER4;\n+\n+      /* Only hint for highly probable/improbable branches on newer\n+\t cpus as static prediction overrides processor dynamic\n+\t prediction.  For older cpus we may as well always hint, but\n+\t assume not taken for branches that are very close to 50% as a\n+\t mispredicted taken branch is more expensive than a\n+\t mispredicted not-taken branch.  */ \n+      if (always_hint\n+\t  || abs (prob) > REG_BR_PROB_BASE / 100 * 48)\n+\t{\n+\t  if (abs (prob) > REG_BR_PROB_BASE / 20\n+\t      && ((prob > 0) ^ need_longbranch))\n+\t    pred = \"+\";\n+\t  else\n+\t    pred = \"-\";\n+\t}\n     }\n-  else\n-    pred = \"\";\n \n   if (label == NULL)\n     s += sprintf (s, \"{b%sr|b%slr%s} \", ccode, ccode, pred);"}]}