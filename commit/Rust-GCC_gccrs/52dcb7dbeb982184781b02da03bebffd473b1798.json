{"sha": "52dcb7dbeb982184781b02da03bebffd473b1798", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJkY2I3ZGJlYjk4MjE4NDc4MWIwMmRhMDNiZWJmZmQ0NzNiMTc5OA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2016-03-02T21:46:55Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2016-03-02T21:46:55Z"}, "message": "Regenerate doc/tm.texi\n\n\t* doc/tm.texi: Regenerated.\n\nFrom-SVN: r233917", "tree": {"sha": "70e7b7b2609515b7df816c8eab123552d0060965", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70e7b7b2609515b7df816c8eab123552d0060965"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52dcb7dbeb982184781b02da03bebffd473b1798", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52dcb7dbeb982184781b02da03bebffd473b1798", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52dcb7dbeb982184781b02da03bebffd473b1798", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52dcb7dbeb982184781b02da03bebffd473b1798/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "08c1904dccf3073bd93f154f5eefdd2d33bc273b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08c1904dccf3073bd93f154f5eefdd2d33bc273b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08c1904dccf3073bd93f154f5eefdd2d33bc273b"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "4800e1d1ebbb913e47803b86a5ee500f2516dafb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dcb7dbeb982184781b02da03bebffd473b1798/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dcb7dbeb982184781b02da03bebffd473b1798/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=52dcb7dbeb982184781b02da03bebffd473b1798", "patch": "@@ -1,3 +1,7 @@\n+2016-03-02  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* doc/tm.texi: Regenerated.\n+\n 2016-03-02  Richard Henderson  <rth@redhat.com>\n \n \tPR rtl-opt/67145"}, {"sha": "745910f9a33134eaac75afd676c73e2a0f9dcfe0", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dcb7dbeb982184781b02da03bebffd473b1798/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dcb7dbeb982184781b02da03bebffd473b1798/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=52dcb7dbeb982184781b02da03bebffd473b1798", "patch": "@@ -2861,7 +2861,7 @@ A target hook which can change allocno class for given pseudo from\n @end deftypefn\n \n @deftypefn {Target Hook} bool TARGET_LRA_P (void)\n-A target hook which returns true if we use LRA instead of reload pass.  It means that LRA was ported to the target.    The default version of this target hook returns always false.\n+A target hook which returns true if we use LRA instead of reload pass.    The default version of this target hook returns always false, but new  ports should use LRA.\n @end deftypefn\n \n @deftypefn {Target Hook} int TARGET_REGISTER_PRIORITY (int)"}]}