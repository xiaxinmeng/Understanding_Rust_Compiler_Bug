{"sha": "c926f6744090124163021a9b4623054e68ede1ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzkyNmY2NzQ0MDkwMTI0MTYzMDIxYTliNDYyMzA1NGU2OGVkZTFjZQ==", "commit": {"author": {"name": "Douglas B Rupp", "email": "rupp@gnat.com", "date": "2001-12-11T13:13:01Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-12-11T13:13:01Z"}, "message": "Makefile.in (stage[1234]-start): $(LN_S) utilities in a manner that works if LN_S = cp.\n\n\t* Makefile.in (stage[1234]-start): $(LN_S) utilities in a manner\n\tthat works if LN_S = cp.\n\nFrom-SVN: r47871", "tree": {"sha": "23e88eec3cf6039442faad6ccd31bf7c5e3fd79d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23e88eec3cf6039442faad6ccd31bf7c5e3fd79d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c926f6744090124163021a9b4623054e68ede1ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c926f6744090124163021a9b4623054e68ede1ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c926f6744090124163021a9b4623054e68ede1ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c926f6744090124163021a9b4623054e68ede1ce/comments", "author": null, "committer": null, "parents": [{"sha": "1ba35d3e9559b6ced43d3fae2d158f034802a40c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ba35d3e9559b6ced43d3fae2d158f034802a40c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ba35d3e9559b6ced43d3fae2d158f034802a40c"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "8d98a25a554dbddceeaec4f4f95357661f814c4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c926f6744090124163021a9b4623054e68ede1ce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c926f6744090124163021a9b4623054e68ede1ce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c926f6744090124163021a9b4623054e68ede1ce", "patch": "@@ -1,5 +1,8 @@\n Tue Dec 11 07:08:57 2001  Douglas B. Rupp  <rupp@gnat.com>\n \n+\t* Makefile.in (stage[1234]-start): $(LN_S) utilities in a manner\n+\tthat works if LN_S = cp.\n+\n \t* config/alpha/x-vms (version): Change \".\" to \"_\".\n \n \t* configure.in: Hardcode that vfork works on VMS host."}, {"sha": "a70153aeacdd425ef93f55682bba8ca6ab329f68", "filename": "gcc/Makefile.in", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c926f6744090124163021a9b4623054e68ede1ce/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c926f6744090124163021a9b4623054e68ede1ce/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=c926f6744090124163021a9b4623054e68ede1ce", "patch": "@@ -3137,9 +3137,9 @@ stage1-start:\n \t-mv intl/*$(objext) stage1/intl\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n-\t-if [ -f as$(exeext) ] ; then $(LN_S) ../as$(exeext) stage1 ; else true ; fi\n-\t-if [ -f ld$(exeext) ] ; then $(LN_S) ../ld$(exeext) stage1 ; else true ; fi\n-\t-if [ -f collect-ld$(exeext) ] ; then $(LN_S) ../collect-ld$(exeext) stage1 ; else true ; fi\n+\t-if [ -f as$(exeext) ] ; then (cd stage1 && $(LN_S) ../as$(exeext) .) ; else true ; fi\n+\t-if [ -f ld$(exeext) ] ; then (cd stage1 && $(LN_S) ../ld$(exeext) .) ; else true ; fi\n+\t-if [ -f collect-ld$(exeext) ] ; then (cd stage1 && $(LN_S) ../collect-ld$(exeext) .) ; else true ; fi\n \t-rm -f stage1/libgcc.a\n \t-cp libgcc.a stage1\n \t-if $(RANLIB_TEST_FOR_TARGET) ; then \\\n@@ -3162,9 +3162,9 @@ stage2-start:\n \t-mv intl/*$(objext) stage2/intl\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n-\t-if [ -f as$(exeext) ] ; then $(LN_S) ../as$(exeext) stage2 ; else true ; fi\n-\t-if [ -f ld$(exeext) ] ; then $(LN_S) ../ld$(exeext) stage2 ; else true ; fi\n-\t-if [ -f collect-ld ] ; then $(LN_S) ../collect-ld$(exeext) stage2 ; else true ; fi\n+\t-if [ -f as$(exeext) ] ; then (cd stage2 && $(LN_S) ../as$(exeext) .) ; else true ; fi\n+\t-if [ -f ld$(exeext) ] ; then (cd stage2 && $(LN_S) ../ld$(exeext) .) ; else true ; fi\n+\t-if [ -f collect-ld$(exeext) ] ; then (cd stage2 && $(LN_S) ../collect-ld$(exeext) .) ; else true ; fi\n \t-rm -f stage2/libgcc.a\n \t-cp libgcc.a stage2\n \t-if $(RANLIB_TEST_FOR_TARGET) ; then \\\n@@ -3187,9 +3187,9 @@ stage3-start:\n \t-mv intl/*$(objext) stage3/intl\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n-\t-if [ -f as$(exeext) ] ; then $(LN_S) ../as$(exeext) stage3 ; else true ; fi\n-\t-if [ -f ld$(exeext) ] ; then $(LN_S) ../ld$(exeext) stage3 ; else true ; fi\n-\t-if [ -f collect-ld$(exeext) ] ; then $(LN_S) ../collect-ld$(exeext) stage3 ; else true ; fi\n+\t-if [ -f as$(exeext) ] ; then (cd stage3 && $(LN_S) ../as$(exeext) .) ; else true ; fi\n+\t-if [ -f ld$(exeext) ] ; then (cd stage3 && $(LN_S) ../ld$(exeext) .) ; else true ; fi\n+\t-if [ -f collect-ld$(exeext) ] ; then (cd stage3 && $(LN_S) ../collect-ld$(exeext) .) ; else true ; fi\n \t-rm -f stage3/libgcc.a\n \t-cp libgcc.a stage3\n \t-if $(RANLIB_TEST_FOR_TARGET) ; then \\\n@@ -3212,9 +3212,9 @@ stage4-start:\n \t-mv intl/*$(objext) stage4/intl\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n-\t-if [ -f as$(exeext) ] ; then $(LN_S) ../as$(exeext) stage4 ; else true ; fi\n-\t-if [ -f ld$(exeext) ] ; then $(LN_S) ../ld$(exeext) stage4 ; else true ; fi\n-\t-if [ -f collect-ld$(exeext) ] ; then $(LN_S) ../collect-ld$(exeext) stage4 ; else true ; fi\n+\t-if [ -f as$(exeext) ] ; then (cd stage4 && $(LN_S) ../as$(exeext) .) ; else true ; fi\n+\t-if [ -f ld$(exeext) ] ; then (cd stage4 && $(LN_S) ../ld$(exeext) .) ; else true ; fi\n+\t-if [ -f collect-ld$(exeext) ] ; then (cd stage4 && $(LN_S) ../collect-ld$(exeext) .) ; else true ; fi\n \t-rm -f stage4/libgcc.a\n \t-cp libgcc.a stage4\n \t-if $(RANLIB_TEST_FOR_TARGET) ; then \\"}]}