{"sha": "6f0c43e97825ee54e3779afbedcd0def12443001", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmYwYzQzZTk3ODI1ZWU1NGUzNzc5YWZiZWRjZDBkZWYxMjQ0MzAwMQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-08-01T16:55:33Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-08-01T20:32:55Z"}, "message": "i386: Improve SImode constant - __builtin_clzll for -mno-lzcnt\n\nAdd a zero_extend patten for bsr_rex64_1 and use it to split SImode\nconstant - __builtin_clzll to avoid unncessary zero_extend.\n\ngcc/\n\n\tPR target/78103\n\t* config/i386/i386.md (bsr_rex64_1_zext): New.\n\t(combine splitter for constant - clzll): Replace gen_bsr_rex64_1\n\twith gen_bsr_rex64_1_zext.\n\ngcc/testsuite/\n\n\tPR target/78103\n\t* gcc.target/i386/pr78103-2.c: Also scan incl.\n\t* gcc.target/i386/pr78103-3.c: Scan leal|addl|incl for x32.  Also\n\tscan incq.", "tree": {"sha": "96c88229bdbe88003206abe51a0803d7d5f99843", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96c88229bdbe88003206abe51a0803d7d5f99843"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f0c43e97825ee54e3779afbedcd0def12443001", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f0c43e97825ee54e3779afbedcd0def12443001", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f0c43e97825ee54e3779afbedcd0def12443001", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f0c43e97825ee54e3779afbedcd0def12443001/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8dd16447343890091874c9f588a7fea8c840cf77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dd16447343890091874c9f588a7fea8c840cf77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dd16447343890091874c9f588a7fea8c840cf77"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "0c23ddb8d1f41afde123334ee9178e8fc846b101", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f0c43e97825ee54e3779afbedcd0def12443001/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f0c43e97825ee54e3779afbedcd0def12443001/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=6f0c43e97825ee54e3779afbedcd0def12443001", "patch": "@@ -14796,6 +14796,21 @@\n    (set_attr \"znver1_decode\" \"vector\")\n    (set_attr \"mode\" \"DI\")])\n \n+(define_insn \"bsr_rex64_1_zext\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(zero_extend:DI\n+\t  (minus:SI (const_int 63)\n+\t\t    (subreg:SI\n+\t\t      (clz:DI (match_operand:DI 1 \"nonimmediate_operand\" \"rm\"))\n+\t\t      0))))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"!TARGET_LZCNT && TARGET_64BIT\"\n+  \"bsr{q}\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"alu1\")\n+   (set_attr \"prefix_0f\" \"1\")\n+   (set_attr \"znver1_decode\" \"vector\")\n+   (set_attr \"mode\" \"DI\")])\n+\n (define_insn \"bsr\"\n   [(set (reg:CCZ FLAGS_REG)\n \t(compare:CCZ (match_operand:SI 1 \"nonimmediate_operand\" \"rm\")\n@@ -14907,7 +14922,7 @@\n   operands[5] = lowpart_subreg (SImode, operands[3], DImode);\n   if (INTVAL (operands[2]) == 63)\n     {\n-      emit_insn (gen_bsr_rex64_1 (operands[3], operands[1]));\n+      emit_insn (gen_bsr_rex64_1_zext (operands[3], operands[1]));\n       emit_move_insn (operands[0], operands[5]);\n       DONE;\n     }"}, {"sha": "30f7f98f60a41cc571df1a245809189c28540d30", "filename": "gcc/testsuite/gcc.target/i386/pr78103-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f0c43e97825ee54e3779afbedcd0def12443001/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr78103-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f0c43e97825ee54e3779afbedcd0def12443001/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr78103-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr78103-2.c?ref=6f0c43e97825ee54e3779afbedcd0def12443001", "patch": "@@ -4,7 +4,7 @@\n /* { dg-final { scan-assembler-not {\\mmovl\\M} } } */\n /* { dg-final { scan-assembler-not {\\mxor[lq]\\M} } } */\n /* { dg-final { scan-assembler-not {\\msubl\\M} } } */\n-/* { dg-final { scan-assembler {\\m(leal|addl)\\M} } } */\n+/* { dg-final { scan-assembler {\\m(leal|addl|incl)\\M} } } */\n \n unsigned int\n foo (unsigned int x)"}, {"sha": "b8d82312a0ed10a4ce0c2ab60e5779a3c20c1cb4", "filename": "gcc/testsuite/gcc.target/i386/pr78103-3.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f0c43e97825ee54e3779afbedcd0def12443001/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr78103-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f0c43e97825ee54e3779afbedcd0def12443001/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr78103-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr78103-3.c?ref=6f0c43e97825ee54e3779afbedcd0def12443001", "patch": "@@ -5,7 +5,8 @@\n /* { dg-final { scan-assembler-not {\\mmovslq\\M} } } */\n /* { dg-final { scan-assembler-not {\\mxor[lq]\\M} } } */\n /* { dg-final { scan-assembler-not {\\msubq\\M} } } */\n-/* { dg-final { scan-assembler {\\m(leaq|addq)\\M} } } */\n+/* { dg-final { scan-assembler {\\m(leaq|addq|incq)\\M} { target { ! x32 } } } } */\n+/* { dg-final { scan-assembler {\\m(leal|addl|incl)\\M} { target x32 } } } */\n \n unsigned long long\n foo (unsigned int x)"}]}