{"sha": "01306727d37b953932a24c24eca99808e26c22e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDEzMDY3MjdkMzdiOTUzOTMyYTI0YzI0ZWNhOTk4MDhlMjZjMjJlMA==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-07-09T22:00:52Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-07-09T22:00:52Z"}, "message": "re PR fortran/29459 (Spurious warnings about anonymous variables)\n\n\tPR fortran/29459\n\t* trans-array.c (gfc_trans_array_constructor): Mark offset field\n\twith TREE_NO_WARNING.\n\t* trans-decl.c (gfc_build_qualified_array): Mark lbound, ubound,\n\tstride and size variables with TREE_NO_WARNING.\n\nFrom-SVN: r126496", "tree": {"sha": "a91c5a5656a1533e49fdea2b5d41036e625301d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a91c5a5656a1533e49fdea2b5d41036e625301d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01306727d37b953932a24c24eca99808e26c22e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01306727d37b953932a24c24eca99808e26c22e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01306727d37b953932a24c24eca99808e26c22e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01306727d37b953932a24c24eca99808e26c22e0/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f67fa83f2c26552227efc893ae27a910a40e140", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f67fa83f2c26552227efc893ae27a910a40e140", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f67fa83f2c26552227efc893ae27a910a40e140"}], "stats": {"total": 31, "additions": 27, "deletions": 4}, "files": [{"sha": "e1a4942d7daa65a435e2578f3738902d93f0efb7", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01306727d37b953932a24c24eca99808e26c22e0/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01306727d37b953932a24c24eca99808e26c22e0/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=01306727d37b953932a24c24eca99808e26c22e0", "patch": "@@ -1,3 +1,11 @@\n+2007-07-09  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/29459\n+\t* trans-array.c (gfc_trans_array_constructor): Mark offset field\n+\twith TREE_NO_WARNING.\n+\t* trans-decl.c (gfc_build_qualified_array): Mark lbound, ubound,\n+\tstride and size variables with TREE_NO_WARNING.\n+\n 2007-07-09  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \t* trans-decl.c (set_tree_decl_type_code): Remove function."}, {"sha": "6a48031b3fb3dc4ac56f30c3364f423568ceebc9", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01306727d37b953932a24c24eca99808e26c22e0/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01306727d37b953932a24c24eca99808e26c22e0/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=01306727d37b953932a24c24eca99808e26c22e0", "patch": "@@ -1695,6 +1695,7 @@ gfc_trans_array_constructor (gfc_loopinfo * loop, gfc_ss * ss)\n   desc = ss->data.info.descriptor;\n   offset = gfc_index_zero_node;\n   offsetvar = gfc_create_var_np (gfc_array_index_type, \"offset\");\n+  TREE_NO_WARNING (offsetvar) = 1;\n   TREE_USED (offsetvar) = 0;\n   gfc_trans_array_constructor_value (&loop->pre, type, desc, c,\n \t\t\t\t     &offset, &offsetvar, dynamic);"}, {"sha": "49aaaf0e476e768cf5992f3625a931012b7c406e", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01306727d37b953932a24c24eca99808e26c22e0/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01306727d37b953932a24c24eca99808e26c22e0/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=01306727d37b953932a24c24eca99808e26c22e0", "patch": "@@ -633,20 +633,31 @@ gfc_build_qualified_array (tree decl, gfc_symbol * sym)\n   for (dim = 0; dim < GFC_TYPE_ARRAY_RANK (type); dim++)\n     {\n       if (GFC_TYPE_ARRAY_LBOUND (type, dim) == NULL_TREE)\n-        GFC_TYPE_ARRAY_LBOUND (type, dim) = create_index_var (\"lbound\", nest);\n+\t{\n+\t  GFC_TYPE_ARRAY_LBOUND (type, dim) = create_index_var (\"lbound\", nest);\n+\t  TREE_NO_WARNING (GFC_TYPE_ARRAY_LBOUND (type, dim)) = 1;\n+\t}\n       /* Don't try to use the unknown bound for assumed shape arrays.  */\n       if (GFC_TYPE_ARRAY_UBOUND (type, dim) == NULL_TREE\n           && (sym->as->type != AS_ASSUMED_SIZE\n               || dim < GFC_TYPE_ARRAY_RANK (type) - 1))\n-        GFC_TYPE_ARRAY_UBOUND (type, dim) = create_index_var (\"ubound\", nest);\n+\t{\n+\t  GFC_TYPE_ARRAY_UBOUND (type, dim) = create_index_var (\"ubound\", nest);\n+\t  TREE_NO_WARNING (GFC_TYPE_ARRAY_UBOUND (type, dim)) = 1;\n+\t}\n \n       if (GFC_TYPE_ARRAY_STRIDE (type, dim) == NULL_TREE)\n-        GFC_TYPE_ARRAY_STRIDE (type, dim) = create_index_var (\"stride\", nest);\n+\t{\n+\t  GFC_TYPE_ARRAY_STRIDE (type, dim) = create_index_var (\"stride\", nest);\n+\t  TREE_NO_WARNING (GFC_TYPE_ARRAY_STRIDE (type, dim)) = 1;\n+\t}\n     }\n   if (GFC_TYPE_ARRAY_OFFSET (type) == NULL_TREE)\n     {\n       GFC_TYPE_ARRAY_OFFSET (type) = gfc_create_var_np (gfc_array_index_type,\n \t\t\t\t\t\t\t\"offset\");\n+      TREE_NO_WARNING (GFC_TYPE_ARRAY_OFFSET (type)) = 1;\n+\n       if (nest)\n \tgfc_add_decl_to_parent_function (GFC_TYPE_ARRAY_OFFSET (type));\n       else\n@@ -655,7 +666,10 @@ gfc_build_qualified_array (tree decl, gfc_symbol * sym)\n \n   if (GFC_TYPE_ARRAY_SIZE (type) == NULL_TREE\n       && sym->as->type != AS_ASSUMED_SIZE)\n-    GFC_TYPE_ARRAY_SIZE (type) = create_index_var (\"size\", nest);\n+    {\n+      GFC_TYPE_ARRAY_SIZE (type) = create_index_var (\"size\", nest);\n+      TREE_NO_WARNING (GFC_TYPE_ARRAY_SIZE (type)) = 1;\n+    }\n \n   if (POINTER_TYPE_P (type))\n     {"}]}