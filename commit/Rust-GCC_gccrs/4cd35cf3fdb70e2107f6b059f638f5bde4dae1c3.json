{"sha": "4cd35cf3fdb70e2107f6b059f638f5bde4dae1c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNkMzVjZjNmZGI3MGUyMTA3ZjZiMDU5ZjYzOGY1YmRlNGRhZTFjMw==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2020-11-24T04:34:24Z"}, "committer": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2020-11-24T04:34:24Z"}, "message": "Fix expected output after recent changes\n\ngcc/testsuite\n\t* gcc.dg/tree-ssa/pr23401.c: Update expected output.\n\t* gcc.dg/tree-ssa/pr27810.c: Update expected output.\n\t* gcc.dg/tree-ssa/slsr-8.c: Update expected output.", "tree": {"sha": "d2d4478c9ced1501d40de81422d8e3178a316ba2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2d4478c9ced1501d40de81422d8e3178a316ba2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4cd35cf3fdb70e2107f6b059f638f5bde4dae1c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cd35cf3fdb70e2107f6b059f638f5bde4dae1c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cd35cf3fdb70e2107f6b059f638f5bde4dae1c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cd35cf3fdb70e2107f6b059f638f5bde4dae1c3/comments", "author": null, "committer": null, "parents": [{"sha": "ab1d52b5618cdb975b460782cd7b98a017c55615", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab1d52b5618cdb975b460782cd7b98a017c55615", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab1d52b5618cdb975b460782cd7b98a017c55615"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "a93fcaf8770fadc75f2d7d2c4f0d2834f6006aa8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr23401.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cd35cf3fdb70e2107f6b059f638f5bde4dae1c3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr23401.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cd35cf3fdb70e2107f6b059f638f5bde4dae1c3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr23401.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr23401.c?ref=4cd35cf3fdb70e2107f6b059f638f5bde4dae1c3", "patch": "@@ -19,5 +19,5 @@ int ffff(int i)\n \n /* We should not use extra temporaries apart from for i1 + i2.  */\n \n-/* { dg-final { scan-tree-dump-times \"int\" 5 \"gimple\" } } */\n+/* { dg-final { scan-tree-dump-times \"int\" 6 \"gimple\" } } */\n /* { dg-final { scan-tree-dump-times \"int D\\\\\\.\" 1 \"gimple\" } } */"}, {"sha": "5c1945bb5c183f9cd7e43d97cfad19cc0a9c831b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr27810.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cd35cf3fdb70e2107f6b059f638f5bde4dae1c3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr27810.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cd35cf3fdb70e2107f6b059f638f5bde4dae1c3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr27810.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr27810.c?ref=4cd35cf3fdb70e2107f6b059f638f5bde4dae1c3", "patch": "@@ -13,5 +13,5 @@ int qqq (int a)\n /* We should not use an extra temporary for the result of the\n    function call.  */\n \n-/* { dg-final { scan-tree-dump-times \"int\" 3 \"gimple\" } } */\n+/* { dg-final { scan-tree-dump-times \"int\" 4 \"gimple\" } } */\n /* { dg-final { scan-tree-dump-times \"int D\\\\\\.\" 1 \"gimple\" } } */"}, {"sha": "479f40f93de7112b963a7d9eda89658dfbe4434a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/slsr-8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cd35cf3fdb70e2107f6b059f638f5bde4dae1c3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fslsr-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cd35cf3fdb70e2107f6b059f638f5bde4dae1c3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fslsr-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fslsr-8.c?ref=4cd35cf3fdb70e2107f6b059f638f5bde4dae1c3", "patch": "@@ -23,7 +23,7 @@ f (int s, int *c, int *d)\n    However, this proves to be a useful test for introducing an\n    initializer with a cast, so we'll keep it as is.  */\n \n-/* There are 4 ' * ' instances in the decls (since \"int * iftmp.0;\" is\n-   added), 2 parms, 3 in the code.  The second one in the code may\n-   be a widening multiply (for example, on AArch64).  */\n-/* { dg-final { scan-tree-dump-times \" w?\\\\* \" 9 \"optimized\" } } */\n+/* There are 5 ' * ' instances in the decls (since \"int * iftmp.0;\" is\n+   added), 2 parms, 3 in the code, and the return value.  The second one\n+   in the code may be a widening multiply (for example, on AArch64).  */\n+/* { dg-final { scan-tree-dump-times \" w?\\\\* \" 10 \"optimized\" } } */"}]}