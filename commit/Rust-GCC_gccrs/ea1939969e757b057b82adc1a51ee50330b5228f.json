{"sha": "ea1939969e757b057b82adc1a51ee50330b5228f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWExOTM5OTY5ZTc1N2IwNTdiODJhZGMxYTUxZWU1MDMzMGI1MjI4Zg==", "commit": {"author": {"name": "Daniel Berlin", "email": "dan@cgsoftware.com", "date": "2001-06-16T16:13:25Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2001-06-16T16:13:25Z"}, "message": "bitmap.h: Add dump_bitmap...\n\n2001-06-16  Daniel Berlin  <dan@cgsoftware.com>\n\n\t* bitmap.h: Add dump_bitmap, bitmap_zero, bitmap_union_of_diffs,\n\tbitmap_a_or_b, bitmap_a_and_b, bitmap_first_set_bit,\n\tbitmap_last_set_bit. All for compatibility with sbitmap's.\n\n\t*bitmap.c (bitmap_zero): New function.\n\t(bitmap_union_of_diffs): New function.\n\t(bitmap_first_set_bit): New function.\n\t(bitmap_last_set_bit): New function.\n\nFrom-SVN: r43420", "tree": {"sha": "3a45f5c5fd147ad1c6593514ed6b6fb51ad056d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a45f5c5fd147ad1c6593514ed6b6fb51ad056d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea1939969e757b057b82adc1a51ee50330b5228f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea1939969e757b057b82adc1a51ee50330b5228f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea1939969e757b057b82adc1a51ee50330b5228f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea1939969e757b057b82adc1a51ee50330b5228f/comments", "author": null, "committer": null, "parents": [{"sha": "6d34c1c4f3cb9537b65a57ee9d6c80853ea0017a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d34c1c4f3cb9537b65a57ee9d6c80853ea0017a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d34c1c4f3cb9537b65a57ee9d6c80853ea0017a"}], "stats": {"total": 62, "additions": 60, "deletions": 2}, "files": [{"sha": "cd9d69dd23c40d32ddac60bd145d4912834c2154", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1939969e757b057b82adc1a51ee50330b5228f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1939969e757b057b82adc1a51ee50330b5228f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea1939969e757b057b82adc1a51ee50330b5228f", "patch": "@@ -1,3 +1,14 @@\n+2001-06-16  Daniel Berlin  <dan@cgsoftware.com>\n+\n+\t* bitmap.h: Add dump_bitmap, bitmap_zero, bitmap_union_of_diffs,\n+\tbitmap_a_or_b, bitmap_a_and_b, bitmap_first_set_bit,\n+\tbitmap_last_set_bit. All for compatibility with sbitmap's.\n+\n+\t*bitmap.c (bitmap_zero): New function.\n+\t(bitmap_union_of_diffs): New function.\n+\t(bitmap_first_set_bit): New function.\n+\t(bitmap_last_set_bit): New function.\n+\n 2001-06-16  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* cpp.texi, invoke.texi: Update."}, {"sha": "8521ab566fe1bbda5e5ad9ef629de98359339f64", "filename": "gcc/bitmap.c", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1939969e757b057b82adc1a51ee50330b5228f/gcc%2Fbitmap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1939969e757b057b82adc1a51ee50330b5228f/gcc%2Fbitmap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.c?ref=ea1939969e757b057b82adc1a51ee50330b5228f", "patch": "@@ -507,7 +507,9 @@ bitmap_operation (to, from1, from2, operation)\n \tcase BITMAP_IOR:\n \t  DOIT (|);\n \t  break;\n-\n+\tcase BITMAP_IOR_COMPL:\n+\t  DOIT (|~);\n+\t  break;\n \tcase BITMAP_XOR:\n \t  DOIT (^);\n \t  break;\n@@ -676,3 +678,37 @@ bitmap_release_memory ()\n       obstack_free (&bitmap_obstack, NULL);\n     }\n }\n+\n+int\n+bitmap_union_of_diff (dst, a, b, c)\n+     bitmap dst;\n+     bitmap a;\n+     bitmap b;\n+     bitmap c;\n+{\n+  int changed = 0;\n+  bitmap temp = BITMAP_ALLOCA ();\n+  bitmap_operation (temp, b, c, BITMAP_AND_COMPL);\n+  changed = bitmap_operation (dst, temp, a, BITMAP_IOR);\n+  return changed;\n+}\n+\n+int \n+bitmap_first_set_bit (a)\n+     bitmap a;\n+{\n+  int i;\n+  EXECUTE_IF_SET_IN_BITMAP (a, 0, i, return i;);\n+  return -1;\n+}\n+\n+int \n+bitmap_last_set_bit (a)\n+     bitmap a;\n+{\n+  int i;\n+  EXECUTE_IF_SET_IN_BITMAP (a, 0, i, );\n+  if (bitmap_bit_p (a, i))\n+    return i;\n+  return -1;\n+}"}, {"sha": "95c2a5e8f0d528c26d48ac9789891d4da242c9b6", "filename": "gcc/bitmap.h", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1939969e757b057b82adc1a51ee50330b5228f/gcc%2Fbitmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1939969e757b057b82adc1a51ee50330b5228f/gcc%2Fbitmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.h?ref=ea1939969e757b057b82adc1a51ee50330b5228f", "patch": "@@ -52,14 +52,16 @@ typedef struct bitmap_head_def {\n   bitmap_element *first;\t/* First element in linked list. */\n   bitmap_element *current;\t/* Last element looked at. */\n   unsigned int indx;\t\t/* Index of last element looked at. */\n+\n } bitmap_head, *bitmap;\n \n /* Enumeration giving the various operations we support.  */\n enum bitmap_bits {\n   BITMAP_AND,\t\t\t/* TO = FROM1 & FROM2 */\n   BITMAP_AND_COMPL,\t\t/* TO = FROM1 & ~ FROM2 */\n   BITMAP_IOR,\t\t\t/* TO = FROM1 | FROM2 */\n-  BITMAP_XOR\t\t\t/* TO = FROM1 ^ FROM2 */\n+  BITMAP_XOR,\t\t\t/* TO = FROM1 ^ FROM2 */\n+  BITMAP_IOR_COMPL\t\t\t/* TO = FROM1 | ~FROM2 */\n };\n \n /* Global data */\n@@ -104,6 +106,15 @@ extern bitmap bitmap_initialize PARAMS ((bitmap));\n /* Release all memory held by bitmaps.  */\n extern void bitmap_release_memory PARAMS ((void));\n \n+/* A few compatibility/functions macros for compatibility with sbitmaps */\n+#define dump_bitmap(file, bitmap) bitmap_print (file, bitmap, \"\", \"\\n\")\n+#define bitmap_zero(a) bitmap_clear (a)\n+#define bitmap_a_or_b(a,b,c) bitmap_operation (a, b, c, BITMAP_IOR)\n+#define bitmap_a_and_b(a,b,c) bitmap_operation (a, b, c, BITMAP_AND)\n+extern int bitmap_union_of_diff PARAMS((bitmap, bitmap, bitmap, bitmap));\n+extern int bitmap_first_set_bit PARAMS((bitmap));\n+extern int bitmap_last_set_bit PARAMS((bitmap));\n+\n /* Allocate a bitmap with oballoc.  */\n #define BITMAP_OBSTACK_ALLOC(OBSTACK)\t\t\t\t\\\n   bitmap_initialize ((bitmap) obstack_alloc (OBSTACK, sizeof (bitmap_head)))"}]}