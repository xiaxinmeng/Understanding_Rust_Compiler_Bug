{"sha": "57ae790f79b9710229ec9c791bc0e05775f8e71b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdhZTc5MGY3OWI5NzEwMjI5ZWM5Yzc5MWJjMGUwNTc3NWY4ZTcxYg==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2015-05-22T12:32:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-22T12:32:55Z"}, "message": "2015-05-22  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* einfo.adb Node36 is now used as Anonymous_Master. Flag253\n\tis now unused.\n\t(Anonymous_Master): New routine.\n\t(Has_Anonymous_Master): Removed.\n\t(Set_Anonymous_Master): New routine.\n\t(Set_Has_Anonymous_Master): Removed.\n\t(Write_Entity_Flags): Remove the output for Has_Anonymous_Maser.\n\t(Write_Field36_Name): Add output for Anonymous_Master.\n\t* einfo.ads Add new attribute Anonymous_Master along with\n\toccurrences in nodes. Remove attribute Has_Anonymous_Master along\n\twith occurrences in nodes.\n\t(Anonymous_Master): New routine along with pragma Inline.\n\t(Has_Anonymous_Master): Removed along with pragma Inline.\n\t(Set_Anonymous_Master): New routine along with pragma Inline.\n\t(Set_Has_Anonymous_Master): Removed along with pragma Inline.\n\t* exp_ch4.adb (Create_Anonymous_Master): New routine.\n\t(Current_Anonymous_Master): Reimplemented.\n\nFrom-SVN: r223550", "tree": {"sha": "7cb9f8f954915f5b68ba7d9da22a412315e4439a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7cb9f8f954915f5b68ba7d9da22a412315e4439a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57ae790f79b9710229ec9c791bc0e05775f8e71b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57ae790f79b9710229ec9c791bc0e05775f8e71b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57ae790f79b9710229ec9c791bc0e05775f8e71b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57ae790f79b9710229ec9c791bc0e05775f8e71b/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a79cdb2c620b61aeb397eb546a790b106dd230ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a79cdb2c620b61aeb397eb546a790b106dd230ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a79cdb2c620b61aeb397eb546a790b106dd230ca"}], "stats": {"total": 328, "additions": 170, "deletions": 158}, "files": [{"sha": "e9160b3d9d415d4db917653f9b4f1c5405daa85d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57ae790f79b9710229ec9c791bc0e05775f8e71b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57ae790f79b9710229ec9c791bc0e05775f8e71b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=57ae790f79b9710229ec9c791bc0e05775f8e71b", "patch": "@@ -1,3 +1,23 @@\n+2015-05-22  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* einfo.adb Node36 is now used as Anonymous_Master. Flag253\n+\tis now unused.\n+\t(Anonymous_Master): New routine.\n+\t(Has_Anonymous_Master): Removed.\n+\t(Set_Anonymous_Master): New routine.\n+\t(Set_Has_Anonymous_Master): Removed.\n+\t(Write_Entity_Flags): Remove the output for Has_Anonymous_Maser.\n+\t(Write_Field36_Name): Add output for Anonymous_Master.\n+\t* einfo.ads Add new attribute Anonymous_Master along with\n+\toccurrences in nodes. Remove attribute Has_Anonymous_Master along\n+\twith occurrences in nodes.\n+\t(Anonymous_Master): New routine along with pragma Inline.\n+\t(Has_Anonymous_Master): Removed along with pragma Inline.\n+\t(Set_Anonymous_Master): New routine along with pragma Inline.\n+\t(Set_Has_Anonymous_Master): Removed along with pragma Inline.\n+\t* exp_ch4.adb (Create_Anonymous_Master): New routine.\n+\t(Current_Anonymous_Master): Reimplemented.\n+\n 2015-05-22  Bob Duff  <duff@adacore.com>\n \n \t* freeze.adb (Freeze_Profile): Suppress warning if imported"}, {"sha": "1d8f4f434251e2c0f291148c18687f78e115ea10", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 21, "deletions": 17, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57ae790f79b9710229ec9c791bc0e05775f8e71b/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57ae790f79b9710229ec9c791bc0e05775f8e71b/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=57ae790f79b9710229ec9c791bc0e05775f8e71b", "patch": "@@ -264,7 +264,8 @@ package body Einfo is\n \n    --    Import_Pragma                   Node35\n \n-   --    (unused)                        Node36\n+   --    Anonymous_Master                Node36\n+\n    --    (unused)                        Node38\n    --    (unused)                        Node39\n    --    (unused)                        Node40\n@@ -556,7 +557,6 @@ package body Einfo is\n \n    --    Has_Implicit_Dereference        Flag251\n    --    Is_Processed_Transient          Flag252\n-   --    Has_Anonymous_Master            Flag253\n    --    Is_Implementation_Defined       Flag254\n    --    Is_Predicate_Function           Flag255\n    --    Is_Predicate_Function_M         Flag256\n@@ -594,6 +594,7 @@ package body Einfo is\n    --    Has_Volatile_Full_Access        Flag285\n    --    Needs_Typedef                   Flag286\n \n+   --    (unused)                        Flag253\n    --    (unused)                        Flag287\n    --    (unused)                        Flag288\n    --    (unused)                        Flag289\n@@ -753,6 +754,12 @@ package body Einfo is\n       return Uint14 (Id);\n    end Alignment;\n \n+   function Anonymous_Master (Id : E) return E is\n+   begin\n+      pragma Assert (Ekind_In (Id, E_Function, E_Package, E_Procedure));\n+      return Node36 (Id);\n+   end Anonymous_Master;\n+\n    function Associated_Entity (Id : E) return E is\n    begin\n       return Node37 (Id);\n@@ -1375,13 +1382,6 @@ package body Einfo is\n       return Flag79 (Id);\n    end Has_All_Calls_Remote;\n \n-   function Has_Anonymous_Master (Id : E) return B is\n-   begin\n-      pragma Assert\n-        (Ekind_In (Id, E_Function, E_Package, E_Package_Body, E_Procedure));\n-      return Flag253 (Id);\n-   end Has_Anonymous_Master;\n-\n    function Has_Atomic_Components (Id : E) return B is\n    begin\n       return Flag86 (Implementation_Base_Type (Id));\n@@ -3576,6 +3576,12 @@ package body Einfo is\n       Set_Elist16 (Id, V);\n    end Set_Access_Disp_Table;\n \n+   procedure Set_Anonymous_Master (Id : E; V : E) is\n+   begin\n+      pragma Assert (Ekind_In (Id, E_Function, E_Package, E_Procedure));\n+      Set_Node36 (Id, V);\n+   end Set_Anonymous_Master;\n+\n    procedure Set_Associated_Entity (Id : E; V : E) is\n    begin\n       Set_Node37 (Id, V);\n@@ -4246,13 +4252,6 @@ package body Einfo is\n       Set_Flag79 (Id, V);\n    end Set_Has_All_Calls_Remote;\n \n-   procedure Set_Has_Anonymous_Master (Id : E; V : B := True) is\n-   begin\n-      pragma Assert\n-        (Ekind_In (Id, E_Function, E_Package, E_Package_Body, E_Procedure));\n-      Set_Flag253 (Id, V);\n-   end Set_Has_Anonymous_Master;\n-\n    procedure Set_Has_Atomic_Components (Id : E; V : B := True) is\n    begin\n       pragma Assert (not Is_Type (Id) or else Is_Base_Type (Id));\n@@ -8634,7 +8633,6 @@ package body Einfo is\n       W (\"Has_Aliased_Components\",          Flag135 (Id));\n       W (\"Has_Alignment_Clause\",            Flag46  (Id));\n       W (\"Has_All_Calls_Remote\",            Flag79  (Id));\n-      W (\"Has_Anonymous_Master\",            Flag253 (Id));\n       W (\"Has_Atomic_Components\",           Flag86  (Id));\n       W (\"Has_Biased_Representation\",       Flag139 (Id));\n       W (\"Has_Completion\",                  Flag26  (Id));\n@@ -10121,6 +10119,12 @@ package body Einfo is\n    procedure Write_Field36_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n+         when E_Function                                   |\n+              E_Operator                                   |\n+              E_Package                                    |\n+              E_Procedure                                  =>\n+            Write_Str (\"Anonymous_Master\");\n+\n          when others                                       =>\n             Write_Str (\"Field36??\");\n       end case;"}, {"sha": "1fe9d7d8b5e082299574282c35c1498c50d465e2", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 13, "deletions": 15, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57ae790f79b9710229ec9c791bc0e05775f8e71b/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57ae790f79b9710229ec9c791bc0e05775f8e71b/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=57ae790f79b9710229ec9c791bc0e05775f8e71b", "patch": "@@ -436,6 +436,12 @@ package Einfo is\n --       definition clause with an (obsolescent) mod clause is converted\n --       into an attribute definition clause for this purpose.\n \n+--    Anonymous_Master (Node36)\n+--       Defined in the entities of non-generic subprogram and package units.\n+--       Contains the entity of a special heterogeneous finalization master\n+--       that services most anonymous access-to-controlled allocations that\n+--       occur within the unit.\n+\n --    Associated_Entity (Node37)\n --       Defined in all entities. This field is similar to Associated_Node, but\n --       applied to entities. The attribute links an entity from the generic\n@@ -1423,13 +1429,6 @@ package Einfo is\n --       entities, so the flag Is_Remote_Call_Interface will always be set if\n --       this flag is set.\n \n---    Has_Anonymous_Master (Flag253)\n---       Defined in units (top-level functions and procedures, library-level\n---       packages). Set if the associated unit contains a heterogeneous\n---       finalization master. The master's name is of the form <unit>AM and it\n---       services anonymous access-to-controlled types with an undetermined\n---       lifetime.\n-\n --    Has_Atomic_Components (Flag86) [implementation base type only]\n --       Defined in all types and objects. Set only for an array type or\n --       an array object if a valid pragma Atomic_Components applies to the\n@@ -5833,14 +5832,14 @@ package Einfo is\n    --    Linker_Section_Pragma               (Node33)\n    --    Contract                            (Node34)\n    --    Import_Pragma                       (Node35)   (non-generic case only)\n+   --    Anonymous_Master                    (Node36)   (non-generic case only)\n    --    Body_Needed_For_SAL                 (Flag40)\n    --    Contains_Ignored_Ghost_Code         (Flag279)\n    --    Default_Expressions_Processed       (Flag108)\n    --    Delay_Cleanups                      (Flag114)\n    --    Delay_Subprogram_Descriptors        (Flag50)\n    --    Discard_Names                       (Flag88)\n    --    Elaboration_Entity_Required         (Flag174)\n-   --    Has_Anonymous_Master                (Flag253)\n    --    Has_Completion                      (Flag26)\n    --    Has_Controlling_Result              (Flag98)\n    --    Has_Expanded_Contract               (Flag240)  (non-generic case only)\n@@ -6050,6 +6049,7 @@ package Einfo is\n    --    SPARK_Pragma                        (Node32)\n    --    SPARK_Aux_Pragma                    (Node33)\n    --    Contract                            (Node34)\n+   --    Anonymous_Master                    (Node36)   (non-generic case only)\n    --    Delay_Subprogram_Descriptors        (Flag50)\n    --    Body_Needed_For_SAL                 (Flag40)\n    --    Contains_Ignored_Ghost_Code         (Flag279)\n@@ -6058,7 +6058,6 @@ package Einfo is\n    --    Elaborate_Body_Desirable            (Flag210)  (non-generic case only)\n    --    From_Limited_With                   (Flag159)\n    --    Has_All_Calls_Remote                (Flag79)\n-   --    Has_Anonymous_Master                (Flag253)\n    --    Has_Completion                      (Flag26)\n    --    Has_Forward_Instantiation           (Flag175)\n    --    Has_Master_Entity                   (Flag21)\n@@ -6089,7 +6088,6 @@ package Einfo is\n    --    Contract                            (Node34)\n    --    Contains_Ignored_Ghost_Code         (Flag279)\n    --    Delay_Subprogram_Descriptors        (Flag50)\n-   --    Has_Anonymous_Master                (Flag253)\n    --    SPARK_Aux_Pragma_Inherited          (Flag266)\n    --    SPARK_Pragma_Inherited              (Flag265)\n    --    Scope_Depth                         (synth)\n@@ -6139,6 +6137,7 @@ package Einfo is\n    --    Linker_Section_Pragma               (Node33)\n    --    Contract                            (Node34)\n    --    Import_Pragma                       (Node35)   (non-generic case only)\n+   --    Anonymous_Master                    (Node36)   (non-generic case only)\n    --    Body_Needed_For_SAL                 (Flag40)\n    --    Contains_Ignored_Ghost_Code         (Flag279)\n    --    Delay_Cleanups                      (Flag114)\n@@ -6148,7 +6147,6 @@ package Einfo is\n    --    Delay_Cleanups                      (Flag114)\n    --    Delay_Subprogram_Descriptors        (Flag50)\n    --    Discard_Names                       (Flag88)\n-   --    Has_Anonymous_Master                (Flag253)\n    --    Has_Completion                      (Flag26)\n    --    Has_Expanded_Contract               (Flag240)  (non-generic case only)\n    --    Has_Invariants                      (Flag232)\n@@ -6647,6 +6645,7 @@ package Einfo is\n    function Address_Taken                       (Id : E) return B;\n    function Alias                               (Id : E) return E;\n    function Alignment                           (Id : E) return U;\n+   function Anonymous_Master                    (Id : E) return E;\n    function Associated_Entity                   (Id : E) return E;\n    function Associated_Formal_Package           (Id : E) return E;\n    function Associated_Node_For_Itype           (Id : E) return N;\n@@ -6750,7 +6749,6 @@ package Einfo is\n    function Has_Aliased_Components              (Id : E) return B;\n    function Has_Alignment_Clause                (Id : E) return B;\n    function Has_All_Calls_Remote                (Id : E) return B;\n-   function Has_Anonymous_Master                (Id : E) return B;\n    function Has_Atomic_Components               (Id : E) return B;\n    function Has_Biased_Representation           (Id : E) return B;\n    function Has_Completion                      (Id : E) return B;\n@@ -7301,6 +7299,7 @@ package Einfo is\n    procedure Set_Address_Taken                   (Id : E; V : B := True);\n    procedure Set_Alias                           (Id : E; V : E);\n    procedure Set_Alignment                       (Id : E; V : U);\n+   procedure Set_Anonymous_Master                (Id : E; V : E);\n    procedure Set_Associated_Entity               (Id : E; V : E);\n    procedure Set_Associated_Formal_Package       (Id : E; V : E);\n    procedure Set_Associated_Node_For_Itype       (Id : E; V : N);\n@@ -7403,7 +7402,6 @@ package Einfo is\n    procedure Set_Has_Aliased_Components          (Id : E; V : B := True);\n    procedure Set_Has_Alignment_Clause            (Id : E; V : B := True);\n    procedure Set_Has_All_Calls_Remote            (Id : E; V : B := True);\n-   procedure Set_Has_Anonymous_Master            (Id : E; V : B := True);\n    procedure Set_Has_Atomic_Components           (Id : E; V : B := True);\n    procedure Set_Has_Biased_Representation       (Id : E; V : B := True);\n    procedure Set_Has_Completion                  (Id : E; V : B := True);\n@@ -8076,6 +8074,7 @@ package Einfo is\n    pragma Inline (Address_Taken);\n    pragma Inline (Alias);\n    pragma Inline (Alignment);\n+   pragma Inline (Anonymous_Master);\n    pragma Inline (Associated_Entity);\n    pragma Inline (Associated_Formal_Package);\n    pragma Inline (Associated_Node_For_Itype);\n@@ -8176,7 +8175,6 @@ package Einfo is\n    pragma Inline (Has_Aliased_Components);\n    pragma Inline (Has_Alignment_Clause);\n    pragma Inline (Has_All_Calls_Remote);\n-   pragma Inline (Has_Anonymous_Master);\n    pragma Inline (Has_Atomic_Components);\n    pragma Inline (Has_Biased_Representation);\n    pragma Inline (Has_Completion);\n@@ -8577,6 +8575,7 @@ package Einfo is\n    pragma Inline (Set_Address_Taken);\n    pragma Inline (Set_Alias);\n    pragma Inline (Set_Alignment);\n+   pragma Inline (Set_Anonymous_Master);\n    pragma Inline (Set_Associated_Entity);\n    pragma Inline (Set_Associated_Formal_Package);\n    pragma Inline (Set_Associated_Node_For_Itype);\n@@ -8675,7 +8674,6 @@ package Einfo is\n    pragma Inline (Set_Has_Aliased_Components);\n    pragma Inline (Set_Has_Alignment_Clause);\n    pragma Inline (Set_Has_All_Calls_Remote);\n-   pragma Inline (Set_Has_Anonymous_Master);\n    pragma Inline (Set_Has_Atomic_Components);\n    pragma Inline (Set_Has_Biased_Representation);\n    pragma Inline (Set_Has_Completion);"}, {"sha": "e5b47531e311e44e88d83ee24bc244ab401b3757", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 116, "deletions": 126, "changes": 242, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57ae790f79b9710229ec9c791bc0e05775f8e71b/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57ae790f79b9710229ec9c791bc0e05775f8e71b/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=57ae790f79b9710229ec9c791bc0e05775f8e71b", "patch": "@@ -415,174 +415,164 @@ package body Exp_Ch4 is\n    ------------------------------\n \n    function Current_Anonymous_Master return Entity_Id is\n-      Decls     : List_Id;\n-      Loc       : Source_Ptr;\n-      Subp_Body : Node_Id;\n-      Unit_Decl : Node_Id;\n-      Unit_Id   : Entity_Id;\n+      function Create_Anonymous_Master\n+        (Unit_Id : Entity_Id;\n+         Decls   : List_Id) return Entity_Id;\n+      --  Create a new anonymous finalization master for a unit denoted by\n+      --  Unit_Id. The declaration of the master along with any specialized\n+      --  initialization is inserted at the top of declarative list Decls.\n+      --  Return the entity of the anonymous master.\n \n-   begin\n-      Unit_Id := Cunit_Entity (Current_Sem_Unit);\n+      -----------------------------\n+      -- Create_Anonymous_Master --\n+      -----------------------------\n \n-      --  Find the entity of the current unit\n+      function Create_Anonymous_Master\n+        (Unit_Id : Entity_Id;\n+         Decls   : List_Id) return Entity_Id\n+      is\n+         First_Decl : Node_Id := Empty;\n+         --  The first declaration of list Decls. This variable is used when\n+         --  inserting various actions.\n \n-      if Ekind (Unit_Id) = E_Subprogram_Body then\n+         procedure Insert_And_Analyze (Action : Node_Id);\n+         --  Insert arbitrary node Action in declarative list Decl and analyze\n+         --  it.\n \n-         --  When processing subprogram bodies, the proper scope is always that\n-         --  of the spec.\n+         ------------------------\n+         -- Insert_And_Analyze --\n+         ------------------------\n \n-         Subp_Body := Unit_Id;\n-         while Present (Subp_Body)\n-           and then Nkind (Subp_Body) /= N_Subprogram_Body\n-         loop\n-            Subp_Body := Parent (Subp_Body);\n-         end loop;\n+         procedure Insert_And_Analyze (Action : Node_Id) is\n+         begin\n+            --  The list is already populated, the actions are inserted at the\n+            --  top of the list, preserving their order.\n \n-         Unit_Id := Corresponding_Spec (Subp_Body);\n-      end if;\n+            if Present (First_Decl) then\n+               Insert_Before_And_Analyze (First_Decl, Action);\n \n-      Loc := Sloc (Unit_Id);\n-      Unit_Decl := Unit (Cunit (Current_Sem_Unit));\n+            --  Otherwise append to the declarations to preserve order\n \n-      --  Find the declarations list of the current unit\n+            else\n+               Append_To (Decls, Action);\n+               Analyze (Action);\n+            end if;\n+         end Insert_And_Analyze;\n \n-      if Nkind (Unit_Decl) = N_Package_Declaration then\n-         Unit_Decl := Specification (Unit_Decl);\n-         Decls := Visible_Declarations (Unit_Decl);\n+         --  Local variables\n \n-         if No (Decls) then\n-            Decls := New_List (Make_Null_Statement (Loc));\n-            Set_Visible_Declarations (Unit_Decl, Decls);\n+         Loc   : constant Source_Ptr := Sloc (Unit_Id);\n+         FM_Id : Entity_Id;\n \n-         elsif Is_Empty_List (Decls) then\n-            Append_To (Decls, Make_Null_Statement (Loc));\n-         end if;\n+      --  Start of processing for Create_Anonymous_Master\n \n-      else\n-         Decls := Declarations (Unit_Decl);\n-\n-         if No (Decls) then\n-            Decls := New_List (Make_Null_Statement (Loc));\n-            Set_Declarations (Unit_Decl, Decls);\n-\n-         elsif Is_Empty_List (Decls) then\n-            Append_To (Decls, Make_Null_Statement (Loc));\n+      begin\n+         if Present (Decls) then\n+            First_Decl := First (Decls);\n          end if;\n-      end if;\n-\n-      --  The current unit has an existing anonymous master, traverse its\n-      --  declarations and locate the entity.\n-\n-      if Has_Anonymous_Master (Unit_Id) then\n-         declare\n-            Decl       : Node_Id;\n-            Fin_Mas_Id : Entity_Id;\n \n-         begin\n-            Decl := First (Decls);\n-            while Present (Decl) loop\n-\n-               --  Look for the first variable in the declarations whole type\n-               --  is Finalization_Master.\n-\n-               if Nkind (Decl) = N_Object_Declaration then\n-                  Fin_Mas_Id := Defining_Identifier (Decl);\n-\n-                  if Ekind (Fin_Mas_Id) = E_Variable\n-                    and then Etype (Fin_Mas_Id) = RTE (RE_Finalization_Master)\n-                  then\n-                     return Fin_Mas_Id;\n-                  end if;\n-               end if;\n+         --  Since the anonymous master and all its initialization actions are\n+         --  inserted at top level, use the scope of the unit when analyzing.\n \n-               Next (Decl);\n-            end loop;\n+         Push_Scope (Unit_Id);\n \n-            --  The master was not found even though the unit was labeled as\n-            --  having one.\n+         --  Create the anonymous master\n \n-            raise Program_Error;\n-         end;\n+         FM_Id :=\n+           Make_Defining_Identifier (Loc,\n+             Chars => New_External_Name (Chars (Unit_Id), \"AM\"));\n+         Set_Anonymous_Master (Unit_Id, FM_Id);\n \n-      --  Create a new anonymous master\n+         --  Generate:\n+         --    <FM_Id> : Finalization_Master;\n \n-      else\n-         declare\n-            First_Decl : constant Node_Id := First (Decls);\n-            Action     : Node_Id;\n-            Fin_Mas_Id : Entity_Id;\n+         Insert_And_Analyze\n+           (Make_Object_Declaration (Loc,\n+             Defining_Identifier => FM_Id,\n+             Object_Definition   =>\n+               New_Occurrence_Of (RTE (RE_Finalization_Master), Loc)));\n \n-         begin\n-            --  Since the master and its associated initialization is inserted\n-            --  at top level, use the scope of the unit when analyzing.\n+         --  Do not set the base pool and mode of operation on .NET/JVM since\n+         --  those targets do not support pools and all VM masters defaulted to\n+         --  heterogeneous.\n \n-            Push_Scope (Unit_Id);\n+         if VM_Target = No_VM then\n \n-            --  Create the finalization master\n+            --  Generate:\n+            --    Set_Base_Pool\n+            --      (<FM_Id>, Global_Pool_Object'Unrestricted_Access);\n \n-            Fin_Mas_Id :=\n-              Make_Defining_Identifier (Loc,\n-                Chars => New_External_Name (Chars (Unit_Id), \"AM\"));\n+            Insert_And_Analyze\n+              (Make_Procedure_Call_Statement (Loc,\n+                Name                   =>\n+                  New_Occurrence_Of (RTE (RE_Set_Base_Pool), Loc),\n+                Parameter_Associations => New_List (\n+                  New_Occurrence_Of (FM_Id, Loc),\n+                  Make_Attribute_Reference (Loc,\n+                    Prefix         =>\n+                      New_Occurrence_Of (RTE (RE_Global_Pool_Object), Loc),\n+                    Attribute_Name => Name_Unrestricted_Access))));\n \n             --  Generate:\n-            --    <Fin_Mas_Id> : Finalization_Master;\n+            --    Set_Is_Heterogeneous (<FM_Id>);\n \n-            Action :=\n-              Make_Object_Declaration (Loc,\n-                Defining_Identifier => Fin_Mas_Id,\n-                Object_Definition =>\n-                  New_Occurrence_Of (RTE (RE_Finalization_Master), Loc));\n-\n-            Insert_Before_And_Analyze (First_Decl, Action);\n+            Insert_And_Analyze\n+              (Make_Procedure_Call_Statement (Loc,\n+                Name                   =>\n+                  New_Occurrence_Of (RTE (RE_Set_Is_Heterogeneous), Loc),\n+                Parameter_Associations => New_List (\n+                  New_Occurrence_Of (FM_Id, Loc))));\n+         end if;\n \n-            --  Mark the unit to prevent the generation of multiple masters\n+         Pop_Scope;\n \n-            Set_Has_Anonymous_Master (Unit_Id);\n+         return FM_Id;\n+      end Create_Anonymous_Master;\n \n-            --  Do not set the base pool and mode of operation on .NET/JVM\n-            --  since those targets do not support pools and all VM masters\n-            --  are heterogeneous by default.\n+      --  Local declarations\n \n-            if VM_Target = No_VM then\n+      Unit_Decl : constant Node_Id   := Unit (Cunit (Current_Sem_Unit));\n+      Unit_Id   : constant Entity_Id := Corresponding_Spec_Of (Unit_Decl);\n+      Decls     : List_Id;\n+      FM_Id     : Entity_Id;\n+      Unit_Spec : Node_Id;\n \n-               --  Generate:\n-               --    Set_Base_Pool\n-               --      (<Fin_Mas_Id>, Global_Pool_Object'Unrestricted_Access);\n+   --  Start of processing for Current_Anonymous_Master\n \n-               Action :=\n-                 Make_Procedure_Call_Statement (Loc,\n-                   Name =>\n-                     New_Occurrence_Of (RTE (RE_Set_Base_Pool), Loc),\n+   begin\n+      FM_Id := Anonymous_Master (Unit_Id);\n \n-                   Parameter_Associations => New_List (\n-                     New_Occurrence_Of (Fin_Mas_Id, Loc),\n-                     Make_Attribute_Reference (Loc,\n-                       Prefix =>\n-                         New_Occurrence_Of (RTE (RE_Global_Pool_Object), Loc),\n-                       Attribute_Name => Name_Unrestricted_Access)));\n+      --  Create a new anonymous master when allocating an object of anonymous\n+      --  access-to-controlled type for the first time.\n \n-               Insert_Before_And_Analyze (First_Decl, Action);\n+      if No (FM_Id) then\n \n-               --  Generate:\n-               --    Set_Is_Heterogeneous (<Fin_Mas_Id>);\n+         --  Find the declarative list of the current unit\n \n-               Action :=\n-                 Make_Procedure_Call_Statement (Loc,\n-                   Name =>\n-                     New_Occurrence_Of (RTE (RE_Set_Is_Heterogeneous), Loc),\n-                   Parameter_Associations => New_List (\n-                     New_Occurrence_Of (Fin_Mas_Id, Loc)));\n+         if Nkind (Unit_Decl) = N_Package_Declaration then\n+            Unit_Spec := Specification (Unit_Decl);\n+            Decls := Visible_Declarations (Unit_Spec);\n \n-               Insert_Before_And_Analyze (First_Decl, Action);\n+            if No (Decls) then\n+               Decls := New_List;\n+               Set_Visible_Declarations (Unit_Spec, Decls);\n             end if;\n \n-            --  Restore the original state of the scope stack\n+         --  Package or subprogram body\n \n-            Pop_Scope;\n+         else\n+            Decls := Declarations (Unit_Decl);\n \n-            return Fin_Mas_Id;\n-         end;\n+            if No (Decls) then\n+               Decls := New_List;\n+               Set_Declarations (Unit_Decl, Decls);\n+            end if;\n+         end if;\n+\n+         FM_Id := Create_Anonymous_Master (Unit_Id, Decls);\n       end if;\n+\n+      return FM_Id;\n    end Current_Anonymous_Master;\n \n    --------------------------------"}]}