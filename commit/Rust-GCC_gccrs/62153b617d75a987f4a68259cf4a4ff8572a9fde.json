{"sha": "62153b617d75a987f4a68259cf4a4ff8572a9fde", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIxNTNiNjE3ZDc1YTk4N2Y0YTY4MjU5Y2Y0YTRmZjg1NzJhOWZkZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-03-24T02:14:39Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-03-24T02:14:39Z"}, "message": "tweak comments\n\nFrom-SVN: r32721", "tree": {"sha": "5589a6f6a9eff5f5cd0e651a9901f574061fab31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5589a6f6a9eff5f5cd0e651a9901f574061fab31"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62153b617d75a987f4a68259cf4a4ff8572a9fde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62153b617d75a987f4a68259cf4a4ff8572a9fde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62153b617d75a987f4a68259cf4a4ff8572a9fde", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62153b617d75a987f4a68259cf4a4ff8572a9fde/comments", "author": null, "committer": null, "parents": [{"sha": "265ae617558b82957720da5f168cc52fefd2d9cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/265ae617558b82957720da5f168cc52fefd2d9cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/265ae617558b82957720da5f168cc52fefd2d9cc"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "9b4ed256a862ea2df82db19de13a6b920ae8a110", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62153b617d75a987f4a68259cf4a4ff8572a9fde/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62153b617d75a987f4a68259cf4a4ff8572a9fde/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=62153b617d75a987f4a68259cf4a4ff8572a9fde", "patch": "@@ -649,6 +649,10 @@ extern int rs6000_debug_arg;\t\t/* debug argument handling */\n \n #define FIRST_PSEUDO_REGISTER 77\n \n+/* This must not decrease, for backwards compatibility.  If\n+   FIRST_PSEUDO_REGISTER increases, this should as well.  */\n+#define DWARF_FRAME_REGISTERS 77\n+\n /* 1 for registers that have pervasive standard uses\n    and are not available for the register allocator.\n \n@@ -1262,6 +1266,11 @@ extern int rs6000_sysv_varargs_p;\n    area.  */\n #define FIRST_PARM_OFFSET(FNDECL) RS6000_SAVE_AREA\n \n+/* Offset from the argument pointer register value to the top of\n+   stack.  This is different from FIRST_PARM_OFFSET because of the\n+   register save area.  */\n+#define ARG_POINTER_CFA_OFFSET(FNDECL) 0\n+\n /* Define this if stack space is still allocated for a parameter passed\n    in a register.  The value is the number of bytes allocated to this\n    area.  */\n@@ -2672,11 +2681,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define INCOMING_RETURN_ADDR_RTX   gen_rtx_REG (Pmode, LINK_REGISTER_REGNUM)\n #define DWARF_FRAME_RETURN_COLUMN  DWARF_FRAME_REGNUM (LINK_REGISTER_REGNUM)\n \n-/* These values are set like this for backwards compatibility,\n-   and can't be changed no matter how wrong they are :-(.  */\n-#define DWARF_FRAME_REGISTERS 77\n-#define ARG_POINTER_CFA_OFFSET(FNDECL) 0\n-\n /* Define results of standard character escape sequences.  */\n #define TARGET_BELL 007\n #define TARGET_BS 010"}]}