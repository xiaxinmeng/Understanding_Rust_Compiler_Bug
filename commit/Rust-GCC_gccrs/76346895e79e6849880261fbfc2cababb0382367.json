{"sha": "76346895e79e6849880261fbfc2cababb0382367", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzYzNDY4OTVlNzllNjg0OTg4MDI2MWZiZmMyY2FiYWJiMDM4MjM2Nw==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2006-02-15T09:42:14Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-02-15T09:42:14Z"}, "message": "re PR ada/23973 (without -gnat05, GNAT warns that interface is new kw, but misses one frequent occurence)\n\n2006-02-13  Javier Miranda  <miranda@adacore.com>\n\n\tPR ada/23973\n\n\t* par-ch3.adb (P_Derived_Type_Def_Or_Private_Ext_Decl): Reorganize the\n\tcode to improve the error message reported when the program has\n\tdeclarations of abstract interface types and it is not compiled with\n\tthe -gnat05 switch.\n\t(P_Access_Definition): Reorganize the code to improve the error\n\tmessage reported when the new Ada 2005 syntax for anonymous\n\taccess types is used and the program is not compiled with the\n\t-gnat05 switch.\n\nFrom-SVN: r111080", "tree": {"sha": "c0f35748ab8bd75b10c0580a6d26f4e1d3b5743f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0f35748ab8bd75b10c0580a6d26f4e1d3b5743f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76346895e79e6849880261fbfc2cababb0382367", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76346895e79e6849880261fbfc2cababb0382367", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76346895e79e6849880261fbfc2cababb0382367", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76346895e79e6849880261fbfc2cababb0382367/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8aa0b2c698d6c08bffd85d8da91806f501a97390", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8aa0b2c698d6c08bffd85d8da91806f501a97390", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8aa0b2c698d6c08bffd85d8da91806f501a97390"}], "stats": {"total": 71, "additions": 42, "deletions": 29}, "files": [{"sha": "14432ac1b016679e282024470f52e94f416cfaa2", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 42, "deletions": 29, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76346895e79e6849880261fbfc2cababb0382367/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76346895e79e6849880261fbfc2cababb0382367/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=76346895e79e6849880261fbfc2cababb0382367", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1788,7 +1788,17 @@ package body Ch3 is\n \n    begin\n       Typedef_Node := New_Node (N_Derived_Type_Definition, Token_Ptr);\n-      T_New;\n+\n+      if Ada_Version < Ada_05\n+        and then Token = Tok_Identifier\n+        and then Token_Name = Name_Interface\n+      then\n+         Error_Msg_SP\n+           (\"abstract interface is an Ada 2005 extension\");\n+         Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n+      else\n+         T_New;\n+      end if;\n \n       if Token = Tok_Abstract then\n          Error_Msg_SC (\"ABSTRACT must come before NEW, not after\");\n@@ -3779,44 +3789,47 @@ package body Ch3 is\n       Def_Node := New_Node (N_Access_Definition, Token_Ptr);\n       Scan; -- past ACCESS\n \n-      --  Ada 2005 (AI-254/AI-231)\n+      --  Ada 2005 (AI-254): Access_To_Subprogram_Definition\n \n-      if Ada_Version >= Ada_05 then\n+      if Token = Tok_Protected\n+        or else Token = Tok_Procedure\n+        or else Token = Tok_Function\n+      then\n+         if Ada_Version < Ada_05 then\n+            Error_Msg_SP (\"access-to-subprogram is an Ada 2005 extension\");\n+            Error_Msg_SP (\"\\unit should be compiled with -gnat05 switch\");\n+         end if;\n \n-         --  Ada 2005 (AI-254): Access_To_Subprogram_Definition\n+         Subp_Node := P_Access_Type_Definition (Header_Already_Parsed => True);\n+         Set_Null_Exclusion_Present (Subp_Node, Null_Exclusion_Present);\n+         Set_Access_To_Subprogram_Definition (Def_Node, Subp_Node);\n \n-         if Token = Tok_Protected\n-           or else Token = Tok_Procedure\n-           or else Token = Tok_Function\n-         then\n-            Subp_Node :=\n-              P_Access_Type_Definition (Header_Already_Parsed => True);\n-            Set_Null_Exclusion_Present (Subp_Node, Null_Exclusion_Present);\n-            Set_Access_To_Subprogram_Definition (Def_Node, Subp_Node);\n+      --  Ada 2005 (AI-231)\n+      --  [NULL_EXCLUSION] access [GENERAL_ACCESS_MODIFIER] SUBTYPE_MARK\n \n-         --  Ada 2005 (AI-231)\n-         --  [NULL_EXCLUSION] access [GENERAL_ACCESS_MODIFIER] SUBTYPE_MARK\n+      else\n+         Set_Null_Exclusion_Present (Def_Node, Null_Exclusion_Present);\n \n-         else\n-            Set_Null_Exclusion_Present (Def_Node, Null_Exclusion_Present);\n+         if Token = Tok_All then\n+            if Ada_Version < Ada_05 then\n+               Error_Msg_SP\n+                 (\"access-all in this context is an Ada 2005 extension\");\n+               Error_Msg_SP (\"\\unit should be compiled with -gnat05 switch\");\n+            end if;\n \n-            if Token = Tok_All then\n-               Scan; -- past ALL\n-               Set_All_Present (Def_Node);\n+            Scan; -- past ALL\n+            Set_All_Present (Def_Node);\n \n-            elsif Token = Tok_Constant then\n-               Scan; -- past CONSTANT\n-               Set_Constant_Present (Def_Node);\n+         elsif Token = Tok_Constant then\n+            if Ada_Version < Ada_05 then\n+               Error_Msg_SP (\"access-to-constant is an Ada 2005 extension\");\n+               Error_Msg_SP (\"\\unit should be compiled with -gnat05 switch\");\n             end if;\n \n-            Set_Subtype_Mark (Def_Node, P_Subtype_Mark);\n-            No_Constraint;\n+            Scan; -- past CONSTANT\n+            Set_Constant_Present (Def_Node);\n          end if;\n \n-      --  Ada 95\n-\n-      else\n-         Set_Null_Exclusion_Present (Def_Node, False);\n          Set_Subtype_Mark (Def_Node, P_Subtype_Mark);\n          No_Constraint;\n       end if;"}]}