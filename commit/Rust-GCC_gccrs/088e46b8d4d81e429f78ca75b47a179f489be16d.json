{"sha": "088e46b8d4d81e429f78ca75b47a179f489be16d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg4ZTQ2YjhkNGQ4MWU0MjlmNzhjYTc1YjQ3YTE3OWY0ODliZTE2ZA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2021-01-14T19:12:19Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2021-01-14T19:12:19Z"}, "message": "declare getpass in analyzer/sensitive-1.c test\n\nThe getpass function is not available on all systems; and not\nnecessarily declared in unistd.h, as expected by the sensitive-1\nanalyzer test.\n\nSince this is a compile-only test, it doesn't really matter if the\nfunction is defined in the system libraries.  All we need is a\ndeclaration, to avoid warnings from calling an undeclared function.\nThis patch adds the declaration, in a way that is most unlikely to\nconflict with any existing declaration.\n\n\nfor  gcc/testsuite/ChangeLog\n\n\t* gcc.dg/analyzer/sensitive-1.c: Declare getpass.", "tree": {"sha": "cc068bb58c9b525162946f5d3c7533361d9d01bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc068bb58c9b525162946f5d3c7533361d9d01bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/088e46b8d4d81e429f78ca75b47a179f489be16d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/088e46b8d4d81e429f78ca75b47a179f489be16d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/088e46b8d4d81e429f78ca75b47a179f489be16d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/088e46b8d4d81e429f78ca75b47a179f489be16d/comments", "author": null, "committer": null, "parents": [{"sha": "505caa7295b93ecdec8ac9b31595eb34dbd48c9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/505caa7295b93ecdec8ac9b31595eb34dbd48c9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/505caa7295b93ecdec8ac9b31595eb34dbd48c9f"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "c66af9276174f8f5f2702877ff18e6a58988aad2", "filename": "gcc/testsuite/gcc.dg/analyzer/sensitive-1.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/088e46b8d4d81e429f78ca75b47a179f489be16d/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsensitive-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/088e46b8d4d81e429f78ca75b47a179f489be16d/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsensitive-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fsensitive-1.c?ref=088e46b8d4d81e429f78ca75b47a179f489be16d", "patch": "@@ -6,6 +6,11 @@\n \n #include <string.h>\n \n+/* Declare getpass, in case unistd doesn't declare it.\n+   Parenthesize it, in case it's a macro.\n+   Don't use a prototype, to avoid const mismatches.  */\n+extern char *(getpass) ();\n+\n char test_1 (FILE *logfile)\n {\n   char *password = getpass (\">\"); /* { dg-message \"\\\\(1\\\\) sensitive value acquired here\" } */"}]}