{"sha": "752ae22f507c89267df61846d3ed15cb1f6c7c47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzUyYWUyMmY1MDdjODkyNjdkZjYxODQ2ZDNlZDE1Y2IxZjZjN2M0Nw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2014-11-02T20:00:12Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-11-02T20:00:12Z"}, "message": "arc.c (arc_rewrite_small_data_p): Constify argument.\n\ngcc/\n\t* config/arc/arc.c (arc_rewrite_small_data_p): Constify argument.\n\t(small_data_pattern_1): Delete.\n\t(small_data_pattern): Use FOR_EACH_SUBRTX.\n\nFrom-SVN: r217017", "tree": {"sha": "b4c43a01a4b57176b2ee2438287168133c18b82c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4c43a01a4b57176b2ee2438287168133c18b82c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/752ae22f507c89267df61846d3ed15cb1f6c7c47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/752ae22f507c89267df61846d3ed15cb1f6c7c47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/752ae22f507c89267df61846d3ed15cb1f6c7c47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/752ae22f507c89267df61846d3ed15cb1f6c7c47/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6733978e462e7fe9d667caf979acfbea337c5caf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6733978e462e7fe9d667caf979acfbea337c5caf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6733978e462e7fe9d667caf979acfbea337c5caf"}], "stats": {"total": 35, "additions": 20, "deletions": 15}, "files": [{"sha": "438c77b378672c9089375788f33b1f39035c25a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/752ae22f507c89267df61846d3ed15cb1f6c7c47/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/752ae22f507c89267df61846d3ed15cb1f6c7c47/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=752ae22f507c89267df61846d3ed15cb1f6c7c47", "patch": "@@ -1,3 +1,9 @@\n+2014-11-02  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/arc/arc.c (arc_rewrite_small_data_p): Constify argument.\n+\t(small_data_pattern_1): Delete.\n+\t(small_data_pattern): Use FOR_EACH_SUBRTX.\n+\n 2014-11-02  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/arc/arc.c: Include rtl-iter.h."}, {"sha": "48257f7a0dce089d232b69ae85863b3e371cf954", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 14, "deletions": 15, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/752ae22f507c89267df61846d3ed15cb1f6c7c47/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/752ae22f507c89267df61846d3ed15cb1f6c7c47/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=752ae22f507c89267df61846d3ed15cb1f6c7c47", "patch": "@@ -6355,7 +6355,7 @@ arc_in_small_data_p (const_tree decl)\n    as a gp+symref.  */\n \n static bool\n-arc_rewrite_small_data_p (rtx x)\n+arc_rewrite_small_data_p (const_rtx x)\n {\n   if (GET_CODE (x) == CONST)\n     x = XEXP (x, 0);\n@@ -6405,26 +6405,25 @@ arc_rewrite_small_data (rtx op)\n   return op;\n }\n \n-/* A for_each_rtx callback for small_data_pattern.  */\n-\n-static int\n-small_data_pattern_1 (rtx *loc, void *data ATTRIBUTE_UNUSED)\n-{\n-  if (GET_CODE (*loc) == PLUS\n-      && rtx_equal_p (XEXP (*loc, 0), pic_offset_table_rtx))\n-    return  -1;\n-\n-  return arc_rewrite_small_data_p (*loc);\n-}\n-\n /* Return true if OP refers to small data symbols directly, not through\n    a PLUS.  */\n \n bool\n small_data_pattern (rtx op, machine_mode)\n {\n-  return (GET_CODE (op) != SEQUENCE\n-\t  && for_each_rtx (&op, small_data_pattern_1, 0));\n+  if (GET_CODE (op) == SEQUENCE)\n+    return false;\n+  subrtx_iterator::array_type array;\n+  FOR_EACH_SUBRTX (iter, array, op, ALL)\n+    {\n+      const_rtx x = *iter;\n+      if (GET_CODE (x) == PLUS\n+\t  && rtx_equal_p (XEXP (x, 0), pic_offset_table_rtx))\n+\titer.skip_subrtxes ();\n+      else if (arc_rewrite_small_data_p (x))\n+\treturn true;\n+    }\n+  return false;\n }\n \n /* Return true if OP is an acceptable memory operand for ARCompact"}]}