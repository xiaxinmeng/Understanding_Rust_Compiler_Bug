{"sha": "8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUxZjJkNGM1NmUzZDQzYzg3OGE2ZmZlNWU1YzRhYTY0MDlmYTAzNQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-03-06T08:35:49Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-03-06T08:35:49Z"}, "message": "Makefile.in (jcf-parse.o): Depend on $(PARSE_H).\n\n        * Makefile.in (jcf-parse.o): Depend on $(PARSE_H).\n        (parse-scan.o): Depend on toplev.h.\n        * class.c (make_method_value): Add prototype.  Make it static.\n        Remove unused second argument, caller changed.\n        * expr.c (java_lang_expand_expr): Remove unused variable\n        `return_label'.\n        * java-tree.h: Don't prototype find_in_current_zip.\n        Add prototypes for verify_constant_pool, start_java_method,\n        end_java_method, give_name_to_locals, expand_byte_code,\n        open_in_zip, set_constant_value, find_constant1, find_constant2,\n        find_utf8_constant, find_string_constant, find_class_constant,\n        find_fieldref_index, find_methodref_index, write_constant_pool,\n        count_constant_pool_bytes and encode_newarray_type.\n        * jcf-dump.c: Remove unused variable `LONG_temp'.\n        * jcf-parse.c: Include parse.h.\n        (jcf_parse_source): Remove unused parameter, all callers changed.\n        (jcf_figure_file_type): Add static prototype.\n        (find_in_current_zip): Likewise.  Also remove unused parameter,\n        all callers changed.\n        (read_class): Initialize variable `saved_pos'.\n        * jcf-reader.c (jcf_parse_preamble): Mark variables\n        `minor_version' and `major_version' with ATTRIBUTE_UNUSED.\n        * lex.c (java_is_eol): Wrap prototype and definition in !JC1_LITE.\n        (java_init_lex): Wrap variable `java_lang_imported' in !JC1_LITE.\n        (java_parse_doc_section): Initialize variable `seen_star'.\n        (java_lex): Wrap variable `number_beginning' in !JC1_LITE.\n        (java_lex_error): Mark parameters `msg' and `forward' with\n        ATTRIBUTE_UNUSED.\n        (java_get_line_col): Mark parameters `filename' and `line' with\n        ATTRIBUTE_UNUSED.\n        * parse-scan.y: Include toplev.h.\n        (yyerror): Mark parameter `msg' with ATTRIBUTE_UNUSED.\n        * parse.h: use `struct JCF', not plain `JCF'.\n        (java_parser_context_save_global, java_expand_classes\n        java_parser_context_restore_global, java_parse): Add prototypes.\n        * typeck.c (convert_ieee_real_to_integer): Remove unused variable\n        `node'.\n\nFrom-SVN: r25616", "tree": {"sha": "486a4183689a6c011bf01289c6a0096cfcea6c5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/486a4183689a6c011bf01289c6a0096cfcea6c5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/comments", "author": null, "committer": null, "parents": [{"sha": "158281d7a3e7b17ce77b9b4a64db4e6a400b66e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/158281d7a3e7b17ce77b9b4a64db4e6a400b66e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/158281d7a3e7b17ce77b9b4a64db4e6a400b66e0"}], "stats": {"total": 322, "additions": 200, "deletions": 122}, "files": [{"sha": "b33a387a28317e02a4667dc04e73f9337e1f1522", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035", "patch": "@@ -1,3 +1,53 @@\n+Sat Mar  6 11:17:16 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (jcf-parse.o): Depend on $(PARSE_H).\n+\t(parse-scan.o): Depend on toplev.h.\n+\n+\t* class.c (make_method_value): Add prototype.  Make it static.\n+  \tRemove unused second argument, caller changed.\n+\n+\t* expr.c (java_lang_expand_expr): Remove unused variable\n+\t`return_label'.\n+\n+\t* java-tree.h: Don't prototype find_in_current_zip.\n+\tAdd prototypes for verify_constant_pool, start_java_method,\n+\tend_java_method, give_name_to_locals, expand_byte_code,\n+\topen_in_zip, set_constant_value, find_constant1, find_constant2,\n+\tfind_utf8_constant, find_string_constant, find_class_constant,\n+\tfind_fieldref_index, find_methodref_index, write_constant_pool,\n+\tcount_constant_pool_bytes and encode_newarray_type.\n+\n+\t* jcf-dump.c: Remove unused variable `LONG_temp'.\n+\n+\t* jcf-parse.c: Include parse.h.\n+\t(jcf_parse_source): Remove unused parameter, all callers changed.\n+\t(jcf_figure_file_type): Add static prototype.\n+\t(find_in_current_zip): Likewise.  Also remove unused parameter,\n+\tall callers changed.\n+\t(read_class): Initialize variable `saved_pos'.\n+\t\n+\t* jcf-reader.c (jcf_parse_preamble): Mark variables\n+\t`minor_version' and `major_version' with ATTRIBUTE_UNUSED.\n+\n+\t* lex.c (java_is_eol): Wrap prototype and definition in !JC1_LITE.\n+\t(java_init_lex): Wrap variable `java_lang_imported' in !JC1_LITE.\n+\t(java_parse_doc_section): Initialize variable `seen_star'.\n+\t(java_lex): Wrap variable `number_beginning' in !JC1_LITE.\n+\t(java_lex_error): Mark parameters `msg' and `forward' with\n+\tATTRIBUTE_UNUSED.\n+\t(java_get_line_col): Mark parameters `filename' and `line' with\n+\tATTRIBUTE_UNUSED.\n+\n+\t* parse-scan.y: Include toplev.h.\n+\t(yyerror): Mark parameter `msg' with ATTRIBUTE_UNUSED.\n+\n+\t* parse.h: use `struct JCF', not plain `JCF'.\n+\t(java_parser_context_save_global, java_expand_classes\n+\tjava_parser_context_restore_global, java_parse): Add prototypes.\n+\n+\t* typeck.c (convert_ieee_real_to_integer): Remove unused variable\n+\t`node'.\n+\n Wed Feb 24 16:13:59 1999  Per Bothner  <bothner@deneb.cygnus.com>\n \n \t*  check-init.c (check_init):  COPYN takes word count, not bit count."}, {"sha": "b5696a52d871c40d23b5175643ef7f2a95241cfa", "filename": "gcc/java/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/gcc%2Fjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/gcc%2Fjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMakefile.in?ref=8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035", "patch": "@@ -300,7 +300,7 @@ jcf-depend.o : jcf-depend.c $(CONFIG_H) $(srcdir)/../system.h jcf.h\n jcf-io.o : jcf-io.c $(CONFIG_H) $(srcdir)/../system.h\n jcf-parse.o : jcf-parse.c $(CONFIG_H) $(JAVA_TREE_H) $(srcdir)/../flags.h \\\n   $(srcdir)/../input.h java-except.h $(srcdir)/../system.h \\\n-  $(srcdir)/../toplev.h\n+  $(srcdir)/../toplev.h $(PARSE_H)\n jcf-write.o : jcf-write.c $(CONFIG_H) $(JAVA_TREE_H) jcf.h $(RTL_H) \\\n   java-opcodes.h parse.h buffer.h $(srcdir)/../system.h $(srcdir)/../toplev.h\n jv-scan.o : jv-scan.c $(CONFIG_H) $(srcdir)/../system.h\n@@ -309,7 +309,7 @@ lang.o : lang.c $(CONFIG_H) $(JAVA_TREE_H) jcf.h $(srcdir)/../input.h \\\n   $(srcdir)/../toplev.h $(srcdir)/../system.h\n mangle.o : mangle.c $(CONFIG_H) jcf.h $(srcdir)/../system.h \\\n   $(srcdir)/../toplev.h\n-parse-scan.o : $(CONFIG_H) $(srcdir)/../system.h\n+parse-scan.o : $(CONFIG_H) $(srcdir)/../system.h $(srcdir)/../toplev.h\n typeck.o : typeck.c $(CONFIG_H) $(JAVA_TREE_H) jcf.h convert.h \\\n   $(srcdir)/../toplev.h $(srcdir)/../system.h\n verify.o : verify.c $(CONFIG_H) $(JAVA_TREE_H) jcf.h javaop.h java-opcodes.h \\"}, {"sha": "d92d4c333744572da20ecfc2595b818515347fbc", "filename": "gcc/java/class.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035", "patch": "@@ -37,6 +37,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"parse.h\"\n \n static tree mangle_class_field PROTO ((tree class));\n+static tree make_method_value PROTO ((tree));\n \n static rtx registerClass_libfunc;\n \n@@ -874,10 +875,9 @@ make_field_value (tree fdecl)\n   return finit;\n }\n \n-tree\n-make_method_value (mdecl, this_class_addr)\n+static tree\n+make_method_value (mdecl)\n      tree mdecl;\n-     tree this_class_addr;\n {\n   tree minit;\n   tree code;\n@@ -1042,7 +1042,7 @@ make_class_data (type)\n       if (METHOD_PRIVATE (method)\n \t  && (flag_inline_functions || optimize))\n \tcontinue;\n-      init = make_method_value (method, this_class_addr);\n+      init = make_method_value (method);\n       method_count++;\n       methods = tree_cons (NULL_TREE, init, methods);\n     }"}, {"sha": "6daeb92cd368c2288dc8dd898642a65501af9618", "filename": "gcc/java/expr.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035", "patch": "@@ -1886,7 +1886,6 @@ java_lang_expand_expr (exp, target, tmode, modifier)\n       for (current = TREE_OPERAND (exp, 1); current; \n \t   current = TREE_CHAIN (current))\n \t{\n-\t  extern rtx return_label;\n \t  tree type;\n \t  tree catch = TREE_OPERAND (current, 0);\n \t  tree decl = BLOCK_EXPR_DECLS (catch);"}, {"sha": "b246306c3f45ea2ede7e69321f6ced1af035fbc4", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035", "patch": "@@ -587,10 +587,28 @@ extern int merge_type_state PROTO ((tree));\n extern void push_type PROTO ((tree));\n extern void load_type_state PROTO ((tree));\n extern void add_interface PROTO ((tree, tree));\n-extern int find_in_current_zip PROTO ((char *, int, struct JCF **));\n extern void append_gpp_mangled_classtype PROTO ((struct obstack *, char *));\n extern void emit_unicode_mangled_name PROTO ((struct obstack *, char *, int));\n extern tree force_evaluation_order PROTO ((tree));\n+extern int verify_constant_pool PROTO ((struct JCF *));\n+extern void start_java_method PROTO ((tree));\n+extern void end_java_method PROTO ((void));\n+extern void give_name_to_locals PROTO ((struct JCF *));\n+extern void expand_byte_code PROTO ((struct JCF *, tree));\n+extern int open_in_zip PROTO ((struct JCF *, const char *, const char *, int));\n+extern void set_constant_value PROTO ((tree, tree));\n+#ifdef jword\n+extern int find_constant1 PROTO ((struct CPool *, int, jword));\n+extern int find_constant2 PROTO ((struct CPool *, int, jword, jword));\n+#endif\n+extern int find_utf8_constant PROTO ((struct CPool *, tree));\n+extern int find_string_constant PROTO ((struct CPool *, tree));\n+extern int find_class_constant PROTO ((struct CPool *, tree));\n+extern int find_fieldref_index PROTO ((struct CPool *, tree));\n+extern int find_methodref_index PROTO ((struct CPool *, tree));\n+extern void write_constant_pool PROTO ((struct CPool *, unsigned char *, int));\n+extern int count_constant_pool_bytes PROTO ((struct CPool *));\n+extern int encode_newarray_type PROTO ((tree));\n \n /* Access flags etc for a method (a FUNCTION_DECL): */\n "}, {"sha": "4512bcde27c8bdf1b136149c012ca695ce481593", "filename": "gcc/java/jcf-dump.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/gcc%2Fjava%2Fjcf-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/gcc%2Fjava%2Fjcf-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-dump.c?ref=8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035", "patch": "@@ -913,7 +913,6 @@ DEFUN(disassemble_method, (jcf, byte_ops, len),\n     {\n       int oldpc = PC;\n       int saw_index;\n-      jlong LONG_temp;\n       jint INT_temp;\n       switch (byte_ops[PC++])\n \t{"}, {"sha": "9b854b4442a724fc944578614d18fab1b6ec235e", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035", "patch": "@@ -33,6 +33,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"input.h\"\n #include \"java-tree.h\"\n #include \"toplev.h\"\n+#include \"parse.h\"\n \n /* A CONSTANT_Utf8 element is converted to an IDENTIFIER_NODE at parse time. */\n #define JPOOL_UTF(JCF, INDEX) CPOOL_UTF(&(JCF)->cpool, INDEX)\n@@ -81,7 +82,9 @@ static tree give_name_to_class PROTO ((JCF *jcf, int index));\n void parse_zip_file_entries PROTO (());\n void process_zip_dir PROTO (());\n static void parse_source_file PROTO ((tree));\n-static void jcf_parse_source PROTO ((JCF *));\n+static void jcf_parse_source PROTO ((void));\n+static int jcf_figure_file_type PROTO ((JCF *));\n+static int find_in_current_zip PROTO ((char *, struct JCF **));\n \n /* Handle \"SourceFile\" attribute. */\n \n@@ -465,15 +468,14 @@ read_class (name)\n   tree save_current_class = current_class;\n   char *save_input_filename = input_filename;\n   JCF *save_current_jcf = current_jcf;\n-  long saved_pos;\n+  long saved_pos = 0;\n   if (current_jcf->read_state)\n     saved_pos = ftell (current_jcf->read_state);\n \n   push_obstacks (&permanent_obstack, &permanent_obstack);\n \n   /* Search in current zip first.  */\n-  if (find_in_current_zip (IDENTIFIER_POINTER (name),\n-\t\t\t   IDENTIFIER_LENGTH (name), &jcf) == 0)\n+  if (find_in_current_zip (IDENTIFIER_POINTER (name), &jcf) == 0)\n     /* FIXME: until the `.java' parser is fully working, we only\n        look for a .java file when one was mentioned on the\n        command line.  This lets us test the .java parser fairly\n@@ -496,7 +498,7 @@ read_class (name)\n     current_jcf = jcf;\n \n   if (current_jcf->java_source)\n-    jcf_parse_source (current_jcf);\n+    jcf_parse_source ();\n   else {\n     java_parser_context_save_global ();\n     java_push_parser_context ();\n@@ -560,9 +562,8 @@ load_class (class_or_name, verbose)\n \n /* Parse a source file when JCF refers to a source file.  */\n \n-void\n-jcf_parse_source (jcf)\n-     JCF *jcf;\n+static void\n+jcf_parse_source ()\n {\n   tree file;\n \n@@ -956,7 +957,7 @@ void process_zip_dir()\n    zip file.  */\n int\n DEFUN(find_in_current_zip, (name, length, jcf),\n-      char *name AND int length AND JCF **jcf)\n+      char *name AND JCF **jcf)\n {\n   JCF *local_jcf;\n   tree class_name = maybe_get_identifier (name), class, icv;\n@@ -979,7 +980,7 @@ DEFUN(find_in_current_zip, (name, length, jcf),\n }\n \n /* Figure what kind of file we're dealing with */\n-int\n+static int\n DEFUN(jcf_figure_file_type, (jcf),\n       JCF *jcf)\n {"}, {"sha": "49a9b1602fb3ed088d3baa45e4e41e5bc29eb159", "filename": "gcc/java/jcf-reader.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/gcc%2Fjava%2Fjcf-reader.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/gcc%2Fjava%2Fjcf-reader.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-reader.c?ref=8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035", "patch": "@@ -139,8 +139,8 @@ DEFUN(jcf_parse_preamble, (jcf),\n       JCF* jcf)\n {\n   uint32 magic = (JCF_FILL (jcf, 8), JCF_readu4 (jcf));\n-  uint16 minor_version = JCF_readu2 (jcf);\n-  uint16 major_version = JCF_readu2 (jcf);\n+  uint16 minor_version ATTRIBUTE_UNUSED = JCF_readu2 (jcf);\n+  uint16 major_version ATTRIBUTE_UNUSED = JCF_readu2 (jcf);\n #ifdef HANDLE_MAGIC\n   HANDLE_MAGIC (magic, minor_version, major_version);\n #endif"}, {"sha": "be5c849f81fa3f5574adad5507d8697f6098a3df", "filename": "gcc/java/lex.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/gcc%2Fjava%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/gcc%2Fjava%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.c?ref=8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035", "patch": "@@ -57,7 +57,9 @@ static int java_lineterminator PROTO ((unicode_t));\n static char *java_sprint_unicode PROTO ((struct java_line *, int));\n static void java_unicode_2_utf8 PROTO ((unicode_t));\n static void java_lex_error PROTO ((char *, int));\n+#ifndef JC1_LITE\n static int java_is_eol PROTO ((FILE *, int));\n+#endif\n static void java_store_unicode PROTO ((struct java_line *, unicode_t, int));\n static unicode_t java_parse_escape_sequence PROTO (());\n static int java_letter_or_digit_p PROTO ((unicode_t));\n@@ -74,9 +76,9 @@ static unicode_t java_sneak_unicode PROTO (());\n void\n java_init_lex ()\n {\n+#ifndef JC1_LITE\n   int java_lang_imported = 0;\n \n-#ifndef JC1_LITE\n   if (!java_lang_id)\n     java_lang_id = get_identifier (\"java.lang\");\n   if (!java_lang_cloneable)\n@@ -398,7 +400,7 @@ static int\n java_parse_doc_section (c)\n      unicode_t c;\n {\n-  int valid_tag = 0, seen_star;\n+  int valid_tag = 0, seen_star = 0;\n \n   while (JAVA_WHITE_SPACE_P (c) || (c == '*') || c == '\\n')\n     {\n@@ -604,7 +606,9 @@ java_lex (java_lval)\n       char literal_token [256];\n       int  literal_index = 0, radix = 10, long_suffix = 0, overflow = 0, bytes;\n       int  i;\n+#ifndef JC1_LITE\n       int  number_beginning = ctxp->c_line->current;\n+#endif\n       \n       /* We might have a . separator instead of a FP like .[0-9]* */\n       if (c == '.')\n@@ -1291,8 +1295,8 @@ build_wfl_node (node)\n \n static void\n java_lex_error (msg, forward)\n-     char *msg;\n-     int forward;\n+     char *msg ATTRIBUTE_UNUSED;\n+     int forward ATTRIBUTE_UNUSED;\n {\n #ifndef JC1_LITE\n   ctxp->elc.line = ctxp->c_line->lineno;\n@@ -1305,6 +1309,7 @@ java_lex_error (msg, forward)\n #endif\n }\n \n+#ifndef JC1_LITE\n static int\n java_is_eol (fp, c)\n   FILE *fp;\n@@ -1324,11 +1329,12 @@ java_is_eol (fp, c)\n       return 0;\n     }  \n }\n+#endif\n \n char *\n java_get_line_col (filename, line, col)\n-     char *filename;\n-     int line, col;\n+     char *filename ATTRIBUTE_UNUSED;\n+     int line ATTRIBUTE_UNUSED, col ATTRIBUTE_UNUSED;\n {\n #ifdef JC1_LITE\n   return 0;"}, {"sha": "654efcfc3fc7bacfbf9981816b4ce50a7a82f5ea", "filename": "gcc/java/parse-scan.c", "status": "modified", "additions": 92, "deletions": 91, "changes": 183, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/gcc%2Fjava%2Fparse-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/gcc%2Fjava%2Fparse-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse-scan.c?ref=8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035", "patch": "@@ -121,6 +121,7 @@\n #include \"system.h\"\n \n #include \"obstack.h\"\n+#include \"toplev.h\"\n \n extern char *input_filename;\n extern FILE *finput, *out;\n@@ -175,7 +176,7 @@ static void report_main_declaration PROTO ((struct method_declarator *));\n #include \"lex.h\"\n #include \"parse.h\"\n \n-#line 99 \"./parse-scan.y\"\n+#line 100 \"./parse-scan.y\"\n typedef union {\n   char *node;\n   struct method_declarator *declarator;\n@@ -400,41 +401,41 @@ static const short yyrhs[] = {   123,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   170,   175,   177,   178,   179,   180,   181,   185,   187,   190,\n-   196,   201,   208,   210,   213,   217,   221,   225,   227,   234,\n-   244,   246,   249,   253,   262,   267,   268,   269,   270,   271,\n-   272,   273,   274,   277,   279,   282,   284,   287,   292,   294,\n-   297,   301,   305,   307,   308,   314,   323,   334,   341,   341,\n-   344,   346,   347,   350,   351,   354,   357,   361,   363,   366,\n-   368,   371,   373,   374,   375,   378,   380,   381,   382,   386,\n-   389,   393,   396,   399,   401,   404,   407,   411,   413,   417,\n-   421,   424,   425,   427,   434,   441,   447,   450,   452,   460,\n-   476,   492,   493,   496,   499,   503,   505,   506,   510,   512,\n-   515,   525,   527,   530,   532,   538,   541,   545,   547,   548,\n-   549,   553,   555,   558,   560,   564,   566,   571,   573,   575,\n-   576,   580,   582,   585,   587,   590,   592,   595,   597,   598,\n-   599,   602,   606,   611,   613,   614,   615,   618,   620,   624,\n-   626,   629,   631,   634,   636,   637,   640,   644,   647,   651,\n-   653,   654,   655,   656,   657,   660,   662,   663,   664,   665,\n-   668,   670,   671,   672,   673,   674,   675,   676,   677,   678,\n-   679,   682,   686,   691,   695,   701,   705,   707,   708,   709,\n-   710,   711,   712,   715,   719,   723,   727,   731,   733,   734,\n-   735,   738,   740,   743,   748,   750,   753,   755,   758,   762,\n-   766,   770,   774,   778,   780,   783,   785,   788,   792,   795,\n-   796,   797,   800,   801,   804,   806,   809,   811,   814,   816,\n-   819,   821,   824,   828,   830,   833,   838,   840,   841,   844,\n-   846,   849,   853,   858,   860,   863,   865,   866,   867,   868,\n-   869,   870,   874,   876,   878,   882,   886,   888,   892,   893,\n-   897,   898,   899,   900,   903,   906,   909,   911,   912,   915,\n-   917,   918,   919,   922,   923,   926,   928,   931,   935,   937,\n-   940,   942,   945,   948,   950,   951,   952,   953,   956,   959,\n-   962,   964,   966,   967,   970,   974,   978,   980,   981,   982,\n-   983,   986,   990,   994,   996,   997,   998,  1001,  1003,  1004,\n-  1005,  1008,  1010,  1011,  1012,  1015,  1017,  1018,  1021,  1023,\n-  1024,  1025,  1028,  1030,  1031,  1032,  1033,  1034,  1037,  1039,\n-  1040,  1043,  1045,  1048,  1050,  1053,  1055,  1058,  1060,  1063,\n-  1065,  1068,  1070,  1073,  1075,  1078,  1082,  1085,  1086,  1089,\n-  1091,  1094,  1098\n+   171,   176,   178,   179,   180,   181,   182,   186,   188,   191,\n+   197,   202,   209,   211,   214,   218,   222,   226,   228,   235,\n+   245,   247,   250,   254,   263,   268,   269,   270,   271,   272,\n+   273,   274,   275,   278,   280,   283,   285,   288,   293,   295,\n+   298,   302,   306,   308,   309,   315,   324,   335,   342,   342,\n+   345,   347,   348,   351,   352,   355,   358,   362,   364,   367,\n+   369,   372,   374,   375,   376,   379,   381,   382,   383,   387,\n+   390,   394,   397,   400,   402,   405,   408,   412,   414,   418,\n+   422,   425,   426,   428,   435,   442,   448,   451,   453,   461,\n+   477,   493,   494,   497,   500,   504,   506,   507,   511,   513,\n+   516,   526,   528,   531,   533,   539,   542,   546,   548,   549,\n+   550,   554,   556,   559,   561,   565,   567,   572,   574,   576,\n+   577,   581,   583,   586,   588,   591,   593,   596,   598,   599,\n+   600,   603,   607,   612,   614,   615,   616,   619,   621,   625,\n+   627,   630,   632,   635,   637,   638,   641,   645,   648,   652,\n+   654,   655,   656,   657,   658,   661,   663,   664,   665,   666,\n+   669,   671,   672,   673,   674,   675,   676,   677,   678,   679,\n+   680,   683,   687,   692,   696,   702,   706,   708,   709,   710,\n+   711,   712,   713,   716,   720,   724,   728,   732,   734,   735,\n+   736,   739,   741,   744,   749,   751,   754,   756,   759,   763,\n+   767,   771,   775,   779,   781,   784,   786,   789,   793,   796,\n+   797,   798,   801,   802,   805,   807,   810,   812,   815,   817,\n+   820,   822,   825,   829,   831,   834,   839,   841,   842,   845,\n+   847,   850,   854,   859,   861,   864,   866,   867,   868,   869,\n+   870,   871,   875,   877,   879,   883,   887,   889,   893,   894,\n+   898,   899,   900,   901,   904,   907,   910,   912,   913,   916,\n+   918,   919,   920,   923,   924,   927,   929,   932,   936,   938,\n+   941,   943,   946,   949,   951,   952,   953,   954,   957,   960,\n+   963,   965,   967,   968,   971,   975,   979,   981,   982,   983,\n+   984,   987,   991,   995,   997,   998,   999,  1002,  1004,  1005,\n+  1006,  1009,  1011,  1012,  1013,  1016,  1018,  1019,  1022,  1024,\n+  1025,  1026,  1029,  1031,  1032,  1033,  1034,  1035,  1038,  1040,\n+  1041,  1044,  1046,  1049,  1051,  1054,  1056,  1059,  1061,  1064,\n+  1066,  1069,  1071,  1074,  1076,  1079,  1083,  1086,  1087,  1090,\n+  1092,  1095,  1099\n };\n #endif\n \n@@ -1374,7 +1375,7 @@ static const short yycheck[] = {     3,\n #define YYPURE 1\n \n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/share/misc/bison.simple\"\n+#line 3 \"/usr/local/gnu/share/bison.simple\"\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -1391,7 +1392,7 @@ static const short yycheck[] = {     3,\n \n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n-   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n+   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n /* As a special exception, when this file is copied by Bison into a\n    Bison output file, you may use that output file without restriction.\n@@ -1567,7 +1568,7 @@ __yy_memcpy (char *to, char *from, int count)\n #endif\n #endif\n \f\n-#line 196 \"/usr/share/misc/bison.simple\"\n+#line 196 \"/usr/local/gnu/share/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -1872,28 +1873,28 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 10:\n-#line 192 \"./parse-scan.y\"\n+#line 193 \"./parse-scan.y\"\n {\n \t\t  /* use preset global here. FIXME */\n \t\t  yyval.node = xstrdup (\"int\");\n \t\t;\n     break;}\n case 11:\n-#line 197 \"./parse-scan.y\"\n+#line 198 \"./parse-scan.y\"\n {\n \t\t  /* use preset global here. FIXME */\n \t\t  yyval.node = xstrdup (\"double\");\n \t\t;\n     break;}\n case 12:\n-#line 202 \"./parse-scan.y\"\n+#line 203 \"./parse-scan.y\"\n {\n \t\t  /* use preset global here. FIXME */\n \t\t  yyval.node = xstrdup (\"boolean\");\n \t\t;\n     break;}\n case 19:\n-#line 228 \"./parse-scan.y\"\n+#line 229 \"./parse-scan.y\"\n {\n \t\t  char *n = xmalloc (strlen (yyvsp[-2].node)+2);\n \t\t  n [0] = '[';\n@@ -1902,7 +1903,7 @@ case 19:\n \t\t;\n     break;}\n case 20:\n-#line 235 \"./parse-scan.y\"\n+#line 236 \"./parse-scan.y\"\n {\t\n \t\t  char *n = xmalloc (strlen (yyvsp[-2].node)+2);\n \t\t  n [0] = '[';\n@@ -1911,19 +1912,19 @@ case 20:\n \t\t;\n     break;}\n case 24:\n-#line 255 \"./parse-scan.y\"\n+#line 256 \"./parse-scan.y\"\n { \n \t\t  char *n = xmalloc (strlen (yyvsp[-2].node)+strlen (yyvsp[0].node)+2);\n \t\t  sprintf (n, \"%s.%s\", yyvsp[-2].node, yyvsp[0].node);\n \t\t  yyval.node = n;\n \t\t;\n     break;}\n case 38:\n-#line 289 \"./parse-scan.y\"\n+#line 290 \"./parse-scan.y\"\n { package_name = yyvsp[-1].node; ;\n     break;}\n case 46:\n-#line 316 \"./parse-scan.y\"\n+#line 317 \"./parse-scan.y\"\n { \n \t\t  if (yyvsp[0].value == PUBLIC_TK)\n \t\t    modifier_value++;\n@@ -1933,7 +1934,7 @@ case 46:\n \t\t;\n     break;}\n case 47:\n-#line 324 \"./parse-scan.y\"\n+#line 325 \"./parse-scan.y\"\n { \n \t\t  if (yyvsp[0].value == PUBLIC_TK)\n \t\t    modifier_value++;\n@@ -1943,81 +1944,81 @@ case 47:\n \t\t;\n     break;}\n case 48:\n-#line 336 \"./parse-scan.y\"\n+#line 337 \"./parse-scan.y\"\n { \n \t\t  report_class_declaration(yyvsp[-2].node);\n \t\t  modifier_value = 0;\n                 ;\n     break;}\n case 50:\n-#line 342 \"./parse-scan.y\"\n+#line 343 \"./parse-scan.y\"\n { report_class_declaration(yyvsp[-2].node); ;\n     break;}\n case 56:\n-#line 356 \"./parse-scan.y\"\n+#line 357 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 57:\n-#line 358 \"./parse-scan.y\"\n+#line 359 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 70:\n-#line 388 \"./parse-scan.y\"\n+#line 389 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 71:\n-#line 390 \"./parse-scan.y\"\n+#line 391 \"./parse-scan.y\"\n { modifier_value = 0; ;\n     break;}\n case 76:\n-#line 406 \"./parse-scan.y\"\n+#line 407 \"./parse-scan.y\"\n { bracket_count = 0; USE_ABSORBER; ;\n     break;}\n case 77:\n-#line 408 \"./parse-scan.y\"\n+#line 409 \"./parse-scan.y\"\n { ++bracket_count; ;\n     break;}\n case 81:\n-#line 423 \"./parse-scan.y\"\n+#line 424 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 83:\n-#line 426 \"./parse-scan.y\"\n+#line 427 \"./parse-scan.y\"\n { modifier_value = 0; ;\n     break;}\n case 84:\n-#line 428 \"./parse-scan.y\"\n+#line 429 \"./parse-scan.y\"\n { \n                   report_main_declaration (yyvsp[-1].declarator);\n \t\t  modifier_value = 0;\n \t\t;\n     break;}\n case 85:\n-#line 436 \"./parse-scan.y\"\n+#line 437 \"./parse-scan.y\"\n { \n \t\t  struct method_declarator *d;\n \t\t  NEW_METHOD_DECLARATOR (d, yyvsp[-2].node, NULL);\n \t\t  yyval.declarator = d;\n \t\t;\n     break;}\n case 86:\n-#line 442 \"./parse-scan.y\"\n+#line 443 \"./parse-scan.y\"\n { \n \t\t  struct method_declarator *d;\n \t\t  NEW_METHOD_DECLARATOR (d, yyvsp[-3].node, yyvsp[-1].node);\n \t\t  yyval.declarator = d;\n \t\t;\n     break;}\n case 89:\n-#line 453 \"./parse-scan.y\"\n+#line 454 \"./parse-scan.y\"\n {\n \t\t  char *n = xmalloc (strlen (yyvsp[-2].node)+strlen(yyvsp[0].node)+2);\n \t\t  sprintf (n, \"%s,%s\", yyvsp[-2].node, yyvsp[0].node);\n \t\t  yyval.node = n;\n \t\t;\n     break;}\n case 90:\n-#line 462 \"./parse-scan.y\"\n+#line 463 \"./parse-scan.y\"\n { \n \t\t  USE_ABSORBER;\n \t\t  if (bracket_count)\n@@ -2034,7 +2035,7 @@ case 90:\n \t\t;\n     break;}\n case 91:\n-#line 477 \"./parse-scan.y\"\n+#line 478 \"./parse-scan.y\"\n {\n \t\t  if (bracket_count)\n \t\t    {\n@@ -2050,104 +2051,104 @@ case 91:\n \t\t;\n     break;}\n case 94:\n-#line 498 \"./parse-scan.y\"\n+#line 499 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 95:\n-#line 500 \"./parse-scan.y\"\n+#line 501 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 101:\n-#line 517 \"./parse-scan.y\"\n+#line 518 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 103:\n-#line 528 \"./parse-scan.y\"\n+#line 529 \"./parse-scan.y\"\n { modifier_value = 0; ;\n     break;}\n case 105:\n-#line 533 \"./parse-scan.y\"\n+#line 534 \"./parse-scan.y\"\n { modifier_value = 0; ;\n     break;}\n case 106:\n-#line 540 \"./parse-scan.y\"\n+#line 541 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 107:\n-#line 542 \"./parse-scan.y\"\n+#line 543 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 114:\n-#line 559 \"./parse-scan.y\"\n+#line 560 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 115:\n-#line 561 \"./parse-scan.y\"\n+#line 562 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 119:\n-#line 574 \"./parse-scan.y\"\n+#line 575 \"./parse-scan.y\"\n { modifier_value = 0; ;\n     break;}\n case 121:\n-#line 577 \"./parse-scan.y\"\n+#line 578 \"./parse-scan.y\"\n { modifier_value = 0; ;\n     break;}\n case 148:\n-#line 646 \"./parse-scan.y\"\n+#line 647 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 149:\n-#line 648 \"./parse-scan.y\"\n+#line 649 \"./parse-scan.y\"\n { modifier_value = 0; ;\n     break;}\n case 173:\n-#line 688 \"./parse-scan.y\"\n+#line 689 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 226:\n-#line 835 \"./parse-scan.y\"\n+#line 836 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 243:\n-#line 875 \"./parse-scan.y\"\n+#line 876 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 244:\n-#line 877 \"./parse-scan.y\"\n+#line 878 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 246:\n-#line 883 \"./parse-scan.y\"\n+#line 884 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 255:\n-#line 905 \"./parse-scan.y\"\n+#line 906 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 273:\n-#line 947 \"./parse-scan.y\"\n+#line 948 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 274:\n-#line 949 \"./parse-scan.y\"\n+#line 950 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 279:\n-#line 958 \"./parse-scan.y\"\n+#line 959 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 282:\n-#line 965 \"./parse-scan.y\"\n+#line 966 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n case 337:\n-#line 1084 \"./parse-scan.y\"\n+#line 1085 \"./parse-scan.y\"\n { USE_ABSORBER; ;\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 498 \"/usr/share/misc/bison.simple\"\n+#line 498 \"/usr/local/gnu/share/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n@@ -2343,7 +2344,7 @@ case 337:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 1102 \"./parse-scan.y\"\n+#line 1103 \"./parse-scan.y\"\n \n \f\n #include \"lex.c\"\n@@ -2423,7 +2424,7 @@ void reset_report ()\n \n void\n yyerror (msg)\n-     char *msg;\n+     char *msg ATTRIBUTE_UNUSED;\n {\n }\n "}, {"sha": "a8f6df645a921b70f65eb583de989481897820f3", "filename": "gcc/java/parse-scan.y", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/gcc%2Fjava%2Fparse-scan.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/gcc%2Fjava%2Fparse-scan.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse-scan.y?ref=8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035", "patch": "@@ -41,6 +41,7 @@ definitions and other extensions.  */\n #include \"system.h\"\n \n #include \"obstack.h\"\n+#include \"toplev.h\"\n \n extern char *input_filename;\n extern FILE *finput, *out;\n@@ -1178,7 +1179,7 @@ void reset_report ()\n \n void\n yyerror (msg)\n-     char *msg;\n+     char *msg ATTRIBUTE_UNUSED;\n {\n }\n "}, {"sha": "5326669842f0d02e65af159606495723cdbe6177", "filename": "gcc/java/parse.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/gcc%2Fjava%2Fparse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/gcc%2Fjava%2Fparse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.h?ref=8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035", "patch": "@@ -594,7 +594,7 @@ struct parser_ctxt {\n   tree current_class;\t\t    /* Current class */\n   tree current_function_decl;\t    /* Current function decl, save/restore */\n \n-  JCF *current_jcf;\t\t    /* CU jcf */\n+  struct JCF *current_jcf;\t    /* CU jcf */\n \n   int prevent_ese;\t            /* Prevent expression statement error */\n   int class_err;\t\t    /* Flag to report certain errors */\n@@ -652,8 +652,11 @@ extern tree do_resolve_class PROTO ((tree, tree, tree));\n void java_push_parser_context PROTO ((void));\n void java_pop_parser_context PROTO ((int));\n void java_init_lex PROTO ((void));\n+extern void java_parser_context_save_global PROTO ((void));\n+extern void java_parser_context_restore_global PROTO ((void));\n int yyparse PROTO ((void));\n+extern int java_parse PROTO ((void));\n int yylex ();\n void yyerror PROTO ((char *));\n-\n+extern void java_expand_classes PROTO ((void));\n #endif"}, {"sha": "d52d7fdebc1a22aa04a011be926f6e4880afbed0", "filename": "gcc/java/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/gcc%2Fjava%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035/gcc%2Fjava%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Ftypeck.c?ref=8e1f2d4c56e3d43c878a6ffe5e5c4aa6409fa035", "patch": "@@ -66,7 +66,7 @@ static tree\n convert_ieee_real_to_integer (type, expr)\n      tree type, expr;\n {\n-  tree node, assignment, expr_decl;\n+  tree assignment, expr_decl;\n   expr = save_expr (expr);\n \n   return build (COND_EXPR, type, "}]}