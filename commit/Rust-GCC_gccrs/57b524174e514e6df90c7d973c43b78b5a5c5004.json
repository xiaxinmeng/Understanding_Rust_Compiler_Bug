{"sha": "57b524174e514e6df90c7d973c43b78b5a5c5004", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdiNTI0MTc0ZTUxNGU2ZGY5MGM3ZDk3M2M0M2I3OGI1YTVjNTAwNA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-09-18T23:56:18Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-09-18T23:56:18Z"}, "message": "decl.c (layout_var_decl): Change prototype.\n\n\t* decl.c (layout_var_decl): Change prototype.  Call layout_decl\n\teven when the declaration is external.\n\t(cp_finish_decl): Adjust call to layout_var_decl.\n\t* pt.c (tsubst_expr): Make sure to initialize stmt before using it.\n\nFrom-SVN: r29504", "tree": {"sha": "c6fd4b16dbf1978e9723b877dab3cfb61c21f280", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6fd4b16dbf1978e9723b877dab3cfb61c21f280"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57b524174e514e6df90c7d973c43b78b5a5c5004", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57b524174e514e6df90c7d973c43b78b5a5c5004", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57b524174e514e6df90c7d973c43b78b5a5c5004", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57b524174e514e6df90c7d973c43b78b5a5c5004/comments", "author": null, "committer": null, "parents": [{"sha": "b534921ac08f8314a0d3330de3aef7b5588ea411", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b534921ac08f8314a0d3330de3aef7b5588ea411", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b534921ac08f8314a0d3330de3aef7b5588ea411"}], "stats": {"total": 64, "additions": 45, "deletions": 19}, "files": [{"sha": "599c7ff254c545cf550d2d75db65133e9694f00a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57b524174e514e6df90c7d973c43b78b5a5c5004/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57b524174e514e6df90c7d973c43b78b5a5c5004/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=57b524174e514e6df90c7d973c43b78b5a5c5004", "patch": "@@ -1,3 +1,10 @@\n+1999-09-18  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* decl.c (layout_var_decl): Change prototype.  Call layout_decl\n+\teven when the declaration is external.\n+\t(cp_finish_decl): Adjust call to layout_var_decl.\n+\t* pt.c (tsubst_expr): Make sure to initialize stmt before using it.\n+\n 1999-09-18  Martin von Loewis  <loewis@informatik.hu-berlin.de>\n \n \t* typeck.c (get_member_function_from_ptrfunc): Always consider"}, {"sha": "ed3e11e921d06bac2584ecacd550f80457e9f679", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 16, "deletions": 18, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57b524174e514e6df90c7d973c43b78b5a5c5004/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57b524174e514e6df90c7d973c43b78b5a5c5004/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=57b524174e514e6df90c7d973c43b78b5a5c5004", "patch": "@@ -166,7 +166,7 @@ static tree make_label_decl PROTO((tree, int));\n static void pop_label PROTO((tree));\n static void pop_labels PROTO((tree));\n static void maybe_deduce_size_from_array_init PROTO((tree, tree));\n-static tree layout_var_decl PROTO((tree, tree));\n+static void layout_var_decl PROTO((tree));\n static void maybe_commonize_var PROTO((tree));\n static tree check_initializer PROTO((tree, tree));\n static void make_rtl_for_nonlocal_decl PROTO((tree, tree, const char *));\n@@ -7088,23 +7088,23 @@ maybe_deduce_size_from_array_init (decl, init)\n }\n \n /* Set DECL_SIZE, DECL_ALIGN, etc. for DECL (a VAR_DECL), and issue\n-   any appropriate error messages regarding the layout.  INIT is a\n-   the initializer for DECL; returns a modified version.  */\n+   any appropriate error messages regarding the layout.  */\n \n-static tree\n-layout_var_decl (decl, init)\n+static void\n+layout_var_decl (decl)\n      tree decl;\n-     tree init;\n {\n-  tree ttype = target_type (TREE_TYPE (decl));\n-\n-  /* If we haven't already layed out this declaration, and we know its\n-     type, do so now.  Note that we must not call complete type for an\n-     external object because it's type might involve templates that we\n-     are not supposed to isntantiate yet.  */\n-  if (!DECL_EXTERNAL (decl)  \n-      && DECL_SIZE (decl) == NULL_TREE\n-      && TYPE_SIZE (complete_type (TREE_TYPE (decl))) != NULL_TREE)\n+  tree type = TREE_TYPE (decl);\n+  tree ttype = target_type (type);\n+\n+  /* If we haven't already layed out this declaration, do so now.\n+     Note that we must not call complete type for an external object\n+     because it's type might involve templates that we are not\n+     supposed to isntantiate yet.  (And it's perfectly legal to say \n+     `extern X x' for some incomplete type `X'.)  */\n+  if (!DECL_EXTERNAL (decl))\n+    complete_type (type);\n+  if (!DECL_SIZE (decl)&& TYPE_SIZE (type))\n     layout_decl (decl, 0);\n \n   if (!DECL_EXTERNAL (decl) && DECL_SIZE (decl) == NULL_TREE)\n@@ -7131,8 +7131,6 @@ layout_var_decl (decl, init)\n       else\n \tcp_error (\"storage size of `%D' isn't constant\", decl);\n     }\n-\n-  return init;\n }\n \n /* If a local static variable is declared in an inline function, or if\n@@ -7746,7 +7744,7 @@ cp_finish_decl (decl, init, asmspec_tree, need_pop, flags)\n     end_temporary_allocation ();\n \n   if (TREE_CODE (decl) == VAR_DECL)\n-    init = layout_var_decl (decl, init);\n+    layout_var_decl (decl);\n \n   /* Output the assembler code and/or RTL code for variables and functions,\n      unless the type is an undefined structure or union."}, {"sha": "22efc7e1df3cf0542eb36a25a5683254e47e4b6d", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57b524174e514e6df90c7d973c43b78b5a5c5004/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57b524174e514e6df90c7d973c43b78b5a5c5004/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=57b524174e514e6df90c7d973c43b78b5a5c5004", "patch": "@@ -7446,7 +7446,7 @@ tsubst_expr (t, args, complain, in_decl)\n       prep_stmt (t);\n       if (CLEANUP_P (t))\n \t{\n-\t  begin_try_block ();\n+\t  stmt = begin_try_block ();\n \t  tsubst_expr (TRY_STMTS (t), args, complain, in_decl);\n \t  finish_cleanup_try_block (stmt);\n \t  finish_cleanup (tsubst_expr (TRY_HANDLERS (t), args,"}, {"sha": "535a6a2d6306aa1162a37d8dff4a760f87e465ae", "filename": "gcc/testsuite/g++.old-deja/g++.other/crash11.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57b524174e514e6df90c7d973c43b78b5a5c5004/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57b524174e514e6df90c7d973c43b78b5a5c5004/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash11.C?ref=57b524174e514e6df90c7d973c43b78b5a5c5004", "patch": "@@ -0,0 +1,21 @@\n+// Origin: Alfred Minarik <a8601248@unet.univie.ac.at>\n+// Build don't link:\n+\n+template <typename T>\n+struct allocator\n+{\n+  typedef int size_type;\n+};\n+\n+template <typename T>\n+struct string\n+{\n+  typedef typename allocator<T>::size_type size_type;\n+\n+  static size_type size;\n+\n+  size_type\n+  max_size() const { return size; }\n+};\n+\n+template string <char>;"}]}