{"sha": "2ac4fed045181a6ea52cf4656ae18cb28ccde04d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFjNGZlZDA0NTE4MWE2ZWE1MmNmNDY1NmFlMThjYjI4Y2NkZTA0ZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-01-28T19:31:58Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-01-28T19:31:58Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r245", "tree": {"sha": "c6327540f654219bd18990ed4b4fe387c660370b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6327540f654219bd18990ed4b4fe387c660370b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ac4fed045181a6ea52cf4656ae18cb28ccde04d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ac4fed045181a6ea52cf4656ae18cb28ccde04d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ac4fed045181a6ea52cf4656ae18cb28ccde04d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ac4fed045181a6ea52cf4656ae18cb28ccde04d/comments", "author": null, "committer": null, "parents": [{"sha": "1fcea2b0e88ac3f3f925385eea4de416b8122561", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fcea2b0e88ac3f3f925385eea4de416b8122561", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fcea2b0e88ac3f3f925385eea4de416b8122561"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "8ca23e38e366a46a0fce00818788391f7136e750", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac4fed045181a6ea52cf4656ae18cb28ccde04d/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac4fed045181a6ea52cf4656ae18cb28ccde04d/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=2ac4fed045181a6ea52cf4656ae18cb28ccde04d", "patch": "@@ -364,6 +364,8 @@ reg_referenced_p (x, body)\n     case TRAP_IF:\n       return reg_overlap_mentioned_p (x, TRAP_CONDITION (body));\n \n+    case UNSPEC:\n+    case UNSPEC_VOLATILE:\n     case PARALLEL:\n       for (i = XVECLEN (body, 0) - 1; i >= 0; i--)\n \tif (reg_referenced_p (x, XVECEXP (body, 0, i)))\n@@ -1171,7 +1173,7 @@ remove_note (insn, note)\n }\n \f\n /* Nonzero if X contains any volatile memory references\n-   or volatile ASM_OPERANDS expressions.  */\n+   UNSPEC_VOLATILE operations or volatile ASM_OPERANDS expressions.  */\n \n int\n volatile_refs_p (x)\n@@ -1198,6 +1200,7 @@ volatile_refs_p (x)\n       return 0;\n \n     case CALL:\n+    case UNSPEC_VOLATILE:\n  /* case TRAP_IF: This isn't clear yet.  */\n       return 1;\n \n@@ -1269,6 +1272,7 @@ side_effects_p (x)\n     case POST_INC:\n     case POST_DEC:\n     case CALL:\n+    case UNSPEC_VOLATILE:\n  /* case TRAP_IF: This isn't clear yet.  */\n       return 1;\n \n@@ -1331,6 +1335,7 @@ may_trap_p (x)\n       return 0;\n \n       /* Conditional trap can trap!  */\n+    case UNSPEC_VOLATILE:\n     case TRAP_IF:\n       return 1;\n "}]}