{"sha": "227c4bc7af8e39d24f3f9ba96037c0254720075d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI3YzRiYzdhZjhlMzlkMjRmM2Y5YmE5NjAzN2MwMjU0NzIwMDc1ZA==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2004-10-08T23:25:49Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2004-10-08T23:25:49Z"}, "message": "re PR tree-optimization/17902 (ICE from tree_verify_flow_info)\n\n2004-10-08  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR tree-opt/17902\n        * tree-ssa-phiopt.c (conditional_replacement): Use bsi_after_labels\n        instead of bsi_start.\n        (value_replacement): Likewise.\n        (abs_replacement): Likewise\n\nFrom-SVN: r88801", "tree": {"sha": "c69ba6c43550db950db71b2c567d5f36068327f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c69ba6c43550db950db71b2c567d5f36068327f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/227c4bc7af8e39d24f3f9ba96037c0254720075d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/227c4bc7af8e39d24f3f9ba96037c0254720075d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/227c4bc7af8e39d24f3f9ba96037c0254720075d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/227c4bc7af8e39d24f3f9ba96037c0254720075d/comments", "author": null, "committer": null, "parents": [{"sha": "b7211528d51b9069f57eef8f0bde905618ba8fce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7211528d51b9069f57eef8f0bde905618ba8fce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7211528d51b9069f57eef8f0bde905618ba8fce"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "8f9daf86691e7015cab440c26a5e4773785ded7c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/227c4bc7af8e39d24f3f9ba96037c0254720075d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/227c4bc7af8e39d24f3f9ba96037c0254720075d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=227c4bc7af8e39d24f3f9ba96037c0254720075d", "patch": "@@ -1,3 +1,11 @@\n+2004-10-08  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR tree-opt/17902\n+\t* tree-ssa-phiopt.c (conditional_replacement): Use bsi_after_labels\n+\tinstead of bsi_start.\n+\t(value_replacement): Likewise.\n+\t(abs_replacement): Likewise\n+\n 2004-10-09  Steven Bosscher  <stevenb@suse.de>\n \n \t* cfgexpand.c (maybe_dump_rtl_for_tree_stmt): New function."}, {"sha": "2b415a685c99537ef2b3edd0c7b9e145fd49ba6e", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/227c4bc7af8e39d24f3f9ba96037c0254720075d/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/227c4bc7af8e39d24f3f9ba96037c0254720075d/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=227c4bc7af8e39d24f3f9ba96037c0254720075d", "patch": "@@ -332,7 +332,7 @@ conditional_replacement (basic_block bb, tree phi, tree arg0, tree arg1)\n   extract_true_false_edges_from_block (cond_block, &true_edge, &false_edge);\n       \n   /* Insert our new statement at the head of our block.  */\n-  bsi = bsi_start (bb);\n+  bsi = bsi_after_labels (bb);\n   \n   if (old_result)\n     {\n@@ -485,7 +485,7 @@ value_replacement (basic_block bb, tree phi, tree arg0, tree arg1)\n       /* Build the new assignment.  */\n       new = build (MODIFY_EXPR, TREE_TYPE (result), result, arg);\n \n-      replace_phi_with_stmt (bsi_start (bb), bb, cond_block, phi, new);\n+      replace_phi_with_stmt (bsi_after_labels (bb), bb, cond_block, phi, new);\n \n       /* Note that we optimized this PHI.  */\n       return true;\n@@ -621,7 +621,7 @@ abs_replacement (basic_block bb, tree phi, tree arg0, tree arg1)\n   new = build (MODIFY_EXPR, TREE_TYPE (lhs),\n                lhs, build1 (ABS_EXPR, TREE_TYPE (lhs), rhs));\n \n-  replace_phi_with_stmt (bsi_start (bb), bb, cond_block, phi, new);\n+  replace_phi_with_stmt (bsi_after_labels (bb), bb, cond_block, phi, new);\n \n   if (negate)\n     {"}]}