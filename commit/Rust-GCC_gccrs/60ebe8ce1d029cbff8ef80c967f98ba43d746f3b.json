{"sha": "60ebe8ce1d029cbff8ef80c967f98ba43d746f3b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBlYmU4Y2UxZDAyOWNiZmY4ZWY4MGM5NjdmOThiYTQzZDc0NmYzYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-12-02T08:44:42Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-12-02T08:44:42Z"}, "message": "re PR rtl-optimization/78547 (ICE: in loc_cmp, at var-tracking.c:3417 with -Os -g -mstringop-strategy=libcall -freorder-blocks-algorithm=simple)\n\n\tPR rtl-optimization/78547\n\t* emit-rtl.c (unshare_all_rtl): Make sure DECL_RTL and\n\tDECL_INCOMING_RTL is not shared.\n\t* config/i386/i386.c (convert_scalars_to_vectors): If any\n\tinsns have been converted, adjust all parameter's DEC_RTL and\n\tDECL_INCOMING_RTL back from V1TImode to TImode if the parameters have\n\tTImode.\n\n\t* gcc.dg/pr78547.c: New test.\n\nFrom-SVN: r243165", "tree": {"sha": "d0c90b780983a3a4c1d8282028a2bf718f76ca35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0c90b780983a3a4c1d8282028a2bf718f76ca35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60ebe8ce1d029cbff8ef80c967f98ba43d746f3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60ebe8ce1d029cbff8ef80c967f98ba43d746f3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60ebe8ce1d029cbff8ef80c967f98ba43d746f3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60ebe8ce1d029cbff8ef80c967f98ba43d746f3b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a717444986a981b21b42fccfd982dcb6ebe42254", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a717444986a981b21b42fccfd982dcb6ebe42254", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a717444986a981b21b42fccfd982dcb6ebe42254"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "260a66d9e8b7960c20dd6a6e10fba518eb1bd47f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60ebe8ce1d029cbff8ef80c967f98ba43d746f3b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60ebe8ce1d029cbff8ef80c967f98ba43d746f3b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60ebe8ce1d029cbff8ef80c967f98ba43d746f3b", "patch": "@@ -1,5 +1,13 @@\n 2016-12-02  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/78547\n+\t* emit-rtl.c (unshare_all_rtl): Make sure DECL_RTL and\n+\tDECL_INCOMING_RTL is not shared.\n+\t* config/i386/i386.c (convert_scalars_to_vectors): If any\n+\tinsns have been converted, adjust all parameter's DEC_RTL and\n+\tDECL_INCOMING_RTL back from V1TImode to TImode if the parameters have\n+\tTImode.\n+\n \tPR rtl-optimization/78575\n \t* config/i386/i386.c (timode_scalar_chain::fix_debug_reg_uses): Use\n \tDF infrastructure to wrap all V1TImode reg uses into TImode subreg"}, {"sha": "5678fa2ba857ae810d97b97a6bdf22b0e7273e9d", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60ebe8ce1d029cbff8ef80c967f98ba43d746f3b/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60ebe8ce1d029cbff8ef80c967f98ba43d746f3b/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=60ebe8ce1d029cbff8ef80c967f98ba43d746f3b", "patch": "@@ -4075,6 +4075,28 @@ convert_scalars_to_vector ()\n \tcrtl->stack_alignment_needed = 128;\n       if (crtl->stack_alignment_estimated < 128)\n \tcrtl->stack_alignment_estimated = 128;\n+      /* Fix up DECL_RTL/DECL_INCOMING_RTL of arguments.  */\n+      if (TARGET_64BIT)\n+\tfor (tree parm = DECL_ARGUMENTS (current_function_decl);\n+\t     parm; parm = DECL_CHAIN (parm))\n+\t  {\n+\t    if (TYPE_MODE (TREE_TYPE (parm)) != TImode)\n+\t      continue;\n+\t    if (DECL_RTL_SET_P (parm)\n+\t\t&& GET_MODE (DECL_RTL (parm)) == V1TImode)\n+\t      {\n+\t\trtx r = DECL_RTL (parm);\n+\t\tif (REG_P (r))\n+\t\t  SET_DECL_RTL (parm, gen_rtx_SUBREG (TImode, r, 0));\n+\t      }\n+\t    if (DECL_INCOMING_RTL (parm)\n+\t\t&& GET_MODE (DECL_INCOMING_RTL (parm)) == V1TImode)\n+\t      {\n+\t\trtx r = DECL_INCOMING_RTL (parm);\n+\t\tif (REG_P (r))\n+\t\t  DECL_INCOMING_RTL (parm) = gen_rtx_SUBREG (TImode, r, 0);\n+\t      }\n+\t  }\n     }\n \n   return 0;"}, {"sha": "d2ac88bd510217d8478df48e01016864ccb4ac66", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60ebe8ce1d029cbff8ef80c967f98ba43d746f3b/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60ebe8ce1d029cbff8ef80c967f98ba43d746f3b/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=60ebe8ce1d029cbff8ef80c967f98ba43d746f3b", "patch": "@@ -2668,6 +2668,14 @@ unsigned int\n unshare_all_rtl (void)\n {\n   unshare_all_rtl_1 (get_insns ());\n+\n+  for (tree decl = DECL_ARGUMENTS (cfun->decl); decl; decl = DECL_CHAIN (decl))\n+    {\n+      if (DECL_RTL_SET_P (decl))\n+\tSET_DECL_RTL (decl, copy_rtx_if_shared (DECL_RTL (decl)));\n+      DECL_INCOMING_RTL (decl) = copy_rtx_if_shared (DECL_INCOMING_RTL (decl));\n+    }\n+\n   return 0;\n }\n "}, {"sha": "490d08165abbfdfd72f0170b9f779401498025ba", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60ebe8ce1d029cbff8ef80c967f98ba43d746f3b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60ebe8ce1d029cbff8ef80c967f98ba43d746f3b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=60ebe8ce1d029cbff8ef80c967f98ba43d746f3b", "patch": "@@ -1,5 +1,8 @@\n 2016-12-02  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/78547\n+\t* gcc.dg/pr78547.c: New test.\n+\n \tPR rtl-optimization/78575\n \t* gcc.dg/pr78575.c: New test.\n "}, {"sha": "9300cbc933250da736bac21f889272cbae03bc24", "filename": "gcc/testsuite/gcc.dg/pr78547.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60ebe8ce1d029cbff8ef80c967f98ba43d746f3b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr78547.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60ebe8ce1d029cbff8ef80c967f98ba43d746f3b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr78547.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr78547.c?ref=60ebe8ce1d029cbff8ef80c967f98ba43d746f3b", "patch": "@@ -0,0 +1,18 @@\n+/* PR rtl-optimization/78547 */\n+/* { dg-do compile { target int128 } } */\n+/* { dg-options \"-Os -g -freorder-blocks-algorithm=simple -Wno-psabi\" } */\n+/* { dg-additional-options \"-mstringop-strategy=libcall\" { target i?86-*-* x86_64-*-* } } */\n+\n+typedef unsigned __int128 u128;\n+typedef unsigned __int128 V __attribute__ ((vector_size (64)));\n+\n+V\n+foo (u128 a, u128 b, u128 c, V d)\n+{\n+  V e = (V) {a};\n+  V f = e & 1;\n+  e = 0 != e;\n+  c = c;\n+  f = f << ((V) {c} & 7);\n+  return f + e;\n+}"}]}