{"sha": "2f8df14d379566091aed5fe278c5ee2d30490b51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY4ZGYxNGQzNzk1NjYwOTFhZWQ1ZmUyNzhjNWVlMmQzMDQ5MGI1MQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.ibm.com", "date": "2018-12-21T18:57:00Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2018-12-21T18:57:00Z"}, "message": "S/390: Add support for double<->long vector converts\n\ngcc/ChangeLog:\n\n2018-12-21  Andreas Krebbel  <krebbel@linux.ibm.com>\n\n\t* config/s390/vector.md (\"floatv2div2df2\", \"floatunsv2div2df2\")\n\t(\"fix_truncv2dfv2di2\", \"fixuns_truncv2dfv2di2\"): New pattern\n\tdefinitions.\n\ngcc/testsuite/ChangeLog:\n\n2018-12-21  Andreas Krebbel  <krebbel@linux.ibm.com>\n\n\t* gcc.target/s390/vector/fp-signedint-convert-1.c: New test.\n\t* gcc.target/s390/vector/fp-unsignedint-convert-1.c: New test.\n\nFrom-SVN: r267336", "tree": {"sha": "ae26c9ae38a3a98f05cd4850b017315336a1c5eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae26c9ae38a3a98f05cd4850b017315336a1c5eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f8df14d379566091aed5fe278c5ee2d30490b51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f8df14d379566091aed5fe278c5ee2d30490b51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f8df14d379566091aed5fe278c5ee2d30490b51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f8df14d379566091aed5fe278c5ee2d30490b51/comments", "author": {"login": "Andreas-Krebbel", "id": 38103320, "node_id": "MDQ6VXNlcjM4MTAzMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38103320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreas-Krebbel", "html_url": "https://github.com/Andreas-Krebbel", "followers_url": "https://api.github.com/users/Andreas-Krebbel/followers", "following_url": "https://api.github.com/users/Andreas-Krebbel/following{/other_user}", "gists_url": "https://api.github.com/users/Andreas-Krebbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreas-Krebbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreas-Krebbel/subscriptions", "organizations_url": "https://api.github.com/users/Andreas-Krebbel/orgs", "repos_url": "https://api.github.com/users/Andreas-Krebbel/repos", "events_url": "https://api.github.com/users/Andreas-Krebbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreas-Krebbel/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c3d62ffdc299a91fe4ae5c2099c5f917790bab0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3d62ffdc299a91fe4ae5c2099c5f917790bab0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3d62ffdc299a91fe4ae5c2099c5f917790bab0c"}], "stats": {"total": 115, "additions": 115, "deletions": 0}, "files": [{"sha": "622e0243994bc2248d56eaabe722816d597f7911", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f8df14d379566091aed5fe278c5ee2d30490b51/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f8df14d379566091aed5fe278c5ee2d30490b51/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f8df14d379566091aed5fe278c5ee2d30490b51", "patch": "@@ -1,3 +1,9 @@\n+2018-12-21  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* config/s390/vector.md (\"floatv2div2df2\", \"floatunsv2div2df2\")\n+\t(\"fix_truncv2dfv2di2\", \"fixuns_truncv2dfv2di2\"): New pattern\n+\tdefinitions.\n+\n 2018-12-21  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR rtl-optimization/87727"}, {"sha": "4c8450508f914a786988d8d5292d11dcd03ac7e6", "filename": "gcc/config/s390/vector.md", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f8df14d379566091aed5fe278c5ee2d30490b51/gcc%2Fconfig%2Fs390%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f8df14d379566091aed5fe278c5ee2d30490b51/gcc%2Fconfig%2Fs390%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fvector.md?ref=2f8df14d379566091aed5fe278c5ee2d30490b51", "patch": "@@ -1960,6 +1960,58 @@\n   operands[6] = gen_reg_rtx (V16QImode);\n })\n \n+;\n+; BFP <-> integer conversions\n+;\n+\n+; signed integer to floating point\n+\n+; op2: inexact exception not suppressed (IEEE 754 2008)\n+; op3: according to current rounding mode\n+\n+(define_insn \"floatv2div2df2\"\n+  [(set (match_operand:V2DF             0 \"register_operand\" \"=v\")\n+\t(float:V2DF (match_operand:V2DI 1 \"register_operand\"  \"v\")))]\n+  \"TARGET_VX\"\n+  \"vcdgb\\t%v0,%v1,0,0\"\n+  [(set_attr \"op_type\" \"VRR\")])\n+\n+; unsigned integer to floating point\n+\n+; op2: inexact exception not suppressed (IEEE 754 2008)\n+; op3: according to current rounding mode\n+\n+(define_insn \"floatunsv2div2df2\"\n+  [(set (match_operand:V2DF                      0 \"register_operand\" \"=v\")\n+\t(unsigned_float:V2DF (match_operand:V2DI 1 \"register_operand\"  \"v\")))]\n+  \"TARGET_VX\"\n+  \"vcdlgb\\t%v0,%v1,0,0\"\n+  [(set_attr \"op_type\" \"VRR\")])\n+\n+; floating point to signed integer\n+\n+; op2: inexact exception not suppressed (IEEE 754 2008)\n+; op3: rounding mode 5 (round towards 0 C11 6.3.1.4)\n+\n+(define_insn \"fix_truncv2dfv2di2\"\n+  [(set (match_operand:V2DI           0 \"register_operand\" \"=v\")\n+\t(fix:V2DI (match_operand:V2DF 1 \"register_operand\"  \"v\")))]\n+  \"TARGET_VX\"\n+  \"vcgdb\\t%v0,%v1,0,5\"\n+  [(set_attr \"op_type\" \"VRR\")])\n+\n+; floating point to unsigned integer\n+\n+; op2: inexact exception not suppressed (IEEE 754 2008)\n+; op3: rounding mode 5 (round towards 0 C11 6.3.1.4)\n+\n+(define_insn \"fixuns_truncv2dfv2di2\"\n+  [(set (match_operand:V2DI                    0 \"register_operand\" \"=v\")\n+\t(unsigned_fix:V2DI (match_operand:V2DF 1 \"register_operand\"  \"v\")))]\n+  \"TARGET_VX\"\n+  \"vclgdb\\t%v0,%v1,0,5\"\n+  [(set_attr \"op_type\" \"VRR\")])\n+\n ; reduc_smin\n ; reduc_smax\n ; reduc_umin"}, {"sha": "7889c08ef36e114e1a431cb648bb54a80e0c05fa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f8df14d379566091aed5fe278c5ee2d30490b51/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f8df14d379566091aed5fe278c5ee2d30490b51/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2f8df14d379566091aed5fe278c5ee2d30490b51", "patch": "@@ -1,3 +1,8 @@\n+2018-12-21  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* gcc.target/s390/vector/fp-signedint-convert-1.c: New test.\n+\t* gcc.target/s390/vector/fp-unsignedint-convert-1.c: New test.\n+\n 2018-12-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/88563"}, {"sha": "536817aa5af790f39df3000ed277f51a10ef1047", "filename": "gcc/testsuite/gcc.target/s390/vector/fp-signedint-convert-1.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f8df14d379566091aed5fe278c5ee2d30490b51/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Ffp-signedint-convert-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f8df14d379566091aed5fe278c5ee2d30490b51/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Ffp-signedint-convert-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Ffp-signedint-convert-1.c?ref=2f8df14d379566091aed5fe278c5ee2d30490b51", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-compile } */\n+/* { dg-options \"-O3 -march=z13 -mzarch\" } */\n+\n+typedef long long __attribute__((vector_size(16))) v2di;\n+typedef double __attribute__((vector_size(16))) v2df;\n+\n+v2di longvec;\n+v2df doublevec;\n+\n+v2di\n+tolong (v2df a)\n+{\n+  v2di out = (v2di){ (long long)a[0], (long long)a[1] };\n+  return out;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vcgdb\\t%v24,%v24,0,5\" 1 } } */\n+\n+v2df\n+todouble (v2di a)\n+{\n+  v2df out = (v2df){ (double)a[0], (double)a[1] };\n+  return out;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vcdgb\\t%v24,%v24,0,0\" 1 } } */"}, {"sha": "61409bcfc73aa91de9989704fdb148b014313e41", "filename": "gcc/testsuite/gcc.target/s390/vector/fp-unsignedint-convert-1.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f8df14d379566091aed5fe278c5ee2d30490b51/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Ffp-unsignedint-convert-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f8df14d379566091aed5fe278c5ee2d30490b51/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Ffp-unsignedint-convert-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Ffp-unsignedint-convert-1.c?ref=2f8df14d379566091aed5fe278c5ee2d30490b51", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-compile } */\n+/* { dg-options \"-O3 -march=z13 -mzarch\" } */\n+\n+typedef unsigned long long __attribute__((vector_size(16))) v2di;\n+typedef double __attribute__((vector_size(16))) v2df;\n+\n+v2di longvec;\n+v2df doublevec;\n+\n+v2di\n+toulong (v2df a)\n+{\n+  v2di out = (v2di){ (unsigned long long)a[0], (unsigned long long)a[1] };\n+  return out;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vclgdb\\t%v24,%v24,0,5\" 1 } } */\n+\n+v2df\n+todouble (v2di a)\n+{\n+  v2df out = (v2df){ (double)a[0], (double)a[1] };\n+  return out;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vcdlgb\\t%v24,%v24,0,0\" 1 } } */"}]}