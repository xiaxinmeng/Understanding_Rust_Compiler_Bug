{"sha": "0196fbb3c39f764d19b2f96c5828d47ef25da991", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE5NmZiYjNjMzlmNzY0ZDE5YjJmOTZjNTgyOGQ0N2VmMjVkYTk5MQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-07-08T22:38:18Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-07-08T22:38:18Z"}, "message": "fr30-protos.h (fr30_va_arg): Remove.\n\n        * config/fr30/fr30-protos.h (fr30_va_arg): Remove.\n        * config/fr30/fr30.c (TARGET_GIMPLIFY_VA_ARG_EXPR): New.\n        (fr30_gimplify_va_arg_expr): New.\n        (fr30_pass_by_reference, fr30_pass_by_value, fr30_va_arg): Remove.\n        * config/fr30/fr30.h (EXPAND_BUILTIN_VA_ARG): Remove.\n\nFrom-SVN: r84322", "tree": {"sha": "42761e0c704092139a0253655c7a3ee0a0ff76f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42761e0c704092139a0253655c7a3ee0a0ff76f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0196fbb3c39f764d19b2f96c5828d47ef25da991", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0196fbb3c39f764d19b2f96c5828d47ef25da991", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0196fbb3c39f764d19b2f96c5828d47ef25da991", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0196fbb3c39f764d19b2f96c5828d47ef25da991/comments", "author": null, "committer": null, "parents": [{"sha": "062fff1bad236d95d8ceabdf120207bcf4bbe01c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/062fff1bad236d95d8ceabdf120207bcf4bbe01c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/062fff1bad236d95d8ceabdf120207bcf4bbe01c"}], "stats": {"total": 89, "additions": 17, "deletions": 72}, "files": [{"sha": "0540720b3b933958e5d23c97b7c9cd5807208ade", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0196fbb3c39f764d19b2f96c5828d47ef25da991/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0196fbb3c39f764d19b2f96c5828d47ef25da991/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0196fbb3c39f764d19b2f96c5828d47ef25da991", "patch": "@@ -1,3 +1,11 @@\n+2004-07-08  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/fr30/fr30-protos.h (fr30_va_arg): Remove.\n+\t* config/fr30/fr30.c (TARGET_GIMPLIFY_VA_ARG_EXPR): New.\n+\t(fr30_gimplify_va_arg_expr): New.\n+\t(fr30_pass_by_reference, fr30_pass_by_value, fr30_va_arg): Remove.\n+\t* config/fr30/fr30.h (EXPAND_BUILTIN_VA_ARG): Remove.\n+\n 2004-07-08  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR target/16414"}, {"sha": "781c36bb9e0a256a59038f2a04bf5d232be7837c", "filename": "gcc/config/fr30/fr30-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0196fbb3c39f764d19b2f96c5828d47ef25da991/gcc%2Fconfig%2Ffr30%2Ffr30-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0196fbb3c39f764d19b2f96c5828d47ef25da991/gcc%2Fconfig%2Ffr30%2Ffr30-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30-protos.h?ref=0196fbb3c39f764d19b2f96c5828d47ef25da991", "patch": "@@ -28,7 +28,6 @@ extern void  fr30_print_operand (FILE *, rtx, int);\n extern void  fr30_print_operand_address (FILE *, rtx);\n extern rtx   fr30_move_double (rtx *);\n #ifdef TREE_CODE\n-extern rtx   fr30_va_arg (tree, tree);\n extern int   fr30_num_arg_regs (enum machine_mode, tree);\n extern int   fr30_function_arg_partial_nregs (CUMULATIVE_ARGS,\n \t\t\t\t\t      enum machine_mode, tree, int);"}, {"sha": "d0213d276513e07014933750d6599ad6790652ce", "filename": "gcc/config/fr30/fr30.c", "status": "modified", "additions": 9, "deletions": 67, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0196fbb3c39f764d19b2f96c5828d47ef25da991/gcc%2Fconfig%2Ffr30%2Ffr30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0196fbb3c39f764d19b2f96c5828d47ef25da991/gcc%2Fconfig%2Ffr30%2Ffr30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.c?ref=0196fbb3c39f764d19b2f96c5828d47ef25da991", "patch": "@@ -123,8 +123,7 @@ static struct fr30_frame_info \tzero_frame_info;\n \n static void fr30_setup_incoming_varargs (CUMULATIVE_ARGS *, enum machine_mode,\n \t\t\t\t\t tree, int *, int);\n-static rtx fr30_pass_by_reference (tree, tree);\n-static rtx fr30_pass_by_value (tree, tree);\n+static tree fr30_gimplify_va_arg_expr (tree, tree, tree *, tree *);\n \n #define FRAME_POINTER_MASK \t(1 << (FRAME_POINTER_REGNUM))\n #define RETURN_POINTER_MASK \t(1 << (RETURN_POINTER_REGNUM))\n@@ -156,6 +155,8 @@ static rtx fr30_pass_by_value (tree, tree);\n \n #undef  TARGET_SETUP_INCOMING_VARARGS\n #define TARGET_SETUP_INCOMING_VARARGS fr30_setup_incoming_varargs\n+#undef  TARGET_GIMPLIFY_VA_ARG_EXPR\n+#define TARGET_GIMPLIFY_VA_ARG_EXPR fr30_gimplify_va_arg_expr\n \n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n@@ -712,74 +713,15 @@ fr30_function_arg_partial_nregs (CUMULATIVE_ARGS cum, enum machine_mode mode,\n   return FR30_NUM_ARG_REGS - cum;\n }\n \n-static rtx\n-fr30_pass_by_reference (tree valist, tree type)\n-{\n-  tree type_ptr;\n-  tree type_ptr_ptr;\n-  tree t;\n-  \n-  type_ptr     = build_pointer_type (type);\n-  type_ptr_ptr = build_pointer_type (type_ptr);\n-  \n-  t = build (POSTINCREMENT_EXPR, va_list_type_node, valist, build_int_2 (UNITS_PER_WORD, 0));\n-  TREE_SIDE_EFFECTS (t) = 1;\n-  t = build1 (NOP_EXPR, type_ptr_ptr, t);\n-  TREE_SIDE_EFFECTS (t) = 1;\n-  t = build1 (INDIRECT_REF, type_ptr, t);\n-  \n-  return expand_expr (t, NULL_RTX, Pmode, EXPAND_NORMAL);\n-}\n-\n-static rtx\n-fr30_pass_by_value (tree valist, tree type)\n-{\n-  HOST_WIDE_INT size = int_size_in_bytes (type);\n-  HOST_WIDE_INT rsize;\n-  rtx addr_rtx;\n-  tree t;\n-\n-  if ((size % UNITS_PER_WORD) == 0)\n-    {\n-      t = build (POSTINCREMENT_EXPR, va_list_type_node, valist, build_int_2 (size, 0));\n-      TREE_SIDE_EFFECTS (t) = 1;\n-      \n-      return expand_expr (t, NULL_RTX, Pmode, EXPAND_NORMAL);\n-    }\n-\n-  rsize = (size + UNITS_PER_WORD - 1) & - UNITS_PER_WORD;\n-      \n-  /* Care for bigendian correction on the aligned address.  */\n-  t = build (PLUS_EXPR, ptr_type_node, valist, build_int_2 (rsize - size, 0));\n-  addr_rtx = expand_expr (t, NULL_RTX, Pmode, EXPAND_NORMAL);\n-  addr_rtx = copy_to_reg (addr_rtx);\n-      \n-  /* Increment AP.  */\n-  t = build (PLUS_EXPR, va_list_type_node, valist, build_int_2 (rsize, 0));\n-  t = build (MODIFY_EXPR, va_list_type_node, valist, t);\n-  TREE_SIDE_EFFECTS (t) = 1;\n-  expand_expr (t, const0_rtx, VOIDmode, EXPAND_NORMAL);\n-  \n-  return addr_rtx;\n-}\n-\n /* Implement `va_arg'.  */\n \n-rtx\n-fr30_va_arg (tree valist, tree type)\n+static tree\n+fr30_gimplify_va_arg_expr (tree valist, tree type, tree *pre_p, tree *post_p)\n {\n-  HOST_WIDE_INT size;\n-  \n-  if (AGGREGATE_TYPE_P (type))\n-    return fr30_pass_by_reference (valist, type);\n-  \n-  size = int_size_in_bytes (type);\n-\n-  if ((size % sizeof (int)) == 0\n-      || size < 4)\n-    return fr30_pass_by_value (valist, type);\n-\n-  return fr30_pass_by_reference (valist, type);\n+  if (FUNCTION_ARG_PASS_BY_REFERENCE (dummy, TYPE_MODE (type), type, dummy))\n+    return ind_gimplify_va_arg_expr (valist, type, pre_p, post_p);\n+  else\n+    return std_gimplify_va_arg_expr (valist, type, pre_p, post_p);\n }\n \n /*}}}*/"}, {"sha": "1260075e3bb75e07739948838a5a7a3924280947", "filename": "gcc/config/fr30/fr30.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0196fbb3c39f764d19b2f96c5828d47ef25da991/gcc%2Fconfig%2Ffr30%2Ffr30.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0196fbb3c39f764d19b2f96c5828d47ef25da991/gcc%2Fconfig%2Ffr30%2Ffr30.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.h?ref=0196fbb3c39f764d19b2f96c5828d47ef25da991", "patch": "@@ -648,10 +648,6 @@ enum reg_class\n    takes a fixed number of arguments.  */\n #define RETURN_POPS_ARGS(FUNDECL, FUNTYPE, STACK_SIZE) 0\n \n-/* Implement `va_arg'.  */\n-#define EXPAND_BUILTIN_VA_ARG(valist, type) \\\n-  fr30_va_arg (valist, type)\n-\n /*}}}*/ \f\n /*{{{  Function Arguments in Registers.  */ \n "}]}