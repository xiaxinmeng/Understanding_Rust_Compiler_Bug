{"sha": "48b2123f6336ba6c06846d7c8b60bd14eaeae7ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhiMjEyM2Y2MzM2YmE2YzA2ODQ2ZDdjOGI2MGJkMTRlYWVhZTdlYw==", "commit": {"author": {"name": "Mihailo Stojanovic", "email": "mistojanovic@wavecomp.com", "date": "2019-10-28T19:17:58Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2019-10-28T19:17:58Z"}, "message": "re PR target/82981 (unnecessary __multi3 call for mips64r6 linux kernel)\n\n\tPR target/82981\n        * config/mips/mips.md (<u>mulditi3): Generate patterns for high\n        doubleword and low doubleword result of multiplication on\n        MIPS64R6.\n\n        * gcc.target/mips/mips64r6-ti-mult.c: New test.\n\nFrom-SVN: r277537", "tree": {"sha": "c475946b9e5d38bc3cbd04ce95de88adae96ac1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c475946b9e5d38bc3cbd04ce95de88adae96ac1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48b2123f6336ba6c06846d7c8b60bd14eaeae7ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48b2123f6336ba6c06846d7c8b60bd14eaeae7ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48b2123f6336ba6c06846d7c8b60bd14eaeae7ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48b2123f6336ba6c06846d7c8b60bd14eaeae7ec/comments", "author": null, "committer": null, "parents": [{"sha": "420fb10c0974fcfa77d8a5146cc7d486ab423c1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/420fb10c0974fcfa77d8a5146cc7d486ab423c1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/420fb10c0974fcfa77d8a5146cc7d486ab423c1b"}], "stats": {"total": 39, "additions": 36, "deletions": 3}, "files": [{"sha": "691128e806c80a187340df66c6a6ec2be490612f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48b2123f6336ba6c06846d7c8b60bd14eaeae7ec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48b2123f6336ba6c06846d7c8b60bd14eaeae7ec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=48b2123f6336ba6c06846d7c8b60bd14eaeae7ec", "patch": "@@ -1,5 +1,10 @@\n 2019-10-28  Mihailo Stojanovic  <mistojanovic@wavecomp.com>\n \n+\tPR target/82981\n+\t* config/mips/mips.md (<u>mulditi3): Generate patterns for high\n+\tdoubleword and low doubleword result of multiplication on\n+\tMIPS64R6.\n+\n \t* config/mips/mips.c (DIRECT_BUILTIN_PURE): New macro. Add a\n \tpure qualifier to the built-in.\n \t(MSA_BUILTIN_PURE): New macro. Add a pure qualifier to the MSA"}, {"sha": "658f5e62b842af32d50077a34e8db34d87e6b61e", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48b2123f6336ba6c06846d7c8b60bd14eaeae7ec/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48b2123f6336ba6c06846d7c8b60bd14eaeae7ec/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=48b2123f6336ba6c06846d7c8b60bd14eaeae7ec", "patch": "@@ -2464,9 +2464,11 @@\n   [(set (match_operand:TI 0 \"register_operand\")\n \t(mult:TI (any_extend:TI (match_operand:DI 1 \"register_operand\"))\n \t\t (any_extend:TI (match_operand:DI 2 \"register_operand\"))))]\n-  \"ISA_HAS_DMULT && !(<CODE> == ZERO_EXTEND && TARGET_FIX_VR4120)\"\n+  \"ISA_HAS_R6DMUL\n+   || (ISA_HAS_DMULT\n+       && !(<CODE> == ZERO_EXTEND && TARGET_FIX_VR4120))\"\n {\n-  rtx hilo;\n+  rtx hilo, hi, lo;\n \n   if (TARGET_MIPS16)\n     {\n@@ -2476,9 +2478,16 @@\n     }\n   else if (TARGET_FIX_R4000)\n     emit_insn (gen_<u>mulditi3_r4000 (operands[0], operands[1], operands[2]));\n-  else\n+  else if (ISA_HAS_DMULT)\n     emit_insn (gen_<u>mulditi3_internal (operands[0], operands[1],\n \t\t\t\t\t operands[2]));\n+  else\n+    {\n+      hi = mips_subword (operands[0], 1);\n+      lo = mips_subword (operands[0], 0);\n+      emit_insn (gen_muldi3_mul3_nohilo (lo, operands[1], operands[2]));\n+      emit_insn (gen_<su>muldi3_highpart_r6 (hi, operands[1], operands[2]));\n+    }\n   DONE;\n })\n "}, {"sha": "76f147125793e9fca8ad8e1e4e4c7f2d498ad956", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48b2123f6336ba6c06846d7c8b60bd14eaeae7ec/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48b2123f6336ba6c06846d7c8b60bd14eaeae7ec/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=48b2123f6336ba6c06846d7c8b60bd14eaeae7ec", "patch": "@@ -1,5 +1,8 @@\n 2019-10-28  Mihailo Stojanovic  <mistojanovic@wavecomp.com>\n \n+\tPR target/82981\n+\t* gcc.target/mips/mips64r6-ti-mult.c: New test.\n+\n \t* gcc.target/mips/mips-builtins-pure.c: New test.\n \n \t* gcc.target/mips/msa-insert-split.c: New test."}, {"sha": "f969e76b9a8b9cb589ea036c0884f99a92cf9316", "filename": "gcc/testsuite/gcc.target/mips/mips64r6-ti-mult.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48b2123f6336ba6c06846d7c8b60bd14eaeae7ec/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips64r6-ti-mult.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48b2123f6336ba6c06846d7c8b60bd14eaeae7ec/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips64r6-ti-mult.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips64r6-ti-mult.c?ref=48b2123f6336ba6c06846d7c8b60bd14eaeae7ec", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mabi=64 -march=mips64r6\" } */\n+/* { dg-skip-if \"code quality test\" { *-*-* } { \"-O0\" } } */\n+\n+typedef unsigned __int128 u128;\n+typedef unsigned long long u64;\n+\n+u128\n+test (u64 a, u64 b)\n+{\n+  return (u128)a * (u128)b;\n+}\n+\n+/* { dg-final { scan-assembler-not \"__multi3\" } } */\n+/* { dg-final { scan-assembler \"dmul\" } } */\n+/* { dg-final { scan-assembler \"dmuhu\" } } */"}]}