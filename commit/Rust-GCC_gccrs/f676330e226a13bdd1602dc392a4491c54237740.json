{"sha": "f676330e226a13bdd1602dc392a4491c54237740", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY3NjMzMGUyMjZhMTNiZGQxNjAyZGMzOTJhNDQ5MWM1NDIzNzc0MA==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2018-01-09T11:04:50Z"}, "committer": {"name": "Tamar Christina", "email": "tnfchris@gcc.gnu.org", "date": "2018-01-09T11:04:50Z"}, "message": "re PR target/82641 (Unable to enable crc32 for a certain function with target attribute on ARM (aarch32))\n\n2018-01-09  Tamar Christina  <tamar.christina@arm.com>                                                                          \n\n        PR target/82641\n        * gcc.target/arm/pragma_fpu_attribute.c: Rewrite to use\n        no NEON and require softfp or hard float-abi.\n        * gcc.target/arm/pragma_fpu_attribute_2.c: Likewise.\n\nFrom-SVN: r256375", "tree": {"sha": "81bf68359487a9a9b18b3938ef246046365c043a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81bf68359487a9a9b18b3938ef246046365c043a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f676330e226a13bdd1602dc392a4491c54237740", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f676330e226a13bdd1602dc392a4491c54237740", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f676330e226a13bdd1602dc392a4491c54237740", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f676330e226a13bdd1602dc392a4491c54237740/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1f1229d542a6fe6b992145a6a5760bdb5a59b549", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f1229d542a6fe6b992145a6a5760bdb5a59b549", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f1229d542a6fe6b992145a6a5760bdb5a59b549"}], "stats": {"total": 47, "additions": 29, "deletions": 18}, "files": [{"sha": "56f78da274d10d410afcfa2aff8e710fbd892edb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f676330e226a13bdd1602dc392a4491c54237740/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f676330e226a13bdd1602dc392a4491c54237740/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f676330e226a13bdd1602dc392a4491c54237740", "patch": "@@ -1,3 +1,10 @@\n+2018-01-09  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR target/82641\n+\t* gcc.target/arm/pragma_fpu_attribute.c: Rewrite to use\n+\tno NEON and require softfp or hard float-abi.\n+\t* gcc.target/arm/pragma_fpu_attribute_2.c: Likewise.\n+\n 2018-01-09  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/83572"}, {"sha": "174be85f3f777e4f9a4a1c4a85f706021ce4dd7c", "filename": "gcc/testsuite/gcc.target/arm/pragma_fpu_attribute.c", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f676330e226a13bdd1602dc392a4491c54237740/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpragma_fpu_attribute.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f676330e226a13bdd1602dc392a4491c54237740/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpragma_fpu_attribute.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpragma_fpu_attribute.c?ref=f676330e226a13bdd1602dc392a4491c54237740", "patch": "@@ -1,24 +1,26 @@\n /* Test for target attribute assembly extension generations.  */\n /* { dg-do compile } */\n-/* { dg-require-effective-target arm_arch_v8a_ok } */\n-/* { dg-additional-options \"-std=gnu99 -mfpu=vfpv3-d16\" } */\n+/* { dg-require-effective-target arm_fp_ok } */\n+/* { dg-add-options arm_fp } */\n \n #include <stdint.h>\n-#include <arm_neon.h>\n \n-extern uint32_t bar();\n+extern uint32_t bar ();\n \n-__attribute__((target(\"fpu=crypto-neon-fp-armv8\"))) poly64x1_t vsricw(poly64x1_t crc, uint32_t val)\n+#pragma GCC target(\"fpu=vfpv3-d16\")\n+\n+extern float fmaf (float, float, float);\n+\n+float\n+__attribute__((target(\"fpu=vfpv4\"))) vfma32 (float x, float y, float z)\n {\n-    poly64x1_t res;\n-    asm(\"vsri %0, %1, %2\" : \"=r\"(res) : \"r\"(crc), \"r\"(val));\n-    return res;\n+  return fmaf (x, y, z);\n }\n \n uint32_t restored ()\n {\n   return bar();\n }\n \n-/* { dg-final { scan-assembler-times {\\.fpu\\s+crypto-neon-fp-armv8} 1 } } */\n+/* { dg-final { scan-assembler-times {\\.fpu\\s+vfpv4} 1 } } */\n /* { dg-final { scan-assembler-times {\\.fpu\\s+vfpv3-d16} 1 } } */"}, {"sha": "add40ddc6b8a8645023784e9a29ea547c613698d", "filename": "gcc/testsuite/gcc.target/arm/pragma_fpu_attribute_2.c", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f676330e226a13bdd1602dc392a4491c54237740/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpragma_fpu_attribute_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f676330e226a13bdd1602dc392a4491c54237740/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpragma_fpu_attribute_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpragma_fpu_attribute_2.c?ref=f676330e226a13bdd1602dc392a4491c54237740", "patch": "@@ -1,20 +1,22 @@\n /* Test for #pragma assembly extension generations.  */\n /* { dg-do compile } */\n-/* { dg-require-effective-target arm_arch_v8a_ok } */\n-/* { dg-additional-options \"-std=gnu99 -mfpu=vfpv3-d16\" } */\n+/* { dg-require-effective-target arm_fp_ok } */\n+/* { dg-add-options arm_fp } */\n \n #include <stdint.h>\n-#include <arm_neon.h>\n+\n+#pragma GCC target(\"fpu=vfpv3-d16\")\n \n extern uint32_t bar();\n \n #pragma GCC push_options\n-#pragma GCC target(\"fpu=crypto-neon-fp-armv8\")\n-poly64x1_t vsricw(poly64x1_t crc, uint32_t val)\n+#pragma GCC target(\"fpu=vfpv4\")\n+extern float fmaf (float, float, float);\n+\n+float\n+vfma32 (float x, float y, float z)\n {\n-    poly64x1_t res;\n-    asm(\"vsri %0, %1, %2\" : \"=r\"(res) : \"r\"(crc), \"r\"(val));\n-    return res;\n+  return fmaf (x, y, z);\n }\n #pragma GCC pop_options\n \n@@ -23,5 +25,5 @@ uint32_t restored ()\n   return bar();\n }\n \n-/* { dg-final { scan-assembler-times {\\.fpu\\s+crypto-neon-fp-armv8} 1 } } */\n+/* { dg-final { scan-assembler-times {\\.fpu\\s+vfpv4} 1 } } */\n /* { dg-final { scan-assembler-times {\\.fpu\\s+vfpv3-d16} 1 } } */"}]}