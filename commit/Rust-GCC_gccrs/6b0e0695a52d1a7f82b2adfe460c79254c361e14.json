{"sha": "6b0e0695a52d1a7f82b2adfe460c79254c361e14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmIwZTA2OTVhNTJkMWE3ZjgyYjJhZGZlNDYwYzc5MjU0YzM2MWUxNA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2014-12-19T12:40:50Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2014-12-19T12:40:50Z"}, "message": "re PR ipa/63569 (Wrong code with volatile and ICF)\n\nFix for PR ipa/63569.\n\n\tPR ipa/63569\n\t* gcc.dg/ipa/pr63569.c: New test.\n\tPR ipa/63569\n\t* ipa-icf-gimple.c (func_checker::compare_operand): Add missing\n\tcomparison for volatile flag.\n\nFrom-SVN: r218949", "tree": {"sha": "d45345d53057081d17513f486b39473450d4ffc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d45345d53057081d17513f486b39473450d4ffc4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b0e0695a52d1a7f82b2adfe460c79254c361e14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b0e0695a52d1a7f82b2adfe460c79254c361e14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b0e0695a52d1a7f82b2adfe460c79254c361e14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b0e0695a52d1a7f82b2adfe460c79254c361e14/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1f8d3e84eee6918f3be3e12be67b250840750aeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f8d3e84eee6918f3be3e12be67b250840750aeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f8d3e84eee6918f3be3e12be67b250840750aeb"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "19b33e719cc4f041616e248380151eefb5de2cf5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b0e0695a52d1a7f82b2adfe460c79254c361e14/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b0e0695a52d1a7f82b2adfe460c79254c361e14/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b0e0695a52d1a7f82b2adfe460c79254c361e14", "patch": "@@ -1,3 +1,9 @@\n+2014-12-19  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/63569\n+\t* ipa-icf-gimple.c (func_checker::compare_operand): Add missing\n+\tcomparison for volatile flag.\n+\n 2014-12-19  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* doc/invoke.texi (ARM options): Remove mention of Advanced RISC"}, {"sha": "fa2c3534d8dc214ea425cfffdef21b297baea386", "filename": "gcc/ipa-icf-gimple.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b0e0695a52d1a7f82b2adfe460c79254c361e14/gcc%2Fipa-icf-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b0e0695a52d1a7f82b2adfe460c79254c361e14/gcc%2Fipa-icf-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf-gimple.c?ref=6b0e0695a52d1a7f82b2adfe460c79254c361e14", "patch": "@@ -230,6 +230,9 @@ func_checker::compare_operand (tree t1, tree t2)\n   tree tt1 = TREE_TYPE (t1);\n   tree tt2 = TREE_TYPE (t2);\n \n+  if (TREE_THIS_VOLATILE (t1) != TREE_THIS_VOLATILE (t2))\n+    return return_false_with_msg (\"different operand volatility\");\n+\n   if (!func_checker::compatible_types_p (tt1, tt2))\n     return false;\n "}, {"sha": "5ba1eff2f2bc5ff802095d106d75ee94aa711d7b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b0e0695a52d1a7f82b2adfe460c79254c361e14/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b0e0695a52d1a7f82b2adfe460c79254c361e14/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6b0e0695a52d1a7f82b2adfe460c79254c361e14", "patch": "@@ -1,3 +1,8 @@\n+2014-12-19  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/63569\n+\t* gcc.dg/ipa/pr63569.c: New test.\n+\n 2014-12-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR preprocessor/63831"}, {"sha": "8bd5c1f90841e6ab051988a3226bfe8b1216cca8", "filename": "gcc/testsuite/gcc.dg/ipa/pr63569.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b0e0695a52d1a7f82b2adfe460c79254c361e14/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr63569.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b0e0695a52d1a7f82b2adfe460c79254c361e14/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr63569.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr63569.c?ref=6b0e0695a52d1a7f82b2adfe460c79254c361e14", "patch": "@@ -0,0 +1,32 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-details\"  } */\n+\n+static int f(int t, int *a) __attribute__((noinline));\n+\n+static int g(int t, volatile int *a) __attribute__((noinline));\n+static int g(int t, volatile int *a)\n+{\n+  int i;\n+  int tt = 0;\n+  for(i=0;i<t;i++)\n+    tt += *a;\n+  return tt;\n+}\n+static int f(int t, int *a)\n+{\n+  int i;\n+  int tt = 0;\n+  for(i=0;i<t;i++)\n+    tt += *a;\n+  return tt;\n+}\n+\n+\n+int h(int t, int *a)\n+{\n+  return f(t, a) + g(t, a);\n+}\n+\n+/* { dg-final { scan-ipa-dump \"different operand volatility\" \"icf\"  } } */\n+/* { dg-final { scan-ipa-dump \"Equal symbols: 0\" \"icf\"  } } */\n+/* { dg-final { cleanup-ipa-dump \"icf\" } } */"}]}