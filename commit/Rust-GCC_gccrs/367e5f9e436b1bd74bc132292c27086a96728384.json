{"sha": "367e5f9e436b1bd74bc132292c27086a96728384", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY3ZTVmOWU0MzZiMWJkNzRiYzEzMjI5MmMyNzA4NmE5NjcyODM4NA==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2019-06-24T19:13:01Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2019-06-24T19:13:01Z"}, "message": "[Darwin, testsuite] Fix isystem-2.c.\n\nFor the test to succeed there needs to be some header that is to be found in\nthe 'expected' place i.e. <sysroot>/usr/include/.  It's important that it is\nnot the name of a header for which fixincludes have been applied, since such\nheaders will be found in the gcc include-fixed dir and, in general, reference\nadditional headers.  The dummy sysroot will prevent the additional headers\nfrom being found, resulting in a failed test.  The fix is to use a header name\nthat isn't expected to be present in a real sysroot.\n\n2019-06-24  Iain Sandoe  <iain@sandoe.co.uk>\n\n\t* gcc.dg/cpp/isysroot-1.c (main): Use <example.h> as the test header.\n\t* gcc.dg/cpp/usr/include/stdio.h: Rename...\n\t* gcc.dg/cpp/usr/include/example.h: ... to this.\n\nFrom-SVN: r272625", "tree": {"sha": "786ba62ef15b9269230822c7e006b01dd8b1f5dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/786ba62ef15b9269230822c7e006b01dd8b1f5dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/367e5f9e436b1bd74bc132292c27086a96728384", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/367e5f9e436b1bd74bc132292c27086a96728384", "html_url": "https://github.com/Rust-GCC/gccrs/commit/367e5f9e436b1bd74bc132292c27086a96728384", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/367e5f9e436b1bd74bc132292c27086a96728384/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "609c7da9ab08b009fb7a9cacf68a40b3b39231b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/609c7da9ab08b009fb7a9cacf68a40b3b39231b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/609c7da9ab08b009fb7a9cacf68a40b3b39231b3"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "ec0566c10b580798fe08b8527748682ffe93560b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/367e5f9e436b1bd74bc132292c27086a96728384/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/367e5f9e436b1bd74bc132292c27086a96728384/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=367e5f9e436b1bd74bc132292c27086a96728384", "patch": "@@ -1,3 +1,9 @@\n+2019-06-24  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* gcc.dg/cpp/isysroot-1.c: Use <example.h> as the test header.\n+\t* gcc.dg/cpp/usr/include/stdio.h: Rename...\n+\t* gcc.dg/cpp/usr/include/example.h: ... to this.\n+\n 2019-06-24  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/90972"}, {"sha": "4c54f9e218ad0ea27b2768959bb3ff204d72ab09", "filename": "gcc/testsuite/gcc.dg/cpp/isysroot-1.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/367e5f9e436b1bd74bc132292c27086a96728384/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fisysroot-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/367e5f9e436b1bd74bc132292c27086a96728384/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fisysroot-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fisysroot-1.c?ref=367e5f9e436b1bd74bc132292c27086a96728384", "patch": "@@ -1,10 +1,17 @@\n /* { dg-options \"-isysroot ${srcdir}/gcc.dg/cpp\" } */\n /* { dg-do compile  { target *-*-darwin* } } */\n \n-#include <stdio.h>\n+/* For the test to succeed there needs to be some header that is to be found\n+   in the 'expected' place i.e. <sysroot>/usr/include/.  It's important that\n+   it is not the name of a header for which fixincludes have been applied,\n+   since such headers will be found in the gcc include-fixed dir and, in\n+   general, reference additional headers.  The dummy sysroot will prevent the\n+   additional headers from being found, resulting in a failed test.  So use\n+   a header name we don't expect to see. */\n+#include <example.h>\n int main()\n {\n-  /* Special stdio.h supplies function foo.  */\n+  /* Special example.h supplies function foo.  */\n   void (*x)(void) = foo;\n   return 0;\n }"}, {"sha": "c674e89f7ef7e65f0af68efd1af6ef0f6653a512", "filename": "gcc/testsuite/gcc.dg/cpp/usr/include/example.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/367e5f9e436b1bd74bc132292c27086a96728384/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fusr%2Finclude%2Fexample.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/367e5f9e436b1bd74bc132292c27086a96728384/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fusr%2Finclude%2Fexample.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fusr%2Finclude%2Fexample.h?ref=367e5f9e436b1bd74bc132292c27086a96728384", "previous_filename": "gcc/testsuite/gcc.dg/cpp/usr/include/stdio.h"}]}