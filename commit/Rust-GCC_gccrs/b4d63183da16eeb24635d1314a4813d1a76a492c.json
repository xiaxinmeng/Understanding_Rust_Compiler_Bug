{"sha": "b4d63183da16eeb24635d1314a4813d1a76a492c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRkNjMxODNkYTE2ZWViMjQ2MzVkMTMxNGE0ODEzZDFhNzZhNDkyYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-14T20:48:41Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-14T20:48:41Z"}, "message": "(stage[1-4]): Correctly link `as', `ld', and `collect2'.\n\nFrom-SVN: r9948", "tree": {"sha": "909b528760c6cdb31d87bf8aff1618eb7594d656", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/909b528760c6cdb31d87bf8aff1618eb7594d656"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4d63183da16eeb24635d1314a4813d1a76a492c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4d63183da16eeb24635d1314a4813d1a76a492c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4d63183da16eeb24635d1314a4813d1a76a492c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4d63183da16eeb24635d1314a4813d1a76a492c/comments", "author": null, "committer": null, "parents": [{"sha": "db2f8a07b4bb8870f2141eb14107ec4c72fa982d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db2f8a07b4bb8870f2141eb14107ec4c72fa982d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db2f8a07b4bb8870f2141eb14107ec4c72fa982d"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "ccc54846a958950dfc9f2b567c1fa690f7f04106", "filename": "gcc/Makefile.in", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4d63183da16eeb24635d1314a4813d1a76a492c/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4d63183da16eeb24635d1314a4813d1a76a492c/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=b4d63183da16eeb24635d1314a4813d1a76a492c", "patch": "@@ -2418,9 +2418,9 @@ stage1-start:\n \t-mv $(STAGESTUFF) stage1\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n-\t-if [ -f as$(exeext) ] ; then ln -s as$(exeext) stage1 || cp as$(exeext) stage1 ; else true ; fi\n-\t-if [ -f ld$(exeext) ] ; then ln -s ld$(exeext) stage1 || cp ld$(exeext) stage1 ; else true ; fi\n-\t-if [ -f collect-ld$(exeext) ] ; then ln -s collect-ld$(exeext) stage1 || cp collect-ld$(exeext) stage1 ; else true ; fi\n+\t-if [ -f as$(exeext) ] ; then ln -s ../as$(exeext) stage1 || cp as$(exeext) stage1 ; else true ; fi\n+\t-if [ -f ld$(exeext) ] ; then ln -s ../ld$(exeext) stage1 || cp ld$(exeext) stage1 ; else true ; fi\n+\t-if [ -f collect-ld$(exeext) ] ; then ln -s ../collect-ld$(exeext) stage1 || cp collect-ld$(exeext) stage1 ; else true ; fi\n \t-rm -f stage1/libgcc.a\n \t-cp libgcc.a stage1\n \t-if $(RANLIB_TEST) ; then $(RANLIB) stage1/libgcc.a; else true; fi\n@@ -2435,9 +2435,9 @@ stage2-start:\n \t-mv $(STAGESTUFF) stage2\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n-\t-if [ -f as$(exeext) ] ; then ln -s as$(exeext) stage2 || cp as$(exeext) stage2 ; else true ; fi\n-\t-if [ -f ld$(exeext) ] ; then ln -s ld$(exeext) stage2 || cp ld$(exeext) stage2 ; else true ; fi\n-\t-if [ -f collect-ld ] ; then ln -s collect-ld$(exeext) stage2 || cp collect-ld$(exeext) stage2 ; else true ; fi\n+\t-if [ -f as$(exeext) ] ; then ln -s ../as$(exeext) stage2 || cp as$(exeext) stage2 ; else true ; fi\n+\t-if [ -f ld$(exeext) ] ; then ln -s ../ld$(exeext) stage2 || cp ld$(exeext) stage2 ; else true ; fi\n+\t-if [ -f collect-ld ] ; then ln -s ../collect-ld$(exeext) stage2 || cp collect-ld$(exeext) stage2 ; else true ; fi\n \t-rm -f stage2/libgcc.a\n \t-cp libgcc.a stage2\n \t-if $(RANLIB_TEST) ; then $(RANLIB) stage2/libgcc.a; else true; fi\n@@ -2452,9 +2452,9 @@ stage3-start:\n \t-mv $(STAGESTUFF) stage3\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n-\t-if [ -f as$(exeext) ] ; then ln -s as$(exeext) stage3 || cp as$(exeext) stage3 ; else true ; fi\n-\t-if [ -f ld$(exeext) ] ; then ln -s ld$(exeext) stage3 || cp ld$(exeext) stage3 ; else true ; fi\n-\t-if [ -f collect-ld$(exeext) ] ; then ln -s collect-ld$(exeext) stage3 || cp collect-ld$(exeext) stage3 ; else true ; fi\n+\t-if [ -f as$(exeext) ] ; then ln -s ../as$(exeext) stage3 || cp as$(exeext) stage3 ; else true ; fi\n+\t-if [ -f ld$(exeext) ] ; then ln -s ../ld$(exeext) stage3 || cp ld$(exeext) stage3 ; else true ; fi\n+\t-if [ -f collect-ld$(exeext) ] ; then ln -s ../collect-ld$(exeext) stage3 || cp collect-ld$(exeext) stage3 ; else true ; fi\n \t-rm -f stage3/libgcc.a\n \t-cp libgcc.a stage3\n \t-if $(RANLIB_TEST) ; then $(RANLIB) stage3/libgcc.a; else true; fi\n@@ -2469,9 +2469,9 @@ stage4-start:\n \t-mv $(STAGESTUFF) stage4\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n-\t-if [ -f as$(exeext) ] ; then ln -s as$(exeext) stage4 || cp as$(exeext) stage4 ; else true ; fi\n-\t-if [ -f ld$(exeext) ] ; then ln -s ld$(exeext) stage4 || cp ld$(exeext) stage4 ; else true ; fi\n-\t-if [ -f collect-ld$(exeext) ] ; then ln -s collect-ld$(exeext) stage4 || cp collect-ld$(exeext) stage4 ; else true ; fi\n+\t-if [ -f as$(exeext) ] ; then ln -s ../as$(exeext) stage4 || cp as$(exeext) stage4 ; else true ; fi\n+\t-if [ -f ld$(exeext) ] ; then ln -s ../ld$(exeext) stage4 || cp ld$(exeext) stage4 ; else true ; fi\n+\t-if [ -f collect-ld$(exeext) ] ; then ln -s ../collect-ld$(exeext) stage4 || cp collect-ld$(exeext) stage4 ; else true ; fi\n \t-rm -f stage4/libgcc.a\n \t-cp libgcc.a stage4\n \t-if $(RANLIB_TEST) ; then $(RANLIB) stage4/libgcc.a; else true; fi"}]}