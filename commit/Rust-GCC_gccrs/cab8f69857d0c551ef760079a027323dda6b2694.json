{"sha": "cab8f69857d0c551ef760079a027323dda6b2694", "node_id": "C_kwDOANBUbNoAKGNhYjhmNjk4NTdkMGM1NTFlZjc2MDA3OWEwMjczMjNkZGE2YjI2OTQ", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-11-23T07:26:51Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-11-23T07:26:51Z"}, "message": "contrib: Support itemx in check-params-in-docs.py.\n\ncontrib/ChangeLog:\n\n\t* check-params-in-docs.py: Support @itemx in param documentation\n\tand support multi-line documentation for parameters.", "tree": {"sha": "c0970c4ff013dccaa8a5aaa9184fb876697b33c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0970c4ff013dccaa8a5aaa9184fb876697b33c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cab8f69857d0c551ef760079a027323dda6b2694", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cab8f69857d0c551ef760079a027323dda6b2694", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cab8f69857d0c551ef760079a027323dda6b2694", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cab8f69857d0c551ef760079a027323dda6b2694/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df1a0d526e2e4c75311345c0b73ce8483e243899", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df1a0d526e2e4c75311345c0b73ce8483e243899", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df1a0d526e2e4c75311345c0b73ce8483e243899"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "d57055088b70464b2892398feb1cc79e48598698", "filename": "contrib/check-params-in-docs.py", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cab8f69857d0c551ef760079a027323dda6b2694/contrib%2Fcheck-params-in-docs.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cab8f69857d0c551ef760079a027323dda6b2694/contrib%2Fcheck-params-in-docs.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcheck-params-in-docs.py?ref=cab8f69857d0c551ef760079a027323dda6b2694", "patch": "@@ -47,7 +47,7 @@ def get_param_tuple(line):\n params = {}\n \n for line in open(args.params_output).readlines():\n-    if line.startswith('  '):\n+    if line.startswith(' ' * 2) and not line.startswith(' ' * 8):\n         r = get_param_tuple(line)\n         params[r[0]] = r[1]\n \n@@ -57,15 +57,20 @@ def get_param_tuple(line):\n texi = takewhile(lambda x: '@node Instrumentation Options' not in x, texi)\n texi = list(texi)[1:]\n \n-token = '@item '\n-texi = [x[len(token):] for x in texi if x.startswith(token)]\n+texi_params = []\n+for line in texi:\n+    for token in ('@item ', '@itemx '):\n+        if line.startswith(token):\n+            texi_params.append(line[len(token):])\n+            break\n+\n # skip digits\n-texi = [x for x in texi if not x[0].isdigit()]\n+texi_params = [x for x in texi_params if not x[0].isdigit()]\n # skip aarch64 params\n-texi = [x for x in texi if not x.startswith('aarch64')]\n-sorted_texi = sorted(texi)\n+texi_params = [x for x in texi_params if not x.startswith('aarch64')]\n+sorted_params = sorted(texi_params)\n \n-texi_set = set(texi) - ignored\n+texi_set = set(texi_params) - ignored\n params_set = set(params.keys()) - ignored\n \n success = True\n@@ -84,7 +89,4 @@ def get_param_tuple(line):\n         print()\n     success = False\n \n-if texi != sorted_texi:\n-    print('WARNING: not sorted alphabetically!')\n-\n sys.exit(0 if success else 1)"}]}