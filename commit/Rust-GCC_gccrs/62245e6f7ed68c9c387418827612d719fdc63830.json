{"sha": "62245e6f7ed68c9c387418827612d719fdc63830", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIyNDVlNmY3ZWQ2OGM5YzM4NzQxODgyNzYxMmQ3MTlmZGM2MzgzMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-06-19T18:15:36Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-06-19T18:15:36Z"}, "message": "re PR c++/65880 (Member function issue with argument \"pointer to const array of member function pointers\")\n\n\tPR c++/65880\n\t* decl.c (build_ptrmemfunc_type): Check TYPE_GET_PTRMEMFUNC_TYPE after\n\tcv-qualifiers.\n\t* typeck.c (merge_types): build_ptrmemfunc_type before applying\n\tquals and attributes.\n\nFrom-SVN: r224678", "tree": {"sha": "ec1e23a2b80f9dcd9f9bacd8d99ad47ace2e5e56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec1e23a2b80f9dcd9f9bacd8d99ad47ace2e5e56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62245e6f7ed68c9c387418827612d719fdc63830", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62245e6f7ed68c9c387418827612d719fdc63830", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62245e6f7ed68c9c387418827612d719fdc63830", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62245e6f7ed68c9c387418827612d719fdc63830/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "30ac6e80ba51480a0066329338b3ea5dbf423c26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30ac6e80ba51480a0066329338b3ea5dbf423c26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30ac6e80ba51480a0066329338b3ea5dbf423c26"}], "stats": {"total": 99, "additions": 88, "deletions": 11}, "files": [{"sha": "7d42381a47408de82290044644ce48226e864c03", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62245e6f7ed68c9c387418827612d719fdc63830/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62245e6f7ed68c9c387418827612d719fdc63830/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=62245e6f7ed68c9c387418827612d719fdc63830", "patch": "@@ -1,5 +1,11 @@\n 2015-06-19  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/65880\n+\t* decl.c (build_ptrmemfunc_type): Check TYPE_GET_PTRMEMFUNC_TYPE after\n+\tcv-qualifiers.\n+\t* typeck.c (merge_types): build_ptrmemfunc_type before applying\n+\tquals and attributes.\n+\n \tPR c++/65973\n \t* constexpr.c (build_constexpr_constructor_member_initializers):\n \tHandle an empty STATEMENT_LIST."}, {"sha": "515c2d33e10d3afe6bb712347e8d128b4bfe2eaa", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62245e6f7ed68c9c387418827612d719fdc63830/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62245e6f7ed68c9c387418827612d719fdc63830/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=62245e6f7ed68c9c387418827612d719fdc63830", "patch": "@@ -8224,13 +8224,6 @@ build_ptrmemfunc_type (tree type)\n   if (type == error_mark_node)\n     return type;\n \n-  /* If a canonical type already exists for this type, use it.  We use\n-     this method instead of type_hash_canon, because it only does a\n-     simple equality check on the list of field members.  */\n-\n-  if ((t = TYPE_GET_PTRMEMFUNC_TYPE (type)))\n-    return t;\n-\n   /* Make sure that we always have the unqualified pointer-to-member\n      type first.  */\n   if (cp_cv_quals quals = cp_type_quals (type))\n@@ -8239,6 +8232,13 @@ build_ptrmemfunc_type (tree type)\n       return cp_build_qualified_type (unqual, quals);\n     }\n \n+  /* If a canonical type already exists for this type, use it.  We use\n+     this method instead of type_hash_canon, because it only does a\n+     simple equality check on the list of field members.  */\n+\n+  if ((t = TYPE_GET_PTRMEMFUNC_TYPE (type)))\n+    return t;\n+\n   t = make_node (RECORD_TYPE);\n \n   /* Let the front end know this is a pointer to member function.  */"}, {"sha": "22fbb6e23892295cf89f41bd1f4af96d299b3fe1", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62245e6f7ed68c9c387418827612d719fdc63830/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62245e6f7ed68c9c387418827612d719fdc63830/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=62245e6f7ed68c9c387418827612d719fdc63830", "patch": "@@ -786,15 +786,16 @@ merge_types (tree t1, tree t2)\n \tint quals = cp_type_quals (t1);\n \n \tif (code1 == POINTER_TYPE)\n-\t  t1 = build_pointer_type (target);\n+\t  {\n+\t    t1 = build_pointer_type (target);\n+\t    if (TREE_CODE (target) == METHOD_TYPE)\n+\t      t1 = build_ptrmemfunc_type (t1);\n+\t  }\n \telse\n \t  t1 = cp_build_reference_type (target, TYPE_REF_IS_RVALUE (t1));\n \tt1 = build_type_attribute_variant (t1, attributes);\n \tt1 = cp_build_qualified_type (t1, quals);\n \n-\tif (TREE_CODE (target) == METHOD_TYPE)\n-\t  t1 = build_ptrmemfunc_type (t1);\n-\n \treturn t1;\n       }\n "}, {"sha": "a71f554441b96eab9c2e1eb0b8f1c7732e19974f", "filename": "gcc/testsuite/g++.dg/overload/pmf3.C", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62245e6f7ed68c9c387418827612d719fdc63830/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fpmf3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62245e6f7ed68c9c387418827612d719fdc63830/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fpmf3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fpmf3.C?ref=62245e6f7ed68c9c387418827612d719fdc63830", "patch": "@@ -0,0 +1,70 @@\n+// PR c++/65880\n+\n+class Test\n+{\n+  public:\n+    Test();\n+    ~Test();\n+\n+    bool barl(void);\n+\n+  private:\n+    bool fool(bool (Test::* const *fms)(void));\n+    bool foo(void);\n+    bool bar(void);\n+};\n+\n+Test::Test()\n+{\n+}\n+\n+Test::~Test()\n+{\n+}\n+\n+bool Test::fool(bool (Test::* const *fms)(void))\n+{\n+    bool retval = false;\n+\n+    int i = 0;\n+    bool (Test::*f)(void) = fms[i++];\n+\n+    while (f) {\n+        retval = (this->*f)();\n+        if (retval) break;\n+        f = fms[i++];\n+    }\n+\n+    return retval;\n+}\n+\n+\n+bool Test::barl(void)\n+{\n+    static bool (Test::* const fms[])(void) = {\n+        &Test::foo,\n+        &Test::bar,\n+        0\n+    };\n+\n+\n+\n+    return fool(fms);\n+}\n+\n+\n+bool Test::foo(void)\n+{\n+    return false;\n+}\n+\n+bool Test::bar(void)\n+{\n+    return true;\n+}\n+\n+int main(int argc, const char *argv[])\n+{\n+    Test t;\n+    return t.barl();\n+}"}]}