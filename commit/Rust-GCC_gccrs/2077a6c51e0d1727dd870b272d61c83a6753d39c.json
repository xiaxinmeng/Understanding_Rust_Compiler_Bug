{"sha": "2077a6c51e0d1727dd870b272d61c83a6753d39c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA3N2E2YzUxZTBkMTcyN2RkODcwYjI3MmQ2MWM4M2E2NzUzZDM5Yw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2001-03-07T02:08:59Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-03-07T02:08:59Z"}, "message": "istream.tcc (basic_istream<_CharT, [...]): Don't use sentry.\n\n\n2001-03-06  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tlibstdc++/2181\n\t* include/bits/istream.tcc (basic_istream<_CharT, _Traits>::\n\toperator>>(__istream_type& (*__pf)(__istream_type&)): Don't use\n\tsentry.\n\t(basic_istream<_CharT, _Traits>:: operator>>(__ios_type&\n\t(*__pf)(__ios_type&)): Same.\n\t(basic_istream<_CharT, _Traits>:: operator>>(ios_base&\n\t(*__pf)(ios_base&))): Same.\n\t* testsuite/27_io/istream_extractor_other.cc: Add tests.\n\t* testsuite/27_io/istream_manip.cc (test01): Fix.\n\nFrom-SVN: r40281", "tree": {"sha": "5c3b34994cdbab2491f915a7b256d1346ed31d41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c3b34994cdbab2491f915a7b256d1346ed31d41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2077a6c51e0d1727dd870b272d61c83a6753d39c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2077a6c51e0d1727dd870b272d61c83a6753d39c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2077a6c51e0d1727dd870b272d61c83a6753d39c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2077a6c51e0d1727dd870b272d61c83a6753d39c/comments", "author": null, "committer": null, "parents": [{"sha": "cc937581390c3aebf39e5f36b61f6b6098b8a236", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc937581390c3aebf39e5f36b61f6b6098b8a236", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc937581390c3aebf39e5f36b61f6b6098b8a236"}], "stats": {"total": 94, "additions": 42, "deletions": 52}, "files": [{"sha": "2e6b71d3a05912dc290647f18f41bdbad8f0ca9f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2077a6c51e0d1727dd870b272d61c83a6753d39c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2077a6c51e0d1727dd870b272d61c83a6753d39c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2077a6c51e0d1727dd870b272d61c83a6753d39c", "patch": "@@ -1,3 +1,16 @@\n+2001-03-06  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tlibstdc++/2181\n+\t* include/bits/istream.tcc (basic_istream<_CharT, _Traits>::\n+\toperator>>(__istream_type& (*__pf)(__istream_type&)): Don't use\n+\tsentry.\n+\t(basic_istream<_CharT, _Traits>:: operator>>(__ios_type&\n+\t(*__pf)(__ios_type&)): Same.\n+\t(basic_istream<_CharT, _Traits>:: operator>>(ios_base&\n+\t(*__pf)(ios_base&))): Same.\n+\t* testsuite/27_io/istream_extractor_other.cc: Add tests.\n+\t* testsuite/27_io/istream_manip.cc (test01): Fix.\n+\t\n 2001-03-06  Nathan Myers  <ncm@cantrip.org> \n \t    Benjamin Kosnik  <bkoz@redhat.com>\n "}, {"sha": "faee226ce6cd21087f16448ab2c19f394e428b56", "filename": "libstdc++-v3/include/bits/istream.tcc", "status": "modified", "additions": 3, "deletions": 42, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2077a6c51e0d1727dd870b272d61c83a6753d39c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2077a6c51e0d1727dd870b272d61c83a6753d39c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc?ref=2077a6c51e0d1727dd870b272d61c83a6753d39c", "patch": "@@ -81,20 +81,7 @@ namespace std {\n     basic_istream<_CharT, _Traits>::\n     operator>>(__istream_type& (*__pf)(__istream_type&))\n     {\n-      sentry __cerb(*this, false);\n-      if (__cerb) \n-\t{\n-\t  try {\n-\t    __pf(*this);\n-\t  }\n-\t  catch(exception& __fail){\n-\t    // 27.6.1.2.1 Common requirements.\n-\t    // Turn this on without causing an ios::failure to be thrown.\n-\t    this->setstate(ios_base::badbit);\n-\t    if ((this->exceptions() & ios_base::badbit) != 0)\n-\t      __throw_exception_again;\n-\t  }\n-\t}\n+      __pf(*this);\n       return *this;\n     }\n \n@@ -103,20 +90,7 @@ namespace std {\n     basic_istream<_CharT, _Traits>::\n     operator>>(__ios_type& (*__pf)(__ios_type&))\n     {\n-      sentry __cerb(*this, false);\n-      if (__cerb) \n-\t{\n-\t  try {\n-\t    __pf(*this);\n-\t  }\n-\t  catch(exception& __fail){\n-\t    // 27.6.1.2.1 Common requirements.\n-\t    // Turn this on without causing an ios::failure to be thrown.\n-\t    this->setstate(ios_base::badbit);\n-\t    if ((this->exceptions() & ios_base::badbit) != 0)\n-\t      __throw_exception_again;\n-\t  }\n-\t}\n+      __pf(*this);\n       return *this;\n     }\n   \n@@ -125,20 +99,7 @@ namespace std {\n     basic_istream<_CharT, _Traits>::\n     operator>>(ios_base& (*__pf)(ios_base&))\n     {\n-      sentry __cerb(*this, false);\n-      if (__cerb) \n-\t{\n-\t  try {\n-\t    __pf(*this);\n-\t  }\n-\t  catch(exception& __fail){\n-\t    // 27.6.1.2.1 Common requirements.\n-\t    // Turn this on without causing an ios::failure to be thrown.\n-\t    this->setstate(ios_base::badbit);\n-\t    if ((this->exceptions() & ios_base::badbit) != 0)\n-\t      __throw_exception_again;\n-\t  }\n-\t}\n+      __pf(*this);\n       return *this;\n     }\n   "}, {"sha": "4925c297c12283e316b2ede01d1d76c0aca341eb", "filename": "libstdc++-v3/testsuite/27_io/istream_extractor_other.cc", "status": "modified", "additions": 25, "deletions": 9, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2077a6c51e0d1727dd870b272d61c83a6753d39c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_extractor_other.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2077a6c51e0d1727dd870b272d61c83a6753d39c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_extractor_other.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_extractor_other.cc?ref=2077a6c51e0d1727dd870b272d61c83a6753d39c", "patch": "@@ -1,6 +1,6 @@\n // 1999-07-28 bkoz\n \n-// Copyright (C) 1999 Free Software Foundation\n+// Copyright (C) 1999, 2001 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -55,14 +55,6 @@ bool test01() {\n   statefail = std::ios_base::failbit;\n   stateeof = std::ios_base::eofbit;\n \n-  // template<_CharT, _Traits>\n-  //  basic_istream& operator>>(basic_istream& (*pf) (basic_istream&))\n-\n-  // template<_CharT, _Traits>\n-  //  basic_istream& operator>>(basic_ios& (*pf) (basic_ios&))\n-\n-  // template<_CharT, _Traits>\n-  //  basic_istream& operator>>(ios_base& (*pf) (ios_base&))\n \n   // template<_CharT, _Traits>\n   //  basic_istream& operator>>(basic_streambuf*)\n@@ -184,10 +176,34 @@ bool test02() {\n   return test;\n }\n \n+void test03() \n+{\n+  using namespace std;  \n+  bool test = true;\n+\n+  // template<_CharT, _Traits>\n+  //  basic_istream& operator>>(ios_base& (*pf) (ios_base&))\n+  {\n+    int i = 0;\n+    std::istringstream iss(\" 43\");\n+    iss >> std::noskipws >> i;\n+    std::ios::iostate i3 = iss.rdstate();\n+    VERIFY ( !iss ); //should set failbit\n+  }\n+\n+  // template<_CharT, _Traits>\n+  //  basic_istream& operator>>(basic_ios& (*pf) (basic_ios&))\n+\n+  // template<_CharT, _Traits>\n+  //  basic_istream& operator>>(basic_istream& (*pf) (basic_istream&))\n+}\n+\n+\n int main()\n {\n   test01();\n   test02();\n+  test03();\n   return 0;\n }\n "}, {"sha": "68f83ab4b5ffa671f65a26be5236e1a7ceb316f2", "filename": "libstdc++-v3/testsuite/27_io/istream_manip.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2077a6c51e0d1727dd870b272d61c83a6753d39c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_manip.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2077a6c51e0d1727dd870b272d61c83a6753d39c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_manip.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_manip.cc?ref=2077a6c51e0d1727dd870b272d61c83a6753d39c", "patch": "@@ -70,7 +70,7 @@ bool test01(void)\n   VERIFY( !iss02.eof() );\n \n   iss01 >> std::ws;\n-  VERIFY( iss01.fail() );\n+  VERIFY( !iss01.fail() );\n   VERIFY( iss01.eof() );\n \n #ifdef DEBUG_ASSERT"}]}