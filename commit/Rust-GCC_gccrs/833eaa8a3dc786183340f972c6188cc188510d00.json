{"sha": "833eaa8a3dc786183340f972c6188cc188510d00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODMzZWFhOGEzZGM3ODYxODMzNDBmOTcyYzYxODhjYzE4ODUxMGQwMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T14:12:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T14:12:57Z"}, "message": "[multiple changes]\n\n2011-08-29  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch5.adb, sem_ch3.adb, a-cihama.adb, a-cihama.ads, exp_ch7.adb,\n\tsem_ch5.adb, a-ciorse.adb, a-ciorse.ads, sem_ch12.adb, a-cidlli.adb,\n\ta-cidlli.ads, sem_util.adb, sem_res.adb, gnat1drv.adb, a-except.adb,\n\ta-except.ads, a-except-2005.ads, sem_ch4.adb, exp_disp.adb,\n\texp_aggr.adb, sem_ch13.adb, par-ch3.adb: Minor reformatting.\n\n2011-08-29  Tristan Gingold  <gingold@adacore.com>\n\n\t* s-auxdec-vms-alpha.adb: Add comments, remove some HT before labels.\n\n2011-08-29  Vadim Godunko  <godunko@adacore.com>\n\n\t* s-parint.ads: Minor comment clarification.\n\n2011-08-29  Vincent Celier  <celier@adacore.com>\n\n\t* prj.adb (Initialize): Make sure that new reserved words after Ada 95\n\tmay be used as identifiers.\n\n2011-08-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* a-coinho.ads: Minor reformating.\n\nFrom-SVN: r178239", "tree": {"sha": "50403ce926b555fa6853abac5dcba4c4fdd8c286", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50403ce926b555fa6853abac5dcba4c4fdd8c286"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/833eaa8a3dc786183340f972c6188cc188510d00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/833eaa8a3dc786183340f972c6188cc188510d00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/833eaa8a3dc786183340f972c6188cc188510d00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/833eaa8a3dc786183340f972c6188cc188510d00/comments", "author": null, "committer": null, "parents": [{"sha": "3a613a3621f796e5e8e21a6237caf60eaebcada0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a613a3621f796e5e8e21a6237caf60eaebcada0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a613a3621f796e5e8e21a6237caf60eaebcada0"}], "stats": {"total": 622, "additions": 340, "deletions": 282}, "files": [{"sha": "f98d49f27ab439d4d7cbe64ba1e0efe60081e31c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -1,3 +1,28 @@\n+2011-08-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch5.adb, sem_ch3.adb, a-cihama.adb, a-cihama.ads, exp_ch7.adb,\n+\tsem_ch5.adb, a-ciorse.adb, a-ciorse.ads, sem_ch12.adb, a-cidlli.adb,\n+\ta-cidlli.ads, sem_util.adb, sem_res.adb, gnat1drv.adb, a-except.adb,\n+\ta-except.ads, a-except-2005.ads, sem_ch4.adb, exp_disp.adb,\n+\texp_aggr.adb, sem_ch13.adb, par-ch3.adb: Minor reformatting.\n+\n+2011-08-29  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* s-auxdec-vms-alpha.adb: Add comments, remove some HT before labels.\n+\n+2011-08-29  Vadim Godunko  <godunko@adacore.com>\n+\n+\t* s-parint.ads: Minor comment clarification.\n+\n+2011-08-29  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj.adb (Initialize): Make sure that new reserved words after Ada 95\n+\tmay be used as identifiers.\n+\n+2011-08-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* a-coinho.ads: Minor reformating.\n+\n 2011-08-29  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch5.adb (Expand_Iterator_Loop): Handle properly a loop over a"}, {"sha": "5ebd2a9d2b246b6887328e0345ef0a6485a815e4", "filename": "gcc/ada/a-cidlli.adb", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fa-cidlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fa-cidlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cidlli.adb?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -39,14 +39,19 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n      List_Iterator_Interfaces.Reversible_Iterator with record\n         Container : List_Access;\n         Node      : Node_Access;\n-   end record;\n+     end record;\n \n-   overriding function First    (Object : Iterator) return Cursor;\n-   overriding function Last     (Object : Iterator) return Cursor;\n-   overriding function Next     (Object : Iterator; Position : Cursor)\n-     return Cursor;\n-   overriding function Previous (Object : Iterator; Position : Cursor)\n-     return Cursor;\n+   overriding function First (Object : Iterator) return Cursor;\n+\n+   overriding function Last (Object : Iterator) return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n+   overriding function Previous\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n \n    -----------------------\n    -- Local Subprograms --\n@@ -838,16 +843,19 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n       B := B - 1;\n    end Iterate;\n \n-   function Iterate (Container : List)\n-     return List_Iterator_Interfaces.Reversible_Iterator'class\n+   function Iterate\n+     (Container : List)\n+      return List_Iterator_Interfaces.Reversible_Iterator'class\n    is\n       It : constant Iterator := (Container'Unchecked_Access, Container.First);\n    begin\n       return It;\n    end Iterate;\n \n-   function Iterate (Container : List; Start : Cursor)\n-     return List_Iterator_Interfaces.Reversible_Iterator'class\n+   function Iterate\n+     (Container : List;\n+      Start     : Cursor)\n+      return List_Iterator_Interfaces.Reversible_Iterator'class\n    is\n       It : constant Iterator := (Container'Unchecked_Access, Start.Node);\n    begin\n@@ -1008,7 +1016,6 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n    begin\n       if Position.Node = Position.Container.First then\n          return No_Element;\n-\n       else\n          return (Object.Container, Position.Node.Prev);\n       end if;"}, {"sha": "8a23fc75442573d7cae8e2eac774ecd0b2fe20bc", "filename": "gcc/ada/a-cidlli.ads", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fa-cidlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fa-cidlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cidlli.ads?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -32,7 +32,8 @@\n ------------------------------------------------------------------------------\n \n with Ada.Iterator_Interfaces;\n-with Ada.Streams; use Ada.Streams;\n+with Ada.Streams;             use Ada.Streams;\n+\n private with Ada.Finalization;\n \n generic\n@@ -45,8 +46,7 @@ package Ada.Containers.Indefinite_Doubly_Linked_Lists is\n    pragma Preelaborate;\n    pragma Remote_Types;\n \n-   type List is tagged private\n-   with\n+   type List is tagged private with\n       Constant_Indexing => Constant_Reference,\n       Variable_Indexing => Reference,\n       Default_Iterator  => Iterate,\n@@ -60,6 +60,7 @@ package Ada.Containers.Indefinite_Doubly_Linked_Lists is\n    Empty_List : constant List;\n \n    No_Element : constant Cursor;\n+\n    function Has_Element (Position : Cursor) return Boolean;\n \n    package List_Iterator_Interfaces is new\n@@ -189,10 +190,13 @@ package Ada.Containers.Indefinite_Doubly_Linked_Lists is\n      (Container : List;\n       Process   : not null access procedure (Position : Cursor));\n \n-   function Iterate (Container : List)\n+   function Iterate\n+     (Container : List)\n       return List_Iterator_Interfaces.Reversible_Iterator'class;\n \n-   function Iterate (Container : List; Start : Cursor)\n+   function Iterate\n+     (Container : List;\n+      Start     : Cursor)\n       return List_Iterator_Interfaces.Reversible_Iterator'class;\n \n    type Constant_Reference_Type\n@@ -230,12 +234,14 @@ package Ada.Containers.Indefinite_Doubly_Linked_Lists is\n    for Reference_Type'Read use Read;\n \n    function Constant_Reference\n-     (Container : List; Position : Cursor)    --  SHOULD BE ALIASED\n-   return Constant_Reference_Type;\n+     (Container : List;\n+      Position  : Cursor)    --  SHOULD BE ALIASED ???\n+      return Constant_Reference_Type;\n \n    function Reference\n-     (Container : List; Position : Cursor)    --  SHOULD BE ALIASED\n-   return Reference_Type;\n+     (Container : List;\n+      Position  : Cursor)    --  SHOULD BE ALIASED ???\n+      return Reference_Type;\n \n    generic\n       with function \"<\" (Left, Right : Element_Type) return Boolean is <>;"}, {"sha": "d4f2c1d92dce4fa1739118727ab9831521046860", "filename": "gcc/ada/a-cihama.adb", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fa-cihama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fa-cihama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihama.adb?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -45,13 +45,15 @@ package body Ada.Containers.Indefinite_Hashed_Maps is\n \n    type Iterator is new\n      Map_Iterator_Interfaces.Forward_Iterator with record\n-      Container : Map_Access;\n-      Node      : Node_Access;\n-   end record;\n+        Container : Map_Access;\n+        Node      : Node_Access;\n+     end record;\n \n    overriding function First (Object : Iterator) return Cursor;\n-   overriding function Next  (Object : Iterator; Position : Cursor)\n-     return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n \n    -----------------------\n    -- Local Subprograms --\n@@ -414,9 +416,9 @@ package body Ada.Containers.Indefinite_Hashed_Maps is\n    begin\n       if N = null then\n          return No_Element;\n+      else\n+         return Cursor'(Object.Container.all'Unchecked_Access, N);\n       end if;\n-\n-      return Cursor'(Object.Container.all'Unchecked_Access, N);\n    end First;\n \n    ----------\n@@ -426,6 +428,7 @@ package body Ada.Containers.Indefinite_Hashed_Maps is\n    procedure Free (X : in out Node_Access) is\n       procedure Deallocate is\n          new Ada.Unchecked_Deallocation (Node_Type, Node_Access);\n+\n    begin\n       if X = null then\n          return;\n@@ -743,7 +746,6 @@ package body Ada.Containers.Indefinite_Hashed_Maps is\n    begin\n       if Position.Node = null then\n          return No_Element;\n-\n       else\n          return (Object.Container, Next (Position).Node);\n       end if;\n@@ -874,15 +876,19 @@ package body Ada.Containers.Indefinite_Hashed_Maps is\n    -- Reference --\n    ---------------\n \n-   function Constant_Reference (Container : Map; Key : Key_Type)\n-   return Constant_Reference_Type is\n+   function Constant_Reference\n+     (Container : Map;\n+      Key       : Key_Type) return Constant_Reference_Type\n+   is\n    begin\n       return (Element =>\n         Container.Find (Key).Node.Element.all'Unrestricted_Access);\n    end Constant_Reference;\n \n-   function Reference (Container : Map; Key : Key_Type)\n-   return Reference_Type is\n+   function Reference\n+     (Container : Map;\n+      Key       : Key_Type) return Reference_Type\n+   is\n    begin\n       return (Element =>\n          Container.Find (Key).Node.Element.all'Unrestricted_Access);"}, {"sha": "1b16d8f4589239d4eb529d979630e475e9c114f2", "filename": "gcc/ada/a-cihama.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fa-cihama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fa-cihama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihama.ads?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -48,8 +48,7 @@ package Ada.Containers.Indefinite_Hashed_Maps is\n    pragma Preelaborate;\n    pragma Remote_Types;\n \n-   type Map is tagged private\n-   with\n+   type Map is tagged private with\n       Constant_Indexing => Constant_Reference,\n       Variable_Indexing => Reference,\n       Default_Iterator  => Iterate,\n@@ -60,7 +59,7 @@ package Ada.Containers.Indefinite_Hashed_Maps is\n    type Cursor is private;\n    pragma Preelaborable_Initialization (Cursor);\n \n-   Empty_Map  : constant Map;\n+   Empty_Map : constant Map;\n    --  Map objects declared without an initialization expression are\n    --  initialized to the value Empty_Map.\n \n@@ -286,8 +285,9 @@ package Ada.Containers.Indefinite_Hashed_Maps is\n    for Reference_Type'Read use Read;\n \n    function Constant_Reference\n-     (Container : Map; Key : Key_Type)    --  SHOULD BE ALIASED\n-   return Constant_Reference_Type;\n+     (Container : Map;\n+      Key       : Key_Type)    --  SHOULD BE ALIASED ???\n+      return Constant_Reference_Type;\n \n    function Reference (Container : Map; Key : Key_Type)\n    return Reference_Type;"}, {"sha": "673cd510a3c6f1158bfa6fa5907e776b1ec9c8e8", "filename": "gcc/ada/a-ciorse.adb", "status": "modified", "additions": 39, "deletions": 29, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fa-ciorse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fa-ciorse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciorse.adb?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -42,16 +42,21 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n \n    type Iterator is new\n      Ordered_Set_Iterator_Interfaces.Reversible_Iterator with record\n-      Container : access constant Set;\n-      Node      : Node_Access;\n-   end record;\n+        Container : access constant Set;\n+        Node      : Node_Access;\n+     end record;\n \n    overriding function First (Object : Iterator) return Cursor;\n-   overriding function Last  (Object : Iterator) return Cursor;\n-   overriding function Next  (Object : Iterator; Position : Cursor)\n-     return Cursor;\n-   overriding function Previous (Object : Iterator; Position : Cursor)\n-     return Cursor;\n+\n+   overriding function Last (Object : Iterator) return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n+   overriding function Previous\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n \n    -----------------------\n    -- Local Subprograms --\n@@ -582,7 +587,7 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n    function First (Object : Iterator) return Cursor is\n    begin\n       return Cursor'(\n-       Object.Container.all'Unrestricted_Access, Object.Container.Tree.First);\n+        Object.Container.all'Unrestricted_Access, Object.Container.Tree.First);\n    end First;\n \n    -------------------\n@@ -593,9 +598,9 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n    begin\n       if Container.Tree.First = null then\n          raise Constraint_Error with \"set is empty\";\n+      else\n+         return Container.Tree.First.Element.all;\n       end if;\n-\n-      return Container.Tree.First.Element.all;\n    end First_Element;\n \n    -----------\n@@ -605,13 +610,12 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n    function Floor (Container : Set; Item : Element_Type) return Cursor is\n       Node : constant Node_Access :=\n                Element_Keys.Floor (Container.Tree, Item);\n-\n    begin\n       if Node = null then\n          return No_Element;\n+      else\n+         return Cursor'(Container'Unrestricted_Access, Node);\n       end if;\n-\n-      return Cursor'(Container'Unrestricted_Access, Node);\n    end Floor;\n \n    ----------\n@@ -1209,17 +1213,20 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n       B := B - 1;\n    end Iterate;\n \n-   function Iterate (Container : Set)\n-     return Ordered_Set_Iterator_Interfaces.Reversible_Iterator'class\n+   function Iterate\n+     (Container : Set)\n+      return Ordered_Set_Iterator_Interfaces.Reversible_Iterator'class\n    is\n       It : constant Iterator :=\n              (Container'Unchecked_Access, Container.Tree.First);\n    begin\n       return It;\n    end Iterate;\n \n-   function Iterate (Container : Set; Start : Cursor)\n-     return Ordered_Set_Iterator_Interfaces.Reversible_Iterator'class\n+   function Iterate\n+     (Container : Set;\n+      Start     : Cursor)\n+      return Ordered_Set_Iterator_Interfaces.Reversible_Iterator'class\n    is\n       It : constant Iterator := (Container'Unchecked_Access, Start.Node);\n    begin\n@@ -1234,19 +1241,20 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n    begin\n       if Container.Tree.Last = null then\n          return No_Element;\n+      else\n+         return Cursor'(Container'Unrestricted_Access, Container.Tree.Last);\n       end if;\n-\n-      return Cursor'(Container'Unrestricted_Access, Container.Tree.Last);\n    end Last;\n \n    function Last (Object : Iterator) return Cursor is\n    begin\n       if Object.Container.Tree.Last = null then\n          return No_Element;\n+      else\n+         return Cursor'(\n+           Object.Container.all'Unrestricted_Access,\n+           Object.Container.Tree.Last);\n       end if;\n-\n-      return Cursor'(\n-        Object.Container.all'Unrestricted_Access, Object.Container.Tree.Last);\n    end Last;\n \n    ------------------\n@@ -1257,9 +1265,9 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n    begin\n       if Container.Tree.Last = null then\n          raise Constraint_Error with \"set is empty\";\n+      else\n+         return Container.Tree.Last.Element.all;\n       end if;\n-\n-      return Container.Tree.Last.Element.all;\n    end Last_Element;\n \n    ----------\n@@ -1327,8 +1335,9 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n       end;\n    end Next;\n \n-   function Next  (Object : Iterator; Position : Cursor)\n-   return Cursor\n+   function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor\n    is\n       pragma Unreferenced (Object);\n    begin\n@@ -1388,8 +1397,9 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n       end;\n    end Previous;\n \n-   function Previous (Object : Iterator; Position : Cursor)\n-   return Cursor\n+   function Previous\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor\n    is\n       pragma Unreferenced (Object);\n    begin"}, {"sha": "78b5d764b061191a4fda37fd5841ab02a42f8c5c", "filename": "gcc/ada/a-ciorse.ads", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fa-ciorse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fa-ciorse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciorse.ads?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -48,12 +48,11 @@ package Ada.Containers.Indefinite_Ordered_Sets is\n \n    function Equivalent_Elements (Left, Right : Element_Type) return Boolean;\n \n-   type Set is tagged private\n-   with\n-     Constant_Indexing => Constant_Reference,\n-     Variable_Indexing => Reference,\n-     Default_Iterator  => Iterate,\n-     Iterator_Element  => Element_Type;\n+   type Set is tagged private with\n+      Constant_Indexing => Constant_Reference,\n+      Variable_Indexing => Reference,\n+      Default_Iterator  => Iterate,\n+      Iterator_Element  => Element_Type;\n \n    pragma Preelaborable_Initialization (Set);\n \n@@ -63,15 +62,15 @@ package Ada.Containers.Indefinite_Ordered_Sets is\n    Empty_Set : constant Set;\n \n    No_Element : constant Cursor;\n+\n    function Has_Element (Position : Cursor) return Boolean;\n \n    package Ordered_Set_Iterator_Interfaces is new\n      Ada.Iterator_Interfaces (Cursor, Has_Element);\n \n    type Constant_Reference_Type\n-      (Element : not null access constant Element_Type) is\n-   private\n-   with\n+     (Element : not null access constant Element_Type) is\n+   private with\n       Implicit_Dereference => Element;\n \n    procedure Read\n@@ -87,8 +86,8 @@ package Ada.Containers.Indefinite_Ordered_Sets is\n    for Constant_Reference_Type'Write use Write;\n \n    function Constant_Reference\n-     (Container : Set; Position : Cursor)\n-   return Constant_Reference_Type;\n+     (Container : Set;\n+      Position  : Cursor) return Constant_Reference_Type;\n \n    type Reference_Type (Element : not null access Element_Type) is private\n    with\n@@ -241,10 +240,13 @@ package Ada.Containers.Indefinite_Ordered_Sets is\n      (Container : Set;\n       Process   : not null access procedure (Position : Cursor));\n \n-   function Iterate (Container : Set)\n+   function Iterate\n+     (Container : Set)\n       return Ordered_Set_Iterator_Interfaces.Reversible_Iterator'class;\n \n-   function Iterate (Container : Set; Start : Cursor)\n+   function Iterate\n+     (Container : Set;\n+      Start     : Cursor)\n       return Ordered_Set_Iterator_Interfaces.Reversible_Iterator'class;\n \n    generic"}, {"sha": "4646b6722b86dc7221e363927e65236a0355b972", "filename": "gcc/ada/a-coinho.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fa-coinho.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fa-coinho.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinho.ads?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -2,7 +2,7 @@\n --                                                                          --\n --                         GNAT LIBRARY COMPONENTS                          --\n --                                                                          --\n---       A D A . C O N T A I N E R S . B O U N D E D _ V E C T O R S        --\n+--    A D A . C O N T A I N E R S . I N D E F I N I T E _ H O L D E R S     --\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --"}, {"sha": "a7dbfd62430a64956765a9b445f8d6d6a82e4c66", "filename": "gcc/ada/a-except-2005.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fa-except-2005.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fa-except-2005.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except-2005.ads?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -251,7 +251,7 @@ private\n    --  is already deferred.\n \n    function Triggered_By_Abort return Boolean;\n-   --  Determine whether the current exception (if exists) is an instance of\n+   --  Determine whether the current exception (if it exists) is an instance of\n    --  Standard'Abort_Signal.\n \n    -----------------------"}, {"sha": "333dca54a28b84856a38cf5d708a706c7069607e", "filename": "gcc/ada/a-except.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fa-except.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fa-except.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except.adb?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -1276,7 +1276,6 @@ package body Ada.Exceptions is\n \n    function Triggered_By_Abort return Boolean is\n       Ex : constant Exception_Occurrence_Access := Get_Current_Excep.all;\n-\n    begin\n       return Ex /= null\n         and then Exception_Identity (Ex.all) = Standard'Abort_Signal'Identity;"}, {"sha": "d7c14bab4e3f3734d62db544f33b0be92ede6183", "filename": "gcc/ada/a-except.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fa-except.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fa-except.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except.ads?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -222,7 +222,7 @@ private\n    --  abort is already deferred.\n \n    function Triggered_By_Abort return Boolean;\n-   --  Determine whether the current exception (if exists) is an instance of\n+   --  Determine whether the current exception (if it exists) is an instance of\n    --  Standard'Abort_Signal.\n \n    -----------------------"}, {"sha": "037a8dcc6eadc0c89d17dd092fe2974567432564", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -5215,9 +5215,10 @@ package body Exp_Aggr is\n       -------------------------\n \n       function Top_Level_Aggregate (N : Node_Id) return Node_Id is\n-         Aggr : Node_Id := N;\n+         Aggr : Node_Id;\n \n       begin\n+         Aggr := N;\n          while Present (Parent (Aggr))\n            and then Nkind_In (Parent (Aggr), N_Component_Association,\n                                              N_Aggregate)"}, {"sha": "366140e958046c786c12cf7ed1fd1bdcab6e96bf", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 27, "deletions": 24, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -2858,7 +2858,7 @@ package body Exp_Ch5 is\n                       New_Reference_To (Iterator, Loc)))));\n \n          --  for Index in Array loop\n-         --\n+\n          --  This case utilizes the already given iterator name\n \n          else\n@@ -2869,7 +2869,7 @@ package body Exp_Ch5 is\n          --    for Iterator in [reverse] Container'Range loop\n          --       Element : Component_Type renames Container (Iterator);\n          --       --  for the \"of\" form\n-         --\n+\n          --       <original loop statements>\n          --    end loop;\n \n@@ -2952,10 +2952,12 @@ package body Exp_Ch5 is\n \n             if Of_Present (I_Spec) then\n                declare\n-                  Default_Iter  : constant Entity_Id :=\n-                    Entity (\n-                      Find_Aspect\n-                         (Etype (Container), Aspect_Default_Iterator));\n+                  Default_Iter : constant Entity_Id :=\n+                                   Entity\n+                                     (Find_Aspect\n+                                       (Etype (Container),\n+                                        Aspect_Default_Iterator));\n+\n                   Container_Arg : Node_Id;\n                   Ent           : Entity_Id;\n \n@@ -2975,7 +2977,7 @@ package body Exp_Ch5 is\n                      --  inherited from the scope of the parent.\n \n                      if Base_Type (Etype (Container)) =\n-                       Base_Type (Etype (First_Formal (Default_Iter)))\n+                        Base_Type (Etype (First_Formal (Default_Iter)))\n                      then\n                         Container_Arg := New_Copy_Tree (Container);\n \n@@ -2985,8 +2987,8 @@ package body Exp_Ch5 is\n                         Container_Arg :=\n                           Make_Type_Conversion (Loc,\n                             Subtype_Mark =>\n-                              New_Occurrence_Of (\n-                                Etype (First_Formal (Default_Iter)), Loc),\n+                              New_Occurrence_Of\n+                                (Etype (First_Formal (Default_Iter)), Loc),\n                             Expression => New_Copy_Tree (Container));\n                      end if;\n \n@@ -3015,11 +3017,11 @@ package body Exp_Ch5 is\n                   Decl :=\n                     Make_Object_Renaming_Declaration (Loc,\n                       Defining_Identifier => Id,\n-                         Subtype_Mark =>\n+                      Subtype_Mark        =>\n                         New_Reference_To (Element_Type, Loc),\n-                      Name =>\n+                      Name                =>\n                         Make_Indexed_Component (Loc,\n-                          Prefix => Make_Selected_Component (Loc,\n+                          Prefix      => Make_Selected_Component (Loc,\n                               Prefix        => New_Reference_To (Pack, Loc),\n                               Selector_Name =>\n                                 Make_Identifier (Loc, Chars => Name_Element)),\n@@ -3042,7 +3044,7 @@ package body Exp_Ch5 is\n \n                      Stats := New_List (\n                        Make_Block_Statement (Loc,\n-                         Declarations => New_List (Decl),\n+                         Declarations               => New_List (Decl),\n                          Handled_Statement_Sequence =>\n                            Make_Handled_Sequence_Of_Statements (Loc,\n                               Statements => Stats)));\n@@ -3078,20 +3080,22 @@ package body Exp_Ch5 is\n \n             --  For both iterator forms, add a call to the step operation to\n             --  advance the cursor. Generate:\n-            --\n-            --    Cursor := Iterator.Next (Cursor);\n+\n+            --     Cursor := Iterator.Next (Cursor);\n+\n             --   or else\n-            --    Cursor := Next (Cursor);\n+\n+            --     Cursor := Next (Cursor);\n \n             declare\n                Rhs : Node_Id;\n \n             begin\n                Rhs :=\n                  Make_Function_Call (Loc,\n-                   Name =>\n+                   Name                   =>\n                      Make_Selected_Component (Loc,\n-                       Prefix => New_Reference_To (Iterator, Loc),\n+                       Prefix        => New_Reference_To (Iterator, Loc),\n                        Selector_Name => Make_Identifier (Loc, Name_Step)),\n                    Parameter_Associations => New_List (\n                       New_Reference_To (Cursor, Loc)));\n@@ -3113,7 +3117,7 @@ package body Exp_Ch5 is\n                   Make_Iteration_Scheme (Loc,\n                     Condition =>\n                       Make_Function_Call (Loc,\n-                        Name =>\n+                        Name                   =>\n                           Make_Selected_Component (Loc,\n                            Prefix => New_Occurrence_Of (Pack, Loc),\n                            Selector_Name =>\n@@ -3127,7 +3131,7 @@ package body Exp_Ch5 is\n \n             --  Create the declarations for Iterator and cursor and insert then\n             --  before the source loop. Generate:\n-            --\n+\n             --    I : Iterator_Type := Iterate (Container);\n             --    C : Pack.Cursor_Type := Container.[First | Last];\n \n@@ -3146,12 +3150,11 @@ package body Exp_Ch5 is\n                Decl2 :=\n                  Make_Object_Declaration (Loc,\n                    Defining_Identifier => Cursor,\n-                   Object_Definition =>\n+                   Object_Definition   =>\n                      New_Occurrence_Of (Etype (Cursor), Loc),\n-\n-                   Expression =>\n+                   Expression          =>\n                      Make_Selected_Component (Loc,\n-                       Prefix => New_Reference_To (Iterator, Loc),\n+                       Prefix        => New_Reference_To (Iterator, Loc),\n                        Selector_Name =>\n                          Make_Identifier (Loc, Name_Init)));\n "}, {"sha": "24b3e16eb702a478f27feb1e8f2ecd08d588cec9", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -3062,7 +3062,7 @@ package body Exp_Ch7 is\n       if RTE_Available (RE_Raise_From_Controlled_Operation) then\n          Stmt :=\n            Make_Procedure_Call_Statement (Loc,\n-              Name =>\n+              Name                   =>\n                 New_Reference_To\n                   (RTE (RE_Raise_From_Controlled_Operation), Loc),\n               Parameter_Associations =>\n@@ -3087,7 +3087,7 @@ package body Exp_Ch7 is\n \n       return\n         Make_If_Statement (Loc,\n-          Condition =>\n+          Condition       =>\n             Make_And_Then (Loc,\n               Left_Opnd  => New_Reference_To (Raised_Id, Loc),\n               Right_Opnd =>"}, {"sha": "b77bb0b89ac8e52546bb6d25f77890b40febde6f", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 24, "deletions": 32, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -2117,14 +2117,12 @@ package body Exp_Disp is\n       if Is_Interface (Typ) then\n          return\n            Make_Subprogram_Body (Loc,\n-             Specification =>\n-               Make_Disp_Asynchronous_Select_Spec (Typ),\n-             Declarations =>\n-               New_List,\n+             Specification => Make_Disp_Asynchronous_Select_Spec (Typ),\n+             Declarations  => New_List,\n              Handled_Statement_Sequence =>\n                Make_Handled_Sequence_Of_Statements (Loc,\n                  New_List (Make_Assignment_Statement (Loc,\n-                   Name => Make_Identifier (Loc, Name_uF),\n+                   Name       => Make_Identifier (Loc, Name_uF),\n                    Expression => New_Reference_To (Standard_False, Loc)))));\n       end if;\n \n@@ -2270,7 +2268,7 @@ package body Exp_Disp is\n \n             Append_To (Stmts,\n               Make_Assignment_Statement (Loc,\n-                Name => Make_Identifier (Loc, Name_uF),\n+                Name       => Make_Identifier (Loc, Name_uF),\n                 Expression => New_Reference_To (Standard_False, Loc)));\n \n          else\n@@ -2313,16 +2311,15 @@ package body Exp_Disp is\n \n          Append_To (Stmts,\n            Make_Assignment_Statement (Loc,\n-             Name => Make_Identifier (Loc, Name_uF),\n+             Name       => Make_Identifier (Loc, Name_uF),\n              Expression => New_Reference_To (Standard_False, Loc)));\n       end if;\n \n       return\n         Make_Subprogram_Body (Loc,\n-          Specification =>\n+          Specification              =>\n             Make_Disp_Asynchronous_Select_Spec (Typ),\n-          Declarations =>\n-            Decls,\n+          Declarations               => Decls,\n           Handled_Statement_Sequence =>\n             Make_Handled_Sequence_Of_Statements (Loc, Stmts));\n    end Make_Disp_Asynchronous_Select_Body;\n@@ -2490,7 +2487,7 @@ package body Exp_Disp is\n              Handled_Statement_Sequence =>\n                Make_Handled_Sequence_Of_Statements (Loc,\n                  New_List (Make_Assignment_Statement (Loc,\n-                   Name => Make_Identifier (Loc, Name_uF),\n+                   Name       => Make_Identifier (Loc, Name_uF),\n                    Expression => New_Reference_To (Standard_False, Loc)))));\n       end if;\n \n@@ -2696,20 +2693,19 @@ package body Exp_Disp is\n \n          Append_To (Stmts,\n            Make_Assignment_Statement (Loc,\n-             Name => Make_Identifier (Loc, Name_uF),\n+             Name       => Make_Identifier (Loc, Name_uF),\n              Expression => New_Reference_To (Standard_False, Loc)));\n          Append_To (Stmts,\n            Make_Assignment_Statement (Loc,\n-             Name => Make_Identifier (Loc, Name_uC),\n+             Name       => Make_Identifier (Loc, Name_uC),\n              Expression => New_Reference_To (RTE (RE_POK_Function), Loc)));\n       end if;\n \n       return\n         Make_Subprogram_Body (Loc,\n-          Specification =>\n+          Specification              =>\n             Make_Disp_Conditional_Select_Spec (Typ),\n-          Declarations =>\n-            Decls,\n+          Declarations               => Decls,\n           Handled_Statement_Sequence =>\n             Make_Handled_Sequence_Of_Statements (Loc, Stmts));\n    end Make_Disp_Conditional_Select_Body;\n@@ -3346,9 +3342,10 @@ package body Exp_Disp is\n                New_List,\n              Handled_Statement_Sequence =>\n                Make_Handled_Sequence_Of_Statements (Loc,\n-                 New_List (Make_Assignment_Statement (Loc,\n-                   Name => Make_Identifier (Loc, Name_uF),\n-                   Expression => New_Reference_To (Standard_False, Loc)))));\n+                 New_List (\n+                   Make_Assignment_Statement (Loc,\n+                     Name       => Make_Identifier (Loc, Name_uF),\n+                     Expression => New_Reference_To (Standard_False, Loc)))));\n       end if;\n \n       if Is_Concurrent_Record_Type (Typ) then\n@@ -3362,10 +3359,8 @@ package body Exp_Disp is\n \n          Append_To (Decls,\n            Make_Object_Declaration (Loc,\n-             Defining_Identifier =>\n-               Make_Defining_Identifier (Loc, Name_uI),\n-             Object_Definition =>\n-               New_Reference_To (Standard_Integer, Loc)));\n+             Defining_Identifier => Make_Defining_Identifier (Loc, Name_uI),\n+             Object_Definition   => New_Reference_To (Standard_Integer, Loc)));\n \n          --  Generate:\n          --    C := Get_Prim_Op_Kind (tag! (<type>VP), S);\n@@ -3394,7 +3389,7 @@ package body Exp_Disp is\n          else\n             Tag_Node :=\n               Make_Attribute_Reference (Loc,\n-                Prefix => New_Reference_To (Typ, Loc),\n+                Prefix         => New_Reference_To (Typ, Loc),\n                 Attribute_Name => Name_Tag);\n          end if;\n \n@@ -3403,8 +3398,7 @@ package body Exp_Disp is\n              Name       => Make_Identifier (Loc, Name_uI),\n              Expression =>\n                Make_Function_Call (Loc,\n-                 Name =>\n-                   New_Reference_To (RTE (RE_Get_Entry_Index), Loc),\n+                 Name => New_Reference_To (RTE (RE_Get_Entry_Index), Loc),\n                  Parameter_Associations =>\n                    New_List (\n                      Tag_Node,\n@@ -3531,20 +3525,18 @@ package body Exp_Disp is\n \n          Append_To (Stmts,\n            Make_Assignment_Statement (Loc,\n-             Name => Make_Identifier (Loc, Name_uF),\n+             Name       => Make_Identifier (Loc, Name_uF),\n              Expression => New_Reference_To (Standard_False, Loc)));\n          Append_To (Stmts,\n            Make_Assignment_Statement (Loc,\n-             Name => Make_Identifier (Loc, Name_uC),\n+             Name       => Make_Identifier (Loc, Name_uC),\n              Expression => New_Reference_To (RTE (RE_POK_Function), Loc)));\n       end if;\n \n       return\n         Make_Subprogram_Body (Loc,\n-          Specification =>\n-            Make_Disp_Timed_Select_Spec (Typ),\n-          Declarations =>\n-            Decls,\n+          Specification              => Make_Disp_Timed_Select_Spec (Typ),\n+          Declarations               => Decls,\n           Handled_Statement_Sequence =>\n             Make_Handled_Sequence_Of_Statements (Loc, Stmts));\n    end Make_Disp_Timed_Select_Body;"}, {"sha": "cf85e4ee909bbf01d47fffebbaa898c3a9ae9037", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -479,7 +479,7 @@ procedure Gnat1drv is\n          --  We would prefer to suppress the expansion of tagged types and\n          --  dispatching calls, so that one day GNATprove can handle them\n          --  directly. Unfortunately, this is causing problems on H513-015, so\n-         --  keep this expansion for the time being.\n+         --  keep this expansion for the time being. ???\n \n          Tagged_Type_Expansion := True;\n       end if;"}, {"sha": "897b8c96b4e2c783041f403db0a5a0c3928eca50", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -2672,7 +2672,8 @@ package body Ch3 is\n             Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n          end if;\n \n-         --  AI95-406 makes \"aliased\" legal (and useless) in this context.\n+         --  AI95-406 makes \"aliased\" legal (and useless) in this context so\n+         --  followintg code which used to be needed is commented out.\n \n          --  if Aliased_Present then\n          --     Error_Msg_SP (\"ALIASED not allowed here\");\n@@ -3449,7 +3450,8 @@ package body Ch3 is\n                   Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n                end if;\n \n-               --  AI95-406 makes \"aliased\" legal (and useless) here.\n+               --  AI95-406 makes \"aliased\" legal (and useless) here, so the\n+               --  following code which used to be required is commented out.\n \n                --  if Aliased_Present then\n                --     Error_Msg_SP (\"ALIASED not allowed here\");"}, {"sha": "796e601cadafdd105df699887b0659e1464ee94f", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -24,6 +24,7 @@\n ------------------------------------------------------------------------------\n \n with Debug;\n+with Opt;\n with Osint;    use Osint;\n with Output;   use Output;\n with Prj.Attr;\n@@ -698,6 +699,11 @@ package body Prj is\n \n          Prj.Attr.Initialize;\n \n+         --  Make sure that new reserved words after Ada 95 may be used as\n+         --  identifiers.\n+\n+         Opt.Ada_Version := Opt.Ada_95;\n+\n          Set_Name_Table_Byte (Name_Project,  Token_Type'Pos (Tok_Project));\n          Set_Name_Table_Byte (Name_Extends,  Token_Type'Pos (Tok_Extends));\n          Set_Name_Table_Byte (Name_External, Token_Type'Pos (Tok_External));"}, {"sha": "4116e32b3551c5dc85de73a6a45d792776a75d6d", "filename": "gcc/ada/s-auxdec-vms-alpha.adb", "status": "modified", "additions": 48, "deletions": 48, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fs-auxdec-vms-alpha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fs-auxdec-vms-alpha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-auxdec-vms-alpha.adb?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/Or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -218,26 +218,26 @@ package body System.Aux_DEC is\n    begin\n       System.Machine_Code.Asm\n         (\n-         \"lda $16, %3\"      & LF & HT &\n+         \"lda $16, %3\"      & LF & HT &  --  Address of Bit\n          \"mb\"               & LF & HT &\n-         \"sll $16, 3, $18 \" & LF & HT &\n-         \"bis $31, 1, %1\"   & LF & HT &\n-         \"and $18, 63, $19\" & LF & HT &\n-         \"bic $18, 63, $18\" & LF & HT &\n-         \"sra $18, 3, $18\"  & LF & HT &\n-         \"bis $31, %4, $17\" & LF & HT &\n-         \"sll %1, $19, $19\" & LF & HT &\n+         \"sll $16, 3, $18 \" & LF & HT &  --  Byte address to bit address\n+         \"bis $31, 1, %1\"   & LF & HT &  --  Set temp to 1 for the sll\n+         \"and $18, 63, $19\" & LF & HT &  --  Quadword bit offset\n+         \"bic $18, 63, $18\" & LF & HT &  --  Quadword bit address\n+         \"sra $18, 3, $18\"  & LF & HT &  --  Quadword address\n+         \"bis $31, %4, $17\" & LF & HT &  --  Retry_Count -> $17\n+         \"sll %1, $19, $19\" & LF &       --  $19 = 1 << bit_offset\n          \"1:\"               & LF & HT &\n-         \"ldq_l %2, 0($18)\" & LF & HT &\n-         \"and %2, $19, %1\"  & LF & HT &\n-         \"bis %2, $19, %2\"  & LF & HT &\n-         \"stq_c %2, 0($18)\" & LF & HT &\n-         \"beq %2, 2f\"       & LF & HT &\n-         \"cmovne %1, 1, %1\" & LF & HT &\n-         \"br 3f\"            & LF & HT &\n+         \"ldq_l %2, 0($18)\" & LF & HT &  --  Load & lock\n+         \"and %2, $19, %1\"  & LF & HT &  --  Previous value -> %1\n+         \"bis %2, $19, %2\"  & LF & HT &  --  Set Bit\n+         \"stq_c %2, 0($18)\" & LF & HT &  --  Store conditional\n+         \"beq %2, 2f\"       & LF & HT &  --  Goto 2: if failed\n+         \"cmovne %1, 1, %1\" & LF & HT &  --  Set Old_Bit\n+         \"br 3f\"            & LF &\n          \"2:\"               & LF & HT &\n-         \"subq $17, 1, $17\" & LF & HT &\n-         \"bgt $17, 1b\"      & LF & HT &\n+         \"subq $17, 1, $17\" & LF & HT &  --  Retry_Count - 1\n+         \"bgt $17, 1b\"      & LF &       --  Retry ?\n          \"3:\"               & LF & HT &\n          \"mb\"               & LF & HT &\n          \"trapb\",\n@@ -331,7 +331,7 @@ package body System.Aux_DEC is\n    begin\n       System.Machine_Code.Asm\n         (\n-         \"mb\"              & LF & HT &\n+         \"mb\"              & LF &\n          \"1:\"              & LF & HT &\n          \"ldl_l $1, %0\"    & LF & HT &\n          \"addl $1, %2, $0\" & LF & HT &\n@@ -358,21 +358,21 @@ package body System.Aux_DEC is\n       System.Machine_Code.Asm\n         (\n          \"mb\"               & LF & HT &\n-         \"bis $31, %5, $17\" & LF & HT &\n+         \"bis $31, %5, $17\" & LF &\n          \"1:\"               & LF & HT &\n          \"ldl_l $1, %0\"     & LF & HT &\n          \"addl $1, %4, $0\"  & LF & HT &\n          \"stl_c $0, %3\"     & LF & HT &\n-         \"beq $0, 2f\"       & LF & HT &\n+         \"beq $0, 2f\"       & LF &\n          \"3:\"               & LF & HT &\n          \"mb\"               & LF & HT &\n          \"stq $0, %2\"       & LF & HT &\n          \"stl $1, %1\"       & LF & HT &\n-         \"br 4f\"            & LF & HT &\n+         \"br 4f\"            & LF &\n          \"2:\"               & LF & HT &\n          \"subq $17, 1, $17\" & LF & HT &\n          \"bgt $17, 1b\"      & LF & HT &\n-         \"br 3b\"            & LF & HT &\n+         \"br 3b\"            & LF &\n          \"4:\",\n          Outputs  => (Aligned_Integer'Asm_Output (\"=m\", To),\n                       Integer'Asm_Output (\"=m\", Old_Value),\n@@ -393,7 +393,7 @@ package body System.Aux_DEC is\n    begin\n       System.Machine_Code.Asm\n         (\n-         \"mb\"              & LF & HT &\n+         \"mb\"              & LF &\n          \"1:\"              & LF & HT &\n          \"ldq_l $1, %0\"    & LF & HT &\n          \"addq $1, %2, $0\" & LF & HT &\n@@ -420,21 +420,21 @@ package body System.Aux_DEC is\n       System.Machine_Code.Asm\n         (\n          \"mb\"               & LF & HT &\n-         \"bis $31, %5, $17\" & LF & HT &\n+         \"bis $31, %5, $17\" & LF &\n          \"1:\"               & LF & HT &\n          \"ldq_l $1, %0\"     & LF & HT &\n          \"addq $1, %4, $0\"  & LF & HT &\n          \"stq_c $0, %3\"     & LF & HT &\n-         \"beq $0, 2f\"       & LF & HT &\n+         \"beq $0, 2f\"       & LF &\n          \"3:\"               & LF & HT &\n          \"mb\"               & LF & HT &\n          \"stq $0, %2\"       & LF & HT &\n          \"stq $1, %1\"       & LF & HT &\n-         \"br 4f\"            & LF & HT &\n+         \"br 4f\"            & LF &\n          \"2:\"               & LF & HT &\n          \"subq $17, 1, $17\" & LF & HT &\n          \"bgt $17, 1b\"      & LF & HT &\n-         \"br 3b\"            & LF & HT &\n+         \"br 3b\"            & LF &\n          \"4:\",\n          Outputs  => (Aligned_Long_Integer'Asm_Output (\"=m\", To),\n                       Long_Integer'Asm_Output (\"=m\", Old_Value),\n@@ -459,7 +459,7 @@ package body System.Aux_DEC is\n    begin\n       System.Machine_Code.Asm\n         (\n-         \"mb\"             & LF & HT &\n+         \"mb\"             & LF &\n          \"1:\"             & LF & HT &\n          \"ldl_l $1, %0\"   & LF & HT &\n          \"and $1, %2, $0\" & LF & HT &\n@@ -486,21 +486,21 @@ package body System.Aux_DEC is\n       System.Machine_Code.Asm\n         (\n          \"mb\"               & LF & HT &\n-         \"bis $31, %5, $17\" & LF & HT &\n+         \"bis $31, %5, $17\" & LF &\n          \"1:\"               & LF & HT &\n          \"ldl_l $1, %0\"     & LF & HT &\n          \"and $1, %4, $0\"   & LF & HT &\n          \"stl_c $0, %3\"     & LF & HT &\n-         \"beq $0, 2f\"       & LF & HT &\n+         \"beq $0, 2f\"       & LF &\n          \"3:\"               & LF & HT &\n          \"mb\"               & LF & HT &\n          \"stq $0, %2\"       & LF & HT &\n          \"stl $1, %1\"       & LF & HT &\n-         \"br 4f\"            & LF & HT &\n+         \"br 4f\"            & LF &\n          \"2:\"               & LF & HT &\n          \"subq $17, 1, $17\" & LF & HT &\n          \"bgt $17, 1b\"      & LF & HT &\n-         \"br 3b\"            & LF & HT &\n+         \"br 3b\"            & LF &\n          \"4:\",\n          Outputs  => (Aligned_Integer'Asm_Output (\"=m\", To),\n                       Integer'Asm_Output (\"=m\", Old_Value),\n@@ -521,7 +521,7 @@ package body System.Aux_DEC is\n    begin\n       System.Machine_Code.Asm\n         (\n-         \"mb\"             & LF & HT &\n+         \"mb\"             & LF &\n          \"1:\"             & LF & HT &\n          \"ldq_l $1, %0\"   & LF & HT &\n          \"and $1, %2, $0\" & LF & HT &\n@@ -548,21 +548,21 @@ package body System.Aux_DEC is\n       System.Machine_Code.Asm\n         (\n          \"mb\"               & LF & HT &\n-         \"bis $31, %5, $17\" & LF & HT &\n+         \"bis $31, %5, $17\" & LF &\n          \"1:\"               & LF & HT &\n          \"ldq_l $1, %0\"     & LF & HT &\n          \"and $1, %4, $0\"   & LF & HT &\n          \"stq_c $0, %3\"     & LF & HT &\n-         \"beq $0, 2f\"       & LF & HT &\n+         \"beq $0, 2f\"       & LF &\n          \"3:\"               & LF & HT &\n          \"mb\"               & LF & HT &\n          \"stq $0, %2\"       & LF & HT &\n          \"stq $1, %1\"       & LF & HT &\n-         \"br 4f\"            & LF & HT &\n+         \"br 4f\"            & LF &\n          \"2:\"               & LF & HT &\n          \"subq $17, 1, $17\" & LF & HT &\n          \"bgt $17, 1b\"      & LF & HT &\n-         \"br 3b\"            & LF & HT &\n+         \"br 3b\"            & LF &\n          \"4:\",\n          Outputs  => (Aligned_Long_Integer'Asm_Output (\"=m\", To),\n                       Long_Integer'Asm_Output (\"=m\", Old_Value),\n@@ -587,7 +587,7 @@ package body System.Aux_DEC is\n    begin\n       System.Machine_Code.Asm\n         (\n-         \"mb\"             & LF & HT &\n+         \"mb\"             & LF &\n          \"1:\"             & LF & HT &\n          \"ldl_l $1, %0\"   & LF & HT &\n          \"bis $1, %2, $0\" & LF & HT &\n@@ -614,21 +614,21 @@ package body System.Aux_DEC is\n       System.Machine_Code.Asm\n         (\n          \"mb\"               & LF & HT &\n-         \"bis $31, %5, $17\" & LF & HT &\n+         \"bis $31, %5, $17\" & LF &\n          \"1:\"               & LF & HT &\n          \"ldl_l $1, %0\"     & LF & HT &\n          \"bis $1, %4, $0\"   & LF & HT &\n          \"stl_c $0, %3\"     & LF & HT &\n-         \"beq $0, 2f\"       & LF & HT &\n+         \"beq $0, 2f\"       & LF &\n          \"3:\"               & LF & HT &\n          \"mb\"               & LF & HT &\n          \"stq $0, %2\"       & LF & HT &\n          \"stl $1, %1\"       & LF & HT &\n-         \"br 4f\"            & LF & HT &\n+         \"br 4f\"            & LF &\n          \"2:\"               & LF & HT &\n          \"subq $17, 1, $17\" & LF & HT &\n          \"bgt $17, 1b\"      & LF & HT &\n-         \"br 3b\"            & LF & HT &\n+         \"br 3b\"            & LF &\n          \"4:\",\n          Outputs  => (Aligned_Integer'Asm_Output (\"=m\", To),\n                       Integer'Asm_Output (\"=m\", Old_Value),\n@@ -649,7 +649,7 @@ package body System.Aux_DEC is\n    begin\n       System.Machine_Code.Asm\n         (\n-         \"mb\"             & LF & HT &\n+         \"mb\"             & LF &\n          \"1:\"             & LF & HT &\n          \"ldq_l $1, %0\"   & LF & HT &\n          \"bis $1, %2, $0\" & LF & HT &\n@@ -676,21 +676,21 @@ package body System.Aux_DEC is\n       System.Machine_Code.Asm\n         (\n          \"mb\"               & LF & HT &\n-         \"bis $31, %5, $17\" & LF & HT &\n+         \"bis $31, %5, $17\" & LF &\n          \"1:\"               & LF & HT &\n          \"ldq_l $1, %0\"     & LF & HT &\n          \"bis $1, %4, $0\"   & LF & HT &\n          \"stq_c $0, %3\"     & LF & HT &\n-         \"beq $0, 2f\"       & LF & HT &\n+         \"beq $0, 2f\"       & LF &\n          \"3:\"               & LF & HT &\n          \"mb\"               & LF & HT &\n          \"stq $0, %2\"       & LF & HT &\n          \"stq $1, %1\"       & LF & HT &\n-         \"br 4f\"            & LF & HT &\n+         \"br 4f\"            & LF &\n          \"2:\"               & LF & HT &\n          \"subq $17, 1, $17\" & LF & HT &\n          \"bgt $17, 1b\"      & LF & HT &\n-         \"br 3b\"            & LF & HT &\n+         \"br 3b\"            & LF &\n          \"4:\",\n          Outputs  => (Aligned_Long_Integer'Asm_Output (\"=m\", To),\n                       Long_Integer'Asm_Output (\"=m\", Old_Value),"}, {"sha": "457be066012b093acdccb16f978337d9852ae57c", "filename": "gcc/ada/s-parint.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fs-parint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fs-parint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parint.ads?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1995-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -47,8 +47,9 @@ package System.Partition_Interface is\n \n    PCS_Version : constant := 1;\n    --  Version of the PCS API (for Exp_Dist consistency check).\n-   --  This version number is matched against Gnatvsn.PCS_Version_Number to\n-   --  ensure that the versions of Exp_Dist and the PCS are consistent.\n+   --  This version number is matched against corresponding element of\n+   --  Exp_Dist.PCS_Version_Number to ensure that the versions of Exp_Dist and\n+   --  the PCS are consistent.\n \n    --  RCI receiving stubs contain a table of descriptors for\n    --  all user subprograms exported by the unit."}, {"sha": "fbc9aa906fe5ac6459fad081dcec78dedf484919", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -2574,7 +2574,7 @@ package body Sem_Ch12 is\n \n             if Subp /= Any_Id then\n \n-               --  Subprogram found, generate reference to it.\n+               --  Subprogram found, generate reference to it\n \n                Set_Entity (Def, Subp);\n                Generate_Reference (Subp, Def);"}, {"sha": "a926280b2a0f3911d46ec22aa7450c4ac3dc9568", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -5767,8 +5767,8 @@ package body Sem_Ch13 is\n             A_Id = Aspect_Default_Iterator  or else\n             A_Id = Aspect_Iterator_Element\n       then\n-         --  Make type unfrozen before analysis, to prevent spurious\n-         --  errors about late attributes.\n+         --  Make type unfrozen before analysis, to prevent spurious errors\n+         --  about late attributes.\n \n          Set_Is_Frozen (Ent, False);\n          Analyze (End_Decl_Expr);"}, {"sha": "91abe52248ad59a87c0111aa3643a8158dc2b238", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -15003,8 +15003,8 @@ package body Sem_Ch3 is\n             Set_Has_Private_Declaration (Prev);\n             Set_Has_Private_Declaration (Id);\n \n-            --  Preserve aspect and iterator flags, that may have been\n-            --  set on the partial view.\n+            --  Preserve aspect and iterator flags that may have been set on\n+            --  the partial view.\n \n             Set_Has_Delayed_Aspects (Prev, Has_Delayed_Aspects (Id));\n             Set_Has_Implicit_Dereference (Prev, Has_Implicit_Dereference (Id));"}, {"sha": "6b045989970a175b6dc6a66330b50709c7e2277d", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -3345,6 +3345,9 @@ package body Sem_Ch4 is\n       Iterator : Node_Id;\n \n    begin\n+      --  Analyze construct with expansion disabled, because it will be\n+      --  rewritten as a loop during expansion.\n+\n       Expander_Mode_Save_And_Set (False);\n       Check_SPARK_Restriction (\"quantified expression is not allowed\", N);\n \n@@ -3367,9 +3370,9 @@ package body Sem_Ch4 is\n       Set_Parent (Iterator, N);\n       Analyze_Iteration_Scheme (Iterator);\n \n-      --  The loop specification may have been converted into an\n-      --  iterator specification during its analysis. Update the\n-      --  quantified node accordingly.\n+      --  The loop specification may have been converted into an iterator\n+      --  specification during its analysis. Update the quantified node\n+      --  accordingly.\n \n       if Present (Iterator_Specification (Iterator)) then\n          Set_Iterator_Specification"}, {"sha": "7de014fefe9a07d85a557982a7b84eac1d205f69", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 24, "deletions": 28, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -2006,22 +2006,20 @@ package body Sem_Ch5 is\n                   Set_Parent (D_Copy, Parent (DS));\n                   Pre_Analyze_Range (D_Copy);\n \n-                  --  Ada2012 : if the domain of iteration is a function call,\n+                  --  Ada2012: If the domain of iteration is a function call,\n                   --  it is the new iterator form.\n \n                   --  We have also implemented the shorter form : for X in S\n-                  --  for Alfa use. In this case the attributes Old and Result\n-                  --  must be treated as entity names  over which iterators are\n-                  --  legal.\n+                  --  for Alfa use. In this case, 'Old and 'Result must be\n+                  --  treated as entity names over which iterators are legal.\n \n                   if Nkind (D_Copy) = N_Function_Call\n                     or else\n                       (ALFA_Mode\n-                       and then (Nkind (D_Copy) = N_Attribute_Reference\n-                       and then\n-                         (Attribute_Name (D_Copy) = Name_Result\n+                        and then (Nkind (D_Copy) = N_Attribute_Reference\n+                        and then\n+                          (Attribute_Name (D_Copy) = Name_Result\n                             or else Attribute_Name (D_Copy) = Name_Old)))\n-\n                     or else\n                       (Is_Entity_Name (D_Copy)\n                         and then not Is_Type (Entity (D_Copy)))\n@@ -2044,8 +2042,8 @@ package body Sem_Ch5 is\n                         Set_Loop_Parameter_Specification (N, Empty);\n                         Analyze_Iterator_Specification (I_Spec);\n \n-                        --  In a generic context, analyze the original\n-                        --  domain of iteration, for name capture.\n+                        --  In a generic context, analyze the original domain\n+                        --  of iteration, for name capture.\n \n                         if not Expander_Active then\n                            Analyze (DS);\n@@ -2267,22 +2265,21 @@ package body Sem_Ch5 is\n                 Object_Definition   => New_Occurrence_Of (Typ, Loc),\n                 Expression          => Relocate_Node (Iter_Name));\n \n-            Insert_Actions\n-              (Parent (Parent (N)), New_List (Decl));\n+            Insert_Actions (Parent (Parent (N)), New_List (Decl));\n             Rewrite (Name (N), New_Occurrence_Of (Id, Loc));\n             Set_Etype (Id, Typ);\n             Set_Etype (Name (N), Typ);\n          end;\n \n-      else\n-\n-         --  Container is an entity or an array with uncontrolled components,\n-         --  or else it is a container iterator given by a function call,\n-         --  typically called Iterate in the case of predefined containers,\n-         --  even though Iterate is not a reserved name. What matter is that\n-         --  the return type of the function is an iterator type.\n+      --  Container is an entity or an array with uncontrolled components, or\n+      --  else it is a container iterator given by a function call, typically\n+      --  called Iterate in the case of predefined containers, even though\n+      --  Iterate is not a reserved name. What matter is that the return type\n+      --  of the function is an iterator type.\n \n+      else\n          Analyze (Iter_Name);\n+\n          if Nkind (Iter_Name) = N_Function_Call then\n             declare\n                C  : constant Node_Id := Name (Iter_Name);\n@@ -2312,10 +2309,9 @@ package body Sem_Ch5 is\n                end if;\n             end;\n \n-         else\n-\n-            --  domain of iteration is not overloaded.\n+         --  Domain of iteration is not overloaded\n \n+         else\n             Resolve (Iter_Name, Etype (Iter_Name));\n          end if;\n       end if;\n@@ -2331,7 +2327,7 @@ package body Sem_Ch5 is\n             Set_Etype (Def_Id, Etype (First_Index (Typ)));\n          end if;\n \n-         --  Check for type error in iterator.\n+         --  Check for type error in iterator\n \n       elsif Typ = Any_Type then\n          return;\n@@ -2343,16 +2339,16 @@ package body Sem_Ch5 is\n \n          if Of_Present (N) then\n \n-            --  The type of the loop variable is the Iterator_Element\n-            --  aspect of the container type.\n+            --  The type of the loop variable is the Iterator_Element aspect of\n+            --  the container type.\n \n             Set_Etype (Def_Id,\n               Entity (Find_Aspect (Typ, Aspect_Iterator_Element)));\n \n          else\n-            --  The result type of Iterate function is the classwide type\n-            --  of the interface parent. We need the specific Cursor type\n-            --  defined in the container package.\n+            --  The result type of Iterate function is the classwide type of\n+            --  the interface parent. We need the specific Cursor type defined\n+            --  in the container package.\n \n             Ent := First_Entity (Scope (Typ));\n             while Present (Ent) loop"}, {"sha": "0b04142f9a9a953dc21fecd78b75991dc24c164a", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -4381,7 +4381,7 @@ package body Sem_Res is\n          end if;\n       end if;\n \n-      --  Report a simple error:  if the designated object is a local task,\n+      --  Report a simple error: if the designated object is a local task,\n       --  its body has not been seen yet, and its activation will fail an\n       --  elaboration check.\n "}, {"sha": "7589b659f8ca49e8ad6a4f29356d7d18411b606c", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 47, "deletions": 48, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833eaa8a3dc786183340f972c6188cc188510d00/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=833eaa8a3dc786183340f972c6188cc188510d00", "patch": "@@ -7178,16 +7178,15 @@ package body Sem_Util is\n       if Is_Class_Wide_Type (Typ)\n         and then\n           (Chars (Etype (Typ)) = Name_Forward_Iterator\n-            or else Chars (Etype (Typ)) = Name_Reversible_Iterator)\n+             or else\n+           Chars (Etype (Typ)) = Name_Reversible_Iterator)\n         and then\n           Is_Predefined_File_Name\n             (Unit_File_Name (Get_Source_Unit (Etype (Typ))))\n       then\n          return True;\n \n-      elsif not Is_Tagged_Type (Typ)\n-        or else not Is_Derived_Type (Typ)\n-      then\n+      elsif not Is_Tagged_Type (Typ) or else not Is_Derived_Type (Typ) then\n          return False;\n \n       else\n@@ -7211,50 +7210,6 @@ package body Sem_Util is\n       end if;\n    end Is_Iterator;\n \n-   ----------------------------\n-   -- Is_Reversible_Iterator --\n-   ----------------------------\n-\n-   function Is_Reversible_Iterator (Typ : Entity_Id) return Boolean is\n-      Ifaces_List : Elist_Id;\n-      Iface_Elmt  : Elmt_Id;\n-      Iface       : Entity_Id;\n-\n-   begin\n-      if Is_Class_Wide_Type (Typ)\n-        and then  Chars (Etype (Typ)) = Name_Reversible_Iterator\n-        and then\n-          Is_Predefined_File_Name\n-            (Unit_File_Name (Get_Source_Unit (Etype (Typ))))\n-      then\n-         return True;\n-\n-      elsif not Is_Tagged_Type (Typ)\n-        or else not Is_Derived_Type (Typ)\n-      then\n-         return False;\n-      else\n-\n-         Collect_Interfaces (Typ, Ifaces_List);\n-\n-         Iface_Elmt := First_Elmt (Ifaces_List);\n-         while Present (Iface_Elmt) loop\n-            Iface := Node (Iface_Elmt);\n-            if Chars (Iface) = Name_Reversible_Iterator\n-              and then\n-                Is_Predefined_File_Name\n-                  (Unit_File_Name (Get_Source_Unit (Iface)))\n-            then\n-               return True;\n-            end if;\n-\n-            Next_Elmt (Iface_Elmt);\n-         end loop;\n-\n-      end if;\n-      return False;\n-   end Is_Reversible_Iterator;\n-\n    ------------\n    -- Is_LHS --\n    ------------\n@@ -7898,6 +7853,50 @@ package body Sem_Util is\n       return False;\n    end Is_Renamed_Entry;\n \n+   ----------------------------\n+   -- Is_Reversible_Iterator --\n+   ----------------------------\n+\n+   function Is_Reversible_Iterator (Typ : Entity_Id) return Boolean is\n+      Ifaces_List : Elist_Id;\n+      Iface_Elmt  : Elmt_Id;\n+      Iface       : Entity_Id;\n+\n+   begin\n+      if Is_Class_Wide_Type (Typ)\n+        and then  Chars (Etype (Typ)) = Name_Reversible_Iterator\n+        and then\n+          Is_Predefined_File_Name\n+            (Unit_File_Name (Get_Source_Unit (Etype (Typ))))\n+      then\n+         return True;\n+\n+      elsif not Is_Tagged_Type (Typ)\n+        or else not Is_Derived_Type (Typ)\n+      then\n+         return False;\n+\n+      else\n+         Collect_Interfaces (Typ, Ifaces_List);\n+\n+         Iface_Elmt := First_Elmt (Ifaces_List);\n+         while Present (Iface_Elmt) loop\n+            Iface := Node (Iface_Elmt);\n+            if Chars (Iface) = Name_Reversible_Iterator\n+              and then\n+                Is_Predefined_File_Name\n+                  (Unit_File_Name (Get_Source_Unit (Iface)))\n+            then\n+               return True;\n+            end if;\n+\n+            Next_Elmt (Iface_Elmt);\n+         end loop;\n+      end if;\n+\n+      return False;\n+   end Is_Reversible_Iterator;\n+\n    ----------------------\n    -- Is_Selector_Name --\n    ----------------------"}]}