{"sha": "f4dae9fcc09f1324cfb0f6228e3a607a73e33a4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRkYWU5ZmNjMDlmMTMyNGNmYjBmNjIyOGUzYTYwN2E3M2UzM2E0ZQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2010-09-03T13:16:24Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2010-09-03T13:16:24Z"}, "message": "configure: Regenerate.\n\ngcc/\n\n2010-09-03  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\t    * configure: Regenerate.\n\t    * aclocal.m4: Regenerate.\n\nlibdecnumber/\n\n2010-09-03  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\t    * configure: Regenerate.\n\t    * aclocal.m4: Regenerate.\n\nlibgcc/\n\n2010-09-03  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\t    * configure: Regenerate.\n\nFrom-SVN: r163816", "tree": {"sha": "518bd25190a71069077b016a87138a6bdb6d1300", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/518bd25190a71069077b016a87138a6bdb6d1300"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4dae9fcc09f1324cfb0f6228e3a607a73e33a4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4dae9fcc09f1324cfb0f6228e3a607a73e33a4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4dae9fcc09f1324cfb0f6228e3a607a73e33a4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4dae9fcc09f1324cfb0f6228e3a607a73e33a4e/comments", "author": null, "committer": null, "parents": [{"sha": "3c39bca6bbb53817e46978f31ea3581ba56ba477", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c39bca6bbb53817e46978f31ea3581ba56ba477", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c39bca6bbb53817e46978f31ea3581ba56ba477"}], "stats": {"total": 99, "additions": 64, "deletions": 35}, "files": [{"sha": "73afd7fedee151d84e1c4d01bdb8c23197454dec", "filename": "gcc/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4dae9fcc09f1324cfb0f6228e3a607a73e33a4e/gcc%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4dae9fcc09f1324cfb0f6228e3a607a73e33a4e/gcc%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Faclocal.m4?ref=f4dae9fcc09f1324cfb0f6228e3a607a73e33a4e", "patch": "@@ -106,6 +106,7 @@ m4_include([../ltversion.m4])\n m4_include([../lt~obsolete.m4])\n m4_include([../config/acx.m4])\n m4_include([../config/codeset.m4])\n+m4_include([../config/dfp.m4])\n m4_include([../config/gettext-sister.m4])\n m4_include([../config/iconv.m4])\n m4_include([../config/lcmessage.m4])"}, {"sha": "da0c48bcb09473ffbe7af68376ed7b96c7b6266a", "filename": "gcc/configure", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4dae9fcc09f1324cfb0f6228e3a607a73e33a4e/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4dae9fcc09f1324cfb0f6228e3a607a73e33a4e/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=f4dae9fcc09f1324cfb0f6228e3a607a73e33a4e", "patch": "@@ -6649,6 +6649,7 @@ fi\n \n \n # Enable C extension for decimal float if target supports it.\n+\n # Check whether --enable-decimal-float was given.\n if test \"${enable_decimal_float+set}\" = set; then :\n   enableval=$enable_decimal_float;\n@@ -6661,7 +6662,7 @@ Valid choices are 'yes', 'bid', 'dpd', and 'no'.\" \"$LINENO\" 5 ;;\n else\n \n   case $target in\n-    powerpc*-*-linux* | i?86*-*-linux* | x86_64*-*-linux*)\n+    powerpc*-*-linux* | i?86*-*-linux* | x86_64*-*-linux* | s390*-*-linux*)\n       enable_decimal_float=yes\n       ;;\n     *)\n@@ -6674,18 +6675,11 @@ $as_echo \"$as_me: WARNING: decimal float is not supported for this target\" >&2;}\n fi\n \n \n-dfp=`if test $enable_decimal_float != no; then echo 1; else echo 0; fi`\n-\n-cat >>confdefs.h <<_ACEOF\n-#define ENABLE_DECIMAL_FLOAT $dfp\n-_ACEOF\n-\n-\n # x86's use BID format instead of DPD\n case x$enable_decimal_float in\n   xyes)\n     case $target in\n-      i?86*-*-linux* | x86_64*-*-linux*)\n+      i?86*-*-* | x86_64*-*-*)\n \tenable_decimal_float=bid\n \t;;\n       *)\n@@ -6701,6 +6695,15 @@ case x$enable_decimal_float in\n esac\n \n \n+\n+\n+dfp=`if test $enable_decimal_float != no; then echo 1; else echo 0; fi`\n+\n+cat >>confdefs.h <<_ACEOF\n+#define ENABLE_DECIMAL_FLOAT $dfp\n+_ACEOF\n+\n+\n bid=`if test $enable_decimal_float = bid; then echo 1; else echo 0; fi`\n \n cat >>confdefs.h <<_ACEOF\n@@ -17130,7 +17133,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17133 \"configure\"\n+#line 17136 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -17236,7 +17239,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17239 \"configure\"\n+#line 17242 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "fda021e817fb658bf3977bd7fdecc2c2376792f2", "filename": "libdecnumber/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4dae9fcc09f1324cfb0f6228e3a607a73e33a4e/libdecnumber%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4dae9fcc09f1324cfb0f6228e3a607a73e33a4e/libdecnumber%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2Faclocal.m4?ref=f4dae9fcc09f1324cfb0f6228e3a607a73e33a4e", "patch": "@@ -11,6 +11,7 @@\n # even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n # PARTICULAR PURPOSE.\n \n+m4_include([../config/dfp.m4])\n m4_include([../config/override.m4])\n m4_include([../config/stdint.m4])\n m4_include([../config/warnings.m4])"}, {"sha": "636839cf369d22b54ccefea4736008d6188b44f7", "filename": "libdecnumber/configure", "status": "modified", "additions": 25, "deletions": 13, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4dae9fcc09f1324cfb0f6228e3a607a73e33a4e/libdecnumber%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4dae9fcc09f1324cfb0f6228e3a607a73e33a4e/libdecnumber%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2Fconfigure?ref=f4dae9fcc09f1324cfb0f6228e3a607a73e33a4e", "patch": "@@ -4588,6 +4588,8 @@ test -n \"$target_alias\" &&\n # If you change the defaults here, be sure to change them in the GCC directory also\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for decimal floating point\" >&5\n $as_echo_n \"checking for decimal floating point... \" >&6; }\n+\n+\n # Check whether --enable-decimal-float was given.\n if test \"${enable_decimal_float+set}\" = set; then :\n   enableval=$enable_decimal_float;\n@@ -4600,10 +4602,12 @@ Valid choices are 'yes', 'bid', 'dpd', and 'no'.\" \"$LINENO\" 5 ;;\n else\n \n   case $target in\n-    powerpc*-*-linux* | i?86*-*-linux* | x86_64*-*-linux*)\n+    powerpc*-*-linux* | i?86*-*-linux* | x86_64*-*-linux* | s390*-*-linux*)\n       enable_decimal_float=yes\n       ;;\n     *)\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: decimal float is not supported for this target\" >&5\n+$as_echo \"$as_me: WARNING: decimal float is not supported for this target\" >&2;}\n       enable_decimal_float=no\n       ;;\n   esac\n@@ -4612,18 +4616,26 @@ fi\n \n \n # x86's use BID format instead of DPD\n-# In theory --enable-decimal-float=no should not compile anything\n-# For the sake of simplicity, just use the default format in this directory\n-if test x$enable_decimal_float = xyes -o x$enable_decimal_float = xno; then\n-  case $target in\n-    i?86*-*-linux* | x86_64*-*-linux*)\n-      enable_decimal_float=bid\n-      ;;\n-    *)\n-      enable_decimal_float=dpd\n-      ;;\n-  esac\n-fi\n+case x$enable_decimal_float in\n+  xyes)\n+    case $target in\n+      i?86*-*-* | x86_64*-*-*)\n+\tenable_decimal_float=bid\n+\t;;\n+      *)\n+\tenable_decimal_float=dpd\n+\t;;\n+    esac\n+    ;;\n+  xno)\n+    # ENABLE_DECIMAL_FLOAT is set to 0. But we have to have proper\n+    # dependency on libdecnumber.\n+    enable_decimal_float=dpd\n+    ;;\n+esac\n+\n+\n+\n \n # If BID is being used, additional objects should be linked in.\n if test x$enable_decimal_float = xbid; then"}, {"sha": "e6d42a1e46de44483c5ab1926342d68e86e759ba", "filename": "libgcc/configure", "status": "modified", "additions": 23, "deletions": 11, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4dae9fcc09f1324cfb0f6228e3a607a73e33a4e/libgcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4dae9fcc09f1324cfb0f6228e3a607a73e33a4e/libgcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure?ref=f4dae9fcc09f1324cfb0f6228e3a607a73e33a4e", "patch": "@@ -3634,6 +3634,7 @@ $as_echo \"$libgcc_cv_dfp\" >&6; }\n decimal_float=$libgcc_cv_dfp\n \n \n+\n # Check whether --enable-decimal-float was given.\n if test \"${enable_decimal_float+set}\" = set; then :\n   enableval=$enable_decimal_float;\n@@ -3646,10 +3647,12 @@ Valid choices are 'yes', 'bid', 'dpd', and 'no'.\" \"$LINENO\" 5 ;;\n else\n \n   case $host in\n-    powerpc*-*-linux* | i?86*-*-linux* | x86_64*-*-linux*)\n+    powerpc*-*-linux* | i?86*-*-linux* | x86_64*-*-linux* | s390*-*-linux*)\n       enable_decimal_float=yes\n       ;;\n     *)\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: decimal float is not supported for this target\" >&5\n+$as_echo \"$as_me: WARNING: decimal float is not supported for this target\" >&2;}\n       enable_decimal_float=no\n       ;;\n   esac\n@@ -3658,16 +3661,25 @@ fi\n \n \n # x86's use BID format instead of DPD\n-if test x$enable_decimal_float = xyes; then\n-  case $host in\n-    i?86*-*-linux* | x86_64*-*-linux*)\n-      enable_decimal_float=bid\n-      ;;\n-    *)\n-      enable_decimal_float=dpd\n-      ;;\n-  esac\n-fi\n+case x$enable_decimal_float in\n+  xyes)\n+    case $host in\n+      i?86*-*-* | x86_64*-*-*)\n+\tenable_decimal_float=bid\n+\t;;\n+      *)\n+\tenable_decimal_float=dpd\n+\t;;\n+    esac\n+    ;;\n+  xno)\n+    # ENABLE_DECIMAL_FLOAT is set to 0. But we have to have proper\n+    # dependency on libdecnumber.\n+    enable_decimal_float=dpd\n+    ;;\n+esac\n+\n+\n \n \n # Check for fixed-point support."}]}