{"sha": "174283a3c26828ee2bf0acd05f6350f439beefcc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc0MjgzYTNjMjY4MjhlZTJiZjBhY2QwNWY2MzUwZjQzOWJlZWZjYw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-08-12T04:09:57Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-08-12T04:09:57Z"}, "message": "c-common.h (STATEMENT_LIST_HAS_LABEL): New.\n\n        * c-common.h (STATEMENT_LIST_HAS_LABEL): New.\n        * c-semantics.c (add_stmt): Set it.\n        * c-decl.c (finish_decl): Use it to create a new BIND_EXPR\n        before instantiating a variable sized type.\n\nFrom-SVN: r85849", "tree": {"sha": "0cb6f5299b432c6f23ca205a73d8654219b13413", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cb6f5299b432c6f23ca205a73d8654219b13413"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/174283a3c26828ee2bf0acd05f6350f439beefcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/174283a3c26828ee2bf0acd05f6350f439beefcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/174283a3c26828ee2bf0acd05f6350f439beefcc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/174283a3c26828ee2bf0acd05f6350f439beefcc/comments", "author": null, "committer": null, "parents": [{"sha": "159319544b909404d2ba3997c58a0cbe6541030a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/159319544b909404d2ba3997c58a0cbe6541030a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/159319544b909404d2ba3997c58a0cbe6541030a"}], "stats": {"total": 54, "additions": 52, "deletions": 2}, "files": [{"sha": "b0e986be8fc2e5518548c21f6ce81e6412787b1b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/174283a3c26828ee2bf0acd05f6350f439beefcc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/174283a3c26828ee2bf0acd05f6350f439beefcc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=174283a3c26828ee2bf0acd05f6350f439beefcc", "patch": "@@ -1,3 +1,10 @@\n+2004-08-12  Richard Henderson  <rth@redhat.com>\n+\n+\t* c-common.h (STATEMENT_LIST_HAS_LABEL): New.\n+\t* c-semantics.c (add_stmt): Set it.\n+\t* c-decl.c (finish_decl): Use it to create a new BIND_EXPR\n+\tbefore instantiating a variable sized type.\n+\n 2004-08-12  Richard Henderson  <rth@redhat.com>\n \n \t* stor-layout.c (round_up, round_down): Move ..."}, {"sha": "1c9286ef7b791f21c6f4928829fe1d5f183c1442", "filename": "gcc/c-common.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/174283a3c26828ee2bf0acd05f6350f439beefcc/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/174283a3c26828ee2bf0acd05f6350f439beefcc/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=174283a3c26828ee2bf0acd05f6350f439beefcc", "patch": "@@ -35,7 +35,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n       STMT_IS_FULL_EXPR_P (in _STMT)\n       STATEMENT_LIST_STMT_EXPR (in STATEMENT_LIST)\n    2: unused\n-   3: unused\n+   3: STATEMENT_LIST_HAS_LABEL (in STATEMENT_LIST)\n    4: unused\n */\n \n@@ -708,6 +708,10 @@ extern void finish_file\t(void);\n #define STATEMENT_LIST_STMT_EXPR(NODE) \\\n   TREE_LANG_FLAG_1 (STATEMENT_LIST_CHECK (NODE))\n \n+/* Nonzero if a label has been added to the statement list.  */\n+#define STATEMENT_LIST_HAS_LABEL(NODE) \\\n+  TREE_LANG_FLAG_3 (STATEMENT_LIST_CHECK (NODE))\n+\n /* WHILE_STMT accessors. These give access to the condition of the\n    while statement and the body of the while statement, respectively.  */\n #define WHILE_COND(NODE)        TREE_OPERAND (WHILE_STMT_CHECK (NODE), 0)"}, {"sha": "82e42f04e6635ee088cbca26b1db371e003ffdb7", "filename": "gcc/c-decl.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/174283a3c26828ee2bf0acd05f6350f439beefcc/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/174283a3c26828ee2bf0acd05f6350f439beefcc/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=174283a3c26828ee2bf0acd05f6350f439beefcc", "patch": "@@ -3061,7 +3061,24 @@ finish_decl (tree decl, tree init, tree asmspec_tree)\n \t    }\n \n \t  if (TREE_CODE (decl) != FUNCTION_DECL)\n-\t    add_stmt (build_stmt (DECL_EXPR, decl));\n+\t    {\n+\t      /* If we're building a variable sized type, and we might be\n+\t\t reachable other than via the top of the current binding\n+\t\t level, then create a new BIND_EXPR so that we deallocate\n+\t\t the object at the right time.  */\n+\t      /* Note that DECL_SIZE can be null due to errors.  */\n+\t      if (DECL_SIZE (decl)\n+\t\t  && !TREE_CONSTANT (DECL_SIZE (decl))\n+\t\t  && STATEMENT_LIST_HAS_LABEL (cur_stmt_list))\n+\t\t{\n+\t\t  tree bind;\n+\t\t  bind = build (BIND_EXPR, void_type_node, NULL, NULL, NULL);\n+\t\t  TREE_SIDE_EFFECTS (bind) = 1;\n+\t\t  add_stmt (bind);\n+\t\t  BIND_EXPR_BODY (bind) = push_stmt_list ();\n+\t\t}\n+\t      add_stmt (build_stmt (DECL_EXPR, decl));\n+\t    }\n \t}\n   \n "}, {"sha": "f011cb90a1e37e50e3f502fe975b5d16921b9937", "filename": "gcc/c-semantics.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/174283a3c26828ee2bf0acd05f6350f439beefcc/gcc%2Fc-semantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/174283a3c26828ee2bf0acd05f6350f439beefcc/gcc%2Fc-semantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-semantics.c?ref=174283a3c26828ee2bf0acd05f6350f439beefcc", "patch": "@@ -140,6 +140,9 @@ add_stmt (tree t)\n       STMT_IS_FULL_EXPR_P (t) = stmts_are_full_exprs_p ();\n     }\n \n+  if (code == LABEL_EXPR || code == CASE_LABEL_EXPR)\n+    STATEMENT_LIST_HAS_LABEL (cur_stmt_list) = 1;\n+\n   /* Add T to the statement-tree.  Non-side-effect statements need to be\n      recorded during statement expressions.  */\n   append_to_statement_list_force (t, &cur_stmt_list);"}, {"sha": "62f377a2f24567096d5f32f77f1450cb15508327", "filename": "gcc/testsuite/gcc.c-torture/execute/20040811-1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/174283a3c26828ee2bf0acd05f6350f439beefcc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040811-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/174283a3c26828ee2bf0acd05f6350f439beefcc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040811-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040811-1.c?ref=174283a3c26828ee2bf0acd05f6350f439beefcc", "patch": "@@ -0,0 +1,19 @@\n+/* Ensure that we deallocate X when branching back before its\n+   declaration.  */\n+\n+void *volatile p;\n+                                                                                \n+int\n+main (void)\n+{\n+  int n = 0;\n+ lab:;\n+  int x[n % 1000 + 1];\n+  x[0] = 1;\n+  x[n % 1000] = 2;\n+  p = x;\n+  n++;\n+  if (n < 1000000)\n+    goto lab;\n+  return 0;\n+}"}]}