{"sha": "496326bcc14616ae90da47db7a7f203d79f02923", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk2MzI2YmNjMTQ2MTZhZTkwZGE0N2RiN2E3ZjIwM2Q3OWYwMjkyMw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-10-05T11:58:25Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-10-05T11:58:25Z"}, "message": "re PR middle-end/77863 (genmatch segfault on a wrong usage of an for operator)\n\n2016-10-05  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/77863\n\t* genmatch.c (capture_info::walk_c_expr): Diagnose unknown\n\tcapture ids in c-exprs.\n\nFrom-SVN: r240777", "tree": {"sha": "398d851c0a5429f4aa70307773b6ad100313b73e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/398d851c0a5429f4aa70307773b6ad100313b73e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/496326bcc14616ae90da47db7a7f203d79f02923", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/496326bcc14616ae90da47db7a7f203d79f02923", "html_url": "https://github.com/Rust-GCC/gccrs/commit/496326bcc14616ae90da47db7a7f203d79f02923", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/496326bcc14616ae90da47db7a7f203d79f02923/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "39bb7d015297586294c6416a4db78b50345d2a46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39bb7d015297586294c6416a4db78b50345d2a46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39bb7d015297586294c6416a4db78b50345d2a46"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "4fcd8f5b69ec96acfa225cc0096b4ccb6ba92c14", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/496326bcc14616ae90da47db7a7f203d79f02923/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/496326bcc14616ae90da47db7a7f203d79f02923/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=496326bcc14616ae90da47db7a7f203d79f02923", "patch": "@@ -1,3 +1,9 @@\n+2016-10-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/77863\n+\t* genmatch.c (capture_info::walk_c_expr): Diagnose unknown\n+\tcapture ids in c-exprs.\n+\n 2016-10-05  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/77826"}, {"sha": "de03d34a6b344eb8767587881071b8d921d7f256", "filename": "gcc/genmatch.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/496326bcc14616ae90da47db7a7f203d79f02923/gcc%2Fgenmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/496326bcc14616ae90da47db7a7f203d79f02923/gcc%2Fgenmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmatch.c?ref=496326bcc14616ae90da47db7a7f203d79f02923", "patch": "@@ -2194,8 +2194,10 @@ capture_info::walk_c_expr (c_expr *e)\n \t    id = (const char *)n->val.str.text;\n \t  else\n \t    id = (const char *)CPP_HASHNODE (n->val.node.node)->ident.str;\n-\t  unsigned where = *e->capture_ids->get(id);\n-\t  info[info[where].same_as].force_no_side_effects_p = true;\n+\t  unsigned *where = e->capture_ids->get(id);\n+\t  if (! where)\n+\t    fatal_at (n, \"unknown capture id '%s'\", id);\n+\t  info[info[*where].same_as].force_no_side_effects_p = true;\n \t  if (verbose >= 1\n \t      && !gimple)\n \t    warning_at (t, \"capture escapes\");"}]}