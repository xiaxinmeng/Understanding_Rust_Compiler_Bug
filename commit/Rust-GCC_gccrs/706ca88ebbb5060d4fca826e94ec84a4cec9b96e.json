{"sha": "706ca88ebbb5060d4fca826e94ec84a4cec9b96e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA2Y2E4OGViYmI1MDYwZDRmY2E4MjZlOTRlYzg0YTRjZWM5Yjk2ZQ==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@redhat.com", "date": "2007-03-10T01:54:13Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2007-03-10T01:54:13Z"}, "message": "tree-pass.h (TODO_update_smt_usage): Remove.\n\n\n\t* tree-pass.h (TODO_update_smt_usage): Remove.\n\tUpdate all users.\n\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Remove\n\targument SOME.\n\tUpdate all users.\n\nFrom-SVN: r122787", "tree": {"sha": "4572aa9847a378e5bfbdbed5dee9d9a0b8d7fb4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4572aa9847a378e5bfbdbed5dee9d9a0b8d7fb4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/706ca88ebbb5060d4fca826e94ec84a4cec9b96e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/706ca88ebbb5060d4fca826e94ec84a4cec9b96e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/706ca88ebbb5060d4fca826e94ec84a4cec9b96e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/706ca88ebbb5060d4fca826e94ec84a4cec9b96e/comments", "author": null, "committer": null, "parents": [{"sha": "751d985534820f549c59935311cc26282e2b37bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/751d985534820f549c59935311cc26282e2b37bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/751d985534820f549c59935311cc26282e2b37bb"}], "stats": {"total": 72, "additions": 25, "deletions": 47}, "files": [{"sha": "cbe3d08abee3c1fc5ce5b684ad076c0107a3d039", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/706ca88ebbb5060d4fca826e94ec84a4cec9b96e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/706ca88ebbb5060d4fca826e94ec84a4cec9b96e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=706ca88ebbb5060d4fca826e94ec84a4cec9b96e", "patch": "@@ -1,3 +1,11 @@\n+2007-03-09  Diego Novillo  <dnovillo@redhat.com>\n+\n+\t* tree-pass.h (TODO_update_smt_usage): Remove.\n+\tUpdate all users.\n+\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Remove\n+\targument SOME.\n+\tUpdate all users.\n+\n 2007-03-09  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* pa.c (attr_length_call): Revise condition for long pc-relative branch."}, {"sha": "3f479edad031b01f09cbca929de8aef3d82a5955", "filename": "gcc/tree-complex.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/706ca88ebbb5060d4fca826e94ec84a4cec9b96e/gcc%2Ftree-complex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/706ca88ebbb5060d4fca826e94ec84a4cec9b96e/gcc%2Ftree-complex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-complex.c?ref=706ca88ebbb5060d4fca826e94ec84a4cec9b96e", "patch": "@@ -1533,10 +1533,10 @@ struct tree_opt_pass pass_lower_complex =\n   0,\t\t\t\t\t/* properties_provided */\n   0,                       \t\t/* properties_destroyed */\n   0,\t\t\t\t\t/* todo_flags_start */\n-  TODO_dump_func | TODO_ggc_collect\n-  | TODO_update_smt_usage\n-  | TODO_update_ssa\n-  | TODO_verify_stmts,\t\t        /* todo_flags_finish */\n+  TODO_dump_func\n+    | TODO_ggc_collect\n+    | TODO_update_ssa\n+    | TODO_verify_stmts,\t\t/* todo_flags_finish */\n   0\t\t\t\t\t/* letter */\n };\n "}, {"sha": "6d4f70748062ceaa16853d4bba27535dc58cac6c", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/706ca88ebbb5060d4fca826e94ec84a4cec9b96e/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/706ca88ebbb5060d4fca826e94ec84a4cec9b96e/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=706ca88ebbb5060d4fca826e94ec84a4cec9b96e", "patch": "@@ -215,10 +215,6 @@ struct dump_file_info\n    for the passes that are handed to register_dump_files.  */\n #define TODO_set_props\t\t\t(1 << 15)\n \n-/* Set by passes that may make SMT's that were previously never used\n-   in statements, used.  */\n-#define TODO_update_smt_usage           (1 << 16)\n-\n #define TODO_update_ssa_any\t\t\\\n     (TODO_update_ssa\t\t\t\\\n      | TODO_update_ssa_no_phi\t\t\\"}, {"sha": "239fd847969e56c1774c5f2ea4f1b4eb3a05f704", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/706ca88ebbb5060d4fca826e94ec84a4cec9b96e/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/706ca88ebbb5060d4fca826e94ec84a4cec9b96e/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=706ca88ebbb5060d4fca826e94ec84a4cec9b96e", "patch": "@@ -1612,9 +1612,6 @@ decide_instantiations (void)\n     }\n   bitmap_clear (&done_head);\n   \n-  if (!bitmap_empty_p (sra_candidates))\n-    todoflags |= TODO_update_smt_usage;\n-\n   mark_set_for_renaming (sra_candidates);\n \n   if (dump_file)\n@@ -1700,7 +1697,6 @@ generate_one_element_ref (struct sra_elt *elt, tree base)\n       }\n \n     case ARRAY_TYPE:\n-      todoflags |= TODO_update_smt_usage;\n       if (TREE_CODE (elt->element) == RANGE_EXPR)\n \treturn build4 (ARRAY_RANGE_REF, elt->type, base,\n \t\t       TREE_OPERAND (elt->element, 0), NULL, NULL);"}, {"sha": "b5adbd9c8d20c6610fadfa9ed58f948888ed2ad2", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/706ca88ebbb5060d4fca826e94ec84a4cec9b96e/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/706ca88ebbb5060d4fca826e94ec84a4cec9b96e/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=706ca88ebbb5060d4fca826e94ec84a4cec9b96e", "patch": "@@ -1411,8 +1411,7 @@ execute_ssa_ccp (bool store_ccp)\n   ccp_initialize ();\n   ssa_propagate (ccp_visit_stmt, ccp_visit_phi_node);\n   if (ccp_finalize ())\n-    return (TODO_cleanup_cfg | TODO_update_ssa | TODO_update_smt_usage\n-\t    | TODO_remove_unused_locals);\n+    return (TODO_cleanup_cfg | TODO_update_ssa | TODO_remove_unused_locals);\n   else\n     return 0;\n }"}, {"sha": "6e1387f715724f2621ce23fa2e25853e6ee55a39", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/706ca88ebbb5060d4fca826e94ec84a4cec9b96e/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/706ca88ebbb5060d4fca826e94ec84a4cec9b96e/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=706ca88ebbb5060d4fca826e94ec84a4cec9b96e", "patch": "@@ -389,8 +389,7 @@ struct tree_opt_pass pass_dominator =\n   TODO_dump_func\n     | TODO_update_ssa\n     | TODO_cleanup_cfg\n-    | TODO_verify_ssa\t\n-    | TODO_update_smt_usage,\t\t/* todo_flags_finish */\n+    | TODO_verify_ssa,\t\t\t/* todo_flags_finish */\n   0\t\t\t\t\t/* letter */\n };\n \n@@ -2551,9 +2550,11 @@ struct tree_opt_pass pass_phi_only_cprop =\n   0,                                    /* properties_provided */\n   0,\t\t                        /* properties_destroyed */\n   0,                                    /* todo_flags_start */\n-  TODO_cleanup_cfg | TODO_dump_func \n-    | TODO_ggc_collect | TODO_verify_ssa\n-    | TODO_verify_stmts | TODO_update_smt_usage\n-    | TODO_update_ssa, /* todo_flags_finish */\n+  TODO_cleanup_cfg\n+    | TODO_dump_func \n+    | TODO_ggc_collect\n+    | TODO_verify_ssa\n+    | TODO_verify_stmts\n+    | TODO_update_ssa,\t\t\t/* todo_flags_finish */\n   0                                     /* letter */\n };"}, {"sha": "a854841f30749a802b1ad5ab03d1bbd0ec96933c", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 4, "deletions": 25, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/706ca88ebbb5060d4fca826e94ec84a4cec9b96e/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/706ca88ebbb5060d4fca826e94ec84a4cec9b96e/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=706ca88ebbb5060d4fca826e94ec84a4cec9b96e", "patch": "@@ -668,14 +668,11 @@ forward_propagate_addr_into_variable_array_index (tree offset, tree lhs,\n    Often this will allow for removal of an ADDR_EXPR and INDIRECT_REF\n    node or for recovery of array indexing from pointer arithmetic.\n    \n-   CHANGED is an optional pointer to a boolean variable set to true if\n-   either the LHS or RHS was changed in the USE_STMT.  \n-\n    Return true if the propagation was successful (the propagation can\n    be not totally successful, yet things may have been changed).  */\n \n static bool\n-forward_propagate_addr_expr_1 (tree stmt, tree use_stmt, bool *changed)\n+forward_propagate_addr_expr_1 (tree stmt, tree use_stmt)\n {\n   tree name = GIMPLE_STMT_OPERAND (stmt, 0);\n   tree lhs, rhs, array_ref;\n@@ -695,8 +692,6 @@ forward_propagate_addr_expr_1 (tree stmt, tree use_stmt, bool *changed)\n       TREE_OPERAND (lhs, 0) = unshare_expr (GIMPLE_STMT_OPERAND (stmt, 1));\n       fold_stmt_inplace (use_stmt);\n       tidy_after_forward_propagate_addr (use_stmt);\n-      if (changed)\n-\t*changed = true;\n     }\n \n   /* Trivial case.  The use statement could be a trivial copy.  We\n@@ -712,8 +707,6 @@ forward_propagate_addr_expr_1 (tree stmt, tree use_stmt, bool *changed)\n       GIMPLE_STMT_OPERAND (use_stmt, 1)\n \t= unshare_expr (GIMPLE_STMT_OPERAND (stmt, 1));\n       tidy_after_forward_propagate_addr (use_stmt);\n-      if (changed)\n-\t*changed = true;\n       return true;\n     }\n \n@@ -734,8 +727,6 @@ forward_propagate_addr_expr_1 (tree stmt, tree use_stmt, bool *changed)\n       TREE_OPERAND (rhs, 0) = unshare_expr (GIMPLE_STMT_OPERAND (stmt, 1));\n       fold_stmt_inplace (use_stmt);\n       tidy_after_forward_propagate_addr (use_stmt);\n-      if (changed)\n-\t*changed = true;\n       return true;\n     }\n \n@@ -768,8 +759,6 @@ forward_propagate_addr_expr_1 (tree stmt, tree use_stmt, bool *changed)\n       if (fold_stmt_inplace (use_stmt))\n \t{\n \t  tidy_after_forward_propagate_addr (use_stmt);\n-\t  if (changed)\n-\t    *changed = true;\n \t  return true;\n \t}\n       else\n@@ -795,8 +784,6 @@ forward_propagate_addr_expr_1 (tree stmt, tree use_stmt, bool *changed)\n       \n       res = forward_propagate_addr_into_variable_array_index (offset_stmt, lhs,\n \t\t\t\t\t\t\t      stmt, use_stmt);\n-      if (res && changed)\n-\t*changed = true;\n       return res;\n     }\n \t      \n@@ -812,24 +799,20 @@ forward_propagate_addr_expr_1 (tree stmt, tree use_stmt, bool *changed)\n       tree offset_stmt = SSA_NAME_DEF_STMT (TREE_OPERAND (rhs, 0));\n       res = forward_propagate_addr_into_variable_array_index (offset_stmt, lhs,\n \t\t\t\t\t\t\t      stmt, use_stmt);\n-      if (res && changed)\n-\t*changed = true;\n       return res;\n     }\n   return false;\n }\n \n /* STMT is a statement of the form SSA_NAME = ADDR_EXPR <whatever>.\n-   SOME is a pointer to a boolean value indicating whether we\n-   propagated the address expression anywhere.\n \n    Try to forward propagate the ADDR_EXPR into all uses of the SSA_NAME.\n    Often this will allow for removal of an ADDR_EXPR and INDIRECT_REF\n    node or for recovery of array indexing from pointer arithmetic.\n    Returns true, if all uses have been propagated into.  */\n \n static bool\n-forward_propagate_addr_expr (tree stmt, bool *some)\n+forward_propagate_addr_expr (tree stmt)\n {\n   int stmt_loop_depth = bb_for_stmt (stmt)->loop_depth;\n   tree name = GIMPLE_STMT_OPERAND (stmt, 0);\n@@ -860,8 +843,7 @@ forward_propagate_addr_expr (tree stmt, bool *some)\n       \n       push_stmt_changes (&use_stmt);\n \n-      result = forward_propagate_addr_expr_1 (stmt, use_stmt, some);\n-      *some |= result;\n+      result = forward_propagate_addr_expr_1 (stmt, use_stmt);\n       all &= result;\n \n       pop_stmt_changes (&use_stmt);\n@@ -999,17 +981,14 @@ tree_ssa_forward_propagate_single_use_vars (void)\n \n \t      if (TREE_CODE (rhs) == ADDR_EXPR)\n \t\t{\n-\t\t  bool some = false;\n-\t\t  if (forward_propagate_addr_expr (stmt, &some))\n+\t\t  if (forward_propagate_addr_expr (stmt))\n \t\t    {\n \t\t      release_defs (stmt);\n \t\t      todoflags |= TODO_remove_unused_locals;\n \t\t      bsi_remove (&bsi, true);\n \t\t    }\n \t\t  else\n \t\t    bsi_next (&bsi);\n-\t\t  if (some)\n-\t\t    todoflags |= TODO_update_smt_usage;\n \t\t}\n \t      else if ((TREE_CODE (rhs) == BIT_NOT_EXPR\n \t\t        || TREE_CODE (rhs) == NEGATE_EXPR)"}, {"sha": "dcb5f6a1280447c188f57febc3a029ee1983db5b", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/706ca88ebbb5060d4fca826e94ec84a4cec9b96e/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/706ca88ebbb5060d4fca826e94ec84a4cec9b96e/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=706ca88ebbb5060d4fca826e94ec84a4cec9b96e", "patch": "@@ -5758,7 +5758,6 @@ struct tree_opt_pass pass_vrp =\n     | TODO_ggc_collect\n     | TODO_verify_ssa\n     | TODO_dump_func\n-    | TODO_update_ssa\n-    | TODO_update_smt_usage,\t\t\t/* todo_flags_finish */\n+    | TODO_update_ssa,\t\t\t/* todo_flags_finish */\n   0\t\t\t\t\t/* letter */\n };"}]}