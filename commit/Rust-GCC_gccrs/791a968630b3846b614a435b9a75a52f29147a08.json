{"sha": "791a968630b3846b614a435b9a75a52f29147a08", "node_id": "C_kwDOANBUbNoAKDc5MWE5Njg2MzBiMzg0NmI2MTRhNDM1YjlhNzVhNTJmMjkxNDdhMDg", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-04-12T20:40:14Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-04-12T20:46:58Z"}, "message": "c++: local function versioning [PR104669]\n\nThere were two problems with this testcase: we weren't copying the target\nattribute from the second declaration to the global alias for the first\none (duplicate_decls hunk), and then we were treating the third one as\nmatching the earlier one even though both are versioned (decls_match hunk).\nThe latter change required a fix to find_last_decl (used for attribute\nmismatch warnings) to give up if we see a versioned function, as in that\ncase we can't determine whether the decls match, because we are still in the\nprocess of setting the attributes on the new decl.\n\n\tPR c++/104669\n\ngcc/cp/ChangeLog:\n\n\t* decl.cc (decls_match): Compare versions even if not recording.\n\t(duplicate_decls): Propagate attributes to alias.\n\t* decl2.cc (find_last_decl): Give up if versioned.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.target/i386/mv31.C: New test.", "tree": {"sha": "fb889e28e630935e2f7225ec32daf7be64068db6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb889e28e630935e2f7225ec32daf7be64068db6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/791a968630b3846b614a435b9a75a52f29147a08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/791a968630b3846b614a435b9a75a52f29147a08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/791a968630b3846b614a435b9a75a52f29147a08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/791a968630b3846b614a435b9a75a52f29147a08/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "164c6a1c5d7f99235f1a41440eacac7a977e8fbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/164c6a1c5d7f99235f1a41440eacac7a977e8fbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/164c6a1c5d7f99235f1a41440eacac7a977e8fbd"}], "stats": {"total": 42, "additions": 34, "deletions": 8}, "files": [{"sha": "5f59612fb0015dba9fee2cb1e02b4c68bd44c0ed", "filename": "gcc/cp/decl.cc", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/791a968630b3846b614a435b9a75a52f29147a08/gcc%2Fcp%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/791a968630b3846b614a435b9a75a52f29147a08/gcc%2Fcp%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.cc?ref=791a968630b3846b614a435b9a75a52f29147a08", "patch": "@@ -1069,11 +1069,14 @@ decls_match (tree newdecl, tree olddecl, bool record_versions /* = true */)\n       if (types_match\n \t  && !DECL_EXTERN_C_P (newdecl)\n \t  && !DECL_EXTERN_C_P (olddecl)\n-\t  && record_versions\n-\t  && maybe_version_functions (newdecl, olddecl,\n-\t\t\t\t      (!DECL_FUNCTION_VERSIONED (newdecl)\n-\t\t\t\t       || !DECL_FUNCTION_VERSIONED (olddecl))))\n-\treturn 0;\n+\t  && targetm.target_option.function_versions (newdecl, olddecl))\n+\t{\n+\t  if (record_versions)\n+\t    maybe_version_functions (newdecl, olddecl,\n+\t\t\t\t     (!DECL_FUNCTION_VERSIONED (newdecl)\n+\t\t\t\t      || !DECL_FUNCTION_VERSIONED (olddecl)));\n+\t  return 0;\n+\t}\n     }\n   else if (TREE_CODE (newdecl) == TEMPLATE_DECL)\n     {\n@@ -2598,7 +2601,12 @@ duplicate_decls (tree newdecl, tree olddecl, bool hiding, bool was_hidden)\n       else\n \t{\n \t  retrofit_lang_decl (newdecl);\n-\t  DECL_LOCAL_DECL_ALIAS (newdecl) = DECL_LOCAL_DECL_ALIAS (olddecl);\n+\t  tree alias = DECL_LOCAL_DECL_ALIAS (newdecl)\n+\t    = DECL_LOCAL_DECL_ALIAS (olddecl);\n+\t  DECL_ATTRIBUTES (alias)\n+\t    = (*targetm.merge_decl_attributes) (alias, newdecl);\n+\t  if (TREE_CODE (newdecl) == FUNCTION_DECL)\n+\t    merge_attribute_bits (newdecl, alias);\n \t}\n     }\n "}, {"sha": "e10331f8568f93803bd3aa47acf72fb965a3f8f4", "filename": "gcc/cp/decl2.cc", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/791a968630b3846b614a435b9a75a52f29147a08/gcc%2Fcp%2Fdecl2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/791a968630b3846b614a435b9a75a52f29147a08/gcc%2Fcp%2Fdecl2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.cc?ref=791a968630b3846b614a435b9a75a52f29147a08", "patch": "@@ -1637,8 +1637,16 @@ find_last_decl (tree decl)\n \t  if (TREE_CODE (*iter) == OVERLOAD)\n \t    continue;\n \n-\t  if (decls_match (decl, *iter, /*record_decls=*/false))\n-\t    return *iter;\n+\t  tree d = *iter;\n+\n+\t  /* We can't compare versions in the middle of processing the\n+\t     attribute that has the version.  */\n+\t  if (TREE_CODE (d) == FUNCTION_DECL\n+\t      && DECL_FUNCTION_VERSIONED (d))\n+\t    return NULL_TREE;\n+\n+\t  if (decls_match (decl, d, /*record_decls=*/false))\n+\t    return d;\n \t}\n       return NULL_TREE;\n     }"}, {"sha": "5d8fd1ddf75a7445b4d4d7ddb6f465be33b65720", "filename": "gcc/testsuite/g++.target/i386/mv31.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/791a968630b3846b614a435b9a75a52f29147a08/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fmv31.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/791a968630b3846b614a435b9a75a52f29147a08/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fmv31.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fmv31.C?ref=791a968630b3846b614a435b9a75a52f29147a08", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/104669\n+\n+void bar()\n+{\n+  int foo(void);\n+  int foo(void) __attribute__((target(\"sse\")));\n+  int foo(void) __attribute__((target(\"default\")));\n+  int (*p)(void) = &foo;\n+  return;\n+}"}]}