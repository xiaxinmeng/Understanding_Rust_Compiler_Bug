{"sha": "3f2e15c2e66af9cca1dfe24ad7e9692f511ebd06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YyZTE1YzJlNjZhZjljY2ExZGZlMjRhZDdlOTY5MmY1MTFlYmQwNg==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2020-10-06T11:07:25Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2020-10-06T14:50:22Z"}, "message": "[openacc] Fix acc declare for VLAs\n\nConsider test-case test.c, with VLA A:\n...\nint main (void) {\n  int N = 1000;\n  int A[N];\n  #pragma acc declare copy(A)\n  return 0;\n}\n...\ncompiled using:\n...\n$ gcc test.c -fopenacc -S -fdump-tree-all\n...\n\nAt original, we have:\n...\n  #pragma acc declare map(tofrom:A);\n...\nbut at gimple, we have a map (to:A.1), but not a map (from:A.1):\n...\n  int[0:D.2074] * A.1;\n\n  {\n    int A[0:D.2074] [value-expr: *A.1];\n\n    saved_stack.2 = __builtin_stack_save ();\n    try\n      {\n        A.1 = __builtin_alloca_with_align (D.2078, 32);\n        #pragma omp target oacc_declare map(to:(*A.1) [len: D.2076])\n      }\n    finally\n      {\n        __builtin_stack_restore (saved_stack.2);\n      }\n  }\n...\n\nThis is caused by the following incompatibility.  When storing the desired\nfrom clause in oacc_declare_returns, we use 'A.1' as the key:\n...\n10898                 oacc_declare_returns->put (decl, c);\n(gdb) call debug_generic_expr (decl)\nA.1\n(gdb) call debug_generic_expr (c)\nmap(from:(*A.1))\n...\nbut when looking it up, we use 'A' as the key:\n...\n(gdb)\n1471                  tree *c = oacc_declare_returns->get (t);\n(gdb) call debug_generic_expr (t)\nA\n...\n\nFix this by extracing the 'A.1' lookup key from 'A' using the decl-expr.\n\nIn addition, unshare the looked up value, to fix avoid running into\nan \"incorrect sharing of tree nodes\" error.\n\nUsing these two fixes, we get our desired:\n...\n     finally\n       {\n+        #pragma omp target oacc_declare map(from:(*A.1))\n         __builtin_stack_restore (saved_stack.2);\n       }\n...\n\nBuild on x86_64-linux with nvptx accelerator, tested libgomp.\n\ngcc/ChangeLog:\n\n2020-10-06  Tom de Vries  <tdevries@suse.de>\n\n\tPR middle-end/90861\n\t* gimplify.c (gimplify_bind_expr): Handle lookup in\n\toacc_declare_returns using key with decl-expr.\n\nlibgomp/ChangeLog:\n\n2020-10-06  Tom de Vries  <tdevries@suse.de>\n\n\tPR middle-end/90861\n\t* testsuite/libgomp.oacc-c-c++-common/declare-vla.c: Remove xfail.", "tree": {"sha": "b4ab82a70f4a4562ff5f74f7c9de4952e6fe81ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4ab82a70f4a4562ff5f74f7c9de4952e6fe81ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f2e15c2e66af9cca1dfe24ad7e9692f511ebd06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f2e15c2e66af9cca1dfe24ad7e9692f511ebd06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f2e15c2e66af9cca1dfe24ad7e9692f511ebd06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f2e15c2e66af9cca1dfe24ad7e9692f511ebd06/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "190c04ba36d9c6c3dce41f12012aa97c6d7f22f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/190c04ba36d9c6c3dce41f12012aa97c6d7f22f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/190c04ba36d9c6c3dce41f12012aa97c6d7f22f5"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "fa89e7979401e54e9342cb9f01d3dd4585442e14", "filename": "gcc/gimplify.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f2e15c2e66af9cca1dfe24ad7e9692f511ebd06/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f2e15c2e66af9cca1dfe24ad7e9692f511ebd06/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=3f2e15c2e66af9cca1dfe24ad7e9692f511ebd06", "patch": "@@ -1468,15 +1468,22 @@ gimplify_bind_expr (tree *expr_p, gimple_seq *pre_p)\n \n \t  if (flag_openacc && oacc_declare_returns != NULL)\n \t    {\n-\t      tree *c = oacc_declare_returns->get (t);\n+\t      tree key = t;\n+\t      if (DECL_HAS_VALUE_EXPR_P (key))\n+\t\t{\n+\t\t  key = DECL_VALUE_EXPR (key);\n+\t\t  if (TREE_CODE (key) == INDIRECT_REF)\n+\t\t    key = TREE_OPERAND (key, 0);\n+\t\t}\n+\t      tree *c = oacc_declare_returns->get (key);\n \t      if (c != NULL)\n \t\t{\n \t\t  if (ret_clauses)\n \t\t    OMP_CLAUSE_CHAIN (*c) = ret_clauses;\n \n-\t\t  ret_clauses = *c;\n+\t\t  ret_clauses = unshare_expr (*c);\n \n-\t\t  oacc_declare_returns->remove (t);\n+\t\t  oacc_declare_returns->remove (key);\n \n \t\t  if (oacc_declare_returns->is_empty ())\n \t\t    {"}, {"sha": "714935772c1bb5f152020aaf89c94347a7326ff7", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/declare-vla.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f2e15c2e66af9cca1dfe24ad7e9692f511ebd06/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdeclare-vla.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f2e15c2e66af9cca1dfe24ad7e9692f511ebd06/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdeclare-vla.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdeclare-vla.c?ref=3f2e15c2e66af9cca1dfe24ad7e9692f511ebd06", "patch": "@@ -59,8 +59,3 @@ main ()\n \n   return 0;\n }\n-\n-\n-/* { dg-xfail-run-if \"TODO PR90861\" { *-*-* } { \"-DACC_MEM_SHARED=0\" } }\n-   This might XPASS if the compiler happens to put the two 'A' VLAs at the same\n-   address.  */"}]}