{"sha": "1c7733a760d7000a9c947d13b8c515d249c74fc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM3NzMzYTc2MGQ3MDAwYTljOTQ3ZDEzYjhjNTE1ZDI0OWM3NGZjOA==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2016-06-03T18:40:26Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2016-06-03T18:40:26Z"}, "message": "rs6000-c.c (c/c-tree.h): Add #include.\n\n[gcc]\n\n2016-06-03  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* rs6000-c.c (c/c-tree.h): Add #include.\n\t(altivec_resolve_overloaded_builtin): Handle ARRAY_TYPE arguments\n\tin C++ when found in the base position of vec_ld or vec_st.\n\n[gcc/testsuite]\n\n2016-06-03  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* g++.dg/torture/ppc-ldst-array.C: New.\n\nFrom-SVN: r237077", "tree": {"sha": "5110c0c23d32661687afff238efb983faba3d896", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5110c0c23d32661687afff238efb983faba3d896"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c7733a760d7000a9c947d13b8c515d249c74fc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c7733a760d7000a9c947d13b8c515d249c74fc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c7733a760d7000a9c947d13b8c515d249c74fc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c7733a760d7000a9c947d13b8c515d249c74fc8/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "641762ae264c86492d869d55559644e87ed36d46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/641762ae264c86492d869d55559644e87ed36d46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/641762ae264c86492d869d55559644e87ed36d46"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "6d3974b875ec87bd96d79b03a25c1db3e1ef5777", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c7733a760d7000a9c947d13b8c515d249c74fc8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c7733a760d7000a9c947d13b8c515d249c74fc8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c7733a760d7000a9c947d13b8c515d249c74fc8", "patch": "@@ -1,3 +1,9 @@\n+2016-06-03  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* rs6000-c.c (c/c-tree.h): Add #include.\n+\t(altivec_resolve_overloaded_builtin): Handle ARRAY_TYPE arguments\n+\tin C++ when found in the base position of vec_ld or vec_st.\n+\n 2016-06-03  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* tree-ssa-loop-niter.c (estimate_numbers_of_iterations_loop): Avoid"}, {"sha": "9e479a98eab23d41e0e85e541c6bbefee9d9bc5a", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c7733a760d7000a9c947d13b8c515d249c74fc8/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c7733a760d7000a9c947d13b8c515d249c74fc8/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=1c7733a760d7000a9c947d13b8c515d249c74fc8", "patch": "@@ -30,6 +30,7 @@\n #include \"stor-layout.h\"\n #include \"c-family/c-pragma.h\"\n #include \"langhooks.h\"\n+#include \"c/c-tree.h\"\n \n \n \n@@ -5203,6 +5204,14 @@ assignment for unaligned loads and stores\");\n \t    arg0 = build1 (NOP_EXPR, sizetype, arg0);\n \n \t  tree arg1_type = TREE_TYPE (arg1);\n+\t  if (TREE_CODE (arg1_type) == ARRAY_TYPE)\n+\t    {\n+\t      arg1_type = TYPE_POINTER_TO (TREE_TYPE (arg1_type));\n+\t      tree const0 = build_int_cstu (sizetype, 0);\n+\t      tree arg1_elt0 = build_array_ref (loc, arg1, const0);\n+\t      arg1 = build1 (ADDR_EXPR, arg1_type, arg1_elt0);\n+\t    }\n+\n \t  tree addr = fold_build2_loc (loc, POINTER_PLUS_EXPR, arg1_type,\n \t\t\t\t       arg1, arg0);\n \t  tree aligned = fold_build2_loc (loc, BIT_AND_EXPR, arg1_type, addr,\n@@ -5256,6 +5265,14 @@ assignment for unaligned loads and stores\");\n \t    arg1 = build1 (NOP_EXPR, sizetype, arg1);\n \n \t  tree arg2_type = TREE_TYPE (arg2);\n+\t  if (TREE_CODE (arg2_type) == ARRAY_TYPE)\n+\t    {\n+\t      arg2_type = TYPE_POINTER_TO (TREE_TYPE (arg2_type));\n+\t      tree const0 = build_int_cstu (sizetype, 0);\n+\t      tree arg2_elt0 = build_array_ref (loc, arg2, const0);\n+\t      arg2 = build1 (ADDR_EXPR, arg2_type, arg2_elt0);\n+\t    }\n+\n \t  tree addr = fold_build2_loc (loc, POINTER_PLUS_EXPR, arg2_type,\n \t\t\t\t       arg2, arg1);\n \t  tree aligned = fold_build2_loc (loc, BIT_AND_EXPR, arg2_type, addr,"}, {"sha": "ea1576b11ef171dd3e325b95e0ff8259420275e0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c7733a760d7000a9c947d13b8c515d249c74fc8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c7733a760d7000a9c947d13b8c515d249c74fc8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1c7733a760d7000a9c947d13b8c515d249c74fc8", "patch": "@@ -1,3 +1,7 @@\n+2016-06-03  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* g++.dg/torture/ppc-ldst-array.C: New.\n+\n 2016-06-03  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR target/71276"}, {"sha": "75862e2b5be687a9ec032e0dc65e5a791c89e256", "filename": "gcc/testsuite/g++.dg/torture/ppc-ldst-array.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c7733a760d7000a9c947d13b8c515d249c74fc8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fppc-ldst-array.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c7733a760d7000a9c947d13b8c515d249c74fc8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fppc-ldst-array.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fppc-ldst-array.C?ref=1c7733a760d7000a9c947d13b8c515d249c74fc8", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile { target { powerpc64*-*-* } } } */\n+/* { dg-skip-if \"do not override mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } } */\n+/* { dg-options \"-mcpu=power8\" } */\n+\n+/* When compiled with C++, this code was breaking because of different\n+   tree representations of arrays between C and C++.  */\n+\n+#include <altivec.h>\n+\n+extern vector float vf;\n+\n+void foo ()\n+{\n+  float __attribute__((aligned (16))) x[4];\n+  float __attribute__((aligned (16))) y[4];\n+  vf = vec_ld (0, x);\n+  vec_st (vf, 0, y);\n+}"}]}