{"sha": "e100a3bb5d681607423d4aa1b541c1e46b047e8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTEwMGEzYmI1ZDY4MTYwNzQyM2Q0YWExYjU0MWMxZTQ2YjA0N2U4Yg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1995-05-11T13:46:51Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1995-05-11T13:46:51Z"}, "message": "Eliminate dead code caused by last patch\n\nFrom-SVN: r9618", "tree": {"sha": "c5d3d6b017472c90d6ecacf477f77ac004840ade", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5d3d6b017472c90d6ecacf477f77ac004840ade"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e100a3bb5d681607423d4aa1b541c1e46b047e8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e100a3bb5d681607423d4aa1b541c1e46b047e8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e100a3bb5d681607423d4aa1b541c1e46b047e8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e100a3bb5d681607423d4aa1b541c1e46b047e8b/comments", "author": null, "committer": null, "parents": [{"sha": "08664dffb263afea1de2501309830fbe10ca1fcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08664dffb263afea1de2501309830fbe10ca1fcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08664dffb263afea1de2501309830fbe10ca1fcc"}], "stats": {"total": 15, "additions": 5, "deletions": 10}, "files": [{"sha": "a39b66881cb509d5cb3b8889cce67fff8475b118", "filename": "gcc/flow.c", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e100a3bb5d681607423d4aa1b541c1e46b047e8b/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e100a3bb5d681607423d4aa1b541c1e46b047e8b/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=e100a3bb5d681607423d4aa1b541c1e46b047e8b", "patch": "@@ -2382,20 +2382,15 @@ mark_used_regs (needed, live, x, final, insn)\n \t      != GET_MODE_SIZE (GET_MODE (SUBREG_REG (x)))))\n \treg_changes_size[REGNO (SUBREG_REG (x))] = 1;\n \n-      /* In case the SUBREG is not of a register, don't optimize */\n-      if (GET_CODE (SUBREG_REG (x)) != REG)\n-\t{\n-\t  mark_used_regs (needed, live, SUBREG_REG (x), final, insn);\n-\t  return;\n-\t}\n-\n       /* While we're here, optimize this case.  */\n       x = SUBREG_REG (x);\n \n-      /* Must verify that it is a register, since the RS/6000 port has\n-\t (subreg:QI (lshift:SI ...)).  */\n+      /* In case the SUBREG is not of a register, don't optimize */\n       if (GET_CODE (x) != REG)\n-\tgoto retry;\n+\t{\n+\t  mark_used_regs (needed, live, x, final, insn);\n+\t  return;\n+\t}\n \n       /* ... fall through ... */\n "}]}