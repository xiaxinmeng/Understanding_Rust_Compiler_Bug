{"sha": "aa4095c911de99a3f5bec44da96299ec8945f88a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE0MDk1YzkxMWRlOTlhM2Y1YmVjNDRkYTk2Mjk5ZWM4OTQ1Zjg4YQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@nildram.co.uk", "date": "2007-12-13T09:30:49Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-12-13T09:30:49Z"}, "message": "Makefile.tpl (CFLAGS_FOR_TARGET): Add -g.\n\n\t* Makefile.tpl (CFLAGS_FOR_TARGET): Add -g.\n\t(CXXFLAGS_FOR_TARGET): Add -O2 -g.\n\t* Makefile.in: Regenerate.\n\nFrom-SVN: r130811", "tree": {"sha": "7fe2583e67d275c9b17839bba7c4be1c49cbf2bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7fe2583e67d275c9b17839bba7c4be1c49cbf2bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa4095c911de99a3f5bec44da96299ec8945f88a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa4095c911de99a3f5bec44da96299ec8945f88a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa4095c911de99a3f5bec44da96299ec8945f88a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa4095c911de99a3f5bec44da96299ec8945f88a/comments", "author": null, "committer": null, "parents": [{"sha": "e3dafdf4d0f85fcf00944975332b43e29d39ca98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3dafdf4d0f85fcf00944975332b43e29d39ca98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3dafdf4d0f85fcf00944975332b43e29d39ca98"}], "stats": {"total": 34, "additions": 22, "deletions": 12}, "files": [{"sha": "b0a546b40245fe7b9813751faff818c0f0c30a00", "filename": "ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4095c911de99a3f5bec44da96299ec8945f88a/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4095c911de99a3f5bec44da96299ec8945f88a/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=aa4095c911de99a3f5bec44da96299ec8945f88a", "patch": "@@ -1,3 +1,9 @@\n+2007-12-13  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* Makefile.tpl (CFLAGS_FOR_TARGET): Add -g.\n+\t(CXXFLAGS_FOR_TARGET): Add -O2 -g.\n+\t* Makefile.in: Regenerate.\n+\n 2007-12-10  Mark Heffernan <meheff@google.com>\n \n \t* MAINTAINERS (Write After Approval): Add myself and alphabetize two"}, {"sha": "32c5403062f5f235d330fcd956c8bf330a325ffa", "filename": "Makefile.in", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4095c911de99a3f5bec44da96299ec8945f88a/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4095c911de99a3f5bec44da96299ec8945f88a/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=aa4095c911de99a3f5bec44da96299ec8945f88a", "patch": "@@ -373,15 +373,17 @@ COMPILER_AS_FOR_TARGET=@COMPILER_AS_FOR_TARGET@\n COMPILER_LD_FOR_TARGET=@COMPILER_LD_FOR_TARGET@\n COMPILER_NM_FOR_TARGET=@COMPILER_NM_FOR_TARGET@\n \n-# During gcc bootstrap, if we use some random cc for stage1 then\n-# CFLAGS will be just -g.  We want to ensure that TARGET libraries\n-# (which we know are built with gcc) are built with optimizations so\n-# prepend -O2 when setting CFLAGS_FOR_TARGET.\n-CFLAGS_FOR_TARGET = -O2 $(CFLAGS) $(SYSROOT_CFLAGS_FOR_TARGET) \\\n+# During gcc bootstrap, if we use some random cc for stage1 then CFLAGS\n+# might be empty or \"-g\".  We don't require a C++ compiler, so CXXFLAGS\n+# might also be empty (or \"-g\", if a non-GCC C++ compiler is in the path).\n+# We want to ensure that TARGET libraries (which we know are built with\n+# gcc) are built with \"-O2 -g\", so prepend those options when setting\n+# CFLAGS_FOR_TARGET and CXXFLAGS_FOR_TARGET.\n+CFLAGS_FOR_TARGET = -O2 -g $(CFLAGS) $(SYSROOT_CFLAGS_FOR_TARGET) \\\n \t$(DEBUG_PREFIX_CFLAGS_FOR_TARGET)\n SYSROOT_CFLAGS_FOR_TARGET = @SYSROOT_CFLAGS_FOR_TARGET@\n DEBUG_PREFIX_CFLAGS_FOR_TARGET = @DEBUG_PREFIX_CFLAGS_FOR_TARGET@\n-CXXFLAGS_FOR_TARGET = $(CXXFLAGS) $(SYSROOT_CFLAGS_FOR_TARGET) \\\n+CXXFLAGS_FOR_TARGET = -O2 -g $(CXXFLAGS) $(SYSROOT_CFLAGS_FOR_TARGET) \\\n \t$(DEBUG_PREFIX_CFLAGS_FOR_TARGET)\n LIBCFLAGS_FOR_TARGET = $(CFLAGS_FOR_TARGET)\n LIBCXXFLAGS_FOR_TARGET = $(CXXFLAGS_FOR_TARGET) -fno-implicit-templates"}, {"sha": "12ad2a1ff070ec3857aa2bcebea88e1f5f93c2c6", "filename": "Makefile.tpl", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4095c911de99a3f5bec44da96299ec8945f88a/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4095c911de99a3f5bec44da96299ec8945f88a/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=aa4095c911de99a3f5bec44da96299ec8945f88a", "patch": "@@ -376,15 +376,17 @@ COMPILER_AS_FOR_TARGET=@COMPILER_AS_FOR_TARGET@\n COMPILER_LD_FOR_TARGET=@COMPILER_LD_FOR_TARGET@\n COMPILER_NM_FOR_TARGET=@COMPILER_NM_FOR_TARGET@\n \n-# During gcc bootstrap, if we use some random cc for stage1 then\n-# CFLAGS will be just -g.  We want to ensure that TARGET libraries\n-# (which we know are built with gcc) are built with optimizations so\n-# prepend -O2 when setting CFLAGS_FOR_TARGET.\n-CFLAGS_FOR_TARGET = -O2 $(CFLAGS) $(SYSROOT_CFLAGS_FOR_TARGET) \\\n+# During gcc bootstrap, if we use some random cc for stage1 then CFLAGS\n+# might be empty or \"-g\".  We don't require a C++ compiler, so CXXFLAGS\n+# might also be empty (or \"-g\", if a non-GCC C++ compiler is in the path).\n+# We want to ensure that TARGET libraries (which we know are built with\n+# gcc) are built with \"-O2 -g\", so prepend those options when setting\n+# CFLAGS_FOR_TARGET and CXXFLAGS_FOR_TARGET.\n+CFLAGS_FOR_TARGET = -O2 -g $(CFLAGS) $(SYSROOT_CFLAGS_FOR_TARGET) \\\n \t$(DEBUG_PREFIX_CFLAGS_FOR_TARGET)\n SYSROOT_CFLAGS_FOR_TARGET = @SYSROOT_CFLAGS_FOR_TARGET@\n DEBUG_PREFIX_CFLAGS_FOR_TARGET = @DEBUG_PREFIX_CFLAGS_FOR_TARGET@\n-CXXFLAGS_FOR_TARGET = $(CXXFLAGS) $(SYSROOT_CFLAGS_FOR_TARGET) \\\n+CXXFLAGS_FOR_TARGET = -O2 -g $(CXXFLAGS) $(SYSROOT_CFLAGS_FOR_TARGET) \\\n \t$(DEBUG_PREFIX_CFLAGS_FOR_TARGET)\n LIBCFLAGS_FOR_TARGET = $(CFLAGS_FOR_TARGET)\n LIBCXXFLAGS_FOR_TARGET = $(CXXFLAGS_FOR_TARGET) -fno-implicit-templates"}]}