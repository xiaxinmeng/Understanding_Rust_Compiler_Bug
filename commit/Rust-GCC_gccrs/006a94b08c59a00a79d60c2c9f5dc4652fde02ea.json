{"sha": "006a94b08c59a00a79d60c2c9f5dc4652fde02ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA2YTk0YjA4YzU5YTAwYTc5ZDYwYzJjOWY1ZGM0NjUyZmRlMDJlYQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2002-06-16T19:31:01Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2002-06-16T19:31:01Z"}, "message": "emit-rtl.c (gen_rtx_REG): Temporarily turn off automatic sharing of hard registers.\n\n        * emit-rtl.c (gen_rtx_REG): Temporarily turn off automatic\n        sharing of hard registers.\n\n        * toplev.c (rest_of_compilation): Remove redundant conditional.\n\nFrom-SVN: r54672", "tree": {"sha": "102580f2d5e7788ed7a5e7e98d0859ccc4f667a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/102580f2d5e7788ed7a5e7e98d0859ccc4f667a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/006a94b08c59a00a79d60c2c9f5dc4652fde02ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/006a94b08c59a00a79d60c2c9f5dc4652fde02ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/006a94b08c59a00a79d60c2c9f5dc4652fde02ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/006a94b08c59a00a79d60c2c9f5dc4652fde02ea/comments", "author": null, "committer": null, "parents": [{"sha": "750491fc108a82d74c1af8bd4438f39eb4feebc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/750491fc108a82d74c1af8bd4438f39eb4feebc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/750491fc108a82d74c1af8bd4438f39eb4feebc2"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "0dfb95c569e69c679a0484974657c9b6ed24538f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/006a94b08c59a00a79d60c2c9f5dc4652fde02ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/006a94b08c59a00a79d60c2c9f5dc4652fde02ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=006a94b08c59a00a79d60c2c9f5dc4652fde02ea", "patch": "@@ -21,6 +21,11 @@\n \n 2002-06-16  Jeff Law <law@redhat.com>\n \n+\t* emit-rtl.c (gen_rtx_REG): Temporarily turn off automatic\n+\tsharing of hard registers.\n+\n+\t* toplev.c (rest_of_compilation): Remove redundant conditional.\n+\n \t* toplev.c (rest_of_compilation): Perform a simpler, less costly\n \tcleanup of the CFG when not optimizing.\n "}, {"sha": "225b8c89332a16ce879d4eb4ac66189a2e6505cd", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/006a94b08c59a00a79d60c2c9f5dc4652fde02ea/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/006a94b08c59a00a79d60c2c9f5dc4652fde02ea/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=006a94b08c59a00a79d60c2c9f5dc4652fde02ea", "patch": "@@ -533,14 +533,21 @@ gen_rtx_REG (mode, regno)\n \treturn stack_pointer_rtx;\n     }\n \n+#if 0\n   /* If the per-function register table has been set up, try to re-use\n-     an existing entry in that table to avoid useless generation of RTL.  */\n+     an existing entry in that table to avoid useless generation of RTL.\n+\n+     This code is disabled for now until we can fix the various backends\n+     which depend on having non-shared hard registers in some cases.   Long\n+     term we want to re-enable this code as it can significantly cut down\n+     on the amount of useless RTL that gets generated.  */\n   if (cfun\n       && cfun->emit\n       && regno_reg_rtx\n       && regno < FIRST_PSEUDO_REGISTER\n       && reg_raw_mode[regno] == mode)\n     return regno_reg_rtx[regno];\n+#endif\n \n   return gen_raw_REG (mode, regno);\n }"}, {"sha": "cbdb8ffa732e06af7def21f4dc9fc119136ed2f3", "filename": "gcc/toplev.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/006a94b08c59a00a79d60c2c9f5dc4652fde02ea/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/006a94b08c59a00a79d60c2c9f5dc4652fde02ea/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=006a94b08c59a00a79d60c2c9f5dc4652fde02ea", "patch": "@@ -2779,9 +2779,8 @@ rest_of_compilation (decl)\n \t{\n \t  timevar_push (TV_JUMP);\n \n-\t  if (flag_delete_null_pointer_checks)\n-\t    if (delete_null_pointer_checks (insns))\n-\t      cleanup_cfg (CLEANUP_EXPENSIVE | CLEANUP_PRE_LOOP);\n+\t  if (delete_null_pointer_checks (insns))\n+\t    cleanup_cfg (CLEANUP_EXPENSIVE | CLEANUP_PRE_LOOP);\n \t  timevar_pop (TV_JUMP);\n \t}\n "}]}