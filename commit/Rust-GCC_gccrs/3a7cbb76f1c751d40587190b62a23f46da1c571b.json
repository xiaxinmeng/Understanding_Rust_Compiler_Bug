{"sha": "3a7cbb76f1c751d40587190b62a23f46da1c571b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E3Y2JiNzZmMWM3NTFkNDA1ODcxOTBiNjJhMjNmNDZkYTFjNTcxYg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-10-01T23:37:30Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-10-01T23:37:30Z"}, "message": "dbxout.c (dbxout_fptype_value): Delete.\n\n\t* dbxout.c (dbxout_fptype_value): Delete.\n\t(dbxout_type): Emit R3 for all COMPLEX_TYPEs.\n\nFrom-SVN: r72002", "tree": {"sha": "ab3d5ab5c7ff9f6f0c8f28ef7d0772eab7d1aea3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab3d5ab5c7ff9f6f0c8f28ef7d0772eab7d1aea3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a7cbb76f1c751d40587190b62a23f46da1c571b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a7cbb76f1c751d40587190b62a23f46da1c571b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a7cbb76f1c751d40587190b62a23f46da1c571b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a7cbb76f1c751d40587190b62a23f46da1c571b/comments", "author": null, "committer": null, "parents": [{"sha": "b9e8f4b38e3042e51bd3c6514aa740f22ac9c94b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9e8f4b38e3042e51bd3c6514aa740f22ac9c94b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9e8f4b38e3042e51bd3c6514aa740f22ac9c94b"}], "stats": {"total": 73, "additions": 11, "deletions": 62}, "files": [{"sha": "1428352f4133df66eb4baae3b78986c6de49dbab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a7cbb76f1c751d40587190b62a23f46da1c571b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a7cbb76f1c751d40587190b62a23f46da1c571b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a7cbb76f1c751d40587190b62a23f46da1c571b", "patch": "@@ -1,3 +1,8 @@\n+2003-10-01  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* dbxout.c (dbxout_fptype_value): Delete.\n+\t(dbxout_type): Emit R3 for all COMPLEX_TYPEs.\n+\n 2003-10-01  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* output.h (compute_reloc_for_constant): Declare.\n@@ -133,7 +138,7 @@\n 2003-09-30  Carlo Wood  <carlo@alinoe.com>\n \n \tPR debug/12319\n-        * cfglayout.c (insn_scope):  Use prologue_locator and\n+\t* cfglayout.c (insn_scope):  Use prologue_locator and\n \tepilogue_locator; return the outer function scope for\n \tpro- and epilogue insns.\n "}, {"sha": "ec59f5e8bcbf45e668483b3763c37eb380382e50", "filename": "gcc/dbxout.c", "status": "modified", "additions": 5, "deletions": 61, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a7cbb76f1c751d40587190b62a23f46da1c571b/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a7cbb76f1c751d40587190b62a23f46da1c571b/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=3a7cbb76f1c751d40587190b62a23f46da1c571b", "patch": "@@ -328,7 +328,6 @@ static void dbxout_finish (const char *);\n static void dbxout_start_source_file (unsigned, const char *);\n static void dbxout_end_source_file (unsigned);\n static void dbxout_typedefs (tree);\n-static void dbxout_fptype_value (tree);\n static void dbxout_type_index (tree);\n #if DBX_CONTIN_LENGTH > 0\n static void dbxout_continue (void);\n@@ -806,60 +805,6 @@ dbxout_finish (const char *filename ATTRIBUTE_UNUSED)\n   debug_free_queue ();\n }\n \n-/* Output floating point type values used by the 'R' stab letter.\n-   These numbers come from include/aout/stab_gnu.h in binutils/gdb.\n-\n-   There are only 3 real/complex types defined, and we need 7/6.\n-   We use NF_SINGLE as a generic float type, and NF_COMPLEX as a generic\n-   complex type.  Since we have the type size anyways, we don't really need\n-   to distinguish between different FP types, we only need to distinguish\n-   between float and complex.  This works fine with gdb.\n-\n-   We only use this for complex types, to avoid breaking backwards\n-   compatibility for real types.  complex types aren't in ISO C90, so it is\n-   OK if old debuggers don't understand the debug info we emit for them.  */\n-\n-/* ??? These are supposed to be IEEE types, but we don't check for that.\n-   We could perhaps add additional numbers for non-IEEE types if we need\n-   them.  */\n-\n-static void\n-dbxout_fptype_value (tree type)\n-{\n-  char value = '0';\n-  enum machine_mode mode = TYPE_MODE (type);\n-\n-  if (TREE_CODE (type) == REAL_TYPE)\n-    {\n-      if (mode == SFmode)\n-\tvalue = '1';\n-      else if (mode == DFmode)\n-\tvalue = '2';\n-      else if (mode == TFmode || mode == XFmode)\n-\tvalue = '6';\n-      else\n-\t/* Use NF_SINGLE as a generic real type for other sizes.  */\n-\tvalue = '1';\n-    }\n-  else if (TREE_CODE (type) == COMPLEX_TYPE)\n-    {\n-      if (mode == SCmode)\n-\tvalue = '3';\n-      else if (mode == DCmode)\n-\tvalue = '4';\n-      else if (mode == TCmode || mode == XCmode)\n-\tvalue = '5';\n-      else\n-\t/* Use NF_COMPLEX as a generic complex type for other sizes.  */\n-\tvalue = '3';\n-    }\n-  else\n-    abort ();\n-\n-  putc (value, asmfile);\n-  CHARS (1);\n-}\n-\n /* Output the index of a type.  */\n \n static void\n@@ -1542,15 +1487,14 @@ dbxout_type (tree type, int full)\n       break;\n \n     case COMPLEX_TYPE:\n-      /* Differs from the REAL_TYPE by its new data type number */\n+      /* Differs from the REAL_TYPE by its new data type number.\n+\t R3 is NF_COMPLEX.  We don't try to use any of the other NF_*\n+\t codes since gdb doesn't care anyway.  */\n \n       if (TREE_CODE (TREE_TYPE (type)) == REAL_TYPE)\n \t{\n-\t  putc ('R', asmfile);\n-\t  CHARS (1);\n-\t  dbxout_fptype_value (type);\n-\t  putc (';', asmfile);\n-\t  CHARS (1);\n+\t  fputs (\"R3;\", asmfile);\n+\t  CHARS (3);\n \t  print_wide_int (2 * int_size_in_bytes (TREE_TYPE (type)));\n \t  fputs (\";0;\", asmfile);\n \t  CHARS (3);"}]}