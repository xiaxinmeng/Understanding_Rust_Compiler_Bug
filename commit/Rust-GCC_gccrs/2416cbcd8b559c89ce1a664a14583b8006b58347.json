{"sha": "2416cbcd8b559c89ce1a664a14583b8006b58347", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQxNmNiY2Q4YjU1OWM4OWNlMWE2NjRhMTQ1ODNiODAwNmI1ODM0Nw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-04T16:35:11Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-04T16:35:11Z"}, "message": "entered into RCS\n\nFrom-SVN: r1422", "tree": {"sha": "c111a81303ebeb69da18fec865b2858c0862edd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c111a81303ebeb69da18fec865b2858c0862edd7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2416cbcd8b559c89ce1a664a14583b8006b58347", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2416cbcd8b559c89ce1a664a14583b8006b58347", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2416cbcd8b559c89ce1a664a14583b8006b58347", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2416cbcd8b559c89ce1a664a14583b8006b58347/comments", "author": null, "committer": null, "parents": [{"sha": "1b53b61af0a93c6623526d73aefa74214cdb6cf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b53b61af0a93c6623526d73aefa74214cdb6cf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b53b61af0a93c6623526d73aefa74214cdb6cf7"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "f88c6931c7f837731cf08e91af657657f7e1fbef", "filename": "gcc/config/i386/isc.h", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2416cbcd8b559c89ce1a664a14583b8006b58347/gcc%2Fconfig%2Fi386%2Fisc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2416cbcd8b559c89ce1a664a14583b8006b58347/gcc%2Fconfig%2Fi386%2Fisc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fisc.h?ref=2416cbcd8b559c89ce1a664a14583b8006b58347", "patch": "@@ -0,0 +1,46 @@\n+/* Assembler-independent definitions for an Intel 386 running\n+   Interactive Unix System V. Specifically, this is for recent versions\n+   that support POSIX.  */\n+\n+/* Use crt1.o, not crt0.o, as a startup file, and crtn.o as a closing file. */\n+#undef STARTFILE_SPEC\n+#define STARTFILE_SPEC \\\n+  \"%{!shlib:%{posix:%{pg:mcrtp1.o%s}%{!pg:%{p:mcrtp1.o%s}%{!p:crtp1.o%s}}}\\\n+   %{!posix:%{pg:mcrt1.o%s}%{!pg:%{p:mcrt1.o%s}%{!p:crt1.o%s}}\\\n+   %{p:-L/lib/libp} %{pg:-L/lib/libp}}}\\\n+   %{shlib:%{posix:crtp1.o%s}%{!posix:crt1.o%s}} crtbegin.o%s\"\n+  \n+#define ENDFILE_SPEC \"crtend.o%s crtn.o%s\"\n+\n+/* Library spec */\n+#undef LIB_SPEC\n+#define LIB_SPEC \"%{posix:-lcposix} %{shlib:-lc_s} -lc -lg\"\n+\n+/* ISC 2.2 uses `char' for `wchar_t'.  */\n+#undef WCHAR_TYPE\n+#define WCHAR_TYPE \"char\"\n+\n+#undef WCHAR_TYPE_SIZE\n+#define WCHAR_TYPE_SIZE BITS_PER_UNIT\n+\n+#if 0\n+/* This is apparently not true: ISC versions up to 3.0, at least, use\n+   the standard calling sequence in which the called function pops the\n+   extra arg.  */\n+/* caller has to pop the extra argument passed to functions that return\n+   structures. */\n+\n+#undef RETURN_POPS_ARGS\n+#define RETURN_POPS_ARGS(FUNTYPE,SIZE)   \\\n+  (TREE_CODE (FUNTYPE) == IDENTIFIER_NODE ? 0\t\t\t\\\n+   : (TARGET_RTD\t\t\t\t\t\t\\\n+      && (TYPE_ARG_TYPES (FUNTYPE) == 0\t\t\t\t\\\n+\t  || (TREE_VALUE (tree_last (TYPE_ARG_TYPES (FUNTYPE)))\t\\\n+\t      == void_type_node))) ? (SIZE)\t\t\t\\\n+   : 0)\n+/* On other 386 systems, the last line looks like this:\n+   : (aggregate_value_p (FUNTYPE)) ? GET_MODE_SIZE (Pmode) : 0)  */\n+#endif\n+\n+/* Handle #pragma pack and #pragma weak.  */\n+#define HANDLE_SYSV_PRAGMA"}]}