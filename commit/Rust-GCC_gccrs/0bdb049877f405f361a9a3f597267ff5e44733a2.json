{"sha": "0bdb049877f405f361a9a3f597267ff5e44733a2", "node_id": "C_kwDOANBUbNoAKDBiZGIwNDk4NzdmNDA1ZjM2MWE5YTNmNTk3MjY3ZmY1ZTQ0NzMzYTI", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-02-18T00:16:39Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-02-18T00:16:39Z"}, "message": "Daily bump.", "tree": {"sha": "ca601e0ab5f3b55c94f802f536b1bc29ef8cebbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca601e0ab5f3b55c94f802f536b1bc29ef8cebbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0bdb049877f405f361a9a3f597267ff5e44733a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bdb049877f405f361a9a3f597267ff5e44733a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bdb049877f405f361a9a3f597267ff5e44733a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bdb049877f405f361a9a3f597267ff5e44733a2/comments", "author": null, "committer": null, "parents": [{"sha": "12a88e6e208fa45a449775bfb9353c777a6081aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12a88e6e208fa45a449775bfb9353c777a6081aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12a88e6e208fa45a449775bfb9353c777a6081aa"}], "stats": {"total": 203, "additions": 202, "deletions": 1}, "files": [{"sha": "5c4b09e60ea36f2670e4d5d6c40c861d15411c71", "filename": "gcc/ChangeLog", "status": "modified", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bdb049877f405f361a9a3f597267ff5e44733a2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bdb049877f405f361a9a3f597267ff5e44733a2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0bdb049877f405f361a9a3f597267ff5e44733a2", "patch": "@@ -1,3 +1,62 @@\n+2022-02-17  Jason Merrill  <jason@redhat.com>\n+\n+\t* tree.cc (warn_deprecated_use): Look for TYPE_STUB_DECL\n+\ton TYPE_MAIN_VARIANT.\n+\n+2022-02-17  Paul A. Clarke  <pc@us.ibm.com>\n+\n+\tPR target/104257\n+\t* config/rs6000/bmi2intrin.h: Uglify local variables.\n+\t* config/rs6000/emmintrin.h: Likewise.\n+\t* config/rs6000/mm_malloc.h: Likewise.\n+\t* config/rs6000/mmintrin.h: Likewise.\n+\t* config/rs6000/pmmintrin.h: Likewise.\n+\t* config/rs6000/smmintrin.h: Likewise.\n+\t* config/rs6000/tmmintrin.h: Likewise.\n+\t* config/rs6000/xmmintrin.h: Likewise.\n+\n+2022-02-17  Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\tPR target/104335\n+\t* config/rs6000/rs6000.cc (rs6000_emit_int_cmove): Return false\n+\tif the expected comparison's first operand is of mode MODE_CC.\n+\n+2022-02-17  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/104447\n+\t* lra-constraints.cc (spill_hard_reg_in_range): Initiate ignore\n+\thard reg set by lra_no_alloc_regs.\n+\n+2022-02-17  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR tree-optimization/104551\n+\tPR tree-optimization/103771\n+\t* match.pd (cond_expr_convert_p): Add types_match check when\n+\tconvert is extension.\n+\t* tree-vect-patterns.cc\n+\t(gimple_cond_expr_convert_p): Adjust comments.\n+\t(vect_recog_cond_expr_convert_pattern): Ditto.\n+\n+2022-02-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/104557\n+\t* valtrack.cc (debug_lowpart_subreg): Don't call gen_rtx_raw_SUBREG\n+\tif expr has VOIDmode.\n+\n+2022-02-17  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* config/i386/cpuid.h (bit_MPX): Removed.\n+\t(bit_BNDREGS): Ditto.\n+\t(bit_BNDCSR): Ditto.\n+\n+2022-02-17  Michael Meissner  <meissner@the-meissners.org>\n+\n+\tPR target/99708\n+\t* config/rs6000/rs6000-c.cc (rs6000_cpu_cpp_builtins): Define\n+\t__SIZEOF_IBM128__ if the IBM 128-bit long double type is created.\n+\tDefine __SIZEOF_FLOAT128__ if the IEEE 128-bit floating point type\n+\tis created.\n+\n 2022-02-16  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* gimple-range-gori.cc (gori_compute::condexpr_adjust): Use"}, {"sha": "577fe0fa3020f1abf317eaca80de852151f1c6bc", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bdb049877f405f361a9a3f597267ff5e44733a2/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bdb049877f405f361a9a3f597267ff5e44733a2/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=0bdb049877f405f361a9a3f597267ff5e44733a2", "patch": "@@ -1 +1 @@\n-20220217\n+20220218"}, {"sha": "dcd6e409945e7162075e919fe1543c6a7f48d27f", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bdb049877f405f361a9a3f597267ff5e44733a2/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bdb049877f405f361a9a3f597267ff5e44733a2/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=0bdb049877f405f361a9a3f597267ff5e44733a2", "patch": "@@ -1,3 +1,10 @@\n+2022-02-17  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/104576\n+\t* region-model.cc: Include \"calls.h\".\n+\t(region_model::on_call_pre): Use flags_from_decl_or_type to\n+\tgeneralize check for DECL_PURE_P to also check for ECF_CONST.\n+\n 2022-02-16  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/104560"}, {"sha": "df4ffe68dae66ed466c84350390792ef3a72f082", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bdb049877f405f361a9a3f597267ff5e44733a2/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bdb049877f405f361a9a3f597267ff5e44733a2/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=0bdb049877f405f361a9a3f597267ff5e44733a2", "patch": "@@ -1,3 +1,19 @@\n+2022-02-17  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* c-pragma.cc (handle_pragma_pack): Remove parameter name.\n+\t(handle_pragma_weak): Likewise.\n+\t(handle_pragma_scalar_storage_order): Likewise.\n+\t(handle_pragma_redefine_extname): Likewise.\n+\t(handle_pragma_visibility): Likewise.\n+\t(handle_pragma_diagnostic): Likewise.\n+\t(handle_pragma_target): Likewise.\n+\t(handle_pragma_optimize): Likewise.\n+\t(handle_pragma_push_options): Likewise.\n+\t(handle_pragma_pop_options): Likewise.\n+\t(handle_pragma_reset_options): Likewise.\n+\t(handle_pragma_message): Likewise.\n+\t(handle_pragma_float_const_decimal64): Likewise.\n+\n 2022-02-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/104531"}, {"sha": "ae4fd1740d2b35334ef6b484afa5e4989c55641d", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bdb049877f405f361a9a3f597267ff5e44733a2/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bdb049877f405f361a9a3f597267ff5e44733a2/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=0bdb049877f405f361a9a3f597267ff5e44733a2", "patch": "@@ -1,3 +1,10 @@\n+2022-02-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/104532\n+\t* c-parser.cc (c_parser_omp_variable_list): For CPP_DEREF, use\n+\tconvert_lvalue_to_rvalue and build_indirect_ref instead of\n+\tbuild_simple_mem_ref.\n+\n 2022-02-11  Richard Biener  <rguenther@suse.de>\n \n \t* gimple-parser.cc (c_parser_gimple_statement): Properly parse"}, {"sha": "d73ce1952f040299dbb0c34f9a3a4f36e9eabdc8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bdb049877f405f361a9a3f597267ff5e44733a2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bdb049877f405f361a9a3f597267ff5e44733a2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0bdb049877f405f361a9a3f597267ff5e44733a2", "patch": "@@ -1,3 +1,27 @@\n+2022-02-17  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/104539\n+\t* pt.cc (mark_decl_instantiated): Don't clear DECL_COMDAT.\n+\n+2022-02-17  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/90451\n+\t* decl2.cc (mark_single_function): New.\n+\t* cp-tree.h: Declare it.\n+\t* typeck.cc (cp_build_addr_expr_1): mark_used when making a PMF.\n+\t* semantics.cc (finish_qualified_id_expr): Not here.\n+\t(finish_id_expression_1): Or here.\n+\t(finish_decltype_type): Call mark_single_function.\n+\t* cvt.cc (convert_to_void): And here.\n+\t* pt.cc (convert_nontype_argument): And here.\n+\t* init.cc (build_offset_ref): Adjust assert.\n+\n+2022-02-17  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/104565\n+\t* semantics.cc (finish_compound_literal): Don't perform\n+\tnon-dependent expr folding before calling check_narrowing.\n+\n 2022-02-16  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/104507"}, {"sha": "21136be4a65eaf4e87226682255712b61d62ed44", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bdb049877f405f361a9a3f597267ff5e44733a2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bdb049877f405f361a9a3f597267ff5e44733a2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0bdb049877f405f361a9a3f597267ff5e44733a2", "patch": "@@ -1,3 +1,59 @@\n+2022-02-17  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/104539\n+\t* g++.dg/ipa/inline-4.C: New test.\n+\n+2022-02-17  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/warn/deprecated-16.C: New test.\n+\n+2022-02-17  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/90451\n+\t* g++.dg/warn/deprecated-14.C: New test.\n+\t* g++.dg/warn/deprecated-15.C: New test.\n+\n+2022-02-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR target/79754\n+\t* gcc.target/i386/pr79754.c: Add target dfp.\n+\n+2022-02-17  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/104447\n+\t* gcc.target/i386/pr104447.c: New.\n+\n+2022-02-17  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/104565\n+\t* g++.dg/template/non-dependent22.C: New test.\n+\n+2022-02-17  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* gcc.target/i386/pr104551.c: New test.\n+\n+2022-02-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/104557\n+\t* gcc.dg/dfp/pr104557.c: New test.\n+\n+2022-02-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/104532\n+\t* gcc.dg/gomp/pr104532.c: New test.\n+\n+2022-02-17  Michael Meissner  <meissner@the-meissners.org>\n+\n+\tPR target/99708\n+\t* gcc.target/powerpc/pr99708.c: New test.\n+\n+2022-02-17  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/104576\n+\t* gcc.dg/analyzer/torture/uninit-pr63311.c: New test.\n+\t* gcc.dg/analyzer/uninit-pr104576.c: New test.\n+\t* gfortran.dg/analyzer/uninit-pr63311.f90: New test.\n+\n 2022-02-16  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/104560"}, {"sha": "3bb777d942283f5113ffb033f8c07e36f88400ac", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bdb049877f405f361a9a3f597267ff5e44733a2/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bdb049877f405f361a9a3f597267ff5e44733a2/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=0bdb049877f405f361a9a3f597267ff5e44733a2", "patch": "@@ -1,3 +1,8 @@\n+2022-02-17  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* dwarf.c (find_address_ranges): Handle skeleton units.\n+\t(read_function_entry): Likewise.\n+\n 2022-02-16  Ian Lance Taylor  <iant@golang.org>\n \n \t* dwarf.c (build_address_map): Initialize DWARF 5 fields of unit."}, {"sha": "63ae4beb463e12a2169fcc4d6ae89bc4627b03cd", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bdb049877f405f361a9a3f597267ff5e44733a2/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bdb049877f405f361a9a3f597267ff5e44733a2/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=0bdb049877f405f361a9a3f597267ff5e44733a2", "patch": "@@ -1,3 +1,10 @@\n+2022-02-17  Mark Wielaard  <mark@klomp.org>\n+\n+\t* rust-demangle.c (rust_demangle_callback): Ignore everything\n+\tafter '.' char in sym for v0. For legacy symbols search\n+\tbackwards to find the last 'E' before any '.'.\n+\t* testsuite/rust-demangle-expected: Add new .suffix testcases.\n+\n 2022-01-31  Nick Clifton  <nickc@redhat.com>\n \n \tPR demangler/98886"}, {"sha": "0b19be261b1ccf50b83187de56317bfa386c9455", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bdb049877f405f361a9a3f597267ff5e44733a2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bdb049877f405f361a9a3f597267ff5e44733a2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0bdb049877f405f361a9a3f597267ff5e44733a2", "patch": "@@ -1,3 +1,23 @@\n+2022-02-17  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/104559\n+\t* doc/xml/manual/evolution.xml: Document deprecation.\n+\t* doc/html/manual/api.html: Regenerate.\n+\t* include/bits/stl_bvector.h (insert(const_iterator, const bool&)):\n+\tRemove default argument.\n+\t(insert(const_iterator)): New overload with deprecated attribute.\n+\t* testsuite/23_containers/vector/bool/modifiers/insert/104559.cc:\n+\tNew test.\n+\n+2022-02-17  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* python/libstdcxx/v6/printers.py (StdErrorCodePrinter): Replace\n+\tcode that call cat->name() on std::error_category objects.\n+\tIdentify known categories by symbol name and use a hardcoded\n+\tname. Print error code values as enumerators where appopriate.\n+\t* testsuite/libstdc++-prettyprinters/cxx11.cc: Adjust expected\n+\tname of custom category. Check io_errc and future_errc errors.\n+\n 2022-02-15  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/104542"}]}