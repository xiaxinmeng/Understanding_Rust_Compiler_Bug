{"sha": "0976f13bee1b7d472723ce5f37930b54f119feae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk3NmYxM2JlZTFiN2Q0NzI3MjNjZTVmMzc5MzBiNTRmMTE5ZmVhZQ==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2018-01-24T15:42:30Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2018-01-24T15:42:30Z"}, "message": "rs6000.md (*call_indirect_nonlocal_sysv<mode>): Simplify the clause that sets the length attribute.\n\n2018-01-24  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* config/rs6000/rs6000.md (*call_indirect_nonlocal_sysv<mode>):\n\tSimplify the clause that sets the length attribute.\n\t(*call_value_indirect_nonlocal_sysv<mode>): Likewise.\n\t(*sibcall_nonlocal_sysv<mode>): Clean up code block; simplify the\n\tclause that sets the length attribute.\n\t(*sibcall_value_nonlocal_sysv<mode>): Likewise.\n\nFrom-SVN: r257019", "tree": {"sha": "5750a7c7ba9a6ce92bfc6d2b8830ca438d3e3586", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5750a7c7ba9a6ce92bfc6d2b8830ca438d3e3586"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0976f13bee1b7d472723ce5f37930b54f119feae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0976f13bee1b7d472723ce5f37930b54f119feae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0976f13bee1b7d472723ce5f37930b54f119feae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0976f13bee1b7d472723ce5f37930b54f119feae/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "018e9cb5e6050e03944f426e300a1227cbbba3e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/018e9cb5e6050e03944f426e300a1227cbbba3e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/018e9cb5e6050e03944f426e300a1227cbbba3e2"}], "stats": {"total": 83, "additions": 33, "deletions": 50}, "files": [{"sha": "5920d361f9253e0bc528962179989ecf0c9fd898", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0976f13bee1b7d472723ce5f37930b54f119feae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0976f13bee1b7d472723ce5f37930b54f119feae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0976f13bee1b7d472723ce5f37930b54f119feae", "patch": "@@ -1,3 +1,12 @@\n+2018-01-24  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/rs6000.md (*call_indirect_nonlocal_sysv<mode>):\n+\tSimplify the clause that sets the length attribute.\n+\t(*call_value_indirect_nonlocal_sysv<mode>): Likewise.\n+\t(*sibcall_nonlocal_sysv<mode>): Clean up code block; simplify the\n+\tclause that sets the length attribute.\n+\t(*sibcall_value_nonlocal_sysv<mode>): Likewise.\n+\n 2018-01-24  Tom de Vries  <tom@codesourcery.com>\n \n \tPR target/83589"}, {"sha": "b668dc2742b9d709149c59b09a5d6d044e3df327", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 24, "deletions": 50, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0976f13bee1b7d472723ce5f37930b54f119feae/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0976f13bee1b7d472723ce5f37930b54f119feae/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=0976f13bee1b7d472723ce5f37930b54f119feae", "patch": "@@ -10481,18 +10481,12 @@\n   [(set_attr \"type\" \"jmpreg,jmpreg,jmpreg,jmpreg\")\n    (set (attr \"length\")\n \t(cond [(and (eq (symbol_ref \"which_alternative\") (const_int 0))\n-\t\t    (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n-\t\t\t(const_int 1)))\n-\t\t  (const_string \"4\")\n-\t       (and (eq (symbol_ref \"which_alternative\") (const_int 0))\n \t\t    (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n \t\t\t(const_int 0)))\n \t\t  (const_string \"8\")\n-\t       (eq (symbol_ref \"which_alternative\") (const_int 1))\n-\t          (const_string \"4\")\n \t       (and (eq (symbol_ref \"which_alternative\") (const_int 2))\n-\t\t    (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n-\t\t\t(const_int 1)))\n+\t\t    (ne (symbol_ref \"rs6000_speculate_indirect_jumps\")\n+\t\t\t(const_int 0)))\n \t\t  (const_string \"8\")\n \t       (and (eq (symbol_ref \"which_alternative\") (const_int 2))\n \t\t    (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n@@ -10594,18 +10588,12 @@\n   [(set_attr \"type\" \"jmpreg,jmpreg,jmpreg,jmpreg\")\n    (set (attr \"length\")\n \t(cond [(and (eq (symbol_ref \"which_alternative\") (const_int 0))\n-\t\t    (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n-\t\t\t(const_int 1)))\n-\t\t  (const_string \"4\")\n-\t       (and (eq (symbol_ref \"which_alternative\") (const_int 0))\n \t\t    (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n \t\t\t(const_int 0)))\n \t\t  (const_string \"8\")\n-\t       (eq (symbol_ref \"which_alternative\") (const_int 1))\n-\t          (const_string \"4\")\n \t       (and (eq (symbol_ref \"which_alternative\") (const_int 2))\n-\t\t    (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n-\t\t\t(const_int 1)))\n+\t\t    (ne (symbol_ref \"rs6000_speculate_indirect_jumps\")\n+\t\t\t(const_int 0)))\n \t\t  (const_string \"8\")\n \t       (and (eq (symbol_ref \"which_alternative\") (const_int 2))\n \t\t    (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n@@ -10992,47 +10980,40 @@\n   \"(DEFAULT_ABI == ABI_DARWIN\n     || DEFAULT_ABI == ABI_V4)\n    && (INTVAL (operands[2]) & CALL_LONG) == 0\"\n-  \"*\n {\n   if (INTVAL (operands[2]) & CALL_V4_SET_FP_ARGS)\n-    output_asm_insn (\\\"crxor 6,6,6\\\", operands);\n+    output_asm_insn (\"crxor 6,6,6\", operands);\n \n   else if (INTVAL (operands[2]) & CALL_V4_CLEAR_FP_ARGS)\n-    output_asm_insn (\\\"creqv 6,6,6\\\", operands);\n+    output_asm_insn (\"creqv 6,6,6\", operands);\n \n   if (which_alternative >= 2)\n     {\n       if (rs6000_speculate_indirect_jumps)\n-\treturn \\\"b%T0\\\";\n+\treturn \"b%T0\";\n       else\n \t/* Can use CR0 since it is volatile across sibcalls.  */\n-\treturn \\\"crset 2\\;beq%T0-\\;b $\\\";\n+\treturn \"crset 2\\;beq%T0-\\;b $\";\n     }\n   else if (DEFAULT_ABI == ABI_V4 && flag_pic)\n     {\n       gcc_assert (!TARGET_SECURE_PLT);\n-      return \\\"b %z0@plt\\\";\n+      return \"b %z0@plt\";\n     }\n   else\n-    return \\\"b %z0\\\";\n-}\"\n+    return \"b %z0\";\n+}\n   [(set_attr \"type\" \"branch\")\n    (set (attr \"length\")\n-\t(cond [(eq (symbol_ref \"which_alternative\") (const_int 0))\n-\t\t  (const_string \"4\")\n-\t       (eq (symbol_ref \"which_alternative\") (const_int 1))\n+\t(cond [(eq (symbol_ref \"which_alternative\") (const_int 1))\n \t\t  (const_string \"8\")\n-\t       (and (eq (symbol_ref \"which_alternative\") (const_int 2))\n-\t\t    (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n-\t\t\t(const_int 1)))\n-\t\t  (const_string \"4\")\n \t       (and (eq (symbol_ref \"which_alternative\") (const_int 2))\n \t\t    (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n \t\t\t(const_int 0)))\n \t\t  (const_string \"12\")\n \t       (and (eq (symbol_ref \"which_alternative\") (const_int 3))\n-\t\t    (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n-\t\t\t(const_int 1)))\n+\t\t    (ne (symbol_ref \"rs6000_speculate_indirect_jumps\")\n+\t\t\t(const_int 0)))\n \t\t  (const_string \"8\")\n \t       (and (eq (symbol_ref \"which_alternative\") (const_int 3))\n \t\t    (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n@@ -11049,47 +11030,40 @@\n   \"(DEFAULT_ABI == ABI_DARWIN\n     || DEFAULT_ABI == ABI_V4)\n    && (INTVAL (operands[3]) & CALL_LONG) == 0\"\n-  \"*\n {\n   if (INTVAL (operands[3]) & CALL_V4_SET_FP_ARGS)\n-    output_asm_insn (\\\"crxor 6,6,6\\\", operands);\n+    output_asm_insn (\"crxor 6,6,6\", operands);\n \n   else if (INTVAL (operands[3]) & CALL_V4_CLEAR_FP_ARGS)\n-    output_asm_insn (\\\"creqv 6,6,6\\\", operands);\n+    output_asm_insn (\"creqv 6,6,6\", operands);\n \n   if (which_alternative >= 2)\n     {\n       if (rs6000_speculate_indirect_jumps)\n-\treturn \\\"b%T1\\\";\n+\treturn \"b%T1\";\n       else\n \t/* Can use CR0 since it is volatile across sibcalls.  */\n-\treturn \\\"crset 2\\;beq%T1-\\;b $\\\";\n+\treturn \"crset 2\\;beq%T1-\\;b $\";\n     }\n   else if (DEFAULT_ABI == ABI_V4 && flag_pic)\n     {\n       gcc_assert (!TARGET_SECURE_PLT);\n-      return \\\"b %z1@plt\\\";\n+      return \"b %z1@plt\";\n     }\n   else\n-    return \\\"b %z1\\\";\n-}\"\n+    return \"b %z1\";\n+}\n   [(set_attr \"type\" \"branch\")\n    (set (attr \"length\")\n-\t(cond [(eq (symbol_ref \"which_alternative\") (const_int 0))\n-\t\t  (const_string \"4\")\n-\t       (eq (symbol_ref \"which_alternative\") (const_int 1))\n+\t(cond [(eq (symbol_ref \"which_alternative\") (const_int 1))\n \t\t  (const_string \"8\")\n-\t       (and (eq (symbol_ref \"which_alternative\") (const_int 2))\n-\t\t    (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n-\t\t\t(const_int 1)))\n-\t\t  (const_string \"4\")\n \t       (and (eq (symbol_ref \"which_alternative\") (const_int 2))\n \t\t    (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n \t\t\t(const_int 0)))\n \t\t  (const_string \"12\")\n \t       (and (eq (symbol_ref \"which_alternative\") (const_int 3))\n-\t\t    (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")\n-\t\t\t(const_int 1)))\n+\t\t    (ne (symbol_ref \"rs6000_speculate_indirect_jumps\")\n+\t\t\t(const_int 0)))\n \t\t  (const_string \"8\")\n \t       (and (eq (symbol_ref \"which_alternative\") (const_int 3))\n \t\t    (eq (symbol_ref \"rs6000_speculate_indirect_jumps\")"}]}