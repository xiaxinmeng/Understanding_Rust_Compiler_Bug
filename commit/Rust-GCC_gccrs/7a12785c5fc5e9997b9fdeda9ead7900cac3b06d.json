{"sha": "7a12785c5fc5e9997b9fdeda9ead7900cac3b06d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ExMjc4NWM1ZmM1ZTk5OTdiOWZkZWRhOWVhZDc5MDBjYWMzYjA2ZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2010-10-22T19:43:01Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2010-10-22T19:43:01Z"}, "message": "Use ABS/NEG+USE for vector modes as well.\n\nFrom-SVN: r165856", "tree": {"sha": "6b6bdcecf91e53fe69e70820af534e3d99b87add", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b6bdcecf91e53fe69e70820af534e3d99b87add"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a12785c5fc5e9997b9fdeda9ead7900cac3b06d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a12785c5fc5e9997b9fdeda9ead7900cac3b06d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a12785c5fc5e9997b9fdeda9ead7900cac3b06d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a12785c5fc5e9997b9fdeda9ead7900cac3b06d/comments", "author": null, "committer": null, "parents": [{"sha": "c3fb2eb4b68b65e915ef235a383e66d58b6ba87a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3fb2eb4b68b65e915ef235a383e66d58b6ba87a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3fb2eb4b68b65e915ef235a383e66d58b6ba87a"}], "stats": {"total": 59, "additions": 42, "deletions": 17}, "files": [{"sha": "3f46d48691051c40bbe5fee447471ecdf74118c6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a12785c5fc5e9997b9fdeda9ead7900cac3b06d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a12785c5fc5e9997b9fdeda9ead7900cac3b06d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a12785c5fc5e9997b9fdeda9ead7900cac3b06d", "patch": "@@ -1,3 +1,10 @@\n+2010-10-22  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/i386/i386.c (ix86_expand_fp_absneg_operator): Produce\n+\tNEG+USE for vectors as well.\n+\t* config/i386/i386.md (*absneg<VEC_FLOAT_MODE>2): New pattern\n+\tand splitter.\n+\n 2010-10-22  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.c (DEFAULT_SWITCH_CURTAILS_COMPILATION,"}, {"sha": "ee88b064e9a7503681f7d4834fcc718c77e98875", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a12785c5fc5e9997b9fdeda9ead7900cac3b06d/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a12785c5fc5e9997b9fdeda9ead7900cac3b06d/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=7a12785c5fc5e9997b9fdeda9ead7900cac3b06d", "patch": "@@ -15901,7 +15901,7 @@ void\n ix86_expand_fp_absneg_operator (enum rtx_code code, enum machine_mode mode,\n \t\t\t\trtx operands[])\n {\n-  rtx mask, set, use, clob, dst, src;\n+  rtx mask, set, dst, src;\n   bool use_sse = false;\n   bool vector_mode = VECTOR_MODE_P (mode);\n   enum machine_mode vmode = mode;\n@@ -15929,26 +15929,26 @@ ix86_expand_fp_absneg_operator (enum rtx_code code, enum machine_mode mode,\n   dst = operands[0];\n   src = operands[1];\n \n-  if (vector_mode)\n-    {\n-      set = gen_rtx_fmt_ee (code == NEG ? XOR : AND, mode, src, mask);\n-      set = gen_rtx_SET (VOIDmode, dst, set);\n-      emit_insn (set);\n-    }\n-  else\n+  set = gen_rtx_fmt_e (code, mode, src);\n+  set = gen_rtx_SET (VOIDmode, dst, set);\n+\n+  if (mask)\n     {\n-      set = gen_rtx_fmt_e (code, mode, src);\n-      set = gen_rtx_SET (VOIDmode, dst, set);\n-      if (mask)\n-        {\n-          use = gen_rtx_USE (VOIDmode, mask);\n+      rtx use, clob;\n+      rtvec par;\n+\n+      use = gen_rtx_USE (VOIDmode, mask);\n+      if (vector_mode)\n+\tpar = gen_rtvec (2, set, use);\n+      else\n+\t{\n           clob = gen_rtx_CLOBBER (VOIDmode, gen_rtx_REG (CCmode, FLAGS_REG));\n-          emit_insn (gen_rtx_PARALLEL (VOIDmode,\n-\t\t\t\t       gen_rtvec (3, set, use, clob)));\n+\t  par = gen_rtvec (3, set, use, clob);\n         }\n-      else\n-\temit_insn (set);\n+      emit_insn (gen_rtx_PARALLEL (VOIDmode, par));\n     }\n+  else\n+    emit_insn (set);\n }\n \n /* Expand a copysign operation.  Special case operand 0 being a constant.  */"}, {"sha": "d80be8850beaa5462007c0f370bbf5d2786383a5", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a12785c5fc5e9997b9fdeda9ead7900cac3b06d/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a12785c5fc5e9997b9fdeda9ead7900cac3b06d/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=7a12785c5fc5e9997b9fdeda9ead7900cac3b06d", "patch": "@@ -585,6 +585,24 @@\n   \"\"\n   \"ix86_expand_fp_absneg_operator (<CODE>, <MODE>mode, operands); DONE;\")\n \n+(define_insn_and_split \"*absneg<mode>2\"\n+  [(set (match_operand:VEC_FLOAT_MODE 0 \"register_operand\" \"=x,x\")\n+\t(match_operator:VEC_FLOAT_MODE 3 \"absneg_operator\"\n+\t  [(match_operand:VEC_FLOAT_MODE 1 \"nonimmediate_operand\" \"0,xm\")]))\n+   (use (match_operand:VEC_FLOAT_MODE 2 \"nonimmediate_operand\" \"xm,0\"))]\n+  \"SSE_VEC_FLOAT_MODE_P (<MODE>mode) || AVX256_VEC_FLOAT_MODE_P (<MODE>mode)\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(const_int 0)]\n+{\n+  rtx set;\n+  set = gen_rtx_fmt_ee (GET_CODE (operands[3]) == NEG ? XOR : AND,\n+\t\t\t<MODE>mode, operands[1], operands[2]);\n+  set = gen_rtx_SET (VOIDmode, operands[0], set);\n+  emit_insn (set);\n+  DONE;\n+})\n+\n (define_expand \"<plusminus_insn><mode>3\"\n   [(set (match_operand:AVX256MODEF2P 0 \"register_operand\" \"\")\n \t(plusminus:AVX256MODEF2P"}]}