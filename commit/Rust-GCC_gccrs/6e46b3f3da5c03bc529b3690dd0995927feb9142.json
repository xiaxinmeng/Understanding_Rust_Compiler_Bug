{"sha": "6e46b3f3da5c03bc529b3690dd0995927feb9142", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU0NmIzZjNkYTVjMDNiYzUyOWIzNjkwZGQwOTk1OTI3ZmViOTE0Mg==", "commit": {"author": {"name": "Sergei Trofimovich", "email": "siarheit@google.com", "date": "2020-08-02T11:03:55Z"}, "committer": {"name": "Sergei Trofimovich", "email": "siarheit@google.com", "date": "2020-08-02T18:35:47Z"}, "message": "var-tracking: fix uninitialised use of 'in_pending' [PR96404]\n\nr11-2447-g:1212cfad093 (\"Improve var-tracking dataflow\niteration order\") changed 'in_pending' initialization\nfrom:\n\n    in_pending = sbitmap_alloc (last_basic_block_for_fn (cfun));\n    bitmap_ones (in_pending);\n\nto more complex partial bit population algorithm. Due to presence\nof uninitialized bits gcc started injecting extra debug entries\nin seemigly arbitrary locations and started failing stage2/stage3\nbootstrap comparison.\n\nvalgrind detected unilitialized bits as:\n\n  Conditional jump or move depends on uninitialised value(s)\n     at 0xDBED3B: vt_find_locations() (var-tracking.c:7230)\n     by 0xDBF2FB: variable_tracking_main_1() (var-tracking.c:10519)\n     ...\n   Uninitialised value was created by a heap allocation\n     at 0x483779F: malloc (vg_replace_malloc.c:307)\n     by 0x14EE80B: xmalloc (xmalloc.c:147)\n     by 0x14911F9: sbitmap_alloc(unsigned int) (sbitmap.c:51)\n     ...\n\nThe fix explicitly initializes 'in_pending' bitmap with zeros.\n\n2020-08-02  Sergei Trofimovich  <siarheit@google.com>\n\ngcc/\n\n\tPR bootstrap/96404\n\t* var-tracking.c (vt_find_locations): Fully initialize\n\tall 'in_pending' bits.", "tree": {"sha": "a55dc90d1d343070ee18bfdf8d991e6e3e1ac7db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a55dc90d1d343070ee18bfdf8d991e6e3e1ac7db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e46b3f3da5c03bc529b3690dd0995927feb9142", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e46b3f3da5c03bc529b3690dd0995927feb9142", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e46b3f3da5c03bc529b3690dd0995927feb9142", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e46b3f3da5c03bc529b3690dd0995927feb9142/comments", "author": {"login": "trofi", "id": 226650, "node_id": "MDQ6VXNlcjIyNjY1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/226650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trofi", "html_url": "https://github.com/trofi", "followers_url": "https://api.github.com/users/trofi/followers", "following_url": "https://api.github.com/users/trofi/following{/other_user}", "gists_url": "https://api.github.com/users/trofi/gists{/gist_id}", "starred_url": "https://api.github.com/users/trofi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trofi/subscriptions", "organizations_url": "https://api.github.com/users/trofi/orgs", "repos_url": "https://api.github.com/users/trofi/repos", "events_url": "https://api.github.com/users/trofi/events{/privacy}", "received_events_url": "https://api.github.com/users/trofi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "trofi", "id": 226650, "node_id": "MDQ6VXNlcjIyNjY1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/226650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trofi", "html_url": "https://github.com/trofi", "followers_url": "https://api.github.com/users/trofi/followers", "following_url": "https://api.github.com/users/trofi/following{/other_user}", "gists_url": "https://api.github.com/users/trofi/gists{/gist_id}", "starred_url": "https://api.github.com/users/trofi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trofi/subscriptions", "organizations_url": "https://api.github.com/users/trofi/orgs", "repos_url": "https://api.github.com/users/trofi/repos", "events_url": "https://api.github.com/users/trofi/events{/privacy}", "received_events_url": "https://api.github.com/users/trofi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3b2bf98fffb0760120285e7d883c082fa3c2187", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3b2bf98fffb0760120285e7d883c082fa3c2187", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3b2bf98fffb0760120285e7d883c082fa3c2187"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "52aea47a053bdc4515498c047ba68d0ce8faa89f", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e46b3f3da5c03bc529b3690dd0995927feb9142/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e46b3f3da5c03bc529b3690dd0995927feb9142/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=6e46b3f3da5c03bc529b3690dd0995927feb9142", "patch": "@@ -7096,6 +7096,7 @@ vt_find_locations (void)\n   in_worklist = sbitmap_alloc (last_basic_block_for_fn (cfun));\n   in_pending = sbitmap_alloc (last_basic_block_for_fn (cfun));\n   bitmap_clear (in_worklist);\n+  bitmap_clear (in_pending);\n \n   /* We're performing the dataflow iteration independently over the\n      toplevel SCCs plus leading non-cyclic entry blocks and separately"}]}