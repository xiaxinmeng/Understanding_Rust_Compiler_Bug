{"sha": "8a0b1aa4c117e064a0d9e3f92e7c3e9f56d43a8a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGEwYjFhYTRjMTE3ZTA2NGEwZDllM2Y5MmU3YzNlOWY1NmQ0M2E4YQ==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2010-03-19T12:37:28Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2010-03-19T12:37:28Z"}, "message": "re PR target/43305 (ICE: in emit_unop_insn, at optabs.c:3838 with -Os -ffast-math and ilogbl())\n\n\tPR 43305\n\t* builtins.c (expand_builtin_interclass_mathfn,\n\texpand_builtin_signbit): Use maybe_emit_unop_insn, emit libcalls\n\tif that fails.\n\ntestsuite/\n\t* gcc.dg/pr43305.c: New testcase.\n\nFrom-SVN: r157567", "tree": {"sha": "750b7bfe08e957981b58a98957f22c84fb66776e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/750b7bfe08e957981b58a98957f22c84fb66776e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a0b1aa4c117e064a0d9e3f92e7c3e9f56d43a8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a0b1aa4c117e064a0d9e3f92e7c3e9f56d43a8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a0b1aa4c117e064a0d9e3f92e7c3e9f56d43a8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a0b1aa4c117e064a0d9e3f92e7c3e9f56d43a8a/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "afcd05a759ab3133422fa471021ed00657971ebc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afcd05a759ab3133422fa471021ed00657971ebc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afcd05a759ab3133422fa471021ed00657971ebc"}], "stats": {"total": 42, "additions": 38, "deletions": 4}, "files": [{"sha": "d0176663e3c402ca0dfd98fdcdc855b5f62cebc4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a0b1aa4c117e064a0d9e3f92e7c3e9f56d43a8a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a0b1aa4c117e064a0d9e3f92e7c3e9f56d43a8a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8a0b1aa4c117e064a0d9e3f92e7c3e9f56d43a8a", "patch": "@@ -1,3 +1,10 @@\n+2010-03-19  Michael Matz  <matz@suse.de>\n+\n+\tPR target/43305\n+\t* builtins.c (expand_builtin_interclass_mathfn,\n+\texpand_builtin_signbit): Use maybe_emit_unop_insn, emit libcalls\n+\tif that fails.\n+\n 2010-03-19  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/43415"}, {"sha": "a68e743b61652ac5448047e06eb028db3ef723a3", "filename": "gcc/builtins.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a0b1aa4c117e064a0d9e3f92e7c3e9f56d43a8a/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a0b1aa4c117e064a0d9e3f92e7c3e9f56d43a8a/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=8a0b1aa4c117e064a0d9e3f92e7c3e9f56d43a8a", "patch": "@@ -2312,6 +2312,8 @@ expand_builtin_interclass_mathfn (tree exp, rtx target, rtx subtarget)\n \n   if (icode != CODE_FOR_nothing)\n     {\n+      rtx last = get_last_insn ();\n+      tree orig_arg = arg;\n       /* Make a suitable register to place result in.  */\n       if (!target\n \t  || GET_MODE (target) != TYPE_MODE (TREE_TYPE (exp)))\n@@ -2332,8 +2334,10 @@ expand_builtin_interclass_mathfn (tree exp, rtx target, rtx subtarget)\n \n       /* Compute into TARGET.\n \t Set TARGET to wherever the result comes back.  */\n-      emit_unop_insn (icode, target, op0, UNKNOWN);\n-      return target;\n+      if (maybe_emit_unop_insn (icode, target, op0, UNKNOWN))\n+\treturn target;\n+      delete_insns_since (last);\n+      CALL_EXPR_ARG (exp, 0) = orig_arg;\n     }\n \n   return NULL_RTX;\n@@ -5197,9 +5201,11 @@ expand_builtin_signbit (tree exp, rtx target)\n   icode = signbit_optab->handlers [(int) fmode].insn_code;\n   if (icode != CODE_FOR_nothing)\n     {\n+      rtx last = get_last_insn ();\n       target = gen_reg_rtx (TYPE_MODE (TREE_TYPE (exp)));\n-      emit_unop_insn (icode, target, temp, UNKNOWN);\n-      return target;\n+      if (maybe_emit_unop_insn (icode, target, temp, UNKNOWN))\n+\treturn target;\n+      delete_insns_since (last);\n     }\n \n   /* For floating point formats without a sign bit, implement signbit"}, {"sha": "39705477a34d251f0395a2af273b1f079f225b40", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a0b1aa4c117e064a0d9e3f92e7c3e9f56d43a8a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a0b1aa4c117e064a0d9e3f92e7c3e9f56d43a8a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8a0b1aa4c117e064a0d9e3f92e7c3e9f56d43a8a", "patch": "@@ -1,3 +1,8 @@\n+2010-03-19  Michael Matz  <matz@suse.de>\n+\n+\tPR target/43305\n+\t* gcc.dg/pr43305.c: New testcase.\n+\n 2010-03-19  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/43415"}, {"sha": "c8aeaf23ccc47216b4a8c96b8cc78d3383a43300", "filename": "gcc/testsuite/gcc.dg/pr43305.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a0b1aa4c117e064a0d9e3f92e7c3e9f56d43a8a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43305.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a0b1aa4c117e064a0d9e3f92e7c3e9f56d43a8a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43305.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43305.c?ref=8a0b1aa4c117e064a0d9e3f92e7c3e9f56d43a8a", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Os -ffast-math\" } */\n+extern int ilogbl(long double);\n+extern int printf(const char *format, ...);\n+\n+__attribute__((noinline, noclone))\n+int foo(long double x)\n+{\n+  return ilogbl(x);\n+}\n+\n+int main()\n+{\n+  printf(\"%d\\n\", foo(100));\n+  return 0;\n+}"}]}