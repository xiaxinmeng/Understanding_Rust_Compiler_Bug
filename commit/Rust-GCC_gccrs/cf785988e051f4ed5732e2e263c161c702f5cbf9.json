{"sha": "cf785988e051f4ed5732e2e263c161c702f5cbf9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y3ODU5ODhlMDUxZjRlZDU3MzJlMmUyNjNjMTYxYzcwMmY1Y2JmOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-12-21T00:18:26Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-12-21T00:18:26Z"}, "message": "badalloc1.C (arena_size): New.\n\n        * g++.old-deja/g++.eh/badalloc1.C (arena_size): New.\n        (arena): Use it.\n        (malloc): Correct allocation logic.  Abort if we fill up the\n        arena before initialization complete.\n        (realloc): Correct allocation logic.\n\nFrom-SVN: r48224", "tree": {"sha": "43184316b3cc1fcd686f2dc492f0427d143166d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43184316b3cc1fcd686f2dc492f0427d143166d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf785988e051f4ed5732e2e263c161c702f5cbf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf785988e051f4ed5732e2e263c161c702f5cbf9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf785988e051f4ed5732e2e263c161c702f5cbf9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf785988e051f4ed5732e2e263c161c702f5cbf9/comments", "author": null, "committer": null, "parents": [{"sha": "5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5"}], "stats": {"total": 111, "additions": 77, "deletions": 34}, "files": [{"sha": "56f40ec828673fd4bdd80be7a111f7edb2a8f0a9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf785988e051f4ed5732e2e263c161c702f5cbf9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf785988e051f4ed5732e2e263c161c702f5cbf9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cf785988e051f4ed5732e2e263c161c702f5cbf9", "patch": "@@ -1,3 +1,11 @@\n+2001-12-20  Richard Henderson  <rth@redhat.com>\n+\n+\t* g++.old-deja/g++.eh/badalloc1.C (arena_size): New.\n+\t(arena): Use it.\n+\t(malloc): Correct allocation logic.  Abort if we fill up the\n+\tarena before initialization complete.\n+\t(realloc): Correct allocation logic.\n+\n 2001-12-20  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.c-torture/compile/20011219-2.c: New test.\n@@ -52,7 +60,7 @@ Mon Dec 17 16:54:56 2001  Nicola Pero  <nicola@brainstorm.co.uk>\n 2001-12-13  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* g++.old-deja/g++.jason/template31.C: Remove templates for classes\n-        std::__malloc_alloc_template<0> and\n+\tstd::__malloc_alloc_template<0> and\n \tstd::__default_alloc_template<false, 0>.\n \n Thu Dec 13 10:35:33 2001  Nicola Pero  <n.pero@mi.flashnet.it>\n@@ -117,13 +125,13 @@ Thu Dec 13 10:35:33 2001  Nicola Pero  <n.pero@mi.flashnet.it>\n \n 2001-10-08  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * gcc.c-torture/execute/builtin-types-compatible-p.c: New.\n+\t* gcc.c-torture/execute/builtin-types-compatible-p.c: New.\n \n-        * gcc.dg/builtin-choose-expr.c: New.\n+\t* gcc.dg/builtin-choose-expr.c: New.\n \n 2001-12-07  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * gcc.dg/altivec-2.c: New.\n+\t* gcc.dg/altivec-2.c: New.\n \n 2001-12-07  Richard Henderson  <rth@redhat.com>\n \n@@ -281,7 +289,7 @@ Fri Nov 23 15:55:44 2001  Jeffrey A Law  (law@cygnus.com)\n \n 2001-11-17  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * gcc.dg/altivec-1.c: Fix typo.\n+\t* gcc.dg/altivec-1.c: Fix typo.\n \n 2001-11-20  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n@@ -306,7 +314,7 @@ Fri Nov 23 15:55:44 2001  Jeffrey A Law  (law@cygnus.com)\n \n 2001-11-19  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * gcc.dg/altivec-1.c: New.\n+\t* gcc.dg/altivec-1.c: New.\n \n 2001-11-19  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n@@ -434,7 +442,7 @@ Fri Nov 23 15:55:44 2001  Jeffrey A Law  (law@cygnus.com)\n 2001-11-01  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n \n \t* gcc.c-torture/compile/20010327-1.c: Use __SIZE_TYPE__ instead\n-        of unsigned long.\n+\tof unsigned long.\n \n 2001-10-30  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -663,7 +671,7 @@ Mon Oct 29 21:19:53 2001  Nicola Pero  <n.pero@mi.flashnet.it>\n \n 2001-09-15  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * gcc.c-torture/execute/980223.c: Change type of addr from long\n+\t* gcc.c-torture/execute/980223.c: Change type of addr from long\n \tto char *.\n \n 2001-09-15  Hans-Peter Nilsson  <hp@axis.com>\n@@ -769,7 +777,7 @@ Mon Oct 29 21:19:53 2001  Nicola Pero  <n.pero@mi.flashnet.it>\n \n 2001-08-25  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * gcc.dg/asm-names.c (ymain): New.\n+\t* gcc.dg/asm-names.c (ymain): New.\n \n 2001-08-22  Geoffrey Keating  <geoffk@redhat.com>\n \n@@ -788,7 +796,7 @@ Mon Oct 29 21:19:53 2001  Nicola Pero  <n.pero@mi.flashnet.it>\n \n 2001-08-21  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * gcc.c-torture/execute/divmod-1.c: Convert to ANSI.\n+\t* gcc.c-torture/execute/divmod-1.c: Convert to ANSI.\n \n 2001-08-20  Janis Johnson  <janis187@us.ibm.com>\n \n@@ -896,7 +904,7 @@ Mon Oct 29 21:19:53 2001  Nicola Pero  <n.pero@mi.flashnet.it>\n \t* g77.dg/ffixed-line-length-7.f\n \t* g77.dg/ffixed-line-length-72.f\n \t* g77.dg/ffixed-line-length-none.f\n-        * g77.dg/ffree-form-1.f\n+\t* g77.dg/ffree-form-1.f\n \t* g77.dg/fno-backslash.f\n \t* g77.dg/fno-f90-1.f\n \t* g77.dg/fno-fixed-form-1.f"}, {"sha": "806856f24b176965f9e6970ea8948b71819e04ec", "filename": "gcc/testsuite/g++.old-deja/g++.eh/badalloc1.C", "status": "modified", "additions": 58, "deletions": 23, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf785988e051f4ed5732e2e263c161c702f5cbf9/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fbadalloc1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf785988e051f4ed5732e2e263c161c702f5cbf9/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fbadalloc1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fbadalloc1.C?ref=cf785988e051f4ed5732e2e263c161c702f5cbf9", "patch": "@@ -2,43 +2,78 @@\n // Copyright (C) 2000 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 6 June 2000 <nathan@codesourcery.com>\n \n-// Check we can throw a bad_alloc exception when malloc dies\n+// Check we can throw a bad_alloc exception when malloc dies.\n \n-static __SIZE_TYPE__ arena[64]; // so things can initialize\n+typedef __SIZE_TYPE__ size_t;\n+extern \"C\" void abort();\n+extern \"C\" void *memcpy(void *, const void *, size_t);\n+\n+// Assume that STACK_SIZE defined implies a system that does not have a\n+// large data space either, and additionally that we're not linking against\n+// a shared libstdc++ (which requires quite a bit more initialization space).\n+#ifdef STACK_SIZE\n+const int arena_size = 256;\n+#else\n+const int arena_size = 32768;\n+#endif\n+\n+struct object\n+{\n+  size_t size __attribute__((aligned));\n+};\n+\n+static char arena[arena_size] __attribute__((aligned));\n+static size_t pos;\n+\n+// So we can force a failure when needed.\n static int fail;\n-static unsigned pos;\n \n-extern \"C\" void *malloc (__SIZE_TYPE__ size)\n+extern \"C\" void *malloc (size_t size)\n {\n-  __SIZE_TYPE__ *p = &arena[pos];\n+  object *p = reinterpret_cast<object *>(&arena[pos]);\n \n   if (fail)\n     return 0;\n-  \n-  arena[pos] = size;\n-  size = (size + 4 * sizeof (__SIZE_TYPE__) - 1)\n-         / sizeof (__SIZE_TYPE__) & ~3; // Yes, this is a hack\n-  pos += size + 4;\n-  return p + 4;\n+\n+  p->size = size;\n+  size = (size + __alignof__(object) + 1) & - __alignof__(object);\n+  pos += size + sizeof(object);\n+\n+  // Verify that we didn't run out of memory before getting initialized.\n+  if (pos > arena_size)\n+    abort ();\n+\n+  return p + 1;\n }\n+\n extern \"C\" void free (void *)\n {\n-  \n }\n-extern \"C\" void *realloc (void *p, __SIZE_TYPE__ size)\n+\n+extern \"C\" void *realloc (void *p, size_t size)\n {\n-  void *r = malloc (size);\n-  unsigned int oldSize;\n-  \n-  if (r && p)\n+  void *r;\n+\n+  if (p)\n     {\n-      oldSize = ((__SIZE_TYPE__ *)p)[-4];\n-      if (oldSize < size)\n-        size = oldSize;\n-      while (size--)\n-        ((char *)r)[size] = ((char *)p)[size];\n+      object *o = reinterpret_cast<object *>(p) - 1;\n+      size_t old_size = o->size;\n+\n+      if (old_size >= size)\n+\t{\n+\t  r = p;\n+\t  o->size = size;\n+\t}\n+      else\n+\t{\n+\t  r = malloc (size);\n+\t  memcpy (r, p, old_size);\n+\t  free (p);\n+\t}\n     }\n-  free (p);\n+  else\n+    r = malloc (size);\n+\n   return r;\n }\n "}]}