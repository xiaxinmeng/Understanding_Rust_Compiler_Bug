{"sha": "a7a296abd331696c8be3c1f3e00d3fc74b153917", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdhMjk2YWJkMzMxNjk2YzhiZTNjMWYzZTAwZDNmYzc0YjE1MzkxNw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-11-06T13:02:15Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-11-06T13:02:15Z"}, "message": "2011-11-6  Richard Guenther  <rguenther@suse.de>\n\n\t* ipa-prop.c (ipa_modify_call_arguments): Re-compute\n\tinlinable flag.\n\nFrom-SVN: r181027", "tree": {"sha": "80c92726c6812f1bc8a02ca1e36f38a94c96b1fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80c92726c6812f1bc8a02ca1e36f38a94c96b1fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7a296abd331696c8be3c1f3e00d3fc74b153917", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7a296abd331696c8be3c1f3e00d3fc74b153917", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7a296abd331696c8be3c1f3e00d3fc74b153917", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7a296abd331696c8be3c1f3e00d3fc74b153917/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f7e531cf982da6f84f670916abe453f993757c8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7e531cf982da6f84f670916abe453f993757c8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7e531cf982da6f84f670916abe453f993757c8d"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "a96d516f91af04c537d2e8f2423e708d21ec3c2d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7a296abd331696c8be3c1f3e00d3fc74b153917/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7a296abd331696c8be3c1f3e00d3fc74b153917/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a7a296abd331696c8be3c1f3e00d3fc74b153917", "patch": "@@ -1,3 +1,8 @@\n+2011-11-6  Richard Guenther  <rguenther@suse.de>\n+\n+\t* ipa-prop.c (ipa_modify_call_arguments): Re-compute\n+\tinlinable flag.\n+\n 2011-11-06  Ira Rosen  <ira.rosen@linaro.org>\n \n \t* tree-vectorizer.h (vectorizable_condition): Add argument."}, {"sha": "7946aca0bff4f67675be771347bf612b1a974515", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7a296abd331696c8be3c1f3e00d3fc74b153917/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7a296abd331696c8be3c1f3e00d3fc74b153917/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=a7a296abd331696c8be3c1f3e00d3fc74b153917", "patch": "@@ -2568,8 +2568,11 @@ ipa_modify_call_arguments (struct cgraph_edge *cs, gimple stmt,\n   gimple_set_block (new_stmt, gimple_block (stmt));\n   if (gimple_has_location (stmt))\n     gimple_set_location (new_stmt, gimple_location (stmt));\n-  gimple_call_copy_flags (new_stmt, stmt);\n   gimple_call_set_chain (new_stmt, gimple_call_chain (stmt));\n+  gimple_call_copy_flags (new_stmt, stmt);\n+  if (gimple_call_cannot_inline_p (stmt))\n+    gimple_call_set_cannot_inline\n+      (new_stmt, !gimple_check_call_matching_types (new_stmt, callee_decl));\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {"}]}