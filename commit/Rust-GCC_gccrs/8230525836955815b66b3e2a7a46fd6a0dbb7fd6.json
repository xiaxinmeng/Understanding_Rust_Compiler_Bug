{"sha": "8230525836955815b66b3e2a7a46fd6a0dbb7fd6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIzMDUyNTgzNjk1NTgxNWI2NmIzZTJhN2E0NmZkNmEwZGJiN2ZkNg==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@cygnus.com", "date": "1999-08-31T13:56:41Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "1999-08-31T13:56:41Z"}, "message": "mips.c (machine_dependent_reorg): Force a barrier to output the local constant pool if...\n\nFri Aug 20 13:43:41 1999  Andrew Haley  <aph@cygnus.com>\n\n\t* config/mips/mips.c (machine_dependent_reorg): Force a\n\tbarrier to output the local constant pool if a barrier hasn't\n\tbeen found at a natural point in the instruction stream.\n\nFrom-SVN: r29004", "tree": {"sha": "e4b75b386d3224a945a249843d054795e1103c69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4b75b386d3224a945a249843d054795e1103c69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8230525836955815b66b3e2a7a46fd6a0dbb7fd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8230525836955815b66b3e2a7a46fd6a0dbb7fd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8230525836955815b66b3e2a7a46fd6a0dbb7fd6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8230525836955815b66b3e2a7a46fd6a0dbb7fd6/comments", "author": null, "committer": null, "parents": [{"sha": "04b9e2bf66e4c90ea63239d63bfa3c8e19a55ecb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04b9e2bf66e4c90ea63239d63bfa3c8e19a55ecb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04b9e2bf66e4c90ea63239d63bfa3c8e19a55ecb"}], "stats": {"total": 56, "additions": 36, "deletions": 20}, "files": [{"sha": "417a342ede38eb816dc8926d7e5af09887870568", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8230525836955815b66b3e2a7a46fd6a0dbb7fd6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8230525836955815b66b3e2a7a46fd6a0dbb7fd6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8230525836955815b66b3e2a7a46fd6a0dbb7fd6", "patch": "@@ -1,3 +1,9 @@\n+Fri Aug 20 13:43:41 1999  Andrew Haley  <aph@cygnus.com>\n+\n+\t* config/mips/mips.c (machine_dependent_reorg): Force a\n+\tbarrier to output the local constant pool if a barrier hasn't\n+\tbeen found at a natural point in the instruction stream.  \n+\n Mon Aug 30 22:04:36 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* c-parse.in (language_string): Constify."}, {"sha": "51838eab96f1c67849bbcfb1eccfbb60a60e48ce", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 30, "deletions": 20, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8230525836955815b66b3e2a7a46fd6a0dbb7fd6/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8230525836955815b66b3e2a7a46fd6a0dbb7fd6/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=8230525836955815b66b3e2a7a46fd6a0dbb7fd6", "patch": "@@ -8372,7 +8372,7 @@ void\n machine_dependent_reorg (first)\n      rtx first;\n {\n-  int insns_len, max_internal_pool_size, pool_size, addr;\n+  int insns_len, max_internal_pool_size, pool_size, addr, first_constant_ref;\n   rtx insn;\n   struct constant *constants;\n \n@@ -8440,6 +8440,7 @@ machine_dependent_reorg (first)\n \n   constants = NULL;\n   addr = 0;\n+  first_constant_ref = -1;\n \n   for (insn = first; insn; insn = NEXT_INSN (insn))\n     {\n@@ -8498,6 +8499,9 @@ machine_dependent_reorg (first)\n \t\t\t\t\tSET_DEST (PATTERN (insn)),\n \t\t\t\t\tnewsrc);\n \t      INSN_CODE (insn) = -1;\n+\n+\t      if (first_constant_ref < 0)\n+\t\tfirst_constant_ref = addr;\n \t    }\n \t}\n \n@@ -8529,27 +8533,33 @@ machine_dependent_reorg (first)\n \t  if (constants != NULL)\n \t    dump_constants (constants, insn);\n \t  constants = NULL;\n+\t  first_constant_ref = -1;\n \t}\n+      \n+      if (constants != NULL\n+\t       && (NEXT_INSN (insn) == NULL \n+\t\t   || (first_constant_ref >= 0 \n+\t\t       && (((addr - first_constant_ref)\n+\t\t\t    + 2 /* for alignment */\n+\t\t\t    + 2 /* for a short jump insn */\n+\t\t\t    + pool_size)\n+\t\t\t   >= 0x8000))))\n+\t{\n+\t  /* If we haven't had a barrier within 0x8000 bytes of a\n+             constant reference or we are at the end of the function,\n+             emit a barrier now. */\n \n-      /* ??? If we don't find a barrier within 0x8000 bytes of\n-         instructions and constants in CONSTANTS, we need to invent\n-         one.  This seems sufficiently unlikely that I am not going to\n-         worry about it.  */\n-    }\n-\n-  if (constants != NULL)\n-    {\n-      rtx label, jump, barrier;\n-\n-      label = gen_label_rtx ();\n-      jump = emit_jump_insn_after (gen_jump (label), get_last_insn ());\n-      JUMP_LABEL (jump) = label;\n-      LABEL_NUSES (label) = 1;\n-      barrier = emit_barrier_after (jump);\n-      emit_label_after (label, barrier);\n-      dump_constants (constants, barrier);\n-      constants = NULL;\n-    }\n+\t  rtx label, jump, barrier;\n+\t      \n+\t  label = gen_label_rtx ();\n+\t  jump = emit_jump_insn_after (gen_jump (label), insn);\n+\t  JUMP_LABEL (jump) = label;\n+\t  LABEL_NUSES (label) = 1;\n+\t  barrier = emit_barrier_after (jump);\n+\t  emit_label_after (label, barrier);\n+\t  first_constant_ref = -1;\n+\t}\n+     }\n \n   /* ??? If we output all references to a constant in internal\n      constants table, we don't need to output the constant in the real"}]}