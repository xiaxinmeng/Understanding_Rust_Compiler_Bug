{"sha": "fb4cbb9f9e0f3d3adc88f10fadb09fd6e7ca86f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI0Y2JiOWY5ZTBmM2QzYWRjODhmMTBmYWRiMDlmZDZlN2NhODZmMQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2010-01-27T16:36:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-01-27T16:36:57Z"}, "message": "re PR debug/42861 (Spill slots not tracked during var-tracking)\n\n\tPR debug/42861\n\t* var-tracking.c (val_store): Add modified argument, obey it.\n\tAdjust callers.\n\t(count_uses): Move down logging of main.\n\t(compute_bb_dataflow): Use val_store for MO_VAL_USEs that\n\tdon't need resolution.\n\t(emit_notes_in_bb): Likewise.\n\nFrom-SVN: r156292", "tree": {"sha": "8a4270718d3d004cf539ed6d9f74c79c31c4ebcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a4270718d3d004cf539ed6d9f74c79c31c4ebcc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb4cbb9f9e0f3d3adc88f10fadb09fd6e7ca86f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb4cbb9f9e0f3d3adc88f10fadb09fd6e7ca86f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb4cbb9f9e0f3d3adc88f10fadb09fd6e7ca86f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb4cbb9f9e0f3d3adc88f10fadb09fd6e7ca86f1/comments", "author": null, "committer": null, "parents": [{"sha": "e87da26377c895769d3ac3706833b0f8290bebb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e87da26377c895769d3ac3706833b0f8290bebb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e87da26377c895769d3ac3706833b0f8290bebb9"}], "stats": {"total": 44, "additions": 33, "deletions": 11}, "files": [{"sha": "1ab9b18e1d75416e28ec831a6a3621aca7e47682", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb4cbb9f9e0f3d3adc88f10fadb09fd6e7ca86f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb4cbb9f9e0f3d3adc88f10fadb09fd6e7ca86f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb4cbb9f9e0f3d3adc88f10fadb09fd6e7ca86f1", "patch": "@@ -1,3 +1,13 @@\n+2010-01-27  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR debug/42861\n+\t* var-tracking.c (val_store): Add modified argument, obey it.\n+\tAdjust callers.\n+\t(count_uses): Move down logging of main.\n+\t(compute_bb_dataflow): Use val_store for MO_VAL_USEs that\n+\tdon't need resolution.\n+\t(emit_notes_in_bb): Likewise.\n+\n 2010-01-27  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/42878"}, {"sha": "58a11c1031bd5bf9a5c8e5390e46fb2df14ec571", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 23, "deletions": 11, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb4cbb9f9e0f3d3adc88f10fadb09fd6e7ca86f1/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb4cbb9f9e0f3d3adc88f10fadb09fd6e7ca86f1/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=fb4cbb9f9e0f3d3adc88f10fadb09fd6e7ca86f1", "patch": "@@ -1518,10 +1518,12 @@ var_mem_delete (dataflow_set *set, rtx loc, bool clobber)\n   delete_variable_part (set, loc, dv_from_decl (decl), offset);\n }\n \n-/* Map a value to a location it was just stored in.  */\n+/* Bind a value to a location it was just stored in.  If MODIFIED\n+   holds, assume the location was modified, detaching it from any\n+   values bound to it.  */\n \n static void\n-val_store (dataflow_set *set, rtx val, rtx loc, rtx insn)\n+val_store (dataflow_set *set, rtx val, rtx loc, rtx insn, bool modified)\n {\n   cselib_val *v = CSELIB_VAL_PTR (val);\n \n@@ -1547,7 +1549,8 @@ val_store (dataflow_set *set, rtx val, rtx loc, rtx insn)\n \n   if (REG_P (loc))\n     {\n-      var_regno_delete (set, REGNO (loc));\n+      if (modified)\n+\tvar_regno_delete (set, REGNO (loc));\n       var_reg_decl_set (set, loc, VAR_INIT_STATUS_INITIALIZED,\n \t\t\tdv_from_value (val), 0, NULL_RTX, INSERT);\n     }\n@@ -4530,11 +4533,6 @@ count_uses (rtx *ploc, void *cuip)\n       cselib_val *val;\n       enum machine_mode mode = GET_MODE (loc);\n \n-      VTI (cui->bb)->n_mos++;\n-\n-      if (dump_file && (dump_flags & TDF_DETAILS))\n-\tlog_op_type (loc, cui->bb, cui->insn, mopt, dump_file);\n-\n       switch (mopt)\n \t{\n \tcase MO_VAL_LOC:\n@@ -4550,12 +4548,15 @@ count_uses (rtx *ploc, void *cuip)\n \t    {\n \t      enum machine_mode address_mode\n \t\t= targetm.addr_space.address_mode (MEM_ADDR_SPACE (loc));\n-\t      val = cselib_lookup (XEXP (loc, 0), address_mode, false);\n+\t      val = cselib_lookup (XEXP (loc, 0), address_mode, 0);\n \n \t      if (val && !cselib_preserved_value_p (val))\n \t\t{\n \t\t  VTI (cui->bb)->n_mos++;\n \t\t  cselib_preserve_value (val);\n+\t\t  if (dump_file && (dump_flags & TDF_DETAILS))\n+\t\t    log_op_type (XEXP (loc, 0), cui->bb, cui->insn,\n+\t\t\t\t MO_VAL_USE, dump_file);\n \t\t}\n \t    }\n \n@@ -4578,6 +4579,9 @@ count_uses (rtx *ploc, void *cuip)\n \t\t    {\n \t\t      VTI (cui->bb)->n_mos++;\n \t\t      cselib_preserve_value (oval);\n+\t\t      if (dump_file && (dump_flags & TDF_DETAILS))\n+\t\t\tlog_op_type (loc, cui->bb, cui->insn,\n+\t\t\t\t     MO_VAL_USE, dump_file);\n \t\t    }\n \t\t}\n \n@@ -4592,6 +4596,10 @@ count_uses (rtx *ploc, void *cuip)\n \tdefault:\n \t  break;\n \t}\n+\n+      VTI (cui->bb)->n_mos++;\n+      if (dump_file && (dump_flags & TDF_DETAILS))\n+\tlog_op_type (loc, cui->bb, cui->insn, mopt, dump_file);\n     }\n \n   return 0;\n@@ -5331,6 +5339,8 @@ compute_bb_dataflow (basic_block bb)\n \n \t      if (VAL_NEEDS_RESOLUTION (loc))\n \t\tval_resolve (out, val, vloc, insn);\n+\t      else\n+\t\tval_store (out, val, uloc, insn, false);\n \n \t      if (VAL_HOLDS_TRACK_EXPR (loc))\n \t\t{\n@@ -5422,7 +5432,7 @@ compute_bb_dataflow (basic_block bb)\n \t      else if (REG_P (uloc))\n \t\tvar_regno_delete (out, REGNO (uloc));\n \n-\t      val_store (out, val, vloc, insn);\n+\t      val_store (out, val, vloc, insn, true);\n \t    }\n \t    break;\n \n@@ -6951,6 +6961,8 @@ emit_notes_in_bb (basic_block bb, dataflow_set *set)\n \n \t      if (VAL_NEEDS_RESOLUTION (loc))\n \t\tval_resolve (set, val, vloc, insn);\n+\t      else\n+\t\tval_store (set, val, uloc, insn, false);\n \n \t      if (VAL_HOLDS_TRACK_EXPR (loc))\n \t\t{\n@@ -7038,7 +7050,7 @@ emit_notes_in_bb (basic_block bb, dataflow_set *set)\n \t      else if (REG_P (uloc))\n \t\tvar_regno_delete (set, REGNO (uloc));\n \n-\t      val_store (set, val, vloc, insn);\n+\t      val_store (set, val, vloc, insn, true);\n \n \t      emit_notes_for_changes (NEXT_INSN (insn), EMIT_NOTE_BEFORE_INSN,\n \t\t\t\t      set->vars);"}]}