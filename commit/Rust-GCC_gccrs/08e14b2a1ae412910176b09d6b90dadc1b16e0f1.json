{"sha": "08e14b2a1ae412910176b09d6b90dadc1b16e0f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhlMTRiMmExYWU0MTI5MTAxNzZiMDlkNmI5MGRhZGMxYjE2ZTBmMQ==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2009-02-05T07:09:44Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2009-02-05T07:09:44Z"}, "message": "re PR tree-optimization/39100 (-fstrict-aliasing miscompilation)\n\n2009-02-05  Daniel Berlin  <dberlin@dberlin.org>\n\t    Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/39100\n\t* tree-ssa-structalias.c (do_ds_constraint): Actually do what the\n\tcomment says and add edges.\n\n\nCo-Authored-By: Richard Guenther <rguenther@suse.de>\n\nFrom-SVN: r143951", "tree": {"sha": "d1dd76fcc7b537a9e780a3c14fab8f100ff66dfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1dd76fcc7b537a9e780a3c14fab8f100ff66dfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08e14b2a1ae412910176b09d6b90dadc1b16e0f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08e14b2a1ae412910176b09d6b90dadc1b16e0f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08e14b2a1ae412910176b09d6b90dadc1b16e0f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08e14b2a1ae412910176b09d6b90dadc1b16e0f1/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "37d5c6baac1e1222567a750163ba102d0cadab0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37d5c6baac1e1222567a750163ba102d0cadab0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37d5c6baac1e1222567a750163ba102d0cadab0b"}], "stats": {"total": 92, "additions": 85, "deletions": 7}, "files": [{"sha": "11b461ec83de84a9c34647776390662114a0ea95", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08e14b2a1ae412910176b09d6b90dadc1b16e0f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08e14b2a1ae412910176b09d6b90dadc1b16e0f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=08e14b2a1ae412910176b09d6b90dadc1b16e0f1", "patch": "@@ -1,3 +1,10 @@\n+2009-02-05  Daniel Berlin  <dberlin@dberlin.org>\n+\t    Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/39100\n+\t* tree-ssa-structalias.c (do_ds_constraint): Actually do what the\n+\tcomment says and add edges.\n+\n 2009-02-05  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR c/35435"}, {"sha": "33ba5fadec368a7da76496a8cc75587a1ae3e3dc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08e14b2a1ae412910176b09d6b90dadc1b16e0f1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08e14b2a1ae412910176b09d6b90dadc1b16e0f1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=08e14b2a1ae412910176b09d6b90dadc1b16e0f1", "patch": "@@ -1,3 +1,7 @@\n+2009-02-05  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\t* gcc.c-torture/execute/pr39100.c: New.\n+\n 2009-02-05  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR c/35435"}, {"sha": "5cb9e25d437240eda3b5b4380982ac8ca3dce23a", "filename": "gcc/testsuite/gcc.c-torture/execute/pr39100.c", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08e14b2a1ae412910176b09d6b90dadc1b16e0f1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39100.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08e14b2a1ae412910176b09d6b90dadc1b16e0f1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39100.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39100.c?ref=08e14b2a1ae412910176b09d6b90dadc1b16e0f1", "patch": "@@ -0,0 +1,65 @@\n+/* Bad PTA results (incorrect store handling) was causing us to delete\n+   *na = 0 store.  */\n+\n+typedef struct E\n+{\n+  int p;\n+  struct E *n;\n+} *EP;   \n+\n+typedef struct C\n+{\n+  EP x;\n+  short cn, cp; \n+} *CP;\n+\n+__attribute__((noinline)) CP\n+foo (CP h, EP x)\n+{\n+  EP pl = 0, *pa = &pl;\n+  EP nl = 0, *na = &nl;\n+  EP n;\n+\n+  while (x)\n+    {\n+      n = x->n;   \n+      if ((x->p & 1) == 1) \n+        {\n+          h->cp++;\n+          *pa = x;\n+          pa = &((*pa)->n);\n+        }\n+      else\n+        {\n+          h->cn++;\n+          *na = x;\n+          na = &((*na)->n);\n+        }    \n+      x = n;\n+    }\n+  *pa = nl;\n+  *na = 0;\n+  h->x = pl;\n+  return h;\n+}\n+\n+int\n+main (void)\n+{  \n+  struct C c = { 0, 0, 0 };\n+  struct E e[2] = { { 0, &e[1] }, { 1, 0 } };\n+  EP p;\n+\n+  foo (&c, &e[0]);\n+  if (c.cn != 1 || c.cp != 1)\n+    __builtin_abort ();\n+  if (c.x != &e[1])\n+    __builtin_abort ();\n+  if (e[1].n != &e[0])\n+    __builtin_abort ();\n+  if (e[0].n)\n+    __builtin_abort ();\n+  return 0;  \n+}\n+\n+"}, {"sha": "03f7a4ade65a0dcb96878d757b723ba371356c3f", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08e14b2a1ae412910176b09d6b90dadc1b16e0f1/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08e14b2a1ae412910176b09d6b90dadc1b16e0f1/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=08e14b2a1ae412910176b09d6b90dadc1b16e0f1", "patch": "@@ -1657,15 +1657,17 @@ do_ds_constraint (constraint_t c, bitmap delta)\n \t  t = find (v->id);\n \t  tmp = get_varinfo (t)->solution;\n \n-\t  if (set_union_with_increment (tmp, sol, 0))\n+            if (add_graph_edge (graph, t, rhs))\n \t    {\n-\t      get_varinfo (t)->solution = tmp;\n-\t      if (t == rhs)\n-\t\tsol = get_varinfo (rhs)->solution;\n-\t      if (!TEST_BIT (changed, t))\n+                if (bitmap_ior_into (get_varinfo (t)->solution, sol))\n \t\t{\n-\t\t  SET_BIT (changed, t);\n-\t\t  changed_count++;\n+                    if (t == rhs)\n+                      sol = get_varinfo (rhs)->solution;\n+                    if (!TEST_BIT (changed, t))\n+                      {\n+                        SET_BIT (changed, t);\n+                        changed_count++;\n+                      }\n \t\t}\n \t    }\n \t}"}]}