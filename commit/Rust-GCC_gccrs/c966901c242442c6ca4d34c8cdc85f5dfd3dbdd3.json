{"sha": "c966901c242442c6ca4d34c8cdc85f5dfd3dbdd3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk2NjkwMWMyNDI0NDJjNmNhNGQzNGM4Y2RjODVmNWRmZDNkYmRkMw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2000-04-13T11:14:29Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2000-04-13T11:14:29Z"}, "message": "class.c (build_base_field): Reformat comment.\n\n\t* class.c (build_base_field): Reformat comment.\n\n\t* inc/cxxabi.h (stddef.h): Comment inclusion.\n\t(__base_class_info::__offset): Comment shift.\n\nFrom-SVN: r33137", "tree": {"sha": "4498ffd27452d510805354348579d1f937fddc09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4498ffd27452d510805354348579d1f937fddc09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c966901c242442c6ca4d34c8cdc85f5dfd3dbdd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c966901c242442c6ca4d34c8cdc85f5dfd3dbdd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c966901c242442c6ca4d34c8cdc85f5dfd3dbdd3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c966901c242442c6ca4d34c8cdc85f5dfd3dbdd3/comments", "author": null, "committer": null, "parents": [{"sha": "5eec0563bbf419e126406df1fcc48ffd11d34279", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eec0563bbf419e126406df1fcc48ffd11d34279", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5eec0563bbf419e126406df1fcc48ffd11d34279"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "19b5e4ecfeb2a7c368f3004395ec40b7d19b4725", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c966901c242442c6ca4d34c8cdc85f5dfd3dbdd3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c966901c242442c6ca4d34c8cdc85f5dfd3dbdd3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c966901c242442c6ca4d34c8cdc85f5dfd3dbdd3", "patch": "@@ -1,3 +1,10 @@\n+2000-04-13  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* class.c (build_base_field): Reformat comment.\n+\t\n+\t* inc/cxxabi.h (stddef.h): Comment inclusion.\n+\t(__base_class_info::__offset): Comment shift.\n+\n 2000-04-12  Mark Mitchell  <mark@codesourcery.com>\n \n \t* cp-tree.h (IDENTIFIER_CTOR_OR_DTOR_P): New macro."}, {"sha": "e89c733dcd485e5ac4f8b69bc34479f9633db049", "filename": "gcc/cp/class.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c966901c242442c6ca4d34c8cdc85f5dfd3dbdd3/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c966901c242442c6ca4d34c8cdc85f5dfd3dbdd3/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=c966901c242442c6ca4d34c8cdc85f5dfd3dbdd3", "patch": "@@ -3668,9 +3668,9 @@ layout_empty_base (binfo, eoc, binfo_offsets)\n }\n \n /* Build a FIELD_DECL for the base given by BINFO in the class\n-   *indicated by RLI.  If the new object is non-empty, clear *EMPTY_P.\n+   indicated by RLI.  If the new object is non-empty, clear *EMPTY_P.\n    *BASE_ALIGN is a running maximum of the alignments of any base\n-   *class.  */\n+   class.  */\n \n static void\n build_base_field (rli, binfo, empty_p, base_align, v)"}, {"sha": "56c07d5cdd8ab166f57c95477f3961141ea3285f", "filename": "gcc/cp/inc/cxxabi.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c966901c242442c6ca4d34c8cdc85f5dfd3dbdd3/gcc%2Fcp%2Finc%2Fcxxabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c966901c242442c6ca4d34c8cdc85f5dfd3dbdd3/gcc%2Fcp%2Finc%2Fcxxabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finc%2Fcxxabi.h?ref=c966901c242442c6ca4d34c8cdc85f5dfd3dbdd3", "patch": "@@ -24,6 +24,8 @@\n #ifdef __cplusplus\n \n #include <typeinfo>\n+// This should really be cstddef, but that currently is not available when\n+// building the runtime.\n #include <stddef.h>\n \n namespace __cxxabiv1\n@@ -179,7 +181,11 @@ class __base_class_info\n   bool __is_public_p () const\n     { return vmi_offset_flags & public_mask; }\n   std::ptrdiff_t __offset () const\n-    { return std::ptrdiff_t (vmi_offset_flags) >> offset_shift; }\n+    { \n+      // This shift, being of a signed type, is implementation defined. GCC\n+      // implements such shifts as arithmetic, which is what we want.\n+      return std::ptrdiff_t (vmi_offset_flags) >> offset_shift;\n+    }\n };\n \n /* type information for a class */"}]}