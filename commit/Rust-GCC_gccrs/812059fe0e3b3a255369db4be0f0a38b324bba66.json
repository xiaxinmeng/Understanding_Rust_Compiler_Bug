{"sha": "812059fe0e3b3a255369db4be0f0a38b324bba66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODEyMDU5ZmUwZTNiM2EyNTUzNjlkYjRiZTBmMGEzOGIzMjRiYmE2Ng==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1997-06-09T22:19:29Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1997-06-09T22:19:29Z"}, "message": "flow.c (find_basic_blocks): Eliminate more dead code, enables dead throws to be eliminated.\n\n        * flow.c (find_basic_blocks): Eliminate more dead code, enables\n        dead throws to be eliminated.\n\nFrom-SVN: r14193", "tree": {"sha": "b06fc867801c6ab3b77311ec5cbbf212f8f061ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b06fc867801c6ab3b77311ec5cbbf212f8f061ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/812059fe0e3b3a255369db4be0f0a38b324bba66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/812059fe0e3b3a255369db4be0f0a38b324bba66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/812059fe0e3b3a255369db4be0f0a38b324bba66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/812059fe0e3b3a255369db4be0f0a38b324bba66/comments", "author": null, "committer": null, "parents": [{"sha": "a0051c852062468aba4fb4bc2cca2356497d58c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0051c852062468aba4fb4bc2cca2356497d58c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0051c852062468aba4fb4bc2cca2356497d58c5"}], "stats": {"total": 53, "additions": 46, "deletions": 7}, "files": [{"sha": "9e1d30671692f0ae27ed6c32234a187f5c7fb1a9", "filename": "gcc/flow.c", "status": "modified", "additions": 46, "deletions": 7, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/812059fe0e3b3a255369db4be0f0a38b324bba66/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/812059fe0e3b3a255369db4be0f0a38b324bba66/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=812059fe0e3b3a255369db4be0f0a38b324bba66", "patch": "@@ -376,6 +376,7 @@ find_basic_blocks (f, nonlocal_label_list)\n   /* List of label_refs to all labels whose addresses are taken\n      and used as data.  */\n   rtx label_value_list;\n+  int label_value_list_marked_live;\n   rtx x, note;\n   enum rtx_code prev_code, code;\n   int depth, pass;\n@@ -384,6 +385,7 @@ find_basic_blocks (f, nonlocal_label_list)\n  restart:\n \n   label_value_list = 0;\n+  label_value_list_marked_live = 0;\n   block_live_static = block_live;\n   bzero (block_live, n_basic_blocks);\n   bzero (block_marked, n_basic_blocks);\n@@ -460,13 +462,6 @@ find_basic_blocks (f, nonlocal_label_list)\n     abort ();\n   n_basic_blocks = i + 1;\n \n-  /* Don't delete the labels (in this function)\n-     that are referenced by non-jump instructions.  */\n-\n-  for (x = label_value_list; x; x = XEXP (x, 1))\n-    if (! LABEL_REF_NONLOCAL_P (x))\n-      block_live[BLOCK_NUM (XEXP (x, 0))] = 1;\n-\n   for (x = forced_labels; x; x = XEXP (x, 1))\n     if (! LABEL_REF_NONLOCAL_P (x))\n       block_live[BLOCK_NUM (XEXP (x, 0))] = 1;\n@@ -533,6 +528,21 @@ find_basic_blocks (f, nonlocal_label_list)\n \t\t    \n \t    if (computed_jump)\n \t      {\n+\t\tif (label_value_list_marked_live == 0)\n+\t\t  {\n+\t\t    label_value_list_marked_live = 1;\n+\n+\t\t    /* This could be made smarter by only considering\n+\t\t       these live, if the computed goto is live.  */\n+\n+\t\t    /* Don't delete the labels (in this function) that\n+\t\t       are referenced by non-jump instructions.  */\n+\n+\t\t    for (x = label_value_list; x; x = XEXP (x, 1))\n+\t\t      if (! LABEL_REF_NONLOCAL_P (x))\n+\t\t\tblock_live[BLOCK_NUM (XEXP (x, 0))] = 1;\n+\t\t  }\n+\n \t\tfor (x = label_value_list; x; x = XEXP (x, 1))\n \t\t  mark_label_ref (gen_rtx (LABEL_REF, VOIDmode, XEXP (x, 0)),\n \t\t\t\t  insn, 0);\n@@ -565,6 +575,13 @@ find_basic_blocks (f, nonlocal_label_list)\n \t       gotos.  */\n \t  }\n \n+      /* All blocks associated with labels in label_value_list are\n+\t trivially considered as marked live, if the list is empty.\n+\t We do this to speed up the below code.  */\n+\n+      if (label_value_list == 0)\n+\tlabel_value_list_marked_live = 1;\n+\n       /* Pass over all blocks, marking each block that is reachable\n \t and has not yet been marked.\n \t Keep doing this until, in one pass, no blocks have been marked.\n@@ -584,6 +601,28 @@ find_basic_blocks (f, nonlocal_label_list)\n \t\tinsn = basic_block_end[i];\n \t\tif (GET_CODE (insn) == JUMP_INSN)\n \t\t  mark_label_ref (PATTERN (insn), insn, 0);\n+\n+\t\tif (label_value_list_marked_live == 0)\n+\t\t  /* Now that we know that this block is live, mark as\n+\t\t     live, all the blocks that we might be able to get\n+\t\t     to as live.  */\n+\n+\t\t  for (insn = basic_block_head[i];\n+\t\t       insn != basic_block_end[i];\n+\t\t       insn = NEXT_INSN (insn))\n+\t\t    {\n+\t\t      if (GET_RTX_CLASS (GET_CODE (insn)) == 'i')\n+\t\t\t{\n+\t\t\t  for (note = REG_NOTES (insn);\n+\t\t\t       note;\n+\t\t\t       note = XEXP (note, 1))\n+\t\t\t    if (REG_NOTE_KIND (note) == REG_LABEL)\n+\t\t\t      {\n+\t\t\t\tx = XEXP (note, 0);\n+\t\t\t\tblock_live[BLOCK_NUM (x)] = 1;\n+\t\t\t      }\n+\t\t\t}\n+\t\t    }\n \t      }\n \t}\n "}]}