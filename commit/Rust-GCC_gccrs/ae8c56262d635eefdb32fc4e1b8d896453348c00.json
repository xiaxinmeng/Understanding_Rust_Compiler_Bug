{"sha": "ae8c56262d635eefdb32fc4e1b8d896453348c00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU4YzU2MjYyZDYzNWVlZmRiMzJmYzRlMWI4ZDg5NjQ1MzM0OGMwMA==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-11-05T09:14:36Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-12-14T15:51:48Z"}, "message": "[Ada] Update comment for processing of pragma Assertion_Policy\n\ngcc/ada/\n\n\t* sa_messages.ads: Reference Subprogram_Variant in the comment\n\tfor Assertion_Check.\n\t* sem_prag.adb (Analyze_Pragma): Add Subprogram_Variant as an\n\tID_ASSERTION_KIND; move Default_Initial_Condition as an\n\tRM_ASSERTION_KIND.", "tree": {"sha": "600aa21c84b2ae68dfc685f122c01af3997aa3e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/600aa21c84b2ae68dfc685f122c01af3997aa3e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae8c56262d635eefdb32fc4e1b8d896453348c00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae8c56262d635eefdb32fc4e1b8d896453348c00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae8c56262d635eefdb32fc4e1b8d896453348c00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae8c56262d635eefdb32fc4e1b8d896453348c00/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fcb8100aac71b8a109a4f0ceaabd6cfd650b668", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fcb8100aac71b8a109a4f0ceaabd6cfd650b668", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fcb8100aac71b8a109a4f0ceaabd6cfd650b668"}], "stats": {"total": 51, "additions": 26, "deletions": 25}, "files": [{"sha": "1f6fca8c939034e0176ece10b6b0d6b7feda4ae0", "filename": "gcc/ada/sa_messages.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8c56262d635eefdb32fc4e1b8d896453348c00/gcc%2Fada%2Fsa_messages.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8c56262d635eefdb32fc4e1b8d896453348c00/gcc%2Fada%2Fsa_messages.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsa_messages.ads?ref=ae8c56262d635eefdb32fc4e1b8d896453348c00", "patch": "@@ -94,7 +94,7 @@ package SA_Messages is\n    --  type invariant checks (specific and class-wide), and checks for\n    --  implementation-defined assertions such as Assert_And_Cut, Assume,\n    --  Contract_Cases, Default_Initial_Condition, Initial_Condition,\n-   --  Loop_Invariant, Loop_Variant, and Refined_Post.\n+   --  Loop_Invariant, Loop_Variant, Refined_Post, and Subprogram_Variant.\n    --\n    --  TBD: it might be nice to distinguish these different kinds of assertions\n    --  as is done in SPARK's VC_Kind enumeration type, but any distinction"}, {"sha": "094591b5ec9d26f08a6cd23be543dd1bd92d3976", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 25, "deletions": 24, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8c56262d635eefdb32fc4e1b8d896453348c00/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8c56262d635eefdb32fc4e1b8d896453348c00/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ae8c56262d635eefdb32fc4e1b8d896453348c00", "patch": "@@ -12903,30 +12903,31 @@ package body Sem_Prag is\n \n          --  ASSERTION_KIND ::= RM_ASSERTION_KIND | ID_ASSERTION_KIND\n \n-         --  RM_ASSERTION_KIND ::= Assert               |\n-         --                        Static_Predicate     |\n-         --                        Dynamic_Predicate    |\n-         --                        Pre                  |\n-         --                        Pre'Class            |\n-         --                        Post                 |\n-         --                        Post'Class           |\n-         --                        Type_Invariant       |\n-         --                        Type_Invariant'Class\n-\n-         --  ID_ASSERTION_KIND ::= Assert_And_Cut            |\n-         --                        Assume                    |\n-         --                        Contract_Cases            |\n-         --                        Debug                     |\n-         --                        Default_Initial_Condition |\n-         --                        Ghost                     |\n-         --                        Initial_Condition         |\n-         --                        Loop_Invariant            |\n-         --                        Loop_Variant              |\n-         --                        Postcondition             |\n-         --                        Precondition              |\n-         --                        Predicate                 |\n-         --                        Refined_Post              |\n-         --                        Statement_Assertions\n+         --  RM_ASSERTION_KIND ::= Assert                     |\n+         --                        Static_Predicate           |\n+         --                        Dynamic_Predicate          |\n+         --                        Pre                        |\n+         --                        Pre'Class                  |\n+         --                        Post                       |\n+         --                        Post'Class                 |\n+         --                        Type_Invariant             |\n+         --                        Type_Invariant'Class       |\n+         --                        Default_Initial_Condition\n+\n+         --  ID_ASSERTION_KIND ::= Assert_And_Cut       |\n+         --                        Assume               |\n+         --                        Contract_Cases       |\n+         --                        Debug                |\n+         --                        Ghost                |\n+         --                        Initial_Condition    |\n+         --                        Loop_Invariant       |\n+         --                        Loop_Variant         |\n+         --                        Postcondition        |\n+         --                        Precondition         |\n+         --                        Predicate            |\n+         --                        Refined_Post         |\n+         --                        Statement_Assertions |\n+         --                        Subprogram_Variant\n \n          --  Note: The RM_ASSERTION_KIND list is language-defined, and the\n          --  ID_ASSERTION_KIND list contains implementation-defined additions"}]}