{"sha": "9177a016508696e664df5fa20ce44565978c34c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE3N2EwMTY1MDg2OTZlNjY0ZGY1ZmEyMGNlNDQ1NjU5NzhjMzRjNA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-05-14T21:19:01Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-05-14T21:19:01Z"}, "message": "re PR c++/68918 (spurious \"invalid use of incomplete type\" in trailing return type)\n\n\tPR c++/68918\n\t* g++.dg/cpp0x/decltype71.C: New test.\n\nFrom-SVN: r271193", "tree": {"sha": "9844e5dcee02c8f8dabb9e5500107a7ed83f2cb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9844e5dcee02c8f8dabb9e5500107a7ed83f2cb1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9177a016508696e664df5fa20ce44565978c34c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9177a016508696e664df5fa20ce44565978c34c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9177a016508696e664df5fa20ce44565978c34c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9177a016508696e664df5fa20ce44565978c34c4/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1d7dcb0ed2f9077727fc45c7d694a865fa974ff6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d7dcb0ed2f9077727fc45c7d694a865fa974ff6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d7dcb0ed2f9077727fc45c7d694a865fa974ff6"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "93aa83b58c54a485f517a14333119ab32a1c50c7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9177a016508696e664df5fa20ce44565978c34c4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9177a016508696e664df5fa20ce44565978c34c4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9177a016508696e664df5fa20ce44565978c34c4", "patch": "@@ -1,5 +1,8 @@\n 2019-05-14  Marek Polacek  <polacek@redhat.com>\n \n+\tPR c++/68918\n+\t* g++.dg/cpp0x/decltype71.C: New test.\n+\n \tPR c++/70156\n \t* g++.dg/init/static5.C: New test.\n "}, {"sha": "24c3abfba49ba1b63807275f79ad136961344bc5", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype71.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9177a016508696e664df5fa20ce44565978c34c4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype71.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9177a016508696e664df5fa20ce44565978c34c4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype71.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype71.C?ref=9177a016508696e664df5fa20ce44565978c34c4", "patch": "@@ -0,0 +1,25 @@\n+// PR c++/68918\n+// { dg-do compile { target c++11 } }\n+\n+struct foo {\n+    static void a() {}\n+\n+    auto b() const -> decltype( this->a() )\n+    {}\n+\n+    template<typename X>\n+    auto c() -> decltype( this->a() )\n+    {}\n+\n+    template<typename X>\n+    auto d() const -> decltype( a() )\n+    {}\n+\n+    template<typename X>\n+    auto e() const -> decltype( this->a() )\n+    {}\n+};\n+\n+int main()\n+{\n+}"}]}