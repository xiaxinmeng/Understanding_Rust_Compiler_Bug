{"sha": "76089b28bdc81483094af1af96bd8ec352826939", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzYwODliMjhiZGM4MTQ4MzA5NGFmMWFmOTZiZDhlYzM1MjgyNjkzOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-04-24T15:03:58Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-04-24T15:03:58Z"}, "message": "N3648: init-captures are named.\n\n\t* semantics.c (add_capture): Don't prepend \"__\" to init-captures.\n\t(build_capture_proxy): Adjust.\n\t* error.c (dump_simple_decl): Check DECL_NORMAL_CAPTURE_P.\n\nFrom-SVN: r198247", "tree": {"sha": "3062574fc0513a27dc25fdbfccc995faeba48613", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3062574fc0513a27dc25fdbfccc995faeba48613"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76089b28bdc81483094af1af96bd8ec352826939", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76089b28bdc81483094af1af96bd8ec352826939", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76089b28bdc81483094af1af96bd8ec352826939", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76089b28bdc81483094af1af96bd8ec352826939/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "399bb2da17cbe7474cd38556d051e921fc74c113", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/399bb2da17cbe7474cd38556d051e921fc74c113", "html_url": "https://github.com/Rust-GCC/gccrs/commit/399bb2da17cbe7474cd38556d051e921fc74c113"}], "stats": {"total": 40, "additions": 33, "deletions": 7}, "files": [{"sha": "1c05d5dd16e75ad6e037bcf080bcf4a66378b241", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76089b28bdc81483094af1af96bd8ec352826939/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76089b28bdc81483094af1af96bd8ec352826939/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=76089b28bdc81483094af1af96bd8ec352826939", "patch": "@@ -1,5 +1,10 @@\n 2013-04-24  Jason Merrill  <jason@redhat.com>\n \n+\tN3648: init-captures are named.\n+\t* semantics.c (add_capture): Don't prepend \"__\" to init-captures.\n+\t(build_capture_proxy): Adjust.\n+\t* error.c (dump_simple_decl): Check DECL_NORMAL_CAPTURE_P.\n+\n \tN3648: Allow braced and parenthesized initializers.\n \t* parser.c (cp_parser_lambda_introducer): Use cp_parser_initializer.\n \t* pt.c (tsubst) [DECLTYPE_TYPE]: Handle DECLTYPE_FOR_INIT_CAPTURE."}, {"sha": "4681e8420020aa3a86c7f7f0b21bcc486cb53ea6", "filename": "gcc/cp/error.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76089b28bdc81483094af1af96bd8ec352826939/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76089b28bdc81483094af1af96bd8ec352826939/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=76089b28bdc81483094af1af96bd8ec352826939", "patch": "@@ -934,7 +934,7 @@ dump_simple_decl (tree t, tree type, int flags)\n     pp_string (cxx_pp, \"...\");\n   if (DECL_NAME (t))\n     {\n-      if (DECL_CLASS_SCOPE_P (t) && LAMBDA_TYPE_P (DECL_CONTEXT (t)))\n+      if (TREE_CODE (t) == FIELD_DECL && DECL_NORMAL_CAPTURE_P (t))\n \t{\n \t  pp_character (cxx_pp, '<');\n \t  pp_string (cxx_pp, IDENTIFIER_POINTER (DECL_NAME (t)) + 2);"}, {"sha": "3566739a10ef8c2864396c7a8c1bd016975cd857", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76089b28bdc81483094af1af96bd8ec352826939/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76089b28bdc81483094af1af96bd8ec352826939/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=76089b28bdc81483094af1af96bd8ec352826939", "patch": "@@ -9373,7 +9373,10 @@ build_capture_proxy (tree member)\n     object = TREE_OPERAND (object, 0);\n \n   /* Remove the __ inserted by add_capture.  */\n-  name = get_identifier (IDENTIFIER_POINTER (DECL_NAME (member)) + 2);\n+  if (DECL_NORMAL_CAPTURE_P (member))\n+    name = get_identifier (IDENTIFIER_POINTER (DECL_NAME (member)) + 2);\n+  else\n+    name = DECL_NAME (member);\n \n   type = lambda_proxy_type (object);\n   var = build_decl (input_location, VAR_DECL, name, type);\n@@ -9426,11 +9429,17 @@ add_capture (tree lambda, tree id, tree initializer, bool by_reference_p,\n      won't find the field with name lookup.  We can't just leave the name\n      unset because template instantiation uses the name to find\n      instantiated fields.  */\n-  buf = (char *) alloca (IDENTIFIER_LENGTH (id) + 3);\n-  buf[1] = buf[0] = '_';\n-  memcpy (buf + 2, IDENTIFIER_POINTER (id),\n-\t  IDENTIFIER_LENGTH (id) + 1);\n-  name = get_identifier (buf);\n+  if (!explicit_init_p)\n+    {\n+      buf = (char *) alloca (IDENTIFIER_LENGTH (id) + 3);\n+      buf[1] = buf[0] = '_';\n+      memcpy (buf + 2, IDENTIFIER_POINTER (id),\n+\t      IDENTIFIER_LENGTH (id) + 1);\n+      name = get_identifier (buf);\n+    }\n+  else\n+    /* But captures with explicit initializers are named.  */\n+    name = id;\n \n   /* If TREE_TYPE isn't set, we're still in the introducer, so check\n      for duplicates.  */"}, {"sha": "3ebf4799a324c9349a1b1c7134fb03da0b923cec", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-init6.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76089b28bdc81483094af1af96bd8ec352826939/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-init6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76089b28bdc81483094af1af96bd8ec352826939/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-init6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-init6.C?ref=76089b28bdc81483094af1af96bd8ec352826939", "patch": "@@ -0,0 +1,12 @@\n+// Test that simple captures are not named in the closure type, but\n+// initialized captures are named.\n+// { dg-options \"-std=c++1y\" }\n+\n+int main()\n+{\n+  int i;\n+  auto lam = [i,j=42]{};\n+  lam.j;\n+  lam.j.foo;\t\t\t// { dg-error \"::j\" }\n+  lam.i;\t\t\t// { dg-error \"no member\" }\n+}"}]}