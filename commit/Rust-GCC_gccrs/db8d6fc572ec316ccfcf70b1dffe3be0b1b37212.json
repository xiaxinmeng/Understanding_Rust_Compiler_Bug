{"sha": "db8d6fc572ec316ccfcf70b1dffe3be0b1b37212", "node_id": "C_kwDOANBUbNoAKGRiOGQ2ZmM1NzJlYzMxNmNjZmNmNzBiMWRmZmUzYmUwYjFiMzcyMTI", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-02-02T14:06:40Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-02-02T16:18:37Z"}, "message": "libstdc++: Fix std::filesystem errors with -fkeep-inline-functions [PR108636]\n\nWith -fkeep-inline-functions there are linker errors when including\n<filesystem>. This happens because there are some filesystem::path\nconstructors defined inline which call non-exported functions defined in\nthe library. That's usually not a problem, because those constructors\nare only called by code that's also inside the library. But when the\nheader is compiled with -fkeep-inline-functions those inline functions\nare emitted even though they aren't called. That then creates an\nundefined reference to the other library internsl. The fix is to just\nmove the private constructors into the library where they are called.\nThat way they are never even seen by users, and so not compiled even if\n-fkeep-inline-functions is used.\n\nOn trunk there is a second problem, which is that the new equality\noperators for comparing directory iterators with default_sentinel use\nthe shared_ptr::operator bool() conversion operator. The shared_ptr\nspecializations used by directory iterators are explicitly instantiated\nin the library, but the bool conversion operators are not exported. This\ncauses linker errors at -O0 or with -fkeep-inline-functions. That just\nrequires the conversion operators to be exported.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/108636\n\t* config/abi/pre/gnu.ver (GLIBCXX_3.4.31): Export shared_ptr\n\tconversion operators for directory iterator comparisons with\n\tstd::default_sentinel_t.\n\t* include/bits/fs_path.h (path::path(string_view, _Type))\n\t(path::_Cmpt::_Cmpt(string_view, _Type, size_t)): Move inline\n\tdefinitions to ...\n\t* src/c++17/fs_path.cc: ... here.\n\t* testsuite/27_io/filesystem/path/108636.cc: New test.", "tree": {"sha": "ea8fc25ef24ac35e426926635afb33e6c87032c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea8fc25ef24ac35e426926635afb33e6c87032c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db8d6fc572ec316ccfcf70b1dffe3be0b1b37212", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db8d6fc572ec316ccfcf70b1dffe3be0b1b37212", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db8d6fc572ec316ccfcf70b1dffe3be0b1b37212", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db8d6fc572ec316ccfcf70b1dffe3be0b1b37212/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1395415fdc2d60e5346dbcf476749daf42d5b724", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1395415fdc2d60e5346dbcf476749daf42d5b724", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1395415fdc2d60e5346dbcf476749daf42d5b724"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "34f23bcbce0fa0a1bdbc14f2e62540fff2897d11", "filename": "libstdc++-v3/config/abi/pre/gnu.ver", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db8d6fc572ec316ccfcf70b1dffe3be0b1b37212/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db8d6fc572ec316ccfcf70b1dffe3be0b1b37212/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver?ref=db8d6fc572ec316ccfcf70b1dffe3be0b1b37212", "patch": "@@ -2504,6 +2504,13 @@ GLIBCXX_3.4.31 {\n     _ZNSt6chrono9tzdb_list14const_iteratorppEi;\n     _ZN9__gnu_cxx21zoneinfo_dir_overrideEv;\n \n+    # __shared_ptr<directory_iterator::_Dir>::operator bool()\n+    _ZNKSt12__shared_ptrINSt10filesystem4_DirELN9__gnu_cxx12_Lock_policyE[012]EEcvbEv;\n+    _ZNKSt12__shared_ptrINSt10filesystem7__cxx114_DirELN9__gnu_cxx12_Lock_policyE[012]EEcvbEv;\n+    # __shared_ptr<recursive_directory_iterator::_Dir_stack>::operator bool()\n+    _ZNKSt12__shared_ptrINSt10filesystem28recursive_directory_iterator10_Dir_stackELN9__gnu_cxx12_Lock_policyE[012]EEcvbEv;\n+    _ZNKSt12__shared_ptrINSt10filesystem7__cxx1128recursive_directory_iterator10_Dir_stackELN9__gnu_cxx12_Lock_policyE[012]EEcvbEv;\n+\n } GLIBCXX_3.4.30;\n \n # Symbols in the support library (libsupc++) have their own tag."}, {"sha": "0d7bb10c1a022ca44b345e2315ded9591ee54a98", "filename": "libstdc++-v3/include/bits/fs_path.h", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db8d6fc572ec316ccfcf70b1dffe3be0b1b37212/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db8d6fc572ec316ccfcf70b1dffe3be0b1b37212/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h?ref=db8d6fc572ec316ccfcf70b1dffe3be0b1b37212", "patch": "@@ -596,12 +596,7 @@ namespace __detail\n       _Multi = 0, _Root_name, _Root_dir, _Filename\n     };\n \n-    path(basic_string_view<value_type> __str, _Type __type)\n-    : _M_pathname(__str)\n-    {\n-      __glibcxx_assert(__type != _Type::_Multi);\n-      _M_cmpts.type(__type);\n-    }\n+    path(basic_string_view<value_type> __str, _Type __type);\n \n     enum class _Split { _Stem, _Extension };\n \n@@ -851,8 +846,7 @@ namespace __detail\n \n   struct path::_Cmpt : path\n   {\n-    _Cmpt(basic_string_view<value_type> __s, _Type __t, size_t __pos)\n-      : path(__s, __t), _M_pos(__pos) { }\n+    _Cmpt(basic_string_view<value_type> __s, _Type __t, size_t __pos);\n \n     _Cmpt() : _M_pos(-1) { }\n "}, {"sha": "aaea7d2725dbd3b1d286e650eb38bb249a536ff2", "filename": "libstdc++-v3/src/c++17/fs_path.cc", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db8d6fc572ec316ccfcf70b1dffe3be0b1b37212/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_path.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db8d6fc572ec316ccfcf70b1dffe3be0b1b37212/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_path.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_path.cc?ref=db8d6fc572ec316ccfcf70b1dffe3be0b1b37212", "patch": "@@ -187,6 +187,19 @@ struct path::_Parser\n   { return origin + c.str.data() - input.data(); }\n };\n \n+inline\n+path::path(basic_string_view<value_type> __str, _Type __type)\n+: _M_pathname(__str)\n+{\n+  __glibcxx_assert(__type != _Type::_Multi);\n+  _M_cmpts.type(__type);\n+}\n+\n+inline\n+path::_Cmpt::_Cmpt(basic_string_view<value_type> __s, _Type __t, size_t __pos)\n+: path(__s, __t), _M_pos(__pos)\n+{ }\n+\n struct path::_List::_Impl\n {\n   using value_type = _Cmpt;"}, {"sha": "d58de461090d79e2c733f51a9a6193b523758d0c", "filename": "libstdc++-v3/testsuite/27_io/filesystem/path/108636.cc", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db8d6fc572ec316ccfcf70b1dffe3be0b1b37212/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2F108636.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db8d6fc572ec316ccfcf70b1dffe3be0b1b37212/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2F108636.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2F108636.cc?ref=db8d6fc572ec316ccfcf70b1dffe3be0b1b37212", "patch": "@@ -0,0 +1,8 @@\n+// { dg-do link { target c++17 } }\n+// { dg-options \"-fkeep-inline-functions\" }\n+\n+#include <filesystem>\n+int main()\n+{\n+  // PR libstdc++/108636 - link failure with -fkeep-inline-functions\n+}"}]}