{"sha": "bbe7d67f5ffdadeee67e0060bde212d09e38a704", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJlN2Q2N2Y1ZmZkYWRlZWU2N2UwMDYwYmRlMjEyZDA5ZTM4YTcwNA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-02-09T17:03:48Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-08T07:51:08Z"}, "message": "[Ada] Remove the Has_Dynamic_Range_Check flag\n\n2020-06-08  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* atree.adb (New_Copy): Do not clear Has_Dynamic_Range_Check.\n\t* checks.ads (Append_Range_Checks): Remove Flag_Node parameter.\n\t(Insert_Range_Checks): Likewise and remove default value of\n\tStatic_Loc parameter.\n\t* checks.adb (Append_Range_Checks): Remove Flag_Node parameter.\n\tDo not test and set Has_Dynamic_Range_Check.\n\t(Insert_Range_Checks): Likewise and remove default value of\n\tStatic_Loc parameter.\n\t* csinfo.adb (CSinfo): Remove 'L' from [NEUB]_Fields pattern and\n\tdo not handle Has_Dynamic_Range_Check.\n\t* exp_ch5.adb (Expand_N_Assignment_Statement): Remove argument\n\tin call to Insert_Range_Checks.\n\t* sem_ch3.adb (Analyze_Subtype_Declaration): Do not fiddle\n\twith Has_Dynamic_Range_Check.\n\t(Process_Range_Expr_In_Decl): Remove argument in calls to\n\tInsert_Range_Checks and Append_Range_Checks.\n\t* sinfo.ads (Has_Dynamic_Range_Check): Delete.\n\t(Set_Has_Dynamic_Range_Check): Likewise.\n\t* sinfo.adb (Has_Dynamic_Range_Check): Delete.\n\t(Set_Has_Dynamic_Range_Check): Likewise.\n\t* treepr.adb (Print_Node): Do not print Has_Dynamic_Range_Check.", "tree": {"sha": "090e88aca5d110cf337deec15b13225500bb1a95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/090e88aca5d110cf337deec15b13225500bb1a95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbe7d67f5ffdadeee67e0060bde212d09e38a704", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbe7d67f5ffdadeee67e0060bde212d09e38a704", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbe7d67f5ffdadeee67e0060bde212d09e38a704", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbe7d67f5ffdadeee67e0060bde212d09e38a704/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6476fc372a684ff42712c10508dddf0e6d229df5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6476fc372a684ff42712c10508dddf0e6d229df5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6476fc372a684ff42712c10508dddf0e6d229df5"}], "stats": {"total": 178, "additions": 28, "deletions": 150}, "files": [{"sha": "5619f09046f8795a7991109b2f4b3d5f0cfee657", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbe7d67f5ffdadeee67e0060bde212d09e38a704/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbe7d67f5ffdadeee67e0060bde212d09e38a704/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=bbe7d67f5ffdadeee67e0060bde212d09e38a704", "patch": "@@ -1659,12 +1659,6 @@ package body Atree is\n          Nodes.Table (New_Id).Rewrite_Ins := False;\n          pragma Debug (New_Node_Debugging_Output (New_Id));\n \n-         --  Clear Has_Dynamic_Range_Check since it doesn't apply anymore\n-\n-         if Nkind (Source) in N_Subexpr then\n-            Set_Has_Dynamic_Range_Check (New_Id, False);\n-         end if;\n-\n          --  Clear Is_Overloaded since we cannot have semantic interpretations\n          --  of this new node.\n "}, {"sha": "eb62b2b05a1c8afd357ee4755bff0be9c82987ae", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 14, "deletions": 60, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbe7d67f5ffdadeee67e0060bde212d09e38a704/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbe7d67f5ffdadeee67e0060bde212d09e38a704/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=bbe7d67f5ffdadeee67e0060bde212d09e38a704", "patch": "@@ -488,17 +488,13 @@ package body Checks is\n      (Checks       : Check_Result;\n       Stmts        : List_Id;\n       Suppress_Typ : Entity_Id;\n-      Static_Sloc  : Source_Ptr;\n-      Flag_Node    : Node_Id)\n+      Static_Sloc  : Source_Ptr)\n    is\n       Checks_On : constant Boolean :=\n                     not Index_Checks_Suppressed (Suppress_Typ)\n                       or else\n                     not Range_Checks_Suppressed (Suppress_Typ);\n \n-      Internal_Flag_Node   : constant Node_Id    := Flag_Node;\n-      Internal_Static_Sloc : constant Source_Ptr := Static_Sloc;\n-\n    begin\n       --  For now we just return if Checks_On is false, however this should be\n       --  enhanced to check for an always True value in the condition and to\n@@ -514,19 +510,11 @@ package body Checks is\n          if Nkind (Checks (J)) = N_Raise_Constraint_Error\n            and then Present (Condition (Checks (J)))\n          then\n-            if Has_Dynamic_Range_Check (Internal_Flag_Node) then\n-               pragma Assert (False);\n-               null;\n-\n-            else\n-               Append_To (Stmts, Checks (J));\n-               Set_Has_Dynamic_Range_Check (Internal_Flag_Node);\n-            end if;\n-\n+            Append_To (Stmts, Checks (J));\n          else\n             Append_To\n               (Stmts,\n-                Make_Raise_Constraint_Error (Internal_Static_Sloc,\n+                Make_Raise_Constraint_Error (Static_Sloc,\n                   Reason => CE_Range_Check_Failed));\n          end if;\n       end loop;\n@@ -3440,14 +3428,6 @@ package body Checks is\n \n             Insert_Action (Expr, R_Cno);\n \n-            --  This old code doesn't make sense, why is the context flagged as\n-            --  requiring dynamic range checks now in the middle of generating\n-            --  them ???\n-\n-            if not Do_Static then\n-               Set_Has_Dynamic_Range_Check (Expr);\n-            end if;\n-\n             --  The triggering condition evaluates to True, the range check\n             --  can be converted into a compile time constraint check.\n \n@@ -7444,18 +7424,15 @@ package body Checks is\n      (Checks       : Check_Result;\n       Node         : Node_Id;\n       Suppress_Typ : Entity_Id;\n-      Static_Sloc  : Source_Ptr := No_Location;\n-      Flag_Node    : Node_Id    := Empty;\n+      Static_Sloc  : Source_Ptr;\n       Do_Before    : Boolean    := False)\n    is\n       Checks_On  : constant Boolean :=\n                      not Index_Checks_Suppressed (Suppress_Typ)\n                        or else\n                      not Range_Checks_Suppressed (Suppress_Typ);\n \n-      Check_Node           : Node_Id;\n-      Internal_Flag_Node   : Node_Id    := Flag_Node;\n-      Internal_Static_Sloc : Source_Ptr := Static_Sloc;\n+      Check_Node : Node_Id;\n \n    begin\n       --  For now we just return if Checks_On is false, however this should be\n@@ -7466,48 +7443,25 @@ package body Checks is\n          return;\n       end if;\n \n-      if Static_Sloc = No_Location then\n-         Internal_Static_Sloc := Sloc (Node);\n-      end if;\n-\n-      if No (Flag_Node) then\n-         Internal_Flag_Node := Node;\n-      end if;\n-\n       for J in 1 .. 2 loop\n          exit when No (Checks (J));\n \n          if Nkind (Checks (J)) = N_Raise_Constraint_Error\n            and then Present (Condition (Checks (J)))\n          then\n-            if Has_Dynamic_Range_Check (Internal_Flag_Node) then\n-               pragma Assert (False);\n-               null;\n-\n-            else\n-               Check_Node := Checks (J);\n-               Mark_Rewrite_Insertion (Check_Node);\n-\n-               if Do_Before then\n-                  Insert_Before_And_Analyze (Node, Check_Node);\n-               else\n-                  Insert_After_And_Analyze (Node, Check_Node);\n-               end if;\n-\n-               Set_Has_Dynamic_Range_Check (Internal_Flag_Node);\n-            end if;\n-\n+            Check_Node := Checks (J);\n          else\n             Check_Node :=\n-              Make_Raise_Constraint_Error (Internal_Static_Sloc,\n+              Make_Raise_Constraint_Error (Static_Sloc,\n                 Reason => CE_Range_Check_Failed);\n-            Mark_Rewrite_Insertion (Check_Node);\n+         end if;\n \n-            if Do_Before then\n-               Insert_Before_And_Analyze (Node, Check_Node);\n-            else\n-               Insert_After_And_Analyze (Node, Check_Node);\n-            end if;\n+         Mark_Rewrite_Insertion (Check_Node);\n+\n+         if Do_Before then\n+            Insert_Before_And_Analyze (Node, Check_Node);\n+         else\n+            Insert_After_And_Analyze (Node, Check_Node);\n          end if;\n       end loop;\n    end Insert_Range_Checks;"}, {"sha": "6412686a9bac19bd12d31e37d798864b6992a61e", "filename": "gcc/ada/checks.ads", "status": "modified", "additions": 7, "deletions": 14, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbe7d67f5ffdadeee67e0060bde212d09e38a704/gcc%2Fada%2Fchecks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbe7d67f5ffdadeee67e0060bde212d09e38a704/gcc%2Fada%2Fchecks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.ads?ref=bbe7d67f5ffdadeee67e0060bde212d09e38a704", "patch": "@@ -637,32 +637,25 @@ package Checks is\n      (Checks       : Check_Result;\n       Stmts        : List_Id;\n       Suppress_Typ : Entity_Id;\n-      Static_Sloc  : Source_Ptr;\n-      Flag_Node    : Node_Id);\n+      Static_Sloc  : Source_Ptr);\n    --  Called to append range checks as returned by a call to Get_Range_Checks.\n    --  Stmts is a list to which either the dynamic check is appended or the\n    --  raise Constraint_Error statement is appended (for static checks).\n-   --  Static_Sloc is the Sloc at which the raise CE node points, Flag_Node is\n-   --  used as the node at which to set the Has_Dynamic_Check flag. Checks_On\n-   --  is a boolean value that says if range and index checking is on or not.\n+   --  Suppress_Typ is the type to check to determine if checks are suppressed.\n+   --  Static_Sloc is the Sloc at which the raise CE node points.\n \n    procedure Insert_Range_Checks\n      (Checks       : Check_Result;\n       Node         : Node_Id;\n       Suppress_Typ : Entity_Id;\n-      Static_Sloc  : Source_Ptr := No_Location;\n-      Flag_Node    : Node_Id    := Empty;\n-      Do_Before    : Boolean    := False);\n+      Static_Sloc  : Source_Ptr;\n+      Do_Before    : Boolean := False);\n    --  Called to insert range checks as returned by a call to Get_Range_Checks.\n    --  Node is the node after which either the dynamic check is inserted or\n    --  the raise Constraint_Error statement is inserted (for static checks).\n    --  Suppress_Typ is the type to check to determine if checks are suppressed.\n-   --  Static_Sloc, if passed, is the Sloc at which the raise CE node points,\n-   --  otherwise Sloc (Node) is used. The Has_Dynamic_Check flag is normally\n-   --  set at Node. If Flag_Node is present, then this is used instead as the\n-   --  node at which to set the Has_Dynamic_Check flag. Normally the check is\n-   --  inserted after, if Do_Before is True, the check is inserted before\n-   --  Node.\n+   --  Static_Sloc is the Sloc at which the raise CE node points. Normally the\n+   --  checks are inserted after Node; if Do_Before is True, they are before.\n \n    -----------------------\n    -- Expander Routines --"}, {"sha": "635a2a52e687360ce78638f49388e5c080815d0b", "filename": "gcc/ada/csinfo.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbe7d67f5ffdadeee67e0060bde212d09e38a704/gcc%2Fada%2Fcsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbe7d67f5ffdadeee67e0060bde212d09e38a704/gcc%2Fada%2Fcsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcsinfo.adb?ref=bbe7d67f5ffdadeee67e0060bde212d09e38a704", "patch": "@@ -89,10 +89,10 @@ procedure CSinfo is\n    Flags : TV.Table (20);\n    --  Maps flag numbers to letters\n \n-   N_Fields : constant Pattern := BreakX (\"JL\");\n-   E_Fields : constant Pattern := BreakX (\"5EFGHIJLOP\");\n-   U_Fields : constant Pattern := BreakX (\"1345EFGHIJKLOPQ\");\n-   B_Fields : constant Pattern := BreakX (\"12345EFGHIJKLOPQ\");\n+   N_Fields : constant Pattern := BreakX (\"J\");\n+   E_Fields : constant Pattern := BreakX (\"5EFGHIJOP\");\n+   U_Fields : constant Pattern := BreakX (\"1345EFGHIJKOPQ\");\n+   B_Fields : constant Pattern := BreakX (\"12345EFGHIJKOPQ\");\n \n    Line : VString;\n    Bad  : Boolean;\n@@ -215,7 +215,6 @@ begin\n    Set (Special, \"First_Itype\",                      True);\n    Set (Special, \"Has_Aspect_Specifications\",        True);\n    Set (Special, \"Has_Dynamic_Itype\",                True);\n-   Set (Special, \"Has_Dynamic_Range_Check\",          True);\n    Set (Special, \"Has_Dynamic_Length_Check\",         True);\n    Set (Special, \"Has_Private_View\",                 True);\n    Set (Special, \"Is_Controlling_Actual\",            True);"}, {"sha": "d69e1475564b0de42a9c23fbd4af7e76407220a0", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbe7d67f5ffdadeee67e0060bde212d09e38a704/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbe7d67f5ffdadeee67e0060bde212d09e38a704/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=bbe7d67f5ffdadeee67e0060bde212d09e38a704", "patch": "@@ -2465,8 +2465,7 @@ package body Exp_Ch5 is\n                     (C_Es,\n                      N,\n                      Target_Typ,\n-                     Sloc (Lhs),\n-                     Lhs);\n+                     Sloc (Lhs));\n                end;\n             end if;\n          end if;"}, {"sha": "c9dac2c438a41f9fe9f5293969f4623fba43fba5", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 2, "deletions": 21, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbe7d67f5ffdadeee67e0060bde212d09e38a704/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbe7d67f5ffdadeee67e0060bde212d09e38a704/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=bbe7d67f5ffdadeee67e0060bde212d09e38a704", "patch": "@@ -5768,7 +5768,6 @@ package body Sem_Ch3 is\n                Target_Index : Node_Id :=\n                                 First_Index (Etype\n                                   (Subtype_Mark (Subtype_Indication (N))));\n-               Has_Dyn_Chk  : Boolean := Has_Dynamic_Range_Check (N);\n \n             begin\n                while Present (Subt_Index) loop\n@@ -5789,34 +5788,17 @@ package body Sem_Ch3 is\n                              Etype (Subt_Index),\n                              Defining_Identifier (N));\n \n-                        --  Reset Has_Dynamic_Range_Check on the subtype to\n-                        --  prevent elision of the index check due to a dynamic\n-                        --  check generated for a preceding index (needed since\n-                        --  Insert_Range_Checks tries to avoid generating\n-                        --  redundant checks on a given declaration).\n-\n-                        Set_Has_Dynamic_Range_Check (N, False);\n-\n                         Insert_Range_Checks\n                           (R_Checks,\n                            N,\n                            Target_Typ,\n                            Sloc (Defining_Identifier (N)));\n-\n-                        --  Record whether this index involved a dynamic check\n-\n-                        Has_Dyn_Chk :=\n-                          Has_Dyn_Chk or else Has_Dynamic_Range_Check (N);\n                      end;\n                   end if;\n \n                   Next_Index (Subt_Index);\n                   Next_Index (Target_Index);\n                end loop;\n-\n-               --  Finally, mark whether the subtype involves dynamic checks\n-\n-               Set_Has_Dynamic_Range_Check (N, Has_Dyn_Chk);\n             end;\n          end if;\n       end if;\n@@ -21233,7 +21215,6 @@ package body Sem_Ch3 is\n                               Insert_Node,\n                               Def_Id,\n                               Sloc (Insert_Node),\n-                              R,\n                               Do_Before => True);\n                         end if;\n                      end;\n@@ -21258,14 +21239,14 @@ package body Sem_Ch3 is\n                         if Present (Check_List) then\n                            Append_Range_Checks\n                              (R_Checks,\n-                               Check_List, Def_Id, Sloc (Insert_Node), R);\n+                               Check_List, Def_Id, Sloc (Insert_Node));\n                         end if;\n \n                      else\n                         if No (Check_List) then\n                            Insert_Range_Checks\n                              (R_Checks,\n-                               Insert_Node, Def_Id, Sloc (Insert_Node), R);\n+                               Insert_Node, Def_Id, Sloc (Insert_Node));\n                         end if;\n                      end if;\n "}, {"sha": "f6e70c12adaccd01f3434b06779d365a4eb7fa52", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbe7d67f5ffdadeee67e0060bde212d09e38a704/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbe7d67f5ffdadeee67e0060bde212d09e38a704/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=bbe7d67f5ffdadeee67e0060bde212d09e38a704", "patch": "@@ -1523,15 +1523,6 @@ package body Sinfo is\n       return Flag10 (N);\n    end Has_Dynamic_Length_Check;\n \n-   function Has_Dynamic_Range_Check\n-      (N : Node_Id) return Boolean is\n-   begin\n-      pragma Assert (False\n-        or else NT (N).Nkind =  N_Subtype_Declaration\n-        or else NT (N).Nkind in N_Subexpr);\n-      return Flag12 (N);\n-   end Has_Dynamic_Range_Check;\n-\n    function Has_Init_Expression\n       (N : Node_Id) return Boolean is\n    begin\n@@ -4997,15 +4988,6 @@ package body Sinfo is\n       Set_Flag10 (N, Val);\n    end Set_Has_Dynamic_Length_Check;\n \n-   procedure Set_Has_Dynamic_Range_Check\n-      (N : Node_Id; Val : Boolean := True) is\n-   begin\n-      pragma Assert (False\n-        or else NT (N).Nkind =  N_Subtype_Declaration\n-        or else NT (N).Nkind in N_Subexpr);\n-      Set_Flag12 (N, Val);\n-   end Set_Has_Dynamic_Range_Check;\n-\n    procedure Set_Has_Init_Expression\n       (N : Node_Id; Val : Boolean := True) is\n    begin"}, {"sha": "ea4f8ed882a17c675dc72d30307a9176637ac40d", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbe7d67f5ffdadeee67e0060bde212d09e38a704/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbe7d67f5ffdadeee67e0060bde212d09e38a704/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=bbe7d67f5ffdadeee67e0060bde212d09e38a704", "patch": "@@ -425,7 +425,6 @@ package Sinfo is\n    --       Must_Not_Freeze          (Flag8-Sem)  set if must not freeze\n    --       Do_Range_Check           (Flag9-Sem)  set if a range check needed\n    --       Has_Dynamic_Length_Check (Flag10-Sem) set if length check inserted\n-   --       Has_Dynamic_Range_Check  (Flag12-Sem) set if range check inserted\n    --       Assignment_OK            (Flag15-Sem) set if modification is OK\n    --       Is_Controlling_Actual    (Flag16-Sem) set for controlling argument\n \n@@ -1456,14 +1455,6 @@ package Sinfo is\n    --    action which has been inserted at the flagged node. This is used to\n    --    avoid the generation of duplicate checks.\n \n-   --  Has_Dynamic_Range_Check (Flag12-Sem)\n-   --    This flag is present in N_Subtype_Declaration nodes and on all\n-   --    expression nodes. It is set to indicate that one of the routines in\n-   --    unit Checks has generated a range check action which has been inserted\n-   --    at the flagged node. This is used to avoid the generation of duplicate\n-   --    checks. Why does this occur on N_Subtype_Declaration nodes, what does\n-   --    it mean in that context???\n-\n    --  Has_Local_Raise (Flag8-Sem)\n    --    Present in exception handler nodes. Set if the handler can be entered\n    --    via a local raise that gets transformed to a goto statement. This will\n@@ -2866,7 +2857,6 @@ package Sinfo is\n       --  Subtype_Indication (Node5)\n       --  Generic_Parent_Type (Node4-Sem) (set for an actual derived type).\n       --  Exception_Junk (Flag8-Sem)\n-      --  Has_Dynamic_Range_Check (Flag12-Sem)\n \n       -------------------------------\n       -- 3.2.2  Subtype Indication --\n@@ -9588,9 +9578,6 @@ package Sinfo is\n    function Has_Dynamic_Length_Check\n      (N : Node_Id) return Boolean;    -- Flag10\n \n-   function Has_Dynamic_Range_Check\n-     (N : Node_Id) return Boolean;    -- Flag12\n-\n    function Has_Init_Expression\n      (N : Node_Id) return Boolean;    -- Flag14\n \n@@ -10694,9 +10681,6 @@ package Sinfo is\n    procedure Set_Has_Dynamic_Length_Check\n      (N : Node_Id; Val : Boolean := True);    -- Flag10\n \n-   procedure Set_Has_Dynamic_Range_Check\n-     (N : Node_Id; Val : Boolean := True);    -- Flag12\n-\n    procedure Set_Has_Init_Expression\n      (N : Node_Id; Val : Boolean := True);    -- Flag14\n \n@@ -13347,7 +13331,6 @@ package Sinfo is\n    pragma Inline (Has_Created_Identifier);\n    pragma Inline (Has_Dereference_Action);\n    pragma Inline (Has_Dynamic_Length_Check);\n-   pragma Inline (Has_Dynamic_Range_Check);\n    pragma Inline (Has_Init_Expression);\n    pragma Inline (Has_Local_Raise);\n    pragma Inline (Has_Self_Reference);\n@@ -13712,7 +13695,6 @@ package Sinfo is\n    pragma Inline (Set_Has_Created_Identifier);\n    pragma Inline (Set_Has_Dereference_Action);\n    pragma Inline (Set_Has_Dynamic_Length_Check);\n-   pragma Inline (Set_Has_Dynamic_Range_Check);\n    pragma Inline (Set_Has_Init_Expression);\n    pragma Inline (Set_Has_Local_Raise);\n    pragma Inline (Set_Has_No_Elaboration_Code);"}, {"sha": "ffd0231d11b39195d151829b47d0114b5489c771", "filename": "gcc/ada/treepr.adb", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbe7d67f5ffdadeee67e0060bde212d09e38a704/gcc%2Fada%2Ftreepr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbe7d67f5ffdadeee67e0060bde212d09e38a704/gcc%2Fada%2Ftreepr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftreepr.adb?ref=bbe7d67f5ffdadeee67e0060bde212d09e38a704", "patch": "@@ -1131,12 +1131,6 @@ package body Treepr is\n                Print_Eol;\n             end if;\n \n-            if Has_Dynamic_Range_Check (N) then\n-               Print_Str (Prefix_Str_Char);\n-               Print_Str (\"Has_Dynamic_Range_Check = True\");\n-               Print_Eol;\n-            end if;\n-\n             if Is_Controlling_Actual (N) then\n                Print_Str (Prefix_Str_Char);\n                Print_Str (\"Is_Controlling_Actual = True\");"}]}