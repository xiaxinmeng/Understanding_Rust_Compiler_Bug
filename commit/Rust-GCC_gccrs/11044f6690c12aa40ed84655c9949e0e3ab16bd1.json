{"sha": "11044f6690c12aa40ed84655c9949e0e3ab16bd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTEwNDRmNjY5MGMxMmFhNDBlZDg0NjU1Yzk5NDllMGUzYWIxNmJkMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-07-17T15:25:54Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-07-17T15:25:54Z"}, "message": "(expand_function_end): If function is non-leaf and stack checking is\nrequested, emit needed probes.\n\nFrom-SVN: r14470", "tree": {"sha": "0062d75cd2f60f21cfeb9d982c65395fdc4f51c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0062d75cd2f60f21cfeb9d982c65395fdc4f51c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11044f6690c12aa40ed84655c9949e0e3ab16bd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11044f6690c12aa40ed84655c9949e0e3ab16bd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11044f6690c12aa40ed84655c9949e0e3ab16bd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11044f6690c12aa40ed84655c9949e0e3ab16bd1/comments", "author": null, "committer": null, "parents": [{"sha": "edff249168080e7c7c893f57c0c578819afcb348", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edff249168080e7c7c893f57c0c578819afcb348", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edff249168080e7c7c893f57c0c578819afcb348"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "582c4cabf8880bf0615440d3bf72f6f5b511595a", "filename": "gcc/function.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11044f6690c12aa40ed84655c9949e0e3ab16bd1/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11044f6690c12aa40ed84655c9949e0e3ab16bd1/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=11044f6690c12aa40ed84655c9949e0e3ab16bd1", "patch": "@@ -5494,6 +5494,26 @@ expand_function_end (filename, line, end_bindings)\n       emit_insns_before (seq, tail_recursion_reentry);\n     }\n \n+  /* If we are doing stack checking and this function makes calls,\n+     do a stack probe at the start of the function to ensure we have enough\n+     space for another stack frame.  */\n+  if (flag_stack_check && ! STACK_CHECK_BUILTIN)\n+    {\n+      rtx insn, seq;\n+\n+      for (insn = get_insns (); insn; insn = NEXT_INSN (insn))\n+\tif (GET_CODE (insn) == CALL_INSN)\n+\t  {\n+\t    start_sequence ();\n+\t    probe_stack_range (STACK_CHECK_PROTECT,\n+\t\t\t       GEN_INT (STACK_CHECK_MAX_FRAME_SIZE));\n+\t    seq = get_insns ();\n+\t    end_sequence ();\n+\t    emit_insns_before (seq, tail_recursion_reentry);\n+\t    break;\n+\t  }\n+    }\n+\n   /* Warn about unused parms if extra warnings were specified.  */\n   if (warn_unused && extra_warnings)\n     {"}]}