{"sha": "fccc55155dd303b502f04c8a17af1d0a9f31f6d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNjYzU1MTU1ZGQzMDNiNTAyZjA0YzhhMTdhZjFkMGE5ZjMxZjZkNQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-05-13T10:38:38Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-05-13T10:38:38Z"}, "message": "rtl.def (REG): Remove middle field.\n\ngcc/\n\t* rtl.def (REG): Remove middle field.\n\t* rtl.h (rtx_def): Add orignal_regno to u2.\n\t(ORIGINAL_REGNO): Use it instead of field 1.\n\t(REG_ATTRS): Lower field index accordingly.\n\t* gengtype.c (adjust_field_rtx_def): Remove handling of\n\tORIGINAL_REGNO.  Move REG_ATTRS index down.\n\t* print-rtl.c (print_rtx): Move ORIGINAL_REGNO handling to the\n\tcode that prints the REGNO.\n\nFrom-SVN: r210359", "tree": {"sha": "7c2a545a9dec5b5eecb37bb29488b40f31b09783", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c2a545a9dec5b5eecb37bb29488b40f31b09783"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fccc55155dd303b502f04c8a17af1d0a9f31f6d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fccc55155dd303b502f04c8a17af1d0a9f31f6d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fccc55155dd303b502f04c8a17af1d0a9f31f6d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fccc55155dd303b502f04c8a17af1d0a9f31f6d5/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "925c1bae48b5b8dcc87a514e6e467582d735aa40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/925c1bae48b5b8dcc87a514e6e467582d735aa40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/925c1bae48b5b8dcc87a514e6e467582d735aa40"}], "stats": {"total": 36, "additions": 22, "deletions": 14}, "files": [{"sha": "217579eb62156eef1a259d035e3ffc857a87e628", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccc55155dd303b502f04c8a17af1d0a9f31f6d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccc55155dd303b502f04c8a17af1d0a9f31f6d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fccc55155dd303b502f04c8a17af1d0a9f31f6d5", "patch": "@@ -1,3 +1,14 @@\n+2014-05-13  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* rtl.def (REG): Remove middle field.\n+\t* rtl.h (rtx_def): Add orignal_regno to u2.\n+\t(ORIGINAL_REGNO): Use it instead of field 1.\n+\t(REG_ATTRS): Lower field index accordingly.\n+\t* gengtype.c (adjust_field_rtx_def): Remove handling of\n+\tORIGINAL_REGNO.  Move REG_ATTRS index down.\n+\t* print-rtl.c (print_rtx): Move ORIGINAL_REGNO handling to the\n+\tcode that prints the REGNO.\n+\n 2014-05-13  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* print-rtl.c (print_rtx): Guard whole '0' block with ifndef"}, {"sha": "dca930f1280bc8f68a20153f6c2b3cb8e459802e", "filename": "gcc/gengtype.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccc55155dd303b502f04c8a17af1d0a9f31f6d5/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccc55155dd303b502f04c8a17af1d0a9f31f6d5/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=fccc55155dd303b502f04c8a17af1d0a9f31f6d5", "patch": "@@ -1248,8 +1248,6 @@ adjust_field_rtx_def (type_p t, options_p ARG_UNUSED (opt))\n \t      else if (i == DEBUG_EXPR && aindex == 0)\n \t\tt = tree_tp, subname = \"rt_tree\";\n \t      else if (i == REG && aindex == 1)\n-\t\tt = scalar_tp, subname = \"rt_int\";\n-\t      else if (i == REG && aindex == 2)\n \t\tt = reg_attrs_tp, subname = \"rt_reg\";\n \t      else if (i == SCRATCH && aindex == 0)\n \t\tt = scalar_tp, subname = \"rt_int\";"}, {"sha": "cbffadaae689d228209d8cebc0602e49daed1564", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccc55155dd303b502f04c8a17af1d0a9f31f6d5/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccc55155dd303b502f04c8a17af1d0a9f31f6d5/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=fccc55155dd303b502f04c8a17af1d0a9f31f6d5", "patch": "@@ -216,12 +216,7 @@ print_rtx (const_rtx in_rtx)\n \t   that the field has several different valid contents.  */\n       case '0':\n #ifndef GENERATOR_FILE\n-\tif (i == 1 && REG_P (in_rtx))\n-\t  {\n-\t    if (REGNO (in_rtx) != ORIGINAL_REGNO (in_rtx))\n-\t      fprintf (outfile, \" [%d]\", ORIGINAL_REGNO (in_rtx));\n-\t  }\n-\telse if (i == 1 && GET_CODE (in_rtx) == SYMBOL_REF)\n+\tif (i == 1 && GET_CODE (in_rtx) == SYMBOL_REF)\n \t  {\n \t    int flags = SYMBOL_REF_FLAGS (in_rtx);\n \t    if (flags)\n@@ -491,6 +486,8 @@ print_rtx (const_rtx in_rtx)\n \t\t\t   REG_OFFSET (in_rtx));\n \t\tfputs (\" ]\", outfile);\n \t      }\n+\t    if (REG_P (in_rtx) && REGNO (in_rtx) != ORIGINAL_REGNO (in_rtx))\n+\t      fprintf (outfile, \" [%d]\", ORIGINAL_REGNO (in_rtx));\n #endif\n \n \t    if (is_insn && &INSN_CODE (in_rtx) == &XINT (in_rtx, i)"}, {"sha": "19a0fa173b8f656f7449769e1fa2681b3d1749e3", "filename": "gcc/rtl.def", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccc55155dd303b502f04c8a17af1d0a9f31f6d5/gcc%2Frtl.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccc55155dd303b502f04c8a17af1d0a9f31f6d5/gcc%2Frtl.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.def?ref=fccc55155dd303b502f04c8a17af1d0a9f31f6d5", "patch": "@@ -378,12 +378,10 @@ DEF_RTL_EXPR(PC, \"pc\", \"\", RTX_OBJ)\n /* A register.  The \"operand\" is the register number, accessed with\n    the REGNO macro.  If this number is less than FIRST_PSEUDO_REGISTER\n    than a hardware register is being referred to.  The second operand\n-   holds the original register number - this will be different for a\n-   pseudo register that got turned into a hard register.  The third\n-   operand points to a reg_attrs structure.\n+   points to a reg_attrs structure.\n    This rtx needs to have as many (or more) fields as a MEM, since we\n    can change REG rtx's into MEMs during reload.  */\n-DEF_RTL_EXPR(REG, \"reg\", \"i00\", RTX_OBJ)\n+DEF_RTL_EXPR(REG, \"reg\", \"i0\", RTX_OBJ)\n \n /* A scratch register.  This represents a register used only within a\n    single insn.  It will be turned into a REG during register allocation"}, {"sha": "487bfd08538eef223063e4c831b701473ad8f70f", "filename": "gcc/rtl.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccc55155dd303b502f04c8a17af1d0a9f31f6d5/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccc55155dd303b502f04c8a17af1d0a9f31f6d5/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=fccc55155dd303b502f04c8a17af1d0a9f31f6d5", "patch": "@@ -352,6 +352,9 @@ struct GTY((chain_next (\"RTX_NEXT (&%h)\"),\n        layout for that case and use the gap for extra code-specific\n        information.  */\n \n+    /* The ORIGINAL_REGNO of a REG.  */\n+    unsigned int original_regno;\n+\n     /* In a CONST_WIDE_INT (aka hwivec_def), this is the number of\n        HOST_WIDE_INTs in the hwivec_def.  */\n     unsigned int num_elem;\n@@ -1194,7 +1197,8 @@ enum label_kind\n /* ORIGINAL_REGNO holds the number the register originally had; for a\n    pseudo register turned into a hard reg this will hold the old pseudo\n    register number.  */\n-#define ORIGINAL_REGNO(RTX) X0UINT (RTX, 1)\n+#define ORIGINAL_REGNO(RTX) \\\n+  (RTL_FLAG_CHECK1 (\"ORIGINAL_REGNO\", (RTX), REG)->u2.original_regno)\n \n /* Force the REGNO macro to only be used on the lhs.  */\n static inline unsigned int\n@@ -1641,7 +1645,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n /* The register attribute block.  We provide access macros for each value\n    in the block and provide defaults if none specified.  */\n-#define REG_ATTRS(RTX) X0REGATTR (RTX, 2)\n+#define REG_ATTRS(RTX) X0REGATTR (RTX, 1)\n \n #ifndef GENERATOR_FILE\n /* For a MEM rtx, the alias set.  If 0, this MEM is not in any alias"}]}