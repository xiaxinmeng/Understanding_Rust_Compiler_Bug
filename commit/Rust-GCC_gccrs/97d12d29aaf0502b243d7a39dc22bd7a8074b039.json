{"sha": "97d12d29aaf0502b243d7a39dc22bd7a8074b039", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdkMTJkMjlhYWYwNTAyYjI0M2Q3YTM5ZGMyMmJkN2E4MDc0YjAzOQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-11-25T22:24:58Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-11-25T22:24:58Z"}, "message": "re PR c++/54485 (g++ should diagnose default arguments in out-of-line definitions for template class member functions)\n\n/cp\n2013-11-25  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/54485\n\t* decl.c (duplicate_decls): Enforce 8.3.6/6 about default arguments\n\tfor member functions of class templates.\n\n/testsuite\n2013-11-25  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/54485\n\t* g++.dg/other/default8.C: New.\n\t* g++.dg/tc1/dr217.C: Remove xfail.\n\t* g++.dg/other/default5.C: Adjust.\n\t* g++.old-deja/g++.mike/p1989.C: Likewise.\n\nFrom-SVN: r205367", "tree": {"sha": "953843fe30524203dce49ad0d86d59500fe7b653", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/953843fe30524203dce49ad0d86d59500fe7b653"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97d12d29aaf0502b243d7a39dc22bd7a8074b039", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97d12d29aaf0502b243d7a39dc22bd7a8074b039", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97d12d29aaf0502b243d7a39dc22bd7a8074b039", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97d12d29aaf0502b243d7a39dc22bd7a8074b039/comments", "author": null, "committer": null, "parents": [{"sha": "4fd602a1e050ca035265ae53f2dfe721505811a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fd602a1e050ca035265ae53f2dfe721505811a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fd602a1e050ca035265ae53f2dfe721505811a5"}], "stats": {"total": 117, "additions": 98, "deletions": 19}, "files": [{"sha": "64f9a23632db3289c226d975d137e56ae9f8efbd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97d12d29aaf0502b243d7a39dc22bd7a8074b039/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97d12d29aaf0502b243d7a39dc22bd7a8074b039/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=97d12d29aaf0502b243d7a39dc22bd7a8074b039", "patch": "@@ -1,3 +1,9 @@\n+2013-11-25  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/54485\n+\t* decl.c (duplicate_decls): Enforce 8.3.6/6 about default arguments\n+\tfor member functions of class templates.\n+\n 2013-11-25  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/58607"}, {"sha": "bf4d8e3d6846e6dd00a293609f1e95c548a39846", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 37, "deletions": 15, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97d12d29aaf0502b243d7a39dc22bd7a8074b039/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97d12d29aaf0502b243d7a39dc22bd7a8074b039/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=97d12d29aaf0502b243d7a39dc22bd7a8074b039", "patch": "@@ -1704,25 +1704,47 @@ duplicate_decls (tree newdecl, tree olddecl, bool newdecl_is_friend)\n \t  if (TREE_CODE (TREE_TYPE (newdecl)) == METHOD_TYPE)\n \t    t1 = TREE_CHAIN (t1), t2 = TREE_CHAIN (t2);\n \n-\t  for (; t1 && t1 != void_list_node;\n-\t       t1 = TREE_CHAIN (t1), t2 = TREE_CHAIN (t2), i++)\n-\t    if (TREE_PURPOSE (t1) && TREE_PURPOSE (t2))\n-\t      {\n-\t\tif (1 == simple_cst_equal (TREE_PURPOSE (t1),\n-\t\t\t\t\t   TREE_PURPOSE (t2)))\n+\t  if (TREE_CODE (TREE_TYPE (newdecl)) == METHOD_TYPE\n+\t      && CLASSTYPE_TEMPLATE_INFO (CP_DECL_CONTEXT (newdecl)))\n+\t    {\n+\t      /* C++11 8.3.6/6.\n+\t\t Default arguments for a member function of a class template\n+\t\t shall be specified on the initial declaration of the member\n+\t\t function within the class template.  */\n+\t      for (; t2 && t2 != void_list_node; t2 = TREE_CHAIN (t2))\n+\t\tif (TREE_PURPOSE (t2))\n \t\t  {\n-\t\t    permerror (input_location, \"default argument given for parameter %d of %q#D\",\n-\t\t\t       i, newdecl);\n-\t\t    permerror (input_location, \"after previous specification in %q+#D\", olddecl);\n+\t\t    permerror (input_location,\n+\t\t\t       \"redeclaration of %q#D may not have default \"\n+\t\t\t       \"arguments\", newdecl);\n+\t\t    break;\n \t\t  }\n-\t\telse\n+\t    }\n+\t  else\n+\t    {\n+\t      for (; t1 && t1 != void_list_node;\n+\t\t   t1 = TREE_CHAIN (t1), t2 = TREE_CHAIN (t2), i++)\n+\t\tif (TREE_PURPOSE (t1) && TREE_PURPOSE (t2))\n \t\t  {\n-\t\t    error (\"default argument given for parameter %d of %q#D\",\n-\t\t\t   i, newdecl);\n-\t\t    error (\"after previous specification in %q+#D\",\n-\t\t\t\t olddecl);\n+\t\t    if (1 == simple_cst_equal (TREE_PURPOSE (t1),\n+\t\t\t\t\t       TREE_PURPOSE (t2)))\n+\t\t      {\n+\t\t\tpermerror (input_location,\n+\t\t\t\t   \"default argument given for parameter %d \"\n+\t\t\t\t   \"of %q#D\", i, newdecl);\n+\t\t\tpermerror (input_location,\n+\t\t\t\t   \"after previous specification in %q+#D\",\n+\t\t\t\t   olddecl);\n+\t\t      }\n+\t\t    else\n+\t\t      {\n+\t\t\terror (\"default argument given for parameter %d \"\n+\t\t\t       \"of %q#D\", i, newdecl);\n+\t\t\terror (\"after previous specification in %q+#D\",\n+\t\t\t       olddecl);\n+\t\t      }\n \t\t  }\n-\t      }\n+\t    }\n \t}\n     }\n "}, {"sha": "2e9ff158fb286485bb5748dbe5040774750a3c86", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97d12d29aaf0502b243d7a39dc22bd7a8074b039/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97d12d29aaf0502b243d7a39dc22bd7a8074b039/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=97d12d29aaf0502b243d7a39dc22bd7a8074b039", "patch": "@@ -1,3 +1,11 @@\n+2013-11-25  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/54485\n+\t* g++.dg/other/default8.C: New.\n+\t* g++.dg/tc1/dr217.C: Remove xfail.\n+\t* g++.dg/other/default5.C: Adjust.\n+\t* g++.old-deja/g++.mike/p1989.C: Likewise.\n+\n 2013-11-25  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/58607"}, {"sha": "87acb765e6d61014e741517e9b19e4b06a92439b", "filename": "gcc/testsuite/g++.dg/other/default5.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97d12d29aaf0502b243d7a39dc22bd7a8074b039/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdefault5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97d12d29aaf0502b243d7a39dc22bd7a8074b039/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdefault5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdefault5.C?ref=97d12d29aaf0502b243d7a39dc22bd7a8074b039", "patch": "@@ -43,5 +43,5 @@ template<int> struct B\n   void F2(int, int, int = 0);\n };\n \n-template<int N> void B<N>::F1(int, int = 0, int) {}\n-template<int N> void B<N>::F2(int = 0, int, int) {}  // { dg-error \"default\" }\n+template<int N> void B<N>::F1(int, int = 0, int) {}  // { dg-error \"default arguments\" }\n+template<int N> void B<N>::F2(int = 0, int, int) {}  // { dg-error \"default arguments|parameter 2\" }"}, {"sha": "255a661356c595c89ec060ebc88d730cfa7b82cb", "filename": "gcc/testsuite/g++.dg/other/default8.C", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97d12d29aaf0502b243d7a39dc22bd7a8074b039/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdefault8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97d12d29aaf0502b243d7a39dc22bd7a8074b039/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdefault8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdefault8.C?ref=97d12d29aaf0502b243d7a39dc22bd7a8074b039", "patch": "@@ -0,0 +1,43 @@\n+// PR c++54485\n+\n+template<typename T>\n+class K1\n+{\n+  int fn(int, int);\n+  int gn(int, int);\n+};\n+\n+template<typename T>\n+int K1<T>::fn (int a, int b = 3)      // { dg-error \"default arguments\" }\n+{\n+  return a - b;\n+}\n+\n+template<typename T>\n+int K1<T>::gn (int a = 1, int b = 3)  // { dg-error \"default arguments\" }\n+{\n+  return a - b;\n+}\n+\n+template<typename T>\n+class K2\n+{\n+  template<typename U>\n+  int fn(int, int);\n+  template<typename U>\n+  int gn(int, int);\n+};\n+\n+template<typename T>\n+template<typename U>\n+int K2<T>::fn (int a, int b = 3)  // { dg-error \"default arguments\" }\n+{\n+  return a - b;\n+}\n+\n+template<typename T>\n+template<typename U>\n+int K2<T>::gn (int a = 1, int b = 3)  // { dg-error \"default arguments\" }\n+{\n+  return a - b;\n+}"}, {"sha": "099359b216a70e6493c6a96c94dd1dae9e351c65", "filename": "gcc/testsuite/g++.dg/tc1/dr217.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97d12d29aaf0502b243d7a39dc22bd7a8074b039/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr217.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97d12d29aaf0502b243d7a39dc22bd7a8074b039/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr217.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr217.C?ref=97d12d29aaf0502b243d7a39dc22bd7a8074b039", "patch": "@@ -10,5 +10,5 @@ struct S\n };\n \n template <class T>\n-void S<T>::foo (int = 0)  // { dg-error \"\" \"default arguments for parameters of member functions of class templates can be specified in the initial declaration only\" { xfail *-*-* } }\n+void S<T>::foo (int = 0)  // { dg-error \"\" \"default arguments for parameters of member functions of class templates can be specified in the initial declaration only\" }\n { }"}, {"sha": "fdede63e406e05f2187b9ba466b2eff9f5de79ec", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p1989.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97d12d29aaf0502b243d7a39dc22bd7a8074b039/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp1989.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97d12d29aaf0502b243d7a39dc22bd7a8074b039/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp1989.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp1989.C?ref=97d12d29aaf0502b243d7a39dc22bd7a8074b039", "patch": "@@ -108,7 +108,7 @@ List_DL<T>::prepend(const T& item)\n \n template<class T>\n void\n-List_DL<T>::insert(const T& item, Pix x, bool before = TRUE)\n+List_DL<T>::insert(const T& item, Pix x, bool before = TRUE)  // { dg-error \"default arguments\" }\n {\n     link<T> *l = (link<T> *) x;\n "}]}