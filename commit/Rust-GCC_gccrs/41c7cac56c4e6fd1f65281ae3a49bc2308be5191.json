{"sha": "41c7cac56c4e6fd1f65281ae3a49bc2308be5191", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFjN2NhYzU2YzRlNmZkMWY2NTI4MWFlM2E0OWJjMjMwOGJlNTE5MQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2016-11-16T13:07:08Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2016-11-16T13:07:08Z"}, "message": "Use df_read_modify_subreg_p in cprop.c\n\nlocal_cprop_find_used_regs punted on all multiword registers,\nwith the comment:\n\n          /* Setting a subreg of a register larger than word_mode leaves\n             the non-written words unchanged.  */\n\nBut this only applies if the outer mode is smaller than the\ninner mode.  If they're the same size then writes to the subreg\nare a normal full update.\n\nThis patch uses df_read_modify_subreg_p instead.  A later patch\nadds more uses of the same routine, but this part had a (positive)\neffect on code generation for the testsuite whereas the others\nseemed to be simple clean-ups.\n\ngcc/\n2016-11-15  Richard Sandiford  <richard.sandiford@arm.com>\n\t    Alan Hayward  <alan.hayward@arm.com>\n\t    David Sherwood  <david.sherwood@arm.com>\n\n\t* cprop.c (local_cprop_find_used_regs): Use df_read_modify_subreg_p.\n\nCo-Authored-By: Alan Hayward <alan.hayward@arm.com>\nCo-Authored-By: David Sherwood <david.sherwood@arm.com>\n\nFrom-SVN: r242488", "tree": {"sha": "1acc46013971eef5f7ea5a8dbc857b58f238086d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1acc46013971eef5f7ea5a8dbc857b58f238086d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41c7cac56c4e6fd1f65281ae3a49bc2308be5191", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41c7cac56c4e6fd1f65281ae3a49bc2308be5191", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41c7cac56c4e6fd1f65281ae3a49bc2308be5191", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41c7cac56c4e6fd1f65281ae3a49bc2308be5191/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d964ba07c74523684f25cc9f4860ea2f8dba2513", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d964ba07c74523684f25cc9f4860ea2f8dba2513", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d964ba07c74523684f25cc9f4860ea2f8dba2513"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "fe32d0f7d3129ea018b731eeba20ef307dc1d393", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41c7cac56c4e6fd1f65281ae3a49bc2308be5191/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41c7cac56c4e6fd1f65281ae3a49bc2308be5191/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=41c7cac56c4e6fd1f65281ae3a49bc2308be5191", "patch": "@@ -1,3 +1,9 @@\n+2016-11-16  Richard Sandiford  <richard.sandiford@arm.com>\n+\t    Alan Hayward  <alan.hayward@arm.com>\n+\t    David Sherwood  <david.sherwood@arm.com>\n+\n+\t* cprop.c (local_cprop_find_used_regs): Use df_read_modify_subreg_p.\n+\n 2016-11-16  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/78333"}, {"sha": "31868a5c6bb4f5110276eb285d0ace01a61fb820", "filename": "gcc/cprop.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41c7cac56c4e6fd1f65281ae3a49bc2308be5191/gcc%2Fcprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41c7cac56c4e6fd1f65281ae3a49bc2308be5191/gcc%2Fcprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcprop.c?ref=41c7cac56c4e6fd1f65281ae3a49bc2308be5191", "patch": "@@ -1161,9 +1161,7 @@ local_cprop_find_used_regs (rtx *xptr, void *data)\n       return;\n \n     case SUBREG:\n-      /* Setting a subreg of a register larger than word_mode leaves\n-\t the non-written words unchanged.  */\n-      if (GET_MODE_BITSIZE (GET_MODE (SUBREG_REG (x))) > BITS_PER_WORD)\n+      if (df_read_modify_subreg_p (x))\n \treturn;\n       break;\n "}]}