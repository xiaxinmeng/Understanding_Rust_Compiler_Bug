{"sha": "26e5b0fd2818c746fcd016bd1b6fa434204a5d72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZlNWIwZmQyODE4Yzc0NmZjZDAxNmJkMWI2ZmE0MzQyMDRhNWQ3Mg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2013-09-08T16:18:04Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2013-09-08T16:18:04Z"}, "message": "cgraph.h (varpool_node_hook, [...]): Declare.\n\n\n\t* cgraph.h (varpool_node_hook, varpool_node_hook_list,\n\tvarpool_add_node_removal_hook, varpool_add_variable_insertion_hook,\n\tvarpool_remove_variable_insertion_hook): Declare.\n\t* varpool.c (varpool_node_hook_list): New structure.\n\t(first_varpool_node_removal_hook,\n\tfirst_varpool_variable_insertion_hook): New variables.\n\t(varpool_add_node_removal_hook, varpool_remove_node_removal_hook,\n\tvarpool_call_node_removal_hooks, varpool_add_variable_insertion_hook,\n\tvarpool_remove_variable_insertion_hook,\n\tvarpool_call_variable_insertion_hooks): New functions.\n\t(varpool_remove_node): Use it.\n\nFrom-SVN: r202367", "tree": {"sha": "6075f267e3874e93d97b8ce0a1942ed9d03f860a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6075f267e3874e93d97b8ce0a1942ed9d03f860a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26e5b0fd2818c746fcd016bd1b6fa434204a5d72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26e5b0fd2818c746fcd016bd1b6fa434204a5d72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26e5b0fd2818c746fcd016bd1b6fa434204a5d72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26e5b0fd2818c746fcd016bd1b6fa434204a5d72/comments", "author": null, "committer": null, "parents": [{"sha": "97f1f314feae938cf854af1ab844196383d0ddc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97f1f314feae938cf854af1ab844196383d0ddc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97f1f314feae938cf854af1ab844196383d0ddc2"}], "stats": {"total": 120, "additions": 119, "deletions": 1}, "files": [{"sha": "7d69e19bb51fd1eefd09e2e23ce489510404c720", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26e5b0fd2818c746fcd016bd1b6fa434204a5d72/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26e5b0fd2818c746fcd016bd1b6fa434204a5d72/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=26e5b0fd2818c746fcd016bd1b6fa434204a5d72", "patch": "@@ -1,3 +1,17 @@\n+2013-09-08  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cgraph.h (varpool_node_hook, varpool_node_hook_list,\n+\tvarpool_add_node_removal_hook, varpool_add_variable_insertion_hook,\n+\tvarpool_remove_variable_insertion_hook): Declare.\n+\t* varpool.c (varpool_node_hook_list): New structure.\n+\t(first_varpool_node_removal_hook,\n+\tfirst_varpool_variable_insertion_hook): New variables.\n+\t(varpool_add_node_removal_hook, varpool_remove_node_removal_hook,\n+\tvarpool_call_node_removal_hooks, varpool_add_variable_insertion_hook,\n+\tvarpool_remove_variable_insertion_hook,\n+\tvarpool_call_variable_insertion_hooks): New functions.\n+\t(varpool_remove_node): Use it.\n+\n 2013-09-08  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/54941"}, {"sha": "a6a0a2438f73bdc86d55cda086038bf600d200c4", "filename": "gcc/cgraph.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26e5b0fd2818c746fcd016bd1b6fa434204a5d72/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26e5b0fd2818c746fcd016bd1b6fa434204a5d72/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=26e5b0fd2818c746fcd016bd1b6fa434204a5d72", "patch": "@@ -701,22 +701,30 @@ void cgraph_mark_address_taken_node (struct cgraph_node *);\n \n typedef void (*cgraph_edge_hook)(struct cgraph_edge *, void *);\n typedef void (*cgraph_node_hook)(struct cgraph_node *, void *);\n+typedef void (*varpool_node_hook)(struct varpool_node *, void *);\n typedef void (*cgraph_2edge_hook)(struct cgraph_edge *, struct cgraph_edge *,\n \t\t\t\t  void *);\n typedef void (*cgraph_2node_hook)(struct cgraph_node *, struct cgraph_node *,\n \t\t\t\t  void *);\n struct cgraph_edge_hook_list;\n struct cgraph_node_hook_list;\n+struct varpool_node_hook_list;\n struct cgraph_2edge_hook_list;\n struct cgraph_2node_hook_list;\n struct cgraph_edge_hook_list *cgraph_add_edge_removal_hook (cgraph_edge_hook, void *);\n void cgraph_remove_edge_removal_hook (struct cgraph_edge_hook_list *);\n struct cgraph_node_hook_list *cgraph_add_node_removal_hook (cgraph_node_hook,\n \t\t\t\t\t\t\t    void *);\n void cgraph_remove_node_removal_hook (struct cgraph_node_hook_list *);\n+struct varpool_node_hook_list *varpool_add_node_removal_hook (varpool_node_hook,\n+\t\t\t\t\t\t\t      void *);\n+void varpool_remove_node_removal_hook (struct varpool_node_hook_list *);\n struct cgraph_node_hook_list *cgraph_add_function_insertion_hook (cgraph_node_hook,\n \t\t\t\t\t\t\t          void *);\n void cgraph_remove_function_insertion_hook (struct cgraph_node_hook_list *);\n+struct varpool_node_hook_list *varpool_add_variable_insertion_hook (varpool_node_hook,\n+\t\t\t\t\t\t\t            void *);\n+void varpool_remove_variable_insertion_hook (struct varpool_node_hook_list *);\n void cgraph_call_function_insertion_hooks (struct cgraph_node *node);\n struct cgraph_2edge_hook_list *cgraph_add_edge_duplication_hook (cgraph_2edge_hook, void *);\n void cgraph_remove_edge_duplication_hook (struct cgraph_2edge_hook_list *);"}, {"sha": "2e47d288536a4a501b9151a9733db9e9147a2efd", "filename": "gcc/varpool.c", "status": "modified", "additions": 97, "deletions": 1, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26e5b0fd2818c746fcd016bd1b6fa434204a5d72/gcc%2Fvarpool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26e5b0fd2818c746fcd016bd1b6fa434204a5d72/gcc%2Fvarpool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarpool.c?ref=26e5b0fd2818c746fcd016bd1b6fa434204a5d72", "patch": "@@ -36,6 +36,100 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-flow.h\"\n #include \"flags.h\"\n \n+/* List of hooks triggered on varpool_node events.  */\n+struct varpool_node_hook_list {\n+  varpool_node_hook hook;\n+  void *data;\n+  struct varpool_node_hook_list *next;\n+};\n+\n+/* List of hooks triggered when a node is removed.  */\n+struct varpool_node_hook_list *first_varpool_node_removal_hook;\n+/* List of hooks triggered when an variable is inserted.  */\n+struct varpool_node_hook_list *first_varpool_variable_insertion_hook;\n+\n+/* Register HOOK to be called with DATA on each removed node.  */\n+struct varpool_node_hook_list *\n+varpool_add_node_removal_hook (varpool_node_hook hook, void *data)\n+{\n+  struct varpool_node_hook_list *entry;\n+  struct varpool_node_hook_list **ptr = &first_varpool_node_removal_hook;\n+\n+  entry = (struct varpool_node_hook_list *) xmalloc (sizeof (*entry));\n+  entry->hook = hook;\n+  entry->data = data;\n+  entry->next = NULL;\n+  while (*ptr)\n+    ptr = &(*ptr)->next;\n+  *ptr = entry;\n+  return entry;\n+}\n+\n+/* Remove ENTRY from the list of hooks called on removing nodes.  */\n+void\n+varpool_remove_node_removal_hook (struct varpool_node_hook_list *entry)\n+{\n+  struct varpool_node_hook_list **ptr = &first_varpool_node_removal_hook;\n+\n+  while (*ptr != entry)\n+    ptr = &(*ptr)->next;\n+  *ptr = entry->next;\n+  free (entry);\n+}\n+\n+/* Call all node removal hooks.  */\n+static void\n+varpool_call_node_removal_hooks (struct varpool_node *node)\n+{\n+  struct varpool_node_hook_list *entry = first_varpool_node_removal_hook;\n+  while (entry)\n+  {\n+    entry->hook (node, entry->data);\n+    entry = entry->next;\n+  }\n+}\n+\n+/* Register HOOK to be called with DATA on each inserted node.  */\n+struct varpool_node_hook_list *\n+varpool_add_variable_insertion_hook (varpool_node_hook hook, void *data)\n+{\n+  struct varpool_node_hook_list *entry;\n+  struct varpool_node_hook_list **ptr = &first_varpool_variable_insertion_hook;\n+\n+  entry = (struct varpool_node_hook_list *) xmalloc (sizeof (*entry));\n+  entry->hook = hook;\n+  entry->data = data;\n+  entry->next = NULL;\n+  while (*ptr)\n+    ptr = &(*ptr)->next;\n+  *ptr = entry;\n+  return entry;\n+}\n+\n+/* Remove ENTRY from the list of hooks called on inserted nodes.  */\n+void\n+varpool_remove_variable_insertion_hook (struct varpool_node_hook_list *entry)\n+{\n+  struct varpool_node_hook_list **ptr = &first_varpool_variable_insertion_hook;\n+\n+  while (*ptr != entry)\n+    ptr = &(*ptr)->next;\n+  *ptr = entry->next;\n+  free (entry);\n+}\n+\n+/* Call all node insertion hooks.  */\n+void\n+varpool_call_variable_insertion_hooks (struct varpool_node *node)\n+{\n+  struct varpool_node_hook_list *entry = first_varpool_variable_insertion_hook;\n+  while (entry)\n+  {\n+    entry->hook (node, entry->data);\n+    entry = entry->next;\n+  }\n+}\n+\n /* Allocate new callgraph node and insert it into basic data structures.  */\n \n struct varpool_node *\n@@ -65,8 +159,9 @@ varpool_node_for_decl (tree decl)\n void\n varpool_remove_node (struct varpool_node *node)\n {\n-  symtab_unregister_node ((symtab_node)node);\n   tree init;\n+  varpool_call_node_removal_hooks (node);\n+  symtab_unregister_node ((symtab_node)node);\n \n   /* Because we remove references from external functions before final compilation,\n      we may end up removing useful constructors.\n@@ -246,6 +341,7 @@ varpool_add_new_variable (tree decl)\n   struct varpool_node *node;\n   varpool_finalize_decl (decl);\n   node = varpool_node_for_decl (decl);\n+  varpool_call_variable_insertion_hooks (node);\n   if (varpool_externally_visible_p (node))\n     node->symbol.externally_visible = true;\n }"}]}