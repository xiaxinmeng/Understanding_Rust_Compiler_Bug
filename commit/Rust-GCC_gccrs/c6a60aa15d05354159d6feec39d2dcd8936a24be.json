{"sha": "c6a60aa15d05354159d6feec39d2dcd8936a24be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZhNjBhYTE1ZDA1MzU0MTU5ZDZmZWVjMzlkMmRjZDg5MzZhMjRiZQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@gnat.com", "date": "2004-10-04T14:59:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-10-04T14:59:10Z"}, "message": "exp_ch4.adb (Is_Procedure_Actual): Correct so that this does not consider expressions buried within a procedure...\n\n2004-10-04  Robert Dewar  <dewar@gnat.com>\n\n\t* exp_ch4.adb (Is_Procedure_Actual): Correct so that this does not\n\tconsider expressions buried within a procedure actual to be an actual.\n\tThis caused some blowups with uses of packed slices within a procedure\n\tactual.\n\nFrom-SVN: r88501", "tree": {"sha": "d871e190b881629be4ecf7da2c58a2a23ed58de4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d871e190b881629be4ecf7da2c58a2a23ed58de4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6a60aa15d05354159d6feec39d2dcd8936a24be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6a60aa15d05354159d6feec39d2dcd8936a24be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6a60aa15d05354159d6feec39d2dcd8936a24be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6a60aa15d05354159d6feec39d2dcd8936a24be/comments", "author": null, "committer": null, "parents": [{"sha": "1fdebfe5fd9189af6e36d46c1b6a2733ad145bf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fdebfe5fd9189af6e36d46c1b6a2733ad145bf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fdebfe5fd9189af6e36d46c1b6a2733ad145bf0"}], "stats": {"total": 43, "additions": 33, "deletions": 10}, "files": [{"sha": "50474d6abcd27de8b028df721e1245ba3cb8e171", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6a60aa15d05354159d6feec39d2dcd8936a24be/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6a60aa15d05354159d6feec39d2dcd8936a24be/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c6a60aa15d05354159d6feec39d2dcd8936a24be", "patch": "@@ -1,3 +1,10 @@\n+2004-10-04  Robert Dewar  <dewar@gnat.com>\n+\n+\t* exp_ch4.adb (Is_Procedure_Actual): Correct so that this does not\n+\tconsider expressions buried within a procedure actual to be an actual.\n+\tThis caused some blowups with uses of packed slices within a procedure\n+\tactual.\n+\n 2004-10-04  Robert Dewar  <dewar@gnat.com>\n \n \t* exp_ch3.adb (Needs_Simple_Initialization): Modular packed arrays no"}, {"sha": "ac3c3894585fa739af18ef34179bce15ee47a19b", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 26, "deletions": 10, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6a60aa15d05354159d6feec39d2dcd8936a24be/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6a60aa15d05354159d6feec39d2dcd8936a24be/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=c6a60aa15d05354159d6feec39d2dcd8936a24be", "patch": "@@ -5987,9 +5987,16 @@ package body Exp_Ch4 is\n       Ptp  : Entity_Id           := Etype (Pfx);\n \n       function Is_Procedure_Actual (N : Node_Id) return Boolean;\n-      --  Check whether context is a procedure call, in which case\n-      --  expansion of a bit-packed slice is deferred until the call\n-      --  itself is expanded.\n+      --  Check whether the argument is an actual for a procedure call,\n+      --  in which case the expansion of a bit-packed slice is deferred\n+      --  until the call itself is expanded. The reason this is required\n+      --  is that we might have an IN OUT or OUT parameter, and the copy out\n+      --  is essential, and that copy out would be missed if we created a\n+      --  temporary here in Expand_N_Slice. Note that we don't bother\n+      --  to test specifically for an IN OUT or OUT mode parameter, since it\n+      --  is a bit tricky to do, and it is harmless to defer expansion\n+      --  in the IN case, since the call processing will still generate the\n+      --  appropriate copy in operation, which will take care of the slice.\n \n       procedure Make_Temporary;\n       --  Create a named variable for the value of the slice, in\n@@ -6004,21 +6011,30 @@ package body Exp_Ch4 is\n          Par : Node_Id := Parent (N);\n \n       begin\n-         while Present (Par)\n-           and then Nkind (Par) not in N_Statement_Other_Than_Procedure_Call\n          loop\n+            --  If our parent is a procedure call we can return\n+\n             if Nkind (Par) = N_Procedure_Call_Statement then\n                return True;\n \n-            elsif Nkind (Par) = N_Function_Call then\n-               return False;\n+            --  If our parent is a type conversion, keep climbing the\n+            --  tree, since a type conversion can be a procedure actual.\n+            --  Also keep climbing if parameter association or a qualified\n+            --  expression, since these are additional cases that do can\n+            --  appear on procedure actuals.\n \n-            else\n+            elsif Nkind (Par) = N_Type_Conversion\n+              or else Nkind (Par) = N_Parameter_Association\n+              or else Nkind (Par) = N_Qualified_Expression\n+            then\n                Par := Parent (Par);\n+\n+               --  Any other case is not what we are looking for\n+\n+            else\n+               return False;\n             end if;\n          end loop;\n-\n-         return False;\n       end Is_Procedure_Actual;\n \n       --------------------"}]}