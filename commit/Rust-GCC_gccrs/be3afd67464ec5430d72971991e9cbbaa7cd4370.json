{"sha": "be3afd67464ec5430d72971991e9cbbaa7cd4370", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUzYWZkNjc0NjRlYzU0MzBkNzI5NzE5OTFlOWNiYmFhN2NkNDM3MA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-02-04T12:14:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-02-04T12:14:52Z"}, "message": "re PR rtl-optimization/57915 (ICE in set_address_disp, at rtlanal.c:5537)\n\n\tPR rtl-optimization/57915\n\t* recog.c (simplify_while_replacing): If all unary/binary/relational\n\toperation arguments are constant, attempt to simplify those.\n\n\t* gcc.target/i386/pr57915.c: New test.\n\nFrom-SVN: r207460", "tree": {"sha": "42139a9e9fb7794f1b0595094fa65ed385e9a0c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42139a9e9fb7794f1b0595094fa65ed385e9a0c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be3afd67464ec5430d72971991e9cbbaa7cd4370", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be3afd67464ec5430d72971991e9cbbaa7cd4370", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be3afd67464ec5430d72971991e9cbbaa7cd4370", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be3afd67464ec5430d72971991e9cbbaa7cd4370/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "81c87471e9ed4952d63477644b1843a42fd1fbb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81c87471e9ed4952d63477644b1843a42fd1fbb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81c87471e9ed4952d63477644b1843a42fd1fbb3"}], "stats": {"total": 73, "additions": 72, "deletions": 1}, "files": [{"sha": "41fc97792a677bc573a7282b1c3cae5f502211cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be3afd67464ec5430d72971991e9cbbaa7cd4370/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be3afd67464ec5430d72971991e9cbbaa7cd4370/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be3afd67464ec5430d72971991e9cbbaa7cd4370", "patch": "@@ -1,5 +1,9 @@\n 2014-02-04  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/57915\n+\t* recog.c (simplify_while_replacing): If all unary/binary/relational\n+\toperation arguments are constant, attempt to simplify those.\n+\n \tPR middle-end/59261\n \t* expmed.c (expand_mult): For MODE_VECTOR_INT multiplication\n \tif there is no vashl<mode>3 or ashl<mode>3 insn, skip_synth."}, {"sha": "f9040dcde7591ace470eb4ebfeffcc9771b2f9cd", "filename": "gcc/recog.c", "status": "modified", "additions": 30, "deletions": 1, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be3afd67464ec5430d72971991e9cbbaa7cd4370/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be3afd67464ec5430d72971991e9cbbaa7cd4370/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=be3afd67464ec5430d72971991e9cbbaa7cd4370", "patch": "@@ -565,7 +565,7 @@ simplify_while_replacing (rtx *loc, rtx to, rtx object,\n {\n   rtx x = *loc;\n   enum rtx_code code = GET_CODE (x);\n-  rtx new_rtx;\n+  rtx new_rtx = NULL_RTX;\n \n   if (SWAPPABLE_OPERANDS_P (x)\n       && swap_commutative_operands_p (XEXP (x, 0), XEXP (x, 1)))\n@@ -579,6 +579,35 @@ simplify_while_replacing (rtx *loc, rtx to, rtx object,\n       code = GET_CODE (x);\n     }\n \n+  /* Canonicalize arithmetics with all constant operands.  */\n+  switch (GET_RTX_CLASS (code))\n+    {\n+    case RTX_UNARY:\n+      if (CONSTANT_P (XEXP (x, 0)))\n+\tnew_rtx = simplify_unary_operation (code, GET_MODE (x), XEXP (x, 0),\n+\t\t\t\t\t    op0_mode);\n+      break;\n+    case RTX_COMM_ARITH:\n+    case RTX_BIN_ARITH:\n+      if (CONSTANT_P (XEXP (x, 0)) && CONSTANT_P (XEXP (x, 1)))\n+\tnew_rtx = simplify_binary_operation (code, GET_MODE (x), XEXP (x, 0),\n+\t\t\t\t\t     XEXP (x, 1));\n+      break;\n+    case RTX_COMPARE:\n+    case RTX_COMM_COMPARE:\n+      if (CONSTANT_P (XEXP (x, 0)) && CONSTANT_P (XEXP (x, 1)))\n+\tnew_rtx = simplify_relational_operation (code, GET_MODE (x), op0_mode,\n+\t\t\t\t\t\t XEXP (x, 0), XEXP (x, 1));\n+      break;\n+    default:\n+      break;\n+    }\n+  if (new_rtx)\n+    {\n+      validate_change (object, loc, new_rtx, 1);\n+      return;\n+    }\n+\n   switch (code)\n     {\n     case PLUS:"}, {"sha": "31e271dc34f239535d4a287d4547a339a5bd35ae", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be3afd67464ec5430d72971991e9cbbaa7cd4370/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be3afd67464ec5430d72971991e9cbbaa7cd4370/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=be3afd67464ec5430d72971991e9cbbaa7cd4370", "patch": "@@ -1,3 +1,8 @@\n+2014-02-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/57915\n+\t* gcc.target/i386/pr57915.c: New test.\n+\n 2014-02-04  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* g++.dg/init/dso_handle2.C: Compile with -fuse-cxa-atexit."}, {"sha": "0b143e0cc4bc210659e531d4f5e1d74b86276714", "filename": "gcc/testsuite/gcc.target/i386/pr57915.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be3afd67464ec5430d72971991e9cbbaa7cd4370/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr57915.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be3afd67464ec5430d72971991e9cbbaa7cd4370/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr57915.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr57915.c?ref=be3afd67464ec5430d72971991e9cbbaa7cd4370", "patch": "@@ -0,0 +1,33 @@\n+/* PR rtl-optimization/57915 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Os\" } */\n+\n+extern struct T { char a[8]; char b[16]; } t;\n+int c;\n+void foo (void);\n+\n+extern inline char *\n+baz (char *x, const char *y)\n+{\n+  const char *e = y;\n+  unsigned long f, g;\n+  asm (\"\" : \"+c\" (f), \"+D\" (e) : \"a\" ('\\0'), \"X\" (*e));\n+  g = e - 1 - y;\n+  __builtin_memcpy (x, y, g);\n+  x[g] = '\\0';\n+  return x;\n+}\n+\n+void\n+bar (void)\n+{\n+  char d[16];\n+  baz (d, t.b);\n+\n+  for (;;)\n+    {\n+      foo ();\n+      if (c)\n+\tbaz (d, t.b);\n+    }\n+}"}]}