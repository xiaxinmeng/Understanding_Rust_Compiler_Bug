{"sha": "3297949ea9b4b350f0ccc97f289d9d918c9ba8c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI5Nzk0OWVhOWI0YjM1MGYwY2NjOTdmMjg5ZDlkOTE4YzliYThjNw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-12-16T15:03:44Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-12-16T15:03:44Z"}, "message": "[AArch64] PR target/68696 FAIL: gcc.target/aarch64/vbslq_u64_1.c scan-assembler-times bif\\tv 1\n\n        PR target/68696\n        * config/aarch64/aarch64-simd.md (*aarch64_simd_bsl<mode>_alt):\n        New pattern.\n        (aarch64_simd_bsl<mode>_internal): Update comment to reflect\n        the above.\n\nFrom-SVN: r231696", "tree": {"sha": "3466fe18e2dca6219b230ff32adceb3adac9bfd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3466fe18e2dca6219b230ff32adceb3adac9bfd3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3297949ea9b4b350f0ccc97f289d9d918c9ba8c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3297949ea9b4b350f0ccc97f289d9d918c9ba8c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3297949ea9b4b350f0ccc97f289d9d918c9ba8c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3297949ea9b4b350f0ccc97f289d9d918c9ba8c7/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7b5ab0cdc1e9deb628f98ced5f6e80703a8835f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b5ab0cdc1e9deb628f98ced5f6e80703a8835f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b5ab0cdc1e9deb628f98ced5f6e80703a8835f3"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "75da80b5cbf78ffe98edd2a1f7daa3531bb75fd7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3297949ea9b4b350f0ccc97f289d9d918c9ba8c7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3297949ea9b4b350f0ccc97f289d9d918c9ba8c7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3297949ea9b4b350f0ccc97f289d9d918c9ba8c7", "patch": "@@ -1,3 +1,11 @@\n+2015-12-16  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/68696\n+\t* config/aarch64/aarch64-simd.md (*aarch64_simd_bsl<mode>_alt):\n+\tNew pattern.\n+\t(aarch64_simd_bsl<mode>_internal): Update comment to reflect\n+\tthe above.\n+\n 2015-12-16  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/68870"}, {"sha": "2856f017c16380623960e21d66149d18efe176f0", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3297949ea9b4b350f0ccc97f289d9d918c9ba8c7/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3297949ea9b4b350f0ccc97f289d9d918c9ba8c7/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=3297949ea9b4b350f0ccc97f289d9d918c9ba8c7", "patch": "@@ -2153,6 +2153,10 @@\n ;;     bit op0, op2, mask\n ;;   if (op0 = op2) (so 0-bits in mask choose bits from op1, else op0)\n ;;     bif op0, op1, mask\n+;;\n+;; This pattern is expanded to by the aarch64_simd_bsl<mode> expander.\n+;; Some forms of straight-line code may generate the equivalent form\n+;; in *aarch64_simd_bsl<mode>_alt.\n \n (define_insn \"aarch64_simd_bsl<mode>_internal\"\n   [(set (match_operand:VSDQ_I_DI 0 \"register_operand\" \"=w,w,w\")\n@@ -2172,6 +2176,29 @@\n   [(set_attr \"type\" \"neon_bsl<q>\")]\n )\n \n+;; We need this form in addition to the above pattern to match the case\n+;; when combine tries merging three insns such that the second operand of\n+;; the outer XOR matches the second operand of the inner XOR rather than\n+;; the first.  The two are equivalent but since recog doesn't try all\n+;; permutations of commutative operations, we have to have a separate pattern.\n+\n+(define_insn \"*aarch64_simd_bsl<mode>_alt\"\n+  [(set (match_operand:VSDQ_I_DI 0 \"register_operand\" \"=w,w,w\")\n+\t(xor:VSDQ_I_DI\n+\t   (and:VSDQ_I_DI\n+\t     (xor:VSDQ_I_DI\n+\t       (match_operand:VSDQ_I_DI 3 \"register_operand\" \"w,w,0\")\n+\t       (match_operand:VSDQ_I_DI 2 \"register_operand\" \"w,0,w\"))\n+\t      (match_operand:VSDQ_I_DI 1 \"register_operand\" \"0,w,w\"))\n+\t  (match_dup:VSDQ_I_DI 2)))]\n+  \"TARGET_SIMD\"\n+  \"@\n+  bsl\\\\t%0.<Vbtype>, %3.<Vbtype>, %2.<Vbtype>\n+  bit\\\\t%0.<Vbtype>, %3.<Vbtype>, %1.<Vbtype>\n+  bif\\\\t%0.<Vbtype>, %2.<Vbtype>, %1.<Vbtype>\"\n+  [(set_attr \"type\" \"neon_bsl<q>\")]\n+)\n+\n (define_expand \"aarch64_simd_bsl<mode>\"\n   [(match_operand:VALLDIF 0 \"register_operand\")\n    (match_operand:<V_cmp_result> 1 \"register_operand\")"}]}