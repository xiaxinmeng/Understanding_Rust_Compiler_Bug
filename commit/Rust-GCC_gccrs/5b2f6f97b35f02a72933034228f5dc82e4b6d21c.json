{"sha": "5b2f6f97b35f02a72933034228f5dc82e4b6d21c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIyZjZmOTdiMzVmMDJhNzI5MzMwMzQyMjhmNWRjODJlNGI2ZDIxYw==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2012-05-31T09:35:58Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2012-05-31T09:35:58Z"}, "message": "invoke.texi (AVR Options): Fix typos.\n\n\t* doc/invoke.texi (AVR Options): Fix typos.\n\nFrom-SVN: r188053", "tree": {"sha": "e917b894b22465d51809ef7d4a32140cdb38e711", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e917b894b22465d51809ef7d4a32140cdb38e711"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b2f6f97b35f02a72933034228f5dc82e4b6d21c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b2f6f97b35f02a72933034228f5dc82e4b6d21c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b2f6f97b35f02a72933034228f5dc82e4b6d21c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b2f6f97b35f02a72933034228f5dc82e4b6d21c/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37239ce661d1a5af831658c27ee36c806a8b2539", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37239ce661d1a5af831658c27ee36c806a8b2539", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37239ce661d1a5af831658c27ee36c806a8b2539"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "d8dd4aa4fc32660e0ffa2f6a83156f59ac6050f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b2f6f97b35f02a72933034228f5dc82e4b6d21c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b2f6f97b35f02a72933034228f5dc82e4b6d21c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b2f6f97b35f02a72933034228f5dc82e4b6d21c", "patch": "@@ -1,3 +1,7 @@\n+2012-05-31  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* doc/invoke.texi (AVR Options): Fix typos.\n+\n 2012-05-31  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* config/cris/cris.h (CC1_SPEC): Pass through all -march="}, {"sha": "94441f85e438c65696fe6a7011bb643b785abe55", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b2f6f97b35f02a72933034228f5dc82e4b6d21c/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b2f6f97b35f02a72933034228f5dc82e4b6d21c/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=5b2f6f97b35f02a72933034228f5dc82e4b6d21c", "patch": "@@ -11171,26 +11171,26 @@ points to.\n \n @item\n The startup code from libgcc never sets @code{EIND}.\n-Notice that startup code is a blend of code from libgcc and AVR-Libc.\n-For the impact of AVR-Libc on @code{EIND}, see the\n-@w{@uref{http://nongnu.org/avr-libc/user-manual,AVR-Libc user manual}}.\n+Notice that startup code is a blend of code from libgcc and AVR-LibC.\n+For the impact of AVR-LibC on @code{EIND}, see the\n+@w{@uref{http://nongnu.org/avr-libc/user-manual,AVR-LibC user manual}}.\n \n @item\n It is legitimate for user-specific startup code to set up @code{EIND}\n early, for example by means of initialization code located in\n section @code{.init3}. Such code runs prior to general startup code\n that initializes RAM and calls constructors, but after the bit\n-of startup code from AVR-Libc that sets @code{EIND} to the segment\n+of startup code from AVR-LibC that sets @code{EIND} to the segment\n where the vector table is located.\n @example\n #include <avr/io.h>\n \n static void\n-__attribute__ ((section (\".init3\"), naked, used, no_instrument_function))\n+__attribute__((section(\".init3\"),naked,used,no_instrument_function))\n init3_set_eind (void)\n @{\n-    __asm volatile (\"ldi r24, pm_hh8(__trampolines_start)\" \"\\n\\t\"\n-                    \"out %i0, r24\" :: \"n\" (&EIND) : \"r24\", \"memory\");\n+    __asm volatile (\"ldi r24,pm_hh8(__trampolines_start)\\n\\t\"\n+                    \"out %i0,r24\" :: \"n\" (&EIND) : \"r24\",\"memory\");\n @}\n @end example\n "}]}