{"sha": "9abf8c9534144fe9b4948a3104655983821ca7a1", "node_id": "C_kwDOANBUbNoAKDlhYmY4Yzk1MzQxNDRmZTliNDk0OGEzMTA0NjU1OTgzODIxY2E3YTE", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-10-08T07:40:16Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-10-11T07:56:37Z"}, "message": "options: use cl_optimization_hash.\n\ngcc/ChangeLog:\n\n\t* tree.c (cl_option_hasher::hash): Use cl_optimization_hash\n\tand remove legacy hashing code.", "tree": {"sha": "34f10f8122749d81b004fae694be0e56835ffad3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34f10f8122749d81b004fae694be0e56835ffad3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9abf8c9534144fe9b4948a3104655983821ca7a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9abf8c9534144fe9b4948a3104655983821ca7a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9abf8c9534144fe9b4948a3104655983821ca7a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9abf8c9534144fe9b4948a3104655983821ca7a1/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e5bc4e4506a7ae7bb88fc925a425652a1da6b2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e5bc4e4506a7ae7bb88fc925a425652a1da6b2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e5bc4e4506a7ae7bb88fc925a425652a1da6b2d"}], "stats": {"total": 19, "additions": 1, "deletions": 18}, "files": [{"sha": "7bfd64160f4e4bf8aae5c704fa30b80d80edb13f", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9abf8c9534144fe9b4948a3104655983821ca7a1/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9abf8c9534144fe9b4948a3104655983821ca7a1/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=9abf8c9534144fe9b4948a3104655983821ca7a1", "patch": "@@ -11473,30 +11473,13 @@ hashval_t\n cl_option_hasher::hash (tree x)\n {\n   const_tree const t = x;\n-  const char *p;\n-  size_t i;\n-  size_t len = 0;\n-  hashval_t hash = 0;\n \n   if (TREE_CODE (t) == OPTIMIZATION_NODE)\n-    {\n-      p = (const char *)TREE_OPTIMIZATION (t);\n-      len = sizeof (struct cl_optimization);\n-    }\n-\n+    return cl_optimization_hash (TREE_OPTIMIZATION (t));\n   else if (TREE_CODE (t) == TARGET_OPTION_NODE)\n     return cl_target_option_hash (TREE_TARGET_OPTION (t));\n-\n   else\n     gcc_unreachable ();\n-\n-  /* assume most opt flags are just 0/1, some are 2-3, and a few might be\n-     something else.  */\n-  for (i = 0; i < len; i++)\n-    if (p[i])\n-      hash = (hash << 4) ^ ((i << 2) | p[i]);\n-\n-  return hash;\n }\n \n /* Return nonzero if the value represented by *X (an OPTIMIZATION or"}]}