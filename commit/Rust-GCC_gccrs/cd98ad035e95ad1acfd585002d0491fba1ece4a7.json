{"sha": "cd98ad035e95ad1acfd585002d0491fba1ece4a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q5OGFkMDM1ZTk1YWQxYWNmZDU4NTAwMmQwNDkxZmJhMWVjZTRhNw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-02-27T09:47:27Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-02-27T09:47:27Z"}, "message": "linux64.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Remove.\n\nWed Feb 27 10:45:19 CET 2002  Jan Hubicka  <jh@suse.cz>\n\n\t* linux64.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Remove.\n\t* x86-64.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Allways define.\n\nFrom-SVN: r50097", "tree": {"sha": "92e991e6712fc665b0c20918b01082196248a102", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92e991e6712fc665b0c20918b01082196248a102"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd98ad035e95ad1acfd585002d0491fba1ece4a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd98ad035e95ad1acfd585002d0491fba1ece4a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd98ad035e95ad1acfd585002d0491fba1ece4a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd98ad035e95ad1acfd585002d0491fba1ece4a7/comments", "author": null, "committer": null, "parents": [{"sha": "639ae55bd3ea8924ff31212d39b4dbd3998090cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/639ae55bd3ea8924ff31212d39b4dbd3998090cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/639ae55bd3ea8924ff31212d39b4dbd3998090cd"}], "stats": {"total": 22, "additions": 5, "deletions": 17}, "files": [{"sha": "6b3b54abd50d71ce53074846805839a91a52f7a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd98ad035e95ad1acfd585002d0491fba1ece4a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd98ad035e95ad1acfd585002d0491fba1ece4a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd98ad035e95ad1acfd585002d0491fba1ece4a7", "patch": "@@ -1,3 +1,8 @@\n+Wed Feb 27 10:45:19 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* linux64.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Remove.\n+\t* x86-64.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Allways define.\n+\n Wed Feb 27 10:39:20 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* linux64.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Define."}, {"sha": "8d70972638c30d3ef8a50a356a63655ef202dc1d", "filename": "gcc/config/i386/linux64.h", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd98ad035e95ad1acfd585002d0491fba1ece4a7/gcc%2Fconfig%2Fi386%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd98ad035e95ad1acfd585002d0491fba1ece4a7/gcc%2Fconfig%2Fi386%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux64.h?ref=cd98ad035e95ad1acfd585002d0491fba1ece4a7", "patch": "@@ -30,21 +30,6 @@ Boston, MA 02111-1307, USA.  */\n #undef CPP_SPEC\n #define CPP_SPEC \"%(cpp_cpu) %{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__} %{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT} %{!m32:-D__LONG_MAX__=9223372036854775807L}\"\n \n-/* A C statement to output to the stdio stream FILE an assembler\n-   command to advance the location counter to a multiple of 1<<LOG\n-   bytes if it is within MAX_SKIP bytes.\n-\n-   This is used to align code labels according to Intel recommendations.  */\n-\n-#define ASM_OUTPUT_MAX_SKIP_ALIGN(FILE,LOG,MAX_SKIP)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    if ((LOG) != 0) {\t\t\t\t\t\t\t\\\n-      if ((MAX_SKIP) == 0) fprintf ((FILE), \"\\t.p2align %d\\n\", (LOG));\t\\\n-      else fprintf ((FILE), \"\\t.p2align %d,,%d\\n\", (LOG), (MAX_SKIP));\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  } while (0)\n-#endif\n-\n /* Provide a LINK_SPEC.  Here we provide support for the special GCC\n    options -static and -shared, which allow us to link things in one\n    of these three modes by applying the appropriate combinations of"}, {"sha": "56e46841729d72f90e68fe6eb513ec0e3bd9db3f", "filename": "gcc/config/i386/x86-64.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd98ad035e95ad1acfd585002d0491fba1ece4a7/gcc%2Fconfig%2Fi386%2Fx86-64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd98ad035e95ad1acfd585002d0491fba1ece4a7/gcc%2Fconfig%2Fi386%2Fx86-64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx86-64.h?ref=cd98ad035e95ad1acfd585002d0491fba1ece4a7", "patch": "@@ -73,15 +73,13 @@ Boston, MA 02111-1307, USA.  */\n \n    This is used to align code labels according to Intel recommendations.  */\n \n-#ifdef HAVE_GAS_MAX_SKIP_P2ALIGN\n #define ASM_OUTPUT_MAX_SKIP_ALIGN(FILE,LOG,MAX_SKIP)\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     if ((LOG) != 0) {\t\t\t\t\t\t\t\\\n       if ((MAX_SKIP) == 0) fprintf ((FILE), \"\\t.p2align %d\\n\", (LOG));\t\\\n       else fprintf ((FILE), \"\\t.p2align %d,,%d\\n\", (LOG), (MAX_SKIP));\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   } while (0)\n-#endif\n \n \n /* i386 System V Release 4 uses DWARF debugging info."}]}