{"sha": "f5c03155aa77bdb065fed3c5a0031db45a850493", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVjMDMxNTVhYTc3YmRiMDY1ZmVkM2M1YTAwMzFkYjQ1YTg1MDQ5Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-12-11T23:49:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-12-11T23:49:30Z"}, "message": "re PR target/92723 (ICE in expand_shift_1, at expmed.c:2635)\n\n\tPR target/92723\n\t* tree-vect-patterns.c (vect_recog_rotate_pattern): If dt is not\n\tvect_internal_def, use oprnd1 as is, without trying to cast it.\n\tFormatting fix.\n\n\t* gcc.dg/vect/pr92723.c: New test.\n\nFrom-SVN: r279265", "tree": {"sha": "663f9c03ab5cfa1241566de459ae21079f9630d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/663f9c03ab5cfa1241566de459ae21079f9630d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5c03155aa77bdb065fed3c5a0031db45a850493", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5c03155aa77bdb065fed3c5a0031db45a850493", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5c03155aa77bdb065fed3c5a0031db45a850493", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5c03155aa77bdb065fed3c5a0031db45a850493/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4f9438698143ae15df338ce085f765c1a5016b36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f9438698143ae15df338ce085f765c1a5016b36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f9438698143ae15df338ce085f765c1a5016b36"}], "stats": {"total": 36, "additions": 24, "deletions": 12}, "files": [{"sha": "4be2b9681c896d4fa6dc53645d3cf07d4e9d333e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c03155aa77bdb065fed3c5a0031db45a850493/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c03155aa77bdb065fed3c5a0031db45a850493/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f5c03155aa77bdb065fed3c5a0031db45a850493", "patch": "@@ -1,3 +1,10 @@\n+2019-12-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/92723\n+\t* tree-vect-patterns.c (vect_recog_rotate_pattern): If dt is not\n+\tvect_internal_def, use oprnd1 as is, without trying to cast it.\n+\tFormatting fix.\n+\n 2019-12-11  Martin Sebor  <msebor@redhat.com>\n \n \t* builtins.c (compute_objsize): Add an argument and set it to offset"}, {"sha": "8488ae942cd1aafd3432d8c0a2df15e0626d501c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c03155aa77bdb065fed3c5a0031db45a850493/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c03155aa77bdb065fed3c5a0031db45a850493/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f5c03155aa77bdb065fed3c5a0031db45a850493", "patch": "@@ -1,3 +1,8 @@\n+2019-12-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/92723\n+\t* gcc.dg/vect/pr92723.c: New test.\n+\n 2019-12-11 Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/92897"}, {"sha": "0d60883cadd008acf28081e4bb7b785be2de7964", "filename": "gcc/testsuite/gcc.dg/vect/pr92723.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c03155aa77bdb065fed3c5a0031db45a850493/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr92723.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c03155aa77bdb065fed3c5a0031db45a850493/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr92723.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr92723.c?ref=f5c03155aa77bdb065fed3c5a0031db45a850493", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+\n+void\n+foo (unsigned long long *x, unsigned long long *y, int z)\n+{\n+  int i;\n+  for (i = 0; i < 1024; i++)\n+    x[i] = (y[i] >> z) | (y[i] << (-z & (__SIZEOF_LONG_LONG__ * __CHAR_BIT__ - 1)));\n+}"}, {"sha": "ae41cbe5941b2ad4b1a9695719703d31d287627a", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c03155aa77bdb065fed3c5a0031db45a850493/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c03155aa77bdb065fed3c5a0031db45a850493/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=f5c03155aa77bdb065fed3c5a0031db45a850493", "patch": "@@ -2432,14 +2432,12 @@ vect_recog_rotate_pattern (stmt_vec_info stmt_vinfo, tree *type_out)\n       oprnd0 = def;\n     }\n \n-  if (dt == vect_external_def\n-      && TREE_CODE (oprnd1) == SSA_NAME)\n+  if (dt == vect_external_def && TREE_CODE (oprnd1) == SSA_NAME)\n     ext_def = vect_get_external_def_edge (vinfo, oprnd1);\n \n   def = NULL_TREE;\n   scalar_int_mode mode = SCALAR_INT_TYPE_MODE (type);\n-  if (TREE_CODE (oprnd1) == INTEGER_CST\n-      || TYPE_MODE (TREE_TYPE (oprnd1)) == mode)\n+  if (dt != vect_internal_def || TYPE_MODE (TREE_TYPE (oprnd1)) == mode)\n     def = oprnd1;\n   else if (def_stmt && gimple_assign_cast_p (def_stmt))\n     {\n@@ -2454,14 +2452,7 @@ vect_recog_rotate_pattern (stmt_vec_info stmt_vinfo, tree *type_out)\n     {\n       def = vect_recog_temp_ssa_var (type, NULL);\n       def_stmt = gimple_build_assign (def, NOP_EXPR, oprnd1);\n-      if (ext_def)\n-\t{\n-\t  basic_block new_bb\n-\t    = gsi_insert_on_edge_immediate (ext_def, def_stmt);\n-\t  gcc_assert (!new_bb);\n-\t}\n-      else\n-\tappend_pattern_def_seq (stmt_vinfo, def_stmt);\n+      append_pattern_def_seq (stmt_vinfo, def_stmt);\n     }\n   stype = TREE_TYPE (def);\n   scalar_int_mode smode = SCALAR_INT_TYPE_MODE (stype);"}]}