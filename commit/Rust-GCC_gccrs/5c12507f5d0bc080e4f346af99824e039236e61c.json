{"sha": "5c12507f5d0bc080e4f346af99824e039236e61c", "node_id": "C_kwDOANBUbNoAKDVjMTI1MDdmNWQwYmMwODBlNGYzNDZhZjk5ODI0ZTAzOTIzNmU2MWM", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-01-20T13:25:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-01-20T15:50:34Z"}, "message": "middle-end/100786 - constant folding from incompatible alias\n\nThe following avoids us ICEing doing constant folding from variables\nwith aliases of different types.  The issue appears both in\nfolding and CCP and FRE can do more fancy stuff to still constant\nfold cases where the load is smaller than the initializer so\ndefer it to there.\n\n2022-01-20  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/100786\n\t* gimple-fold.cc (get_symbol_constant_value): Only return\n\tvalues of compatible type to the symbol.\n\n\t* gcc.dg/torture/pr100786.c: New testcase.", "tree": {"sha": "61747d6d9370e7df95b11c42e3bfd3e423594302", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61747d6d9370e7df95b11c42e3bfd3e423594302"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c12507f5d0bc080e4f346af99824e039236e61c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c12507f5d0bc080e4f346af99824e039236e61c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c12507f5d0bc080e4f346af99824e039236e61c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c12507f5d0bc080e4f346af99824e039236e61c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62eb400b51f8a552320a250b3ac0b5d2ebd8927f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62eb400b51f8a552320a250b3ac0b5d2ebd8927f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62eb400b51f8a552320a250b3ac0b5d2ebd8927f"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "3639aa206268e4807221dc38382781e4ea2a56fe", "filename": "gcc/gimple-fold.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c12507f5d0bc080e4f346af99824e039236e61c/gcc%2Fgimple-fold.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c12507f5d0bc080e4f346af99824e039236e61c/gcc%2Fgimple-fold.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.cc?ref=5c12507f5d0bc080e4f346af99824e039236e61c", "patch": "@@ -291,7 +291,9 @@ get_symbol_constant_value (tree sym)\n       if (val)\n \t{\n \t  val = canonicalize_constructor_val (unshare_expr (val), sym);\n-\t  if (val && is_gimple_min_invariant (val))\n+\t  if (val\n+\t      && is_gimple_min_invariant (val)\n+\t      && useless_type_conversion_p (TREE_TYPE (sym), TREE_TYPE (val)))\n \t    return val;\n \t  else\n \t    return NULL_TREE;"}, {"sha": "42f4e48559302e155d46dbf69e88fb44b04f570a", "filename": "gcc/testsuite/gcc.dg/torture/pr100786.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c12507f5d0bc080e4f346af99824e039236e61c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr100786.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c12507f5d0bc080e4f346af99824e039236e61c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr100786.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr100786.c?ref=5c12507f5d0bc080e4f346af99824e039236e61c", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+\n+const double a = 0;\n+extern int b __attribute__((alias(\"a\")));\n+void inc() { b++; }\n+\n+const int a2 = 0;\n+extern double b2 __attribute__((alias(\"a2\")));\n+void inc2() { b2+=1; }"}]}