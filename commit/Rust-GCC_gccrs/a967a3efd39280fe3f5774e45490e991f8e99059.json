{"sha": "a967a3efd39280fe3f5774e45490e991f8e99059", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk2N2EzZWZkMzkyODBmZTNmNTc3NGU0NTQ5MGU5OTFmOGU5OTA1OQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-07-14T09:06:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-07-14T10:31:42Z"}, "message": "tree-optimization/101445 - fix negative stride SLP vect with gaps\n\nThe following fixes the IV adjustment for the gap in a negative\nstride SLP vectorization.  The adjustment was in the wrong direction,\nnow fixes as in the patch.\n\n2021-07-14  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/101445\n\t* tree-vect-stmts.c (vectorizable_load): Do the gap adjustment\n\tof the IV in the correct direction for negative stride\n\taccesses.\n\n\t* gcc.dg/vect/pr101445.c: New testcase.", "tree": {"sha": "5d8652e56e7c6b696818e551a8972ca834822433", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d8652e56e7c6b696818e551a8972ca834822433"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a967a3efd39280fe3f5774e45490e991f8e99059", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a967a3efd39280fe3f5774e45490e991f8e99059", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a967a3efd39280fe3f5774e45490e991f8e99059", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a967a3efd39280fe3f5774e45490e991f8e99059/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3be762c2ed79e36b9c8faaea2be04725c967a34e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3be762c2ed79e36b9c8faaea2be04725c967a34e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3be762c2ed79e36b9c8faaea2be04725c967a34e"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "f8a6e9ce6f7fa514cacd8b58d9263636d1d28eff", "filename": "gcc/testsuite/gcc.dg/vect/pr101445.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a967a3efd39280fe3f5774e45490e991f8e99059/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr101445.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a967a3efd39280fe3f5774e45490e991f8e99059/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr101445.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr101445.c?ref=a967a3efd39280fe3f5774e45490e991f8e99059", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do run } */\n+\n+#include \"tree-vect.h\"\n+\n+int a[35] = { 1, 1, 3 };\n+\n+void __attribute__((noipa))\n+foo ()\n+{\n+  for (int b = 4; b >= 0; b--)\n+    {\n+      int tem = a[b * 5 + 3 + 1];\n+      a[b * 5 + 3] = tem;\n+      a[b * 5 + 2] = tem;\n+      a[b * 5 + 1] = tem;\n+      a[b * 5 + 0] = tem;\n+    }\n+}\n+\n+int main()\n+{\n+  check_vect ();\n+  foo ();\n+  for (int d = 0; d < 25; d++)\n+    if (a[d] != 0)\n+      __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "3980f0918b263ddf9c16f575511dbd8c474d0080", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a967a3efd39280fe3f5774e45490e991f8e99059/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a967a3efd39280fe3f5774e45490e991f8e99059/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=a967a3efd39280fe3f5774e45490e991f8e99059", "patch": "@@ -9759,6 +9759,9 @@ vectorizable_load (vec_info *vinfo,\n \t\t  poly_wide_int bump_val\n \t\t    = (wi::to_wide (TYPE_SIZE_UNIT (elem_type))\n \t\t       * group_gap_adj);\n+\t\t  if (tree_int_cst_sgn\n+\t\t\t(vect_dr_behavior (vinfo, dr_info)->step) == -1)\n+\t\t    bump_val = -bump_val;\n \t\t  tree bump = wide_int_to_tree (sizetype, bump_val);\n \t\t  dataref_ptr = bump_vector_ptr (vinfo, dataref_ptr, ptr_incr,\n \t\t\t\t\t\t gsi, stmt_info, bump);\n@@ -9772,6 +9775,9 @@ vectorizable_load (vec_info *vinfo,\n \t      poly_wide_int bump_val\n \t\t= (wi::to_wide (TYPE_SIZE_UNIT (elem_type))\n \t\t   * group_gap_adj);\n+\t      if (tree_int_cst_sgn\n+\t\t    (vect_dr_behavior (vinfo, dr_info)->step) == -1)\n+\t\tbump_val = -bump_val;\n \t      tree bump = wide_int_to_tree (sizetype, bump_val);\n \t      dataref_ptr = bump_vector_ptr (vinfo, dataref_ptr, ptr_incr, gsi,\n \t\t\t\t\t     stmt_info, bump);"}]}