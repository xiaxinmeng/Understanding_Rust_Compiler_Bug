{"sha": "9dac82c4dac4a4e47756c5a16067672339804cf0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWRhYzgyYzRkYWM0YTRlNDc3NTZjNWExNjA2NzY3MjMzOTgwNGNmMA==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2011-02-02T15:52:21Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2011-02-02T15:52:21Z"}, "message": "Fix PR40979 and PR47044: after LIM call copy_prop and DCE to clean up.\n\n2011-02-02  Sebastian Pop  <sebastian.pop@amd.com>\n\t    Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/40979\n\tPR bootstrap/47044\n\t* passes.c (init_optimization_passes): After LIM call copy_prop\n\tand DCE to clean up.\n\t* tree-ssa-loop.c (pass_graphite_transforms): Add TODO_dump_func.\n\n\t* gcc.dg/graphite/graphite.exp (DEFAULT_VECTCFLAGS): Add -ffast-math.\n\t* gcc.dg/graphite/pr35356-2.c: Adjust pattern.\n\t* gfortran.dg/graphite/graphite.exp: Run vect_files conditionally to\n\tcheck_vect_support_and_set_flags.\n\t* gfortran.dg/graphite/vect-pr40979.f90: New.\n\nCo-Authored-By: Richard Guenther <rguenther@suse.de>\n\nFrom-SVN: r169531", "tree": {"sha": "1625443d0948a9b0f09c519269bd5dfc6bd1c511", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1625443d0948a9b0f09c519269bd5dfc6bd1c511"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9dac82c4dac4a4e47756c5a16067672339804cf0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dac82c4dac4a4e47756c5a16067672339804cf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dac82c4dac4a4e47756c5a16067672339804cf0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dac82c4dac4a4e47756c5a16067672339804cf0/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14dd9aabd6cdb21bd3c482452239f06230be84c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14dd9aabd6cdb21bd3c482452239f06230be84c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14dd9aabd6cdb21bd3c482452239f06230be84c3"}], "stats": {"total": 62, "additions": 56, "deletions": 6}, "files": [{"sha": "79a140b9b2723d8b07be930c5c8c07e1305bfe03", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dac82c4dac4a4e47756c5a16067672339804cf0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dac82c4dac4a4e47756c5a16067672339804cf0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9dac82c4dac4a4e47756c5a16067672339804cf0", "patch": "@@ -1,3 +1,12 @@\n+2011-02-02  Sebastian Pop  <sebastian.pop@amd.com>\n+\t    Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/40979\n+\tPR bootstrap/47044\n+\t* passes.c (init_optimization_passes): After LIM call copy_prop\n+\tand DCE to clean up.\n+\t* tree-ssa-loop.c (pass_graphite_transforms): Add TODO_dump_func.\n+\n 2011-02-02  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR tree-optimization/47576"}, {"sha": "bf1bd4b6901900116fb7bc2709d602e7d4b2f090", "filename": "gcc/passes.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dac82c4dac4a4e47756c5a16067672339804cf0/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dac82c4dac4a4e47756c5a16067672339804cf0/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=9dac82c4dac4a4e47756c5a16067672339804cf0", "patch": "@@ -892,9 +892,9 @@ init_optimization_passes (void)\n \t    {\n \t      struct opt_pass **p = &pass_graphite.pass.sub;\n \t      NEXT_PASS (pass_graphite_transforms);\n+\t      NEXT_PASS (pass_lim);\n \t      NEXT_PASS (pass_copy_prop);\n \t      NEXT_PASS (pass_dce_loop);\n-\t      NEXT_PASS (pass_lim);\n \t    }\n \t  NEXT_PASS (pass_iv_canon);\n \t  NEXT_PASS (pass_if_conversion);"}, {"sha": "c4dd8ac0349f9ece44c0ffe21c2a741f82d3da06", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dac82c4dac4a4e47756c5a16067672339804cf0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dac82c4dac4a4e47756c5a16067672339804cf0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9dac82c4dac4a4e47756c5a16067672339804cf0", "patch": "@@ -1,3 +1,14 @@\n+2011-02-02  Sebastian Pop  <sebastian.pop@amd.com>\n+\t    Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/40979\n+\tPR bootstrap/47044\n+\t* gcc.dg/graphite/graphite.exp (DEFAULT_VECTCFLAGS): Add -ffast-math.\n+\t* gcc.dg/graphite/pr35356-2.c: Adjust pattern.\n+\t* gfortran.dg/graphite/graphite.exp: Run vect_files conditionally to\n+\tcheck_vect_support_and_set_flags.\n+\t* gfortran.dg/graphite/vect-pr40979.f90: New.\n+\n 2011-02-02  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/47572"}, {"sha": "cdf35ebab8a92ef26e1ce7d3213fea67f1ec7dfa", "filename": "gcc/testsuite/gcc.dg/graphite/graphite.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dac82c4dac4a4e47756c5a16067672339804cf0/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fgraphite.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dac82c4dac4a4e47756c5a16067672339804cf0/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fgraphite.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fgraphite.exp?ref=9dac82c4dac4a4e47756c5a16067672339804cf0", "patch": "@@ -58,7 +58,7 @@ dg-runtest $block_files       \"\" \"-O2 -floop-block -fno-loop-strip-mine -fno-loo\n \n # Vectorizer tests, to be run or compiled, depending on target capabilities.\n global DEFAULT_VECTCFLAGS\n-set DEFAULT_VECTCFLAGS \"-O2 -fgraphite-identity -ftree-vectorize -fno-vect-cost-model -fdump-tree-vect-details\"\n+set DEFAULT_VECTCFLAGS \"-O2 -fgraphite-identity -ftree-vectorize -fno-vect-cost-model -fdump-tree-vect-details -ffast-math\"\n \n if [check_vect_support_and_set_flags] {\n     dg-runtest $vect_files        \"\" $DEFAULT_VECTCFLAGS"}, {"sha": "66cfdea5aefecac046b42e24a0041898d8ac28e4", "filename": "gcc/testsuite/gcc.dg/graphite/pr35356-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dac82c4dac4a4e47756c5a16067672339804cf0/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr35356-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dac82c4dac4a4e47756c5a16067672339804cf0/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr35356-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr35356-2.c?ref=9dac82c4dac4a4e47756c5a16067672339804cf0", "patch": "@@ -39,6 +39,6 @@ foo (int bar, int n, int k)\n */\n \n \n-/* { dg-final { scan-tree-dump-times \"MIN_EXPR\" 2 \"graphite\" } } */\n-/* { dg-final { scan-tree-dump-times \"MAX_EXPR\" 2 \"graphite\" } } */\n+/* { dg-final { scan-tree-dump-times \"MIN_EXPR\" 4 \"graphite\" } } */\n+/* { dg-final { scan-tree-dump-times \"MAX_EXPR\" 4 \"graphite\" } } */\n /* { dg-final { cleanup-tree-dump \"graphite\" } } */"}, {"sha": "73c2aeed42f9fee25bcb7c6f991f535f80daf441", "filename": "gcc/testsuite/gfortran.dg/graphite/graphite.exp", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dac82c4dac4a4e47756c5a16067672339804cf0/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fgraphite.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dac82c4dac4a4e47756c5a16067672339804cf0/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fgraphite.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fgraphite.exp?ref=9dac82c4dac4a4e47756c5a16067672339804cf0", "patch": "@@ -51,7 +51,11 @@ gfortran-dg-runtest $scop_files        \"-O2 -fgraphite -fdump-tree-graphite-all\"\n gfortran-dg-runtest $id_files          \"-O2 -fgraphite-identity -ffast-math\"\n gfortran-dg-runtest $interchange_files \"-O2 -floop-interchange -fno-loop-block -fno-loop-strip-mine -ffast-math -fdump-tree-graphite-all\"\n gfortran-dg-runtest $block_files       \"-O2 -floop-block -fno-loop-strip-mine -fno-loop-interchange -ffast-math -fdump-tree-graphite-all\"\n-gfortran-dg-runtest $vect_files        \"-O2 -fgraphite-identity -ftree-vectorize -fno-vect-cost-model -fdump-tree-vect-details\"\n+\n+# Vectorizer tests, to be run or compiled, depending on target capabilities.\n+if [check_vect_support_and_set_flags] {\n+    gfortran-dg-runtest $vect_files \"-O2 -fgraphite-identity -ftree-vectorize -fno-vect-cost-model -fdump-tree-vect-details -ffast-math\"\n+}\n \n # Tests to be run.\n set dg-do-what-default run"}, {"sha": "21758e91fd5f94fdbc0a5284e2d4a4314f9397ff", "filename": "gcc/testsuite/gfortran.dg/graphite/vect-pr40979.f90", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dac82c4dac4a4e47756c5a16067672339804cf0/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fvect-pr40979.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dac82c4dac4a4e47756c5a16067672339804cf0/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fvect-pr40979.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fvect-pr40979.f90?ref=9dac82c4dac4a4e47756c5a16067672339804cf0", "patch": "@@ -0,0 +1,26 @@\n+! { dg-do compile }\n+! { dg-require-effective-target vect_int }\n+\n+module mqc_m\n+integer, parameter, private :: longreal = selected_real_kind(15,90)\n+contains\n+      subroutine mutual_ind_quad_cir_coil (m, l12)\n+      real (kind = longreal), dimension(9), save :: w2gauss, w1gauss\n+      real (kind = longreal) :: l12_lower, num, l12\n+      real (kind = longreal), dimension(3) :: current, coil\n+      w2gauss(1) = 16.0_longreal/81.0_longreal\n+      w1gauss(5) = 0.3302393550_longreal\n+      do i = 1, 2*m\n+          do j = 1, 9\n+              do k = 1, 9\n+                  num = w1gauss(j) * w2gauss(k) * dot_product(coil,current)\n+                  l12_lower = l12_lower + num\n+              end do\n+          end do\n+      end do\n+      l12 = l12_lower\n+      end subroutine mutual_ind_quad_cir_coil\n+end module mqc_m\n+\n+! { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } }\n+! { dg-final { cleanup-tree-dump \"vect\" } }"}, {"sha": "43693eaeae77cff0b8b44dd5a260f29b2e2a5b33", "filename": "gcc/tree-ssa-loop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dac82c4dac4a4e47756c5a16067672339804cf0/gcc%2Ftree-ssa-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dac82c4dac4a4e47756c5a16067672339804cf0/gcc%2Ftree-ssa-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop.c?ref=9dac82c4dac4a4e47756c5a16067672339804cf0", "patch": "@@ -309,7 +309,7 @@ struct gimple_opt_pass pass_graphite_transforms =\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t\t/* todo_flags_start */\n-  0\t\t\t\t\t/* todo_flags_finish */\n+  TODO_dump_func\t\t\t/* todo_flags_finish */\n  }\n };\n "}]}