{"sha": "a6f400239d792ddcff106be22b04fdf3f9b2894a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZmNDAwMjM5ZDc5MmRkY2ZmMTA2YmUyMmIwNGZkZjNmOWIyODk0YQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-04-20T13:52:30Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-04-20T13:52:30Z"}, "message": "c++: tpl-tpl-parms are not canonicalizable types [pr94454]\n\nWe treat tpl-tpl-parms as types.  They're not; bound-tpl-tpl-parms\nare.  We can get away with them being type-like.  Unfortunately we\ngive the original level==orig_level case a canonical type, but the\nreduced cases of level<orig_level get structural equality.  This patch\ngives them structural type always.\n\n\t* pt.c (canonical_type_parameter): Assert not a tpl-tpl-parm.\n\t(process_template_parm): tpl-tpl-parms are structural.\n\t(rewrite_template_parm): Propagate structuralness.", "tree": {"sha": "9373c7a21755e2cf048c377c9a06e0595de60035", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9373c7a21755e2cf048c377c9a06e0595de60035"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6f400239d792ddcff106be22b04fdf3f9b2894a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6f400239d792ddcff106be22b04fdf3f9b2894a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6f400239d792ddcff106be22b04fdf3f9b2894a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6f400239d792ddcff106be22b04fdf3f9b2894a/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7fcb93431ef18a31c9af142f77faa176bbd9b3dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fcb93431ef18a31c9af142f77faa176bbd9b3dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fcb93431ef18a31c9af142f77faa176bbd9b3dc"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "e210eb5b80e9992bde79eab00f6769eaab4501eb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6f400239d792ddcff106be22b04fdf3f9b2894a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6f400239d792ddcff106be22b04fdf3f9b2894a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a6f400239d792ddcff106be22b04fdf3f9b2894a", "patch": "@@ -1,5 +1,10 @@\n 2020-04-20  Nathan Sidwell  <nathan@acm.org>\n \n+\tPR 94454 - tpl-tpl-parms are not canonicalizable types\n+\t* pt.c (canonical_type_parameter): Assert not a tpl-tpl-parm.\n+\t(process_template_parm): tpl-tpl-parms are structural.\n+\t(rewrite_template_parm): Propagate structuralness.\n+\n \tPR 94454 - Expr pack expansion equality\n \t* tree.c (cp_tree_equal): [TEMPLATE_ID_EXPR, default] Refactor.\n \t[EXPR_PACK_EXPANSION]: Add."}, {"sha": "4f4c04e7df8961dcc4e0c826724c66f6f49e6f90", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6f400239d792ddcff106be22b04fdf3f9b2894a/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6f400239d792ddcff106be22b04fdf3f9b2894a/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=a6f400239d792ddcff106be22b04fdf3f9b2894a", "patch": "@@ -4399,6 +4399,9 @@ canonical_type_parameter (tree type)\n {\n   tree list;\n   int idx = TEMPLATE_TYPE_IDX (type);\n+\n+  gcc_assert (TREE_CODE (type) != TEMPLATE_TEMPLATE_PARM);\n+\n   if (!canonical_template_parms)\n     vec_alloc (canonical_template_parms, idx + 1);\n \n@@ -4581,7 +4584,10 @@ process_template_parm (tree list, location_t parm_loc, tree parm,\n \t\t\t\t     processing_template_decl,\n \t\t\t\t     decl, TREE_TYPE (parm));\n       TEMPLATE_TYPE_PARAMETER_PACK (t) = is_parameter_pack;\n-      TYPE_CANONICAL (t) = canonical_type_parameter (t);\n+      if (TREE_CODE (t) == TEMPLATE_TEMPLATE_PARM)\n+\tSET_TYPE_STRUCTURAL_EQUALITY (t);\n+      else\n+\tTYPE_CANONICAL (t) = canonical_type_parameter (t);\n     }\n   DECL_ARTIFICIAL (decl) = 1;\n   SET_DECL_TEMPLATE_PARM_P (decl);\n@@ -28022,7 +28028,10 @@ rewrite_template_parm (tree olddecl, unsigned index, unsigned level,\n       TEMPLATE_PARM_PARAMETER_PACK (newidx)\n \t= TEMPLATE_PARM_PARAMETER_PACK (oldidx);\n       TYPE_STUB_DECL (newtype) = TYPE_NAME (newtype) = newdecl;\n-      TYPE_CANONICAL (newtype) = canonical_type_parameter (newtype);\n+      if (TYPE_STRUCTURAL_EQUALITY_P (TREE_TYPE (olddecl)))\n+\tSET_TYPE_STRUCTURAL_EQUALITY (newtype);\n+      else\n+\tTYPE_CANONICAL (newtype) = canonical_type_parameter (newtype);\n \n       if (TREE_CODE (olddecl) == TEMPLATE_DECL)\n \t{"}]}