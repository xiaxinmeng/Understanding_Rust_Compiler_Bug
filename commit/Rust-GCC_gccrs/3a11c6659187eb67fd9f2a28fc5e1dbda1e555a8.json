{"sha": "3a11c6659187eb67fd9f2a28fc5e1dbda1e555a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ExMWM2NjU5MTg3ZWI2N2ZkOWYyYTI4ZmM1ZTFkYmRhMWU1NTVhOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-05-13T20:53:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-05-13T20:53:38Z"}, "message": "typeck.c (cp_build_array_ref): Factor out from...\n\n\t* typeck.c (cp_build_array_ref): Factor out from...\n\t(build_array_ref): ...here.  Drop complain parm.\n\t(build_new_op): Adjust.\n\t* class.c (build_vtbl_ref_1): Adjust.\n\t* decl2.c (grok_array_decl): Adjust.\n\t* cp-tree.h: Adjust prototypes.\n\nFrom-SVN: r159377", "tree": {"sha": "205bfc38b3172fb070a52733bb7e123d7b9671e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/205bfc38b3172fb070a52733bb7e123d7b9671e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a11c6659187eb67fd9f2a28fc5e1dbda1e555a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a11c6659187eb67fd9f2a28fc5e1dbda1e555a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a11c6659187eb67fd9f2a28fc5e1dbda1e555a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a11c6659187eb67fd9f2a28fc5e1dbda1e555a8/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a2e66caf57a55c157600620d0f258115f5c9788b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2e66caf57a55c157600620d0f258115f5c9788b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2e66caf57a55c157600620d0f258115f5c9788b"}], "stats": {"total": 41, "additions": 30, "deletions": 11}, "files": [{"sha": "cd8dfd2f3c416cdd49dc8f5578973026eb389831", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a11c6659187eb67fd9f2a28fc5e1dbda1e555a8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a11c6659187eb67fd9f2a28fc5e1dbda1e555a8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3a11c6659187eb67fd9f2a28fc5e1dbda1e555a8", "patch": "@@ -1,3 +1,12 @@\n+2010-05-13  Jason Merrill  <jason@redhat.com>\n+\n+\t* typeck.c (cp_build_array_ref): Factor out from...\n+\t(build_array_ref): ...here.  Drop complain parm.\n+\t(build_new_op): Adjust.\n+\t* class.c (build_vtbl_ref_1): Adjust.\n+\t* decl2.c (grok_array_decl): Adjust.\n+\t* cp-tree.h: Adjust prototypes.\n+\n 2010-05-13  Jan Hubicka  <jh@suse.cz>\n \n \t* decl.c (cp_finish_decl): Do not worry about used attribute."}, {"sha": "6ed53dcb6749f30431f47eb28faa0bf37683d767", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a11c6659187eb67fd9f2a28fc5e1dbda1e555a8/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a11c6659187eb67fd9f2a28fc5e1dbda1e555a8/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=3a11c6659187eb67fd9f2a28fc5e1dbda1e555a8", "patch": "@@ -4517,7 +4517,7 @@ build_new_op (enum tree_code code, int flags, tree arg1, tree arg2, tree arg3,\n       return cp_build_unary_op (code, arg1, candidates != 0, complain);\n \n     case ARRAY_REF:\n-      return build_array_ref (input_location, arg1, arg2, complain);\n+      return cp_build_array_ref (input_location, arg1, arg2, complain);\n \n     case MEMBER_REF:\n       return build_m_component_ref (cp_build_indirect_ref (arg1, RO_NULL, "}, {"sha": "88db80faae8a4790d23e4c67350dfd048810d981", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a11c6659187eb67fd9f2a28fc5e1dbda1e555a8/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a11c6659187eb67fd9f2a28fc5e1dbda1e555a8/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=3a11c6659187eb67fd9f2a28fc5e1dbda1e555a8", "patch": "@@ -629,7 +629,7 @@ build_vtbl_ref_1 (tree instance, tree idx)\n   if (!vtbl)\n     vtbl = build_vfield_ref (instance, basetype);\n \n-  aref = build_array_ref (input_location, vtbl, idx, tf_warning_or_error);\n+  aref = build_array_ref (input_location, vtbl, idx);\n   TREE_CONSTANT (aref) |= TREE_CONSTANT (vtbl) && TREE_CONSTANT (idx);\n \n   return aref;"}, {"sha": "3b8e9d05584a906f8cfdc968bf1841a4031b4db6", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a11c6659187eb67fd9f2a28fc5e1dbda1e555a8/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a11c6659187eb67fd9f2a28fc5e1dbda1e555a8/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=3a11c6659187eb67fd9f2a28fc5e1dbda1e555a8", "patch": "@@ -5365,7 +5365,8 @@ extern tree build_x_indirect_ref\t\t(tree, ref_operator,\n                                                  tsubst_flags_t);\n extern tree cp_build_indirect_ref\t\t(tree, ref_operator,\n                                                  tsubst_flags_t);\n-extern tree build_array_ref\t\t\t(location_t, tree, tree,\n+extern tree build_array_ref\t\t\t(location_t, tree, tree);\n+extern tree cp_build_array_ref\t\t\t(location_t, tree, tree,\n \t\t\t\t\t\t tsubst_flags_t);\n extern tree get_member_function_from_ptrfunc\t(tree *, tree);\n extern tree cp_build_function_call              (tree, tree, tsubst_flags_t);"}, {"sha": "d811c9e316a5c82847be0f7ade3945d021371fea", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a11c6659187eb67fd9f2a28fc5e1dbda1e555a8/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a11c6659187eb67fd9f2a28fc5e1dbda1e555a8/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=3a11c6659187eb67fd9f2a28fc5e1dbda1e555a8", "patch": "@@ -399,8 +399,7 @@ grok_array_decl (tree array_expr, tree index_exp)\n       if (array_expr == error_mark_node || index_exp == error_mark_node)\n \terror (\"ambiguous conversion for array subscript\");\n \n-      expr = build_array_ref (input_location, array_expr, index_exp,\n-\t\t\t      tf_warning_or_error);\n+      expr = build_array_ref (input_location, array_expr, index_exp);\n     }\n   if (processing_template_decl && expr != error_mark_node)\n     return build_min_non_dep (ARRAY_REF, expr, orig_array_expr, orig_index_exp,"}, {"sha": "dfdd5925a37deeb60a2aac503740e8b86569302b", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a11c6659187eb67fd9f2a28fc5e1dbda1e555a8/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a11c6659187eb67fd9f2a28fc5e1dbda1e555a8/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=3a11c6659187eb67fd9f2a28fc5e1dbda1e555a8", "patch": "@@ -2860,8 +2860,8 @@ cp_build_indirect_ref (tree ptr, ref_operator errorstring,\n    LOC is the location to use in building the array reference.  */\n \n tree\n-build_array_ref (location_t loc, tree array, tree idx,\n-\t\t tsubst_flags_t complain)\n+cp_build_array_ref (location_t loc, tree array, tree idx,\n+\t\t    tsubst_flags_t complain)\n {\n   tree ret;\n \n@@ -2882,8 +2882,8 @@ build_array_ref (location_t loc, tree array, tree idx,\n     {\n     case COMPOUND_EXPR:\n       {\n-\ttree value = build_array_ref (loc, TREE_OPERAND (array, 1), idx,\n-\t\t\t\t      complain);\n+\ttree value = cp_build_array_ref (loc, TREE_OPERAND (array, 1), idx,\n+\t\t\t\t\t complain);\n \tret = build2 (COMPOUND_EXPR, TREE_TYPE (value),\n \t\t      TREE_OPERAND (array, 0), value);\n \tSET_EXPR_LOCATION (ret, loc);\n@@ -2893,8 +2893,10 @@ build_array_ref (location_t loc, tree array, tree idx,\n     case COND_EXPR:\n       ret = build_conditional_expr\n \t      (TREE_OPERAND (array, 0),\n-\t       build_array_ref (loc, TREE_OPERAND (array, 1), idx, complain),\n-\t       build_array_ref (loc, TREE_OPERAND (array, 2), idx, complain),\n+\t       cp_build_array_ref (loc, TREE_OPERAND (array, 1), idx,\n+\t\t\t\t   complain),\n+\t       cp_build_array_ref (loc, TREE_OPERAND (array, 2), idx,\n+\t\t\t\t   complain),\n \t       tf_warning_or_error);\n       protected_set_expr_location (ret, loc);\n       return ret;\n@@ -3020,6 +3022,14 @@ build_array_ref (location_t loc, tree array, tree idx,\n     return ret;\n   }\n }\n+\n+/* Entry point for Obj-C++.  */\n+\n+tree\n+build_array_ref (location_t loc, tree array, tree idx)\n+{\n+  return cp_build_array_ref (loc, array, idx, tf_warning_or_error);\n+}\n \f\n /* Resolve a pointer to member function.  INSTANCE is the object\n    instance to use, if the member points to a virtual member."}]}