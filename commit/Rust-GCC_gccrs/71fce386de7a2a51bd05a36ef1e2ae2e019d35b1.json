{"sha": "71fce386de7a2a51bd05a36ef1e2ae2e019d35b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFmY2UzODZkZTdhMmE1MWJkMDVhMzZlZjFlMmFlMmUwMTlkMzViMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-28T22:03:47Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-28T22:03:47Z"}, "message": "(PIC_OFFEST_TABLE_REGNUM_SAVED): Define to %r4.\n\n(CONDITIONAL_REGISTER_USAGE): Make it fixed when compiling PIC code.\n(INIT_EXPANDERS): Delete.\n\nFrom-SVN: r10087", "tree": {"sha": "ade9526df2681fc8fbd2d5969c91cb439541c9c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ade9526df2681fc8fbd2d5969c91cb439541c9c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71fce386de7a2a51bd05a36ef1e2ae2e019d35b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71fce386de7a2a51bd05a36ef1e2ae2e019d35b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71fce386de7a2a51bd05a36ef1e2ae2e019d35b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71fce386de7a2a51bd05a36ef1e2ae2e019d35b1/comments", "author": null, "committer": null, "parents": [{"sha": "98bfe58b0c354ee5222b0e236be18dfbbde35854", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98bfe58b0c354ee5222b0e236be18dfbbde35854", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98bfe58b0c354ee5222b0e236be18dfbbde35854"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "3f1504b02b3fc4b960a1781262fd904322887014", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71fce386de7a2a51bd05a36ef1e2ae2e019d35b1/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71fce386de7a2a51bd05a36ef1e2ae2e019d35b1/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=71fce386de7a2a51bd05a36ef1e2ae2e019d35b1", "patch": "@@ -472,7 +472,10 @@ do {\t\t\t\t\t\t\t\t\\\n \tfixed_regs[i] = call_used_regs[i] = 1; \t\\\n     }\t\t\t\t\t\t\\\n   if (flag_pic)\t\t\t\t\t\\\n-    fixed_regs[PIC_OFFSET_TABLE_REGNUM] = 1;\t\\\n+    {\t\t\t\t\t\t\\\n+      fixed_regs[PIC_OFFSET_TABLE_REGNUM] = 1;\t\\\n+      fixed_regs[PIC_OFFSET_TABLE_REGNUM_SAVED] = 1;\\\n+    }\t\t\t\t\t\t\\\n }\n \n /* Allocate the call used registers first.  This should minimize\n@@ -575,10 +578,9 @@ do {\t\t\t\t\t\t\t\t\\\n #define PIC_OFFSET_TABLE_REGNUM 19\n #define PIC_OFFSET_TABLE_REG_CALL_CLOBBERED 1\n \n-/* Initialize hppa_save_pic_table_rtx before RTL generation for\n-   each function.  We used to do this in FINALIZE_PIC, but FINALIZE_PIC\n-   isn't always called for static inline functions.  */\n-#define INIT_EXPANDERS hppa_save_pic_table_rtx = 0;\n+/* Register into which we save the PIC_OFFEST_TABLE_REGNUM so that it\n+   can be restore across function calls.  */\n+#define PIC_OFFSET_TABLE_REGNUM_SAVED 4\n \n /* SOM ABI says that objects larger than 64 bits are returned in memory.  */\n #define DEFAULT_PCC_STRUCT_RETURN 0\n@@ -2152,8 +2154,6 @@ extern struct rtx_def *legitimize_pic_address ();\n extern struct rtx_def *gen_cmp_fp ();\n extern void hppa_encode_label ();\n \n-extern struct rtx_def *hppa_save_pic_table_rtx;\n-\n #if 0\n #define PREDICATE_CODES \\\n   {\"reg_or_0_operand\", {SUBREG, REG, CONST_INT, CONST_DOUBLE}},\t\t\\"}]}