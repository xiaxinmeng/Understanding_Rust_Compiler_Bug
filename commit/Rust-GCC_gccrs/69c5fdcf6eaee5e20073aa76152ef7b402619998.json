{"sha": "69c5fdcf6eaee5e20073aa76152ef7b402619998", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjljNWZkY2Y2ZWFlZTVlMjAwNzNhYTc2MTUyZWY3YjQwMjYxOTk5OA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2018-12-20T16:34:31Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-12-20T16:34:31Z"}, "message": "[AArch64][SVE] Add ABS support\n\nFor some reason we missed ABS out of the list of supported integer\noperations when adding the SVE port initially.\n\n2018-12-20  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* config/aarch64/iterators.md (SVE_INT_UNARY, fp_int_op): Add abs.\n\t(SVE_FP_UNARY): Sort.\n\ngcc/testsuite/\n\t* gcc.target/aarch64/pr64946.c: Force nosve.\n\t* gcc.target/aarch64/ssadv16qi.c: Likewise.\n\t* gcc.target/aarch64/usadv16qi.c: Likewise.\n\t* gcc.target/aarch64/vect-abs-compile.c: Likewise.\n\t* gcc.target/aarch64/sve/abs_1.c: New test.\n\nFrom-SVN: r267304", "tree": {"sha": "f9c9e7b08a2895487f944df13ae76c7205e8f55a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9c9e7b08a2895487f944df13ae76c7205e8f55a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69c5fdcf6eaee5e20073aa76152ef7b402619998", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69c5fdcf6eaee5e20073aa76152ef7b402619998", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69c5fdcf6eaee5e20073aa76152ef7b402619998", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69c5fdcf6eaee5e20073aa76152ef7b402619998/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7abc36cc997553532214a77cdb555bdaada8dfb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7abc36cc997553532214a77cdb555bdaada8dfb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7abc36cc997553532214a77cdb555bdaada8dfb3"}], "stats": {"total": 49, "additions": 45, "deletions": 4}, "files": [{"sha": "5fa350f850b7f8b7bdb45e92b91ea82fa47127df", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69c5fdcf6eaee5e20073aa76152ef7b402619998/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69c5fdcf6eaee5e20073aa76152ef7b402619998/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=69c5fdcf6eaee5e20073aa76152ef7b402619998", "patch": "@@ -1,3 +1,8 @@\n+2018-12-20  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/aarch64/iterators.md (SVE_INT_UNARY, fp_int_op): Add abs.\n+\t(SVE_FP_UNARY): Sort.\n+\n 2018-12-20  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/aarch64/aarch64-sve.md (*cond_<optab><mode>_4): Use"}, {"sha": "a16b74c8c4a1904a9ebad8d59e9a2e34913f4de4", "filename": "gcc/config/aarch64/iterators.md", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69c5fdcf6eaee5e20073aa76152ef7b402619998/gcc%2Fconfig%2Faarch64%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69c5fdcf6eaee5e20073aa76152ef7b402619998/gcc%2Fconfig%2Faarch64%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fiterators.md?ref=69c5fdcf6eaee5e20073aa76152ef7b402619998", "patch": "@@ -1209,10 +1209,10 @@\n (define_code_iterator FAC_COMPARISONS [lt le ge gt])\n \n ;; SVE integer unary operations.\n-(define_code_iterator SVE_INT_UNARY [neg not popcount])\n+(define_code_iterator SVE_INT_UNARY [abs neg not popcount])\n \n ;; SVE floating-point unary operations.\n-(define_code_iterator SVE_FP_UNARY [neg abs sqrt])\n+(define_code_iterator SVE_FP_UNARY [abs neg sqrt])\n \n ;; SVE integer binary operations.\n (define_code_iterator SVE_INT_BINARY [plus minus mult smax umax smin umin\n@@ -1401,6 +1401,7 @@\n \t\t\t      (mult \"mul\")\n \t\t\t      (div \"sdiv\")\n \t\t\t      (udiv \"udiv\")\n+\t\t\t      (abs \"abs\")\n \t\t\t      (neg \"neg\")\n \t\t\t      (smin \"smin\")\n \t\t\t      (smax \"smax\")"}, {"sha": "2cfdd7bb2044aec9eacc164212e60ede9aacb3c6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69c5fdcf6eaee5e20073aa76152ef7b402619998/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69c5fdcf6eaee5e20073aa76152ef7b402619998/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=69c5fdcf6eaee5e20073aa76152ef7b402619998", "patch": "@@ -1,3 +1,11 @@\n+2018-12-20  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.target/aarch64/pr64946.c: Force nosve.\n+\t* gcc.target/aarch64/ssadv16qi.c: Likewise.\n+\t* gcc.target/aarch64/usadv16qi.c: Likewise.\n+\t* gcc.target/aarch64/vect-abs-compile.c: Likewise.\n+\t* gcc.target/aarch64/sve/abs_1.c: New test.\n+\n 2018-12-20  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* gcc.target/aarch64/sve/fmla_2.c: New test."}, {"sha": "ae79c0ccc26c5c99c611db51e36bfa6ada877d6e", "filename": "gcc/testsuite/gcc.target/aarch64/pr64946.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69c5fdcf6eaee5e20073aa76152ef7b402619998/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr64946.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69c5fdcf6eaee5e20073aa76152ef7b402619998/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr64946.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr64946.c?ref=69c5fdcf6eaee5e20073aa76152ef7b402619998", "patch": "@@ -1,7 +1,8 @@\n-\n /* { dg-do compile } */\n /* { dg-options \"-O3\" } */\n \n+#pragma GCC target \"+nosve\"\n+\n signed char a[100],b[100];\n void absolute_s8 (void)\n {"}, {"sha": "40b28843616e84df137210b45ec16abed2a37c75", "filename": "gcc/testsuite/gcc.target/aarch64/ssadv16qi.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69c5fdcf6eaee5e20073aa76152ef7b402619998/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fssadv16qi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69c5fdcf6eaee5e20073aa76152ef7b402619998/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fssadv16qi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fssadv16qi.c?ref=69c5fdcf6eaee5e20073aa76152ef7b402619998", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O3\" } */\n \n+#pragma GCC target \"+nosve\"\n+\n #define N 1024\n \n signed char pix1[N], pix2[N];"}, {"sha": "03ebe2554fb2dff6ff1fb21354fba2c5a0f3634c", "filename": "gcc/testsuite/gcc.target/aarch64/sve/abs_1.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69c5fdcf6eaee5e20073aa76152ef7b402619998/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fabs_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69c5fdcf6eaee5e20073aa76152ef7b402619998/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fabs_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fabs_1.c?ref=69c5fdcf6eaee5e20073aa76152ef7b402619998", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do assemble { target aarch64_asm_sve_ok } } */\n+/* { dg-options \"-O3 --save-temps\" } */\n+\n+#include <stdint.h>\n+\n+#define DO_OPS(TYPE)\t\t\t\t\t\\\n+void vneg_##TYPE (TYPE *dst, TYPE *src, int count)\t\\\n+{\t\t\t\t\t\t\t\\\n+  for (int i = 0; i < count; ++i)\t\t\t\\\n+    dst[i] = src[i] < 0 ? -src[i] : src[i];\t\t\\\n+}\n+\n+DO_OPS (int8_t)\n+DO_OPS (int16_t)\n+DO_OPS (int32_t)\n+DO_OPS (int64_t)\n+\n+/* { dg-final { scan-assembler-times {\\tabs\\tz[0-9]+\\.b, p[0-7]/m, z[0-9]+\\.b\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tabs\\tz[0-9]+\\.h, p[0-7]/m, z[0-9]+\\.h\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tabs\\tz[0-9]+\\.s, p[0-7]/m, z[0-9]+\\.s\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tabs\\tz[0-9]+\\.d, p[0-7]/m, z[0-9]+\\.d\\n} 1 } } */"}, {"sha": "69ceaf4259ea43e95078ce900d2498c3a2291369", "filename": "gcc/testsuite/gcc.target/aarch64/usadv16qi.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69c5fdcf6eaee5e20073aa76152ef7b402619998/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fusadv16qi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69c5fdcf6eaee5e20073aa76152ef7b402619998/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fusadv16qi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fusadv16qi.c?ref=69c5fdcf6eaee5e20073aa76152ef7b402619998", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O3\" } */\n \n+#pragma GCC target \"+nosve\"\n+\n #define N 1024\n \n unsigned char pix1[N], pix2[N];"}, {"sha": "8d4bf2a5d39a5b38b838a439ff085be1a79ea8af", "filename": "gcc/testsuite/gcc.target/aarch64/vect-abs-compile.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69c5fdcf6eaee5e20073aa76152ef7b402619998/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect-abs-compile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69c5fdcf6eaee5e20073aa76152ef7b402619998/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect-abs-compile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect-abs-compile.c?ref=69c5fdcf6eaee5e20073aa76152ef7b402619998", "patch": "@@ -1,7 +1,8 @@\n-\n /* { dg-do compile } */\n /* { dg-options \"-O3 -fno-vect-cost-model\" } */\n \n+#pragma GCC target \"+nosve\"\n+\n #define N 16\n \n #include \"vect-abs.x\""}]}