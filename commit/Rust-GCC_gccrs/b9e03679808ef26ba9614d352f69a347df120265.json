{"sha": "b9e03679808ef26ba9614d352f69a347df120265", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjllMDM2Nzk4MDhlZjI2YmE5NjE0ZDM1MmY2OWEzNDdkZjEyMDI2NQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2019-01-17T17:07:20Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2019-01-17T17:07:20Z"}, "message": "C++: Fix ICE when adding overloaded operator via using_decl (PR c++/88699)\n\nPR c++/88699 reports an ICE within this assertion in add_method:\n\n  gcc_assert (!current_fns || !DECL_DESTRUCTOR_P (method));\n\nwhen adding an overloaded operator to a class via a using_decl, due to\nDECL_DESTRUCTOR_P requiring a FUNCTION_DECL, but \"method\" being a\nUSING_DECL.\n\nThis patch weakens the assertion to avoid testing DECL_DESTRUCTOR_P\nfor the case where \"via_using\" is true, fixing the ICE.\n\ngcc/cp/ChangeLog:\n\tPR c++/88699\n\t* class.c (add_method): Don't use DECL_DESTRUCTOR_P on\n\tUSING_DECLs.\n\ngcc/testsuite/ChangeLog:\n\tPR c++/88699\n\t* g++.dg/template/pr88699.C: New test.\n\nFrom-SVN: r268041", "tree": {"sha": "78b273b9ec572ff1333ec21a19a2cd105bc0f1cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78b273b9ec572ff1333ec21a19a2cd105bc0f1cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9e03679808ef26ba9614d352f69a347df120265", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9e03679808ef26ba9614d352f69a347df120265", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9e03679808ef26ba9614d352f69a347df120265", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9e03679808ef26ba9614d352f69a347df120265/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "213694e56e6265044bc85dbf43bda9028f05dba7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/213694e56e6265044bc85dbf43bda9028f05dba7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/213694e56e6265044bc85dbf43bda9028f05dba7"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "6893b2e4e332083af7fb45481b8f0486cf19b8b6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9e03679808ef26ba9614d352f69a347df120265/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9e03679808ef26ba9614d352f69a347df120265/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b9e03679808ef26ba9614d352f69a347df120265", "patch": "@@ -1,3 +1,9 @@\n+2019-01-17  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c++/88699\n+\t* class.c (add_method): Don't use DECL_DESTRUCTOR_P on\n+\tUSING_DECLs.\n+\n 2019-01-17  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/86610"}, {"sha": "e8773c2a0b0ff3dec8a6f2fd50095ed9fd1ff9b3", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9e03679808ef26ba9614d352f69a347df120265/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9e03679808ef26ba9614d352f69a347df120265/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=b9e03679808ef26ba9614d352f69a347df120265", "patch": "@@ -1134,7 +1134,7 @@ add_method (tree type, tree method, bool via_using)\n     }\n \n   /* A class should never have more than one destructor.  */\n-  gcc_assert (!current_fns || !DECL_DESTRUCTOR_P (method));\n+  gcc_assert (!current_fns || via_using || !DECL_DESTRUCTOR_P (method));\n \n   current_fns = ovl_insert (method, current_fns, via_using);\n "}, {"sha": "176d2f8a79bdc8db9fe7f08ff10d9fe86428dbc3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9e03679808ef26ba9614d352f69a347df120265/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9e03679808ef26ba9614d352f69a347df120265/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b9e03679808ef26ba9614d352f69a347df120265", "patch": "@@ -1,3 +1,8 @@\n+2019-01-17  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c++/88699\n+\t* g++.dg/template/pr88699.C: New test.\n+\n 2019-01-17  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/88800"}, {"sha": "ecd26ce4607eb44418172819a04fca4bcb827dca", "filename": "gcc/testsuite/g++.dg/template/pr88699.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9e03679808ef26ba9614d352f69a347df120265/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr88699.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9e03679808ef26ba9614d352f69a347df120265/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr88699.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr88699.C?ref=b9e03679808ef26ba9614d352f69a347df120265", "patch": "@@ -0,0 +1,13 @@\n+// { dg-do compile }\n+\n+template <typename>\n+struct A {\n+  void operator= (int);\n+  template <int> class B;\n+};\n+template <typename C>\n+template <int>\n+struct A<C>::B : A {\n+  using A::operator=;\n+  void operator= (B);\n+};"}]}