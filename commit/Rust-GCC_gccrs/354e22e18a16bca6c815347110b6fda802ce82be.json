{"sha": "354e22e18a16bca6c815347110b6fda802ce82be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzU0ZTIyZTE4YTE2YmNhNmM4MTUzNDcxMTBiNmZkYTgwMmNlODJiZQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2004-12-09T12:33:09Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2004-12-09T12:33:09Z"}, "message": "re PR c++/18757 (ICE (on invalid) in get_innermost_template_args)\n\ngcc/cp/ChangeLog:\nPR c++/18757\n* parser.c (cp_parser_template_id): Don't create a CPP_TEMPLATE_ID\nif parsing failed.\ngcc/testsuite/ChangeLog:\n* g++.dg/parse/typename5.C: Adjust for new error.\n* g++.dg/parse/typename7.C: New.\n\nFrom-SVN: r91935", "tree": {"sha": "54210854a1b232c63d07840a293b67f53a5e2e9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54210854a1b232c63d07840a293b67f53a5e2e9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/354e22e18a16bca6c815347110b6fda802ce82be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/354e22e18a16bca6c815347110b6fda802ce82be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/354e22e18a16bca6c815347110b6fda802ce82be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/354e22e18a16bca6c815347110b6fda802ce82be/comments", "author": null, "committer": null, "parents": [{"sha": "d16b59fa0c781e599115fad750585b2c4e42c71c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d16b59fa0c781e599115fad750585b2c4e42c71c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d16b59fa0c781e599115fad750585b2c4e42c71c"}], "stats": {"total": 49, "additions": 46, "deletions": 3}, "files": [{"sha": "696349f7be88c9cce58d99cd4d264d56b3611ecb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/354e22e18a16bca6c815347110b6fda802ce82be/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/354e22e18a16bca6c815347110b6fda802ce82be/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=354e22e18a16bca6c815347110b6fda802ce82be", "patch": "@@ -1,3 +1,9 @@\n+2004-12-09  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR c++/18757\n+\t* parser.c (cp_parser_template_id): Don't create a CPP_TEMPLATE_ID\n+\tif parsing failed.\n+\n 2004-12-09  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \tPR c++/18073"}, {"sha": "ce3c7a6838daeb588ea86a41abd1f5f0602d6c3b", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/354e22e18a16bca6c815347110b6fda802ce82be/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/354e22e18a16bca6c815347110b6fda802ce82be/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=354e22e18a16bca6c815347110b6fda802ce82be", "patch": "@@ -8416,8 +8416,9 @@ cp_parser_template_id (cp_parser *parser,\n      should we re-parse the token stream, we will not have to repeat\n      the effort required to do the parse, nor will we issue duplicate\n      error messages about problems during instantiation of the\n-     template.  */\n-  if (start_of_id)\n+     template.  Do so only if parsing succeeded, otherwise we may\n+     silently accept template arguments with syntax errors.  */\n+  if (start_of_id && !cp_parser_error_occurred (parser))\n     {\n       cp_token *token = cp_lexer_token_at (parser->lexer, start_of_id);\n       "}, {"sha": "51d6be53469aa79700fd87684fafb29a56fce916", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/354e22e18a16bca6c815347110b6fda802ce82be/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/354e22e18a16bca6c815347110b6fda802ce82be/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=354e22e18a16bca6c815347110b6fda802ce82be", "patch": "@@ -1,3 +1,8 @@\n+2004-12-09  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* g++.dg/parse/typename5.C: Adjust for new error.\n+\t* g++.dg/parse/typename7.C: New.\n+\n 2004-12-09  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \tPR c++/18073"}, {"sha": "36647519fe61b3de710066237c60f6105e849de5", "filename": "gcc/testsuite/g++.dg/parse/typename5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/354e22e18a16bca6c815347110b6fda802ce82be/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/354e22e18a16bca6c815347110b6fda802ce82be/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename5.C?ref=354e22e18a16bca6c815347110b6fda802ce82be", "patch": "@@ -8,5 +8,5 @@ template <typename> struct A {};\n \n template <typename> struct B\n {\n-    typedef A<typename X::Y> C; // { dg-error \"declared|invalid|no type\" }\n+    typedef A<typename X::Y> C; // { dg-error \"declared|invalid|no type|expected\" }\n };"}, {"sha": "211931781394c037c071e58ad304e3edf99054b0", "filename": "gcc/testsuite/g++.dg/parse/typename7.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/354e22e18a16bca6c815347110b6fda802ce82be/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/354e22e18a16bca6c815347110b6fda802ce82be/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename7.C?ref=354e22e18a16bca6c815347110b6fda802ce82be", "patch": "@@ -0,0 +1,31 @@\n+// { dg-do compile }\n+\n+// Origin: Volker Reichelt <reichelt@igpm.rwth-aachen.de> and\n+// Alexandre Oliva <aoliva@redhat.com>\n+\n+// PR c++/18757: ICE in get_innermost_template_args\n+\n+struct A\n+{\n+  template<typename>   void foo(int);\n+  template<typename T> void bar(T t) {\n+    this->foo<typename T>(t); } // { dg-error \"expected\" }\n+  template<typename T> void bad(T t) {\n+    foo<typename T>(t); } // { dg-error \"expected\" }\n+};\n+\n+template <typename T>\n+struct B\n+{\n+  void bar(T t) {\n+    A().bar<typename T>(t); } // { dg-error \"expected\" }\n+  void bad(T t) {\n+    B<typename T>::bar(t); } // { dg-error \"invalid|not a template\" }\n+};\n+\n+void baz()\n+{\n+    A().bar(0);\n+    A().bad(0);\n+    B<int>().bar(0);\n+}"}]}