{"sha": "ff779f98ef7328c3a3dc537e274186b756da85d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY3NzlmOThlZjczMjhjM2EzZGM1MzdlMjc0MTg2Yjc1NmRhODVkOA==", "commit": {"author": {"name": "Bob Wilson", "email": "bob.wilson@acm.org", "date": "2008-03-27T22:44:47Z"}, "committer": {"name": "Bob Wilson", "email": "bwilson@gcc.gnu.org", "date": "2008-03-27T22:44:47Z"}, "message": "xtensa.c (gen_float_relational): Handle unordered comparisons.\n\n\t* config/xtensa/xtensa.c (gen_float_relational): Handle unordered\n\tcomparisons.\n\t* config/xtensa/xtensa.md (any_cond): Add unordered comparisons.\n\t(any_scc_sf): Add uneq, unlt, unle and unordered operators.\n\t(scc_sf): New.\n\t(s<code>_sf): Use new scc_sf attribute for opcode names.\n\nFrom-SVN: r133659", "tree": {"sha": "bf07e9abbe9803202053c693d3fe40a51b616c4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf07e9abbe9803202053c693d3fe40a51b616c4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff779f98ef7328c3a3dc537e274186b756da85d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff779f98ef7328c3a3dc537e274186b756da85d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff779f98ef7328c3a3dc537e274186b756da85d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff779f98ef7328c3a3dc537e274186b756da85d8/comments", "author": null, "committer": null, "parents": [{"sha": "ad4426d0f527e5f2758c607e36143540b57082cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad4426d0f527e5f2758c607e36143540b57082cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad4426d0f527e5f2758c607e36143540b57082cb"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "f55e8a8519ab51192919750a3f711a8f0d57788d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff779f98ef7328c3a3dc537e274186b756da85d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff779f98ef7328c3a3dc537e274186b756da85d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff779f98ef7328c3a3dc537e274186b756da85d8", "patch": "@@ -1,3 +1,12 @@\n+2008-03-27  Bob Wilson  <bob.wilson@acm.org>\n+\n+\t* config/xtensa/xtensa.c (gen_float_relational): Handle unordered\n+\tcomparisons.\n+\t* config/xtensa/xtensa.md (any_cond): Add unordered comparisons.\n+\t(any_scc_sf): Add uneq, unlt, unle and unordered operators.\n+\t(scc_sf): New.\n+\t(s<code>_sf): Use new scc_sf attribute for opcode names.\n+\n 2008-03-27  Tom Tromey  <tromey@redhat.com>\n \n \t* doc/sourcebuild.texi, doc/install.texi, configure, aclocal.m4,"}, {"sha": "d61625d83b572a81da9cafea48bca87fad8d047f", "filename": "gcc/config/xtensa/xtensa.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff779f98ef7328c3a3dc537e274186b756da85d8/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff779f98ef7328c3a3dc537e274186b756da85d8/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.c?ref=ff779f98ef7328c3a3dc537e274186b756da85d8", "patch": "@@ -652,6 +652,16 @@ gen_float_relational (enum rtx_code test_code, /* relational test (EQ, etc) */\n     case GT: reverse_regs = 1; invert = 0; gen_fn = gen_slt_sf; break;\n     case LT: reverse_regs = 0; invert = 0; gen_fn = gen_slt_sf; break;\n     case GE: reverse_regs = 1; invert = 0; gen_fn = gen_sle_sf; break;\n+    case UNEQ: reverse_regs = 0; invert = 0; gen_fn = gen_suneq_sf; break;\n+    case LTGT: reverse_regs = 0; invert = 1; gen_fn = gen_suneq_sf; break;\n+    case UNLE: reverse_regs = 0; invert = 0; gen_fn = gen_sunle_sf; break;\n+    case UNGT: reverse_regs = 1; invert = 0; gen_fn = gen_sunlt_sf; break;\n+    case UNLT: reverse_regs = 0; invert = 0; gen_fn = gen_sunlt_sf; break;\n+    case UNGE: reverse_regs = 1; invert = 0; gen_fn = gen_sunle_sf; break;\n+    case UNORDERED:\n+      reverse_regs = 0; invert = 0; gen_fn = gen_sunordered_sf; break;\n+    case ORDERED:\n+      reverse_regs = 0; invert = 1; gen_fn = gen_sunordered_sf; break;\n     default:\n       fatal_insn (\"bad test\", gen_rtx_fmt_ee (test_code, VOIDmode, cmp0, cmp1));\n       reverse_regs = 0; invert = 0; gen_fn = 0; /* avoid compiler warnings */"}, {"sha": "7d85956bfe4cba4e561fa2935fc83574adb38583", "filename": "gcc/config/xtensa/xtensa.md", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff779f98ef7328c3a3dc537e274186b756da85d8/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff779f98ef7328c3a3dc537e274186b756da85d8/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.md?ref=ff779f98ef7328c3a3dc537e274186b756da85d8", "patch": "@@ -59,13 +59,18 @@\n \n ;; This code iterator allows all branch instructions to be generated from\n ;; a single define_expand template.\n-(define_code_iterator any_cond [eq ne gt ge lt le gtu geu ltu leu])\n+(define_code_iterator any_cond [eq ne gt ge lt le gtu geu ltu leu\n+\t\t\t\tuneq ltgt ungt unge unlt unle\n+\t\t\t\tunordered ordered])\n \n ;; This code iterator is for setting a register from a comparison.\n (define_code_iterator any_scc [eq ne gt ge lt le])\n \n ;; This code iterator is for floating-point comparisons.\n-(define_code_iterator any_scc_sf [eq lt le])\n+(define_code_iterator any_scc_sf [eq lt le uneq unlt unle unordered])\n+(define_code_attr scc_sf [(eq \"oeq\") (lt \"olt\") (le \"ole\") \n+\t\t\t  (uneq \"ueq\") (unlt \"ult\") (unle \"ule\")\n+\t\t\t  (unordered \"un\")])\n \n ;; This iterator and attribute allow to combine most atomic operations.\n (define_code_iterator ATOMIC [and ior xor plus minus mult])\n@@ -1415,7 +1420,7 @@\n \t(any_scc_sf:CC (match_operand:SF 1 \"register_operand\" \"f\")\n \t\t       (match_operand:SF 2 \"register_operand\" \"f\")))]\n   \"TARGET_HARD_FLOAT\"\n-  \"o<code>.s\\t%0, %1, %2\"\n+  \"<scc_sf>.s\\t%0, %1, %2\"\n   [(set_attr \"type\"\t\"farith\")\n    (set_attr \"mode\"\t\"BL\")\n    (set_attr \"length\"\t\"3\")])"}]}