{"sha": "5ee924c2fb39b7702b9ed586df9b613ca7401ea3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVlOTI0YzJmYjM5Yjc3MDJiOWVkNTg2ZGY5YjYxM2NhNzQwMWVhMw==", "commit": {"author": {"name": "Bob Wilson", "email": "bob.wilson@acm.org", "date": "2002-06-18T21:18:46Z"}, "committer": {"name": "Bob Wilson", "email": "bwilson@gcc.gnu.org", "date": "2002-06-18T21:18:46Z"}, "message": "xtensa.h (FUNCTION_PROFILER): Respect flag_pic when generating the call to _mcount.\n\n        * config/xtensa/xtensa.h (FUNCTION_PROFILER): Respect flag_pic\n        when generating the call to _mcount.\n        (NO_PROFILE_COUNTERS): Define.\n\nFrom-SVN: r54765", "tree": {"sha": "f7b099d2adadd6e4944993c460f529ef042da6be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7b099d2adadd6e4944993c460f529ef042da6be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ee924c2fb39b7702b9ed586df9b613ca7401ea3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ee924c2fb39b7702b9ed586df9b613ca7401ea3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ee924c2fb39b7702b9ed586df9b613ca7401ea3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ee924c2fb39b7702b9ed586df9b613ca7401ea3/comments", "author": null, "committer": null, "parents": [{"sha": "26e4af5477acafc40c7289afc7b590925f00ba79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26e4af5477acafc40c7289afc7b590925f00ba79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26e4af5477acafc40c7289afc7b590925f00ba79"}], "stats": {"total": 50, "additions": 30, "deletions": 20}, "files": [{"sha": "db446af5f7e0752ffe86d0cd1b0e5b798ddc36eb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ee924c2fb39b7702b9ed586df9b613ca7401ea3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ee924c2fb39b7702b9ed586df9b613ca7401ea3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5ee924c2fb39b7702b9ed586df9b613ca7401ea3", "patch": "@@ -1,3 +1,9 @@\n+2002-06-18  Bob Wilson  <bob.wilson@acm.org>\n+\n+\t* config/xtensa/xtensa.h (FUNCTION_PROFILER): Respect flag_pic\n+\twhen generating the call to _mcount.\n+\t(NO_PROFILE_COUNTERS): Define.\n+\n 2002-06-18  Richard Henderson  <rth@redhat.com>\n \n \t* print-rtl.c (print_rtx): Adjust NOTE argument numbers for"}, {"sha": "e98c2c673f8e67aa41bc71b712027d5b323c3c9f", "filename": "gcc/config/xtensa/xtensa.h", "status": "modified", "additions": 24, "deletions": 20, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ee924c2fb39b7702b9ed586df9b613ca7401ea3/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ee924c2fb39b7702b9ed586df9b613ca7401ea3/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.h?ref=5ee924c2fb39b7702b9ed586df9b613ca7401ea3", "patch": "@@ -921,29 +921,33 @@ typedef struct xtensa_args {\n    && (TREE_CODE (TYPE_SIZE (TYPE)) != INTEGER_CST\t\t\t\\\n        || TREE_ADDRESSABLE (TYPE)))\n \n-/* Output assembler code to FILE to increment profiler label LABELNO\n-   for profiling a function entry.\n-\n-   The mcount code in glibc doesn't seem to use this LABELNO stuff.\n-   Some ports (e.g., MIPS) don't even bother to pass the label\n-   address, and even those that do (e.g., i386) don't seem to use it.\n-   The information needed by mcount() is the current PC and the\n-   current return address, so that mcount can identify an arc in the\n-   call graph.  For Xtensa, we pass the current return address as\n-   the first argument to mcount, and the current PC is available as\n-   a0 in mcount's register window.  Both of these values contain\n-   window size information in the two most significant bits; we assume\n-   that the mcount code will mask off those bits.  The call to mcount\n-   uses a window size of 8 to make sure that mcount doesn't clobber\n+/* Profiling Xtensa code is typically done with the built-in profiling\n+   feature of Tensilica's instruction set simulator, which does not\n+   require any compiler support.  Profiling code on a real (i.e.,\n+   non-simulated) Xtensa processor is currently only supported by\n+   GNU/Linux with glibc.  The glibc version of _mcount doesn't require\n+   counter variables.  The _mcount function needs the current PC and\n+   the current return address to identify an arc in the call graph.\n+   Pass the current return address as the first argument; the current\n+   PC is available as a0 in _mcount's register window.  Both of these\n+   values contain window size information in the two most significant\n+   bits; we assume that _mcount will mask off those bits.  The call to\n+   _mcount uses a window size of 8 to make sure that it doesn't clobber\n    any incoming argument values. */\n \n-#define FUNCTION_PROFILER(FILE, LABELNO)\t\t\t\t\\\n+#define NO_PROFILE_COUNTERS\n+\n+#define FUNCTION_PROFILER(FILE, LABELNO) \\\n   do {\t\t\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\taddi\\t%s, %s, 0\\t# save current return address\\n\", \\\n-\t     reg_names[GP_REG_FIRST+10],\t\t\t\t\\\n-\t     reg_names[GP_REG_FIRST+0]);\t\t\t\t\\\n-    fprintf (FILE, \"\\tcall8\\t_mcount\\n\");\t\t\t\t\\\n-  } while (0);\n+    fprintf (FILE, \"\\t%s\\ta10, a0\\n\", TARGET_DENSITY ? \"mov.n\" : \"mov\"); \\\n+    if (flag_pic)\t\t\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tfprintf (FILE, \"\\tmovi\\ta8, _mcount@PLT\\n\");\t\t\t\\\n+\tfprintf (FILE, \"\\tcallx8\\ta8\\n\");\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+    else\t\t\t\t\t\t\t\t\\\n+      fprintf (FILE, \"\\tcall8\\t_mcount\\n\");\t\t\t\t\\\n+  } while (0)\n \n /* Stack pointer value doesn't matter at exit.  */\n #define EXIT_IGNORE_STACK 1"}]}