{"sha": "b0d95de801df2692f4645bffda1e6ea71e8c2fa5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBkOTVkZTgwMWRmMjY5MmY0NjQ1YmZmZGExZTZlYTcxZThjMmZhNQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2006-12-13T18:07:47Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2006-12-13T18:07:47Z"}, "message": "i386.h (FIRST_PSEUDO_REGISTER): Define to 53.\n\n\t* config/i386/i386.h (FIRST_PSEUDO_REGISTER): Define to 53.\n\t(FIXED_REGISTERS, CALL_USED_REGISTERS): Remove dir register.\n\t(REG_ALLOC_ORDER): Remove one element due to removal of dir register.\n\t(FRAME_POINTER_REGNUM): Update register number to 20.\n\t(REG_CLASS_CONTENTS): Update contents due to removed dir register.\n\t(HI_REGISTER_NAMES): Remove \"dirflag\".\n\n\t* config/i386/i386.c (regclass_map): Remove dirflag entry.\n\t(dbx_register_map, dbx64_register_map, svr4_dbx_register_map):\n\tRemove \"dir\" entry.\n\t(ix86_md_asm_clobbers): Remove \"dirflag\" default asm clobber.\n\n\t* config/i386/i386.md (R10_REG, R11_REG): Renumber.\n\t(sse_prologue_save, *sse_prologue_save_insn): Renumber\n\thardcoded SSE register numbers.\n\n\t* config/i386/mmx.md (mmx_emms, mmx_femms): Renumber\n\thardcoded MMX register numbers.\n\nFrom-SVN: r119839", "tree": {"sha": "0b0266b692ec70cc0c6de2d3f16dbbe3dd946346", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b0266b692ec70cc0c6de2d3f16dbbe3dd946346"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0d95de801df2692f4645bffda1e6ea71e8c2fa5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0d95de801df2692f4645bffda1e6ea71e8c2fa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0d95de801df2692f4645bffda1e6ea71e8c2fa5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0d95de801df2692f4645bffda1e6ea71e8c2fa5/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8edfc4ccb46c6b8ccd48e7136d1ed5f5f646ff9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8edfc4ccb46c6b8ccd48e7136d1ed5f5f646ff9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8edfc4ccb46c6b8ccd48e7136d1ed5f5f646ff9a"}], "stats": {"total": 100, "additions": 60, "deletions": 40}, "files": [{"sha": "43a12eb0d23d388a040be570fd1997f9789443ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0d95de801df2692f4645bffda1e6ea71e8c2fa5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0d95de801df2692f4645bffda1e6ea71e8c2fa5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b0d95de801df2692f4645bffda1e6ea71e8c2fa5", "patch": "@@ -1,3 +1,25 @@\n+2006-12-13  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.h (FIRST_PSEUDO_REGISTER): Define to 53.\n+\t(FIXED_REGISTERS, CALL_USED_REGISTERS): Remove dir register.\n+\t(REG_ALLOC_ORDER): Remove one element due to removal of dir register.\n+\t(FRAME_POINTER_REGNUM): Update register number to 20.\n+\t(REG_CLASS_CONTENTS): Update contents due to removed dir register.\n+\t(HI_REGISTER_NAMES): Remove \"dirflag\".\n+\n+\t* config/i386/i386.c (regclass_map): Remove dirflag entry.\n+\t(dbx_register_map, dbx64_register_map, svr4_dbx_register_map):\n+\tRemove \"dir\" entry.\n+\t(ix86_md_asm_clobbers): Remove \"dirflag\" default asm clobber.\n+\n+\t* config/i386/i386.md (R10_REG, R11_REG): Renumber.\n+\t(sse_prologue_save, *sse_prologue_save_insn): Renumber\n+\thardcoded SSE register numbers.\n+\n+\t* config/i386/mmx.md (mmx_emms, mmx_femms): Renumber\n+\thardcoded MMX register numbers.\n+\n+\n 2006-12-13  Mark Shinwell  <shinwell@codesourcery.com>\n \n \t* config/arm/arm.c (arm_output_fldmx): Output FLDMD instead of"}, {"sha": "747e31ee55afc5745ed2176c6d4c252c9b28862c", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0d95de801df2692f4645bffda1e6ea71e8c2fa5/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0d95de801df2692f4645bffda1e6ea71e8c2fa5/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=b0d95de801df2692f4645bffda1e6ea71e8c2fa5", "patch": "@@ -1052,8 +1052,8 @@ enum reg_class const regclass_map[FIRST_PSEUDO_REGISTER] =\n   FLOAT_REGS, FLOAT_REGS, FLOAT_REGS, FLOAT_REGS,\n   /* arg pointer */\n   NON_Q_REGS,\n-  /* flags, fpsr, fpcr, dirflag, frame */\n-  NO_REGS, NO_REGS, NO_REGS, NO_REGS, NON_Q_REGS,\n+  /* flags, fpsr, fpcr, frame */\n+  NO_REGS, NO_REGS, NO_REGS, NON_Q_REGS,\n   SSE_REGS, SSE_REGS, SSE_REGS, SSE_REGS, SSE_REGS, SSE_REGS,\n   SSE_REGS, SSE_REGS,\n   MMX_REGS, MMX_REGS, MMX_REGS, MMX_REGS, MMX_REGS, MMX_REGS,\n@@ -1070,7 +1070,7 @@ int const dbx_register_map[FIRST_PSEUDO_REGISTER] =\n {\n   0, 2, 1, 3, 6, 7, 4, 5,\t\t/* general regs */\n   12, 13, 14, 15, 16, 17, 18, 19,\t/* fp regs */\n-  -1, -1, -1, -1, -1, -1,\t\t/* arg, flags, fpsr, fpcr, dir, frame */\n+  -1, -1, -1, -1, -1,\t\t\t/* arg, flags, fpsr, fpcr, frame */\n   21, 22, 23, 24, 25, 26, 27, 28,\t/* SSE */\n   29, 30, 31, 32, 33, 34, 35, 36,       /* MMX */\n   -1, -1, -1, -1, -1, -1, -1, -1,\t/* extended integer registers */\n@@ -1093,7 +1093,7 @@ int const dbx64_register_map[FIRST_PSEUDO_REGISTER] =\n {\n   0, 1, 2, 3, 4, 5, 6, 7,\t\t/* general regs */\n   33, 34, 35, 36, 37, 38, 39, 40,\t/* fp regs */\n-  -1, -1, -1, -1, -1, -1,\t\t/* arg, flags, fpsr, fpcr, dir, frame */\n+  -1, -1, -1, -1, -1,\t\t\t/* arg, flags, fpsr, fpcr, frame */\n   17, 18, 19, 20, 21, 22, 23, 24,\t/* SSE */\n   41, 42, 43, 44, 45, 46, 47, 48,       /* MMX */\n   8,9,10,11,12,13,14,15,\t\t/* extended integer registers */\n@@ -1158,7 +1158,7 @@ int const svr4_dbx_register_map[FIRST_PSEUDO_REGISTER] =\n {\n   0, 2, 1, 3, 6, 7, 5, 4,\t\t/* general regs */\n   11, 12, 13, 14, 15, 16, 17, 18,\t/* fp regs */\n-  -1, 9, -1, -1, -1, -1,\t\t/* arg, flags, fpsr, fpcr, dir, frame */\n+  -1, 9, -1, -1, -1,\t\t\t/* arg, flags, fpsr, fpcr, frame */\n   21, 22, 23, 24, 25, 26, 27, 28,\t/* SSE registers */\n   29, 30, 31, 32, 33, 34, 35, 36,\t/* MMX registers */\n   -1, -1, -1, -1, -1, -1, -1, -1,\t/* extended integer registers */\n@@ -19927,8 +19927,6 @@ ix86_md_asm_clobbers (tree outputs ATTRIBUTE_UNUSED,\n \t\t\tclobbers);\n   clobbers = tree_cons (NULL_TREE, build_string (4, \"fpsr\"),\n \t\t\tclobbers);\n-  clobbers = tree_cons (NULL_TREE, build_string (7, \"dirflag\"),\n-\t\t\tclobbers);\n   return clobbers;\n }\n "}, {"sha": "5e5678f0c1e8a7109d490cb4406a371f738ac588", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0d95de801df2692f4645bffda1e6ea71e8c2fa5/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0d95de801df2692f4645bffda1e6ea71e8c2fa5/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=b0d95de801df2692f4645bffda1e6ea71e8c2fa5", "patch": "@@ -768,7 +768,7 @@ extern const char *host_detect_local_cpu (int argc, const char **argv);\n    eliminated during reloading in favor of either the stack or frame\n    pointer.  */\n \n-#define FIRST_PSEUDO_REGISTER 54\n+#define FIRST_PSEUDO_REGISTER 53\n \n /* Number of hardware registers that go into the DWARF-2 unwind info.\n    If not defined, equals FIRST_PSEUDO_REGISTER.  */\n@@ -788,8 +788,8 @@ extern const char *host_detect_local_cpu (int argc, const char **argv);\n #define FIXED_REGISTERS\t\t\t\t\t\t\\\n /*ax,dx,cx,bx,si,di,bp,sp,st,st1,st2,st3,st4,st5,st6,st7*/\t\\\n {  0, 0, 0, 0, 0, 0, 0, 1, 0,  0,  0,  0,  0,  0,  0,  0,\t\\\n-/*arg,flags,fpsr,fpcr,dir,frame*/\t\t\t\t\\\n-    1,    1,   1,   1,  1,    1,\t\t\t\t\\\n+/*arg,flags,fpsr,fpcr,frame*/\t\t\t\t\t\\\n+    1,    1,   1,   1,    1,\t\t\t\t\t\\\n /*xmm0,xmm1,xmm2,xmm3,xmm4,xmm5,xmm6,xmm7*/\t\t\t\\\n      0,   0,   0,   0,   0,   0,   0,   0,\t\t\t\\\n /*mmx0,mmx1,mmx2,mmx3,mmx4,mmx5,mmx6,mmx7*/\t\t\t\\\n@@ -816,8 +816,8 @@ extern const char *host_detect_local_cpu (int argc, const char **argv);\n #define CALL_USED_REGISTERS\t\t\t\t\t\\\n /*ax,dx,cx,bx,si,di,bp,sp,st,st1,st2,st3,st4,st5,st6,st7*/\t\\\n {  1, 1, 1, 0, 3, 3, 0, 1, 1,  1,  1,  1,  1,  1,  1,  1,\t\\\n-/*arg,flags,fpsr,fpcr,dir,frame*/\t\t\t\t\\\n-    1,   1,    1,   1,  1,    1,\t\t\t\t\\\n+/*arg,flags,fpsr,fpcr,frame*/\t\t\t\t\t\\\n+    1,   1,    1,   1,    1,\t\t\t\t\t\\\n /*xmm0,xmm1,xmm2,xmm3,xmm4,xmm5,xmm6,xmm7*/\t\t\t\\\n      1,   1,   1,   1,   1,   1,   1,   1,\t\t\t\\\n /*mmx0,mmx1,mmx2,mmx3,mmx4,mmx5,mmx6,mmx7*/\t\t\t\\\n@@ -840,7 +840,7 @@ extern const char *host_detect_local_cpu (int argc, const char **argv);\n {  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\\\n    18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,\t\\\n    33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,  \\\n-   48, 49, 50, 51, 52, 53 }\n+   48, 49, 50, 51, 52 }\n \n /* ORDER_REGS_FOR_LOCAL_ALLOC is a macro which permits reg_alloc_order\n    to be rearranged based on a particular function.  When using sse math,\n@@ -1006,7 +1006,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define HARD_FRAME_POINTER_REGNUM 6\n \n /* Base register for access to local variables of the function.  */\n-#define FRAME_POINTER_REGNUM 21\n+#define FRAME_POINTER_REGNUM 20\n \n /* First floating point reg */\n #define FIRST_FLOAT_REG 8\n@@ -1200,21 +1200,21 @@ enum reg_class\n       { 0x10,     0x0 }, { 0x20, 0x0 },\t/* SIREG, DIREG */\t\t\\\n       { 0x03,     0x0 },\t\t/* AD_REGS */\t\t\t\\\n       { 0x0f,     0x0 },\t\t/* Q_REGS */\t\t\t\\\n-  { 0x2100f0,  0x3fc0 },\t\t/* NON_Q_REGS */\t\t\\\n-      { 0x7f,  0x3fc0 },\t\t/* INDEX_REGS */\t\t\\\n-  { 0x2100ff,     0x0 },\t\t/* LEGACY_REGS */\t\t\\\n-  { 0x2100ff,  0x3fc0 },\t\t/* GENERAL_REGS */\t\t\\\n+  { 0x1100f0,  0x1fe0 },\t\t/* NON_Q_REGS */\t\t\\\n+      { 0x7f,  0x1fe0 },\t\t/* INDEX_REGS */\t\t\\\n+  { 0x1100ff,     0x0 },\t\t/* LEGACY_REGS */\t\t\\\n+  { 0x1100ff,  0x1fe0 },\t\t/* GENERAL_REGS */\t\t\\\n      { 0x100,     0x0 }, { 0x0200, 0x0 },/* FP_TOP_REG, FP_SECOND_REG */\\\n     { 0xff00,     0x0 },\t\t/* FLOAT_REGS */\t\t\\\n-{ 0x3fc00000,0x3fc000 },\t\t/* SSE_REGS */\t\t\t\\\n-{ 0xc0000000,    0x3f },\t\t/* MMX_REGS */\t\t\t\\\n-{ 0x3fc00100,0x3fc000 },\t\t/* FP_TOP_SSE_REG */\t\t\\\n-{ 0x3fc00200,0x3fc000 },\t\t/* FP_SECOND_SSE_REG */\t\t\\\n-{ 0x3fc0ff00,0x3fc000 },\t\t/* FLOAT_SSE_REGS */\t\t\\\n-   { 0x1ffff,  0x3fc0 },\t\t/* FLOAT_INT_REGS */\t\t\\\n-{ 0x3fc100ff,0x3fffc0 },\t\t/* INT_SSE_REGS */\t\t\\\n-{ 0x3fc1ffff,0x3fffc0 },\t\t/* FLOAT_INT_SSE_REGS */\t\\\n-{ 0xffffffff,0x3fffff }\t\t\t\t\t\t\t\\\n+{ 0x1fe00000,0x1fe000 },\t\t/* SSE_REGS */\t\t\t\\\n+{ 0xe0000000,    0x1f },\t\t/* MMX_REGS */\t\t\t\\\n+{ 0x1fe00100,0x1fe000 },\t\t/* FP_TOP_SSE_REG */\t\t\\\n+{ 0x1fe00200,0x1fe000 },\t\t/* FP_SECOND_SSE_REG */\t\t\\\n+{ 0x1fe0ff00,0x3fe000 },\t\t/* FLOAT_SSE_REGS */\t\t\\\n+   { 0x1ffff,  0x1fe0 },\t\t/* FLOAT_INT_REGS */\t\t\\\n+{ 0x1fe100ff,0x1fffe0 },\t\t/* INT_SSE_REGS */\t\t\\\n+{ 0x1fe1ffff,0x1fffe0 },\t\t/* FLOAT_INT_SSE_REGS */\t\\\n+{ 0xffffffff,0x1fffff }\t\t\t\t\t\t\t\\\n }\n \n /* The same information, inverted:\n@@ -1953,7 +1953,7 @@ do {\t\t\t\t\t\t\t\\\n #define HI_REGISTER_NAMES\t\t\t\t\t\t\\\n {\"ax\",\"dx\",\"cx\",\"bx\",\"si\",\"di\",\"bp\",\"sp\",\t\t\t\t\\\n  \"st\",\"st(1)\",\"st(2)\",\"st(3)\",\"st(4)\",\"st(5)\",\"st(6)\",\"st(7)\",\t\t\\\n- \"argp\", \"flags\", \"fpsr\", \"fpcr\", \"dirflag\", \"frame\",\t\t\t\\\n+ \"argp\", \"flags\", \"fpsr\", \"fpcr\", \"frame\",\t\t\t\t\\\n  \"xmm0\",\"xmm1\",\"xmm2\",\"xmm3\",\"xmm4\",\"xmm5\",\"xmm6\",\"xmm7\",\t\t\\\n  \"mm0\", \"mm1\", \"mm2\", \"mm3\", \"mm4\", \"mm5\", \"mm6\", \"mm7\",\t\t\\\n  \"r8\", \"r9\", \"r10\", \"r11\", \"r12\", \"r13\", \"r14\", \"r15\",\t\t\t\\"}, {"sha": "10c8746b283193ef7dbc7b3de3f5ed3974696365", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0d95de801df2692f4645bffda1e6ea71e8c2fa5/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0d95de801df2692f4645bffda1e6ea71e8c2fa5/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=b0d95de801df2692f4645bffda1e6ea71e8c2fa5", "patch": "@@ -180,8 +180,8 @@\n    (FLAGS_REG\t\t\t17)\n    (FPSR_REG\t\t\t18)\n    (FPCR_REG\t\t\t19)\n-   (R10_REG\t\t\t40)\n-   (R11_REG\t\t\t41)\n+   (R10_REG\t\t\t39)\n+   (R11_REG\t\t\t40)\n   ])\n \n ;; Insns whose names begin with \"x86_\" are emitted by gen_FOO calls\n@@ -20765,14 +20765,14 @@\n \n (define_expand \"sse_prologue_save\"\n   [(parallel [(set (match_operand:BLK 0 \"\" \"\")\n-\t\t   (unspec:BLK [(reg:DI 22)\n+\t\t   (unspec:BLK [(reg:DI 21)\n+\t\t\t\t(reg:DI 22)\n \t\t\t\t(reg:DI 23)\n \t\t\t\t(reg:DI 24)\n \t\t\t\t(reg:DI 25)\n \t\t\t\t(reg:DI 26)\n \t\t\t\t(reg:DI 27)\n-\t\t\t\t(reg:DI 28)\n-\t\t\t\t(reg:DI 29)] UNSPEC_SSE_PROLOGUE_SAVE))\n+\t\t\t\t(reg:DI 28)] UNSPEC_SSE_PROLOGUE_SAVE))\n \t      (use (match_operand:DI 1 \"register_operand\" \"\"))\n \t      (use (match_operand:DI 2 \"immediate_operand\" \"\"))\n \t      (use (label_ref:DI (match_operand 3 \"\" \"\")))])]\n@@ -20782,14 +20782,14 @@\n (define_insn \"*sse_prologue_save_insn\"\n   [(set (mem:BLK (plus:DI (match_operand:DI 0 \"register_operand\" \"R\")\n \t\t\t  (match_operand:DI 4 \"const_int_operand\" \"n\")))\n-\t(unspec:BLK [(reg:DI 22)\n+\t(unspec:BLK [(reg:DI 21)\n+\t\t     (reg:DI 22)\n \t\t     (reg:DI 23)\n \t\t     (reg:DI 24)\n \t\t     (reg:DI 25)\n \t\t     (reg:DI 26)\n \t\t     (reg:DI 27)\n-\t\t     (reg:DI 28)\n-\t\t     (reg:DI 29)] UNSPEC_SSE_PROLOGUE_SAVE))\n+\t\t     (reg:DI 28)] UNSPEC_SSE_PROLOGUE_SAVE))\n    (use (match_operand:DI 1 \"register_operand\" \"r\"))\n    (use (match_operand:DI 2 \"const_int_operand\" \"i\"))\n    (use (label_ref:DI (match_operand 3 \"\" \"X\")))]"}, {"sha": "4f0ab2ca3ee129ae20a631e0a220c0d420d3d94e", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0d95de801df2692f4645bffda1e6ea71e8c2fa5/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0d95de801df2692f4645bffda1e6ea71e8c2fa5/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=b0d95de801df2692f4645bffda1e6ea71e8c2fa5", "patch": "@@ -1396,14 +1396,14 @@\n    (clobber (reg:XF 13))\n    (clobber (reg:XF 14))\n    (clobber (reg:XF 15))\n+   (clobber (reg:DI 29))\n    (clobber (reg:DI 30))\n    (clobber (reg:DI 31))\n    (clobber (reg:DI 32))\n    (clobber (reg:DI 33))\n    (clobber (reg:DI 34))\n    (clobber (reg:DI 35))\n-   (clobber (reg:DI 36))\n-   (clobber (reg:DI 37))]\n+   (clobber (reg:DI 36))]\n   \"TARGET_MMX\"\n   \"emms\"\n   [(set_attr \"type\" \"mmx\")\n@@ -1419,14 +1419,14 @@\n    (clobber (reg:XF 13))\n    (clobber (reg:XF 14))\n    (clobber (reg:XF 15))\n+   (clobber (reg:DI 29))\n    (clobber (reg:DI 30))\n    (clobber (reg:DI 31))\n    (clobber (reg:DI 32))\n    (clobber (reg:DI 33))\n    (clobber (reg:DI 34))\n    (clobber (reg:DI 35))\n-   (clobber (reg:DI 36))\n-   (clobber (reg:DI 37))]\n+   (clobber (reg:DI 36))]\n   \"TARGET_3DNOW\"\n   \"femms\"\n   [(set_attr \"type\" \"mmx\")"}]}