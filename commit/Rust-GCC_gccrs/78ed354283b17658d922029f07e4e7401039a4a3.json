{"sha": "78ed354283b17658d922029f07e4e7401039a4a3", "node_id": "C_kwDOANBUbNoAKDc4ZWQzNTQyODNiMTc2NThkOTIyMDI5ZjA3ZTRlNzQwMTAzOWE0YTM", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-10-25T17:01:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-25T17:01:37Z"}, "message": "Merge #769\n\n769: LifetimeWhereClauseItem: store the location of the item r=philberty a=mathstuf\n\nSigned-off-by: Ben Boeckel <mathstuf@gmail.com>\r\n\r\n---\r\nFixes: #765 \r\n\r\nHere is a checklist to help you with your PR.\r\n\r\n- \\[x] GCC development requires copyright assignment or the Developer's Certificate of Origin sign-off, see https://gcc.gnu.org/contribute.html or https://gcc.gnu.org/dco.html\r\n- \\[x] Read contributing guidlines\r\n- \\[x] `make check-rust` passes locally\r\n- \\[x] Run `clang-format` (letting CI handle this)\r\n- \\[x] Added any relevant test cases to `gcc/testsuite/rust/`\r\n\r\nI didn't find any ctor calls for the `HIR` type, but it's updated as well.\n\nCo-authored-by: Ben Boeckel <mathstuf@gmail.com>", "tree": {"sha": "ebe6e19205c16b3a0954288e3240e085c19cb569", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebe6e19205c16b3a0954288e3240e085c19cb569"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78ed354283b17658d922029f07e4e7401039a4a3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhduLxCRBK7hj4Ov3rIwAAYooIAJXBkqZ4Ycwq+jwlqZ4/WzGC\nd5m2qbVA0JMrb/NZHPm7nOLHeijtF0+ouCC9CxxLgO7rPmLmhzN9Z2ewibrrdyVJ\nxsM8/xHYVmiII1Q3ZcSWcpN+M9DvXistp3Iz11fra5uYt6QpSI6kwmB2akwQcDWN\n7PR+ug5ngicHkr4Y9Zz2qOdRVwX3aJ5pcvHiwWy89XoNpZVD32jKIhBRYZtKWqUA\nnT9hUF9maENx33pdl4LEdHQEdU9L0p5lTen4vjlWlziMELJ8vnIPaOW0tKLyT+OF\nNzQMaucqjxQ26y23KEKUZMI0M7BepveskohIAUotj1bEZ24SydgtJxfsZircOz4=\n=Qxt+\n-----END PGP SIGNATURE-----\n", "payload": "tree ebe6e19205c16b3a0954288e3240e085c19cb569\nparent d2b12ea8895a8539281bd2a87f0e63234c3203c6\nparent 7661713e0795d37f7ce2d06d44d728b4b47fd2e3\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1635181297 +0000\ncommitter GitHub <noreply@github.com> 1635181297 +0000\n\nMerge #769\n\n769: LifetimeWhereClauseItem: store the location of the item r=philberty a=mathstuf\n\nSigned-off-by: Ben Boeckel <mathstuf@gmail.com>\r\n\r\n---\r\nFixes: #765 \r\n\r\nHere is a checklist to help you with your PR.\r\n\r\n- \\[x] GCC development requires copyright assignment or the Developer's Certificate of Origin sign-off, see https://gcc.gnu.org/contribute.html or https://gcc.gnu.org/dco.html\r\n- \\[x] Read contributing guidlines\r\n- \\[x] `make check-rust` passes locally\r\n- \\[x] Run `clang-format` (letting CI handle this)\r\n- \\[x] Added any relevant test cases to `gcc/testsuite/rust/`\r\n\r\nI didn't find any ctor calls for the `HIR` type, but it's updated as well.\n\nCo-authored-by: Ben Boeckel <mathstuf@gmail.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78ed354283b17658d922029f07e4e7401039a4a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78ed354283b17658d922029f07e4e7401039a4a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78ed354283b17658d922029f07e4e7401039a4a3/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2b12ea8895a8539281bd2a87f0e63234c3203c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2b12ea8895a8539281bd2a87f0e63234c3203c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2b12ea8895a8539281bd2a87f0e63234c3203c6"}, {"sha": "7661713e0795d37f7ce2d06d44d728b4b47fd2e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7661713e0795d37f7ce2d06d44d728b4b47fd2e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7661713e0795d37f7ce2d06d44d728b4b47fd2e3"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "d075a57a1cd539e5a530275b6153e2a96b83b2a5", "filename": "gcc/rust/ast/rust-item.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78ed354283b17658d922029f07e4e7401039a4a3/gcc%2Frust%2Fast%2Frust-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78ed354283b17658d922029f07e4e7401039a4a3/gcc%2Frust%2Fast%2Frust-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-item.h?ref=78ed354283b17658d922029f07e4e7401039a4a3", "patch": "@@ -190,13 +190,14 @@ class LifetimeWhereClauseItem : public WhereClauseItem\n   // LifetimeBounds lifetime_bounds;\n   std::vector<Lifetime> lifetime_bounds; // inlined lifetime bounds\n \n-  // should this store location info?\n+  Location locus;\n \n public:\n   LifetimeWhereClauseItem (Lifetime lifetime,\n-\t\t\t   std::vector<Lifetime> lifetime_bounds)\n+\t\t\t   std::vector<Lifetime> lifetime_bounds,\n+\t\t\t   Location locus)\n     : lifetime (std::move (lifetime)),\n-      lifetime_bounds (std::move (lifetime_bounds))\n+      lifetime_bounds (std::move (lifetime_bounds)), locus (locus)\n   {}\n \n   std::string as_string () const override;"}, {"sha": "c52870d369eb33c85325e3a834e2aaf91e53199c", "filename": "gcc/rust/hir/tree/rust-hir-item.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78ed354283b17658d922029f07e4e7401039a4a3/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78ed354283b17658d922029f07e4e7401039a4a3/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h?ref=78ed354283b17658d922029f07e4e7401039a4a3", "patch": "@@ -165,13 +165,14 @@ class LifetimeWhereClauseItem : public WhereClauseItem\n   // LifetimeBounds lifetime_bounds;\n   std::vector<Lifetime> lifetime_bounds; // inlined lifetime bounds\n \n-  // should this store location info?\n+  Location locus;\n \n public:\n   LifetimeWhereClauseItem (Lifetime lifetime,\n-\t\t\t   std::vector<Lifetime> lifetime_bounds)\n+\t\t\t   std::vector<Lifetime> lifetime_bounds,\n+\t\t\t   Location locus)\n     : lifetime (std::move (lifetime)),\n-      lifetime_bounds (std::move (lifetime_bounds))\n+      lifetime_bounds (std::move (lifetime_bounds)), locus (locus)\n   {}\n \n   std::string as_string () const override;"}, {"sha": "14e4e80a72daa7602be69dde50cd18068bf41a49", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78ed354283b17658d922029f07e4e7401039a4a3/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78ed354283b17658d922029f07e4e7401039a4a3/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=78ed354283b17658d922029f07e4e7401039a4a3", "patch": "@@ -3579,9 +3579,11 @@ Parser<ManagedTokenSource>::parse_lifetime_where_clause_item ()\n   std::vector<AST::Lifetime> lifetime_bounds = parse_lifetime_bounds ();\n   // TODO: have end token passed in?\n \n+  Location locus = lifetime.get_locus ();\n+\n   return std::unique_ptr<AST::LifetimeWhereClauseItem> (\n     new AST::LifetimeWhereClauseItem (std::move (lifetime),\n-\t\t\t\t      std::move (lifetime_bounds)));\n+\t\t\t\t      std::move (lifetime_bounds), locus));\n }\n \n // Parses a type bound where clause item."}]}