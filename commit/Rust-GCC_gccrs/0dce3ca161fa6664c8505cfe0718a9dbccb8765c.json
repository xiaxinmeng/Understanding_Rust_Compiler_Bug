{"sha": "0dce3ca161fa6664c8505cfe0718a9dbccb8765c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRjZTNjYTE2MWZhNjY2NGM4NTA1Y2ZlMDcxOGE5ZGJjY2I4NzY1Yw==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2007-01-17T19:44:00Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-01-17T19:44:00Z"}, "message": "re PR libfortran/27107 (Make dependency on io/io.h broken)\n\n\tPR libfortran/27107\n\t* runtime/environ.c: Don't include io/io.h.\n\t* runtime/string.c: Don't include io/io.h.\n\t(compare0): Add cast to avoid warning.\n\t* runtime/error.c: Don't include io/io.h.\n\t(st_printf): Move to io/unix.c.\n\t* intrinsics/flush.c: Delete, contents moved to io/intrinsics.c.\n\t* intrinsics/fget.c: Likewise.\n\t* intrinsics/ftell.c: Likewise.\n\t* intrinsics/tty.c: Likewise.\n\t* libgfortran.h (DEFAULT_RECL, notification_std,\n\tget_unformatted_convert, IOPARM_*, st_parameter_common, unit_convert,\n\tDEFAULT_TEMPDIR): New declarations.\n\t* io/io.h (DEFAULT_RECL, notification_std, get_unformatted_convert,\n\tIOPARM_*, st_parameter_common, unit_convert, DEFAULT_TEMPDIR):\n\tMove to libgfortran.h.\n\t* io/unix.c: Add io/unix.h content.\n\t(st_printf): New function.\n\t* io/intrinsics.c: New file.\n\t* io/unix.h: Remove, contents moved into unix.c.\n\t* libtool-version: Update library version to 3.0.0.\n\t* configure.ac: Update library version to 0.3.\n\t* Makefile.am (intrinsics/fget.c, intrinsics/flush.c,\n\tintrinsics/ftell.c, intrinsics/tty.c, libgfortran.h): Remove targets.\n\t* Makefile.in: Regenerate.\n\t* configure: Regenerate.\n\nFrom-SVN: r120869", "tree": {"sha": "acb8b6ff735e7961042f7c90dac13e2947fc3c83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/acb8b6ff735e7961042f7c90dac13e2947fc3c83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0dce3ca161fa6664c8505cfe0718a9dbccb8765c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dce3ca161fa6664c8505cfe0718a9dbccb8765c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0dce3ca161fa6664c8505cfe0718a9dbccb8765c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7fd0be47b7afeb96031c3e6ba9ff0eddf7a848a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7fd0be47b7afeb96031c3e6ba9ff0eddf7a848a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7fd0be47b7afeb96031c3e6ba9ff0eddf7a848a"}], "stats": {"total": 1042, "additions": 462, "deletions": 580}, "files": [{"sha": "a8d0fdcee719f5201ee43bfeef49666c71bddbfe", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=0dce3ca161fa6664c8505cfe0718a9dbccb8765c", "patch": "@@ -1,3 +1,32 @@\n+2007-01-17  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/27107\n+\t* runtime/environ.c: Don't include io/io.h.\n+\t* runtime/string.c: Don't include io/io.h.\n+\t(compare0): Add cast to avoid warning.\n+\t* runtime/error.c: Don't include io/io.h.\n+\t(st_printf): Move to io/unix.c.\n+\t* intrinsics/flush.c: Delete, contents moved to io/intrinsics.c.\n+\t* intrinsics/fget.c: Likewise.\n+\t* intrinsics/ftell.c: Likewise.\n+\t* intrinsics/tty.c: Likewise.\n+\t* libgfortran.h (DEFAULT_RECL, notification_std,\n+\tget_unformatted_convert, IOPARM_*, st_parameter_common, unit_convert,\n+\tDEFAULT_TEMPDIR): New declarations.\n+\t* io/io.h (DEFAULT_RECL, notification_std, get_unformatted_convert,\n+\tIOPARM_*, st_parameter_common, unit_convert, DEFAULT_TEMPDIR):\n+\tMove to libgfortran.h.\n+\t* io/unix.c: Add io/unix.h content.\n+\t(st_printf): New function.\n+\t* io/intrinsics.c: New file.\n+\t* io/unix.h: Remove, contents moved into unix.c.\n+\t* libtool-version: Update library version to 3.0.0.\n+\t* configure.ac: Update library version to 0.3.\n+\t* Makefile.am (intrinsics/fget.c, intrinsics/flush.c,\n+\tintrinsics/ftell.c, intrinsics/tty.c, libgfortran.h): Remove targets.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\n 2007-01-12  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/30435"}, {"sha": "c1cb3ac19dcd3826668ebc9d1c9f08243298f9b7", "filename": "libgfortran/Makefile.am", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/libgfortran%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/libgfortran%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.am?ref=0dce3ca161fa6664c8505cfe0718a9dbccb8765c", "patch": "@@ -25,6 +25,7 @@ io/close.c \\\n io/file_pos.c \\\n io/format.c \\\n io/inquire.c \\\n+io/intrinsics.c \\\n io/list_read.c \\\n io/lock.c \\\n io/open.c \\\n@@ -56,10 +57,7 @@ intrinsics/eoshift0.c \\\n intrinsics/eoshift2.c \\\n intrinsics/etime.c \\\n intrinsics/exit.c \\\n-intrinsics/fget.c \\\n-intrinsics/flush.c \\\n intrinsics/fnum.c \\\n-intrinsics/ftell.c \\\n intrinsics/gerror.c \\\n intrinsics/getcwd.c \\\n intrinsics/getlog.c \\\n@@ -92,7 +90,6 @@ intrinsics/symlnk.c \\\n intrinsics/system_clock.c \\\n intrinsics/time.c \\\n intrinsics/transpose_generic.c \\\n-intrinsics/tty.c \\\n intrinsics/umask.c \\\n intrinsics/unlink.c \\\n intrinsics/unpack_generic.c \\\n@@ -109,8 +106,7 @@ runtime/memory.c \\\n runtime/pause.c \\\n runtime/stop.c \\\n runtime/string.c \\\n-runtime/select.c \\\n-libgfortran.h\n+runtime/select.c\n \n i_all_c= \\\n generated/all_l4.c \\"}, {"sha": "267762c6ea41259fc33fd62e83a50537670ffff5", "filename": "libgfortran/Makefile.in", "status": "modified", "additions": 16, "deletions": 30, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/libgfortran%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/libgfortran%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.in?ref=0dce3ca161fa6664c8505cfe0718a9dbccb8765c", "patch": "@@ -167,21 +167,20 @@ am__objects_30 = $(am__objects_2) $(am__objects_3) $(am__objects_4) \\\n \t$(am__objects_26) $(am__objects_27) $(am__objects_28) \\\n \t$(am__objects_29)\n am__objects_31 = close.lo file_pos.lo format.lo inquire.lo \\\n-\tlist_read.lo lock.lo open.lo read.lo size_from_kind.lo \\\n-\ttransfer.lo unit.lo unix.lo write.lo\n+\tintrinsics.lo list_read.lo lock.lo open.lo read.lo \\\n+\tsize_from_kind.lo transfer.lo unit.lo unix.lo write.lo\n am__objects_32 = associated.lo abort.lo access.lo args.lo \\\n \tc99_functions.lo chdir.lo chmod.lo clock.lo cpu_time.lo \\\n \tcshift0.lo ctime.lo date_and_time.lo env.lo eoshift0.lo \\\n-\teoshift2.lo etime.lo exit.lo fget.lo flush.lo fnum.lo ftell.lo \\\n-\tgerror.lo getcwd.lo getlog.lo getXid.lo hostnm.lo kill.lo \\\n-\tierrno.lo ishftc.lo link.lo malloc.lo mvbits.lo move_alloc.lo \\\n-\tpack_generic.lo perror.lo signal.lo size.lo sleep.lo \\\n-\tspread_generic.lo string_intrinsics.lo system.lo rand.lo \\\n-\trandom.lo rename.lo reshape_generic.lo reshape_packed.lo \\\n-\tselected_int_kind.lo selected_real_kind.lo stat.lo symlnk.lo \\\n-\tsystem_clock.lo time.lo transpose_generic.lo tty.lo umask.lo \\\n-\tunlink.lo unpack_generic.lo in_pack_generic.lo \\\n-\tin_unpack_generic.lo\n+\teoshift2.lo etime.lo exit.lo fnum.lo gerror.lo getcwd.lo \\\n+\tgetlog.lo getXid.lo hostnm.lo kill.lo ierrno.lo ishftc.lo \\\n+\tlink.lo malloc.lo mvbits.lo move_alloc.lo pack_generic.lo \\\n+\tperror.lo signal.lo size.lo sleep.lo spread_generic.lo \\\n+\tstring_intrinsics.lo system.lo rand.lo random.lo rename.lo \\\n+\treshape_generic.lo reshape_packed.lo selected_int_kind.lo \\\n+\tselected_real_kind.lo stat.lo symlnk.lo system_clock.lo \\\n+\ttime.lo transpose_generic.lo umask.lo unlink.lo \\\n+\tunpack_generic.lo in_pack_generic.lo in_unpack_generic.lo\n am__objects_33 =\n am__objects_34 = _abs_c4.lo _abs_c8.lo _abs_c10.lo _abs_c16.lo \\\n \t_abs_i4.lo _abs_i8.lo _abs_i16.lo _abs_r4.lo _abs_r8.lo \\\n@@ -384,6 +383,7 @@ io/close.c \\\n io/file_pos.c \\\n io/format.c \\\n io/inquire.c \\\n+io/intrinsics.c \\\n io/list_read.c \\\n io/lock.c \\\n io/open.c \\\n@@ -415,10 +415,7 @@ intrinsics/eoshift0.c \\\n intrinsics/eoshift2.c \\\n intrinsics/etime.c \\\n intrinsics/exit.c \\\n-intrinsics/fget.c \\\n-intrinsics/flush.c \\\n intrinsics/fnum.c \\\n-intrinsics/ftell.c \\\n intrinsics/gerror.c \\\n intrinsics/getcwd.c \\\n intrinsics/getlog.c \\\n@@ -451,7 +448,6 @@ intrinsics/symlnk.c \\\n intrinsics/system_clock.c \\\n intrinsics/time.c \\\n intrinsics/transpose_generic.c \\\n-intrinsics/tty.c \\\n intrinsics/umask.c \\\n intrinsics/unlink.c \\\n intrinsics/unpack_generic.c \\\n@@ -468,8 +464,7 @@ runtime/memory.c \\\n runtime/pause.c \\\n runtime/stop.c \\\n runtime/string.c \\\n-runtime/select.c \\\n-libgfortran.h\n+runtime/select.c\n \n i_all_c = \\\n generated/all_l4.c \\\n@@ -2317,6 +2312,9 @@ format.lo: io/format.c\n inquire.lo: io/inquire.c\n \t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o inquire.lo `test -f 'io/inquire.c' || echo '$(srcdir)/'`io/inquire.c\n \n+intrinsics.lo: io/intrinsics.c\n+\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o intrinsics.lo `test -f 'io/intrinsics.c' || echo '$(srcdir)/'`io/intrinsics.c\n+\n list_read.lo: io/list_read.c\n \t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o list_read.lo `test -f 'io/list_read.c' || echo '$(srcdir)/'`io/list_read.c\n \n@@ -2395,18 +2393,9 @@ etime.lo: intrinsics/etime.c\n exit.lo: intrinsics/exit.c\n \t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o exit.lo `test -f 'intrinsics/exit.c' || echo '$(srcdir)/'`intrinsics/exit.c\n \n-fget.lo: intrinsics/fget.c\n-\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fget.lo `test -f 'intrinsics/fget.c' || echo '$(srcdir)/'`intrinsics/fget.c\n-\n-flush.lo: intrinsics/flush.c\n-\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o flush.lo `test -f 'intrinsics/flush.c' || echo '$(srcdir)/'`intrinsics/flush.c\n-\n fnum.lo: intrinsics/fnum.c\n \t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fnum.lo `test -f 'intrinsics/fnum.c' || echo '$(srcdir)/'`intrinsics/fnum.c\n \n-ftell.lo: intrinsics/ftell.c\n-\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ftell.lo `test -f 'intrinsics/ftell.c' || echo '$(srcdir)/'`intrinsics/ftell.c\n-\n gerror.lo: intrinsics/gerror.c\n \t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gerror.lo `test -f 'intrinsics/gerror.c' || echo '$(srcdir)/'`intrinsics/gerror.c\n \n@@ -2497,9 +2486,6 @@ time.lo: intrinsics/time.c\n transpose_generic.lo: intrinsics/transpose_generic.c\n \t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o transpose_generic.lo `test -f 'intrinsics/transpose_generic.c' || echo '$(srcdir)/'`intrinsics/transpose_generic.c\n \n-tty.lo: intrinsics/tty.c\n-\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tty.lo `test -f 'intrinsics/tty.c' || echo '$(srcdir)/'`intrinsics/tty.c\n-\n umask.lo: intrinsics/umask.c\n \t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o umask.lo `test -f 'intrinsics/umask.c' || echo '$(srcdir)/'`intrinsics/umask.c\n "}, {"sha": "187df07d586c2f6a336e8d909af021a5d6b75708", "filename": "libgfortran/configure", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=0dce3ca161fa6664c8505cfe0718a9dbccb8765c", "patch": "@@ -1,6 +1,6 @@\n #! /bin/sh\n # Guess values for system-dependent variables and create Makefiles.\n-# Generated by GNU Autoconf 2.59 for GNU Fortran Runtime Library 0.2.\n+# Generated by GNU Autoconf 2.59 for GNU Fortran Runtime Library 0.3.\n #\n # Copyright (C) 2003 Free Software Foundation, Inc.\n # This configure script is free software; the Free Software Foundation\n@@ -267,8 +267,8 @@ SHELL=${CONFIG_SHELL-/bin/sh}\n # Identity of this package.\n PACKAGE_NAME='GNU Fortran Runtime Library'\n PACKAGE_TARNAME='libgfortran'\n-PACKAGE_VERSION='0.2'\n-PACKAGE_STRING='GNU Fortran Runtime Library 0.2'\n+PACKAGE_VERSION='0.3'\n+PACKAGE_STRING='GNU Fortran Runtime Library 0.3'\n PACKAGE_BUGREPORT=''\n \n # Factoring default headers for most tests.\n@@ -777,7 +777,7 @@ if test \"$ac_init_help\" = \"long\"; then\n   # Omit some internal or obsolete options to make the list less imposing.\n   # This message is too long to be a string in the A/UX 3.1 sh.\n   cat <<_ACEOF\n-\\`configure' configures GNU Fortran Runtime Library 0.2 to adapt to many kinds of systems.\n+\\`configure' configures GNU Fortran Runtime Library 0.3 to adapt to many kinds of systems.\n \n Usage: $0 [OPTION]... [VAR=VALUE]...\n \n@@ -844,7 +844,7 @@ fi\n \n if test -n \"$ac_init_help\"; then\n   case $ac_init_help in\n-     short | recursive ) echo \"Configuration of GNU Fortran Runtime Library 0.2:\";;\n+     short | recursive ) echo \"Configuration of GNU Fortran Runtime Library 0.3:\";;\n    esac\n   cat <<\\_ACEOF\n \n@@ -977,7 +977,7 @@ fi\n test -n \"$ac_init_help\" && exit 0\n if $ac_init_version; then\n   cat <<\\_ACEOF\n-GNU Fortran Runtime Library configure 0.2\n+GNU Fortran Runtime Library configure 0.3\n generated by GNU Autoconf 2.59\n \n Copyright (C) 2003 Free Software Foundation, Inc.\n@@ -991,7 +991,7 @@ cat >&5 <<_ACEOF\n This file contains any messages produced by compilers while\n running configure, to aid debugging if configure makes a mistake.\n \n-It was created by GNU Fortran Runtime Library $as_me 0.2, which was\n+It was created by GNU Fortran Runtime Library $as_me 0.3, which was\n generated by GNU Autoconf 2.59.  Invocation command line was\n \n   $ $0 $@\n@@ -1815,7 +1815,7 @@ fi\n \n # Define the identity of the package.\n  PACKAGE='libgfortran'\n- VERSION='0.2'\n+ VERSION='0.3'\n \n \n # Some tools Automake needs.\n@@ -24570,7 +24570,7 @@ _ASBOX\n } >&5\n cat >&5 <<_CSEOF\n \n-This file was extended by GNU Fortran Runtime Library $as_me 0.2, which was\n+This file was extended by GNU Fortran Runtime Library $as_me 0.3, which was\n generated by GNU Autoconf 2.59.  Invocation command line was\n \n   CONFIG_FILES    = $CONFIG_FILES\n@@ -24633,7 +24633,7 @@ _ACEOF\n \n cat >>$CONFIG_STATUS <<_ACEOF\n ac_cs_version=\"\\\\\n-GNU Fortran Runtime Library config.status 0.2\n+GNU Fortran Runtime Library config.status 0.3\n configured by $0, generated by GNU Autoconf 2.59,\n   with options \\\\\"`echo \"$ac_configure_args\" | sed 's/[\\\\\"\"\\`\\$]/\\\\\\\\&/g'`\\\\\"\n "}, {"sha": "023e4d3b1e089ea522435e2adf9901addd5bcbfa", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=0dce3ca161fa6664c8505cfe0718a9dbccb8765c", "patch": "@@ -2,7 +2,7 @@\n # aclocal && autoconf && autoheader && automake\n \n AC_PREREQ(2.59)\n-AC_INIT([GNU Fortran Runtime Library], 0.2,,[libgfortran])\n+AC_INIT([GNU Fortran Runtime Library], 0.3,,[libgfortran])\n AC_CONFIG_HEADER(config.h)\n GCC_TOPLEV_SUBDIRS\n "}, {"sha": "2164b47473e1103bf160fb8df58e87229d13ad75", "filename": "libgfortran/intrinsics/flush.c", "status": "removed", "additions": 0, "deletions": 87, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7fd0be47b7afeb96031c3e6ba9ff0eddf7a848a/libgfortran%2Fintrinsics%2Fflush.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7fd0be47b7afeb96031c3e6ba9ff0eddf7a848a/libgfortran%2Fintrinsics%2Fflush.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fflush.c?ref=e7fd0be47b7afeb96031c3e6ba9ff0eddf7a848a", "patch": "@@ -1,87 +0,0 @@\n-/* Implementation of the FLUSH intrinsic.\n-   Copyright (C) 2004, 2005 Free Software Foundation, Inc.\n-   Contributed by Steven G. Kargl <kargls@comcast.net>.\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 2 of the License, or (at your option) any later version.\n-\n-In addition to the permissions in the GNU General Public License, the\n-Free Software Foundation gives you unlimited permission to link the\n-compiled version of this file into combinations with other programs,\n-and to distribute those combinations without any restriction coming\n-from the use of this file.  (The General Public License restrictions\n-do apply in other respects; for example, they cover modification of\n-the file, and distribution when not linked into a combine\n-executable.)\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public\n-License along with libgfortran; see the file COPYING.  If not,\n-write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-\n-\n-#include \"config.h\"\n-#include \"libgfortran.h\"\n-\n-#ifdef HAVE_STDLIB_H\n-#include <stdlib.h>\n-#endif\n-\n-#include \"../io/io.h\"\n-\n-/* SUBROUTINE FLUSH(UNIT)\n-   INTEGER, INTENT(IN), OPTIONAL :: UNIT  */\n-\n-extern void flush_i4 (GFC_INTEGER_4 *);\n-export_proto(flush_i4);\n-\n-void\n-flush_i4 (GFC_INTEGER_4 *unit)\n-{\n-  gfc_unit *us;\n-\n-  /* flush all streams */\n-  if (unit == NULL)\n-    flush_all_units ();\n-  else\n-    {\n-      us = find_unit (*unit);\n-      if (us != NULL)\n-\t{\n-\t  flush (us->s);\n-\t  unlock_unit (us);\n-\t}\n-    }\n-}\n-\n-\n-extern void flush_i8 (GFC_INTEGER_8 *);\n-export_proto(flush_i8);\n-\n-void\n-flush_i8 (GFC_INTEGER_8 *unit)\n-{\n-  gfc_unit *us;\n-\n-  /* flush all streams */\n-  if (unit == NULL)\n-    flush_all_units ();\n-  else\n-    {\n-      us = find_unit (*unit);\n-      if (us != NULL)\n-\t{\n-\t  flush (us->s);\n-\t  unlock_unit (us);\n-\t}\n-    }\n-}"}, {"sha": "311f070cd16037b8c0fcd7f8f71b97d3877f3316", "filename": "libgfortran/intrinsics/ftell.c", "status": "removed", "additions": 0, "deletions": 72, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7fd0be47b7afeb96031c3e6ba9ff0eddf7a848a/libgfortran%2Fintrinsics%2Fftell.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7fd0be47b7afeb96031c3e6ba9ff0eddf7a848a/libgfortran%2Fintrinsics%2Fftell.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fftell.c?ref=e7fd0be47b7afeb96031c3e6ba9ff0eddf7a848a", "patch": "@@ -1,72 +0,0 @@\n-/* Implementation of the FTELL intrinsic.\n-   Copyright (C) 2005 Free Software Foundation, Inc.\n-   Contributed by Fran\u00e7ois-Xavier Coudert <coudert@clipper.ens.fr>\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 2 of the License, or (at your option) any later version.\n-\n-In addition to the permissions in the GNU General Public License, the\n-Free Software Foundation gives you unlimited permission to link the\n-compiled version of this file into combinations with other programs,\n-and to distribute those combinations without any restriction coming\n-from the use of this file.  (The General Public License restrictions\n-do apply in other respects; for example, they cover modification of\n-the file, and distribution when not linked into a combine\n-executable.)\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public\n-License along with libgfortran; see the file COPYING.  If not,\n-write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-\n-#include \"config.h\"\n-#include \"libgfortran.h\"\n-\n-#include <string.h>\n-\n-#include \"../io/io.h\"\n-\n-extern size_t PREFIX(ftell) (int *);\n-export_proto_np(PREFIX(ftell));\n-\n-size_t\n-PREFIX(ftell) (int * unit)\n-{\n-  gfc_unit * u = find_unit (*unit);\n-  size_t ret;\n-  if (u == NULL)\n-    return ((size_t) -1);\n-  ret = (size_t) stream_offset (u->s);\n-  unlock_unit (u);\n-  return ret;\n-}\n-\n-#define FTELL_SUB(kind) \\\n-  extern void ftell_i ## kind ## _sub (int *, GFC_INTEGER_ ## kind *); \\\n-  export_proto(ftell_i ## kind ## _sub); \\\n-  void \\\n-  ftell_i ## kind ## _sub (int * unit, GFC_INTEGER_ ## kind * offset) \\\n-  { \\\n-    gfc_unit * u = find_unit (*unit); \\\n-    if (u == NULL) \\\n-      *offset = -1; \\\n-    else \\\n-      { \\\n-\t*offset = stream_offset (u->s); \\\n-\tunlock_unit (u); \\\n-      } \\\n-  }\n-\n-FTELL_SUB(1)\n-FTELL_SUB(2)\n-FTELL_SUB(4)\n-FTELL_SUB(8)"}, {"sha": "93416f9983c2a9a49aec55e6cd0f28f892297420", "filename": "libgfortran/intrinsics/tty.c", "status": "removed", "additions": 0, "deletions": 132, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7fd0be47b7afeb96031c3e6ba9ff0eddf7a848a/libgfortran%2Fintrinsics%2Ftty.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7fd0be47b7afeb96031c3e6ba9ff0eddf7a848a/libgfortran%2Fintrinsics%2Ftty.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Ftty.c?ref=e7fd0be47b7afeb96031c3e6ba9ff0eddf7a848a", "patch": "@@ -1,132 +0,0 @@\n-/* Implementation of the ISATTY and TTYNAM g77 intrinsics.\n-   Copyright (C) 2005 Free Software Foundation, Inc.\n-   Contributed by Fran\u00e7ois-Xavier Coudert <coudert@clipper.ens.fr>\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 2 of the License, or (at your option) any later version.\n-\n-In addition to the permissions in the GNU General Public License, the\n-Free Software Foundation gives you unlimited permission to link the\n-compiled version of this file into combinations with other programs,\n-and to distribute those combinations without any restriction coming\n-from the use of this file.  (The General Public License restrictions\n-do apply in other respects; for example, they cover modification of\n-the file, and distribution when not linked into a combine\n-executable.)\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public\n-License along with libgfortran; see the file COPYING.  If not,\n-write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-\n-#include \"config.h\"\n-#include \"libgfortran.h\"\n-#include \"../io/io.h\"\n-\n-#include <string.h>\n-\n-/* LOGICAL FUNCTION ISATTY(UNIT)\n-   INTEGER, INTENT(IN) :: UNIT */\n-\n-extern GFC_LOGICAL_4 isatty_l4 (int *);\n-export_proto(isatty_l4);\n-\n-GFC_LOGICAL_4\n-isatty_l4 (int *unit)\n-{\n-  gfc_unit *u;\n-  GFC_LOGICAL_4 ret = 0;\n-\n-  u = find_unit (*unit);\n-  if (u != NULL)\n-    {\n-      ret = (GFC_LOGICAL_4) stream_isatty (u->s);\n-      unlock_unit (u);\n-    }\n-  return ret;\n-}\n-\n-\n-extern GFC_LOGICAL_8 isatty_l8 (int *);\n-export_proto(isatty_l8);\n-\n-GFC_LOGICAL_8\n-isatty_l8 (int *unit)\n-{\n-  gfc_unit *u;\n-  GFC_LOGICAL_8 ret = 0;\n-\n-  u = find_unit (*unit);\n-  if (u != NULL)\n-    {\n-      ret = (GFC_LOGICAL_8) stream_isatty (u->s);\n-      unlock_unit (u);\n-    }\n-  return ret;\n-}\n-\n-\n-/* SUBROUTINE TTYNAM(UNIT,NAME)\n-   INTEGER,SCALAR,INTENT(IN) :: UNIT\n-   CHARACTER,SCALAR,INTENT(OUT) :: NAME */\n-\n-extern void ttynam_sub (int *, char *, gfc_charlen_type);\n-export_proto(ttynam_sub);\n-\n-void\n-ttynam_sub (int *unit, char * name, gfc_charlen_type name_len)\n-{\n-  gfc_unit *u;\n-  char * n;\n-  int i;\n-\n-  memset (name, ' ', name_len);\n-  u = find_unit (*unit);\n-  if (u != NULL)\n-    {\n-      n = stream_ttyname (u->s);\n-      if (n != NULL)\n-\t{\n-\t  i = 0;\n-\t  while (*n && i < name_len)\n-\t    name[i++] = *(n++);\n-\t}\n-      unlock_unit (u);\n-    }\n-}\n-\n-\n-extern void ttynam (char **, gfc_charlen_type *, int);\n-export_proto(ttynam);\n-\n-void\n-ttynam (char ** name, gfc_charlen_type * name_len, int unit)\n-{\n-  gfc_unit *u;\n-\n-  u = find_unit (unit);\n-  if (u != NULL)\n-    {\n-      *name = stream_ttyname (u->s);\n-      if (*name != NULL)\n-\t{\n-\t  *name_len = strlen (*name);\n-\t  *name = strdup (*name);\n-\t  unlock_unit (u);\n-\t  return;\n-\t}\n-      unlock_unit (u);\n-    }\n-\n-  *name_len = 0;\n-  *name = NULL;\n-}"}, {"sha": "ab99b25e5a5a0ad7e1651357b18d073fabfa3dcb", "filename": "libgfortran/io/intrinsics.c", "status": "renamed", "additions": 194, "deletions": 4, "changes": 198, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/libgfortran%2Fio%2Fintrinsics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/libgfortran%2Fio%2Fintrinsics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fintrinsics.c?ref=0dce3ca161fa6664c8505cfe0718a9dbccb8765c", "patch": "@@ -1,6 +1,6 @@\n-/* Implementation of the FGET, FGETC, FPUT and FPUTC intrinsics.\n-   Copyright (C) 2005 Free Software Foundation, Inc.\n-   Contributed by Fran\u00e7ois-Xavier Coudert <coudert@clipper.ens.fr>\n+/* Implementation of the FGET, FGETC, FPUT, FPUTC, FLUSH \n+   FTELL, TTYNAM and ISATTY intrinsics.\n+   Copyright (C) 2005, 2007 Free Software Foundation, Inc.\n \n This file is part of the GNU Fortran 95 runtime library (libgfortran).\n \n@@ -31,9 +31,13 @@ Boston, MA 02110-1301, USA.  */\n #include \"config.h\"\n #include \"libgfortran.h\"\n \n+#ifdef HAVE_STDLIB_H\n+#include <stdlib.h>\n+#endif\n+\n #include <string.h>\n \n-#include \"../io/io.h\"\n+#include \"io.h\"\n \n static const int five = 5;\n static const int six = 6;\n@@ -175,3 +179,189 @@ FPUT_SUB(2)\n FPUT_SUB(4)\n FPUT_SUB(8)\n \n+\n+/* SUBROUTINE FLUSH(UNIT)\n+   INTEGER, INTENT(IN), OPTIONAL :: UNIT  */\n+\n+extern void flush_i4 (GFC_INTEGER_4 *);\n+export_proto(flush_i4);\n+\n+void\n+flush_i4 (GFC_INTEGER_4 *unit)\n+{\n+  gfc_unit *us;\n+\n+  /* flush all streams */\n+  if (unit == NULL)\n+    flush_all_units ();\n+  else\n+    {\n+      us = find_unit (*unit);\n+      if (us != NULL)\n+\t{\n+\t  flush (us->s);\n+\t  unlock_unit (us);\n+\t}\n+    }\n+}\n+\n+\n+extern void flush_i8 (GFC_INTEGER_8 *);\n+export_proto(flush_i8);\n+\n+void\n+flush_i8 (GFC_INTEGER_8 *unit)\n+{\n+  gfc_unit *us;\n+\n+  /* flush all streams */\n+  if (unit == NULL)\n+    flush_all_units ();\n+  else\n+    {\n+      us = find_unit (*unit);\n+      if (us != NULL)\n+\t{\n+\t  flush (us->s);\n+\t  unlock_unit (us);\n+\t}\n+    }\n+}\n+\n+\n+/* FTELL intrinsic */\n+\n+extern size_t PREFIX(ftell) (int *);\n+export_proto_np(PREFIX(ftell));\n+\n+size_t\n+PREFIX(ftell) (int * unit)\n+{\n+  gfc_unit * u = find_unit (*unit);\n+  size_t ret;\n+  if (u == NULL)\n+    return ((size_t) -1);\n+  ret = (size_t) stream_offset (u->s);\n+  unlock_unit (u);\n+  return ret;\n+}\n+\n+#define FTELL_SUB(kind) \\\n+  extern void ftell_i ## kind ## _sub (int *, GFC_INTEGER_ ## kind *); \\\n+  export_proto(ftell_i ## kind ## _sub); \\\n+  void \\\n+  ftell_i ## kind ## _sub (int * unit, GFC_INTEGER_ ## kind * offset) \\\n+  { \\\n+    gfc_unit * u = find_unit (*unit); \\\n+    if (u == NULL) \\\n+      *offset = -1; \\\n+    else \\\n+      { \\\n+\t*offset = stream_offset (u->s); \\\n+\tunlock_unit (u); \\\n+      } \\\n+  }\n+\n+FTELL_SUB(1)\n+FTELL_SUB(2)\n+FTELL_SUB(4)\n+FTELL_SUB(8)\n+\n+\n+\n+/* LOGICAL FUNCTION ISATTY(UNIT)\n+   INTEGER, INTENT(IN) :: UNIT */\n+\n+extern GFC_LOGICAL_4 isatty_l4 (int *);\n+export_proto(isatty_l4);\n+\n+GFC_LOGICAL_4\n+isatty_l4 (int *unit)\n+{\n+  gfc_unit *u;\n+  GFC_LOGICAL_4 ret = 0;\n+\n+  u = find_unit (*unit);\n+  if (u != NULL)\n+    {\n+      ret = (GFC_LOGICAL_4) stream_isatty (u->s);\n+      unlock_unit (u);\n+    }\n+  return ret;\n+}\n+\n+\n+extern GFC_LOGICAL_8 isatty_l8 (int *);\n+export_proto(isatty_l8);\n+\n+GFC_LOGICAL_8\n+isatty_l8 (int *unit)\n+{\n+  gfc_unit *u;\n+  GFC_LOGICAL_8 ret = 0;\n+\n+  u = find_unit (*unit);\n+  if (u != NULL)\n+    {\n+      ret = (GFC_LOGICAL_8) stream_isatty (u->s);\n+      unlock_unit (u);\n+    }\n+  return ret;\n+}\n+\n+\n+/* SUBROUTINE TTYNAM(UNIT,NAME)\n+   INTEGER,SCALAR,INTENT(IN) :: UNIT\n+   CHARACTER,SCALAR,INTENT(OUT) :: NAME */\n+\n+extern void ttynam_sub (int *, char *, gfc_charlen_type);\n+export_proto(ttynam_sub);\n+\n+void\n+ttynam_sub (int *unit, char * name, gfc_charlen_type name_len)\n+{\n+  gfc_unit *u;\n+  char * n;\n+  int i;\n+\n+  memset (name, ' ', name_len);\n+  u = find_unit (*unit);\n+  if (u != NULL)\n+    {\n+      n = stream_ttyname (u->s);\n+      if (n != NULL)\n+\t{\n+\t  i = 0;\n+\t  while (*n && i < name_len)\n+\t    name[i++] = *(n++);\n+\t}\n+      unlock_unit (u);\n+    }\n+}\n+\n+\n+extern void ttynam (char **, gfc_charlen_type *, int);\n+export_proto(ttynam);\n+\n+void\n+ttynam (char ** name, gfc_charlen_type * name_len, int unit)\n+{\n+  gfc_unit *u;\n+\n+  u = find_unit (unit);\n+  if (u != NULL)\n+    {\n+      *name = stream_ttyname (u->s);\n+      if (*name != NULL)\n+\t{\n+\t  *name_len = strlen (*name);\n+\t  *name = strdup (*name);\n+\t  unlock_unit (u);\n+\t  return;\n+\t}\n+      unlock_unit (u);\n+    }\n+\n+  *name_len = 0;\n+  *name = NULL;\n+}", "previous_filename": "libgfortran/intrinsics/fget.c"}, {"sha": "8d8d592d40ba17d5902cb63b447c5a3e436ce7e4", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=0dce3ca161fa6664c8505cfe0718a9dbccb8765c", "patch": "@@ -35,8 +35,6 @@ Boston, MA 02110-1301, USA.  */\n \n #include <gthr.h>\n \n-#define DEFAULT_TEMPDIR \"/tmp\"\n-\n /* Basic types used in data transfers.  */\n \n typedef enum\n@@ -205,53 +203,13 @@ typedef enum\n {READING, WRITING}\n unit_mode;\n \n-typedef enum\n-{ CONVERT_NONE=-1, CONVERT_NATIVE, CONVERT_SWAP, CONVERT_BIG, CONVERT_LITTLE }\n-unit_convert;\n-\n #define CHARACTER1(name) \\\n \t      char * name; \\\n \t      gfc_charlen_type name ## _len\n #define CHARACTER2(name) \\\n \t      gfc_charlen_type name ## _len; \\\n \t      char * name\n \n-#define IOPARM_LIBRETURN_MASK\t\t(3 << 0)\n-#define IOPARM_LIBRETURN_OK\t\t(0 << 0)\n-#define IOPARM_LIBRETURN_ERROR\t\t(1 << 0)\n-#define IOPARM_LIBRETURN_END\t\t(2 << 0)\n-#define IOPARM_LIBRETURN_EOR\t\t(3 << 0)\n-#define IOPARM_ERR\t\t\t(1 << 2)\n-#define IOPARM_END\t\t\t(1 << 3)\n-#define IOPARM_EOR\t\t\t(1 << 4)\n-#define IOPARM_HAS_IOSTAT\t\t(1 << 5)\n-#define IOPARM_HAS_IOMSG\t\t(1 << 6)\n-\n-#define IOPARM_COMMON_MASK\t\t((1 << 7) - 1)\n-\n-typedef struct st_parameter_common\n-{\n-  GFC_INTEGER_4 flags;\n-  GFC_INTEGER_4 unit;\n-  const char *filename;\n-  GFC_INTEGER_4 line;\n-  CHARACTER2 (iomsg);\n-  GFC_INTEGER_4 *iostat;\n-}\n-st_parameter_common;\n-\n-#define IOPARM_OPEN_HAS_RECL_IN\t\t(1 << 7)\n-#define IOPARM_OPEN_HAS_FILE\t\t(1 << 8)\n-#define IOPARM_OPEN_HAS_STATUS\t\t(1 << 9)\n-#define IOPARM_OPEN_HAS_ACCESS\t\t(1 << 10)\n-#define IOPARM_OPEN_HAS_FORM\t\t(1 << 11)\n-#define IOPARM_OPEN_HAS_BLANK\t\t(1 << 12)\n-#define IOPARM_OPEN_HAS_POSITION\t(1 << 13)\n-#define IOPARM_OPEN_HAS_ACTION\t\t(1 << 14)\n-#define IOPARM_OPEN_HAS_DELIM\t\t(1 << 15)\n-#define IOPARM_OPEN_HAS_PAD\t\t(1 << 16)\n-#define IOPARM_OPEN_HAS_CONVERT\t\t(1 << 17)\n-\n typedef struct\n {\n   st_parameter_common common;\n@@ -475,13 +433,6 @@ typedef struct\n unit_flags;\n \n \n-/* The default value of record length for preconnected units is defined\n-   here. This value can be overriden by an environment variable.\n-   Default value is 1 Gb.  */\n-\n-#define DEFAULT_RECL 1073741824\n-\n-\n typedef struct gfc_unit\n {\n   int unit_number;\n@@ -877,10 +828,6 @@ extern void list_formatted_write (st_parameter_dt *, bt, void *, int, size_t,\n \t\t\t\t  size_t);\n internal_proto(list_formatted_write);\n \n-/* error.c */\n-extern notification notification_std(int);\n-internal_proto(notification_std);\n-\n /* size_from_kind.c */\n extern size_t size_from_real_kind (int);\n internal_proto(size_from_real_kind);\n@@ -926,7 +873,3 @@ dec_waiting_unlocked (gfc_unit *u)\n \n #endif\n \n-/* ../runtime/environ.c  This is here because we return unit_convert.  */\n-\n-unit_convert get_unformatted_convert (int);\n-internal_proto(get_unformatted_convert);"}, {"sha": "aa1dd1fdf59d835a125b53860d4d1ca016830281", "filename": "libgfortran/io/unix.c", "status": "modified", "additions": 135, "deletions": 2, "changes": 137, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/libgfortran%2Fio%2Funix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/libgfortran%2Fio%2Funix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.c?ref=0dce3ca161fa6664c8505cfe0718a9dbccb8765c", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2002, 2003, 2004, 2005\n+/* Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007\n    Free Software Foundation, Inc.\n    Contributed by Andy Vaught\n \n@@ -36,6 +36,7 @@ Boston, MA 02110-1301, USA.  */\n \n #include <unistd.h>\n #include <stdio.h>\n+#include <stdarg.h>\n #include <sys/stat.h>\n #include <fcntl.h>\n #include <assert.h>\n@@ -45,7 +46,6 @@ Boston, MA 02110-1301, USA.  */\n \n #include \"libgfortran.h\"\n #include \"io.h\"\n-#include \"unix.h\"\n \n #ifndef SSIZE_MAX\n #define SSIZE_MAX SHRT_MAX\n@@ -81,6 +81,42 @@ Boston, MA 02110-1301, USA.  */\n #define S_IWOTH 0\n #endif\n \n+\n+/* Unix stream I/O module */\n+\n+#define BUFFER_SIZE 8192\n+\n+typedef struct\n+{\n+  stream st;\n+\n+  int fd;\n+  gfc_offset buffer_offset;\t/* File offset of the start of the buffer */\n+  gfc_offset physical_offset;\t/* Current physical file offset */\n+  gfc_offset logical_offset;\t/* Current logical file offset */\n+  gfc_offset dirty_offset;\t/* Start of modified bytes in buffer */\n+  gfc_offset file_length;\t/* Length of the file, -1 if not seekable. */\n+\n+  char *buffer;\n+  int len;\t\t\t/* Physical length of the current buffer */\n+  int active;\t\t\t/* Length of valid bytes in the buffer */\n+\n+  int prot;\n+  int ndirty;\t\t\t/* Dirty bytes starting at dirty_offset */\n+\n+  int special_file;\t\t/* =1 if the fd refers to a special file */\n+\n+  unsigned unbuffered:1;\n+\n+  char small_buffer[BUFFER_SIZE];\n+\n+}\n+unix_stream;\n+\n+extern stream *init_error_stream (unix_stream *);\n+internal_proto(init_error_stream);\n+\n+\n /* This implementation of stream I/O is based on the paper:\n  *\n  *  \"Exploiting the advantages of mapped files for stream I/O\",\n@@ -1346,6 +1382,103 @@ init_error_stream (unix_stream *error)\n   return (stream *) error;\n }\n \n+/* st_printf()-- simple printf() function for streams that handles the\n+ * formats %d, %s and %c.  This function handles printing of error\n+ * messages that originate within the library itself, not from a user\n+ * program. */\n+\n+int\n+st_printf (const char *format, ...)\n+{\n+  int count, total;\n+  va_list arg;\n+  char *p;\n+  const char *q;\n+  stream *s;\n+  char itoa_buf[GFC_ITOA_BUF_SIZE];\n+  unix_stream err_stream;\n+\n+  total = 0;\n+  s = init_error_stream (&err_stream);\n+  va_start (arg, format);\n+\n+  for (;;)\n+    {\n+      count = 0;\n+\n+      while (format[count] != '%' && format[count] != '\\0')\n+\tcount++;\n+\n+      if (count != 0)\n+\t{\n+\t  p = salloc_w (s, &count);\n+\t  memmove (p, format, count);\n+\t  sfree (s);\n+\t}\n+\n+      total += count;\n+      format += count;\n+      if (*format++ == '\\0')\n+\tbreak;\n+\n+      switch (*format)\n+\t{\n+\tcase 'c':\n+\t  count = 1;\n+\n+\t  p = salloc_w (s, &count);\n+\t  *p = (char) va_arg (arg, int);\n+\n+\t  sfree (s);\n+\t  break;\n+\n+\tcase 'd':\n+\t  q = gfc_itoa (va_arg (arg, int), itoa_buf, sizeof (itoa_buf));\n+\t  count = strlen (q);\n+\n+\t  p = salloc_w (s, &count);\n+\t  memmove (p, q, count);\n+\t  sfree (s);\n+\t  break;\n+\n+\tcase 'x':\n+\t  q = xtoa (va_arg (arg, unsigned), itoa_buf, sizeof (itoa_buf));\n+\t  count = strlen (q);\n+\n+\t  p = salloc_w (s, &count);\n+\t  memmove (p, q, count);\n+\t  sfree (s);\n+\t  break;\n+\n+\tcase 's':\n+\t  q = va_arg (arg, char *);\n+\t  count = strlen (q);\n+\n+\t  p = salloc_w (s, &count);\n+\t  memmove (p, q, count);\n+\t  sfree (s);\n+\t  break;\n+\n+\tcase '\\0':\n+\t  return total;\n+\n+\tdefault:\n+\t  count = 2;\n+\t  p = salloc_w (s, &count);\n+\t  p[0] = format[-1];\n+\t  p[1] = format[0];\n+\t  sfree (s);\n+\t  break;\n+\t}\n+\n+      total += count;\n+      format++;\n+    }\n+\n+  va_end (arg);\n+  return total;\n+}\n+\n \n /* compare_file_filename()-- Given an open stream and a fortran string\n  * that is a filename, figure out if the file is the same as the"}, {"sha": "25508f117da3d6fbb7a9c23bb55652438bf8773b", "filename": "libgfortran/io/unix.h", "status": "removed", "additions": 0, "deletions": 63, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7fd0be47b7afeb96031c3e6ba9ff0eddf7a848a/libgfortran%2Fio%2Funix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7fd0be47b7afeb96031c3e6ba9ff0eddf7a848a/libgfortran%2Fio%2Funix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.h?ref=e7fd0be47b7afeb96031c3e6ba9ff0eddf7a848a", "patch": "@@ -1,63 +0,0 @@\n-/* Copyright (C) 2002, 2003, 2004, 2005\n-   Free Software Foundation, Inc.\n-   Contributed by Andy Vaught\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-In addition to the permissions in the GNU General Public License, the\n-Free Software Foundation gives you unlimited permission to link the\n-compiled version of this file into combinations with other programs,\n-and to distribute those combinations without any restriction coming\n-from the use of this file.  (The General Public License restrictions\n-do apply in other respects; for example, they cover modification of\n-the file, and distribution when not linked into a combine\n-executable.)\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with Libgfortran; see the file COPYING.  If not, write to\n-the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-\n-/* Unix stream I/O module */\n-\n-#define BUFFER_SIZE 8192\n-\n-typedef struct\n-{\n-  stream st;\n-\n-  int fd;\n-  gfc_offset buffer_offset;\t/* File offset of the start of the buffer */\n-  gfc_offset physical_offset;\t/* Current physical file offset */\n-  gfc_offset logical_offset;\t/* Current logical file offset */\n-  gfc_offset dirty_offset;\t/* Start of modified bytes in buffer */\n-  gfc_offset file_length;\t/* Length of the file, -1 if not seekable. */\n-\n-  char *buffer;\n-  int len;\t\t\t/* Physical length of the current buffer */\n-  int active;\t\t\t/* Length of valid bytes in the buffer */\n-\n-  int prot;\n-  int ndirty;\t\t\t/* Dirty bytes starting at dirty_offset */\n-\n-  int special_file;\t\t/* =1 if the fd refers to a special file */\n-\n-  unsigned unbuffered:1;\n-\n-  char small_buffer[BUFFER_SIZE];\n-\n-}\n-unix_stream;\n-\n-extern stream *init_error_stream (unix_stream *);\n-internal_proto(init_error_stream);"}, {"sha": "dc93b2f73b16cd78c3d0b962e7903cdf78d6386b", "filename": "libgfortran/libgfortran.h", "status": "modified", "additions": 73, "deletions": 11, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/libgfortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/libgfortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibgfortran.h?ref=0dce3ca161fa6664c8505cfe0718a9dbccb8765c", "patch": "@@ -67,6 +67,7 @@ typedef off_t gfc_offset;\n #define __attribute__(x)\n #endif\n \n+\n /* For a library, a standard prefix is a requirement in order to partition\n    the namespace.  IPREFIX is for symbols intended to be internal to the\n    library.  */\n@@ -469,13 +470,68 @@ iexport_data_proto(filename);\n #define gfc_alloca(x)  __builtin_alloca(x)\n \n \n+/* Various I/O stuff also used in other parts of the library.  */\n+\n+#define DEFAULT_TEMPDIR \"/tmp\"\n+\n+/* The default value of record length for preconnected units is defined\n+   here. This value can be overriden by an environment variable.\n+   Default value is 1 Gb.  */\n+#define DEFAULT_RECL 1073741824\n+\n+typedef enum\n+{ CONVERT_NONE=-1, CONVERT_NATIVE, CONVERT_SWAP, CONVERT_BIG, CONVERT_LITTLE }\n+unit_convert;\n+\n+#define CHARACTER2(name) \\\n+              gfc_charlen_type name ## _len; \\\n+              char * name\n+\n+typedef struct st_parameter_common\n+{\n+  GFC_INTEGER_4 flags;\n+  GFC_INTEGER_4 unit;\n+  const char *filename;\n+  GFC_INTEGER_4 line;\n+  CHARACTER2 (iomsg);\n+  GFC_INTEGER_4 *iostat;\n+}\n+st_parameter_common;\n+\n+#undef CHARACTER2\n+\n+#define IOPARM_LIBRETURN_MASK           (3 << 0)\n+#define IOPARM_LIBRETURN_OK             (0 << 0)\n+#define IOPARM_LIBRETURN_ERROR          (1 << 0)\n+#define IOPARM_LIBRETURN_END            (2 << 0)\n+#define IOPARM_LIBRETURN_EOR            (3 << 0)\n+#define IOPARM_ERR                      (1 << 2)\n+#define IOPARM_END                      (1 << 3)\n+#define IOPARM_EOR                      (1 << 4)\n+#define IOPARM_HAS_IOSTAT               (1 << 5)\n+#define IOPARM_HAS_IOMSG                (1 << 6)\n+\n+#define IOPARM_COMMON_MASK              ((1 << 7) - 1)\n+\n+#define IOPARM_OPEN_HAS_RECL_IN         (1 << 7)\n+#define IOPARM_OPEN_HAS_FILE            (1 << 8)\n+#define IOPARM_OPEN_HAS_STATUS          (1 << 9)\n+#define IOPARM_OPEN_HAS_ACCESS          (1 << 10)\n+#define IOPARM_OPEN_HAS_FORM            (1 << 11)\n+#define IOPARM_OPEN_HAS_BLANK           (1 << 12)\n+#define IOPARM_OPEN_HAS_POSITION        (1 << 13)\n+#define IOPARM_OPEN_HAS_ACTION          (1 << 14)\n+#define IOPARM_OPEN_HAS_DELIM           (1 << 15)\n+#define IOPARM_OPEN_HAS_PAD             (1 << 16)\n+#define IOPARM_OPEN_HAS_CONVERT         (1 << 17)\n+\n+\n /* main.c */\n \n extern void stupid_function_name_for_static_linking (void);\n internal_proto(stupid_function_name_for_static_linking);\n \n-struct st_parameter_common;\n-extern void library_start (struct st_parameter_common *);\n+extern void library_start (st_parameter_common *);\n internal_proto(library_start);\n \n #define library_end()\n@@ -502,13 +558,13 @@ internal_proto(xtoa);\n extern void os_error (const char *) __attribute__ ((noreturn));\n internal_proto(os_error);\n \n-extern void show_locus (struct st_parameter_common *);\n+extern void show_locus (st_parameter_common *);\n internal_proto(show_locus);\n \n extern void runtime_error (const char *) __attribute__ ((noreturn));\n iexport_proto(runtime_error);\n \n-extern void internal_error (struct st_parameter_common *, const char *)\n+extern void internal_error (st_parameter_common *, const char *)\n   __attribute__ ((noreturn));\n internal_proto(internal_error);\n \n@@ -518,23 +574,22 @@ internal_proto(get_oserror);\n extern void sys_exit (int) __attribute__ ((noreturn));\n internal_proto(sys_exit);\n \n-extern int st_printf (const char *, ...)\n-  __attribute__ ((format (printf, 1, 2)));\n-internal_proto(st_printf);\n-\n extern void st_sprintf (char *, const char *, ...)\n   __attribute__ ((format (printf, 2, 3)));\n internal_proto(st_sprintf);\n \n extern const char *translate_error (int);\n internal_proto(translate_error);\n \n-extern void generate_error (struct st_parameter_common *, int, const char *);\n+extern void generate_error (st_parameter_common *, int, const char *);\n internal_proto(generate_error);\n \n-extern try notify_std (struct st_parameter_common *, int, const char *);\n+extern try notify_std (st_parameter_common *, int, const char *);\n internal_proto(notify_std);\n \n+extern notification notification_std(int);\n+internal_proto(notification_std);\n+\n /* fpu.c */\n \n extern void set_fpu (void);\n@@ -565,9 +620,12 @@ internal_proto(init_variables);\n extern void show_variables (void);\n internal_proto(show_variables);\n \n+unit_convert get_unformatted_convert (int);\n+internal_proto(get_unformatted_convert);\n+\n /* string.c */\n \n-extern int find_option (struct st_parameter_common *, const char *, int,\n+extern int find_option (st_parameter_common *, const char *, int,\n \t\t\tconst st_option *, const char *);\n internal_proto(find_option);\n \n@@ -591,6 +649,10 @@ internal_proto(close_units);\n extern int unit_to_fd (int);\n internal_proto(unit_to_fd);\n \n+extern int st_printf (const char *, ...)\n+  __attribute__ ((format (printf, 1, 2)));\n+internal_proto(st_printf);\n+\n /* stop.c */\n \n extern void stop_numeric (GFC_INTEGER_4);"}, {"sha": "f787e378b079a2495f7af44943e900f5364fb184", "filename": "libgfortran/libtool-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/libgfortran%2Flibtool-version", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/libgfortran%2Flibtool-version", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibtool-version?ref=0dce3ca161fa6664c8505cfe0718a9dbccb8765c", "patch": "@@ -3,4 +3,4 @@\n # This is a separate file so that version updates don't involve re-running\n # automake.\n # CURRENT:REVISION:AGE\n-2:0:0\n+3:0:0"}, {"sha": "21c2cc9f71737710aa5015c5f013bb19b0d8911f", "filename": "libgfortran/runtime/environ.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/libgfortran%2Fruntime%2Fenviron.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/libgfortran%2Fruntime%2Fenviron.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fenviron.c?ref=0dce3ca161fa6664c8505cfe0718a9dbccb8765c", "patch": "@@ -34,8 +34,6 @@ Boston, MA 02110-1301, USA.  */\n #include <ctype.h>\n \n #include \"libgfortran.h\"\n-#include \"../io/io.h\"\n-\n \n /* Environment scanner.  Examine the environment for controlling minor\n  * aspects of the program's execution.  Our philosophy here that the"}, {"sha": "c0787dead66979ef626f8b64ea57ff1d80e192ee", "filename": "libgfortran/runtime/error.c", "status": "modified", "additions": 0, "deletions": 100, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/libgfortran%2Fruntime%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/libgfortran%2Fruntime%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Ferror.c?ref=0dce3ca161fa6664c8505cfe0718a9dbccb8765c", "patch": "@@ -37,8 +37,6 @@ Boston, MA 02110-1301, USA.  */\n #include <errno.h>\n \n #include \"libgfortran.h\"\n-#include \"../io/io.h\"\n-#include \"../io/unix.h\"\n \n /* Error conditions.  The tricky part here is printing a message when\n  * it is the I/O subsystem that is severely wounded.  Our goal is to\n@@ -122,104 +120,6 @@ xtoa (GFC_UINTEGER_LARGEST n, char *buffer, size_t len)\n }\n \n \n-/* st_printf()-- simple printf() function for streams that handles the\n- * formats %d, %s and %c.  This function handles printing of error\n- * messages that originate within the library itself, not from a user\n- * program. */\n-\n-int\n-st_printf (const char *format, ...)\n-{\n-  int count, total;\n-  va_list arg;\n-  char *p;\n-  const char *q;\n-  stream *s;\n-  char itoa_buf[GFC_ITOA_BUF_SIZE];\n-  unix_stream err_stream;\n-\n-  total = 0;\n-  s = init_error_stream (&err_stream);\n-  va_start (arg, format);\n-\n-  for (;;)\n-    {\n-      count = 0;\n-\n-      while (format[count] != '%' && format[count] != '\\0')\n-\tcount++;\n-\n-      if (count != 0)\n-\t{\n-\t  p = salloc_w (s, &count);\n-\t  memmove (p, format, count);\n-\t  sfree (s);\n-\t}\n-\n-      total += count;\n-      format += count;\n-      if (*format++ == '\\0')\n-\tbreak;\n-\n-      switch (*format)\n-\t{\n-\tcase 'c':\n-\t  count = 1;\n-\n-\t  p = salloc_w (s, &count);\n-\t  *p = (char) va_arg (arg, int);\n-\n-\t  sfree (s);\n-\t  break;\n-\n-\tcase 'd':\n-\t  q = gfc_itoa (va_arg (arg, int), itoa_buf, sizeof (itoa_buf));\n-\t  count = strlen (q);\n-\n-\t  p = salloc_w (s, &count);\n-\t  memmove (p, q, count);\n-\t  sfree (s);\n-\t  break;\n-\n-\tcase 'x':\n-\t  q = xtoa (va_arg (arg, unsigned), itoa_buf, sizeof (itoa_buf));\n-\t  count = strlen (q);\n-\n-\t  p = salloc_w (s, &count);\n-\t  memmove (p, q, count);\n-\t  sfree (s);\n-\t  break;\n-\n-\tcase 's':\n-\t  q = va_arg (arg, char *);\n-\t  count = strlen (q);\n-\n-\t  p = salloc_w (s, &count);\n-\t  memmove (p, q, count);\n-\t  sfree (s);\n-\t  break;\n-\n-\tcase '\\0':\n-\t  return total;\n-\n-\tdefault:\n-\t  count = 2;\n-\t  p = salloc_w (s, &count);\n-\t  p[0] = format[-1];\n-\t  p[1] = format[0];\n-\t  sfree (s);\n-\t  break;\n-\t}\n-\n-      total += count;\n-      format++;\n-    }\n-\n-  va_end (arg);\n-  return total;\n-}\n-\n-\n /* st_sprintf()-- Simple sprintf() for formatting memory buffers. */\n \n void"}, {"sha": "a0c44980feb60b645125b15d0cf77880439e1cd5", "filename": "libgfortran/runtime/string.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/libgfortran%2Fruntime%2Fstring.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dce3ca161fa6664c8505cfe0718a9dbccb8765c/libgfortran%2Fruntime%2Fstring.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fstring.c?ref=0dce3ca161fa6664c8505cfe0718a9dbccb8765c", "patch": "@@ -31,7 +31,6 @@ Boston, MA 02110-1301, USA.  */\n #include <string.h>\n \n #include \"libgfortran.h\"\n-#include \"../io/io.h\"\n \n /* Compare a C-style string with a fortran style string in a case-insensitive\n    manner.  Used for decoding string options to various statements.  Returns\n@@ -44,7 +43,7 @@ compare0 (const char *s1, int s1_len, const char *s2)\n \n   /* Strip trailing blanks from the Fortran string.  */\n   len = fstrlen (s1, s1_len);\n-  if(len != strlen(s2)) return 0; /* don't match */\n+  if (len != (int) strlen(s2)) return 0; /* don't match */\n   return strncasecmp (s1, s2, len) == 0;\n }\n "}]}