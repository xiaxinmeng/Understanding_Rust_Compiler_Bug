{"sha": "ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRhODAwNjc5NWNlNWMzZDE0ODZjOWIzOWMyZjUyZGQzOWU3MWI5Nw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@kss-loka.si", "date": "2005-12-01T06:52:11Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2005-12-01T06:52:11Z"}, "message": "re PR target/24475 (gcc.dg/tls/pr24428.c execution test and gcc.dg/tls/pr24428-2.c execution test fail on IA32)\n\n\tPR target/24475\n\t* lib/target-supports.exp (check_effective_target_tls): New.\n\t(check_effective_target_tls_runtime): New.\n\t* gcc.dg/tls/tls.exp, g++.dg/tls/tls.exp: Remove check\n\tfor TLS support.\n\t* gcc.dg/tls/opt-1.c, gcc.dg/tls/opt-2.c, gcc.dg/tls/opt-3.c,\n\tgcc.dg/tls/opt-4.c, gcc.dg/tls/opt-5.c, gcc.dg/tls/opt-6.c,\n\tgcc.dg/tls/opt-7.c, gcc.dg/tls/opt-8.c, gcc.dg/tls/opt-9.c,\n\tgcc.dg/tls/opt-10.c, gcc.dg/tls/diag-1.c, gcc.dg/tls/diag-2.c,\n\tgcc.dg/tls/diag-3.c, gcc.dg/tls/diag-4.c, gcc.dg/tls/diag-5.c,\n\tgcc.dg/tls/alias-1.c, gcc.dg/tls/alpha-1.c, gcc.dg/tls/asm-1.c,\n\tgcc.dg/tls/debug-1.c, gcc.dg/tls/init-1.c, gcc.dg/tls/nonpic-1.c,\n\tgcc.dg/tls/pic-1.c, gcc.dg/tls/section-1.c, gcc.dg/tls/struct-1.c,\n\tgcc.dg/tls/trivial.c, g++.dg/tls/diag-1.C, g++.dg/tls/diag-2.C,\n\tg++.dg/tls/diag-3.C, g++.dg/tls/diag-4.C, g++.dg/tls/init-1.C,\n\tg++.dg/tls/init-2.C, g++.dg/tls/trivial.C: Require\n\teffective-target TLS.\n\t* gcc.dg/tls/pr24428-2.c, gcc.dg/tls/pr24428.c, gcc.dg/tls/opt-11.c, \n\tg++.dg/tls/static-1a.cc, g++.dg/tls/static-1.C: Require\n\teffective-target TLS runtime.\n\nFrom-SVN: r107804", "tree": {"sha": "5d63ea409e6d0b5e515b924b076cc49a901d8823", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d63ea409e6d0b5e515b924b076cc49a901d8823"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/comments", "author": null, "committer": null, "parents": [{"sha": "d1a478d4442d4e09fc424e511bddd069ee2d9941", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1a478d4442d4e09fc424e511bddd069ee2d9941", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1a478d4442d4e09fc424e511bddd069ee2d9941"}], "stats": {"total": 166, "additions": 143, "deletions": 23}, "files": [{"sha": "d55401dd796d88dc0f8516feeb4c9843441138eb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,3 +1,26 @@\n+2005-12-01  Uros Bizjak  <uros@kss-loka.si>\n+\n+\tPR target/24475\n+\t* lib/target-supports.exp (check_effective_target_tls): New.\n+\t(check_effective_target_tls_runtime): New.\n+\t* gcc.dg/tls/tls.exp, g++.dg/tls/tls.exp: Remove check\n+\tfor TLS support.\n+\t* gcc.dg/tls/opt-1.c, gcc.dg/tls/opt-2.c, gcc.dg/tls/opt-3.c,\n+\tgcc.dg/tls/opt-4.c, gcc.dg/tls/opt-5.c, gcc.dg/tls/opt-6.c,\n+\tgcc.dg/tls/opt-7.c, gcc.dg/tls/opt-8.c, gcc.dg/tls/opt-9.c,\n+\tgcc.dg/tls/opt-10.c, gcc.dg/tls/diag-1.c, gcc.dg/tls/diag-2.c,\n+\tgcc.dg/tls/diag-3.c, gcc.dg/tls/diag-4.c, gcc.dg/tls/diag-5.c,\n+\tgcc.dg/tls/alias-1.c, gcc.dg/tls/alpha-1.c, gcc.dg/tls/asm-1.c,\n+\tgcc.dg/tls/debug-1.c, gcc.dg/tls/init-1.c, gcc.dg/tls/nonpic-1.c,\n+\tgcc.dg/tls/pic-1.c, gcc.dg/tls/section-1.c, gcc.dg/tls/struct-1.c,\n+\tgcc.dg/tls/trivial.c, g++.dg/tls/diag-1.C, g++.dg/tls/diag-2.C,\n+\tg++.dg/tls/diag-3.C, g++.dg/tls/diag-4.C, g++.dg/tls/init-1.C,\n+\tg++.dg/tls/init-2.C, g++.dg/tls/trivial.C: Require\n+\teffective-target TLS.\n+\t* gcc.dg/tls/pr24428-2.c, gcc.dg/tls/pr24428.c, gcc.dg/tls/opt-11.c, \n+\tg++.dg/tls/static-1a.cc, g++.dg/tls/static-1.C: Require\n+\teffective-target TLS runtime.\n+\n 2005-12-01  Uros Bizjak  <uros@kss-loka.si>\n \n \t* lib/gcov.exp (clean-gcov): Also remove $base.h.gcov files."}, {"sha": "af538719d243732d3ef9fe3580346bae57a54f46", "filename": "gcc/testsuite/g++.dg/tls/diag-1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fdiag-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fdiag-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fdiag-1.C?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,4 +1,5 @@\n-/* Valid __thread specifiers.  */\n+// Valid __thread specifiers.\n+// { dg-require-effective-target tls }\n \n __thread int g1;\n extern __thread int g2;"}, {"sha": "484b18845150cb90346061b3a14ffd99818190e7", "filename": "gcc/testsuite/g++.dg/tls/diag-2.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fdiag-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fdiag-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fdiag-2.C?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,4 +1,5 @@\n /* Invalid __thread specifiers.  */\n+/* { dg-require-effective-target tls } */\n \n __thread extern int g1;\t\t/* { dg-error \"'__thread' before 'extern'\" } */\n __thread static int g2;\t\t/* { dg-error \"'__thread' before 'static'\" } */"}, {"sha": "ea5158b898fff486c82664677636391e03e5bb72", "filename": "gcc/testsuite/g++.dg/tls/diag-3.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fdiag-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fdiag-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fdiag-3.C?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,4 +1,5 @@\n // Report invalid extern and __thread combinations.\n+// { dg-require-effective-target tls }\n \n extern int j;\t\t// { dg-error \"previously declared here\" }\n __thread int j;\t\t// { dg-error \"follows non-thread-local\" }"}, {"sha": "55e985e9261da7029b5b23d7f5284ea4bf117e5f", "filename": "gcc/testsuite/g++.dg/tls/diag-4.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fdiag-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fdiag-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fdiag-4.C?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,4 +1,5 @@\n /* Invalid __thread specifiers.  */\n+/* { dg-require-effective-target tls } */\n \n __thread typedef int g4;\t/* { dg-error \"multiple storage classes\" } */\n "}, {"sha": "97867123a95f70f0aab0c8c10b46dea0b0d095cb", "filename": "gcc/testsuite/g++.dg/tls/init-1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Finit-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Finit-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Finit-1.C?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,4 +1,5 @@\n /* Valid initializations.  */\n+/* { dg-require-effective-target tls } */\n \n __thread int i = 42;\n "}, {"sha": "c9f646d3a1d93db2f4f1dbd71ea5304131be0fb5", "filename": "gcc/testsuite/g++.dg/tls/init-2.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Finit-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Finit-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Finit-2.C?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,4 +1,5 @@\n /* Invalid initializations.  */\n+/* { dg-require-effective-target tls } */\n \n extern __thread int i;\n __thread int *p = &i;\t/* { dg-error \"dynamically initialized\" } */"}, {"sha": "2392c6346190fa77362ea5198674f3490b2c0074", "filename": "gcc/testsuite/g++.dg/tls/static-1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fstatic-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fstatic-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fstatic-1.C?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,6 +1,7 @@\n // { dg-do run }\n // { dg-options \"-O2\" }\n // { dg-additional-sources \"static-1a.cc\" }\n+// { dg-require-effective-target tls_runtime }\n \n extern \"C\" void abort ();\n extern int test ();"}, {"sha": "636f9352d4d446a8b1b0f1ebb49a1c5c78754f49", "filename": "gcc/testsuite/g++.dg/tls/static-1a.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fstatic-1a.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fstatic-1a.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fstatic-1a.cc?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,6 +1,7 @@\n // { dg-do run }\n // { dg-options \"-O2\" }\n // { dg-additional-sources \"static-1a.cc\" }\n+// { dg-require-effective-target tls_runtime }\n \n struct A\n {"}, {"sha": "85e7a36fa7cd3e728b39784b0ba38059b2d43de5", "filename": "gcc/testsuite/g++.dg/tls/tls.exp", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Ftls.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Ftls.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Ftls.exp?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,4 +1,4 @@\n-#   Copyright (C) 2002 Free Software Foundation, Inc.\n+#   Copyright (C) 2002, 2005 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -19,16 +19,6 @@\n # Load support procs.\n load_lib g++-dg.exp\n \n-# Test for thread-local data supported by the platform.  If it\n-# isn't, everything will fail with the \"not supported\" message.\n-\n-set comp_output [g++_target_compile \\\n-\t\t\"$srcdir/$subdir/trivial.C\" \"trivialx.S\" assembly \"\"]\n-remove-build-file \"trivialx.S\"\n-if { [string match \"*not supported*\" $comp_output] } {\n-  return 0\n-}\n-\n # If a testcase doesn't have special options, use these.\n global DEFAULT_CXXFLAGS\n if ![info exists DEFAULT_CXXFLAGS] then {"}, {"sha": "e2b8f45b84543d3b1ccce19342d915e195b7d1b5", "filename": "gcc/testsuite/g++.dg/tls/trivial.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Ftrivial.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Ftrivial.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Ftrivial.C?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1 +1,3 @@\n+// { dg-require-effective-target tls }\n+\n __thread int i;"}, {"sha": "28cb47e504190dcac02a68636152c250eb1ad0f9", "filename": "gcc/testsuite/gcc.dg/tls/alias-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Falias-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Falias-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Falias-1.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do link } */\n /* { dg-require-alias \"\" } */\n /* { dg-require-visibility \"\" } */\n+/* { dg-require-effective-target tls } */\n /* Test that encode_section_info handles the change from externally\n    defined to locally defined (via hidden).   Extracted from glibc.  */\n "}, {"sha": "1d15cb1681cbc1a8f83c65906999dfd795280ae2", "filename": "gcc/testsuite/gcc.dg/tls/alpha-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Falpha-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Falpha-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Falpha-1.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,6 +1,7 @@\n /* Make sure that we honor initial-exec.  */\n /* { dg-do compile { target alpha*-*-* } } */\n /* { dg-options \"\" } */\n+/* { dg-require-effective-target tls } */\n \n static __thread int xyzzy __attribute__ ((tls_model (\"initial-exec\")));\n int foo(void) { return xyzzy; }"}, {"sha": "b77e550d7bf7f29976b3f5e8d6242182379a1170", "filename": "gcc/testsuite/gcc.dg/tls/asm-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fasm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fasm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fasm-1.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,4 +1,5 @@\n /* { dg-options \"-Werror\" } */\n+/* { dg-require-effective-target tls } */\n __thread int i;\n \n int foo ()"}, {"sha": "67d7be69cc50c8be3658c30440dce591e61b3449", "filename": "gcc/testsuite/gcc.dg/tls/debug-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fdebug-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fdebug-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fdebug-1.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do assemble } */\n /* { dg-options \"-g\" } */\n+/* { dg-require-effective-target tls } */\n \n __thread int i;"}, {"sha": "56b570c94a5c74803232ad254ba9e661fe429a34", "filename": "gcc/testsuite/gcc.dg/tls/diag-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fdiag-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fdiag-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fdiag-1.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,4 +1,5 @@\n /* Valid __thread specifiers.  */\n+/* { dg-require-effective-target tls } */\n \n __thread int g1;\n extern __thread int g2;"}, {"sha": "8276cb3be4902553c2da9b5d64685480bcf9e51a", "filename": "gcc/testsuite/gcc.dg/tls/diag-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fdiag-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fdiag-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fdiag-2.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,4 +1,5 @@\n /* Invalid __thread specifiers.  */\n+/* { dg-require-effective-target tls } */\n \n __thread extern int g1;\t\t/* { dg-error \"'__thread' before 'extern'\" } */\n __thread static int g2;\t\t/* { dg-error \"'__thread' before 'static'\" } */"}, {"sha": "45d89b43722b74566620b43767408c45282fb043", "filename": "gcc/testsuite/gcc.dg/tls/diag-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fdiag-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fdiag-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fdiag-3.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,4 +1,5 @@\n /* Report invalid extern and __thread combinations.  */\n+/* { dg-require-effective-target tls } */\n \n extern int j;\t\t/* { dg-error \"previous declaration\" } */\n __thread int j;\t\t/* { dg-error \"follows non-thread-local\" } */"}, {"sha": "fed2f3accd33fcfd9e9a341b479b8ac302df760f", "filename": "gcc/testsuite/gcc.dg/tls/diag-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fdiag-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fdiag-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fdiag-4.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,5 +1,6 @@\n /* Invalid __thread specifiers.  As diag-4.c but some cases in\n    different orders.  */\n+/* { dg-require-effective-target tls } */\n \n __thread typedef int g4;\t/* { dg-error \"'__thread' used with 'typedef'\" } */\n "}, {"sha": "219396d768ae3fc8eb837cb5694b02a34f2aefb2", "filename": "gcc/testsuite/gcc.dg/tls/diag-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fdiag-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fdiag-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fdiag-5.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,3 +1,4 @@\n /* __thread specifiers on empty declarations.  */\n+/* { dg-require-effective-target tls } */\n \n __thread struct foo; /* { dg-warning \"warning: useless '__thread' in empty declaration\" } */"}, {"sha": "fa4208dce0c1cac31e44f54446e70bfb5ef69678", "filename": "gcc/testsuite/gcc.dg/tls/init-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Finit-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Finit-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Finit-1.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,4 +1,5 @@\n /* Invalid initializations.  */\n+/* { dg-require-effective-target tls } */\n \n extern __thread int i;\n int *p = &i;\t/* { dg-error \"initializer element is not constant\" } */"}, {"sha": "9c592a985563850b4ab8158c8aefa3294155860f", "filename": "gcc/testsuite/gcc.dg/tls/nonpic-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fnonpic-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fnonpic-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fnonpic-1.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -ftls-model=initial-exec\" } */\n+/* { dg-require-effective-target tls } */\n \n extern __thread long e1;\n extern __thread int e2;"}, {"sha": "5bada6e0929948408f3401f67b9eb54be119fb7a", "filename": "gcc/testsuite/gcc.dg/tls/opt-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-1.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -2,6 +2,7 @@\n /* { dg-options \"-O2 -fPIC\" } */\n /* { dg-options \"-O2 -fPIC -mtune=i686\" { target { i?86-*-* && ilp32 } } } */\n /* { dg-options \"-O2 -fPIC -mtune=i686\" { target { x86_64-*-* && ilp32 } } } */\n+/* { dg-require-effective-target tls } */\n \n extern __thread int thr;\n "}, {"sha": "a710a062ca376113342f8ef7a0b35825d18e13a2", "filename": "gcc/testsuite/gcc.dg/tls/opt-10.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-10.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O3 -fpic\" } */\n+/* { dg-require-effective-target tls } */\n \n /* The web pass was creating unrecognisable pic_load_dot_plus_four insns\n    on ARM.  */"}, {"sha": "3739645257ab02e0fff6b4b3ebbbe33cbf6f0ead", "filename": "gcc/testsuite/gcc.dg/tls/opt-11.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-11.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do run } */\n+/* { dg-require-effective-target tls_runtime } */\n \n extern void abort (void);\n extern void *memset (void *, int, __SIZE_TYPE__);"}, {"sha": "fd781ebabd142015190aa3c681eb597560ce4379", "filename": "gcc/testsuite/gcc.dg/tls/opt-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-2.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -6,6 +6,7 @@\n /* { dg-options \"-O2 -ftls-model=initial-exec\" } */\n /* { dg-options \"-O2 -ftls-model=initial-exec -march=i686\" { target { i?86-*-* && ilp32 } } } */\n /* { dg-options \"-O2 -ftls-model=initial-exec -march=i686\" { target { x86_64-*-* && ilp32 } } } */\n+/* { dg-require-effective-target tls } */\n \n __thread int thr;\n "}, {"sha": "e59e5110b5be95528582618c74ec611f1803bfa5", "filename": "gcc/testsuite/gcc.dg/tls/opt-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-3.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fpic\" } */\n /* { dg-options \"-O2 -fpic -mregparm=3\" { target i?86-*-* } } */\n+/* { dg-require-effective-target tls } */\n \n extern __thread int i, j, k;\n extern void bar(int *, int *, int *);"}, {"sha": "aa59ee7fabf083780814b0276965bc6a8c9769dd", "filename": "gcc/testsuite/gcc.dg/tls/opt-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-4.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n+/* { dg-require-effective-target tls } */\n \n struct A\n {"}, {"sha": "0604f3253c11cc50e2fd428ac6f242bbafe5ff90", "filename": "gcc/testsuite/gcc.dg/tls/opt-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-5.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n+/* { dg-require-effective-target tls } */\n /* Sched1 moved {load_tp} pattern between strlen call and the copy\n    of the hard return value to its pseudo.  This resulted in a\n    reload abort, since the hard register was not spillable.  */"}, {"sha": "8a01c019c10b99cc4e9080ea268ff8fa7d59b94e", "filename": "gcc/testsuite/gcc.dg/tls/opt-6.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-6.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n+/* { dg-require-effective-target tls } */\n \n extern void abort (void);\n extern void exit (int);"}, {"sha": "c345068a2033cac5fdf4cbdb3467d5cf7163add1", "filename": "gcc/testsuite/gcc.dg/tls/opt-7.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-7.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fPIC\" } */\n+/* { dg-require-effective-target tls } */\n \n static __thread void *baz [4] __attribute__((tls_model (\"initial-exec\")));\n void foo (void)"}, {"sha": "a7331115352c632de00727174fa651717fac326d", "filename": "gcc/testsuite/gcc.dg/tls/opt-8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-8.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,6 +1,7 @@\n /* PR 18910 */\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n+/* { dg-require-effective-target tls } */\n \n static __thread void *foo [2];\n void"}, {"sha": "cc62ef57a5dfd0ff41346a063bd33e811e284c3a", "filename": "gcc/testsuite/gcc.dg/tls/opt-9.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-9.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,6 +1,7 @@\n /* PR 21412 */\n /* { dg-do compile */\n /* { dg-options \"-O2 -fPIC\" } */\n+/* { dg-require-effective-target tls } */\n \n struct S { int x[10]; };\n extern __thread struct S s;"}, {"sha": "bcd42bd8572cef972854a7faddd06b87852d92ab", "filename": "gcc/testsuite/gcc.dg/tls/pic-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fpic-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fpic-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fpic-1.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fpic -ftls-model=global-dynamic\" } */\n+/* { dg-require-effective-target tls } */\n \n extern __thread long e1;\n extern __thread int e2;"}, {"sha": "a0ceecc06243e2c470f13a14ed9513cff9d2456f", "filename": "gcc/testsuite/gcc.dg/tls/pr24428-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fpr24428-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fpr24428-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fpr24428-2.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do run } */\n /* { dg-options \"-O2\" } */\n+/* { dg-require-effective-target tls_runtime } */\n \n __thread double thrtest[81];\n int main ()"}, {"sha": "ecb747ede6de74fb1bb13478c0613abf5c2420f1", "filename": "gcc/testsuite/gcc.dg/tls/pr24428.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fpr24428.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fpr24428.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fpr24428.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do run } */\n /* { dg-options \"-O2\" } */\n+/* { dg-require-effective-target tls_runtime } */\n \n __thread double thrtest[81];\n int main ()"}, {"sha": "4fc5066b90dcb71b8620aa9d13fb06ffc1c6f3f0", "filename": "gcc/testsuite/gcc.dg/tls/section-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fsection-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fsection-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fsection-1.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,5 +1,6 @@\n /* Verify that we get errors for trying to put TLS data in \n    sections which can't work.  */\n+/* { dg-require-effective-target tls } */\n \n #define A(X)\t__attribute__((section(X)))\n "}, {"sha": "5fd6be439055902d3dfc8892a0d8229dc9fae329", "filename": "gcc/testsuite/gcc.dg/tls/struct-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fstruct-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fstruct-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fstruct-1.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -2,6 +2,7 @@\n    to allow addends for @dtpoff relocs or not.  */\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fpic\" } */\n+/* { dg-require-effective-target tls } */\n \n struct S {\n   int s0, s1, s2, s3;"}, {"sha": "cd86231c05055c84b94941539f410b9bd4bb5367", "filename": "gcc/testsuite/gcc.dg/tls/tls.exp", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Ftls.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Ftls.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Ftls.exp?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1,4 +1,4 @@\n-#   Copyright (C) 2002 Free Software Foundation, Inc.\n+#   Copyright (C) 2002, 2005 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -19,16 +19,6 @@\n # Load support procs.\n load_lib gcc-dg.exp\n \n-# Test for thread-local data supported by the platform.  If it\n-# isn't, everything will fail with the \"not supported\" message.\n-\n-set comp_output [gcc_target_compile \\\n-\t\t\"$srcdir/$subdir/trivial.c\" \"trivial.S\" assembly \"\"]\n-remove-build-file \"trivial.S\"\n-if { [string match \"*not supported*\" $comp_output] } {\n-  return 0\n-}\n-\n # If a testcase doesn't have special options, use these.\n global DEFAULT_CFLAGS\n if ![info exists DEFAULT_CFLAGS] then {"}, {"sha": "96b8e49a665c4bd2323ef28269c01ac120e98824", "filename": "gcc/testsuite/gcc.dg/tls/trivial.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Ftrivial.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Ftrivial.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Ftrivial.c?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -1 +1,3 @@\n+/* { dg-require-effective-target tls } */\n+\n __thread int i;"}, {"sha": "d2400956accf5ae53e1ea086e483f4c436d9cd6f", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada8006795ce5c3d1486c9b39c2f52dd39e71b97/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=ada8006795ce5c3d1486c9b39c2f52dd39e71b97", "patch": "@@ -384,6 +384,84 @@ proc check_effective_target_pcc_bitfield_type_matters { } {\n     return $et_pcc_bitfield_type_matters_saved\n }\n \n+# Return 1 if thread local storage (TLS) is supported, 0 otherwise.\n+#\n+# This won't change for different subtargets so cache the result.\n+\n+proc check_effective_target_tls {} {\n+    global et_tls_saved\n+\n+    if [info exists et_tls_saved] {\n+\tverbose \"check_effective_target_tls: using cached result\" 2\n+    } else {\n+\tset et_tls_saved 1\n+\n+\tset src tls[pid].c\n+\tset asm tls[pid].S\n+\tverbose \"check_effective_target_tls: compiling testfile $src\" 2\n+\tset f [open $src \"w\"]\n+\t# Compile a small test program.\n+\tputs $f \"__thread int i;\\n\"\n+\tclose $f\n+\n+\t# Test for thread-local data supported by the platform.\n+\tset comp_output \\\n+\t    [target_compile $src $asm assembly \"\"]\n+\tfile delete $src\n+\tif { [string match \"*not supported*\" $comp_output] } {\n+\t    set et_tls_saved 0\n+\t}\n+\tremove-build-file $asm\n+    }\n+    verbose \"check_effective_target_tls: returning $et_tls_saved\" 2\n+    return $et_tls_saved\n+}\n+\n+# Return 1 if TLS executables can run correctly, 0 otherwise.\n+#\n+# This won't change for different subtargets so cache the result.\n+\n+proc check_effective_target_tls_runtime {} {\n+    global et_tls_runtime_saved\n+\n+    if [info exists et_tls_runtime_saved] {\n+\tverbose \"check_effective_target_tls_runtime: using cached result\" 2\n+    } else {\n+\tset et_tls_runtime_saved 0\n+\n+\tset src tls_runtime[pid].c\n+\tset exe tls_runtime[pid].x\n+\tverbose \"check_effective_target_tls_runtime: compiling testfile $src\" 2\n+\tset f [open $src \"w\"]\n+\t# Compile a small test program.\n+\tputs $f \"__thread int thr = 0;\\n\"\n+\tputs $f \"int main(void)\\n {\\n return thr;\\n}\"\n+\tclose $f\n+\n+\tset comp_output \\\n+\t    [target_compile $src $exe executable \"\"]\n+\tfile delete $src\n+\n+\tif [string match \"\" $comp_output] then {\n+\t    # No error messages, everything is OK.\n+\n+\t    set result [remote_load target \"./$exe\" \"\" \"\"]\n+\t    set status [lindex $result 0]\n+\t    remote_file build delete $exe\n+\n+\t    verbose \"check_effective_target_tls_runtime status is <$status>\" 2\n+\n+\t    if { $status == \"pass\" } {\n+\t\tset et_tls_runtime_saved 1\n+\t    }\n+\n+\t    verbose \"check_effective_target_tls_runtime: returning $et_tls_runtime_saved\" 2\n+\t}\n+    }\n+\n+    return $et_tls_runtime_saved\n+}\n+\n # Return 1 if -fpic and -fPIC are supported, as in no warnings or errors\n # emitted, 0 otherwise.  Whether a shared library can actually be built is\n # out of scope for this test."}]}