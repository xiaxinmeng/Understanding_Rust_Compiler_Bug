{"sha": "ddb284412e1e626ad8fb11e673e91953d2bc64fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRiMjg0NDEyZTFlNjI2YWQ4ZmIxMWU2NzNlOTE5NTNkMmJjNjRmZA==", "commit": {"author": {"name": "Roland McGrath", "email": "roland@frob.com", "date": "2002-02-17T23:06:55Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2002-02-17T23:06:55Z"}, "message": "config.gcc (powerpc-*-gnu-gnualtivec*, [...]): New configurations.\n\n2002-01-21  Roland McGrath  <roland@frob.com>\n\n        * config.gcc (powerpc-*-gnu-gnualtivec*,\n        powerpc-*-gnu*, powerpc64-*-gnu*): New configurations.\n        * config/rs6000/gnu.h: New file.\n        * config/rs6000/sysv4.h (SUBTARGET_OVERRIDE_OPTIONS):\n        Grok \"gnu\" in rs6000_abi_name.\n        (ASM_SPEC, CC1_SPEC, LINK_START_SPEC, LINK_OS_SPEC,\n        CPP_ENDIAN_SPEC, CPP_SPEC, STARTFILE_SPEC, LIB_SPEC, ENDFILE_SPEC):\n        Grok -mcall-gnu analogous to -mcall-linux et al.\n        (LIB_GNU_SPEC, STARTFILE_GNU_SPEC, ENDFILE_GNU_SPEC,\n        LINK_START_GNU_SPEC, LINK_OS_GNU_SPEC, CPP_OS_GNU_SPEC): New macros.\n        (SUBTARGET_EXTRA_SPECS): Add *_os_gnu specs using them.\n\nFrom-SVN: r49826", "tree": {"sha": "73e5b9ef750e77f83ed342c995798cd3cb32ed14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73e5b9ef750e77f83ed342c995798cd3cb32ed14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddb284412e1e626ad8fb11e673e91953d2bc64fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddb284412e1e626ad8fb11e673e91953d2bc64fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddb284412e1e626ad8fb11e673e91953d2bc64fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddb284412e1e626ad8fb11e673e91953d2bc64fd/comments", "author": null, "committer": null, "parents": [{"sha": "f6f8ada39ab16554f222bdc0a84a44689a44cc36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6f8ada39ab16554f222bdc0a84a44689a44cc36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6f8ada39ab16554f222bdc0a84a44689a44cc36"}], "stats": {"total": 136, "additions": 126, "deletions": 10}, "files": [{"sha": "dfaf6bcd2208767e19acc91c720939600ebb285e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddb284412e1e626ad8fb11e673e91953d2bc64fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddb284412e1e626ad8fb11e673e91953d2bc64fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ddb284412e1e626ad8fb11e673e91953d2bc64fd", "patch": "@@ -1,3 +1,17 @@\n+2002-02-17  Roland McGrath  <roland@frob.com>\n+\n+\t* config.gcc (powerpc-*-gnu-gnualtivec*,\n+\tpowerpc-*-gnu*, powerpc64-*-gnu*): New configurations.\n+\t* config/rs6000/gnu.h: New file.\n+\t* config/rs6000/sysv4.h (SUBTARGET_OVERRIDE_OPTIONS):\n+\tGrok \"gnu\" in rs6000_abi_name.\n+\t(ASM_SPEC, CC1_SPEC, LINK_START_SPEC, LINK_OS_SPEC,\n+\tCPP_ENDIAN_SPEC, CPP_SPEC, STARTFILE_SPEC, LIB_SPEC, ENDFILE_SPEC):\n+\tGrok -mcall-gnu analogous to -mcall-linux et al.\n+\t(LIB_GNU_SPEC, STARTFILE_GNU_SPEC, ENDFILE_GNU_SPEC,\n+\tLINK_START_GNU_SPEC, LINK_OS_GNU_SPEC, CPP_OS_GNU_SPEC): New macros.\n+\t(SUBTARGET_EXTRA_SPECS): Add *_os_gnu specs using them.\n+\n 2002-02-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/3444:"}, {"sha": "8a125c434c4a307c14f341a7d4bff054da3b804a", "filename": "gcc/config.gcc", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddb284412e1e626ad8fb11e673e91953d2bc64fd/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddb284412e1e626ad8fb11e673e91953d2bc64fd/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=ddb284412e1e626ad8fb11e673e91953d2bc64fd", "patch": "@@ -2679,6 +2679,11 @@ powerpc64-*-linux*)\n \tout_file=rs6000/rs6000.c\n \ttmake_file=\"rs6000/t-ppcos t-slibgcc-elf-ver t-linux rs6000/t-ppccomm\"\n \t;;\n+powerpc64-*-gnu*)\n+\ttm_file=\"${cpu_type}/${cpu_type}.h elfos.h svr4.h freebsd-spec.h gnu.h rs6000/sysv4.h rs6000/linux64.h rs6000/gnu.h\"\n+\tout_file=rs6000/rs6000.c\n+\ttmake_file=\"rs6000/t-ppcos t-slibgcc-elf-ver t-gnu rs6000/t-ppccomm\"\n+\t;;\n powerpc-*-beos*)\n \ttm_file=\"${tm_file} rs6000/aix.h rs6000/beos.h rs6000/xcoff.h\"\n \txm_defines=POSIX\n@@ -2783,6 +2788,22 @@ powerpc-*-linux*)\n \t\tthread_file='posix'\n \tfi\n \t;;\n+powerpc-*-gnu-gnualtivec*)\n+\ttm_file=\"${cpu_type}/${cpu_type}.h elfos.h svr4.h freebsd-spec.h gnu.h rs6000/sysv4.h rs6000/linux.h rs6000/linuxaltivec.h rs6000/gnu.h\"\n+\tout_file=rs6000/rs6000.c\n+\ttmake_file=\"rs6000/t-ppcos t-slibgcc-elf-ver t-gnu rs6000/t-ppccomm\"\n+\tif test x$enable_threads = xyes; then\n+\t\tthread_file='posix'\n+\tfi\n+\t;;\n+powerpc-*-gnu*)\n+\ttm_file=\"${cpu_type}/${cpu_type}.h elfos.h svr4.h freebsd-spec.h gnu.h rs6000/sysv4.h rs6000/linux.h rs6000/gnu.h\"\n+\tout_file=rs6000/rs6000.c\n+\ttmake_file=\"rs6000/t-ppcos t-slibgcc-elf-ver t-gnu rs6000/t-ppccomm\"\n+\tif test x$enable_threads = xyes; then\n+\t\tthread_file='posix'\n+\tfi\n+\t;;\n powerpc-wrs-vxworks*)\n \txm_defines=POSIX\n         tm_file=\"${tm_file} dbxelf.h elfos.h svr4.h freebsd-spec.h rs6000/sysv4.h rs6000/vxppc.h\""}, {"sha": "32bd906772c7e1afa84f61fda8c988a31f4d3581", "filename": "gcc/config/rs6000/gnu.h", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddb284412e1e626ad8fb11e673e91953d2bc64fd/gcc%2Fconfig%2Frs6000%2Fgnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddb284412e1e626ad8fb11e673e91953d2bc64fd/gcc%2Fconfig%2Frs6000%2Fgnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fgnu.h?ref=ddb284412e1e626ad8fb11e673e91953d2bc64fd", "patch": "@@ -0,0 +1,38 @@\n+/* Definitions of target machine for GNU compiler,\n+   for powerpc machines running GNU.\n+   Copyright (C) 2001 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#undef\tCPP_OS_DEFAULT_SPEC\n+#define CPP_OS_DEFAULT_SPEC \"%(cpp_os_gnu)\"\n+\n+#undef\tSTARTFILE_DEFAULT_SPEC\n+#define STARTFILE_DEFAULT_SPEC \"%(startfile_gnu)\"\n+\n+#undef\tENDFILE_DEFAULT_SPEC\n+#define ENDFILE_DEFAULT_SPEC \"%(endfile_gnu)\"\n+\n+#undef\tLINK_START_DEFAULT_SPEC\n+#define LINK_START_DEFAULT_SPEC \"%(link_start_gnu)\"\n+\n+#undef\tLINK_OS_DEFAULT_SPEC\n+#define LINK_OS_DEFAULT_SPEC \"%(link_os_gnu)\"\n+\n+#undef TARGET_VERSION\n+#define TARGET_VERSION fprintf (stderr, \" (PowerPC GNU)\");"}, {"sha": "a9a2b053cf00a501be38d0e164d1be0050281c7a", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 53, "deletions": 10, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddb284412e1e626ad8fb11e673e91953d2bc64fd/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddb284412e1e626ad8fb11e673e91953d2bc64fd/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=ddb284412e1e626ad8fb11e673e91953d2bc64fd", "patch": "@@ -197,6 +197,8 @@ do {\t\t\t\t\t\t\t\t\t\\\n     rs6000_current_abi = ABI_V4;\t\t\t\t\t\\\n   else if (!strcmp (rs6000_abi_name, \"linux\"))\t\t\t\t\\\n     rs6000_current_abi = ABI_V4;\t\t\t\t\t\\\n+  else if (!strcmp (rs6000_abi_name, \"gnu\"))\t\t\t\t\\\n+    rs6000_current_abi = ABI_V4;\t\t\t\t\t\\\n   else if (!strcmp (rs6000_abi_name, \"netbsd\"))\t\t\t\t\\\n     rs6000_current_abi = ABI_V4;\t\t\t\t\t\\\n   else if (!strcmp (rs6000_abi_name, \"i960-old\"))\t\t\t\\\n@@ -878,6 +880,7 @@ do {\t\t\t\t\t\t\\\n     %{mcall-freebsd: -mbig} \\\n     %{mcall-i960-old: -mlittle} \\\n     %{mcall-linux: -mbig} \\\n+    %{mcall-gnu: -mbig} \\\n     %{mcall-netbsd: -mbig} \\\n }}}}\"\n \n@@ -901,10 +904,11 @@ do {\t\t\t\t\t\t\\\n     %{mcall-freebsd: -mbig %(cc1_endian_big) } \\\n     %{mcall-i960-old: -mlittle %(cc1_endian_little) } \\\n     %{mcall-linux: -mbig %(cc1_endian_big) } \\\n+    %{mcall-gnu: -mbig %(cc1_endian_big) } \\\n     %{mcall-netbsd: -mbig %(cc1_endian_big) } \\\n-    %{!mcall-aixdesc: %{!mcall-freebsd: %{!mcall-i960-old: %{!mcall-linux: %{!mcall-netbsd: \\\n+    %{!mcall-aixdesc: %{!mcall-freebsd: %{!mcall-i960-old: %{!mcall-linux: %{!mcall-gnu: %{!mcall-netbsd: \\\n \t    %(cc1_endian_default) \\\n-    }}}}} \\\n+    }}}}}} \\\n }}}} \\\n %{mno-sdata: -msdata=none } \\\n %{meabi: %{!mcall-*: -mcall-sysv }} \\\n@@ -913,6 +917,7 @@ do {\t\t\t\t\t\t\\\n     %{mcall-freebsd: -mno-eabi } \\\n     %{mcall-i960-old: -meabi } \\\n     %{mcall-linux: -mno-eabi } \\\n+    %{mcall-gnu: -mno-eabi } \\\n     %{mcall-netbsd: -mno-eabi }}} \\\n %{msdata: -msdata=default} \\\n %{mno-sdata: -msdata=none} \\\n@@ -943,9 +948,10 @@ do {\t\t\t\t\t\t\\\n %{msim: %(link_start_sim) } \\\n %{mcall-freebsd: %(link_start_freebsd) } \\\n %{mcall-linux: %(link_start_linux) } \\\n+%{mcall-gnu: %(link_start_gnu) } \\\n %{mcall-netbsd: %(link_start_netbsd) } \\\n-%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-linux: \\\n-\t%{!mcall-netbsd: %{!mcall-freebsd: %(link_start_default) }}}}}}}\"\n+%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-gnu: \\\n+\t%{!mcall-netbsd: %{!mcall-freebsd: %(link_start_default) }}}}}}}}\"\n \n #define LINK_START_DEFAULT_SPEC \"\"\n \n@@ -999,8 +1005,9 @@ do {\t\t\t\t\t\t\\\n %{msim: %(link_os_sim) } \\\n %{mcall-freebsd: %(link_os_freebsd) } \\\n %{mcall-linux: %(link_os_linux) } \\\n+%{mcall-gnu: %(link_os_gnu) } \\\n %{mcall-netbsd: %(link_os_netbsd) } \\\n-%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-freebsd: %{!mcall-linux: %{!mcall-netbsd: %(link_os_default) }}}}}}}\"\n+%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-freebsd: %{!mcall-linux: %{!mcall-gnu: %{!mcall-netbsd: %(link_os_default) }}}}}}}}\"\n \n #define LINK_OS_DEFAULT_SPEC \"\"\n \n@@ -1045,10 +1052,11 @@ do {\t\t\t\t\t\t\\\n %{!mlittle: %{!mlittle-endian: %{!mbig: %{!mbig-endian: \\\n     %{mcall-freebsd: %(cpp_endian_big) } \\\n     %{mcall-linux: %(cpp_endian_big) } \\\n+    %{mcall-gnu: %(cpp_endian_big) } \\\n     %{mcall-netbsd: %(cpp_endian_big) } \\\n     %{mcall-i960-old: %(cpp_endian_little) } \\\n     %{mcall-aixdesc:  %(cpp_endian_big) } \\\n-    %{!mcall-linux: %{!mcall-freebsd: %{!mcall-netbsd: %{!mcall-aixdesc: %(cpp_endian_default) }}}}}}}}\"\n+    %{!mcall-linux: %{!mcall-gnu: %{!mcall-freebsd: %{!mcall-netbsd: %{!mcall-aixdesc: %(cpp_endian_default) }}}}}}}}}\"\n \n #define\tCPP_ENDIAN_DEFAULT_SPEC \"%(cpp_endian_big)\"\n \n@@ -1061,8 +1069,9 @@ do {\t\t\t\t\t\t\\\n %{msim: %(cpp_os_sim) } \\\n %{mcall-freebsd: %(cpp_os_freebsd) } \\\n %{mcall-linux: %(cpp_os_linux) } \\\n+%{mcall-gnu: %(cpp_os_gnu) } \\\n %{mcall-netbsd: %(cpp_os_netbsd) } \\\n-%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-freebsd: %{!mcall-linux: %{!mcall-netbsd: %(cpp_os_default) }}}}}}}\"\n+%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-freebsd: %{!mcall-linux: %{!mcall-gnu: %{!mcall-netbsd: %(cpp_os_default) }}}}}}}}\"\n \n #define\tCPP_OS_DEFAULT_SPEC \"\"\n \n@@ -1075,8 +1084,9 @@ do {\t\t\t\t\t\t\\\n %{msim: %(startfile_sim) } \\\n %{mcall-freebsd: %(startfile_freebsd) } \\\n %{mcall-linux: %(startfile_linux) } \\\n+%{mcall-gnu: %(startfile_gnu) } \\\n %{mcall-netbsd: %(startfile_netbsd) } \\\n-%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-freebsd: %{!mcall-linux: %{!mcall-netbsd: %(startfile_default) }}}}}}}\"\n+%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-freebsd: %{!mcall-linux: %{!mcall-gnu: %{!mcall-netbsd: %(startfile_default) }}}}}}}}\"\n \n #define\tSTARTFILE_DEFAULT_SPEC \"\"\n \n@@ -1089,8 +1099,9 @@ do {\t\t\t\t\t\t\\\n %{msim: %(lib_sim) } \\\n %{mcall-freebsd: %(lib_freebsd) } \\\n %{mcall-linux: %(lib_linux) } \\\n+%{mcall-gnu: %(lib_gnu) } \\\n %{mcall-netbsd: %(lib_netbsd) } \\\n-%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-freebsd: %{!mcall-linux: %{!mcall-netbsd: %(lib_default) }}}}}}}\"\n+%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-freebsd: %{!mcall-linux: %{!mcall-gnu: %{!mcall-netbsd: %(lib_default) }}}}}}}}\"\n \n #define LIB_DEFAULT_SPEC \"\"\n \n@@ -1103,9 +1114,10 @@ do {\t\t\t\t\t\t\\\n %{msim: %(endfile_sim)} \\\n %{mcall-freebsd: %(endfile_freebsd) } \\\n %{mcall-linux: %(endfile_linux) } \\\n+%{mcall-gnu: %(endfile_gnu) } \\\n %{mcall-netbsd: %(endfile_netbsd) } \\\n %{mvxworks: %(endfile_vxworks) } \\\n-%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-freebsd: %{!mcall-linux: %{!mcall-netbsd: %{!mvxworks: %(endfile_default) }}}}}}}}\"\n+%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-freebsd: %{!mcall-linux: %{!mcall-gnu: %{!mcall-netbsd: %{!mvxworks: %(endfile_default) }}}}}}}}}\"\n \n #define\tENDFILE_DEFAULT_SPEC \"\"\n \n@@ -1215,6 +1227,31 @@ do {\t\t\t\t\t\t\\\n -Asystem=unix -Asystem=posix %{pthread:-D_REENTRANT}\"\n #endif\n \n+/* GNU/Hurd support.  */\n+#define LIB_GNU_SPEC \"%{mnewlib: --start-group -lgnu -lc --end-group } \\\n+%{!mnewlib: %{shared:-lc} %{!shared: %{pthread:-lpthread } \\\n+%{profile:-lc_p} %{!profile:-lc}}}\"\n+\n+#define\tSTARTFILE_GNU_SPEC \"\\\n+%{!shared: %{!static: %{pg:gcrt1.o%s} %{!pg:%{p:gcrt1.o%s} %{!p:crt1.o%s}}}} \\\n+%{static: %{pg:gcrt0.o%s} %{!pg:%{p:gcrt0.o%s} %{!p:crt0.o%s}}} \\\n+%{mnewlib: ecrti.o%s} %{!mnewlib: crti.o%s} \\\n+%{!shared:crtbegin.o%s} %{shared:crtbeginS.o%s}\"\n+\n+#define\tENDFILE_GNU_SPEC \"%{!shared:crtend.o%s} %{shared:crtendS.o%s} \\\n+%{mnewlib: ecrtn.o%s} %{!mnewlib: crtn.o%s}\"\n+\n+#define LINK_START_GNU_SPEC \"\"\n+\n+#define LINK_OS_GNU_SPEC \"-m elf32ppclinux %{!shared: %{!static: \\\n+  %{rdynamic:-export-dynamic} \\\n+  %{!dynamic-linker:-dynamic-linker /lib/ld.so.1}}}\"\n+\n+#define CPP_OS_GNU_SPEC \"-D__unix__ -D__GNU__\t\\\n+%{!undef:\t\t\t\t\t\\\n+  %{!ansi: -Dunix -D__unix}}\t\t\t\\\n+-Asystem=gnu -Asystem=unix -Asystem=posix %{pthread:-D_REENTRANT}\"\n+\n /* NetBSD support.  */\n #define LIB_NETBSD_SPEC \"\\\n %{profile:-lgmon -lc_p} %{!profile:-lc}\"\n@@ -1293,6 +1330,7 @@ ncrtn.o%s\"\n   { \"lib_mvme\",\t\t\tLIB_MVME_SPEC },\t\t\t\\\n   { \"lib_sim\",\t\t\tLIB_SIM_SPEC },\t\t\t\t\\\n   { \"lib_freebsd\",\t\tLIB_FREEBSD_SPEC },\t\t\t\\\n+  { \"lib_gnu\",\t\t\tLIB_GNU_SPEC },\t\t\t\t\\\n   { \"lib_linux\",\t\tLIB_LINUX_SPEC },\t\t\t\\\n   { \"lib_netbsd\",\t\tLIB_NETBSD_SPEC },\t\t\t\\\n   { \"lib_vxworks\",\t\tLIB_VXWORKS_SPEC },\t\t\t\\\n@@ -1302,6 +1340,7 @@ ncrtn.o%s\"\n   { \"startfile_mvme\",\t\tSTARTFILE_MVME_SPEC },\t\t\t\\\n   { \"startfile_sim\",\t\tSTARTFILE_SIM_SPEC },\t\t\t\\\n   { \"startfile_freebsd\",\tSTARTFILE_FREEBSD_SPEC },\t\t\\\n+  { \"startfile_gnu\",\t\tSTARTFILE_GNU_SPEC },\t\t\t\\\n   { \"startfile_linux\",\t\tSTARTFILE_LINUX_SPEC },\t\t\t\\\n   { \"startfile_netbsd\",\t\tSTARTFILE_NETBSD_SPEC },\t\t\\\n   { \"startfile_vxworks\",\tSTARTFILE_VXWORKS_SPEC },\t\t\\\n@@ -1311,6 +1350,7 @@ ncrtn.o%s\"\n   { \"endfile_mvme\",\t\tENDFILE_MVME_SPEC },\t\t\t\\\n   { \"endfile_sim\",\t\tENDFILE_SIM_SPEC },\t\t\t\\\n   { \"endfile_freebsd\",\t\tENDFILE_FREEBSD_SPEC },\t\t\t\\\n+  { \"endfile_gnu\",\t\tENDFILE_GNU_SPEC },\t\t\t\\\n   { \"endfile_linux\",\t\tENDFILE_LINUX_SPEC },\t\t\t\\\n   { \"endfile_netbsd\",\t\tENDFILE_NETBSD_SPEC },\t\t\t\\\n   { \"endfile_vxworks\",\t\tENDFILE_VXWORKS_SPEC },\t\t\t\\\n@@ -1324,6 +1364,7 @@ ncrtn.o%s\"\n   { \"link_start_mvme\",\t\tLINK_START_MVME_SPEC },\t\t\t\\\n   { \"link_start_sim\",\t\tLINK_START_SIM_SPEC },\t\t\t\\\n   { \"link_start_freebsd\",\tLINK_START_FREEBSD_SPEC },\t\t\\\n+  { \"link_start_gnu\",\t\tLINK_START_GNU_SPEC },\t\t\t\\\n   { \"link_start_linux\",\t\tLINK_START_LINUX_SPEC },\t\t\\\n   { \"link_start_netbsd\",\tLINK_START_NETBSD_SPEC },\t\t\\\n   { \"link_start_vxworks\",\tLINK_START_VXWORKS_SPEC },\t\t\\\n@@ -1335,6 +1376,7 @@ ncrtn.o%s\"\n   { \"link_os_sim\",\t\tLINK_OS_SIM_SPEC },\t\t\t\\\n   { \"link_os_freebsd\",\t\tLINK_OS_FREEBSD_SPEC },\t\t\t\\\n   { \"link_os_linux\",\t\tLINK_OS_LINUX_SPEC },\t\t\t\\\n+  { \"link_os_gnu\",\t\tLINK_OS_GNU_SPEC },\t\t\t\\\n   { \"link_os_netbsd\",\t\tLINK_OS_NETBSD_SPEC },\t\t\t\\\n   { \"link_os_vxworks\",\t\tLINK_OS_VXWORKS_SPEC },\t\t\t\\\n   { \"link_os_default\",\t\tLINK_OS_DEFAULT_SPEC },\t\t\t\\\n@@ -1350,6 +1392,7 @@ ncrtn.o%s\"\n   { \"cpp_os_mvme\",\t\tCPP_OS_MVME_SPEC },\t\t\t\\\n   { \"cpp_os_sim\",\t\tCPP_OS_SIM_SPEC },\t\t\t\\\n   { \"cpp_os_freebsd\",\t\tCPP_OS_FREEBSD_SPEC },\t\t\t\\\n+  { \"cpp_os_gnu\",\t\tCPP_OS_GNU_SPEC },\t\t\t\\\n   { \"cpp_os_linux\",\t\tCPP_OS_LINUX_SPEC },\t\t\t\\\n   { \"cpp_os_netbsd\",\t\tCPP_OS_NETBSD_SPEC },\t\t\t\\\n   { \"cpp_os_vxworks\",\t\tCPP_OS_VXWORKS_SPEC },\t\t\t\\"}]}