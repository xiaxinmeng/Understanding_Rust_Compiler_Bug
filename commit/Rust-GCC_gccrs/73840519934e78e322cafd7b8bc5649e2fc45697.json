{"sha": "73840519934e78e322cafd7b8bc5649e2fc45697", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM4NDA1MTk5MzRlNzhlMzIyY2FmZDdiOGJjNTY0OWUyZmM0NTY5Nw==", "commit": {"author": {"name": "Nic Ferrier", "email": "nferrier@gcc.gnu.org", "date": "2002-02-21T10:58:12Z"}, "committer": {"name": "Nic Ferrier", "email": "nferrier@gcc.gnu.org", "date": "2002-02-21T10:58:12Z"}, "message": "Makefile.am (libgcj.jar:): Change to -CLASSPATH\n\n\t* Makefile.am (libgcj.jar:): Change to -CLASSPATH\n\t(.class.h:): Ditto.\n\t(java/lang/ClassLoader.h:): Ditto.\n\t(java/lang/Thread.h:): Ditto.\n\t(java/lang/String.h:): Ditto.\n\t(java/lang/reflect/Constructor.h:): Ditto.\n\t(java/lang/reflect/Field.h:): Ditto.\n\t(java/lang/reflect/Method.h:): Ditto.\n\t(gnu/gcj/runtime/VMClassLoader.h:): Ditto.\n\t(java/io/ObjectInputStream$$GetField.h:): Ditto.\n\t(java/io/ObjectOutputStream$$PutField.h:): Ditto.\n\t* Makefile.in: Rebuilt with libgcj Automake.\n\nFrom-SVN: r49927", "tree": {"sha": "aa1eeb41378427bdd6e520c5fcdb075abe2d5169", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa1eeb41378427bdd6e520c5fcdb075abe2d5169"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73840519934e78e322cafd7b8bc5649e2fc45697", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73840519934e78e322cafd7b8bc5649e2fc45697", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73840519934e78e322cafd7b8bc5649e2fc45697", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73840519934e78e322cafd7b8bc5649e2fc45697/comments", "author": null, "committer": null, "parents": [{"sha": "bf1d016476484683a3a453b0971c09a8e24a3f71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf1d016476484683a3a453b0971c09a8e24a3f71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf1d016476484683a3a453b0971c09a8e24a3f71"}], "stats": {"total": 95, "additions": 28, "deletions": 67}, "files": [{"sha": "f31b9d79ee7b4c671f12d4e554bd8b8da98cc7ea", "filename": "libjava/Makefile.am", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73840519934e78e322cafd7b8bc5649e2fc45697/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73840519934e78e322cafd7b8bc5649e2fc45697/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=73840519934e78e322cafd7b8bc5649e2fc45697", "patch": "@@ -186,8 +186,8 @@ libgcj.jar: $(built_java_source_files) $(java_source_files) $(x_java_source_file\n \t@set fnord $(MAKEFLAGS); amf=$$2; fail=no; \\\n \tjavac=\"$(JAVAC)\"; \\\n \tcat tmp-list | (while read f; do \\\n-\t  echo $$javac $(JCFLAGS) -classpath $(here):$(srcdir) -d $(here) $$f; \\\n-\t  $$javac $(JCFLAGS) -classpath $(here):$(srcdir) -d $(here) $$f \\\n+\t  echo $$javac $(JCFLAGS) -CLASSPATH $(here):$(srcdir) -d $(here) $$f; \\\n+\t  $$javac $(JCFLAGS) -CLASSPATH $(here):$(srcdir) -d $(here) $$f \\\n \t    || case \"$$amf\" in *=*) exit 1;; *k*) fail=yes ;; *) exit 1;; esac; \\\n \tdone; \\\n \ttest \"$$fail\" = no)\n@@ -256,7 +256,7 @@ libgcjx.la: $(libgcjx_la_OBJECTS) $(libgcjx_la_DEPENDENCIES)\n \n .class.h:\n ## FIXME: GNU make specific.\n-\t$(GCJH) -classpath $(top_builddir) $(basename $<)\n+\t$(GCJH) -CLASSPATH $(top_builddir) $(basename $<)\n \n ## Header files used when compiling some of the nat* files.\n ordinary_nat_headers = $(ordinary_java_source_files:.java=.h) \\\n@@ -272,13 +272,13 @@ x_nat_headers = $(x_java_source_files:.java=.h)\n $(ordinary_nat_headers) $(x_nat_headers): %.h: %.class\n \n java/lang/ClassLoader.h: java/lang/ClassLoader.class\n-\t$(GCJH) -classpath $(top_builddir) \\\n+\t$(GCJH) -CLASSPATH $(top_builddir) \\\n \t\t-friend 'jclass _Jv_FindClass (_Jv_Utf8Const *name, java::lang::ClassLoader *loader);' \\\n \t\t-friend 'void _Jv_RunMain (jclass klass, const char *name, int argc, const char **argv, bool is_jar);' \\\n \t\t$(basename $<)\n \n java/lang/Thread.h: java/lang/Thread.class\n-\t$(GCJH) -classpath $(top_builddir) \\\n+\t$(GCJH) -CLASSPATH $(top_builddir) \\\n \t\t-prepend 'class _Jv_JNIEnv;' \\\n \t\t-prepend '#define _JV_NOT_OWNER 1' \\\n \t\t-prepend '#define _JV_INTERRUPTED 2' \\\n@@ -291,7 +291,7 @@ java/lang/Thread.h: java/lang/Thread.class\n \t\t$(basename $<)\n \n java/lang/String.h: java/lang/String.class\n-\t$(GCJH) -classpath $(top_builddir) \\\n+\t$(GCJH) -CLASSPATH $(top_builddir) \\\n \t    -friend 'jchar* _Jv_GetStringChars (jstring str);' \\\n \t    -friend 'jstring* _Jv_StringFindSlot (jchar*, jint, jint);' \\\n \t    -friend 'jstring* _Jv_StringGetSlot (jstring);' \\\n@@ -301,38 +301,38 @@ java/lang/String.h: java/lang/String.class\n \t    $(basename $<)\n \n java/lang/reflect/Constructor.h: java/lang/reflect/Constructor.class\n-\t$(GCJH) -classpath $(top_builddir) \\\n+\t$(GCJH) -CLASSPATH $(top_builddir) \\\n \t    -friend 'jmethodID _Jv_FromReflectedConstructor (java::lang::reflect::Constructor *);' \\\n \t    -friend 'class java::lang::Class;' \\\n \t    -friend 'jobject _Jv_JNI_ToReflectedMethod (_Jv_JNIEnv *, jclass, jmethodID, jboolean);' \\\n \t    $(basename $<)\n \n java/lang/reflect/Field.h: java/lang/reflect/Field.class\n-\t$(GCJH) -classpath $(top_builddir) \\\n+\t$(GCJH) -CLASSPATH $(top_builddir) \\\n \t    -friend 'jfieldID _Jv_FromReflectedField (java::lang::reflect::Field *);' \\\n \t    -friend 'jobject _Jv_JNI_ToReflectedField (_Jv_JNIEnv*, jclass, jfieldID, jboolean);' \\\n \t    -friend 'class java::lang::Class;' \\\n \t    $(basename $<)\n \n java/lang/reflect/Method.h: java/lang/reflect/Method.class\n-\t$(GCJH) -classpath $(top_builddir) \\\n+\t$(GCJH) -CLASSPATH $(top_builddir) \\\n \t    -friend 'jmethodID _Jv_FromReflectedMethod (java::lang::reflect::Method *);' \\\n \t    -friend 'class java::lang::Class;' \\\n \t    -friend 'class java::io::ObjectInputStream;' \\\n \t    -friend 'jobject _Jv_JNI_ToReflectedMethod (_Jv_JNIEnv *, jclass, jmethodID, jboolean);' \\\n \t    $(basename $<)\n \n gnu/gcj/runtime/VMClassLoader.h: gnu/gcj/runtime/VMClassLoader.class\n-\t$(GCJH) -classpath $(top_builddir) \\\n+\t$(GCJH) -CLASSPATH $(top_builddir) \\\n \t    -friend 'class ::java::lang::ClassLoader;' \\\n \t    $(basename $<)\n \n java/io/ObjectInputStream$$GetField.h: java/io/ObjectInputStream.class\n-\t$(GCJH) -classpath $(top_builddir) \\\n+\t$(GCJH) -CLASSPATH $(top_builddir) \\\n \t'java/io/ObjectInputStream$$GetField'\n \n java/io/ObjectOutputStream$$PutField.h: java/io/ObjectOutputStream.class\n-\t$(GCJH) -classpath $(top_builddir) \\\n+\t$(GCJH) -CLASSPATH $(top_builddir) \\\n \t'java/io/ObjectOutputStream$$PutField'\n \n ## Headers we maintain by hand and which we want to install."}, {"sha": "5f49a2fdd9b99301091164d8a2a63fb4828a8a20", "filename": "libjava/Makefile.in", "status": "modified", "additions": 16, "deletions": 55, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73840519934e78e322cafd7b8bc5649e2fc45697/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73840519934e78e322cafd7b8bc5649e2fc45697/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=73840519934e78e322cafd7b8bc5649e2fc45697", "patch": "@@ -833,6 +833,7 @@ java/lang/SecurityException.java \\\n java/lang/SecurityManager.java \\\n java/lang/Short.java \\\n java/lang/StackOverflowError.java \\\n+java/lang/StrictMath.java \\\n java/lang/String.java \\\n java/lang/StringBuffer.java \\\n java/lang/StringIndexOutOfBoundsException.java \\\n@@ -1719,7 +1720,7 @@ libgcj-test.spec.in libgcj.spec.in\n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = gtar\n+TAR = tar\n GZIP_ENV = --best\n DIST_SUBDIRS =  @DIRLTDL@ testsuite gcj include @DIRLTDL@ gcj include\n DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n@@ -2244,8 +2245,8 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/lang/Runtime.P .deps/java/lang/RuntimeException.P \\\n .deps/java/lang/RuntimePermission.P .deps/java/lang/SecurityException.P \\\n .deps/java/lang/SecurityManager.P .deps/java/lang/Short.P \\\n-.deps/java/lang/StackOverflowError.P .deps/java/lang/String.P \\\n-.deps/java/lang/StringBuffer.P \\\n+.deps/java/lang/StackOverflowError.P .deps/java/lang/StrictMath.P \\\n+.deps/java/lang/String.P .deps/java/lang/StringBuffer.P \\\n .deps/java/lang/StringIndexOutOfBoundsException.P \\\n .deps/java/lang/System.P .deps/java/lang/Thread.P \\\n .deps/java/lang/ThreadDeath.P .deps/java/lang/ThreadGroup.P \\\n@@ -3211,8 +3212,8 @@ libgcj.jar: $(built_java_source_files) $(java_source_files) $(x_java_source_file\n \t@set fnord $(MAKEFLAGS); amf=$$2; fail=no; \\\n \tjavac=\"$(JAVAC)\"; \\\n \tcat tmp-list | (while read f; do \\\n-\t  echo $$javac $(JCFLAGS) -classpath $(here):$(srcdir) -d $(here) $$f; \\\n-\t  $$javac $(JCFLAGS) -classpath $(here):$(srcdir) -d $(here) $$f \\\n+\t  echo $$javac $(JCFLAGS) -CLASSPATH $(here):$(srcdir) -d $(here) $$f; \\\n+\t  $$javac $(JCFLAGS) -CLASSPATH $(here):$(srcdir) -d $(here) $$f \\\n \t    || case \"$$amf\" in *=*) exit 1;; *k*) fail=yes ;; *) exit 1;; esac; \\\n \tdone; \\\n \ttest \"$$fail\" = no)\n@@ -3259,18 +3260,18 @@ libgcjx.la: $(libgcjx_la_OBJECTS) $(libgcjx_la_DEPENDENCIES)\n \t-rpath $(toolexeclibdir) $(libgcjx_la_LDFLAGS) $(LIBS)\n \n .class.h:\n-\t$(GCJH) -classpath $(top_builddir) $(basename $<)\n+\t$(GCJH) -CLASSPATH $(top_builddir) $(basename $<)\n \n $(ordinary_nat_headers) $(x_nat_headers): %.h: %.class\n \n java/lang/ClassLoader.h: java/lang/ClassLoader.class\n-\t$(GCJH) -classpath $(top_builddir) \\\n+\t$(GCJH) -CLASSPATH $(top_builddir) \\\n \t\t-friend 'jclass _Jv_FindClass (_Jv_Utf8Const *name, java::lang::ClassLoader *loader);' \\\n \t\t-friend 'void _Jv_RunMain (jclass klass, const char *name, int argc, const char **argv, bool is_jar);' \\\n \t\t$(basename $<)\n \n java/lang/Thread.h: java/lang/Thread.class\n-\t$(GCJH) -classpath $(top_builddir) \\\n+\t$(GCJH) -CLASSPATH $(top_builddir) \\\n \t\t-prepend 'class _Jv_JNIEnv;' \\\n \t\t-prepend '#define _JV_NOT_OWNER 1' \\\n \t\t-prepend '#define _JV_INTERRUPTED 2' \\\n@@ -3283,7 +3284,7 @@ java/lang/Thread.h: java/lang/Thread.class\n \t\t$(basename $<)\n \n java/lang/String.h: java/lang/String.class\n-\t$(GCJH) -classpath $(top_builddir) \\\n+\t$(GCJH) -CLASSPATH $(top_builddir) \\\n \t    -friend 'jchar* _Jv_GetStringChars (jstring str);' \\\n \t    -friend 'jstring* _Jv_StringFindSlot (jchar*, jint, jint);' \\\n \t    -friend 'jstring* _Jv_StringGetSlot (jstring);' \\\n@@ -3293,78 +3294,38 @@ java/lang/String.h: java/lang/String.class\n \t    $(basename $<)\n \n java/lang/reflect/Constructor.h: java/lang/reflect/Constructor.class\n-\t$(GCJH) -classpath $(top_builddir) \\\n+\t$(GCJH) -CLASSPATH $(top_builddir) \\\n \t    -friend 'jmethodID _Jv_FromReflectedConstructor (java::lang::reflect::Constructor *);' \\\n \t    -friend 'class java::lang::Class;' \\\n \t    -friend 'jobject _Jv_JNI_ToReflectedMethod (_Jv_JNIEnv *, jclass, jmethodID, jboolean);' \\\n \t    $(basename $<)\n \n java/lang/reflect/Field.h: java/lang/reflect/Field.class\n-\t$(GCJH) -classpath $(top_builddir) \\\n+\t$(GCJH) -CLASSPATH $(top_builddir) \\\n \t    -friend 'jfieldID _Jv_FromReflectedField (java::lang::reflect::Field *);' \\\n \t    -friend 'jobject _Jv_JNI_ToReflectedField (_Jv_JNIEnv*, jclass, jfieldID, jboolean);' \\\n \t    -friend 'class java::lang::Class;' \\\n \t    $(basename $<)\n \n java/lang/reflect/Method.h: java/lang/reflect/Method.class\n-\t$(GCJH) -classpath $(top_builddir) \\\n+\t$(GCJH) -CLASSPATH $(top_builddir) \\\n \t    -friend 'jmethodID _Jv_FromReflectedMethod (java::lang::reflect::Method *);' \\\n \t    -friend 'class java::lang::Class;' \\\n \t    -friend 'class java::io::ObjectInputStream;' \\\n \t    -friend 'jobject _Jv_JNI_ToReflectedMethod (_Jv_JNIEnv *, jclass, jmethodID, jboolean);' \\\n \t    $(basename $<)\n \n-java/lang/Boolean.h: java/lang/Boolean.class\n-\t$(GCJH) -classpath $(top_builddir) \\\n-\t    -friend 'class java::lang::reflect::Method;' \\\n-\t    $(basename $<)\n-\n-java/lang/Byte.h: java/lang/Byte.class\n-\t$(GCJH) -classpath $(top_builddir) \\\n-\t    -friend 'class java::lang::reflect::Method;' \\\n-\t    $(basename $<)\n-\n-java/lang/Short.h: java/lang/Short.class\n-\t$(GCJH) -classpath $(top_builddir) \\\n-\t    -friend 'class java::lang::reflect::Method;' \\\n-\t    $(basename $<)\n-\n-java/lang/Character.h: java/lang/Character.class\n-\t$(GCJH) -classpath $(top_builddir) \\\n-\t    -friend 'class java::lang::reflect::Method;' \\\n-\t    $(basename $<)\n-\n-java/lang/Integer.h: java/lang/Integer.class\n-\t$(GCJH) -classpath $(top_builddir) \\\n-\t    -friend 'class java::lang::reflect::Method;' \\\n-\t    $(basename $<)\n-\n-java/lang/Long.h: java/lang/Long.class\n-\t$(GCJH) -classpath $(top_builddir) \\\n-\t    -friend 'class java::lang::reflect::Method;' \\\n-\t    $(basename $<)\n-\n-java/lang/Float.h: java/lang/Float.class\n-\t$(GCJH) -classpath $(top_builddir) \\\n-\t    -friend 'class java::lang::reflect::Method;' \\\n-\t    $(basename $<)\n-\n-java/lang/Double.h: java/lang/Double.class\n-\t$(GCJH) -classpath $(top_builddir) \\\n-\t    -friend 'class java::lang::reflect::Method;' \\\n-\t    $(basename $<)\n-\n gnu/gcj/runtime/VMClassLoader.h: gnu/gcj/runtime/VMClassLoader.class\n-\t$(GCJH) -classpath $(top_builddir) \\\n+\t$(GCJH) -CLASSPATH $(top_builddir) \\\n \t    -friend 'class ::java::lang::ClassLoader;' \\\n \t    $(basename $<)\n \n java/io/ObjectInputStream$$GetField.h: java/io/ObjectInputStream.class\n-\t$(GCJH) -classpath $(top_builddir) \\\n+\t$(GCJH) -CLASSPATH $(top_builddir) \\\n \t'java/io/ObjectInputStream$$GetField'\n \n java/io/ObjectOutputStream$$PutField.h: java/io/ObjectOutputStream.class\n-\t$(GCJH) -classpath $(top_builddir) \\\n+\t$(GCJH) -CLASSPATH $(top_builddir) \\\n \t'java/io/ObjectOutputStream$$PutField'\n \n $(extra_headers):"}]}