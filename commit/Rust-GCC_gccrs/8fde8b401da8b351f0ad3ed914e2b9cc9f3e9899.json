{"sha": "8fde8b401da8b351f0ad3ed914e2b9cc9f3e9899", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZkZThiNDAxZGE4YjM1MWYwYWQzZWQ5MTRlMmI5Y2M5ZjNlOTg5OQ==", "commit": {"author": {"name": "Christian Borntraeger", "email": "borntraeger@de.ibm.com", "date": "2010-05-25T11:18:07Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2010-05-25T11:18:07Z"}, "message": "re PR middle-end/44203 (New prefetch test failures)\n\n2010-05-25  Christian Borntraeger  <borntraeger@de.ibm.com>\n\n\tPR 44203\n\t* tree-ssa-loop-prefetch.c: Fix logic for step calculation to\n\tmatch the original (and intended) behaviour before r159557.  This\n\tchangeset changed a=a+b*c to a=(a+b)*b which was obviously wrong\n\tin two ways.\n\nFrom-SVN: r159816", "tree": {"sha": "40f47cc3c195e5fad0387d27e2b9762a3e6a78b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40f47cc3c195e5fad0387d27e2b9762a3e6a78b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fde8b401da8b351f0ad3ed914e2b9cc9f3e9899", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fde8b401da8b351f0ad3ed914e2b9cc9f3e9899", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fde8b401da8b351f0ad3ed914e2b9cc9f3e9899", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fde8b401da8b351f0ad3ed914e2b9cc9f3e9899/comments", "author": {"login": "borntraeger", "id": 3006059, "node_id": "MDQ6VXNlcjMwMDYwNTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3006059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/borntraeger", "html_url": "https://github.com/borntraeger", "followers_url": "https://api.github.com/users/borntraeger/followers", "following_url": "https://api.github.com/users/borntraeger/following{/other_user}", "gists_url": "https://api.github.com/users/borntraeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/borntraeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/borntraeger/subscriptions", "organizations_url": "https://api.github.com/users/borntraeger/orgs", "repos_url": "https://api.github.com/users/borntraeger/repos", "events_url": "https://api.github.com/users/borntraeger/events{/privacy}", "received_events_url": "https://api.github.com/users/borntraeger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "be6d3f0e89340dc7f7c2281aa747aa6560c05715", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be6d3f0e89340dc7f7c2281aa747aa6560c05715", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be6d3f0e89340dc7f7c2281aa747aa6560c05715"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "8833cca25fc1a2484f3eb8e3e81a17fe9b90d62f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fde8b401da8b351f0ad3ed914e2b9cc9f3e9899/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fde8b401da8b351f0ad3ed914e2b9cc9f3e9899/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8fde8b401da8b351f0ad3ed914e2b9cc9f3e9899", "patch": "@@ -1,3 +1,11 @@\n+2010-05-25  Christian Borntraeger  <borntraeger@de.ibm.com>\n+\n+\tPR 44203\n+\t* tree-ssa-loop-prefetch.c: Fix logic for step calculation to\n+\tmatch the original (and intended) behaviour before r159557.  This\n+\tchangeset changed a=a+b*c to a=(a+b)*b which was obviously wrong\n+\tin two ways.\n+\n 2010-05-25  Richard Guenther  <rguenther@suse.de>\n \n \t* doc/invoke.texi: Document -Ofast."}, {"sha": "d63ede1bbe987e7a878c46e89363eca7f451a402", "filename": "gcc/tree-ssa-loop-prefetch.c", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fde8b401da8b351f0ad3ed914e2b9cc9f3e9899/gcc%2Ftree-ssa-loop-prefetch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fde8b401da8b351f0ad3ed914e2b9cc9f3e9899/gcc%2Ftree-ssa-loop-prefetch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-prefetch.c?ref=8fde8b401da8b351f0ad3ed914e2b9cc9f3e9899", "patch": "@@ -423,25 +423,24 @@ idx_analyze_ref (tree base, tree *index, void *data)\n       ibase = build_int_cst (TREE_TYPE (ibase), 0);\n     }\n \n-  if (*ar_data->step == NULL_TREE)\n-    *ar_data->step = step;\n-  else\n-    *ar_data->step = fold_build2 (PLUS_EXPR, sizetype,\n-\t\t\t\t  fold_convert (sizetype, *ar_data->step),\n-\t\t\t\t  fold_convert (sizetype, step));\n   if (TREE_CODE (base) == ARRAY_REF)\n     {\n       stepsize = array_ref_element_size (base);\n       if (!cst_and_fits_in_hwi (stepsize))\n \treturn false;\n       imult = int_cst_value (stepsize);\n-\n-      *ar_data->step = fold_build2 (MULT_EXPR, sizetype,\n-\t\t\t\t    fold_convert (sizetype, *ar_data->step),\n-\t\t\t\t    fold_convert (sizetype, step));\n+      step = fold_build2 (MULT_EXPR, sizetype,\n+\t\t\t  fold_convert (sizetype, step),\n+\t\t\t  fold_convert (sizetype, stepsize));\n       idelta *= imult;\n     }\n \n+  if (*ar_data->step == NULL_TREE)\n+    *ar_data->step = step;\n+  else\n+    *ar_data->step = fold_build2 (PLUS_EXPR, sizetype,\n+\t\t\t\t  fold_convert (sizetype, *ar_data->step),\n+\t\t\t\t  fold_convert (sizetype, step));\n   *ar_data->delta += idelta;\n   *index = ibase;\n "}]}