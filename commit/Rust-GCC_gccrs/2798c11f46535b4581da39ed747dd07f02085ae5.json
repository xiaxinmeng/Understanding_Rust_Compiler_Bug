{"sha": "2798c11f46535b4581da39ed747dd07f02085ae5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc5OGMxMWY0NjUzNWI0NTgxZGEzOWVkNzQ3ZGQwN2YwMjA4NWFlNQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2005-05-10T12:38:34Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2005-05-10T12:38:34Z"}, "message": "re PR c/21342 (some incompatible external declarations not diagnosed)\n\n\tPR c/21342\n\t* c-decl.c (pushdecl): When there is a declaration in the current\n\tscope and the declarations are external linkage, check for\n\tcompatibility with the type in the external scope and update the\n\ttype in the external scope with the composite type information.\n\tDo not form a composite type of the new type and the visible type\n\tif they are incompatible.\n\ntestsuite:\n\t* gcc.dg/redecl-11.c, gcc.dg/redecl-12.c, gcc.dg/redecl-13.c,\n\tgcc.dg/redecl-14.c, gcc.dg/redecl-15.c: New tests.\n\nFrom-SVN: r99510", "tree": {"sha": "bf0363a9abcdf9390c78c1340cf7f4002e86ccaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf0363a9abcdf9390c78c1340cf7f4002e86ccaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2798c11f46535b4581da39ed747dd07f02085ae5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2798c11f46535b4581da39ed747dd07f02085ae5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2798c11f46535b4581da39ed747dd07f02085ae5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2798c11f46535b4581da39ed747dd07f02085ae5/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56d6849d895084a21f01d232f20fa6db9aecc971", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56d6849d895084a21f01d232f20fa6db9aecc971", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56d6849d895084a21f01d232f20fa6db9aecc971"}], "stats": {"total": 134, "additions": 131, "deletions": 3}, "files": [{"sha": "ffdd2bbff2afbf8dfedbe289589f6ee41fef5058", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2798c11f46535b4581da39ed747dd07f02085ae5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2798c11f46535b4581da39ed747dd07f02085ae5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2798c11f46535b4581da39ed747dd07f02085ae5", "patch": "@@ -1,3 +1,13 @@\n+2005-05-10  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\tPR c/21342\n+\t* c-decl.c (pushdecl): When there is a declaration in the current\n+\tscope and the declarations are external linkage, check for\n+\tcompatibility with the type in the external scope and update the\n+\ttype in the external scope with the composite type information.\n+\tDo not form a composite type of the new type and the visible type\n+\tif they are incompatible.\n+\n 2005-05-10  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* crtstuff.c: Revert part of 2005-05-08 Change."}, {"sha": "0ca4500021ecc44f02a2e06b0ff68e65657fc232", "filename": "gcc/c-decl.c", "status": "modified", "additions": 52, "deletions": 3, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2798c11f46535b4581da39ed747dd07f02085ae5/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2798c11f46535b4581da39ed747dd07f02085ae5/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=2798c11f46535b4581da39ed747dd07f02085ae5", "patch": "@@ -2029,11 +2029,52 @@ pushdecl (tree x)\n   b = I_SYMBOL_BINDING (name);\n   if (b && B_IN_SCOPE (b, scope))\n     {\n+      struct c_binding *b_ext, *b_use;\n+      tree type = TREE_TYPE (x);\n+      tree visdecl = b->decl;\n+      tree vistype = TREE_TYPE (visdecl);\n       if (TREE_CODE (TREE_TYPE (x)) == ARRAY_TYPE\n \t  && COMPLETE_TYPE_P (TREE_TYPE (x)))\n \tb->inner_comp = false;\n-      if (duplicate_decls (x, b->decl))\n-\treturn b->decl;\n+      b_use = b;\n+      b_ext = b;\n+      /* If this is an external linkage declaration, we should check\n+\t for compatibility with the type in the external scope before\n+\t setting the type at this scope based on the visible\n+\t information only.  */\n+      if (TREE_PUBLIC (x) && TREE_PUBLIC (visdecl))\n+\t{\n+\t  while (b_ext && !B_IN_EXTERNAL_SCOPE (b_ext))\n+\t    b_ext = b_ext->shadowed;\n+\t  if (b_ext)\n+\t    {\n+\t      b_use = b_ext;\n+\t      if (b_use->type)\n+\t\tTREE_TYPE (b_use->decl) = b_use->type;\n+\t    }\n+\t}\n+      if (duplicate_decls (x, b_use->decl))\n+\t{\n+\t  if (b_use != b)\n+\t    {\n+\t      /* Save the updated type in the external scope and\n+\t\t restore the proper type for this scope.  */\n+\t      tree thistype;\n+\t      if (comptypes (vistype, type))\n+\t\tthistype = composite_type (vistype, type);\n+\t      else\n+\t\tthistype = TREE_TYPE (b_use->decl);\n+\t      b_use->type = TREE_TYPE (b_use->decl);\n+\t      if (TREE_CODE (b_use->decl) == FUNCTION_DECL\n+\t\t  && DECL_BUILT_IN (b_use->decl))\n+\t\tthistype\n+\t\t  = build_type_attribute_variant (thistype,\n+\t\t\t\t\t\t  TYPE_ATTRIBUTES\n+\t\t\t\t\t\t  (b_use->type));\n+\t      TREE_TYPE (b_use->decl) = thistype;\n+\t    }\n+\t  return b_use->decl;\n+\t}\n       else\n \tgoto skip_external_and_shadow_checks;\n     }\n@@ -2120,7 +2161,15 @@ pushdecl (tree x)\n \t  && duplicate_decls (x, b->decl))\n \t{\n \t  tree thistype;\n-\t  thistype = (vistype ? composite_type (vistype, type) : type);\n+\t  if (vistype)\n+\t    {\n+\t      if (comptypes (vistype, type))\n+\t\tthistype = composite_type (vistype, type);\n+\t      else\n+\t\tthistype = TREE_TYPE (b->decl);\n+\t    }\n+\t  else\n+\t    thistype = type;\n \t  b->type = TREE_TYPE (b->decl);\n \t  if (TREE_CODE (b->decl) == FUNCTION_DECL && DECL_BUILT_IN (b->decl))\n \t    thistype"}, {"sha": "7dd2e1970d9089371c675a49ad897585971bac40", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2798c11f46535b4581da39ed747dd07f02085ae5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2798c11f46535b4581da39ed747dd07f02085ae5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2798c11f46535b4581da39ed747dd07f02085ae5", "patch": "@@ -1,3 +1,9 @@\n+2005-05-10  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\tPR c/21342\n+\t* gcc.dg/redecl-11.c, gcc.dg/redecl-12.c, gcc.dg/redecl-13.c,\n+\tgcc.dg/redecl-14.c, gcc.dg/redecl-15.c: New tests.\n+\n 2005-05-10  Ben Elliston  <bje@au.ibm.com>\n \n \tPR debug/16676"}, {"sha": "a0554d9476df72e75b46742a3159436406e47093", "filename": "gcc/testsuite/gcc.dg/redecl-11.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2798c11f46535b4581da39ed747dd07f02085ae5/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2798c11f46535b4581da39ed747dd07f02085ae5/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-11.c?ref=2798c11f46535b4581da39ed747dd07f02085ae5", "patch": "@@ -0,0 +1,9 @@\n+/* Some incompatible external linkage declarations were not diagnosed.\n+   Bug 21342.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+int f(int (*)[]);\n+void g() { int f(int (*)[2]); } /* { dg-error \"error: previous declaration of 'f' was here\" } */\n+int f(int (*)[3]); /* { dg-error \"error: conflicting types for 'f'\" } */"}, {"sha": "cb1501d30ac33f5a4cd12d6787ab1e2b10361800", "filename": "gcc/testsuite/gcc.dg/redecl-12.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2798c11f46535b4581da39ed747dd07f02085ae5/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2798c11f46535b4581da39ed747dd07f02085ae5/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-12.c?ref=2798c11f46535b4581da39ed747dd07f02085ae5", "patch": "@@ -0,0 +1,9 @@\n+/* Some incompatible external linkage declarations were not diagnosed.\n+   Bug 21342.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+extern int a[];\n+void f(void) { extern int a[]; extern int a[10]; } /* { dg-error \"error: previous declaration of 'a' was here\" } */\n+extern int a[5]; /* { dg-error \"error: conflicting types for 'a'\" } */"}, {"sha": "54be4dbc2ba315d8cb88e28dce72257a48facb9a", "filename": "gcc/testsuite/gcc.dg/redecl-13.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2798c11f46535b4581da39ed747dd07f02085ae5/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2798c11f46535b4581da39ed747dd07f02085ae5/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-13.c?ref=2798c11f46535b4581da39ed747dd07f02085ae5", "patch": "@@ -0,0 +1,9 @@\n+/* Some incompatible external linkage declarations were not diagnosed.\n+   Bug 21342.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+extern int a[];\n+void f(void) { extern int a[10]; } /* { dg-error \"error: previous declaration of 'a' was here\" } */\n+extern int a[5]; /* { dg-error \"error: conflicting types for 'a'\" } */"}, {"sha": "ed196106361c75fc505b9b7e5a67e2de9868e003", "filename": "gcc/testsuite/gcc.dg/redecl-14.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2798c11f46535b4581da39ed747dd07f02085ae5/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2798c11f46535b4581da39ed747dd07f02085ae5/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-14.c?ref=2798c11f46535b4581da39ed747dd07f02085ae5", "patch": "@@ -0,0 +1,22 @@\n+/* Some incompatible external linkage declarations were not diagnosed.\n+   Bug 21342.  Test type in inner scope is correct.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+typedef int IA[];\n+typedef int IA5[5];\n+typedef IA *IAP;\n+typedef IA5 *IA5P;\n+extern IAP a[];\n+void\n+f (void)\n+{\n+  {\n+    extern IA5P a[];\n+    sizeof (*a[0]);\n+  }\n+  extern IAP a[];\n+  extern IAP a[5];\n+  sizeof (*a[0]); /* { dg-error \"error: invalid application of 'sizeof' to incomplete type 'IA'\" } */\n+}"}, {"sha": "c4ac76cc8cfd49339de775f8f102694201f6a2d8", "filename": "gcc/testsuite/gcc.dg/redecl-15.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2798c11f46535b4581da39ed747dd07f02085ae5/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2798c11f46535b4581da39ed747dd07f02085ae5/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-15.c?ref=2798c11f46535b4581da39ed747dd07f02085ae5", "patch": "@@ -0,0 +1,14 @@\n+/* Test for ICE with redeclaration in inner scope which is accepted\n+   despite incompatible type.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+void\n+f (void)\n+{\n+  g(); /* { dg-warning \"warning: previous implicit declaration of 'g' was here\" } */\n+  {\n+    void g(); /* { dg-warning \"warning: conflicting types for 'g'\" } */\n+  }\n+}"}]}