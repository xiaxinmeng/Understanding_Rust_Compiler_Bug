{"sha": "ecf24057f806d6766df43f146ceceac651469430", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNmMjQwNTdmODA2ZDY3NjZkZjQzZjE0NmNlY2VhYzY1MTQ2OTQzMA==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-11-03T14:51:51Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-11-03T14:51:51Z"}, "message": "gfortran.h: Shorten comment.\n\n\t* gfortran.h: Shorten comment.\n\t* trans-types.c (gfc_get_function_type): Allow argument to have\n\tflavor FL_PROGRAM.\n\t* trans-decl.c (gfc_sym_mangled_function_id): Mangle main program\n\tname into MAIN__.\n\t(build_function_decl): Fix comment.\n\t* parse.c (main_program_symbol): Give the main program its proper\n\tname, if any. Set its flavor to FL_PROGRAM.\n\t(gfc_parse_file): Likewise.\n\nFrom-SVN: r129869", "tree": {"sha": "0b205366f000dcc61123d9d05537464c13b0f625", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b205366f000dcc61123d9d05537464c13b0f625"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecf24057f806d6766df43f146ceceac651469430", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecf24057f806d6766df43f146ceceac651469430", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecf24057f806d6766df43f146ceceac651469430", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecf24057f806d6766df43f146ceceac651469430/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d85b4853be3eb11746748e20918a9b57480fbab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d85b4853be3eb11746748e20918a9b57480fbab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d85b4853be3eb11746748e20918a9b57480fbab"}], "stats": {"total": 45, "additions": 32, "deletions": 13}, "files": [{"sha": "4322dd44badbb3b83ba40539b141d1fdc1068cd1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecf24057f806d6766df43f146ceceac651469430/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecf24057f806d6766df43f146ceceac651469430/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ecf24057f806d6766df43f146ceceac651469430", "patch": "@@ -1,3 +1,15 @@\n+2007-11-03  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* gfortran.h: Shorten comment.\n+\t* trans-types.c (gfc_get_function_type): Allow argument to have\n+\tflavor FL_PROGRAM.\n+\t* trans-decl.c (gfc_sym_mangled_function_id): Mangle main program\n+\tname into MAIN__.\n+\t(build_function_decl): Fix comment.\n+\t* parse.c (main_program_symbol): Give the main program its proper\n+\tname, if any. Set its flavor to FL_PROGRAM.\n+\t(gfc_parse_file): Likewise.\n+\n 2007-11-02  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* intrinsic.texi (ALLOCATED): Fix typo."}, {"sha": "39fd3a10f2050a0de50df6c8d7369d15bdce8c2e", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecf24057f806d6766df43f146ceceac651469430/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecf24057f806d6766df43f146ceceac651469430/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=ecf24057f806d6766df43f146ceceac651469430", "patch": "@@ -665,9 +665,7 @@ typedef struct\n   /* Set if the symbol has ambiguous interfaces.  */\n   unsigned ambiguous_interfaces:1;\n \n-  /* Set if the is the symbol for the main program.  This is the least\n-     cumbersome way to communicate this function property without\n-     strcmp'ing with __MAIN everywhere.  */\n+  /* Set if this is the symbol for the main program.  */\n   unsigned is_main_program:1;\n \n   /* Mutually exclusive multibit attributes.  */"}, {"sha": "3e20b78fba2637496c5edc402221f86e123f296b", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecf24057f806d6766df43f146ceceac651469430/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecf24057f806d6766df43f146ceceac651469430/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=ecf24057f806d6766df43f146ceceac651469430", "patch": "@@ -1237,14 +1237,14 @@ gfc_ascii_statement (gfc_statement st)\n /* Create a symbol for the main program and assign it to ns->proc_name.  */\n  \n static void \n-main_program_symbol (gfc_namespace *ns)\n+main_program_symbol (gfc_namespace *ns, const char *name)\n {\n   gfc_symbol *main_program;\n   symbol_attribute attr;\n \n-  gfc_get_symbol (\"MAIN__\", ns, &main_program);\n+  gfc_get_symbol (name, ns, &main_program);\n   gfc_clear_attr (&attr);\n-  attr.flavor = FL_PROCEDURE;\n+  attr.flavor = FL_PROGRAM;\n   attr.proc = PROC_UNKNOWN;\n   attr.subroutine = 1;\n   attr.access = ACCESS_PUBLIC;\n@@ -3331,7 +3331,7 @@ gfc_parse_file (void)\n       prog_locus = gfc_current_locus;\n \n       push_state (&s, COMP_PROGRAM, gfc_new_block);\n-      main_program_symbol(gfc_current_ns);\n+      main_program_symbol(gfc_current_ns, gfc_new_block->name);\n       accept_statement (st);\n       add_global_program ();\n       parse_progunit (ST_NONE);\n@@ -3373,7 +3373,7 @@ gfc_parse_file (void)\n       prog_locus = gfc_current_locus;\n \n       push_state (&s, COMP_PROGRAM, gfc_new_block);\n-      main_program_symbol (gfc_current_ns);\n+      main_program_symbol (gfc_current_ns, \"MAIN__\");\n       parse_progunit (st);\n       break;\n     }"}, {"sha": "198fec791991e00be09b9e4681a96b3cd3027c1a", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecf24057f806d6766df43f146ceceac651469430/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecf24057f806d6766df43f146ceceac651469430/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=ecf24057f806d6766df43f146ceceac651469430", "patch": "@@ -7581,6 +7581,9 @@ resolve_symbol (gfc_symbol *sym)\n   if (sym->attr.procedure && sym->interface\n       && sym->attr.if_source != IFSRC_DECL)\n     {\n+      while (sym->interface->interface)\n+\tsym->interface = sym->interface->interface;\n+\n       /* Get the attributes from the interface (now resolved).  */\n       if (sym->interface->attr.if_source || sym->interface->attr.intrinsic)\n \t{"}, {"sha": "4b114df728b4e794d8526f40b976cf70a33ed6d6", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecf24057f806d6766df43f146ceceac651469430/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecf24057f806d6766df43f146ceceac651469430/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=ecf24057f806d6766df43f146ceceac651469430", "patch": "@@ -324,8 +324,12 @@ gfc_sym_mangled_function_id (gfc_symbol * sym)\n       || (sym->module != NULL && (sym->attr.external\n \t    || sym->attr.if_source == IFSRC_IFBODY)))\n     {\n-      if (strcmp (sym->name, \"MAIN__\") == 0\n-\t  || sym->attr.proc == PROC_INTRINSIC)\n+      /* Main program is mangled into MAIN__.  */\n+      if (sym->attr.is_main_program)\n+\treturn get_identifier (\"MAIN__\");\n+\n+      /* Intrinsic procedures are never mangled.  */\n+      if (sym->attr.proc == PROC_INTRINSIC)\n \treturn get_identifier (sym->name);\n \n       if (gfc_option.flag_underscoring)\n@@ -1321,7 +1325,7 @@ build_function_decl (gfc_symbol * sym)\n       TREE_SIDE_EFFECTS (fndecl) = 0;\n     }\n \n-  /* For -fwhole-program to work well, MAIN__ needs to have the\n+  /* For -fwhole-program to work well, the main program needs to have the\n      \"externally_visible\" attribute.  */\n   if (attr.is_main_program)\n     DECL_ATTRIBUTES (fndecl)"}, {"sha": "88066a38f38f0bbfdc94a95749d28ba8bf91bc4b", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecf24057f806d6766df43f146ceceac651469430/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecf24057f806d6766df43f146ceceac651469430/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=ecf24057f806d6766df43f146ceceac651469430", "patch": "@@ -1924,8 +1924,10 @@ gfc_get_function_type (gfc_symbol * sym)\n   int nstr;\n   int alternate_return;\n \n-  /* Make sure this symbol is a function or a subroutine.  */\n-  gcc_assert (sym->attr.flavor == FL_PROCEDURE);\n+  /* Make sure this symbol is a function, a subroutine or the main\n+     program.  */\n+  gcc_assert (sym->attr.flavor == FL_PROCEDURE\n+\t      || sym->attr.flavor == FL_PROGRAM);\n \n   if (sym->backend_decl)\n     return TREE_TYPE (sym->backend_decl);"}]}