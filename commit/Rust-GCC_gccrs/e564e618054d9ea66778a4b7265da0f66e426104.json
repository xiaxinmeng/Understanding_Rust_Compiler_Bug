{"sha": "e564e618054d9ea66778a4b7265da0f66e426104", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU2NGU2MTgwNTRkOWVhNjY3NzhhNGI3MjY1ZGEwZjY2ZTQyNjEwNA==", "commit": {"author": {"name": "David O'Brien", "email": "obrien@FreeBSD.org", "date": "2002-01-26T01:23:27Z"}, "committer": {"name": "David O'Brien", "email": "obrien@gcc.gnu.org", "date": "2002-01-26T01:23:27Z"}, "message": "config.gcc (x86_64-*-freebsd*): New target.\n\n2002-01-25  David O'Brien  <obrien@FreeBSD.org>\n\t* config.gcc (x86_64-*-freebsd*): New target.\n\t(x86_64-*-netbsd*,x86_64-*-linux*): Use ${tm_file} rather than its\n\tvalue.\n\t(i[34567]86-*-freebsd*): Don't include svr4.h.\n\t* config/i386/freebsd64.h: New file.\n\nApproved by:  Richard Henderson <rth@redhat.com>\n              Message-ID: <20020125160119.B17943@redhat.com>\n\nFrom-SVN: r49233", "tree": {"sha": "97620496215405c9831609f88ba7f80c87de4596", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97620496215405c9831609f88ba7f80c87de4596"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e564e618054d9ea66778a4b7265da0f66e426104", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e564e618054d9ea66778a4b7265da0f66e426104", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e564e618054d9ea66778a4b7265da0f66e426104", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e564e618054d9ea66778a4b7265da0f66e426104/comments", "author": null, "committer": null, "parents": [{"sha": "4857d29d810461f9eca00a0b677e850ebd1b432d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4857d29d810461f9eca00a0b677e850ebd1b432d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4857d29d810461f9eca00a0b677e850ebd1b432d"}], "stats": {"total": 76, "additions": 73, "deletions": 3}, "files": [{"sha": "765cadb4a9388fb2c0cd4547fcab7271b9e4ab15", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e564e618054d9ea66778a4b7265da0f66e426104/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e564e618054d9ea66778a4b7265da0f66e426104/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e564e618054d9ea66778a4b7265da0f66e426104", "patch": "@@ -1,3 +1,11 @@\n+2002-01-25  David O'Brien  <obrien@FreeBSD.org>\n+\n+\t* config.gcc (x86_64-*-freebsd*): New target.\n+\t(x86_64-*-netbsd*,x86_64-*-linux*): Use ${tm_file} rather than its\n+\tvalue.\n+\t(i[34567]86-*-freebsd*): Don't include svr4.h.\n+\t* config/i386/freebsd64.h: New file.\n+\n 2002-01-25  Douglas B Rupp  <rupp@gnat.com>\n \n \t* config/alpha/x-vms (version): Make static."}, {"sha": "10d6e1fd73264a8faf7f5258b5ffb7473aa402c1", "filename": "gcc/config.gcc", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e564e618054d9ea66778a4b7265da0f66e426104/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e564e618054d9ea66778a4b7265da0f66e426104/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=e564e618054d9ea66778a4b7265da0f66e426104", "patch": "@@ -270,6 +270,13 @@ if test -f ${srcdir}/config/${cpu_type}/${cpu_type}-protos.h\n then\n \ttm_p_file=${cpu_type}/${cpu_type}-protos.h\n fi\n+\n+case $machine in\n+x86_64-*-*)\n+\ttm_file=\"i386/biarch64.h ${tm_file}\"\n+\t;;\n+esac\n+\n # On a.out targets, we need to use collect2.\n case $machine in\n *-*-*aout*)\n@@ -1127,7 +1134,10 @@ i[34567]86-*-freebsd[12] | i[34567]86-*-freebsd[12].* | i[34567]86-*-freebsd*aou\n \ttmake_file=t-freebsd\n \t;;\n i[34567]86-*-freebsd*)\n-\ttm_file=\"${tm_file} i386/att.h dbxelf.h elfos.h svr4.h ${fbsd_tm_file} i386/freebsd.h\"\n+\ttm_file=\"${tm_file} i386/att.h dbxelf.h elfos.h ${fbsd_tm_file} i386/freebsd.h\"\n+\t;;\n+x86_64-*-freebsd*)\n+\ttm_file=\"${tm_file} i386/att.h dbxelf.h elfos.h ${fbsd_tm_file} i386/x86-64.h i386/freebsd.h i386/freebsd64.h\"\n \t;;\n i[34567]86-*-netbsdelf*)\n \ttm_file=\"${tm_file} i386/att.h dbxelf.h elfos.h netbsd.h netbsd-elf.h i386/netbsd-elf.h\"\n@@ -1139,7 +1149,7 @@ i[34567]86-*-netbsd*)\n \tuse_collect2=yes\n \t;;\n x86_64-*-netbsd*)\n-\ttm_file=\"i386/biarch64.h i386/i386.h i386/att.h dbxelf.h elfos.h netbsd.h netbsd-elf.h i386/x86-64.h i386/netbsd64.h\"\n+\ttm_file=\"${tm_file} i386/att.h dbxelf.h elfos.h netbsd.h netbsd-elf.h i386/x86-64.h i386/netbsd64.h\"\n \tfloat_format=i386\n \t;;\n i[34567]86-*-openbsd*)\n@@ -1205,7 +1215,7 @@ i[34567]86-*-linux*)\t# Intel 80386's running GNU/Linux\n \tfi\n \t;;\n x86_64-*-linux*)\n-\ttm_file=\"i386/biarch64.h i386/i386.h i386/att.h dbxelf.h elfos.h svr4.h linux.h \\\n+\ttm_file=\"${tm_file} i386/att.h dbxelf.h elfos.h svr4.h linux.h \\\n \t\t i386/x86-64.h i386/linux64.h\"\n \ttmake_file=\"t-slibgcc-elf-ver t-linux i386/t-crtstuff\"\n \textra_parts=\"crtbegin.o crtbeginS.o crtbeginT.o crtend.o crtendS.o\""}, {"sha": "3437e694d45838187216174e863e73da9323dd0a", "filename": "gcc/config/i386/freebsd64.h", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e564e618054d9ea66778a4b7265da0f66e426104/gcc%2Fconfig%2Fi386%2Ffreebsd64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e564e618054d9ea66778a4b7265da0f66e426104/gcc%2Fconfig%2Fi386%2Ffreebsd64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ffreebsd64.h?ref=e564e618054d9ea66778a4b7265da0f66e426104", "patch": "@@ -0,0 +1,52 @@\n+/* Definitions for AMD x86-64 running FreeBSD with ELF format\n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Contributed by David O'Brien <obrien@FreeBSD.org>\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+\n+#undef TARGET_VERSION\n+#define TARGET_VERSION fprintf (stderr, \" (FreeBSD/x86-64 ELF)\");\n+\n+/* Provide a LINK_SPEC appropriate for the FreeBSD/x86-64 ELF target.\n+   This is a copy of LINK_SPEC from <i386/freebsd.h> tweaked for\n+   the x86-64 target.  */\n+\n+#undef\tLINK_SPEC\n+#define LINK_SPEC \"\\\n+  %{!m32:-m elf_x86_64} \\\n+  %{m32:-m elf_i386} \\\n+  %{Wl,*:%*} \\\n+  %{v:-V} \\\n+  %{assert*} %{R*} %{rpath*} %{defsym*} \\\n+  %{shared:-Bshareable %{h*} %{soname*}} \\\n+    %{!shared: \\\n+      %{!static: \\\n+        %{rdynamic:-export-dynamic} \\\n+\t%{!dynamic-linker:-dynamic-linker /usr/libexec/ld-elf.so.1}} \\\n+    %{static:-Bstatic}} \\\n+  %{symbolic:-Bsymbolic}\"\n+\n+/* Grrr... x86-64.h gets this wrong and it shouldn't be trying to set this\n+   policy...  Restore to the FreeBSD/i386 setting.  */\n+/* Don't default to pcc-struct-return for IA-32 ELF code, because we need to\n+   retain compatibility with older FreeBSD/i386 ELF gcc versions (even though\n+   the SVR4 ABI for the i386 says that records and unions are returned in\n+   memory).  */\n+#undef  DEFAULT_PCC_STRUCT_RETURN\n+#define DEFAULT_PCC_STRUCT_RETURN 0"}]}