{"sha": "54838d1f88d0e162089a86d2055bd70aa49fff54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ4MzhkMWY4OGQwZTE2MjA4OWE4NmQyMDU1YmQ3MGFhNDlmZmY1NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-04T09:50:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-04T09:50:09Z"}, "message": "snames.h, [...]: Add Attr_To_Any, Attr_From_Any and Attr_TypeCode defines.\n\n2008-08-04  Kevin Pouget  <pouget@adacore.com>\n\n\t* snames.h, snames.adb, snames.ads:\n\tAdd Attr_To_Any, Attr_From_Any and Attr_TypeCode defines.\n\n\t* exp_dist.ads, exp_dist.adb: Add Build_From_Any_Call,\n\tBuild_To_Any_Call and Build_TypeCode_Call procedures.\n\n\t* exp_attr.adb, sem_attr.adb: Add corresponding cases.\n\n\t* rtsfind.ads: Add corresponding names.\n\n\t* tbuild.adb: Update prefix restrictions to allow '_' character.\n\nFrom-SVN: r138598", "tree": {"sha": "e5d22cc6c18c8819b1555d30f0b40855fe36c2e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5d22cc6c18c8819b1555d30f0b40855fe36c2e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54838d1f88d0e162089a86d2055bd70aa49fff54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54838d1f88d0e162089a86d2055bd70aa49fff54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54838d1f88d0e162089a86d2055bd70aa49fff54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54838d1f88d0e162089a86d2055bd70aa49fff54/comments", "author": null, "committer": null, "parents": [{"sha": "9450205a0ccc2f227a24bc6f5c5c8f3d5ab1c710", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9450205a0ccc2f227a24bc6f5c5c8f3d5ab1c710", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9450205a0ccc2f227a24bc6f5c5c8f3d5ab1c710"}], "stats": {"total": 1283, "additions": 747, "deletions": 536}, "files": [{"sha": "6fb8cc36c30ded65cda095ad926a787983733e83", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54838d1f88d0e162089a86d2055bd70aa49fff54/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54838d1f88d0e162089a86d2055bd70aa49fff54/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=54838d1f88d0e162089a86d2055bd70aa49fff54", "patch": "@@ -1,3 +1,30 @@\n+2008-08-04  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* g-comlin.adb (Group_Switches): Preserve the switch order when\n+\tgrouping and allow switch grouping of switches with more than one\n+\tcharacter extension (e.g. gnatw.x).\n+\t(Args_From_Expanded): Remove this now obsolete method.\n+\n+2008-08-04  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch4.adb (Get_Allocator_Final_List): Freeze anonymous type for\n+\tchain at once, to ensure that type is properly decorated for back-end,\n+\twhen allocator appears within a loop.\n+\n+2008-08-04  Kevin Pouget  <pouget@adacore.com>\n+\n+\t* snames.h, snames.adb, snames.ads:\n+\tAdd Attr_To_Any, Attr_From_Any and Attr_TypeCode defines.\n+\n+\t* exp_dist.ads, exp_dist.adb: Add Build_From_Any_Call,\n+\tBuild_To_Any_Call and Build_TypeCode_Call procedures.\n+\n+\t* exp_attr.adb, sem_attr.adb: Add corresponding cases.\n+\n+\t* rtsfind.ads: Add corresponding names.\n+\n+\t* tbuild.adb: Update prefix restrictions to allow '_' character.\n+\n 2008-08-04  Doug Rupp  <rupp@adacore.com>\n \n \t* gigi.h (fill_vms_descriptor): Add third parameter gnat_actual"}, {"sha": "890f09b1d8223d4012e3daae2d4663cce494a896", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54838d1f88d0e162089a86d2055bd70aa49fff54/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54838d1f88d0e162089a86d2055bd70aa49fff54/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=54838d1f88d0e162089a86d2055bd70aa49fff54", "patch": "@@ -33,6 +33,7 @@ with Exp_Ch2;  use Exp_Ch2;\n with Exp_Ch3;  use Exp_Ch3;\n with Exp_Ch6;  use Exp_Ch6;\n with Exp_Ch9;  use Exp_Ch9;\n+with Exp_Dist; use Exp_Dist;\n with Exp_Imgv; use Exp_Imgv;\n with Exp_Pakd; use Exp_Pakd;\n with Exp_Strm; use Exp_Strm;\n@@ -2074,6 +2075,22 @@ package body Exp_Attr is\n       when Attribute_Fraction =>\n          Expand_Fpt_Attribute_R (N);\n \n+      --------------\n+      -- From_Any --\n+      --------------\n+\n+      when Attribute_From_Any => From_Any : declare\n+         P_Type : constant Entity_Id := Etype (Pref);\n+         Decls  : constant List_Id   := New_List;\n+      begin\n+         Rewrite (N,\n+           Build_From_Any_Call (P_Type,\n+             Relocate_Node (First (Exprs)),\n+             Decls));\n+         Insert_Actions (N, Decls);\n+         Analyze_And_Resolve (N, P_Type);\n+      end From_Any;\n+\n       --------------\n       -- Identity --\n       --------------\n@@ -4396,6 +4413,22 @@ package body Exp_Attr is\n              Relocate_Node (First (Exprs))));\n          Analyze_And_Resolve (N, RTE (RE_Address));\n \n+      ------------\n+      -- To_Any --\n+      ------------\n+\n+      when Attribute_To_Any => To_Any : declare\n+         P_Type : constant Entity_Id := Etype (Pref);\n+         Decls  : constant List_Id   := New_List;\n+      begin\n+         Rewrite (N,\n+           Build_To_Any_Call\n+             (Convert_To (P_Type,\n+              Relocate_Node (First (Exprs))), Decls));\n+         Insert_Actions (N, Decls);\n+         Analyze_And_Resolve (N, RTE (RE_Any));\n+      end To_Any;\n+\n       ----------------\n       -- Truncation --\n       ----------------\n@@ -4409,6 +4442,19 @@ package body Exp_Attr is\n             Expand_Fpt_Attribute_R (N);\n          end if;\n \n+      --------------\n+      -- TypeCode --\n+      --------------\n+\n+      when Attribute_TypeCode => TypeCode : declare\n+         P_Type : constant Entity_Id := Etype (Pref);\n+         Decls  : constant List_Id   := New_List;\n+      begin\n+         Rewrite (N, Build_TypeCode_Call (Loc, P_Type, Decls));\n+         Insert_Actions (N, Decls);\n+         Analyze_And_Resolve (N, RTE (RE_TypeCode));\n+      end TypeCode;\n+\n       -----------------------\n       -- Unbiased_Rounding --\n       -----------------------"}, {"sha": "8576cbf94ad8ba687d4e1926fb9c94c1c7c06dd8", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 65, "deletions": 24, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54838d1f88d0e162089a86d2055bd70aa49fff54/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54838d1f88d0e162089a86d2055bd70aa49fff54/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=54838d1f88d0e162089a86d2055bd70aa49fff54", "patch": "@@ -858,6 +858,25 @@ package body Exp_Dist is\n \n    end PolyORB_Support;\n \n+   --  The following PolyORB-specific subprograms are made visible to Exp_Attr:\n+\n+   function Build_From_Any_Call\n+     (Typ   : Entity_Id;\n+      N     : Node_Id;\n+      Decls : List_Id) return Node_Id\n+     renames PolyORB_Support.Helpers.Build_From_Any_Call;\n+\n+   function Build_To_Any_Call\n+     (N     : Node_Id;\n+      Decls : List_Id) return Node_Id\n+     renames PolyORB_Support.Helpers.Build_To_Any_Call;\n+\n+   function Build_TypeCode_Call\n+     (Loc   : Source_Ptr;\n+      Typ   : Entity_Id;\n+      Decls : List_Id) return Node_Id\n+     renames PolyORB_Support.Helpers.Build_TypeCode_Call;\n+\n    ------------------------------------\n    -- Local variables and structures --\n    ------------------------------------\n@@ -8218,12 +8237,11 @@ package body Exp_Dist is\n          --  point type from Standard, or the smallest unsigned (modular) type\n          --  from System.Unsigned_Types, whose range encompasses that of Typ.\n \n-         function Make_Stream_Procedure_Function_Name\n+         function Make_Helper_Function_Name\n            (Loc : Source_Ptr;\n             Typ : Entity_Id;\n             Nam : Name_Id) return Entity_Id;\n-         --  Return the name to be assigned for stream subprogram Nam of Typ.\n-         --  (copied from exp_strm.adb, should be shared???)\n+         --  Return the name to be assigned for helper subprogram Nam of Typ\n \n          ------------------------------------------------------------\n          -- Common subprograms for building various tree fragments --\n@@ -8432,6 +8450,11 @@ package body Exp_Dist is\n             elsif U_Type = Standard_String then\n                Lib_RE := RE_FA_String;\n \n+            --  Special DSA types\n+\n+            elsif Is_RTE (U_Type, RE_Any_Content_Ptr) then\n+               Lib_RE := RE_FA_A;\n+\n             --  Other (non-primitive) types\n \n             else\n@@ -8493,8 +8516,7 @@ package body Exp_Dist is\n                return;\n             end if;\n \n-            Fnam :=\n-              Make_Stream_Procedure_Function_Name (Loc, Typ, Name_uFrom_Any);\n+            Fnam := Make_Helper_Function_Name (Loc, Typ, Name_From_Any);\n \n             Spec :=\n               Make_Function_Specification (Loc,\n@@ -9293,7 +9315,13 @@ package body Exp_Dist is\n             elsif U_Type = Standard_String then\n                Lib_RE := RE_TA_String;\n \n+            --  Special DSA types\n+\n+            elsif Is_RTE (U_Type, RE_Any_Content_Ptr) then\n+               Lib_RE := RE_TA_A;\n+\n             elsif U_Type = Underlying_Type (RTE (RE_TypeCode)) then\n+               --  No corresponding FA_TC ???\n                Lib_RE := RE_TA_TC;\n \n             --  Other (non-primitive) types\n@@ -9358,8 +9386,7 @@ package body Exp_Dist is\n                return;\n             end if;\n \n-            Fnam :=\n-              Make_Stream_Procedure_Function_Name (Loc, Typ, Name_uTo_Any);\n+            Fnam := Make_Helper_Function_Name (Loc, Typ, Name_To_Any);\n \n             Spec :=\n               Make_Function_Specification (Loc,\n@@ -9976,7 +10003,7 @@ package body Exp_Dist is\n             --  not been set yet, so can't call Find_Inherited_TSS.\n \n             if Typ = RTE (RE_Any) then\n-               Fnam := RTE (RE_TC_Any);\n+               Fnam := RTE (RE_TC_A);\n \n             else\n                --  First simple case where the TypeCode is present\n@@ -10057,6 +10084,11 @@ package body Exp_Dist is\n                elsif U_Type = Standard_String then\n                   Lib_RE := RE_TC_String;\n \n+               --  Special DSA types\n+\n+               elsif Is_RTE (U_Type, RE_Any_Content_Ptr) then\n+                  Lib_RE := RE_TC_A;\n+\n                --  Other (non-primitive) types\n \n                else\n@@ -10100,8 +10132,7 @@ package body Exp_Dist is\n             Stms  : constant List_Id := New_List;\n \n             TCNam : constant Entity_Id :=\n-                      Make_Stream_Procedure_Function_Name (Loc,\n-                        Typ, Name_uTypeCode);\n+                      Make_Helper_Function_Name (Loc, Typ, Name_TypeCode);\n \n             Parameters : List_Id;\n \n@@ -10964,30 +10995,40 @@ package body Exp_Dist is\n             end;\n          end Append_Array_Traversal;\n \n-         -----------------------------------------\n-         -- Make_Stream_Procedure_Function_Name --\n-         -----------------------------------------\n+         -------------------------------\n+         -- Make_Helper_Function_Name --\n+         -------------------------------\n \n-         function Make_Stream_Procedure_Function_Name\n+         function Make_Helper_Function_Name\n            (Loc : Source_Ptr;\n             Typ : Entity_Id;\n             Nam : Name_Id) return Entity_Id\n          is\n          begin\n-            --  For tagged types, we use a canonical name so that it matches\n-            --  the primitive spec. For all other cases, we use a serialized\n-            --  name so that multiple generations of the same procedure do not\n-            --  clash.\n \n-            if Is_Tagged_Type (Typ) then\n-               return Make_Defining_Identifier (Loc, Nam);\n-            else\n+            declare\n+               Serial : Nat := 0;\n+               --  For tagged types, we use a canonical name so that it matches\n+               --  the primitive spec. For all other cases, we use a serialized\n+               --  name so that multiple generations of the same procedure do\n+               --  not clash.\n+            begin\n+               if not Is_Tagged_Type (Typ) then\n+                  Serial := Increment_Serial_Number;\n+               end if;\n+\n+               --  Use prefixed underscore to avoid potential clash with used\n+               --  identifier (we use attribute names for Nam).\n+\n                return\n                  Make_Defining_Identifier (Loc,\n                    Chars =>\n-                     New_External_Name (Nam, ' ', Increment_Serial_Number));\n-            end if;\n-         end Make_Stream_Procedure_Function_Name;\n+                     New_External_Name\n+                       (Related_Id => Nam,\n+                        Suffix => ' ', Suffix_Index => Serial,\n+                        Prefix => '_'));\n+            end;\n+         end Make_Helper_Function_Name;\n       end Helpers;\n \n       -----------------------------------"}, {"sha": "26995a8b9f92302197a486a1a2582baac3e5ee94", "filename": "gcc/ada/exp_dist.ads", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54838d1f88d0e162089a86d2055bd70aa49fff54/gcc%2Fada%2Fexp_dist.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54838d1f88d0e162089a86d2055bd70aa49fff54/gcc%2Fada%2Fexp_dist.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.ads?ref=54838d1f88d0e162089a86d2055bd70aa49fff54", "patch": "@@ -129,4 +129,37 @@ package Exp_Dist is\n    --  a remote call) satisfies the requirements for being transportable\n    --  across partitions, raising Program_Error if it does not.\n \n+   ----------------------------------------------------------------\n+   -- Functions for expansion of PolyORB/DSA specific attributes --\n+   ----------------------------------------------------------------\n+\n+   function Build_From_Any_Call\n+     (Typ   : Entity_Id;\n+      N     : Node_Id;\n+      Decls : List_Id) return Node_Id;\n+   --  Build call to From_Any attribute function of type Typ with expression\n+   --  N as actual parameter. Decls is the declarations list for an appropriate\n+   --  enclosing scope of the point where the call will be inserted; if the\n+   --  From_Any attribute for Typ needs to be generated at this point, its\n+   --  declaration is appended to Decls.\n+\n+   function Build_To_Any_Call\n+     (N     : Node_Id;\n+      Decls : List_Id) return Node_Id;\n+   --  Build call to To_Any attribute function with expression as actual\n+   --  parameter. Decls is the declarations list for an appropriate\n+   --  enclosing scope of the point where the call will be inserted; if\n+   --  the To_Any attribute for Typ needs to be generated at this point,\n+   --  its declaration is appended to Decls.\n+\n+   function Build_TypeCode_Call\n+     (Loc   : Source_Ptr;\n+      Typ   : Entity_Id;\n+      Decls : List_Id) return Node_Id;\n+   --  Build call to TypeCode attribute function for Typ. Decls is the\n+   --  declarations list for an appropriate enclosing scope of the point\n+   --  where the call will be inserted; if the To_Any attribute for Typ\n+   --  needs to be generated at this point, its declaration is appended\n+   --  to Decls.\n+\n end Exp_Dist;"}, {"sha": "34e840659072b5d6db04076384c97ef60a9b280f", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54838d1f88d0e162089a86d2055bd70aa49fff54/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54838d1f88d0e162089a86d2055bd70aa49fff54/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=54838d1f88d0e162089a86d2055bd70aa49fff54", "patch": "@@ -209,6 +209,7 @@ package Rtsfind is\n       System_Compare_Array_Unsigned_64,\n       System_Compare_Array_Unsigned_8,\n       System_DSA_Services,\n+      System_DSA_Types,\n       System_Exception_Table,\n       System_Exceptions,\n       System_Exn_Int,\n@@ -696,6 +697,8 @@ package Rtsfind is\n      RE_Get_Local_Partition_Id,          -- System.DSA_Services\n      RE_Get_Passive_Partition_Id,        -- System.DSA_Services\n \n+     RE_Any_Content_Ptr,                 -- System.DSA_Types\n+\n      RE_Register_Exception,              -- System.Exception_Table\n \n      RE_Local_Raise,                     -- System.Exceptions\n@@ -1157,6 +1160,7 @@ package Rtsfind is\n      RE_BS_To_Any,                       -- System.Partition_Interface\n      RE_Any_To_BS,                       -- System.Partition_Interface\n \n+     RE_FA_A,                            -- System.Partition_Interface\n      RE_FA_B,                            -- System.Partition_Interface\n      RE_FA_C,                            -- System.Partition_Interface\n      RE_FA_F,                            -- System.Partition_Interface\n@@ -1205,7 +1209,7 @@ package Rtsfind is\n      RE_TC_Build,                        -- System.Partition_Interface\n      RE_Get_TC,                          -- System.Partition_Interface\n      RE_Set_TC,                          -- System.Partition_Interface\n-     RE_TC_Any,                          -- System.Partition_Interface\n+     RE_TC_A,                            -- System.Partition_Interface\n      RE_TC_B,                            -- System.Partition_Interface\n      RE_TC_C,                            -- System.Partition_Interface\n      RE_TC_F,                            -- System.Partition_Interface\n@@ -1850,6 +1854,8 @@ package Rtsfind is\n      RE_Get_Local_Partition_Id           => System_DSA_Services,\n      RE_Get_Passive_Partition_Id         => System_DSA_Services,\n \n+     RE_Any_Content_Ptr                  => System_DSA_Types,\n+\n      RE_Register_Exception               => System_Exception_Table,\n \n      RE_Local_Raise                      => System_Exceptions,\n@@ -2302,6 +2308,7 @@ package Rtsfind is\n      RE_BS_To_Any                        => System_Partition_Interface,\n      RE_Any_To_BS                        => System_Partition_Interface,\n \n+     RE_FA_A                             => System_Partition_Interface,\n      RE_FA_B                             => System_Partition_Interface,\n      RE_FA_C                             => System_Partition_Interface,\n      RE_FA_F                             => System_Partition_Interface,\n@@ -2350,7 +2357,7 @@ package Rtsfind is\n      RE_TC_Build                         => System_Partition_Interface,\n      RE_Get_TC                           => System_Partition_Interface,\n      RE_Set_TC                           => System_Partition_Interface,\n-     RE_TC_Any                           => System_Partition_Interface,\n+     RE_TC_A                             => System_Partition_Interface,\n      RE_TC_B                             => System_Partition_Interface,\n      RE_TC_C                             => System_Partition_Interface,\n      RE_TC_F                             => System_Partition_Interface,"}, {"sha": "30684916644972507289614fcf06927690c0f8f9", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54838d1f88d0e162089a86d2055bd70aa49fff54/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54838d1f88d0e162089a86d2055bd70aa49fff54/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=54838d1f88d0e162089a86d2055bd70aa49fff54", "patch": "@@ -315,6 +315,9 @@ package body Sem_Attr is\n       --  corresponding possible defined attribute function (e.g. for the\n       --  Read attribute, Nam will be TSS_Stream_Read).\n \n+      procedure Check_PolyORB_Attribute;\n+      --  Validity checking for PolyORB/DSA attribute\n+\n       procedure Check_Task_Prefix;\n       --  Verify that prefix of attribute N is a task or task type\n \n@@ -1380,6 +1383,23 @@ package body Sem_Attr is\n          end if;\n       end Check_Object_Reference;\n \n+      ----------------------------\n+      -- Check_PolyORB_Attribute --\n+      ----------------------------\n+\n+      procedure Check_PolyORB_Attribute is\n+      begin\n+         Validate_Non_Static_Attribute_Function_Call;\n+\n+         Check_Type;\n+         Check_Not_CPP_Type;\n+\n+         if Get_PCS_Name /= Name_PolyORB_DSA then\n+            Error_Attr\n+              (\"attribute% requires the 'Poly'O'R'B 'P'C'S\", N);\n+         end if;\n+      end Check_PolyORB_Attribute;\n+\n       ------------------------\n       -- Check_Program_Unit --\n       ------------------------\n@@ -2976,6 +2996,15 @@ package body Sem_Attr is\n          Set_Etype (N, P_Base_Type);\n          Resolve (E1, P_Base_Type);\n \n+      --------------\n+      -- From_Any --\n+      --------------\n+\n+      when Attribute_From_Any =>\n+         Check_E1;\n+         Check_PolyORB_Attribute;\n+         Set_Etype (N, P_Base_Type);\n+\n       -----------------------\n       -- Has_Access_Values --\n       -----------------------\n@@ -4238,6 +4267,15 @@ package body Sem_Attr is\n          Analyze_And_Resolve (E1, Any_Integer);\n          Set_Etype (N, RTE (RE_Address));\n \n+      ------------\n+      -- To_Any --\n+      ------------\n+\n+      when Attribute_To_Any =>\n+         Check_E1;\n+         Check_PolyORB_Attribute;\n+         Set_Etype (N, RTE (RE_Any));\n+\n       ----------------\n       -- Truncation --\n       ----------------\n@@ -4257,6 +4295,15 @@ package body Sem_Attr is\n          Check_Not_Incomplete_Type;\n          Set_Etype (N, RTE (RE_Type_Class));\n \n+      ------------\n+      -- To_Any --\n+      ------------\n+\n+      when Attribute_TypeCode =>\n+         Check_E0;\n+         Check_PolyORB_Attribute;\n+         Set_Etype (N, RTE (RE_TypeCode));\n+\n       -----------------\n       -- UET_Address --\n       -----------------\n@@ -7253,6 +7300,13 @@ package body Sem_Attr is\n          end if;\n       end Width;\n \n+      --  The following attributes denote function that cannot be folded\n+\n+      when Attribute_From_Any |\n+           Attribute_To_Any   |\n+           Attribute_TypeCode =>\n+         null;\n+\n       --  The following attributes can never be folded, and furthermore we\n       --  should not even have entered the case statement for any of these.\n       --  Note that in some cases, the values have already been folded as"}, {"sha": "d038e4372a4c9ba2d9bbacc854627dfcd9977263", "filename": "gcc/ada/snames.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54838d1f88d0e162089a86d2055bd70aa49fff54/gcc%2Fada%2Fsnames.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54838d1f88d0e162089a86d2055bd70aa49fff54/gcc%2Fada%2Fsnames.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.adb?ref=54838d1f88d0e162089a86d2055bd70aa49fff54", "patch": "@@ -104,9 +104,6 @@ package body Snames is\n      \"finalize#\" &\n      \"next#\" &\n      \"prev#\" &\n-     \"_typecode#\" &\n-     \"_from_any#\" &\n-     \"_to_any#\" &\n      \"allocate#\" &\n      \"deallocate#\" &\n      \"dereference#\" &\n@@ -557,6 +554,7 @@ package body Snames is\n      \"copy_sign#\" &\n      \"floor#\" &\n      \"fraction#\" &\n+     \"from_any#\" &\n      \"image#\" &\n      \"input#\" &\n      \"machine#\" &\n@@ -567,7 +565,9 @@ package body Snames is\n      \"remainder#\" &\n      \"rounding#\" &\n      \"succ#\" &\n+     \"to_any#\" &\n      \"truncation#\" &\n+     \"typecode#\" &\n      \"value#\" &\n      \"wide_image#\" &\n      \"wide_wide_image#\" &"}, {"sha": "8037ee18934d239e4be406c210dda48aeca4d114", "filename": "gcc/ada/snames.ads", "status": "modified", "additions": 481, "deletions": 481, "changes": 962, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54838d1f88d0e162089a86d2055bd70aa49fff54/gcc%2Fada%2Fsnames.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54838d1f88d0e162089a86d2055bd70aa49fff54/gcc%2Fada%2Fsnames.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads?ref=54838d1f88d0e162089a86d2055bd70aa49fff54", "patch": "@@ -40,7 +40,7 @@ package Snames is\n --  the definitions of some enumeration types whose definitions are tied to\n --  the order of these preset names.\n \n---  WARNING: There is a C file, a-snames.h which duplicates some of the\n+--  WARNING: There is a C file, snames.h which duplicates some of the\n --  definitions in this file and must be kept properly synchronized.\n --  If you change this package, you should run xsnames.\n \n@@ -199,116 +199,110 @@ package Snames is\n    Name_Next                           : constant Name_Id := N + 044;\n    Name_Prev                           : constant Name_Id := N + 045;\n \n-   --  Names of TSS routines for implementation of DSA over PolyORB\n-\n-   Name_uTypeCode                      : constant Name_Id := N + 046;\n-   Name_uFrom_Any                      : constant Name_Id := N + 047;\n-   Name_uTo_Any                        : constant Name_Id := N + 048;\n-\n    --  Names of allocation routines, also needed by expander\n \n-   Name_Allocate                       : constant Name_Id := N + 049;\n-   Name_Deallocate                     : constant Name_Id := N + 050;\n-   Name_Dereference                    : constant Name_Id := N + 051;\n+   Name_Allocate                       : constant Name_Id := N + 046;\n+   Name_Deallocate                     : constant Name_Id := N + 047;\n+   Name_Dereference                    : constant Name_Id := N + 048;\n \n    --  Names of Text_IO generic subpackages (see Rtsfind.Text_IO_Kludge)\n \n-   First_Text_IO_Package               : constant Name_Id := N + 052;\n-   Name_Decimal_IO                     : constant Name_Id := N + 052;\n-   Name_Enumeration_IO                 : constant Name_Id := N + 053;\n-   Name_Fixed_IO                       : constant Name_Id := N + 054;\n-   Name_Float_IO                       : constant Name_Id := N + 055;\n-   Name_Integer_IO                     : constant Name_Id := N + 056;\n-   Name_Modular_IO                     : constant Name_Id := N + 057;\n-   Last_Text_IO_Package                : constant Name_Id := N + 057;\n+   First_Text_IO_Package               : constant Name_Id := N + 049;\n+   Name_Decimal_IO                     : constant Name_Id := N + 049;\n+   Name_Enumeration_IO                 : constant Name_Id := N + 050;\n+   Name_Fixed_IO                       : constant Name_Id := N + 051;\n+   Name_Float_IO                       : constant Name_Id := N + 052;\n+   Name_Integer_IO                     : constant Name_Id := N + 053;\n+   Name_Modular_IO                     : constant Name_Id := N + 054;\n+   Last_Text_IO_Package                : constant Name_Id := N + 054;\n \n    subtype Text_IO_Package_Name is Name_Id\n      range First_Text_IO_Package .. Last_Text_IO_Package;\n \n    --  Some miscellaneous names used for error detection/recovery\n \n-   Name_Const                          : constant Name_Id := N + 058;\n-   Name_Error                          : constant Name_Id := N + 059;\n-   Name_Go                             : constant Name_Id := N + 060;\n-   Name_Put                            : constant Name_Id := N + 061;\n-   Name_Put_Line                       : constant Name_Id := N + 062;\n-   Name_To                             : constant Name_Id := N + 063;\n+   Name_Const                          : constant Name_Id := N + 055;\n+   Name_Error                          : constant Name_Id := N + 056;\n+   Name_Go                             : constant Name_Id := N + 057;\n+   Name_Put                            : constant Name_Id := N + 058;\n+   Name_Put_Line                       : constant Name_Id := N + 059;\n+   Name_To                             : constant Name_Id := N + 060;\n \n    --  Names for packages that are treated specially by the compiler\n \n-   Name_Exception_Traces               : constant Name_Id := N + 064;\n-   Name_Finalization                   : constant Name_Id := N + 065;\n-   Name_Finalization_Root              : constant Name_Id := N + 066;\n-   Name_Interfaces                     : constant Name_Id := N + 067;\n-   Name_Most_Recent_Exception          : constant Name_Id := N + 068;\n-   Name_Standard                       : constant Name_Id := N + 069;\n-   Name_System                         : constant Name_Id := N + 070;\n-   Name_Text_IO                        : constant Name_Id := N + 071;\n-   Name_Wide_Text_IO                   : constant Name_Id := N + 072;\n-   Name_Wide_Wide_Text_IO              : constant Name_Id := N + 073;\n+   Name_Exception_Traces               : constant Name_Id := N + 061;\n+   Name_Finalization                   : constant Name_Id := N + 062;\n+   Name_Finalization_Root              : constant Name_Id := N + 063;\n+   Name_Interfaces                     : constant Name_Id := N + 064;\n+   Name_Most_Recent_Exception          : constant Name_Id := N + 065;\n+   Name_Standard                       : constant Name_Id := N + 066;\n+   Name_System                         : constant Name_Id := N + 067;\n+   Name_Text_IO                        : constant Name_Id := N + 068;\n+   Name_Wide_Text_IO                   : constant Name_Id := N + 069;\n+   Name_Wide_Wide_Text_IO              : constant Name_Id := N + 070;\n \n    --  Names of implementations of the distributed systems annex\n \n-   First_PCS_Name                      : constant Name_Id := N + 074;\n-   Name_No_DSA                         : constant Name_Id := N + 074;\n-   Name_GARLIC_DSA                     : constant Name_Id := N + 075;\n-   Name_PolyORB_DSA                    : constant Name_Id := N + 076;\n-   Last_PCS_Name                       : constant Name_Id := N + 076;\n+   First_PCS_Name                      : constant Name_Id := N + 071;\n+   Name_No_DSA                         : constant Name_Id := N + 071;\n+   Name_GARLIC_DSA                     : constant Name_Id := N + 072;\n+   Name_PolyORB_DSA                    : constant Name_Id := N + 073;\n+   Last_PCS_Name                       : constant Name_Id := N + 073;\n \n    subtype PCS_Names is Name_Id\n      range First_PCS_Name .. Last_PCS_Name;\n \n    --  Names of identifiers used in expanding distribution stubs\n \n-   Name_Addr                           : constant Name_Id := N + 077;\n-   Name_Async                          : constant Name_Id := N + 078;\n-   Name_Get_Active_Partition_ID        : constant Name_Id := N + 079;\n-   Name_Get_RCI_Package_Receiver       : constant Name_Id := N + 080;\n-   Name_Get_RCI_Package_Ref            : constant Name_Id := N + 081;\n-   Name_Origin                         : constant Name_Id := N + 082;\n-   Name_Params                         : constant Name_Id := N + 083;\n-   Name_Partition                      : constant Name_Id := N + 084;\n-   Name_Partition_Interface            : constant Name_Id := N + 085;\n-   Name_Ras                            : constant Name_Id := N + 086;\n-   Name_uCall                          : constant Name_Id := N + 087;\n-   Name_RCI_Name                       : constant Name_Id := N + 088;\n-   Name_Receiver                       : constant Name_Id := N + 089;\n-   Name_Rpc                            : constant Name_Id := N + 090;\n-   Name_Subp_Id                        : constant Name_Id := N + 091;\n-   Name_Operation                      : constant Name_Id := N + 092;\n-   Name_Argument                       : constant Name_Id := N + 093;\n-   Name_Arg_Modes                      : constant Name_Id := N + 094;\n-   Name_Handler                        : constant Name_Id := N + 095;\n-   Name_Target                         : constant Name_Id := N + 096;\n-   Name_Req                            : constant Name_Id := N + 097;\n-   Name_Obj_TypeCode                   : constant Name_Id := N + 098;\n-   Name_Stub                           : constant Name_Id := N + 099;\n+   Name_Addr                           : constant Name_Id := N + 074;\n+   Name_Async                          : constant Name_Id := N + 075;\n+   Name_Get_Active_Partition_ID        : constant Name_Id := N + 076;\n+   Name_Get_RCI_Package_Receiver       : constant Name_Id := N + 077;\n+   Name_Get_RCI_Package_Ref            : constant Name_Id := N + 078;\n+   Name_Origin                         : constant Name_Id := N + 079;\n+   Name_Params                         : constant Name_Id := N + 080;\n+   Name_Partition                      : constant Name_Id := N + 081;\n+   Name_Partition_Interface            : constant Name_Id := N + 082;\n+   Name_Ras                            : constant Name_Id := N + 083;\n+   Name_uCall                          : constant Name_Id := N + 084;\n+   Name_RCI_Name                       : constant Name_Id := N + 085;\n+   Name_Receiver                       : constant Name_Id := N + 086;\n+   Name_Rpc                            : constant Name_Id := N + 087;\n+   Name_Subp_Id                        : constant Name_Id := N + 088;\n+   Name_Operation                      : constant Name_Id := N + 089;\n+   Name_Argument                       : constant Name_Id := N + 090;\n+   Name_Arg_Modes                      : constant Name_Id := N + 091;\n+   Name_Handler                        : constant Name_Id := N + 092;\n+   Name_Target                         : constant Name_Id := N + 093;\n+   Name_Req                            : constant Name_Id := N + 094;\n+   Name_Obj_TypeCode                   : constant Name_Id := N + 095;\n+   Name_Stub                           : constant Name_Id := N + 096;\n \n    --  Operator Symbol entries. The actual names have an upper case O at\n    --  the start in place of the Op_ prefix (e.g. the actual name that\n    --  corresponds to Name_Op_Abs is \"Oabs\".\n \n-   First_Operator_Name                 : constant Name_Id := N + 100;\n-   Name_Op_Abs                         : constant Name_Id := N + 100; -- \"abs\"\n-   Name_Op_And                         : constant Name_Id := N + 101; -- \"and\"\n-   Name_Op_Mod                         : constant Name_Id := N + 102; -- \"mod\"\n-   Name_Op_Not                         : constant Name_Id := N + 103; -- \"not\"\n-   Name_Op_Or                          : constant Name_Id := N + 104; -- \"or\"\n-   Name_Op_Rem                         : constant Name_Id := N + 105; -- \"rem\"\n-   Name_Op_Xor                         : constant Name_Id := N + 106; -- \"xor\"\n-   Name_Op_Eq                          : constant Name_Id := N + 107; -- \"=\"\n-   Name_Op_Ne                          : constant Name_Id := N + 108; -- \"/=\"\n-   Name_Op_Lt                          : constant Name_Id := N + 109; -- \"<\"\n-   Name_Op_Le                          : constant Name_Id := N + 110; -- \"<=\"\n-   Name_Op_Gt                          : constant Name_Id := N + 111; -- \">\"\n-   Name_Op_Ge                          : constant Name_Id := N + 112; -- \">=\"\n-   Name_Op_Add                         : constant Name_Id := N + 113; -- \"+\"\n-   Name_Op_Subtract                    : constant Name_Id := N + 114; -- \"-\"\n-   Name_Op_Concat                      : constant Name_Id := N + 115; -- \"&\"\n-   Name_Op_Multiply                    : constant Name_Id := N + 116; -- \"*\"\n-   Name_Op_Divide                      : constant Name_Id := N + 117; -- \"/\"\n-   Name_Op_Expon                       : constant Name_Id := N + 118; -- \"**\"\n-   Last_Operator_Name                  : constant Name_Id := N + 118;\n+   First_Operator_Name                 : constant Name_Id := N + 097;\n+   Name_Op_Abs                         : constant Name_Id := N + 097; -- \"abs\"\n+   Name_Op_And                         : constant Name_Id := N + 098; -- \"and\"\n+   Name_Op_Mod                         : constant Name_Id := N + 099; -- \"mod\"\n+   Name_Op_Not                         : constant Name_Id := N + 100; -- \"not\"\n+   Name_Op_Or                          : constant Name_Id := N + 101; -- \"or\"\n+   Name_Op_Rem                         : constant Name_Id := N + 102; -- \"rem\"\n+   Name_Op_Xor                         : constant Name_Id := N + 103; -- \"xor\"\n+   Name_Op_Eq                          : constant Name_Id := N + 104; -- \"=\"\n+   Name_Op_Ne                          : constant Name_Id := N + 105; -- \"/=\"\n+   Name_Op_Lt                          : constant Name_Id := N + 106; -- \"<\"\n+   Name_Op_Le                          : constant Name_Id := N + 107; -- \"<=\"\n+   Name_Op_Gt                          : constant Name_Id := N + 108; -- \">\"\n+   Name_Op_Ge                          : constant Name_Id := N + 109; -- \">=\"\n+   Name_Op_Add                         : constant Name_Id := N + 110; -- \"+\"\n+   Name_Op_Subtract                    : constant Name_Id := N + 111; -- \"-\"\n+   Name_Op_Concat                      : constant Name_Id := N + 112; -- \"&\"\n+   Name_Op_Multiply                    : constant Name_Id := N + 113; -- \"*\"\n+   Name_Op_Divide                      : constant Name_Id := N + 114; -- \"/\"\n+   Name_Op_Expon                       : constant Name_Id := N + 115; -- \"**\"\n+   Last_Operator_Name                  : constant Name_Id := N + 115;\n \n    --  Names for all pragmas recognized by GNAT. The entries with the comment\n    --  \"Ada 83\" are pragmas that are defined in Ada 83, but not in Ada 95.\n@@ -331,182 +325,182 @@ package Snames is\n    --  only in GNAT for the AAMP. They are ignored in other versions with\n    --  appropriate warnings.\n \n-   First_Pragma_Name                   : constant Name_Id := N + 119;\n+   First_Pragma_Name                   : constant Name_Id := N + 116;\n \n    --  Configuration pragmas are grouped at start\n \n-   Name_Ada_83                         : constant Name_Id := N + 119; -- GNAT\n-   Name_Ada_95                         : constant Name_Id := N + 120; -- GNAT\n-   Name_Ada_05                         : constant Name_Id := N + 121; -- GNAT\n-   Name_Ada_2005                       : constant Name_Id := N + 122; -- GNAT\n-   Name_Assertion_Policy               : constant Name_Id := N + 123; -- Ada 05\n-   Name_C_Pass_By_Copy                 : constant Name_Id := N + 124; -- GNAT\n-   Name_Check_Name                     : constant Name_Id := N + 125; -- GNAT\n-   Name_Check_Policy                   : constant Name_Id := N + 126; -- GNAT\n-   Name_Compile_Time_Error             : constant Name_Id := N + 127; -- GNAT\n-   Name_Compile_Time_Warning           : constant Name_Id := N + 128; -- GNAT\n-   Name_Compiler_Unit                  : constant Name_Id := N + 129; -- GNAT\n-   Name_Component_Alignment            : constant Name_Id := N + 130; -- GNAT\n-   Name_Convention_Identifier          : constant Name_Id := N + 131; -- GNAT\n-   Name_Debug_Policy                   : constant Name_Id := N + 132; -- GNAT\n-   Name_Detect_Blocking                : constant Name_Id := N + 133; -- Ada 05\n-   Name_Discard_Names                  : constant Name_Id := N + 134;\n-   Name_Elaboration_Checks             : constant Name_Id := N + 135; -- GNAT\n-   Name_Eliminate                      : constant Name_Id := N + 136; -- GNAT\n-   Name_Extend_System                  : constant Name_Id := N + 137; -- GNAT\n-   Name_Extensions_Allowed             : constant Name_Id := N + 138; -- GNAT\n-   Name_External_Name_Casing           : constant Name_Id := N + 139; -- GNAT\n+   Name_Ada_83                         : constant Name_Id := N + 116; -- GNAT\n+   Name_Ada_95                         : constant Name_Id := N + 117; -- GNAT\n+   Name_Ada_05                         : constant Name_Id := N + 118; -- GNAT\n+   Name_Ada_2005                       : constant Name_Id := N + 119; -- GNAT\n+   Name_Assertion_Policy               : constant Name_Id := N + 120; -- Ada 05\n+   Name_C_Pass_By_Copy                 : constant Name_Id := N + 121; -- GNAT\n+   Name_Check_Name                     : constant Name_Id := N + 122; -- GNAT\n+   Name_Check_Policy                   : constant Name_Id := N + 123; -- GNAT\n+   Name_Compile_Time_Error             : constant Name_Id := N + 124; -- GNAT\n+   Name_Compile_Time_Warning           : constant Name_Id := N + 125; -- GNAT\n+   Name_Compiler_Unit                  : constant Name_Id := N + 126; -- GNAT\n+   Name_Component_Alignment            : constant Name_Id := N + 127; -- GNAT\n+   Name_Convention_Identifier          : constant Name_Id := N + 128; -- GNAT\n+   Name_Debug_Policy                   : constant Name_Id := N + 129; -- GNAT\n+   Name_Detect_Blocking                : constant Name_Id := N + 130; -- Ada 05\n+   Name_Discard_Names                  : constant Name_Id := N + 131;\n+   Name_Elaboration_Checks             : constant Name_Id := N + 132; -- GNAT\n+   Name_Eliminate                      : constant Name_Id := N + 133; -- GNAT\n+   Name_Extend_System                  : constant Name_Id := N + 134; -- GNAT\n+   Name_Extensions_Allowed             : constant Name_Id := N + 135; -- GNAT\n+   Name_External_Name_Casing           : constant Name_Id := N + 136; -- GNAT\n \n    --  Note: Fast_Math is not in this list because its name matches   -- GNAT\n    --  the name of the corresponding attribute. However, it is\n    --  included in the definition of the type Pragma_Id, and the\n    --  functions Get_Pragma_Id, Is_[Configuration_]Pragma_Id, and\n    --  correctly recognize and process Fast_Math.\n \n-   Name_Favor_Top_Level                : constant Name_Id := N + 140; -- GNAT\n-   Name_Float_Representation           : constant Name_Id := N + 141; -- GNAT\n-   Name_Implicit_Packing               : constant Name_Id := N + 142; -- GNAT\n-   Name_Initialize_Scalars             : constant Name_Id := N + 143; -- GNAT\n-   Name_Interrupt_State                : constant Name_Id := N + 144; -- GNAT\n-   Name_License                        : constant Name_Id := N + 145; -- GNAT\n-   Name_Locking_Policy                 : constant Name_Id := N + 146;\n-   Name_Long_Float                     : constant Name_Id := N + 147; -- VMS\n-   Name_No_Run_Time                    : constant Name_Id := N + 148; -- GNAT\n-   Name_No_Strict_Aliasing             : constant Name_Id := N + 149; -- GNAT\n-   Name_Normalize_Scalars              : constant Name_Id := N + 150;\n-   Name_Optimize_Alignment             : constant Name_Id := N + 151; -- GNAT\n-   Name_Persistent_BSS                 : constant Name_Id := N + 152; -- GNAT\n-   Name_Polling                        : constant Name_Id := N + 153; -- GNAT\n-   Name_Priority_Specific_Dispatching  : constant Name_Id := N + 154; -- Ada 05\n-   Name_Profile                        : constant Name_Id := N + 155; -- Ada 05\n-   Name_Profile_Warnings               : constant Name_Id := N + 156; -- GNAT\n-   Name_Propagate_Exceptions           : constant Name_Id := N + 157; -- GNAT\n-   Name_Queuing_Policy                 : constant Name_Id := N + 158;\n-   Name_Ravenscar                      : constant Name_Id := N + 159; -- GNAT\n-   Name_Restricted_Run_Time            : constant Name_Id := N + 160; -- GNAT\n-   Name_Restrictions                   : constant Name_Id := N + 161;\n-   Name_Restriction_Warnings           : constant Name_Id := N + 162; -- GNAT\n-   Name_Reviewable                     : constant Name_Id := N + 163;\n-   Name_Source_File_Name               : constant Name_Id := N + 164; -- GNAT\n-   Name_Source_File_Name_Project       : constant Name_Id := N + 165; -- GNAT\n-   Name_Style_Checks                   : constant Name_Id := N + 166; -- GNAT\n-   Name_Suppress                       : constant Name_Id := N + 167;\n-   Name_Suppress_Exception_Locations   : constant Name_Id := N + 168; -- GNAT\n-   Name_Task_Dispatching_Policy        : constant Name_Id := N + 169;\n-   Name_Universal_Data                 : constant Name_Id := N + 170; -- AAMP\n-   Name_Unsuppress                     : constant Name_Id := N + 171; -- Ada 05\n-   Name_Use_VADS_Size                  : constant Name_Id := N + 172; -- GNAT\n-   Name_Validity_Checks                : constant Name_Id := N + 173; -- GNAT\n-   Name_Warnings                       : constant Name_Id := N + 174; -- GNAT\n-   Name_Wide_Character_Encoding        : constant Name_Id := N + 175; -- GNAT\n-   Last_Configuration_Pragma_Name      : constant Name_Id := N + 175;\n+   Name_Favor_Top_Level                : constant Name_Id := N + 137; -- GNAT\n+   Name_Float_Representation           : constant Name_Id := N + 138; -- GNAT\n+   Name_Implicit_Packing               : constant Name_Id := N + 139; -- GNAT\n+   Name_Initialize_Scalars             : constant Name_Id := N + 140; -- GNAT\n+   Name_Interrupt_State                : constant Name_Id := N + 141; -- GNAT\n+   Name_License                        : constant Name_Id := N + 142; -- GNAT\n+   Name_Locking_Policy                 : constant Name_Id := N + 143;\n+   Name_Long_Float                     : constant Name_Id := N + 144; -- VMS\n+   Name_No_Run_Time                    : constant Name_Id := N + 145; -- GNAT\n+   Name_No_Strict_Aliasing             : constant Name_Id := N + 146; -- GNAT\n+   Name_Normalize_Scalars              : constant Name_Id := N + 147;\n+   Name_Optimize_Alignment             : constant Name_Id := N + 148; -- GNAT\n+   Name_Persistent_BSS                 : constant Name_Id := N + 149; -- GNAT\n+   Name_Polling                        : constant Name_Id := N + 150; -- GNAT\n+   Name_Priority_Specific_Dispatching  : constant Name_Id := N + 151; -- Ada 05\n+   Name_Profile                        : constant Name_Id := N + 152; -- Ada 05\n+   Name_Profile_Warnings               : constant Name_Id := N + 153; -- GNAT\n+   Name_Propagate_Exceptions           : constant Name_Id := N + 154; -- GNAT\n+   Name_Queuing_Policy                 : constant Name_Id := N + 155;\n+   Name_Ravenscar                      : constant Name_Id := N + 156; -- GNAT\n+   Name_Restricted_Run_Time            : constant Name_Id := N + 157; -- GNAT\n+   Name_Restrictions                   : constant Name_Id := N + 158;\n+   Name_Restriction_Warnings           : constant Name_Id := N + 159; -- GNAT\n+   Name_Reviewable                     : constant Name_Id := N + 160;\n+   Name_Source_File_Name               : constant Name_Id := N + 161; -- GNAT\n+   Name_Source_File_Name_Project       : constant Name_Id := N + 162; -- GNAT\n+   Name_Style_Checks                   : constant Name_Id := N + 163; -- GNAT\n+   Name_Suppress                       : constant Name_Id := N + 164;\n+   Name_Suppress_Exception_Locations   : constant Name_Id := N + 165; -- GNAT\n+   Name_Task_Dispatching_Policy        : constant Name_Id := N + 166;\n+   Name_Universal_Data                 : constant Name_Id := N + 167; -- AAMP\n+   Name_Unsuppress                     : constant Name_Id := N + 168; -- Ada 05\n+   Name_Use_VADS_Size                  : constant Name_Id := N + 169; -- GNAT\n+   Name_Validity_Checks                : constant Name_Id := N + 170; -- GNAT\n+   Name_Warnings                       : constant Name_Id := N + 171; -- GNAT\n+   Name_Wide_Character_Encoding        : constant Name_Id := N + 172; -- GNAT\n+   Last_Configuration_Pragma_Name      : constant Name_Id := N + 172;\n \n    --  Remaining pragma names\n \n-   Name_Abort_Defer                    : constant Name_Id := N + 176; -- GNAT\n-   Name_All_Calls_Remote               : constant Name_Id := N + 177;\n-   Name_Annotate                       : constant Name_Id := N + 178; -- GNAT\n+   Name_Abort_Defer                    : constant Name_Id := N + 173; -- GNAT\n+   Name_All_Calls_Remote               : constant Name_Id := N + 174;\n+   Name_Annotate                       : constant Name_Id := N + 175; -- GNAT\n \n    --  Note: AST_Entry is not in this list because its name matches   -- VMS\n    --  the name of the corresponding attribute. However, it is\n    --  included in the definition of the type Pragma_Id, and the\n    --  functions Get_Pragma_Id and Is_Pragma_Id correctly recognize\n    --  and process Name_AST_Entry.\n \n-   Name_Assert                         : constant Name_Id := N + 179; -- Ada 05\n-   Name_Asynchronous                   : constant Name_Id := N + 180;\n-   Name_Atomic                         : constant Name_Id := N + 181;\n-   Name_Atomic_Components              : constant Name_Id := N + 182;\n-   Name_Attach_Handler                 : constant Name_Id := N + 183;\n-   Name_Check                          : constant Name_Id := N + 184; -- GNAT\n-   Name_CIL_Constructor                : constant Name_Id := N + 185; -- GNAT\n-   Name_Comment                        : constant Name_Id := N + 186; -- GNAT\n-   Name_Common_Object                  : constant Name_Id := N + 187; -- GNAT\n-   Name_Complete_Representation        : constant Name_Id := N + 188; -- GNAT\n-   Name_Complex_Representation         : constant Name_Id := N + 189; -- GNAT\n-   Name_Controlled                     : constant Name_Id := N + 190;\n-   Name_Convention                     : constant Name_Id := N + 191;\n-   Name_CPP_Class                      : constant Name_Id := N + 192; -- GNAT\n-   Name_CPP_Constructor                : constant Name_Id := N + 193; -- GNAT\n-   Name_CPP_Virtual                    : constant Name_Id := N + 194; -- GNAT\n-   Name_CPP_Vtable                     : constant Name_Id := N + 195; -- GNAT\n-   Name_Debug                          : constant Name_Id := N + 196; -- GNAT\n-   Name_Elaborate                      : constant Name_Id := N + 197; -- Ada 83\n-   Name_Elaborate_All                  : constant Name_Id := N + 198;\n-   Name_Elaborate_Body                 : constant Name_Id := N + 199;\n-   Name_Export                         : constant Name_Id := N + 200;\n-   Name_Export_Exception               : constant Name_Id := N + 201; -- VMS\n-   Name_Export_Function                : constant Name_Id := N + 202; -- GNAT\n-   Name_Export_Object                  : constant Name_Id := N + 203; -- GNAT\n-   Name_Export_Procedure               : constant Name_Id := N + 204; -- GNAT\n-   Name_Export_Value                   : constant Name_Id := N + 205; -- GNAT\n-   Name_Export_Valued_Procedure        : constant Name_Id := N + 206; -- GNAT\n-   Name_External                       : constant Name_Id := N + 207; -- GNAT\n-   Name_Finalize_Storage_Only          : constant Name_Id := N + 208; -- GNAT\n-   Name_Ident                          : constant Name_Id := N + 209; -- VMS\n-   Name_Implemented_By_Entry           : constant Name_Id := N + 210; -- Ada 05\n-   Name_Import                         : constant Name_Id := N + 211;\n-   Name_Import_Exception               : constant Name_Id := N + 212; -- VMS\n-   Name_Import_Function                : constant Name_Id := N + 213; -- GNAT\n-   Name_Import_Object                  : constant Name_Id := N + 214; -- GNAT\n-   Name_Import_Procedure               : constant Name_Id := N + 215; -- GNAT\n-   Name_Import_Valued_Procedure        : constant Name_Id := N + 216; -- GNAT\n-   Name_Inline                         : constant Name_Id := N + 217;\n-   Name_Inline_Always                  : constant Name_Id := N + 218; -- GNAT\n-   Name_Inline_Generic                 : constant Name_Id := N + 219; -- GNAT\n-   Name_Inspection_Point               : constant Name_Id := N + 220;\n+   Name_Assert                         : constant Name_Id := N + 176; -- Ada 05\n+   Name_Asynchronous                   : constant Name_Id := N + 177;\n+   Name_Atomic                         : constant Name_Id := N + 178;\n+   Name_Atomic_Components              : constant Name_Id := N + 179;\n+   Name_Attach_Handler                 : constant Name_Id := N + 180;\n+   Name_Check                          : constant Name_Id := N + 181; -- GNAT\n+   Name_CIL_Constructor                : constant Name_Id := N + 182; -- GNAT\n+   Name_Comment                        : constant Name_Id := N + 183; -- GNAT\n+   Name_Common_Object                  : constant Name_Id := N + 184; -- GNAT\n+   Name_Complete_Representation        : constant Name_Id := N + 185; -- GNAT\n+   Name_Complex_Representation         : constant Name_Id := N + 186; -- GNAT\n+   Name_Controlled                     : constant Name_Id := N + 187;\n+   Name_Convention                     : constant Name_Id := N + 188;\n+   Name_CPP_Class                      : constant Name_Id := N + 189; -- GNAT\n+   Name_CPP_Constructor                : constant Name_Id := N + 190; -- GNAT\n+   Name_CPP_Virtual                    : constant Name_Id := N + 191; -- GNAT\n+   Name_CPP_Vtable                     : constant Name_Id := N + 192; -- GNAT\n+   Name_Debug                          : constant Name_Id := N + 193; -- GNAT\n+   Name_Elaborate                      : constant Name_Id := N + 194; -- Ada 83\n+   Name_Elaborate_All                  : constant Name_Id := N + 195;\n+   Name_Elaborate_Body                 : constant Name_Id := N + 196;\n+   Name_Export                         : constant Name_Id := N + 197;\n+   Name_Export_Exception               : constant Name_Id := N + 198; -- VMS\n+   Name_Export_Function                : constant Name_Id := N + 199; -- GNAT\n+   Name_Export_Object                  : constant Name_Id := N + 200; -- GNAT\n+   Name_Export_Procedure               : constant Name_Id := N + 201; -- GNAT\n+   Name_Export_Value                   : constant Name_Id := N + 202; -- GNAT\n+   Name_Export_Valued_Procedure        : constant Name_Id := N + 203; -- GNAT\n+   Name_External                       : constant Name_Id := N + 204; -- GNAT\n+   Name_Finalize_Storage_Only          : constant Name_Id := N + 205; -- GNAT\n+   Name_Ident                          : constant Name_Id := N + 206; -- VMS\n+   Name_Implemented_By_Entry           : constant Name_Id := N + 207; -- Ada 05\n+   Name_Import                         : constant Name_Id := N + 208;\n+   Name_Import_Exception               : constant Name_Id := N + 209; -- VMS\n+   Name_Import_Function                : constant Name_Id := N + 210; -- GNAT\n+   Name_Import_Object                  : constant Name_Id := N + 211; -- GNAT\n+   Name_Import_Procedure               : constant Name_Id := N + 212; -- GNAT\n+   Name_Import_Valued_Procedure        : constant Name_Id := N + 213; -- GNAT\n+   Name_Inline                         : constant Name_Id := N + 214;\n+   Name_Inline_Always                  : constant Name_Id := N + 215; -- GNAT\n+   Name_Inline_Generic                 : constant Name_Id := N + 216; -- GNAT\n+   Name_Inspection_Point               : constant Name_Id := N + 217;\n \n    --  Note: Interface is not in this list because its name matches   -- GNAT\n    --  an Ada 2005 keyword. However it is included in the definition\n    --  of the type Attribute_Id, and the functions Get_Pragma_Id and\n    --  Is_Pragma_Id correctly recognize and process Name_Storage_Size.\n \n-   Name_Interface_Name                 : constant Name_Id := N + 221; -- GNAT\n-   Name_Interrupt_Handler              : constant Name_Id := N + 222;\n-   Name_Interrupt_Priority             : constant Name_Id := N + 223;\n-   Name_Java_Constructor               : constant Name_Id := N + 224; -- GNAT\n-   Name_Java_Interface                 : constant Name_Id := N + 225; -- GNAT\n-   Name_Keep_Names                     : constant Name_Id := N + 226; -- GNAT\n-   Name_Link_With                      : constant Name_Id := N + 227; -- GNAT\n-   Name_Linker_Alias                   : constant Name_Id := N + 228; -- GNAT\n-   Name_Linker_Constructor             : constant Name_Id := N + 229; -- GNAT\n-   Name_Linker_Destructor              : constant Name_Id := N + 230; -- GNAT\n-   Name_Linker_Options                 : constant Name_Id := N + 231;\n-   Name_Linker_Section                 : constant Name_Id := N + 232; -- GNAT\n-   Name_List                           : constant Name_Id := N + 233;\n-   Name_Machine_Attribute              : constant Name_Id := N + 234; -- GNAT\n-   Name_Main                           : constant Name_Id := N + 235; -- GNAT\n-   Name_Main_Storage                   : constant Name_Id := N + 236; -- GNAT\n-   Name_Memory_Size                    : constant Name_Id := N + 237; -- Ada 83\n-   Name_No_Body                        : constant Name_Id := N + 238; -- GNAT\n-   Name_No_Return                      : constant Name_Id := N + 239; -- GNAT\n-   Name_Obsolescent                    : constant Name_Id := N + 240; -- GNAT\n-   Name_Optimize                       : constant Name_Id := N + 241;\n-   Name_Pack                           : constant Name_Id := N + 242;\n-   Name_Page                           : constant Name_Id := N + 243;\n-   Name_Passive                        : constant Name_Id := N + 244; -- GNAT\n-   Name_Postcondition                  : constant Name_Id := N + 245; -- GNAT\n-   Name_Precondition                   : constant Name_Id := N + 246; -- GNAT\n-   Name_Preelaborable_Initialization   : constant Name_Id := N + 247; -- Ada 05\n-   Name_Preelaborate                   : constant Name_Id := N + 248;\n-   Name_Preelaborate_05                : constant Name_Id := N + 249; -- GNAT\n+   Name_Interface_Name                 : constant Name_Id := N + 218; -- GNAT\n+   Name_Interrupt_Handler              : constant Name_Id := N + 219;\n+   Name_Interrupt_Priority             : constant Name_Id := N + 220;\n+   Name_Java_Constructor               : constant Name_Id := N + 221; -- GNAT\n+   Name_Java_Interface                 : constant Name_Id := N + 222; -- GNAT\n+   Name_Keep_Names                     : constant Name_Id := N + 223; -- GNAT\n+   Name_Link_With                      : constant Name_Id := N + 224; -- GNAT\n+   Name_Linker_Alias                   : constant Name_Id := N + 225; -- GNAT\n+   Name_Linker_Constructor             : constant Name_Id := N + 226; -- GNAT\n+   Name_Linker_Destructor              : constant Name_Id := N + 227; -- GNAT\n+   Name_Linker_Options                 : constant Name_Id := N + 228;\n+   Name_Linker_Section                 : constant Name_Id := N + 229; -- GNAT\n+   Name_List                           : constant Name_Id := N + 230;\n+   Name_Machine_Attribute              : constant Name_Id := N + 231; -- GNAT\n+   Name_Main                           : constant Name_Id := N + 232; -- GNAT\n+   Name_Main_Storage                   : constant Name_Id := N + 233; -- GNAT\n+   Name_Memory_Size                    : constant Name_Id := N + 234; -- Ada 83\n+   Name_No_Body                        : constant Name_Id := N + 235; -- GNAT\n+   Name_No_Return                      : constant Name_Id := N + 236; -- GNAT\n+   Name_Obsolescent                    : constant Name_Id := N + 237; -- GNAT\n+   Name_Optimize                       : constant Name_Id := N + 238;\n+   Name_Pack                           : constant Name_Id := N + 239;\n+   Name_Page                           : constant Name_Id := N + 240;\n+   Name_Passive                        : constant Name_Id := N + 241; -- GNAT\n+   Name_Postcondition                  : constant Name_Id := N + 242; -- GNAT\n+   Name_Precondition                   : constant Name_Id := N + 243; -- GNAT\n+   Name_Preelaborable_Initialization   : constant Name_Id := N + 244; -- Ada 05\n+   Name_Preelaborate                   : constant Name_Id := N + 245;\n+   Name_Preelaborate_05                : constant Name_Id := N + 246; -- GNAT\n \n    --  Note: Priority is not in this list because its name matches\n    --  the name of the corresponding attribute. However, it is\n    --  included in the definition of the type Pragma_Id, and the\n    --  functions Get_Pragma_Id and Is_Pragma_Id correctly recognize\n    --  and process Priority. Priority is a standard Ada 95 pragma.\n \n-   Name_Psect_Object                   : constant Name_Id := N + 250; -- VMS\n-   Name_Pure                           : constant Name_Id := N + 251;\n-   Name_Pure_05                        : constant Name_Id := N + 252; -- GNAT\n-   Name_Pure_Function                  : constant Name_Id := N + 253; -- GNAT\n-   Name_Relative_Deadline              : constant Name_Id := N + 254; -- Ada 05\n-   Name_Remote_Call_Interface          : constant Name_Id := N + 255;\n-   Name_Remote_Types                   : constant Name_Id := N + 256;\n-   Name_Share_Generic                  : constant Name_Id := N + 257; -- GNAT\n-   Name_Shared                         : constant Name_Id := N + 258; -- Ada 83\n-   Name_Shared_Passive                 : constant Name_Id := N + 259;\n+   Name_Psect_Object                   : constant Name_Id := N + 247; -- VMS\n+   Name_Pure                           : constant Name_Id := N + 248;\n+   Name_Pure_05                        : constant Name_Id := N + 249; -- GNAT\n+   Name_Pure_Function                  : constant Name_Id := N + 250; -- GNAT\n+   Name_Relative_Deadline              : constant Name_Id := N + 251; -- Ada 05\n+   Name_Remote_Call_Interface          : constant Name_Id := N + 252;\n+   Name_Remote_Types                   : constant Name_Id := N + 253;\n+   Name_Share_Generic                  : constant Name_Id := N + 254; -- GNAT\n+   Name_Shared                         : constant Name_Id := N + 255; -- Ada 83\n+   Name_Shared_Passive                 : constant Name_Id := N + 256;\n \n    --  Note: Storage_Size is not in this list because its name\n    --  matches the name of the corresponding attribute. However,\n@@ -517,30 +511,30 @@ package Snames is\n    --  Note: Storage_Unit is also omitted from the list because\n    --  of a clash with an attribute name, and is treated similarly.\n \n-   Name_Source_Reference               : constant Name_Id := N + 260; -- GNAT\n-   Name_Static_Elaboration_Desired     : constant Name_Id := N + 261; -- GNAT\n-   Name_Stream_Convert                 : constant Name_Id := N + 262; -- GNAT\n-   Name_Subtitle                       : constant Name_Id := N + 263; -- GNAT\n-   Name_Suppress_All                   : constant Name_Id := N + 264; -- GNAT\n-   Name_Suppress_Debug_Info            : constant Name_Id := N + 265; -- GNAT\n-   Name_Suppress_Initialization        : constant Name_Id := N + 266; -- GNAT\n-   Name_System_Name                    : constant Name_Id := N + 267; -- Ada 83\n-   Name_Task_Info                      : constant Name_Id := N + 268; -- GNAT\n-   Name_Task_Name                      : constant Name_Id := N + 269; -- GNAT\n-   Name_Task_Storage                   : constant Name_Id := N + 270; -- VMS\n-   Name_Time_Slice                     : constant Name_Id := N + 271; -- GNAT\n-   Name_Title                          : constant Name_Id := N + 272; -- GNAT\n-   Name_Unchecked_Union                : constant Name_Id := N + 273; -- Ada 05\n-   Name_Unimplemented_Unit             : constant Name_Id := N + 274; -- GNAT\n-   Name_Universal_Aliasing             : constant Name_Id := N + 275; -- GNAT\n-   Name_Unmodified                     : constant Name_Id := N + 276; -- GNAT\n-   Name_Unreferenced                   : constant Name_Id := N + 277; -- GNAT\n-   Name_Unreferenced_Objects           : constant Name_Id := N + 278; -- GNAT\n-   Name_Unreserve_All_Interrupts       : constant Name_Id := N + 279; -- GNAT\n-   Name_Volatile                       : constant Name_Id := N + 280;\n-   Name_Volatile_Components            : constant Name_Id := N + 281;\n-   Name_Weak_External                  : constant Name_Id := N + 282; -- GNAT\n-   Last_Pragma_Name                    : constant Name_Id := N + 282;\n+   Name_Source_Reference               : constant Name_Id := N + 257; -- GNAT\n+   Name_Static_Elaboration_Desired     : constant Name_Id := N + 258; -- GNAT\n+   Name_Stream_Convert                 : constant Name_Id := N + 259; -- GNAT\n+   Name_Subtitle                       : constant Name_Id := N + 260; -- GNAT\n+   Name_Suppress_All                   : constant Name_Id := N + 261; -- GNAT\n+   Name_Suppress_Debug_Info            : constant Name_Id := N + 262; -- GNAT\n+   Name_Suppress_Initialization        : constant Name_Id := N + 263; -- GNAT\n+   Name_System_Name                    : constant Name_Id := N + 264; -- Ada 83\n+   Name_Task_Info                      : constant Name_Id := N + 265; -- GNAT\n+   Name_Task_Name                      : constant Name_Id := N + 266; -- GNAT\n+   Name_Task_Storage                   : constant Name_Id := N + 267; -- VMS\n+   Name_Time_Slice                     : constant Name_Id := N + 268; -- GNAT\n+   Name_Title                          : constant Name_Id := N + 269; -- GNAT\n+   Name_Unchecked_Union                : constant Name_Id := N + 270; -- Ada 05\n+   Name_Unimplemented_Unit             : constant Name_Id := N + 271; -- GNAT\n+   Name_Universal_Aliasing             : constant Name_Id := N + 272; -- GNAT\n+   Name_Unmodified                     : constant Name_Id := N + 273; -- GNAT\n+   Name_Unreferenced                   : constant Name_Id := N + 274; -- GNAT\n+   Name_Unreferenced_Objects           : constant Name_Id := N + 275; -- GNAT\n+   Name_Unreserve_All_Interrupts       : constant Name_Id := N + 276; -- GNAT\n+   Name_Volatile                       : constant Name_Id := N + 277;\n+   Name_Volatile_Components            : constant Name_Id := N + 278;\n+   Name_Weak_External                  : constant Name_Id := N + 279; -- GNAT\n+   Last_Pragma_Name                    : constant Name_Id := N + 279;\n \n    --  Language convention names for pragma Convention/Export/Import/Interface\n    --  Note that Name_C is not included in this list, since it was already\n@@ -551,120 +545,120 @@ package Snames is\n    --  Entry and Protected, this is because these conventions cannot be\n    --  specified by a pragma.\n \n-   First_Convention_Name               : constant Name_Id := N + 283;\n-   Name_Ada                            : constant Name_Id := N + 283;\n-   Name_Assembler                      : constant Name_Id := N + 284;\n-   Name_CIL                            : constant Name_Id := N + 285;\n-   Name_COBOL                          : constant Name_Id := N + 286;\n-   Name_CPP                            : constant Name_Id := N + 287;\n-   Name_Fortran                        : constant Name_Id := N + 288;\n-   Name_Intrinsic                      : constant Name_Id := N + 289;\n-   Name_Java                           : constant Name_Id := N + 290;\n-   Name_Stdcall                        : constant Name_Id := N + 291;\n-   Name_Stubbed                        : constant Name_Id := N + 292;\n-   Last_Convention_Name                : constant Name_Id := N + 292;\n+   First_Convention_Name               : constant Name_Id := N + 280;\n+   Name_Ada                            : constant Name_Id := N + 280;\n+   Name_Assembler                      : constant Name_Id := N + 281;\n+   Name_CIL                            : constant Name_Id := N + 282;\n+   Name_COBOL                          : constant Name_Id := N + 283;\n+   Name_CPP                            : constant Name_Id := N + 284;\n+   Name_Fortran                        : constant Name_Id := N + 285;\n+   Name_Intrinsic                      : constant Name_Id := N + 286;\n+   Name_Java                           : constant Name_Id := N + 287;\n+   Name_Stdcall                        : constant Name_Id := N + 288;\n+   Name_Stubbed                        : constant Name_Id := N + 289;\n+   Last_Convention_Name                : constant Name_Id := N + 289;\n \n    --  The following names are preset as synonyms for Assembler\n \n-   Name_Asm                            : constant Name_Id := N + 293;\n-   Name_Assembly                       : constant Name_Id := N + 294;\n+   Name_Asm                            : constant Name_Id := N + 290;\n+   Name_Assembly                       : constant Name_Id := N + 291;\n \n    --  The following names are preset as synonyms for C\n \n-   Name_Default                        : constant Name_Id := N + 295;\n+   Name_Default                        : constant Name_Id := N + 292;\n    --  Name_External (previously defined as pragma)\n \n    --  The following names are preset as synonyms for CPP\n \n-   Name_C_Plus_Plus                    : constant Name_Id := N + 296;\n+   Name_C_Plus_Plus                    : constant Name_Id := N + 293;\n \n    --  The following names are present as synonyms for Stdcall\n \n-   Name_DLL                            : constant Name_Id := N + 297;\n-   Name_Win32                          : constant Name_Id := N + 298;\n+   Name_DLL                            : constant Name_Id := N + 294;\n+   Name_Win32                          : constant Name_Id := N + 295;\n \n    --  Other special names used in processing pragmas\n \n-   Name_As_Is                          : constant Name_Id := N + 299;\n-   Name_Assertion                      : constant Name_Id := N + 300;\n-   Name_Attribute_Name                 : constant Name_Id := N + 301;\n-   Name_Body_File_Name                 : constant Name_Id := N + 302;\n-   Name_Boolean_Entry_Barriers         : constant Name_Id := N + 303;\n-   Name_Casing                         : constant Name_Id := N + 304;\n-   Name_Code                           : constant Name_Id := N + 305;\n-   Name_Component                      : constant Name_Id := N + 306;\n-   Name_Component_Size_4               : constant Name_Id := N + 307;\n-   Name_Copy                           : constant Name_Id := N + 308;\n-   Name_D_Float                        : constant Name_Id := N + 309;\n-   Name_Descriptor                     : constant Name_Id := N + 310;\n-   Name_Dot_Replacement                : constant Name_Id := N + 311;\n-   Name_Dynamic                        : constant Name_Id := N + 312;\n-   Name_Entity                         : constant Name_Id := N + 313;\n-   Name_Entry_Count                    : constant Name_Id := N + 314;\n-   Name_External_Name                  : constant Name_Id := N + 315;\n-   Name_First_Optional_Parameter       : constant Name_Id := N + 316;\n-   Name_Form                           : constant Name_Id := N + 317;\n-   Name_G_Float                        : constant Name_Id := N + 318;\n-   Name_Gcc                            : constant Name_Id := N + 319;\n-   Name_Gnat                           : constant Name_Id := N + 320;\n-   Name_GPL                            : constant Name_Id := N + 321;\n-   Name_IEEE_Float                     : constant Name_Id := N + 322;\n-   Name_Ignore                         : constant Name_Id := N + 323;\n-   Name_Info                           : constant Name_Id := N + 324;\n-   Name_Internal                       : constant Name_Id := N + 325;\n-   Name_Link_Name                      : constant Name_Id := N + 326;\n-   Name_Lowercase                      : constant Name_Id := N + 327;\n-   Name_Max_Entry_Queue_Depth          : constant Name_Id := N + 328;\n-   Name_Max_Entry_Queue_Length         : constant Name_Id := N + 329;\n-   Name_Max_Size                       : constant Name_Id := N + 330;\n-   Name_Mechanism                      : constant Name_Id := N + 331;\n-   Name_Message                        : constant Name_Id := N + 332;\n-   Name_Mixedcase                      : constant Name_Id := N + 333;\n-   Name_Modified_GPL                   : constant Name_Id := N + 334;\n-   Name_Name                           : constant Name_Id := N + 335;\n-   Name_NCA                            : constant Name_Id := N + 336;\n-   Name_No                             : constant Name_Id := N + 337;\n-   Name_No_Dependence                  : constant Name_Id := N + 338;\n-   Name_No_Dynamic_Attachment          : constant Name_Id := N + 339;\n-   Name_No_Dynamic_Interrupts          : constant Name_Id := N + 340;\n-   Name_No_Requeue                     : constant Name_Id := N + 341;\n-   Name_No_Requeue_Statements          : constant Name_Id := N + 342;\n-   Name_No_Task_Attributes             : constant Name_Id := N + 343;\n-   Name_No_Task_Attributes_Package     : constant Name_Id := N + 344;\n-   Name_On                             : constant Name_Id := N + 345;\n-   Name_Parameter_Types                : constant Name_Id := N + 346;\n-   Name_Reference                      : constant Name_Id := N + 347;\n-   Name_Restricted                     : constant Name_Id := N + 348;\n-   Name_Result_Mechanism               : constant Name_Id := N + 349;\n-   Name_Result_Type                    : constant Name_Id := N + 350;\n-   Name_Runtime                        : constant Name_Id := N + 351;\n-   Name_SB                             : constant Name_Id := N + 352;\n-   Name_Secondary_Stack_Size           : constant Name_Id := N + 353;\n-   Name_Section                        : constant Name_Id := N + 354;\n-   Name_Semaphore                      : constant Name_Id := N + 355;\n-   Name_Short_Descriptor               : constant Name_Id := N + 356;\n-   Name_Simple_Barriers                : constant Name_Id := N + 357;\n-   Name_Spec_File_Name                 : constant Name_Id := N + 358;\n-   Name_State                          : constant Name_Id := N + 359;\n-   Name_Static                         : constant Name_Id := N + 360;\n-   Name_Stack_Size                     : constant Name_Id := N + 361;\n-   Name_Subunit_File_Name              : constant Name_Id := N + 362;\n-   Name_Task_Stack_Size_Default        : constant Name_Id := N + 363;\n-   Name_Task_Type                      : constant Name_Id := N + 364;\n-   Name_Time_Slicing_Enabled           : constant Name_Id := N + 365;\n-   Name_Top_Guard                      : constant Name_Id := N + 366;\n-   Name_UBA                            : constant Name_Id := N + 367;\n-   Name_UBS                            : constant Name_Id := N + 368;\n-   Name_UBSB                           : constant Name_Id := N + 369;\n-   Name_Unit_Name                      : constant Name_Id := N + 370;\n-   Name_Unknown                        : constant Name_Id := N + 371;\n-   Name_Unrestricted                   : constant Name_Id := N + 372;\n-   Name_Uppercase                      : constant Name_Id := N + 373;\n-   Name_User                           : constant Name_Id := N + 374;\n-   Name_VAX_Float                      : constant Name_Id := N + 375;\n-   Name_VMS                            : constant Name_Id := N + 376;\n-   Name_Vtable_Ptr                     : constant Name_Id := N + 377;\n-   Name_Working_Storage                : constant Name_Id := N + 378;\n+   Name_As_Is                          : constant Name_Id := N + 296;\n+   Name_Assertion                      : constant Name_Id := N + 297;\n+   Name_Attribute_Name                 : constant Name_Id := N + 298;\n+   Name_Body_File_Name                 : constant Name_Id := N + 299;\n+   Name_Boolean_Entry_Barriers         : constant Name_Id := N + 300;\n+   Name_Casing                         : constant Name_Id := N + 301;\n+   Name_Code                           : constant Name_Id := N + 302;\n+   Name_Component                      : constant Name_Id := N + 303;\n+   Name_Component_Size_4               : constant Name_Id := N + 304;\n+   Name_Copy                           : constant Name_Id := N + 305;\n+   Name_D_Float                        : constant Name_Id := N + 306;\n+   Name_Descriptor                     : constant Name_Id := N + 307;\n+   Name_Dot_Replacement                : constant Name_Id := N + 308;\n+   Name_Dynamic                        : constant Name_Id := N + 309;\n+   Name_Entity                         : constant Name_Id := N + 310;\n+   Name_Entry_Count                    : constant Name_Id := N + 311;\n+   Name_External_Name                  : constant Name_Id := N + 312;\n+   Name_First_Optional_Parameter       : constant Name_Id := N + 313;\n+   Name_Form                           : constant Name_Id := N + 314;\n+   Name_G_Float                        : constant Name_Id := N + 315;\n+   Name_Gcc                            : constant Name_Id := N + 316;\n+   Name_Gnat                           : constant Name_Id := N + 317;\n+   Name_GPL                            : constant Name_Id := N + 318;\n+   Name_IEEE_Float                     : constant Name_Id := N + 319;\n+   Name_Ignore                         : constant Name_Id := N + 320;\n+   Name_Info                           : constant Name_Id := N + 321;\n+   Name_Internal                       : constant Name_Id := N + 322;\n+   Name_Link_Name                      : constant Name_Id := N + 323;\n+   Name_Lowercase                      : constant Name_Id := N + 324;\n+   Name_Max_Entry_Queue_Depth          : constant Name_Id := N + 325;\n+   Name_Max_Entry_Queue_Length         : constant Name_Id := N + 326;\n+   Name_Max_Size                       : constant Name_Id := N + 327;\n+   Name_Mechanism                      : constant Name_Id := N + 328;\n+   Name_Message                        : constant Name_Id := N + 329;\n+   Name_Mixedcase                      : constant Name_Id := N + 330;\n+   Name_Modified_GPL                   : constant Name_Id := N + 331;\n+   Name_Name                           : constant Name_Id := N + 332;\n+   Name_NCA                            : constant Name_Id := N + 333;\n+   Name_No                             : constant Name_Id := N + 334;\n+   Name_No_Dependence                  : constant Name_Id := N + 335;\n+   Name_No_Dynamic_Attachment          : constant Name_Id := N + 336;\n+   Name_No_Dynamic_Interrupts          : constant Name_Id := N + 337;\n+   Name_No_Requeue                     : constant Name_Id := N + 338;\n+   Name_No_Requeue_Statements          : constant Name_Id := N + 339;\n+   Name_No_Task_Attributes             : constant Name_Id := N + 340;\n+   Name_No_Task_Attributes_Package     : constant Name_Id := N + 341;\n+   Name_On                             : constant Name_Id := N + 342;\n+   Name_Parameter_Types                : constant Name_Id := N + 343;\n+   Name_Reference                      : constant Name_Id := N + 344;\n+   Name_Restricted                     : constant Name_Id := N + 345;\n+   Name_Result_Mechanism               : constant Name_Id := N + 346;\n+   Name_Result_Type                    : constant Name_Id := N + 347;\n+   Name_Runtime                        : constant Name_Id := N + 348;\n+   Name_SB                             : constant Name_Id := N + 349;\n+   Name_Secondary_Stack_Size           : constant Name_Id := N + 350;\n+   Name_Section                        : constant Name_Id := N + 351;\n+   Name_Semaphore                      : constant Name_Id := N + 352;\n+   Name_Short_Descriptor               : constant Name_Id := N + 353;\n+   Name_Simple_Barriers                : constant Name_Id := N + 354;\n+   Name_Spec_File_Name                 : constant Name_Id := N + 355;\n+   Name_State                          : constant Name_Id := N + 356;\n+   Name_Static                         : constant Name_Id := N + 357;\n+   Name_Stack_Size                     : constant Name_Id := N + 358;\n+   Name_Subunit_File_Name              : constant Name_Id := N + 359;\n+   Name_Task_Stack_Size_Default        : constant Name_Id := N + 360;\n+   Name_Task_Type                      : constant Name_Id := N + 361;\n+   Name_Time_Slicing_Enabled           : constant Name_Id := N + 362;\n+   Name_Top_Guard                      : constant Name_Id := N + 363;\n+   Name_UBA                            : constant Name_Id := N + 364;\n+   Name_UBS                            : constant Name_Id := N + 365;\n+   Name_UBSB                           : constant Name_Id := N + 366;\n+   Name_Unit_Name                      : constant Name_Id := N + 367;\n+   Name_Unknown                        : constant Name_Id := N + 368;\n+   Name_Unrestricted                   : constant Name_Id := N + 369;\n+   Name_Uppercase                      : constant Name_Id := N + 370;\n+   Name_User                           : constant Name_Id := N + 371;\n+   Name_VAX_Float                      : constant Name_Id := N + 372;\n+   Name_VMS                            : constant Name_Id := N + 373;\n+   Name_Vtable_Ptr                     : constant Name_Id := N + 374;\n+   Name_Working_Storage                : constant Name_Id := N + 375;\n \n    --  Names of recognized attributes. The entries with the comment \"Ada 83\"\n    --  are attributes that are defined in Ada 83, but not in Ada 95. These\n@@ -678,144 +672,147 @@ package Snames is\n    --  The entries marked VMS are recognized only in OpenVMS implementations\n    --  of GNAT, and are treated as illegal in all other contexts.\n \n-   First_Attribute_Name                : constant Name_Id := N + 379;\n-   Name_Abort_Signal                   : constant Name_Id := N + 379; -- GNAT\n-   Name_Access                         : constant Name_Id := N + 380;\n-   Name_Address                        : constant Name_Id := N + 381;\n-   Name_Address_Size                   : constant Name_Id := N + 382; -- GNAT\n-   Name_Aft                            : constant Name_Id := N + 383;\n-   Name_Alignment                      : constant Name_Id := N + 384;\n-   Name_Asm_Input                      : constant Name_Id := N + 385; -- GNAT\n-   Name_Asm_Output                     : constant Name_Id := N + 386; -- GNAT\n-   Name_AST_Entry                      : constant Name_Id := N + 387; -- VMS\n-   Name_Bit                            : constant Name_Id := N + 388; -- GNAT\n-   Name_Bit_Order                      : constant Name_Id := N + 389;\n-   Name_Bit_Position                   : constant Name_Id := N + 390; -- GNAT\n-   Name_Body_Version                   : constant Name_Id := N + 391;\n-   Name_Callable                       : constant Name_Id := N + 392;\n-   Name_Caller                         : constant Name_Id := N + 393;\n-   Name_Code_Address                   : constant Name_Id := N + 394; -- GNAT\n-   Name_Component_Size                 : constant Name_Id := N + 395;\n-   Name_Compose                        : constant Name_Id := N + 396;\n-   Name_Constrained                    : constant Name_Id := N + 397;\n-   Name_Count                          : constant Name_Id := N + 398;\n-   Name_Default_Bit_Order              : constant Name_Id := N + 399; -- GNAT\n-   Name_Definite                       : constant Name_Id := N + 400;\n-   Name_Delta                          : constant Name_Id := N + 401;\n-   Name_Denorm                         : constant Name_Id := N + 402;\n-   Name_Digits                         : constant Name_Id := N + 403;\n-   Name_Elaborated                     : constant Name_Id := N + 404; -- GNAT\n-   Name_Emax                           : constant Name_Id := N + 405; -- Ada 83\n-   Name_Enabled                        : constant Name_Id := N + 406; -- GNAT\n-   Name_Enum_Rep                       : constant Name_Id := N + 407; -- GNAT\n-   Name_Enum_Val                       : constant Name_Id := N + 408; -- GNAT\n-   Name_Epsilon                        : constant Name_Id := N + 409; -- Ada 83\n-   Name_Exponent                       : constant Name_Id := N + 410;\n-   Name_External_Tag                   : constant Name_Id := N + 411;\n-   Name_Fast_Math                      : constant Name_Id := N + 412; -- GNAT\n-   Name_First                          : constant Name_Id := N + 413;\n-   Name_First_Bit                      : constant Name_Id := N + 414;\n-   Name_Fixed_Value                    : constant Name_Id := N + 415; -- GNAT\n-   Name_Fore                           : constant Name_Id := N + 416;\n-   Name_Has_Access_Values              : constant Name_Id := N + 417; -- GNAT\n-   Name_Has_Discriminants              : constant Name_Id := N + 418; -- GNAT\n-   Name_Has_Tagged_Values              : constant Name_Id := N + 419; -- GNAT\n-   Name_Identity                       : constant Name_Id := N + 420;\n-   Name_Img                            : constant Name_Id := N + 421; -- GNAT\n-   Name_Integer_Value                  : constant Name_Id := N + 422; -- GNAT\n-   Name_Invalid_Value                  : constant Name_Id := N + 423; -- GNAT\n-   Name_Large                          : constant Name_Id := N + 424; -- Ada 83\n-   Name_Last                           : constant Name_Id := N + 425;\n-   Name_Last_Bit                       : constant Name_Id := N + 426;\n-   Name_Leading_Part                   : constant Name_Id := N + 427;\n-   Name_Length                         : constant Name_Id := N + 428;\n-   Name_Machine_Emax                   : constant Name_Id := N + 429;\n-   Name_Machine_Emin                   : constant Name_Id := N + 430;\n-   Name_Machine_Mantissa               : constant Name_Id := N + 431;\n-   Name_Machine_Overflows              : constant Name_Id := N + 432;\n-   Name_Machine_Radix                  : constant Name_Id := N + 433;\n-   Name_Machine_Rounding               : constant Name_Id := N + 434; -- Ada 05\n-   Name_Machine_Rounds                 : constant Name_Id := N + 435;\n-   Name_Machine_Size                   : constant Name_Id := N + 436; -- GNAT\n-   Name_Mantissa                       : constant Name_Id := N + 437; -- Ada 83\n-   Name_Max_Size_In_Storage_Elements   : constant Name_Id := N + 438;\n-   Name_Maximum_Alignment              : constant Name_Id := N + 439; -- GNAT\n-   Name_Mechanism_Code                 : constant Name_Id := N + 440; -- GNAT\n-   Name_Mod                            : constant Name_Id := N + 441; -- Ada 05\n-   Name_Model_Emin                     : constant Name_Id := N + 442;\n-   Name_Model_Epsilon                  : constant Name_Id := N + 443;\n-   Name_Model_Mantissa                 : constant Name_Id := N + 444;\n-   Name_Model_Small                    : constant Name_Id := N + 445;\n-   Name_Modulus                        : constant Name_Id := N + 446;\n-   Name_Null_Parameter                 : constant Name_Id := N + 447; -- GNAT\n-   Name_Object_Size                    : constant Name_Id := N + 448; -- GNAT\n-   Name_Old                            : constant Name_Id := N + 449; -- GNAT\n-   Name_Partition_ID                   : constant Name_Id := N + 450;\n-   Name_Passed_By_Reference            : constant Name_Id := N + 451; -- GNAT\n-   Name_Pool_Address                   : constant Name_Id := N + 452;\n-   Name_Pos                            : constant Name_Id := N + 453;\n-   Name_Position                       : constant Name_Id := N + 454;\n-   Name_Priority                       : constant Name_Id := N + 455; -- Ada 05\n-   Name_Range                          : constant Name_Id := N + 456;\n-   Name_Range_Length                   : constant Name_Id := N + 457; -- GNAT\n-   Name_Result                         : constant Name_Id := N + 458; -- GNAT\n-   Name_Round                          : constant Name_Id := N + 459;\n-   Name_Safe_Emax                      : constant Name_Id := N + 460; -- Ada 83\n-   Name_Safe_First                     : constant Name_Id := N + 461;\n-   Name_Safe_Large                     : constant Name_Id := N + 462; -- Ada 83\n-   Name_Safe_Last                      : constant Name_Id := N + 463;\n-   Name_Safe_Small                     : constant Name_Id := N + 464; -- Ada 83\n-   Name_Scale                          : constant Name_Id := N + 465;\n-   Name_Scaling                        : constant Name_Id := N + 466;\n-   Name_Signed_Zeros                   : constant Name_Id := N + 467;\n-   Name_Size                           : constant Name_Id := N + 468;\n-   Name_Small                          : constant Name_Id := N + 469;\n-   Name_Storage_Size                   : constant Name_Id := N + 470;\n-   Name_Storage_Unit                   : constant Name_Id := N + 471; -- GNAT\n-   Name_Stream_Size                    : constant Name_Id := N + 472; -- Ada 05\n-   Name_Tag                            : constant Name_Id := N + 473;\n-   Name_Target_Name                    : constant Name_Id := N + 474; -- GNAT\n-   Name_Terminated                     : constant Name_Id := N + 475;\n-   Name_To_Address                     : constant Name_Id := N + 476; -- GNAT\n-   Name_Type_Class                     : constant Name_Id := N + 477; -- GNAT\n-   Name_UET_Address                    : constant Name_Id := N + 478; -- GNAT\n-   Name_Unbiased_Rounding              : constant Name_Id := N + 479;\n-   Name_Unchecked_Access               : constant Name_Id := N + 480;\n-   Name_Unconstrained_Array            : constant Name_Id := N + 481;\n-   Name_Universal_Literal_String       : constant Name_Id := N + 482; -- GNAT\n-   Name_Unrestricted_Access            : constant Name_Id := N + 483; -- GNAT\n-   Name_VADS_Size                      : constant Name_Id := N + 484; -- GNAT\n-   Name_Val                            : constant Name_Id := N + 485;\n-   Name_Valid                          : constant Name_Id := N + 486;\n-   Name_Value_Size                     : constant Name_Id := N + 487; -- GNAT\n-   Name_Version                        : constant Name_Id := N + 488;\n-   Name_Wchar_T_Size                   : constant Name_Id := N + 489; -- GNAT\n-   Name_Wide_Wide_Width                : constant Name_Id := N + 490; -- Ada 05\n-   Name_Wide_Width                     : constant Name_Id := N + 491;\n-   Name_Width                          : constant Name_Id := N + 492;\n-   Name_Word_Size                      : constant Name_Id := N + 493; -- GNAT\n+   First_Attribute_Name                : constant Name_Id := N + 376;\n+   Name_Abort_Signal                   : constant Name_Id := N + 376; -- GNAT\n+   Name_Access                         : constant Name_Id := N + 377;\n+   Name_Address                        : constant Name_Id := N + 378;\n+   Name_Address_Size                   : constant Name_Id := N + 379; -- GNAT\n+   Name_Aft                            : constant Name_Id := N + 380;\n+   Name_Alignment                      : constant Name_Id := N + 381;\n+   Name_Asm_Input                      : constant Name_Id := N + 382; -- GNAT\n+   Name_Asm_Output                     : constant Name_Id := N + 383; -- GNAT\n+   Name_AST_Entry                      : constant Name_Id := N + 384; -- VMS\n+   Name_Bit                            : constant Name_Id := N + 385; -- GNAT\n+   Name_Bit_Order                      : constant Name_Id := N + 386;\n+   Name_Bit_Position                   : constant Name_Id := N + 387; -- GNAT\n+   Name_Body_Version                   : constant Name_Id := N + 388;\n+   Name_Callable                       : constant Name_Id := N + 389;\n+   Name_Caller                         : constant Name_Id := N + 390;\n+   Name_Code_Address                   : constant Name_Id := N + 391; -- GNAT\n+   Name_Component_Size                 : constant Name_Id := N + 392;\n+   Name_Compose                        : constant Name_Id := N + 393;\n+   Name_Constrained                    : constant Name_Id := N + 394;\n+   Name_Count                          : constant Name_Id := N + 395;\n+   Name_Default_Bit_Order              : constant Name_Id := N + 396; -- GNAT\n+   Name_Definite                       : constant Name_Id := N + 397;\n+   Name_Delta                          : constant Name_Id := N + 398;\n+   Name_Denorm                         : constant Name_Id := N + 399;\n+   Name_Digits                         : constant Name_Id := N + 400;\n+   Name_Elaborated                     : constant Name_Id := N + 401; -- GNAT\n+   Name_Emax                           : constant Name_Id := N + 402; -- Ada 83\n+   Name_Enabled                        : constant Name_Id := N + 403; -- GNAT\n+   Name_Enum_Rep                       : constant Name_Id := N + 404; -- GNAT\n+   Name_Enum_Val                       : constant Name_Id := N + 405; -- GNAT\n+   Name_Epsilon                        : constant Name_Id := N + 406; -- Ada 83\n+   Name_Exponent                       : constant Name_Id := N + 407;\n+   Name_External_Tag                   : constant Name_Id := N + 408;\n+   Name_Fast_Math                      : constant Name_Id := N + 409; -- GNAT\n+   Name_First                          : constant Name_Id := N + 410;\n+   Name_First_Bit                      : constant Name_Id := N + 411;\n+   Name_Fixed_Value                    : constant Name_Id := N + 412; -- GNAT\n+   Name_Fore                           : constant Name_Id := N + 413;\n+   Name_Has_Access_Values              : constant Name_Id := N + 414; -- GNAT\n+   Name_Has_Discriminants              : constant Name_Id := N + 415; -- GNAT\n+   Name_Has_Tagged_Values              : constant Name_Id := N + 416; -- GNAT\n+   Name_Identity                       : constant Name_Id := N + 417;\n+   Name_Img                            : constant Name_Id := N + 418; -- GNAT\n+   Name_Integer_Value                  : constant Name_Id := N + 419; -- GNAT\n+   Name_Invalid_Value                  : constant Name_Id := N + 420; -- GNAT\n+   Name_Large                          : constant Name_Id := N + 421; -- Ada 83\n+   Name_Last                           : constant Name_Id := N + 422;\n+   Name_Last_Bit                       : constant Name_Id := N + 423;\n+   Name_Leading_Part                   : constant Name_Id := N + 424;\n+   Name_Length                         : constant Name_Id := N + 425;\n+   Name_Machine_Emax                   : constant Name_Id := N + 426;\n+   Name_Machine_Emin                   : constant Name_Id := N + 427;\n+   Name_Machine_Mantissa               : constant Name_Id := N + 428;\n+   Name_Machine_Overflows              : constant Name_Id := N + 429;\n+   Name_Machine_Radix                  : constant Name_Id := N + 430;\n+   Name_Machine_Rounding               : constant Name_Id := N + 431; -- Ada 05\n+   Name_Machine_Rounds                 : constant Name_Id := N + 432;\n+   Name_Machine_Size                   : constant Name_Id := N + 433; -- GNAT\n+   Name_Mantissa                       : constant Name_Id := N + 434; -- Ada 83\n+   Name_Max_Size_In_Storage_Elements   : constant Name_Id := N + 435;\n+   Name_Maximum_Alignment              : constant Name_Id := N + 436; -- GNAT\n+   Name_Mechanism_Code                 : constant Name_Id := N + 437; -- GNAT\n+   Name_Mod                            : constant Name_Id := N + 438; -- Ada 05\n+   Name_Model_Emin                     : constant Name_Id := N + 439;\n+   Name_Model_Epsilon                  : constant Name_Id := N + 440;\n+   Name_Model_Mantissa                 : constant Name_Id := N + 441;\n+   Name_Model_Small                    : constant Name_Id := N + 442;\n+   Name_Modulus                        : constant Name_Id := N + 443;\n+   Name_Null_Parameter                 : constant Name_Id := N + 444; -- GNAT\n+   Name_Object_Size                    : constant Name_Id := N + 445; -- GNAT\n+   Name_Old                            : constant Name_Id := N + 446; -- GNAT\n+   Name_Partition_ID                   : constant Name_Id := N + 447;\n+   Name_Passed_By_Reference            : constant Name_Id := N + 448; -- GNAT\n+   Name_Pool_Address                   : constant Name_Id := N + 449;\n+   Name_Pos                            : constant Name_Id := N + 450;\n+   Name_Position                       : constant Name_Id := N + 451;\n+   Name_Priority                       : constant Name_Id := N + 452; -- Ada 05\n+   Name_Range                          : constant Name_Id := N + 453;\n+   Name_Range_Length                   : constant Name_Id := N + 454; -- GNAT\n+   Name_Result                         : constant Name_Id := N + 455; -- GNAT\n+   Name_Round                          : constant Name_Id := N + 456;\n+   Name_Safe_Emax                      : constant Name_Id := N + 457; -- Ada 83\n+   Name_Safe_First                     : constant Name_Id := N + 458;\n+   Name_Safe_Large                     : constant Name_Id := N + 459; -- Ada 83\n+   Name_Safe_Last                      : constant Name_Id := N + 460;\n+   Name_Safe_Small                     : constant Name_Id := N + 461; -- Ada 83\n+   Name_Scale                          : constant Name_Id := N + 462;\n+   Name_Scaling                        : constant Name_Id := N + 463;\n+   Name_Signed_Zeros                   : constant Name_Id := N + 464;\n+   Name_Size                           : constant Name_Id := N + 465;\n+   Name_Small                          : constant Name_Id := N + 466;\n+   Name_Storage_Size                   : constant Name_Id := N + 467;\n+   Name_Storage_Unit                   : constant Name_Id := N + 468; -- GNAT\n+   Name_Stream_Size                    : constant Name_Id := N + 469; -- Ada 05\n+   Name_Tag                            : constant Name_Id := N + 470;\n+   Name_Target_Name                    : constant Name_Id := N + 471; -- GNAT\n+   Name_Terminated                     : constant Name_Id := N + 472;\n+   Name_To_Address                     : constant Name_Id := N + 473; -- GNAT\n+   Name_Type_Class                     : constant Name_Id := N + 474; -- GNAT\n+   Name_UET_Address                    : constant Name_Id := N + 475; -- GNAT\n+   Name_Unbiased_Rounding              : constant Name_Id := N + 476;\n+   Name_Unchecked_Access               : constant Name_Id := N + 477;\n+   Name_Unconstrained_Array            : constant Name_Id := N + 478;\n+   Name_Universal_Literal_String       : constant Name_Id := N + 479; -- GNAT\n+   Name_Unrestricted_Access            : constant Name_Id := N + 480; -- GNAT\n+   Name_VADS_Size                      : constant Name_Id := N + 481; -- GNAT\n+   Name_Val                            : constant Name_Id := N + 482;\n+   Name_Valid                          : constant Name_Id := N + 483;\n+   Name_Value_Size                     : constant Name_Id := N + 484; -- GNAT\n+   Name_Version                        : constant Name_Id := N + 485;\n+   Name_Wchar_T_Size                   : constant Name_Id := N + 486; -- GNAT\n+   Name_Wide_Wide_Width                : constant Name_Id := N + 487; -- Ada 05\n+   Name_Wide_Width                     : constant Name_Id := N + 488;\n+   Name_Width                          : constant Name_Id := N + 489;\n+   Name_Word_Size                      : constant Name_Id := N + 490; -- GNAT\n \n    --  Attributes that designate attributes returning renamable functions,\n    --  i.e. functions that return other than a universal value and that\n    --  have non-universal arguments.\n \n-   First_Renamable_Function_Attribute  : constant Name_Id := N + 494;\n-   Name_Adjacent                       : constant Name_Id := N + 494;\n-   Name_Ceiling                        : constant Name_Id := N + 495;\n-   Name_Copy_Sign                      : constant Name_Id := N + 496;\n-   Name_Floor                          : constant Name_Id := N + 497;\n-   Name_Fraction                       : constant Name_Id := N + 498;\n-   Name_Image                          : constant Name_Id := N + 499;\n-   Name_Input                          : constant Name_Id := N + 500;\n-   Name_Machine                        : constant Name_Id := N + 501;\n-   Name_Max                            : constant Name_Id := N + 502;\n-   Name_Min                            : constant Name_Id := N + 503;\n-   Name_Model                          : constant Name_Id := N + 504;\n-   Name_Pred                           : constant Name_Id := N + 505;\n-   Name_Remainder                      : constant Name_Id := N + 506;\n-   Name_Rounding                       : constant Name_Id := N + 507;\n-   Name_Succ                           : constant Name_Id := N + 508;\n-   Name_Truncation                     : constant Name_Id := N + 509;\n+   First_Renamable_Function_Attribute  : constant Name_Id := N + 491;\n+   Name_Adjacent                       : constant Name_Id := N + 491;\n+   Name_Ceiling                        : constant Name_Id := N + 492;\n+   Name_Copy_Sign                      : constant Name_Id := N + 493;\n+   Name_Floor                          : constant Name_Id := N + 494;\n+   Name_Fraction                       : constant Name_Id := N + 495;\n+   Name_From_Any                       : constant Name_Id := N + 496; -- GNAT\n+   Name_Image                          : constant Name_Id := N + 497;\n+   Name_Input                          : constant Name_Id := N + 498;\n+   Name_Machine                        : constant Name_Id := N + 499;\n+   Name_Max                            : constant Name_Id := N + 500;\n+   Name_Min                            : constant Name_Id := N + 501;\n+   Name_Model                          : constant Name_Id := N + 502;\n+   Name_Pred                           : constant Name_Id := N + 503;\n+   Name_Remainder                      : constant Name_Id := N + 504;\n+   Name_Rounding                       : constant Name_Id := N + 505;\n+   Name_Succ                           : constant Name_Id := N + 506;\n+   Name_To_Any                         : constant Name_Id := N + 507; -- GNAT\n+   Name_Truncation                     : constant Name_Id := N + 508;\n+   Name_TypeCode                       : constant Name_Id := N + 509; -- GNAT\n    Name_Value                          : constant Name_Id := N + 510;\n    Name_Wide_Image                     : constant Name_Id := N + 511;\n    Name_Wide_Wide_Image                : constant Name_Id := N + 512;\n@@ -1294,6 +1291,7 @@ package Snames is\n       Attribute_Copy_Sign,\n       Attribute_Floor,\n       Attribute_Fraction,\n+      Attribute_From_Any,\n       Attribute_Image,\n       Attribute_Input,\n       Attribute_Machine,\n@@ -1304,7 +1302,9 @@ package Snames is\n       Attribute_Remainder,\n       Attribute_Rounding,\n       Attribute_Succ,\n+      Attribute_To_Any,\n       Attribute_Truncation,\n+      Attribute_TypeCode,\n       Attribute_Value,\n       Attribute_Wide_Image,\n       Attribute_Wide_Wide_Image,"}, {"sha": "8f1367f718459779ad89728c6961250c0ebad8f7", "filename": "gcc/ada/snames.h", "status": "modified", "additions": 28, "deletions": 25, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54838d1f88d0e162089a86d2055bd70aa49fff54/gcc%2Fada%2Fsnames.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54838d1f88d0e162089a86d2055bd70aa49fff54/gcc%2Fada%2Fsnames.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.h?ref=54838d1f88d0e162089a86d2055bd70aa49fff54", "patch": "@@ -164,31 +164,34 @@ extern unsigned char Get_Attribute_Id (int);\n #define  Attr_Copy_Sign                     117\n #define  Attr_Floor                         118\n #define  Attr_Fraction                      119\n-#define  Attr_Image                         120\n-#define  Attr_Input                         121\n-#define  Attr_Machine                       122\n-#define  Attr_Max                           123\n-#define  Attr_Min                           124\n-#define  Attr_Model                         125\n-#define  Attr_Pred                          126\n-#define  Attr_Remainder                     127\n-#define  Attr_Rounding                      128\n-#define  Attr_Succ                          129\n-#define  Attr_Truncation                    130\n-#define  Attr_Value                         131\n-#define  Attr_Wide_Image                    132\n-#define  Attr_Wide_Wide_Image               133\n-#define  Attr_Wide_Value                    134\n-#define  Attr_Wide_Wide_Value               135\n-#define  Attr_Output                        136\n-#define  Attr_Read                          137\n-#define  Attr_Write                         138\n-#define  Attr_Elab_Body                     139\n-#define  Attr_Elab_Spec                     140\n-#define  Attr_Storage_Pool                  141\n-#define  Attr_Base                          142\n-#define  Attr_Class                         143\n-#define  Attr_Stub_Type                     144\n+#define  Attr_From_Any                      120\n+#define  Attr_Image                         121\n+#define  Attr_Input                         122\n+#define  Attr_Machine                       123\n+#define  Attr_Max                           124\n+#define  Attr_Min                           125\n+#define  Attr_Model                         126\n+#define  Attr_Pred                          127\n+#define  Attr_Remainder                     128\n+#define  Attr_Rounding                      129\n+#define  Attr_Succ                          130\n+#define  Attr_To_Any                        131\n+#define  Attr_Truncation                    132\n+#define  Attr_TypeCode                      133\n+#define  Attr_Value                         134\n+#define  Attr_Wide_Image                    135\n+#define  Attr_Wide_Wide_Image               136\n+#define  Attr_Wide_Value                    137\n+#define  Attr_Wide_Wide_Value               138\n+#define  Attr_Output                        139\n+#define  Attr_Read                          140\n+#define  Attr_Write                         141\n+#define  Attr_Elab_Body                     142\n+#define  Attr_Elab_Spec                     143\n+#define  Attr_Storage_Pool                  144\n+#define  Attr_Base                          145\n+#define  Attr_Class                         146\n+#define  Attr_Stub_Type                     147\n \n /* Define the numeric values for the conventions.  */\n "}, {"sha": "4f25eda74623861d9fa718ebc2be4ade555272a9", "filename": "gcc/ada/tbuild.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54838d1f88d0e162089a86d2055bd70aa49fff54/gcc%2Fada%2Ftbuild.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54838d1f88d0e162089a86d2055bd70aa49fff54/gcc%2Fada%2Ftbuild.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftbuild.adb?ref=54838d1f88d0e162089a86d2055bd70aa49fff54", "patch": "@@ -498,7 +498,7 @@ package body Tbuild is\n       Get_Name_String (Related_Id);\n \n       if Prefix /= ' ' then\n-         pragma Assert (Is_OK_Internal_Letter (Prefix));\n+         pragma Assert (Is_OK_Internal_Letter (Prefix) or else Prefix = '_');\n \n          for J in reverse 1 .. Name_Len loop\n             Name_Buffer (J + 1) := Name_Buffer (J);"}]}