{"sha": "f50592234cdef68ddc9b98b65a88a443e2c4523f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjUwNTkyMjM0Y2RlZjY4ZGRjOWI5OGI2NWE4OGE0NDNlMmM0NTIzZg==", "commit": {"author": {"name": "Mark Wielaard", "email": "mjw@redhat.com", "date": "2014-10-05T15:25:03Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2014-10-05T15:25:03Z"}, "message": "PR debug/63239 Add DWARF representation for C++11 deleted member function.\n\ninclude/ChangeLog\n\n\t* dwarf2.def (DW_AT_GNU_deleted): New attribute.\n\ngcc/ChangeLog\n\n\t* dwarf2out.c (gen_subprogram_die): When a member function is\n\texplicitly deleted then add a DW_AT_GNU_deleted attribute.\n\t* langhooks.h (struct lang_hooks_for_decls): Add\n\tfunction_decl_deleted_p langhook.\n\t* langhooks-def.h (LANG_HOOKS_FUNCTION_DECL_DELETED_P): Define.\n\t(LANG_HOOKS_DECLS): Add LANG_HOOKS_FUNCTION_DECL_DELETED_P.\n\ngcc/cp/ChangeLog\n\n\t* cp-objcp-common.h (LANG_HOOKS_FUNCTION_DECL_DELETED_P): Define.\n\t(cp_function_decl_deleted_p): New prototype.\n\t* cp-objcp-common.c (cp_function_deleted_p): New function.\n\ngcc/testsuite/ChangeLog\n\n\t* g++.dg/debug/dwarf2/deleted-member-function.C: New testcase.\n\nFrom-SVN: r215901", "tree": {"sha": "700ed4a22c54f19e861b8af7cede31a1ed585658", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/700ed4a22c54f19e861b8af7cede31a1ed585658"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f50592234cdef68ddc9b98b65a88a443e2c4523f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f50592234cdef68ddc9b98b65a88a443e2c4523f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f50592234cdef68ddc9b98b65a88a443e2c4523f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f50592234cdef68ddc9b98b65a88a443e2c4523f/comments", "author": null, "committer": null, "parents": [{"sha": "0127c169d155ecdad955d1b27cbc9e34ea981d42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0127c169d155ecdad955d1b27cbc9e34ea981d42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0127c169d155ecdad955d1b27cbc9e34ea981d42"}], "stats": {"total": 70, "additions": 70, "deletions": 0}, "files": [{"sha": "25f4495fb3d0bfce0b6ec41d7d4e3550d5e68a8f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f50592234cdef68ddc9b98b65a88a443e2c4523f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f50592234cdef68ddc9b98b65a88a443e2c4523f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f50592234cdef68ddc9b98b65a88a443e2c4523f", "patch": "@@ -1,3 +1,13 @@\n+2014-10-02  Mark Wielaard  <mjw@redhat.com>\n+\n+\tPR debug/63239\n+\t* dwarf2out.c (gen_subprogram_die): When a member function is\n+\texplicitly deleted then add a DW_AT_GNU_deleted attribute.\n+\t* langhooks.h (struct lang_hooks_for_decls): Add\n+\tfunction_decl_deleted_p langhook.\n+\t* langhooks-def.h (LANG_HOOKS_FUNCTION_DECL_DELETED_P): Define.\n+\t(LANG_HOOKS_DECLS): Add LANG_HOOKS_FUNCTION_DECL_DELETED_P.\n+\n 2014-10-04  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-polymorphic-call.c (walk_ssa_copies): Recognize"}, {"sha": "5cb8203a636f3986e747e8fb01571d1d79ac60d5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f50592234cdef68ddc9b98b65a88a443e2c4523f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f50592234cdef68ddc9b98b65a88a443e2c4523f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f50592234cdef68ddc9b98b65a88a443e2c4523f", "patch": "@@ -1,3 +1,10 @@\n+2014-10-02  Mark Wielaard  <mjw@redhat.com>\n+\n+\tPR debug/63239\n+\t* cp-objcp-common.h (LANG_HOOKS_FUNCTION_DECL_DELETED_P): Define.\n+\t(cp_function_decl_deleted_p): New prototype.\n+\t* cp-objcp-common.c (cp_function_deleted_p): New function.\n+\n 2014-10-03  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR c++/54427"}, {"sha": "0d144ef0ba7105e881c3b2ef61655e5cca4c8c13", "filename": "gcc/cp/cp-objcp-common.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f50592234cdef68ddc9b98b65a88a443e2c4523f/gcc%2Fcp%2Fcp-objcp-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f50592234cdef68ddc9b98b65a88a443e2c4523f/gcc%2Fcp%2Fcp-objcp-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-objcp-common.c?ref=f50592234cdef68ddc9b98b65a88a443e2c4523f", "patch": "@@ -168,6 +168,16 @@ cp_function_decl_explicit_p (tree decl)\n \t  && DECL_NONCONVERTING_P (decl));\n }\n \n+/* Return true if DECL is deleted special member function.  */\n+\n+bool\n+cp_function_decl_deleted_p (tree decl)\n+{\n+  return (decl\n+\t  && DECL_LANG_SPECIFIC (STRIP_TEMPLATE (decl))\n+\t  && DECL_DELETED_FN (decl));\n+}\n+\n /* Stubs to keep c-opts.c happy.  */\n void\n push_file_scope (void)"}, {"sha": "c289774b0c67dc7176a501b8fbab41c13dbc25a8", "filename": "gcc/cp/cp-objcp-common.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f50592234cdef68ddc9b98b65a88a443e2c4523f/gcc%2Fcp%2Fcp-objcp-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f50592234cdef68ddc9b98b65a88a443e2c4523f/gcc%2Fcp%2Fcp-objcp-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-objcp-common.h?ref=f50592234cdef68ddc9b98b65a88a443e2c4523f", "patch": "@@ -27,6 +27,7 @@ extern tree objcp_tsubst_copy_and_build (tree, tree, tsubst_flags_t,\n \t\t\t\t\t tree, bool);\n \n extern bool cp_function_decl_explicit_p (tree decl);\n+extern bool cp_function_decl_deleted_p (tree decl);\n extern void cp_common_init_ts (void);\n \n /* Lang hooks that are shared between C++ and ObjC++ are defined here.  Hooks\n@@ -131,6 +132,8 @@ extern void cp_common_init_ts (void);\n #define LANG_HOOKS_GIMPLIFY_EXPR cp_gimplify_expr\n #undef LANG_HOOKS_FUNCTION_DECL_EXPLICIT_P\n #define LANG_HOOKS_FUNCTION_DECL_EXPLICIT_P cp_function_decl_explicit_p\n+#undef LANG_HOOKS_FUNCTION_DECL_DELETED_P\n+#define LANG_HOOKS_FUNCTION_DECL_DELETED_P cp_function_decl_deleted_p\n #undef LANG_HOOKS_OMP_PREDETERMINED_SHARING\n #define LANG_HOOKS_OMP_PREDETERMINED_SHARING cxx_omp_predetermined_sharing\n #undef LANG_HOOKS_OMP_CLAUSE_DEFAULT_CTOR"}, {"sha": "59c05edd893e9500fee65d0391361eb86c10ba96", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f50592234cdef68ddc9b98b65a88a443e2c4523f/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f50592234cdef68ddc9b98b65a88a443e2c4523f/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=f50592234cdef68ddc9b98b65a88a443e2c4523f", "patch": "@@ -18306,6 +18306,12 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)\n \t      && (dwarf_version >= 3 || !dwarf_strict))\n \t    add_AT_flag (subr_die, DW_AT_explicit, 1);\n \n+\t  /* If this is a C++11 deleted special function member then generate\n+\t     a DW_AT_GNU_deleted attribute.  */\n+\t  if (lang_hooks.decls.function_decl_deleted_p (decl)\n+\t      && (! dwarf_strict))\n+\t    add_AT_flag (subr_die, DW_AT_GNU_deleted, 1);\n+\n \t  /* The first time we see a member function, it is in the context of\n \t     the class to which it belongs.  We make sure of this by emitting\n \t     the class first.  The next time is the definition, which is"}, {"sha": "e5ae3e3d6e8dfb0b47f50139094ab2171d8889b2", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f50592234cdef68ddc9b98b65a88a443e2c4523f/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f50592234cdef68ddc9b98b65a88a443e2c4523f/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=f50592234cdef68ddc9b98b65a88a443e2c4523f", "patch": "@@ -203,6 +203,7 @@ extern tree lhd_make_node (enum tree_code);\n #define LANG_HOOKS_PUSHDECL\tpushdecl\n #define LANG_HOOKS_GETDECLS\tgetdecls\n #define LANG_HOOKS_FUNCTION_DECL_EXPLICIT_P hook_bool_tree_false\n+#define LANG_HOOKS_FUNCTION_DECL_DELETED_P hook_bool_tree_false\n #define LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL lhd_warn_unused_global_decl\n #define LANG_HOOKS_WRITE_GLOBALS write_global_declarations\n #define LANG_HOOKS_DECL_OK_FOR_SIBCALL\tlhd_decl_ok_for_sibcall\n@@ -224,6 +225,7 @@ extern tree lhd_make_node (enum tree_code);\n   LANG_HOOKS_PUSHDECL, \\\n   LANG_HOOKS_GETDECLS, \\\n   LANG_HOOKS_FUNCTION_DECL_EXPLICIT_P, \\\n+  LANG_HOOKS_FUNCTION_DECL_DELETED_P, \\\n   LANG_HOOKS_GENERIC_GENERIC_PARAMETER_DECL_P, \\\n   LANG_HOOKS_FUNCTION_PARM_EXPANDED_FROM_PACK_P, \\\n   LANG_HOOKS_GET_GENERIC_FUNCTION_DECL, \\"}, {"sha": "32e76f99e524b31e41cca66147b42c8561645aac", "filename": "gcc/langhooks.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f50592234cdef68ddc9b98b65a88a443e2c4523f/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f50592234cdef68ddc9b98b65a88a443e2c4523f/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=f50592234cdef68ddc9b98b65a88a443e2c4523f", "patch": "@@ -166,6 +166,9 @@ struct lang_hooks_for_decls\n   /* Returns true if DECL is explicit member function.  */\n   bool (*function_decl_explicit_p) (tree);\n \n+  /* Returns true if DECL is C++11 deleted special member function.  */\n+  bool (*function_decl_deleted_p) (tree);\n+\n   /* Returns True if the parameter is a generic parameter decl\n      of a generic type, e.g a template template parameter for the C++ FE.  */\n   bool (*generic_generic_parameter_decl_p) (const_tree);"}, {"sha": "b3921d61f308936b67787b1eb900685fdd4e5a68", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f50592234cdef68ddc9b98b65a88a443e2c4523f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f50592234cdef68ddc9b98b65a88a443e2c4523f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f50592234cdef68ddc9b98b65a88a443e2c4523f", "patch": "@@ -1,3 +1,8 @@\n+2014-10-02  Mark Wielaard  <mjw@redhat.com>\n+\n+\tPR debug/63239\n+\t* g++.dg/debug/dwarf2/deleted-member-function.C: New testcase.\n+\n 2014-10-04  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* g++.dg/ipa/devirt-47.C: New testcase."}, {"sha": "4cc77e6b9a1d00417ca955b9517f9398ffff81df", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/deleted-member-function.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f50592234cdef68ddc9b98b65a88a443e2c4523f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fdeleted-member-function.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f50592234cdef68ddc9b98b65a88a443e2c4523f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fdeleted-member-function.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fdeleted-member-function.C?ref=f50592234cdef68ddc9b98b65a88a443e2c4523f", "patch": "@@ -0,0 +1,17 @@\n+// { dg-do compile }\n+// { dg-options \"-O -std=c++11 -g -dA\" }\n+// { dg-final { scan-assembler-times \"# DW_AT_GNU_deleted\" 2 } }\n+\n+struct Foo\n+{\n+  Foo () {}\n+  // Make non-copyable\n+  Foo (const Foo&) = delete;\n+  Foo & operator=(const Foo&) = delete;\n+};\n+\n+void\n+bar ()\n+{\n+  Foo foo;\n+}"}, {"sha": "fd6274fde1c1f46de8de8ef77dc54ea716b0f26c", "filename": "include/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f50592234cdef68ddc9b98b65a88a443e2c4523f/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f50592234cdef68ddc9b98b65a88a443e2c4523f/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=f50592234cdef68ddc9b98b65a88a443e2c4523f", "patch": "@@ -1,3 +1,8 @@\n+2013-10-02  Mark Wielaard  <mjw@redhat.com>\n+\n+\tPR debug/63239\n+\t* dwarf2.def (DW_AT_GNU_deleted): New attribute.\n+\n 2014-09-26  Max Ostapenko  <m.ostapenko@partner.samsung.com>\n \n \t* libiberty.h (PEX_STDOUT_APPEND): New flag."}, {"sha": "42a8d4bceeb49c3e44efbbddf062b0780a722d65", "filename": "include/dwarf2.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f50592234cdef68ddc9b98b65a88a443e2c4523f/include%2Fdwarf2.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f50592234cdef68ddc9b98b65a88a443e2c4523f/include%2Fdwarf2.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fdwarf2.def?ref=f50592234cdef68ddc9b98b65a88a443e2c4523f", "patch": "@@ -383,6 +383,8 @@ DW_AT (DW_AT_GNU_all_call_sites, 0x2117)\n DW_AT (DW_AT_GNU_all_source_call_sites, 0x2118)\n /* Section offset into .debug_macro section.  */\n DW_AT (DW_AT_GNU_macros, 0x2119)\n+/* Attribute for C++ deleted special member functions (= delete;).  */\n+DW_AT (DW_AT_GNU_deleted, 0x211a)\n /* Extensions for Fission.  See http://gcc.gnu.org/wiki/DebugFission.  */\n DW_AT (DW_AT_GNU_dwo_name, 0x2130)\n DW_AT (DW_AT_GNU_dwo_id, 0x2131)"}]}