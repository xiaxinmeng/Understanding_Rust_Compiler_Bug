{"sha": "8e7d962aa5b7b9231bd25efeb4f7c257fcea1a75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU3ZDk2MmFhNWI3YjkyMzFiZDI1ZWZlYjRmN2MyNTdmY2VhMWE3NQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-07-11T09:13:26Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-07-11T09:13:26Z"}, "message": "type_traits (is_convertible): Use SFINAE.\n\n2010-07-11  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/std/type_traits (is_convertible): Use SFINAE.\n\t* testsuite/20_util/make_signed/requirements/typedefs_neg.cc: Adjust\n\tdg-error line numbers.\n\t* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc:\n\tLikewise.\n\t* testsuite/20_util/declval/requirements/1_neg.cc: Likewise.\n\nFrom-SVN: r162056", "tree": {"sha": "6131447a0283ebcf995f25c030bf4e40d8fd3880", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6131447a0283ebcf995f25c030bf4e40d8fd3880"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e7d962aa5b7b9231bd25efeb4f7c257fcea1a75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e7d962aa5b7b9231bd25efeb4f7c257fcea1a75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e7d962aa5b7b9231bd25efeb4f7c257fcea1a75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e7d962aa5b7b9231bd25efeb4f7c257fcea1a75/comments", "author": null, "committer": null, "parents": [{"sha": "23b488ada2fb1b984f25b020292378dc59058c0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23b488ada2fb1b984f25b020292378dc59058c0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23b488ada2fb1b984f25b020292378dc59058c0c"}], "stats": {"total": 39, "additions": 27, "deletions": 12}, "files": [{"sha": "d34d2429a317142c6efb567154f34a265a206314", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e7d962aa5b7b9231bd25efeb4f7c257fcea1a75/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e7d962aa5b7b9231bd25efeb4f7c257fcea1a75/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8e7d962aa5b7b9231bd25efeb4f7c257fcea1a75", "patch": "@@ -1,3 +1,12 @@\n+2010-07-11  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/std/type_traits (is_convertible): Use SFINAE.\n+\t* testsuite/20_util/make_signed/requirements/typedefs_neg.cc: Adjust\n+\tdg-error line numbers.\n+\t* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc:\n+\tLikewise.\n+\t* testsuite/20_util/declval/requirements/1_neg.cc: Likewise.\n+\n 2010-07-09  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \tPR libstdc++/44875"}, {"sha": "f4d0b267759c121734d06ba2ff03aa123294da7e", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e7d962aa5b7b9231bd25efeb4f7c257fcea1a75/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e7d962aa5b7b9231bd25efeb4f7c257fcea1a75/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=8e7d962aa5b7b9231bd25efeb4f7c257fcea1a75", "patch": "@@ -307,21 +307,27 @@ namespace std\n     { };\n \n   template<typename _From, typename _To,\n-\t   bool = (is_void<_From>::value || is_void<_To>::value\n-\t\t   || is_function<_To>::value || is_array<_To>::value)>\n+\t   bool = (is_void<_From>::value || is_function<_To>::value\n+\t\t   || is_array<_To>::value)>\n     struct __is_convertible_helper\n-    { static const bool __value = (is_void<_From>::value\n-\t\t\t\t   && is_void<_To>::value); };\n+    { static const bool __value = is_void<_To>::value; };\n \n   template<typename _From, typename _To>\n     class __is_convertible_helper<_From, _To, false>\n     : public __sfinae_types\n     {\n-      static __one __test(_To);\n-      static __two __test(...);\n+      template<typename _To1>\n+        static void __test_aux(_To1);\n+\n+      template<typename _From1, typename _To1>\n+        static decltype(__test_aux<_To1>(std::declval<_From1>()), __one())\n+\t__test(int);\n+\n+      template<typename, typename>\n+        static __two __test(...);\n \n     public:\n-      static const bool __value = sizeof(__test(declval<_From>())) == 1;\n+      static const bool __value = sizeof(__test<_From, _To>(0)) == 1;\n     };\n \n   /// is_convertible"}, {"sha": "f0c6546890943b61d21883267538f9c440d473f1", "filename": "libstdc++-v3/testsuite/20_util/declval/requirements/1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e7d962aa5b7b9231bd25efeb4f7c257fcea1a75/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e7d962aa5b7b9231bd25efeb4f7c257fcea1a75/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc?ref=8e7d962aa5b7b9231bd25efeb4f7c257fcea1a75", "patch": "@@ -19,7 +19,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 676 }\n+// { dg-error \"static assertion failed\" \"\" { target *-*-* } 682 }\n \n #include <utility>\n "}, {"sha": "8a09c65d84bbdf708c3c5239e9fcfdcba8b23fcc", "filename": "libstdc++-v3/testsuite/20_util/make_signed/requirements/typedefs_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e7d962aa5b7b9231bd25efeb4f7c257fcea1a75/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e7d962aa5b7b9231bd25efeb4f7c257fcea1a75/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc?ref=8e7d962aa5b7b9231bd25efeb4f7c257fcea1a75", "patch": "@@ -48,5 +48,5 @@ void test01()\n // { dg-error \"instantiated from here\" \"\" { target *-*-* } 40 }\n // { dg-error \"instantiated from here\" \"\" { target *-*-* } 42 }\n \n-// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 639 }\n-// { dg-error \"declaration of\" \"\" { target *-*-* } 603 }\n+// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 645 }\n+// { dg-error \"declaration of\" \"\" { target *-*-* } 609 }"}, {"sha": "ba684144fc7a672958fe9bdf05e2b23ab6e93068", "filename": "libstdc++-v3/testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e7d962aa5b7b9231bd25efeb4f7c257fcea1a75/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e7d962aa5b7b9231bd25efeb4f7c257fcea1a75/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc?ref=8e7d962aa5b7b9231bd25efeb4f7c257fcea1a75", "patch": "@@ -48,5 +48,5 @@ void test01()\n // { dg-error \"instantiated from here\" \"\" { target *-*-* } 40 }\n // { dg-error \"instantiated from here\" \"\" { target *-*-* } 42 }\n \n-// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 562 }\n-// { dg-error \"declaration of\" \"\" { target *-*-* } 526 }\n+// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 568 }\n+// { dg-error \"declaration of\" \"\" { target *-*-* } 532 }"}]}