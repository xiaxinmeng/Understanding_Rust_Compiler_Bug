{"sha": "7c69566f11b2361bcfac2c53e385a271792d09f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M2OTU2NmYxMWIyMzYxYmNmYWMyYzUzZTM4NWEyNzE3OTJkMDlmMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-06-16T15:45:22Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-06-16T15:45:22Z"}, "message": "method.c (defaulted_late_check): Give the defaulted method the same exception specification as the implicit...\n\n\t* method.c (defaulted_late_check): Give the defaulted method\n\tthe same exception specification as the implicit declaration.\n\nFrom-SVN: r160841", "tree": {"sha": "7c7392e8a65a79e5d3162bb84ba287ea4f5f1339", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c7392e8a65a79e5d3162bb84ba287ea4f5f1339"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c69566f11b2361bcfac2c53e385a271792d09f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c69566f11b2361bcfac2c53e385a271792d09f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c69566f11b2361bcfac2c53e385a271792d09f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c69566f11b2361bcfac2c53e385a271792d09f2/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "33766b66e131cbab54238cbecb8b8c669565deff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33766b66e131cbab54238cbecb8b8c669565deff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33766b66e131cbab54238cbecb8b8c669565deff"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "37a35447dcb2d6292b90f30791140e237614de3f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c69566f11b2361bcfac2c53e385a271792d09f2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c69566f11b2361bcfac2c53e385a271792d09f2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7c69566f11b2361bcfac2c53e385a271792d09f2", "patch": "@@ -1,3 +1,8 @@\n+2010-06-16  Jason Merrill  <jason@redhat.com>\n+\n+\t* method.c (defaulted_late_check): Give the defaulted method\n+\tthe same exception specification as the implicit declaration.\n+\n 2010-06-15  Jason Merrill  <jason@redhat.com>\n \n \t* class.c (add_implicitly_declared_members): Implicit assignment"}, {"sha": "040027787e0f96c794fb03005408a738763d5e7e", "filename": "gcc/cp/method.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c69566f11b2361bcfac2c53e385a271792d09f2/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c69566f11b2361bcfac2c53e385a271792d09f2/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=7c69566f11b2361bcfac2c53e385a271792d09f2", "patch": "@@ -1022,6 +1022,15 @@ defaulted_late_check (tree fn)\n       error_at (DECL_SOURCE_LOCATION (fn),\n \t\t\"does not match expected signature %qD\", implicit_fn);\n     }\n+\n+  /* 8.4.2/2: If it is explicitly defaulted on its first declaration, it is\n+     implicitly considered to have the same exception-specification as if\n+     it had been implicitly declared.  */\n+  if (DECL_DEFAULTED_IN_CLASS_P (fn))\n+    {\n+      tree eh_spec = TYPE_RAISES_EXCEPTIONS (TREE_TYPE (implicit_fn));\n+      TREE_TYPE (fn) = build_exception_variant (TREE_TYPE (fn), eh_spec);\n+    }\n }\n \n /* Returns true iff FN can be explicitly defaulted, and gives any"}, {"sha": "b06e3811ec3963f060820ad5da3128e96bd883f6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c69566f11b2361bcfac2c53e385a271792d09f2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c69566f11b2361bcfac2c53e385a271792d09f2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7c69566f11b2361bcfac2c53e385a271792d09f2", "patch": "@@ -1,3 +1,7 @@\n+2010-06-16  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/noexcept01.C: Test defaulted fns.\n+\n 2010-06-16  Richard Guenther  <rguenther@suse.de>\n \n \tPR c/44555"}, {"sha": "f314684eae8496088510662fe22d6eb8b8cbc0a4", "filename": "gcc/testsuite/g++.dg/cpp0x/noexcept01.C", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c69566f11b2361bcfac2c53e385a271792d09f2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept01.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c69566f11b2361bcfac2c53e385a271792d09f2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept01.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept01.C?ref=7c69566f11b2361bcfac2c53e385a271792d09f2", "patch": "@@ -59,6 +59,14 @@ struct F\n \n SA (noexcept (F()));\n \n+struct G\n+{\n+  G() = default;\n+  ~G() = default;\n+};\n+\n+SA (noexcept (G()));\n+\n template <class T, bool b>\n void tf()\n {"}]}