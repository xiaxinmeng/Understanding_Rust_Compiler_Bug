{"sha": "49bb43bef3b724b9c75418c834974e7a5e83f924", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDliYjQzYmVmM2I3MjRiOWM3NTQxOGM4MzQ5NzRlN2E1ZTgzZjkyNA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2018-01-09T16:27:11Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-01-09T16:27:11Z"}, "message": "re PR rtl-optimization/83628 (performance regression when accessing arrays on alpha)\n\n\tPR target/83628\n\t* combine.c (force_int_to_mode) <case ASHIFT>: Use mode instead of\n\top_mode in the force_to_mode call.\n\nFrom-SVN: r256387", "tree": {"sha": "1562b2eeddcd65558244b90ebbab4c35371fcd0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1562b2eeddcd65558244b90ebbab4c35371fcd0a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49bb43bef3b724b9c75418c834974e7a5e83f924", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49bb43bef3b724b9c75418c834974e7a5e83f924", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49bb43bef3b724b9c75418c834974e7a5e83f924", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49bb43bef3b724b9c75418c834974e7a5e83f924/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "326ac20ea30c776ccff82bf6f3cea8088e33d3b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/326ac20ea30c776ccff82bf6f3cea8088e33d3b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/326ac20ea30c776ccff82bf6f3cea8088e33d3b9"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "a7054e3e9e659c7a084b1ceedef58e133bacbf51", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49bb43bef3b724b9c75418c834974e7a5e83f924/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49bb43bef3b724b9c75418c834974e7a5e83f924/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=49bb43bef3b724b9c75418c834974e7a5e83f924", "patch": "@@ -1,3 +1,9 @@\n+2018-01-09  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/83628\n+\t* combine.c (force_int_to_mode) <case ASHIFT>: Use mode instead of\n+\top_mode in the force_to_mode call.\n+\n 2018-01-09  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* config/aarch64/aarch64.c (aarch64_evpc_trn): Use d.perm.series_p"}, {"sha": "6adc0a7d6f8510ff501a949def3560b3115830eb", "filename": "gcc/combine.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49bb43bef3b724b9c75418c834974e7a5e83f924/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49bb43bef3b724b9c75418c834974e7a5e83f924/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=49bb43bef3b724b9c75418c834974e7a5e83f924", "patch": "@@ -8908,7 +8908,7 @@ force_int_to_mode (rtx x, scalar_int_mode mode, scalar_int_mode xmode,\n \tmask = fuller_mask;\n \n       op0 = gen_lowpart_or_truncate (op_mode,\n-\t\t\t\t     force_to_mode (XEXP (x, 0), op_mode,\n+\t\t\t\t     force_to_mode (XEXP (x, 0), mode,\n \t\t\t\t\t\t    mask, next_select));\n \n       if (op_mode != xmode || op0 != XEXP (x, 0))"}]}