{"sha": "41a182c62d6314c2c3c138ebe358da485691f1b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFhMTgyYzYyZDYzMTRjMmMzYzEzOGViZTM1OGRhNDg1NjkxZjFiNw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@kss-loka.si", "date": "2005-10-03T05:24:08Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2005-10-03T05:24:08Z"}, "message": "target-supports.exp (check_effective_target_vect_shift): Implement with result caching.\n\n\t* lib/target-supports.exp (check_effective_target_vect_shift):\n\tImplement with result caching. Add i?86, x86_64 and ia64 targets.\n\t(check_effective_target_vect_condition): Fix copy-n-pasto.\n\n\t* gcc.dg/vect/pr22480.c : Enable for effective-target vect_shift.\n\t* gcc.dg/vect/vect-shift-1.c: Remove XFAIL for i?86 and x86_64\n\ttargets.\n\nFrom-SVN: r104888", "tree": {"sha": "10114132af635929addd6f80325683b4a5947f9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10114132af635929addd6f80325683b4a5947f9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41a182c62d6314c2c3c138ebe358da485691f1b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41a182c62d6314c2c3c138ebe358da485691f1b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41a182c62d6314c2c3c138ebe358da485691f1b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41a182c62d6314c2c3c138ebe358da485691f1b7/comments", "author": null, "committer": null, "parents": [{"sha": "8e52dd26e3a3f576dad58100401775330219f7f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e52dd26e3a3f576dad58100401775330219f7f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e52dd26e3a3f576dad58100401775330219f7f5"}], "stats": {"total": 39, "additions": 26, "deletions": 13}, "files": [{"sha": "a297cb321bce1ede1b03a835e338056a9f835a4c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41a182c62d6314c2c3c138ebe358da485691f1b7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41a182c62d6314c2c3c138ebe358da485691f1b7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=41a182c62d6314c2c3c138ebe358da485691f1b7", "patch": "@@ -1,3 +1,13 @@\n+2005-10-03  Uros Bizjak  <uros@kss-loka.si>\n+\n+\t* lib/target-supports.exp (check_effective_target_vect_shift):\n+\tImplement with result caching. Add i?86, x86_64 and ia64 targets.\n+\t(check_effective_target_vect_condition): Fix copy-n-pasto.\n+\n+\t* gcc.dg/vect/pr22480.c : Enable for effective-target vect_shift.\n+\t* gcc.dg/vect/vect-shift-1.c: Remove XFAIL for i?86 and x86_64\n+\ttargets.\n+\n 2005-10-02  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/22621"}, {"sha": "a7e238f22717476afbb78fb13739609763b8957e", "filename": "gcc/testsuite/gcc.dg/vect/pr22480.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41a182c62d6314c2c3c138ebe358da485691f1b7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr22480.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41a182c62d6314c2c3c138ebe358da485691f1b7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr22480.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr22480.c?ref=41a182c62d6314c2c3c138ebe358da485691f1b7", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target vect_int } */\n+/* { dg-require-effective-target vect_shift } */\n \n void\n test_1 (void)"}, {"sha": "75070166aae7d2bf2b027c7e65ea618e87b44615", "filename": "gcc/testsuite/gcc.dg/vect/vect-shift-1.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41a182c62d6314c2c3c138ebe358da485691f1b7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-shift-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41a182c62d6314c2c3c138ebe358da485691f1b7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-shift-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-shift-1.c?ref=41a182c62d6314c2c3c138ebe358da485691f1b7", "patch": "@@ -3,9 +3,6 @@\n #include <stdarg.h>\n #include <signal.h>\n \n-#define N 16\n-#define MAX 42\n-\n extern void abort(void); \n \n int main ()\n@@ -23,7 +20,5 @@ int main ()\n   return 0;\n }\n \n-\n-\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "6cbbf146ef3f59238f9638ce5446b5687c9eb3f7", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41a182c62d6314c2c3c138ebe358da485691f1b7/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41a182c62d6314c2c3c138ebe358da485691f1b7/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=41a182c62d6314c2c3c138ebe358da485691f1b7", "patch": "@@ -888,14 +888,22 @@ proc check_effective_target_arm32 { } {\n # Return 1 if the target supports hardware vector shift operation.\n \n proc check_effective_target_vect_shift { } {\n-    if { [istarget powerpc*-*-*] } {\n-\tset answer 1\n+    global et_vect_shift_saved\n+\n+    if [info exists et_vect_shift_saved] {\n+\tverbose \"check_effective_target_vect_shift: using cached result\" 2\n     } else {\n-\tset answer 0\n+\tset et_vect_shift_saved 0\n+\tif { [istarget powerpc*-*-*]\n+\t     || [istarget ia64-*-*]\n+\t     || [istarget i?86-*-*]\n+\t     || [istarget x86_64-*-*] } {\n+\t   set et_vect_shift_saved 1\n+\t}\n     }\n \n-    verbose \"check_effective_target_vect_shift: returning $answer\" 2\n-    return $answer\n+    verbose \"check_effective_target_vect_shift: returning $et_vect_shift_saved\" 2\n+    return $et_vect_shift_saved\n }\n \n # Return 1 if the target supports hardware vectors of long, 0 otherwise.\n@@ -1047,7 +1055,7 @@ proc check_effective_target_vect_no_align { } {\n proc check_effective_target_vect_condition { } {\n     global et_vect_cond_saved\n \n-    if [info exists et_vect_int_cond] {\n+    if [info exists et_vect_cond_saved] {\n \tverbose \"check_effective_target_vect_cond: using cached result\" 2\n     } else {\n \tset et_vect_cond_saved 0"}]}