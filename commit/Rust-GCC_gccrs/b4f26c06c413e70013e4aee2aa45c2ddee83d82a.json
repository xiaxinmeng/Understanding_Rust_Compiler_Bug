{"sha": "b4f26c06c413e70013e4aee2aa45c2ddee83d82a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRmMjZjMDZjNDEzZTcwMDEzZTRhZWUyYWE0NWMyZGRlZTgzZDgyYQ==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2016-06-20T10:50:53Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2016-06-20T10:50:53Z"}, "message": "avr.c (avr_print_operand): Fix \"format not a string literal\" build warnings.\n\n\t* config/avr/avr.c (avr_print_operand): Fix \"format not a string\n\tliteral\" build warnings.\n\t(avr_print_operand_address): Dito.\n\nFrom-SVN: r237588", "tree": {"sha": "afe817e6c4e4b69c85269f6bb1bf5b3b6d6a1303", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afe817e6c4e4b69c85269f6bb1bf5b3b6d6a1303"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4f26c06c413e70013e4aee2aa45c2ddee83d82a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4f26c06c413e70013e4aee2aa45c2ddee83d82a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4f26c06c413e70013e4aee2aa45c2ddee83d82a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4f26c06c413e70013e4aee2aa45c2ddee83d82a/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba70141da3703a488cacf5c7741659fb2b200a78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba70141da3703a488cacf5c7741659fb2b200a78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba70141da3703a488cacf5c7741659fb2b200a78"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "d7d89449e2282f1f57ac4868aa80b9f3f25c9414", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4f26c06c413e70013e4aee2aa45c2ddee83d82a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4f26c06c413e70013e4aee2aa45c2ddee83d82a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4f26c06c413e70013e4aee2aa45c2ddee83d82a", "patch": "@@ -1,3 +1,9 @@\n+2016-06-20  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* config/avr/avr.c (avr_print_operand): Fix \"format not a string\n+\tliteral\" build warnings.\n+\t(avr_print_operand_address): Dito.\n+\n 2016-06-19  David Edelsohn  <dje.gcc@gmail.com>\n \n \tPR target/71375"}, {"sha": "18ed766e0e8a653045c0976539e54564afae5b1e", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4f26c06c413e70013e4aee2aa45c2ddee83d82a/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4f26c06c413e70013e4aee2aa45c2ddee83d82a/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=b4f26c06c413e70013e4aee2aa45c2ddee83d82a", "patch": "@@ -2170,7 +2170,7 @@ avr_print_operand_address (FILE *file, machine_mode /*mode*/, rtx addr)\n   switch (GET_CODE (addr))\n     {\n     case REG:\n-      fprintf (file, ptrreg_to_str (REGNO (addr)));\n+      fprintf (file, \"%s\", ptrreg_to_str (REGNO (addr)));\n       break;\n \n     case PRE_DEC:\n@@ -2284,12 +2284,12 @@ avr_print_operand (FILE *file, rtx x, int code)\n   else if (code == 'E' || code == 'F')\n     {\n       rtx op = XEXP(x, 0);\n-      fprintf (file, reg_names[REGNO (op) + ef]);\n+      fprintf (file, \"%s\", reg_names[REGNO (op) + ef]);\n     }\n   else if (code == 'I' || code == 'J')\n     {\n       rtx op = XEXP(XEXP(x, 0), 0);\n-      fprintf (file, reg_names[REGNO (op) + ij]);\n+      fprintf (file, \"%s\", reg_names[REGNO (op) + ij]);\n     }\n   else if (REG_P (x))\n     {\n@@ -2298,7 +2298,7 @@ avr_print_operand (FILE *file, rtx x, int code)\n       else if (code == 'r' && REGNO (x) < 32)\n         fprintf (file, \"%d\", (int) REGNO (x));\n       else\n-        fprintf (file, reg_names[REGNO (x) + abcd]);\n+        fprintf (file, \"%s\", reg_names[REGNO (x) + abcd]);\n     }\n   else if (CONST_INT_P (x))\n     {"}]}