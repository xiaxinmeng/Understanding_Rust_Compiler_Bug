{"sha": "75b46023e7782781e63d0aca3c5b5f5ddd6cf816", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzViNDYwMjNlNzc4Mjc4MWU2M2QwYWNhM2M1YjVmNWRkZDZjZjgxNg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-19T21:08:18Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-19T21:08:18Z"}, "message": "next_cc0_user and prev_cc0_setter scaffolding\n\n2014-08-19  David Malcolm  <dmalcolm@redhat.com>\n\n\t* rtl.h (next_cc0_user): Strengthen return type from rtx to\n\trtx_insn *.\n\t(prev_cc0_setter): Likewise.\n\n\t* emit-rtl.c (next_cc0_user): Strengthen return type from rtx to\n\trtx_insn *, adding checked casts for now as necessary.\n\t(prev_cc0_setter): Likewise.\n\nFrom-SVN: r214196", "tree": {"sha": "483047209ce9ff66182ec0a91e068be21d6a645f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/483047209ce9ff66182ec0a91e068be21d6a645f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75b46023e7782781e63d0aca3c5b5f5ddd6cf816", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75b46023e7782781e63d0aca3c5b5f5ddd6cf816", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75b46023e7782781e63d0aca3c5b5f5ddd6cf816", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75b46023e7782781e63d0aca3c5b5f5ddd6cf816/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f3222b793db6b9a79d23e019b0395f0907597e75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3222b793db6b9a79d23e019b0395f0907597e75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3222b793db6b9a79d23e019b0395f0907597e75"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "ee05582a1e147801754910e4dfcf8d85e28020f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75b46023e7782781e63d0aca3c5b5f5ddd6cf816/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75b46023e7782781e63d0aca3c5b5f5ddd6cf816/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=75b46023e7782781e63d0aca3c5b5f5ddd6cf816", "patch": "@@ -1,3 +1,13 @@\n+2014-08-19  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* rtl.h (next_cc0_user): Strengthen return type from rtx to\n+\trtx_insn *.\n+\t(prev_cc0_setter): Likewise.\n+\n+\t* emit-rtl.c (next_cc0_user): Strengthen return type from rtx to\n+\trtx_insn *, adding checked casts for now as necessary.\n+\t(prev_cc0_setter): Likewise.\n+\n 2014-08-19  David Malcolm  <dmalcolm@redhat.com>\n \n \t* expr.h (emit_move_insn): Strengthen return type from rtx to"}, {"sha": "0ca59adc4aeb47e13787686443bd8422cc4a6a3a", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75b46023e7782781e63d0aca3c5b5f5ddd6cf816/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75b46023e7782781e63d0aca3c5b5f5ddd6cf816/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=75b46023e7782781e63d0aca3c5b5f5ddd6cf816", "patch": "@@ -3450,39 +3450,39 @@ prev_active_insn (rtx insn)\n \n    Return 0 if we can't find the insn.  */\n \n-rtx\n+rtx_insn *\n next_cc0_user (rtx insn)\n {\n   rtx note = find_reg_note (insn, REG_CC_USER, NULL_RTX);\n \n   if (note)\n-    return XEXP (note, 0);\n+    return safe_as_a <rtx_insn *> (XEXP (note, 0));\n \n   insn = next_nonnote_insn (insn);\n   if (insn && NONJUMP_INSN_P (insn) && GET_CODE (PATTERN (insn)) == SEQUENCE)\n     insn = XVECEXP (PATTERN (insn), 0, 0);\n \n   if (insn && INSN_P (insn) && reg_mentioned_p (cc0_rtx, PATTERN (insn)))\n-    return insn;\n+    return safe_as_a <rtx_insn *> (insn);\n \n   return 0;\n }\n \n /* Find the insn that set CC0 for INSN.  Unless INSN has a REG_CC_SETTER\n    note, it is the previous insn.  */\n \n-rtx\n+rtx_insn *\n prev_cc0_setter (rtx insn)\n {\n   rtx note = find_reg_note (insn, REG_CC_SETTER, NULL_RTX);\n \n   if (note)\n-    return XEXP (note, 0);\n+    return safe_as_a <rtx_insn *> (XEXP (note, 0));\n \n   insn = prev_nonnote_insn (insn);\n   gcc_assert (sets_cc0_p (PATTERN (insn)));\n \n-  return insn;\n+  return safe_as_a <rtx_insn *> (insn);\n }\n #endif\n "}, {"sha": "a47efd8bdb81013ae4d7ac246422680ec8253aaf", "filename": "gcc/rtl.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75b46023e7782781e63d0aca3c5b5f5ddd6cf816/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75b46023e7782781e63d0aca3c5b5f5ddd6cf816/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=75b46023e7782781e63d0aca3c5b5f5ddd6cf816", "patch": "@@ -2440,8 +2440,8 @@ extern rtx_insn *next_real_insn (rtx);\n extern rtx_insn *prev_active_insn (rtx);\n extern rtx_insn *next_active_insn (rtx);\n extern int active_insn_p (const_rtx);\n-extern rtx next_cc0_user (rtx);\n-extern rtx prev_cc0_setter (rtx);\n+extern rtx_insn *next_cc0_user (rtx);\n+extern rtx_insn *prev_cc0_setter (rtx);\n \n /* In emit-rtl.c  */\n extern int insn_line (const_rtx);"}]}