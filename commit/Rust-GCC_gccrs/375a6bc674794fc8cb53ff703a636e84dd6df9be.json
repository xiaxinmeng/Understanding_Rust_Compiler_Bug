{"sha": "375a6bc674794fc8cb53ff703a636e84dd6df9be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc1YTZiYzY3NDc5NGZjOGNiNTNmZjcwM2E2MzZlODRkZDZkZjliZQ==", "commit": {"author": {"name": "Robin Dapp", "email": "rdapp@linux.ibm.com", "date": "2019-04-11T07:04:03Z"}, "committer": {"name": "Robin Dapp", "email": "rdapp@gcc.gnu.org", "date": "2019-04-11T07:04:03Z"}, "message": "S/390: Add arch13 pipeline and model number\n\nThis patch adds the pipeline description and the CPU model number for\narch13.\n\nFrom-SVN: r270272", "tree": {"sha": "e7bffc4ef97be738668921b34eddb7b6d0c4f02e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7bffc4ef97be738668921b34eddb7b6d0c4f02e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/375a6bc674794fc8cb53ff703a636e84dd6df9be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/375a6bc674794fc8cb53ff703a636e84dd6df9be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/375a6bc674794fc8cb53ff703a636e84dd6df9be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/375a6bc674794fc8cb53ff703a636e84dd6df9be/comments", "author": {"login": "rdapp-ibm", "id": 80318053, "node_id": "MDQ6VXNlcjgwMzE4MDUz", "avatar_url": "https://avatars.githubusercontent.com/u/80318053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdapp-ibm", "html_url": "https://github.com/rdapp-ibm", "followers_url": "https://api.github.com/users/rdapp-ibm/followers", "following_url": "https://api.github.com/users/rdapp-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/rdapp-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdapp-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdapp-ibm/subscriptions", "organizations_url": "https://api.github.com/users/rdapp-ibm/orgs", "repos_url": "https://api.github.com/users/rdapp-ibm/repos", "events_url": "https://api.github.com/users/rdapp-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/rdapp-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c15ec5df625aac0e62c059899261be218e078ff9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c15ec5df625aac0e62c059899261be218e078ff9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c15ec5df625aac0e62c059899261be218e078ff9"}], "stats": {"total": 349, "additions": 340, "deletions": 9}, "files": [{"sha": "a111272da865c773ba534631d71c98efe5b1ea3f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375a6bc674794fc8cb53ff703a636e84dd6df9be/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375a6bc674794fc8cb53ff703a636e84dd6df9be/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=375a6bc674794fc8cb53ff703a636e84dd6df9be", "patch": "@@ -1,3 +1,17 @@\n+2019-04-11  Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\t* config/s390/8561.md: New file.\n+\t* config/s390/driver-native.c (s390_host_detect_local_cpu):\n+\tAdd arch13 cpu model.\n+\t* config/s390/s390-opts.h (enum processor_type): Likewise.\n+\t* config/s390/s390.c (s390_get_sched_attrmask): Add arch13.\n+\t(s390_get_unit_mask): Likewise.\n+\t(s390_is_fpd): Likewise.\n+\t(s390_is_fxd): Likewise.\n+\t* config/s390/s390.h (s390_tune_attr): Likewise.\n+\t* config/s390/s390.md: Include arch13 pipeline description.\n+\t* config/s390/s390.opt: Add arch13.\n+\n 2018-04-10  Steve Ellcey  <sellcey@marvell.com>\n \n \tPR rtl-optimization/87763"}, {"sha": "e5a345f4dbad56e70fb494c1fd9af34df7b802ce", "filename": "gcc/config/s390/8561.md", "status": "added", "additions": 287, "deletions": 0, "changes": 287, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375a6bc674794fc8cb53ff703a636e84dd6df9be/gcc%2Fconfig%2Fs390%2F8561.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375a6bc674794fc8cb53ff703a636e84dd6df9be/gcc%2Fconfig%2Fs390%2F8561.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2F8561.md?ref=375a6bc674794fc8cb53ff703a636e84dd6df9be", "patch": "@@ -0,0 +1,287 @@\n+;; Scheduling description for arch13.\n+;;   Copyright (C) 2019 Free Software Foundation, Inc.\n+;;   Contributed by Robin Dapp (rdapp@linux.ibm.com)\n+;; This file is part of GCC.\n+\n+;; GCC is free software; you can redistribute it and/or modify it under\n+;; the terms of the GNU General Public License as published by the Free\n+;; Software Foundation; either version 3, or (at your option) any later\n+;; version.\n+\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+;; WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+;; FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+;; for more details.\n+\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+(define_attr \"arch13_unit_fpd\" \"\"\n+(cond [(eq_attr \"mnemonic\" \"ddb,ddbr,deb,debr,dxbr,sqdb,sqdbr,sqeb,\\\n+sqebr,sqxbr,vfddb,vfdsb,vfsqdb,vfsqsb,wfddb,wfdsb,wfdxb,wfsqdb,wfsqxb\")\n+ (const_int 1)] (const_int 0)))\n+\n+(define_attr \"arch13_unit_fxa\" \"\"\n+(cond [(eq_attr \"mnemonic\" \"a,afi,ag,agf,agfi,agfr,agh,aghi,aghik,\\\n+agr,agrk,ah,ahi,ahik,ahy,al,alc,alcg,alcgr,alcr,alfi,alg,algf,algfi,algfr,\\\n+alghsik,algr,algrk,alhsik,alr,alrk,aly,ar,ark,ay,bras,brasl,etnd,exrl,flogr,\\\n+ic,icm,icmh,icmy,icy,iihf,iilf,ipm,la,larl,lay,lb,lbr,lcgr,lcr,lgb,lgbr,\\\n+lgf,lgfi,lgfr,lgfrl,lgh,lghi,lghr,lghrl,lgr,lh,lhi,lhr,lhrl,lhy,llcr,\\\n+llgcr,llgfr,llghr,llgtr,llhr,llihf,llihh,llihl,llilf,llilh,llill,lngr,lnr,\\\n+loc,locg,locghi,locgr,lochi,locr,lpgr,lpr,lr,lrv,lrvg,lrvgr,lrvh,lrvr,lt,\\\n+ltg,ltgf,ltgfr,ltgr,ltr,m,mfy,mg,mgh,mghi,mgrk,mh,mhi,mhy,ml,mlg,mlgr,mlr,\\\n+mr,ms,msfi,msg,msgf,msgfi,msgfr,msgr,msgrkc,msr,msrkc,msy,n,ng,ngr,ngrk,\\\n+nihf,nihh,nihl,nilf,nilh,nill,nr,nrk,ny,o,og,ogr,ogrk,oihf,oihh,oihl,oilf,\\\n+oilh,oill,or,ork,oy,pfpo,popcnt,risbg,risbgn,rll,rllg,s,sg,sgf,sgfr,sgh,\\\n+sgr,sgrk,sh,shy,sl,slb,slbg,slbgr,slbr,slfi,slg,slgf,slgfi,slgfr,slgr,\\\n+slgrk,sll,sllg,sllk,slr,slrk,sly,sr,sra,srag,srak,srk,srl,srlg,srlk,sy,x,xg,\\\n+xgr,xgrk,xihf,xilf,xr,xrk,xy\")\n+ (const_int 1)] (const_int 0)))\n+\n+(define_attr \"arch13_unit_fxb\" \"\"\n+(cond [(eq_attr \"mnemonic\" \"agsi,algsi,alsi,asi,b,bc,bcr,bi,br,brcl,\\\n+c,cfi,cg,cgf,cgfi,cgfr,cgfrl,cgh,cghi,cghrl,cghsi,cgit,cgr,cgrl,cgrt,ch,\\\n+chi,chrl,chsi,chy,cit,cl,clfhsi,clfi,clfit,clg,clgf,clgfi,clgfr,clgfrl,\\\n+clghrl,clghsi,clgit,clgr,clgrl,clgrt,clgt,clhhsi,clhrl,cli,cliy,clm,clmy,clr,\\\n+clrl,clrt,clt,cly,cr,crl,crt,cy,j,jg,laa,laag,lan,lang,lao,laog,lat,lax,\\\n+laxg,lcdfr,ldgr,ldr,lgat,lgdr,lndfr,lpdfr,lzdr,lzer,mvghi,mvhhi,mvhi,mvi,\\\n+mviy,ni,niy,nop,nopr,ntstg,oi,oiy,ppa,st,stc,stcy,std,stdy,ste,stey,stg,\\\n+stgrl,sth,sthrl,sthy,stoc,stocg,strl,strv,strvg,strvh,sty,tend,tm,tmh,tmhh,\\\n+tmhl,tml,tmlh,tmll,tmy,vlgvb,vlgvf,vlgvg,vlgvh,vlr,vlvgb,vlvgf,vlvgg,vlvgh,\\\n+vlvgp,vst,vstef,vsteg,vstl,vstrl,vstrlr,xi,xiy\")\n+ (const_int 1)] (const_int 0)))\n+\n+(define_attr \"arch13_unit_fxd\" \"\"\n+(cond [(eq_attr \"mnemonic\" \"dlgr,dlr,dr,dsgfr,dsgr\")\n+ (const_int 1)] (const_int 0)))\n+\n+(define_attr \"arch13_unit_lsu\" \"\"\n+(cond [(eq_attr \"mnemonic\" \"a,adb,aeb,ag,agf,agh,agsi,ah,ahy,al,alc,\\\n+alcg,alg,algf,algsi,alsi,aly,asi,ay,c,cdb,ceb,cg,cgf,cgfrl,cgh,cghrl,cghsi,\\\n+cgrl,ch,chrl,chsi,chy,cl,clc,clfhsi,clg,clgf,clgfrl,clghrl,clghsi,clgrl,\\\n+clgt,clhhsi,clhrl,cli,cliy,clm,clmy,clrl,clt,cly,crl,cy,ddb,deb,ear,ic,icm,\\\n+icmh,icmy,icy,l,laa,laag,lan,lang,lao,laog,lat,lax,laxg,lb,lcbb,ld,lde,\\\n+ldeb,ldy,le,ley,lg,lgat,lgb,lgf,lgfrl,lgh,lghrl,lgrl,lh,lhrl,lhy,llc,llgc,\\\n+llgf,llgfrl,llgh,llghrl,llgt,llh,llhrl,loc,locg,lrl,lrv,lrvg,lrvh,lt,ltg,\\\n+ltgf,ly,m,madb,maeb,mdb,meeb,mfy,mg,mgh,mh,mhy,ml,mlg,ms,msdb,mseb,msg,\\\n+msgf,msy,mvghi,mvhhi,mvhi,mvi,mviy,n,ng,ni,niy,ntstg,ny,o,og,oi,oiy,oy,s,\\\n+sar,sdb,seb,sfpc,sg,sgf,sgh,sh,shy,sl,slb,slbg,slg,slgf,sly,sqdb,sqeb,st,\\\n+stc,stcy,std,stdy,ste,stey,stg,stgrl,sth,sthrl,sthy,stoc,stocg,strl,strv,\\\n+strvg,strvh,sty,sy,tabort,tm,tmy,vl,vlbb,vleb,vlef,vleg,vleh,vll,vllezb,\\\n+vllezf,vllezg,vllezh,vllezlf,vlrepb,vlrepf,vlrepg,vlreph,vlrl,vlrlr,vst,\\\n+vstef,vsteg,vstl,vstrl,vstrlr,x,xg,xi,xiy,xy\")\n+ (const_int 1)] (const_int 0)))\n+\n+(define_attr \"arch13_unit_vfu\" \"\"\n+(cond [(eq_attr \"mnemonic\" \"adb,adbr,adtr,aeb,aebr,axbr,axtr,cdb,\\\n+cdbr,cdtr,ceb,cebr,cpsdr,cxbr,cxtr,ddtr,dxtr,fidbr,fidbra,fidtr,fiebr,\\\n+fiebra,fixbr,fixbra,fixtr,lcdbr,lcebr,lcxbr,ldeb,ldebr,ldetr,le,ledbr,ledtr,\\\n+ler,ley,lndbr,lnebr,lnxbr,lpdbr,lpebr,lpxbr,ltdbr,ltdtr,ltebr,ltxbr,ltxtr,\\\n+lxdb,lxdbr,lxdtr,lxeb,lxebr,madb,madbr,maeb,maebr,mdb,mdbr,mdtr,meeb,meebr,\\\n+msdb,msdbr,mseb,msebr,mxbr,mxtr,sdb,sdbr,sdtr,seb,sebr,sxbr,sxtr,tcdb,tceb,\\\n+tcxb,tdcdt,tdcet,tdcxt,vab,vaccb,vacccq,vaccf,vaccg,vacch,vaccq,vacq,vaf,\\\n+vag,vah,vaq,vavgb,vavgf,vavgg,vavgh,vavglb,vavglf,vavglg,vavglh,vbperm,\\\n+vceqb,vceqbs,vceqf,vceqfs,vceqg,vceqgs,vceqh,vceqhs,vchb,vchbs,vchf,vchfs,\\\n+vchg,vchgs,vchh,vchhs,vchlb,vchlbs,vchlf,vchlfs,vchlg,vchlgs,vchlh,vchlhs,\\\n+vcksm,vclzb,vclzf,vclzg,vclzh,vctzb,vctzf,vctzg,vctzh,verimb,verimf,verimg,\\\n+verimh,verllb,verllf,verllg,verllh,verllvb,verllvf,verllvg,verllvh,veslb,\\\n+veslf,veslg,veslh,veslvb,veslvf,veslvg,veslvh,vesrab,vesraf,vesrag,vesrah,\\\n+vesravb,vesravf,vesravg,vesravh,vesrlb,vesrlf,vesrlg,vesrlh,vesrlvb,vesrlvf,\\\n+vesrlvg,vesrlvh,vfadb,vfasb,vfcedb,vfcedbs,vfcesb,vfcesbs,vfchdb,vfchdbs,\\\n+vfchedb,vfchedbs,vfchesb,vfchesbs,vfchsb,vfchsbs,vfeeb,vfeef,vfeeh,vfeezbs,\\\n+vfeezfs,vfeezhs,vfeneb,vfenef,vfeneh,vfenezb,vfenezf,vfenezh,vfidb,vfisb,\\\n+vflcdb,vflcsb,vflndb,vflnsb,vflpdb,vflpsb,vfmadb,vfmasb,vfmaxdb,vfmaxsb,\\\n+vfmdb,vfmindb,vfminsb,vfmsb,vfmsdb,vfmssb,vfnmadb,vfnmasb,vfnmsdb,vfnmssb,\\\n+vfsdb,vfssb,vftcidb,vftcisb,vgbm,vgfmab,vgfmaf,vgfmag,vgfmah,vgfmb,vgfmf,\\\n+vgfmg,vgfmh,vgm,vgmb,vgmf,vgmg,vgmh,vistrb,vistrbs,vistrf,vistrfs,vistrh,\\\n+vistrhs,vlcb,vlcf,vlcg,vlch,vldeb,vleb,vledb,vlef,vleg,vleh,vleib,vleif,vleig,\\\n+vleih,vlpb,vlpf,vlpg,vlph,vmaeb,vmaef,vmaeh,vmahb,vmahf,vmahh,vmalb,vmaleb,\\\n+vmalef,vmaleh,vmalf,vmalhb,vmalhf,vmalhh,vmalhw,vmalob,vmalof,vmaloh,vmaob,\\\n+vmaof,vmaoh,vmeb,vmef,vmeh,vmhb,vmhf,vmhh,vmlb,vmleb,vmlef,vmleh,vmlf,vmlhb,\\\n+vmlhf,vmlhh,vmlhw,vmlob,vmlof,vmloh,vmnb,vmnf,vmng,vmnh,vmnlb,vmnlf,vmnlg,\\\n+vmnlh,vmob,vmof,vmoh,vmrhb,vmrhf,vmrhg,vmrhh,vmrlb,vmrlf,vmrlg,vmrlh,vmslg,\\\n+vmxb,vmxf,vmxg,vmxh,vmxlb,vmxlf,vmxlg,vmxlh,vn,vnc,vnn,vno,vnot,vnx,vo,voc,\\\n+vone,vpdi,vperm,vpkf,vpkg,vpkh,vpklsf,vpklsfs,vpklsg,vpklsgs,vpklsh,\\\n+vpklshs,vpksf,vpksfs,vpksg,vpksgs,vpksh,vpkshs,vpopct,vpopctb,vpopctf,vpopctg,\\\n+vpopcth,vrepb,vrepf,vrepg,vreph,vrepib,vrepif,vrepig,vrepih,vsb,vsbcbiq,vsbiq,\\\n+vscbib,vscbif,vscbig,vscbih,vscbiq,vsegb,vsegf,vsegh,vsel,vsf,vsg,vsh,vsl,\\\n+vslb,vsldb,vsq,vsra,vsrab,vsrl,vsrlb,vsumb,vsumgf,vsumgh,vsumh,vsumqf,\\\n+vsumqg,vtm,vuphb,vuphf,vuphh,vuplb,vuplf,vuplhb,vuplhf,vuplhh,vuplhw,vupllb,\\\n+vupllf,vupllh,vx,vzero,wfadb,wfasb,wfaxb,wfcdb,wfcedb,wfcesb,wfcexb,wfcexbs,\\\n+wfchdb,wfchedb,wfchesb,wfchexb,wfchexbs,wfchsb,wfchxb,wfchxbs,wfcsb,wfidb,\\\n+wfisb,wfixb,wflcdb,wflcsb,wflcxb,wflld,wflndb,wflnsb,wflnxb,wflpdb,wflpsb,\\\n+wflpxb,wfmadb,wfmasb,wfmaxb,wfmaxxb,wfmdb,wfminxb,wfmsb,wfmsdb,wfmssb,wfmsxb,\\\n+wfmxb,wfnmaxb,wfnmsxb,wfsdb,wfssb,wfsxb,wldeb,wledb\")\n+ (const_int 1)] (const_int 0)))\n+\n+(define_attr \"arch13_cracked\" \"\"\n+(cond [(eq_attr \"mnemonic\" \"bas,basr,cdfbr,cdftr,cdgbr,cdgtr,cdlfbr,\\\n+cdlftr,cdlgbr,cdlgtr,cefbr,cegbr,celfbr,celgbr,cfdbr,cfebr,cfxbr,cgdbr,cgdtr,\\\n+cgebr,cgxbr,cgxtr,chhsi,clfdbr,clfdtr,clfebr,clfxbr,clfxtr,clgdbr,clgdtr,\\\n+clgebr,clgxbr,clgxtr,cs,csg,csy,d,efpc,ex,lcgfr,lngfr,lpgfr,lpq,lxr,lzxr,\\\n+rxsbg,stpq,vgef,vgeg,vscef,vsceg,vsteb,vsteh\")\n+ (const_int 1)] (const_int 0)))\n+\n+(define_attr \"arch13_expanded\" \"\"\n+(cond [(eq_attr \"mnemonic\" \"cds,cdsg,cdsy,cxfbr,cxftr,cxgbr,cxgtr,\\\n+cxlfbr,cxlftr,cxlgbr,cxlgtr,dl,dlg,dsg,dsgf,lam,lm,lmg,lmy,sldl,srda,srdl,\\\n+stam,stm,stmg,stmy,tbegin,tbeginc\")\n+ (const_int 1)] (const_int 0)))\n+\n+(define_attr \"arch13_groupalone\" \"\"\n+(cond [(eq_attr \"mnemonic\" \"alc,alcg,alcgr,alcr,axbr,axtr,clc,cxbr,\\\n+cxtr,dlgr,dlr,dr,dsgfr,dsgr,dxbr,dxtr,fixbr,fixbra,fixtr,flogr,lcxbr,lnxbr,\\\n+lpxbr,ltxbr,ltxtr,lxdb,lxdbr,lxdtr,lxeb,lxebr,m,madb,maeb,maebr,mfy,mg,mgrk,\\\n+ml,mlg,mlgr,mlr,mr,msdb,mseb,msebr,mvc,mxbr,mxtr,nc,oc,ppa,sfpc,slb,slbg,\\\n+slbgr,slbr,sqxbr,sxbr,sxtr,tabort,tcxb,tdcxt,tend,xc\")\n+ (const_int 1)] (const_int 0)))\n+\n+(define_attr \"arch13_endgroup\" \"\"\n+(cond [(eq_attr \"mnemonic\" \"bras,brasl,exrl,ipm\")\n+ (const_int 1)] (const_int 0)))\n+\n+(define_attr \"arch13_groupoftwo\" \"\"\n+(cond [(eq_attr \"mnemonic\" \"vacccq,vacq,vfmadb,vfmasb,vfmsdb,vfmssb,\\\n+vfnmadb,vfnmasb,vfnmsdb,vfnmssb,vgfmab,vgfmaf,vgfmag,vgfmah,vmaeb,vmaef,vmaeh,\\\n+vmahb,vmahf,vmahh,vmalb,vmaleb,vmalef,vmaleh,vmalf,vmalhb,vmalhf,vmalhh,\\\n+vmalhw,vmalob,vmalof,vmaloh,vmaob,vmaof,vmaoh,vmslg,vperm,vsbcbiq,vsbiq,vsel,\\\n+wfmadb,wfmasb,wfmaxb,wfmsdb,wfmssb,wfmsxb,wfnmaxb,wfnmsxb\")\n+ (const_int 1)] (const_int 0)))\n+\n+(define_insn_reservation \"arch13_0\" 0\n+  (and (eq_attr \"cpu\" \"arch13\")\n+(eq_attr \"mnemonic\" \"a,afi,ag,agfi,aghi,aghik,agr,agrk,ahi,ahik,al,\\\n+alfi,alg,algf,algfi,algfr,alghsik,algr,algrk,alhsik,alr,alrk,aly,ar,ark,ay,\\\n+b,bc,bcr,bi,br,bras,brasl,brcl,c,cfi,cg,cgfi,cghi,cghsi,cgit,cgr,cgrl,\\\n+cgrt,chi,chsi,cit,cl,clfhsi,clfi,clfit,clg,clgf,clgfi,clgfr,clgfrl,clghrl,\\\n+clghsi,clgit,clgr,clgrl,clgrt,clgt,clhhsi,clhrl,cli,cliy,clr,clrl,clrt,clt,\\\n+cly,cr,crl,crt,cy,etnd,exrl,ic,icm,icmh,icmy,icy,iihf,iilf,j,jg,la,larl,\\\n+lat,lay,lb,lbr,lcdfr,lcgr,lcr,ldgr,ldr,lgat,lgb,lgbr,lgf,lgfi,lgfr,lgfrl,\\\n+lgh,lghi,lghr,lghrl,lgr,lh,lhi,lhr,lhrl,lhy,llcr,llgcr,llgfr,llghr,llgtr,\\\n+llhr,llihf,llihh,llihl,llilf,llilh,llill,lndfr,lngr,lnr,lpdfr,lpgr,lpr,lr,\\\n+lrv,lrvg,lrvgr,lrvh,lrvr,lt,ltg,ltgf,ltgfr,ltgr,ltr,lzdr,lzer,n,ng,ngr,\\\n+ngrk,nihf,nihh,nihl,nilf,nilh,nill,nop,nopr,nr,nrk,ny,o,og,ogr,ogrk,oihf,\\\n+oihh,oihl,oilf,oilh,oill,or,ork,oy,pfpo,risbg,risbgn,rll,rllg,rnsbg,rosbg,\\\n+s,sg,sgr,sgrk,sl,sldl,slfi,slg,slgf,slgfi,slgfr,slgr,slgrk,sll,sllg,\\\n+sllk,slr,slrk,sly,sr,sra,srag,srak,srda,srdl,srk,srl,srlg,srlk,sy,tm,tmh,\\\n+tmhh,tmhl,tml,tmlh,tmll,tmy,vlr,vlvgb,vlvgf,vlvgg,vlvgh,x,xg,xgr,xgrk,xihf,\\\n+xilf,xr,xrk,xy\")) \"nothing\")\n+\n+(define_insn_reservation \"arch13_1\" 1\n+  (and (eq_attr \"cpu\" \"arch13\")\n+(eq_attr \"mnemonic\" \"agf,agfr,agh,agsi,ah,ahy,algsi,alsi,asi,cgf,\\\n+cgfr,cgfrl,cgh,cghrl,ch,chrl,chy,clm,clmy,cpsdr,laa,laag,lan,lang,lao,laog,\\\n+lax,laxg,le,ler,ley,loc,locg,locghi,locgr,lochi,locr,mvghi,mvhhi,mvhi,mvi,\\\n+mviy,ni,niy,ntstg,oi,oiy,sgf,sgfr,sgh,sh,shy,st,stc,stcy,stg,stgrl,sth,\\\n+sthrl,sthy,stoc,stocg,strl,strv,strvg,strvh,sty,vab,vaccb,vacccq,vaccf,\\\n+vaccg,vacch,vaccq,vacq,vaf,vag,vah,vaq,vavgb,vavgf,vavgg,vavgh,vavglb,\\\n+vavglf,vavglg,vavglh,vbperm,vceqb,vceqf,vceqg,vceqh,vchb,vchf,vchg,vchh,\\\n+vchlb,vchlf,vchlg,vchlh,vclzb,vclzf,vclzg,vclzh,vctzb,vctzf,vctzg,vctzh,\\\n+verimb,verimf,verimg,verimh,verllb,verllf,verllg,verllh,verllvb,verllvf,\\\n+verllvg,verllvh,veslb,veslf,veslg,veslh,veslvb,veslvf,veslvg,veslvh,vesrab,\\\n+vesraf,vesrag,vesrah,vesravb,vesravf,vesravg,vesravh,vesrlb,vesrlf,vesrlg,\\\n+vesrlh,vesrlvb,vesrlvf,vesrlvg,vesrlvh,vfcedb,vfcesb,vfchdb,vfchedb,vfchesb,\\\n+vfchsb,vflcdb,vflcsb,vflndb,vflnsb,vflpdb,vflpsb,vfmaxdb,vfmaxsb,vfmindb,\\\n+vfminsb,vgbm,vgm,vgmb,vgmf,vgmg,vgmh,vlcb,vlcf,vlcg,vlch,vleb,vlef,vleg,vleh,\\\n+vleib,vleif,vleig,vleih,vlpb,vlpf,vlpg,vlph,vmnb,vmnf,vmng,vmnh,vmnlb,vmnlf,\\\n+vmnlg,vmnlh,vmrhb,vmrhf,vmrhg,vmrhh,vmrlb,vmrlf,vmrlg,vmrlh,vmxb,vmxf,vmxg,\\\n+vmxh,vmxlb,vmxlf,vmxlg,vmxlh,vn,vnc,vnn,vno,vnot,vnx,vo,voc,vone,vpdi,\\\n+vperm,vpkf,vpkg,vpkh,vpklsf,vpklsg,vpklsh,vpksf,vpksg,vpksh,vpopct,vpopctb,\\\n+vpopctf,vpopctg,vpopcth,vrepb,vrepf,vrepg,vreph,vrepib,vrepif,vrepig,vrepih,\\\n+vsb,vsbcbiq,vsbiq,vscbib,vscbif,vscbig,vscbih,vscbiq,vsegb,vsegf,vsegh,\\\n+vsel,vsf,vsg,vsh,vsl,vslb,vsldb,vsq,vsra,vsrab,vsrl,vsrlb,vuphb,vuphf,\\\n+vuphh,vuplb,vuplf,vuplhb,vuplhf,vuplhh,vuplhw,vupllb,vupllf,vupllh,vx,vzero,\\\n+wfcedb,wfcesb,wfcexb,wfchdb,wfchedb,wfchesb,wfchexb,wfchsb,wfchxb,wflcdb,\\\n+wflcsb,wflcxb,wflndb,wflnsb,wflnxb,wflpdb,wflpsb,wflpxb,wfmaxxb,wfminxb,xi,\\\n+xiy\")) \"nothing\")\n+\n+(define_insn_reservation \"arch13_2\" 2\n+  (and (eq_attr \"cpu\" \"arch13\")\n+(eq_attr \"mnemonic\" \"cdb,cdbr,ceb,cebr,ear,ipm,l,lcbb,lcdbr,lcebr,ld,\\\n+lde,ldy,lg,lgdr,lgrl,llc,llgc,llgf,llgfrl,llgh,llghrl,llgt,llh,llhrl,lm,\\\n+lmg,lmy,lndbr,lnebr,lpdbr,lpebr,lrl,ltdbr,ltebr,ly,popcnt,sar,tcdb,tceb,\\\n+vceqbs,vceqfs,vceqgs,vceqhs,vchbs,vchfs,vchgs,vchhs,vchlbs,vchlfs,vchlgs,\\\n+vchlhs,vfcedbs,vfcesbs,vfchdbs,vfchedbs,vfchesbs,vfchsbs,vfeeb,vfeef,vfeeh,\\\n+vfeneb,vfenef,vfeneh,vfenezb,vfenezf,vfenezh,vftcidb,vftcisb,vistrb,vistrf,\\\n+vistrh,vlgvb,vlgvf,vlgvg,vlgvh,vllezb,vllezf,vllezg,vllezh,vllezlf,vlrepb,\\\n+vlrepf,vlrepg,vlreph,vlrl,vlvgp,vpklsfs,vpklsgs,vpklshs,vpksfs,vpksgs,vpkshs,\\\n+wfcdb,wfcexbs,wfchexbs,wfchxbs,wfcsb\")) \"nothing\")\n+\n+(define_insn_reservation \"arch13_3\" 3\n+  (and (eq_attr \"cpu\" \"arch13\")\n+(eq_attr \"mnemonic\" \"cds,cdsy,mgh,mghi,mh,mhi,mhy,std,stdy,ste,stey,\\\n+vcksm,vfeezbs,vfeezfs,vfeezhs,vgfmab,vgfmaf,vgfmag,vgfmah,vgfmb,vgfmf,vgfmg,\\\n+vgfmh,vistrbs,vistrfs,vistrhs,vl,vlbb,vll,vlrlr,vmaeb,vmaef,vmaeh,vmahb,\\\n+vmahf,vmahh,vmalb,vmaleb,vmalef,vmaleh,vmalf,vmalhb,vmalhf,vmalhh,vmalhw,\\\n+vmalob,vmalof,vmaloh,vmaob,vmaof,vmaoh,vmeb,vmef,vmeh,vmhb,vmhf,vmhh,vmlb,\\\n+vmleb,vmlef,vmleh,vmlf,vmlhb,vmlhf,vmlhh,vmlhw,vmlob,vmlof,vmloh,vmob,vmof,\\\n+vmoh,vsumb,vsumgf,vsumgh,vsumh,vsumqf,vsumqg,vtm\")) \"nothing\")\n+\n+(define_insn_reservation \"arch13_4\" 4\n+  (and (eq_attr \"cpu\" \"arch13\")\n+(eq_attr \"mnemonic\" \"bas,basr,chhsi,clc,ex,lam,lcgfr,lngfr,lpgfr,lxr,\\\n+lzxr,ms,msfi,msgf,msgfi,msgfr,msr,msy,mvc,nc,oc,ppa,rxsbg,tabort,tbegin,\\\n+tbeginc,tend,vst,vstef,vsteg,vstl,vstrl,vstrlr,xc\")) \"nothing\")\n+\n+(define_insn_reservation \"arch13_5\" 5\n+  (and (eq_attr \"cpu\" \"arch13\")\n+(eq_attr \"mnemonic\" \"adb,adbr,aeb,aebr,alc,alcg,alcgr,alcr,cs,csg,\\\n+csy,fidbr,fidbra,fiebr,fiebra,ldeb,ldebr,ledbr,madbr,mdb,mdbr,meeb,meebr,\\\n+msdbr,msrkc,sdb,sdbr,seb,sebr,slb,slbg,slbgr,slbr,stm,stmg,stmy,vfadb,vfasb,\\\n+vfidb,vfisb,vfmadb,vfmasb,vfmdb,vfmsb,vfmsdb,vfmssb,vfnmadb,vfnmasb,vfnmsdb,\\\n+vfnmssb,vfsdb,vfssb,vldeb,vledb,vmslg,wfadb,wfasb,wfidb,wfisb,wflld,wfmadb,\\\n+wfmasb,wfmdb,wfmsb,wfmsdb,wfmssb,wfsdb,wfssb,wldeb,wledb\")) \"nothing\")\n+\n+(define_insn_reservation \"arch13_6\" 6\n+  (and (eq_attr \"cpu\" \"arch13\")\n+(eq_attr \"mnemonic\" \"msg,msgr,sfpc\")) \"nothing\")\n+\n+(define_insn_reservation \"arch13_7\" 7\n+  (and (eq_attr \"cpu\" \"arch13\")\n+(eq_attr \"mnemonic\" \"adtr,cdtr,fidtr,ldetr,ltdtr,msgrkc,sdtr,tdcdt,\\\n+tdcet,vgef,vgeg\")) \"nothing\")\n+\n+(define_insn_reservation \"arch13_8\" 8\n+  (and (eq_attr \"cpu\" \"arch13\")\n+(eq_attr \"mnemonic\" \"cdsg,flogr,lpq,stpq,vsteb,vsteh\")) \"nothing\")\n+\n+(define_insn_reservation \"arch13_9\" 9\n+  (and (eq_attr \"cpu\" \"arch13\")\n+(eq_attr \"mnemonic\" \"cdfbr,cdgbr,cdlfbr,cdlgbr,cefbr,cegbr,celfbr,\\\n+celgbr,cxfbr,cxgbr,cxlfbr,cxlgbr,m,madb,maeb,maebr,mfy,ml,mlr,mr,msdb,mseb,\\\n+msebr,stam,wfaxb,wfixb,wfsxb\")) \"nothing\")\n+\n+(define_insn_reservation \"arch13_10\" 10\n+  (and (eq_attr \"cpu\" \"arch13\")\n+(eq_attr \"mnemonic\" \"lxdb,lxdbr,lxeb,lxebr,vscef,vsceg\")) \"nothing\")\n+\n+(define_insn_reservation \"arch13_11\" 11\n+  (and (eq_attr \"cpu\" \"arch13\")\n+(eq_attr \"mnemonic\" \"cfdbr,cfebr,cgdbr,cgebr,clfdbr,clfebr,clgdbr,\\\n+clgebr,mg,mgrk,mlg,mlgr\")) \"nothing\")\n+\n+(define_insn_reservation \"arch13_12\" 12\n+  (and (eq_attr \"cpu\" \"arch13\")\n+(eq_attr \"mnemonic\" \"cxbr,cxftr,cxlftr,cxtr,tcxb,tdcxt\")) \"nothing\")\n+\n+(define_insn_reservation \"arch13_13\" 13\n+  (and (eq_attr \"cpu\" \"arch13\")\n+(eq_attr \"mnemonic\" \"axbr,axtr,fixbr,fixbra,fixtr,lcxbr,lnxbr,lpxbr,\\\n+ltxbr,ltxtr,lxdtr,sxbr,sxtr\")) \"nothing\")\n+\n+(define_insn_reservation \"arch13_14\" 14\n+  (and (eq_attr \"cpu\" \"arch13\")\n+(eq_attr \"mnemonic\" \"cfxbr,cgxbr,clfxbr,clgxbr,ledtr\")) \"nothing\")\n+\n+(define_insn_reservation \"arch13_16\" 16\n+  (and (eq_attr \"cpu\" \"arch13\")\n+(eq_attr \"mnemonic\" \"cdftr,cdlftr\")) \"nothing\")\n+\n+(define_insn_reservation \"arch13_20\" 20\n+  (and (eq_attr \"cpu\" \"arch13\")\n+(eq_attr \"mnemonic\" \"cdgtr,cdlgtr,cgdtr,cgxtr,clfdtr,clfxtr,clgdtr,\\\n+clgxtr,cxgtr,cxlgtr,d,ddb,ddbr,ddtr,deb,debr,dl,dlg,dlgr,dlr,dr,dsg,dsgf,\\\n+dsgfr,dsgr,dxbr,dxtr,efpc,mdtr,mxbr,mxtr,sqdb,sqdbr,sqeb,sqebr,sqxbr,vfddb,\\\n+vfdsb,vfsqdb,vfsqsb,wfddb,wfdsb,wfdxb,wfmaxb,wfmsxb,wfmxb,wfnmaxb,wfnmsxb,\\\n+wfsqdb,wfsqxb\")) \"nothing\")"}, {"sha": "a386d633a87362b000ee5fe228dc62bcda373dc4", "filename": "gcc/config/s390/driver-native.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375a6bc674794fc8cb53ff703a636e84dd6df9be/gcc%2Fconfig%2Fs390%2Fdriver-native.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375a6bc674794fc8cb53ff703a636e84dd6df9be/gcc%2Fconfig%2Fs390%2Fdriver-native.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fdriver-native.c?ref=375a6bc674794fc8cb53ff703a636e84dd6df9be", "patch": "@@ -119,6 +119,10 @@ s390_host_detect_local_cpu (int argc, const char **argv)\n \t    case 0x3907:\n \t      cpu = \"z14\";\n \t      break;\n+\t    case 0x8561:\n+\t    case 0x8562:\n+\t      cpu = \"arch13\";\n+\t      break;\n \t    default:\n \t      cpu = \"arch13\";\n \t      break;"}, {"sha": "ab41cb883f3c9130a6fa1e1cb630c1485c733936", "filename": "gcc/config/s390/s390-opts.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375a6bc674794fc8cb53ff703a636e84dd6df9be/gcc%2Fconfig%2Fs390%2Fs390-opts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375a6bc674794fc8cb53ff703a636e84dd6df9be/gcc%2Fconfig%2Fs390%2Fs390-opts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-opts.h?ref=375a6bc674794fc8cb53ff703a636e84dd6df9be", "patch": "@@ -37,7 +37,7 @@ enum processor_type\n   PROCESSOR_2827_ZEC12,\n   PROCESSOR_2964_Z13,\n   PROCESSOR_3906_Z14,\n-  PROCESSOR_ARCH13,\n+  PROCESSOR_8561_ARCH13,\n   PROCESSOR_NATIVE,\n   PROCESSOR_max\n };"}, {"sha": "ad8eacdf4dc75a8702908d50acb2f1f544a55e74", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 28, "deletions": 5, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375a6bc674794fc8cb53ff703a636e84dd6df9be/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375a6bc674794fc8cb53ff703a636e84dd6df9be/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=375a6bc674794fc8cb53ff703a636e84dd6df9be", "patch": "@@ -337,7 +337,7 @@ const struct s390_processor processor_table[] =\n   { \"zEC12\",  \"zEC12\",  PROCESSOR_2827_ZEC12,  &zEC12_cost,  10 },\n   { \"z13\",    \"z13\",    PROCESSOR_2964_Z13,    &zEC12_cost,  11 },\n   { \"z14\",    \"arch12\", PROCESSOR_3906_Z14,    &zEC12_cost,  12 },\n-  { \"arch13\", \"\",       PROCESSOR_ARCH13,      &zEC12_cost,  13 },\n+  { \"arch13\", \"\",       PROCESSOR_8561_ARCH13, &zEC12_cost,  13 },\n   { \"native\", \"\",       PROCESSOR_NATIVE,      NULL,         0  }\n };\n \n@@ -14419,7 +14419,6 @@ s390_get_sched_attrmask (rtx_insn *insn)\n \tmask |= S390_SCHED_ATTR_MASK_GROUPOFTWO;\n       break;\n     case PROCESSOR_3906_Z14:\n-    case PROCESSOR_ARCH13:\n       if (get_attr_z14_cracked (insn))\n \tmask |= S390_SCHED_ATTR_MASK_CRACKED;\n       if (get_attr_z14_expanded (insn))\n@@ -14431,6 +14430,18 @@ s390_get_sched_attrmask (rtx_insn *insn)\n       if (get_attr_z14_groupoftwo (insn))\n \tmask |= S390_SCHED_ATTR_MASK_GROUPOFTWO;\n       break;\n+    case PROCESSOR_8561_ARCH13:\n+      if (get_attr_arch13_cracked (insn))\n+\tmask |= S390_SCHED_ATTR_MASK_CRACKED;\n+      if (get_attr_arch13_expanded (insn))\n+\tmask |= S390_SCHED_ATTR_MASK_EXPANDED;\n+      if (get_attr_arch13_endgroup (insn))\n+\tmask |= S390_SCHED_ATTR_MASK_ENDGROUP;\n+      if (get_attr_arch13_groupalone (insn))\n+\tmask |= S390_SCHED_ATTR_MASK_GROUPALONE;\n+      if (get_attr_arch13_groupoftwo (insn))\n+\tmask |= S390_SCHED_ATTR_MASK_GROUPOFTWO;\n+      break;\n     default:\n       gcc_unreachable ();\n     }\n@@ -14456,7 +14467,6 @@ s390_get_unit_mask (rtx_insn *insn, int *units)\n \tmask |= 1 << 3;\n       break;\n     case PROCESSOR_3906_Z14:\n-    case PROCESSOR_ARCH13:\n       *units = 4;\n       if (get_attr_z14_unit_lsu (insn))\n \tmask |= 1 << 0;\n@@ -14467,6 +14477,17 @@ s390_get_unit_mask (rtx_insn *insn, int *units)\n       if (get_attr_z14_unit_vfu (insn))\n \tmask |= 1 << 3;\n       break;\n+    case PROCESSOR_8561_ARCH13:\n+      *units = 4;\n+      if (get_attr_arch13_unit_lsu (insn))\n+\tmask |= 1 << 0;\n+      if (get_attr_arch13_unit_fxa (insn))\n+\tmask |= 1 << 1;\n+      if (get_attr_arch13_unit_fxb (insn))\n+\tmask |= 1 << 2;\n+      if (get_attr_arch13_unit_vfu (insn))\n+\tmask |= 1 << 3;\n+      break;\n     default:\n       gcc_unreachable ();\n     }\n@@ -14479,7 +14500,8 @@ s390_is_fpd (rtx_insn *insn)\n   if (insn == NULL_RTX)\n     return false;\n \n-  return get_attr_z13_unit_fpd (insn) || get_attr_z14_unit_fpd (insn);\n+  return get_attr_z13_unit_fpd (insn) || get_attr_z14_unit_fpd (insn)\n+    || get_attr_arch13_unit_fpd (insn);\n }\n \n static bool\n@@ -14488,7 +14510,8 @@ s390_is_fxd (rtx_insn *insn)\n   if (insn == NULL_RTX)\n     return false;\n \n-  return get_attr_z13_unit_fxd (insn) || get_attr_z14_unit_fxd (insn);\n+  return get_attr_z13_unit_fxd (insn) || get_attr_z14_unit_fxd (insn)\n+    || get_attr_arch13_unit_fxd (insn);\n }\n \n /* Returns TRUE if INSN is a long-running instruction.  */"}, {"sha": "969f58a2ba0cff08fd6e93531c50bd351f591d08", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375a6bc674794fc8cb53ff703a636e84dd6df9be/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375a6bc674794fc8cb53ff703a636e84dd6df9be/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=375a6bc674794fc8cb53ff703a636e84dd6df9be", "patch": "@@ -46,7 +46,7 @@ enum processor_flags\n \n /* This is necessary to avoid a warning about comparing different enum\n    types.  */\n-#define s390_tune_attr ((enum attr_cpu)(s390_tune > PROCESSOR_3906_Z14 ? PROCESSOR_3906_Z14 : s390_tune ))\n+#define s390_tune_attr ((enum attr_cpu)(s390_tune > PROCESSOR_8561_ARCH13 ? PROCESSOR_8561_ARCH13 : s390_tune ))\n \n /* These flags indicate that the generated code should run on a cpu\n    providing the respective hardware facility regardless of the"}, {"sha": "714d8b00a80a9a68e2cf3875ad5468457beaca14", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375a6bc674794fc8cb53ff703a636e84dd6df9be/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375a6bc674794fc8cb53ff703a636e84dd6df9be/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=375a6bc674794fc8cb53ff703a636e84dd6df9be", "patch": "@@ -513,7 +513,7 @@\n ;; Processor type.  This attribute must exactly match the processor_type\n ;; enumeration in s390.h.\n \n-(define_attr \"cpu\" \"z900,z990,z9_109,z9_ec,z10,z196,zEC12,z13,z14\"\n+(define_attr \"cpu\" \"z900,z990,z9_109,z9_ec,z10,z196,zEC12,z13,z14,arch13\"\n   (const (symbol_ref \"s390_tune_attr\")))\n \n (define_attr \"cpu_facility\"\n@@ -613,6 +613,9 @@\n ;; Pipeline description for z14\n (include \"3906.md\")\n \n+;; Pipeline description for arch13\n+(include \"8561.md\")\n+\n ;; Predicates\n (include \"predicates.md\")\n "}, {"sha": "639f1679a56feccd65522e9173a9d5e05dec64ec", "filename": "gcc/config/s390/s390.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375a6bc674794fc8cb53ff703a636e84dd6df9be/gcc%2Fconfig%2Fs390%2Fs390.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375a6bc674794fc8cb53ff703a636e84dd6df9be/gcc%2Fconfig%2Fs390%2Fs390.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.opt?ref=375a6bc674794fc8cb53ff703a636e84dd6df9be", "patch": "@@ -110,7 +110,7 @@ EnumValue\n Enum(processor_type) String(arch12) Value(PROCESSOR_3906_Z14)\n \n EnumValue\n-Enum(processor_type) String(arch13) Value(PROCESSOR_ARCH13)\n+Enum(processor_type) String(arch13) Value(PROCESSOR_8561_ARCH13)\n \n EnumValue\n Enum(processor_type) String(native) Value(PROCESSOR_NATIVE) DriverOnly"}]}