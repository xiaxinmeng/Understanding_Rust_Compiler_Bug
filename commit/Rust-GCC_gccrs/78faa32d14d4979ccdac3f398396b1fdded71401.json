{"sha": "78faa32d14d4979ccdac3f398396b1fdded71401", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhmYWEzMmQxNGQ0OTc5Y2NkYWMzZjM5ODM5NmIxZmRkZWQ3MTQwMQ==", "commit": {"author": {"name": "Franz Sirl", "email": "Franz.Sirl-kernel@lauterbach.com", "date": "2001-04-13T10:14:47Z"}, "committer": {"name": "Franz Sirl", "email": "sirl@gcc.gnu.org", "date": "2001-04-13T10:14:47Z"}, "message": "Makefile.in (STAGE1_CFLAGS): Pass down.\n\n        2000-04-13  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n        * Makefile.in (STAGE1_CFLAGS): Pass down.\n\ngcc/\n        * Makefile.in (CFLAGS, BOOT_CFLAGS): Partly revert 2000-10-27 patch.\n        (stage1_build): Instead pass down STAGE1_CFLAGS here. Pass down.\n        MAKEINFO and MAKEINFOFLAGS too.\n        (stage4_build): Correctly order -B flags.\n\nFrom-SVN: r41335", "tree": {"sha": "e68b5195c272e71ac8a74fa3790dd2ef1896ad66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e68b5195c272e71ac8a74fa3790dd2ef1896ad66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78faa32d14d4979ccdac3f398396b1fdded71401", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78faa32d14d4979ccdac3f398396b1fdded71401", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78faa32d14d4979ccdac3f398396b1fdded71401", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78faa32d14d4979ccdac3f398396b1fdded71401/comments", "author": {"login": "jinkama-san", "id": 1462162, "node_id": "MDQ6VXNlcjE0NjIxNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1462162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinkama-san", "html_url": "https://github.com/jinkama-san", "followers_url": "https://api.github.com/users/jinkama-san/followers", "following_url": "https://api.github.com/users/jinkama-san/following{/other_user}", "gists_url": "https://api.github.com/users/jinkama-san/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinkama-san/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinkama-san/subscriptions", "organizations_url": "https://api.github.com/users/jinkama-san/orgs", "repos_url": "https://api.github.com/users/jinkama-san/repos", "events_url": "https://api.github.com/users/jinkama-san/events{/privacy}", "received_events_url": "https://api.github.com/users/jinkama-san/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "948421e0c986f6ff4040a792f69ad3018aeac4fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/948421e0c986f6ff4040a792f69ad3018aeac4fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/948421e0c986f6ff4040a792f69ad3018aeac4fb"}], "stats": {"total": 30, "additions": 21, "deletions": 9}, "files": [{"sha": "b94ded234a4e15e164ef36090bb982ce229f5cff", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78faa32d14d4979ccdac3f398396b1fdded71401/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78faa32d14d4979ccdac3f398396b1fdded71401/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=78faa32d14d4979ccdac3f398396b1fdded71401", "patch": "@@ -1,3 +1,7 @@\n+2001-04-13  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n+\n+\t* Makefile.in (STAGE1_CFLAGS): Pass down.\n+\n 2001-04-13  Alan Modra  <amodra@one.net.au>\n \n \t* config.guess: Add hppa64-linux support.  Note for next import that"}, {"sha": "959d7305d5179e4638605aeebf373c57fbf3ce3c", "filename": "Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78faa32d14d4979ccdac3f398396b1fdded71401/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78faa32d14d4979ccdac3f398396b1fdded71401/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=78faa32d14d4979ccdac3f398396b1fdded71401", "patch": "@@ -475,6 +475,7 @@ EXTRA_GCC_FLAGS = \\\n \t\"`echo 'LIBGCC2_DEBUG_CFLAGS=$(LIBGCC2_DEBUG_CFLAGS)' | sed -e s/.*=$$/XFOO=/`\" \\\n \t\"`echo 'LIBGCC2_INCLUDES=$(LIBGCC2_INCLUDES)' | sed -e s/.*=$$/XFOO=/`\" \\\n \t\"`echo 'ENQUIRE=$(ENQUIRE)' | sed -e s/.*=$$/XFOO=/`\" \\\n+\t\"`echo 'STAGE1_CFLAGS=$(STAGE1_CFLAGS)' | sed -e s/.*=$$/XFOO=/`\" \\\n \t\"`echo 'BOOT_CFLAGS=$(BOOT_CFLAGS)' | sed -e s/.*=$$/XFOO=/`\"\n \n GCC_FLAGS_TO_PASS = $(BASE_FLAGS_TO_PASS) $(EXTRA_GCC_FLAGS)"}, {"sha": "93c77bce2313189d3ce30778774c70a2ceea67d3", "filename": "gcc/Makefile.in", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78faa32d14d4979ccdac3f398396b1fdded71401/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78faa32d14d4979ccdac3f398396b1fdded71401/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=78faa32d14d4979ccdac3f398396b1fdded71401", "patch": "@@ -59,17 +59,20 @@ INTL_TARGETS = intl.all intl.install\n BOOT_LANGUAGES = c @all_boot_languages@\n \n # Various ways of specifying flags for compilations:\n-# CFLAGS is for the user to override to, e.g., do a bootstrap with -O2.\n-# BOOT_CFLAGS is the value of CFLAGS to pass to the stage2 and stage3\n-# compilations.\n+# CFLAGS is for the user to override to, e.g., do a cross build with -O2.\n+# For recursive  bootstrap builds CFLAGS is used to pass in STAGE1_CFLAGS\n+# or BOOT_CFLAGS\n+# STAGE1_CFLAGS is set by configure on some targets or passed from toplevel\n+# and sets the CFLAGS passed to stage1 of a bootstrap compilation.\n+# BOOT_CFLAGS is the value of CFLAGS to pass to the stage2, stage3 and stage4\n+# bootstrap compilations.\n # XCFLAGS is used for most compilations but not when using the GCC just built.\n # TCFLAGS is used for compilations with the GCC just built.\n-# STAGE1_CFLAGS is set by configure on some targets.\n XCFLAGS =\n TCFLAGS =\n-BOOT_CFLAGS = -g -O2\n+CFLAGS = -g\n STAGE1_CFLAGS = -g @stage1_cflags@\n-CFLAGS = $(STAGE1_CFLAGS)\n+BOOT_CFLAGS = -g -O2\n \n # The warning flags are separate from BOOT_CFLAGS because people tend to\n # override optimization flags and we'd like them to still have warnings\n@@ -2942,9 +2945,13 @@ STAGE2_FLAGS_TO_PASS = \\\n \n # Only build the C compiler for stage1, because that is the only one that\n # we can guarantee will build with the native compiler, and also it is the\n-# only thing useful for building stage2.\n+# only thing useful for building stage2. STAGE1_CFLAGS (via CFLAGS),\n+# MAKEINFO and MAKEINFOFLAGS are explicitly passed here to make them\n+# overrideable (for a bootstrap build stage1 also builds gcc.info).\n stage1_build:\n-\t$(MAKE) CC=\"$(CC)\" libdir=$(libdir) LANGUAGES=\"$(BOOT_LANGUAGES)\"\n+\t$(MAKE) CC=\"$(CC)\" libdir=$(libdir) LANGUAGES=\"$(BOOT_LANGUAGES)\" \\\n+\t\tCFLAGS=\"$(STAGE1_CFLAGS)\" MAKEINFO=\"$(MAKEINFO)\" \\\n+\t\tMAKEINFOFLAGS=\"$(MAKEINFOFLAGS)\"\n \ttouch stage1_build\n \techo stage1_build > stage_last\n \n@@ -2979,7 +2986,7 @@ stage3_copy: stage3_build\n \techo stage4_build > stage_last\n \n stage4_build: stage3_copy\n-\t$(MAKE) CC=\"stage3/xgcc$(exeext) -B$(build_tooldir)/bin/ -Bstage3/\" \\\n+\t$(MAKE) CC=\"stage3/xgcc$(exeext) -Bstage3/ -B$(build_tooldir)/bin/\" \\\n \t\t STAGE_PREFIX=stage3/ \\\n \t\t $(STAGE2_FLAGS_TO_PASS)\n \ttouch stage4_build"}]}