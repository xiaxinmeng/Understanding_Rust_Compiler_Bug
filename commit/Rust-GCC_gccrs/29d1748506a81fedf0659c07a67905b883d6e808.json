{"sha": "29d1748506a81fedf0659c07a67905b883d6e808", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjlkMTc0ODUwNmE4MWZlZGYwNjU5YzA3YTY3OTA1Yjg4M2Q2ZTgwOA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-05-16T15:20:47Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-05-16T15:20:47Z"}, "message": "tree.c (build_common_builtin_nodes): Always clear TREE_NOTHROW on BUILT_IN_ALLOCA if stack checking is enabled.\n\n\t* tree.c (build_common_builtin_nodes): Always clear TREE_NOTHROW on\n\tBUILT_IN_ALLOCA if stack checking is enabled.\n\nFrom-SVN: r159457", "tree": {"sha": "2e373c59f43096e04f961f5f14f75741b13b6968", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e373c59f43096e04f961f5f14f75741b13b6968"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29d1748506a81fedf0659c07a67905b883d6e808", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29d1748506a81fedf0659c07a67905b883d6e808", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29d1748506a81fedf0659c07a67905b883d6e808", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29d1748506a81fedf0659c07a67905b883d6e808/comments", "author": null, "committer": null, "parents": [{"sha": "a6590c31ac2964fe8a416c4ef3f82a751f98b6ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6590c31ac2964fe8a416c4ef3f82a751f98b6ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6590c31ac2964fe8a416c4ef3f82a751f98b6ab"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "cd3a80fd95295b5dd83a84efb1100422a0baba46", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29d1748506a81fedf0659c07a67905b883d6e808/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29d1748506a81fedf0659c07a67905b883d6e808/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=29d1748506a81fedf0659c07a67905b883d6e808", "patch": "@@ -1,3 +1,8 @@\n+2010-05-16  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tree.c (build_common_builtin_nodes): Always clear TREE_NOTHROW on\n+\tBUILT_IN_ALLOCA if stack checking is enabled.\n+\n 2010-05-16  Richard Guenther  <rguenther@suse.de>\n \n \t* var-tracking.c (vars_copy_1): Inline ...\n@@ -33,7 +38,8 @@\n \n 2010-05-15  Jan Hubicka  <jh@suse.cz>\n \n-\t* ipa-prop.c (ipa_prop_read_section): Add sanity check that node is analyzed.\n+\t* ipa-prop.c (ipa_prop_read_section): Add sanity check that node is\n+\tanalyzed.\n \t* passes.c (ipa_write_summaries): Write all analyzed nodes.\n \n 2010-05-15  Steven Bosscher  <steven@gcc.gnu.org>"}, {"sha": "3c456a2f409f9473210db7ae67b2e61d010bf287", "filename": "gcc/tree.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29d1748506a81fedf0659c07a67905b883d6e808/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29d1748506a81fedf0659c07a67905b883d6e808/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=29d1748506a81fedf0659c07a67905b883d6e808", "patch": "@@ -9083,10 +9083,13 @@ build_common_builtin_nodes (void)\n       tmp = tree_cons (NULL_TREE, size_type_node, void_list_node);\n       ftype = build_function_type (ptr_type_node, tmp);\n       local_define_builtin (\"__builtin_alloca\", ftype, BUILT_IN_ALLOCA,\n-\t\t\t    \"alloca\",\n-\t\t\t    ECF_MALLOC | (flag_stack_check ? 0 : ECF_NOTHROW));\n+\t\t\t    \"alloca\", ECF_MALLOC | ECF_NOTHROW);\n     }\n \n+  /* If we're checking the stack, `alloca' can throw.  */\n+  if (flag_stack_check)\n+    TREE_NOTHROW (built_in_decls[BUILT_IN_ALLOCA]) = 0;\n+\n   tmp = tree_cons (NULL_TREE, ptr_type_node, void_list_node);\n   tmp = tree_cons (NULL_TREE, ptr_type_node, tmp);\n   tmp = tree_cons (NULL_TREE, ptr_type_node, tmp);"}]}