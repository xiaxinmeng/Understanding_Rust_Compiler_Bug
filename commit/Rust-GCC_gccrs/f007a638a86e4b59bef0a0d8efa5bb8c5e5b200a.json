{"sha": "f007a638a86e4b59bef0a0d8efa5bb8c5e5b200a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjAwN2E2MzhhODZlNGI1OWJlZjBhMGQ4ZWZhNWJiOGM1ZTViMjAwYQ==", "commit": {"author": {"name": "Indu Bhagat", "email": "indu.bhagat@oracle.com", "date": "2021-07-19T17:24:59Z"}, "committer": {"name": "Indu Bhagat", "email": "indu.bhagat@oracle.com", "date": "2021-07-19T17:34:39Z"}, "message": "debug: Allow means for targets to opt out of CTF/BTF support\n\nCTF/BTF debug formats can be safely enabled for all ELF-based targets by\ndefault in GCC.\n\nCTF/BTF debug formats now adopt a similar approach as taken for DWARF debug\nformat via the DWARF2_DEBUGGING_INFO.\n  - By default, CTF/BTF formats can be enabled for all ELF-based targets.\n  - By default, CTF/BTF formats can be disabled for all non ELF-based targets.\n  - If the user passed a -gctf but CTF is not enabled for the target, GCC\n  issues an error to the user (as is done currently with other debug formats) -\n  \"target system does not support the 'ctf' debug format\". Analogous behavior\n  for -gbtf command line option.\n\nA previous commit disabled the CTF and BTF testcases on the AIX platform. This\nis not necessary now that CTF and BTF debug formats are disabled by default on\nall non-ELF targets. GCC emits an error message when -gctf/-gbtf is used on\nsuch platforms and these tests will be skipped.\n\ngcc/\n\n\t* config/elfos.h (CTF_DEBUGGING_INFO): New definition.\n\t(BTF_DEBUGGING_INFO): Likewise.\n\t* doc/tm.texi.in: Document the new macros.\n\t* doc/tm.texi: Regenerated.\n\t* toplev.c: Guard initialization of debug hooks.\n\ngcc/testsuite/\n\n\t* gcc.dg/debug/btf/btf.exp: Do not run BTF testsuite if target does not\n\tsupport BTF format. Remove redundant check for AIX.\n\t* gcc.dg/debug/ctf/ctf.exp: Do not run CTF testsuite if target does not\n\tsupport CTF format. Remove redundant check for AIX.\n\t* lib/gcc-dg.exp: Remove redundant check for AIX.", "tree": {"sha": "6ad99d077df3bf835c6cee4f71f724cbaca49996", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ad99d077df3bf835c6cee4f71f724cbaca49996"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f007a638a86e4b59bef0a0d8efa5bb8c5e5b200a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f007a638a86e4b59bef0a0d8efa5bb8c5e5b200a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f007a638a86e4b59bef0a0d8efa5bb8c5e5b200a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f007a638a86e4b59bef0a0d8efa5bb8c5e5b200a/comments", "author": {"login": "ibhagatgnu", "id": 51812649, "node_id": "MDQ6VXNlcjUxODEyNjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/51812649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibhagatgnu", "html_url": "https://github.com/ibhagatgnu", "followers_url": "https://api.github.com/users/ibhagatgnu/followers", "following_url": "https://api.github.com/users/ibhagatgnu/following{/other_user}", "gists_url": "https://api.github.com/users/ibhagatgnu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibhagatgnu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibhagatgnu/subscriptions", "organizations_url": "https://api.github.com/users/ibhagatgnu/orgs", "repos_url": "https://api.github.com/users/ibhagatgnu/repos", "events_url": "https://api.github.com/users/ibhagatgnu/events{/privacy}", "received_events_url": "https://api.github.com/users/ibhagatgnu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibhagatgnu", "id": 51812649, "node_id": "MDQ6VXNlcjUxODEyNjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/51812649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibhagatgnu", "html_url": "https://github.com/ibhagatgnu", "followers_url": "https://api.github.com/users/ibhagatgnu/followers", "following_url": "https://api.github.com/users/ibhagatgnu/following{/other_user}", "gists_url": "https://api.github.com/users/ibhagatgnu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibhagatgnu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibhagatgnu/subscriptions", "organizations_url": "https://api.github.com/users/ibhagatgnu/orgs", "repos_url": "https://api.github.com/users/ibhagatgnu/repos", "events_url": "https://api.github.com/users/ibhagatgnu/events{/privacy}", "received_events_url": "https://api.github.com/users/ibhagatgnu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "483dd64546f1c7aa6ad8986eee570849d25f15e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/483dd64546f1c7aa6ad8986eee570849d25f15e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/483dd64546f1c7aa6ad8986eee570849d25f15e3"}], "stats": {"total": 104, "additions": 87, "deletions": 17}, "files": [{"sha": "e5cb487a133c2809556f12fb350cc9c2134a0281", "filename": "gcc/config/elfos.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f007a638a86e4b59bef0a0d8efa5bb8c5e5b200a/gcc%2Fconfig%2Felfos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f007a638a86e4b59bef0a0d8efa5bb8c5e5b200a/gcc%2Fconfig%2Felfos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Felfos.h?ref=f007a638a86e4b59bef0a0d8efa5bb8c5e5b200a", "patch": "@@ -68,6 +68,14 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #define DWARF2_DEBUGGING_INFO 1\n \n+/* All ELF targets can support CTF.  */\n+\n+#define CTF_DEBUGGING_INFO 1\n+\n+/* All ELF targets can support BTF.  */\n+\n+#define BTF_DEBUGGING_INFO 1\n+\n /* The GNU tools operate better with dwarf2, and it is required by some\n    psABI's.  Since we don't have any native tools to be compatible with,\n    default to dwarf2.  */"}, {"sha": "c8f4abe3e41ad79fd24a10cb24ac85db64a964c8", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f007a638a86e4b59bef0a0d8efa5bb8c5e5b200a/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f007a638a86e4b59bef0a0d8efa5bb8c5e5b200a/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=f007a638a86e4b59bef0a0d8efa5bb8c5e5b200a", "patch": "@@ -9947,6 +9947,8 @@ This describes how to specify debugging information.\n * File Names and DBX:: Macros controlling output of file names in DBX format.\n * DWARF::              Macros for DWARF format.\n * VMS Debug::          Macros for VMS debug format.\n+* CTF Debug::          Macros for CTF debug format.\n+* BTF Debug::          Macros for BTF debug format.\n @end menu\n \n @node All Debuggers\n@@ -10374,6 +10376,30 @@ behavior is controlled by @code{TARGET_OPTION_OPTIMIZATION} and\n @code{TARGET_OPTION_OVERRIDE}.\n @end defmac\n \n+@need 2000\n+@node CTF Debug\n+@subsection Macros for CTF Debug Format\n+\n+@c prevent bad page break with this line\n+Here are macros for CTF debug format.\n+\n+@defmac CTF_DEBUGGING_INFO\n+Define this macro if GCC should produce debugging output in CTF debug\n+format in response to the @option{-gctf} option.\n+@end defmac\n+\n+@need 2000\n+@node BTF Debug\n+@subsection Macros for BTF Debug Format\n+\n+@c prevent bad page break with this line\n+Here are macros for BTF debug format.\n+\n+@defmac BTF_DEBUGGING_INFO\n+Define this macro if GCC should produce debugging output in BTF debug\n+format in response to the @option{-gbtf} option.\n+@end defmac\n+\n @node Floating Point\n @section Cross Compilation and Floating Point\n @cindex cross compilation and floating point"}, {"sha": "9c4b50160533f58a2a4d9ae881a2db5d0b38cafa", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f007a638a86e4b59bef0a0d8efa5bb8c5e5b200a/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f007a638a86e4b59bef0a0d8efa5bb8c5e5b200a/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=f007a638a86e4b59bef0a0d8efa5bb8c5e5b200a", "patch": "@@ -6613,6 +6613,8 @@ This describes how to specify debugging information.\n * File Names and DBX:: Macros controlling output of file names in DBX format.\n * DWARF::              Macros for DWARF format.\n * VMS Debug::          Macros for VMS debug format.\n+* CTF Debug::          Macros for CTF debug format.\n+* BTF Debug::          Macros for BTF debug format.\n @end menu\n \n @node All Debuggers\n@@ -6994,6 +6996,30 @@ behavior is controlled by @code{TARGET_OPTION_OPTIMIZATION} and\n @code{TARGET_OPTION_OVERRIDE}.\n @end defmac\n \n+@need 2000\n+@node CTF Debug\n+@subsection Macros for CTF Debug Format\n+\n+@c prevent bad page break with this line\n+Here are macros for CTF debug format.\n+\n+@defmac CTF_DEBUGGING_INFO\n+Define this macro if GCC should produce debugging output in CTF debug\n+format in response to the @option{-gctf} option.\n+@end defmac\n+\n+@need 2000\n+@node BTF Debug\n+@subsection Macros for BTF Debug Format\n+\n+@c prevent bad page break with this line\n+Here are macros for BTF debug format.\n+\n+@defmac BTF_DEBUGGING_INFO\n+Define this macro if GCC should produce debugging output in BTF debug\n+format in response to the @option{-gbtf} option.\n+@end defmac\n+\n @node Floating Point\n @section Cross Compilation and Floating Point\n @cindex cross compilation and floating point"}, {"sha": "15593fdf671722ed576b3ca1b11c41cfc564e9f3", "filename": "gcc/testsuite/gcc.dg/debug/btf/btf.exp", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f007a638a86e4b59bef0a0d8efa5bb8c5e5b200a/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fbtf%2Fbtf.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f007a638a86e4b59bef0a0d8efa5bb8c5e5b200a/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fbtf%2Fbtf.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fbtf%2Fbtf.exp?ref=f007a638a86e4b59bef0a0d8efa5bb8c5e5b200a", "patch": "@@ -24,11 +24,6 @@ if { [istarget nvptx-*-*] } {\n     return\n }\n \n-if { [istarget \"powerpc-ibm-aix*\"] } {\n-    set torture_execute_xfail \"powerpc-ibm-aix*\"\n-    return\n-}\n-\n # If a testcase doesn't have special options, use these.\n global DEFAULT_CFLAGS\n if ![info exists DEFAULT_CFLAGS] then {\n@@ -39,8 +34,15 @@ if ![info exists DEFAULT_CFLAGS] then {\n dg-init\n \n # Main loop.\n-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\] ]] \\\n-\t\"\" $DEFAULT_CFLAGS\n+set comp_output [gcc_target_compile \\\n+    \"$srcdir/$subdir/../trivial.c\" \"trivial.S\" assembly \\\n+    \"additional_flags=-gbtf\"]\n+if { ! [string match \"*: target system does not support the * debug format*\" \\\n+    $comp_output] } {\n+    remove-build-file \"trivial.S\"\n+    dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\] ]] \\\n+\t    \"\" $DEFAULT_CFLAGS\n+}\n \n # All done.\n dg-finish"}, {"sha": "7ad6723019c86874511972beb855490623fc5463", "filename": "gcc/testsuite/gcc.dg/debug/ctf/ctf.exp", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f007a638a86e4b59bef0a0d8efa5bb8c5e5b200a/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fctf%2Fctf.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f007a638a86e4b59bef0a0d8efa5bb8c5e5b200a/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fctf%2Fctf.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fctf%2Fctf.exp?ref=f007a638a86e4b59bef0a0d8efa5bb8c5e5b200a", "patch": "@@ -24,11 +24,6 @@ if { [istarget nvptx-*-*] } {\n     return\n }\n \n-if { [istarget \"powerpc-ibm-aix*\"] } {\n-    set torture_execute_xfail \"powerpc-ibm-aix*\"\n-    return\n-}\n-\n # If a testcase doesn't have special options, use these.\n global DEFAULT_CFLAGS\n if ![info exists DEFAULT_CFLAGS] then {\n@@ -39,8 +34,15 @@ if ![info exists DEFAULT_CFLAGS] then {\n dg-init\n \n # Main loop.\n-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\] ]] \\\n-\t\"\" $DEFAULT_CFLAGS\n+set comp_output [gcc_target_compile \\\n+    \"$srcdir/$subdir/../trivial.c\" \"trivial.S\" assembly \\\n+    \"additional_flags=-gctf\"]\n+if { ! [string match \"*: target system does not support the * debug format*\" \\\n+    $comp_output] } {\n+    remove-build-file \"trivial.S\"\n+    dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\] ]] \\\n+\t    \"\" $DEFAULT_CFLAGS\n+}\n \n # All done.\n dg-finish"}, {"sha": "7edd070d71dc3e5e49d0f807c7758d77f1735217", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f007a638a86e4b59bef0a0d8efa5bb8c5e5b200a/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f007a638a86e4b59bef0a0d8efa5bb8c5e5b200a/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=f007a638a86e4b59bef0a0d8efa5bb8c5e5b200a", "patch": "@@ -641,7 +641,6 @@ proc gcc-dg-frontend-supports-ctf { target_compile trivial } {\n proc gcc-dg-target-supports-debug-format { target_compile trivial type } {\n     global srcdir subdir\n \n-    if {$type == \"-gctf\" && [istarget *-*-aix*]} { return 0 }\n     set comp_output [$target_compile \\\n \t    \"$srcdir/$subdir/$trivial\" \"trivial.S\" assembly \\\n \t    \"additional_flags=$type\"]"}, {"sha": "14d1335e79e6699907ba51048cb5f480340620b8", "filename": "gcc/toplev.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f007a638a86e4b59bef0a0d8efa5bb8c5e5b200a/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f007a638a86e4b59bef0a0d8efa5bb8c5e5b200a/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=f007a638a86e4b59bef0a0d8efa5bb8c5e5b200a", "patch": "@@ -1463,8 +1463,15 @@ process_options (void)\n     debug_hooks = &xcoff_debug_hooks;\n #endif\n #ifdef DWARF2_DEBUGGING_INFO\n-  else if (dwarf_debuginfo_p ()\n-\t   || dwarf_based_debuginfo_p ())\n+  else if (dwarf_debuginfo_p ())\n+    debug_hooks = &dwarf2_debug_hooks;\n+#endif\n+#ifdef CTF_DEBUGGING_INFO\n+  else if (ctf_debuginfo_p ())\n+    debug_hooks = &dwarf2_debug_hooks;\n+#endif\n+#ifdef BTF_DEBUGGING_INFO\n+  else if (btf_debuginfo_p ())\n     debug_hooks = &dwarf2_debug_hooks;\n #endif\n #ifdef VMS_DEBUGGING_INFO"}]}