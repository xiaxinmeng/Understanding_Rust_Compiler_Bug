{"sha": "7426e9a2184753165137e20fc3b354a1c5b5acad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQyNmU5YTIxODQ3NTMxNjUxMzdlMjBmYzNiMzU0YTFjNWI1YWNhZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-03-16T05:21:42Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-03-16T05:21:42Z"}, "message": "ia64.h (ASM_OUTPUT_DWARF_OFFSET): New.\n\n        * config/ia64/ia64.h (ASM_OUTPUT_DWARF_OFFSET): New.\n        (ASM_OUTPUT_DWARF_PCREL): New.\n        * config/ia64/hpux.h (ASM_OUTPUT_DWARF_OFFSET): Remove.\n\nFrom-SVN: r40537", "tree": {"sha": "ea9c1b461752bc3d261d9e47b74406eb542164ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea9c1b461752bc3d261d9e47b74406eb542164ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7426e9a2184753165137e20fc3b354a1c5b5acad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7426e9a2184753165137e20fc3b354a1c5b5acad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7426e9a2184753165137e20fc3b354a1c5b5acad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7426e9a2184753165137e20fc3b354a1c5b5acad/comments", "author": null, "committer": null, "parents": [{"sha": "11bca3093b1b818d88bb5264d3ace1e39d0b46d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11bca3093b1b818d88bb5264d3ace1e39d0b46d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11bca3093b1b818d88bb5264d3ace1e39d0b46d1"}], "stats": {"total": 63, "additions": 30, "deletions": 33}, "files": [{"sha": "bbb6c585de94f7386a5ee92a3b701b21b7186709", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7426e9a2184753165137e20fc3b354a1c5b5acad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7426e9a2184753165137e20fc3b354a1c5b5acad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7426e9a2184753165137e20fc3b354a1c5b5acad", "patch": "@@ -1,3 +1,9 @@\n+2001-03-15  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/ia64/ia64.h (ASM_OUTPUT_DWARF_OFFSET): New.\n+\t(ASM_OUTPUT_DWARF_PCREL): New.\n+\t* config/ia64/hpux.h (ASM_OUTPUT_DWARF_OFFSET): Remove.\n+\n 2001-03-16  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* cppfiles.c (stack_include_file): Use MAX of sysp."}, {"sha": "7da303840f307affc475e0e549d6bfe116bfaf82", "filename": "gcc/config/ia64/hpux.h", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7426e9a2184753165137e20fc3b354a1c5b5acad/gcc%2Fconfig%2Fia64%2Fhpux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7426e9a2184753165137e20fc3b354a1c5b5acad/gcc%2Fconfig%2Fia64%2Fhpux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fhpux.h?ref=7426e9a2184753165137e20fc3b354a1c5b5acad", "patch": "@@ -77,16 +77,3 @@ Boston, MA 02111-1307, USA.  */\n \n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT (MASK_DWARF2_ASM | MASK_BIG_ENDIAN)\n-\n-/* We need this macro to output DWARF2 information correctly.  The macro\n-   is defined in dwarf2out.c, but it will not do section relative offsets\n-   which messes up our ability to debug using gdb.  */\n-\n-#undef ASM_OUTPUT_DWARF_OFFSET\n-#define ASM_OUTPUT_DWARF_OFFSET(FILE,LABEL)\t\t\t\t\\\n- do {\t\t\t\t\t\t\t\t\t\\\n-\tfprintf ((FILE), \"\\t%s\\t\", UNALIGNED_OFFSET_ASM_OP);\t\t\\\n-\tfprintf ((FILE), \"@secrel(\");                                   \\\n-\tassemble_name (FILE, LABEL);\t\t\t\t\t\\\n-\tfprintf ((FILE), \")\");                                          \\\n-  } while (0)"}, {"sha": "a90c9fa490b4f47dd1c3e9bc32c89927184bd865", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 24, "deletions": 20, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7426e9a2184753165137e20fc3b354a1c5b5acad/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7426e9a2184753165137e20fc3b354a1c5b5acad/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=7426e9a2184753165137e20fc3b354a1c5b5acad", "patch": "@@ -2518,21 +2518,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* An rtx used to mask the return address found via RETURN_ADDR_RTX, so that it\n    does not contain any extraneous set bits in it.  */\n /* #define MASK_RETURN_ADDR */\n-\n-/* Define this macro to 0 if your target supports DWARF 2 frame unwind\n-   information, but it does not yet work with exception handling.  Otherwise,\n-   if your target supports this information (if it defines\n-   `INCOMING_RETURN_ADDR_RTX' and either `UNALIGNED_INT_ASM_OP' or\n-   `OBJECT_FORMAT_ELF'), GCC will provide a default definition of 1.\n-\n-   If this macro is defined to 1, the DWARF 2 unwinder will be the default\n-   exception handling mechanism; otherwise, setjmp/longjmp will be used by\n-   default.\n-\n-   If this macro is defined to anything, the DWARF 2 unwinder will be used\n-   instead of inline unwinders and __unwind_function in the non-setjmp case.  */\n-/* #define DWARF2_UNWIND_INFO */\n-\n \f\n /* Assembler Commands for Alignment.  */\n \n@@ -2632,12 +2617,31 @@ do {\t\t\t\t\t\t\t\t\t\\\n    add brackets around the label.  */\n \n #define ASM_OUTPUT_DEBUG_LABEL(FILE, PREFIX, NUM) \\\n-  do\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\\\n-      fprintf (FILE, \"[.%s%d:]\\n\", PREFIX, NUM);\t\\\n-    }\t\t\t\t\t\t\t\\\n-  while (0)\n+  fprintf (FILE, \"[.%s%d:]\\n\", PREFIX, NUM)\n \n+/* Use section-relative relocations for debugging offsets.  Unlike other\n+   targets that fake this by putting the section VMA at 0, IA-64 has \n+   proper relocations for them.  */\n+#define ASM_OUTPUT_DWARF_OFFSET(FILE, SIZE, LABEL)\t\\\n+  do {\t\t\t\t\t\t\t\\\n+    fputs (((SIZE) == 4 ? UNALIGNED_INT_ASM_OP\t\t\\\n+\t    : (SIZE) == 8 ? UNALIGNED_DOUBLE_INT_ASM_OP\t\\\n+\t    : (abort (), \"\")), FILE);\t\t\t\\\n+    fputs (\"@secrel(\", FILE);\t\t\t\t\\\n+    assemble_name (FILE, LABEL);\t\t\t\\\n+    fputc (')', FILE);\t\t\t\t\t\\\n+  } while (0)\n+\n+/* Emit a PC-relative relocation.  */\n+#define ASM_OUTPUT_DWARF_PCREL(FILE, SIZE, LABEL)\t\\\n+  do {\t\t\t\t\t\t\t\\\n+    fputs (((SIZE) == 4 ? UNALIGNED_INT_ASM_OP\t\t\\\n+\t    : (SIZE) == 8 ? UNALIGNED_DOUBLE_INT_ASM_OP\t\\\n+\t    : (abort (), \"\")), FILE);\t\t\t\\\n+    fputs (\"@pcrel(\", FILE);\t\t\t\t\\\n+    assemble_name (FILE, LABEL);\t\t\t\\\n+    fputc (')', FILE);\t\t\t\t\t\\\n+  } while (0)\n \f\n /* Cross Compilation and Floating Point.  */\n "}]}