{"sha": "089e52f7738e1085904143a7a38f3cd9de3d0893", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg5ZTUyZjc3MzhlMTA4NTkwNDE0M2E3YTM4ZjNjZDlkZTNkMDg5Mw==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2004-02-20T01:48:51Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2004-02-20T01:48:51Z"}, "message": "* Makefile.direct, alloc.c: Resync to upstream 6.3 alpha 1.\n\nFrom-SVN: r78142", "tree": {"sha": "f4b115dae0cf9f01a2da88d5dfd6cc6f105f5515", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4b115dae0cf9f01a2da88d5dfd6cc6f105f5515"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/089e52f7738e1085904143a7a38f3cd9de3d0893", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/089e52f7738e1085904143a7a38f3cd9de3d0893", "html_url": "https://github.com/Rust-GCC/gccrs/commit/089e52f7738e1085904143a7a38f3cd9de3d0893", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/089e52f7738e1085904143a7a38f3cd9de3d0893/comments", "author": null, "committer": null, "parents": [{"sha": "e0c34369b81d9334b04833c2fa7de08282b3929f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0c34369b81d9334b04833c2fa7de08282b3929f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0c34369b81d9334b04833c2fa7de08282b3929f"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "da5d649e98f17d3b3882a9451387950ab507eb8f", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/089e52f7738e1085904143a7a38f3cd9de3d0893/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/089e52f7738e1085904143a7a38f3cd9de3d0893/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=089e52f7738e1085904143a7a38f3cd9de3d0893", "patch": "@@ -1,3 +1,7 @@\n+2004-02-19  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* Makefile.direct, alloc.c: Resync to upstream 6.3 alpha 1.\n+\n 2004-01-20  Andrew Haley  <aph@redhat.com>\n \n \t* include/private/gcconfig.h (USE_MMAP): Define for all Linux."}, {"sha": "52b9137a922e772c8c659ac5f5718a812eba19b6", "filename": "boehm-gc/Makefile.direct", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/089e52f7738e1085904143a7a38f3cd9de3d0893/boehm-gc%2FMakefile.direct", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/089e52f7738e1085904143a7a38f3cd9de3d0893/boehm-gc%2FMakefile.direct", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FMakefile.direct?ref=089e52f7738e1085904143a7a38f3cd9de3d0893", "patch": "@@ -10,13 +10,20 @@\n #\t c++ interface to gc.a\n # cord/de - builds dumb editor based on cords.\n ABI_FLAG= \n+# ABI_FLAG should be the cc flag that specifies the ABI.  On most\n+# platforms this will be the empty string.  Possible values:\n+# +DD64 for 64-bit executable on HP/UX.\n+# -n32, -n64, -o32 for SGI/MIPS ABIs.\n+\n+AS_ABI_FLAG=$(ABI_FLAG)\n+# ABI flag for assembler.  On HP/UX this is +A64 for 64 bit\n+# executables.\n+\n CC=cc $(ABI_FLAG)\n CXX=g++ $(ABI_FLAG)\n-AS=as $(ABI_FLAG)\n+AS=as $(AS_ABI_FLAG)\n #  The above doesn't work with gas, which doesn't run cpp.\n #  Define AS as `gcc -c -x assembler-with-cpp' instead.\n-#  Under Irix 6, you will have to specify the ABI (-o32, -n32, or -64)\n-#  if you use something other than the default ABI on your machine.\n \n # Redefining srcdir allows object code for the nonPCR version of the collector\n # to be generated in different directories.\n@@ -57,7 +64,7 @@ HOSTCFLAGS=$(CFLAGS)\n #   gc.h before performing thr_ or dl* or GC_ operations.)\n #   Must also define -D_REENTRANT.\n # -DGC_SOLARIS_PTHREADS enables support for Solaris pthreads.\n-#   Define SOLARIS_THREADS as well.\n+#   (Internally this define GC_SOLARIS_THREADS as well.)\n # -DGC_IRIX_THREADS enables support for Irix pthreads.  See README.irix.\n # -DGC_HPUX_THREADS enables support for HP/UX 11 pthreads.\n #   Also requires -D_REENTRANT or -D_POSIX_C_SOURCE=199506L. See README.hp."}, {"sha": "d2b874fc7704b352556cd934af1933645820bf9a", "filename": "boehm-gc/alloc.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/089e52f7738e1085904143a7a38f3cd9de3d0893/boehm-gc%2Falloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/089e52f7738e1085904143a7a38f3cd9de3d0893/boehm-gc%2Falloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Falloc.c?ref=089e52f7738e1085904143a7a38f3cd9de3d0893", "patch": "@@ -126,7 +126,6 @@ int GC_n_attempts = 0;\t\t/* Number of attempts at finishing\t*/\n     unsigned long time_diff;\n     \n     if ((count++ & 3) != 0) return(0);\n-#ifndef NO_CLOCK\n     GET_TIME(current_time);\n     time_diff = MS_TIME_DIFF(current_time,GC_start_time);\n     if (time_diff >= GC_time_limit) {\n@@ -139,7 +138,6 @@ int GC_n_attempts = 0;\t\t/* Number of attempts at finishing\t*/\n #\tendif\n     \treturn(1);\n     }\n-#endif\n     return(0);\n   }\n #endif /* !SMALL_CONFIG */"}]}