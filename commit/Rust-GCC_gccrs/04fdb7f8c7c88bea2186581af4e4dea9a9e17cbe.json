{"sha": "04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDRmZGI3ZjhjN2M4OGJlYTIxODY1ODFhZjRlNGRlYTlhOWUxN2NiZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-16T13:29:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-16T13:29:34Z"}, "message": "Add new tests.\n\nFrom-SVN: r127554", "tree": {"sha": "b9f6b5e670836a472bb7cde795d78ce5e62b1fef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9f6b5e670836a472bb7cde795d78ce5e62b1fef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe/comments", "author": null, "committer": null, "parents": [{"sha": "833eddffb0a850f332d856dbcb628730455102ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/833eddffb0a850f332d856dbcb628730455102ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/833eddffb0a850f332d856dbcb628730455102ec"}], "stats": {"total": 204, "additions": 204, "deletions": 0}, "files": [{"sha": "db109b3d24fd20ca9f59a41d201259c53c5f36f3", "filename": "gcc/testsuite/gnat.dg/access3.adb", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe/gcc%2Ftestsuite%2Fgnat.dg%2Faccess3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe/gcc%2Ftestsuite%2Fgnat.dg%2Faccess3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faccess3.adb?ref=04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe", "patch": "@@ -0,0 +1,16 @@\n+\n+package body access3 is\n+   \n+   type IT_Access is not null access all IT'Class;\n+   for IT_Access'Storage_Size use 0;\n+   \n+   procedure Op\n+     (Obj_T2 : in out T2;\n+      Obj_IT : not null access IT'Class)\n+   is \n+      X : constant IT_Access := Obj_IT.all'Unchecked_Access;\n+   begin\n+      null;\n+   end Op;\n+\n+end access3;"}, {"sha": "18d453b329e2f72e2800746788efc63ac59ec632", "filename": "gcc/testsuite/gnat.dg/access3.ads", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe/gcc%2Ftestsuite%2Fgnat.dg%2Faccess3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe/gcc%2Ftestsuite%2Fgnat.dg%2Faccess3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faccess3.ads?ref=04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe", "patch": "@@ -0,0 +1,11 @@\n+\n+package access3 is\n+   type IT is limited interface;\n+   type T is limited new IT with null record;\n+   \n+   type T2 is tagged limited null record;\n+   \n+   procedure Op\n+     (Obj_T2 : in out T2;\n+      Obj_IT : not null access IT'Class);\n+end access3;"}, {"sha": "2b0062741353953261c2e2ad920e373c1b39e261", "filename": "gcc/testsuite/gnat.dg/access4.adb", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe/gcc%2Ftestsuite%2Fgnat.dg%2Faccess4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe/gcc%2Ftestsuite%2Fgnat.dg%2Faccess4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faccess4.adb?ref=04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe", "patch": "@@ -0,0 +1,9 @@\n+--  { dg-do run }\n+\n+with access3; use access3;\n+procedure access4 is\n+   Obj_IT : aliased T;\n+   Obj_T2 : T2;\n+begin\n+   Obj_T2.Op (Obj_IT'Access);\n+end;"}, {"sha": "5d49f9ba68d741c3f24408423a48630fb16d9f5b", "filename": "gcc/testsuite/gnat.dg/bad_array.adb", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe/gcc%2Ftestsuite%2Fgnat.dg%2Fbad_array.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe/gcc%2Ftestsuite%2Fgnat.dg%2Fbad_array.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fbad_array.adb?ref=04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe", "patch": "@@ -0,0 +1,7 @@\n+--  { dg-do compile }\n+\n+procedure Bad_Array is\n+   A1 : array(Character range <> ) of Character := ( 'a', 'b', 'c' );\n+begin\n+   null;\n+end Bad_Array;"}, {"sha": "859daaf7fe3b950fe44c2ce46d0cb52a9933a766", "filename": "gcc/testsuite/gnat.dg/discr4.adb", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr4.adb?ref=04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe", "patch": "@@ -0,0 +1,47 @@\n+--  { dg-do run }\n+--  { dg-options \"-gnatws\" }\n+\n+procedure discr4 is\n+   package Pkg is\n+      type Rec_Comp (D : access Integer) is record\n+         Data : Integer;\n+      end record;\n+--\n+      type I is interface;\n+      procedure Test (Obj : I) is abstract;\n+--\n+      Num : aliased Integer := 10;\n+--\n+      type Root (D : access Integer) is tagged record\n+         C1 : Rec_Comp (D);           --  test\n+      end record;\n+--\n+      type DT is new Root and I with null record;\n+--\n+      procedure Dummy (Obj : DT);\n+      procedure Test  (Obj : DT);\n+   end;\n+--\n+   package body Pkg is\n+      procedure Dummy (Obj : DT) is\n+      begin\n+         raise Program_Error;\n+      end;\n+--\n+      procedure Test (Obj : DT) is\n+      begin\n+         null;\n+      end;\n+   end;\n+--\n+   use Pkg;\n+--\n+   procedure CW_Test (Obj : I'Class) is\n+   begin\n+      Obj.Test;\n+   end;\n+--\n+   Obj : DT (Num'Access);\n+begin\n+   CW_Test (Obj);\n+end;"}, {"sha": "ed57b13359e1020f4ba98680b93267ea73ebf4a1", "filename": "gcc/testsuite/gnat.dg/dispatch2.adb", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe/gcc%2Ftestsuite%2Fgnat.dg%2Fdispatch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe/gcc%2Ftestsuite%2Fgnat.dg%2Fdispatch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdispatch2.adb?ref=04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe", "patch": "@@ -0,0 +1,10 @@\n+--  { dg-do run }\n+\n+with dispatch2_p; use dispatch2_p;\n+procedure dispatch2 is\n+   Obj : Object_Ptr := new Object;\n+begin\n+   if Obj.Get_Ptr /= Obj.Impl_Of then\n+      raise Program_Error;\n+   end if;\n+end;"}, {"sha": "243c3ca977a6abdf8a48f9348140b1e9077f8841", "filename": "gcc/testsuite/gnat.dg/dispatch2_p.adb", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe/gcc%2Ftestsuite%2Fgnat.dg%2Fdispatch2_p.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe/gcc%2Ftestsuite%2Fgnat.dg%2Fdispatch2_p.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdispatch2_p.adb?ref=04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe", "patch": "@@ -0,0 +1,7 @@\n+--\n+package body dispatch2_p is\n+  function Impl_Of (Self : access Object) return Object_Ptr is\n+  begin\n+    return Object_Ptr (Self);\n+  end Impl_Of;\n+end;"}, {"sha": "e7852b446b5c0aa65730774b7fb47de9b5d816cb", "filename": "gcc/testsuite/gnat.dg/dispatch2_p.ads", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe/gcc%2Ftestsuite%2Fgnat.dg%2Fdispatch2_p.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe/gcc%2Ftestsuite%2Fgnat.dg%2Fdispatch2_p.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdispatch2_p.ads?ref=04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe", "patch": "@@ -0,0 +1,8 @@\n+package dispatch2_p is\n+  type Object     is tagged null record;\n+  type Object_Ptr is access all Object'CLASS;\n+--\n+  function Impl_Of (Self : access Object) return Object_Ptr;\n+  function Get_Ptr (Self : access Object) return Object_Ptr\n+    renames Impl_Of;\n+end;"}, {"sha": "0ec89c2f3ab5440370b76fbc543a8f3a9c354e99", "filename": "gcc/testsuite/gnat.dg/renaming2.adb", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe/gcc%2Ftestsuite%2Fgnat.dg%2Frenaming2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe/gcc%2Ftestsuite%2Fgnat.dg%2Frenaming2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Frenaming2.adb?ref=04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe", "patch": "@@ -0,0 +1,61 @@\n+--  { dg-do run }\n+--  { dg-options \"-gnatws\" }\n+\n+with Text_IO;\n+procedure renaming2 is\n+    type RealNodeData;\n+    type RefRealNodeData is access RealNodeData;\n+\n+    type ExpressionEntry;\n+    type RefExpression is access ExpressionEntry;\n+\n+    type RefDefUseEntry is access Natural;\n+    \n+    type ExpressionEntry is\n+    record\n+        Number : RefDefUseEntry;\n+        Id     : Integer;\n+    end record;\n+   \n+    type RealNodeData is\n+    record\n+        Node   : RefExpression;\n+        Id     : Integer; \n+    end record;\n+            \n+    for ExpressionEntry use\n+    record\n+        Number at 0 range  0 .. 63;\n+        Id     at 8 range  0 .. 31;\n+    end record ;\n+        \n+    for RealNodeData use\n+    record\n+        Node   at  0 range  0 .. 63;\n+        Id     at 8 range  0 .. 31;\n+    end record ;\n+        \n+    U_Node : RefDefUseEntry := new Natural'(1); \n+    E_Node : RefExpression := new ExpressionEntry'(Number => U_Node,\n+                                                   Id => 2);\n+    R_Node : RefRealNodeData := new RealNodeData'(Node => E_Node, \n+                                                   Id => 3);\n+        \n+    procedure test_routine (NodeRealData : RefRealNodeData)\n+    is  \n+        OldHead   : RefDefUseEntry renames NodeRealData.all.Node.all.Number;\n+        OldHead1  : constant RefDefUseEntry := OldHead;\n+    begin\n+      NodeRealData.all.Node := new ExpressionEntry'(Number => null, Id => 4);\n+      declare                                                   \n+        OldHead2 : constant RefDefUseEntry := OldHead;\n+      begin\n+        if OldHead1 /= OldHead2\n+        then\n+          Text_IO.Put_Line (\" OldHead changed !!!\");\n+        end if;\n+      end;\n+    end;\n+begin\n+  test_routine (R_Node);\n+end;"}, {"sha": "72eff6e2ecdefde1e65f102fd7f35e159383bba9", "filename": "gcc/testsuite/gnat.dg/specs/gnati.ads", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fgnati.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fgnati.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fgnati.ads?ref=04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe", "patch": "@@ -0,0 +1,13 @@\n+--  { dg-do compile }\n+--  { dg-options \"-gnatI\" }\n+\n+package gnati is\n+   type j is range 1 .. 50;\n+   for j'size use 1;\n+   type n is new integer;\n+   for n'alignment use -99;\n+   type e is (a, b);\n+   for e use (1, 1);\n+   type r is record x : integer; end record;\n+   for r use record x at 0 range 0 .. 0; end record;\n+end gnati;"}, {"sha": "66cc79bdba0736d3bc29822a8d1d3406c75c0520", "filename": "gcc/testsuite/gnat.dg/warn3.adb", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn3.adb?ref=04fdb7f8c7c88bea2186581af4e4dea9a9e17cbe", "patch": "@@ -0,0 +1,15 @@\n+--  { dg-do compile }\n+--  { dg-options \"-gnatwu\" }\n+\n+with Ada.Command_Line; use Ada.Command_Line;\n+with Text_IO; use Text_IO;\n+procedure warn3 is\n+   type Weekdays is (Sun, Mon, Tue, Wed, Thu, Fri, Sat);\n+begin\n+   if Argument_Count > 0 then\n+      Put_Line\n+        (Argument (1) & \" is weekday number\"\n+         & Integer'Image\n+            (Weekdays'Pos (Weekdays'Value (Argument (1)))));\n+   end if;\n+end;"}]}