{"sha": "2266617f0e641aaa3bffbeda3af200adaf9fc8d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI2NjYxN2YwZTY0MWFhYTNiZmZiZWRhM2FmMjAwYWRhZjlmYzhkMg==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2012-11-06T05:01:47Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2012-11-06T05:01:47Z"}, "message": "epiphany.c (epiphany_address_cost): Use MODE parameter.\n\n        * config/epiphany/epiphany.c (epiphany_address_cost):\n        Use MODE parameter.\n\nFrom-SVN: r193205", "tree": {"sha": "f0a04f222e2f46b642413467003f32e7e133edac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0a04f222e2f46b642413467003f32e7e133edac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2266617f0e641aaa3bffbeda3af200adaf9fc8d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2266617f0e641aaa3bffbeda3af200adaf9fc8d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2266617f0e641aaa3bffbeda3af200adaf9fc8d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2266617f0e641aaa3bffbeda3af200adaf9fc8d2/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3649b9b791c54f35a8bfb5540711dc4112acce7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3649b9b791c54f35a8bfb5540711dc4112acce7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3649b9b791c54f35a8bfb5540711dc4112acce7d"}], "stats": {"total": 34, "additions": 24, "deletions": 10}, "files": [{"sha": "49ac3b1bcbe0911d0f261ee8329a5baeef1ae066", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2266617f0e641aaa3bffbeda3af200adaf9fc8d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2266617f0e641aaa3bffbeda3af200adaf9fc8d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2266617f0e641aaa3bffbeda3af200adaf9fc8d2", "patch": "@@ -1,3 +1,8 @@\n+2012-11-06  Joern Rennecke  <joern.rennecke@embecosm.com>\n+\n+\t* config/epiphany/epiphany.c (epiphany_address_cost):\n+\tUse MODE parameter.\n+\n 2012-11-05  Sriraman Tallam  <tmsriram@google.com>\n \n \t* doc/tm.texi.in (TARGET_OPTION_FUNCTION_VERSIONS): New hook"}, {"sha": "0b3e27a566916d2b479851081dbc7c659a9adaf5", "filename": "gcc/config/epiphany/epiphany.c", "status": "modified", "additions": 19, "deletions": 10, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2266617f0e641aaa3bffbeda3af200adaf9fc8d2/gcc%2Fconfig%2Fepiphany%2Fepiphany.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2266617f0e641aaa3bffbeda3af200adaf9fc8d2/gcc%2Fconfig%2Fepiphany%2Fepiphany.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fepiphany%2Fepiphany.c?ref=2266617f0e641aaa3bffbeda3af200adaf9fc8d2", "patch": "@@ -729,7 +729,7 @@ epiphany_rtx_costs (rtx x, int code, int outer_code, int opno ATTRIBUTE_UNUSED,\n    If ADDR is not a valid address, its cost is irrelevant.  */\n \n static int\n-epiphany_address_cost (rtx addr, enum machine_mode mode ATTRIBUTE_UNUSED,\n+epiphany_address_cost (rtx addr, enum machine_mode mode,\n \t\t       addr_space_t as ATTRIBUTE_UNUSED, bool speed)\n {\n   rtx reg;\n@@ -761,19 +761,28 @@ epiphany_address_cost (rtx addr, enum machine_mode mode ATTRIBUTE_UNUSED,\n     }\n   if (!satisfies_constraint_Rgs (reg))\n     return 1;\n-  /* ??? We don't know the mode of the memory access.  We are going to assume\n-     SImode, unless lack of offset alignment indicates a smaller access.  */\n+  /* The offset range available for short instructions depends on the mode\n+     of the memory access.  */\n   /* First, make sure we have a valid integer.  */\n   if (!satisfies_constraint_L (off))\n     return 1;\n   i = INTVAL (off);\n-  if ((i & 1) == 0)\n-    i >>= 1;\n-  if ((i & 1) == 0)\n-    i >>= 1;\n-  if (i < -7 || i > 7)\n-    return 1;\n-  return 0;\n+  switch (GET_MODE_SIZE (mode))\n+    {\n+      default:\n+      case 4:\n+\tif (i & 1)\n+\t  return 1;\n+\ti >>= 1;\n+\t/* Fall through.  */\n+      case 2:\n+\tif (i & 1)\n+\t  return 1;\n+\ti >>= 1;\n+\t/* Fall through.  */\n+      case 1:\n+\treturn i < -7 || i > 7;\n+    }\n }\n \n /* Compute the cost of moving data between registers and memory."}]}