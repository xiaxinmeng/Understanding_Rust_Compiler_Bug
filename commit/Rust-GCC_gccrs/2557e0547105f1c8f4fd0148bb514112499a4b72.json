{"sha": "2557e0547105f1c8f4fd0148bb514112499a4b72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU1N2UwNTQ3MTA1ZjFjOGY0ZmQwMTQ4YmI1MTQxMTI0OTlhNGI3Mg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2012-07-23T07:31:47Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-07-23T07:31:47Z"}, "message": "layout.adb, [...]: Minor reformatting.\n\n2012-07-23  Robert Dewar  <dewar@adacore.com>\n\n\t* layout.adb, sem_prag.adb, sem.ads, freeze.adb,\n\tswitch-m.adb, exp_disp.adb, system-vxworks-ppc.ads, exp_ch6.adb: Minor\n\treformatting.\n\nFrom-SVN: r189770", "tree": {"sha": "94dc7439cebf094c52beb6773a035087be78d1b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94dc7439cebf094c52beb6773a035087be78d1b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2557e0547105f1c8f4fd0148bb514112499a4b72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2557e0547105f1c8f4fd0148bb514112499a4b72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2557e0547105f1c8f4fd0148bb514112499a4b72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2557e0547105f1c8f4fd0148bb514112499a4b72/comments", "author": null, "committer": null, "parents": [{"sha": "63ed669febce7bc3c720c936aebaf4cd4ae6f897", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63ed669febce7bc3c720c936aebaf4cd4ae6f897", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63ed669febce7bc3c720c936aebaf4cd4ae6f897"}], "stats": {"total": 66, "additions": 39, "deletions": 27}, "files": [{"sha": "4df535bcf4fd49e0222ba5541dd49ef19918fd7b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2557e0547105f1c8f4fd0148bb514112499a4b72/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2557e0547105f1c8f4fd0148bb514112499a4b72/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2557e0547105f1c8f4fd0148bb514112499a4b72", "patch": "@@ -1,3 +1,9 @@\n+2012-07-23  Robert Dewar  <dewar@adacore.com>\n+\n+\t* layout.adb, sem_prag.adb, sem.ads, freeze.adb,\n+\tswitch-m.adb, exp_disp.adb, system-vxworks-ppc.ads, exp_ch6.adb: Minor\n+\treformatting.\n+\n 2012-07-23  Tristan Gingold  <gingold@adacore.com>\n \n \t* gcc-interface/trans.c: (Handled_Sequence_Of_Statements_to_gnu): Set"}, {"sha": "869278181fa89dbaffa0125cd5abadf761232507", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2557e0547105f1c8f4fd0148bb514112499a4b72/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2557e0547105f1c8f4fd0148bb514112499a4b72/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=2557e0547105f1c8f4fd0148bb514112499a4b72", "patch": "@@ -4835,8 +4835,8 @@ package body Exp_Ch6 is\n          Ret_Type := Etype (Subp);\n       end if;\n \n-      --  Create temporaries for the actuals that are expressions, or that\n-      --  are scalars and require copying to preserve semantics.\n+      --  Create temporaries for the actuals that are expressions, or that are\n+      --  scalars and require copying to preserve semantics.\n \n       F := First_Formal (Subp);\n       A := First_Actual (N);\n@@ -4850,9 +4850,7 @@ package body Exp_Ch6 is\n          --  prevent spurious warnings about overwriting for assignments to the\n          --  formal in the inlined code.\n \n-         if Is_Entity_Name (A)\n-           and then Ekind (F) /= E_In_Parameter\n-         then\n+         if Is_Entity_Name (A) and then Ekind (F) /= E_In_Parameter then\n             Set_Last_Assignment (Entity (A), Empty);\n          end if;\n \n@@ -4888,9 +4886,9 @@ package body Exp_Ch6 is\n                (not Is_Scalar_Type (Etype (A))\n                  or else Ekind (Entity (A)) = E_Enumeration_Literal))\n \n-         --  When the actual is an identifier and the corresponding formal\n-         --  is used only once in the original body, the formal can be\n-         --  substituted directly with the actual parameter.\n+         --  When the actual is an identifier and the corresponding formal is\n+         --  used only once in the original body, the formal can be substituted\n+         --  directly with the actual parameter.\n \n            or else (Nkind (A) = N_Identifier\n              and then Formal_Is_Used_Once (F))\n@@ -4936,8 +4934,8 @@ package body Exp_Ch6 is\n \n             Set_Sloc (New_A, Sloc (N));\n \n-            --  If the actual has a by-reference type, it cannot be copied, so\n-            --  its value is captured in a renaming declaration. Otherwise\n+            --  If the actual has a by-reference type, it cannot be copied,\n+            --  so its value is captured in a renaming declaration. Otherwise\n             --  declare a local constant initialized with the actual.\n \n             --  We also use a renaming declaration for expressions of an array\n@@ -5161,8 +5159,8 @@ package body Exp_Ch6 is\n          end if;\n       end if;\n \n-      --  Analyze Blk with In_Inlined_Body set, to avoid spurious errors on\n-      --  conflicting private views that Gigi would ignore. If this is a\n+      --  Analyze Blk with In_Inlined_Body set, to avoid spurious errors\n+      --  on conflicting private views that Gigi would ignore. If this is a\n       --  predefined unit, analyze with checks off, as is done in the non-\n       --  inlined run-time units.\n "}, {"sha": "f2482826356006c5da69d8418493f4c9d8ce7eb7", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2557e0547105f1c8f4fd0148bb514112499a4b72/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2557e0547105f1c8f4fd0148bb514112499a4b72/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=2557e0547105f1c8f4fd0148bb514112499a4b72", "patch": "@@ -7132,7 +7132,10 @@ package body Exp_Disp is\n       Set_Related_Type (DT_Ptr, Typ);\n \n       --  Ensure that entities Prim_Ptr and Predef_Prims_Table_Ptr have\n-      --  the decoration required by the backend\n+      --  the decoration required by the backend.\n+\n+      --  Odd comment, the back end cannot require anything not properly\n+      --  documented in einfo! ???\n \n       Set_Is_Dispatch_Table_Entity (RTE (RE_Prim_Ptr));\n       Set_Is_Dispatch_Table_Entity (RTE (RE_Predef_Prims_Table_Ptr));"}, {"sha": "a65f0b17e19d83d3e006494dd06d1f4ebe2f531a", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2557e0547105f1c8f4fd0148bb514112499a4b72/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2557e0547105f1c8f4fd0148bb514112499a4b72/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=2557e0547105f1c8f4fd0148bb514112499a4b72", "patch": "@@ -3031,6 +3031,8 @@ package body Freeze is\n                --  the corresponding body, and therefore are not checked on an\n                --  imported subprogram for which the body is not available.\n \n+               --  Could consider generating a wrapper to take care of this???\n+\n                if Is_Subprogram (E)\n                  and then Is_Imported (E)\n                  and then Present (Contract (E))"}, {"sha": "d83a6e2569ed1cf6e56e9ac6d481aaacc32a76be", "filename": "gcc/ada/layout.adb", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2557e0547105f1c8f4fd0148bb514112499a4b72/gcc%2Fada%2Flayout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2557e0547105f1c8f4fd0148bb514112499a4b72/gcc%2Fada%2Flayout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.adb?ref=2557e0547105f1c8f4fd0148bb514112499a4b72", "patch": "@@ -2460,15 +2460,14 @@ package body Layout is\n          elsif AAMP_On_Target\n            and then\n              ((Ekind (E) = E_Access_Subprogram_Type\n-                and then Present (Enclosing_Subprogram (E)))\n-                  or else\n-                    (Ekind (E) = E_Anonymous_Access_Subprogram_Type\n-                      and then\n-                        (not Is_Local_Anonymous_Access (E)\n-                          or else Present (Enclosing_Subprogram (E)))))\n+                  and then Present (Enclosing_Subprogram (E)))\n+                or else\n+                  (Ekind (E) = E_Anonymous_Access_Subprogram_Type\n+                    and then\n+                      (not Is_Local_Anonymous_Access (E)\n+                        or else Present (Enclosing_Subprogram (E)))))\n          then\n             Init_Size (E, 2 * System_Address_Size);\n-\n          else\n             Init_Size (E, System_Address_Size);\n          end if;"}, {"sha": "7f20eafebc918f30fd20b495251bb7091a9ba66b", "filename": "gcc/ada/sem.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2557e0547105f1c8f4fd0148bb514112499a4b72/gcc%2Fada%2Fsem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2557e0547105f1c8f4fd0148bb514112499a4b72/gcc%2Fada%2Fsem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.ads?ref=2557e0547105f1c8f4fd0148bb514112499a4b72", "patch": "@@ -449,7 +449,7 @@ package Sem is\n       --  Pointer to name of last subprogram body in this scope. Used for\n       --  testing proper alpha ordering of subprogram bodies in scope.\n \n-      Save_Scope_Suppress  : Suppress_Array;\n+      Save_Scope_Suppress : Suppress_Array;\n       --  Save contents of Scope_Suppress on entry\n \n       Save_Local_Suppress_Stack_Top : Suppress_Stack_Entry_Ptr;"}, {"sha": "372ad8ef29e6be26756dfc3526415e81ab2375f4", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2557e0547105f1c8f4fd0148bb514112499a4b72/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2557e0547105f1c8f4fd0148bb514112499a4b72/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=2557e0547105f1c8f4fd0148bb514112499a4b72", "patch": "@@ -5620,9 +5620,7 @@ package body Sem_Prag is\n             --  If this is a first subtype, and the base type is distinct,\n             --  then also set the suppress flags on the base type.\n \n-            if Is_First_Subtype (E)\n-              and then Etype (E) /= E\n-            then\n+            if Is_First_Subtype (E) and then Etype (E) /= E then\n                Suppress_Unsuppress_Echeck (Etype (E), C);\n             end if;\n          end Suppress_Unsuppress_Echeck;"}, {"sha": "81211db0f3c0492824715c29d7ff4bab567a39f6", "filename": "gcc/ada/switch-m.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2557e0547105f1c8f4fd0148bb514112499a4b72/gcc%2Fada%2Fswitch-m.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2557e0547105f1c8f4fd0148bb514112499a4b72/gcc%2Fada%2Fswitch-m.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-m.adb?ref=2557e0547105f1c8f4fd0148bb514112499a4b72", "patch": "@@ -236,9 +236,9 @@ package body Switch.M is\n                   --  One-letter switches\n \n                   when 'a' | 'A' | 'b' | 'B' | 'c' | 'C' | 'E' | 'f' |\n-                       'F' | 'g' | 'h' | 'H' | 'I' | 'L' | 'N' |\n-                       'o' | 'p' | 'P' | 'q' | 'Q' | 'r' | 's' | 'S' |\n-                       't' | 'u' | 'U' | 'v' | 'x' | 'X' | 'Z' =>\n+                       'F' | 'g' | 'h' | 'H' | 'I' | 'L' | 'N' | 'o' |\n+                       'p' | 'P' | 'q' | 'Q' | 'r' | 's' | 'S' | 't' |\n+                       'u' | 'U' | 'v' | 'x' | 'X' | 'Z' =>\n                      Storing (First_Stored) := C;\n                      Add_Switch_Component\n                        (Storing (Storing'First .. First_Stored));"}, {"sha": "8ccc9b800e1358b1d3faed7bd8fc0ffc95128054", "filename": "gcc/ada/system-vxworks-ppc.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2557e0547105f1c8f4fd0148bb514112499a4b72/gcc%2Fada%2Fsystem-vxworks-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2557e0547105f1c8f4fd0148bb514112499a4b72/gcc%2Fada%2Fsystem-vxworks-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-ppc.ads?ref=2557e0547105f1c8f4fd0148bb514112499a4b72", "patch": "@@ -115,6 +115,12 @@ package System is\n \n private\n \n+   --  Note: we are moving to a scheme where we more closely rely on the\n+   --  VxWorks mechanisms to register exception tables. This change requests\n+   --  it by default (-auto-register) and removes the incomplete circuitry\n+   --  that was taking care of the registration as part of the Ada RTS\n+   --  initialization.\n+\n    pragma Linker_Options (\"-crtbe\" & ASCII.NUL & \"-auto-register\");\n    --  Required by ZCX on VxWorks kernel\n "}]}