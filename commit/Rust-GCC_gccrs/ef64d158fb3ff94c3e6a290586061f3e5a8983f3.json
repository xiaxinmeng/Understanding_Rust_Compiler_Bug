{"sha": "ef64d158fb3ff94c3e6a290586061f3e5a8983f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY2NGQxNThmYjNmZjk0YzNlNmEyOTA1ODYwNjFmM2U1YTg5ODNmMw==", "commit": {"author": {"name": "Ulrich Drepper", "email": "drepper@gmail.com", "date": "2012-09-09T14:22:10Z"}, "committer": {"name": "Ulrich Drepper", "email": "drepper@gcc.gnu.org", "date": "2012-09-09T14:22:10Z"}, "message": "cpuid.h: Define signature_*_e[bcd]x macros for matching results of level 0 calls to...\n\ngcc/\n        * config/i386/cpuid.h: Define signature_*_e[bcd]x macros for\n        matching results of level 0 calls to __cpuid to processor\n        manufacturers.\n        * config/i386/driver-i386.c (vendor_signatures): Removed.\n        (processor_signatures): Removed.\n        (host_detect_local_cpu): Replace uses of now-removed SIG_*\n        constants with the new signature_*_ebx constants.\n\nlibstdc++-v3/\n        * src/c++11/random.cc (random_device::_M_init): Use new macro\n        signature_INTEL_ebx to check for Intel processors.\n\nFrom-SVN: r191109", "tree": {"sha": "602b5169923319f3a07641e93d8f934b27d2c271", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/602b5169923319f3a07641e93d8f934b27d2c271"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef64d158fb3ff94c3e6a290586061f3e5a8983f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef64d158fb3ff94c3e6a290586061f3e5a8983f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef64d158fb3ff94c3e6a290586061f3e5a8983f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef64d158fb3ff94c3e6a290586061f3e5a8983f3/comments", "author": {"login": "drepper", "id": 2918631, "node_id": "MDQ6VXNlcjI5MTg2MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/2918631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drepper", "html_url": "https://github.com/drepper", "followers_url": "https://api.github.com/users/drepper/followers", "following_url": "https://api.github.com/users/drepper/following{/other_user}", "gists_url": "https://api.github.com/users/drepper/gists{/gist_id}", "starred_url": "https://api.github.com/users/drepper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drepper/subscriptions", "organizations_url": "https://api.github.com/users/drepper/orgs", "repos_url": "https://api.github.com/users/drepper/repos", "events_url": "https://api.github.com/users/drepper/events{/privacy}", "received_events_url": "https://api.github.com/users/drepper/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7b99cca4787efe0a5eec258b236c13b7b7604f04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b99cca4787efe0a5eec258b236c13b7b7604f04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b99cca4787efe0a5eec258b236c13b7b7604f04"}], "stats": {"total": 94, "additions": 76, "deletions": 18}, "files": [{"sha": "c8065d91cfabe20ccc2079e2970dbcc2e0787d9f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef64d158fb3ff94c3e6a290586061f3e5a8983f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef64d158fb3ff94c3e6a290586061f3e5a8983f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ef64d158fb3ff94c3e6a290586061f3e5a8983f3", "patch": "@@ -1,3 +1,13 @@\n+2012-09-09  Ulrich Drepper  <drepper@gmail.com>\n+\n+\t* config/i386/cpuid.h: Define signature_*_e[bcd]x macros for\n+\tmatching results of level 0 calls to __cpuid to processor\n+\tmanufacturers.\n+\t* config/i386/driver-i386.c (vendor_signatures): Removed.\n+\t(processor_signatures): Removed.\n+\t(host_detect_local_cpu): Replace uses of now-removed SIG_*\n+\tconstants with the new signature_*_ebx constants.\n+\n 2012-09-08  Jan Hubicka  <jh@suse.cz>\n \n \tReplace cgraph_node_set and varpool_node_set by symtab_node_encoder"}, {"sha": "5cd1eb1c736f2a5e5168213c61d9a76f1df3acd9", "filename": "gcc/config/i386/cpuid.h", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef64d158fb3ff94c3e6a290586061f3e5a8983f3/gcc%2Fconfig%2Fi386%2Fcpuid.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef64d158fb3ff94c3e6a290586061f3e5a8983f3/gcc%2Fconfig%2Fi386%2Fcpuid.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcpuid.h?ref=ef64d158fb3ff94c3e6a290586061f3e5a8983f3", "patch": "@@ -75,6 +75,60 @@\n #define bit_RDSEED\t(1 << 18)\n #define bit_ADX\t(1 << 19)\n \n+/* Signatures for different CPU implementations as returned in uses\n+   of cpuid with level 0.  */\n+#define signature_AMD_ebx\t0x68747541\n+#define signature_AMD_ecx\t0x444d4163\n+#define signature_AMD_edx\t0x69746e65\n+\n+#define signature_CENTAUR_ebx\t0x746e6543\n+#define signature_CENTAUR_ecx\t0x736c7561\n+#define signature_CENTAUR_edx\t0x48727561\n+\n+#define signature_CYRIX_ebx\t0x69727943\n+#define signature_CYRIX_ecx\t0x64616574\n+#define signature_CYRIX_edx\t0x736e4978\n+\n+#define signature_INTEL_ebx\t0x756e6547\n+#define signature_INTEL_ecx\t0x6c65746e\n+#define signature_INTEL_edx\t0x49656e69\n+\n+#define signature_TM1_ebx\t0x6e617254\n+#define signature_TM1_ecx\t0x55504361\n+#define signature_TM1_edx\t0x74656d73\n+\n+#define signature_TM2_ebx\t0x756e6547\n+#define signature_TM2_ecx\t0x3638784d\n+#define signature_TM2_edx\t0x54656e69\n+\n+#define signature_NSC_ebx\t0x646f6547\n+#define signature_NSC_ecx\t0x43534e20\n+#define signature_NSC_edx\t0x79622065\n+\n+#define signature_NEXGEN_ebx\t0x4778654e\n+#define signature_NEXGEN_ecx\t0x6e657669\n+#define signature_NEXGEN_edx\t0x72446e65\n+\n+#define signature_RISE_ebx\t0x65736952\n+#define signature_RISE_ecx\t0x65736952\n+#define signature_RISE_edx\t0x65736952\n+\n+#define signature_SIS_ebx\t0x20536953\n+#define signature_SIS_ecx\t0x20536953\n+#define signature_SIS_edx\t0x20536953\n+\n+#define signature_UMC_ebx\t0x20434d55\n+#define signature_UMC_ecx\t0x20434d55\n+#define signature_UMC_edx\t0x20434d55\n+\n+#define signature_VIA_ebx\t0x20414956\n+#define signature_VIA_ecx\t0x20414956\n+#define signature_VIA_edx\t0x20414956\n+\n+#define signature_VORTEX_ebx\t0x74726f56\n+#define signature_VORTEX_ecx\t0x436f5320\n+#define signature_VORTEX_edx\t0x36387865\n+\n #if defined(__i386__) && defined(__PIC__)\n /* %ebx may be the PIC register.  */\n #if __GNUC__ >= 3"}, {"sha": "79bf75ffaeb7b3a812c5216fb7c0f79eb5134e71", "filename": "gcc/config/i386/driver-i386.c", "status": "modified", "additions": 6, "deletions": 17, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef64d158fb3ff94c3e6a290586061f3e5a8983f3/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef64d158fb3ff94c3e6a290586061f3e5a8983f3/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdriver-i386.c?ref=ef64d158fb3ff94c3e6a290586061f3e5a8983f3", "patch": "@@ -348,17 +348,6 @@ detect_caches_intel (bool xeon_mp, unsigned max_level,\n   return describe_cache (level1, level2);\n }\n \n-enum vendor_signatures\n-{\n-  SIG_INTEL =\t0x756e6547 /* Genu */,\n-  SIG_AMD =\t0x68747541 /* Auth */\n-};\n-\n-enum processor_signatures\n-{\n-  SIG_GEODE =\t0x646f6547 /* Geod */\n-};\n-\n /* This will be called by the spec parser in gcc.c when it sees\n    a %:local_cpu_detect(args) construct.  Currently it will be called\n    with either \"arch\" or \"tune\" as argument depending on if -march=native\n@@ -422,7 +411,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n \n   model = (eax >> 4) & 0x0f;\n   family = (eax >> 8) & 0x0f;\n-  if (vendor == SIG_INTEL)\n+  if (vendor == signature_INTEL_ebx)\n     {\n       unsigned int extended_model, extended_family;\n \n@@ -483,7 +472,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n       has_abm = ecx & bit_ABM;\n       has_lwp = ecx & bit_LWP;\n       has_fma4 = ecx & bit_FMA4;\n-      if (vendor == SIG_AMD && has_fma4 && has_fma)\n+      if (vendor == signature_AMD_ebx && has_fma4 && has_fma)\n \thas_fma4 = 0;\n       has_xop = ecx & bit_XOP;\n       has_tbm = ecx & bit_TBM;\n@@ -497,17 +486,17 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n \n   if (!arch)\n     {\n-      if (vendor == SIG_AMD)\n+      if (vendor == signature_AMD_ebx)\n \tcache = detect_caches_amd (ext_level);\n-      else if (vendor == SIG_INTEL)\n+      else if (vendor == signature_INTEL_ebx)\n \t{\n \t  bool xeon_mp = (family == 15 && model == 6);\n \t  cache = detect_caches_intel (xeon_mp, max_level,\n \t\t\t\t       ext_level, &l2sizekb);\n \t}\n     }\n \n-  if (vendor == SIG_AMD)\n+  if (vendor == signature_AMD_ebx)\n     {\n       unsigned int name;\n \n@@ -517,7 +506,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n       else\n \tname = 0;\n \n-      if (name == SIG_GEODE)\n+      if (name == signature_NSC_ebx)\n \tprocessor = PROCESSOR_GEODE;\n       else if (has_movbe)\n \tprocessor = PROCESSOR_BTVER2;"}, {"sha": "bd87deca5b34c67fceed05d1d6354fa4a4e75111", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef64d158fb3ff94c3e6a290586061f3e5a8983f3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef64d158fb3ff94c3e6a290586061f3e5a8983f3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ef64d158fb3ff94c3e6a290586061f3e5a8983f3", "patch": "@@ -1,3 +1,8 @@\n+2012-09-09  Ulrich Drepper  <drepper@gmail.com>\n+\n+\t* src/c++11/random.cc (random_device::_M_init): Use new macro\n+\tsignature_INTEL_ebx to check for Intel processors.\n+\n 2012-09-06  Thiago Macieira  <thiago.macieira@intel.com>\n \n \tPR libstdc++/54172"}, {"sha": "3b05318ea4cf86e14312ff91b0c338f92c952b6f", "filename": "libstdc++-v3/src/c++11/random.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef64d158fb3ff94c3e6a290586061f3e5a8983f3/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Frandom.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef64d158fb3ff94c3e6a290586061f3e5a8983f3/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Frandom.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Frandom.cc?ref=ef64d158fb3ff94c3e6a290586061f3e5a8983f3", "patch": "@@ -79,7 +79,7 @@ namespace std _GLIBCXX_VISIBILITY(default)\n \tunsigned int eax, ebx, ecx, edx;\n \t// Check availability of cpuid and, for now at least, also the\n \t// CPU signature for Intel's\n-\tif (__get_cpuid_max(0, &ebx) > 0 && ebx == 0x756e6547)\n+\tif (__get_cpuid_max(0, &ebx) > 0 && ebx == signature_INTEL_ebx)\n \t  {\n \t    __cpuid(1, eax, ebx, ecx, edx);\n \t    if (ecx & bit_RDRND)"}]}