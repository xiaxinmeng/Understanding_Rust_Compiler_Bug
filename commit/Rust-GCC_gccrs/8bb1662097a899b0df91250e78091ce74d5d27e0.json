{"sha": "8bb1662097a899b0df91250e78091ce74d5d27e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJiMTY2MjA5N2E4OTliMGRmOTEyNTBlNzgwOTFjZTc0ZDVkMjdlMA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@redhat.co.uk", "date": "2000-10-31T10:09:34Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2000-10-31T10:09:34Z"}, "message": "Better .greg dump\n\nFrom-SVN: r37156", "tree": {"sha": "18831e515c778f35c67ff534043d8a8d2a501240", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18831e515c778f35c67ff534043d8a8d2a501240"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8bb1662097a899b0df91250e78091ce74d5d27e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bb1662097a899b0df91250e78091ce74d5d27e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bb1662097a899b0df91250e78091ce74d5d27e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bb1662097a899b0df91250e78091ce74d5d27e0/comments", "author": null, "committer": null, "parents": [{"sha": "1d766db010129df57022fe5d7ea936cdda985645", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d766db010129df57022fe5d7ea936cdda985645", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d766db010129df57022fe5d7ea936cdda985645"}], "stats": {"total": 45, "additions": 29, "deletions": 16}, "files": [{"sha": "00355f4fd201e31f69b1017b809c2ee5e2c5dcd9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bb1662097a899b0df91250e78091ce74d5d27e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bb1662097a899b0df91250e78091ce74d5d27e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8bb1662097a899b0df91250e78091ce74d5d27e0", "patch": "@@ -22,6 +22,11 @@\n \tMake sure we call cleanup_subreg_operands even when splitting the last\n \tinsn in a basic block.\n \n+\t* invoke.texi (Debugging Options): Describe -do.\n+\t* toplev.c (enum_dump_file_index): New entry DFI_postreload.\n+\t(dump_file): Likewise.\n+\t(rest_of_compilation): Split .greg dump into .greg and .postreload.\n+\n 2000-10-30  Neil Booth  <neilb@earthling.net>\n \n \t* cppfiles.c (stack_include_file): Check for stacked contexts"}, {"sha": "00d4876796fca5e529f99290155c2439ac98de8e", "filename": "gcc/invoke.texi", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bb1662097a899b0df91250e78091ce74d5d27e0/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bb1662097a899b0df91250e78091ce74d5d27e0/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=8bb1662097a899b0df91250e78091ce74d5d27e0", "patch": "@@ -2379,35 +2379,37 @@ Annotate the assembler output with miscellaneous debugging information.\n @item b\n Dump after computing branch probabilities, to @file{@var{file}.11.bp}.\n @item B\n-Dump after block reordering, to @file{@var{file}.25.bbro}.\n+Dump after block reordering, to @file{@var{file}.26.bbro}.\n @item c\n Dump after instruction combination, to the file @file{@var{file}.14.combine}.\n @item C\n Dump after the first if conversion, to the file @file{@var{file}.15.ce}.\n @item d\n-Dump after delayed branch scheduling, to @file{@var{file}.28.dbr}.\n+Dump after delayed branch scheduling, to @file{@var{file}.29.dbr}.\n @item D\n Dump all macro definitions, at the end of preprocessing, in addition to\n normal output.\n @item e\n Dump after SSA optimizations, to @file{@var{file}.05.ssa} and\n @file{@var{file}.06.ussa}.\n @item E\n-Dump after the second if conversion, to @file{@var{file}.21.ce2}.\n+Dump after the second if conversion, to @file{@var{file}.24.ce2}.\n @item f\n Dump after life analysis, to @file{@var{file}.13.life}.\n @item F\n Dump after purging @code{ADDRESSOF} codes, to @file{@var{file}.04.addressof}.\n @item g\n Dump after global register allocation, to @file{@var{file}.19.greg}.\n+@item o\n+Dump after post-reload CSE and other optimizations, to @file{@var{file}.20.postreload}.\n @item G      \n Dump after GCSE, to @file{@var{file}.08.gcse}.\n @item i\n Dump after sibling call optimizations, to @file{@var{file}.01.sibling}.\n @item j\n Dump after the first jump optimization, to @file{@var{file}.02.jump}.\n @item J\n-Dump after the last jump optimization, to @file{@var{file}.26.jump2}.\n+Dump after the last jump optimization, to @file{@var{file}.27.jump2}.\n @item k\n Dump after conversion from registers to stack, to @file{@var{file}.29.stack}.\n @item l\n@@ -2416,7 +2418,7 @@ Dump after local register allocation, to @file{@var{file}.18.lreg}.\n Dump after loop optimization, to @file{@var{file}.09.loop}.\n @item M\n Dump after performing the machine dependent reorganisation pass, to\n-@file{@var{file}.27.mach}. \n+@file{@var{file}.28.mach}. \n @item n\n Dump after register renumbering, to @file{@var{file}.23.rnreg}.\n @item N\n@@ -2425,7 +2427,7 @@ Dump after the register move pass, to @file{@var{file}.16.regmove}.\n Dump after RTL generation, to @file{@var{file}.00.rtl}.\n @item R\n Dump after the second instruction scheduling pass, to\n-@file{@var{file}.24.sched2}.\n+@file{@var{file}.25.sched2}.\n @item s\n Dump after CSE (including the jump optimization that sometimes follows\n CSE), to @file{@var{file}.03.cse}. \n@@ -2436,7 +2438,7 @@ Dump after the first instruction scheduling pass, to\n Dump after the second CSE pass (including the jump optimization that\n sometimes follows CSE), to @file{@var{file}.10.cse2}.\n @item w\n-Dump after the second flow pass, to @file{@var{file}.20.flow2}.\n+Dump after the second flow pass, to @file{@var{file}.21.flow2}.\n @item X\n Dump after dead code elimination, to @file{@var{file}.06.dce}.\n @item z"}, {"sha": "580b51c5088f6ba2f6f3147f99609629f515c5c2", "filename": "gcc/toplev.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bb1662097a899b0df91250e78091ce74d5d27e0/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bb1662097a899b0df91250e78091ce74d5d27e0/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=8bb1662097a899b0df91250e78091ce74d5d27e0", "patch": "@@ -276,6 +276,7 @@ enum dump_file_index\n   DFI_sched,\n   DFI_lreg,\n   DFI_greg,\n+  DFI_postreload,\n   DFI_flow2,\n   DFI_peephole2,\n   DFI_rnreg,\n@@ -320,6 +321,7 @@ struct dump_file_info dump_file[DFI_MAX] =\n   { \"sched\",\t'S', 1, 0, 0 },\n   { \"lreg\",\t'l', 1, 0, 0 },\n   { \"greg\",\t'g', 1, 0, 0 },\n+  { \"postreload\", 'o', 1, 0, 0 },\n   { \"flow2\",\t'w', 1, 0, 0 },\n   { \"peephole2\", 'z', 1, 0, 0 },\n   { \"rnreg\",\t'n', 1, 0, 0 },\n@@ -3428,11 +3430,23 @@ rest_of_compilation (decl)\n \n   timevar_pop (TV_GLOBAL_ALLOC);\n \n+  if (dump_file[DFI_greg].enabled)\n+    {\n+      timevar_push (TV_DUMP);\n+\n+      dump_global_regs (rtl_dump_file);\n+\n+      close_dump_file (DFI_greg, print_rtl_with_bb, insns);\n+      timevar_pop (TV_DUMP);\n+    }\n+\n   if (failure)\n     goto exit_rest_of_compilation;\n \n   ggc_collect ();\n \n+  open_dump_file (DFI_postreload, decl);\n+\n   /* Do a very simple CSE pass over just the hard registers.  */\n   if (optimize > 0)\n     {\n@@ -3463,15 +3477,7 @@ rest_of_compilation (decl)\n       timevar_pop (TV_JUMP);\n     }\n \n-  if (dump_file[DFI_greg].enabled)\n-    {\n-      timevar_push (TV_DUMP);\n-\n-      dump_global_regs (rtl_dump_file);\n-\n-      close_dump_file (DFI_greg, print_rtl_with_bb, insns);\n-      timevar_pop (TV_DUMP);\n-    }\n+  close_dump_file (DFI_postreload, print_rtl_with_bb, insns);\n \n   /* Re-create the death notes which were deleted during reload.  */\n   timevar_push (TV_FLOW2);"}]}