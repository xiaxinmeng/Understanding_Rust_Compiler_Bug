{"sha": "350de209bfd0c368ce590f89f59d8950e4bc29b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzUwZGUyMDliZmQwYzM2OGNlNTkwZjg5ZjU5ZDg5NTBlNGJjMjliNA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2017-01-06T16:10:09Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2017-01-06T16:10:09Z"}, "message": "re PR middle-end/77484 (Static branch predictor causes ~6-8% regression of SPEC2000 GAP)\n\n\tPR middle-end/77484\n\t* predict.def (PRED_POLYMORPHIC_CALL): Set to 58\n\t* predict.c (tree_estimate_probability_bb): Reverse direction of\n\tpolymorphic call predictor.\n\nFrom-SVN: r244167", "tree": {"sha": "2020de3672e60c9c0419dd8af6df627911d53051", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2020de3672e60c9c0419dd8af6df627911d53051"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/350de209bfd0c368ce590f89f59d8950e4bc29b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/350de209bfd0c368ce590f89f59d8950e4bc29b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/350de209bfd0c368ce590f89f59d8950e4bc29b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/350de209bfd0c368ce590f89f59d8950e4bc29b4/comments", "author": null, "committer": null, "parents": [{"sha": "12e917fff2800a4bfd591d09675b21e71ae8bc75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12e917fff2800a4bfd591d09675b21e71ae8bc75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12e917fff2800a4bfd591d09675b21e71ae8bc75"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "cc9c11ce2b2beaca34443e7bdd720c87a7400bd3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/350de209bfd0c368ce590f89f59d8950e4bc29b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/350de209bfd0c368ce590f89f59d8950e4bc29b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=350de209bfd0c368ce590f89f59d8950e4bc29b4", "patch": "@@ -1,3 +1,10 @@\n+2017-01-01  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR middle-end/77484\n+\t* predict.def (PRED_POLYMORPHIC_CALL): Set to 58\n+\t* predict.c (tree_estimate_probability_bb): Reverse direction of\n+\tpolymorphic call predictor.\n+\n 2017-01-06  David Malcolm  <dmalcolm@redhat.com>\n \n \t* passes.c (execute_one_pass): Split out pass-skipping logic"}, {"sha": "fa4e626fab86cd5866cad4275a649ef274fb413d", "filename": "gcc/predict.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/350de209bfd0c368ce590f89f59d8950e4bc29b4/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/350de209bfd0c368ce590f89f59d8950e4bc29b4/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=350de209bfd0c368ce590f89f59d8950e4bc29b4", "patch": "@@ -2789,7 +2789,7 @@ tree_estimate_probability_bb (basic_block bb)\n \t\t  if (gimple_call_fndecl (stmt))\n \t\t    predict_edge_def (e, PRED_CALL, NOT_TAKEN);\n \t\t  else if (virtual_method_call_p (gimple_call_fn (stmt)))\n-\t\t    predict_edge_def (e, PRED_POLYMORPHIC_CALL, TAKEN);\n+\t\t    predict_edge_def (e, PRED_POLYMORPHIC_CALL, NOT_TAKEN);\n \t\t  else\n \t\t    predict_edge_def (e, PRED_INDIR_CALL, TAKEN);\n \t\t  break;"}, {"sha": "5ddb36a0b2c568d5f762697a3a31247799a4972f", "filename": "gcc/predict.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/350de209bfd0c368ce590f89f59d8950e4bc29b4/gcc%2Fpredict.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/350de209bfd0c368ce590f89f59d8950e4bc29b4/gcc%2Fpredict.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.def?ref=350de209bfd0c368ce590f89f59d8950e4bc29b4", "patch": "@@ -122,7 +122,7 @@ DEF_PREDICTOR (PRED_CALL, \"call\", HITRATE (55), 0)\n    less reliable for indirect calls and polymorphic calls.  For spec2k6\n    the predictio nis slightly in the direction of taking the call.  */\n DEF_PREDICTOR (PRED_INDIR_CALL, \"indirect call\", HITRATE (51), 0)\n-DEF_PREDICTOR (PRED_POLYMORPHIC_CALL, \"polymorphic call\", HITRATE (58), 0)\n+DEF_PREDICTOR (PRED_POLYMORPHIC_CALL, \"polymorphic call\", HITRATE (59), 0)\n \n /* Recursive calls are usually not taken or the function will recurse\n    indefinitely.  */"}]}