{"sha": "0febb26e6e31a7da9932eb7337884f8717eaea5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZlYmIyNmU2ZTMxYTdkYTk5MzJlYjczMzc4ODRmODcxN2VhZWE1Zg==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2014-08-20T09:28:25Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-08-20T09:28:25Z"}, "message": "[testsuite] Mark tests unsupported when relocation truncation occurs on tiny memory targets\n\n\t* lib/gcc-defs.exp (${tool}_check_unsupported_p):\n\tReturn memory full when we have a tiny target and relocation\n\ttruncation occurs.\n\t* lib/gcc-dg.exp (gcc-dg-prune): Likewise.\n\t* lib/objc.exp (${tool}_check_unsupported_p): Likewise.\n\t* lib/target-supports.exp (check_effective_target_tiny): New function.\n\nFrom-SVN: r214215", "tree": {"sha": "6e684a38c032237db7928e5e9e51f29013d76cb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e684a38c032237db7928e5e9e51f29013d76cb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0febb26e6e31a7da9932eb7337884f8717eaea5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0febb26e6e31a7da9932eb7337884f8717eaea5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0febb26e6e31a7da9932eb7337884f8717eaea5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0febb26e6e31a7da9932eb7337884f8717eaea5f/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a9442c7ac09b1140740c96eded9ce4ddc4885a57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9442c7ac09b1140740c96eded9ce4ddc4885a57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9442c7ac09b1140740c96eded9ce4ddc4885a57"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "16d0c07b247eea583a3147dc4f7e4c5aa3096d26", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0febb26e6e31a7da9932eb7337884f8717eaea5f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0febb26e6e31a7da9932eb7337884f8717eaea5f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0febb26e6e31a7da9932eb7337884f8717eaea5f", "patch": "@@ -1,3 +1,12 @@\n+2014-08-20  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* lib/gcc-defs.exp (${tool}_check_unsupported_p):\n+\tReturn memory full when we have a tiny target and relocation\n+\ttruncation occurs.\n+\t* lib/gcc-dg.exp (gcc-dg-prune): Likewise.\n+\t* lib/objc.exp (${tool}_check_unsupported_p): Likewise.\n+\t* lib/target-supports.exp (check_effective_target_tiny): New function.\n+\n 2014-08-20  Joost VandeVondele  <Joost.VandeVondele@mat.ethz.ch>\n \n \t* gfortran.dg/errnocheck_1.f90: New test."}, {"sha": "1ea7028b636c2e112c85987e6865c9d1d27fb828", "filename": "gcc/testsuite/lib/gcc-defs.exp", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0febb26e6e31a7da9932eb7337884f8717eaea5f/gcc%2Ftestsuite%2Flib%2Fgcc-defs.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0febb26e6e31a7da9932eb7337884f8717eaea5f/gcc%2Ftestsuite%2Flib%2Fgcc-defs.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-defs.exp?ref=0febb26e6e31a7da9932eb7337884f8717eaea5f", "patch": "@@ -157,6 +157,11 @@ proc ${tool}_check_unsupported_p { output } {\n     if [regexp \"(^|\\n)\\[^\\n\\]*: region \\[^\\n\\]* is full\" $output] {\n \treturn \"memory full\"\n     }\n+    if { [regexp \"(^|\\n)\\[^\\n\\]*: relocation truncated to fit\" $output]\n+          && [check_effective_target_tiny] } {\n+        return \"memory full\"\n+     }\n+\n     if { [istarget spu-*-*] && \\\n \t     [string match \"*exceeds local store*\" $output] } {\n \treturn \"memory full\""}, {"sha": "dfdb25710a82002e00fc7c74e2e79e5ca54dee5a", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0febb26e6e31a7da9932eb7337884f8717eaea5f/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0febb26e6e31a7da9932eb7337884f8717eaea5f/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=0febb26e6e31a7da9932eb7337884f8717eaea5f", "patch": "@@ -233,6 +233,11 @@ proc gcc-dg-prune { system text } {\n \treturn \"::unsupported::memory full\"\n     }\n \n+    if { [regexp \"(^|\\n)\\[^\\n\\]*: relocation truncated to fit\" $text]\n+          && [check_effective_target_tiny] } {\n+        return \"::unsupported::memory full\"\n+    }\n+\n     # Likewise, if we see \".text exceeds local store range\" or\n     # similar.\n     if {[string match \"spu-*\" $system] && \\"}, {"sha": "e19b2643863497ea58e3b43cb32f41a85a04c716", "filename": "gcc/testsuite/lib/objc.exp", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0febb26e6e31a7da9932eb7337884f8717eaea5f/gcc%2Ftestsuite%2Flib%2Fobjc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0febb26e6e31a7da9932eb7337884f8717eaea5f/gcc%2Ftestsuite%2Flib%2Fobjc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fobjc.exp?ref=0febb26e6e31a7da9932eb7337884f8717eaea5f", "patch": "@@ -357,6 +357,10 @@ proc ${tool}_check_unsupported_p { output } {\n     if [regexp \"(^|\\n)\\[^\\n\\]*: region \\[^\\n\\]* is full\" $output] {\n \treturn \"memory full\"\n     }\n+    if { [regexp \"(^|\\n)\\[^\\n\\]*: relocation truncated to fit\" $output]\n+          && [check_effective_target_tiny] } {\n+        return \"memory full\"\n+    }\n     return \"\"\n }\n "}, {"sha": "ca20099722c312a4a68fd0fd81373df6d9b496c8", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0febb26e6e31a7da9932eb7337884f8717eaea5f/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0febb26e6e31a7da9932eb7337884f8717eaea5f/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=0febb26e6e31a7da9932eb7337884f8717eaea5f", "patch": "@@ -5950,6 +5950,14 @@ proc check_effective_target_fenv_exceptions {} {\n     } [add_options_for_ieee \"-std=gnu99\"]]\n }\n \n+proc check_effective_target_tiny {} {\n+    if { [istarget aarch64*-*-*]\n+         && [check_effective_target_aarch64_tiny] } {\n+        return 1\n+    }\n+    return 0\n+}\n+\n # Return 1 if LOGICAL_OP_NON_SHORT_CIRCUIT is set to 0 for the current target.\n \n proc check_effective_target_logical_op_short_circuit {} {"}]}