{"sha": "81ffc0455f0f6759af9f36d815947f161b6d3e50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFmZmMwNDU1ZjBmNjc1OWFmOWYzNmQ4MTU5NDdmMTYxYjZkM2U1MA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1994-09-05T21:25:11Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1994-09-05T21:25:11Z"}, "message": "Make the functions extern inline rather than static inline\n\nFrom-SVN: r8024", "tree": {"sha": "441255111f232dc33387a76779c3dd1e88aa326f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/441255111f232dc33387a76779c3dd1e88aa326f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81ffc0455f0f6759af9f36d815947f161b6d3e50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81ffc0455f0f6759af9f36d815947f161b6d3e50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81ffc0455f0f6759af9f36d815947f161b6d3e50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81ffc0455f0f6759af9f36d815947f161b6d3e50/comments", "author": null, "committer": null, "parents": [{"sha": "3cf2c0245ad11d70f756ffc439ac48e57f6dc4b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cf2c0245ad11d70f756ffc439ac48e57f6dc4b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cf2c0245ad11d70f756ffc439ac48e57f6dc4b0"}], "stats": {"total": 64, "additions": 32, "deletions": 32}, "files": [{"sha": "fc8060ef79f6cbb169e360ffe94b2350f96f2251", "filename": "gcc/ginclude/math-68881.h", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81ffc0455f0f6759af9f36d815947f161b6d3e50/gcc%2Fginclude%2Fmath-68881.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81ffc0455f0f6759af9f36d815947f161b6d3e50/gcc%2Fginclude%2Fmath-68881.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fmath-68881.h?ref=81ffc0455f0f6759af9f36d815947f161b6d3e50", "patch": "@@ -61,7 +61,7 @@\n })\n #endif\n \n-__inline static const double\n+__inline extern double\n sin (double x)\n {\n   double value;\n@@ -72,7 +72,7 @@ sin (double x)\n   return value;\n }\n \n-__inline static const double\n+__inline extern double\n cos (double x)\n {\n   double value;\n@@ -83,7 +83,7 @@ cos (double x)\n   return value;\n }\n \n-__inline static const double\n+__inline extern double\n tan (double x)\n {\n   double value;\n@@ -94,7 +94,7 @@ tan (double x)\n   return value;\n }\n \n-__inline static const double\n+__inline extern double\n asin (double x)\n {\n   double value;\n@@ -105,7 +105,7 @@ asin (double x)\n   return value;\n }\n \n-__inline static const double\n+__inline extern double\n acos (double x)\n {\n   double value;\n@@ -116,7 +116,7 @@ acos (double x)\n   return value;\n }\n \n-__inline static const double\n+__inline extern double\n atan (double x)\n {\n   double value;\n@@ -127,7 +127,7 @@ atan (double x)\n   return value;\n }\n \n-__inline static const double\n+__inline extern double\n atan2 (double y, double x)\n {\n   double pi, pi_over_2;\n@@ -184,7 +184,7 @@ atan2 (double y, double x)\n     }\n }\n \n-__inline static const double\n+__inline extern double\n sinh (double x)\n {\n   double value;\n@@ -195,7 +195,7 @@ sinh (double x)\n   return value;\n }\n \n-__inline static const double\n+__inline extern double\n cosh (double x)\n {\n   double value;\n@@ -206,7 +206,7 @@ cosh (double x)\n   return value;\n }\n \n-__inline static const double\n+__inline extern double\n tanh (double x)\n {\n   double value;\n@@ -217,7 +217,7 @@ tanh (double x)\n   return value;\n }\n \n-__inline static const double\n+__inline extern double\n atanh (double x)\n {\n   double value;\n@@ -228,7 +228,7 @@ atanh (double x)\n   return value;\n }\n \n-__inline static const double\n+__inline extern double\n exp (double x)\n {\n   double value;\n@@ -239,7 +239,7 @@ exp (double x)\n   return value;\n }\n \n-__inline static const double\n+__inline extern double\n expm1 (double x)\n {\n   double value;\n@@ -250,7 +250,7 @@ expm1 (double x)\n   return value;\n }\n \n-__inline static const double\n+__inline extern double\n log (double x)\n {\n   double value;\n@@ -261,7 +261,7 @@ log (double x)\n   return value;\n }\n \n-__inline static const double\n+__inline extern double\n log1p (double x)\n {\n   double value;\n@@ -272,7 +272,7 @@ log1p (double x)\n   return value;\n }\n \n-__inline static const double\n+__inline extern double\n log10 (double x)\n {\n   double value;\n@@ -283,7 +283,7 @@ log10 (double x)\n   return value;\n }\n \n-__inline static const double\n+__inline extern double\n sqrt (double x)\n {\n   double value;\n@@ -294,14 +294,14 @@ sqrt (double x)\n   return value;\n }\n \n-__inline static const double\n-hypot (const double x, const double y)\n+__inline extern double\n+hypot (double x, double y)\n {\n   return sqrt (x*x + y*y);\n }\n \n-__inline static const double\n-pow (const double x, const double y)\n+__inline extern double\n+pow (double x, double y)\n {\n   if (x > 0)\n     return exp (y * log (x));\n@@ -349,7 +349,7 @@ pow (const double x, const double y)\n     }\n }\n \n-__inline static const double\n+__inline extern double\n fabs (double x)\n {\n   double value;\n@@ -360,7 +360,7 @@ fabs (double x)\n   return value;\n }\n \n-__inline static const double\n+__inline extern double\n ceil (double x)\n {\n   int rounding_mode, round_up;\n@@ -382,7 +382,7 @@ ceil (double x)\n   return value;\n }\n \n-__inline static const double\n+__inline extern double\n floor (double x)\n {\n   int rounding_mode, round_down;\n@@ -405,7 +405,7 @@ floor (double x)\n   return value;\n }\n \n-__inline static const double\n+__inline extern double\n rint (double x)\n {\n   int rounding_mode, round_nearest;\n@@ -427,7 +427,7 @@ rint (double x)\n   return value;\n }\n \n-__inline static const double\n+__inline extern double\n fmod (double x, double y)\n {\n   double value;\n@@ -439,7 +439,7 @@ fmod (double x, double y)\n   return value;\n }\n \n-__inline static const double\n+__inline extern double\n drem (double x, double y)\n {\n   double value;\n@@ -451,7 +451,7 @@ drem (double x, double y)\n   return value;\n }\n \n-__inline static const double\n+__inline extern double\n scalb (double x, int n)\n {\n   double value;\n@@ -463,7 +463,7 @@ scalb (double x, int n)\n   return value;\n }\n \n-__inline static double\n+__inline extern double\n logb (double x)\n {\n   double exponent;\n@@ -474,7 +474,7 @@ logb (double x)\n   return exponent;\n }\n \n-__inline static const double\n+__inline extern double\n ldexp (double x, int n)\n {\n   double value;\n@@ -486,7 +486,7 @@ ldexp (double x, int n)\n   return value;\n }\n \n-__inline static double\n+__inline extern double\n frexp (double x, int *exp)\n {\n   double float_exponent;\n@@ -511,7 +511,7 @@ frexp (double x, int *exp)\n   return mantissa;\n }\n \n-__inline static double\n+__inline extern double\n modf (double x, double *ip)\n {\n   double temp;"}]}