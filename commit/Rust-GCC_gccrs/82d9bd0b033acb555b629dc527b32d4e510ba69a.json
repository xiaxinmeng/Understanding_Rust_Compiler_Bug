{"sha": "82d9bd0b033acb555b629dc527b32d4e510ba69a", "node_id": "C_kwDOANBUbNoAKDgyZDliZDBiMDMzYWNiNTU1YjYyOWRjNTI3YjMyZDRlNTEwYmE2OWE", "commit": {"author": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2023-05-30T11:10:40Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2023-05-30T16:32:08Z"}, "message": "gccrs: remove useless lookup to NodeId\n\ngcc/rust/ChangeLog:\n\n\t* backend/rust-compile-expr.cc (CompileExpr::visit): remove unused\n\nSigned-off-by: Philip Herron <herron.philip@googlemail.com>", "tree": {"sha": "09a1529fc125a4c1cdba7e0ec2fcce71be9327de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09a1529fc125a4c1cdba7e0ec2fcce71be9327de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82d9bd0b033acb555b629dc527b32d4e510ba69a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82d9bd0b033acb555b629dc527b32d4e510ba69a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82d9bd0b033acb555b629dc527b32d4e510ba69a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82d9bd0b033acb555b629dc527b32d4e510ba69a/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2747ea19ceaef9f9b92f36b5542657b76e66228e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2747ea19ceaef9f9b92f36b5542657b76e66228e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2747ea19ceaef9f9b92f36b5542657b76e66228e"}], "stats": {"total": 33, "additions": 3, "deletions": 30}, "files": [{"sha": "c907acb4a553080ec7455c179a46866b7291f426", "filename": "gcc/rust/backend/rust-compile-expr.cc", "status": "modified", "additions": 3, "deletions": 30, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82d9bd0b033acb555b629dc527b32d4e510ba69a/gcc%2Frust%2Fbackend%2Frust-compile-expr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82d9bd0b033acb555b629dc527b32d4e510ba69a/gcc%2Frust%2Fbackend%2Frust-compile-expr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-expr.cc?ref=82d9bd0b033acb555b629dc527b32d4e510ba69a", "patch": "@@ -1698,23 +1698,6 @@ CompileExpr::visit (HIR::MethodCallExpr &expr)\n   // method receiver\n   tree self = CompileExpr::Compile (expr.get_receiver ().get (), ctx);\n \n-  // lookup the resolved name\n-  NodeId resolved_node_id = UNKNOWN_NODEID;\n-  if (!ctx->get_resolver ()->lookup_resolved_name (\n-\texpr.get_mappings ().get_nodeid (), &resolved_node_id))\n-    {\n-      rust_error_at (expr.get_locus (), \"failed to lookup resolved MethodCall\");\n-      return;\n-    }\n-\n-  // reverse lookup\n-  HirId ref;\n-  if (!ctx->get_mappings ()->lookup_node_to_hir (resolved_node_id, &ref))\n-    {\n-      rust_fatal_error (expr.get_locus (), \"reverse lookup failure\");\n-      return;\n-    }\n-\n   // lookup the expected function type\n   TyTy::BaseType *lookup_fntype = nullptr;\n   bool ok = ctx->get_tyctx ()->lookup_type (\n@@ -1871,20 +1854,10 @@ CompileExpr::resolve_operator_overload (\n     expr.get_mappings ().get_hirid (), &fntype);\n   rust_assert (is_op_overload);\n \n-  // lookup the resolved name\n-  NodeId resolved_node_id = UNKNOWN_NODEID;\n-  bool ok = ctx->get_resolver ()->lookup_resolved_name (\n-    expr.get_mappings ().get_nodeid (), &resolved_node_id);\n-  rust_assert (ok);\n-\n-  // reverse lookup\n-  HirId ref;\n-  ok = ctx->get_mappings ()->lookup_node_to_hir (resolved_node_id, &ref);\n-  rust_assert (ok);\n-\n   TyTy::BaseType *receiver = nullptr;\n-  ok = ctx->get_tyctx ()->lookup_receiver (expr.get_mappings ().get_hirid (),\n-\t\t\t\t\t   &receiver);\n+  bool ok\n+    = ctx->get_tyctx ()->lookup_receiver (expr.get_mappings ().get_hirid (),\n+\t\t\t\t\t  &receiver);\n   rust_assert (ok);\n \n   bool is_generic_receiver = receiver->get_kind () == TyTy::TypeKind::PARAM;"}]}