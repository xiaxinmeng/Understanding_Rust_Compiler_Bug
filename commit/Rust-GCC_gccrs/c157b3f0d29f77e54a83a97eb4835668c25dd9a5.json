{"sha": "c157b3f0d29f77e54a83a97eb4835668c25dd9a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE1N2IzZjBkMjlmNzdlNTRhODNhOTdlYjQ4MzU2NjhjMjVkZDlhNQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-01-11T18:20:37Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-01-11T18:20:37Z"}, "message": "mn10300: Fix debug offsets into the stack frame\n\nWe were using debugging hooks to semi-correct a mistake\nin the lack of ARG_POINTER_CFA_OFFSET.\n\nFrom-SVN: r168672", "tree": {"sha": "fc02d3f0fab20f33672c72e04b11f35512351eee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc02d3f0fab20f33672c72e04b11f35512351eee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c157b3f0d29f77e54a83a97eb4835668c25dd9a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c157b3f0d29f77e54a83a97eb4835668c25dd9a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c157b3f0d29f77e54a83a97eb4835668c25dd9a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c157b3f0d29f77e54a83a97eb4835668c25dd9a5/comments", "author": null, "committer": null, "parents": [{"sha": "cc909bba641e518f5ae92e361f87cf18485e50cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc909bba641e518f5ae92e361f87cf18485e50cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc909bba641e518f5ae92e361f87cf18485e50cd"}], "stats": {"total": 33, "additions": 7, "deletions": 26}, "files": [{"sha": "d00880b1b73fe3db2705d842e2672f5b72d38469", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c157b3f0d29f77e54a83a97eb4835668c25dd9a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c157b3f0d29f77e54a83a97eb4835668c25dd9a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c157b3f0d29f77e54a83a97eb4835668c25dd9a5", "patch": "@@ -1,5 +1,9 @@\n 2011-01-11  Richard Henderson  <rth@redhat.com>\n \n+\t* config/mn10300/mn10300.h (ARG_PIONTER_CFA_OFFSET): New.\n+\t(DEBUGGER_AUTO_OFFSET): Remove.\n+\t(DEBUGGER_ARG_OFFSET): Remove.\n+\n \t* config/mn10300/mn10300.c (mn10300_gen_multiple_store): Make static.\n \tEmit register stores with the same offsets as the hardware.\n \t(mn10300_store_multiple_operation): Don't check that the register"}, {"sha": "bdd6b6f813fcfd74f58b9f1df51432d72774c58d", "filename": "gcc/config/mn10300/mn10300.h", "status": "modified", "additions": 3, "deletions": 26, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c157b3f0d29f77e54a83a97eb4835668c25dd9a5/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c157b3f0d29f77e54a83a97eb4835668c25dd9a5/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.h?ref=c157b3f0d29f77e54a83a97eb4835668c25dd9a5", "patch": "@@ -463,6 +463,9 @@ enum reg_class\n \n #define FIRST_PARM_OFFSET(FNDECL) 4\n \n+/* But the CFA is at the arg pointer directly, not at the first argument.  */\n+#define ARG_POINTER_CFA_OFFSET(FNDECL) 0\n+\n #define ELIMINABLE_REGS\t\t\t\t\\\n {{ ARG_POINTER_REGNUM, STACK_POINTER_REGNUM},\t\\\n  { ARG_POINTER_REGNUM, FRAME_POINTER_REGNUM},\t\\\n@@ -726,34 +729,8 @@ struct cum_arg\n #undef  PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n #define DWARF2_DEBUGGING_INFO 1\n-\n #define DWARF2_ASM_LINE_DEBUG_INFO 1\n \n-/* GDB always assumes the current function's frame begins at the value\n-   of the stack pointer upon entry to the current function.  Accessing\n-   local variables and parameters passed on the stack is done using the\n-   base of the frame + an offset provided by GCC.\n-\n-   For functions which have frame pointers this method works fine;\n-   the (frame pointer) == (stack pointer at function entry) and GCC provides\n-   an offset relative to the frame pointer.\n-\n-   This loses for functions without a frame pointer; GCC provides an offset\n-   which is relative to the stack pointer after adjusting for the function's\n-   frame size.  GDB would prefer the offset to be relative to the value of\n-   the stack pointer at the function's entry.  Yuk!  */\n-#define DEBUGGER_AUTO_OFFSET(X) \\\n-  ((GET_CODE (X) == PLUS ? INTVAL (XEXP (X, 1)) : 0) \\\n-    + (frame_pointer_needed \\\n-       ? 0 : - mn10300_initial_offset (FRAME_POINTER_REGNUM, \\\n-\t\t\t\t       STACK_POINTER_REGNUM)))\n-\n-#define DEBUGGER_ARG_OFFSET(OFFSET, X) \\\n-  ((GET_CODE (X) == PLUS ? OFFSET : 0) \\\n-    + (frame_pointer_needed \\\n-       ? 0 : - mn10300_initial_offset (ARG_POINTER_REGNUM, \\\n-\t\t\t\t       STACK_POINTER_REGNUM)))\n-\n /* Specify the machine mode that this machine uses\n    for the index in the tablejump instruction.  */\n #define CASE_VECTOR_MODE Pmode"}]}