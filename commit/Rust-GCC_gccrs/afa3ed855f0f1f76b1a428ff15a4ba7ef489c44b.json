{"sha": "afa3ed855f0f1f76b1a428ff15a4ba7ef489c44b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZhM2VkODU1ZjBmMWY3NmIxYTQyOGZmMTVhNGJhN2VmNDg5YzQ0Yg==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2012-04-26T08:28:12Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2012-04-26T08:28:12Z"}, "message": "Fix sparc instruction type settings and sched bugs.\n\ngcc/\n\n\t* config/sparc/sparc.md (attr type): Delete 'fgm_cmp'.\n\t(fpack16_vis, fpackfix_vis, fpack32_vis): Set type to fgm_pack.\n\t(fmul8x16_vis, fmul8x16au_vis, fmul8x16al_vis, fmul8sux16_vis,\n\tfmul8ulx16_vis, fmuld8sux16_vis, fmuld8ulx16_vis): Set type to\n\tfgm_mul.\n\t(alignaddrsi_vis, alignaddrdi_vis, alignaddrlsi_vis,\n\talignaddrldi_vis): Set type to gsr.\n\t(pdist_vis, pdistn<mode>_vis): Set type to fgm_pdsit.\n\t(fcmp<code><GCM:gcm_name><P:mode>_vis, cmask8<P:mode>_vis,\n\tcmask16<P:mode>_vis, cmask32<P:mode>_vis, fchksm16_vis,\n\tv<vis3_shift_patname><mode>3, fmean16_vis,\n\tfp<plusminus_insn>64_vis, <vis3_addsub_ss_patname><mode>3,\n\tfucmp<code>8<P:mode>_vis): Set type to fga.\n\t* config/sparc/ultra1_2.md: Remove refrences to fgm_cmp.\n\t* config/sparc/niagara.md: Likewise.\n\t* config/sparc/niagara2.md: Likewise.\n\t* config/sparc/ultra3.md: Likewise, and fix type matching for\n\tus3_ialuX reservation.\n\nFrom-SVN: r186863", "tree": {"sha": "79dfd207e68c1305605a41471f7b6feca8507b6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79dfd207e68c1305605a41471f7b6feca8507b6b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afa3ed855f0f1f76b1a428ff15a4ba7ef489c44b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afa3ed855f0f1f76b1a428ff15a4ba7ef489c44b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afa3ed855f0f1f76b1a428ff15a4ba7ef489c44b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afa3ed855f0f1f76b1a428ff15a4ba7ef489c44b/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b5068425b9d7ab59694014bc78d4a29e04e44918", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5068425b9d7ab59694014bc78d4a29e04e44918", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5068425b9d7ab59694014bc78d4a29e04e44918"}], "stats": {"total": 104, "additions": 70, "deletions": 34}, "files": [{"sha": "cae34206a508cfafc5af7511d4bac9f173bd8019", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afa3ed855f0f1f76b1a428ff15a4ba7ef489c44b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afa3ed855f0f1f76b1a428ff15a4ba7ef489c44b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=afa3ed855f0f1f76b1a428ff15a4ba7ef489c44b", "patch": "@@ -1,3 +1,24 @@\n+2012-04-26  David S. Miller  <davem@davemloft.net>\n+\n+\t* config/sparc/sparc.md (attr type): Delete 'fgm_cmp'.\n+\t(fpack16_vis, fpackfix_vis, fpack32_vis): Set type to fgm_pack.\n+\t(fmul8x16_vis, fmul8x16au_vis, fmul8x16al_vis, fmul8sux16_vis,\n+\tfmul8ulx16_vis, fmuld8sux16_vis, fmuld8ulx16_vis): Set type to\n+\tfgm_mul.\n+\t(alignaddrsi_vis, alignaddrdi_vis, alignaddrlsi_vis,\n+\talignaddrldi_vis): Set type to gsr.\n+\t(pdist_vis, pdistn<mode>_vis): Set type to fgm_pdsit.\n+\t(fcmp<code><GCM:gcm_name><P:mode>_vis, cmask8<P:mode>_vis,\n+\tcmask16<P:mode>_vis, cmask32<P:mode>_vis, fchksm16_vis,\n+\tv<vis3_shift_patname><mode>3, fmean16_vis,\n+\tfp<plusminus_insn>64_vis, <vis3_addsub_ss_patname><mode>3,\n+\tfucmp<code>8<P:mode>_vis): Set type to fga.\n+\t* config/sparc/ultra1_2.md: Remove refrences to fgm_cmp.\n+\t* config/sparc/niagara.md: Likewise.\n+\t* config/sparc/niagara2.md: Likewise.\n+\t* config/sparc/ultra3.md: Likewise, and fix type matching for\n+\tus3_ialuX reservation.\n+\n 2012-04-26  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \t* reload.c (find_reloads): Change the loop nesting when trying an"}, {"sha": "c7db7b9ffbaa7538c668c0a5c949a89df0d8b153", "filename": "gcc/config/sparc/niagara.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afa3ed855f0f1f76b1a428ff15a4ba7ef489c44b/gcc%2Fconfig%2Fsparc%2Fniagara.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afa3ed855f0f1f76b1a428ff15a4ba7ef489c44b/gcc%2Fconfig%2Fsparc%2Fniagara.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fniagara.md?ref=afa3ed855f0f1f76b1a428ff15a4ba7ef489c44b", "patch": "@@ -114,5 +114,5 @@\n  */\n (define_insn_reservation \"niag_vis\" 8\n   (and (eq_attr \"cpu\" \"niagara\")\n-    (eq_attr \"type\" \"fga,fgm_pack,fgm_mul,fgm_cmp,fgm_pdist,edge,edgen,gsr,array\"))\n+    (eq_attr \"type\" \"fga,fgm_pack,fgm_mul,fgm_pdist,edge,edgen,gsr,array\"))\n   \"niag_pipe*8\")"}, {"sha": "59499aa0ad29e233ba744f06af2c5992346e9d43", "filename": "gcc/config/sparc/niagara2.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afa3ed855f0f1f76b1a428ff15a4ba7ef489c44b/gcc%2Fconfig%2Fsparc%2Fniagara2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afa3ed855f0f1f76b1a428ff15a4ba7ef489c44b/gcc%2Fconfig%2Fsparc%2Fniagara2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fniagara2.md?ref=afa3ed855f0f1f76b1a428ff15a4ba7ef489c44b", "patch": "@@ -111,10 +111,10 @@\n \n (define_insn_reservation \"niag2_vis\" 6\n   (and (eq_attr \"cpu\" \"niagara2\")\n-    (eq_attr \"type\" \"fga,fgm_pack,fgm_mul,fgm_cmp,fgm_pdist,edge,edgen,array,gsr\"))\n+    (eq_attr \"type\" \"fga,fgm_pack,fgm_mul,fgm_pdist,edge,edgen,array,gsr\"))\n   \"niag2_pipe*6\")\n \n (define_insn_reservation \"niag3_vis\" 9\n   (and (eq_attr \"cpu\" \"niagara3\")\n-    (eq_attr \"type\" \"fga,fgm_pack,fgm_mul,fgm_cmp,fgm_pdist,edge,edgen,array,gsr\"))\n+    (eq_attr \"type\" \"fga,fgm_pack,fgm_mul,fgm_pdist,edge,edgen,array,gsr\"))\n   \"niag2_pipe*9\")"}, {"sha": "08cc03176d80736cffc4e767cbbcccc5af273358", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 42, "deletions": 27, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afa3ed855f0f1f76b1a428ff15a4ba7ef489c44b/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afa3ed855f0f1f76b1a428ff15a4ba7ef489c44b/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=afa3ed855f0f1f76b1a428ff15a4ba7ef489c44b", "patch": "@@ -264,7 +264,7 @@\n    fpcmp,\n    fpmul,fpdivs,fpdivd,\n    fpsqrts,fpsqrtd,\n-   fga,fgm_pack,fgm_mul,fgm_pdist,fgm_cmp,edge,edgen,gsr,array,\n+   fga,fgm_pack,fgm_mul,fgm_pdist,edge,edgen,gsr,array,\n    cmove,\n    ialuX,\n    multi,savew,flushw,iflush,trap\"\n@@ -7925,7 +7925,7 @@\n \t\t      UNSPEC_FPACK16))]\n   \"TARGET_VIS\"\n   \"fpack16\\t%1, %0\"\n-  [(set_attr \"type\" \"fga\")\n+  [(set_attr \"type\" \"fgm_pack\")\n    (set_attr \"fptype\" \"double\")])\n \n (define_insn \"fpackfix_vis\"\n@@ -7935,7 +7935,7 @@\n \t\t      UNSPEC_FPACKFIX))]\n   \"TARGET_VIS\"\n   \"fpackfix\\t%1, %0\"\n-  [(set_attr \"type\" \"fga\")\n+  [(set_attr \"type\" \"fgm_pack\")\n    (set_attr \"fptype\" \"double\")])\n \n (define_insn \"fpack32_vis\"\n@@ -7946,7 +7946,7 @@\n                      UNSPEC_FPACK32))]\n   \"TARGET_VIS\"\n   \"fpack32\\t%1, %2, %0\"\n-  [(set_attr \"type\" \"fga\")\n+  [(set_attr \"type\" \"fgm_pack\")\n    (set_attr \"fptype\" \"double\")])\n \n (define_insn \"fexpand_vis\"\n@@ -8008,7 +8008,7 @@\n          UNSPEC_MUL8))]\n   \"TARGET_VIS\"\n   \"fmul8x16\\t%1, %2, %0\"\n-  [(set_attr \"type\" \"fpmul\")\n+  [(set_attr \"type\" \"fgm_mul\")\n    (set_attr \"fptype\" \"double\")])\n \n (define_insn \"fmul8x16au_vis\"\n@@ -8018,7 +8018,7 @@\n          UNSPEC_MUL16AU))]\n   \"TARGET_VIS\"\n   \"fmul8x16au\\t%1, %2, %0\"\n-  [(set_attr \"type\" \"fpmul\")\n+  [(set_attr \"type\" \"fgm_mul\")\n    (set_attr \"fptype\" \"double\")])\n \n (define_insn \"fmul8x16al_vis\"\n@@ -8028,7 +8028,7 @@\n          UNSPEC_MUL16AL))]\n   \"TARGET_VIS\"\n   \"fmul8x16al\\t%1, %2, %0\"\n-  [(set_attr \"type\" \"fpmul\")\n+  [(set_attr \"type\" \"fgm_mul\")\n    (set_attr \"fptype\" \"double\")])\n \n (define_insn \"fmul8sux16_vis\"\n@@ -8038,7 +8038,7 @@\n          UNSPEC_MUL8SU))]\n   \"TARGET_VIS\"\n   \"fmul8sux16\\t%1, %2, %0\"\n-  [(set_attr \"type\" \"fpmul\")\n+  [(set_attr \"type\" \"fgm_mul\")\n    (set_attr \"fptype\" \"double\")])\n \n (define_insn \"fmul8ulx16_vis\"\n@@ -8048,7 +8048,7 @@\n          UNSPEC_MUL8UL))]\n   \"TARGET_VIS\"\n   \"fmul8ulx16\\t%1, %2, %0\"\n-  [(set_attr \"type\" \"fpmul\")\n+  [(set_attr \"type\" \"fgm_mul\")\n    (set_attr \"fptype\" \"double\")])\n \n (define_insn \"fmuld8sux16_vis\"\n@@ -8058,7 +8058,7 @@\n          UNSPEC_MULDSU))]\n   \"TARGET_VIS\"\n   \"fmuld8sux16\\t%1, %2, %0\"\n-  [(set_attr \"type\" \"fpmul\")\n+  [(set_attr \"type\" \"fgm_mul\")\n    (set_attr \"fptype\" \"double\")])\n \n (define_insn \"fmuld8ulx16_vis\"\n@@ -8068,7 +8068,7 @@\n          UNSPEC_MULDUL))]\n   \"TARGET_VIS\"\n   \"fmuld8ulx16\\t%1, %2, %0\"\n-  [(set_attr \"type\" \"fpmul\")\n+  [(set_attr \"type\" \"fgm_mul\")\n    (set_attr \"fptype\" \"double\")])\n \n (define_expand \"wrgsr_vis\"\n@@ -8149,7 +8149,8 @@\n    (set (zero_extract:DI (reg:DI GSR_REG) (const_int 3) (const_int 0))\n         (zero_extend:DI (plus:SI (match_dup 1) (match_dup 2))))]\n   \"TARGET_VIS\"\n-  \"alignaddr\\t%r1, %r2, %0\")\n+  \"alignaddr\\t%r1, %r2, %0\"\n+  [(set_attr \"type\" \"gsr\")])\n \n (define_insn \"alignaddrdi_vis\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n@@ -8158,7 +8159,8 @@\n    (set (zero_extract:DI (reg:DI GSR_REG) (const_int 3) (const_int 0))\n         (plus:DI (match_dup 1) (match_dup 2)))]\n   \"TARGET_VIS\"\n-  \"alignaddr\\t%r1, %r2, %0\")\n+  \"alignaddr\\t%r1, %r2, %0\"\n+  [(set_attr \"type\" \"gsr\")])\n \n (define_insn \"alignaddrlsi_vis\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n@@ -8168,7 +8170,8 @@\n         (xor:DI (zero_extend:DI (plus:SI (match_dup 1) (match_dup 2)))\n                 (const_int 7)))]\n   \"TARGET_VIS\"\n-  \"alignaddrl\\t%r1, %r2, %0\")\n+  \"alignaddrl\\t%r1, %r2, %0\"\n+  [(set_attr \"type\" \"gsr\")])\n \n (define_insn \"alignaddrldi_vis\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n@@ -8178,7 +8181,8 @@\n         (xor:DI (plus:DI (match_dup 1) (match_dup 2))\n                 (const_int 7)))]\n   \"TARGET_VIS\"\n-  \"alignaddrl\\t%r1, %r2, %0\")\n+  \"alignaddrl\\t%r1, %r2, %0\"\n+  [(set_attr \"type\" \"gsr\")])\n \n (define_insn \"pdist_vis\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=e\")\n@@ -8188,7 +8192,7 @@\n          UNSPEC_PDIST))]\n   \"TARGET_VIS\"\n   \"pdist\\t%1, %2, %0\"\n-  [(set_attr \"type\" \"fga\")\n+  [(set_attr \"type\" \"fgm_pdist\")\n    (set_attr \"fptype\" \"double\")])\n \n ;; Edge instructions produce condition codes equivalent to a 'subcc'\n@@ -8270,7 +8274,7 @@\n \t UNSPEC_FCMP))]\n   \"TARGET_VIS\"\n   \"fcmp<code><GCM:gcm_name>\\t%1, %2, %0\"\n-  [(set_attr \"type\" \"fpmul\")\n+  [(set_attr \"type\" \"fga\")\n    (set_attr \"fptype\" \"double\")])\n \n (define_expand \"vcond<mode><mode>\"\n@@ -8460,31 +8464,35 @@\n \t            (reg:DI GSR_REG)]\n                    UNSPEC_CMASK8))]\n   \"TARGET_VIS3\"\n-  \"cmask8\\t%r0\")\n+  \"cmask8\\t%r0\"\n+  [(set_attr \"type\" \"fga\")])\n \n (define_insn \"cmask16<P:mode>_vis\"\n   [(set (reg:DI GSR_REG)\n         (unspec:DI [(match_operand:P 0 \"register_or_zero_operand\" \"rJ\")\n \t            (reg:DI GSR_REG)]\n                    UNSPEC_CMASK16))]\n   \"TARGET_VIS3\"\n-  \"cmask16\\t%r0\")\n+  \"cmask16\\t%r0\"\n+  [(set_attr \"type\" \"fga\")])\n \n (define_insn \"cmask32<P:mode>_vis\"\n   [(set (reg:DI GSR_REG)\n         (unspec:DI [(match_operand:P 0 \"register_or_zero_operand\" \"rJ\")\n \t            (reg:DI GSR_REG)]\n                    UNSPEC_CMASK32))]\n   \"TARGET_VIS3\"\n-  \"cmask32\\t%r0\")\n+  \"cmask32\\t%r0\"\n+  [(set_attr \"type\" \"fga\")])\n \n (define_insn \"fchksm16_vis\"\n   [(set (match_operand:V4HI 0 \"register_operand\" \"=e\")\n         (unspec:V4HI [(match_operand:V4HI 1 \"register_operand\" \"e\")\n                       (match_operand:V4HI 2 \"register_operand\" \"e\")]\n                      UNSPEC_FCHKSM16))]\n   \"TARGET_VIS3\"\n-  \"fchksm16\\t%1, %2, %0\")\n+  \"fchksm16\\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fga\")])\n \n (define_code_iterator vis3_shift [ashift ss_ashift lshiftrt ashiftrt])\n (define_code_attr vis3_shift_insn\n@@ -8497,15 +8505,18 @@\n \t(vis3_shift:GCM (match_operand:GCM 1 \"register_operand\" \"<vconstr>\")\n \t\t\t(match_operand:GCM 2 \"register_operand\" \"<vconstr>\")))]\n   \"TARGET_VIS3\"\n-  \"<vis3_shift_insn><vbits>\\t%1, %2, %0\")\n+  \"<vis3_shift_insn><vbits>\\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fga\")])\n \n (define_insn \"pdistn<mode>_vis\"\n   [(set (match_operand:P 0 \"register_operand\" \"=r\")\n         (unspec:P [(match_operand:V8QI 1 \"register_operand\" \"e\")\n                    (match_operand:V8QI 2 \"register_operand\" \"e\")]\n          UNSPEC_PDISTN))]\n   \"TARGET_VIS3\"\n-  \"pdistn\\t%1, %2, %0\")\n+  \"pdistn\\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fgm_pdist\")\n+   (set_attr \"fptype\" \"double\")])\n \n (define_insn \"fmean16_vis\"\n   [(set (match_operand:V4HI 0 \"register_operand\" \"=e\")\n@@ -8521,14 +8532,16 @@\n                                   (const_int 1) (const_int 1)]))\n           (const_int 1))))]\n   \"TARGET_VIS3\"\n-  \"fmean16\\t%1, %2, %0\")\n+  \"fmean16\\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fga\")])\n \n (define_insn \"fp<plusminus_insn>64_vis\"\n   [(set (match_operand:V1DI 0 \"register_operand\" \"=e\")\n \t(plusminus:V1DI (match_operand:V1DI 1 \"register_operand\" \"e\")\n \t\t\t(match_operand:V1DI 2 \"register_operand\" \"e\")))]\n   \"TARGET_VIS3\"\n-  \"fp<plusminus_insn>64\\t%1, %2, %0\")\n+  \"fp<plusminus_insn>64\\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fga\")])\n \n (define_mode_iterator VASS [V4HI V2SI V2HI V1SI])\n (define_code_iterator vis3_addsub_ss [ss_plus ss_minus])\n@@ -8542,15 +8555,17 @@\n         (vis3_addsub_ss:VASS (match_operand:VASS 1 \"register_operand\" \"<vconstr>\")\n                              (match_operand:VASS 2 \"register_operand\" \"<vconstr>\")))]\n   \"TARGET_VIS3\"\n-  \"<vis3_addsub_ss_insn><vbits>\\t%1, %2, %0\")\n+  \"<vis3_addsub_ss_insn><vbits>\\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fga\")])\n \n (define_insn \"fucmp<code>8<P:mode>_vis\"\n   [(set (match_operand:P 0 \"register_operand\" \"=r\")\n   \t(unspec:P [(gcond:V8QI (match_operand:V8QI 1 \"register_operand\" \"e\")\n \t\t               (match_operand:V8QI 2 \"register_operand\" \"e\"))]\n \t UNSPEC_FUCMP))]\n   \"TARGET_VIS3\"\n-  \"fucmp<code>8\\t%1, %2, %0\")\n+  \"fucmp<code>8\\t%1, %2, %0\"\n+  [(set_attr \"type\" \"fga\")])\n \n (define_insn \"*naddsf3\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")"}, {"sha": "be26ea8d32fdd51244827d305f4bb047178d1148", "filename": "gcc/config/sparc/ultra1_2.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afa3ed855f0f1f76b1a428ff15a4ba7ef489c44b/gcc%2Fconfig%2Fsparc%2Fultra1_2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afa3ed855f0f1f76b1a428ff15a4ba7ef489c44b/gcc%2Fconfig%2Fsparc%2Fultra1_2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fultra1_2.md?ref=afa3ed855f0f1f76b1a428ff15a4ba7ef489c44b", "patch": "@@ -275,7 +275,7 @@\n   4\n   (and (and\n          (eq_attr \"cpu\" \"ultrasparc\")\n-         (eq_attr \"type\" \"fgm_pack,fgm_mul,fgm_cmp\"))\n+         (eq_attr \"type\" \"fgm_pack,fgm_mul\"))\n        (eq_attr \"fptype\" \"single\"))\n   \"us1_fpm + us1_fp_single + us1_slotany, nothing*3\")\n \n@@ -285,7 +285,7 @@\n   4\n   (and (and\n          (eq_attr \"cpu\" \"ultrasparc\")\n-         (eq_attr \"type\" \"fgm_pack,fgm_mul,fgm_cmp\"))\n+         (eq_attr \"type\" \"fgm_pack,fgm_mul\"))\n        (eq_attr \"fptype\" \"double\"))\n   \"us1_fpm + us1_fp_double + us1_slotany, nothing*3\")\n "}, {"sha": "fc36e252b69ecb018c55d878451edfed74556da7", "filename": "gcc/config/sparc/ultra3.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afa3ed855f0f1f76b1a428ff15a4ba7ef489c44b/gcc%2Fconfig%2Fsparc%2Fultra3.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afa3ed855f0f1f76b1a428ff15a4ba7ef489c44b/gcc%2Fconfig%2Fsparc%2Fultra3.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fultra3.md?ref=afa3ed855f0f1f76b1a428ff15a4ba7ef489c44b", "patch": "@@ -46,7 +46,7 @@\n \n (define_insn_reservation \"us3_ialuX\" 5\n   (and (eq_attr \"cpu\" \"ultrasparc3\")\n-    (eq_attr \"type\" \"ialu,shift,compare\"))\n+    (eq_attr \"type\" \"ialuX\"))\n   \"us3_single_issue*4, nothing\")\n \n (define_insn_reservation \"us3_cmove\" 2\n@@ -182,7 +182,7 @@\n (define_insn_reservation \"us3_fgm\"\n   4\n   (and (eq_attr \"cpu\" \"ultrasparc3\")\n-       (eq_attr \"type\" \"fgm_pack,fgm_mul,fgm_cmp\"))\n+       (eq_attr \"type\" \"fgm_pack,fgm_mul\"))\n   \"us3_fpm + us3_slotany, nothing*3\")\n \n (define_insn_reservation \"us3_pdist\""}]}