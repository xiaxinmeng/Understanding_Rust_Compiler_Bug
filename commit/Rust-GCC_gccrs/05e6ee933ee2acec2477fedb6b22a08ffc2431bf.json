{"sha": "05e6ee933ee2acec2477fedb6b22a08ffc2431bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDVlNmVlOTMzZWUyYWNlYzI0NzdmZWRiNmIyMmEwOGZmYzI0MzFiZg==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2008-03-19T19:15:03Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2008-03-19T19:15:03Z"}, "message": "re PR middle-end/35616 (Incorrect code while O2 compling)\n\n        PR middle-end/35616\n        * calls.c (expand_call): Check overlap of arguments with call\n        address for sibcalls.\n\n        * gcc.dg/pr35616.c: New test.\n\nFrom-SVN: r133348", "tree": {"sha": "afbd7145d766cc18a51d78c2499ef49900a49553", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afbd7145d766cc18a51d78c2499ef49900a49553"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05e6ee933ee2acec2477fedb6b22a08ffc2431bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05e6ee933ee2acec2477fedb6b22a08ffc2431bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05e6ee933ee2acec2477fedb6b22a08ffc2431bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05e6ee933ee2acec2477fedb6b22a08ffc2431bf/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ac05557cc7402b73c098179049cad48da07c52dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac05557cc7402b73c098179049cad48da07c52dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac05557cc7402b73c098179049cad48da07c52dc"}], "stats": {"total": 64, "additions": 63, "deletions": 1}, "files": [{"sha": "19b81c429633366cada5169c541a31b545365953", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05e6ee933ee2acec2477fedb6b22a08ffc2431bf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05e6ee933ee2acec2477fedb6b22a08ffc2431bf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=05e6ee933ee2acec2477fedb6b22a08ffc2431bf", "patch": "@@ -1,3 +1,9 @@\n+2008-03-19  Michael Matz  <matz@suse.de>\n+\n+\tPR middle-end/35616\n+\t* calls.c (expand_call): Check overlap of arguments with call\n+\taddress for sibcalls.\n+\n 2008-03-19  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/35496"}, {"sha": "2d68f7507a50450d520792c8586762d32290d163", "filename": "gcc/calls.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05e6ee933ee2acec2477fedb6b22a08ffc2431bf/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05e6ee933ee2acec2477fedb6b22a08ffc2431bf/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=05e6ee933ee2acec2477fedb6b22a08ffc2431bf", "patch": "@@ -2326,7 +2326,7 @@ expand_call (tree exp, rtx target, int ignore)\n       int save_pending_stack_adjust = 0;\n       int save_stack_pointer_delta = 0;\n       rtx insns;\n-      rtx before_call, next_arg_reg;\n+      rtx before_call, next_arg_reg, after_args;\n \n       if (pass == 0)\n \t{\n@@ -2756,6 +2756,7 @@ expand_call (tree exp, rtx target, int ignore)\n \t    use_reg (&call_fusage, struct_value);\n \t}\n \n+      after_args = get_last_insn ();\n       funexp = prepare_call_address (funexp, static_chain_value,\n \t\t\t\t     &call_fusage, reg_parm_seen, pass == 0);\n \n@@ -2790,6 +2791,13 @@ expand_call (tree exp, rtx target, int ignore)\n \t\t   next_arg_reg, valreg, old_inhibit_defer_pop, call_fusage,\n \t\t   flags, & args_so_far);\n \n+      /* If the call setup or the call itself overlaps with anything\n+\t of the argument setup we probably clobbered our call address.\n+\t In that case we can't do sibcalls.  */\n+      if (pass == 0\n+\t  && check_sibcall_argument_overlap (after_args, 0, 0))\n+\tsibcall_failure = 1;\n+\n       /* If a non-BLKmode value is returned at the most significant end\n \t of a register, shift the register right by the appropriate amount\n \t and update VALREG accordingly.  BLKmode values are handled by the"}, {"sha": "9902a74134b2e83e7d31e848f3d54eb84a109cb9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05e6ee933ee2acec2477fedb6b22a08ffc2431bf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05e6ee933ee2acec2477fedb6b22a08ffc2431bf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=05e6ee933ee2acec2477fedb6b22a08ffc2431bf", "patch": "@@ -1,3 +1,8 @@\n+2008-03-19  Michael Matz  <matz@suse.de>\n+\n+\tPR middle-end/35616\n+\t* gcc.dg/pr35616.c: New test.\n+\n 2008-03-19  Daniel Franke  <franke.daniel@gmail.com>\n \n \tPR fortran/35152"}, {"sha": "ad2c9e99e99d41ab18dbaf697bb07a59361e63df", "filename": "gcc/testsuite/gcc.dg/pr35616.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05e6ee933ee2acec2477fedb6b22a08ffc2431bf/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35616.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05e6ee933ee2acec2477fedb6b22a08ffc2431bf/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35616.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35616.c?ref=05e6ee933ee2acec2477fedb6b22a08ffc2431bf", "patch": "@@ -0,0 +1,43 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+typedef void (*listener_fun)(\n+        int a,\n+        int b,\n+        int c);\n+\n+struct data_t\n+{\n+  int a;\n+\n+  listener_fun listener;\n+\n+  int b;\n+  int c;\n+  int d;\n+};\n+\n+extern void abort(void);\n+void function_calling_listener (struct data_t data);\n+\n+void function_calling_listener (struct data_t data)\n+{\n+  data.listener(data.a, data.c, data.d);\n+}\n+\n+void my_listener(int a, int b, int c)\n+{\n+  if (a != 42 || b != 44 || c != 45)\n+    abort ();\n+}\n+\n+int main()\n+{\n+  struct data_t d;\n+  d.a = 42;\n+  d.b = 43;\n+  d.c = 44;\n+  d.d = 45;\n+  d.listener = my_listener;\n+  function_calling_listener (d);\n+  return 0;\n+}"}]}