{"sha": "686b77526599210898461b826b1c7d8c0e64408e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg2Yjc3NTI2NTk5MjEwODk4NDYxYjgyNmIxYzdkOGMwZTY0NDA4ZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-29T08:56:01Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-29T08:56:01Z"}, "message": "re PR ada/864 (--program-suffix is ignored (for ada))\n\n\tPR ada/864\n\t* osint.ads, osint.adb (Program_Name): New parameter \"Prog\" to\n\tallow recognition of program suffix in addition to prefix.\n\t\n\t* gnatchop.adb (Locate_Executable): Add support for prefix.\n\t\n\t* make.adb, gnatcmd.adb, gnatlink.adb, prj-makr.adb,\n\tmlib-utl.adb: Adjust calls to Program_Name.\n\nFrom-SVN: r136149", "tree": {"sha": "cb52e4a743dca38df679be386ba0c94ca39728f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb52e4a743dca38df679be386ba0c94ca39728f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/686b77526599210898461b826b1c7d8c0e64408e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/686b77526599210898461b826b1c7d8c0e64408e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/686b77526599210898461b826b1c7d8c0e64408e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/686b77526599210898461b826b1c7d8c0e64408e/comments", "author": null, "committer": null, "parents": [{"sha": "fe63b1b12c7ac3e7e43afa5201c8cc7b4763d48c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe63b1b12c7ac3e7e43afa5201c8cc7b4763d48c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe63b1b12c7ac3e7e43afa5201c8cc7b4763d48c"}], "stats": {"total": 98, "additions": 62, "deletions": 36}, "files": [{"sha": "766a474afbf6d6a5ad8c73cfc7a740a3ebc864ec", "filename": "gcc/ada/gnatchop.adb", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/686b77526599210898461b826b1c7d8c0e64408e/gcc%2Fada%2Fgnatchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/686b77526599210898461b826b1c7d8c0e64408e/gcc%2Fada%2Fgnatchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatchop.adb?ref=686b77526599210898461b826b1c7d8c0e64408e", "patch": "@@ -524,13 +524,16 @@ procedure Gnatchop is\n      (Program_Name    : String;\n       Look_For_Prefix : Boolean := True) return String_Access\n    is\n+      Gnatchop_Str    : constant String := \"gnatchop\";\n       Current_Command : constant String := Normalize_Pathname (Command_Name);\n       End_Of_Prefix   : Natural;\n       Start_Of_Prefix : Positive;\n+      Start_Of_Suffix : Positive;\n       Result          : String_Access;\n \n    begin\n       Start_Of_Prefix := Current_Command'First;\n+      Start_Of_Suffix := Current_Command'Last + 1;\n       End_Of_Prefix   := Start_Of_Prefix - 1;\n \n       if Look_For_Prefix then\n@@ -549,18 +552,28 @@ procedure Gnatchop is\n \n          --  Find End_Of_Prefix\n \n-         for J in reverse Start_Of_Prefix .. Current_Command'Last loop\n-            if Current_Command (J) = '-' then\n-               End_Of_Prefix := J;\n+         for J in Start_Of_Prefix ..\n+                  Current_Command'Last - Gnatchop_Str'Length + 1\n+         loop\n+            if Current_Command (J .. J + Gnatchop_Str'Length - 1) =\n+                                                                  Gnatchop_Str\n+            then\n+               End_Of_Prefix := J - 1;\n                exit;\n             end if;\n          end loop;\n       end if;\n \n+      if End_Of_Prefix > Current_Command'First then\n+         Start_Of_Suffix := End_Of_Prefix + Gnatchop_Str'Length + 1;\n+      end if;\n+\n       declare\n          Command : constant String :=\n-                     Current_Command (Start_Of_Prefix .. End_Of_Prefix) &\n-                                                                Program_Name;\n+                     Current_Command (Start_Of_Prefix .. End_Of_Prefix)\n+                       & Program_Name\n+                       & Current_Command (Start_Of_Suffix ..\n+                                          Current_Command'Last);\n       begin\n          Result := Locate_Exec_On_Path (Command);\n "}, {"sha": "c75931a42d5ea35f0cf2cade5562e5b772be9b21", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/686b77526599210898461b826b1c7d8c0e64408e/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/686b77526599210898461b826b1c7d8c0e64408e/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=686b77526599210898461b826b1c7d8c0e64408e", "patch": "@@ -787,7 +787,7 @@ procedure GNATCmd is\n       Name : Path_Name_Type;\n       --  Path of the file FD\n \n-      GN_Name : constant String := Program_Name (\"gnatmake\").all;\n+      GN_Name : constant String := Program_Name (\"gnatmake\", \"gnat\").all;\n       --  Name for gnatmake\n \n       GN_Path : constant String_Access := Locate_Exec_On_Path (GN_Name);\n@@ -1345,7 +1345,7 @@ procedure GNATCmd is\n             if C = Stack then\n                Put (Command_List (C).Unixcmd.all);\n             else\n-               Put (Program_Name (Command_List (C).Unixcmd.all).all);\n+               Put (Program_Name (Command_List (C).Unixcmd.all, \"gnat\").all);\n             end if;\n \n             declare\n@@ -1581,7 +1581,7 @@ begin\n \n       else\n          Program :=\n-           Program_Name (Command_List (The_Command).Unixcmd.all);\n+           Program_Name (Command_List (The_Command).Unixcmd.all, \"gnat\");\n       end if;\n \n       --  Locate the executable for the command"}, {"sha": "99898223cf2fb11ad2f4473052b28dbd05338e95", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/686b77526599210898461b826b1c7d8c0e64408e/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/686b77526599210898461b826b1c7d8c0e64408e/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=686b77526599210898461b826b1c7d8c0e64408e", "patch": "@@ -137,7 +137,7 @@ procedure Gnatlink is\n    --  This table collects the arguments to be passed to compile the binder\n    --  generated file.\n \n-   Gcc : String_Access := Program_Name (\"gcc\");\n+   Gcc : String_Access := Program_Name (\"gcc\", \"gnatlink\");\n \n    Read_Mode : constant String := \"r\" & ASCII.NUL;\n "}, {"sha": "3ae13fc84aeb4fd31a48a93e67480fbc9a171b6f", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/686b77526599210898461b826b1c7d8c0e64408e/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/686b77526599210898461b826b1c7d8c0e64408e/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=686b77526599210898461b826b1c7d8c0e64408e", "patch": "@@ -659,9 +659,9 @@ package body Make is\n    -- Compiler, Binder & Linker Data and Subprograms --\n    ----------------------------------------------------\n \n-   Gcc             : String_Access := Program_Name (\"gcc\");\n-   Gnatbind        : String_Access := Program_Name (\"gnatbind\");\n-   Gnatlink        : String_Access := Program_Name (\"gnatlink\");\n+   Gcc             : String_Access := Program_Name (\"gcc\", \"gnatmake\");\n+   Gnatbind        : String_Access := Program_Name (\"gnatbind\", \"gnatmake\");\n+   Gnatlink        : String_Access := Program_Name (\"gnatlink\", \"gnatmake\");\n    --  Default compiler, binder, linker programs\n \n    Saved_Gcc       : String_Access := null;"}, {"sha": "d743bb138e8bbfb26545b67821d5faed291c557c", "filename": "gcc/ada/mlib-utl.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/686b77526599210898461b826b1c7d8c0e64408e/gcc%2Fada%2Fmlib-utl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/686b77526599210898461b826b1c7d8c0e64408e/gcc%2Fada%2Fmlib-utl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-utl.adb?ref=686b77526599210898461b826b1c7d8c0e64408e", "patch": "@@ -136,7 +136,7 @@ package body MLib.Utl is\n \n    begin\n       if Ar_Exec = null then\n-         Ar_Name := Osint.Program_Name (Archive_Builder);\n+         Ar_Name := Osint.Program_Name (Archive_Builder, \"gnatmake\");\n          Ar_Exec := Locate_Exec_On_Path (Ar_Name.all);\n \n          if Ar_Exec = null then\n@@ -177,7 +177,7 @@ package body MLib.Utl is\n \n          --  ranlib\n \n-         Ranlib_Name := Osint.Program_Name (Archive_Indexer);\n+         Ranlib_Name := Osint.Program_Name (Archive_Indexer, \"gnatmake\");\n \n          if Ranlib_Name'Length > 0 then\n             Ranlib_Exec := Locate_Exec_On_Path (Ranlib_Name.all);\n@@ -408,7 +408,7 @@ package body MLib.Utl is\n       if Driver_Name = No_Name then\n          if Gcc_Exec = null then\n             if Gcc_Name = null then\n-               Gcc_Name :=  Osint.Program_Name (\"gcc\");\n+               Gcc_Name :=  Osint.Program_Name (\"gcc\", \"gnatmake\");\n             end if;\n \n             Gcc_Exec := Locate_Exec_On_Path (Gcc_Name.all);"}, {"sha": "993ecdf357837badd39e6d35e759f4353300d739", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 29, "deletions": 19, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/686b77526599210898461b826b1c7d8c0e64408e/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/686b77526599210898461b826b1c7d8c0e64408e/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=686b77526599210898461b826b1c7d8c0e64408e", "patch": "@@ -1874,8 +1874,10 @@ package body Osint is\n    -- Program_Name --\n    ------------------\n \n-   function Program_Name (Nam : String) return String_Access is\n-      Res : String_Access;\n+   function Program_Name (Nam : String; Prog : String) return String_Access is\n+      End_Of_Prefix   : Natural := 0;\n+      Start_Of_Prefix : Positive := 1;\n+      Start_Of_Suffix : Positive;\n \n    begin\n       --  GNAAMP tool names require special treatment\n@@ -1907,34 +1909,42 @@ package body Osint is\n \n       Find_Program_Name;\n \n-      --  Find the target prefix if any, for the cross compilation case.\n-      --  For instance in \"alpha-dec-vxworks-gcc\" the target prefix is\n-      --  \"alpha-dec-vxworks-\"\n-\n-      while Name_Len > 0  loop\n+      Start_Of_Suffix := Name_Len + 1;\n \n-         --  All done if we find the last hyphen\n+      --  Find the target prefix if any, for the cross compilation case.\n+      --  For instance in \"powerpc-elf-gcc\" the target prefix is\n+      --  \"powerpc-elf-\"\n+      --  Ditto for suffix, e.g. in \"gcc-4.1\", the suffix is \"-4.1\"\n \n-         if Name_Buffer (Name_Len) = '-' then\n+      for J in reverse 1 .. Name_Len loop\n+         if Name_Buffer (J) = '/'\n+           or else Name_Buffer (J) = Directory_Separator\n+           or else Name_Buffer (J) = ':'\n+         then\n+            Start_Of_Prefix := J + 1;\n             exit;\n+         end if;\n+      end loop;\n \n-         --  If directory separator found, we don't want to look further\n-         --  since in this case, no prefix has been found.\n+      --  Find End_Of_Prefix\n \n-         elsif Is_Directory_Separator (Name_Buffer (Name_Len)) then\n-            Name_Len := 0;\n+      for J in Start_Of_Prefix .. Name_Len - Prog'Length + 1 loop\n+         if Name_Buffer (J .. J + Prog'Length - 1) = Prog then\n+            End_Of_Prefix := J - 1;\n             exit;\n          end if;\n-\n-         Name_Len := Name_Len - 1;\n       end loop;\n \n+      if End_Of_Prefix > 1 then\n+         Start_Of_Suffix := End_Of_Prefix + Prog'Length + 1;\n+      end if;\n+\n       --  Create the new program name\n \n-      Res := new String (1 .. Name_Len + Nam'Length);\n-      Res.all (1 .. Name_Len) := Name_Buffer (1 .. Name_Len);\n-      Res.all (Name_Len + 1 .. Name_Len + Nam'Length) := Nam;\n-      return Res;\n+      return new String'\n+        (Name_Buffer (Start_Of_Prefix .. End_Of_Prefix)\n+         & Nam\n+         & Name_Buffer (Start_Of_Suffix .. Name_Len));\n    end Program_Name;\n \n    ------------------------------"}, {"sha": "6cf7530f7feacd073d3dc2998ffc6910165c8b5e", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/686b77526599210898461b826b1c7d8c0e64408e/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/686b77526599210898461b826b1c7d8c0e64408e/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=686b77526599210898461b826b1c7d8c0e64408e", "patch": "@@ -105,14 +105,17 @@ package Osint is\n    --  Put simple name of current program being run (excluding the directory\n    --  path) in Name_Buffer, with the length in Name_Len.\n \n-   function Program_Name (Nam : String) return String_Access;\n+   function Program_Name (Nam : String; Prog : String) return String_Access;\n    --  In the native compilation case, Create a string containing Nam. In the\n    --  cross compilation case, looks at the prefix of the current program being\n    --  run and prepend it to Nam. For instance if the program being run is\n    --  <target>-gnatmake and Nam is \"gcc\", the returned value will be a pointer\n    --  to \"<target>-gcc\". In the specific case where AAMP_On_Target is set, the\n    --  name \"gcc\" is mapped to \"gnaamp\", and names of the form \"gnat*\" are\n    --  mapped to \"gnaamp*\". This function clobbers Name_Buffer and Name_Len.\n+   --  Also look at any suffix, e.g. gnatmake-4.1 -> \"gcc-4.1\".\n+   --  Prog is the default name of the current program being executed, e.g.\n+   --  \"gnatmake\", \"gnatlink\".\n \n    procedure Write_Program_Name;\n    --  Writes name of program as invoked to the current output"}, {"sha": "98a55f7379be545afb3ea82fb9ec2a5332206406", "filename": "gcc/ada/prj-makr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/686b77526599210898461b826b1c7d8c0e64408e/gcc%2Fada%2Fprj-makr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/686b77526599210898461b826b1c7d8c0e64408e/gcc%2Fada%2Fprj-makr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-makr.adb?ref=686b77526599210898461b826b1c7d8c0e64408e", "patch": "@@ -1172,7 +1172,7 @@ package body Prj.Makr is\n                         if Gcc_Path = null then\n                            declare\n                               Prefix_Gcc : String_Access :=\n-                                             Program_Name (Gcc);\n+                                             Program_Name (Gcc, \"gnatname\");\n                            begin\n                               Gcc_Path :=\n                                 Locate_Exec_On_Path (Prefix_Gcc.all);"}]}