{"sha": "350916301fe8afa02464e3ca84c70015ce2cf74b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzUwOTE2MzAxZmU4YWZhMDI0NjRlM2NhODRjNzAwMTVjZTJjZjc0Yg==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2009-04-21T16:41:14Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2009-04-21T16:41:14Z"}, "message": "config.gcc: Add additional configuration for i686-w64-mingw* and x86_64-w64-mingw* triplet.\n\n2009-04-21  Kai Tietz  <kai.tietz@onevision.com>\n\n        * config.gcc: Add additional configuration for\n        i686-w64-mingw* and x86_64-w64-mingw* triplet.\n        * config/i386/mingw-w64.h: New mingw-w64 specific header.\n        (CPP_SPEC): Redefine for allowing -municode option.\n        (STARTFILE_SPEC): Likewise.\n        * config/i386/t-mingw-w64: New.\n        * config/i386/mingw-w64.opt: New.\n        (municode): Add new target option.\n        * doc/invoke.texi (municode): Add documentation for new option.\n\nFrom-SVN: r146529", "tree": {"sha": "bbbb93739629f031cae75429fefb921b5c3f7c3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbbb93739629f031cae75429fefb921b5c3f7c3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/350916301fe8afa02464e3ca84c70015ce2cf74b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/350916301fe8afa02464e3ca84c70015ce2cf74b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/350916301fe8afa02464e3ca84c70015ce2cf74b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/350916301fe8afa02464e3ca84c70015ce2cf74b/comments", "author": null, "committer": null, "parents": [{"sha": "0267afc48d8f1e520d850241b73d4d68a56278cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0267afc48d8f1e520d850241b73d4d68a56278cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0267afc48d8f1e520d850241b73d4d68a56278cf"}], "stats": {"total": 104, "additions": 101, "deletions": 3}, "files": [{"sha": "f59688e0fe733fee36d6a0d82f98c671cb89e441", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/350916301fe8afa02464e3ca84c70015ce2cf74b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/350916301fe8afa02464e3ca84c70015ce2cf74b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=350916301fe8afa02464e3ca84c70015ce2cf74b", "patch": "@@ -1,3 +1,15 @@\n+2009-04-21  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\t* config.gcc: Add additional configuration for\n+\ti686-w64-mingw* and x86_64-w64-mingw* triplet.\n+\t* config/i386/mingw-w64.h: New mingw-w64 specific header.\n+\t(CPP_SPEC): Redefine for allowing -municode option.\n+\t(STARTFILE_SPEC): Likewise.\n+\t* config/i386/t-mingw-w64: New.\n+\t* config/i386/mingw-w64.opt: New.\n+\t(municode): Add new target option.\n+\t* doc/invoke.texi (municode): Add documentation for new option.\n+\n 2009-04-21  Ian Lance Taylor  <iant@google.com>\n \n \t* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin):"}, {"sha": "d4d3889f4f4f95702e90f3fed8acadbeb85c79e6", "filename": "gcc/config.gcc", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/350916301fe8afa02464e3ca84c70015ce2cf74b/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/350916301fe8afa02464e3ca84c70015ce2cf74b/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=350916301fe8afa02464e3ca84c70015ce2cf74b", "patch": "@@ -1251,17 +1251,35 @@ i[34567]86-*-pe | i[34567]86-*-cygwin*)\n \tuse_gcc_stdint=wrap\n \t;;\n i[34567]86-*-mingw* | x86_64-*-mingw*)\n-\ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h dbxcoff.h i386/cygming.h i386/mingw32.h i386/mingw-stdint.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h dbxcoff.h i386/cygming.h i386/mingw32.h\"\n \txm_file=i386/xm-mingw32.h\n+\t# This makes the logic if mingw's or the w64 feature set has to be used\n+\tcase ${target} in\n+\t\t*-w64-*)\n+\t\t\ttm_file=\"${tm_file} i386/mingw-w64.h\"\n+\t\t\ttmake_file=\"${tmake_file} i386/t-mingw-w64\"\n+\t\t\t;;\n+\t\t*)\n+\t\t\ttmake_file=\"${tmake_file} i386/t-mingw32\"\n+\t\t\t;;\n+\tesac\n+\ttm_file=\"${tm_file} i386/mingw-stdint.h\"\n \t# This has to match the logic for DWARF2_UNWIND_INFO in gcc/config/i386/cygming.h\n \tif test x$sjlj = x0; then\n \t\ttmake_eh_file=\"i386/t-dw2-eh\"\n \telse\n \t\ttmake_eh_file=\"i386/t-sjlj-eh\"\n \tfi\n-\ttmake_file=\"${tmake_file} ${tmake_eh_file} i386/t-cygming i386/t-mingw32\"\n+\ttmake_file=\"${tmake_file} ${tmake_eh_file} i386/t-cygming\"\n \ttarget_gtfiles=\"\\$(srcdir)/config/i386/winnt.c\"\n \textra_options=\"${extra_options} i386/cygming.opt i386/mingw.opt\"\n+\tcase ${target} in\n+\t\t*-w64-*)\n+\t\t\textra_options=\"${extra_options} i386/mingw-w64.opt\"\n+\t\t\t;;\n+\t\t*)\n+\t\t\t;;\n+\tesac\n \textra_objs=\"winnt.o winnt-stubs.o\"\n \tc_target_objs=\"${c_target_objs} msformat-c.o\"\n \tcxx_target_objs=\"${cxx_target_objs} winnt-cxx.o msformat-c.o\""}, {"sha": "9a2b32e04eb2b09081a39a97071fa0c335c49236", "filename": "gcc/config/i386/mingw-w64.h", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/350916301fe8afa02464e3ca84c70015ce2cf74b/gcc%2Fconfig%2Fi386%2Fmingw-w64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/350916301fe8afa02464e3ca84c70015ce2cf74b/gcc%2Fconfig%2Fi386%2Fmingw-w64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmingw-w64.h?ref=350916301fe8afa02464e3ca84c70015ce2cf74b", "patch": "@@ -0,0 +1,34 @@\n+/* Operating system specific defines to be used when targeting GCC for\n+   hosting on Windows 32/64 via mingw-w64 runtime, using GNU tools and\n+   the Windows API Library.\n+   Copyright (C) 2009,\n+   2009 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+/* Enable -municode feature.  */\n+\n+#undef CPP_SPEC\n+#define CPP_SPEC \"%{posix:-D_POSIX_SOURCE} %{mthreads:-D_MT} \\\n+  %{municode:-DUNICODE}\"\n+\n+#undef STARTFILE_SPEC\n+#define STARTFILE_SPEC \"%{shared|mdll:dllcrt2%O%s} \\\n+  %{!shared:%{!mdll:%{!municode:crt2%O%s}}} \\\n+  %{!shared:%{!mdll:%{municode:crt2u%O%s}}} \\\n+  %{pg:gcrt2%O%s} \\\n+  crtbegin.o%s\""}, {"sha": "965f4c0ce0a52727fb556a9f43042e2e3ba888e9", "filename": "gcc/config/i386/mingw-w64.opt", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/350916301fe8afa02464e3ca84c70015ce2cf74b/gcc%2Fconfig%2Fi386%2Fmingw-w64.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/350916301fe8afa02464e3ca84c70015ce2cf74b/gcc%2Fconfig%2Fi386%2Fmingw-w64.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmingw-w64.opt?ref=350916301fe8afa02464e3ca84c70015ce2cf74b", "patch": "@@ -0,0 +1,23 @@\n+; MinGW-w64-specific options.\n+\n+; Copyright (C) 2009 Free Software Foundation, Inc.\n+;\n+; This file is part of GCC.\n+;\n+; GCC is free software; you can redistribute it and/or modify it under\n+; the terms of the GNU General Public License as published by the Free\n+; Software Foundation; either version 3, or (at your option) any later\n+; version.\n+;\n+; GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+; WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+; FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+; for more details.\n+;\n+; You should have received a copy of the GNU General Public License\n+; along with GCC; see the file COPYING3.  If not see\n+; <http://www.gnu.org/licenses/>.\n+\n+municode\n+Target\n+Use unicode startup and define UNICODE macro"}, {"sha": "bfe15069c6806394c9492b8b0eb8525286d68d2a", "filename": "gcc/config/i386/t-mingw-w64", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/350916301fe8afa02464e3ca84c70015ce2cf74b/gcc%2Fconfig%2Fi386%2Ft-mingw-w64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/350916301fe8afa02464e3ca84c70015ce2cf74b/gcc%2Fconfig%2Fi386%2Ft-mingw-w64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-mingw-w64?ref=350916301fe8afa02464e3ca84c70015ce2cf74b", "patch": "@@ -0,0 +1,5 @@\n+# Match SYSTEM_INCLUDE_DIR\n+NATIVE_SYSTEM_HEADER_DIR = /mingw/include\n+\n+# MinGW-specific parts of LIB_SPEC\n+SHLIB_LC = -lmingw32 -lmingwex -lmoldname -lmsvcrt -luser32 -lkernel32 -ladvapi32 -lshell32"}, {"sha": "5d19e2a191335d6256af325015c440b9091dc185", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/350916301fe8afa02464e3ca84c70015ce2cf74b/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/350916301fe8afa02464e3ca84c70015ce2cf74b/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=350916301fe8afa02464e3ca84c70015ce2cf74b", "patch": "@@ -828,7 +828,7 @@ See i386 and x86-64 Options.\n \n @emph{i386 and x86-64 Windows Options}\n @gccoptlist{-mconsole -mcygwin -mno-cygwin -mdll\n--mnop-fun-dllimport -mthread -mwin32 -mwindows}\n+-mnop-fun-dllimport -mthread -municode -mwin32 -mwindows}\n \n @emph{Xstormy16 Options}\n @gccoptlist{-msim}\n@@ -15616,6 +15616,12 @@ specifies that the dllimport attribute should be ignored.\n This option is available for MinGW targets. It specifies\n that MinGW-specific thread support is to be used.\n \n+@item -municode\n+@opindex municode\n+This option is available for mingw-w64 targets.  It specifies\n+that the UNICODE macro is getting pre-defined and that the\n+unicode capable runtime startup code is choosen.\n+\n @item -mwin32\n @opindex mwin32\n This option is available for Cygwin and MinGW targets.  It"}]}