{"sha": "fa26da223666589dee005765740ed40ee290c22f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmEyNmRhMjIzNjY2NTg5ZGVlMDA1NzY1NzQwZWQ0MGVlMjkwYzIyZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-12-02T22:18:18Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-12-02T22:18:18Z"}, "message": "Allow running the testsuite in C++1z mode.\n\ngcc/cp/\n\t* Make-lang.in (check-c++1z, check-c++-all): New.\ngcc/testsuite/\n\t* lib/g++.exp: Handle --stds= option.\n\t* lib/g++-dg.exp (g++-dg-runtest): Use it.\n\nFrom-SVN: r231209", "tree": {"sha": "13af6a1d0567068242f4b871e5aca4fd35d2ab95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13af6a1d0567068242f4b871e5aca4fd35d2ab95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa26da223666589dee005765740ed40ee290c22f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa26da223666589dee005765740ed40ee290c22f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa26da223666589dee005765740ed40ee290c22f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa26da223666589dee005765740ed40ee290c22f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5df445a2a52cf954d3f124f5001ce4faaf01f042", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5df445a2a52cf954d3f124f5001ce4faaf01f042", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5df445a2a52cf954d3f124f5001ce4faaf01f042"}], "stats": {"total": 45, "additions": 40, "deletions": 5}, "files": [{"sha": "f7483c053f7d87e3594525803d0cfb2bbaffb355", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa26da223666589dee005765740ed40ee290c22f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa26da223666589dee005765740ed40ee290c22f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fa26da223666589dee005765740ed40ee290c22f", "patch": "@@ -1,3 +1,7 @@\n+2015-12-02  Jason Merrill  <jason@redhat.com>\n+\n+\t* Make-lang.in (check-c++1z, check-c++-all): New.\n+\n 2015-12-02  Markus Trippelsdorf  <markus@trippelsdorf.de>\n \n \tPR c++/67337"}, {"sha": "50a13590a0ddca84b3b1ff351adb8258377e7b5a", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa26da223666589dee005765740ed40ee290c22f/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa26da223666589dee005765740ed40ee290c22f/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=fa26da223666589dee005765740ed40ee290c22f", "patch": "@@ -145,9 +145,15 @@ c++.srcman: doc/g++.1\n # check targets.  However, our DejaGNU framework requires 'check-g++' as its\n # entry point.  We feed the former to the latter here.\n check-c++ : check-g++\n-# Run the testsute in C++0x mode.\n-check-c++0x:\n-\t@echo Normal 'make check' now runs the testsuite in C++11 mode as well as C++98.\n+\n+# Run the testsuite in C++1z mode.\n+check-c++1z:\n+\t$(MAKE) RUNTESTFLAGS=\"$(RUNTESTFLAGS) --stds=1z\" check-g++\n+\n+# Run the testsuite in all standard conformance levels.\n+check-c++-all:\n+\t$(MAKE) RUNTESTFLAGS=\"$(RUNTESTFLAGS) --stds=98,11,14,1z\" check-g++\n+\n # Run the testsuite with garbage collection at every opportunity.\n check-g++-strict-gc:\n \t$(MAKE) RUNTESTFLAGS=\"$(RUNTESTFLAGS) --extra_opts,--param,ggc-min-heapsize=0,--param,ggc-min-expand=0\" \\"}, {"sha": "299250b89aebe4fa70582100f27987fdfa52da71", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa26da223666589dee005765740ed40ee290c22f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa26da223666589dee005765740ed40ee290c22f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fa26da223666589dee005765740ed40ee290c22f", "patch": "@@ -1,3 +1,8 @@\n+2015-12-02  Jason Merrill  <jason@redhat.com>\n+\n+\t* lib/g++.exp: Handle --stds= option.\n+\t* lib/g++-dg.exp (g++-dg-runtest): Use it.\n+\n 2015-12-02  Tobias Burnus  <burnus@net-b.de>\n \t    Alessandro Fanfarillo <fanfarillo.gcc@gmail.com>\n "}, {"sha": "be63dea345538e3c8e6228a2fa19b34fbca5f143", "filename": "gcc/testsuite/lib/g++-dg.exp", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa26da223666589dee005765740ed40ee290c22f/gcc%2Ftestsuite%2Flib%2Fg%2B%2B-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa26da223666589dee005765740ed40ee290c22f/gcc%2Ftestsuite%2Flib%2Fg%2B%2B-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg%2B%2B-dg.exp?ref=fa26da223666589dee005765740ed40ee290c22f", "patch": "@@ -43,9 +43,20 @@ proc g++-dg-runtest { testcases flags default-extra-flags } {\n \t# if there's a dg-options line.\n \tif ![search_for $test \"-std=*++\"] {\n \t    if [search_for $test \"dg-options\"] {\n-\t\tset option_list { -std=gnu++98 -std=gnu++11 -std=gnu++14 }\n+\t\tset std_prefix \"-std=gnu++\"\n \t    } else {\n-\t\tset option_list { -std=c++98 -std=c++11 -std=c++14 }\n+\t\tset std_prefix \"-std=c++\"\n+\t    }\n+\n+\t    global gpp_std_list\n+\t    if { [llength $gpp_std_list] > 0 } {\n+\t\tset std_list $gpp_std_list\n+\t    } else {\n+\t\tset std_list { 98 11 14 }\n+\t    }\n+\t    set option_list { }\n+\t    foreach x $std_list {\n+\t\tlappend option_list \"${std_prefix}$x\"\n \t    }\n \t} else {\n \t    set option_list { \"\" }"}, {"sha": "0b99903dd70b4939d5f5ba20ae7809b1d6cf5c10", "filename": "gcc/testsuite/lib/g++.exp", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa26da223666589dee005765740ed40ee290c22f/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa26da223666589dee005765740ed40ee290c22f/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp?ref=fa26da223666589dee005765740ed40ee290c22f", "patch": "@@ -32,6 +32,7 @@ load_lib target-libpath.exp\n \n \n set gpp_compile_options \"\"\n+set gpp_std_list { }\n \n #\n # g++_version -- extract and print the version number of the compiler\n@@ -367,6 +368,14 @@ proc ${tool}_option_proc { option } {\n \t}\n \tverbose -log \"gpp_compile_options set to $gpp_compile_options\"\n \treturn 1\n+    } elseif [regexp \"^--stds=\" $option] {\n+\tglobal gpp_std_list\n+\tregsub \"^--stds=\" $option \"\" option\n+\tforeach x [split $option \",\"] {\n+\t    lappend gpp_std_list \"$x\"\n+\t}\n+\tverbose -log \"gpp_std_list set to $gpp_std_list\"\n+\treturn 1\n     } else {\n \treturn 0\n     }"}]}