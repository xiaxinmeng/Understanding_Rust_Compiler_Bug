{"sha": "387748de2fd017a990aaf617f24b8dad53856888", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzg3NzQ4ZGUyZmQwMTdhOTkwYWFmNjE3ZjI0YjhkYWQ1Mzg1Njg4OA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2011-10-15T10:32:33Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2011-10-15T10:32:33Z"}, "message": "re PR rtl-optimization/49941 (segmentation fault in redirect_jump_2)\n\n\tPR rtl-optimization/49941\n\t* jump.c (mark_jump_label_1): Set JUMP_LABEL for simple_return jumps.\n\n\t* rtl.h (set_return_jump_label): Declare.\n\t* function.c (set_return_jump_label): New function, extracted..\n\t(thread_prologue_and_epilogue_insns): ..from here.  Use it in\n\tanother instance to set return jump_label.\n\t* cfgrtl.c (force_nonfallthru_and_redirect): Use set_return_jump_label.\n\t* reorg.c (find_end_label): Likewise.\n\nFrom-SVN: r180027", "tree": {"sha": "cb30b59e8583f834cc2b7bda3848e3270cd9bcf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb30b59e8583f834cc2b7bda3848e3270cd9bcf1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/387748de2fd017a990aaf617f24b8dad53856888", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/387748de2fd017a990aaf617f24b8dad53856888", "html_url": "https://github.com/Rust-GCC/gccrs/commit/387748de2fd017a990aaf617f24b8dad53856888", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/387748de2fd017a990aaf617f24b8dad53856888/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c225ba500b4c34dde743798bf9ccb5dcef7af832", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c225ba500b4c34dde743798bf9ccb5dcef7af832", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c225ba500b4c34dde743798bf9ccb5dcef7af832"}], "stats": {"total": 46, "additions": 33, "deletions": 13}, "files": [{"sha": "960b79b03af95278714df59b89c09abb2121cb50", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/387748de2fd017a990aaf617f24b8dad53856888/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/387748de2fd017a990aaf617f24b8dad53856888/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=387748de2fd017a990aaf617f24b8dad53856888", "patch": "@@ -1,3 +1,15 @@\n+2011-10-15  Alan Modra  <amodra@gmail.com>\n+\n+\tPR rtl-optimization/49941\n+\t* jump.c (mark_jump_label_1): Set JUMP_LABEL for simple_return jumps.\n+\n+\t* rtl.h (set_return_jump_label): Declare.\n+\t* function.c (set_return_jump_label): New function, extracted..\n+\t(thread_prologue_and_epilogue_insns): ..from here.  Use it in\n+\tanother instance to set return jump_label.\n+\t* cfgrtl.c (force_nonfallthru_and_redirect): Use set_return_jump_label.\n+\t* reorg.c (find_end_label): Likewise.\n+\n 2011-10-14  David S. Miller  <davem@davemloft.net>\n \n \t* config/sparc/sol2.h: Protect -m{cpu,tune}=native handling"}, {"sha": "f06dbc83b1d952f14c7493b39e54e331d937c07f", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/387748de2fd017a990aaf617f24b8dad53856888/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/387748de2fd017a990aaf617f24b8dad53856888/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=387748de2fd017a990aaf617f24b8dad53856888", "patch": "@@ -1273,7 +1273,7 @@ force_nonfallthru_and_redirect (edge e, basic_block target, rtx jump_label)\n \t  gcc_unreachable ();\n #endif\n \t}\n-      JUMP_LABEL (BB_END (jump_block)) = jump_label;\n+      set_return_jump_label (BB_END (jump_block));\n     }\n   else\n     {"}, {"sha": "c3702fb3419fbfe1325decc611aa09f8c81c623f", "filename": "gcc/function.c", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/387748de2fd017a990aaf617f24b8dad53856888/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/387748de2fd017a990aaf617f24b8dad53856888/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=387748de2fd017a990aaf617f24b8dad53856888", "patch": "@@ -5527,6 +5527,20 @@ emit_return_into_block (bool simple_p, basic_block bb)\n }\n #endif\n \n+/* Set JUMP_LABEL for a return insn.  */\n+\n+void\n+set_return_jump_label (rtx returnjump)\n+{\n+  rtx pat = PATTERN (returnjump);\n+  if (GET_CODE (pat) == PARALLEL)\n+    pat = XVECEXP (pat, 0, 0);\n+  if (ANY_RETURN_P (pat))\n+    JUMP_LABEL (returnjump) = pat;\n+  else\n+    JUMP_LABEL (returnjump) = ret_rtx;\n+}\n+\n /* Return true if BB has any active insns.  */\n static bool\n bb_active_p (basic_block bb)\n@@ -6062,7 +6076,7 @@ thread_prologue_and_epilogue_insns (void)\n \t  emit_return_into_block (false, last_bb);\n \t  epilogue_end = BB_END (last_bb);\n \t  if (JUMP_P (epilogue_end))\n-\t    JUMP_LABEL (epilogue_end) = ret_rtx;\n+\t    set_return_jump_label (epilogue_end);\n \t  single_succ_edge (last_bb)->flags &= ~EDGE_FALLTHRU;\n \t  goto epilogue_done;\n \t}\n@@ -6127,15 +6141,7 @@ thread_prologue_and_epilogue_insns (void)\n       inserted = true;\n \n       if (JUMP_P (returnjump))\n-\t{\n-\t  rtx pat = PATTERN (returnjump);\n-\t  if (GET_CODE (pat) == PARALLEL)\n-\t    pat = XVECEXP (pat, 0, 0);\n-\t  if (ANY_RETURN_P (pat))\n-\t    JUMP_LABEL (returnjump) = pat;\n-\t  else\n-\t    JUMP_LABEL (returnjump) = ret_rtx;\n-\t}\n+\tset_return_jump_label (returnjump);\n     }\n   else\n #endif"}, {"sha": "f852f827729d48381cba6f2ca4bec85d5a0cac55", "filename": "gcc/jump.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/387748de2fd017a990aaf617f24b8dad53856888/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/387748de2fd017a990aaf617f24b8dad53856888/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=387748de2fd017a990aaf617f24b8dad53856888", "patch": "@@ -1086,6 +1086,7 @@ mark_jump_label_1 (rtx x, rtx insn, bool in_mem, bool is_target)\n       return;\n \n     case RETURN:\n+    case SIMPLE_RETURN:\n       if (is_target)\n \t{\n \t  gcc_assert (JUMP_LABEL (insn) == NULL || JUMP_LABEL (insn) == x);\n@@ -1408,7 +1409,7 @@ redirect_exp_1 (rtx *loc, rtx olabel, rtx nlabel, rtx insn)\n   int i;\n   const char *fmt;\n \n-      if ((code == LABEL_REF && XEXP (x, 0) == olabel)\n+  if ((code == LABEL_REF && XEXP (x, 0) == olabel)\n       || x == olabel)\n     {\n       x = redirect_target (nlabel);"}, {"sha": "f77a3a0f1d09d56fdff6c6427424f565205aacdf", "filename": "gcc/reorg.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/387748de2fd017a990aaf617f24b8dad53856888/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/387748de2fd017a990aaf617f24b8dad53856888/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=387748de2fd017a990aaf617f24b8dad53856888", "patch": "@@ -467,7 +467,7 @@ find_end_label (rtx kind)\n \t      /* The return we make may have delay slots too.  */\n \t      rtx insn = gen_return ();\n \t      insn = emit_jump_insn (insn);\n-\t      JUMP_LABEL (insn) = ret_rtx;\n+\t      set_return_jump_label (insn);\n \t      emit_barrier ();\n \t      if (num_delay_slots (insn) > 0)\n \t\tobstack_ptr_grow (&unfilled_slots_obstack, insn);"}, {"sha": "f13485e200a2bbcf2b5c50ff646fc99df0a6b678", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/387748de2fd017a990aaf617f24b8dad53856888/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/387748de2fd017a990aaf617f24b8dad53856888/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=387748de2fd017a990aaf617f24b8dad53856888", "patch": "@@ -2503,6 +2503,7 @@ extern int sibcall_epilogue_contains (const_rtx);\n extern void mark_temp_addr_taken (rtx);\n extern void update_temp_slot_address (rtx, rtx);\n extern void maybe_copy_prologue_epilogue_insn (rtx, rtx);\n+extern void set_return_jump_label (rtx);\n \n /* In stmt.c */\n extern void expand_null_return (void);"}]}