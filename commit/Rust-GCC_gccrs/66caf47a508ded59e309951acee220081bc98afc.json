{"sha": "66caf47a508ded59e309951acee220081bc98afc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZjYWY0N2E1MDhkZWQ1OWUzMDk5NTFhY2VlMjIwMDgxYmM5OGFmYw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-10-23T15:31:26Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-10-23T15:31:26Z"}, "message": "re PR libstdc++/58850 (Conversion error in chrono)\n\n2013-10-23  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/58850\n\t* include/std/chrono (minutes, hours): Change typedefs to uniformly\n\tuse int64_t.\n\t* testsuite/20_util/duration/arithmetic/58850.cc: New.\n\nFrom-SVN: r203978", "tree": {"sha": "a590835fba7df7b9a72bd5aaef0e1b088b5922da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a590835fba7df7b9a72bd5aaef0e1b088b5922da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66caf47a508ded59e309951acee220081bc98afc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66caf47a508ded59e309951acee220081bc98afc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66caf47a508ded59e309951acee220081bc98afc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66caf47a508ded59e309951acee220081bc98afc/comments", "author": null, "committer": null, "parents": [{"sha": "021b04102ba25a17a164c47678b12cee235f35e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/021b04102ba25a17a164c47678b12cee235f35e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/021b04102ba25a17a164c47678b12cee235f35e9"}], "stats": {"total": 61, "additions": 55, "deletions": 6}, "files": [{"sha": "e5c07bc59a02fcb9592601a3009f86fa6b7bfc03", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66caf47a508ded59e309951acee220081bc98afc/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66caf47a508ded59e309951acee220081bc98afc/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=66caf47a508ded59e309951acee220081bc98afc", "patch": "@@ -1,3 +1,10 @@\n+2013-10-23  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/58850\n+\t* include/std/chrono (minutes, hours): Change typedefs to uniformly\n+\tuse int64_t.\n+\t* testsuite/20_util/duration/arithmetic/58850.cc: New.\n+\n 2013-10-23  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/decimal/pr58815.cc: Fix thinko."}, {"sha": "b4ccca985ef99771c085495f93366c4378b2912c", "filename": "libstdc++-v3/include/std/chrono", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66caf47a508ded59e309951acee220081bc98afc/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fchrono", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66caf47a508ded59e309951acee220081bc98afc/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fchrono", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fchrono?ref=66caf47a508ded59e309951acee220081bc98afc", "patch": "@@ -524,22 +524,22 @@ _GLIBCXX_END_NAMESPACE_VERSION\n       { return !(__lhs < __rhs); }\n \n     /// nanoseconds\n-    typedef duration<int64_t, nano> \tnanoseconds;\n+    typedef duration<int64_t, nano> \t    nanoseconds;\n \n     /// microseconds\n-    typedef duration<int64_t, micro> \tmicroseconds;\n+    typedef duration<int64_t, micro> \t    microseconds;\n \n     /// milliseconds\n-    typedef duration<int64_t, milli> \tmilliseconds;\n+    typedef duration<int64_t, milli> \t    milliseconds;\n \n     /// seconds\n-    typedef duration<int64_t> \t\tseconds;\n+    typedef duration<int64_t> \t\t    seconds;\n \n     /// minutes\n-    typedef duration<int, ratio< 60>> \tminutes;\n+    typedef duration<int64_t, ratio< 60>>   minutes;\n \n     /// hours\n-    typedef duration<int, ratio<3600>> \thours;\n+    typedef duration<int64_t, ratio<3600>>  hours;\n \n     /// time_point\n     template<typename _Clock, typename _Dur>"}, {"sha": "2a208b19d930d2e54c317d0ca6ae60c264a0cd6b", "filename": "libstdc++-v3/testsuite/20_util/duration/arithmetic/58850.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66caf47a508ded59e309951acee220081bc98afc/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Farithmetic%2F58850.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66caf47a508ded59e309951acee220081bc98afc/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Farithmetic%2F58850.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Farithmetic%2F58850.cc?ref=66caf47a508ded59e309951acee220081bc98afc", "patch": "@@ -0,0 +1,42 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-require-cstdint \"\" }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <chrono>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std::chrono;\n+\n+  typedef duration<std::int64_t, std::ratio<36 * 24 * 36525>> Years;\n+  Years galactic_empire_age( 12067 );\n+\n+  VERIFY( duration_cast<seconds>( galactic_empire_age ).count()\n+\t  == duration_cast<minutes>( galactic_empire_age ).count() * 60 );\n+  VERIFY( duration_cast<minutes>( galactic_empire_age ).count()\n+\t  == duration_cast<seconds>( galactic_empire_age ).count() / 60 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}