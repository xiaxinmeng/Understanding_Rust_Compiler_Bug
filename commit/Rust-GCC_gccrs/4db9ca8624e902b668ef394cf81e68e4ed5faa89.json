{"sha": "4db9ca8624e902b668ef394cf81e68e4ed5faa89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRiOWNhODYyNGU5MDJiNjY4ZWYzOTRjZjgxZTY4ZTRlZDVmYWE4OQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2018-06-12T20:20:11Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2018-06-12T20:20:11Z"}, "message": "Core issue 1331 - const mismatch with defaulted copy constructor\n\n\tCore issue 1331 - const mismatch with defaulted copy constructor\n\t* class.c (check_bases_and_members): When checking a defaulted\n\tfunction, mark it as deleted rather than giving an error.\n\n\t* g++.dg/cpp0x/defaulted15.C (struct F): Remove dg-error.\n\t* g++.dg/cpp0x/defaulted52.C: New test.\n\t* g++.dg/cpp0x/defaulted53.C: New test.\n\t* g++.dg/cpp0x/defaulted54.C: New test.\n\t* g++.dg/cpp0x/defaulted55.C: New test.\n\t* g++.dg/cpp0x/defaulted56.C: New test.\n\t* g++.dg/cpp0x/defaulted57.C: New test.\n\t* g++.dg/cpp0x/defaulted58.C: New test.\n\t* g++.dg/cpp0x/defaulted59.C: New test.\n\t* g++.dg/cpp0x/defaulted60.C: New test.\n\nFrom-SVN: r261526", "tree": {"sha": "4ac1af0c3684d81cd27dc2dee67e25f84978fc90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ac1af0c3684d81cd27dc2dee67e25f84978fc90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4db9ca8624e902b668ef394cf81e68e4ed5faa89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4db9ca8624e902b668ef394cf81e68e4ed5faa89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4db9ca8624e902b668ef394cf81e68e4ed5faa89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4db9ca8624e902b668ef394cf81e68e4ed5faa89/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "84a9d3b6c1f1de2aa6b5bef700f51b2e7c0bc600", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84a9d3b6c1f1de2aa6b5bef700f51b2e7c0bc600", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84a9d3b6c1f1de2aa6b5bef700f51b2e7c0bc600"}], "stats": {"total": 223, "additions": 218, "deletions": 5}, "files": [{"sha": "726fd7f6c437730d2bc4fd1a1607b6887261d80c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4db9ca8624e902b668ef394cf81e68e4ed5faa89/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4db9ca8624e902b668ef394cf81e68e4ed5faa89/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4db9ca8624e902b668ef394cf81e68e4ed5faa89", "patch": "@@ -1,3 +1,9 @@\n+2018-06-12  Marek Polacek  <polacek@redhat.com>\n+\n+\tCore issue 1331 - const mismatch with defaulted copy constructor\n+\t* class.c (check_bases_and_members): When checking a defaulted\n+\tfunction, mark it as deleted rather than giving an error.\n+\n 2018-06-11  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/85792 -Wctor-dtor-privacy and inherited constructor."}, {"sha": "b6e78c6377d1fd2482d6970cd0699241501fb74a", "filename": "gcc/cp/class.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4db9ca8624e902b668ef394cf81e68e4ed5faa89/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4db9ca8624e902b668ef394cf81e68e4ed5faa89/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=4db9ca8624e902b668ef394cf81e68e4ed5faa89", "patch": "@@ -5660,9 +5660,9 @@ check_bases_and_members (tree t)\n \n \t    if (fn_const_p && !imp_const_p)\n \t      /* If the function is defaulted outside the class, we just\n-\t\t give the synthesis error.  */\n-\t      error (\"%q+D declared to take const reference, but implicit \"\n-\t\t     \"declaration would take non-const\", fn);\n+\t\t give the synthesis error.  Core Issue #1331 says this is\n+\t\t no longer ill-formed, it is defined as deleted instead.  */\n+\t      DECL_DELETED_FN (fn) = true;\n \t  }\n \tdefaulted_late_check (fn);\n       }"}, {"sha": "e69ab64178c782d7c510576fa31202d607e9e34e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4db9ca8624e902b668ef394cf81e68e4ed5faa89/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4db9ca8624e902b668ef394cf81e68e4ed5faa89/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4db9ca8624e902b668ef394cf81e68e4ed5faa89", "patch": "@@ -1,3 +1,17 @@\n+2018-06-12  Marek Polacek  <polacek@redhat.com>\n+\n+\tCore issue 1331 - const mismatch with defaulted copy constructor\n+\t* g++.dg/cpp0x/defaulted15.C (struct F): Remove dg-error.\n+\t* g++.dg/cpp0x/defaulted52.C: New test.\n+\t* g++.dg/cpp0x/defaulted53.C: New test.\n+\t* g++.dg/cpp0x/defaulted54.C: New test.\n+\t* g++.dg/cpp0x/defaulted55.C: New test.\n+\t* g++.dg/cpp0x/defaulted56.C: New test.\n+\t* g++.dg/cpp0x/defaulted57.C: New test.\n+\t* g++.dg/cpp0x/defaulted58.C: New test.\n+\t* g++.dg/cpp0x/defaulted59.C: New test.\n+\t* g++.dg/cpp0x/defaulted60.C: New test.\n+\n 2018-06-12  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR other/69968"}, {"sha": "1e0b3545840dcf4bd2fd58e5ba3d3f1d2306da21", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted15.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4db9ca8624e902b668ef394cf81e68e4ed5faa89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4db9ca8624e902b668ef394cf81e68e4ed5faa89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted15.C?ref=4db9ca8624e902b668ef394cf81e68e4ed5faa89", "patch": "@@ -48,8 +48,7 @@ struct F\n \n struct G: public F\n {\n-  // Can't be const because F copy ctor isn't.\n-  G(const G&) = default;\t// { dg-error \"const\" }\n+  G(const G&) = default;\n };\n \n struct H"}, {"sha": "c617230b493a6185ace89bf6e2a6a4060039f2ca", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted52.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4db9ca8624e902b668ef394cf81e68e4ed5faa89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted52.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4db9ca8624e902b668ef394cf81e68e4ed5faa89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted52.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted52.C?ref=4db9ca8624e902b668ef394cf81e68e4ed5faa89", "patch": "@@ -0,0 +1,20 @@\n+// Core Issue #1331 (const mismatch with defaulted copy constructor)\n+// { dg-do compile { target c++11 } }\n+\n+struct M\n+{\n+  M();\n+  // So that W wouldn't have had \"const W&\" copy ctor if it were\n+  // implicitly declared.\n+  M(M&);\n+};\n+\n+template<typename T> struct W\n+{\n+  W();\n+  // This should now compile and be =deleted.\n+  W(const W&) = default;\n+  T t;\n+};\n+\n+W<M> w;"}, {"sha": "8147e7e2ad11c565bf354c7c3e95c68260ad290e", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted53.C", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4db9ca8624e902b668ef394cf81e68e4ed5faa89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted53.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4db9ca8624e902b668ef394cf81e68e4ed5faa89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted53.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted53.C?ref=4db9ca8624e902b668ef394cf81e68e4ed5faa89", "patch": "@@ -0,0 +1,35 @@\n+// Core Issue #1331 (const mismatch with defaulted copy constructor)\n+// { dg-do compile { target c++11 } }\n+\n+struct M\n+{\n+  M& operator=(M&);\n+};\n+\n+struct R\n+{\n+  R& operator=(R&) = default;\n+  M m;\n+};\n+\n+struct S\n+{\n+  S& operator=(const S&) = default;\n+  M m;\n+};\n+\n+struct T\n+{\n+  // If F is an assignment operator, and the return type of T1\n+  // differs from the return type of T2 the program is ill-formed.\n+  T operator=(T&) = default; // { dg-error \"defaulted\" }\n+  M m;\n+};\n+\n+struct U\n+{\n+  // If F is an assignment operator, and T1's parameter type is\n+  // not a reference, the program is ill-formed.\n+  U& operator=(U) = default; // { dg-error \"defaulted\" }\n+  M m;\n+};"}, {"sha": "f8ddc4e47ceca1cf29c81543aab584df8aa50e53", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted54.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4db9ca8624e902b668ef394cf81e68e4ed5faa89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted54.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4db9ca8624e902b668ef394cf81e68e4ed5faa89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted54.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted54.C?ref=4db9ca8624e902b668ef394cf81e68e4ed5faa89", "patch": "@@ -0,0 +1,18 @@\n+// Core Issue #1331 (const mismatch with defaulted copy constructor)\n+// { dg-do compile { target c++11 } }\n+\n+struct M\n+{\n+  M();\n+  M(M&);\n+};\n+\n+template<typename T> struct W\n+{\n+  W();\n+  W(const W&) = default; // { dg-error \"binding\" }\n+  T t;\n+};\n+\n+W<M> w;\n+W<M> w2 = w; // { dg-error \"use of deleted function\" }"}, {"sha": "04cfc17200060f56c3afd198efc2592c8b1c9173", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted55.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4db9ca8624e902b668ef394cf81e68e4ed5faa89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted55.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4db9ca8624e902b668ef394cf81e68e4ed5faa89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted55.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted55.C?ref=4db9ca8624e902b668ef394cf81e68e4ed5faa89", "patch": "@@ -0,0 +1,19 @@\n+// Core Issue #1331 (const mismatch with defaulted copy constructor)\n+// { dg-do compile { target c++11 } }\n+\n+struct M\n+{\n+  M();\n+  M(M&);\n+};\n+\n+template<typename T> struct W\n+{\n+  W();\n+  W(W&) = default;\n+  // T1 and T2 may have differing ref-qualifiers (copy assign op).\n+  constexpr W& operator=(const W&) && = default; // { dg-error \"defaulted\" \"\" { target c++11_down } }\n+  T t;\n+};\n+\n+W<M> w;"}, {"sha": "e7ce12c556672c55252d1f6fe91ea8814ab53636", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted56.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4db9ca8624e902b668ef394cf81e68e4ed5faa89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted56.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4db9ca8624e902b668ef394cf81e68e4ed5faa89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted56.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted56.C?ref=4db9ca8624e902b668ef394cf81e68e4ed5faa89", "patch": "@@ -0,0 +1,25 @@\n+// Core Issue #1331 (const mismatch with defaulted copy constructor)\n+// { dg-do compile { target c++11 } }\n+\n+// If T2 (what would be the implicit declaration) has a parameter of\n+// type const C&, the corresponding parameter of T1 may be of type C&.\n+\n+struct S\n+{\n+  constexpr S(S &) = default;\n+};\n+\n+struct T\n+{\n+  constexpr T(volatile T &) = default; // { dg-error \"defaulted\" }\n+};\n+\n+struct U\n+{\n+  constexpr U(const volatile U &) = default; // { dg-error \"defaulted\" }\n+};\n+\n+struct V\n+{\n+  constexpr V(const V &) = default;\n+};"}, {"sha": "37fb7dd6e1d93fe7305543c2e649f214bfacd0ea", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted57.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4db9ca8624e902b668ef394cf81e68e4ed5faa89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted57.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4db9ca8624e902b668ef394cf81e68e4ed5faa89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted57.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted57.C?ref=4db9ca8624e902b668ef394cf81e68e4ed5faa89", "patch": "@@ -0,0 +1,25 @@\n+// Core Issue #1331 (const mismatch with defaulted copy constructor)\n+// { dg-do compile { target c++11 } }\n+\n+// If T2 (what would be the implicit declaration) has a parameter of\n+// type const C&, the corresponding parameter of T1 may be of type C&.\n+\n+struct S\n+{\n+  S& operator=(S &) = default;\n+};\n+\n+struct T\n+{\n+  T& operator=(volatile T &) = default; // { dg-error \"defaulted\" }\n+};\n+\n+struct U\n+{\n+  U& operator=(const volatile U &) = default; // { dg-error \"defaulted\" }\n+};\n+\n+struct V\n+{\n+  V& operator=(const V &) = default;\n+};"}, {"sha": "920a4ad0c6d282fd37c697ff6242217b580d159c", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted58.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4db9ca8624e902b668ef394cf81e68e4ed5faa89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted58.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4db9ca8624e902b668ef394cf81e68e4ed5faa89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted58.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted58.C?ref=4db9ca8624e902b668ef394cf81e68e4ed5faa89", "patch": "@@ -0,0 +1,22 @@\n+// Core Issue #1331 (const mismatch with defaulted copy constructor)\n+// { dg-do compile { target c++11 } }\n+\n+struct M\n+{\n+  M() = default;\n+  M& operator=(M&);\n+};\n+\n+template<typename T> struct W\n+{\n+  W() = default;\n+  W& operator=(const W&) = default; // { dg-error \"binding\" }\n+  T t;\n+};\n+\n+int\n+main ()\n+{\n+  W<M> w1, w2;\n+  w1 = w2; // { dg-error \"use of deleted function\" }\n+}"}, {"sha": "4f871d7f5b16bbe898c46a3189f9637d8a0c4b4a", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted59.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4db9ca8624e902b668ef394cf81e68e4ed5faa89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted59.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4db9ca8624e902b668ef394cf81e68e4ed5faa89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted59.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted59.C?ref=4db9ca8624e902b668ef394cf81e68e4ed5faa89", "patch": "@@ -0,0 +1,12 @@\n+// Core Issue #1331 (const mismatch with defaulted copy constructor)\n+// { dg-do compile { target c++11 } }\n+\n+struct M\n+{\n+  M(M&) = default;\n+};\n+\n+struct W : public M\n+{\n+  W(const W&) = default;\n+};"}, {"sha": "ad025236ccefc282db1c6b97307a033906aa3496", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted60.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4db9ca8624e902b668ef394cf81e68e4ed5faa89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted60.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4db9ca8624e902b668ef394cf81e68e4ed5faa89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted60.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted60.C?ref=4db9ca8624e902b668ef394cf81e68e4ed5faa89", "patch": "@@ -0,0 +1,18 @@\n+// Core Issue #1331 (const mismatch with defaulted copy constructor)\n+// { dg-do compile { target c++11 } }\n+\n+struct M\n+{\n+  M(M&);\n+};\n+\n+struct W\n+{\n+  W();\n+  W(const W&);\n+  M m;\n+};\n+\n+// Not first declaration.\n+W::W(const W&) = default; // { dg-error \"binding\" }\n+W w;"}]}