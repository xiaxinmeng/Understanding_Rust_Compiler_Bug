{"sha": "75ee800b5eb8f5007c0a7de67d60dc8365639757", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVlZTgwMGI1ZWI4ZjUwMDdjMGE3ZGU2N2Q2MGRjODM2NTYzOTc1Nw==", "commit": {"author": {"name": "Per Bothner", "email": "pbothner@apple.com", "date": "2003-08-28T00:21:34Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2003-08-28T00:21:34Z"}, "message": "cpperror.c (print_location): Don't check for !pfile->buffer.\n\n\n\t* cpperror.c (print_location):  Don't check for !pfile->buffer.  That\n\ttest fails following my 08-21 change, and it seems unnecessary anyway.\n\t(cpp_error):  Likewise.\n\nFrom-SVN: r70874", "tree": {"sha": "bf6a82116a244cde8aac74e71f5f085e22d8eaac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf6a82116a244cde8aac74e71f5f085e22d8eaac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75ee800b5eb8f5007c0a7de67d60dc8365639757", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75ee800b5eb8f5007c0a7de67d60dc8365639757", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75ee800b5eb8f5007c0a7de67d60dc8365639757", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75ee800b5eb8f5007c0a7de67d60dc8365639757/comments", "author": null, "committer": null, "parents": [{"sha": "a66e04e38c6c2236d8b94135a57f851fcc0a43b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a66e04e38c6c2236d8b94135a57f851fcc0a43b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a66e04e38c6c2236d8b94135a57f851fcc0a43b3"}], "stats": {"total": 33, "additions": 17, "deletions": 16}, "files": [{"sha": "7d7193ee9421070f16c0adf884517d035541b08c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ee800b5eb8f5007c0a7de67d60dc8365639757/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ee800b5eb8f5007c0a7de67d60dc8365639757/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=75ee800b5eb8f5007c0a7de67d60dc8365639757", "patch": "@@ -1,3 +1,9 @@\n+2003-08-27  Per Bothner  <pbothner@apple.com>\n+\n+\t* cpperror.c (print_location):  Don't check for !pfile->buffer.  That\n+\ttest fails following my 08-21 change, and it seems unnecessary anyway.\n+\t(cpp_error):  Likewise.\n+\n 2003-08-27  Jason Merrill  <jason@redhat.com>\n \n \t* real.c (do_multiply): Initialize with memset.\n@@ -755,7 +761,7 @@ Wed Aug 20 12:08:55 CEST 2003  Jan Hubicka  <jh@suse.cz>\n \t* config/s390/s390.h: Prefix #include of s390/fixdfdi.h\n \t[under IN_LIBGCC2] with config/.\n \n-2003-08-21  Per Bothner  <bothner@pbothner.com>\n+2003-08-21  Per Bothner  <pbothner@apple.com>\n \n \t* cppfiles.c (stack_file):  Correctly pass return_at_eof parameter\n \tto cpp_push_buffer."}, {"sha": "4926cb24ac54abbb3ff1b2fc3aa92ef60cf7a9d3", "filename": "gcc/cpperror.c", "status": "modified", "additions": 10, "deletions": 15, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ee800b5eb8f5007c0a7de67d60dc8365639757/gcc%2Fcpperror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ee800b5eb8f5007c0a7de67d60dc8365639757/gcc%2Fcpperror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpperror.c?ref=75ee800b5eb8f5007c0a7de67d60dc8365639757", "patch": "@@ -38,7 +38,7 @@ static void print_location (cpp_reader *, fileline, unsigned int);\n static void\n print_location (cpp_reader *pfile, fileline line, unsigned int col)\n {\n-  if (!pfile->buffer || line == 0)\n+  if (line == 0)\n     fprintf (stderr, \"%s: \", progname);\n   else\n     {\n@@ -131,24 +131,19 @@ cpp_error (cpp_reader * pfile, int level, const char *msgid, ...)\n   \n   va_start (ap, msgid);\n \n-  if (pfile->buffer)\n+  if (CPP_OPTION (pfile, traditional))\n     {\n-      if (CPP_OPTION (pfile, traditional))\n-\t{\n-\t  if (pfile->state.in_directive)\n-\t    line = pfile->directive_line;\n-\t  else\n-\t    line = pfile->line;\n-\t  column = 0;\n-\t}\n+      if (pfile->state.in_directive)\n+\tline = pfile->directive_line;\n       else\n-\t{\n-\t  line = pfile->cur_token[-1].line;\n-\t  column = pfile->cur_token[-1].col;\n-\t}\n+\tline = pfile->line;\n+      column = 0;\n     }\n   else\n-    line = column = 0;\n+    {\n+      line = pfile->cur_token[-1].line;\n+      column = pfile->cur_token[-1].col;\n+    }\n \n   if (_cpp_begin_message (pfile, level, line, column))\n     v_message (msgid, ap);"}]}