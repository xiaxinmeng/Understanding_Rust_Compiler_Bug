{"sha": "b0d7135584eb90c1d4de57d754c8963b1703fcc6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBkNzEzNTU4NGViOTBjMWQ0ZGU1N2Q3NTRjODk2M2IxNzAzZmNjNg==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2012-05-15T12:09:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-05-15T12:09:44Z"}, "message": "exp_ch4.adb (Insert_Dereference_Action): Reimplemented.\n\n2012-05-15  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch4.adb (Insert_Dereference_Action): Reimplemented. The\n\troutine performs address and size adjustments for dereferences\n\tof heap-allocated controlled objects. This manipulation is needed\n\tin order to restore the original state of the memory at the time\n\tit was allocated by the finalization machinery.\n\t* rtsfind.ads: Add RE_Adjust_Controlled_Dereference to tables\n\tRE_Id and RE_Unit_Table.\n\t* sinfo.adb (Has_Dereference_Action): New routine.\n\t(Set_Has_Dereference_Action): New routine.\n\t* sinfo.ads: Add new semantic flag Has_Dereference_Action along\n\tits association in nodes.\n\t(Has_Dereference_Action): New routine and pragma Inline.\n\t(Set_Has_Dereference_Action): New routine and pragma Inline.\n\t* s-stposu.ads, s-stposu.adb (Adjust_Controlled_Dereference): New\n\troutine.\n\nFrom-SVN: r187530", "tree": {"sha": "e54aec67d2825cbc15550a9abbb2f2b48bcfcc7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e54aec67d2825cbc15550a9abbb2f2b48bcfcc7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0d7135584eb90c1d4de57d754c8963b1703fcc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0d7135584eb90c1d4de57d754c8963b1703fcc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0d7135584eb90c1d4de57d754c8963b1703fcc6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0d7135584eb90c1d4de57d754c8963b1703fcc6/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5b5b27adff45664299c19f4666e078f4acecfdf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b5b27adff45664299c19f4666e078f4acecfdf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b5b27adff45664299c19f4666e078f4acecfdf7"}], "stats": {"total": 265, "additions": 226, "deletions": 39}, "files": [{"sha": "605539b7774ea6254cd8db2c4d77c86dcea0d278", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0d7135584eb90c1d4de57d754c8963b1703fcc6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0d7135584eb90c1d4de57d754c8963b1703fcc6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b0d7135584eb90c1d4de57d754c8963b1703fcc6", "patch": "@@ -1,3 +1,21 @@\n+2012-05-15  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch4.adb (Insert_Dereference_Action): Reimplemented. The\n+\troutine performs address and size adjustments for dereferences\n+\tof heap-allocated controlled objects. This manipulation is needed\n+\tin order to restore the original state of the memory at the time\n+\tit was allocated by the finalization machinery.\n+\t* rtsfind.ads: Add RE_Adjust_Controlled_Dereference to tables\n+\tRE_Id and RE_Unit_Table.\n+\t* sinfo.adb (Has_Dereference_Action): New routine.\n+\t(Set_Has_Dereference_Action): New routine.\n+\t* sinfo.ads: Add new semantic flag Has_Dereference_Action along\n+\tits association in nodes.\n+\t(Has_Dereference_Action): New routine and pragma Inline.\n+\t(Set_Has_Dereference_Action): New routine and pragma Inline.\n+\t* s-stposu.ads, s-stposu.adb (Adjust_Controlled_Dereference): New\n+\troutine.\n+\n 2012-05-15  Thomas Quinot  <quinot@adacore.com>\n \n \t* uintp.adb (Image_Uint): Use UI_Div_Rem to get quotient and"}, {"sha": "505d239f62d1e21d7461ccdd7685b83404585b02", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 147, "deletions": 37, "changes": 184, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0d7135584eb90c1d4de57d754c8963b1703fcc6/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0d7135584eb90c1d4de57d754c8963b1703fcc6/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=b0d7135584eb90c1d4de57d754c8963b1703fcc6", "patch": "@@ -10117,11 +10117,6 @@ package body Exp_Ch4 is\n    -------------------------------\n \n    procedure Insert_Dereference_Action (N : Node_Id) is\n-      Loc  : constant Source_Ptr := Sloc (N);\n-      Typ  : constant Entity_Id  := Etype (N);\n-      Pool : constant Entity_Id  := Associated_Storage_Pool (Typ);\n-      Pnod : constant Node_Id    := Parent (N);\n-\n       function Is_Checked_Storage_Pool (P : Entity_Id) return Boolean;\n       --  Return true if type of P is derived from Checked_Pool;\n \n@@ -10149,57 +10144,172 @@ package body Exp_Ch4 is\n          return False;\n       end Is_Checked_Storage_Pool;\n \n+      --  Local variables\n+\n+      Typ   : constant Entity_Id  := Etype (N);\n+      Desig : constant Entity_Id  := Available_View (Designated_Type (Typ));\n+      Loc   : constant Source_Ptr := Sloc (N);\n+      Pool  : constant Entity_Id  := Associated_Storage_Pool (Typ);\n+      Pnod  : constant Node_Id    := Parent (N);\n+\n+      Addr  : Entity_Id;\n+      Alig  : Entity_Id;\n+      Deref : Node_Id;\n+      Size  : Entity_Id;\n+      Stmt  : Node_Id;\n+\n    --  Start of processing for Insert_Dereference_Action\n \n    begin\n       pragma Assert (Nkind (Pnod) = N_Explicit_Dereference);\n \n-      if not (Is_Checked_Storage_Pool (Pool)\n-              and then Comes_From_Source (Original_Node (Pnod)))\n-      then\n+      --  Do not re-expand a dereference which has already been processed by\n+      --  this routine.\n+\n+      if Has_Dereference_Action (Pnod) then\n          return;\n-      end if;\n \n-      Insert_Action (N,\n-        Make_Procedure_Call_Statement (Loc,\n-          Name => New_Reference_To (\n-            Find_Prim_Op (Etype (Pool), Name_Dereference), Loc),\n+      --  Do not perform this type of expansion for internally-generated\n+      --  dereferences.\n \n-          Parameter_Associations => New_List (\n+      elsif not Comes_From_Source (Original_Node (Pnod)) then\n+         return;\n \n-            --  Pool\n+      --  A dereference action is only applicable to objects which have been\n+      --  allocated on a checked pool.\n \n-             New_Reference_To (Pool, Loc),\n+      elsif not Is_Checked_Storage_Pool (Pool) then\n+         return;\n+      end if;\n \n-            --  Storage_Address. We use the attribute Pool_Address, which uses\n-            --  the pointer itself to find the address of the object, and which\n-            --  handles unconstrained arrays properly by computing the address\n-            --  of the template. i.e. the correct address of the corresponding\n-            --  allocation.\n+      --  Extract the address of the dereferenced object. Generate:\n+      --    Addr : System.Address := <N>'Pool_Address;\n \n-             Make_Attribute_Reference (Loc,\n-               Prefix         => Duplicate_Subexpr_Move_Checks (N),\n-               Attribute_Name => Name_Pool_Address),\n+      Addr := Make_Temporary (Loc, 'P');\n \n-            --  Size_In_Storage_Elements\n+      Insert_Action (N,\n+        Make_Object_Declaration (Loc,\n+          Defining_Identifier => Addr,\n+          Object_Definition   =>\n+            New_Reference_To (RTE (RE_Address), Loc),\n+          Expression          =>\n+            Make_Attribute_Reference (Loc,\n+              Prefix         => Duplicate_Subexpr_Move_Checks (N),\n+              Attribute_Name => Name_Pool_Address)));\n+\n+      --  Calculate the size of the dereferenced object. Generate:\n+      --    Size : Storage_Count := <N>.all'Size / Storage_Unit;\n+\n+      Deref :=\n+        Make_Explicit_Dereference (Loc,\n+          Prefix => Duplicate_Subexpr_Move_Checks (N));\n+      Set_Has_Dereference_Action (Deref);\n \n-             Make_Op_Divide (Loc,\n-               Left_Opnd  =>\n+      Size := Make_Temporary (Loc, 'S');\n+\n+      Insert_Action (N,\n+        Make_Object_Declaration (Loc,\n+          Defining_Identifier => Size,\n+          Object_Definition   =>\n+            New_Reference_To (RTE (RE_Storage_Count), Loc),\n+          Expression          =>\n+            Make_Op_Divide (Loc,\n+              Left_Opnd   =>\n                 Make_Attribute_Reference (Loc,\n-                  Prefix         =>\n-                    Make_Explicit_Dereference (Loc,\n-                      Duplicate_Subexpr_Move_Checks (N)),\n+                  Prefix         => Deref,\n                   Attribute_Name => Name_Size),\n                Right_Opnd =>\n-                 Make_Integer_Literal (Loc, System_Storage_Unit)),\n+                 Make_Integer_Literal (Loc, System_Storage_Unit))));\n \n-            --  Alignment\n+      --  Calculate the alignment of the dereferenced object. Generate:\n+      --    Alig : constant Storage_Count := <N>.all'Alignment;\n \n-             Make_Attribute_Reference (Loc,\n-               Prefix         =>\n-                 Make_Explicit_Dereference (Loc,\n-                   Duplicate_Subexpr_Move_Checks (N)),\n-               Attribute_Name => Name_Alignment))));\n+      Deref :=\n+        Make_Explicit_Dereference (Loc,\n+          Prefix => Duplicate_Subexpr_Move_Checks (N));\n+      Set_Has_Dereference_Action (Deref);\n+\n+      Alig := Make_Temporary (Loc, 'A');\n+\n+      Insert_Action (N,\n+        Make_Object_Declaration (Loc,\n+          Defining_Identifier => Alig,\n+          Object_Definition   =>\n+            New_Reference_To (RTE (RE_Storage_Count), Loc),\n+          Expression          =>\n+            Make_Attribute_Reference (Loc,\n+              Prefix         => Deref,\n+              Attribute_Name => Name_Alignment)));\n+\n+      --  A dereference of a controlled object requires special processing. The\n+      --  finalization machinery requests additional space from the underlying\n+      --  pool to allocate and hide two pointers. As a result, a checked pool\n+      --  may mark the wrong memory as valid. Since checked pools do not have\n+      --  knowledge of hidden pointers, we have to bring the two pointers back\n+      --  in view in order to restore the original state of the object.\n+\n+      if Needs_Finalization (Desig) then\n+\n+         --  Adjust the address and size of the dereferenced object. Generate:\n+         --    Adjust_Controlled_Dereference (Addr, Size, Alig);\n+\n+         Stmt :=\n+           Make_Procedure_Call_Statement (Loc,\n+             Name                   =>\n+               New_Reference_To (RTE (RE_Adjust_Controlled_Dereference), Loc),\n+             Parameter_Associations => New_List (\n+               New_Reference_To (Addr, Loc),\n+               New_Reference_To (Size, Loc),\n+               New_Reference_To (Alig, Loc)));\n+\n+         --  Class-wide types complicate things because we cannot determine\n+         --  statically whether the actual object is truly controlled. We must\n+         --  generate a runtime check to detect this property. Generate:\n+         --\n+         --    if Needs_Finalization (<N>.all'Tag) then\n+         --       <Stmt>;\n+         --    end if;\n+\n+         if Is_Class_Wide_Type (Desig) then\n+            Deref :=\n+              Make_Explicit_Dereference (Loc,\n+                Prefix => Duplicate_Subexpr_Move_Checks (N));\n+            Set_Has_Dereference_Action (Deref);\n+\n+            Stmt :=\n+              Make_If_Statement (Loc,\n+                Condition       =>\n+                  Make_Function_Call (Loc,\n+                    Name                   =>\n+                      New_Reference_To (RTE (RE_Needs_Finalization), Loc),\n+                    Parameter_Associations => New_List (\n+                      Make_Attribute_Reference (Loc,\n+                        Prefix         => Deref,\n+                        Attribute_Name => Name_Tag))),\n+                Then_Statements => New_List (Stmt));\n+         end if;\n+\n+         Insert_Action (N, Stmt);\n+      end if;\n+\n+      --  Generate:\n+      --    Dereference (Pool, Addr, Size, Alig);\n+\n+      Insert_Action (N,\n+        Make_Procedure_Call_Statement (Loc,\n+          Name                   =>\n+            New_Reference_To\n+              (Find_Prim_Op (Etype (Pool), Name_Dereference), Loc),\n+          Parameter_Associations => New_List (\n+            New_Reference_To (Pool, Loc),\n+            New_Reference_To (Addr, Loc),\n+            New_Reference_To (Size, Loc),\n+            New_Reference_To (Alig, Loc))));\n+\n+      --  Mark the explicit dereference as processed to avoid potential\n+      --  infinite expansion.\n+\n+      Set_Has_Dereference_Action (Pnod);\n \n    exception\n       when RE_Not_Available =>"}, {"sha": "5b7345f3af40f9e4ce11f26cdcc99fcb3a46ffd7", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0d7135584eb90c1d4de57d754c8963b1703fcc6/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0d7135584eb90c1d4de57d754c8963b1703fcc6/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=b0d7135584eb90c1d4de57d754c8963b1703fcc6", "patch": "@@ -1401,6 +1401,7 @@ package Rtsfind is\n      RE_Root_Storage_Pool,               -- System.Storage_Pools\n      RE_Root_Storage_Pool_Ptr,           -- System.Storage_Pools\n \n+     RE_Adjust_Controlled_Dereference,   -- System.Storage_Pools.Subpools\n      RE_Allocate_Any_Controlled,         -- System.Storage_Pools.Subpools\n      RE_Deallocate_Any_Controlled,       -- System.Storage_Pools.Subpools\n      RE_Header_Size_With_Padding,        -- System.Storage_Pools.Subpools\n@@ -2624,6 +2625,7 @@ package Rtsfind is\n      RE_Root_Storage_Pool                => System_Storage_Pools,\n      RE_Root_Storage_Pool_Ptr            => System_Storage_Pools,\n \n+     RE_Adjust_Controlled_Dereference    => System_Storage_Pools_Subpools,\n      RE_Allocate_Any_Controlled          => System_Storage_Pools_Subpools,\n      RE_Deallocate_Any_Controlled        => System_Storage_Pools_Subpools,\n      RE_Header_Size_With_Padding         => System_Storage_Pools_Subpools,"}, {"sha": "282cb7d02f49b0b3682b5490f8136403cd870c70", "filename": "gcc/ada/s-stposu.adb", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0d7135584eb90c1d4de57d754c8963b1703fcc6/gcc%2Fada%2Fs-stposu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0d7135584eb90c1d4de57d754c8963b1703fcc6/gcc%2Fada%2Fs-stposu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stposu.adb?ref=b0d7135584eb90c1d4de57d754c8963b1703fcc6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2011, Free Software Foundation, Inc.            --\n+--          Copyright (C) 2011-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -56,6 +56,24 @@ package body System.Storage_Pools.Subpools is\n    procedure Detach (N : not null SP_Node_Ptr);\n    --  Unhook a subpool node from an arbitrary subpool list\n \n+   procedure Adjust_Controlled_Dereference\n+     (Addr         : in out System.Address;\n+      Storage_Size : in out System.Storage_Elements.Storage_Count;\n+      Alignment    : System.Storage_Elements.Storage_Count)\n+   is\n+      Header_And_Padding : constant Storage_Offset :=\n+                             Header_Size_With_Padding (Alignment);\n+   begin\n+      --  Expose the two hidden pointers by shifting the address from the\n+      --  start of the object to the FM_Node equivalent of the pointers.\n+\n+      Addr := Addr - Header_And_Padding;\n+\n+      --  Update the size of the object to include the two pointers\n+\n+      Storage_Size := Storage_Size + Header_And_Padding;\n+   end Adjust_Controlled_Dereference;\n+\n    --------------\n    -- Allocate --\n    --------------"}, {"sha": "40fe676bdaf38bc0de830c3d985a7d7e3568f80f", "filename": "gcc/ada/s-stposu.ads", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0d7135584eb90c1d4de57d754c8963b1703fcc6/gcc%2Fada%2Fs-stposu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0d7135584eb90c1d4de57d754c8963b1703fcc6/gcc%2Fada%2Fs-stposu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stposu.ads?ref=b0d7135584eb90c1d4de57d754c8963b1703fcc6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 2011, Free Software Foundation, Inc.            --\n+--          Copyright (C) 2011-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -249,6 +249,14 @@ private\n       --  This back pointer is used in subpool deallocation.\n    end record;\n \n+   procedure Adjust_Controlled_Dereference\n+     (Addr         : in out System.Address;\n+      Storage_Size : in out System.Storage_Elements.Storage_Count;\n+      Alignment    : System.Storage_Elements.Storage_Count);\n+   --  Given the memory attributes of a heap-allocated object that is known to\n+   --  be controlled, adjust the address and size of the object to include the\n+   --  two hidden pointers inserted by the finalization machinery.\n+\n    --  ??? Once Storage_Pools.Allocate_Any is removed, this should be renamed\n    --  to Allocate_Any.\n "}, {"sha": "e7ad52e6daf3952f96aedfbe8b52742d9056d63f", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0d7135584eb90c1d4de57d754c8963b1703fcc6/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0d7135584eb90c1d4de57d754c8963b1703fcc6/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=b0d7135584eb90c1d4de57d754c8963b1703fcc6", "patch": "@@ -1427,6 +1427,14 @@ package body Sinfo is\n       return Flag15 (N);\n    end Has_Created_Identifier;\n \n+   function Has_Dereference_Action\n+      (N : Node_Id) return Boolean is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Explicit_Dereference);\n+      return Flag13 (N);\n+   end Has_Dereference_Action;\n+\n    function Has_Dynamic_Length_Check\n       (N : Node_Id) return Boolean is\n    begin\n@@ -4515,6 +4523,14 @@ package body Sinfo is\n       Set_Flag15 (N, Val);\n    end Set_Has_Created_Identifier;\n \n+   procedure Set_Has_Dereference_Action\n+      (N : Node_Id; Val : Boolean := True) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Explicit_Dereference);\n+      Set_Flag13 (N, Val);\n+   end Set_Has_Dereference_Action;\n+\n    procedure Set_Has_Dynamic_Length_Check\n       (N : Node_Id; Val : Boolean := True) is\n    begin"}, {"sha": "4ece76261d277a625172d7d571ec4b78f846b033", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0d7135584eb90c1d4de57d754c8963b1703fcc6/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0d7135584eb90c1d4de57d754c8963b1703fcc6/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=b0d7135584eb90c1d4de57d754c8963b1703fcc6", "patch": "@@ -1111,6 +1111,12 @@ package Sinfo is\n    --    handler is deleted during optimization. For further details on why\n    --    this is required, see Exp_Ch11.Remove_Handler_Entries.\n \n+   --  Has_Dereference_Action (Flag13-Sem)\n+   --    This flag is present in N_Explicit_Dereference nodes. It is set to\n+   --    indicate that the expansion has aready produced a call to primitive\n+   --    Dereference of a System.Checked_Pools.Checked_Pool implementation.\n+   --    Such dereference actions are produced for debugging purposes.\n+\n    --  Has_Dynamic_Length_Check (Flag10-Sem)\n    --    This flag is present in all expression nodes. It is set to indicate\n    --    that one of the routines in unit Checks has generated a length check\n@@ -3192,6 +3198,7 @@ package Sinfo is\n       --  Prefix (Node3)\n       --  Actual_Designated_Subtype (Node4-Sem)\n       --  Atomic_Sync_Required (Flag14-Sem)\n+      --  Has_Dereference_Action (Flag13-Sem)\n       --  plus fields for expression\n \n       -------------------------------\n@@ -8524,6 +8531,9 @@ package Sinfo is\n    function Has_Created_Identifier\n      (N : Node_Id) return Boolean;    -- Flag15\n \n+   function Has_Dereference_Action\n+     (N : Node_Id) return Boolean;    -- Flag13\n+\n    function Has_Dynamic_Length_Check\n      (N : Node_Id) return Boolean;    -- Flag10\n \n@@ -9508,6 +9518,9 @@ package Sinfo is\n    procedure Set_Has_Created_Identifier\n      (N : Node_Id; Val : Boolean := True);    -- Flag15\n \n+   procedure Set_Has_Dereference_Action\n+     (N : Node_Id; Val : Boolean := True);    -- Flag13\n+\n    procedure Set_Has_Dynamic_Length_Check\n      (N : Node_Id; Val : Boolean := True);    -- Flag10\n \n@@ -11947,6 +11960,7 @@ package Sinfo is\n    pragma Inline (Handled_Statement_Sequence);\n    pragma Inline (Handler_List_Entry);\n    pragma Inline (Has_Created_Identifier);\n+   pragma Inline (Has_Dereference_Action);\n    pragma Inline (Has_Dynamic_Length_Check);\n    pragma Inline (Has_Dynamic_Range_Check);\n    pragma Inline (Has_Init_Expression);\n@@ -12272,6 +12286,7 @@ package Sinfo is\n    pragma Inline (Set_Handled_Statement_Sequence);\n    pragma Inline (Set_Handler_List_Entry);\n    pragma Inline (Set_Has_Created_Identifier);\n+   pragma Inline (Set_Has_Dereference_Action);\n    pragma Inline (Set_Has_Dynamic_Length_Check);\n    pragma Inline (Set_Has_Init_Expression);\n    pragma Inline (Set_Has_Local_Raise);"}]}