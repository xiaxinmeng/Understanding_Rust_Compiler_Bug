{"sha": "caecc0998a40500e7da4e45c0c553266cf35a27c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FlY2MwOTk4YTQwNTAwZTdkYTRlNDVjMGM1NTMyNjZjZjM1YTI3Yw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-06-16T21:52:45Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-06-16T21:52:45Z"}, "message": "regclass.c (globalize_reg): Update regs_invalidated_by_call.\n\n        * regclass.c (globalize_reg): Update regs_invalidated_by_call.\n\t* gcc.dg/20020616-1.c: New.\n\nFrom-SVN: r54681", "tree": {"sha": "c329815e33579ec2e8ff189f45704d298d298eec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c329815e33579ec2e8ff189f45704d298d298eec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/caecc0998a40500e7da4e45c0c553266cf35a27c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caecc0998a40500e7da4e45c0c553266cf35a27c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/caecc0998a40500e7da4e45c0c553266cf35a27c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caecc0998a40500e7da4e45c0c553266cf35a27c/comments", "author": null, "committer": null, "parents": [{"sha": "548ce8be4ab154b7d7f42ae8fe8552f9888021d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/548ce8be4ab154b7d7f42ae8fe8552f9888021d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/548ce8be4ab154b7d7f42ae8fe8552f9888021d0"}], "stats": {"total": 51, "additions": 43, "deletions": 8}, "files": [{"sha": "6ea3f3fc371030ea24348d91b30ef9e10d418ce7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caecc0998a40500e7da4e45c0c553266cf35a27c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caecc0998a40500e7da4e45c0c553266cf35a27c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=caecc0998a40500e7da4e45c0c553266cf35a27c", "patch": "@@ -1,14 +1,19 @@\n+2002-06-16  Richard Henderson  <rth@redhat.com>\n+\n+\tPR opt/6722\n+\t* regclass.c (globalize_reg): Update regs_invalidated_by_call.\n+\n 2002-06-16  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n-\t* config.gcc: Add an i386/sysv4-cpp.h.  Remove i386-aout.h from\n-\tvxworks.\n-config/i386:\n-\t* i386-aout.h, i386elf.h, sysv4.h: Remove CPP_PREDEFINES.\n-\t* linux64.h: Use TARGET_OS_CPP_BUILTINS rather than\n+\t* config.gcc: Add i386/sysv4-cpp.h; remove i386-aout.h from vxworks.\n+\t* config/i386/i386-aout.h, config/i386/i386elf.h,\n+\tconfig/i386/sysv4.h: Remove CPP_PREDEFINES.\n+\t* config/i386/linux64.h, config/i386/i386elf.h, config/i386/mach.h,\n+\tconfig/i386/netware.h, config/i386/rtemself.h, config/i386/sco5.h,\n+\tconfig/i386/sol2.h, config/i386/vsta.h, config/i386/vxi386.h,\n+\tconfig/i386/win32.h: Use TARGET_OS_CPP_BUILTINS rather than\n \tCPP_PREDEFINES and part of CPP_SPEC.\n-\ti386elf.h, mach.h, netware.h, rtemself.h, sco5.h, sol2.h,\n-\tvsta.h, vxi386.h, win32.h: Similarly.\n-\t* sysv4-cpp.h: New.\n+\t* config/i386/sysv4-cpp.h: New.\n \n 2002-06-16  Richard Henderson  <rth@redhat.com>\n "}, {"sha": "84bf97f21db6fed042bc0a3250dea9b4fb075227", "filename": "gcc/regclass.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caecc0998a40500e7da4e45c0c553266cf35a27c/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caecc0998a40500e7da4e45c0c553266cf35a27c/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=caecc0998a40500e7da4e45c0c553266cf35a27c", "patch": "@@ -824,6 +824,7 @@ globalize_reg (i)\n   SET_HARD_REG_BIT (fixed_reg_set, i);\n   SET_HARD_REG_BIT (call_used_reg_set, i);\n   SET_HARD_REG_BIT (call_fixed_reg_set, i);\n+  SET_HARD_REG_BIT (regs_invalidated_by_call, i);\n }\n \f\n /* Now the data and code for the `regclass' pass, which happens"}, {"sha": "4630664d9579d05ffefce9ec237e27d384565099", "filename": "gcc/testsuite/gcc.dg/20020616-1.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caecc0998a40500e7da4e45c0c553266cf35a27c/gcc%2Ftestsuite%2Fgcc.dg%2F20020616-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caecc0998a40500e7da4e45c0c553266cf35a27c/gcc%2Ftestsuite%2Fgcc.dg%2F20020616-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020616-1.c?ref=caecc0998a40500e7da4e45c0c553266cf35a27c", "patch": "@@ -0,0 +1,29 @@\n+/* PR opt/6722 */\n+/* { dg-do run { target i?86-*-* } } */\n+/* { dg-options \"-O2\" } */\n+\n+register int k asm(\"%ebx\");\n+\n+void __attribute__((noinline))\n+foo()\n+{\n+  k = 1;\n+}\n+\n+void test()\n+{\n+  int i;\n+  for (i = 0; i < 10; i += k)\n+    {\n+      k = 0;\n+      foo();\n+    }\n+}\n+\n+int main()\n+{\n+  int old = k;\n+  test();\n+  k = old;\n+  return 0;\n+}"}]}