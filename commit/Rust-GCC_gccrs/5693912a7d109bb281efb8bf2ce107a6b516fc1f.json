{"sha": "5693912a7d109bb281efb8bf2ce107a6b516fc1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY5MzkxMmE3ZDEwOWJiMjgxZWZiOGJmMmNlMTA3YTZiNTE2ZmMxZg==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2004-02-16T19:54:49Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2004-02-16T19:54:49Z"}, "message": "CharViewBufferImpl.java: New convenience constructor.\n\n\n\t* java/nio/CharViewBufferImpl.java:  New convenience constructor.\n\tFix buggy call to super constructor.\n\t* java/nio/DoubleViewBufferImpl.java:  Likewise.\n\t* java/nio/FloatViewBufferImpl.java:  Likewise.\n\t* java/nio/IntViewBufferImpl.java:  Likewise.\n\t* java/nio/LongViewBufferImpl.java:  Likewise.\n\t* java/nio/ShortViewBufferImpl.java:  Likewise.\n\nFrom-SVN: r77917", "tree": {"sha": "27a478c335b8222aff1ffd69e6d9692486bc95ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27a478c335b8222aff1ffd69e6d9692486bc95ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5693912a7d109bb281efb8bf2ce107a6b516fc1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5693912a7d109bb281efb8bf2ce107a6b516fc1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5693912a7d109bb281efb8bf2ce107a6b516fc1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5693912a7d109bb281efb8bf2ce107a6b516fc1f/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cf68bacaadccff4197ad92016c58c07c7c37f9c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf68bacaadccff4197ad92016c58c07c7c37f9c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf68bacaadccff4197ad92016c58c07c7c37f9c0"}], "stats": {"total": 73, "additions": 67, "deletions": 6}, "files": [{"sha": "5352ffa4ac1013aebb394a07ea9c0762c5f7f3e9", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5693912a7d109bb281efb8bf2ce107a6b516fc1f/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5693912a7d109bb281efb8bf2ce107a6b516fc1f/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=5693912a7d109bb281efb8bf2ce107a6b516fc1f", "patch": "@@ -12,6 +12,13 @@\n \t* java/nio/IntBuffer.java:  Likewise.\n \t* java/nio/LongBuffer.java:  Likewise.\n \t* java/nio/ShortBuffer.java:  Likewise.\n+\t* java/nio/CharViewBufferImpl.java:  New convenience constructor.\n+\tFix buggy call to super constructor.\n+\t* java/nio/DoubleViewBufferImpl.java:  Likewise.\n+\t* java/nio/FloatViewBufferImpl.java:  Likewise.\n+\t* java/nio/IntViewBufferImpl.java:  Likewise.\n+\t* java/nio/LongViewBufferImpl.java:  Likewise.\n+\t* java/nio/ShortViewBufferImpl.java:  Likewise.\n \n 2004-02-15  Ito Kazumitsu  <kaz@maczuka.gcd.org>\n "}, {"sha": "ee99cfbe069404a325dc57101435cd6b504d9a9a", "filename": "libjava/java/nio/CharViewBufferImpl.java", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5693912a7d109bb281efb8bf2ce107a6b516fc1f/libjava%2Fjava%2Fnio%2FCharViewBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5693912a7d109bb281efb8bf2ce107a6b516fc1f/libjava%2Fjava%2Fnio%2FCharViewBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FCharViewBufferImpl.java?ref=5693912a7d109bb281efb8bf2ce107a6b516fc1f", "patch": "@@ -46,11 +46,20 @@ class CharViewBufferImpl extends CharBuffer\n   private boolean readOnly;\n   private ByteOrder endian;\n   \n+  CharViewBufferImpl (ByteBuffer bb, int capacity)\n+  {\n+    super (capacity, capacity, 0, -1);\n+    this.bb = bb;\n+    this.offset = bb.position();\n+    this.readOnly = bb.isReadOnly();\n+    this.endian = bb.order();\n+  }\n+  \n   public CharViewBufferImpl (ByteBuffer bb, int offset, int capacity,\n \t\t\t     int limit, int position, int mark,\n \t\t\t     boolean readOnly, ByteOrder endian)\n   {\n-    super (limit >> 1, limit >> 1, position >> 1, mark >> 1);\n+    super (capacity, limit, position, mark);\n     this.bb = bb;\n     this.offset = offset;\n     this.readOnly = readOnly;"}, {"sha": "7df2f509b58ff700afe03a70ad7be5e7e7d2aef7", "filename": "libjava/java/nio/DoubleViewBufferImpl.java", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5693912a7d109bb281efb8bf2ce107a6b516fc1f/libjava%2Fjava%2Fnio%2FDoubleViewBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5693912a7d109bb281efb8bf2ce107a6b516fc1f/libjava%2Fjava%2Fnio%2FDoubleViewBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FDoubleViewBufferImpl.java?ref=5693912a7d109bb281efb8bf2ce107a6b516fc1f", "patch": "@@ -46,11 +46,20 @@ class DoubleViewBufferImpl extends DoubleBuffer\n   private boolean readOnly;\n   private ByteOrder endian;\n   \n+  DoubleViewBufferImpl (ByteBuffer bb, int capacity)\n+  {\n+    super (capacity, capacity, 0, -1);\n+    this.bb = bb;\n+    this.offset = bb.position();\n+    this.readOnly = bb.isReadOnly();\n+    this.endian = bb.order();\n+  }\n+  \n   public DoubleViewBufferImpl (ByteBuffer bb, int offset, int capacity,\n                                int limit, int position, int mark,\n                                boolean readOnly, ByteOrder endian)\n   {\n-    super (limit >> 3, limit >> 3, position >> 3, mark >> 3);\n+    super (capacity, limit, position, mark);\n     this.bb = bb;\n     this.offset = offset;\n     this.readOnly = readOnly;"}, {"sha": "c4caf9bf3220b4190fcee3b81a7cc371e2ac2e1b", "filename": "libjava/java/nio/FloatViewBufferImpl.java", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5693912a7d109bb281efb8bf2ce107a6b516fc1f/libjava%2Fjava%2Fnio%2FFloatViewBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5693912a7d109bb281efb8bf2ce107a6b516fc1f/libjava%2Fjava%2Fnio%2FFloatViewBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FFloatViewBufferImpl.java?ref=5693912a7d109bb281efb8bf2ce107a6b516fc1f", "patch": "@@ -46,11 +46,20 @@ class FloatViewBufferImpl extends FloatBuffer\n   private boolean readOnly;\n   private ByteOrder endian;\n   \n+  FloatViewBufferImpl (ByteBuffer bb, int capacity)\n+  {\n+    super (capacity, capacity, 0, -1);\n+    this.bb = bb;\n+    this.offset = bb.position();\n+    this.readOnly = bb.isReadOnly();\n+    this.endian = bb.order();\n+  }\n+  \n   public FloatViewBufferImpl (ByteBuffer bb, int offset, int capacity,\n \t\t\t      int limit, int position, int mark,\n \t\t\t      boolean readOnly, ByteOrder endian)\n   {\n-    super (limit >> 2, limit >> 2, position >> 2, mark >> 2);\n+    super (capacity, limit, position, mark);\n     this.bb = bb;\n     this.offset = offset;\n     this.readOnly = readOnly;"}, {"sha": "3c8e8e61ca25b641d80c06bcadbf87a43292989e", "filename": "libjava/java/nio/IntViewBufferImpl.java", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5693912a7d109bb281efb8bf2ce107a6b516fc1f/libjava%2Fjava%2Fnio%2FIntViewBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5693912a7d109bb281efb8bf2ce107a6b516fc1f/libjava%2Fjava%2Fnio%2FIntViewBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FIntViewBufferImpl.java?ref=5693912a7d109bb281efb8bf2ce107a6b516fc1f", "patch": "@@ -46,11 +46,20 @@ class IntViewBufferImpl extends IntBuffer\n   private boolean readOnly;\n   private ByteOrder endian;\n   \n+  IntViewBufferImpl (ByteBuffer bb, int capacity)\n+  {\n+    super (capacity, capacity, 0, -1);\n+    this.bb = bb;\n+    this.offset = bb.position();\n+    this.readOnly = bb.isReadOnly();\n+    this.endian = bb.order();\n+  }\n+  \n   public IntViewBufferImpl (ByteBuffer bb, int offset, int capacity,\n \t\t\t    int limit, int position, int mark,\n \t\t\t    boolean readOnly, ByteOrder endian)\n   {\n-    super (limit >> 2, limit >> 2, position >> 2, mark >> 2);\n+    super (capacity, limit, position, mark);\n     this.bb = bb;\n     this.offset = offset;\n     this.readOnly = readOnly;"}, {"sha": "9765de9cd0f7901eeafd3a244f6e04e20dc53b4c", "filename": "libjava/java/nio/LongViewBufferImpl.java", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5693912a7d109bb281efb8bf2ce107a6b516fc1f/libjava%2Fjava%2Fnio%2FLongViewBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5693912a7d109bb281efb8bf2ce107a6b516fc1f/libjava%2Fjava%2Fnio%2FLongViewBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FLongViewBufferImpl.java?ref=5693912a7d109bb281efb8bf2ce107a6b516fc1f", "patch": "@@ -46,11 +46,20 @@ class LongViewBufferImpl extends LongBuffer\n   private boolean readOnly;\n   private ByteOrder endian;\n   \n+  LongViewBufferImpl (ByteBuffer bb, int capacity)\n+  {\n+    super (capacity, capacity, 0, -1);\n+    this.bb = bb;\n+    this.offset = bb.position();\n+    this.readOnly = bb.isReadOnly();\n+    this.endian = bb.order();\n+  }\n+  \n   public LongViewBufferImpl (ByteBuffer bb, int offset, int capacity,\n \t\t\t     int limit, int position, int mark,\n \t\t\t     boolean readOnly, ByteOrder endian)\n   {\n-    super (limit >> 3, limit >> 3, position >> 3, mark >> 3);\n+    super (capacity, limit, position, mark);\n     this.bb = bb;\n     this.offset = offset;\n     this.readOnly = readOnly;"}, {"sha": "04d778578b0e95955cbaa0d3d8f1f43fc3af99d3", "filename": "libjava/java/nio/ShortViewBufferImpl.java", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5693912a7d109bb281efb8bf2ce107a6b516fc1f/libjava%2Fjava%2Fnio%2FShortViewBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5693912a7d109bb281efb8bf2ce107a6b516fc1f/libjava%2Fjava%2Fnio%2FShortViewBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FShortViewBufferImpl.java?ref=5693912a7d109bb281efb8bf2ce107a6b516fc1f", "patch": "@@ -45,12 +45,21 @@ class ShortViewBufferImpl extends ShortBuffer\n   private ByteBuffer bb;\n   private boolean readOnly;\n   private ByteOrder endian;\n+\n+  ShortViewBufferImpl (ByteBuffer bb, int capacity)\n+  {\n+    super (capacity, capacity, 0, -1);\n+    this.bb = bb;\n+    this.offset = bb.position();\n+    this.readOnly = bb.isReadOnly();\n+    this.endian = bb.order();\n+  }\n   \n   public ShortViewBufferImpl (ByteBuffer bb, int offset, int capacity,\n \t\t\t      int limit, int position, int mark,\n \t\t\t      boolean readOnly, ByteOrder endian)\n   {\n-    super (limit >> 1, limit >> 1, position >> 1, mark >> 1);\n+    super (capacity, limit, position, mark);\n     this.bb = bb;\n     this.offset = offset;\n     this.readOnly = readOnly;"}]}