{"sha": "f098ead2f5c96dece25043b9548226489a2f4683", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA5OGVhZDJmNWM5NmRlY2UyNTA0M2I5NTQ4MjI2NDg5YTJmNDY4Mw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-11-08T22:48:13Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-11-08T22:48:13Z"}, "message": "Makefile.in (GCC_FOR_TARGET): Add build_tooldir/sys-include.\n\n        * Makefile.in (GCC_FOR_TARGET): Add build_tooldir/sys-include.\n        (CROSS_SYSTEM_HEADER_DIR): Use build_tooldir not tooldir.\n        (ORDINARY_FLAGS_TO_PASS, stmp-fixinc): Likewise.\n\nFrom-SVN: r46860", "tree": {"sha": "5a6e355c1dcef56d395c5150f7821dbe940de7c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a6e355c1dcef56d395c5150f7821dbe940de7c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f098ead2f5c96dece25043b9548226489a2f4683", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f098ead2f5c96dece25043b9548226489a2f4683", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f098ead2f5c96dece25043b9548226489a2f4683", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f098ead2f5c96dece25043b9548226489a2f4683/comments", "author": null, "committer": null, "parents": [{"sha": "775db4902f3e7b2f619bc0f015a0e566583267b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/775db4902f3e7b2f619bc0f015a0e566583267b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/775db4902f3e7b2f619bc0f015a0e566583267b0"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "d573ed0ad23554ec78a2a23f941094ad1dcebea7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f098ead2f5c96dece25043b9548226489a2f4683/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f098ead2f5c96dece25043b9548226489a2f4683/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f098ead2f5c96dece25043b9548226489a2f4683", "patch": "@@ -1,3 +1,9 @@\n+2001-11-08  Richard Henderson  <rth@redhat.com>\n+\n+\t* Makefile.in (GCC_FOR_TARGET): Add build_tooldir/sys-include.\n+\t(CROSS_SYSTEM_HEADER_DIR): Use build_tooldir not tooldir.\n+\t(ORDINARY_FLAGS_TO_PASS, stmp-fixinc): Likewise.\n+\n 2001-11-08  Aldy Hernandez  <aldyh@redhat.com>\n \n         * config/rs6000/rs6000.h (ASM_CPU_SPEC): Add -maltivec."}, {"sha": "b51fc436906e524e7fb8e0e037de7b27e83c2d18", "filename": "gcc/Makefile.in", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f098ead2f5c96dece25043b9548226489a2f4683/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f098ead2f5c96dece25043b9548226489a2f4683/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=f098ead2f5c96dece25043b9548226489a2f4683", "patch": "@@ -161,7 +161,7 @@ USER_H = $(srcdir)/ginclude/stdarg.h $(srcdir)/ginclude/stddef.h \\\n # The GCC to use for compiling libgcc.a, enquire, and crt*.o.\n # Usually the one we just built.\n # Don't use this as a dependency--use $(GCC_PASSES) or $(GCC_PARTS).\n-GCC_FOR_TARGET = ./xgcc -B./ -B$(build_tooldir)/bin/ -isystem $(build_tooldir)/include\n+GCC_FOR_TARGET = ./xgcc -B./ -B$(build_tooldir)/bin/ -isystem $(build_tooldir)/include -isystem $(build_tooldir)/sys-include\n \n # This is used instead of ALL_CFLAGS when compiling with GCC_FOR_TARGET.\n # It omits XCFLAGS, and specifies -B./.\n@@ -234,7 +234,7 @@ SPLAY_TREE_H= $(srcdir)/../include/splay-tree.h\n FIBHEAP_H   = $(srcdir)/../include/fibheap.h\n \n # Default cross SYSTEM_HEADER_DIR, to be overridden by targets.\n-CROSS_SYSTEM_HEADER_DIR = $(tooldir)/sys-include\n+CROSS_SYSTEM_HEADER_DIR = $(build_tooldir)/sys-include\n \n # Control whether to run fixproto and fixincludes.\n STMP_FIXPROTO = stmp-fixproto\n@@ -297,7 +297,7 @@ dollar = @dollar@\n gcc_tooldir = @gcc_tooldir@\n # Used to install the shared libgcc.\n slibdir = @slibdir@\n-# Since tooldir does not exist at build-time, use -B$(build_tooldir)/bin/\n+# Since gcc_tooldir does not exist at build-time, use -B$(build_tooldir)/bin/\n build_tooldir = $(exec_prefix)/$(target_alias)\n # Directory in which the compiler finds target-independent g++ includes.\n gcc_gxx_include_dir = @gcc_gxx_include_dir@\n@@ -695,7 +695,7 @@ ORDINARY_FLAGS_TO_PASS = \\\n \t\"prefix=$(prefix)\" \\\n \t\"local_prefix=$(local_prefix)\" \\\n \t\"gxx_include_dir=$(gcc_gxx_include_dir)\" \\\n-\t\"tooldir=$(tooldir)\" \\\n+\t\"build_tooldir=$(build_tooldir)\" \\\n \t\"gcc_tooldir=$(gcc_tooldir)\" \\\n \t\"bindir=$(bindir)\" \\\n \t\"libsubdir=$(libsubdir)\" \\\n@@ -2200,15 +2200,15 @@ stmp-fixinc: fixinc.sh gsyslimits.h\n \t  cp $(srcdir)/gsyslimits.h include/syslimits.h; \\\n \tfi; \\\n \tchmod a+r include/syslimits.h)\n-# If $(SYSTEM_HEADER_DIR) is $(tooldir)/sys-include, and\n+# If $(SYSTEM_HEADER_DIR) is $(build_tooldir)/sys-include, and\n # that directory exists, then make sure that $(libsubdir) exists.\n-# This is because cpp is compiled to find $(tooldir)/include via\n+# This is because cpp is compiled to find $(gcc_tooldir)/include via\n # $(libsubdir)/$(unlibsubdir), which will only work if $(libsubdir)\n # exists.\n-# We deliberately use tooldir instead of gcc_tooldir here.  gcc_tooldir\n-# won't work because libsubdir doesn't exist yet.\n-\tif [ \"$(SYSTEM_HEADER_DIR)\" = \"$(tooldir)/sys-include\" ] \\\n-\t   && [ -d $(tooldir)/sys-include ]; then \\\n+# ??? Better would be to use -isystem $(build_tooldir)/sys-include,\n+# but fixincludes does not take such arguments.\n+\tif [ \"$(SYSTEM_HEADER_DIR)\" = \"$(build_tooldir)/sys-include\" ] \\\n+\t   && [ -d $(build_tooldir)/sys-include ]; then \\\n \t  if [ -d $(libdir) ] ; then true ; else mkdir $(libdir) ; fi; \\\n \t  if [ -d $(libdir)/gcc-lib ] ; then true ; else mkdir $(libdir)/gcc-lib; fi; \\\n \t  if [ -d $(libdir)/gcc-lib/$(target_alias) ] ; then true ; else mkdir $(libdir)/gcc-lib/$(target_alias) ; fi; \\"}]}