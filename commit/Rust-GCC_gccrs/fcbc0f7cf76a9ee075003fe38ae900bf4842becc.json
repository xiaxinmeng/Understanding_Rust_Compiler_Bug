{"sha": "fcbc0f7cf76a9ee075003fe38ae900bf4842becc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNiYzBmN2NmNzZhOWVlMDc1MDAzZmUzOGFlOTAwYmY0ODQyYmVjYw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2015-10-05T21:43:26Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2015-10-05T21:43:26Z"}, "message": "re PR c++/53856 (Default argument allowed on member defined outside of class template)\n\n/cp\n2015-10-05  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/53856\n\t* pt.c (check_default_tmpl_args): Per [temp.param]/9, do not\n\treject default template arguments in out of class definitions\n\tof members of non-template classes.\n\n/testsuite\n2015-10-05  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/53856\n\t* g++.dg/template/defarg19.C: New.\n\t* g++.dg/template/defarg20.C: Likewise.\n\nFrom-SVN: r228501", "tree": {"sha": "16a91a2a7953eecb0f4924ad7e801db88fb7a105", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16a91a2a7953eecb0f4924ad7e801db88fb7a105"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fcbc0f7cf76a9ee075003fe38ae900bf4842becc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcbc0f7cf76a9ee075003fe38ae900bf4842becc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcbc0f7cf76a9ee075003fe38ae900bf4842becc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcbc0f7cf76a9ee075003fe38ae900bf4842becc/comments", "author": null, "committer": null, "parents": [{"sha": "1970d849159797e67aa80ef03cd0814a42338fda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1970d849159797e67aa80ef03cd0814a42338fda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1970d849159797e67aa80ef03cd0814a42338fda"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "63ed0473f2dabf44369e3c4c9fa644bba0965e23", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcbc0f7cf76a9ee075003fe38ae900bf4842becc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcbc0f7cf76a9ee075003fe38ae900bf4842becc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fcbc0f7cf76a9ee075003fe38ae900bf4842becc", "patch": "@@ -1,3 +1,10 @@\n+2015-10-05  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/53856\n+\t* pt.c (check_default_tmpl_args): Per [temp.param]/9, do not\n+\treject default template arguments in out of class definitions\n+\tof members of non-template classes.\n+\n 2015-10-05  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* tree.c (cp_tree_equal): Use real_equal instead of"}, {"sha": "6520b8b31e53ae410c40c9c7a3350aab0d1c7bd7", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcbc0f7cf76a9ee075003fe38ae900bf4842becc/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcbc0f7cf76a9ee075003fe38ae900bf4842becc/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=fcbc0f7cf76a9ee075003fe38ae900bf4842becc", "patch": "@@ -4940,8 +4940,15 @@ check_default_tmpl_args (tree decl, tree parms, bool is_primary,\n   else if (is_partial)\n     msg = G_(\"default template arguments may not be used in \"\n \t     \"partial specializations\");\n-  else\n+  else if (current_class_type && CLASSTYPE_IS_TEMPLATE (current_class_type))\n     msg = G_(\"default argument for template parameter for class enclosing %qD\");\n+  else\n+    /* Per [temp.param]/9, \"A default template-argument shall not be\n+       specified in the template-parameter-lists of the definition of\n+       a member of a class template that appears outside of the member's\n+       class.\", thus if we aren't handling a member of a class template\n+       there is no need to examine the parameters.  */\n+    return true;\n \n   if (current_class_type && TYPE_BEING_DEFINED (current_class_type))\n     /* If we're inside a class definition, there's no need to"}, {"sha": "3d268e7206cee530c82109c6ff1029e19afe48b7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcbc0f7cf76a9ee075003fe38ae900bf4842becc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcbc0f7cf76a9ee075003fe38ae900bf4842becc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fcbc0f7cf76a9ee075003fe38ae900bf4842becc", "patch": "@@ -1,3 +1,9 @@\n+2015-10-05  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/53856\n+\t* g++.dg/template/defarg19.C: New.\n+\t* g++.dg/template/defarg20.C: Likewise.\n+\n 2015-10-05  Aditya Kumar  <aditya.k7@samsung.com>\n \t    Sebastian Pop  <s.pop@samsung.com>\n "}, {"sha": "856980232f4557d53247cfeebb62108578607da7", "filename": "gcc/testsuite/g++.dg/template/defarg19.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcbc0f7cf76a9ee075003fe38ae900bf4842becc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdefarg19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcbc0f7cf76a9ee075003fe38ae900bf4842becc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdefarg19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdefarg19.C?ref=fcbc0f7cf76a9ee075003fe38ae900bf4842becc", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/53856\n+\n+template<typename T>\n+struct A\n+{\n+  struct B;\n+};\n+\n+template<typename T = int>\n+struct A<T>::B  // { dg-error \"default argument\" }\n+{\n+  int i;\n+};\n+\n+A<int>::B b = { };"}, {"sha": "de8aac11ec213a451061e53012d571e5b157b763", "filename": "gcc/testsuite/g++.dg/template/defarg20.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcbc0f7cf76a9ee075003fe38ae900bf4842becc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdefarg20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcbc0f7cf76a9ee075003fe38ae900bf4842becc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdefarg20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdefarg20.C?ref=fcbc0f7cf76a9ee075003fe38ae900bf4842becc", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/53856\n+\n+struct A\n+{\n+  template<typename T>\n+  struct B;\n+};\n+\n+template<typename T = int>\n+struct A::B\n+{\n+  int i;\n+};\n+\n+A::B<int> b = { };"}]}