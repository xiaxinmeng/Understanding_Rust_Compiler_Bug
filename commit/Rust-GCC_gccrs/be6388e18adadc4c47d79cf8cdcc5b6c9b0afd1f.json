{"sha": "be6388e18adadc4c47d79cf8cdcc5b6c9b0afd1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU2Mzg4ZTE4YWRhZGM0YzQ3ZDc5Y2Y4Y2RjYzViNmM5YjBhZmQxZg==", "commit": {"author": {"name": "Hariharan Sandanagobalane", "email": "hariharan@picochip.com", "date": "2010-09-22T14:07:11Z"}, "committer": {"name": "Hariharan Sandanagobalane", "email": "hariharans@gcc.gnu.org", "date": "2010-09-22T14:07:11Z"}, "message": "picochip.md (movhicc): Use expand to check whether movhicc is available and split it after reload.\n\n        * config/picochip/picochip.md (movhicc): Use expand to check whether\n        movhicc is available and split it after reload.\n\nFrom-SVN: r164523", "tree": {"sha": "59cbc6a559a39b0318c01b953dfef2e4c143eff6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59cbc6a559a39b0318c01b953dfef2e4c143eff6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be6388e18adadc4c47d79cf8cdcc5b6c9b0afd1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be6388e18adadc4c47d79cf8cdcc5b6c9b0afd1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be6388e18adadc4c47d79cf8cdcc5b6c9b0afd1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be6388e18adadc4c47d79cf8cdcc5b6c9b0afd1f/comments", "author": null, "committer": null, "parents": [{"sha": "736fe2d54b355d5d43b3d26b1d40b110a0697b28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/736fe2d54b355d5d43b3d26b1d40b110a0697b28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/736fe2d54b355d5d43b3d26b1d40b110a0697b28"}], "stats": {"total": 43, "additions": 32, "deletions": 11}, "files": [{"sha": "4d1d88dcbcb407194c91dab585cf2fa9e31af70e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be6388e18adadc4c47d79cf8cdcc5b6c9b0afd1f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be6388e18adadc4c47d79cf8cdcc5b6c9b0afd1f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be6388e18adadc4c47d79cf8cdcc5b6c9b0afd1f", "patch": "@@ -1,3 +1,8 @@\n+2010-09-22  Hariharan Sandanagobalane <hariharan@picochip.com>\n+\n+\t* config/picochip/picochip.md (movhicc): Use expand to check whether\n+\tmovhicc is available and split it after reload.\n+\n 2010-09-22  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssanames.c (release_dead_ssa_names): Do not remove"}, {"sha": "b274c1ac77e1b8552582ea0ac1e20e5ed6216531", "filename": "gcc/config/picochip/picochip.md", "status": "modified", "additions": 27, "deletions": 11, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be6388e18adadc4c47d79cf8cdcc5b6c9b0afd1f/gcc%2Fconfig%2Fpicochip%2Fpicochip.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be6388e18adadc4c47d79cf8cdcc5b6c9b0afd1f/gcc%2Fconfig%2Fpicochip%2Fpicochip.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpicochip%2Fpicochip.md?ref=be6388e18adadc4c47d79cf8cdcc5b6c9b0afd1f", "patch": "@@ -622,7 +622,7 @@\n \n ; Match a branch instruction, created from a tstport/cbranch split.\n ; We use a \"use\" clause so GCC doesnt try to use this pattern generally.\n-(define_insn \"*branch\"\n+(define_insn \"branch\"\n   [(set (pc)\n         (if_then_else\n             (match_operator 2 \"comparison_operator\"\n@@ -2511,30 +2511,46 @@\n ;;============================================================================\n \n ;; Define expand seems to consider the resulting two instructions to be\n-;; independent. It was moving the actual copy instruction further down\n-;; with a call instruction in between. The call was clobbering the CC\n-;; and hence the cond_copy was wrong. With a split, it works correctly.\n+;; independent. With a split, guarded by reload, it works correctly.\n (define_expand \"movhicc\"\n-  [(set (reg:CC CC_REGNUM) (match_operand 1 \"comparison_operator\" \"\"))\n-   (parallel [(set (match_operand:HI 0 \"register_operand\" \"=r,r\")\n-                   (if_then_else:HI (match_op_dup:HI 1 [(reg:CC CC_REGNUM) (const_int 0)])\n-                                 (match_operand:HI 2 \"picochip_register_or_immediate_operand\" \"0,0\")\n-                                 (match_operand:HI 3 \"picochip_register_or_immediate_operand\" \"r,i\")))\n-              (use (match_dup 4))])]\n+   [(set (match_operand:HI 0 \"register_operand\" \"=r,r\")\n+                   (if_then_else:HI (match_operand:HI 1 \"\" \"\")\n+\t\t   (match_operand:HI 2 \"register_operand\" \"0,0\")\n+\t\t   (match_operand:HI 3 \"picochip_register_or_immediate_operand\" \"r,i\")))]\n   \"\"\n   {if (!picochip_check_conditional_copy (operands))\n      FAIL;\n    operands[4] = GEN_INT(GET_CODE(operands[1]));\n   })\n \n+(define_insn_and_split \"*checked_movhicc\"\n+   [(set (match_operand:HI 0 \"register_operand\" \"=r,r\")\n+                   (if_then_else:HI (match_operator 1 \"picochip_peephole_comparison_operator\"\n+                          [(match_operand:HI 4 \"register_operand\" \"r,r\")\n+                           (match_operand:HI 5 \"picochip_comparison_operand\" \"r,i\")])\n+\t\t   (match_operand:HI 2 \"register_operand\" \"0,0\")\n+\t\t   (match_operand:HI 3 \"picochip_register_or_immediate_operand\" \"r,i\")))]\n+  \"\"\n+  \"#\"\n+  \"reload_completed\"\n+  [(set (reg:CC CC_REGNUM) (match_dup 1))\n+   (parallel [(set (match_operand:HI 0 \"register_operand\" \"=r,r\")\n+                   (if_then_else:HI (match_op_dup:HI 1 [(reg:CC CC_REGNUM) (const_int 0)])\n+                                 (match_operand:HI 2 \"picochip_register_or_immediate_operand\" \"0,0\")\n+                                 (match_operand:HI 3 \"picochip_register_or_immediate_operand\" \"r,i\")))\n+              (use (match_dup 6))])]\n+  \"{\n+     operands[6] = GEN_INT(GET_CODE(operands[0]));\n+   }\")\n+\n ;; We dont do any checks here. But this pattern is used only when movhicc \n ;; was checked. Put a \"use\" clause to make sure.\n (define_insn \"*conditional_copy\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r,r\")\n \t(if_then_else:HI\n             (match_operator:HI 4 \"picochip_peephole_comparison_operator\"\n                  [(reg:CC CC_REGNUM) (const_int 0)])\n-\t (match_operand:HI 1 \"picochip_register_or_immediate_operand\" \"0,0\")\n+\t (match_operand:HI 1 \"register_operand\" \"0,0\")\n \t (match_operand:HI 2 \"picochip_register_or_immediate_operand\" \"r,i\")))\n    (use (match_operand:HI 3 \"const_int_operand\" \"\"))]\n   \"\""}]}