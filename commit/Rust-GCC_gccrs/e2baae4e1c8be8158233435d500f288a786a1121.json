{"sha": "e2baae4e1c8be8158233435d500f288a786a1121", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJiYWFlNGUxYzhiZTgxNTgyMzM0MzVkNTAwZjI4OGE3ODZhMTEyMQ==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2008-05-27T10:14:25Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-27T10:14:25Z"}, "message": "(System.File_IO.{Close, Delete, Reset}): Change File parameter from \"in out AFCB_Ptr\" to \"access AFCB_Ptr\".\n\n2008-05-27  Thomas Quinot  <quinot@adacore.com>\n\n\t(System.File_IO.{Close, Delete, Reset}):\n\tChange File parameter from \"in out AFCB_Ptr\" to \"access AFCB_Ptr\".\n\t\n\t(Ada.*_IO.{Close, Delete, Reset, Set_Mode}):\n\tPass File parameter by reference.\n\nFrom-SVN: r136002", "tree": {"sha": "f8477ecfb2c883ca1bd8ae86692e823bda30959f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8477ecfb2c883ca1bd8ae86692e823bda30959f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2baae4e1c8be8158233435d500f288a786a1121", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2baae4e1c8be8158233435d500f288a786a1121", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2baae4e1c8be8158233435d500f288a786a1121", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2baae4e1c8be8158233435d500f288a786a1121/comments", "author": null, "committer": null, "parents": [{"sha": "ab8bfb6497bde60fdaa99b684e499e4748cffe49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab8bfb6497bde60fdaa99b684e499e4748cffe49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab8bfb6497bde60fdaa99b684e499e4748cffe49"}], "stats": {"total": 348, "additions": 300, "deletions": 48}, "files": [{"sha": "69476696a6c1bf58b5a6d9174a1f5aaa34ef69e4", "filename": "gcc/ada/a-direio.adb", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fa-direio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fa-direio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direio.adb?ref=e2baae4e1c8be8158233435d500f288a786a1121", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -73,8 +73,11 @@ package body Ada.Direct_IO is\n    -----------\n \n    procedure Close (File : in out File_Type) is\n+      AFCB : aliased AP;\n+      for AFCB'Address use File'Address;\n+      pragma Import (Ada, AFCB);\n    begin\n-      FIO.Close (AP (File));\n+      FIO.Close (AFCB'Access);\n    end Close;\n \n    ------------\n@@ -97,8 +100,11 @@ package body Ada.Direct_IO is\n    ------------\n \n    procedure Delete (File : in out File_Type) is\n+      AFCB : aliased AP;\n+      for AFCB'Address use File'Address;\n+      pragma Import (Ada, AFCB);\n    begin\n-      FIO.Delete (AP (File));\n+      FIO.Delete (AFCB'Access);\n    end Delete;\n \n    -----------------"}, {"sha": "70ff5ed3ca9a3642090323331d9ac49ba84e1cc6", "filename": "gcc/ada/a-direio.ads", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fa-direio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fa-direio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direio.ads?ref=e2baae4e1c8be8158233435d500f288a786a1121", "patch": "@@ -138,6 +138,32 @@ package Ada.Direct_IO is\n    Data_Error   : exception renames IO_Exceptions.Data_Error;\n \n private\n+\n+   --  The following procedures have a File_Type formal of mode IN OUT because\n+   --  they may close the original file. The Close operation may raise an\n+   --  exception, but in that case we want any assignment to the formal to\n+   --  be effective anyway, so it must be passed by reference (or the caller\n+   --  will be left with a dangling pointer).\n+\n+   pragma Export_Procedure\n+     (Internal  => Close,\n+      External  => \"\",\n+      Mechanism => Reference);\n+   pragma Export_Procedure\n+     (Internal  => Delete,\n+      External  => \"\",\n+      Mechanism => Reference);\n+   pragma Export_Procedure\n+     (Internal        => Reset,\n+      External        => \"\",\n+      Parameter_Types => (File_Type),\n+      Mechanism       => Reference);\n+   pragma Export_Procedure\n+     (Internal        => Reset,\n+      External        => \"\",\n+      Parameter_Types => (File_Type, File_Mode),\n+      Mechanism       => (File => Reference));\n+\n    type File_Type is new System.Direct_IO.File_Type;\n \n    Bytes : constant Interfaces.C_Streams.size_t :="}, {"sha": "8624ee76c0517ffbdc0cfdb4a5dbe595a1590feb", "filename": "gcc/ada/a-sequio.adb", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fa-sequio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fa-sequio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-sequio.adb?ref=e2baae4e1c8be8158233435d500f288a786a1121", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -66,8 +66,11 @@ package body Ada.Sequential_IO is\n    -----------\n \n    procedure Close (File : in out File_Type) is\n+      AFCB : aliased AP;\n+      for AFCB'Address use File'Address;\n+      pragma Import (Ada, AFCB);\n    begin\n-      FIO.Close (AP (File));\n+      FIO.Close (AFCB'Access);\n    end Close;\n \n    ------------\n@@ -89,8 +92,11 @@ package body Ada.Sequential_IO is\n    ------------\n \n    procedure Delete (File : in out File_Type) is\n+      AFCB : aliased AP;\n+      for AFCB'Address use File'Address;\n+      pragma Import (Ada, AFCB);\n    begin\n-      FIO.Delete (AP (File));\n+      FIO.Delete (AFCB'Access);\n    end Delete;\n \n    -----------------\n@@ -239,13 +245,19 @@ package body Ada.Sequential_IO is\n    -----------\n \n    procedure Reset (File : in out File_Type; Mode : File_Mode) is\n+      AFCB : aliased AP;\n+      for AFCB'Address use File'Address;\n+      pragma Import (Ada, AFCB);\n    begin\n-      FIO.Reset (AP (File), To_FCB (Mode));\n+      FIO.Reset (AFCB'Access, To_FCB (Mode));\n    end Reset;\n \n    procedure Reset (File : in out File_Type) is\n+      AFCB : aliased AP;\n+      for AFCB'Address use File'Address;\n+      pragma Import (Ada, AFCB);\n    begin\n-      FIO.Reset (AP (File));\n+      FIO.Reset (AFCB'Access);\n    end Reset;\n \n    -----------"}, {"sha": "bd685c22e48e3b96ead2e687b95d94ae21663199", "filename": "gcc/ada/a-sequio.ads", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fa-sequio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fa-sequio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-sequio.ads?ref=e2baae4e1c8be8158233435d500f288a786a1121", "patch": "@@ -114,6 +114,32 @@ package Ada.Sequential_IO is\n    Data_Error   : exception renames IO_Exceptions.Data_Error;\n \n private\n+\n+   --  The following procedures have a File_Type formal of mode IN OUT because\n+   --  they may close the original file. The Close operation may raise an\n+   --  exception, but in that case we want any assignment to the formal to\n+   --  be effective anyway, so it must be passed by reference (or the caller\n+   --  will be left with a dangling pointer).\n+\n+   pragma Export_Procedure\n+     (Internal  => Close,\n+      External  => \"\",\n+      Mechanism => Reference);\n+   pragma Export_Procedure\n+     (Internal  => Delete,\n+      External  => \"\",\n+      Mechanism => Reference);\n+   pragma Export_Procedure\n+     (Internal        => Reset,\n+      External        => \"\",\n+      Parameter_Types => (File_Type),\n+      Mechanism       => Reference);\n+   pragma Export_Procedure\n+     (Internal        => Reset,\n+      External        => \"\",\n+      Parameter_Types => (File_Type, File_Mode),\n+      Mechanism       => (File => Reference));\n+\n    type File_Type is new System.Sequential_IO.File_Type;\n \n    --  All subprograms are inlined"}, {"sha": "fd5e39a7a322962c66c8e253c1cff14dc1c40ef7", "filename": "gcc/ada/a-ststio.adb", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fa-ststio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fa-ststio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ststio.adb?ref=e2baae4e1c8be8158233435d500f288a786a1121", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -101,8 +101,11 @@ package body Ada.Streams.Stream_IO is\n    -----------\n \n    procedure Close (File : in out File_Type) is\n+      AFCB : aliased AP;\n+      for AFCB'Address use File'Address;\n+      pragma Import (Ada, AFCB);\n    begin\n-      FIO.Close (AP (File));\n+      FIO.Close (AFCB'Access);\n    end Close;\n \n    ------------\n@@ -137,8 +140,11 @@ package body Ada.Streams.Stream_IO is\n    ------------\n \n    procedure Delete (File : in out File_Type) is\n+      AFCB : aliased AP;\n+      for AFCB'Address use File'Address;\n+      pragma Import (Ada, AFCB);\n    begin\n-      FIO.Delete (AP (File));\n+      FIO.Delete (AFCB'Access);\n    end Delete;\n \n    -----------------\n@@ -351,6 +357,9 @@ package body Ada.Streams.Stream_IO is\n    --------------\n \n    procedure Set_Mode (File : in out File_Type; Mode : File_Mode) is\n+      AFCB : aliased AP;\n+      for AFCB'Address use File'Address;\n+      pragma Import (Ada, AFCB);\n    begin\n       FIO.Check_File_Open (AP (File));\n \n@@ -362,7 +371,7 @@ package body Ada.Streams.Stream_IO is\n       if ((File.Mode = FCB.In_File) /= (Mode = In_File))\n         and then not File.Update_Mode\n       then\n-         FIO.Reset (AP (File), FCB.Inout_File);\n+         FIO.Reset (AFCB'Access, FCB.Inout_File);\n          File.Update_Mode := True;\n       end if;\n "}, {"sha": "cc2a6d4e24af9fda2912c778ce81954de9effbb8", "filename": "gcc/ada/a-ststio.ads", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fa-ststio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fa-ststio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ststio.ads?ref=e2baae4e1c8be8158233435d500f288a786a1121", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -144,6 +144,36 @@ package Ada.Streams.Stream_IO is\n    Data_Error   : exception renames IO_Exceptions.Data_Error;\n \n private\n+\n+   --  The following procedures have a File_Type formal of mode IN OUT because\n+   --  they may close the original file. The Close operation may raise an\n+   --  exception, but in that case we want any assignment to the formal to\n+   --  be effective anyway, so it must be passed by reference (or the caller\n+   --  will be left with a dangling pointer).\n+\n+   pragma Export_Procedure\n+     (Internal  => Close,\n+      External  => \"\",\n+      Mechanism => Reference);\n+   pragma Export_Procedure\n+     (Internal  => Delete,\n+      External  => \"\",\n+      Mechanism => Reference);\n+   pragma Export_Procedure\n+     (Internal        => Reset,\n+      External        => \"\",\n+      Parameter_Types => (File_Type),\n+      Mechanism       => Reference);\n+   pragma Export_Procedure\n+     (Internal        => Reset,\n+      External        => \"\",\n+      Parameter_Types => (File_Type, File_Mode),\n+      Mechanism       => (File => Reference));\n+   pragma Export_Procedure\n+     (Internal  => Set_Mode,\n+      External  => \"\",\n+      Mechanism => (File => Reference));\n+\n    package FCB renames System.File_Control_Block;\n \n    -----------------------------"}, {"sha": "c2f0f8b470e48ebcad4d11f74f081641d7239e6b", "filename": "gcc/ada/a-textio.adb", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fa-textio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fa-textio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-textio.adb?ref=e2baae4e1c8be8158233435d500f288a786a1121", "patch": "@@ -147,8 +147,11 @@ package body Ada.Text_IO is\n    -----------\n \n    procedure Close (File : in out File_Type) is\n+      AFCB : aliased AP;\n+      for AFCB'Address use File'Address;\n+      pragma Import (Ada, AFCB);\n    begin\n-      FIO.Close (AP (File));\n+      FIO.Close (AFCB'Access);\n    end Close;\n \n    ---------\n@@ -246,8 +249,11 @@ package body Ada.Text_IO is\n    ------------\n \n    procedure Delete (File : in out File_Type) is\n+      AFCB : aliased AP;\n+      for AFCB'Address use File'Address;\n+      pragma Import (Ada, AFCB);\n    begin\n-      FIO.Delete (AP (File));\n+      FIO.Delete (AFCB'Access);\n    end Delete;\n \n    -----------------\n@@ -1573,6 +1579,9 @@ package body Ada.Text_IO is\n      (File : in out File_Type;\n       Mode : File_Mode)\n    is\n+      AFCB : aliased AP;\n+      for AFCB'Address use File'Address;\n+      pragma Import (Ada, AFCB);\n    begin\n       --  Don't allow change of mode for current file (RM A.10.2(5))\n \n@@ -1585,7 +1594,7 @@ package body Ada.Text_IO is\n       end if;\n \n       Terminate_Line (File);\n-      FIO.Reset (AP (File), To_FCB (Mode));\n+      FIO.Reset (AFCB'Access, To_FCB (Mode));\n       File.Page := 1;\n       File.Line := 1;\n       File.Col  := 1;\n@@ -1596,9 +1605,12 @@ package body Ada.Text_IO is\n    end Reset;\n \n    procedure Reset (File : in out File_Type) is\n+      AFCB : aliased AP;\n+      for AFCB'Address use File'Address;\n+      pragma Import (Ada, AFCB);\n    begin\n       Terminate_Line (File);\n-      FIO.Reset (AP (File));\n+      FIO.Reset (AFCB'Access);\n       File.Page := 1;\n       File.Line := 1;\n       File.Col  := 1;"}, {"sha": "35cb5162f71b7804421d06103b50c470b0d33ebd", "filename": "gcc/ada/a-textio.ads", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fa-textio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fa-textio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-textio.ads?ref=e2baae4e1c8be8158233435d500f288a786a1121", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -301,6 +301,32 @@ package Ada.Text_IO is\n    Layout_Error : exception renames IO_Exceptions.Layout_Error;\n \n private\n+\n+   --  The following procedures have a File_Type formal of mode IN OUT because\n+   --  they may close the original file. The Close operation may raise an\n+   --  exception, but in that case we want any assignment to the formal to\n+   --  be effective anyway, so it must be passed by reference (or the caller\n+   --  will be left with a dangling pointer).\n+\n+   pragma Export_Procedure\n+     (Internal  => Close,\n+      External  => \"\",\n+      Mechanism => Reference);\n+   pragma Export_Procedure\n+     (Internal  => Delete,\n+      External  => \"\",\n+      Mechanism => Reference);\n+   pragma Export_Procedure\n+     (Internal        => Reset,\n+      External        => \"\",\n+      Parameter_Types => (File_Type),\n+      Mechanism       => Reference);\n+   pragma Export_Procedure\n+     (Internal        => Reset,\n+      External        => \"\",\n+      Parameter_Types => (File_Type, File_Mode),\n+      Mechanism       => (File => Reference));\n+\n    -----------------------------------\n    -- Handling of Format Characters --\n    -----------------------------------"}, {"sha": "b30c6f52753ab40e3e06eb2dd89e3c090a7e4143", "filename": "gcc/ada/a-witeio.adb", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fa-witeio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fa-witeio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-witeio.adb?ref=e2baae4e1c8be8158233435d500f288a786a1121", "patch": "@@ -133,8 +133,11 @@ package body Ada.Wide_Text_IO is\n    -----------\n \n    procedure Close (File : in out File_Type) is\n+      AFCB : aliased AP;\n+      for AFCB'Address use File'Address;\n+      pragma Import (Ada, AFCB);\n    begin\n-      FIO.Close (AP (File));\n+      FIO.Close (AFCB'Access);\n    end Close;\n \n    ---------\n@@ -232,8 +235,11 @@ package body Ada.Wide_Text_IO is\n    ------------\n \n    procedure Delete (File : in out File_Type) is\n+      AFCB : aliased AP;\n+      for AFCB'Address use File'Address;\n+      pragma Import (Ada, AFCB);\n    begin\n-      FIO.Delete (AP (File));\n+      FIO.Delete (AFCB'Access);\n    end Delete;\n \n    -----------------\n@@ -1308,6 +1314,9 @@ package body Ada.Wide_Text_IO is\n      (File : in out File_Type;\n       Mode : File_Mode)\n    is\n+      AFCB : aliased AP;\n+      for AFCB'Address use File'Address;\n+      pragma Import (Ada, AFCB);\n    begin\n       --  Don't allow change of mode for current file (RM A.10.2(5))\n \n@@ -1320,7 +1329,7 @@ package body Ada.Wide_Text_IO is\n       end if;\n \n       Terminate_Line (File);\n-      FIO.Reset (AP (File), To_FCB (Mode));\n+      FIO.Reset (AFCB'Access, To_FCB (Mode));\n       File.Page := 1;\n       File.Line := 1;\n       File.Col  := 1;\n@@ -1331,9 +1340,12 @@ package body Ada.Wide_Text_IO is\n    end Reset;\n \n    procedure Reset (File : in out File_Type) is\n+      AFCB : aliased AP;\n+      for AFCB'Address use File'Address;\n+      pragma Import (Ada, AFCB);\n    begin\n       Terminate_Line (File);\n-      FIO.Reset (AP (File));\n+      FIO.Reset (AFCB'Access);\n       File.Page := 1;\n       File.Line := 1;\n       File.Col  := 1;"}, {"sha": "d35de1327d21786ea64c1829d5d2043a5a968ff6", "filename": "gcc/ada/a-witeio.ads", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fa-witeio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fa-witeio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-witeio.ads?ref=e2baae4e1c8be8158233435d500f288a786a1121", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -301,6 +301,32 @@ package Ada.Wide_Text_IO is\n    Layout_Error : exception renames IO_Exceptions.Layout_Error;\n \n private\n+\n+   --  The following procedures have a File_Type formal of mode IN OUT because\n+   --  they may close the original file. The Close operation may raise an\n+   --  exception, but in that case we want any assignment to the formal to\n+   --  be effective anyway, so it must be passed by reference (or the caller\n+   --  will be left with a dangling pointer).\n+\n+   pragma Export_Procedure\n+     (Internal  => Close,\n+      External  => \"\",\n+      Mechanism => Reference);\n+   pragma Export_Procedure\n+     (Internal  => Delete,\n+      External  => \"\",\n+      Mechanism => Reference);\n+   pragma Export_Procedure\n+     (Internal        => Reset,\n+      External        => \"\",\n+      Parameter_Types => (File_Type),\n+      Mechanism       => Reference);\n+   pragma Export_Procedure\n+     (Internal        => Reset,\n+      External        => \"\",\n+      Parameter_Types => (File_Type, File_Mode),\n+      Mechanism       => (File => Reference));\n+\n    package WCh_Con renames System.WCh_Con;\n \n    -----------------------------------"}, {"sha": "8db57b9468951c9697a73db770ecaa1db4e37060", "filename": "gcc/ada/a-ztexio.adb", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fa-ztexio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fa-ztexio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztexio.adb?ref=e2baae4e1c8be8158233435d500f288a786a1121", "patch": "@@ -133,8 +133,11 @@ package body Ada.Wide_Wide_Text_IO is\n    -----------\n \n    procedure Close (File : in out File_Type) is\n+      AFCB : aliased AP;\n+      for AFCB'Address use File'Address;\n+      pragma Import (Ada, AFCB);\n    begin\n-      FIO.Close (AP (File));\n+      FIO.Close (AFCB'Access);\n    end Close;\n \n    ---------\n@@ -232,8 +235,11 @@ package body Ada.Wide_Wide_Text_IO is\n    ------------\n \n    procedure Delete (File : in out File_Type) is\n+      AFCB : aliased AP;\n+      for AFCB'Address use File'Address;\n+      pragma Import (Ada, AFCB);\n    begin\n-      FIO.Delete (AP (File));\n+      FIO.Delete (AFCB'Access);\n    end Delete;\n \n    -----------------\n@@ -1308,6 +1314,9 @@ package body Ada.Wide_Wide_Text_IO is\n      (File : in out File_Type;\n       Mode : File_Mode)\n    is\n+      AFCB : aliased AP;\n+      for AFCB'Address use File'Address;\n+      pragma Import (Ada, AFCB);\n    begin\n       --  Don't allow change of mode for current file (RM A.10.2(5))\n \n@@ -1320,7 +1329,7 @@ package body Ada.Wide_Wide_Text_IO is\n       end if;\n \n       Terminate_Line (File);\n-      FIO.Reset (AP (File), To_FCB (Mode));\n+      FIO.Reset (AFCB'Access, To_FCB (Mode));\n       File.Page := 1;\n       File.Line := 1;\n       File.Col  := 1;\n@@ -1331,9 +1340,12 @@ package body Ada.Wide_Wide_Text_IO is\n    end Reset;\n \n    procedure Reset (File : in out File_Type) is\n+      AFCB : aliased AP;\n+      for AFCB'Address use File'Address;\n+      pragma Import (Ada, AFCB);\n    begin\n       Terminate_Line (File);\n-      FIO.Reset (AP (File));\n+      FIO.Reset (AFCB'Access);\n       File.Page := 1;\n       File.Line := 1;\n       File.Col  := 1;"}, {"sha": "b1b50fc59a793305720a517f30fe82678fe1991a", "filename": "gcc/ada/a-ztexio.ads", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fa-ztexio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fa-ztexio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztexio.ads?ref=e2baae4e1c8be8158233435d500f288a786a1121", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -301,6 +301,32 @@ package Ada.Wide_Wide_Text_IO is\n    Layout_Error : exception renames IO_Exceptions.Layout_Error;\n \n private\n+\n+   --  The following procedures have a File_Type formal of mode IN OUT because\n+   --  they may close the original file. The Close operation may raise an\n+   --  exception, but in that case we want any assignment to the formal to\n+   --  be effective anyway, so it must be passed by reference (or the caller\n+   --  will be left with a dangling pointer).\n+\n+   pragma Export_Procedure\n+     (Internal  => Close,\n+      External  => \"\",\n+      Mechanism => Reference);\n+   pragma Export_Procedure\n+     (Internal  => Delete,\n+      External  => \"\",\n+      Mechanism => Reference);\n+   pragma Export_Procedure\n+     (Internal        => Reset,\n+      External        => \"\",\n+      Parameter_Types => (File_Type),\n+      Mechanism       => Reference);\n+   pragma Export_Procedure\n+     (Internal        => Reset,\n+      External        => \"\",\n+      Parameter_Types => (File_Type, File_Mode),\n+      Mechanism       => (File => Reference));\n+\n    package WCh_Con renames System.WCh_Con;\n \n    -----------------------------------"}, {"sha": "fc4bd8e9d9af7cebde9be289b334de30c5379d6a", "filename": "gcc/ada/s-direio.adb", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fs-direio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fs-direio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-direio.adb?ref=e2baae4e1c8be8158233435d500f288a786a1121", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -251,15 +251,21 @@ package body System.Direct_IO is\n    -----------\n \n    procedure Reset (File : in out File_Type; Mode : FCB.File_Mode) is\n+      AFCB : aliased AP;\n+      for AFCB'Address use File'Address;\n+      pragma Import (Ada, AFCB);\n    begin\n-      FIO.Reset (AP (File), Mode);\n+      FIO.Reset (AFCB'Access, Mode);\n       File.Index := 1;\n       File.Last_Op := Op_Read;\n    end Reset;\n \n    procedure Reset (File : in out File_Type) is\n+      AFCB : aliased AP;\n+      for AFCB'Address use File'Address;\n+      pragma Import (Ada, AFCB);\n    begin\n-      FIO.Reset (AP (File));\n+      FIO.Reset (AFCB'Access);\n       File.Index := 1;\n       File.Last_Op := Op_Read;\n    end Reset;"}, {"sha": "3e32c982d42b1d0a6fcff61103566f0253036f24", "filename": "gcc/ada/s-direio.ads", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fs-direio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fs-direio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-direio.ads?ref=e2baae4e1c8be8158233435d500f288a786a1121", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -111,7 +111,6 @@ package System.Direct_IO is\n       Size : Interfaces.C_Streams.size_t);\n \n    procedure Reset (File : in out File_Type; Mode : FCB.File_Mode);\n-\n    procedure Reset (File : in out File_Type);\n \n    procedure Set_Index (File : File_Type; To : Positive_Count);\n@@ -125,4 +124,21 @@ package System.Direct_IO is\n       Zeroes : System.Storage_Elements.Storage_Array);\n    --  Note: Zeroes is the buffer of zeroes used to fill out partial records\n \n+   --  The following procedures have a File_Type formal of mode IN OUT because\n+   --  they may close the original file. The Close operation may raise an\n+   --  exception, but in that case we want any assignment to the formal to\n+   --  be effective anyway, so it must be passed by reference (or the caller\n+   --  will be left with a dangling pointer).\n+\n+   pragma Export_Procedure\n+     (Internal        => Reset,\n+      External        => \"\",\n+      Parameter_Types => (File_Type),\n+      Mechanism       => Reference);\n+   pragma Export_Procedure\n+     (Internal        => Reset,\n+      External        => \"\",\n+      Parameter_Types => (File_Type, FCB.File_Mode),\n+      Mechanism       => (File => Reference));\n+\n end System.Direct_IO;"}, {"sha": "bfe7d6b0cc502ba950dedd905ff0e62ce80e341a", "filename": "gcc/ada/s-fileio.adb", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fs-fileio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fs-fileio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.adb?ref=e2baae4e1c8be8158233435d500f288a786a1121", "patch": "@@ -206,9 +206,10 @@ package body System.File_IO is\n    -- Close --\n    -----------\n \n-   procedure Close (File : in out AFCB_Ptr) is\n+   procedure Close (File_Ptr : access AFCB_Ptr) is\n       Close_Status : int := 0;\n       Dup_Strm     : Boolean := False;\n+      File         : AFCB_Ptr renames File_Ptr.all;\n \n    begin\n       --  Take a task lock, to protect the global data value Open_Files\n@@ -296,7 +297,8 @@ package body System.File_IO is\n    -- Delete --\n    ------------\n \n-   procedure Delete (File : in out AFCB_Ptr) is\n+   procedure Delete (File_Ptr : access AFCB_Ptr) is\n+      File : AFCB_Ptr renames File_Ptr.all;\n    begin\n       Check_File_Open (File);\n \n@@ -308,7 +310,7 @@ package body System.File_IO is\n          Filename : aliased constant String := File.Name.all;\n \n       begin\n-         Close (File);\n+         Close (File_Ptr);\n \n          --  Now unlink the external file. Note that we use the full name\n          --  in this unlink, because the working directory may have changed\n@@ -354,7 +356,7 @@ package body System.File_IO is\n    procedure Finalize (V : in out File_IO_Clean_Up_Type) is\n       pragma Warnings (Off, V);\n \n-      Fptr1   : AFCB_Ptr;\n+      Fptr1   : aliased AFCB_Ptr;\n       Fptr2   : AFCB_Ptr;\n \n       Discard : int;\n@@ -371,7 +373,7 @@ package body System.File_IO is\n       Fptr1 := Open_Files;\n       while Fptr1 /= null loop\n          Fptr2 := Fptr1.Next;\n-         Close (Fptr1);\n+         Close (Fptr1'Access);\n          Fptr1 := Fptr2;\n       end loop;\n \n@@ -1058,17 +1060,19 @@ package body System.File_IO is\n \n    --  The reset which does not change the mode simply does a rewind\n \n-   procedure Reset (File : in out AFCB_Ptr) is\n+   procedure Reset (File_Ptr : access AFCB_Ptr) is\n+      File : AFCB_Ptr renames File_Ptr.all;\n    begin\n       Check_File_Open (File);\n-      Reset (File, File.Mode);\n+      Reset (File_Ptr, File.Mode);\n    end Reset;\n \n    --  The reset with a change in mode is done using freopen, and is\n    --  not permitted except for regular files (since otherwise there\n    --  is no name for the freopen, and in any case it seems meaningless)\n \n-   procedure Reset (File : in out AFCB_Ptr; Mode : File_Mode) is\n+   procedure Reset (File_Ptr : access AFCB_Ptr; Mode : File_Mode) is\n+      File   : AFCB_Ptr renames File_Ptr.all;\n       Fopstr : aliased Fopen_String;\n \n    begin\n@@ -1106,7 +1110,7 @@ package body System.File_IO is\n            (File.Name.all'Address, Fopstr'Address, File.Stream, File.Encoding);\n \n          if File.Stream = NULL_Stream then\n-            Close (File);\n+            Close (File_Ptr);\n             raise Use_Error;\n \n          else"}, {"sha": "f69c580856bf9f040244a6da63b256c10d62b1f5", "filename": "gcc/ada/s-fileio.ads", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fs-fileio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2baae4e1c8be8158233435d500f288a786a1121/gcc%2Fada%2Fs-fileio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.ads?ref=e2baae4e1c8be8158233435d500f288a786a1121", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -100,20 +100,23 @@ package System.File_IO is\n    --  this allocated file control block. If the open/create fails, then the\n    --  fields of File are undefined, and File_Ptr is unchanged.\n \n-   procedure Close (File : in out FCB.AFCB_Ptr);\n+   procedure Close (File_Ptr : access FCB.AFCB_Ptr);\n    --  The file is closed, all storage associated with it is released, and\n    --  File is set to null. Note that this routine calls AFCB_Close to perform\n    --  any specialized close actions, then closes the file at the system level,\n    --  then frees the mode and form strings, and finally calls AFCB_Free to\n-   --  free the file control block itself, setting File to null.\n+   --  free the file control block itself, setting File.all to null. Note that\n+   --  for this assignment to be done in all cases, including those where\n+   --  an exception is raised, we can't use an IN OUT parameter (which would\n+   --  not be copied back in case of abnormal return).\n \n-   procedure Delete (File : in out FCB.AFCB_Ptr);\n+   procedure Delete (File_Ptr : access FCB.AFCB_Ptr);\n    --  The indicated file is unlinked\n \n-   procedure Reset (File : in out FCB.AFCB_Ptr; Mode : FCB.File_Mode);\n+   procedure Reset (File_Ptr : access FCB.AFCB_Ptr; Mode : FCB.File_Mode);\n    --  The file is reset, and the mode changed as indicated\n \n-   procedure Reset (File : in out FCB.AFCB_Ptr);\n+   procedure Reset (File_Ptr : access FCB.AFCB_Ptr);\n    --  The files is reset, and the mode is unchanged\n \n    function Mode (File : FCB.AFCB_Ptr) return FCB.File_Mode;"}]}