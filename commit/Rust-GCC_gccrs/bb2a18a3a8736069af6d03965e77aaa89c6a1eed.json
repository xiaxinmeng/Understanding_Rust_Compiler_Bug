{"sha": "bb2a18a3a8736069af6d03965e77aaa89c6a1eed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIyYTE4YTNhODczNjA2OWFmNmQwMzk2NWU3N2FhYTg5YzZhMWVlZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-02-14T15:12:57Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-02-14T15:12:57Z"}, "message": "Update libstdc++ documentation for implementation status\n\n\t* doc/xml/manual/status_cxx2017.xml: Add P0063R3 to status table.\n\t* doc/html/*: Regenerate.\n\nFrom-SVN: r268883", "tree": {"sha": "bb43d7dbbe737fb039ecd7e5b9813ba7b1b73180", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb43d7dbbe737fb039ecd7e5b9813ba7b1b73180"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb2a18a3a8736069af6d03965e77aaa89c6a1eed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb2a18a3a8736069af6d03965e77aaa89c6a1eed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb2a18a3a8736069af6d03965e77aaa89c6a1eed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb2a18a3a8736069af6d03965e77aaa89c6a1eed/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7dbc6723a622c22140206005bfb1eb9ac7593f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7dbc6723a622c22140206005bfb1eb9ac7593f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7dbc6723a622c22140206005bfb1eb9ac7593f9"}], "stats": {"total": 66, "additions": 59, "deletions": 7}, "files": [{"sha": "bee73caca57b87d39a891b94a3c5cebd2fd44e4c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb2a18a3a8736069af6d03965e77aaa89c6a1eed/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb2a18a3a8736069af6d03965e77aaa89c6a1eed/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=bb2a18a3a8736069af6d03965e77aaa89c6a1eed", "patch": "@@ -1,5 +1,8 @@\n 2019-02-14  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* doc/xml/manual/status_cxx2017.xml: Add P0063R3 to status table.\n+\t* doc/html/*: Regenerate.\n+\n \t* doc/xml/manual/intro.xml: Document LWG 2586 status.\n \t* include/bits/uses_allocator.h (__uses_alloc): Use const lvalue\n \tallocator type in is_constructible checks."}, {"sha": "208ec296743c5f2b361809b17389fe327a001280", "filename": "libstdc++-v3/doc/html/manual/bugs.html", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb2a18a3a8736069af6d03965e77aaa89c6a1eed/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbugs.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb2a18a3a8736069af6d03965e77aaa89c6a1eed/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbugs.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbugs.html?ref=bb2a18a3a8736069af6d03965e77aaa89c6a1eed", "patch": "@@ -500,14 +500,36 @@\n        </em></span>\n     </span></dt><dd><p>Avoid using <code class=\"code\">dynamic_cast</code> when it would be\n     ill-formed.\n+    </p></dd><dt><a id=\"manual.bugs.dr2537\"></a><span class=\"term\"><a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2537\" target=\"_top\">2537</a>:\n+       <span class=\"emphasis\"><em>Requirements on the first template parameter of container adaptors\n+       </em></span>\n+    </span></dt><dd><p>Add static assertions to enforce the requirement.\n+    </p></dd><dt><a id=\"manual.bugs.dr2566\"></a><span class=\"term\"><a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2566\" target=\"_top\">2566</a>:\n+       <span class=\"emphasis\"><em>Constructors for <code class=\"code\">priority_queue</code> taking allocators\n+\t should call <code class=\"code\">make_heap</code>\n+       </em></span>\n+    </span></dt><dd><p>Call <code class=\"code\">make_heap</code>.\n     </p></dd><dt><a id=\"manual.bugs.dr2583\"></a><span class=\"term\"><a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2583\" target=\"_top\">2583</a>:\n        <span class=\"emphasis\"><em>There is no way to supply an allocator for <code class=\"code\">basic_string(str, pos)</code>\n        </em></span>\n-    </span></dt><dd><p>Add new constructor\n+    </span></dt><dd><p>Add new constructor.\n+    </p></dd><dt><a id=\"manual.bugs.dr2586\"></a><span class=\"term\"><a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2586\" target=\"_top\">2586</a>:\n+       <span class=\"emphasis\"><em>Wrong value category used in <code class=\"code\">scoped_allocator_adaptor::construct()</code>\n+       </em></span>\n+    </span></dt><dd><p>Change internal helper for uses-allocator construction\n+      to always check using const lvalue allocators.\n     </p></dd><dt><a id=\"manual.bugs.dr2684\"></a><span class=\"term\"><a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2684\" target=\"_top\">2684</a>:\n        <span class=\"emphasis\"><em><code class=\"code\">priority_queue</code> lacking comparator typedef\n        </em></span>\n     </span></dt><dd><p>Define the <code class=\"code\">value_compare</code> typedef.\n+    </p></dd><dt><a id=\"manual.bugs.dr2735\"></a><span class=\"term\"><a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2735\" target=\"_top\">2735</a>:\n+       <span class=\"emphasis\"><em><code class=\"code\">std::abs(short)</code>,\n+\t <code class=\"code\">std::abs(signed char)</code> and others should return\n+\t <code class=\"code\">int</code> instead of <code class=\"code\">double</code> in order to be\n+\t compatible with C++98 and C\n+       </em></span>\n+    </span></dt><dd><p>Resolved by the changes for\n+      <a class=\"link\" href=\"bugs.html#manual.bugs.dr2192\">2192</a>.\n     </p></dd><dt><a id=\"manual.bugs.dr2770\"></a><span class=\"term\"><a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2770\" target=\"_top\">2770</a>:\n        <span class=\"emphasis\"><em><code class=\"code\">tuple_size&lt;const T&gt;</code> specialization is not\n \t SFINAE compatible and breaks decomposition declarations"}, {"sha": "d66f901f1aa818c9130c81b40f02b40917dea41b", "filename": "libstdc++-v3/doc/html/manual/status.html", "status": "modified", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb2a18a3a8736069af6d03965e77aaa89c6a1eed/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb2a18a3a8736069af6d03965e77aaa89c6a1eed/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html?ref=bb2a18a3a8736069af6d03965e77aaa89c6a1eed", "patch": "@@ -548,7 +548,11 @@\n \t<a class=\"link\" href=\"http://www.open-std.org/JTC1/sc22/WG21/docs/papers/2014/n4259.pdf\" target=\"_top\">\n \t  N4259\n \t</a>\n-      </td><td align=\"center\">6.1</td><td align=\"left\"><code class=\"code\">__cpp_lib_uncaught_exceptions &gt;= 201411</code></td></tr><tr><td align=\"left\"> Variant: a type-safe union for C++17 </td><td align=\"left\">\n+      </td><td align=\"center\">6.1</td><td align=\"left\"><code class=\"code\">__cpp_lib_uncaught_exceptions &gt;= 201411</code></td></tr><tr><td align=\"left\"> C++17 should refer to C11 instead of C99 </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0063r3.html\" target=\"_top\">\n+\tP0063R3\n+\t</a>\n+      </td><td align=\"center\"> 9.1 </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\"> Variant: a type-safe union for C++17 </td><td align=\"left\">\n \t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0088r3.html\" target=\"_top\">\n \tP0088R3\n \t</a>\n@@ -821,7 +825,19 @@\n \tP0067R5\n \t</a>\n       </td><td align=\"center\"> 8.1 (only integral types supported) </td><td align=\"left\"><code class=\"code\"> __has_include(&lt;charconv&gt;) </code>\n-             <code class=\"code\"> __cpp_lib_to_chars &gt;= 201611 </code></td></tr></tbody></table></div></div><br class=\"table-break\" /><p>\n+             <code class=\"code\"> __cpp_lib_to_chars &gt;= 201611 </code></td></tr><tr><td align=\"left\"> Homogeneous interface for variant, any and optional </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0032r3.pdf\" target=\"_top\">\n+\tP0032R3\n+\t</a>\n+      </td><td align=\"center\"> 7.1  </td><td align=\"left\">\n+             <code class=\"code\"> __cpp_lib_any &gt;= 201606 </code>,\n+             <code class=\"code\"> __cpp_lib_optional &gt;= 201606 </code>,\n+             <code class=\"code\"> __cpp_lib_variant &gt;= 201606 </code>\n+      </td></tr><tr><td align=\"left\"> Making Optional Greater Equal Again </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0307r2.pdf\" target=\"_top\">\n+\tP0307R2\n+\t</a>\n+      </td><td align=\"center\"> 7.1  </td><td align=\"left\"> <code class=\"code\"> __cpp_lib_optional &gt;= 201606 </code> </td></tr></tbody></table></div></div><br class=\"table-break\" /><p>\n Note 1: This feature is supported in GCC 7.1 and 7.2 but before GCC 7.3 the\n <code class=\"code\">__cpp_lib</code> macro is not defined, and compilation will fail if the\n header is included without using <code class=\"option\">-std</code> to enable C++17 support.\n@@ -1037,11 +1053,11 @@\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0550r2.pdf\" target=\"_top\">\n \tP0550R2\n \t</a>\n-      </td><td align=\"center\"> 9.1 </td><td align=\"left\">\u00a0</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\">  <code class=\"code\">nodiscard</code> in the Library </td><td align=\"left\">\n+      </td><td align=\"center\"> 9.1 </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">  <code class=\"code\">nodiscard</code> in the Library </td><td align=\"left\">\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0600r1.pdf\" target=\"_top\">\n \tP0600R1\n \t</a>\n-      </td><td align=\"center\"> </td><td align=\"left\">\u00a0</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\">  de-pessimize legacy algorithms with <code class=\"code\">std::move</code> </td><td align=\"left\">\n+      </td><td align=\"center\"> 9.1 </td><td align=\"left\">\u00a0</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\">  de-pessimize legacy algorithms with <code class=\"code\">std::move</code> </td><td align=\"left\">\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0616r0.pdf\" target=\"_top\">\n \tP0616R0\n \t</a>\n@@ -1273,11 +1289,11 @@\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1085r2.md\" target=\"_top\">\n \tP1085R2\n \t</a>\n-      </td><td align=\"center\"> </td><td align=\"left\">\u00a0</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\">  Editorial Guidance for merging P0019r8 and P0528r3 </td><td align=\"left\">\n+      </td><td align=\"center\"> </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">  Editorial Guidance for merging P0019r8 and P0528r3 </td><td align=\"left\">\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1123r0.html\" target=\"_top\">\n \tP1123R0\n \t</a>\n-      </td><td align=\"center\"> </td><td align=\"left\">\u00a0</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\">  Cleaning up Clause 20 </td><td align=\"left\">\n+      </td><td align=\"center\"> Note 1 </td><td align=\"left\">\u00a0</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\">  Cleaning up Clause 20 </td><td align=\"left\">\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1148r0.pdf\" target=\"_top\">\n \tP1148R0\n \t</a>"}, {"sha": "bb82e34bba7c8f2698392e5a2585f2021b84dbe8", "filename": "libstdc++-v3/doc/xml/manual/status_cxx2017.xml", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb2a18a3a8736069af6d03965e77aaa89c6a1eed/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb2a18a3a8736069af6d03965e77aaa89c6a1eed/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml?ref=bb2a18a3a8736069af6d03965e77aaa89c6a1eed", "patch": "@@ -90,6 +90,17 @@ Feature-testing recommendations for C++</link>.\n       <entry><code>__cpp_lib_uncaught_exceptions >= 201411</code></entry>\n     </row>\n \n+    <row>\n+      <entry> C++17 should refer to C11 instead of C99 </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0063r3.html\">\n+\tP0063R3\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> 9.1 </entry>\n+      <entry/>\n+    </row>\n+\n     <row>\n       <entry> Variant: a type-safe union for C++17 </entry>\n       <entry>"}]}