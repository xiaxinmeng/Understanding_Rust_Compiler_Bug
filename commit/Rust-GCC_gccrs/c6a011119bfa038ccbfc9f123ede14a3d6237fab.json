{"sha": "c6a011119bfa038ccbfc9f123ede14a3d6237fab", "node_id": "C_kwDOANBUbNoAKGM2YTAxMTExOWJmYTAzOGNjYmZjOWYxMjNlZGUxNGEzZDYyMzdmYWI", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2023-01-18T16:41:47Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2023-01-18T16:41:47Z"}, "message": "analyzer: add SARD testsuite 81\n\nA 2013 paper [1] proposed 5 simple tests for evaluating the\neffectiveness of static analysis tools at detecting\nCWE-121 (\"Stack-based Buffer Overflow\").\n\nThe tests can be found in:\n  https://samate.nist.gov/SARD/test-suites/81\n\nThis patch adds theses 5 tests to -fanalyzer's testsuite, lightly\nmodified to add DejaGnu directives.\n\nThis is for unit-testing; for broader testing of -fanalyzer I'm working\non a separate integration testing suite that builds various real-world C\nprojects with -fanalyzer, currently here:\n  https://github.com/davidmalcolm/gcc-analyzer-integration-tests\n\n[1] Black, P. , Koo, H. and Irish, T. (2013), A Basic CWE-121 Buffer Overflow Effectiveness Test Suite, Proc. 6th Latin-American Symposium on Dependable Computing, Rio de Janeiro, -1, [online], https://tsapps.nist.gov/publication/get_pdf.cfm?pub_id=913117 (Accessed January 17, 2023)\n\ngcc/testsuite/ChangeLog:\n\t* gcc.dg/analyzer/SARD-tc117-basic-00001-min.c: New test, adapted\n\tfrom https://samate.nist.gov/SARD/test-suites/81.\n\t* gcc.dg/analyzer/SARD-tc1909-stack_overflow_loop.c: Likewise.\n\t* gcc.dg/analyzer/SARD-tc249-basic-00034-min.c: Likewise.\n\t* gcc.dg/analyzer/SARD-tc293-basic-00045-min.c: Likewise.\n\t* gcc.dg/analyzer/SARD-tc841-basic-00182-min.c: Likewise.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "baae1550f38ae7b4cb3269475597a347b72a9b23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/baae1550f38ae7b4cb3269475597a347b72a9b23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6a011119bfa038ccbfc9f123ede14a3d6237fab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6a011119bfa038ccbfc9f123ede14a3d6237fab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6a011119bfa038ccbfc9f123ede14a3d6237fab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6a011119bfa038ccbfc9f123ede14a3d6237fab/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db959e250077ae6b4fc08f53fb322719582c5de6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db959e250077ae6b4fc08f53fb322719582c5de6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db959e250077ae6b4fc08f53fb322719582c5de6"}], "stats": {"total": 305, "additions": 305, "deletions": 0}, "files": [{"sha": "e1ce195ad8bdefe83b2f4e10809e6dec2e028610", "filename": "gcc/testsuite/gcc.dg/analyzer/SARD-tc117-basic-00001-min.c", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6a011119bfa038ccbfc9f123ede14a3d6237fab/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2FSARD-tc117-basic-00001-min.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6a011119bfa038ccbfc9f123ede14a3d6237fab/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2FSARD-tc117-basic-00001-min.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2FSARD-tc117-basic-00001-min.c?ref=c6a011119bfa038ccbfc9f123ede14a3d6237fab", "patch": "@@ -0,0 +1,67 @@\n+/* Adapted from https://samate.nist.gov/SARD/test-cases/117/versions/1.0.0\n+   Part of https://samate.nist.gov/SARD/test-suites/81\n+   See:\n+     Black, P. , Koo, H. and Irish, T. (2013), A Basic CWE-121 Buffer Overflow Effectiveness Test Suite, Proc. 6th Latin-American Symposium on Dependable Computing, Rio de Janeiro, -1, [online], https://tsapps.nist.gov/publication/get_pdf.cfm?pub_id=913117 (Accessed January 17, 2023)\n+*/\n+\n+/* Taxonomy Classification: 0000000000000000000100 */\n+\n+/*\n+ *  WRITE/READ               \t 0\twrite\n+ *  WHICH BOUND              \t 0\tupper\n+ *  DATA TYPE                \t 0\tchar\n+ *  MEMORY LOCATION          \t 0\tstack\n+ *  SCOPE                    \t 0\tsame\n+ *  CONTAINER                \t 0\tno\n+ *  POINTER                  \t 0\tno\n+ *  INDEX COMPLEXITY         \t 0\tconstant\n+ *  ADDRESS COMPLEXITY       \t 0\tconstant\n+ *  LENGTH COMPLEXITY        \t 0\tN/A\n+ *  ADDRESS ALIAS            \t 0\tnone\n+ *  INDEX ALIAS              \t 0\tnone\n+ *  LOCAL CONTROL FLOW       \t 0\tnone\n+ *  SECONDARY CONTROL FLOW   \t 0\tnone\n+ *  LOOP STRUCTURE           \t 0\tno\n+ *  LOOP COMPLEXITY          \t 0\tN/A\n+ *  ASYNCHRONY               \t 0\tno\n+ *  TAINT                    \t 0\tno\n+ *  RUNTIME ENV. DEPENDENCE  \t 0\tno\n+ *  MAGNITUDE                \t 1\t1 byte\n+ *  CONTINUOUS/DISCRETE      \t 0\tdiscrete\n+ *  SIGNEDNESS               \t 0\tno\n+ */\n+\n+/*\n+Copyright 2004 M.I.T.\n+\n+Permission is hereby granted, without written agreement or royalty fee, to use, \n+copy, modify, and distribute this software and its documentation for any \n+purpose, provided that the above copyright notice and the following three \n+paragraphs appear in all copies of this software.\n+\n+IN NO EVENT SHALL M.I.T. BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT, SPECIAL, \n+INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OF THIS SOFTWARE \n+AND ITS DOCUMENTATION, EVEN IF M.I.T. HAS BEEN ADVISED OF THE POSSIBILITY OF \n+SUCH DAMANGE.\n+\n+M.I.T. SPECIFICALLY DISCLAIMS ANY WARRANTIES INCLUDING, BUT NOT LIMITED TO \n+THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, \n+AND NON-INFRINGEMENT.\n+\n+THE SOFTWARE IS PROVIDED ON AN \"AS-IS\" BASIS AND M.I.T. HAS NO OBLIGATION TO \n+PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.\n+*/\n+\n+\n+int main(int argc, char *argv[])\n+{\n+  char buf[10];\n+\n+\n+  /*  BAD  */\n+  buf[10] = 'A'; /* { dg-warning \"stack-based buffer overflow\" } */\n+  /* { dg-message \"write of 1 byte to beyond the end of 'buf'\" \"note\" { target *-*-* } .-1 } */\n+\n+\n+  return 0;\n+}"}, {"sha": "2a7612ad6f026e6eb803b2a55a60ad1b89f8bf53", "filename": "gcc/testsuite/gcc.dg/analyzer/SARD-tc1909-stack_overflow_loop.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6a011119bfa038ccbfc9f123ede14a3d6237fab/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2FSARD-tc1909-stack_overflow_loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6a011119bfa038ccbfc9f123ede14a3d6237fab/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2FSARD-tc1909-stack_overflow_loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2FSARD-tc1909-stack_overflow_loop.c?ref=c6a011119bfa038ccbfc9f123ede14a3d6237fab", "patch": "@@ -0,0 +1,29 @@\n+/* Adapted from\n+     https://samate.nist.gov/SARD/downloads/test-suites/2013-02-07-basic-cwe-effectiveness-cwe-121-stack-based-buffer-overflow-for-c.zip\n+   Part of https://samate.nist.gov/SARD/test-suites/81:\n+   See:\n+     Black, P. , Koo, H. and Irish, T. (2013), A Basic CWE-121 Buffer Overflow Effectiveness Test Suite, Proc. 6th Latin-American Symposium on Dependable Computing, Rio de Janeiro, -1, [online], https://tsapps.nist.gov/publication/get_pdf.cfm?pub_id=913117 (Accessed January 17, 2023)\n+*/\n+\n+/* This software was developed at the National Institute of Standards and\n+ * Technology by employees of the Federal Government in the course of their\n+ * official duties. Pursuant to title 17 Section 105 of the United States\n+ * Code this software is not subject to copyright protection and is in the\n+ * public domain. NIST assumes no responsibility whatsoever for its use by\n+ * other parties, and makes no guarantees, expressed or implied, about its\n+ * quality, reliability, or any other characteristic.\n+\n+ * We would appreciate acknowledgement if the software is used.\n+ * The SAMATE project website is: http://samate.nist.gov\n+*/\n+\n+#include <stdlib.h>\n+\n+int main(int argc, char *argv[])\n+{\n+\tchar bStr[10];\n+\tfor (unsigned i=1;i<=10;++i) {\n+\t\tbStr[i] = (char)i + 'a'; /* { dg-warning \"stack-based buffer overflow\" \"PR analyzer/108432\" { xfail *-*-* } } */\n+\t}\n+\treturn 0;\n+}"}, {"sha": "4031e6d56c3777d8141f667e59c523d44c87bbd8", "filename": "gcc/testsuite/gcc.dg/analyzer/SARD-tc249-basic-00034-min.c", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6a011119bfa038ccbfc9f123ede14a3d6237fab/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2FSARD-tc249-basic-00034-min.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6a011119bfa038ccbfc9f123ede14a3d6237fab/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2FSARD-tc249-basic-00034-min.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2FSARD-tc249-basic-00034-min.c?ref=c6a011119bfa038ccbfc9f123ede14a3d6237fab", "patch": "@@ -0,0 +1,67 @@\n+/* Adapted from https://samate.nist.gov/SARD/test-cases/249/versions/1.0.0\n+   Part of https://samate.nist.gov/SARD/test-suites/81\n+   See:\n+     Black, P. , Koo, H. and Irish, T. (2013), A Basic CWE-121 Buffer Overflow Effectiveness Test Suite, Proc. 6th Latin-American Symposium on Dependable Computing, Rio de Janeiro, -1, [online], https://tsapps.nist.gov/publication/get_pdf.cfm?pub_id=913117 (Accessed January 17, 2023)\n+*/\n+\n+/* Taxonomy Classification: 0000001600030000000100 */\n+\n+/*\n+ *  WRITE/READ               \t 0\twrite\n+ *  WHICH BOUND              \t 0\tupper\n+ *  DATA TYPE                \t 0\tchar\n+ *  MEMORY LOCATION          \t 0\tstack\n+ *  SCOPE                    \t 0\tsame\n+ *  CONTAINER                \t 0\tno\n+ *  POINTER                  \t 1\tyes\n+ *  INDEX COMPLEXITY         \t 6\tN/A\n+ *  ADDRESS COMPLEXITY       \t 0\tconstant\n+ *  LENGTH COMPLEXITY        \t 0\tN/A\n+ *  ADDRESS ALIAS            \t 0\tnone\n+ *  INDEX ALIAS              \t 3\tN/A\n+ *  LOCAL CONTROL FLOW       \t 0\tnone\n+ *  SECONDARY CONTROL FLOW   \t 0\tnone\n+ *  LOOP STRUCTURE           \t 0\tno\n+ *  LOOP COMPLEXITY          \t 0\tN/A\n+ *  ASYNCHRONY               \t 0\tno\n+ *  TAINT                    \t 0\tno\n+ *  RUNTIME ENV. DEPENDENCE  \t 0\tno\n+ *  MAGNITUDE                \t 1\t1 byte\n+ *  CONTINUOUS/DISCRETE      \t 0\tdiscrete\n+ *  SIGNEDNESS               \t 0\tno\n+ */\n+\n+/*\n+Copyright 2004 M.I.T.\n+\n+Permission is hereby granted, without written agreement or royalty fee, to use, \n+copy, modify, and distribute this software and its documentation for any \n+purpose, provided that the above copyright notice and the following three \n+paragraphs appear in all copies of this software.\n+\n+IN NO EVENT SHALL M.I.T. BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT, SPECIAL, \n+INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OF THIS SOFTWARE \n+AND ITS DOCUMENTATION, EVEN IF M.I.T. HAS BEEN ADVISED OF THE POSSIBILITY OF \n+SUCH DAMANGE.\n+\n+M.I.T. SPECIFICALLY DISCLAIMS ANY WARRANTIES INCLUDING, BUT NOT LIMITED TO \n+THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, \n+AND NON-INFRINGEMENT.\n+\n+THE SOFTWARE IS PROVIDED ON AN \"AS-IS\" BASIS AND M.I.T. HAS NO OBLIGATION TO \n+PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.\n+*/\n+\n+\n+int main(int argc, char *argv[])\n+{\n+  char buf[10];\n+\n+\n+  /*  BAD  */\n+  *(buf + 10) = 'A'; /* { dg-warning \"stack-based buffer overflow\" } */\n+  /* { dg-message \"write of 1 byte to beyond the end of 'buf'\" \"note\" { target *-*-* } .-1 } */\n+\n+\n+  return 0;\n+}"}, {"sha": "36c1946b197578dc43ca26f5abe35ad7a286f4e3", "filename": "gcc/testsuite/gcc.dg/analyzer/SARD-tc293-basic-00045-min.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6a011119bfa038ccbfc9f123ede14a3d6237fab/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2FSARD-tc293-basic-00045-min.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6a011119bfa038ccbfc9f123ede14a3d6237fab/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2FSARD-tc293-basic-00045-min.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2FSARD-tc293-basic-00045-min.c?ref=c6a011119bfa038ccbfc9f123ede14a3d6237fab", "patch": "@@ -0,0 +1,69 @@\n+/* Adapted from https://samate.nist.gov/SARD/test-cases/293/versions/1.0.0\n+   Part of https://samate.nist.gov/SARD/test-suites/81\n+   See:\n+     Black, P. , Koo, H. and Irish, T. (2013), A Basic CWE-121 Buffer Overflow Effectiveness Test Suite, Proc. 6th Latin-American Symposium on Dependable Computing, Rio de Janeiro, -1, [online], https://tsapps.nist.gov/publication/get_pdf.cfm?pub_id=913117 (Accessed January 17, 2023)\n+*/\n+\n+/* Taxonomy Classification: 0000300601130000000110 */\n+\n+/*\n+ *  WRITE/READ               \t 0\twrite\n+ *  WHICH BOUND              \t 0\tupper\n+ *  DATA TYPE                \t 0\tchar\n+ *  MEMORY LOCATION          \t 0\tstack\n+ *  SCOPE                    \t 3\tinter-file/inter-proc\n+ *  CONTAINER                \t 0\tno\n+ *  POINTER                  \t 0\tno\n+ *  INDEX COMPLEXITY         \t 6\tN/A\n+ *  ADDRESS COMPLEXITY       \t 0\tconstant\n+ *  LENGTH COMPLEXITY        \t 1\tnone\n+ *  ADDRESS ALIAS            \t 1\tyes, one level\n+ *  INDEX ALIAS              \t 3\tN/A\n+ *  LOCAL CONTROL FLOW       \t 0\tnone\n+ *  SECONDARY CONTROL FLOW   \t 0\tnone\n+ *  LOOP STRUCTURE           \t 0\tno\n+ *  LOOP COMPLEXITY          \t 0\tN/A\n+ *  ASYNCHRONY               \t 0\tno\n+ *  TAINT                    \t 0\tno\n+ *  RUNTIME ENV. DEPENDENCE  \t 0\tno\n+ *  MAGNITUDE                \t 1\t1 byte\n+ *  CONTINUOUS/DISCRETE      \t 1\tcontinuous\n+ *  SIGNEDNESS               \t 0\tno\n+ */\n+\n+/*\n+Copyright 2004 M.I.T.\n+\n+Permission is hereby granted, without written agreement or royalty fee, to use, \n+copy, modify, and distribute this software and its documentation for any \n+purpose, provided that the above copyright notice and the following three \n+paragraphs appear in all copies of this software.\n+\n+IN NO EVENT SHALL M.I.T. BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT, SPECIAL, \n+INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OF THIS SOFTWARE \n+AND ITS DOCUMENTATION, EVEN IF M.I.T. HAS BEEN ADVISED OF THE POSSIBILITY OF \n+SUCH DAMANGE.\n+\n+M.I.T. SPECIFICALLY DISCLAIMS ANY WARRANTIES INCLUDING, BUT NOT LIMITED TO \n+THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, \n+AND NON-INFRINGEMENT.\n+\n+THE SOFTWARE IS PROVIDED ON AN \"AS-IS\" BASIS AND M.I.T. HAS NO OBLIGATION TO \n+PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.\n+*/\n+\n+#include <string.h>\n+\n+int main(int argc, char *argv[])\n+{\n+  char buf[10];\n+\n+\n+  /*  BAD  */\n+  strcpy(buf, \"AAAAAAAAAA\"); /* { dg-warning \"stack-based buffer overflow\" \"analyzer warning\" } */\n+  /* { dg-message \"write of 1 byte to beyond the end of 'buf'\" \"analyzer note\" { target *-*-* } .-1 } */\n+  /* { dg-warning \"'__builtin_memcpy' writing 11 bytes into a region of size 10 overflows the destination\" \"Wstringop-overflow\" { target *-*-* } .-2 } */\n+\n+\n+  return 0;\n+}"}, {"sha": "577dce13f00ee95c2f1eb6729b947df943010782", "filename": "gcc/testsuite/gcc.dg/analyzer/SARD-tc841-basic-00182-min.c", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6a011119bfa038ccbfc9f123ede14a3d6237fab/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2FSARD-tc841-basic-00182-min.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6a011119bfa038ccbfc9f123ede14a3d6237fab/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2FSARD-tc841-basic-00182-min.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2FSARD-tc841-basic-00182-min.c?ref=c6a011119bfa038ccbfc9f123ede14a3d6237fab", "patch": "@@ -0,0 +1,73 @@\n+/* Adapted from https://samate.nist.gov/SARD/test-cases/841/versions/1.0.0\n+   Part of https://samate.nist.gov/SARD/test-suites/81\n+   See:\n+     Black, P. , Koo, H. and Irish, T. (2013), A Basic CWE-121 Buffer Overflow Effectiveness Test Suite, Proc. 6th Latin-American Symposium on Dependable Computing, Rio de Janeiro, -1, [online], https://tsapps.nist.gov/publication/get_pdf.cfm?pub_id=913117 (Accessed January 17, 2023)\n+*/\n+\n+/* Taxonomy Classification: 0000300602130000031110 */\n+\n+/*\n+ *  WRITE/READ               \t 0\twrite\n+ *  WHICH BOUND              \t 0\tupper\n+ *  DATA TYPE                \t 0\tchar\n+ *  MEMORY LOCATION          \t 0\tstack\n+ *  SCOPE                    \t 3\tinter-file/inter-proc\n+ *  CONTAINER                \t 0\tno\n+ *  POINTER                  \t 0\tno\n+ *  INDEX COMPLEXITY         \t 6\tN/A\n+ *  ADDRESS COMPLEXITY       \t 0\tconstant\n+ *  LENGTH COMPLEXITY        \t 2\tconstant\n+ *  ADDRESS ALIAS            \t 1\tyes, one level\n+ *  INDEX ALIAS              \t 3\tN/A\n+ *  LOCAL CONTROL FLOW       \t 0\tnone\n+ *  SECONDARY CONTROL FLOW   \t 0\tnone\n+ *  LOOP STRUCTURE           \t 0\tno\n+ *  LOOP COMPLEXITY          \t 0\tN/A\n+ *  ASYNCHRONY               \t 0\tno\n+ *  TAINT                    \t 3\tfile read\n+ *  RUNTIME ENV. DEPENDENCE  \t 1\tyes\n+ *  MAGNITUDE                \t 1\t1 byte\n+ *  CONTINUOUS/DISCRETE      \t 1\tcontinuous\n+ *  SIGNEDNESS               \t 0\tno\n+ */\n+\n+/*\n+Copyright 2004 M.I.T.\n+\n+Permission is hereby granted, without written agreement or royalty fee, to use, \n+copy, modify, and distribute this software and its documentation for any \n+purpose, provided that the above copyright notice and the following three \n+paragraphs appear in all copies of this software.\n+\n+IN NO EVENT SHALL M.I.T. BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT, SPECIAL, \n+INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OF THIS SOFTWARE \n+AND ITS DOCUMENTATION, EVEN IF M.I.T. HAS BEEN ADVISED OF THE POSSIBILITY OF \n+SUCH DAMANGE.\n+\n+M.I.T. SPECIFICALLY DISCLAIMS ANY WARRANTIES INCLUDING, BUT NOT LIMITED TO \n+THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, \n+AND NON-INFRINGEMENT.\n+\n+THE SOFTWARE IS PROVIDED ON AN \"AS-IS\" BASIS AND M.I.T. HAS NO OBLIGATION TO \n+PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.\n+*/\n+\n+#include <assert.h>\n+#include <stdio.h>\n+\n+int main(int argc, char *argv[])\n+{\n+  FILE * f;\n+  char buf[10];\n+\n+  f = fopen(\"TestInputFile1\", \"r\");\n+  assert(f != NULL);\n+\n+  /*  BAD  */\n+  fgets(buf, 11, f); /* { dg-warning \"stack-based buffer overflow\" \"PR analyzer/105895\" { xfail *-*-* } } */\n+\n+  fclose(f);\n+\n+\n+  return 0;\n+}"}]}