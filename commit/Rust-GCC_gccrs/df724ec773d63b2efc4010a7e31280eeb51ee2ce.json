{"sha": "df724ec773d63b2efc4010a7e31280eeb51ee2ce", "node_id": "C_kwDOANBUbNoAKGRmNzI0ZWM3NzNkNjNiMmVmYzQwMTBhN2UzMTI4MGVlYjUxZWUyY2U", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-06-24T00:16:41Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-06-24T00:16:41Z"}, "message": "Daily bump.", "tree": {"sha": "402b4e9b7d45b01dec2dda58b6d565b42e5eb053", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/402b4e9b7d45b01dec2dda58b6d565b42e5eb053"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df724ec773d63b2efc4010a7e31280eeb51ee2ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df724ec773d63b2efc4010a7e31280eeb51ee2ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df724ec773d63b2efc4010a7e31280eeb51ee2ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df724ec773d63b2efc4010a7e31280eeb51ee2ce/comments", "author": null, "committer": null, "parents": [{"sha": "6c72f1bfc3469422460d86314a081353632d4bcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c72f1bfc3469422460d86314a081353632d4bcb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c72f1bfc3469422460d86314a081353632d4bcb"}], "stats": {"total": 188, "additions": 187, "deletions": 1}, "files": [{"sha": "b94bb620721ef26a3e375e2f9744b85cf7efbcd3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df724ec773d63b2efc4010a7e31280eeb51ee2ce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df724ec773d63b2efc4010a7e31280eeb51ee2ce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=df724ec773d63b2efc4010a7e31280eeb51ee2ce", "patch": "@@ -1,3 +1,50 @@\n+2022-06-23  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* common.opt (fdiagnostics-show-rules): New option.\n+\t* diagnostic-format-json.cc (diagnostic_output_format_init_json):\n+\tFix up context->show_rules.\n+\t* diagnostic-format-sarif.cc\n+\t(diagnostic_output_format_init_sarif): Likewise.\n+\t* diagnostic-metadata.h (diagnostic_metadata::rule): New class.\n+\t(diagnostic_metadata::precanned_rule): New class.\n+\t(diagnostic_metadata::add_rule): New.\n+\t(diagnostic_metadata::get_num_rules): New.\n+\t(diagnostic_metadata::get_rule): New.\n+\t(diagnostic_metadata::m_rules): New field.\n+\t* diagnostic.cc (diagnostic_initialize): Initialize show_rules.\n+\t(print_any_rules): New.\n+\t(diagnostic_report_diagnostic): Call it.\n+\t* diagnostic.h (diagnostic_context::show_rules): New field.\n+\t* doc/invoke.texi (-fno-diagnostics-show-rules): New option.\n+\t* opts.cc (common_handle_option): Handle\n+\tOPT_fdiagnostics_show_rules.\n+\t* toplev.cc (general_init): Set up global_dc->show_rules.\n+\n+2022-06-23  Martin Liska  <mliska@suse.cz>\n+\n+\tPR c++/106062\n+\t* ubsan.cc (sanitize_unreachable_fn): Change order of calls\n+\tin order to initialize UBSAN built-ins.\n+\n+2022-06-23  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/105600\n+\t* ipa-icf.cc (sem_item_optimizer::filter_removed_items):\n+\tSkip variables with body_removed.\n+\n+2022-06-23  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* config/i386/sse.md:(sse4_2_pcmpestr): Replace REGNO with\n+\treg_or_subregno.\n+\t(sse4_2_pcmpistr): Ditto.\n+\n+2022-06-23  Xionghu Luo  <xionghuluo@tencent.com>\n+\n+\t* cgraph.cc (cgraph_edge::redirect_call_stmt_to_callee): Fix\n+\ttypo.\n+\t* tree-ssa-loop-ivopts.cc (struct iv_cand): Likewise.\n+\t* tree-switch-conversion.h: Likewise.\n+\n 2022-06-22  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/104642"}, {"sha": "4956361582c0c66561c2060379cb1fa68d776586", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df724ec773d63b2efc4010a7e31280eeb51ee2ce/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df724ec773d63b2efc4010a7e31280eeb51ee2ce/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=df724ec773d63b2efc4010a7e31280eeb51ee2ce", "patch": "@@ -1 +1 @@\n-20220623\n+20220624"}, {"sha": "7f5e29a088833013828358f1ea54b64cd725ea4d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df724ec773d63b2efc4010a7e31280eeb51ee2ce/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df724ec773d63b2efc4010a7e31280eeb51ee2ce/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=df724ec773d63b2efc4010a7e31280eeb51ee2ce", "patch": "@@ -1,3 +1,74 @@\n+2022-06-23  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/105925\n+\t* call.cc (build_aggr_conv): Don't depend on\n+\tCONSTRUCTOR_IS_DESIGNATED_INIT.\n+\n+2022-06-23  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/105925\n+\t* decl.cc (reshape_init_array_1): Set\n+\tCONSTRUCTOR_IS_DESIGNATED_INIT here.\n+\t(reshape_init_class): And here.\n+\t(reshape_init): Not here.\n+\n+2022-06-23  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/105931\n+\t* expr.cc (fold_for_warn): Don't fold when in an unevaluated\n+\tcontext.\n+\n+2022-06-23  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/105982\n+\t* pt.cc (lookup_template_class): After calling complete_type for\n+\tthe substituted context, check the table again iff the type was\n+\tpreviously incomplete and complete_type made it complete.\n+\n+2022-06-23  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/94554\n+\t* pt.cc (dependent_operand_p): Split out from...\n+\t(tsubst_copy_and_build): ...here.\n+\t(tsubst_expr) [IF_STMT]: Use it.\n+\t* semantics.cc (finish_if_stmt_cond): Keep the pre-conversion\n+\tcondition in the template tree.\n+\n+2022-06-23  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/105885\n+\t* pt.cc (tsubst_copy_and_build): Also suppress -Waddress for\n+\tcomparison of dependent operands.\n+\n+2022-06-23  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* module.cc (struct macro_info): New.\n+\t(struct macro_traits): New.\n+\t(macro_remap, macro_table): New globals.\n+\t(depset::hash::find_dependencies): Note namespace location.\n+\t(module_for_macro_loc): Adjust.\n+\t(module_state::note_location): New.\n+\t(module_state::Write_location): Note location when not\n+\tstreaming. Adjust macro location streaming.\n+\t(module_state::read_location): Adjust macro location\n+\tstreaming.\n+\t(module_state::write_init_maps): New.\n+\t(module_state::write_prepare_maps): Reimplement macro map\n+\tpreparation.\n+\t(module_state::write_macro_maps): Reimplement.\n+\t(module_state::read_macro_maps): Likewise.\n+\t(module_state::write_begin): Adjust.\n+\n+2022-06-23  Jason Merrill  <jason@redhat.com>\n+\n+\t* pt.cc (type_unification_real): An auto tparm can't\n+\tbe affected by other deductions.\n+\n+2022-06-23  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/105964\n+\t* pt.cc (type_dependent_expression_p): Look through BASELINK.\n+\n 2022-06-22  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/105908"}, {"sha": "2704581f1a721c4758f4affeda1f1aa1765b1d4a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df724ec773d63b2efc4010a7e31280eeb51ee2ce/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df724ec773d63b2efc4010a7e31280eeb51ee2ce/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=df724ec773d63b2efc4010a7e31280eeb51ee2ce", "patch": "@@ -1,3 +1,59 @@\n+2022-06-23  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/105925\n+\t* g++.dg/ext/desig4.C: Remove extra errors.\n+\t* g++.dg/cpp2a/desig26.C: New test.\n+\n+2022-06-23  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/105931\n+\t* g++.dg/cpp0x/decltype82a.C: New test.\n+\n+2022-06-23  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/105982\n+\t* g++.dg/cpp1z/class-deduction111.C: New test.\n+\n+2022-06-23  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* gcc.dg/plugin/diagnostic-test-metadata.c: Expect \" [STR34-C]\" to\n+\tbe emitted at the \"gets\" call.\n+\t* gcc.dg/plugin/diagnostic_plugin_test_metadata.c\n+\t(pass_test_metadata::execute): Associate the \"gets\" diagnostic\n+\twith a rule named \"STR34-C\".\n+\n+2022-06-23  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/94554\n+\t* g++.dg/cpp1z/constexpr-if38.C: New test.\n+\n+2022-06-23  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/105885\n+\t* g++.dg/cpp1z/constexpr-if37.C: New test.\n+\n+2022-06-23  Martin Liska  <mliska@suse.cz>\n+\n+\tPR c++/106062\n+\t* gfortran.dg/ubsan/pr106062.f90: New test.\n+\n+2022-06-23  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* g++.dg/modules/loc-prune-1.C: New.\n+\t* g++.dg/modules/loc-prune-2.C: New.\n+\t* g++.dg/modules/loc-prune-3.C: New.\n+\t* g++.dg/modules/pr98718_a.C: Adjust.\n+\t* g++.dg/modules/pr98718_b.C: Adjust.\n+\n+2022-06-23  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.dg/tree-ssa/slsr-39.c: Force vectorization off.\n+\n+2022-06-23  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/105964\n+\t* g++.dg/cpp1z/nontype-auto21.C: New test.\n+\n 2022-06-22  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/105908"}, {"sha": "e210bdb814377d90f46e01da2f736d5dd30aa846", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df724ec773d63b2efc4010a7e31280eeb51ee2ce/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df724ec773d63b2efc4010a7e31280eeb51ee2ce/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=df724ec773d63b2efc4010a7e31280eeb51ee2ce", "patch": "@@ -1,3 +1,15 @@\n+2022-06-23  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/27_io/filesystem/iterators/error_reporting.cc: Use\n+\trmdir to remove directories.\n+\t* testsuite/experimental/filesystem/iterators/error_reporting.cc:\n+\tLikewise.\n+\n+2022-06-23  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/26_numerics/random/random_device/entropy.cc: Use\n+\tnumeric_limits<unsigned>::digits.\n+\n 2022-06-22  Alexandre Oliva  <oliva@adacore.com>\n \n \t* libsupc++/eh_globals.cc [!_GLIBCXX_HAVE_TLS]"}]}