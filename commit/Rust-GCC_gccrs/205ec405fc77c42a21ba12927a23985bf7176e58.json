{"sha": "205ec405fc77c42a21ba12927a23985bf7176e58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA1ZWM0MDVmYzc3YzQyYTIxYmExMjkyN2EyMzk4NWJmNzE3NmU1OA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-02-13T10:37:35Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-02-13T10:37:35Z"}, "message": "re PR middle-end/52209 (wrong code at -O0)\n\n\tPR middle-end/52209\n\t* expr.c (expand_expr_real_2) <case BIT_NOT_EXPR>: Only expand using\n\tXOR for reduce_bit_field if type is unsigned.\n\n\t* gcc.c-torture/execute/pr52209.c: New test.\n\nFrom-SVN: r184151", "tree": {"sha": "ed8769515c0c91e62b83378f6bd7d0b723a42c68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed8769515c0c91e62b83378f6bd7d0b723a42c68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/205ec405fc77c42a21ba12927a23985bf7176e58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/205ec405fc77c42a21ba12927a23985bf7176e58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/205ec405fc77c42a21ba12927a23985bf7176e58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/205ec405fc77c42a21ba12927a23985bf7176e58/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5ac5049603ea4650a07166ee09a6b3c2ae0a01d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ac5049603ea4650a07166ee09a6b3c2ae0a01d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ac5049603ea4650a07166ee09a6b3c2ae0a01d8"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "549af7309c47f6ed3d021ea7ac94f7f557e98fbb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/205ec405fc77c42a21ba12927a23985bf7176e58/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/205ec405fc77c42a21ba12927a23985bf7176e58/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=205ec405fc77c42a21ba12927a23985bf7176e58", "patch": "@@ -1,3 +1,9 @@\n+2012-02-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/52209\n+\t* expr.c (expand_expr_real_2) <case BIT_NOT_EXPR>: Only expand using\n+\tXOR for reduce_bit_field if type is unsigned.\n+\n 2012-02-12  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/sparc/sparc.h (CANNOT_CHANGE_MODE_CLASS): In 64-bit mode,"}, {"sha": "2e716cc328da38bd3afd567c98d14307acda0aa1", "filename": "gcc/expr.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/205ec405fc77c42a21ba12927a23985bf7176e58/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/205ec405fc77c42a21ba12927a23985bf7176e58/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=205ec405fc77c42a21ba12927a23985bf7176e58", "patch": "@@ -8600,8 +8600,9 @@ expand_expr_real_2 (sepops ops, rtx target, enum machine_mode tmode,\n       if (modifier == EXPAND_STACK_PARM)\n \ttarget = 0;\n       /* In case we have to reduce the result to bitfield precision\n-\t expand this as XOR with a proper constant instead.  */\n-      if (reduce_bit_field)\n+\t for unsigned bitfield expand this as XOR with a proper constant\n+\t instead.  */\n+      if (reduce_bit_field && TYPE_UNSIGNED (type))\n \ttemp = expand_binop (mode, xor_optab, op0,\n \t\t\t     immed_double_int_const\n \t\t\t       (double_int_mask (TYPE_PRECISION (type)), mode),"}, {"sha": "e75cc5e60aa436d7fb2eca47b926e6657dfc9be9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/205ec405fc77c42a21ba12927a23985bf7176e58/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/205ec405fc77c42a21ba12927a23985bf7176e58/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=205ec405fc77c42a21ba12927a23985bf7176e58", "patch": "@@ -1,3 +1,8 @@\n+2012-02-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/52209\n+\t* gcc.c-torture/execute/pr52209.c: New test.\n+\n 2012-02-12  Mikael Morin  <mikael@gcc.gnu.org>\n \n \tPR fortran/50981"}, {"sha": "f1d5b1f9cd80135adc28158e5c6f8aa3e396cf4f", "filename": "gcc/testsuite/gcc.c-torture/execute/pr52209.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/205ec405fc77c42a21ba12927a23985bf7176e58/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr52209.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/205ec405fc77c42a21ba12927a23985bf7176e58/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr52209.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr52209.c?ref=205ec405fc77c42a21ba12927a23985bf7176e58", "patch": "@@ -0,0 +1,14 @@\n+/* PR middle-end/52209 */\n+\n+extern void abort (void);\n+struct S0 { int f2 : 1; } c;\n+int b;\n+\n+int\n+main ()\n+{\n+  b = -1 ^ c.f2;\n+  if (b != -1)\n+    abort ();\n+  return 0;\n+}"}]}