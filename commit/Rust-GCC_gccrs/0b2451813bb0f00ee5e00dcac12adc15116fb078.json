{"sha": "0b2451813bb0f00ee5e00dcac12adc15116fb078", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGIyNDUxODEzYmIwZjAwZWU1ZTAwZGNhYzEyYWRjMTUxMTZmYjA3OA==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1998-12-12T21:48:01Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1998-12-12T21:48:01Z"}, "message": "Loks of changes so we can better compile from source.\n\n0\nLoks of changes so we can better compile from source.  See ChangeLog.\n\nFrom-SVN: r24276", "tree": {"sha": "3bcac83cb163136deb55ddd1b2e3ec2778af3c83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bcac83cb163136deb55ddd1b2e3ec2778af3c83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b2451813bb0f00ee5e00dcac12adc15116fb078", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b2451813bb0f00ee5e00dcac12adc15116fb078", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b2451813bb0f00ee5e00dcac12adc15116fb078", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b2451813bb0f00ee5e00dcac12adc15116fb078/comments", "author": null, "committer": null, "parents": [{"sha": "1287b91aeb66432811939ffc2d22ec5b253a3c60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1287b91aeb66432811939ffc2d22ec5b253a3c60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1287b91aeb66432811939ffc2d22ec5b253a3c60"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "ff6829bfa514e3b9bec7054c29851be83985c488", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b2451813bb0f00ee5e00dcac12adc15116fb078/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b2451813bb0f00ee5e00dcac12adc15116fb078/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=0b2451813bb0f00ee5e00dcac12adc15116fb078", "patch": "@@ -1,3 +1,50 @@\n+Sat Dec 12 20:13:19 1998  Per Bothner  <bothner@cygnus.com>\n+\n+\t* class.c (build_class_ref):  Handle PRIMTYPE.class if\n+\tflag_emit_class_files.\n+\t* expr.c (expand_java_field_op):  Don't optimize java.lang.XXX.TYPE\n+\tif flag_emit_class_files.\n+\t* parse.y (java_complete_tree):  Pre-liminary support for\n+\tCOMPONENT_REF - only to handle PRIMCLASS.TYPE.\n+\n+\t* parse.y (patch_synchronized_statement):   Don't call monitorexit\n+ \tunless block CAN_COMPLETE_NORMALLY.  Propagate that flag properly.\n+\n+\t* java-tree.h (DECL_LOCAL_STATIC_VALUE):  Removed - no longer used.\n+\n+\t* zipfile.h (opendir_in_zip):  New declaration.\n+\t* jcf-io.c (saw_java_source):  Moved to jcf-parse.c.\n+\t(opendir_in_zip):  New function, using code from open_in_zip.\n+\t(open_in_zip):  Call opendir_in_zip.\n+\t(find_class):  Remove no-longer-used do_class_file parameter,\n+\tbut add source_ok parameter.  Change logic so if we find a .java file,\n+\twe don't look for .class in later classpath emtries.\n+\t* jcf-parse.c (load_class):  Pass saw_java_source to find_class.\n+\t(jcf_figure_file_type):  Only call open_in_zip if correct magic number.\n+\t* gjavah.c: Update call to find_class.\n+\t* jcf-dump.c:  Likewise.\n+\n+\t* jcf-write.c (put_linenumber):  Handle duplicate line numbers.\n+\t(generate_bytecode_insns):  For EXPR_WITH_FILE_LOCATION, do\n+\tnothing if body is empty_stmt_node.\n+\tVarious little fixes so SP gets correctly adjusted.\n+\tFor NEW_ARRAY_INIT, handle IGNORE_TARGET.\n+\tFor CALL_EXPR, test if static first.\n+\t(generate_classfile):  Ignore fields that are DECL_ARTIFICIAL,\n+\tsuch as the ones we create for Object and Class.\n+\tSet and restore current_function_decl.\n+\t* parse.y:  Check/set IS_AN_IMPORT_ON_DEMAND_P in read_import_dir.\n+\t(note_possible_classname):  New function.\n+\t(read_import_entry):  Removed.  Merged with read_import_dir.\n+\t(read_import_dir):  Don't call find_class - that only gives us\n+\tthe first classpath entry having the needed package.\n+\tUse the struct buffer data structure from buffer.h.\n+\t(read_import_dir, find_in_imports_on_demand):  The remembered\n+\tclass names now use '.' (not '/') as package separator.\n+\n+\t* parse.y (java_complete_expand_methods):  Call write_classfile\n+\there, and not in java_expand_classes (which only gets first class).\n+\n Sat Dec 12 19:46:04 1998  Alexandre Petit-Bianco  <apbianco@sendai.cygnus.com>\n \n \t* parse.y (<type_declaration>):  Do maybe_generate_clinit last."}]}