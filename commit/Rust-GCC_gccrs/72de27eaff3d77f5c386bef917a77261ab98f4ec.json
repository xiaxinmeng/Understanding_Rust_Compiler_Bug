{"sha": "72de27eaff3d77f5c386bef917a77261ab98f4ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJkZTI3ZWFmZjNkNzdmNWMzODZiZWY5MTdhNzcyNjFhYjk4ZjRlYw==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2003-07-15T05:48:16Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-07-15T05:48:16Z"}, "message": "c-opts.c (print_help): Remove.\n\n\t* c-opts.c (print_help): Remove.\n\t(c_common_handle_option): Don't handle --help.\n\t* c.opt: Document some options.\n\t(--help): Remove.\n\t* opts.c (print_filtered_help): New.\n\t(print_help): Use it.\n\nFrom-SVN: r69383", "tree": {"sha": "a219681c12d1765f0429bd62b03b9f0e83fc77eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a219681c12d1765f0429bd62b03b9f0e83fc77eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72de27eaff3d77f5c386bef917a77261ab98f4ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72de27eaff3d77f5c386bef917a77261ab98f4ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72de27eaff3d77f5c386bef917a77261ab98f4ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72de27eaff3d77f5c386bef917a77261ab98f4ec/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2d799c0954764c2eca7f43b720dab2fbf87432ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d799c0954764c2eca7f43b720dab2fbf87432ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d799c0954764c2eca7f43b720dab2fbf87432ef"}], "stats": {"total": 211, "additions": 109, "deletions": 102}, "files": [{"sha": "0b94a6e1b862442b4d0ea4baf6af921386620b25", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72de27eaff3d77f5c386bef917a77261ab98f4ec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72de27eaff3d77f5c386bef917a77261ab98f4ec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=72de27eaff3d77f5c386bef917a77261ab98f4ec", "patch": "@@ -1,3 +1,12 @@\n+2003-07-15  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* c-opts.c (print_help): Remove.\n+\t(c_common_handle_option): Don't handle --help.\n+\t* c.opt: Document some options.\n+\t(--help): Remove.\n+\t* opts.c (print_filtered_help): New.\n+\t(print_help): Use it.\n+\n 2003-07-14  Geoffrey Keating  <geoffk@apple.com>\n \n \t* c-common.c (c_common_type_for_mode): Handle V4DFmode."}, {"sha": "3925c445d6846f245a1d92968aed8c40e481ca25", "filename": "gcc/c-opts.c", "status": "modified", "additions": 0, "deletions": 93, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72de27eaff3d77f5c386bef917a77261ab98f4ec/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72de27eaff3d77f5c386bef917a77261ab98f4ec/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=72de27eaff3d77f5c386bef917a77261ab98f4ec", "patch": "@@ -99,7 +99,6 @@ static size_t include_cursor;\n static bool permit_fortran_options;\n \n static void set_Wimplicit (int);\n-static void print_help (void);\n static void handle_OPT_d (const char *);\n static void set_std_cxx98 (int);\n static void set_std_c89 (int, int);\n@@ -255,10 +254,6 @@ c_common_handle_option (size_t scode, const char *arg, int value)\n       result = permit_fortran_options;\n       break;\n \n-    case OPT__help:\n-      print_help ();\n-      break;\n-\n     case OPT__output_pch_:\n       pch_file = arg;\n       break;\n@@ -1538,91 +1533,3 @@ handle_OPT_d (const char *arg)\n \tbreak;\n       }\n }\n-\n-/* Handle --help output.  */\n-static void\n-print_help (void)\n-{\n-  /* To keep the lines from getting too long for some compilers, limit\n-     to about 500 characters (6 lines) per chunk.  */\n-  fputs (_(\"\\\n-Switches:\\n\\\n-  -include <file>           Include the contents of <file> before other files\\n\\\n-  -imacros <file>           Accept definition of macros in <file>\\n\\\n-  -iprefix <path>           Specify <path> as a prefix for next two options\\n\\\n-  -iwithprefix <dir>        Add <dir> to the end of the system include path\\n\\\n-  -iwithprefixbefore <dir>  Add <dir> to the end of the main include path\\n\\\n-  -isystem <dir>            Add <dir> to the start of the system include path\\n\\\n-\"), stdout);\n-  fputs (_(\"\\\n-  -idirafter <dir>          Add <dir> to the end of the system include path\\n\\\n-  -I <dir>                  Add <dir> to the end of the main include path\\n\\\n-  -I-                       Fine-grained include path control; see info docs\\n\\\n-  -nostdinc                 Do not search system include directories\\n\\\n-                             (dirs specified with -isystem will still be used)\\n\\\n-  -nostdinc++               Do not search system include directories for C++\\n\\\n-  -o <file>                 Put output into <file>\\n\\\n-\"), stdout);\n-  fputs (_(\"\\\n-  -trigraphs                Support ISO C trigraphs\\n\\\n-  -std=<std name>           Specify the conformance standard; one of:\\n\\\n-                            gnu89, gnu99, c89, c99, iso9899:1990,\\n\\\n-                            iso9899:199409, iso9899:1999, c++98\\n\\\n-  -w                        Inhibit warning messages\\n\\\n-  -W[no-]trigraphs          Warn if trigraphs are encountered\\n\\\n-  -W[no-]comment{s}         Warn if one comment starts inside another\\n\\\n-\"), stdout);\n-  fputs (_(\"\\\n-  -W[no-]traditional        Warn about features not present in traditional C\\n\\\n-  -W[no-]undef              Warn if an undefined macro is used by #if\\n\\\n-  -W[no-]import             Warn about the use of the #import directive\\n\\\n-\"), stdout);\n-  fputs (_(\"\\\n-  -W[no-]error              Treat all warnings as errors\\n\\\n-  -W[no-]system-headers     Do not suppress warnings from system headers\\n\\\n-  -W[no-]all                Enable most preprocessor warnings\\n\\\n-\"), stdout);\n-  fputs (_(\"\\\n-  -M                        Generate make dependencies\\n\\\n-  -MM                       As -M, but ignore system header files\\n\\\n-  -MD                       Generate make dependencies and compile\\n\\\n-  -MMD                      As -MD, but ignore system header files\\n\\\n-  -MF <file>                Write dependency output to the given file\\n\\\n-  -MG                       Treat missing header file as generated files\\n\\\n-\"), stdout);\n-  fputs (_(\"\\\n-  -MP\t\t\t    Generate phony targets for all headers\\n\\\n-  -MQ <target>              Add a MAKE-quoted target\\n\\\n-  -MT <target>              Add an unquoted target\\n\\\n-\"), stdout);\n-  fputs (_(\"\\\n-  -D<macro>                 Define a <macro> with string '1' as its value\\n\\\n-  -D<macro>=<val>           Define a <macro> with <val> as its value\\n\\\n-  -A<question>=<answer>     Assert the <answer> to <question>\\n\\\n-  -A-<question>=<answer>    Disable the <answer> to <question>\\n\\\n-  -U<macro>                 Undefine <macro> \\n\\\n-  -v                        Display the version number\\n\\\n-\"), stdout);\n-  fputs (_(\"\\\n-  -H                        Print the name of header files as they are used\\n\\\n-  -C                        Do not discard comments\\n\\\n-  -dM                       Display a list of macro definitions active at end\\n\\\n-  -dD                       Preserve macro definitions in output\\n\\\n-  -dN                       As -dD except that only the names are preserved\\n\\\n-  -dI                       Include #include directives in the output\\n\\\n-\"), stdout);\n-  fputs (_(\"\\\n-  -f[no-]preprocessed       Treat the input file as already preprocessed\\n\\\n-  -ftabstop=<number>        Distance between tab stops for column reporting\\n\\\n-  -ftarget-charset=<c>      Convert all strings and character constants\\n\\\n-                            to character set <c>\\n\\\n-  -ftarget-wide-charset=<c> Convert all wide strings and character constants\\n\\\n-                            to character set <c>\\n\\\n-\"), stdout);\n-  fputs (_(\"\\\n-  -isysroot <dir>           Set <dir> to be the system root directory\\n\\\n-  -P                        Do not generate #line directives\\n\\\n-  -remap                    Remap file names when including files\\n\\\n-  --help                    Display this information\\n\\\n-\"), stdout);\n-}"}, {"sha": "ca0c1d817213bbbc5dcaadd4905c171de12801cc", "filename": "gcc/c.opt", "status": "modified", "additions": 68, "deletions": 4, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72de27eaff3d77f5c386bef917a77261ab98f4ec/gcc%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72de27eaff3d77f5c386bef917a77261ab98f4ec/gcc%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc.opt?ref=72de27eaff3d77f5c386bef917a77261ab98f4ec", "patch": "@@ -67,71 +67,86 @@ C++\n Language\n ObjC++\n \n--help\n-C ObjC C++ ObjC++\n-\n -output-pch=\n C ObjC C++ ObjC++ Joined Separate\n \n A\n C ObjC C++ ObjC++ Joined Separate\n+-A<question>=<answer>\tAssert the <answer> to <question>.  Putting '-' before <question> disables the <answer> to <question>\n \n C\n C ObjC C++ ObjC++\n+Do not discard comments\n \n CC\n C ObjC C++ ObjC++\n+Do not discard comments in macro expansions\n \n D\n C ObjC C++ ObjC++ Joined Separate\n+-D<macro>[=<val>]\tDefine a <macro> with <val> as its value.  If just <macro> is given, <val> is taken to be 1\n \n E\n C ObjC C++ ObjC++\n \n H\n C ObjC C++ ObjC++\n+Print the name of header files as they are used\n \n I\n C ObjC C++ ObjC++ Joined Separate\n+-I <dir>\tAdd <dir> to the end of the main include path.  -I- gives more include path control; see info documentation\n \n M\n C ObjC C++ ObjC++\n+Generate make dependencies\n \n MD\n C ObjC C++ ObjC++ Separate\n+Generate make dependencies and compile\n \n MF\n C ObjC C++ ObjC++ Joined Separate\n+-MF <file>\tWrite dependency output to the given file\n \n MG\n C ObjC C++ ObjC++\n+Treat missing header files as generated files\n \n MM\n C ObjC C++ ObjC++\n+Like -M but ignore system header files\n \n MMD\n C ObjC C++ ObjC++ Separate\n+Like -MD but ignore system header files\n \n MP\n C ObjC C++ ObjC++\n+Generate phony targets for all headers\n \n MQ\n C ObjC C++ ObjC++ Joined Separate\n+-MQ <target>\tAdd a MAKE-quoted target\n \n MT\n C ObjC C++ ObjC++ Joined Separate\n+-MT <target>\tAdd an unquoted target\n \n P\n C ObjC C++ ObjC++\n+Do not generate #line directives\n \n U\n C ObjC C++ ObjC++ Joined Separate\n+-U<macro>\tUndefine <macro>\n \n Wabi\n C++ ObjC++\n \n Wall\n C ObjC C++ ObjC++\n+Enable most preprocessor warnings\n \n Wbad-function-cast\n C ObjC\n@@ -144,9 +159,11 @@ C ObjC C++ ObjC++\n \n Wcomment\n C ObjC C++ ObjC++\n+Warn about possibly nested block comments, and C++ comments spanning more than one physical line\n \n Wcomments\n C ObjC C++ ObjC++\n+Synonym for -Wcomment\n \n Wconversion\n C ObjC C++ ObjC++\n@@ -165,9 +182,11 @@ C++ ObjC++\n \n Wendif-labels\n C ObjC C++ ObjC++\n+Warn about stray tokens after #elif and #endif\n \n Werror\n C ObjC C++ ObjC++\n+; Documented in common.opt\n \n Werror-implicit-function-declaration\n C ObjC RejectNegative\n@@ -207,6 +226,7 @@ C ObjC\n \n Wimport\n C ObjC C++ ObjC++\n+Warn about uses of the #import directive\n \n Winvalid-offsetof\n C++ ObjC++\n@@ -294,24 +314,29 @@ C++ ObjC++\n \n Wsystem-headers\n C ObjC C++ ObjC++\n+Do not suppress warnings from system headers\n \n Wtraditional\n C ObjC\n+Warn about features not present in traditional C\n \n Wtrigraphs\n C ObjC C++ ObjC++\n+Warn if trigraphs are encountered that might affect the meaning of the program\n \n Wundeclared-selector\n ObjC ObjC++\n \n Wundef\n C ObjC C++ ObjC++\n+Warn if an undefined macro is used in an #if directive\n \n Wunknown-pragmas\n C ObjC C++ ObjC++\n \n Wunused-macros\n C ObjC C++ ObjC++\n+Warn about macros defined in the main file that are not used\n \n Wwrite-strings\n C ObjC C++ ObjC++\n@@ -321,6 +346,7 @@ C ObjC C++ ObjC++\n \n d\n C ObjC C++ ObjC++ Joined\n+; Documented in common.opt.  FIXME - what about -dI, -dD, -dN and -dD?\n \n fabi-version=\n C++ ObjC++ Joined UInteger\n@@ -363,6 +389,7 @@ C++ ObjC++\n \n fdollars-in-identifiers\n C ObjC C++ ObjC++\n+Permit '$' as an identifier character\n \n fdump-\n C ObjC C++ ObjC++ Joined RejectNegative\n@@ -378,6 +405,7 @@ C++ ObjC++\n \n fexec-charset=\n C ObjC C++ ObjC++ Joined RejectNegative\n+-fexec-charset=<cset>\tConvert all strings and character constants to character set <cset>\n \n fexternal-templates\n C++ ObjC++\n@@ -459,6 +487,7 @@ C++ ObjC++\n \n fpreprocessed\n C ObjC C++ ObjC++\n+Treat the input file as already preprocessed\n \n frepo\n C++ ObjC++\n@@ -495,6 +524,7 @@ C++ ObjC++\n \n ftabstop=\n C ObjC C++ ObjC++ Joined RejectNegative UInteger\n+-ftabstop=<number>\tDistance between tab stops for column reporting\n \n ftemplate-depth-\n C++ ObjC++ Joined RejectNegative UInteger \n@@ -522,6 +552,7 @@ C++ ObjC++\n \n fwide-exec-charset=\n C ObjC C++ ObjC++ Joined RejectNegative\n+-fwide-exec-charset=<cset>\tConvert all wide strings and character constants to character set <cset>\n \n fxref\n C++ ObjC++\n@@ -531,104 +562,137 @@ ObjC ObjC++\n \n idirafter\n C ObjC C++ ObjC++ Joined Separate\n+-idirafter <dir>\tAdd <dir> to the end of the system include path\n \n imacros\n C ObjC C++ ObjC++ Joined Separate\n+-imacros <file>\tAccept definition of macros in <file>\n \n include\n C ObjC C++ ObjC++ Joined Separate\n+-include <file>\tInclude the contents of <file> before other files\n \n iprefix\n C ObjC C++ ObjC++ Joined Separate\n+-iprefix <path>\tSpecify <path> as a prefix for next two options\n \n isysroot\n C ObjC C++ ObjC++ Joined Separate\n+-isysroot <dir>\tSet <dir> to be the system root directory\n \n isystem\n C ObjC C++ ObjC++ Joined Separate\n+-isystem <dir>\tAdd <dir> to the start of the system include path\n \n iwithprefix\n C ObjC C++ ObjC++ Joined Separate\n+-iwithprefix <dir>\tAdd <dir> to the end of the system include path\n \n iwithprefixbefore\n C ObjC C++ ObjC++ Joined Separate\n+-iwithprefixbefore <dir>\tAdd <dir> to the end of the main include path\n \n lang-asm\n C\n+For internal use only\n \n lang-objc\n C ObjC C++ ObjC++\n+For internal use only\n \n nostdinc\n C ObjC C++ ObjC++\n+Do not search standard system include directories (those specified with -isystem will still be used)\n \n nostdinc++\n-C ObjC C++ ObjC++\n+C++ ObjC++\n+Do not search standard system include directories for C++\n \n o\n C ObjC C++ ObjC++ Joined Separate\n+; Documented in common.opt\n \n pedantic\n C ObjC C++ ObjC++\n+; Documented in common.opt\n \n pedantic-errors\n C ObjC C++ ObjC++\n+; Documented in common.opt\n \n print-objc-runtime-info\n ObjC ObjC++\n \n remap\n C ObjC C++ ObjC++\n+Remap file names when including files\n \n std=c++98\n C++ ObjC++\n+Conform to the ISO 1998 C++ standard\n \n std=c89\n C ObjC\n+Conform to the ISO 1990 C standard\n \n std=c99\n C ObjC\n+Conform to the ISO 1999 C standard\n \n std=c9x\n C ObjC\n+Deprecated in favor of -std=c99\n \n std=gnu++98\n C++ ObjC++\n+Conform to the ISO 1998 C++ standard with GNU extensions\n \n std=gnu89\n C ObjC\n+Conform to the ISO 1990 C standard with GNU extensions\n \n std=gnu99\n C ObjC\n+Conform to the ISO 1999 C standard with GNU extensions\n \n std=gnu9x\n C ObjC\n+Deprecated in favor of -std=gnu99\n \n std=iso9899:1990\n C ObjC\n+Deprecated in favor of -std=c89\n \n std=iso9899:199409\n C ObjC\n+Conform to the ISO 1990 C standard as amended in 1994\n \n std=iso9899:1999\n C ObjC\n+Deprecated in favor of -std=c99\n \n std=iso9899:199x\n C ObjC\n+Deprecated in favor of -std=c99\n \n traditional-cpp\n C ObjC C++ ObjC++\n+Enable traditional preprocessing\n \n trigraphs\n C ObjC C++ ObjC++\n+-trigraphs\tSupport ISO C trigraphs\n \n undef\n C ObjC C++ ObjC++\n+Do not predefine system-specific and GCC-specific macros\n \n v\n C ObjC C++ ObjC++\n+Enable verbose output\n \n w\n C ObjC C++ ObjC++\n+; Documented in common.opt\n \n ; This comment is to ensure we retain the blank line above."}, {"sha": "7a203dcc2ec3ea76fcca8c622a6d7c3a039d2dad", "filename": "gcc/opts.c", "status": "modified", "additions": 32, "deletions": 5, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72de27eaff3d77f5c386bef917a77261ab98f4ec/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72de27eaff3d77f5c386bef917a77261ab98f4ec/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=72de27eaff3d77f5c386bef917a77261ab98f4ec", "patch": "@@ -139,6 +139,7 @@ static void complain_wrong_lang (const char *, const struct cl_option *,\n static void handle_options (unsigned int, const char **, unsigned int);\n static void wrap_help (const char *help, const char *item, int item_width);\n static void print_help (void);\n+static void print_filtered_help (unsigned int flag);\n \n /* Perform a binary search to find which option the command-line INPUT\n    matches.  Returns its index in the option array, and N_OPTS\n@@ -1484,17 +1485,46 @@ fast_math_flags_set_p (void)\n /* Output --help text.  */\n static void\n print_help (void)\n+{\n+  size_t i;\n+\n+  puts (_(\"The following options are language-independent:\\n\"));\n+\n+  print_filtered_help (CL_COMMON);\n+\n+  for (i = 0; lang_names[i]; i++)\n+    {\n+      printf (_(\"\\nThe %s front end recognizes the following options:\\n\"),\n+\t      lang_names[i]);\n+      print_filtered_help (1U << i);\n+    }\n+\n+  puts ( \"\\n\" );\n+  display_help ();\n+}\n+\n+/* Print help for a specific front-end, etc.  */\n+static void\n+print_filtered_help (unsigned int flag)\n {\n   size_t i, len;\n+  unsigned int filter;\n \n-  puts (_(\"\\nThe following options are language-independent:\\n\"));\n+  /* Don't print COMMON options twice.  */\n+  filter = flag;\n+  if (flag != CL_COMMON)\n+    filter |= CL_COMMON;\n \n   for (i = 0; i < cl_options_count; i++)\n     {\n-      const char *help = cl_options[i].help;\n+      const char *help;\n       const char *opt, *tab;\n \n+      if ((cl_options[i].flags & filter) != flag)\n+\tcontinue;\n+\n       /* During transition, ignore switches with no help.  */\n+      help = cl_options[i].help;\n       if (!help)\n \tcontinue;\n \n@@ -1516,9 +1546,6 @@ print_help (void)\n \n       wrap_help (help, opt, len);\n     }\n-\n-  puts ( \"\\n\" );\n-  display_help ();\n }\n \n /* Output ITEM, of length ITEM_WIDTH, in the left column, followed by"}]}