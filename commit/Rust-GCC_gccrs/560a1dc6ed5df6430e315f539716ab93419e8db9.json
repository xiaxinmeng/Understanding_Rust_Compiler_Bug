{"sha": "560a1dc6ed5df6430e315f539716ab93419e8db9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTYwYTFkYzZlZDVkZjY0MzBlMzE1ZjUzOTcxNmFiOTM0MTllOGRiOQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2018-06-01T18:46:23Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2018-06-01T18:46:23Z"}, "message": "rs6000: Fix mangling for 128-bit float\n\nThis patch changes the (C++) mangling of the 128-bit float types.\nIBM long double (\"double-double\") is mangled as \"g\", as before, and\nIEEE 128-bit long double is mangled as \"u9__ieee128\".\n\n\n\t* config/rs6000/rs6000.c (rs6000_mangle_type): Change the mangling of\n\tthe 128-bit floating point types.  Fix function comment.\n\nFrom-SVN: r261078", "tree": {"sha": "f94be7a17d25622029b98f16240db8b8ec8002d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f94be7a17d25622029b98f16240db8b8ec8002d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/560a1dc6ed5df6430e315f539716ab93419e8db9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/560a1dc6ed5df6430e315f539716ab93419e8db9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/560a1dc6ed5df6430e315f539716ab93419e8db9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/560a1dc6ed5df6430e315f539716ab93419e8db9/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ddd3e26e42b8d55989f9964c6ec6ee50b30b1802", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd3e26e42b8d55989f9964c6ec6ee50b30b1802", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddd3e26e42b8d55989f9964c6ec6ee50b30b1802"}], "stats": {"total": 36, "additions": 12, "deletions": 24}, "files": [{"sha": "e064d58861be5e0a9607ae25e316b25b7f0a8f37", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/560a1dc6ed5df6430e315f539716ab93419e8db9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/560a1dc6ed5df6430e315f539716ab93419e8db9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=560a1dc6ed5df6430e315f539716ab93419e8db9", "patch": "@@ -1,3 +1,8 @@\n+2018-06-01  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.c (rs6000_mangle_type): Change the mangling of\n+\tthe 128-bit floating point types.  Fix function comment.\n+\n 2018-06-01  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/aarch64-simd.md"}, {"sha": "c5c9821aeb0c2001a621d0b91d2f15beac01e280", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 7, "deletions": 24, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/560a1dc6ed5df6430e315f539716ab93419e8db9/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/560a1dc6ed5df6430e315f539716ab93419e8db9/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=560a1dc6ed5df6430e315f539716ab93419e8db9", "patch": "@@ -32095,8 +32095,9 @@ rs6000_handle_altivec_attribute (tree *node,\n   return NULL_TREE;\n }\n \n-/* AltiVec defines four built-in scalar types that serve as vector\n-   elements; we must teach the compiler how to mangle them.  */\n+/* AltiVec defines five built-in scalar types that serve as vector\n+   elements; we must teach the compiler how to mangle them.  The 128-bit\n+   floating point mangling is target-specific as well.  */\n \n static const char *\n rs6000_mangle_type (const_tree type)\n@@ -32113,30 +32114,12 @@ rs6000_mangle_type (const_tree type)\n   if (type == bool_int_type_node) return \"U6__booli\";\n   if (type == bool_long_long_type_node) return \"U6__boolx\";\n \n-  /* Use a unique name for __float128 rather than trying to use \"e\" or \"g\". Use\n-     \"g\" for IBM extended double, no matter whether it is long double (using\n-     -mabi=ibmlongdouble) or the distinct __ibm128 type.  */\n-  if (TARGET_FLOAT128_TYPE)\n-    {\n-      if (type == ieee128_float_type_node)\n-\treturn \"U10__float128\";\n-\n-      if (type == ibm128_float_type_node)\n-\treturn \"u8__ibm128\";\n-\n-      if (TARGET_LONG_DOUBLE_128 && type == long_double_type_node)\n-\treturn (TARGET_IEEEQUAD) ? \"U10__float128\" : \"g\";\n-    }\n-\n-  /* Mangle IBM extended float long double as `g' (__float128) on\n-     powerpc*-linux where long-double-64 previously was the default.  */\n-  if (TYPE_MAIN_VARIANT (type) == long_double_type_node\n-      && TARGET_ELF\n-      && TARGET_LONG_DOUBLE_128\n-      && !TARGET_IEEEQUAD)\n+  if (SCALAR_FLOAT_TYPE_P (type) && FLOAT128_IBM_P (TYPE_MODE (type)))\n     return \"g\";\n+  if (SCALAR_FLOAT_TYPE_P (type) && FLOAT128_IEEE_P (TYPE_MODE (type)))\n+    return \"u9__ieee128\";\n \n-  /* For all other types, use normal C++ mangling.  */\n+  /* For all other types, use the default mangling.  */\n   return NULL;\n }\n "}]}