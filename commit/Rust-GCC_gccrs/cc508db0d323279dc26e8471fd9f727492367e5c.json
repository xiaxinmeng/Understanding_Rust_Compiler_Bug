{"sha": "cc508db0d323279dc26e8471fd9f727492367e5c", "node_id": "C_kwDOANBUbNoAKGNjNTA4ZGIwZDMyMzI3OWRjMjZlODQ3MWZkOWY3Mjc0OTIzNjdlNWM", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2022-02-10T11:36:52Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-12T12:38:39Z"}, "message": "[Ada] Do not issue a warning on a postcondition of True or False\n\nDo not issue a warning about the postcondition of a function not\nmentioning its result when this postcondition is statically True or\nFalse, as this is a specification of non-termination (for value False)\nor a hint to SPARK prover for not inlining an expression function (for\nvalue True). In any case, the warning brings no value here.\n\ngcc/ada/\n\n\t* sem_util.adb (Check_Result_And_Post_State): Exempt trivial\n\tpost.", "tree": {"sha": "153b5c9b6cd4972dead1d523df05cbc6f38b9097", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/153b5c9b6cd4972dead1d523df05cbc6f38b9097"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc508db0d323279dc26e8471fd9f727492367e5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc508db0d323279dc26e8471fd9f727492367e5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc508db0d323279dc26e8471fd9f727492367e5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc508db0d323279dc26e8471fd9f727492367e5c/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce19ac123abde3d9c52d52e13a00bbbe60e08722", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce19ac123abde3d9c52d52e13a00bbbe60e08722", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce19ac123abde3d9c52d52e13a00bbbe60e08722"}], "stats": {"total": 44, "additions": 24, "deletions": 20}, "files": [{"sha": "0b7d351721c8600b1d00836fc78d07ee649d57d0", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 24, "deletions": 20, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc508db0d323279dc26e8471fd9f727492367e5c/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc508db0d323279dc26e8471fd9f727492367e5c/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=cc508db0d323279dc26e8471fd9f727492367e5c", "patch": "@@ -4813,6 +4813,9 @@ package body Sem_Util is\n       --  and post-state. Prag is a [refined] postcondition or a contract-cases\n       --  pragma. Result_Seen is set when the pragma mentions attribute 'Result\n \n+      function Is_Trivial_Boolean (N : Node_Id) return Boolean;\n+      --  Determine whether source node N denotes \"True\" or \"False\"\n+\n       -------------------------------------------\n       -- Check_Result_And_Post_State_In_Pragma --\n       -------------------------------------------\n@@ -4836,9 +4839,6 @@ package body Sem_Util is\n          function Is_Function_Result (N : Node_Id) return Traverse_Result;\n          --  Attempt to find attribute 'Result in a subtree denoted by N\n \n-         function Is_Trivial_Boolean (N : Node_Id) return Boolean;\n-         --  Determine whether source node N denotes \"True\" or \"False\"\n-\n          function Mentions_Post_State (N : Node_Id) return Boolean;\n          --  Determine whether a subtree denoted by N mentions any construct\n          --  that denotes a post-state.\n@@ -5089,20 +5089,6 @@ package body Sem_Util is\n             end if;\n          end Is_Function_Result;\n \n-         ------------------------\n-         -- Is_Trivial_Boolean --\n-         ------------------------\n-\n-         function Is_Trivial_Boolean (N : Node_Id) return Boolean is\n-         begin\n-            return\n-              Comes_From_Source (N)\n-                and then Is_Entity_Name (N)\n-                and then (Entity (N) = Standard_True\n-                            or else\n-                          Entity (N) = Standard_False);\n-         end Is_Trivial_Boolean;\n-\n          -------------------------\n          -- Mentions_Post_State --\n          -------------------------\n@@ -5202,6 +5188,20 @@ package body Sem_Util is\n          end if;\n       end Check_Result_And_Post_State_In_Pragma;\n \n+      ------------------------\n+      -- Is_Trivial_Boolean --\n+      ------------------------\n+\n+      function Is_Trivial_Boolean (N : Node_Id) return Boolean is\n+      begin\n+         return\n+           Comes_From_Source (N)\n+             and then Is_Entity_Name (N)\n+             and then (Entity (N) = Standard_True\n+                         or else\n+                       Entity (N) = Standard_False);\n+      end Is_Trivial_Boolean;\n+\n       --  Local variables\n \n       Items        : constant Node_Id := Contract (Subp_Id);\n@@ -5305,10 +5305,14 @@ package body Sem_Util is\n       elsif Present (Case_Prag) and then not Seen_In_Case then\n          Error_Msg_N (\"contract cases do not mention result?.t?\", Case_Prag);\n \n-      --  The function has postconditions only and they do not mention\n-      --  attribute 'Result.\n+      --  The function has non-trivial postconditions only and they do not\n+      --  mention attribute 'Result.\n \n-      elsif Present (Post_Prag) and then not Seen_In_Post then\n+      elsif Present (Post_Prag)\n+        and then not Seen_In_Post\n+        and then not Is_Trivial_Boolean\n+          (Get_Pragma_Arg (First (Pragma_Argument_Associations (Post_Prag))))\n+      then\n          Error_Msg_N\n            (\"postcondition does not mention function result?.t?\", Post_Prag);\n       end if;"}]}