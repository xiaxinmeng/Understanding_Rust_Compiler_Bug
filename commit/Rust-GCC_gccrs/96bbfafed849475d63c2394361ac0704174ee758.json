{"sha": "96bbfafed849475d63c2394361ac0704174ee758", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZiYmZhZmVkODQ5NDc1ZDYzYzIzOTQzNjFhYzA3MDQxNzRlZTc1OA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2001-09-14T07:43:36Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-09-14T07:43:36Z"}, "message": "locale_facets.tcc: Conditionalize use of strtold.\n\n\n2001-09-14  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/bits/locale_facets.tcc: Conditionalize use of strtold.\n\nFrom-SVN: r45591", "tree": {"sha": "9801d82fce246f18afa422f4737b2dbe205d5096", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9801d82fce246f18afa422f4737b2dbe205d5096"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96bbfafed849475d63c2394361ac0704174ee758", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96bbfafed849475d63c2394361ac0704174ee758", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96bbfafed849475d63c2394361ac0704174ee758", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96bbfafed849475d63c2394361ac0704174ee758/comments", "author": null, "committer": null, "parents": [{"sha": "813c20eb74631c805d18b84da3be6983c2a2d8a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/813c20eb74631c805d18b84da3be6983c2a2d8a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/813c20eb74631c805d18b84da3be6983c2a2d8a7"}], "stats": {"total": 43, "additions": 20, "deletions": 23}, "files": [{"sha": "e22c32a05d7991baaf0306824788a22b885b3969", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96bbfafed849475d63c2394361ac0704174ee758/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96bbfafed849475d63c2394361ac0704174ee758/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=96bbfafed849475d63c2394361ac0704174ee758", "patch": "@@ -1,4 +1,8 @@\n-2001-09-13   Benjamin Kosnik  <bkoz@redhat.com>\n+2001-09-14  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/bits/locale_facets.tcc: Conditionalize use of strtold.\n+\n+2001-09-13  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tImplement std::money_get.\n \t* include/bits/locale_facets.tcc (money_get::do_get): Implement."}, {"sha": "b3dcca8d7eaca1a9a3bd7269a9dc35e2e5373513", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 15, "deletions": 22, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96bbfafed849475d63c2394361ac0704174ee758/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96bbfafed849475d63c2394361ac0704174ee758/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=96bbfafed849475d63c2394361ac0704174ee758", "patch": "@@ -244,12 +244,21 @@ namespace std\n       const _CharT* __wcs = __str.c_str();\n       __ctype.narrow(__wcs, __wcs + __str.size() + 1, char(), __cs);      \n \n+#if defined(_GLIBCPP_USE_C99) && !defined(__hpux)\n       char* __sanity;\n       errno = 0;\n       long double __ld = strtold(__cs, &__sanity);\n       if (!(__err & ios_base::failbit)\n           && __sanity != __cs && *__sanity == '\\0' && errno == 0)\n         __units = __ld;\n+#else\n+      typedef typename char_traits<_CharT>::int_type int_type;\n+      long double __ld;\n+      int __p = sscanf(__cs, \"%Lf\", &__ld);\n+      if (!(__err & ios_base::failbit)\n+\t  && __p && static_cast<int_type>(__p) != char_traits<_CharT>::eof())\n+        __units = __ld;\n+#endif\n       return __s;\n     }\n \n@@ -998,7 +1007,6 @@ namespace std\n       return __beg;\n     }\n \n-#if defined(_GLIBCPP_USE_C99) && !defined(__hpux)\n   template<typename _CharT, typename _InIter>\n     _InIter\n     num_get<_CharT, _InIter>::\n@@ -1012,30 +1020,15 @@ namespace std\n       int __base;\n       _M_extract(__beg, __end, __io, __err, __xtrc, __base, true);\n \n+#if defined(_GLIBCPP_USE_C99) && !defined(__hpux)\n       // Stage 2: convert and store results.\n       char* __sanity;\n       errno = 0;\n       long double __ld = strtold(__xtrc, &__sanity);\n       if (!(__err & ios_base::failbit)\n           && __sanity != __xtrc && *__sanity == '\\0' && errno == 0)\n         __v = __ld;\n-      else\n-        __err |= ios_base::failbit;\n-\n-      return __beg;\n-    }\n #else\n-  template<typename _CharT, typename _InIter>\n-    _InIter\n-    num_get<_CharT, _InIter>::\n-    do_get(iter_type __beg, iter_type __end, ios_base& __io,\n-           ios_base::iostate& __err, long double& __v) const\n-    {\n-      // Stage 1: extract\n-      char __xtrc[32]= {'\\0'};\n-      int __base;\n-      _M_extract(__beg, __end, __io, __err, __xtrc, __base, true);\n-\n       // Stage 2: determine a conversion specifier.\n       ios_base::fmtflags __basefield = __io.flags() & ios_base::basefield;\n       const char* __conv;\n@@ -1046,21 +1039,21 @@ namespace std\n       else if (__basefield == 0)\n         __conv = \"%Li\";\n       else\n-        __conv = \"%Lg\";\n+        __conv = \"%Lf\";\n \n       // Stage 3: store results.\n+      typedef typename __traits_type::int_type int_type;\n       long double __ld;\n       int __p = sscanf(__xtrc, __conv, &__ld);\n-      if (__p\n-          && static_cast<typename __traits_type::int_type>(__p)\n-        != __traits_type::eof())\n+      if (!(__err & ios_base::failbit) && __p \n+\t  && static_cast<int_type>(__p) != __traits_type::eof())\n         __v = __ld;\n+#endif\n       else\n         __err |= ios_base::failbit;\n \n       return __beg;\n     }\n-#endif\n \n   template<typename _CharT, typename _InIter>\n     _InIter"}]}