{"sha": "99e87c0eef2f6020a3ded2c785389939c07ac04e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTllODdjMGVlZjJmNjAyMGEzZGVkMmM3ODUzODk5MzljMDdhYzA0ZQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2018-07-06T03:43:42Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-07-06T03:43:42Z"}, "message": "re PR tree-optimization/86010 (redundant memset with smaller size not eliminated)\n\n\tPR tree-optimization/86010\n\t* tree-ssa-dse.c (compute_trims): More aggressively trim at\n\tboth the head and tail of mem* and str* calls.\n\nFrom-SVN: r262464", "tree": {"sha": "a245e7c3e0faad16a8c4a8d04695015e106fccf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a245e7c3e0faad16a8c4a8d04695015e106fccf9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99e87c0eef2f6020a3ded2c785389939c07ac04e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99e87c0eef2f6020a3ded2c785389939c07ac04e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99e87c0eef2f6020a3ded2c785389939c07ac04e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99e87c0eef2f6020a3ded2c785389939c07ac04e/comments", "author": null, "committer": null, "parents": [{"sha": "edace3e2295db80d32b1a77676a3697c5029d71b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edace3e2295db80d32b1a77676a3697c5029d71b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edace3e2295db80d32b1a77676a3697c5029d71b"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "61fc28f076e6b7b112f1f4bb659a311e2b054793", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e87c0eef2f6020a3ded2c785389939c07ac04e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e87c0eef2f6020a3ded2c785389939c07ac04e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=99e87c0eef2f6020a3ded2c785389939c07ac04e", "patch": "@@ -1,3 +1,9 @@\n+2018-07-05  Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/86010\n+\t* tree-ssa-dse.c (compute_trims): More aggressively trim at\n+\tboth the head and tail of mem* and str* calls.\n+\n 2018-07-05  Jim Wilson  <jimw@sifive.com>\n \n \t* config.gcc (riscv*-*-*): When setting xlen, handle riscv-*."}, {"sha": "ebc4a1e0fc1721a0b7e3c9eed0e982463ce18ce5", "filename": "gcc/tree-ssa-dse.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e87c0eef2f6020a3ded2c785389939c07ac04e/gcc%2Ftree-ssa-dse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e87c0eef2f6020a3ded2c785389939c07ac04e/gcc%2Ftree-ssa-dse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dse.c?ref=99e87c0eef2f6020a3ded2c785389939c07ac04e", "patch": "@@ -240,19 +240,27 @@ compute_trims (ao_ref *ref, sbitmap live, int *trim_head, int *trim_tail,\n \n   /* Now identify how much, if any of the tail we can chop off.  */\n   HOST_WIDE_INT const_size;\n+  int last_live = bitmap_last_set_bit (live);\n   if (ref->size.is_constant (&const_size))\n     {\n       int last_orig = (const_size / BITS_PER_UNIT) - 1;\n-      int last_live = bitmap_last_set_bit (live);\n-      *trim_tail = (last_orig - last_live) & ~0x1;\n+      /* We can leave inconvenient amounts on the tail as\n+\t residual handling in mem* and str* functions is usually\n+\t reasonably efficient.  */\n+      *trim_tail = last_orig - last_live;\n     }\n   else\n     *trim_tail = 0;\n \n   /* Identify how much, if any of the head we can chop off.  */\n   int first_orig = 0;\n   int first_live = bitmap_first_set_bit (live);\n-  *trim_head = (first_live - first_orig) & ~0x1;\n+  *trim_head = first_live - first_orig;\n+\n+  /* If more than a word remains, then make sure to keep the\n+     starting point at least word aligned.  */\n+  if (last_live - first_live > UNITS_PER_WORD)\n+    *trim_head &= (UNITS_PER_WORD - 1);\n \n   if ((*trim_head || *trim_tail)\n       && dump_file && (dump_flags & TDF_DETAILS))"}]}