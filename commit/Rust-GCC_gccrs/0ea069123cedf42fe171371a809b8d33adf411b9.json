{"sha": "0ea069123cedf42fe171371a809b8d33adf411b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVhMDY5MTIzY2VkZjQyZmUxNzEzNzFhODA5YjhkMzNhZGY0MTFiOQ==", "commit": {"author": {"name": "Tristan Gingold", "email": "gingold@adacore.com", "date": "2011-11-15T10:25:36Z"}, "committer": {"name": "Tristan Gingold", "email": "gingold@gcc.gnu.org", "date": "2011-11-15T10:25:36Z"}, "message": "incpath.c (get_added_cpp_dirs): New function.\n\n2011-11-15  Tristan Gingold  <gingold@adacore.com>\n\n\t* incpath.c (get_added_cpp_dirs): New function.\n\t* incpath.h (get_added_cpp_dirs): Declare.\n\t* config/vms/vms-c.c (vms_c_register_includes): New function.\n\t(vms_std_modules): New variable.\n\t* config/vms/vms.h (TARGET_EXTRA_INCLUDES): Define.\n\t(vms_c_register_includes): Declare.\n\nFrom-SVN: r181380", "tree": {"sha": "3f2f27c410346ffc56226b6b4ab99b55b2da6904", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f2f27c410346ffc56226b6b4ab99b55b2da6904"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ea069123cedf42fe171371a809b8d33adf411b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ea069123cedf42fe171371a809b8d33adf411b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ea069123cedf42fe171371a809b8d33adf411b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ea069123cedf42fe171371a809b8d33adf411b9/comments", "author": {"login": "gingold-adacore", "id": 16334725, "node_id": "MDQ6VXNlcjE2MzM0NzI1", "avatar_url": "https://avatars.githubusercontent.com/u/16334725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gingold-adacore", "html_url": "https://github.com/gingold-adacore", "followers_url": "https://api.github.com/users/gingold-adacore/followers", "following_url": "https://api.github.com/users/gingold-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/gingold-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/gingold-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gingold-adacore/subscriptions", "organizations_url": "https://api.github.com/users/gingold-adacore/orgs", "repos_url": "https://api.github.com/users/gingold-adacore/repos", "events_url": "https://api.github.com/users/gingold-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/gingold-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e50e723eec48cdf285b27e51fead37b385d5f891", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e50e723eec48cdf285b27e51fead37b385d5f891", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e50e723eec48cdf285b27e51fead37b385d5f891"}], "stats": {"total": 69, "additions": 69, "deletions": 0}, "files": [{"sha": "31e6968c58ef05ebf116484445d5813884b6fb2a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea069123cedf42fe171371a809b8d33adf411b9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea069123cedf42fe171371a809b8d33adf411b9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0ea069123cedf42fe171371a809b8d33adf411b9", "patch": "@@ -1,3 +1,12 @@\n+2011-11-15  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* incpath.c (get_added_cpp_dirs): New function.\n+\t* incpath.h (get_added_cpp_dirs): Declare.\n+\t* config/vms/vms-c.c (vms_c_register_includes): New function.\n+\t(vms_std_modules): New variable.\n+\t* config/vms/vms.h (TARGET_EXTRA_INCLUDES): Define.\n+\t(vms_c_register_includes): Declare.\n+\n 2011-11-15  Tristan Gingold  <gingold@adacore.com>\n \n \t* c-family/c-pragma.h (pragma_extern_prefix): Declare."}, {"sha": "b3e0d955f197d86861fad4ced1c220785af1a026", "filename": "gcc/config/vms/vms-c.c", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea069123cedf42fe171371a809b8d33adf411b9/gcc%2Fconfig%2Fvms%2Fvms-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea069123cedf42fe171371a809b8d33adf411b9/gcc%2Fconfig%2Fvms%2Fvms-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvms%2Fvms-c.c?ref=0ea069123cedf42fe171371a809b8d33adf411b9", "patch": "@@ -283,3 +283,50 @@ vms_c_register_pragma (void)\n   c_register_pragma (NULL, \"__message\", vms_pragma_message);\n   c_register_pragma (NULL, \"__extern_prefix\", vms_pragma_extern_prefix);\n }\n+\n+/* Standard modules list.  */\n+static const char * const vms_std_modules[] = { \"rtldef\", \"starlet_c\", NULL };\n+\n+/* Find include modules in the include path.  */\n+\n+void\n+vms_c_register_includes (const char *sysroot,\n+                         const char *iprefix ATTRIBUTE_UNUSED, int stdinc)\n+{\n+  static const char dir_separator_str[] = { DIR_SEPARATOR, 0 };\n+  struct cpp_dir *dir;\n+\n+  /* Add on standard include pathes.  */\n+  if (!stdinc)\n+    return;\n+\n+  for (dir = get_added_cpp_dirs (SYSTEM); dir != NULL; dir = dir->next)\n+    {\n+      const char * const *lib;\n+      for (lib = vms_std_modules; *lib != NULL; lib++)\n+        {\n+          char *path;\n+          struct stat st;\n+\n+          if (sysroot != NULL)\n+            path = concat (sysroot, dir->name, dir_separator_str, *lib, NULL);\n+          else\n+            path = concat (dir->name, dir_separator_str, *lib, NULL);\n+\n+          if (stat (path, &st) == 0 && S_ISDIR (st.st_mode))\n+            {\n+              cpp_dir *p;\n+\n+              p = XNEW (cpp_dir);\n+              p->next = NULL;\n+              p->name = path;\n+              p->sysp = 1;\n+              p->construct = 0;\n+              p->user_supplied_p = 0;\n+              add_cpp_dir_path (p, SYSTEM);\n+            }\n+          else\n+            free (path);\n+        }\n+    }\n+}"}, {"sha": "62e8636cae4a91c4730a3100f006553975be2a91", "filename": "gcc/config/vms/vms.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea069123cedf42fe171371a809b8d33adf411b9/gcc%2Fconfig%2Fvms%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea069123cedf42fe171371a809b8d33adf411b9/gcc%2Fconfig%2Fvms%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvms%2Fvms.h?ref=0ea069123cedf42fe171371a809b8d33adf411b9", "patch": "@@ -34,6 +34,9 @@ along with GCC; see the file COPYING3.  If not see\n       }                                              \\\n   } while (0)\n \n+extern void vms_c_register_includes (const char *, const char *, int);\n+#define TARGET_EXTRA_INCLUDES vms_c_register_includes\n+\n /* Tell compiler we want to support VMS pragmas */\n #define REGISTER_TARGET_PRAGMAS() vms_c_register_pragma ()\n "}, {"sha": "6b683a053dcc007363ae3bcb0034d9f4f3fe6786", "filename": "gcc/incpath.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea069123cedf42fe171371a809b8d33adf411b9/gcc%2Fincpath.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea069123cedf42fe171371a809b8d33adf411b9/gcc%2Fincpath.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fincpath.c?ref=0ea069123cedf42fe171371a809b8d33adf411b9", "patch": "@@ -460,6 +460,15 @@ register_include_chains (cpp_reader *pfile, const char *sysroot,\n   cpp_set_include_chains (pfile, heads[QUOTE], heads[BRACKET],\n \t\t\t  quote_ignores_source_dir);\n }\n+\n+/* Return the current chain of cpp dirs.  */\n+\n+struct cpp_dir *\n+get_added_cpp_dirs (int chain)\n+{\n+  return heads[chain];\n+}\n+\n #if !(defined TARGET_EXTRA_INCLUDES) || !(defined TARGET_EXTRA_PRE_INCLUDES)\n static void hook_void_charptr_charptr_int (const char *sysroot ATTRIBUTE_UNUSED,\n \t\t\t\t\t   const char *iprefix ATTRIBUTE_UNUSED,"}, {"sha": "4c647a39fe741efb851a575e5a14544eb72d8975", "filename": "gcc/incpath.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea069123cedf42fe171371a809b8d33adf411b9/gcc%2Fincpath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea069123cedf42fe171371a809b8d33adf411b9/gcc%2Fincpath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fincpath.h?ref=0ea069123cedf42fe171371a809b8d33adf411b9", "patch": "@@ -22,6 +22,7 @@ extern void register_include_chains (cpp_reader *, const char *,\n \t\t\t\t     const char *, const char *,\n \t\t\t\t     int, int, int);\n extern void add_cpp_dir_path (struct cpp_dir *, int);\n+extern struct cpp_dir *get_added_cpp_dirs (int);\n \n struct target_c_incpath_s {\n   /* Do extra includes processing.  STDINC is false iff -nostdinc was given.  */"}]}