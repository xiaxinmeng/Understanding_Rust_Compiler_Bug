{"sha": "95d11c1707a97883b62598aef2a6c1b86ed99c49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTVkMTFjMTcwN2E5Nzg4M2I2MjU5OGFlZjJhNmMxYjg2ZWQ5OWM0OQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2018-01-14T14:43:10Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2018-01-14T14:43:10Z"}, "message": "x86: Disallow -mindirect-branch=/-mfunction-return= with -mcmodel=large\n\nSince the thunk function may not be reachable in large code model,\n-mcmodel=large is incompatible with -mindirect-branch=thunk,\n-mindirect-branch=thunk-extern, -mfunction-return=thunk and\n-mfunction-return=thunk-extern.  Issue an error when they are used with\n-mcmodel=large.\n\ngcc/\n\n\t* config/i386/i386.c (ix86_set_indirect_branch_type): Disallow\n\t-mcmodel=large with -mindirect-branch=thunk,\n\t-mindirect-branch=thunk-extern, -mfunction-return=thunk and\n\t-mfunction-return=thunk-extern.\n\t* doc/invoke.texi: Document -mcmodel=large is incompatible with\n\t-mindirect-branch=thunk, -mindirect-branch=thunk-extern,\n\t-mfunction-return=thunk and -mfunction-return=thunk-extern.\n\ngcc/testsuite/\n\n\t* gcc.target/i386/indirect-thunk-10.c: New test.\n\t* gcc.target/i386/indirect-thunk-8.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-9.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-attr-10.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-attr-11.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-attr-9.c: Likewise.\n\t* gcc.target/i386/ret-thunk-17.c: Likewise.\n\t* gcc.target/i386/ret-thunk-18.c: Likewise.\n\t* gcc.target/i386/ret-thunk-19.c: Likewise.\n\t* gcc.target/i386/ret-thunk-20.c: Likewise.\n\t* gcc.target/i386/ret-thunk-21.c: Likewise.\n\nFrom-SVN: r256664", "tree": {"sha": "644b6ad219d131e735470112561e6caaef3f260c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/644b6ad219d131e735470112561e6caaef3f260c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95d11c1707a97883b62598aef2a6c1b86ed99c49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95d11c1707a97883b62598aef2a6c1b86ed99c49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95d11c1707a97883b62598aef2a6c1b86ed99c49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95d11c1707a97883b62598aef2a6c1b86ed99c49/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6abe11c1a3b9f86398134533560bdc57788a93c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6abe11c1a3b9f86398134533560bdc57788a93c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6abe11c1a3b9f86398134533560bdc57788a93c9"}], "stats": {"total": 150, "additions": 150, "deletions": 0}, "files": [{"sha": "4b917f58e3457d1a8d08d55cdc4605cb136e9cfd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=95d11c1707a97883b62598aef2a6c1b86ed99c49", "patch": "@@ -1,3 +1,13 @@\n+2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/i386.c (ix86_set_indirect_branch_type): Disallow\n+\t-mcmodel=large with -mindirect-branch=thunk,\n+\t-mindirect-branch=thunk-extern, -mfunction-return=thunk and\n+\t-mfunction-return=thunk-extern.\n+\t* doc/invoke.texi: Document -mcmodel=large is incompatible with\n+\t-mindirect-branch=thunk, -mindirect-branch=thunk-extern,\n+\t-mfunction-return=thunk and -mfunction-return=thunk-extern.\n+\n 2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/i386.c (print_reg): Print the name of the full"}, {"sha": "9ac4ad6d5ec9ac5e0f3f7ff8a2e9df9bacad3156", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=95d11c1707a97883b62598aef2a6c1b86ed99c49", "patch": "@@ -5841,6 +5841,19 @@ ix86_set_indirect_branch_type (tree fndecl)\n \t}\n       else\n \tcfun->machine->indirect_branch_type = ix86_indirect_branch;\n+\n+      /* -mcmodel=large is not compatible with -mindirect-branch=thunk\n+\t nor -mindirect-branch=thunk-extern.  */\n+      if ((ix86_cmodel == CM_LARGE || ix86_cmodel == CM_LARGE_PIC)\n+\t  && ((cfun->machine->indirect_branch_type\n+\t       == indirect_branch_thunk_extern)\n+\t      || (cfun->machine->indirect_branch_type\n+\t\t  == indirect_branch_thunk)))\n+\terror (\"%<-mindirect-branch=%s%> and %<-mcmodel=large%> are not \"\n+\t       \"compatible\",\n+\t       ((cfun->machine->indirect_branch_type\n+\t\t == indirect_branch_thunk_extern)\n+\t\t? \"thunk-extern\" : \"thunk\"));\n     }\n \n   if (cfun->machine->function_return_type == indirect_branch_unset)\n@@ -5866,6 +5879,19 @@ ix86_set_indirect_branch_type (tree fndecl)\n \t}\n       else\n \tcfun->machine->function_return_type = ix86_function_return;\n+\n+      /* -mcmodel=large is not compatible with -mfunction-return=thunk\n+\t nor -mfunction-return=thunk-extern.  */\n+      if ((ix86_cmodel == CM_LARGE || ix86_cmodel == CM_LARGE_PIC)\n+\t  && ((cfun->machine->function_return_type\n+\t       == indirect_branch_thunk_extern)\n+\t      || (cfun->machine->function_return_type\n+\t\t  == indirect_branch_thunk)))\n+\terror (\"%<-mfunction-return=%s%> and %<-mcmodel=large%> are not \"\n+\t       \"compatible\",\n+\t       ((cfun->machine->function_return_type\n+\t\t == indirect_branch_thunk_extern)\n+\t\t? \"thunk-extern\" : \"thunk\"));\n     }\n }\n "}, {"sha": "9ea765ee22f27284017a505b365db49db600d101", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=95d11c1707a97883b62598aef2a6c1b86ed99c49", "patch": "@@ -26858,6 +26858,11 @@ to external call and return thunk provided in a separate object file.\n You can control this behavior for a specific function by using the\n function attribute @code{indirect_branch}.  @xref{Function Attributes}.\n \n+Note that @option{-mcmodel=large} is incompatible with\n+@option{-mindirect-branch=thunk} nor\n+@option{-mindirect-branch=thunk-extern} since the thunk function may\n+not be reachable in large code model.\n+\n @item -mfunction-return=@var{choice}\n @opindex -mfunction-return\n Convert function return with @var{choice}.  The default is @samp{keep},\n@@ -26869,6 +26874,12 @@ object file.  You can control this behavior for a specific function by\n using the function attribute @code{function_return}.\n @xref{Function Attributes}.\n \n+Note that @option{-mcmodel=large} is incompatible with\n+@option{-mfunction-return=thunk} nor\n+@option{-mfunction-return=thunk-extern} since the thunk function may\n+not be reachable in large code model.\n+\n+\n @item -mindirect-branch-register\n @opindex -mindirect-branch-register\n Force indirect call and jump via register."}, {"sha": "143d59cb970142173d316d57acfc002a011ae7fa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=95d11c1707a97883b62598aef2a6c1b86ed99c49", "patch": "@@ -1,3 +1,17 @@\n+2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* gcc.target/i386/indirect-thunk-10.c: New test.\n+\t* gcc.target/i386/indirect-thunk-8.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-9.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-attr-10.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-attr-11.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-attr-9.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-17.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-18.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-19.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-20.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-21.c: Likewise.\n+\n 2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* gcc.target/i386/indirect-thunk-register-4.c: New test."}, {"sha": "a0674bd2363959db338d52d80fc5535dca30b092", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-10.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-10.c?ref=95d11c1707a97883b62598aef2a6c1b86ed99c49", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile { target { lp64 } } } */\n+/* { dg-options \"-O2 -mindirect-branch=thunk-inline -mfunction-return=keep -mcmodel=large\" } */\n+\n+void\n+bar (void)\n+{\n+}"}, {"sha": "7a80a8986e87b5b034d49301b0bcea83be5f544a", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-8.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-8.c?ref=95d11c1707a97883b62598aef2a6c1b86ed99c49", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile { target { lp64 } } } */\n+/* { dg-options \"-O2 -mindirect-branch=thunk -mfunction-return=keep -mcmodel=large\" } */\n+\n+void\n+bar (void)\n+{ /* { dg-error \"'-mindirect-branch=thunk' and '-mcmodel=large' are not compatible\" } */\n+}"}, {"sha": "d4d45c5114ddf4eacbd11087e5b7af7876f64fe2", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-9.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-9.c?ref=95d11c1707a97883b62598aef2a6c1b86ed99c49", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile { target { lp64 } } } */\n+/* { dg-options \"-O2 -mindirect-branch=thunk-extern -mfunction-return=keep -mcmodel=large\" } */\n+\n+void\n+bar (void)\n+{ /* { dg-error \"'-mindirect-branch=thunk-extern' and '-mcmodel=large' are not compatible\" } */\n+}"}, {"sha": "3a2aeaddbc5c62f476739d100b45b4febe3ed835", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-attr-10.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-10.c?ref=95d11c1707a97883b62598aef2a6c1b86ed99c49", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile { target { lp64 } } } */\n+/* { dg-options \"-O2 -mindirect-branch=keep -mfunction-return=keep -mcmodel=large\" } */\n+/* { dg-additional-options \"-fPIC\" { target fpic } } */\n+\n+__attribute__ ((indirect_branch(\"thunk-extern\")))\n+void\n+bar (void)\n+{ /* { dg-error \"'-mindirect-branch=thunk-extern' and '-mcmodel=large' are not compatible\" } */\n+}"}, {"sha": "8e52f032b6c8c189649a6343e421b24f40d94c92", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-attr-11.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-11.c?ref=95d11c1707a97883b62598aef2a6c1b86ed99c49", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile { target { lp64 } } } */\n+/* { dg-options \"-O2 -mindirect-branch=keep -mfunction-return=keep -mcmodel=large\" } */\n+/* { dg-additional-options \"-fPIC\" { target fpic } } */\n+\n+__attribute__ ((indirect_branch(\"thunk-inline\")))\n+void\n+bar (void)\n+{\n+}"}, {"sha": "bdaa4f6911bd951f0cfe1548f2be0c6ddf69cdc6", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-attr-9.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-9.c?ref=95d11c1707a97883b62598aef2a6c1b86ed99c49", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile { target { lp64 } } } */\n+/* { dg-options \"-O2 -mindirect-branch=keep -mfunction-return=keep -mcmodel=large\" } */\n+/* { dg-additional-options \"-fPIC\" { target fpic } } */\n+\n+__attribute__ ((indirect_branch(\"thunk\")))\n+void\n+bar (void)\n+{ /* { dg-error \"'-mindirect-branch=thunk' and '-mcmodel=large' are not compatible\" } */\n+}"}, {"sha": "0605e2c65424f74228d1b01232e6bf6fce60329d", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-17.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-17.c?ref=95d11c1707a97883b62598aef2a6c1b86ed99c49", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile { target { lp64 } } } */\n+/* { dg-options \"-O2 -mfunction-return=thunk -mindirect-branch=keep -mcmodel=large\" } */\n+\n+void\n+bar (void)\n+{ /* { dg-error \"'-mfunction-return=thunk' and '-mcmodel=large' are not compatible\" } */\n+}"}, {"sha": "307019dc24241d49eb73cf356c32822125d9b8ca", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-18.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-18.c?ref=95d11c1707a97883b62598aef2a6c1b86ed99c49", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile { target { lp64 } } } */\n+/* { dg-options \"-O2 -mfunction-return=thunk-extern -mindirect-branch=keep -mcmodel=large\" } */\n+/* { dg-additional-options \"-fPIC\" { target fpic } } */\n+\n+void\n+bar (void)\n+{ /* { dg-error \"'-mfunction-return=thunk-extern' and '-mcmodel=large' are not compatible\" } */\n+}"}, {"sha": "772617f401023f121dd17354b90c60e2be560f8f", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-19.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-19.c?ref=95d11c1707a97883b62598aef2a6c1b86ed99c49", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile { target { lp64 } } } */\n+/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=keep -mcmodel=large\" } */\n+\n+__attribute__ ((function_return(\"thunk\")))\n+void\n+bar (void)\n+{ /* { dg-error \"'-mfunction-return=thunk' and '-mcmodel=large' are not compatible\" } */\n+}"}, {"sha": "1e9f9bd5a661c9083c837a9d4bd6846e9f020cc1", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-20.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-20.c?ref=95d11c1707a97883b62598aef2a6c1b86ed99c49", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile { target { lp64 } } } */\n+/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=keep -mcmodel=large\" } */\n+/* { dg-additional-options \"-fPIC\" { target fpic } } */\n+\n+__attribute__ ((function_return(\"thunk-extern\")))\n+void\n+bar (void)\n+{ /* { dg-error \"'-mfunction-return=thunk-extern' and '-mcmodel=large' are not compatible\" } */\n+}"}, {"sha": "eea07f7abe11841bb02b60b2de5723a707b67dda", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-21.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95d11c1707a97883b62598aef2a6c1b86ed99c49/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-21.c?ref=95d11c1707a97883b62598aef2a6c1b86ed99c49", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile { target { lp64 } } } */\n+/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=keep -mcmodel=large\" } */\n+/* { dg-additional-options \"-fPIC\" { target fpic } } */\n+\n+__attribute__ ((function_return(\"thunk-inline\")))\n+void\n+bar (void)\n+{\n+}"}]}