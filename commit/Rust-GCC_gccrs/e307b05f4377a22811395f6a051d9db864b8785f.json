{"sha": "e307b05f4377a22811395f6a051d9db864b8785f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTMwN2IwNWY0Mzc3YTIyODExMzk1ZjZhMDUxZDlkYjg2NGI4Nzg1Zg==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2019-11-20T17:51:09Z"}, "committer": {"name": "Julian Brown", "email": "jules@gcc.gnu.org", "date": "2019-11-20T17:51:09Z"}, "message": "OpenACC \"present\" subarrays: runtime API return value and unmapping fixes\n\n\tPR libgomp/92511\n\n\tlibgomp/\n\t* oacc-mem.c (present_create_copy): Fix device pointer return value in\n\tcase of \"present\" subarray.  Use tgt->tgt_start instead of tgt->to_free\n\tin non-present/create case.\n\t(delete_copyout): Change error condition to fail only on copies outside\n\tof mapped block.  Adjust error message accordingly.\n\t* testsuite/libgomp.oacc-c-c++-common/copyin-devptr-1.c: New test.\n\t* testsuite/libgomp.oacc-c-c++-common/copyin-devptr-2.c: New test.\n\t* testsuite/libgomp.oacc-c-c++-common/lib-20.c: Adjust expected error\n\tmessage.\n\t* testsuite/libgomp.oacc-c-c++-common/lib-23.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/lib-22.c: Allow test to pass now.\n\t* testsuite/libgomp.oacc-c-c++-common/lib-30.c: Likewise.\n\nReviewed-by: Thomas Schwinge <thomas@codesourcery.com>\n\nFrom-SVN: r278514", "tree": {"sha": "3b7a12b5b4cd395997af29e9da4c99400e961d52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b7a12b5b4cd395997af29e9da4c99400e961d52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e307b05f4377a22811395f6a051d9db864b8785f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e307b05f4377a22811395f6a051d9db864b8785f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e307b05f4377a22811395f6a051d9db864b8785f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e307b05f4377a22811395f6a051d9db864b8785f/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "070e3489678380354027144c6b0cef02e7601a37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/070e3489678380354027144c6b0cef02e7601a37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/070e3489678380354027144c6b0cef02e7601a37"}], "stats": {"total": 100, "additions": 87, "deletions": 13}, "files": [{"sha": "9d4a34c90a3a2840d053670eb5fcc11b5c14e52f", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e307b05f4377a22811395f6a051d9db864b8785f/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e307b05f4377a22811395f6a051d9db864b8785f/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=e307b05f4377a22811395f6a051d9db864b8785f", "patch": "@@ -1,3 +1,20 @@\n+2019-11-20  Julian Brown  <julian@codesourcery.com>\n+\n+\tPR libgomp/92511\n+\n+\t* oacc-mem.c (present_create_copy): Fix device pointer return value in\n+\tcase of \"present\" subarray.  Use tgt->tgt_start instead of tgt->to_free\n+\tin non-present/create case.\n+\t(delete_copyout): Change error condition to fail only on copies outside\n+\tof mapped block.  Adjust error message accordingly.\n+\t* testsuite/libgomp.oacc-c-c++-common/copyin-devptr-1.c: New test.\n+\t* testsuite/libgomp.oacc-c-c++-common/copyin-devptr-2.c: New test.\n+\t* testsuite/libgomp.oacc-c-c++-common/lib-20.c: Adjust expected error\n+\tmessage.\n+\t* testsuite/libgomp.oacc-c-c++-common/lib-23.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/lib-22.c: Allow test to pass now.\n+\t* testsuite/libgomp.oacc-c-c++-common/lib-30.c: Likewise.\n+\n 2019-11-20  Maciej W. Rozycki  <macro@wdc.com>\n \n \t* testsuite/lib/libgomp.exp (libgomp_init): Add flags to find"}, {"sha": "aafe88d3a1459580c5f02c87bc45f28f43448e3b", "filename": "libgomp/oacc-mem.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e307b05f4377a22811395f6a051d9db864b8785f/libgomp%2Foacc-mem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e307b05f4377a22811395f6a051d9db864b8785f/libgomp%2Foacc-mem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Foacc-mem.c?ref=e307b05f4377a22811395f6a051d9db864b8785f", "patch": "@@ -535,7 +535,7 @@ present_create_copy (unsigned f, void *h, size_t s, int async)\n   if (n)\n     {\n       /* Present. */\n-      d = (void *) (n->tgt->tgt_start + n->tgt_offset);\n+      d = (void *) (n->tgt->tgt_start + n->tgt_offset + h - n->host_start);\n \n       if (!(f & FLAG_PRESENT))\n         {\n@@ -669,7 +669,6 @@ acc_pcopyin (void *h, size_t s)\n static void\n delete_copyout (unsigned f, void *h, size_t s, int async, const char *libfnname)\n {\n-  size_t host_size;\n   splay_tree_key n;\n   void *d;\n   struct goacc_thread *thr = goacc_thread ();\n@@ -703,13 +702,12 @@ delete_copyout (unsigned f, void *h, size_t s, int async, const char *libfnname)\n   d = (void *) (n->tgt->tgt_start + n->tgt_offset\n \t\t+ (uintptr_t) h - n->host_start);\n \n-  host_size = n->host_end - n->host_start;\n-\n-  if (n->host_start != (uintptr_t) h || host_size != s)\n+  if ((uintptr_t) h < n->host_start || (uintptr_t) h + s > n->host_end)\n     {\n+      size_t host_size = n->host_end - n->host_start;\n       gomp_mutex_unlock (&acc_dev->lock);\n-      gomp_fatal (\"[%p,%d] surrounds2 [%p,+%d]\",\n-\t\t  (void *) n->host_start, (int) host_size, (void *) h, (int) s);\n+      gomp_fatal (\"[%p,+%d] outside mapped block [%p,+%d]\",\n+\t\t  (void *) h, (int) s, (void *) n->host_start, (int) host_size);\n     }\n \n   if (n->refcount == REFCOUNT_INFINITY)"}, {"sha": "7e50f3b892e5db04d64210259e9b12c21acbf8fe", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/copyin-devptr-1.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e307b05f4377a22811395f6a051d9db864b8785f/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fcopyin-devptr-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e307b05f4377a22811395f6a051d9db864b8785f/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fcopyin-devptr-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fcopyin-devptr-1.c?ref=e307b05f4377a22811395f6a051d9db864b8785f", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-skip-if \"\" { *-*-* } { \"-DACC_MEM_SHARED=1\" } } */\n+\n+#include <openacc.h>\n+#include <stdlib.h>\n+#include <assert.h>\n+#include <stdint.h>\n+\n+int main (int argc, char* argv[])\n+{\n+  char *myblock = (char *) malloc (1024);\n+  int i;\n+  void *dst;\n+  for (i = 0; i < 1024; i++)\n+    myblock[i] = i;\n+  dst = acc_copyin (myblock, 1024);\n+  for (i = 0; i < 1024; i += 256)\n+    {\n+      void *partdst = acc_pcopyin (&myblock[i], 256);\n+      assert ((uintptr_t) partdst == (uintptr_t) dst + i);\n+    }\n+  for (i = 0; i < 1024; i += 256)\n+    acc_delete (&myblock[i], 256);\n+  assert (acc_is_present (myblock, 1024));\n+  acc_delete (myblock, 1024);\n+  assert (!acc_is_present (myblock, 1024));\n+  free (myblock);\n+  return 0;\n+}"}, {"sha": "00e7da1f128b7ff01f422104ae9f58d5fc47d349", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/copyin-devptr-2.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e307b05f4377a22811395f6a051d9db864b8785f/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fcopyin-devptr-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e307b05f4377a22811395f6a051d9db864b8785f/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fcopyin-devptr-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fcopyin-devptr-2.c?ref=e307b05f4377a22811395f6a051d9db864b8785f", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-skip-if \"\" { *-*-* } { \"-DACC_MEM_SHARED=1\" } } */\n+\n+#include <openacc.h>\n+#include <stdlib.h>\n+#include <assert.h>\n+#include <stdint.h>\n+\n+int main (int argc, char* argv[])\n+{\n+  char *block1 = (char *) malloc (1024);\n+  char *block2 = (char *) malloc (1024);\n+  char *block3 = (char *) malloc (1024);\n+  int i;\n+  void *dst;\n+  for (i = 0; i < 1024; i++)\n+    block1[i] = block2[i] = block3[i] = i;\n+  #pragma acc data copyin(block1[0:1024]) copyin(block2[0:1024]) \\\n+\t\t   copyin(block3[0:1024])\n+  {\n+    dst = acc_deviceptr (block2);\n+    for (i = 0; i < 1024; i += 256)\n+      {\n+\tvoid *partdst = acc_pcopyin (&block2[i], 256);\n+\tassert ((uintptr_t) partdst == (uintptr_t) dst + i);\n+      }\n+  }\n+  assert (acc_is_present (block2, 1024));\n+  for (i = 0; i < 1024; i += 256)\n+    acc_delete (&block2[i], 256);\n+  assert (!acc_is_present (block2, 1024));\n+  free (block1);\n+  free (block2);\n+  free (block3);\n+  return 0;\n+}"}, {"sha": "10d3cbc5cc6faceb5feb0074d0f3bd0c49410875", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/lib-20.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e307b05f4377a22811395f6a051d9db864b8785f/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e307b05f4377a22811395f6a051d9db864b8785f/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-20.c?ref=e307b05f4377a22811395f6a051d9db864b8785f", "patch": "@@ -31,5 +31,5 @@ main (int argc, char **argv)\n }\n \n /* { dg-output \"CheCKpOInT(\\n|\\r\\n|\\r).*\" } */\n-/* { dg-output \"\\\\\\[\\[0-9a-fA-FxX\\]+,256\\\\\\] surrounds2 \\\\\\[\\[0-9a-fA-FxX\\]+,\\\\\\+257\\\\\\]\" } */\n+/* { dg-output \"\\\\\\[\\[0-9a-fA-FxX\\]+,\\\\\\+257\\\\\\] outside mapped block \\\\\\[\\[0-9a-fA-FxX\\]+,\\\\\\+256\\\\\\]\" } */\n /* { dg-shouldfail \"\" } */"}, {"sha": "cb32bbcb652e256635acb9dced4d74bfed50fca5", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/lib-22.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e307b05f4377a22811395f6a051d9db864b8785f/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e307b05f4377a22811395f6a051d9db864b8785f/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-22.c?ref=e307b05f4377a22811395f6a051d9db864b8785f", "patch": "@@ -31,5 +31,3 @@ main (int argc, char **argv)\n }\n \n /* { dg-output \"CheCKpOInT(\\n|\\r\\n|\\r).*\" } */\n-/* { dg-output \"\\\\\\[\\[0-9a-fA-FxX\\]+,256\\\\\\] surrounds2 \\\\\\[\\[0-9a-fA-FxX\\]+,\\\\\\+255\\\\\\]\" } */\n-/* { dg-shouldfail \"\" } */"}, {"sha": "b1f3e71f2788d611dfe19fdc460b91e6fb28a3d0", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/lib-23.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e307b05f4377a22811395f6a051d9db864b8785f/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e307b05f4377a22811395f6a051d9db864b8785f/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-23.c?ref=e307b05f4377a22811395f6a051d9db864b8785f", "patch": "@@ -41,5 +41,5 @@ main (int argc, char **argv)\n }\n \n /* { dg-output \"CheCKpOInT(\\n|\\r\\n|\\r).*\" } */\n-/* { dg-output \"\\\\\\[\\[0-9a-fA-FxX\\]+,256\\\\\\] surrounds2 \\\\\\[\\[0-9a-fA-FxX\\]+,\\\\\\+512\\\\\\]\" } */\n+/* { dg-output \"\\\\\\[\\[0-9a-fA-FxX\\]+,\\\\\\+512\\\\\\] outside mapped block \\\\\\[\\[0-9a-fA-FxX\\]+,\\\\\\+256\\\\\\]\" } */\n /* { dg-shouldfail \"\" } */"}, {"sha": "d0e5ffb069106a42662ed2bd1daecf5034db335f", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/lib-30.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e307b05f4377a22811395f6a051d9db864b8785f/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e307b05f4377a22811395f6a051d9db864b8785f/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-30.c?ref=e307b05f4377a22811395f6a051d9db864b8785f", "patch": "@@ -28,5 +28,3 @@ main (int argc, char **argv)\n }\n \n /* { dg-output \"CheCKpOInT(\\n|\\r\\n|\\r).*\" } */\n-/* { dg-output \"\\\\\\[\\[0-9a-fA-FxX\\]+,256\\\\\\] surrounds2 \\\\\\[\\[0-9a-fA-FxX\\]+,\\\\\\+254\\\\\\]\" } */\n-/* { dg-shouldfail \"\" } */"}]}