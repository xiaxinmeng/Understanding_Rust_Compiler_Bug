{"sha": "5e645e50fb7387fec097496867783b53b36a1a0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWU2NDVlNTBmYjczODdmZWMwOTc0OTY4Njc3ODNiNTNiMzZhMWEwZQ==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1996-11-06T22:56:24Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1996-11-06T22:56:24Z"}, "message": "(parallel inc and branch-if-zero/nonzero): Add two new pattern variants.\n\n(parallel inc and branch-if-zero/nonzero): Add two\nnew pattern variants.  Change incrementing pattern to use incl/jnz.\n\nFrom-SVN: r13104", "tree": {"sha": "38273cb72e3197ce0f2c1899ca97e68e28462557", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38273cb72e3197ce0f2c1899ca97e68e28462557"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e645e50fb7387fec097496867783b53b36a1a0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e645e50fb7387fec097496867783b53b36a1a0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e645e50fb7387fec097496867783b53b36a1a0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e645e50fb7387fec097496867783b53b36a1a0e/comments", "author": null, "committer": null, "parents": [{"sha": "8a0152169477a9a450eaa349991c0140622b5e3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a0152169477a9a450eaa349991c0140622b5e3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a0152169477a9a450eaa349991c0140622b5e3e"}], "stats": {"total": 42, "additions": 38, "deletions": 4}, "files": [{"sha": "b06d9b8888e6f955ad244dc0355ebfbae3cff8f3", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 38, "deletions": 4, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e645e50fb7387fec097496867783b53b36a1a0e/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e645e50fb7387fec097496867783b53b36a1a0e/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=5e645e50fb7387fec097496867783b53b36a1a0e", "patch": "@@ -5771,6 +5771,40 @@\n   return \\\"jc %l1\\\";\n }\")\n \n+(define_insn \"\"\n+  [(set (pc)\n+\t(if_then_else (ne (match_operand:SI 0 \"general_operand\" \"g\")\n+\t\t\t  (const_int 1))\n+\t\t      (label_ref (match_operand 1 \"\" \"\"))\n+\t\t      (pc)))\n+   (set (match_dup 0)\n+\t(plus:SI (match_dup 0)\n+\t\t (const_int -1)))]\n+  \"\"\n+  \"*\n+{\n+  operands[2] = const1_rtx;\n+  output_asm_insn (AS1 (dec%L0,%0), operands);\n+  return \\\"jnz %l1\\\";\n+}\")\n+\n+(define_insn \"\"\n+  [(set (pc)\n+\t(if_then_else (eq (match_operand:SI 0 \"general_operand\" \"g\")\n+\t\t\t  (const_int 1))\n+\t\t      (label_ref (match_operand 1 \"\" \"\"))\n+\t\t      (pc)))\n+   (set (match_dup 0)\n+\t(plus:SI (match_dup 0)\n+\t\t (const_int -1)))]\n+  \"\"\n+  \"*\n+{\n+  operands[2] = const1_rtx;\n+  output_asm_insn (AS1 (dec%L0,%0), operands);\n+  return \\\"jz %l1\\\";\n+}\")\n+\n (define_insn \"\"\n   [(set (pc)\n \t(if_then_else (ne (match_operand:SI 0 \"general_operand\" \"g\")\n@@ -5784,8 +5818,8 @@\n   \"*\n {\n   operands[2] = const1_rtx;\n-  output_asm_insn (AS2 (add%L0,%2,%0), operands);\n-  return \\\"jnc %l1\\\";\n+  output_asm_insn (AS1 (inc%L0,%0), operands);\n+  return \\\"jnz %l1\\\";\n }\")\n \n (define_insn \"\"\n@@ -5801,8 +5835,8 @@\n   \"*\n {\n   operands[2] = const1_rtx;\n-  output_asm_insn (AS2 (add%L0,%2,%0), operands);\n-  return \\\"jc %l1\\\";\n+  output_asm_insn (AS1 (inc%L0,%0), operands);\n+  return \\\"jz %l1\\\";\n }\")\n \n ;; Implement switch statements when generating PIC code.  Switches are"}]}