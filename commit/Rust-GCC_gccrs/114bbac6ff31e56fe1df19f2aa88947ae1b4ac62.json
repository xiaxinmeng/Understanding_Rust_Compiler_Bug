{"sha": "114bbac6ff31e56fe1df19f2aa88947ae1b4ac62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE0YmJhYzZmZjMxZTU2ZmUxZGYxOWYyYWE4ODk0N2FlMWI0YWM2Mg==", "commit": {"author": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2009-10-05T09:25:34Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2009-10-05T09:25:34Z"}, "message": "arm.c (arm_override_options): Really initialize flag_dwarf2_cfi_asm to 0.\n\n2009-10-05  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n\n        * config/arm/arm.c (arm_override_options): Really initialize\n        flag_dwarf2_cfi_asm to 0.\n\nFrom-SVN: r152446", "tree": {"sha": "3060b98ef08342af74269f90bb9a07642fe50b9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3060b98ef08342af74269f90bb9a07642fe50b9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/114bbac6ff31e56fe1df19f2aa88947ae1b4ac62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/114bbac6ff31e56fe1df19f2aa88947ae1b4ac62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/114bbac6ff31e56fe1df19f2aa88947ae1b4ac62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/114bbac6ff31e56fe1df19f2aa88947ae1b4ac62/comments", "author": null, "committer": null, "parents": [{"sha": "56fe3eff33f4376fb5104d8eaf109618cb07fc9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56fe3eff33f4376fb5104d8eaf109618cb07fc9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56fe3eff33f4376fb5104d8eaf109618cb07fc9e"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "4c0221d9306b7f88b2d6b66ada3734c88eb63be4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/114bbac6ff31e56fe1df19f2aa88947ae1b4ac62/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/114bbac6ff31e56fe1df19f2aa88947ae1b4ac62/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=114bbac6ff31e56fe1df19f2aa88947ae1b4ac62", "patch": "@@ -1,7 +1,12 @@\n+2009-10-05  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n+\n+        * config/arm/arm.c (arm_override_options): Really initialize\n+        flag_dwarf2_cfi_asm to 0.\n+\n 2009-10-05  Doug Kwan  <dougkwan@google.com>\n \n \tPR rtl-optimization/41574\n-\tIndex: combine.c (distribute_and_simplify_rtx): Quit if RTX mode is\n+\t* combine.c (distribute_and_simplify_rtx): Quit if RTX mode is\n \tfloating point and we are not doing unsafe math optimizations.\n \n 2009-10-03  Simon Baldwin  <simonb@google.com>"}, {"sha": "fb4e59fff47e7097062eac4a685515339a78562d", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/114bbac6ff31e56fe1df19f2aa88947ae1b4ac62/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/114bbac6ff31e56fe1df19f2aa88947ae1b4ac62/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=114bbac6ff31e56fe1df19f2aa88947ae1b4ac62", "patch": "@@ -1298,13 +1298,6 @@ arm_override_options (void)\n   enum processor_type target_arch_cpu = arm_none;\n   enum processor_type selected_cpu = arm_none;\n \n-  /* Ideally we would want to use CFI directives to generate\n-     debug info.  However this also creates the .eh_frame\n-     section, so disable them until GAS can handle\n-     this properly.  See PR40521. */\n-  if (TARGET_AAPCS_BASED)\n-    flag_dwarf2_cfi_asm = 0;\n-\n   /* Set up the flags based on the cpu/architecture selected by the user.  */\n   for (i = ARRAY_SIZE (arm_select); i--;)\n     {\n@@ -1871,6 +1864,13 @@ arm_override_options (void)\n         max_insns_skipped = 3;\n     }\n \n+  /* Ideally we would want to use CFI directives to generate\n+     debug info.  However this also creates the .eh_frame\n+     section, so disable them until GAS can handle\n+     this properly.  See PR40521. */\n+  if (TARGET_AAPCS_BASED)\n+    flag_dwarf2_cfi_asm = 0;\n+\n   /* Register global variables with the garbage collector.  */\n   arm_add_gc_roots ();\n }"}]}