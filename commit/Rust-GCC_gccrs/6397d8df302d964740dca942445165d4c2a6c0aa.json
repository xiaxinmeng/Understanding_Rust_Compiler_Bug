{"sha": "6397d8df302d964740dca942445165d4c2a6c0aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM5N2Q4ZGYzMDJkOTY0NzQwZGNhOTQyNDQ1MTY1ZDRjMmE2YzBhYQ==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-04-21T10:21:07Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-04-21T10:21:07Z"}, "message": "re PR d/90064 (InSituRegion lacks SPARC64 support)\n\n\tPR d/90064\nlibphobos: Merge upstream phobos 428460ddd\n\nDefines growDownwards on SPARC64, initial patch by Rainer Orth.\n\nBackports another fix to std.process, allowing permissions tests to be\nskipped when running as root.\n\nReviewed-on: https://github.com/dlang/phobos/pull/6962\n\nFrom-SVN: r270483", "tree": {"sha": "0a99e9db971e86cb9d52be240f007d1f99f862f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a99e9db971e86cb9d52be240f007d1f99f862f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6397d8df302d964740dca942445165d4c2a6c0aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6397d8df302d964740dca942445165d4c2a6c0aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6397d8df302d964740dca942445165d4c2a6c0aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6397d8df302d964740dca942445165d4c2a6c0aa/comments", "author": null, "committer": null, "parents": [{"sha": "6d679a7d9d8dbf9bc2c67cc0be747af2a9557314", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d679a7d9d8dbf9bc2c67cc0be747af2a9557314", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d679a7d9d8dbf9bc2c67cc0be747af2a9557314"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "3935c059403399a9f5b8f1390ceb82785cc5a202", "filename": "libphobos/src/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6397d8df302d964740dca942445165d4c2a6c0aa/libphobos%2Fsrc%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6397d8df302d964740dca942445165d4c2a6c0aa/libphobos%2Fsrc%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2FMERGE?ref=6397d8df302d964740dca942445165d4c2a6c0aa", "patch": "@@ -1,4 +1,4 @@\n-cf95639ffd9ed6f3b9d10d98461b2fbd31615757\n+428460ddd8087fa28815e613ff04facb51108a7b\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/phobos repository."}, {"sha": "43dfdb788e5e5e33efd79fc4247a24e0053da497", "filename": "libphobos/src/std/experimental/allocator/building_blocks/region.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6397d8df302d964740dca942445165d4c2a6c0aa/libphobos%2Fsrc%2Fstd%2Fexperimental%2Fallocator%2Fbuilding_blocks%2Fregion.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6397d8df302d964740dca942445165d4c2a6c0aa/libphobos%2Fsrc%2Fstd%2Fexperimental%2Fallocator%2Fbuilding_blocks%2Fregion.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Fexperimental%2Fallocator%2Fbuilding_blocks%2Fregion.d?ref=6397d8df302d964740dca942445165d4c2a6c0aa", "patch": "@@ -395,6 +395,7 @@ struct InSituRegion(size_t size, size_t minAlign = platformAlignment)\n     else version (RISCV32) enum growDownwards = Yes.growDownwards;\n     else version (RISCV64) enum growDownwards = Yes.growDownwards;\n     else version (SPARC) enum growDownwards = Yes.growDownwards;\n+    else version (SPARC64) enum growDownwards = Yes.growDownwards;\n     else version (SystemZ) enum growDownwards = Yes.growDownwards;\n     else static assert(0, \"Dunno how the stack grows on this architecture.\");\n "}, {"sha": "b0310a870d926c3918783d38f4e3759699bc84ec", "filename": "libphobos/src/std/process.d", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6397d8df302d964740dca942445165d4c2a6c0aa/libphobos%2Fsrc%2Fstd%2Fprocess.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6397d8df302d964740dca942445165d4c2a6c0aa/libphobos%2Fsrc%2Fstd%2Fprocess.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Fprocess.d?ref=6397d8df302d964740dca942445165d4c2a6c0aa", "patch": "@@ -1188,13 +1188,16 @@ version (Posix) @system unittest\n     // can't run in directory if user does not have search permission on this directory\n     version (Posix)\n     {\n-        import core.sys.posix.sys.stat : S_IRUSR;\n-        auto directoryNoSearch = uniqueTempPath();\n-        mkdir(directoryNoSearch);\n-        scope(exit) rmdirRecurse(directoryNoSearch);\n-        setAttributes(directoryNoSearch, S_IRUSR);\n-        assertThrown!ProcessException(spawnProcess(prog.path, null, Config.none, directoryNoSearch));\n-        assertThrown!ProcessException(spawnProcess(prog.path, null, Config.detached, directoryNoSearch));\n+        if (core.sys.posix.unistd.getuid() != 0)\n+        {\n+            import core.sys.posix.sys.stat : S_IRUSR;\n+            auto directoryNoSearch = uniqueTempPath();\n+            mkdir(directoryNoSearch);\n+            scope(exit) rmdirRecurse(directoryNoSearch);\n+            setAttributes(directoryNoSearch, S_IRUSR);\n+            assertThrown!ProcessException(spawnProcess(prog.path, null, Config.none, directoryNoSearch));\n+            assertThrown!ProcessException(spawnProcess(prog.path, null, Config.detached, directoryNoSearch));\n+        }\n     }\n }\n "}]}