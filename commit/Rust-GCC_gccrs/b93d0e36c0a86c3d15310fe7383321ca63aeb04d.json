{"sha": "b93d0e36c0a86c3d15310fe7383321ca63aeb04d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjkzZDBlMzZjMGE4NmMzZDE1MzEwZmU3MzgzMzIxY2E2M2FlYjA0ZA==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-01-21T00:16:36Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-01-21T00:16:36Z"}, "message": "Daily bump.", "tree": {"sha": "047d761a084aecf6e7491e7c332d71f3bc31e0ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/047d761a084aecf6e7491e7c332d71f3bc31e0ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b93d0e36c0a86c3d15310fe7383321ca63aeb04d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b93d0e36c0a86c3d15310fe7383321ca63aeb04d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b93d0e36c0a86c3d15310fe7383321ca63aeb04d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b93d0e36c0a86c3d15310fe7383321ca63aeb04d/comments", "author": null, "committer": null, "parents": [{"sha": "fb39c4fe445beab2e2bf9402a8ccb3c541f2aa5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb39c4fe445beab2e2bf9402a8ccb3c541f2aa5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb39c4fe445beab2e2bf9402a8ccb3c541f2aa5c"}], "stats": {"total": 186, "additions": 185, "deletions": 1}, "files": [{"sha": "404e0954b1ec07fc79011c251366a24e5a1aaa72", "filename": "gcc/ChangeLog", "status": "modified", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b93d0e36c0a86c3d15310fe7383321ca63aeb04d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b93d0e36c0a86c3d15310fe7383321ca63aeb04d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b93d0e36c0a86c3d15310fe7383321ca63aeb04d", "patch": "@@ -1,3 +1,82 @@\n+2021-01-20  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64-simd.md (aarch64_get_lane<mode>):\n+\tConvert to define_insn_and_split.  Split into simple move when moving\n+\tbottom element.\n+\n+2021-01-20  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.c (rs6000_emit_le_vsx_store): Change assert.\n+\tAdjust comment.  Simplify code.\n+\n+2021-01-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/98765\n+\t* dwarf2out.c (reset_indirect_string): Also reset indirect strings\n+\twith DW_FORM_line_strp form.\n+\t(prune_unused_types_update_strings): Don't add into debug_str_hash\n+\tindirect strings with DW_FORM_line_strp form.\n+\t(adjust_name_comp_dir): New function.\n+\t(dwarf2out_finish): Call it on CU DIEs after resetting\n+\tdebug_line_str_hash.\n+\n+2021-01-20  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/98722\n+\t* lra-eliminations.c (eliminate_regs_in_insn): Check that target\n+\thas no 3-op add insn to transform insns containing two pluses.\n+\n+2021-01-20  Richard Biener  <rguenther@suse.de>\n+\n+\t* hwint.h (add_hwi): New function.\n+\t(mul_hwi): Likewise.\n+\t* tree-data-ref.c (initialize_matrix_A): Properly translate\n+\ttree constants and avoid HOST_WIDE_INT_MIN.\n+\t(lambda_matrix_row_add): Avoid undefined integer overflow\n+\tand return true on such overflow.\n+\t(lambda_matrix_right_hermite): Handle overflow from\n+\tlambda_matrix_row_add gracefully.  Simplify previous fix.\n+\t(analyze_subscript_affine_affine): Likewise.\n+\n+2021-01-20  Eugene Rozenfeld  <erozen@microsoft.com>\n+\n+\tPR tree-optimization/96674\n+\t* match.pd: New patterns: x < y || y == XXX_MIN --> x <= y - 1\n+\tx >= y && y != XXX_MIN --> x > y - 1\n+\n+2021-01-20  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/98535\n+\t* tree-vect-slp.c (duplicate_and_interleave): Use quick_grow_cleared.\n+\tIf the high and low permutes are the same, remove the high permutes\n+\tfrom the working set and only continue with the low ones.\n+\n+2021-01-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/98721\n+\t* builtins.c (access_ref::inform_access): Don't assume\n+\tSSA_NAME_IDENTIFIER must be non-NULL.  Print messages about\n+\tobject whenever allocfn is NULL, rather than only when DECL_P\n+\tis true.  Use %qE instead of %qD for that.  Formatting fixes.\n+\n+2021-01-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98758\n+\t* tree-data-ref.c (int_divides_p): Use lambda_int arguments.\n+\t(lambda_matrix_right_hermite): Avoid undefinedness with\n+\tsigned integer abs and multiplication.\n+\t(analyze_subscript_affine_affine): Use lambda_int.\n+\n+2021-01-20  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR debug/98751\n+\t* dwarf2out.c (output_line_info): Rename static variable\n+\t\"generation\", moving it out of the function to...\n+\t(output_line_info_generation): New.\n+\t(init_sections_and_labels): Likewise, renaming the variable to...\n+\t(init_sections_and_labels_generation): New.\n+\t(dwarf2out_c_finalize): Reset the new variables.\n+\n 2021-01-19  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/98664"}, {"sha": "3ba1285225c1c66962d179c5fd381296cc32d988", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b93d0e36c0a86c3d15310fe7383321ca63aeb04d/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b93d0e36c0a86c3d15310fe7383321ca63aeb04d/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=b93d0e36c0a86c3d15310fe7383321ca63aeb04d", "patch": "@@ -1 +1 @@\n-20210120\n+20210121"}, {"sha": "0ed6a1b5a61dbc204fa341f7a0a7819fd09adb92", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b93d0e36c0a86c3d15310fe7383321ca63aeb04d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b93d0e36c0a86c3d15310fe7383321ca63aeb04d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b93d0e36c0a86c3d15310fe7383321ca63aeb04d", "patch": "@@ -1,3 +1,31 @@\n+2021-01-20  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* module.cc (bytes_in::i, bytes_in::wi): Avoid left shift of\n+\tsigned type.\n+\n+2021-01-20  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/95434\n+\t* pt.c (tsubst) <case TEMPLATE_TYPE_PARM>: If tsubsting\n+\tCLASS_PLACEHOLDER_TEMPLATE yields a TEMPLATE_TEMPLATE_PARM,\n+\tadjust to its TEMPLATE_TEMPLATE_PARM_TEMPLATE_DECL.\n+\n+2021-01-20  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/82613\n+\t* parser.c (cp_parser_class_head): Defer access checking when\n+\tparsing the base-clause until all bases are seen and attached\n+\tto the class type.\n+\t* pt.c (instantiate_class_template): Likewise when substituting\n+\tinto dependent bases.\n+\n+2021-01-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/98742\n+\t* semantics.c (finish_omp_clauses) <case OMP_CLAUSE_DETACH>: If\n+\terror_operand_p, remove clause without further checking.  Check\n+\tfor non-NULL TYPE_NAME.\n+\n 2021-01-19  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/98659"}, {"sha": "82031a65e9d667ca85141b0728802033ed233237", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b93d0e36c0a86c3d15310fe7383321ca63aeb04d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b93d0e36c0a86c3d15310fe7383321ca63aeb04d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b93d0e36c0a86c3d15310fe7383321ca63aeb04d", "patch": "@@ -1,3 +1,66 @@\n+2021-01-20  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* gcc.dg/torture/ftrapv-2.c: Make overflow instruction unremovable.\n+\n+2021-01-20  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/aarch64/vdup_lane_2.c: Scan for fmov rather than\n+\tdup.\n+\n+2021-01-20  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/98722\n+\t* g++.target/s390/pr98722.C: New.\n+\n+2021-01-20  Eugene Rozenfeld  <erozen@microsoft.com>\n+\n+\tPR tree-optimization/96674\n+\t* gcc.dg/pr96674.c: New tests.\n+\n+2021-01-20  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/95434\n+\t* g++.dg/cpp2a/lambda-generic9.C: New test.\n+\n+2021-01-20  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/82613\n+\t* g++.dg/parse/access12.C: New test.\n+\t* g++.dg/template/access35.C: New test.\n+\n+2021-01-20  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/98535\n+\t* gcc.target/aarch64/sve/pr98535.c: New file.\n+\n+2021-01-20  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/98763\n+\t* gfortran.dg/gomp/task-detach-1.f90: Use integer(1) to avoid\n+\tmissing diagnostic issues with c_intptr_t == default integer kind.\n+\n+2021-01-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/98721\n+\t* gcc.dg/pr98721-1.c: New test.\n+\t* gcc.dg/pr98721-2.c: New test.\n+\n+2021-01-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98758\n+\t* gcc.dg/torture/pr98758.c: New testcase.\n+\n+2021-01-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/98742\n+\t* c-c++-common/gomp/task-detach-2.c: New test.\n+\n+2021-01-20  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/98757\n+\tPR fortran/98476\n+\t* gfortran.dg/gomp/is_device_ptr-2.f90: Fix dg-error.\n+\n 2021-01-19  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* gcc.dg/cpp/ucs.c: Expect Invalid warning for 2byte wchar."}, {"sha": "cbcd07ca1fe114225bea1d3aa890e9a56baf36b7", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b93d0e36c0a86c3d15310fe7383321ca63aeb04d/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b93d0e36c0a86c3d15310fe7383321ca63aeb04d/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=b93d0e36c0a86c3d15310fe7383321ca63aeb04d", "patch": "@@ -1,3 +1,10 @@\n+2021-01-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* task.c (GOMP_task): Rename priority argument to priority_arg,\n+\tadd priority automatic variable and modify that variable.  Instead of\n+\tclearing detach argument when GOMP_TASK_FLAG_DETACH bit is not set,\n+\tcheck flags for that bit.\n+\n 2021-01-19  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/98476"}, {"sha": "52be2ce88e4baa65e86e3e015b4749019c0d427d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b93d0e36c0a86c3d15310fe7383321ca63aeb04d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b93d0e36c0a86c3d15310fe7383321ca63aeb04d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b93d0e36c0a86c3d15310fe7383321ca63aeb04d", "patch": "@@ -1,3 +1,10 @@\n+2021-01-20  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* config/os/aix/ctype_inline.h (bool ctype<char>:: is): Cast\n+\t_OBJ_DATA subscript to unsigned char. Add _THREAD_SAFE access to\n+\t__lc_type.\n+\t(const char* ctype<char>:: is): Same.\n+\n 2021-01-18  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/98725"}]}