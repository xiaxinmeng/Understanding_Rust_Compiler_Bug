{"sha": "47401c4d4bb3b037324a314f183297502c1cb3d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc0MDFjNGQ0YmIzYjAzNzMyNGEzMTRmMTgzMjk3NTAyYzFjYjNkNA==", "commit": {"author": {"name": "David S. Miller", "email": "davem@pierdol.cobaltmicro.com", "date": "1998-10-02T20:17:50Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "1998-10-02T20:17:50Z"}, "message": "function.c (purge_addressof_1): Do not perform endianness corrections on bitpos, who we call will do it for us.\n\n\t* function.c (purge_addressof_1): Do not perform endianness\n\tcorrections on bitpos, who we call will do it for us.\n\nFrom-SVN: r22766", "tree": {"sha": "1e6cb762a97fdda65888ebc52324fdf8bcfa92bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e6cb762a97fdda65888ebc52324fdf8bcfa92bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47401c4d4bb3b037324a314f183297502c1cb3d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47401c4d4bb3b037324a314f183297502c1cb3d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47401c4d4bb3b037324a314f183297502c1cb3d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47401c4d4bb3b037324a314f183297502c1cb3d4/comments", "author": null, "committer": null, "parents": [{"sha": "d01d29035e2120d46d44a9620b76c0d0825b260f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d01d29035e2120d46d44a9620b76c0d0825b260f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d01d29035e2120d46d44a9620b76c0d0825b260f"}], "stats": {"total": 22, "additions": 7, "deletions": 15}, "files": [{"sha": "efcfefa0829d38d0c1dea52d6fdc71343c238545", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47401c4d4bb3b037324a314f183297502c1cb3d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47401c4d4bb3b037324a314f183297502c1cb3d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=47401c4d4bb3b037324a314f183297502c1cb3d4", "patch": "@@ -1,3 +1,8 @@\n+Fri Oct  2 19:14:20 1998  David S. Miller  <davem@pierdol.cobaltmicro.com>\n+\n+\t* function.c (purge_addressof_1): Do not perform endianness\n+\tcorrections on bitpos, who we call will do it for us.\n+\n Fri Oct  2 11:52:35 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* h8300.c (WORD_REG_USED): Fix typo."}, {"sha": "41f400e1c528701b94a10d8665186f1edef9383c", "filename": "gcc/function.c", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47401c4d4bb3b037324a314f183297502c1cb3d4/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47401c4d4bb3b037324a314f183297502c1cb3d4/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=47401c4d4bb3b037324a314f183297502c1cb3d4", "patch": "@@ -2879,21 +2879,8 @@ purge_addressof_1 (loc, insn, force, store)\n \t      /* Do a bitfield insertion to mirror what would happen\n \t\t in memory.  */\n \n-\t      int bitpos;\n \t      rtx val, seq;\n \n-\t      bitpos = 0;\n-\t      if (WORDS_BIG_ENDIAN)\n-\t\t{\n-\t\t  bitpos += (size_sub / BITS_PER_WORD) * BITS_PER_WORD;\n-\t\t  bitpos -= (size_x / BITS_PER_WORD) * BITS_PER_WORD;\n-\t\t}\n-\t      if (BYTES_BIG_ENDIAN)\n-\t\t{\n-\t\t  bitpos += size_sub % BITS_PER_WORD;\n-\t\t  bitpos -= size_x % BITS_PER_WORD;\n-\t\t}\n-\n \t      if (store)\n \t\t{\n \t\t  /* If we can't replace with a register, be afraid.  */\n@@ -2907,7 +2894,7 @@ purge_addressof_1 (loc, insn, force, store)\n \t\t  emit_insn_before (seq, insn);\n \t      \n \t\t  start_sequence ();\n-\t\t  store_bit_field (sub, size_x, bitpos, GET_MODE (x),\n+\t\t  store_bit_field (sub, size_x, 0, GET_MODE (x),\n \t\t\t\t   val, GET_MODE_SIZE (GET_MODE (sub)),\n \t\t\t\t   GET_MODE_SIZE (GET_MODE (sub)));\n \n@@ -2918,7 +2905,7 @@ purge_addressof_1 (loc, insn, force, store)\n \t      else\n \t\t{\n \t\t  start_sequence ();\n-\t\t  val = extract_bit_field (sub, size_x, bitpos, 1, NULL_RTX,\n+\t\t  val = extract_bit_field (sub, size_x, 0, 1, NULL_RTX,\n \t\t\t\t\t   GET_MODE (x), GET_MODE (x),\n \t\t\t\t\t   GET_MODE_SIZE (GET_MODE (sub)),\n \t\t\t\t\t   GET_MODE_SIZE (GET_MODE (sub)));"}]}