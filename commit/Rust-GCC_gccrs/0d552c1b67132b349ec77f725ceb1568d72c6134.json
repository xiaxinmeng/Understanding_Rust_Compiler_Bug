{"sha": "0d552c1b67132b349ec77f725ceb1568d72c6134", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ1NTJjMWI2NzEzMmIzNDllYzc3ZjcyNWNlYjE1NjhkNzJjNjEzNA==", "commit": {"author": {"name": "Ilya Leoshkevich", "email": "iii@linux.ibm.com", "date": "2019-10-15T10:22:35Z"}, "committer": {"name": "Ilya Leoshkevich", "email": "iii@gcc.gnu.org", "date": "2019-10-15T10:22:35Z"}, "message": "[PATCH] S/390: Run %a0:DI splitters only after reload\n\ngcc/ChangeLog:\n\n2019-10-15  Ilya Leoshkevich  <iii@linux.ibm.com>\n\n\t* config/s390/s390.md: Run %a0:DI splitters only after reload.\n\ngcc/testsuite/ChangeLog:\n\n2019-10-15  Ilya Leoshkevich  <iii@linux.ibm.com>\n\n\t* gcc.target/s390/load-thread-pointer-once.c: New test.\n\nFrom-SVN: r276989", "tree": {"sha": "172249d97b0a615879b188349eb7524d0514e464", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/172249d97b0a615879b188349eb7524d0514e464"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d552c1b67132b349ec77f725ceb1568d72c6134", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d552c1b67132b349ec77f725ceb1568d72c6134", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d552c1b67132b349ec77f725ceb1568d72c6134", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d552c1b67132b349ec77f725ceb1568d72c6134/comments", "author": {"login": "iii-i", "id": 45998171, "node_id": "MDQ6VXNlcjQ1OTk4MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/45998171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iii-i", "html_url": "https://github.com/iii-i", "followers_url": "https://api.github.com/users/iii-i/followers", "following_url": "https://api.github.com/users/iii-i/following{/other_user}", "gists_url": "https://api.github.com/users/iii-i/gists{/gist_id}", "starred_url": "https://api.github.com/users/iii-i/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iii-i/subscriptions", "organizations_url": "https://api.github.com/users/iii-i/orgs", "repos_url": "https://api.github.com/users/iii-i/repos", "events_url": "https://api.github.com/users/iii-i/events{/privacy}", "received_events_url": "https://api.github.com/users/iii-i/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "14f020d16d55787f1ddbb8185247ea8dd65dfd9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14f020d16d55787f1ddbb8185247ea8dd65dfd9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14f020d16d55787f1ddbb8185247ea8dd65dfd9a"}], "stats": {"total": 33, "additions": 30, "deletions": 3}, "files": [{"sha": "23213c75c690d31d79e1321a12edda40a11b51e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d552c1b67132b349ec77f725ceb1568d72c6134/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d552c1b67132b349ec77f725ceb1568d72c6134/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d552c1b67132b349ec77f725ceb1568d72c6134", "patch": "@@ -1,3 +1,7 @@\n+2019-10-15  Ilya Leoshkevich  <iii@linux.ibm.com>\n+\n+\t* config/s390/s390.md: Run %a0:DI splitters only after reload.\n+\n 2019-10-15  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/92094"}, {"sha": "1e6439d5fd6408acb7a14cbccbbabcaad0e87b3a", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d552c1b67132b349ec77f725ceb1568d72c6134/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d552c1b67132b349ec77f725ceb1568d72c6134/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=0d552c1b67132b349ec77f725ceb1568d72c6134", "patch": "@@ -1860,10 +1860,17 @@\n                               *,*,yes\")\n ])\n \n+; Splitters for loading/storing TLS pointers from/to %a0:DI.\n+; Do this only during split2, which runs after reload. At the point when split1\n+; runs, some of %a0:DI occurrences might be nested inside other rtxes and thus\n+; not matched. As a result, only some occurrences will be split, which will\n+; prevent CSE. At the point when split2 runs, reload will have ensured that no\n+; nested references exist.\n+\n (define_split\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n         (match_operand:DI 1 \"register_operand\" \"\"))]\n-  \"TARGET_ZARCH && ACCESS_REG_P (operands[1])\"\n+  \"TARGET_ZARCH && ACCESS_REG_P (operands[1]) && reload_completed\"\n   [(set (match_dup 2) (match_dup 3))\n    (set (match_dup 0) (ashift:DI (match_dup 0) (const_int 32)))\n    (set (strict_low_part (match_dup 2)) (match_dup 4))]\n@@ -1873,7 +1880,7 @@\n (define_split\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n         (match_operand:DI 1 \"register_operand\" \"\"))]\n-  \"TARGET_ZARCH && ACCESS_REG_P (operands[0])\n+  \"TARGET_ZARCH && ACCESS_REG_P (operands[0]) && reload_completed\n    && dead_or_set_p (insn, operands[1])\"\n   [(set (match_dup 3) (match_dup 2))\n    (set (match_dup 1) (lshiftrt:DI (match_dup 1) (const_int 32)))\n@@ -1884,7 +1891,7 @@\n (define_split\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n         (match_operand:DI 1 \"register_operand\" \"\"))]\n-  \"TARGET_ZARCH && ACCESS_REG_P (operands[0])\n+  \"TARGET_ZARCH && ACCESS_REG_P (operands[0]) && reload_completed\n    && !dead_or_set_p (insn, operands[1])\"\n   [(set (match_dup 3) (match_dup 2))\n    (set (match_dup 1) (rotate:DI (match_dup 1) (const_int 32)))"}, {"sha": "d70012a8386782018a566b15a6aafad5e26351b3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d552c1b67132b349ec77f725ceb1568d72c6134/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d552c1b67132b349ec77f725ceb1568d72c6134/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0d552c1b67132b349ec77f725ceb1568d72c6134", "patch": "@@ -1,3 +1,7 @@\n+2019-10-15  Ilya Leoshkevich  <iii@linux.ibm.com>\n+\n+\t* gcc.target/s390/load-thread-pointer-once.c: New test.\n+\n 2019-10-15  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/92094"}, {"sha": "21a5bfaa73213aa53286042883577ba6bce545e0", "filename": "gcc/testsuite/gcc.target/s390/load-thread-pointer-once.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d552c1b67132b349ec77f725ceb1568d72c6134/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fload-thread-pointer-once.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d552c1b67132b349ec77f725ceb1568d72c6134/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fload-thread-pointer-once.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fload-thread-pointer-once.c?ref=0d552c1b67132b349ec77f725ceb1568d72c6134", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+__thread void *foo;\n+\n+void *bar()\n+{\n+  return (foo = __builtin_thread_pointer());\n+}\n+\n+/* { dg-final { scan-assembler-times {\\n\\tear\\t} 2 { target { lp64 } } } } */\n+/* { dg-final { scan-assembler-times {\\n\\tear\\t} 1 { target { ! lp64 } } } } */"}]}