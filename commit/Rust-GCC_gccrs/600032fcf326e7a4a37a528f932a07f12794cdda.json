{"sha": "600032fcf326e7a4a37a528f932a07f12794cdda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAwMDMyZmNmMzI2ZTdhNGEzN2E1MjhmOTMyYTA3ZjEyNzk0Y2RkYQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-04T23:21:06Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-04T23:21:06Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1435", "tree": {"sha": "dd32c52a0a8428b5040dfb27a28f92135d7bc046", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd32c52a0a8428b5040dfb27a28f92135d7bc046"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/600032fcf326e7a4a37a528f932a07f12794cdda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/600032fcf326e7a4a37a528f932a07f12794cdda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/600032fcf326e7a4a37a528f932a07f12794cdda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/600032fcf326e7a4a37a528f932a07f12794cdda/comments", "author": null, "committer": null, "parents": [{"sha": "aaff8ce083e45ce200c50cf6855f4f5215806fb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaff8ce083e45ce200c50cf6855f4f5215806fb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaff8ce083e45ce200c50cf6855f4f5215806fb9"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "01db80f3b7502354a233e03e71eb48ac0d46d570", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/600032fcf326e7a4a37a528f932a07f12794cdda/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/600032fcf326e7a4a37a528f932a07f12794cdda/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=600032fcf326e7a4a37a528f932a07f12794cdda", "patch": "@@ -764,7 +764,7 @@ __fixunssfsi (float a)\n \f\n #ifdef L_varargs\n #ifdef __i860__\n-#if defined(SVR4) || defined(__alliant__)\n+#if defined(__svr4__) || defined(__alliant__)\n \tasm (\"\t.text\");\n \tasm (\"\t.align\t4\");\n \n@@ -829,7 +829,7 @@ asm (\"___builtin_saveregs:\");\n \tasm (\"\tbri\t%r1\");\t\t/* delayed return */\n \tasm (\"\tst.l\t%r28,12(%r16)\"); /* pointer to overflow args */\n \n-#else /* not SVR4 */\n+#else /* not __SVR4__ */\n \tasm (\"\t.text\");\n \tasm (\"\t.align\t4\");\n \n@@ -867,7 +867,7 @@ asm (\"___builtin_saveregs:\");\n \tasm (\"\tmov\tr30,sp\");\n \t\t\t\t/* recover stack and pass address to start \n \t\t\t\t   of data.  */\n-#endif /* not SVR4 */\n+#endif /* not __SVR4__ */\n #else /* not __i860__ */\n #ifdef __sparc__\n \tasm (\".global __builtin_saveregs\");"}]}