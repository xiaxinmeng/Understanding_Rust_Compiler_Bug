{"sha": "1bc8b0ad4ee4e500fd8cda2864845553b85986f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJjOGIwYWQ0ZWU0ZTUwMGZkOGNkYTI4NjQ4NDU1NTNiODU5ODZmOA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2003-02-13T21:39:03Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-02-13T21:39:03Z"}, "message": "c++config (_GLIBCPP_EXTERN_TEMPLATE): Define.\n\n\n2003-02-13  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/bits/c++config (_GLIBCPP_EXTERN_TEMPLATE): Define.\n\t* include/bits/basic_ios.tcc: Guard use of extern template.\n\t* include/std/std_iomanip.h: Same.\n\t* include/bits/streambuf.tcc: Same.\n\t* include/bits/stl_alloc.h: Same.\n\t* include/bits/locale_facets.tcc: Same.\n\t* include/bits/ostream.tcc: Same.\n\t* include/bits/istream.tcc: Same.\n\t* include/bits/fstream.tcc: Same.\n\t* include/bits/basic_string.tcc: Same.\n\nFrom-SVN: r62865", "tree": {"sha": "957467e9cfe8cd253254578eff34100be8508d8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/957467e9cfe8cd253254578eff34100be8508d8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bc8b0ad4ee4e500fd8cda2864845553b85986f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bc8b0ad4ee4e500fd8cda2864845553b85986f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bc8b0ad4ee4e500fd8cda2864845553b85986f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bc8b0ad4ee4e500fd8cda2864845553b85986f8/comments", "author": null, "committer": null, "parents": [{"sha": "659efb326d2b75c6b77863540911c41c49acf1f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/659efb326d2b75c6b77863540911c41c49acf1f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/659efb326d2b75c6b77863540911c41c49acf1f1"}], "stats": {"total": 58, "additions": 50, "deletions": 8}, "files": [{"sha": "8901a98b569a230609f4b8fbe97ef6a98046dd9f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bc8b0ad4ee4e500fd8cda2864845553b85986f8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bc8b0ad4ee4e500fd8cda2864845553b85986f8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1bc8b0ad4ee4e500fd8cda2864845553b85986f8", "patch": "@@ -1,3 +1,16 @@\n+2003-02-13  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/bits/c++config (_GLIBCPP_EXTERN_TEMPLATE): Define.\n+\t* include/bits/basic_ios.tcc: Guard use of extern template.\n+\t* include/std/std_iomanip.h: Same.\n+\t* include/bits/streambuf.tcc: Same.\n+\t* include/bits/stl_alloc.h: Same.\n+\t* include/bits/locale_facets.tcc: Same.\n+\t* include/bits/ostream.tcc: Same.\n+\t* include/bits/istream.tcc: Same.\n+\t* include/bits/fstream.tcc: Same.\n+\t* include/bits/basic_string.tcc: Same.\n+\n 2003-02-13  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* include/bits/ostream.tcc (sentry::sentry): Improve"}, {"sha": "876281ae30383d7dd0a05125743651842f932b79", "filename": "libstdc++-v3/include/bits/basic_ios.tcc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bc8b0ad4ee4e500fd8cda2864845553b85986f8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bc8b0ad4ee4e500fd8cda2864845553b85986f8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc?ref=1bc8b0ad4ee4e500fd8cda2864845553b85986f8", "patch": "@@ -1,6 +1,6 @@\n // basic_ios locale and locale-related member functions -*- C++ -*-\n \n-// Copyright (C) 1999, 2001, 2002 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2001, 2002, 2003 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -186,11 +186,13 @@ namespace std\n   // Inhibit implicit instantiations for required instantiations,\n   // which are defined via explicit instantiations elsewhere.  \n   // NB:  This syntax is a GNU extension.\n+#if _GLIBCPP_EXTERN_TEMPLATE\n   extern template class basic_ios<char>;\n \n #ifdef _GLIBCPP_USE_WCHAR_T\n   extern template class basic_ios<wchar_t>;\n #endif\n+#endif\n } // namespace std\n \n #endif "}, {"sha": "f3cb93c31b6882315b75879f0b4e0fa8d4d04ae0", "filename": "libstdc++-v3/include/bits/basic_string.tcc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bc8b0ad4ee4e500fd8cda2864845553b85986f8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bc8b0ad4ee4e500fd8cda2864845553b85986f8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc?ref=1bc8b0ad4ee4e500fd8cda2864845553b85986f8", "patch": "@@ -1,6 +1,6 @@\n // Components for manipulating sequences of characters -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -933,6 +933,7 @@ namespace std\n   // Inhibit implicit instantiations for required instantiations,\n   // which are defined via explicit instantiations elsewhere.  \n   // NB: This syntax is a GNU extension.\n+#if _GLIBCPP_EXTERN_TEMPLATE\n   extern template class basic_string<char>;\n   extern template \n     basic_istream<char>& \n@@ -962,6 +963,7 @@ namespace std\n     basic_istream<wchar_t>& \n     getline(basic_istream<wchar_t>&, wstring&);\n #endif\n+#endif\n } // namespace std\n \n #endif"}, {"sha": "ba8c4f980c6bb362c306bec75c715e876833131f", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bc8b0ad4ee4e500fd8cda2864845553b85986f8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bc8b0ad4ee4e500fd8cda2864845553b85986f8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=1bc8b0ad4ee4e500fd8cda2864845553b85986f8", "patch": "@@ -1,6 +1,7 @@\n // Predefined symbols and macros -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -36,8 +37,7 @@\n // The current version of the C++ library in compressed ISO date format.\n #define __GLIBCPP__ 20030213\n \n-// This is necessary until GCC supports separate template\n-// compilation.  \n+// This is necessary until GCC supports separate template compilation.\n #define _GLIBCPP_NO_TEMPLATE_EXPORT 1\n \n // This is a hack around not having either pre-compiled headers or\n@@ -49,6 +49,16 @@\n // by the compiler, but instead instantiated into the library binary.\n #define _GLIBCPP_FULLY_COMPLIANT_HEADERS 1\n \n+// Allow use of the GNU syntax extension, \"extern template.\" This\n+// extension is fully documented in the g++ manual, but in a nutshell,\n+// it inhibits all implicit instantiations and is used throughout the\n+// library to avoid multiple weak definitions for required types that\n+// are already explicitly instantiated in the library binary. This\n+// substantially reduces the binary size of resulting executables.\n+#ifndef _GLIBCPP_EXTERN_TEMPLATE\n+#define _GLIBCPP_EXTERN_TEMPLATE 1\n+#endif\n+\n // To enable older, ARM-style iostreams and other anachronisms use this.\n //#define _GLIBCPP_DEPRECATED 1\n "}, {"sha": "2c591c389a2011cc450fc0527539a7a18b044528", "filename": "libstdc++-v3/include/bits/fstream.tcc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bc8b0ad4ee4e500fd8cda2864845553b85986f8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bc8b0ad4ee4e500fd8cda2864845553b85986f8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc?ref=1bc8b0ad4ee4e500fd8cda2864845553b85986f8", "patch": "@@ -505,6 +505,7 @@ namespace std\n   // Inhibit implicit instantiations for required instantiations,\n   // which are defined via explicit instantiations elsewhere.  \n   // NB:  This syntax is a GNU extension.\n+#if _GLIBCPP_EXTERN_TEMPLATE\n   extern template class basic_filebuf<char>;\n   extern template class basic_ifstream<char>;\n   extern template class basic_ofstream<char>;\n@@ -516,6 +517,7 @@ namespace std\n   extern template class basic_ofstream<wchar_t>;\n   extern template class basic_fstream<wchar_t>;\n #endif\n+#endif\n } // namespace std\n \n #endif "}, {"sha": "e0ae5ad8507e33fa7a37044a3cd2a186e33bea4e", "filename": "libstdc++-v3/include/bits/istream.tcc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bc8b0ad4ee4e500fd8cda2864845553b85986f8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bc8b0ad4ee4e500fd8cda2864845553b85986f8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc?ref=1bc8b0ad4ee4e500fd8cda2864845553b85986f8", "patch": "@@ -1,6 +1,6 @@\n // istream classes -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -1189,6 +1189,7 @@ namespace std\n   // Inhibit implicit instantiations for required instantiations,\n   // which are defined via explicit instantiations elsewhere.  \n   // NB:  This syntax is a GNU extension.\n+#if _GLIBCPP_EXTERN_TEMPLATE\n   extern template class basic_istream<char>;\n   extern template istream& ws(istream&);\n   extern template istream& operator>>(istream&, char&);\n@@ -1204,4 +1205,5 @@ namespace std\n   extern template wistream& operator>>(wistream&, wchar_t&);\n   extern template wistream& operator>>(wistream&, wchar_t*);\n #endif\n+#endif\n } // namespace std"}, {"sha": "ffb97ea0c9ceb187f3bfe949a68b83cf596f240b", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bc8b0ad4ee4e500fd8cda2864845553b85986f8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bc8b0ad4ee4e500fd8cda2864845553b85986f8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=1bc8b0ad4ee4e500fd8cda2864845553b85986f8", "patch": "@@ -2219,6 +2219,7 @@ namespace std\n   // Inhibit implicit instantiations for required instantiations,\n   // which are defined via explicit instantiations elsewhere.  \n   // NB: This syntax is a GNU extension.\n+#if _GLIBCPP_EXTERN_TEMPLATE\n   extern template class moneypunct<char, false>;\n   extern template class moneypunct<char, true>;\n   extern template class moneypunct_byname<char, false>;\n@@ -2472,6 +2473,7 @@ namespace std\n     bool\n     has_facet<messages<wchar_t> >(const locale&);\n #endif\n+#endif\n } // namespace std\n \n #endif"}, {"sha": "a60dd7207399df9c8f33d759e5c6f2c72977a87a", "filename": "libstdc++-v3/include/bits/ostream.tcc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bc8b0ad4ee4e500fd8cda2864845553b85986f8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bc8b0ad4ee4e500fd8cda2864845553b85986f8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc?ref=1bc8b0ad4ee4e500fd8cda2864845553b85986f8", "patch": "@@ -701,6 +701,7 @@ namespace std\n   // Inhibit implicit instantiations for required instantiations,\n   // which are defined via explicit instantiations elsewhere.  \n   // NB:  This syntax is a GNU extension.\n+#if _GLIBCPP_EXTERN_TEMPLATE\n   extern template class basic_ostream<char>;\n   extern template ostream& endl(ostream&);\n   extern template ostream& ends(ostream&);\n@@ -722,4 +723,5 @@ namespace std\n   extern template wostream& operator<<(wostream&, const wchar_t*);\n   extern template wostream& operator<<(wostream&, const char*);\n #endif\n+#endif\n } // namespace std"}, {"sha": "96b51d18981a5648d74895231b0b82977c3bcb97", "filename": "libstdc++-v3/include/bits/stl_alloc.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bc8b0ad4ee4e500fd8cda2864845553b85986f8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_alloc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bc8b0ad4ee4e500fd8cda2864845553b85986f8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_alloc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_alloc.h?ref=1bc8b0ad4ee4e500fd8cda2864845553b85986f8", "patch": "@@ -898,9 +898,11 @@ namespace std\n   // Inhibit implicit instantiations for required instantiations,\n   // which are defined via explicit instantiations elsewhere.\n   // NB: This syntax is a GNU extension.\n+#if _GLIBCPP_EXTERN_TEMPLATE\n   extern template class allocator<char>;\n   extern template class allocator<wchar_t>;\n   extern template class __pool_alloc<true,0>;\n+#endif\n } // namespace std\n \n #endif"}, {"sha": "e721f25ed91e47426544fa78b3803a59465d1bb6", "filename": "libstdc++-v3/include/bits/streambuf.tcc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bc8b0ad4ee4e500fd8cda2864845553b85986f8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bc8b0ad4ee4e500fd8cda2864845553b85986f8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc?ref=1bc8b0ad4ee4e500fd8cda2864845553b85986f8", "patch": "@@ -1,6 +1,6 @@\n // Stream buffer classes -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -245,6 +245,7 @@ namespace std\n   // Inhibit implicit instantiations for required instantiations,\n   // which are defined via explicit instantiations elsewhere.  \n   // NB:  This syntax is a GNU extension.\n+#if _GLIBCPP_EXTERN_TEMPLATE\n   extern template class basic_streambuf<char>;\n   extern template\n     streamsize\n@@ -258,6 +259,7 @@ namespace std\n     __copy_streambufs(basic_ios<wchar_t>&, basic_streambuf<wchar_t>*,\n \t\t      basic_streambuf<wchar_t>*); \n #endif\n+#endif\n } // namespace std\n \n #endif "}, {"sha": "490d5ac1cfbaaf39b33625b58576c561f7d94537", "filename": "libstdc++-v3/include/std/std_iomanip.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bc8b0ad4ee4e500fd8cda2864845553b85986f8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iomanip.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bc8b0ad4ee4e500fd8cda2864845553b85986f8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iomanip.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iomanip.h?ref=1bc8b0ad4ee4e500fd8cda2864845553b85986f8", "patch": "@@ -1,6 +1,7 @@\n // Standard stream manipulators -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+// Copyright (C) 1997, 1998, 1999, 2001, 2002, 2003\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -265,6 +266,7 @@ namespace std\n   // Inhibit implicit instantiations for required instantiations,\n   // which are defined via explicit instantiations elsewhere.  \n   // NB:  This syntax is a GNU extension.\n+#if _GLIBCPP_EXTERN_TEMPLATE\n   extern template ostream& operator<<(ostream&, _Setfill<char>);\n   extern template ostream& operator<<(ostream&, _Setiosflags);\n   extern template ostream& operator<<(ostream&, _Resetiosflags);\n@@ -292,6 +294,7 @@ namespace std\n   extern template wistream& operator>>(wistream&, _Setprecision);\n   extern template wistream& operator>>(wistream&, _Setw);\n #endif\n+#endif\n } // namespace std\n \n #endif\t"}]}