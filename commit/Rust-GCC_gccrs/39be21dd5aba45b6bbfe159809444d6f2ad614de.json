{"sha": "39be21dd5aba45b6bbfe159809444d6f2ad614de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzliZTIxZGQ1YWJhNDViNmJiZmUxNTk4MDk0NDRkNmYyYWQ2MTRkZQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-12-05T21:45:15Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-12-05T21:45:15Z"}, "message": "re PR tree-optimization/34138 (verify_ssa failed (found real variable when subvariables should have appeared))\n\n2007-12-05  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/34138\n\t* tree-ssa-forwprop.c (tree_ssa_forward_propagate_single_use_vars):\n\tDo not forward propagate addresses if that changes volatileness of\n\tthe pointed-to type.\n\n\t* gcc.c-torture/compile/pr34138.c: New testcase.\n\nFrom-SVN: r130632", "tree": {"sha": "560a457c88a46b8a12942c609706fa03abae2aa0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/560a457c88a46b8a12942c609706fa03abae2aa0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39be21dd5aba45b6bbfe159809444d6f2ad614de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39be21dd5aba45b6bbfe159809444d6f2ad614de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39be21dd5aba45b6bbfe159809444d6f2ad614de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39be21dd5aba45b6bbfe159809444d6f2ad614de/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "60332588d6194a8636748a484f102d8b36eef80d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60332588d6194a8636748a484f102d8b36eef80d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60332588d6194a8636748a484f102d8b36eef80d"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "d257d4924ff0a51ed32aae682b44cd87514bfe76", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39be21dd5aba45b6bbfe159809444d6f2ad614de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39be21dd5aba45b6bbfe159809444d6f2ad614de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=39be21dd5aba45b6bbfe159809444d6f2ad614de", "patch": "@@ -1,3 +1,10 @@\n+2007-12-05  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/34138\n+\t* tree-ssa-forwprop.c (tree_ssa_forward_propagate_single_use_vars):\n+\tDo not forward propagate addresses if that changes volatileness of\n+\tthe pointed-to type.\n+\n 2007-12-05  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/34312"}, {"sha": "922d4d62ff6d4eae016ff9a2872796d081b4b853", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39be21dd5aba45b6bbfe159809444d6f2ad614de/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39be21dd5aba45b6bbfe159809444d6f2ad614de/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=39be21dd5aba45b6bbfe159809444d6f2ad614de", "patch": "@@ -1,3 +1,8 @@\n+2007-12-05  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/34138\n+\t* gcc.c-torture/compile/pr34138.c: New testcase.\n+\n 2007-12-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/33739"}, {"sha": "85e8863cdf0fb885af58b2ae720e8fae627c9ae2", "filename": "gcc/testsuite/gcc.c-torture/compile/pr34138.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39be21dd5aba45b6bbfe159809444d6f2ad614de/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr34138.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39be21dd5aba45b6bbfe159809444d6f2ad614de/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr34138.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr34138.c?ref=39be21dd5aba45b6bbfe159809444d6f2ad614de", "patch": "@@ -0,0 +1,21 @@\n+extern void free (void *__ptr);\n+struct shparam\n+{\n+  char **p;\n+  int foo;\n+};\n+static struct shparam shellparam;\n+inline void freeparam (volatile struct shparam *param, char **ap)\n+{\n+  free ((void *) (*ap));\n+  free ((void *) (param->p));\n+}\n+void dotcmd (char **p)\n+{\n+  freeparam (&shellparam, p);\n+}\n+void evaltree (void)\n+{\n+  void (*evalfn) (char **);\n+  evalfn = dotcmd;\n+}"}, {"sha": "2da17c8827de46f5ceb2db9aaff476897caa6772", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39be21dd5aba45b6bbfe159809444d6f2ad614de/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39be21dd5aba45b6bbfe159809444d6f2ad614de/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=39be21dd5aba45b6bbfe159809444d6f2ad614de", "patch": "@@ -956,12 +956,15 @@ tree_ssa_forward_propagate_single_use_vars (void)\n \t\t}\n \n \t      if (TREE_CODE (rhs) == ADDR_EXPR\n-\t\t  /* We can also disregard changes in CV qualifiers for\n+\t\t  /* We can also disregard changes in const qualifiers for\n \t\t     the dereferenced value.  */\n \t\t  || ((TREE_CODE (rhs) == NOP_EXPR\n \t\t       || TREE_CODE (rhs) == CONVERT_EXPR)\n \t\t      && TREE_CODE (TREE_OPERAND (rhs, 0)) == ADDR_EXPR\n \t\t      && POINTER_TYPE_P (TREE_TYPE (rhs))\n+\t\t      /* But do not propagate changes in volatileness.  */\n+\t\t      && (TYPE_VOLATILE (TREE_TYPE (TREE_TYPE (rhs)))\n+\t\t\t  == TYPE_VOLATILE (TREE_TYPE (TREE_TYPE (TREE_OPERAND (rhs, 0)))))\n \t\t      && types_compatible_p (TREE_TYPE (TREE_TYPE (TREE_OPERAND (rhs, 0))),\n \t\t\t\t\t     TREE_TYPE (TREE_TYPE (rhs)))))\n \t\t{"}]}