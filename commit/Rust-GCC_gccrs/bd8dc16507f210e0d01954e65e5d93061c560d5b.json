{"sha": "bd8dc16507f210e0d01954e65e5d93061c560d5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ4ZGMxNjUwN2YyMTBlMGQwMTk1NGU2NWU1ZDkzMDYxYzU2MGQ1Yg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1998-11-14T15:07:03Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-11-14T15:07:03Z"}, "message": "alpha.md (addsi3, subsi3): Revise 5 Nov change to store DImode value in paradoxical SImode result...\n\n        * alpha.md (addsi3, subsi3): Revise 5 Nov change to store DImode\n        value in paradoxical SImode result, rather than truncating midpoint.\n\nFrom-SVN: r23655", "tree": {"sha": "026e96faa52b000fcff28e7d625148b28eab0736", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/026e96faa52b000fcff28e7d625148b28eab0736"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd8dc16507f210e0d01954e65e5d93061c560d5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd8dc16507f210e0d01954e65e5d93061c560d5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd8dc16507f210e0d01954e65e5d93061c560d5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd8dc16507f210e0d01954e65e5d93061c560d5b/comments", "author": null, "committer": null, "parents": [{"sha": "9d1a7ce0ccae0ed0933a514aca56a015f45d7738", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d1a7ce0ccae0ed0933a514aca56a015f45d7738", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d1a7ce0ccae0ed0933a514aca56a015f45d7738"}], "stats": {"total": 53, "additions": 32, "deletions": 21}, "files": [{"sha": "4b705ff985654c58b5b6af35f053455c9b99dbb3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd8dc16507f210e0d01954e65e5d93061c560d5b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd8dc16507f210e0d01954e65e5d93061c560d5b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd8dc16507f210e0d01954e65e5d93061c560d5b", "patch": "@@ -1,3 +1,8 @@\n+Sat Nov 14 15:05:07 1998  Richard Henderson  <rth@cygnus.com>\n+\n+\t* alpha.md (addsi3, subsi3): Revise 5 Nov change to store DImode\n+\tvalue in paradoxical SImode result, rather than truncating midpoint.\n+\n Fri Nov 13 22:19:23 1998  Richard Henderson  <rth@cygnus.com>\n \n \t* alpha.c (reg_not_elim_operand): New."}, {"sha": "fde18faa628bf047b6b0ae28245d7d75717e7441", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 27, "deletions": 21, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd8dc16507f210e0d01954e65e5d93061c560d5b/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd8dc16507f210e0d01954e65e5d93061c560d5b/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=bd8dc16507f210e0d01954e65e5d93061c560d5b", "patch": "@@ -427,19 +427,22 @@\n   \"\"\n   \"\n {\n-  rtx op1 = gen_lowpart (DImode, operands[1]);\n-  rtx op2 = gen_lowpart (DImode, operands[2]);\n-\n-  if (! cse_not_expected)\n+  if (optimize)\n     {\n-      rtx tmp = gen_reg_rtx (DImode);\n-      emit_insn (gen_adddi3 (tmp, op1, op2));\n-      emit_move_insn (operands[0], gen_lowpart (SImode, tmp));\n+      rtx op1 = gen_lowpart (DImode, operands[1]);\n+      rtx op2 = gen_lowpart (DImode, operands[2]);\n+\n+      if (! cse_not_expected)\n+        {\n+          rtx tmp = gen_reg_rtx (DImode);\n+          emit_insn (gen_adddi3 (tmp, op1, op2));\n+          emit_move_insn (gen_lowpart (DImode, operands[0]), tmp);\n+        }\n+      else\n+        emit_insn (gen_adddi3 (gen_lowpart (DImode, operands[0]), op1, op2));\n+      DONE;\n     }\n-  else\n-    emit_insn (gen_adddi3 (gen_lowpart (DImode, operands[0]), op1, op2));\n-  DONE;\n-} \")\n+}\")\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r,r,r\")\n@@ -719,18 +722,21 @@\n   \"\"\n   \"\n {\n-  rtx op1 = gen_lowpart (DImode, operands[1]);\n-  rtx op2 = gen_lowpart (DImode, operands[2]);\n-\n-  if (! cse_not_expected)\n+  if (optimize)\n     {\n-      rtx tmp = gen_reg_rtx (DImode);\n-      emit_insn (gen_subdi3 (tmp, op1, op2));\n-      emit_move_insn (operands[0], gen_lowpart (SImode, tmp));\n+      rtx op1 = gen_lowpart (DImode, operands[1]);\n+      rtx op2 = gen_lowpart (DImode, operands[2]);\n+\n+      if (! cse_not_expected)\n+        {\n+          rtx tmp = gen_reg_rtx (DImode);\n+          emit_insn (gen_subdi3 (tmp, op1, op2));\n+          emit_move_insn (gen_lowpart (DImode, operands[0]), tmp);\n+        }\n+      else\n+        emit_insn (gen_subdi3 (gen_lowpart (DImode, operands[0]), op1, op2));\n+      DONE;\n     }\n-  else\n-    emit_insn (gen_subdi3 (gen_lowpart (DImode, operands[0]), op1, op2));\n-  DONE;\n } \")\n \n (define_insn \"\""}]}