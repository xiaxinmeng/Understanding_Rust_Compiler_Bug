{"sha": "051154a1f6be0f597b7da235d6fe13463e7629be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDUxMTU0YTFmNmJlMGY1OTdiN2RhMjM1ZDZmZTEzNDYzZTc2MjliZQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2016-05-31T11:08:54Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2016-05-31T11:08:54Z"}, "message": "Don't needlessly clear xmemdup allocated memory.\n\n    \n\t* xmemdup.c (xmemdup): Use xmalloc rather than xcalloc.\n\nFrom-SVN: r236917", "tree": {"sha": "f758ddd570f167d4bb72b1a7dd142bde79ce4ec9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f758ddd570f167d4bb72b1a7dd142bde79ce4ec9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/051154a1f6be0f597b7da235d6fe13463e7629be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/051154a1f6be0f597b7da235d6fe13463e7629be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/051154a1f6be0f597b7da235d6fe13463e7629be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/051154a1f6be0f597b7da235d6fe13463e7629be/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd78b3dd1824d0c7a77891365c756d67a9d5c1dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd78b3dd1824d0c7a77891365c756d67a9d5c1dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd78b3dd1824d0c7a77891365c756d67a9d5c1dc"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "d6b200e0ef2eb0d43795bf56352d0e877fda3ae5", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/051154a1f6be0f597b7da235d6fe13463e7629be/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/051154a1f6be0f597b7da235d6fe13463e7629be/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=051154a1f6be0f597b7da235d6fe13463e7629be", "patch": "@@ -1,3 +1,7 @@\n+2016-05-31  Alan Modra  <amodra@gmail.com>\n+\n+\t* xmemdup.c (xmemdup): Use xmalloc rather than xcalloc.\n+\n 2016-05-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/70498"}, {"sha": "4602afd7d9f6acb5e1bc57c2bd5ac3da4e25d5aa", "filename": "libiberty/xmemdup.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/051154a1f6be0f597b7da235d6fe13463e7629be/libiberty%2Fxmemdup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/051154a1f6be0f597b7da235d6fe13463e7629be/libiberty%2Fxmemdup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fxmemdup.c?ref=051154a1f6be0f597b7da235d6fe13463e7629be", "patch": "@@ -1,4 +1,4 @@\n-/* xmemdup.c -- Duplicate a memory buffer, using xcalloc.\n+/* xmemdup.c -- Duplicate a memory buffer, using xmalloc.\n    This trivial function is in the public domain.\n    Jeff Garzik, September 1999.  */\n \n@@ -34,6 +34,8 @@ allocated, the remaining memory is zeroed.\n PTR\n xmemdup (const PTR input, size_t copy_size, size_t alloc_size)\n {\n-  PTR output = xcalloc (1, alloc_size);\n+  PTR output = xmalloc (alloc_size);\n+  if (alloc_size > copy_size)\n+    memset ((char *) output + copy_size, 0, alloc_size - copy_size);\n   return (PTR) memcpy (output, input, copy_size);\n }"}]}