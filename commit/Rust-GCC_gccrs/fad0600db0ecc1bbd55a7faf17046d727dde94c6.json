{"sha": "fad0600db0ecc1bbd55a7faf17046d727dde94c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFkMDYwMGRiMGVjYzFiYmQ1NWE3ZmFmMTcwNDZkNzI3ZGRlOTRjNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-10T15:57:48Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-10T15:57:48Z"}, "message": "[multiple changes]\n\n2009-04-10  Robert Dewar  <dewar@adacore.com>\n\n\t* einfo.ads, einfo.adb (Low_Bound_Tested): New name for Low_Bound_Known\n\n\t* sem_prag.adb (Analyze_Pragma, case Check): Remove check for lower\n\tbound tested, since this is now done more generally in Sem_Res.\n\n\t* sem_res.adb (Resolve_Comparison_Op): Add call to\n\tCheck_Lower_Bound_Tested.\n\t(Resolve_Equality_Op): Add call to Check_Lower_Bound_Tested\n\n\t* sem_warn.ads, sem_warn.adb (Check_Low_Bound_Tested): New procedure\n\t(Low_Bound_Tested): New name for Low_Bound_Known flag\n\n\t* exp_ch5.adb: Minor reformatting\n\n\t* exp_ch4.adb:\n\tAdd comments on copying the Comes_From_Source flag for allocators\n\n\t* sinfo.ads:\n\tAdd comments on copying the Comes_From_Source flag for allocators\n\n\t* exp_ch6.adb (Make_Build_In_Place_Call_In_Allocator): Copy\n\tComes_From_Source flag from old allocator to new one.\n\n2009-04-10  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.ads: Address missing documentation query\n\n2009-04-10  Vincent Celier  <celier@adacore.com>\n\n\t* prj-attr.adb:\n\tAdd new Linker attributes Max_Command_Line_Length, Response_File_Format\n\tand Response_File_Switches.\n\n\t* prj-nmsc.adb (Process_Linker): Process new attributes\n\tMax_Command_Line_Length, Response_File_Format and\n\tResponse_File_Switches.\n\n\t* prj.ads (Response_File_Format): New enumeration type\n\t(Project_Configuration): New componants Max_Command_Line_Length,\n\tResp_File_Format and Resp_File_Options.\n\n\t* snames.ads-tmpl: Add new standard names for linking response files\n\tfor gprbuild: GNU, None, Object_List, Option_List,\n\tMax_Command_Line_Length, Response_File_Format and\n\tResponse_File_Switches.\n\n2009-04-10  Geert Bosch  <bosch@adacore.com>\n\n\t* system-aix.ads, system-darwin-ppc.ads, system-darwin-x86.ads,\n\tsystem-freebsd-x86.ads, system-hpux.ads, system-hpux-ia64.ads,\n\tsystem-irix-n32.ads, system-irix-o32.ads, system-linux-alpha.ads,\n\tsystem-linux-hppa.ads, system-linux-ia64.ads, system-linux-ppc.ads,\n\tsystem-linux-s390.ads, system-linux-s390x.ads, system-linux-sh4.ads,\n\tsystem-linux-sparc.ads, system-linux-x86_64.ads, system-linux-x86.ads,\n\tsystem-mingw.ads, system-solaris-sparc.ads, system-solaris-sparcv9.ads,\n\tsystem-solaris-x86.ads, system-tru64.ads, system-vms_64.ads,\n\tsystem-vms.ads, system-vms-ia64.ads, system-vms-zcx.ads,\n\tsystem-vxworks-arm.ads, system-vxworks-m68k.ads,\n\tsystem-vxworks-mips.ads, system-vxworks-ppc.ads,\n\tsystem-vxworks-sparcv9.ads, system-vxworks-x86.ads\n\t(Backend_Overflow_Checks): Set to True.\n\nFrom-SVN: r145924", "tree": {"sha": "58bbafbe6bc51c10f1ee8bb1ad6639c874523ff3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58bbafbe6bc51c10f1ee8bb1ad6639c874523ff3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fad0600db0ecc1bbd55a7faf17046d727dde94c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fad0600db0ecc1bbd55a7faf17046d727dde94c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fad0600db0ecc1bbd55a7faf17046d727dde94c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fad0600db0ecc1bbd55a7faf17046d727dde94c6/comments", "author": null, "committer": null, "parents": [{"sha": "934a3a25802c8652fab728259b779c3ae59e5c1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/934a3a25802c8652fab728259b779c3ae59e5c1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/934a3a25802c8652fab728259b779c3ae59e5c1e"}], "stats": {"total": 434, "additions": 348, "deletions": 86}, "files": [{"sha": "69186b945897681ac12554b06f05fe7731d445cb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -1,3 +1,67 @@\n+2009-04-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* einfo.ads, einfo.adb (Low_Bound_Tested): New name for Low_Bound_Known\n+\n+\t* sem_prag.adb (Analyze_Pragma, case Check): Remove check for lower\n+\tbound tested, since this is now done more generally in Sem_Res.\n+\n+\t* sem_res.adb (Resolve_Comparison_Op): Add call to\n+\tCheck_Lower_Bound_Tested.\n+\t(Resolve_Equality_Op): Add call to Check_Lower_Bound_Tested\n+\n+\t* sem_warn.ads, sem_warn.adb (Check_Low_Bound_Tested): New procedure\n+\t(Low_Bound_Tested): New name for Low_Bound_Known flag\n+\n+\t* exp_ch5.adb: Minor reformatting\n+\n+\t* exp_ch4.adb:\n+\tAdd comments on copying the Comes_From_Source flag for allocators\n+\n+\t* sinfo.ads:\n+\tAdd comments on copying the Comes_From_Source flag for allocators\n+\n+\t* exp_ch6.adb (Make_Build_In_Place_Call_In_Allocator): Copy\n+\tComes_From_Source flag from old allocator to new one.\n+\n+2009-04-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.ads: Address missing documentation query\n+\n+2009-04-10  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-attr.adb:\n+\tAdd new Linker attributes Max_Command_Line_Length, Response_File_Format\n+\tand Response_File_Switches.\n+\n+\t* prj-nmsc.adb (Process_Linker): Process new attributes\n+\tMax_Command_Line_Length, Response_File_Format and\n+\tResponse_File_Switches.\n+\n+\t* prj.ads (Response_File_Format): New enumeration type\n+\t(Project_Configuration): New componants Max_Command_Line_Length,\n+\tResp_File_Format and Resp_File_Options.\n+\n+\t* snames.ads-tmpl: Add new standard names for linking response files\n+\tfor gprbuild: GNU, None, Object_List, Option_List,\n+\tMax_Command_Line_Length, Response_File_Format and\n+\tResponse_File_Switches.\n+\n+2009-04-10  Geert Bosch  <bosch@adacore.com>\n+\n+\t* system-aix.ads, system-darwin-ppc.ads, system-darwin-x86.ads,\n+\tsystem-freebsd-x86.ads, system-hpux.ads, system-hpux-ia64.ads,\n+\tsystem-irix-n32.ads, system-irix-o32.ads, system-linux-alpha.ads,\n+\tsystem-linux-hppa.ads, system-linux-ia64.ads, system-linux-ppc.ads,\n+\tsystem-linux-s390.ads, system-linux-s390x.ads, system-linux-sh4.ads,\n+\tsystem-linux-sparc.ads, system-linux-x86_64.ads, system-linux-x86.ads,\n+\tsystem-mingw.ads, system-solaris-sparc.ads, system-solaris-sparcv9.ads,\n+\tsystem-solaris-x86.ads, system-tru64.ads, system-vms_64.ads,\n+\tsystem-vms.ads, system-vms-ia64.ads, system-vms-zcx.ads,\n+\tsystem-vxworks-arm.ads, system-vxworks-m68k.ads,\n+\tsystem-vxworks-mips.ads, system-vxworks-ppc.ads,\n+\tsystem-vxworks-sparcv9.ads, system-vxworks-x86.ads\n+\t(Backend_Overflow_Checks): Set to True.\n+\n 2009-04-10  Thomas Quinot  <quinot@adacore.com>\n \n \t* exp_attr.adb: Minor reformatting"}, {"sha": "72db40fcf845f6db2d5d0bba545f3cc592badf6f", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -460,7 +460,7 @@ package body Einfo is\n    --    Itype_Printed                   Flag202\n    --    Has_Pragma_Pure                 Flag203\n    --    Is_Known_Null                   Flag204\n-   --    Low_Bound_Known                 Flag205\n+   --    Low_Bound_Tested                Flag205\n    --    Is_Visible_Formal               Flag206\n    --    Known_To_Have_Preelab_Init      Flag207\n    --    Must_Have_Preelab_Init          Flag208\n@@ -2160,10 +2160,10 @@ package body Einfo is\n       return Node16 (Id);\n    end Lit_Strings;\n \n-   function Low_Bound_Known (Id : E) return B is\n+   function Low_Bound_Tested (Id : E) return B is\n    begin\n       return Flag205 (Id);\n-   end Low_Bound_Known;\n+   end Low_Bound_Tested;\n \n    function Machine_Radix_10 (Id : E) return B is\n    begin\n@@ -4627,11 +4627,11 @@ package body Einfo is\n       Set_Node16 (Id, V);\n    end Set_Lit_Strings;\n \n-   procedure Set_Low_Bound_Known (Id : E; V : B := True) is\n+   procedure Set_Low_Bound_Tested (Id : E; V : B := True) is\n    begin\n       pragma Assert (Is_Formal (Id));\n       Set_Flag205 (Id, V);\n-   end Set_Low_Bound_Known;\n+   end Set_Low_Bound_Tested;\n \n    procedure Set_Machine_Radix_10 (Id : E; V : B := True) is\n    begin\n@@ -6971,7 +6971,7 @@ package body Einfo is\n       W (\"Kill_Range_Checks\",               Flag33  (Id));\n       W (\"Kill_Tag_Checks\",                 Flag34  (Id));\n       W (\"Known_To_Have_Preelab_Init\",      Flag207 (Id));\n-      W (\"Low_Bound_Known\",                 Flag205 (Id));\n+      W (\"Low_Bound_Tested\",                Flag205 (Id));\n       W (\"Machine_Radix_10\",                Flag84  (Id));\n       W (\"Materialize_Entity\",              Flag168 (Id));\n       W (\"Must_Be_On_Byte_Boundary\",        Flag183 (Id));"}, {"sha": "94861354b70090018b7bd10c93d59cebd670551d", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -2757,15 +2757,13 @@ package Einfo is\n --       the nature and use of this entity for implementing the Image and\n --       Value attributes for the enumeration type in question.\n \n---    Low_Bound_Known (Flag205)\n+--    Low_Bound_Tested (Flag205)\n --       Present in all entities. Currently this can only be set True for\n --       formal parameter entries of a standard unconstrained one-dimensional\n---       array or string type, where the lower bound of the index type is zero\n---       or one. Indicates that the low bound is known to be equal to the lower\n---       bound of the index type (e.g. 1 for String, since the index type is\n---       Positive). This flag can only be set by a pragma Assert which\n---       specifies this. If this flag is set, warnings about assuming the index\n---       low bound to be zero or one are suppressed.\n+--       array or string type. Indicates that an explicit test of the low bound\n+--       of the formal appeared in the code, e.g. in a pragma Assert. If this\n+--       flag is set, warnings about assuming the index low bound to be one\n+--       are suppressed.\n \n --    Machine_Radix_10 (Flag84)\n --       Present in decimal types and subtypes, set if the Machine_Radix\n@@ -4520,7 +4518,7 @@ package Einfo is\n    --    Kill_Elaboration_Checks             (Flag32)\n    --    Kill_Range_Checks                   (Flag33)\n    --    Kill_Tag_Checks                     (Flag34)\n-   --    Low_Bound_Known                     (Flag205)\n+   --    Low_Bound_Tested                    (Flag205)\n    --    Materialize_Entity                  (Flag168)\n    --    Needs_Debug_Info                    (Flag147)\n    --    Never_Set_In_Source                 (Flag115)\n@@ -5008,7 +5006,7 @@ package Einfo is\n    --    Is_Controlling_Formal               (Flag97)\n    --    Is_Only_Out_Parameter               (Flag226)\n    --    Is_Optional_Parameter               (Flag134)\n-   --    Low_Bound_Known                     (Flag205)\n+   --    Low_Bound_Tested                    (Flag205)\n    --    Is_Return_Object                    (Flag209)\n    --    Parameter_Mode                      (synth)\n \n@@ -5899,7 +5897,7 @@ package Einfo is\n    function Limited_View                        (Id : E) return E;\n    function Lit_Indexes                         (Id : E) return E;\n    function Lit_Strings                         (Id : E) return E;\n-   function Low_Bound_Known                     (Id : E) return B;\n+   function Low_Bound_Tested                    (Id : E) return B;\n    function Machine_Radix_10                    (Id : E) return B;\n    function Master_Id                           (Id : E) return E;\n    function Materialize_Entity                  (Id : E) return B;\n@@ -6450,7 +6448,7 @@ package Einfo is\n    procedure Set_Limited_View                    (Id : E; V : E);\n    procedure Set_Lit_Indexes                     (Id : E; V : E);\n    procedure Set_Lit_Strings                     (Id : E; V : E);\n-   procedure Set_Low_Bound_Known                 (Id : E; V : B := True);\n+   procedure Set_Low_Bound_Tested                (Id : E; V : B := True);\n    procedure Set_Machine_Radix_10                (Id : E; V : B := True);\n    procedure Set_Master_Id                       (Id : E; V : E);\n    procedure Set_Materialize_Entity              (Id : E; V : B := True);\n@@ -7139,7 +7137,7 @@ package Einfo is\n    pragma Inline (Limited_View);\n    pragma Inline (Lit_Indexes);\n    pragma Inline (Lit_Strings);\n-   pragma Inline (Low_Bound_Known);\n+   pragma Inline (Low_Bound_Tested);\n    pragma Inline (Machine_Radix_10);\n    pragma Inline (Master_Id);\n    pragma Inline (Materialize_Entity);\n@@ -7527,7 +7525,7 @@ package Einfo is\n    pragma Inline (Set_Limited_View);\n    pragma Inline (Set_Lit_Indexes);\n    pragma Inline (Set_Lit_Strings);\n-   pragma Inline (Set_Low_Bound_Known);\n+   pragma Inline (Set_Low_Bound_Tested);\n    pragma Inline (Set_Machine_Radix_10);\n    pragma Inline (Set_Master_Id);\n    pragma Inline (Set_Materialize_Entity);"}, {"sha": "6586e61928886d85c811e0bb2815270e0fd57026", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 83, "deletions": 1, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -657,6 +657,11 @@ package body Exp_Ch4 is\n                      Make_Allocator (Loc,\n                        New_Reference_To (Etype (Exp), Loc)));\n \n+               --  Copy the Comes_From_Source flag for the allocator we just\n+               --  built, since logically this allocator is a replacement of\n+               --  the original allocator node. This is for proper handling of\n+               --  restriction No_Implicit_Heap_Allocations.\n+\n                Set_Comes_From_Source\n                  (Expression (Tmp_Node), Comes_From_Source (N));\n \n@@ -672,6 +677,7 @@ package body Exp_Ch4 is\n                end if;\n \n                Convert_Aggr_In_Allocator (N, Tmp_Node, Exp);\n+\n             else\n                Node := Relocate_Node (N);\n                Set_Analyzed (Node);\n@@ -727,6 +733,11 @@ package body Exp_Ch4 is\n                         Make_Allocator (Loc,\n                           New_Reference_To (Etype (Exp), Loc)));\n \n+                  --  Copy the Comes_From_Source flag for the allocator we just\n+                  --  built, since logically this allocator is a replacement of\n+                  --  the original allocator node. This is for proper handling\n+                  --  of restriction No_Implicit_Heap_Allocations.\n+\n                   Set_Comes_From_Source\n                     (Expression (Tmp_Node), Comes_From_Source (N));\n \n@@ -929,6 +940,11 @@ package body Exp_Ch4 is\n              Expression          => Make_Allocator (Loc,\n                  New_Reference_To (Etype (Exp), Loc)));\n \n+         --  Copy the Comes_From_Source flag for the allocator we just built,\n+         --  since logically this allocator is a replacement of the original\n+         --  allocator node. This is for proper handling of restriction\n+         --  No_Implicit_Heap_Allocations.\n+\n          Set_Comes_From_Source\n            (Expression (Tmp_Node), Comes_From_Source (N));\n \n@@ -4185,7 +4201,7 @@ package body Exp_Ch4 is\n                            Make_Integer_Literal (Loc, Dim)));\n                   end Construct_Attribute_Reference;\n \n-               --  Start processing for Check_Subscripts\n+               --  Start of processing for Check_Subscripts\n \n                begin\n                   for J in 1 .. Number_Dimensions (Typ) loop\n@@ -7920,6 +7936,72 @@ package body Exp_Ch4 is\n             or else\n           (Is_Fixed_Point_Type (Target_Type) and then Conversion_OK (N)))\n       then\n+         --  Handle case in which type conversions from real types to integers\n+         --  are truncated instead of rounded. For example, in the .NET target\n+         --  the only instructions available for conversion from float types to\n+         --  integers truncate the result. That is, the result of Integer (3.9)\n+         --  is 3 instead of 4. The frontend expansion done here to handle also\n+         --  negative values is the following composition of conditional\n+         --  expressions:\n+\n+         --    (if Abs (Operand - Float(Integer(Operand))) >= 0.5 then\n+         --        (if Operand >= 0.0 then\n+         --            Integer(Operand) + 1\n+         --         else\n+         --            Integer(Operand) - 1)\n+         --     else\n+         --       Integer(Operand))\n+\n+         if Integer_Truncation_On_Target and then Comes_From_Source (N) then\n+            declare\n+               Conv_Node : Node_Id;\n+\n+            begin\n+               --  This code is weird, why are we doing all these copy tree\n+               --  operations, instead of just capturing Integer(Operand)\n+               --  once and then reusing the value instead of forcing this\n+               --  conversion to be done four times! ???\n+\n+               --  There should be no New_Copy_Tree operations in the below\n+               --  code at all???\n+\n+               Conv_Node := New_Copy_Tree (N);\n+               Set_Parent (Conv_Node, Parent (N));\n+               Set_Comes_From_Source (Conv_Node, False);\n+               Analyze_And_Resolve (Conv_Node, Target_Type);\n+\n+               Rewrite (N,\n+                 Make_Conditional_Expression (Loc,\n+                   Expressions => New_List (\n+                     Make_Op_Ge (Loc,\n+                       Left_Opnd =>\n+                         Make_Op_Abs (Loc,\n+                           Make_Op_Subtract (Loc,\n+                             New_Copy_Tree (Operand),\n+                             Make_Type_Conversion (Loc,\n+                               New_Reference_To (Etype (Operand), Loc),\n+                               New_Copy_Tree (Conv_Node)))),\n+                       Right_Opnd => Make_Real_Literal (Loc, Ureal_Half)),\n+\n+                     Make_Conditional_Expression (Loc,\n+                       Expressions => New_List (\n+                         Make_Op_Ge (Loc,\n+                           Left_Opnd  => New_Copy_Tree (Operand),\n+                           Right_Opnd => Make_Real_Literal (Loc, Ureal_0)),\n+                         Make_Op_Add (Loc,\n+                           New_Copy_Tree (Conv_Node),\n+                           Make_Integer_Literal (Loc, 1)),\n+                         Make_Op_Subtract (Loc,\n+                           New_Copy_Tree (Conv_Node),\n+                           Make_Integer_Literal (Loc, 1)))),\n+\n+                     New_Copy_Tree (Conv_Node))));\n+\n+               Analyze_And_Resolve (N, Target_Type);\n+               return;\n+            end;\n+         end if;\n+\n          --  One more check here, gcc is still not able to do conversions of\n          --  this type with proper overflow checking, and so gigi is doing an\n          --  approximation of what is required by doing floating-point compares"}, {"sha": "9c5eabfd9a3db19d1e6355ab5543166876ec358f", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -2825,12 +2825,14 @@ package body Exp_Ch5 is\n                         if Is_Class_Wide_Type (Return_Obj_Typ) then\n                            Heap_Allocator :=\n                              Make_Allocator (Loc,\n-                               New_Reference_To\n-                                 (Etype (Return_Obj_Expr), Loc));\n+                               Expression =>\n+                                 New_Reference_To\n+                                   (Etype (Return_Obj_Expr), Loc));\n                         else\n                            Heap_Allocator :=\n                              Make_Allocator (Loc,\n-                               New_Reference_To (Return_Obj_Typ, Loc));\n+                               Expression =>\n+                                 New_Reference_To (Return_Obj_Typ, Loc));\n                         end if;\n \n                         --  If the object requires default initialization then"}, {"sha": "2cd2f101a647eaaa5bc907fa73a3ce506614fb16", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -5005,11 +5005,18 @@ package body Exp_Ch6 is\n          --  is handled separately further below.\n \n          New_Allocator :=\n-           Make_Allocator (Loc, New_Reference_To (Result_Subt, Loc));\n+           Make_Allocator (Loc,\n+             Expression => New_Reference_To (Result_Subt, Loc));\n+         Set_No_Initialization (New_Allocator);\n+\n+         --  Copy attributes to new allocator. Note that the new allocator\n+         --  logically comes from source if the original one did, so copy the\n+         --  relevant flag. This ensures proper treatment of the restriction\n+         --  No_Implicit_Heap_Allocations in this case.\n \n-         Set_Storage_Pool      (New_Allocator, Storage_Pool (Allocator));\n+         Set_Storage_Pool      (New_Allocator, Storage_Pool      (Allocator));\n          Set_Procedure_To_Call (New_Allocator, Procedure_To_Call (Allocator));\n-         Set_No_Initialization (New_Allocator);\n+         Set_Comes_From_Source (New_Allocator, Comes_From_Source (Allocator));\n \n          Rewrite (Allocator, New_Allocator);\n "}, {"sha": "7e30de6876229fb7eadae1d9808b4fed914cf471", "filename": "gcc/ada/prj-attr.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fprj-attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fprj-attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.adb?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -245,6 +245,12 @@ package body Prj.Attr is\n    \"SVlib_dir_switch#\" &\n    \"SVlib_name_switch#\" &\n \n+   --  Configuration - Response files\n+\n+   \"SVmax_command_line_length#\" &\n+   \"SVresponse_file_format#\" &\n+   \"LVresponse_file_switches#\" &\n+\n    --  package Cross_Reference\n \n    \"Pcross_reference#\" &"}, {"sha": "bab813eb205252f5bdaab54a1e575327fb9c316a", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 53, "deletions": 2, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -484,9 +484,9 @@ package body Prj.Nmsc is\n    --  Locate a directory. Name is the directory name. Parent is the root\n    --  directory, if Name a relative path name. Dir is set to the canonical\n    --  case path name of the directory, and Display is the directory path name\n-   --  for display purposes. If the directory does not exist and Project_Setup\n+   --  for display purposes. If the directory does not exist and Setup_Projects\n    --  is True and Create is a non null string, an attempt is made to create\n-   --  the directory. If the directory does not exist and Project_Setup is\n+   --  the directory. If the directory does not exist and Setup_Projects is\n    --  false, then Dir and Display are set to No_Name.\n    --\n    --  Current_Dir should represent the current directory, and is passed for\n@@ -1839,6 +1839,57 @@ package body Prj.Nmsc is\n \n                   elsif Attribute.Name = Name_Map_File_Option then\n                      Data.Config.Map_File_Option := Attribute.Value.Value;\n+\n+                  elsif Attribute.Name = Name_Max_Command_Line_Length then\n+                     begin\n+                        Data.Config.Max_Command_Line_Length :=\n+                          Natural'Value (Get_Name_String\n+                                         (Attribute.Value.Value));\n+\n+                     exception\n+                        when Constraint_Error =>\n+                           Error_Msg\n+                             (Project,\n+                              In_Tree,\n+                              \"value must be positive or equal to 0\",\n+                              Attribute.Value.Location);\n+                     end;\n+\n+                  elsif Attribute.Name = Name_Response_File_Format then\n+                     declare\n+                        Name  : Name_Id;\n+\n+                     begin\n+                        Get_Name_String (Attribute.Value.Value);\n+                        To_Lower (Name_Buffer (1 .. Name_Len));\n+                        Name := Name_Find;\n+\n+                        if Name = Name_None then\n+                           Data.Config.Resp_File_Format := None;\n+\n+                        elsif Name = Name_Gnu then\n+                           Data.Config.Resp_File_Format := GNU;\n+\n+                        elsif Name = Name_Object_List then\n+                           Data.Config.Resp_File_Format := Object_List;\n+\n+                        elsif Name = Name_Option_List then\n+                           Data.Config.Resp_File_Format := Option_List;\n+\n+                        else\n+                           Error_Msg\n+                             (Project,\n+                              In_Tree,\n+                              \"illegal response file format\",\n+                              Attribute.Value.Location);\n+                        end if;\n+                     end;\n+\n+                  elsif Attribute.Name = Name_Response_File_Switches then\n+                     Put (Into_List =>\n+                            Data.Config.Resp_File_Options,\n+                          From_List => Attribute.Value.Values,\n+                          In_Tree   => In_Tree);\n                   end if;\n                end if;\n "}, {"sha": "adc574723292e342a925f4d8dc9762ea7e6475a4", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -979,6 +979,13 @@ package Prj is\n       Table_Increment      => 100);\n    --  The table that contains the lists of project files\n \n+   type Response_File_Format is\n+     (None,\n+      GNU,\n+      Object_List,\n+      Option_List);\n+   --  The format of the different response files\n+\n    type Project_Configuration is record\n       Run_Path_Option               : Name_List_Index := No_Name_List;\n       --  The option to use when linking to specify the path where to look for\n@@ -1015,6 +1022,19 @@ package Prj is\n       --  The option to specify the name of a library for linking. Specified in\n       --  the configuration. When not specified, defaults to \"-l\".\n \n+      Max_Command_Line_Length       : Natural         := 0;\n+      --  When positive and when Resp_File_Format (see below) is not None,\n+      --  if the command line for the invocation of the linker would be greater\n+      --  than this value, a response file is used to invoke the linker.\n+\n+      Resp_File_Format              : Response_File_Format := None;\n+      --  The format of a response file, when linking with a response file is\n+      --  supported.\n+\n+      Resp_File_Options             : Name_List_Index := No_Name_List;\n+      --  The switches, if any, that precede the path name of the response\n+      --  file in the invocation of the linker.\n+\n       --  Libraries\n \n       Library_Builder               : Path_Name_Type  := No_Path;\n@@ -1085,6 +1105,9 @@ package Prj is\n                                Linker_Lib_Dir_Option         => No_Name,\n                                Linker_Lib_Name_Option        => No_Name,\n                                Library_Builder               => No_Path,\n+                               Max_Command_Line_Length       => 0,\n+                               Resp_File_Format              => None,\n+                               Resp_File_Options             => No_Name_List,\n                                Lib_Support                   => None,\n                                Archive_Builder               => No_Name_List,\n                                Archive_Builder_Append_Option => No_Name_List,"}, {"sha": "543f01bf7499f56c088162795481ad0d8a34f75f", "filename": "gcc/ada/sem_ch6.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsem_ch6.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsem_ch6.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -119,7 +119,9 @@ package Sem_Ch6 is\n    --  are subtype conformant, post error message if not (RM 6.3.1(16)),\n    --  the flag being placed on the Err_Loc node if it is specified, and\n    --  on the appropriate component of the New_Id construct if not.\n-   --  What is the semantics of Skip_Controlling_Formals???\n+   --  Skip_Controlling_Formals is True when checking the conformance of\n+   --  a subprogram that implements an interface operation. In that case,\n+   --  only the non-controlling formals can (and must) be examined.\n \n    procedure Check_Type_Conformant\n      (New_Id  : Entity_Id;"}, {"sha": "f6d5209514a6ae1dfedfcaad8ef59b3a7f20d720", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 4, "deletions": 23, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -5733,25 +5733,6 @@ package body Sem_Prag is\n             else\n                Analyze_And_Resolve (Expr, Any_Boolean);\n             end if;\n-\n-            --  If assertion is of the form (X'First = literal), where X is\n-            --  a formal, then set Low_Bound_Known flag on this formal.\n-\n-            if Nkind (Expr) = N_Op_Eq then\n-               declare\n-                  Right : constant Node_Id := Right_Opnd (Expr);\n-                  Left  : constant Node_Id := Left_Opnd  (Expr);\n-               begin\n-                  if Nkind (Left) = N_Attribute_Reference\n-                    and then Attribute_Name (Left) = Name_First\n-                    and then Is_Entity_Name (Prefix (Left))\n-                    and then Is_Formal (Entity (Prefix (Left)))\n-                    and then Nkind (Right) = N_Integer_Literal\n-                  then\n-                     Set_Low_Bound_Known (Entity (Prefix (Left)));\n-                  end if;\n-               end;\n-            end if;\n          end Check;\n \n          ----------------\n@@ -9608,10 +9589,10 @@ package body Sem_Prag is\n \n             Check_Precondition_Postcondition (In_Body);\n \n-            --  If in spec, nothing to do. If in body, then we convert the\n-            --  pragma to pragma Check (Precondition, cond [, msg]). Note we\n-            --  do this whether or not precondition checks are enabled. That\n-            --  works fine since pragma Check will do this check.\n+            --  If in spec, nothing more to do. If in body, then we convert the\n+            --  pragma to pragma Check (Precondition, cond [, msg]). Note we do\n+            --  this whether or not precondition checks are enabled. That works\n+            --  fine since pragma Check will do this check.\n \n             if In_Body then\n                if Arg_Count = 2 then"}, {"sha": "31242c6eb57180797485357d0f813ea7e817cf61", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -5393,6 +5393,7 @@ package body Sem_Res is\n             Check_Unset_Reference (L);\n             Check_Unset_Reference (R);\n             Generate_Operator_Reference (N, T);\n+            Check_Low_Bound_Tested (N);\n             Eval_Relational_Op (N);\n          end if;\n       end if;\n@@ -6135,6 +6136,7 @@ package body Sem_Res is\n          Check_Unset_Reference (L);\n          Check_Unset_Reference (R);\n          Generate_Operator_Reference (N, T);\n+         Check_Low_Bound_Tested (N);\n \n          --  If this is an inequality, it may be the implicit inequality\n          --  created for a user-defined operation, in which case the corres-"}, {"sha": "7831315ee96f1d133717b0b7c1c5cbd4791c43b2", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -604,6 +604,29 @@ package body Sem_Warn is\n       end if;\n    end Check_Infinite_Loop_Warning;\n \n+   ----------------------------\n+   -- Check_Low_Bound_Tested --\n+   ----------------------------\n+\n+   procedure Check_Low_Bound_Tested (Expr : Node_Id) is\n+   begin\n+      if Comes_From_Source (Expr) then\n+         declare\n+            L : constant Node_Id := Left_Opnd (Expr);\n+            R : constant Node_Id := Right_Opnd (Expr);\n+         begin\n+            if Nkind (L) = N_Attribute_Reference\n+              and then Attribute_Name (L) = Name_First\n+              and then Is_Entity_Name (Prefix (L))\n+              and then Is_Formal (Entity (Prefix (L)))\n+              and then Nkind (R) = N_Integer_Literal\n+            then\n+               Set_Low_Bound_Tested (Entity (Prefix (L)));\n+            end if;\n+         end;\n+      end if;\n+   end Check_Low_Bound_Tested;\n+\n    ----------------------\n    -- Check_References --\n    ----------------------\n@@ -3633,7 +3656,7 @@ package body Sem_Warn is\n \n             if Is_Formal (Ent)\n               and then Is_Suspicious_Type (Typ)\n-              and then not Low_Bound_Known (Ent)\n+              and then not Low_Bound_Tested (Ent)\n             then\n                Test_Suspicious_Index;\n             end if;"}, {"sha": "ce97d695efd064acacb005428771bc5c9a81b32f", "filename": "gcc/ada/sem_warn.ads", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsem_warn.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsem_warn.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -168,6 +168,13 @@ package Sem_Warn is\n    --  N is the node for a loop statement. This procedure checks if a warning\n    --  should be given for a possible infinite loop, and if so issues it.\n \n+   procedure Check_Low_Bound_Tested (Expr : Node_Id);\n+   --  Expr is the node for a comparison operation. This procedure checks if\n+   --  the comparison is a source comparison of P'First with a literal and if\n+   --  so, sets the Low_Bound_Tested flag in Expr to suppress warnings about\n+   --  improper low bound assumptions (we assume that if the code explicitly\n+   --  checks X'First, then it is not operating in blind assumption mode).\n+\n    procedure Warn_On_Known_Condition (C : Node_Id);\n    --  C is a node for a boolean expression resulting from a relational\n    --  or membership operation. If the expression has a compile time known"}, {"sha": "91d286fcc6d829e3d06250ec5ca18da0ad582dd5", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -3728,6 +3728,13 @@ package Sinfo is\n       --  Is_Dynamic_Coextension (Flag18-Sem)\n       --  plus fields for expression\n \n+      --  Note: like all nodes, the N_Allocator has the Comes_From_Source flag.\n+      --  This flag has a special function in conjunction with the restriction\n+      --  No_Implicit_Heap_Allocations, which will be triggered if this flag\n+      --  is not set. This means that if a source allocator is replaced with\n+      --  a constructed allocator, the Comes_From_Source flag should be copied\n+      --  to the newly created allocator.\n+\n       ---------------------------------\n       -- 5.1  Sequence Of Statements --\n       ---------------------------------"}, {"sha": "8943b7a53a5d0569c9813f11d283e9a33ac82543", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -1048,6 +1048,7 @@ package Snames is\n    Name_Global_Config_File               : constant Name_Id := N + $; --  GPR\n    Name_Gnatls                           : constant Name_Id := N + $;\n    Name_Gnatstub                         : constant Name_Id := N + $;\n+   Name_Gnu                              : constant Name_Id := N + $;\n    Name_Ide                              : constant Name_Id := N + $;\n    Name_Implementation                   : constant Name_Id := N + $;\n    Name_Implementation_Exceptions        : constant Name_Id := N + $;\n@@ -1088,19 +1089,25 @@ package Snames is\n    Name_Mapping_File_Switches            : constant Name_Id := N + $;\n    Name_Mapping_Spec_Suffix              : constant Name_Id := N + $;\n    Name_Mapping_Body_Suffix              : constant Name_Id := N + $;\n+   Name_Max_Command_Line_Length          : constant Name_Id := N + $;\n    Name_Metrics                          : constant Name_Id := N + $;\n    Name_Naming                           : constant Name_Id := N + $;\n+   Name_None                             : constant Name_Id := N + $;\n    Name_Object_Generated                 : constant Name_Id := N + $;\n+   Name_Object_List                      : constant Name_Id := N + $;\n    Name_Objects_Linked                   : constant Name_Id := N + $;\n    Name_Objects_Path                     : constant Name_Id := N + $;\n    Name_Objects_Path_File                : constant Name_Id := N + $;\n    Name_Object_Dir                       : constant Name_Id := N + $;\n+   Name_Option_List                      : constant Name_Id := N + $;\n    Name_Path_Syntax                      : constant Name_Id := N + $;\n    Name_Pic_Option                       : constant Name_Id := N + $;\n    Name_Pretty_Printer                   : constant Name_Id := N + $;\n    Name_Prefix                           : constant Name_Id := N + $;\n    Name_Project                          : constant Name_Id := N + $;\n    Name_Project_Dir                      : constant Name_Id := N + $;\n+   Name_Response_File_Format             : constant Name_Id := N + $;\n+   Name_Response_File_Switches           : constant Name_Id := N + $;\n    Name_Roots                            : constant Name_Id := N + $; --  GPR\n    Name_Required_Switches                : constant Name_Id := N + $;\n    Name_Run_Path_Option                  : constant Name_Id := N + $;"}, {"sha": "f76edfa2aa70e720334a02ecdd4925ffbf9bf206", "filename": "gcc/ada/system-aix.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-aix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-aix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-aix.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -126,7 +126,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}, {"sha": "0c9c32d5db5280fc792c806743d1a904ada44580", "filename": "gcc/ada/system-darwin-ppc.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-darwin-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-darwin-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-darwin-ppc.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -142,7 +142,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}, {"sha": "d7f6d0ec2721fd3e2389f17bbc0c8a4a7817515b", "filename": "gcc/ada/system-darwin-x86.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-darwin-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-darwin-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-darwin-x86.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -142,7 +142,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}, {"sha": "ffec2c11d72551c0c437d17d6a1460411c82bb72", "filename": "gcc/ada/system-freebsd-x86.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-freebsd-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-freebsd-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-freebsd-x86.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -116,7 +116,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}, {"sha": "5c03a2490c9f0fa76bccd09e1a4e828bcd0a21a5", "filename": "gcc/ada/system-hpux-ia64.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-hpux-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-hpux-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-hpux-ia64.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -116,7 +116,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}, {"sha": "ec6cd1c2c72d8d7c2ac1316ce446906ceea283cf", "filename": "gcc/ada/system-hpux.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-hpux.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -116,7 +116,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}, {"sha": "b26894b52da6bc547250c7caf982dffe81eb91df", "filename": "gcc/ada/system-irix-n32.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-irix-n32.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-irix-n32.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-irix-n32.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -128,7 +128,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := False;"}, {"sha": "22bbbaac43b12268a07c4bbe516d6a4d5432b98c", "filename": "gcc/ada/system-irix-o32.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-irix-o32.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-irix-o32.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-irix-o32.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -116,7 +116,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := False;"}, {"sha": "6ecca643f21c0a1969b1992bf55c73ddc7e08c27", "filename": "gcc/ada/system-linux-alpha.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-linux-alpha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-linux-alpha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-alpha.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -115,7 +115,7 @@ private\n \n    AAMP                      : constant Boolean := False;\n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Compiler_System_Version   : constant Boolean := False;\n    Configurable_Run_Time     : constant Boolean := False;"}, {"sha": "a23ebde1c9ce561b0efd506adc4902d2f8cb7e42", "filename": "gcc/ada/system-linux-hppa.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-linux-hppa.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-linux-hppa.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-hppa.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -116,7 +116,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}, {"sha": "cb0746f127013e6729a6e00eb573436d75347a9d", "filename": "gcc/ada/system-linux-ia64.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-linux-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-linux-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-ia64.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -124,7 +124,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}, {"sha": "6433e06104f44c12695d7d3def493c36f48c909c", "filename": "gcc/ada/system-linux-ppc.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-linux-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-linux-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-ppc.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -124,7 +124,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}, {"sha": "b44b4d125967354295fcee4ca63cff5879c135bf", "filename": "gcc/ada/system-linux-s390.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-linux-s390.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-linux-s390.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-s390.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -115,7 +115,7 @@ private\n \n    AAMP                      : constant Boolean := False;\n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Compiler_System_Version   : constant Boolean := False;\n    Configurable_Run_Time     : constant Boolean := False;"}, {"sha": "52937de2521f56874a8566b668619c628a852127", "filename": "gcc/ada/system-linux-s390x.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-linux-s390x.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-linux-s390x.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-s390x.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -115,7 +115,7 @@ private\n \n    AAMP                      : constant Boolean := False;\n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Compiler_System_Version   : constant Boolean := False;\n    Configurable_Run_Time     : constant Boolean := False;"}, {"sha": "6a0fdf47c34396339cf0902d2bcfd3019495afd5", "filename": "gcc/ada/system-linux-sh4.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-linux-sh4.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-linux-sh4.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-sh4.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -124,7 +124,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}, {"sha": "465d8d3a1f0a203e2482f0507d08b5e6160e5755", "filename": "gcc/ada/system-linux-sparc.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-linux-sparc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-linux-sparc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-sparc.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -115,7 +115,7 @@ private\n \n    AAMP                      : constant Boolean := False;\n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Compiler_System_Version   : constant Boolean := False;\n    Configurable_Run_Time     : constant Boolean := False;"}, {"sha": "f17f2ef7476212cbfce3da41615799396eb6667e", "filename": "gcc/ada/system-linux-x86.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-linux-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-linux-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-x86.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -124,7 +124,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}, {"sha": "94ef86f4f5fb902d1d663eb85f58f3a4aad75e5c", "filename": "gcc/ada/system-linux-x86_64.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-linux-x86_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-linux-x86_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-x86_64.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -124,7 +124,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}, {"sha": "6a9131a30d5eb6fd4d80bb303e1c73b50e4d088e", "filename": "gcc/ada/system-mingw.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-mingw.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -116,7 +116,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}, {"sha": "bc00976c5f95d7706ea4a94eb38bc301213ab926", "filename": "gcc/ada/system-solaris-sparc.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-solaris-sparc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-solaris-sparc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-solaris-sparc.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -116,7 +116,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}, {"sha": "96686f52605e9971cd3c595f7d67b663d1d983e9", "filename": "gcc/ada/system-solaris-sparcv9.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-solaris-sparcv9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-solaris-sparcv9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-solaris-sparcv9.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -116,7 +116,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}, {"sha": "57aeb8d8bf8c877c0cd558f7c2a964150bb23c8f", "filename": "gcc/ada/system-solaris-x86.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-solaris-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-solaris-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-solaris-x86.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -116,7 +116,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}, {"sha": "e56ae5955268a4bd71a595358560f810427929e7", "filename": "gcc/ada/system-tru64.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-tru64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-tru64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-tru64.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -116,7 +116,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := False;"}, {"sha": "57fece940765077843c95a48539c5fee147ad798", "filename": "gcc/ada/system-vms-ia64.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-vms-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-vms-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vms-ia64.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -133,7 +133,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}, {"sha": "5b4c3edb5d6ad0fe607cdd043b00dd1d4fcb321f", "filename": "gcc/ada/system-vms-zcx.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-vms-zcx.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-vms-zcx.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vms-zcx.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -116,7 +116,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := False;"}, {"sha": "4b6f1eacdadcb98091ecb8460398026dbadac065", "filename": "gcc/ada/system-vms.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vms.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -116,7 +116,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := False;"}, {"sha": "17b1ab81504a5138e9ecd940b1809e7e063c7f3f", "filename": "gcc/ada/system-vms_64.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-vms_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-vms_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vms_64.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -133,7 +133,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := False;"}, {"sha": "2c144afb6cd05bc615bbfbff29f65c911ad132d1", "filename": "gcc/ada/system-vxworks-arm.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-vxworks-arm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-vxworks-arm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-arm.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -129,7 +129,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := False;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}, {"sha": "83bb9656b946edd7bbbc61eccd8814716e2552ed", "filename": "gcc/ada/system-vxworks-m68k.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-vxworks-m68k.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-vxworks-m68k.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-m68k.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -129,7 +129,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := False;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}, {"sha": "035e542cbaff856f7c8fa90df927581b2533e050", "filename": "gcc/ada/system-vxworks-mips.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-vxworks-mips.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-vxworks-mips.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-mips.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -129,7 +129,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := False;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := False;"}, {"sha": "d355bae9700d5ec2a074ea85d53eac84882f4af3", "filename": "gcc/ada/system-vxworks-ppc.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-vxworks-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-vxworks-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-ppc.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -129,7 +129,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := False;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}, {"sha": "5d15daa50a0cfbed43c9900e50626397f4f95dfa", "filename": "gcc/ada/system-vxworks-sparcv9.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-vxworks-sparcv9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-vxworks-sparcv9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-sparcv9.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -131,7 +131,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := False;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}, {"sha": "d028ca9103bf7a99a5e79dc7d020bdf71751c1d2", "filename": "gcc/ada/system-vxworks-x86.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-vxworks-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fad0600db0ecc1bbd55a7faf17046d727dde94c6/gcc%2Fada%2Fsystem-vxworks-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-x86.ads?ref=fad0600db0ecc1bbd55a7faf17046d727dde94c6", "patch": "@@ -129,7 +129,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := False;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}]}