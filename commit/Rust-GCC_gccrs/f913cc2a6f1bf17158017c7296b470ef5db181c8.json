{"sha": "f913cc2a6f1bf17158017c7296b470ef5db181c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjkxM2NjMmE2ZjFiZjE3MTU4MDE3YzcyOTZiNDcwZWY1ZGIxODFjOA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2015-11-13T07:28:33Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-11-13T07:28:33Z"}, "message": "predicates.md (misaligned_operand): Return true if operand is aligned to less than its natural alignmnet.\n\n\t* config/i386/predicates.md (misaligned_operand): Return true if\n\toperand is aligned to less than its natural alignmnet.\n\nFrom-SVN: r230291", "tree": {"sha": "bc305d20b2373890f67933a4d67880cc3a88c1c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc305d20b2373890f67933a4d67880cc3a88c1c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f913cc2a6f1bf17158017c7296b470ef5db181c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f913cc2a6f1bf17158017c7296b470ef5db181c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f913cc2a6f1bf17158017c7296b470ef5db181c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f913cc2a6f1bf17158017c7296b470ef5db181c8/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "12fb875f0d6550156c4dfc881edb422a7bd97818", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12fb875f0d6550156c4dfc881edb422a7bd97818", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12fb875f0d6550156c4dfc881edb422a7bd97818"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "666545eba8e3079f1d856d21cda13dd869c839eb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f913cc2a6f1bf17158017c7296b470ef5db181c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f913cc2a6f1bf17158017c7296b470ef5db181c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f913cc2a6f1bf17158017c7296b470ef5db181c8", "patch": "@@ -1,3 +1,8 @@\n+2015-11-13  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/predicates.md (misaligned_operand): Return true if\n+\toperand is aligned to less than its natural alignmnet.\n+\n 2015-11-13  Ilya Enkovich  <enkovich.gnu@gmail.com>\n \n \t* doc/md.texi (vec_cmp@var{m}@var{n}): New item."}, {"sha": "8bdd5d88efbcbe8624d3f6c09773dcf0e66aa10b", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f913cc2a6f1bf17158017c7296b470ef5db181c8/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f913cc2a6f1bf17158017c7296b470ef5db181c8/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=f913cc2a6f1bf17158017c7296b470ef5db181c8", "patch": "@@ -1364,10 +1364,11 @@\n (define_predicate \"absneg_operator\"\n   (match_code \"abs,neg\"))\n \n-;; Return true if OP is misaligned memory operand\n+;; Return true if OP is a memory operand, aligned to\n+;; less than its natural alignment.\n (define_predicate \"misaligned_operand\"\n   (and (match_code \"mem\")\n-       (match_test \"MEM_ALIGN (op) < GET_MODE_ALIGNMENT (mode)\")))\n+       (match_test \"MEM_ALIGN (op) < GET_MODE_BITSIZE (mode)\")))\n \n ;; Return true if OP is a emms operation, known to be a PARALLEL.\n (define_predicate \"emms_operation\""}]}