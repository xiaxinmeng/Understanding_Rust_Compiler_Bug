{"sha": "7a40dd5a26ee497e80c86c939542de96d5e2a474", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E0MGRkNWEyNmVlNDk3ZTgwYzg2YzkzOTU0MmRlOTZkNWUyYTQ3NA==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2019-09-29T19:09:13Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2019-09-29T19:09:13Z"}, "message": "[Darwin, PPC, Mode Iterators 5/n] Update macho_low.\n\nReplace the define_expand and two define_insns with a single\n@macho_low_<mode> and update callers.\n\ngcc/ChangeLog:\n\n2019-09-29  Iain Sandoe  <iain@sandoe.co.uk>\n\n\t* config/darwin.c (gen_macho_low):Amend to include the mode\n\targument.\n\t(machopic_indirect_data_reference): Amend gen_macho_low call\n\tto include mode argument\n\t* config/rs6000/rs6000.c (emit_move): Likewise. Amend a comment.\n\t* config/rs6000/darwin.md (@macho_low_<mode>): New, replaces\n\tthe macho_high expander and two define_insn entries.\n\nFrom-SVN: r276271", "tree": {"sha": "c8e56552fa915361d14ceb45c6f2c69617dcdfca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8e56552fa915361d14ceb45c6f2c69617dcdfca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a40dd5a26ee497e80c86c939542de96d5e2a474", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a40dd5a26ee497e80c86c939542de96d5e2a474", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a40dd5a26ee497e80c86c939542de96d5e2a474", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a40dd5a26ee497e80c86c939542de96d5e2a474/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4770ba091d96aea469c79067b549bbc8f8c7c63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4770ba091d96aea469c79067b549bbc8f8c7c63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4770ba091d96aea469c79067b549bbc8f8c7c63"}], "stats": {"total": 48, "additions": 20, "deletions": 28}, "files": [{"sha": "864dc694e54d176b7096b3fd1a7c6844ad954528", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a40dd5a26ee497e80c86c939542de96d5e2a474/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a40dd5a26ee497e80c86c939542de96d5e2a474/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a40dd5a26ee497e80c86c939542de96d5e2a474", "patch": "@@ -1,3 +1,13 @@\n+2019-09-29  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/darwin.c (gen_macho_low):Amend to include the mode\n+\targument.\n+\t(machopic_indirect_data_reference): Amend gen_macho_low call\n+\tto include mode argument\n+\t* config/rs6000/rs6000.c (emit_move): Likewise. Amend a comment.\n+\t* config/rs6000/darwin.md (@macho_low_<mode>): New, replaces\n+\tthe macho_high expander and two define_insn entries.\n+\n 2019-09-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/90543"}, {"sha": "3a1be5a29b9a1dd0b60f2812b784a23ca9e71fa8", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a40dd5a26ee497e80c86c939542de96d5e2a474/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a40dd5a26ee497e80c86c939542de96d5e2a474/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=7a40dd5a26ee497e80c86c939542de96d5e2a474", "patch": "@@ -110,7 +110,7 @@ section * darwin_sections[NUM_DARWIN_SECTIONS];\n /* While we transition to using in-tests instead of ifdef'd code.  */\n #if !HAVE_lo_sum\n #define gen_macho_high(m,a,b) (a)\n-#define gen_macho_low(a,b,c) (a)\n+#define gen_macho_low(m,a,b,c) (a)\n #endif\n \n /* True if we're setting __attribute__ ((ms_struct)).  */\n@@ -656,7 +656,7 @@ machopic_indirect_data_reference (rtx orig, rtx reg)\n \t  /* Create a new register for CSE opportunities.  */\n \t  rtx hi_reg = (!can_create_pseudo_p () ? reg : gen_reg_rtx (Pmode));\n \t  emit_insn (gen_macho_high (Pmode, hi_reg, orig));\n- \t  emit_insn (gen_macho_low (reg, hi_reg, orig));\n+\t  emit_insn (gen_macho_low (Pmode, reg, hi_reg, orig));\n \t      return reg;\n  \t    }\n \t  else if (DARWIN_X86)"}, {"sha": "3994447f38efc2d4fe02d3730eaaf343f593ca9c", "filename": "gcc/config/rs6000/darwin.md", "status": "modified", "additions": 4, "deletions": 25, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a40dd5a26ee497e80c86c939542de96d5e2a474/gcc%2Fconfig%2Frs6000%2Fdarwin.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a40dd5a26ee497e80c86c939542de96d5e2a474/gcc%2Fconfig%2Frs6000%2Fdarwin.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.md?ref=7a40dd5a26ee497e80c86c939542de96d5e2a474", "patch": "@@ -158,32 +158,11 @@ You should have received a copy of the GNU General Public License\n   \"TARGET_MACHO && (DEFAULT_ABI == ABI_DARWIN)\"\n   \"lis %0,ha16(%1)\")\n \n-(define_expand \"macho_low\"\n-  [(set (match_operand 0 \"\")\n-\t(lo_sum (match_operand 1 \"\")\n-\t\t   (match_operand 2 \"\")))]\n-   \"TARGET_MACHO\"\n-{\n-  if (TARGET_64BIT)\n-    emit_insn (gen_macho_low_di (operands[0], operands[1], operands[2]));\n-  else\n-    emit_insn (gen_macho_low_si (operands[0], operands[1], operands[2]));\n-\n-  DONE;\n-})\n-\n-(define_insn \"macho_low_si\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n-\t(lo_sum:SI (match_operand:SI 1 \"gpc_reg_operand\" \"b\")\n-\t\t   (match_operand 2 \"\" \"\")))]\n-   \"TARGET_MACHO && ! TARGET_64BIT\"\n-   \"la %0,lo16(%2)(%1)\")\n-\n-(define_insn \"macho_low_di\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n-\t(lo_sum:DI (match_operand:DI 1 \"gpc_reg_operand\" \"b\")\n+(define_insn \"@macho_low_<mode>\"\n+  [(set (match_operand:P 0 \"gpc_reg_operand\" \"=r\")\n+\t(lo_sum:P (match_operand:P 1 \"gpc_reg_operand\" \"b\")\n \t\t   (match_operand 2 \"\" \"\")))]\n-   \"TARGET_MACHO && TARGET_64BIT\"\n+   \"TARGET_MACHO && (DEFAULT_ABI == ABI_DARWIN)\"\n    \"la %0,lo16(%2)(%1)\")\n \n (define_split"}, {"sha": "1eb13176dd0a46dff1e58f103cc289b06556c917", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a40dd5a26ee497e80c86c939542de96d5e2a474/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a40dd5a26ee497e80c86c939542de96d5e2a474/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=7a40dd5a26ee497e80c86c939542de96d5e2a474", "patch": "@@ -9682,6 +9682,8 @@ rs6000_emit_move (rtx dest, rtx source, machine_mode mode)\n \t  if (DEFAULT_ABI == ABI_DARWIN)\n \t    {\n #if TARGET_MACHO\n+\t      /* This is not PIC code, but could require the subset of\n+\t\t indirections used by mdynamic-no-pic.  */\n \t      if (MACHO_DYNAMIC_NO_PIC_P)\n \t\t{\n \t\t  /* Take care of any required data indirection.  */\n@@ -9693,7 +9695,8 @@ rs6000_emit_move (rtx dest, rtx source, machine_mode mode)\n \t\t}\n #endif\n \t      emit_insn (gen_macho_high (Pmode, target, operands[1]));\n-\t      emit_insn (gen_macho_low (operands[0], target, operands[1]));\n+\t      emit_insn (gen_macho_low (Pmode, operands[0],\n+\t\t\t\t\ttarget, operands[1]));\n \t      return;\n \t    }\n "}]}