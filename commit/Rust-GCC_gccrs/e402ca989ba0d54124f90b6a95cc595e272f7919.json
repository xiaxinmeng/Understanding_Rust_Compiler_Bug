{"sha": "e402ca989ba0d54124f90b6a95cc595e272f7919", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQwMmNhOTg5YmEwZDU0MTI0ZjkwYjZhOTVjYzU5NWUyNzJmNzkxOQ==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@cygnus.com", "date": "1998-12-23T10:46:40Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1998-12-23T10:46:40Z"}, "message": "expr.c (process_jvm_instruction): Do load_type_state after JSR.\n\n\t\n\t* expr.c (process_jvm_instruction):  Do load_type_state after JSR.\n\t* verify.c (verify_jvm_instructions):  Fix off-by-one error.\n\t* jcf-write.c (CHECK_PUT):  Add (void) cast to avoid -Wall warnings.\n\t(localvar_alloc):  Change return type to void,\n\t(emit_unop):  Remove unused variable size.\n\t* jcf-write.c (struct jcf_block):  Add new union.\n\t(PENDING_CLEANUP_PC, PENDING_EXIT_PC, UNDEFINED_PC):  New macros.\n\t(call_cleanups):  New functions.\n\t(struct jcf_partial):  New fields num_finalizers and return_value_decl.\n\t(generate_bytecode_insns):  Support CLEANUP_POINT_EXPR and\n\tWITH_CLEANUP_EXPR.  Handle cleanups in RETURN_EXPR and EXIT_BLOCK_EXPR.\n\t* lang.c (lang_init):  Call using_eh_for_cleanups.\n\t* parse.y (java_complete_lhs):  For SYNCHRONIZED_EXPR, defer\n\tcompleting operands to patch_synchronized_statement.\n\tSupport CLEANUP_POINT_EXPR, WITH_CLEANUP_EXPR.\n\t(patch_synchronized_statement): Re-write suing CLEANUP_POINT_EXPR and\n\tWITH_CLEANUP_EXPR instead of TRY_EXPR.\n\nFrom-SVN: r24405", "tree": {"sha": "9e0930a81c12fc9a3c7cc2670e141b91dcd55806", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e0930a81c12fc9a3c7cc2670e141b91dcd55806"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e402ca989ba0d54124f90b6a95cc595e272f7919", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e402ca989ba0d54124f90b6a95cc595e272f7919", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e402ca989ba0d54124f90b6a95cc595e272f7919", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e402ca989ba0d54124f90b6a95cc595e272f7919/comments", "author": null, "committer": null, "parents": [{"sha": "45b44fbed7110d8388a4eb4c0c16b39e35c4c16c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45b44fbed7110d8388a4eb4c0c16b39e35c4c16c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45b44fbed7110d8388a4eb4c0c16b39e35c4c16c"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "0546ace9b0aea08854153a33ce3e6474172842ca", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e402ca989ba0d54124f90b6a95cc595e272f7919/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e402ca989ba0d54124f90b6a95cc595e272f7919/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=e402ca989ba0d54124f90b6a95cc595e272f7919", "patch": "@@ -1,3 +1,25 @@\n+Tue Dec 22 11:25:19 1998  Per Bothner  <bothner@cygnus.com>\n+\n+\t* expr.c (process_jvm_instruction):  Do load_type_state after JSR.\n+\t* verify.c (verify_jvm_instructions):  Fix off-by-one error.\n+\n+\t* jcf-write.c (CHECK_PUT):  Add (void) cast to avoid -Wall warnings.\n+\t(localvar_alloc):  Change return type to void,\n+\t(emit_unop):  Remove unused variable size.\n+\t\n+\t* jcf-write.c (struct jcf_block):  Add new union.\n+\t(PENDING_CLEANUP_PC, PENDING_EXIT_PC, UNDEFINED_PC):  New macros.\n+\t(call_cleanups):  New functions.\n+\t(struct jcf_partial):  New fields num_finalizers and return_value_decl.\n+\t(generate_bytecode_insns):  Support CLEANUP_POINT_EXPR and\n+\tWITH_CLEANUP_EXPR.  Handle cleanups in RETURN_EXPR and EXIT_BLOCK_EXPR.\n+\t* lang.c (lang_init):  Call using_eh_for_cleanups.\n+\t* parse.y (java_complete_lhs):  For SYNCHRONIZED_EXPR, defer\n+\tcompleting operands to patch_synchronized_statement.\n+\tSupport CLEANUP_POINT_EXPR, WITH_CLEANUP_EXPR.\n+\t(patch_synchronized_statement): Re-write suing CLEANUP_POINT_EXPR and\n+\tWITH_CLEANUP_EXPR instead of TRY_EXPR.\t\n+\n Sun Dec 20 16:15:44 1998  John F. Carr  <jfc@mit.edu>\n \n \t* Make-lang.in: Comment out control-Ls; they upset some makes."}, {"sha": "5a407c7f2615f22faaef71396503f52270f8bfab", "filename": "gcc/java/lang.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e402ca989ba0d54124f90b6a95cc595e272f7919/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e402ca989ba0d54124f90b6a95cc595e272f7919/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=e402ca989ba0d54124f90b6a95cc595e272f7919", "patch": "@@ -494,6 +494,8 @@ lang_init ()\n \t (char *)(tree_code_name + (int) LAST_AND_UNUSED_TREE_CODE),\n \t (LAST_JAVA_TREE_CODE - \n \t  (int)LAST_AND_UNUSED_TREE_CODE) * sizeof (char *));\n+\n+  using_eh_for_cleanups ();\n }\n \n /* This doesn't do anything on purpose. It's used to satisfy the"}]}