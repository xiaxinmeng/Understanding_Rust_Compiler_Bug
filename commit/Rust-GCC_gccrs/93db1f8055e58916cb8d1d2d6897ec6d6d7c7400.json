{"sha": "93db1f8055e58916cb8d1d2d6897ec6d6d7c7400", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNkYjFmODA1NWU1ODkxNmNiOGQxZDJkNjg5N2VjNmQ2ZDdjNzQwMA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-20T08:05:05Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-20T08:05:05Z"}, "message": "git_check_commit: shorted option name\n\n\t* gcc-changelog/git_check_commit.py: Change\n\t--allow-non-strict-mode to --non-strict-mode.", "tree": {"sha": "ab119cbfa290080bddd4a78cf7b5682b641b2493", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab119cbfa290080bddd4a78cf7b5682b641b2493"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93db1f8055e58916cb8d1d2d6897ec6d6d7c7400", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl7E5LEACgkQTcGC3A+n\nN4W0ggf/ZHXSugk97IjSI7TVugFo5/uMlz0cPgoUe66ufFYOdUM5qehQ5Z6G+I9O\n+z9r8qADKFcVBMvYTvoSugCr+DurAwBWgBNXpX9yicl/E3KwmkQAarBxXQ6IyH9f\n508d/ozjWF7UrTHLeNlWyfulRpavArWsSJjsihO5D4MMUUa8xCGAhMF49rcAtN2p\nkFG1WvaUpR708Mk9Tt6sWI7GzdSkcFIOR2aBDjWg73H6J3umt1uWq6sqhqw12W3p\nk+oxJo31MWVKi/u+E4l+R9MwXlMTR1/7y/xxWVCn26yrhV015cCw54qihKPOhxLw\nk+QtEI/lSQ6juH3MOt3BdTTZGracCA==\n=5nRv\n-----END PGP SIGNATURE-----", "payload": "tree ab119cbfa290080bddd4a78cf7b5682b641b2493\nparent 713890935db33b1e24abfae6a94bacc494f6412e\nauthor Martin Liska <mliska@suse.cz> 1589961905 +0200\ncommitter Martin Liska <mliska@suse.cz> 1589961905 +0200\n\ngit_check_commit: shorted option name\n\n\t* gcc-changelog/git_check_commit.py: Change\n\t--allow-non-strict-mode to --non-strict-mode.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93db1f8055e58916cb8d1d2d6897ec6d6d7c7400", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93db1f8055e58916cb8d1d2d6897ec6d6d7c7400", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93db1f8055e58916cb8d1d2d6897ec6d6d7c7400/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "713890935db33b1e24abfae6a94bacc494f6412e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713890935db33b1e24abfae6a94bacc494f6412e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/713890935db33b1e24abfae6a94bacc494f6412e"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "b799a283f34b7d95e58c0ca277915104dcb5371b", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93db1f8055e58916cb8d1d2d6897ec6d6d7c7400/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93db1f8055e58916cb8d1d2d6897ec6d6d7c7400/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=93db1f8055e58916cb8d1d2d6897ec6d6d7c7400", "patch": "@@ -1,3 +1,8 @@\n+2020-05-20  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_check_commit.py: Change\n+\t--allow-non-strict-mode to --non-strict-mode.\n+\n 2020-05-20  Martin Liska  <mliska@suse.cz>\n \n \t* gcc-changelog/git_commit.py: Support cherry pick"}, {"sha": "2601ae4f613d3a2e205d0d5102c3872a05f28d08", "filename": "contrib/gcc-changelog/git_check_commit.py", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93db1f8055e58916cb8d1d2d6897ec6d6d7c7400/contrib%2Fgcc-changelog%2Fgit_check_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93db1f8055e58916cb8d1d2d6897ec6d6d7c7400/contrib%2Fgcc-changelog%2Fgit_check_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_check_commit.py?ref=93db1f8055e58916cb8d1d2d6897ec6d6d7c7400", "patch": "@@ -28,14 +28,14 @@\n                     help='Path to git repository')\n parser.add_argument('-p', '--print-changelog', action='store_true',\n                     help='Print final changelog entires')\n-parser.add_argument('-n', '--allow-non-strict-mode', action='store_true',\n-                    help='Allow non-strict mode (change in both ChangeLog and '\n-                    'other files.')\n+parser.add_argument('-n', '--non-strict-mode', action='store_true',\n+                    help='Use non-strict mode (allow changes in ChangeLog and '\n+                    'other automatically updated files).')\n args = parser.parse_args()\n \n retval = 0\n for git_commit in parse_git_revisions(args.git_path, args.revisions,\n-                                      not args.allow_non_strict_mode):\n+                                      not args.non_strict_mode):\n     res = 'OK' if git_commit.success else 'FAILED'\n     print('Checking %s: %s' % (git_commit.hexsha, res))\n     if git_commit.success:"}]}