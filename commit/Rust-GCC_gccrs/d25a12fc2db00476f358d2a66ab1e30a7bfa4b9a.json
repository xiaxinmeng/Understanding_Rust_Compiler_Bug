{"sha": "d25a12fc2db00476f358d2a66ab1e30a7bfa4b9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI1YTEyZmMyZGIwMDQ3NmYzNThkMmE2NmFiMWUzMGE3YmZhNGI5YQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-04-20T20:11:28Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-04-20T20:11:28Z"}, "message": "net, syscall: Use native endianness for GNU/Linux netlink code.\n\nFrom-SVN: r186640", "tree": {"sha": "008ea10059bb6030b63b115261d375197090725c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/008ea10059bb6030b63b115261d375197090725c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d25a12fc2db00476f358d2a66ab1e30a7bfa4b9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d25a12fc2db00476f358d2a66ab1e30a7bfa4b9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d25a12fc2db00476f358d2a66ab1e30a7bfa4b9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d25a12fc2db00476f358d2a66ab1e30a7bfa4b9a/comments", "author": null, "committer": null, "parents": [{"sha": "63d1e46df06893b073418be4e27f95eebd05ba26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63d1e46df06893b073418be4e27f95eebd05ba26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63d1e46df06893b073418be4e27f95eebd05ba26"}], "stats": {"total": 81, "additions": 14, "deletions": 67}, "files": [{"sha": "11a650be689f113969a573f3d03f4d073e5e0e8c", "filename": "libgo/Makefile.am", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d25a12fc2db00476f358d2a66ab1e30a7bfa4b9a/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d25a12fc2db00476f358d2a66ab1e30a7bfa4b9a/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=d25a12fc2db00476f358d2a66ab1e30a7bfa4b9a", "patch": "@@ -1559,7 +1559,6 @@ s-syscall_arch: Makefile\n \techo \"package syscall\" > syscall_arch.go.tmp\n \techo 'const ARCH = \"'$(GOARCH)'\"' >> syscall_arch.go.tmp\n \techo 'const OS = \"'$(GOOS)'\"' >> syscall_arch.go.tmp\n-\techo 'const BigEndian = $(GO_BIGENDIAN)' >> syscall_arch.go.tmp\n \t$(SHELL) $(srcdir)/../move-if-change syscall_arch.go.tmp syscall_arch.go\n \t$(STAMP) $@\n "}, {"sha": "f790205bed42abf718d7d69517016a9bfa968955", "filename": "libgo/Makefile.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d25a12fc2db00476f358d2a66ab1e30a7bfa4b9a/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d25a12fc2db00476f358d2a66ab1e30a7bfa4b9a/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=d25a12fc2db00476f358d2a66ab1e30a7bfa4b9a", "patch": "@@ -369,7 +369,6 @@ GOARCH = @GOARCH@\n GOC = @GOC@\n GOCFLAGS = $(CFLAGS)\n GOOS = @GOOS@\n-GO_BIGENDIAN = @GO_BIGENDIAN@\n GO_LIBCALL_OS_ARCH_FILE = @GO_LIBCALL_OS_ARCH_FILE@\n GO_LIBCALL_OS_FILE = @GO_LIBCALL_OS_FILE@\n GO_SYSCALL_OS_ARCH_FILE = @GO_SYSCALL_OS_ARCH_FILE@\n@@ -4372,7 +4371,6 @@ s-syscall_arch: Makefile\n \techo \"package syscall\" > syscall_arch.go.tmp\n \techo 'const ARCH = \"'$(GOARCH)'\"' >> syscall_arch.go.tmp\n \techo 'const OS = \"'$(GOOS)'\"' >> syscall_arch.go.tmp\n-\techo 'const BigEndian = $(GO_BIGENDIAN)' >> syscall_arch.go.tmp\n \t$(SHELL) $(srcdir)/../move-if-change syscall_arch.go.tmp syscall_arch.go\n \t$(STAMP) $@\n "}, {"sha": "937db19eeba9e949b3168d4d3f0ba653eb9f8390", "filename": "libgo/configure", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d25a12fc2db00476f358d2a66ab1e30a7bfa4b9a/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d25a12fc2db00476f358d2a66ab1e30a7bfa4b9a/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=d25a12fc2db00476f358d2a66ab1e30a7bfa4b9a", "patch": "@@ -612,7 +612,6 @@ HAVE_STRERROR_R_FALSE\n HAVE_STRERROR_R_TRUE\n HAVE_SYS_MMAN_H_FALSE\n HAVE_SYS_MMAN_H_TRUE\n-GO_BIGENDIAN\n PTHREAD_LIBS\n PTHREAD_CFLAGS\n NET_LIBS\n@@ -11101,7 +11100,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11104 \"configure\"\n+#line 11103 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11207,7 +11206,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11210 \"configure\"\n+#line 11209 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14409,12 +14408,6 @@ $as_echo \"#define AC_APPLE_UNIVERSAL_BUILD 1\" >>confdefs.h\n  presetting ac_cv_c_bigendian=no (or yes) will help\" \"$LINENO\" 5 ;;\n  esac\n \n-case $ac_cv_c_bigendian in\n-  yes) GO_BIGENDIAN=true ;;\n-  no) GO_BIGENDIAN=false ;;\n-  *) as_fn_error \"unknown endianness\" \"$LINENO\" 5 ;;\n-esac\n-\n \n \n "}, {"sha": "84bf641a9290fdda82fe718fba61f1070c13dca6", "filename": "libgo/configure.ac", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d25a12fc2db00476f358d2a66ab1e30a7bfa4b9a/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d25a12fc2db00476f358d2a66ab1e30a7bfa4b9a/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=d25a12fc2db00476f358d2a66ab1e30a7bfa4b9a", "patch": "@@ -400,12 +400,6 @@ dnl Test if -lrt is required for sched_yield.\n AC_SEARCH_LIBS([sched_yield], [rt])\n \n AC_C_BIGENDIAN\n-case $ac_cv_c_bigendian in\n-  yes) GO_BIGENDIAN=true ;;\n-  no) GO_BIGENDIAN=false ;;\n-  *) AC_MSG_ERROR([unknown endianness]) ;;\n-esac\n-AC_SUBST(GO_BIGENDIAN)\n \n GCC_CHECK_UNWIND_GETIPINFO\n "}, {"sha": "ce2e921e865f696837ed0468c06af3b25e1bbc6e", "filename": "libgo/go/net/interface_linux.go", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d25a12fc2db00476f358d2a66ab1e30a7bfa4b9a/libgo%2Fgo%2Fnet%2Finterface_linux.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d25a12fc2db00476f358d2a66ab1e30a7bfa4b9a/libgo%2Fgo%2Fnet%2Finterface_linux.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Finterface_linux.go?ref=d25a12fc2db00476f358d2a66ab1e30a7bfa4b9a", "patch": "@@ -64,11 +64,7 @@ func newLink(ifim *syscall.IfInfomsg, attrs []syscall.NetlinkRouteAttr) Interfac\n \t\tcase syscall.IFLA_IFNAME:\n \t\t\tifi.Name = string(a.Value[:len(a.Value)-1])\n \t\tcase syscall.IFLA_MTU:\n-\t\t\tif syscall.BigEndian {\n-\t\t\t\tifi.MTU = int(uint32(a.Value[0])<<24 | uint32(a.Value[1])<<16 | uint32(a.Value[2])<<8 | uint32(a.Value[3]))\n-\t\t\t} else {\n-\t\t\t\tifi.MTU = int(uint32(a.Value[3])<<24 | uint32(a.Value[2])<<16 | uint32(a.Value[1])<<8 | uint32(a.Value[0]))\n-\t\t\t}\n+\t\t\tifi.MTU = int(*(*uint32)(unsafe.Pointer(&a.Value[:4][0])))\n \t\t}\n \t}\n \treturn ifi\n@@ -197,15 +193,14 @@ func parseProcNetIGMP(path string, ifi *Interface) []Addr {\n \t\t\tname = f[1]\n \t\tcase len(f[0]) == 8:\n \t\t\tif ifi == nil || name == ifi.Name {\n+\t\t\t\t// The Linux kernel puts the IP\n+\t\t\t\t// address in /proc/net/igmp in native\n+\t\t\t\t// endianness.\n \t\t\t\tfor i := 0; i+1 < len(f[0]); i += 2 {\n \t\t\t\t\tb[i/2], _ = xtoi2(f[0][i:i+2], 0)\n \t\t\t\t}\n-\t\t\t\tvar ifma IPAddr\n-\t\t\t\tif syscall.BigEndian {\n-\t\t\t\t\tifma = IPAddr{IP: IPv4(b[0], b[1], b[2], b[3])}\n-\t\t\t\t} else {\n-\t\t\t\t\tifma = IPAddr{IP: IPv4(b[3], b[2], b[1], b[0])}\n-\t\t\t\t}\n+\t\t\t\ti := *(*uint32)(unsafe.Pointer(&b[:4][0]))\n+\t\t\t\tifma := IPAddr{IP: IPv4(byte(i>>24), byte(i>>16), byte(i>>8), byte(i))}\n \t\t\t\tifmat = append(ifmat, ifma.toAddr())\n \t\t\t}\n \t\t}"}, {"sha": "d535713069bdc1dcfd29a9b6fb0d43549facb2e8", "filename": "libgo/go/syscall/netlink_linux.go", "status": "modified", "additions": 6, "deletions": 37, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d25a12fc2db00476f358d2a66ab1e30a7bfa4b9a/libgo%2Fgo%2Fsyscall%2Fnetlink_linux.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d25a12fc2db00476f358d2a66ab1e30a7bfa4b9a/libgo%2Fgo%2Fsyscall%2Fnetlink_linux.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fnetlink_linux.go?ref=d25a12fc2db00476f358d2a66ab1e30a7bfa4b9a", "patch": "@@ -30,43 +30,12 @@ type NetlinkRouteRequest struct {\n \n func (rr *NetlinkRouteRequest) toWireFormat() []byte {\n \tb := make([]byte, rr.Header.Len)\n-\tif BigEndian {\n-\t\tb[0] = byte(rr.Header.Len >> 24)\n-\t\tb[1] = byte(rr.Header.Len >> 16)\n-\t\tb[2] = byte(rr.Header.Len >> 8)\n-\t\tb[3] = byte(rr.Header.Len)\n-\t\tb[4] = byte(rr.Header.Type >> 8)\n-\t\tb[5] = byte(rr.Header.Type)\n-\t\tb[6] = byte(rr.Header.Flags >> 8)\n-\t\tb[7] = byte(rr.Header.Flags)\n-\t\tb[8] = byte(rr.Header.Seq >> 24)\n-\t\tb[9] = byte(rr.Header.Seq >> 16)\n-\t\tb[10] = byte(rr.Header.Seq >> 8)\n-\t\tb[11] = byte(rr.Header.Seq)\n-\t\tb[12] = byte(rr.Header.Pid >> 24)\n-\t\tb[13] = byte(rr.Header.Pid >> 16)\n-\t\tb[14] = byte(rr.Header.Pid >> 8)\n-\t\tb[15] = byte(rr.Header.Pid)\n-\t\tb[16] = byte(rr.Data.Family)\n-\t} else {\n-\t\tb[0] = byte(rr.Header.Len)\n-\t\tb[1] = byte(rr.Header.Len >> 8)\n-\t\tb[2] = byte(rr.Header.Len >> 16)\n-\t\tb[3] = byte(rr.Header.Len >> 24)\n-\t\tb[4] = byte(rr.Header.Type)\n-\t\tb[5] = byte(rr.Header.Type >> 8)\n-\t\tb[6] = byte(rr.Header.Flags)\n-\t\tb[7] = byte(rr.Header.Flags >> 8)\n-\t\tb[8] = byte(rr.Header.Seq)\n-\t\tb[9] = byte(rr.Header.Seq >> 8)\n-\t\tb[10] = byte(rr.Header.Seq >> 16)\n-\t\tb[11] = byte(rr.Header.Seq >> 24)\n-\t\tb[12] = byte(rr.Header.Pid)\n-\t\tb[13] = byte(rr.Header.Pid >> 8)\n-\t\tb[14] = byte(rr.Header.Pid >> 16)\n-\t\tb[15] = byte(rr.Header.Pid >> 24)\n-\t\tb[16] = byte(rr.Data.Family)\n-\t}\n+\t*(*uint32)(unsafe.Pointer(&b[0:4][0])) = rr.Header.Len\n+\t*(*uint16)(unsafe.Pointer(&b[4:6][0])) = rr.Header.Type\n+\t*(*uint16)(unsafe.Pointer(&b[6:8][0])) = rr.Header.Flags\n+\t*(*uint32)(unsafe.Pointer(&b[8:12][0])) = rr.Header.Seq\n+\t*(*uint32)(unsafe.Pointer(&b[12:16][0])) = rr.Header.Pid\n+\tb[16] = byte(rr.Data.Family)\n \treturn b\n }\n "}, {"sha": "4628fdd919b8d9732b1906ab6cca4e40450ac655", "filename": "libgo/testsuite/Makefile.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d25a12fc2db00476f358d2a66ab1e30a7bfa4b9a/libgo%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d25a12fc2db00476f358d2a66ab1e30a7bfa4b9a/libgo%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Ftestsuite%2FMakefile.in?ref=d25a12fc2db00476f358d2a66ab1e30a7bfa4b9a", "patch": "@@ -86,7 +86,6 @@ GOARCH = @GOARCH@\n GOC = @GOC@\n GOCFLAGS = @GOCFLAGS@\n GOOS = @GOOS@\n-GO_BIGENDIAN = @GO_BIGENDIAN@\n GO_LIBCALL_OS_ARCH_FILE = @GO_LIBCALL_OS_ARCH_FILE@\n GO_LIBCALL_OS_FILE = @GO_LIBCALL_OS_FILE@\n GO_SYSCALL_OS_ARCH_FILE = @GO_SYSCALL_OS_ARCH_FILE@"}]}