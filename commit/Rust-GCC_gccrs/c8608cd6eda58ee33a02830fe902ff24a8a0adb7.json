{"sha": "c8608cd6eda58ee33a02830fe902ff24a8a0adb7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg2MDhjZDZlZGE1OGVlMzNhMDI4MzBmZTkwMmZmMjRhOGEwYWRiNw==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@integrable-solutions.net", "date": "2003-05-08T17:09:09Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2003-05-08T17:09:09Z"}, "message": "stmt.c (emit_locus): New macro.\n\n\t* stmt.c (emit_locus): New macro.\n\t(emit_filename): Remove.\n\t(emit_lineno): Likewise.\n\t(struct stmt_status): Replace members x_emit_filename and\n\tx_emit_lineno with x_emit_locus.\n\t(set_file_and_line_for_stmt): Adjust.\n\t(expand_expr_stmt_value): Don't use warning_with_file_and_file.\n\t(warn_if_unused_value): Likewise.\n\t(check_seenlabel): Likewise.\n\nFrom-SVN: r66603", "tree": {"sha": "d256c0239e2fc2d0ba42c569a0eab6c39520413b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d256c0239e2fc2d0ba42c569a0eab6c39520413b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8608cd6eda58ee33a02830fe902ff24a8a0adb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8608cd6eda58ee33a02830fe902ff24a8a0adb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8608cd6eda58ee33a02830fe902ff24a8a0adb7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8608cd6eda58ee33a02830fe902ff24a8a0adb7/comments", "author": {"login": "cxx-undef", "id": 5528103, "node_id": "MDQ6VXNlcjU1MjgxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5528103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxx-undef", "html_url": "https://github.com/cxx-undef", "followers_url": "https://api.github.com/users/cxx-undef/followers", "following_url": "https://api.github.com/users/cxx-undef/following{/other_user}", "gists_url": "https://api.github.com/users/cxx-undef/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxx-undef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxx-undef/subscriptions", "organizations_url": "https://api.github.com/users/cxx-undef/orgs", "repos_url": "https://api.github.com/users/cxx-undef/repos", "events_url": "https://api.github.com/users/cxx-undef/events{/privacy}", "received_events_url": "https://api.github.com/users/cxx-undef/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cb1f476fff166ee03e9515dea91a95d7e004ef11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb1f476fff166ee03e9515dea91a95d7e004ef11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb1f476fff166ee03e9515dea91a95d7e004ef11"}], "stats": {"total": 43, "additions": 27, "deletions": 16}, "files": [{"sha": "fd1bdb59d09ebb08534729ec6dc6bb277c5139c6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8608cd6eda58ee33a02830fe902ff24a8a0adb7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8608cd6eda58ee33a02830fe902ff24a8a0adb7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c8608cd6eda58ee33a02830fe902ff24a8a0adb7", "patch": "@@ -1,3 +1,15 @@\n+2003-05-08  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\t* stmt.c (emit_locus): New macro.\n+\t(emit_filename): Remove.\n+\t(emit_lineno): Likewise.\n+\t(struct stmt_status): Replace members x_emit_filename and\n+\tx_emit_lineno with x_emit_locus.\n+\t(set_file_and_line_for_stmt): Adjust.\n+\t(expand_expr_stmt_value): Don't use warning_with_file_and_file.\n+\t(warn_if_unused_value): Likewise.\n+\t(check_seenlabel): Likewise.\n+\n 2003-05-08  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* c-decl.c (define_label): Tidy.  Don't use any of"}, {"sha": "fa87140fe48afc9c768d65e284ddea32e3591d81", "filename": "gcc/stmt.c", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8608cd6eda58ee33a02830fe902ff24a8a0adb7/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8608cd6eda58ee33a02830fe902ff24a8a0adb7/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=c8608cd6eda58ee33a02830fe902ff24a8a0adb7", "patch": "@@ -366,10 +366,9 @@ struct stmt_status GTY(())\n      always compute a value for each expr-stmt in case it is the last one.  */\n   int x_expr_stmts_for_value;\n \n-  /* Filename and line number of last line-number note,\n-     whether we actually emitted it or not.  */\n-  const char *x_emit_filename;\n-  int x_emit_lineno;\n+  /* Location of last line-number note, whether we actually\n+     emitted it or not.  */\n+  location_t x_emit_locus;\n \n   struct goto_fixup *x_goto_fixup_chain;\n };\n@@ -385,8 +384,7 @@ struct stmt_status GTY(())\n #define last_expr_type (cfun->stmt->x_last_expr_type)\n #define last_expr_value (cfun->stmt->x_last_expr_value)\n #define expr_stmts_for_value (cfun->stmt->x_expr_stmts_for_value)\n-#define emit_filename (cfun->stmt->x_emit_filename)\n-#define emit_lineno (cfun->stmt->x_emit_lineno)\n+#define emit_locus (cfun->stmt->x_emit_locus)\n #define goto_fixup_chain (cfun->stmt->x_goto_fixup_chain)\n \n /* Nonzero if we are using EH to handle cleanups.  */\n@@ -474,8 +472,8 @@ set_file_and_line_for_stmt (file, line)\n      update it.  */\n   if (cfun->stmt)\n     {\n-      emit_filename = file;\n-      emit_lineno = line;\n+      emit_locus.file = file;\n+      emit_locus.line = line;\n     }\n }\n \n@@ -2200,8 +2198,7 @@ expand_expr_stmt_value (exp, want_value, maybe_last)\n \t  if (warn_unused_value\n \t      && !(TREE_CODE (exp) == CONVERT_EXPR\n \t\t   && VOID_TYPE_P (TREE_TYPE (exp))))\n-\t    warning_with_file_and_line (emit_filename, emit_lineno,\n-\t\t\t\t        \"statement with no effect\");\n+\t    warning (\"%Hstatement with no effect\", &emit_locus);\n \t}\n       else if (warn_unused_value)\n \twarn_if_unused_value (exp);\n@@ -2361,8 +2358,7 @@ warn_if_unused_value (exp)\n       if (TREE_SIDE_EFFECTS (exp))\n \treturn 0;\n \n-      warning_with_file_and_line (emit_filename, emit_lineno,\n-\t\t\t\t  \"value computed is not used\");\n+      warning (\"%Hvalue computed is not used\", &emit_locus);\n       return 1;\n     }\n }\n@@ -4507,10 +4503,13 @@ check_seenlabel ()\n \n \t      /* If insn is zero, then there must have been a syntax error.  */\n \t      if (insn)\n-\t\twarning_with_file_and_line (NOTE_SOURCE_FILE (insn),\n-\t\t\t\t\t    NOTE_LINE_NUMBER (insn),\n-\t\t\t\t\t    \"unreachable code at beginning of %s\",\n-\t\t\t\t\t    case_stack->data.case_stmt.printname);\n+                {\n+                  location_t locus;\n+                  locus.file = NOTE_SOURCE_FILE (insn);\n+                  locus.line = NOTE_LINE_NUMBER (insn);\n+                  warning (\"%Hunreachable code at beginning of %s\", &locus,\n+                           case_stack->data.case_stmt.printname);\n+                }\n \t      break;\n \t    }\n \t}"}]}