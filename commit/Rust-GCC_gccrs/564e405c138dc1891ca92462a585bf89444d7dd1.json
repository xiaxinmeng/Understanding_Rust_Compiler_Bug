{"sha": "564e405c138dc1891ca92462a585bf89444d7dd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY0ZTQwNWMxMzhkYzE4OTFjYTkyNDYyYTU4NWJmODk0NDRkN2RkMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-07-19T13:10:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-07-19T13:10:05Z"}, "message": "re PR tree-optimization/81346 (Missed constant propagation into comparison)\n\n\tPR tree-optimization/81346\n\t* match.pd: Optimize (X - 1U) <= INT_MAX-1U into (int) X > 0.\n\n\t* gcc.dg/tree-ssa/pr81346-5.c: New test.\n\nFrom-SVN: r250342", "tree": {"sha": "9e875de35ac0f6800dfa505953c13e700cc8a307", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e875de35ac0f6800dfa505953c13e700cc8a307"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/564e405c138dc1891ca92462a585bf89444d7dd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/564e405c138dc1891ca92462a585bf89444d7dd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/564e405c138dc1891ca92462a585bf89444d7dd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/564e405c138dc1891ca92462a585bf89444d7dd1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3717fbe35e288a02ddf97367355b15530745cecb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3717fbe35e288a02ddf97367355b15530745cecb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3717fbe35e288a02ddf97367355b15530745cecb"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "c87edc1fcf844f9b112cad01c5f06525ee65aeba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564e405c138dc1891ca92462a585bf89444d7dd1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564e405c138dc1891ca92462a585bf89444d7dd1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=564e405c138dc1891ca92462a585bf89444d7dd1", "patch": "@@ -1,3 +1,8 @@\n+2017-07-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/81346\n+\t* match.pd: Optimize (X - 1U) <= INT_MAX-1U into (int) X > 0.\n+\n 2017-07-19  Tom de Vries  <tom@codesourcery.com>\n \n \t* config/nvptx/nvptx.md (VECIM): Add V2DI."}, {"sha": "56d13b3c1758563d37aeafa72f8e1b9bb178424b", "filename": "gcc/match.pd", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564e405c138dc1891ca92462a585bf89444d7dd1/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564e405c138dc1891ca92462a585bf89444d7dd1/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=564e405c138dc1891ca92462a585bf89444d7dd1", "patch": "@@ -1125,6 +1125,19 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n \t&& wi::neg_p (@1, TYPE_SIGN (TREE_TYPE (@1))))\n     (cmp @2 @0))))))\n \n+/* (X - 1U) <= INT_MAX-1U into (int) X > 0.  */\n+(for cmp (le gt)\n+     icmp (gt le)\n+ (simplify\n+  (cmp (plus @0 integer_minus_onep@1) INTEGER_CST@2)\n+   (if (INTEGRAL_TYPE_P (TREE_TYPE (@0))\n+\t&& TYPE_UNSIGNED (TREE_TYPE (@0))\n+\t&& TYPE_PRECISION (TREE_TYPE (@0)) > 1\n+\t&& wi::eq_p (@2, wi::max_value (TYPE_PRECISION (TREE_TYPE (@0)),\n+\t\t\t\t\tSIGNED) - 1))\n+    (with { tree stype = signed_type_for (TREE_TYPE (@0)); }\n+     (icmp (convert:stype @0) { build_int_cst (stype, 0); })))))\n+\n /* X / 4 < Y / 4 iff X < Y when the division is known to be exact.  */\n (for cmp (simple_comparison)\n  (simplify"}, {"sha": "a193548b0048a9bc5421ff0a8b35704e84ff169f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564e405c138dc1891ca92462a585bf89444d7dd1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564e405c138dc1891ca92462a585bf89444d7dd1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=564e405c138dc1891ca92462a585bf89444d7dd1", "patch": "@@ -1,3 +1,8 @@\n+2017-07-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/81346\n+\t* gcc.dg/tree-ssa/pr81346-5.c: New test.\n+\n 2017-07-19  Tom de Vries  <tom@codesourcery.com>\n \n \t* gcc.target/nvptx/decl-init.c: Update alignment."}, {"sha": "14562a11152241cecaadb9bb98cdbff572f4964f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr81346-5.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564e405c138dc1891ca92462a585bf89444d7dd1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr81346-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564e405c138dc1891ca92462a585bf89444d7dd1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr81346-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr81346-5.c?ref=564e405c138dc1891ca92462a585bf89444d7dd1", "patch": "@@ -0,0 +1,17 @@\n+/* PR tree-optimization/81346 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump-times \"\\\\(signed int\\\\) x\" 10 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \" <= 0;\" 5 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \" > 0;\" 5 \"optimized\" } } */\n+\n+int f1 (unsigned x) { return x - 1 <= __INT_MAX__ - 1; }\n+int f2 (unsigned x) { unsigned a = 1, b = __INT_MAX__ - 1; return x - a <= b; }\n+int f3 (unsigned x) { return x - 1 < __INT_MAX__; }\n+int f4 (unsigned x) { unsigned a = 1, b = __INT_MAX__; return x - a < b; }\n+int f5 (unsigned x) { return x >= 1 && x <= __INT_MAX__; }\n+int f6 (unsigned x) { return x - 1 > __INT_MAX__ - 1; }\n+int f7 (unsigned x) { unsigned a = 1, b = __INT_MAX__ - 1; return x - a > b; }\n+int f8 (unsigned x) { return x - 1 >= __INT_MAX__; }\n+int f9 (unsigned x) { unsigned a = 1, b = __INT_MAX__; return x - a >= b; }\n+int f10 (unsigned x) { return x < 1 || x > __INT_MAX__; }"}]}