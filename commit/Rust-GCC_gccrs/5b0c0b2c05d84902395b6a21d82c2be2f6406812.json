{"sha": "5b0c0b2c05d84902395b6a21d82c2be2f6406812", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIwYzBiMmMwNWQ4NDkwMjM5NWI2YTIxZDgyYzJiZTJmNjQwNjgxMg==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2009-03-30T18:51:25Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2009-03-30T18:51:25Z"}, "message": "ira-int.h (ira_allocno): Rename left_conflicts_num to left_conflicts_size.\n\n2009-03-30  Vladimir Makarov  <vmakarov@redhat.com>\n\n\t* ira-int.h (ira_allocno): Rename left_conflicts_num to\n\tleft_conflicts_size.\n\t(ALLOCNO_LEFT_CONFLICTS_NUM): Rename to\n\tALLOCNO_LEFT_CONFLICTS_SIZE.\n\n\t* ira-color.c (allocno_spill_priority, push_allocno_to_stack,\n\tremove_allocno_from_bucket_and_push,\n\tallocno_spill_priority_compare, push_allocnos_to_stack,\n\tsetup_allocno_available_regs_num): Use ALLOCNO_LEFT_CONFLICTS_SIZE\n\tinstead of ALLOCNO_LEFT_CONFLICTS_NUM.\n\t(setup_allocno_left_conflicts_num): Ditto.  Rename to\n\tsetup_allocno_left_conflicts_size.\n\t(put_allocno_into_bucket): Use ALLOCNO_LEFT_CONFLICTS_SIZE\n\tinstead of ALLOCNO_LEFT_CONFLICTS_NUM and\n\tsetup_allocno_left_conflicts_size instead of\n\tsetup_allocno_left_conflicts_num.\n\n\t* ira-build.c (ira_create_allocno): Use\n\tALLOCNO_LEFT_CONFLICTS_SIZE instead of\n\tALLOCNO_LEFT_CONFLICTS_NUM.\n\nFrom-SVN: r145312", "tree": {"sha": "c91f5be24ed9d4e8c7defad54927509c718991a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c91f5be24ed9d4e8c7defad54927509c718991a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b0c0b2c05d84902395b6a21d82c2be2f6406812", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b0c0b2c05d84902395b6a21d82c2be2f6406812", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b0c0b2c05d84902395b6a21d82c2be2f6406812", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b0c0b2c05d84902395b6a21d82c2be2f6406812/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9a48a93f5f4b08879c6156529560bdeb44e4c91a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a48a93f5f4b08879c6156529560bdeb44e4c91a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a48a93f5f4b08879c6156529560bdeb44e4c91a"}], "stats": {"total": 79, "additions": 52, "deletions": 27}, "files": [{"sha": "c01e6ad4a553cdd3fa1e99c49170d5effe774951", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b0c0b2c05d84902395b6a21d82c2be2f6406812/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b0c0b2c05d84902395b6a21d82c2be2f6406812/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b0c0b2c05d84902395b6a21d82c2be2f6406812", "patch": "@@ -1,3 +1,26 @@\n+2009-03-30  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\t* ira-int.h (ira_allocno): Rename left_conflicts_num to\n+\tleft_conflicts_size.\n+\t(ALLOCNO_LEFT_CONFLICTS_NUM): Rename to\n+\tALLOCNO_LEFT_CONFLICTS_SIZE.\n+\n+\t* ira-color.c (allocno_spill_priority, push_allocno_to_stack,\n+\tremove_allocno_from_bucket_and_push,\n+\tallocno_spill_priority_compare, push_allocnos_to_stack,\n+\tsetup_allocno_available_regs_num): Use ALLOCNO_LEFT_CONFLICTS_SIZE\n+\tinstead of ALLOCNO_LEFT_CONFLICTS_NUM.\n+\t(setup_allocno_left_conflicts_num): Ditto.  Rename to\n+\tsetup_allocno_left_conflicts_size.\n+\t(put_allocno_into_bucket): Use ALLOCNO_LEFT_CONFLICTS_SIZE\n+\tinstead of ALLOCNO_LEFT_CONFLICTS_NUM and\n+\tsetup_allocno_left_conflicts_size instead of\n+\tsetup_allocno_left_conflicts_num.\n+\n+\t* ira-build.c (ira_create_allocno): Use\n+\tALLOCNO_LEFT_CONFLICTS_SIZE instead of\n+\tALLOCNO_LEFT_CONFLICTS_NUM.\n+\t\t\n 2009-03-30  Vladimir Makarov  <vmakarov@redhat.com>\n \n \t* reload.c (push_reload, find_dummy_reload): Use df_get_live_out"}, {"sha": "ff406077cbcbcaca6234bda4e9781972808a1a22", "filename": "gcc/ira-build.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b0c0b2c05d84902395b6a21d82c2be2f6406812/gcc%2Fira-build.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b0c0b2c05d84902395b6a21d82c2be2f6406812/gcc%2Fira-build.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-build.c?ref=5b0c0b2c05d84902395b6a21d82c2be2f6406812", "patch": "@@ -468,7 +468,7 @@ ira_create_allocno (int regno, bool cap_p, ira_loop_tree_node_t loop_tree_node)\n   ALLOCNO_CONFLICT_HARD_REG_COSTS (a) = NULL;\n   ALLOCNO_UPDATED_HARD_REG_COSTS (a) = NULL;\n   ALLOCNO_UPDATED_CONFLICT_HARD_REG_COSTS (a) = NULL;\n-  ALLOCNO_LEFT_CONFLICTS_NUM (a) = -1;\n+  ALLOCNO_LEFT_CONFLICTS_SIZE (a) = -1;\n   ALLOCNO_COVER_CLASS (a) = NO_REGS;\n   ALLOCNO_UPDATED_COVER_CLASS_COST (a) = 0;\n   ALLOCNO_COVER_CLASS_COST (a) = 0;"}, {"sha": "d61d39e9a01c2e8ab6ad33bfe358ef12b52cd04b", "filename": "gcc/ira-color.c", "status": "modified", "additions": 23, "deletions": 21, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b0c0b2c05d84902395b6a21d82c2be2f6406812/gcc%2Fira-color.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b0c0b2c05d84902395b6a21d82c2be2f6406812/gcc%2Fira-color.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-color.c?ref=5b0c0b2c05d84902395b6a21d82c2be2f6406812", "patch": "@@ -683,7 +683,7 @@ static int\n allocno_spill_priority (ira_allocno_t a)\n {\n   return (ALLOCNO_TEMP (a)\n-\t  / (ALLOCNO_LEFT_CONFLICTS_NUM (a)\n+\t  / (ALLOCNO_LEFT_CONFLICTS_SIZE (a)\n \t     * ira_reg_class_nregs[ALLOCNO_COVER_CLASS (a)][ALLOCNO_MODE (a)]\n \t     + 1));\n }\n@@ -861,7 +861,7 @@ static splay_tree uncolorable_allocnos_splay_tree[N_REG_CLASSES];\n static void\n push_allocno_to_stack (ira_allocno_t allocno)\n {\n-  int conflicts_num, conflict_size, size;\n+  int left_conflicts_size, conflict_size, size;\n   ira_allocno_t a, conflict_allocno;\n   enum reg_class cover_class;\n   ira_allocno_conflict_iterator aci;\n@@ -896,20 +896,21 @@ push_allocno_to_stack (ira_allocno_t allocno)\n \t      if (ALLOCNO_IN_GRAPH_P (conflict_allocno)\n \t\t  && ! ALLOCNO_ASSIGNED_P (conflict_allocno))\n \t\t{\n-\t\t  conflicts_num = ALLOCNO_LEFT_CONFLICTS_NUM (conflict_allocno);\n+\t\t  left_conflicts_size\n+\t\t    = ALLOCNO_LEFT_CONFLICTS_SIZE (conflict_allocno);\n \t\t  conflict_size\n \t\t    = (ira_reg_class_nregs\n \t\t       [cover_class][ALLOCNO_MODE (conflict_allocno)]);\n \t\t  ira_assert\n-\t\t    (ALLOCNO_LEFT_CONFLICTS_NUM (conflict_allocno) >= size);\n-\t\t  if (conflicts_num + conflict_size\n+\t\t    (ALLOCNO_LEFT_CONFLICTS_SIZE (conflict_allocno) >= size);\n+\t\t  if (left_conflicts_size + conflict_size\n \t\t      <= ALLOCNO_AVAILABLE_REGS_NUM (conflict_allocno))\n \t\t    {\n-\t\t      ALLOCNO_LEFT_CONFLICTS_NUM (conflict_allocno) -= size;\n+\t\t      ALLOCNO_LEFT_CONFLICTS_SIZE (conflict_allocno) -= size;\n \t\t      continue;\n \t\t    }\n-\t\t  conflicts_num\n-\t\t    = ALLOCNO_LEFT_CONFLICTS_NUM (conflict_allocno) - size;\n+\t\t  left_conflicts_size\n+\t\t    = ALLOCNO_LEFT_CONFLICTS_SIZE (conflict_allocno) - size;\n \t\t  if (uncolorable_allocnos_splay_tree[cover_class] != NULL\n \t\t      && !ALLOCNO_SPLAY_REMOVED_P (conflict_allocno)\n \t\t      && USE_SPLAY_P (cover_class))\n@@ -926,8 +927,9 @@ push_allocno_to_stack (ira_allocno_t allocno)\n \t\t\t\t     removed_splay_allocno_vec,\n \t\t\t\t     conflict_allocno);\n \t\t    }\n-\t\t  ALLOCNO_LEFT_CONFLICTS_NUM (conflict_allocno) = conflicts_num;\n-\t\t  if (conflicts_num + conflict_size\n+\t\t  ALLOCNO_LEFT_CONFLICTS_SIZE (conflict_allocno)\n+\t\t    = left_conflicts_size;\n+\t\t  if (left_conflicts_size + conflict_size\n \t\t      <= ALLOCNO_AVAILABLE_REGS_NUM (conflict_allocno))\n \t\t    {\n \t\t      delete_allocno_from_bucket\n@@ -967,11 +969,11 @@ remove_allocno_from_bucket_and_push (ira_allocno_t allocno, bool colorable_p)\n     }\n   cover_class = ALLOCNO_COVER_CLASS (allocno);\n   ira_assert ((colorable_p\n-\t       && (ALLOCNO_LEFT_CONFLICTS_NUM (allocno)\n+\t       && (ALLOCNO_LEFT_CONFLICTS_SIZE (allocno)\n \t\t   + ira_reg_class_nregs[cover_class][ALLOCNO_MODE (allocno)]\n \t\t   <= ALLOCNO_AVAILABLE_REGS_NUM (allocno)))\n \t      || (! colorable_p\n-\t\t  && (ALLOCNO_LEFT_CONFLICTS_NUM (allocno)\n+\t\t  && (ALLOCNO_LEFT_CONFLICTS_SIZE (allocno)\n \t\t      + ira_reg_class_nregs[cover_class][ALLOCNO_MODE\n \t\t\t\t\t\t\t (allocno)]\n \t\t      > ALLOCNO_AVAILABLE_REGS_NUM (allocno))));\n@@ -1084,11 +1086,11 @@ allocno_spill_priority_compare (splay_tree_key k1, splay_tree_key k2)\n   ira_allocno_t a1 = (ira_allocno_t) k1, a2 = (ira_allocno_t) k2;\n   \n   pri1 = (ALLOCNO_TEMP (a1)\n-\t  / (ALLOCNO_LEFT_CONFLICTS_NUM (a1)\n+\t  / (ALLOCNO_LEFT_CONFLICTS_SIZE (a1)\n \t     * ira_reg_class_nregs[ALLOCNO_COVER_CLASS (a1)][ALLOCNO_MODE (a1)]\n \t     + 1));\n   pri2 = (ALLOCNO_TEMP (a2)\n-\t  / (ALLOCNO_LEFT_CONFLICTS_NUM (a2)\n+\t  / (ALLOCNO_LEFT_CONFLICTS_SIZE (a2)\n \t     * ira_reg_class_nregs[ALLOCNO_COVER_CLASS (a2)][ALLOCNO_MODE (a2)]\n \t     + 1));\n   if ((diff = pri1 - pri2) != 0)\n@@ -1225,7 +1227,7 @@ push_allocnos_to_stack (void)\n \t      allocno = VEC_pop (ira_allocno_t, removed_splay_allocno_vec);\n \t      ALLOCNO_SPLAY_REMOVED_P (allocno) = false;\n \t      rclass = ALLOCNO_COVER_CLASS (allocno);\n-\t      if (ALLOCNO_LEFT_CONFLICTS_NUM (allocno)\n+\t      if (ALLOCNO_LEFT_CONFLICTS_SIZE (allocno)\n \t\t  + ira_reg_class_nregs [rclass][ALLOCNO_MODE (allocno)]\n \t\t  > ALLOCNO_AVAILABLE_REGS_NUM (allocno))\n \t\tsplay_tree_insert\n@@ -1288,7 +1290,7 @@ push_allocnos_to_stack (void)\n \t}\n       ira_assert (ALLOCNO_IN_GRAPH_P (allocno)\n \t\t  && ALLOCNO_COVER_CLASS (allocno) == cover_class\n-\t\t  && (ALLOCNO_LEFT_CONFLICTS_NUM (allocno)\n+\t\t  && (ALLOCNO_LEFT_CONFLICTS_SIZE (allocno)\n \t\t      + ira_reg_class_nregs[cover_class][ALLOCNO_MODE\n \t\t\t\t\t\t\t (allocno)]\n \t\t      > ALLOCNO_AVAILABLE_REGS_NUM (allocno)));\n@@ -1380,9 +1382,9 @@ setup_allocno_available_regs_num (ira_allocno_t allocno)\n   ALLOCNO_AVAILABLE_REGS_NUM (allocno) -= n;\n }\n \n-/* Set up ALLOCNO_LEFT_CONFLICTS_NUM for ALLOCNO.  */\n+/* Set up ALLOCNO_LEFT_CONFLICTS_SIZE for ALLOCNO.  */\n static void\n-setup_allocno_left_conflicts_num (ira_allocno_t allocno)\n+setup_allocno_left_conflicts_size (ira_allocno_t allocno)\n {\n   int i, hard_regs_num, hard_regno, conflict_allocnos_size;\n   ira_allocno_t a, conflict_allocno;\n@@ -1466,7 +1468,7 @@ setup_allocno_left_conflicts_num (ira_allocno_t allocno)\n         if (a == allocno)\n \t  break;\n       }\n-  ALLOCNO_LEFT_CONFLICTS_NUM (allocno) = conflict_allocnos_size;\n+  ALLOCNO_LEFT_CONFLICTS_SIZE (allocno) = conflict_allocnos_size;\n }\n \n /* Put ALLOCNO in a bucket corresponding to its number and size of its\n@@ -1482,9 +1484,9 @@ put_allocno_into_bucket (ira_allocno_t allocno)\n   if (ALLOCNO_FIRST_COALESCED_ALLOCNO (allocno) != allocno)\n     return;\n   ALLOCNO_IN_GRAPH_P (allocno) = true;\n-  setup_allocno_left_conflicts_num (allocno);\n+  setup_allocno_left_conflicts_size (allocno);\n   setup_allocno_available_regs_num (allocno);\n-  if (ALLOCNO_LEFT_CONFLICTS_NUM (allocno)\n+  if (ALLOCNO_LEFT_CONFLICTS_SIZE (allocno)\n       + ira_reg_class_nregs[cover_class][ALLOCNO_MODE (allocno)]\n       <= ALLOCNO_AVAILABLE_REGS_NUM (allocno))\n     add_allocno_to_bucket (allocno, &colorable_allocno_bucket);"}, {"sha": "6e66cc495720a3be0c28a7d437ad862f6fac9df5", "filename": "gcc/ira-int.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b0c0b2c05d84902395b6a21d82c2be2f6406812/gcc%2Fira-int.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b0c0b2c05d84902395b6a21d82c2be2f6406812/gcc%2Fira-int.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-int.h?ref=5b0c0b2c05d84902395b6a21d82c2be2f6406812", "patch": "@@ -405,10 +405,10 @@ struct ira_allocno\n      preferences of other allocnos not assigned yet during assigning\n      to given allocno.  */\n   int *conflict_hard_reg_costs, *updated_conflict_hard_reg_costs;\n-  /* Number of the same cover class allocnos with TRUE in_graph_p\n-     value and conflicting with given allocno during each point of\n-     graph coloring.  */\n-  int left_conflicts_num;\n+  /* Size (in hard registers) of the same cover class allocnos with\n+     TRUE in_graph_p value and conflicting with given allocno during\n+     each point of graph coloring.  */\n+  int left_conflicts_size;\n   /* Number of hard registers of the allocno cover class really\n      available for the allocno allocation.  */\n   int available_regs_num;\n@@ -464,7 +464,7 @@ struct ira_allocno\n   ((A)->conflict_hard_reg_costs)\n #define ALLOCNO_UPDATED_CONFLICT_HARD_REG_COSTS(A) \\\n   ((A)->updated_conflict_hard_reg_costs)\n-#define ALLOCNO_LEFT_CONFLICTS_NUM(A) ((A)->left_conflicts_num)\n+#define ALLOCNO_LEFT_CONFLICTS_SIZE(A) ((A)->left_conflicts_size)\n #define ALLOCNO_COVER_CLASS(A) ((A)->cover_class)\n #define ALLOCNO_COVER_CLASS_COST(A) ((A)->cover_class_cost)\n #define ALLOCNO_UPDATED_COVER_CLASS_COST(A) ((A)->updated_cover_class_cost)"}]}