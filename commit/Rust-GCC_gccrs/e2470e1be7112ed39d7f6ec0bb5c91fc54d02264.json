{"sha": "e2470e1be7112ed39d7f6ec0bb5c91fc54d02264", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI0NzBlMWJlNzExMmVkMzlkN2Y2ZWMwYmI1YzkxZmM1NGQwMjI2NA==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@redhat.com", "date": "2001-08-31T07:57:54Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2001-08-31T07:57:54Z"}, "message": "stormy16.c (stormy16_expand_epilogue): Use the frame pointer to pop the stack if convenient.\n\n\t* config/stormy16/stormy16.c (stormy16_expand_epilogue): Use\n\tthe frame pointer to pop the stack if convenient.\n\n\t* config/stormy16/stormy16.c (stormy16_initialize_trampoline):\n\tDon't use post-increment before combine.\n\t* config/stormy16/stormy16.h (STATIC_CHAIN_REGNUM): Don't use\n\ta call-saved register.\n\nFrom-SVN: r45314", "tree": {"sha": "24b2c46fc2b1ed7d372a5b59e977b01466ef88d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24b2c46fc2b1ed7d372a5b59e977b01466ef88d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2470e1be7112ed39d7f6ec0bb5c91fc54d02264", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2470e1be7112ed39d7f6ec0bb5c91fc54d02264", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2470e1be7112ed39d7f6ec0bb5c91fc54d02264", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2470e1be7112ed39d7f6ec0bb5c91fc54d02264/comments", "author": null, "committer": null, "parents": [{"sha": "06d2bb80020a3b32c913b41d2b52281d2a1aa048", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06d2bb80020a3b32c913b41d2b52281d2a1aa048", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06d2bb80020a3b32c913b41d2b52281d2a1aa048"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "5c3b6bd1cc4fe900a12c41952ff038d7c8b39d8a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2470e1be7112ed39d7f6ec0bb5c91fc54d02264/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2470e1be7112ed39d7f6ec0bb5c91fc54d02264/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e2470e1be7112ed39d7f6ec0bb5c91fc54d02264", "patch": "@@ -1,3 +1,13 @@\n+2001-08-31  Geoffrey Keating  <geoffk@redhat.com>\n+\n+\t* config/stormy16/stormy16.c (stormy16_expand_epilogue): Use\n+\tthe frame pointer to pop the stack if convenient.\n+\n+\t* config/stormy16/stormy16.c (stormy16_initialize_trampoline):\n+\tDon't use post-increment before combine.\n+\t* config/stormy16/stormy16.h (STATIC_CHAIN_REGNUM): Don't use\n+\ta call-saved register.\n+\n 2001-08-31  Andreas Jaeger  <aj@suse.de>\n \n \t* jump.c (mark_jump_label): Revert patch from 2001-08-28, the"}, {"sha": "758b97770b6fc42cdb1f4ab74b0221ca0b5b8076", "filename": "gcc/config/stormy16/stormy16.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2470e1be7112ed39d7f6ec0bb5c91fc54d02264/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2470e1be7112ed39d7f6ec0bb5c91fc54d02264/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.c?ref=e2470e1be7112ed39d7f6ec0bb5c91fc54d02264", "patch": "@@ -1023,8 +1023,13 @@ stormy16_expand_epilogue ()\n \n   /* Pop the stack for the locals.  */\n   if (layout.locals_size)\n-    emit_addhi3_postreload (stack_pointer_rtx, stack_pointer_rtx,\n-\t\t\t    GEN_INT (- layout.locals_size));\n+    {\n+      if (frame_pointer_needed && layout.sp_minus_fp == layout.locals_size)\n+\temit_move_insn (stack_pointer_rtx, hard_frame_pointer_rtx);\n+      else\n+\temit_addhi3_postreload (stack_pointer_rtx, stack_pointer_rtx,\n+\t\t\t\tGEN_INT (- layout.locals_size));\n+    }\n \n   /* Restore any call-saved registers.  */\n   for (regno = FIRST_PSEUDO_REGISTER - 1; regno >= 0; regno--)\n@@ -1262,18 +1267,21 @@ stormy16_initialize_trampoline (addr, fnaddr, static_chain)\n   rtx reg_fnaddr = gen_reg_rtx (HImode);\n   rtx reg_addr_mem;\n \n-  reg_addr_mem = gen_rtx_MEM (HImode, gen_rtx_POST_INC (Pmode, reg_addr));\n+  reg_addr_mem = gen_rtx_MEM (HImode, reg_addr);\n     \n   emit_move_insn (reg_addr, addr);\n   emit_move_insn (temp, GEN_INT (0x3130 | STATIC_CHAIN_REGNUM));\n   emit_move_insn (reg_addr_mem, temp);\n+  emit_insn (gen_addhi3 (reg_addr, reg_addr, const2_rtx));\n   emit_move_insn (temp, static_chain);\n   emit_move_insn (reg_addr_mem, temp);\n+  emit_insn (gen_addhi3 (reg_addr, reg_addr, const2_rtx));\n   emit_move_insn (reg_fnaddr, fnaddr);\n   emit_move_insn (temp, reg_fnaddr);\n   emit_insn (gen_andhi3 (temp, temp, GEN_INT (0xFF)));\n   emit_insn (gen_iorhi3 (temp, temp, GEN_INT (0x0200)));\n   emit_move_insn (reg_addr_mem, temp);\n+  emit_insn (gen_addhi3 (reg_addr, reg_addr, const2_rtx));\n   emit_insn (gen_lshrhi3 (reg_fnaddr, reg_fnaddr, GEN_INT (8)));\n   emit_move_insn (reg_addr_mem, reg_fnaddr);\n }"}, {"sha": "9a3b1193084117750f3afb55bf7dd06d511697d3", "filename": "gcc/config/stormy16/stormy16.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2470e1be7112ed39d7f6ec0bb5c91fc54d02264/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2470e1be7112ed39d7f6ec0bb5c91fc54d02264/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.h?ref=e2470e1be7112ed39d7f6ec0bb5c91fc54d02264", "patch": "@@ -1785,7 +1785,7 @@ enum reg_class\n \n    If the static chain is passed in memory, these macros should not be defined;\n    instead, the next two macros should be defined.  */\n-#define STATIC_CHAIN_REGNUM 12\n+#define STATIC_CHAIN_REGNUM 1\n /* #define STATIC_CHAIN_INCOMING_REGNUM */\n \n /* If the static chain is passed in memory, these macros provide rtx giving"}]}