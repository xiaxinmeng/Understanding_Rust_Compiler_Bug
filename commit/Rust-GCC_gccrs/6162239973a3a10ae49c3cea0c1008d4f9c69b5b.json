{"sha": "6162239973a3a10ae49c3cea0c1008d4f9c69b5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE2MjIzOTk3M2EzYTEwYWU0OWMzY2VhMGMxMDA4ZDRmOWM2OWI1Yg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2013-11-11T13:33:48Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2013-11-11T13:33:48Z"}, "message": "re PR libstdc++/54562 (mutex and condition variable timers)\n\n\tPR libstdc++/54562\n\t* include/std/mutex (__timed_mutex_impl::__clock_t): Use\n\thigh_resolution_clock for absolute timeouts, because\n\tpthread_mutex_timedlock uses CLOCK_REALTIME not CLOCK_MONOTONIC.\n\t(__timed_mutex_impl::_M_try_lock_for): Use steady_clock for relative\n\ttimeouts as per [thread.req.timing].\n\t(__timed_mutex_impl::_M_try_lock_until<Clock,Duration>): Convert to\n\t__clock_t time point instead of using _M_try_lock_for.\n\nFrom-SVN: r204672", "tree": {"sha": "2247476aff5dbdb9416b7e86e63da782580b594a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2247476aff5dbdb9416b7e86e63da782580b594a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6162239973a3a10ae49c3cea0c1008d4f9c69b5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6162239973a3a10ae49c3cea0c1008d4f9c69b5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6162239973a3a10ae49c3cea0c1008d4f9c69b5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6162239973a3a10ae49c3cea0c1008d4f9c69b5b/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a80085d42aaedfbf7a2c684bd5793bb4dc72500", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a80085d42aaedfbf7a2c684bd5793bb4dc72500", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a80085d42aaedfbf7a2c684bd5793bb4dc72500"}], "stats": {"total": 35, "additions": 21, "deletions": 14}, "files": [{"sha": "38c70c583e8bc2f7423e18aad03b9aa299287004", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6162239973a3a10ae49c3cea0c1008d4f9c69b5b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6162239973a3a10ae49c3cea0c1008d4f9c69b5b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6162239973a3a10ae49c3cea0c1008d4f9c69b5b", "patch": "@@ -1,3 +1,14 @@\n+2013-11-11  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR libstdc++/54562\n+\t* include/std/mutex (__timed_mutex_impl::__clock_t): Use\n+\thigh_resolution_clock for absolute timeouts, because\n+\tpthread_mutex_timedlock uses CLOCK_REALTIME not CLOCK_MONOTONIC.\n+\t(__timed_mutex_impl::_M_try_lock_for): Use steady_clock for relative\n+\ttimeouts as per [thread.req.timing].\n+\t(__timed_mutex_impl::_M_try_lock_until<Clock,Duration>): Convert to\n+\t__clock_t time point instead of using _M_try_lock_for.\n+\n 2013-11-09  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \tPR libstdc++/58982"}, {"sha": "da2ca0cfe9444ade77c6e38f7c8f1868aaa09887", "filename": "libstdc++-v3/include/std/mutex", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6162239973a3a10ae49c3cea0c1008d4f9c69b5b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6162239973a3a10ae49c3cea0c1008d4f9c69b5b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex?ref=6162239973a3a10ae49c3cea0c1008d4f9c69b5b", "patch": "@@ -203,33 +203,26 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     class __timed_mutex_impl\n     {\n     protected:\n-#ifdef _GLIBCXX_USE_CLOCK_MONOTONIC\n-      typedef chrono::steady_clock \t  \t__clock_t;\n-#else\n       typedef chrono::high_resolution_clock \t__clock_t;\n-#endif\n \n       template<typename _Rep, typename _Period>\n \tbool\n \t_M_try_lock_for(const chrono::duration<_Rep, _Period>& __rtime)\n \t{\n-\t  auto __rt = chrono::duration_cast<__clock_t::duration>(__rtime);\n-\t  if (ratio_greater<__clock_t::period, _Period>())\n+\t  using chrono::steady_clock;\n+\t  auto __rt = chrono::duration_cast<steady_clock::duration>(__rtime);\n+\t  if (ratio_greater<steady_clock::period, _Period>())\n \t    ++__rt;\n-\n-\t  return _M_try_lock_until(__clock_t::now() + __rt);\n+\t  return _M_try_lock_until(steady_clock::now() + __rt);\n \t}\n \n       template<typename _Duration>\n \tbool\n \t_M_try_lock_until(const chrono::time_point<__clock_t,\n \t\t\t\t\t\t   _Duration>& __atime)\n \t{\n-\t  chrono::time_point<__clock_t, chrono::seconds> __s =\n-\t    chrono::time_point_cast<chrono::seconds>(__atime);\n-\n-\t  chrono::nanoseconds __ns =\n-\t    chrono::duration_cast<chrono::nanoseconds>(__atime - __s);\n+\t  auto __s = chrono::time_point_cast<chrono::seconds>(__atime);\n+\t  auto __ns = chrono::duration_cast<chrono::nanoseconds>(__atime - __s);\n \n \t  __gthread_time_t __ts = {\n \t    static_cast<std::time_t>(__s.time_since_epoch().count()),\n@@ -243,7 +236,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       template<typename _Clock, typename _Duration>\n \tbool\n \t_M_try_lock_until(const chrono::time_point<_Clock, _Duration>& __atime)\n-\t{ return _M_try_lock_for(__atime - _Clock::now()); }\n+\t{\n+\t  auto __rtime = __atime - _Clock::now();\n+\t  return _M_try_lock_until(__clock_t::now() + __rtime);\n+\t}\n     };\n \n   /// timed_mutex"}]}