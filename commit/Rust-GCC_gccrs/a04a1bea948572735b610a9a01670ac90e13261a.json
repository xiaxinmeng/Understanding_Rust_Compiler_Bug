{"sha": "a04a1bea948572735b610a9a01670ac90e13261a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTA0YTFiZWE5NDg1NzI3MzViNjEwYTlhMDE2NzBhYzkwZTEzMjYxYQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-01-18T00:32:36Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-01-18T00:32:36Z"}, "message": "c-torture.exp: Look for .x files instead of .cexp files.\n\n        * lib/c-torture.exp: Look for .x files instead of .cexp files.\n        * lib/f-torture.exp: Similarly.\n        * gcc.c-torture: Rename all .cexp files to .x files.\n\nFrom-SVN: r17411", "tree": {"sha": "66890eb63f3e77e0f6958d67fe75ccaafcb2c2a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66890eb63f3e77e0f6958d67fe75ccaafcb2c2a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a04a1bea948572735b610a9a01670ac90e13261a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a04a1bea948572735b610a9a01670ac90e13261a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a04a1bea948572735b610a9a01670ac90e13261a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a04a1bea948572735b610a9a01670ac90e13261a/comments", "author": null, "committer": null, "parents": [{"sha": "70372764a36ccb823ab33db543a527a563ddc0eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70372764a36ccb823ab33db543a527a563ddc0eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70372764a36ccb823ab33db543a527a563ddc0eb"}], "stats": {"total": 77, "additions": 41, "deletions": 36}, "files": [{"sha": "48c4d76b73938b4831f0ffb74acdb70316558882", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a04a1bea948572735b610a9a01670ac90e13261a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a04a1bea948572735b610a9a01670ac90e13261a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a04a1bea948572735b610a9a01670ac90e13261a", "patch": "@@ -1,3 +1,9 @@\n+Sun Jan 18 01:33:59 1998  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* lib/c-torture.exp: Look for .x files instead of .cexp files.\n+\t* lib/f-torture.exp: Similarly.\n+\t* gcc.c-torture: Rename all .cexp files to .x files.\n+\n Tue Nov 25 16:18:51 1997  Kate Hedstrom  (kate@ahab.rutgers.edu)\n \n         * lib/f-torture.exp: Improve error and loop detection."}, {"sha": "dad1a21aaaef03b540e09cd8a37c333fc02a2e33", "filename": "gcc/testsuite/gcc.c-torture/compile/961203-1.x", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a04a1bea948572735b610a9a01670ac90e13261a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F961203-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a04a1bea948572735b610a9a01670ac90e13261a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F961203-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F961203-1.x?ref=a04a1bea948572735b610a9a01670ac90e13261a", "previous_filename": "gcc/testsuite/gcc.c-torture/compile/961203-1.cexp"}, {"sha": "c7d9f0300490dfd160e7565b7dcc2ef5a6ee56d8", "filename": "gcc/testsuite/gcc.c-torture/execute/920428-2.x", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a04a1bea948572735b610a9a01670ac90e13261a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920428-2.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a04a1bea948572735b610a9a01670ac90e13261a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920428-2.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920428-2.x?ref=a04a1bea948572735b610a9a01670ac90e13261a", "previous_filename": "gcc/testsuite/gcc.c-torture/execute/920428-2.cexp"}, {"sha": "c7d9f0300490dfd160e7565b7dcc2ef5a6ee56d8", "filename": "gcc/testsuite/gcc.c-torture/execute/920501-7.x", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a04a1bea948572735b610a9a01670ac90e13261a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920501-7.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a04a1bea948572735b610a9a01670ac90e13261a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920501-7.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920501-7.x?ref=a04a1bea948572735b610a9a01670ac90e13261a", "previous_filename": "gcc/testsuite/gcc.c-torture/execute/920501-7.cexp"}, {"sha": "28da30bbcd3ee0f1045fa656c844d181e1ecf84c", "filename": "gcc/testsuite/gcc.c-torture/execute/920715-1.x", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a04a1bea948572735b610a9a01670ac90e13261a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920715-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a04a1bea948572735b610a9a01670ac90e13261a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920715-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920715-1.x?ref=a04a1bea948572735b610a9a01670ac90e13261a", "previous_filename": "gcc/testsuite/gcc.c-torture/execute/920715-1.cexp"}, {"sha": "997c8650c0021dfcc69ae5a436ebdaff1b4748b1", "filename": "gcc/testsuite/gcc.c-torture/execute/cvt-1.x", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a04a1bea948572735b610a9a01670ac90e13261a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcvt-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a04a1bea948572735b610a9a01670ac90e13261a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcvt-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcvt-1.x?ref=a04a1bea948572735b610a9a01670ac90e13261a", "previous_filename": "gcc/testsuite/gcc.c-torture/execute/cvt-1.cexp"}, {"sha": "0ae0a35d315e7c4dd3648f8d7456be5266ddaded", "filename": "gcc/testsuite/gcc.c-torture/execute/ieee/rbug.x", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a04a1bea948572735b610a9a01670ac90e13261a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Frbug.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a04a1bea948572735b610a9a01670ac90e13261a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Frbug.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Frbug.x?ref=a04a1bea948572735b610a9a01670ac90e13261a", "patch": "@@ -0,0 +1,7 @@\n+# This doesn't work on d10v if doubles are not 64 bits\n+\n+if { [istarget \"d10v-*-*\"] && ! [string-match \"*-mdouble64*\" $CFLAGS] } {\n+\tset torture_execute_xfail \"d10v-*-*\"\n+}\n+\n+return 0"}, {"sha": "e68b8fbb8d293d0d05aa46ad51a923ad17c1cbf0", "filename": "gcc/testsuite/gcc.c-torture/execute/loop-2e.x", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a04a1bea948572735b610a9a01670ac90e13261a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2e.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a04a1bea948572735b610a9a01670ac90e13261a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2e.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2e.x?ref=a04a1bea948572735b610a9a01670ac90e13261a", "previous_filename": "gcc/testsuite/gcc.c-torture/execute/loop-2e.cexp"}, {"sha": "e68b8fbb8d293d0d05aa46ad51a923ad17c1cbf0", "filename": "gcc/testsuite/gcc.c-torture/execute/loop-2f.x", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a04a1bea948572735b610a9a01670ac90e13261a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2f.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a04a1bea948572735b610a9a01670ac90e13261a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2f.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Floop-2f.x?ref=a04a1bea948572735b610a9a01670ac90e13261a", "previous_filename": "gcc/testsuite/gcc.c-torture/execute/loop-2f.cexp"}, {"sha": "ce6ce3cfd69183b6e4278dad3faf88bf3408d252", "filename": "gcc/testsuite/lib/c-torture.exp", "status": "modified", "additions": 14, "deletions": 18, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a04a1bea948572735b610a9a01670ac90e13261a/gcc%2Ftestsuite%2Flib%2Fc-torture.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a04a1bea948572735b610a9a01670ac90e13261a/gcc%2Ftestsuite%2Flib%2Fc-torture.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fc-torture.exp?ref=a04a1bea948572735b610a9a01670ac90e13261a", "patch": "@@ -128,11 +128,9 @@ proc c-torture-compile { src option } {\n #\n # SRC is the full pathname of the testcase.\n #\n-# If the testcase has an associated .cexp file, we source that to run the\n-# test instead.  We use .cexp instead of .exp so that the testcase is still\n-# controlled by the main .exp driver (this is useful when one wants to only\n-# run the compile.exp tests for example - one need only pass compile.exp to\n-# dejagnu, and not compile.exp, foo1.exp, foo2.exp, etc.).\n+# If the testcase has an associated .x file, we source that to run the\n+# test instead.  We use .x so that we don't lengthen the existing filename\n+# to more than 14 chars.\n #\n proc c-torture-execute { src args } {\n     global tmpdir tool srcdir output \n@@ -143,10 +141,10 @@ proc c-torture-execute { src args } {\n \tset additional_flags \"\";\n     }\n     # Check for alternate driver.\n-    if [file exists [file rootname $src].cexp] {\n-\tverbose \"Using alternate driver [file rootname [file tail $src]].cexp\" 2\n+    if [file exists [file rootname $src].x] {\n+\tverbose \"Using alternate driver [file rootname [file tail $src]].x\" 2\n \tset done_p 0\n-\tcatch \"set done_p \\[source [file rootname $src].cexp\\]\"\n+\tcatch \"set done_p \\[source [file rootname $src].x\\]\"\n \tif { $done_p } {\n \t    return\n \t}\n@@ -181,7 +179,7 @@ proc c-torture-execute { src args } {\n \tset execname \"${executable}${count}\";\n \tincr count;\n \n-\t# torture_{compile,execute}_xfail are set by the .cexp script\n+\t# torture_{compile,execute}_xfail are set by the .x script\n \t# (if present)\n \tif [info exists torture_compile_xfail] {\n \t    setup_xfail $torture_compile_xfail\n@@ -300,11 +298,9 @@ proc search_for { file pattern } {\n # SRC is the full pathname of the testcase, or just a file name in which case\n # we prepend $srcdir/$subdir.\n #\n-# If the testcase has an associated .cexp file, we source that to run the\n-# test instead.  We use .cexp instead of .exp so that the testcase is still\n-# controlled by the main .exp driver (this is useful when one wants to only\n-# run the compile.exp tests for example - one need only pass compile.exp to\n-# dejagnu, and not compile.exp, foo1.exp, foo2.exp, etc.).\n+# If the testcase has an associated .x file, we source that to run the\n+# test instead.  We use .x so that we don't lengthen the existing filename\n+# to more than 14 chars.\n #\n proc c-torture { args } {\n     global srcdir subdir\n@@ -322,10 +318,10 @@ proc c-torture { args } {\n     }\n \n     # Check for alternate driver.\n-    if [file exists [file rootname $src].cexp] {\n-\tverbose \"Using alternate driver [file rootname [file tail $src]].cexp\" 2\n+    if [file exists [file rootname $src].x] {\n+\tverbose \"Using alternate driver [file rootname [file tail $src]].x\" 2\n \tset done_p 0\n-\tcatch \"set done_p \\[source [file rootname $src].cexp\\]\"\n+\tcatch \"set done_p \\[source [file rootname $src].x\\]\"\n \tif { $done_p } {\n \t    return\n \t}\n@@ -342,7 +338,7 @@ proc c-torture { args } {\n \n     # loop through all the options\n     foreach option $option_list {\n-\t# torture_compile_xfail is set by the .cexp script (if present)\n+\t# torture_compile_xfail is set by the .x script (if present)\n \tif [info exists torture_compile_xfail] {\n \t    setup_xfail $torture_compile_xfail\n \t}"}, {"sha": "43f6e0ff23f98113eff4768025302e8b2a8d8097", "filename": "gcc/testsuite/lib/f-torture.exp", "status": "modified", "additions": 14, "deletions": 18, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a04a1bea948572735b610a9a01670ac90e13261a/gcc%2Ftestsuite%2Flib%2Ff-torture.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a04a1bea948572735b610a9a01670ac90e13261a/gcc%2Ftestsuite%2Flib%2Ff-torture.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ff-torture.exp?ref=a04a1bea948572735b610a9a01670ac90e13261a", "patch": "@@ -124,20 +124,18 @@ proc f-torture-compile { src option } {\n #\n # SRC is the full pathname of the testcase.\n #\n-# If the testcase has an associated .cexp file, we source that to run the\n-# test instead.  We use .cexp instead of .exp so that the testcase is still\n-# controlled by the main .exp driver (this is useful when one wants to only\n-# run the compile.exp tests for example - one need only pass compile.exp to\n-# dejagnu, and not compile.exp, foo1.exp, foo2.exp, etc.).\n+# If the testcase has an associated .x file, we source that to run the\n+# test instead.  We use .x so that we don't lengthen the existing filename\n+# to more than 14 chars.\n #\n proc f-torture-execute { src } {\n     global tmpdir tool srcdir output \n \n     # Check for alternate driver.\n-    if [file exists [file rootname $src].cexp] {\n-\tverbose \"Using alternate driver [file rootname [file tail $src]].cexp\" 2\n+    if [file exists [file rootname $src].x] {\n+\tverbose \"Using alternate driver [file rootname [file tail $src]].x\" 2\n \tset done_p 0\n-\tcatch \"set done_p \\[source [file rootname $src].cexp\\]\"\n+\tcatch \"set done_p \\[source [file rootname $src].x\\]\"\n \tif { $done_p } {\n \t    return\n \t}\n@@ -164,7 +162,7 @@ proc f-torture-execute { src } {\n     }\n \n     foreach option $option_list {\n-\t# torture_{compile,execute}_xfail are set by the .cexp script\n+\t# torture_{compile,execute}_xfail are set by the .x script\n \t# (if present)\n \tif [info exists torture_compile_xfail] {\n \t    setup_xfail $torture_compile_xfail\n@@ -268,11 +266,9 @@ proc search_for { file pattern } {\n # SRC is the full pathname of the testcase, or just a file name in which case\n # we prepend $srcdir/$subdir.\n #\n-# If the testcase has an associated .cexp file, we source that to run the\n-# test instead.  We use .cexp instead of .exp so that the testcase is still\n-# controlled by the main .exp driver (this is useful when one wants to only\n-# run the compile.exp tests for example - one need only pass compile.exp to\n-# dejagnu, and not compile.exp, foo1.exp, foo2.exp, etc.).\n+# If the testcase has an associated .x file, we source that to run the\n+# test instead.  We use .x so that we don't lengthen the existing filename\n+# to more than 14 chars.\n #\n proc f-torture { args } {\n     global srcdir subdir\n@@ -290,10 +286,10 @@ proc f-torture { args } {\n     }\n \n     # Check for alternate driver.\n-    if [file exists [file rootname $src].cexp] {\n-\tverbose \"Using alternate driver [file rootname [file tail $src]].cexp\" 2\n+    if [file exists [file rootname $src].x] {\n+\tverbose \"Using alternate driver [file rootname [file tail $src]].x\" 2\n \tset done_p 0\n-\tcatch \"set done_p \\[source [file rootname $src].cexp\\]\"\n+\tcatch \"set done_p \\[source [file rootname $src].x\\]\"\n \tif { $done_p } {\n \t    return\n \t}\n@@ -310,7 +306,7 @@ proc f-torture { args } {\n \n     # loop through all the options\n     foreach option $option_list {\n-\t# torture_compile_xfail is set by the .cexp script (if present)\n+\t# torture_compile_xfail is set by the .x script (if present)\n \tif [info exists torture_compile_xfail] {\n \t    setup_xfail $torture_compile_xfail\n \t}"}]}