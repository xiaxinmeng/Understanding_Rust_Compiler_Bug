{"sha": "8f2b104d098c61d43beb44a11d4474bab94b81fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGYyYjEwNGQwOThjNjFkNDNiZWI0NGExMWQ0NDc0YmFiOTRiODFmYQ==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2009-04-06T16:47:32Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@gcc.gnu.org", "date": "2009-04-06T16:47:32Z"}, "message": "atomicity.h: Put the SH4A specific functions in the __gnu_cxx namespace.\n\n2009-04-06  Andrew Stubbs  <ams@codesourcery.com>\n\n\t* config/cpu/sh/atomicity.h: Put the SH4A specific functions in the\n\t__gnu_cxx namespace.  Remove \"static inline\".\n\nFrom-SVN: r145613", "tree": {"sha": "11a4f827dd5771a97461f63a4b07efc28ed1a9ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11a4f827dd5771a97461f63a4b07efc28ed1a9ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f2b104d098c61d43beb44a11d4474bab94b81fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f2b104d098c61d43beb44a11d4474bab94b81fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f2b104d098c61d43beb44a11d4474bab94b81fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f2b104d098c61d43beb44a11d4474bab94b81fa/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d26014d24e51999963a780a683e5a3b0c580a9bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d26014d24e51999963a780a683e5a3b0c580a9bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d26014d24e51999963a780a683e5a3b0c580a9bf"}], "stats": {"total": 86, "additions": 46, "deletions": 40}, "files": [{"sha": "2ed825ad91f1a0e46010e36f49417ff8bf850cdf", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f2b104d098c61d43beb44a11d4474bab94b81fa/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f2b104d098c61d43beb44a11d4474bab94b81fa/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8f2b104d098c61d43beb44a11d4474bab94b81fa", "patch": "@@ -1,3 +1,8 @@\n+2009-04-06  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* config/cpu/sh/atomicity.h: Put the SH4A specific functions in the\n+\t__gnu_cxx namespace.  Remove \"static inline\".\n+\n 2009-04-06  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/bits/random.tcc (linear_congruential_engine<>::"}, {"sha": "459cfddb30fe1a3bb68397619ae9caea16a2f747", "filename": "libstdc++-v3/config/cpu/sh/atomicity.h", "status": "modified", "additions": 41, "deletions": 40, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f2b104d098c61d43beb44a11d4474bab94b81fa/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fsh%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f2b104d098c61d43beb44a11d4474bab94b81fa/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fsh%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fsh%2Fatomicity.h?ref=8f2b104d098c61d43beb44a11d4474bab94b81fa", "patch": "@@ -1,6 +1,6 @@\n // Low-level functions for atomic operations: sh version  -*- C++ -*-\n \n-// Copyright (C) 1999, 2001, 2002, 2003, 2004, 2005, 2006\n+// Copyright (C) 1999, 2001, 2002, 2003, 2004, 2005, 2006, 2009\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -30,47 +30,48 @@\n \n #ifdef __SH4A__\n \n-#ifndef _GLIBCXX_ATOMICITY_H\n-#define _GLIBCXX_ATOMICITY_H\t1\n+#include <ext/atomicity.h>\n \n-typedef int _Atomic_word;\n+_GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n \n-static inline _Atomic_word\n-__attribute__ ((__unused__))\n-__exchange_and_add (volatile _Atomic_word* __mem, int __val)\n-{\n-  _Atomic_word __result;\n-\n-  __asm__ __volatile__\n-    (\"0:\\n\"\n-     \"\\tmovli.l\\t@%2,r0\\n\"\n-     \"\\tmov\\tr0,%1\\n\"\n-     \"\\tadd\\t%3,r0\\n\"\n-     \"\\tmovco.l\\tr0,@%2\\n\"\n-     \"\\tbf\\t0b\"\n-     : \"+m\" (*__mem), \"=r\" (__result)\n-     : \"r\" (__mem), \"rI08\" (__val)\n-     : \"r0\");\n-\n-  return __result;\n-}\n-\n-\n-static inline void\n-__attribute__ ((__unused__))\n-__atomic_add (volatile _Atomic_word* __mem, int __val)\n-{\n-  asm(\"0:\\n\"\n-      \"\\tmovli.l\\t@%1,r0\\n\"\n-      \"\\tadd\\t%2,r0\\n\"\n-      \"\\tmovco.l\\tr0,@%1\\n\"\n-      \"\\tbf\\t0b\"\n-      : \"+m\" (*__mem)\n-      : \"r\" (__mem), \"rI08\" (__val)\n-      : \"r0\");\n-}\n-\n-#endif\n+  typedef int _Atomic_word;\n+\n+  _Atomic_word\n+  __attribute__ ((__unused__))\n+  __exchange_and_add (volatile _Atomic_word* __mem, int __val)\n+  {\n+    _Atomic_word __result;\n+\n+    __asm__ __volatile__\n+      (\"0:\\n\"\n+       \"\\tmovli.l\\t@%2,r0\\n\"\n+       \"\\tmov\\tr0,%1\\n\"\n+       \"\\tadd\\t%3,r0\\n\"\n+       \"\\tmovco.l\\tr0,@%2\\n\"\n+       \"\\tbf\\t0b\"\n+       : \"+m\" (*__mem), \"=r\" (__result)\n+       : \"r\" (__mem), \"rI08\" (__val)\n+       : \"r0\");\n+\n+    return __result;\n+  }\n+\n+\n+  void\n+  __attribute__ ((__unused__))\n+  __atomic_add (volatile _Atomic_word* __mem, int __val)\n+  {\n+    asm(\"0:\\n\"\n+\t\"\\tmovli.l\\t@%1,r0\\n\"\n+\t\"\\tadd\\t%2,r0\\n\"\n+\t\"\\tmovco.l\\tr0,@%1\\n\"\n+\t\"\\tbf\\t0b\"\n+\t: \"+m\" (*__mem)\n+\t: \"r\" (__mem), \"rI08\" (__val)\n+\t: \"r0\");\n+  }\n+\n+_GLIBCXX_END_NAMESPACE\n \n #else /* !__SH4A__ */\n "}]}