{"sha": "4f9c5d5c4892e584a42b98f8d8643ce0b7b76490", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY5YzVkNWM0ODkyZTU4NGE0MmI5OGY4ZDg2NDNjZTBiN2I3NjQ5MA==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2017-04-25T12:03:40Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gcc.gnu.org", "date": "2017-04-25T12:03:40Z"}, "message": "[ARC] Allow extension core registers to be used for addresses.\n\ngcc/\n2017-04-25  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* config/arc/arc.h (REGNO_OK_FOR_BASE_P): Consider also extension\n\tcore registers.\n\t(REG_OK_FOR_INDEX_P_NONSTRICT): Likewise.\n\t(REG_OK_FOR_BASE_P_NONSTRICT): Likewise.\n\nFrom-SVN: r247196", "tree": {"sha": "e4ad357d584e3692e121d0bbd57fe8be5efce979", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4ad357d584e3692e121d0bbd57fe8be5efce979"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f9c5d5c4892e584a42b98f8d8643ce0b7b76490", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f9c5d5c4892e584a42b98f8d8643ce0b7b76490", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f9c5d5c4892e584a42b98f8d8643ce0b7b76490", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f9c5d5c4892e584a42b98f8d8643ce0b7b76490/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a0caeef6c85b6e1961fa756602b26a92c1f8248f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0caeef6c85b6e1961fa756602b26a92c1f8248f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0caeef6c85b6e1961fa756602b26a92c1f8248f"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "e4b71023b70c7d77354b1232adc953d1ad46c3bb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f9c5d5c4892e584a42b98f8d8643ce0b7b76490/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f9c5d5c4892e584a42b98f8d8643ce0b7b76490/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4f9c5d5c4892e584a42b98f8d8643ce0b7b76490", "patch": "@@ -1,3 +1,10 @@\n+2017-04-25  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/arc.h (REGNO_OK_FOR_BASE_P): Consider also extension\n+\tcore registers.\n+\t(REG_OK_FOR_INDEX_P_NONSTRICT): Likewise.\n+\t(REG_OK_FOR_BASE_P_NONSTRICT): Likewise.\n+\n 2017-04-25  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* config/arc/arc.c (arc_output_addsi): Check for h-register class"}, {"sha": "549113070e016d3a9e678563e21636d54a488990", "filename": "gcc/config/arc/arc.h", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f9c5d5c4892e584a42b98f8d8643ce0b7b76490/gcc%2Fconfig%2Farc%2Farc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f9c5d5c4892e584a42b98f8d8643ce0b7b76490/gcc%2Fconfig%2Farc%2Farc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.h?ref=4f9c5d5c4892e584a42b98f8d8643ce0b7b76490", "patch": "@@ -640,7 +640,8 @@ extern enum reg_class arc_regno_reg_class[];\n #define REGNO_OK_FOR_BASE_P(REGNO)\t\t\t\t\t\\\n   ((REGNO) < 29 || ((REGNO) == ARG_POINTER_REGNUM) || ((REGNO) == 63)\t\\\n    || ((unsigned) reg_renumber[REGNO] < 29)\t\t\t\t\\\n-   || ((unsigned) (REGNO) == (unsigned) arc_tp_regno))\n+   || ((unsigned) (REGNO) == (unsigned) arc_tp_regno)\t\t\t\\\n+   || (fixed_regs[REGNO] == 0 && IN_RANGE (REGNO, 32, 59)))\n \n #define REGNO_OK_FOR_INDEX_P(REGNO) REGNO_OK_FOR_BASE_P(REGNO)\n \n@@ -922,18 +923,15 @@ extern int arc_initial_elimination_offset(int from, int to);\n \n /* Nonzero if X is a hard reg that can be used as an index\n    or if it is a pseudo reg.  */\n-#define REG_OK_FOR_INDEX_P_NONSTRICT(X) \\\n-((unsigned) REGNO (X) >= FIRST_PSEUDO_REGISTER || \\\n- (unsigned) REGNO (X) < 29 || \\\n- (unsigned) REGNO (X) == 63 || \\\n- (unsigned) REGNO (X) == ARG_POINTER_REGNUM)\n+#define REG_OK_FOR_INDEX_P_NONSTRICT(X)\t\t\t\\\n+  ((unsigned) REGNO (X) >= FIRST_PSEUDO_REGISTER\t\\\n+   || REGNO_OK_FOR_BASE_P (REGNO (X)))\n+\n /* Nonzero if X is a hard reg that can be used as a base reg\n    or if it is a pseudo reg.  */\n-#define REG_OK_FOR_BASE_P_NONSTRICT(X) \\\n-((unsigned) REGNO (X) >= FIRST_PSEUDO_REGISTER || \\\n- (unsigned) REGNO (X) < 29 || \\\n- (unsigned) REGNO (X) == 63 || \\\n- (unsigned) REGNO (X) == ARG_POINTER_REGNUM)\n+#define REG_OK_FOR_BASE_P_NONSTRICT(X)\t\t\t\\\n+  ((unsigned) REGNO (X) >= FIRST_PSEUDO_REGISTER\t\\\n+   || REGNO_OK_FOR_BASE_P (REGNO (X)))\n \n /* Nonzero if X is a hard reg that can be used as an index.  */\n #define REG_OK_FOR_INDEX_P_STRICT(X) REGNO_OK_FOR_INDEX_P (REGNO (X))"}]}