{"sha": "3ed7d068d9c79e4a5887027ca6c3f938f0fbb941", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2VkN2QwNjhkOWM3OWU0YTU4ODcwMjdjYTZjM2Y5MzhmMGZiYjk0MQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-01-28T14:45:09Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-01-28T14:45:09Z"}, "message": "re PR tree-optimization/42871 (g++: Internal error: Segmentation fault (program cc1plus))\n\n2010-01-28  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/42871\n\t* tree-ssa-pre.c (phi_translate_set): Make sure to retain\n\tleaders.\n\n\t* g++.dg/torture/pr42871.C: New testcase.\n\nFrom-SVN: r156324", "tree": {"sha": "c22f3dc203979f63f6b4ac2828a9ddbe793a04c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c22f3dc203979f63f6b4ac2828a9ddbe793a04c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ed7d068d9c79e4a5887027ca6c3f938f0fbb941", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ed7d068d9c79e4a5887027ca6c3f938f0fbb941", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ed7d068d9c79e4a5887027ca6c3f938f0fbb941", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ed7d068d9c79e4a5887027ca6c3f938f0fbb941/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "830bc5507b328fa2218e57a5c500336110ce0a40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/830bc5507b328fa2218e57a5c500336110ce0a40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/830bc5507b328fa2218e57a5c500336110ce0a40"}], "stats": {"total": 65, "additions": 62, "deletions": 3}, "files": [{"sha": "ff0e868649b5c80b683f19682e46c20ecd2dc2ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ed7d068d9c79e4a5887027ca6c3f938f0fbb941/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ed7d068d9c79e4a5887027ca6c3f938f0fbb941/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ed7d068d9c79e4a5887027ca6c3f938f0fbb941", "patch": "@@ -1,3 +1,9 @@\n+2010-01-28  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/42871\n+\t* tree-ssa-pre.c (phi_translate_set): Make sure to retain\n+\tleaders.\n+\n 2010-01-28  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-ccp.c (ccp_fold_stmt): Fold calls and propagate"}, {"sha": "4279696234153a0c7d2b17c7fd0ff0b360b46333", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ed7d068d9c79e4a5887027ca6c3f938f0fbb941/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ed7d068d9c79e4a5887027ca6c3f938f0fbb941/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3ed7d068d9c79e4a5887027ca6c3f938f0fbb941", "patch": "@@ -1,3 +1,8 @@\n+2010-01-28  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/42871\n+\t* g++.dg/torture/pr42871.C: New testcase.\n+\n 2010-01-28  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/Wobjsize-1.h: New testcase."}, {"sha": "452ad9319fe390346cebd223c51ea3190df7dffd", "filename": "gcc/testsuite/g++.dg/torture/pr42871.C", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ed7d068d9c79e4a5887027ca6c3f938f0fbb941/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr42871.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ed7d068d9c79e4a5887027ca6c3f938f0fbb941/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr42871.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr42871.C?ref=3ed7d068d9c79e4a5887027ca6c3f938f0fbb941", "patch": "@@ -0,0 +1,40 @@\n+struct C\n+{\n+  ~C ();\n+  int c3;\n+};\n+\n+C *b2;\n+\n+static void\n+b1 (const C &x, unsigned b3, unsigned b4)\n+{\n+  unsigned i = 0;\n+  for (; i < b3; i++)\n+    if (i < b4)\n+      {\n+        b2[0].c3 = x.c3;\n+        return;\n+      }\n+}\n+\n+int a ();\n+\n+void\n+bar (unsigned b3, unsigned b4)\n+{\n+  C c[100];\n+  for (int i = 0; i < 100; i++)\n+    {\n+      c[i].c3 = i;\n+      for (int j = 0; j < b3; j++)\n+        if (j < b4)\n+          {\n+            b2[0].c3 = 0;\n+            break;\n+          }\n+      b1 (c[i], b3, b4);\n+      a ();\n+    }\n+}\n+"}, {"sha": "285b2c8b0b3dd7b3c4013f07b325146d536a6b9e", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ed7d068d9c79e4a5887027ca6c3f938f0fbb941/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ed7d068d9c79e4a5887027ca6c3f938f0fbb941/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=3ed7d068d9c79e4a5887027ca6c3f938f0fbb941", "patch": "@@ -1836,10 +1836,18 @@ phi_translate_set (bitmap_set_t dest, bitmap_set_t set, basic_block pred,\n       translated = phi_translate (expr, set, NULL, pred, phiblock);\n \n       /* Don't add empty translations to the cache  */\n-      if (translated)\n-\tphi_trans_add (expr, translated, pred);\n+      if (!translated)\n+\tcontinue;\n+\n+      phi_trans_add (expr, translated, pred);\n \n-      if (translated != NULL)\n+      /* We might end up with multiple expressions from SET being\n+\t translated to the same value.  In this case we do not want\n+\t to retain the NARY or REFERENCE expression but prefer a NAME\n+\t which would be the leader.  */\n+      if (translated->kind == NAME)\n+\tbitmap_value_replace_in_set (dest, translated);\n+      else\n \tbitmap_value_insert_into_set (dest, translated);\n     }\n   VEC_free (pre_expr, heap, exprs);"}]}