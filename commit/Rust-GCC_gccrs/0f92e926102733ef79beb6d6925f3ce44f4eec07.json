{"sha": "0f92e926102733ef79beb6d6925f3ce44f4eec07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY5MmU5MjYxMDI3MzNlZjc5YmViNmQ2OTI1ZjNjZTQ0ZjRlZWMwNw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@redhat.com", "date": "2000-07-24T21:07:34Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2000-07-24T21:07:34Z"}, "message": "Delete references to FUNCTION_ARG_KEEP_AS_REFERENCE\n\nFrom-SVN: r35237", "tree": {"sha": "3185cf3862d2210f851d7768fa5c6d1305767991", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3185cf3862d2210f851d7768fa5c6d1305767991"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f92e926102733ef79beb6d6925f3ce44f4eec07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f92e926102733ef79beb6d6925f3ce44f4eec07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f92e926102733ef79beb6d6925f3ce44f4eec07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f92e926102733ef79beb6d6925f3ce44f4eec07/comments", "author": null, "committer": null, "parents": [{"sha": "2339ce57f358c25fe8ddcd6a9831e940cf6708aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2339ce57f358c25fe8ddcd6a9831e940cf6708aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2339ce57f358c25fe8ddcd6a9831e940cf6708aa"}], "stats": {"total": 15, "additions": 5, "deletions": 10}, "files": [{"sha": "a8d147ecf9b893f07f804e95d4d37051a4c37145", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f92e926102733ef79beb6d6925f3ce44f4eec07/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f92e926102733ef79beb6d6925f3ce44f4eec07/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f92e926102733ef79beb6d6925f3ce44f4eec07", "patch": "@@ -1,3 +1,8 @@\n+2000-07-24  Michael Meissner  <meissner@redhat.com>\n+\n+\t* d30v.h (FUNCTION_ARG_KEEP_AS_REFERENCE): Delete references to\n+\tunsupported macro.\n+\n 2000-07-24  Nick Clifton  <nickc@cygnus.com>\n \n \t* config/arm/arm.c (emit_multi_reg_push): Generate a"}, {"sha": "12f702762098e48bcf45ad0416c9cba26b5e91f6", "filename": "gcc/config/d30v/d30v.h", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f92e926102733ef79beb6d6925f3ce44f4eec07/gcc%2Fconfig%2Fd30v%2Fd30v.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f92e926102733ef79beb6d6925f3ce44f4eec07/gcc%2Fconfig%2Fd30v%2Fd30v.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fd30v%2Fd30v.h?ref=0f92e926102733ef79beb6d6925f3ce44f4eec07", "patch": "@@ -2384,11 +2384,6 @@ extern void d30v_init_expanders ();\n           MUST_PASS_IN_STACK (MODE, TYPE)  */\n #define FUNCTION_ARG_PASS_BY_REFERENCE(CUM, MODE, TYPE, NAMED) 0\n \n-/* If defined, a C expression that indicates when it is more\n-   desirable to keep an argument passed by invisible reference as a\n-   reference, rather than copying it to a pseudo register.  */\n-/* #define FUNCTION_ARG_KEEP_AS_REFERENCE(CUM, MODE, TYPE, NAMED) */\n-\n /* If defined, a C expression that indicates when it is the called function's\n    responsibility to make a copy of arguments passed by invisible reference.\n    Normally, the caller makes a copy and passes the address of the copy to the\n@@ -2399,11 +2394,6 @@ extern void d30v_init_expanders ();\n    otherwise a copy must be made.  */\n /* #define FUNCTION_ARG_CALLEE_COPIES(CUM, MODE, TYPE, NAMED) */\n \n-/* If defined, a C expression that indicates when it is more desirable to keep\n-   an argument passed by invisible reference as a reference, rather than\n-   copying it to a pseudo register.  */\n-/* #define FUNCTION_ARG_KEEP_AS_REFERENCE(CUM, MODE, TYPE, NAMED) */\n-\n /* A C type for declaring a variable that is used as the first argument of\n    `FUNCTION_ARG' and other related values.  For some target machines, the type\n    `int' suffices and can hold the number of bytes of argument so far."}]}