{"sha": "da75ca93f8f17847f75ff50d00796e98ccf8509d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE3NWNhOTNmOGYxNzg0N2Y3NWZmNTBkMDA3OTZlOThjY2Y4NTA5ZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-02-02T12:39:09Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-02-02T12:39:09Z"}, "message": "re PR middle-end/78468 (libgomp.c/reduction-10.c and many more FAIL)\n\n\tPR middle-end/78468\n\t* emit-rtl.c (init_emit): Add ??? comment for problematic alignment\n\tsettings of the virtual registers.\n\n\tRevert again\n\t2016-08-23  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n\n\t* explow.c (get_dynamic_stack_size): Take known alignment of stack\n\tpointer + STACK_DYNAMIC_OFFSET into account when calculating the size\n\tneeded.\n\nFrom-SVN: r245124", "tree": {"sha": "3bf382d8d50f62d0ff60f17c00752dbff7a4af7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bf382d8d50f62d0ff60f17c00752dbff7a4af7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da75ca93f8f17847f75ff50d00796e98ccf8509d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da75ca93f8f17847f75ff50d00796e98ccf8509d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da75ca93f8f17847f75ff50d00796e98ccf8509d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da75ca93f8f17847f75ff50d00796e98ccf8509d/comments", "author": null, "committer": null, "parents": [{"sha": "aa2cbb1a6cf59b6bd3215ed2a53cf88ffcda3bc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa2cbb1a6cf59b6bd3215ed2a53cf88ffcda3bc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa2cbb1a6cf59b6bd3215ed2a53cf88ffcda3bc7"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "7a11db8b0d7592146ec2d017882e8264e683e278", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da75ca93f8f17847f75ff50d00796e98ccf8509d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da75ca93f8f17847f75ff50d00796e98ccf8509d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=da75ca93f8f17847f75ff50d00796e98ccf8509d", "patch": "@@ -1,3 +1,16 @@\n+2017-02-02  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR middle-end/78468\n+\t* emit-rtl.c (init_emit): Add ??? comment for problematic alignment\n+\tsettings of the virtual registers.\n+\n+\tRevert again\n+\t2016-08-23  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n+\n+\t* explow.c (get_dynamic_stack_size): Take known alignment of stack\n+\tpointer + STACK_DYNAMIC_OFFSET into account when calculating the size\n+\tneeded.\n+\n 2017-02-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* config/s390/vx-builtins.md (\"vec_ceil\", \"vec_floor\")"}, {"sha": "0d25d4ec17ec7aea4696d3553b094c3c60096d03", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da75ca93f8f17847f75ff50d00796e98ccf8509d/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da75ca93f8f17847f75ff50d00796e98ccf8509d/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=da75ca93f8f17847f75ff50d00796e98ccf8509d", "patch": "@@ -5725,10 +5725,13 @@ init_emit (void)\n   REGNO_POINTER_ALIGN (HARD_FRAME_POINTER_REGNUM) = STACK_BOUNDARY;\n   REGNO_POINTER_ALIGN (ARG_POINTER_REGNUM) = STACK_BOUNDARY;\n \n+  /* ??? These are problematic (for example, 3 out of 4 are wrong on\n+     32-bit SPARC and cannot be all fixed because of the ABI).  */\n   REGNO_POINTER_ALIGN (VIRTUAL_INCOMING_ARGS_REGNUM) = STACK_BOUNDARY;\n   REGNO_POINTER_ALIGN (VIRTUAL_STACK_VARS_REGNUM) = STACK_BOUNDARY;\n   REGNO_POINTER_ALIGN (VIRTUAL_STACK_DYNAMIC_REGNUM) = STACK_BOUNDARY;\n   REGNO_POINTER_ALIGN (VIRTUAL_OUTGOING_ARGS_REGNUM) = STACK_BOUNDARY;\n+\n   REGNO_POINTER_ALIGN (VIRTUAL_CFA_REGNUM) = BITS_PER_WORD;\n #endif\n "}, {"sha": "67cb6ff1513b113d4e5eee01396340340c3ddd48", "filename": "gcc/explow.c", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da75ca93f8f17847f75ff50d00796e98ccf8509d/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da75ca93f8f17847f75ff50d00796e98ccf8509d/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=da75ca93f8f17847f75ff50d00796e98ccf8509d", "patch": "@@ -1233,15 +1233,9 @@ get_dynamic_stack_size (rtx *psize, unsigned size_align,\n      example), so we must preventively align the value.  We leave space\n      in SIZE for the hole that might result from the alignment operation.  */\n \n-  unsigned known_align = REGNO_POINTER_ALIGN (VIRTUAL_STACK_DYNAMIC_REGNUM);\n-  if (known_align == 0)\n-    known_align = BITS_PER_UNIT;\n-  if (required_align > known_align)\n-    {\n-      extra = (required_align - known_align) / BITS_PER_UNIT;\n-      size = plus_constant (Pmode, size, extra);\n-      size = force_operand (size, NULL_RTX);\n-    }\n+  extra = (required_align - BITS_PER_UNIT) / BITS_PER_UNIT;\n+  size = plus_constant (Pmode, size, extra);\n+  size = force_operand (size, NULL_RTX);\n \n   if (flag_stack_usage_info && pstack_usage_size)\n     *pstack_usage_size += extra;"}]}