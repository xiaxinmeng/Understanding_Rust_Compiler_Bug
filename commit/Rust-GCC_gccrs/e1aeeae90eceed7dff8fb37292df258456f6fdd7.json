{"sha": "e1aeeae90eceed7dff8fb37292df258456f6fdd7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFhZWVhZTkwZWNlZWQ3ZGZmOGZiMzcyOTJkZjI1ODQ1NmY2ZmRkNw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-09-22T07:27:51Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-09-22T07:27:51Z"}, "message": "mips.c (mips_function_value): For o32, o64, n32 and n64, use FPRs for scalar, complex and vector types only.\n\n\t* config/mips/mips.c (mips_function_value): For o32, o64, n32 and n64,\n\tuse FPRs for scalar, complex and vector types only.\n\nFrom-SVN: r87848", "tree": {"sha": "2e5e35824327f3e5e98e7612cacbdafe29848686", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e5e35824327f3e5e98e7612cacbdafe29848686"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1aeeae90eceed7dff8fb37292df258456f6fdd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1aeeae90eceed7dff8fb37292df258456f6fdd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1aeeae90eceed7dff8fb37292df258456f6fdd7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1aeeae90eceed7dff8fb37292df258456f6fdd7/comments", "author": null, "committer": null, "parents": [{"sha": "c3002ae940495b847bf703e44a3c40a669e3df8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3002ae940495b847bf703e44a3c40a669e3df8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3002ae940495b847bf703e44a3c40a669e3df8c"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "dce40399ab2732f4d14ea48a6287530300b34ef8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1aeeae90eceed7dff8fb37292df258456f6fdd7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1aeeae90eceed7dff8fb37292df258456f6fdd7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e1aeeae90eceed7dff8fb37292df258456f6fdd7", "patch": "@@ -1,3 +1,8 @@\n+2004-09-22  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/mips/mips.c (mips_function_value): For o32, o64, n32 and n64,\n+\tuse FPRs for scalar, complex and vector types only.\n+\n 2004-09-21 Jeff Law  <law@redhat.com>\n \n \t* tree-ssa-dom.c (opt_stats): Move so that it lives just after"}, {"sha": "a1de622dbbf65c544c26f4e0a29e51ce3246d270", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1aeeae90eceed7dff8fb37292df258456f6fdd7/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1aeeae90eceed7dff8fb37292df258456f6fdd7/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=e1aeeae90eceed7dff8fb37292df258456f6fdd7", "patch": "@@ -6764,6 +6764,13 @@ mips_function_value (tree valtype, tree func ATTRIBUTE_UNUSED,\n \t      mode = mode_for_size (size * BITS_PER_UNIT, MODE_INT, 0);\n \t    }\n \t}\n+\n+      /* For EABI, the class of return register depends entirely on MODE.\n+\t For example, \"struct { some_type x; }\" and \"union { some_type x; }\"\n+\t are returned in the same way as a bare \"some_type\" would be.\n+\t Other ABIs only use FPRs for scalar, complex or vector types.  */\n+      if (mips_abi != ABI_EABI && !FLOAT_TYPE_P (valtype))\n+\treturn gen_rtx_REG (mode, GP_RETURN);\n     }\n \n   if ((GET_MODE_CLASS (mode) == MODE_FLOAT"}]}