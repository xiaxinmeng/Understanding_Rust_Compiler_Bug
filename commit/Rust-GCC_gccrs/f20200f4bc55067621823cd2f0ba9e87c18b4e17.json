{"sha": "f20200f4bc55067621823cd2f0ba9e87c18b4e17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjIwMjAwZjRiYzU1MDY3NjIxODIzY2QyZjBiYTllODdjMThiNGUxNw==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1995-12-14T23:16:23Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1995-12-14T23:16:23Z"}, "message": "(logic_operand): New function.\n\n(i960_print_operand): Handle code `C'.\n\nFrom-SVN: r10726", "tree": {"sha": "f1182ec1b9a1043cef2341bd4226b7fb03dfffad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1182ec1b9a1043cef2341bd4226b7fb03dfffad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f20200f4bc55067621823cd2f0ba9e87c18b4e17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f20200f4bc55067621823cd2f0ba9e87c18b4e17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f20200f4bc55067621823cd2f0ba9e87c18b4e17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f20200f4bc55067621823cd2f0ba9e87c18b4e17/comments", "author": null, "committer": null, "parents": [{"sha": "82eaec4ab0dd5cb17c153df8fab62f54f3a260b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82eaec4ab0dd5cb17c153df8fab62f54f3a260b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82eaec4ab0dd5cb17c153df8fab62f54f3a260b5"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "cdd591396c4decfffc672c42b17f6d43b3ad8bb4", "filename": "gcc/config/i960/i960.c", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f20200f4bc55067621823cd2f0ba9e87c18b4e17/gcc%2Fconfig%2Fi960%2Fi960.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f20200f4bc55067621823cd2f0ba9e87c18b4e17/gcc%2Fconfig%2Fi960%2Fi960.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fi960.c?ref=f20200f4bc55067621823cd2f0ba9e87c18b4e17", "patch": "@@ -215,6 +215,19 @@ arith_operand (op, mode)\n   return (register_operand (op, mode) || literal (op, mode));\n }\n \n+/* Return truth value of whether OP can be used as an operands in a three\n+   address logic insn, possibly complementing OP, of mode MODE.  */\n+\n+int\n+logic_operand (op, mode)\n+     rtx op;\n+     enum machine_mode mode;\n+{\n+  return (register_operand (op, mode)\n+\t  || (GET_CODE (op) == CONST_INT\n+\t      && INTVAL(op) >= -32 && INTVAL(op) < 32));\n+}\n+\n /* Return true if OP is a register or a valid floating point literal.  */\n \n int\n@@ -1638,10 +1651,13 @@ i960_print_operand (file, x, code)\n     }\n   else if (rtxcode == CONST_INT)\n     {\n-      if (INTVAL (x) > 9999 || INTVAL (x) < -999)\n-\tfprintf (file, \"0x%x\", INTVAL (x));\n+      HOST_WIDE_INT val = INTVAL (x);\n+      if (code == 'C')\n+\tval = ~val;\n+      if (val > 9999 || val < -999)\n+\tfprintf (file, \"0x%x\", val);\n       else\n-\tfprintf (file, \"%d\", INTVAL (x));\n+\tfprintf (file, \"%d\", val);\n       return;\n     }\n   else if (rtxcode == CONST_DOUBLE)"}]}