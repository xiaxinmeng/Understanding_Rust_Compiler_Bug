{"sha": "aeeeda0391708755e09263bec674298280794f60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWVlZWRhMDM5MTcwODc1NWUwOTI2M2JlYzY3NDI5ODI4MDc5NGY2MA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-11-03T23:18:57Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-11-03T23:18:57Z"}, "message": "rtl.h (renumber_insns): New function.\n\n\t* rtl.h (renumber_insns): New function.\n\t(remove_unnecessary_notes): Likewise.\n\t* emit-rtl.c (renumber_insns): Define.\n\t(remove_unncessary_notes): Likewise.\n\t* toplev.c (rest_of_compilation): Remove dead code.\n\tUse renumber_insns and remove_unncessary_notes.\n\nFrom-SVN: r30385", "tree": {"sha": "7691daea056bed68a7b131047a7e13c2876fb901", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7691daea056bed68a7b131047a7e13c2876fb901"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aeeeda0391708755e09263bec674298280794f60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeeeda0391708755e09263bec674298280794f60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aeeeda0391708755e09263bec674298280794f60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeeeda0391708755e09263bec674298280794f60/comments", "author": null, "committer": null, "parents": [{"sha": "0511851c7bebdaee1226960fe405c9089a120a23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0511851c7bebdaee1226960fe405c9089a120a23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0511851c7bebdaee1226960fe405c9089a120a23"}], "stats": {"total": 85, "additions": 67, "deletions": 18}, "files": [{"sha": "efeee307aaa76ee7cccd07b3d05988b6f194507a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aeeeda0391708755e09263bec674298280794f60/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aeeeda0391708755e09263bec674298280794f60/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aeeeda0391708755e09263bec674298280794f60", "patch": "@@ -1,5 +1,12 @@\n Wed Nov  3 14:51:59 1999  Mark P. Mitchell  <mark@codesourcery.com>\n \n+\t* rtl.h (renumber_insns): New function.\n+\t(remove_unnecessary_notes): Likewise.\n+\t* emit-rtl.c (renumber_insns): Define.\n+\t(remove_unncessary_notes): Likewise.\n+\t* toplev.c (rest_of_compilation): Remove dead code.\n+\tUse renumber_insns and remove_unncessary_notes.\n+\n \t* gcse.c (struct null_pointer_info): New type.\n \t(get_bitmap_width): New function.\n \t(current_block): Remove."}, {"sha": "fed65a608c1b3a05157e3c494bf25af5f5faaf30", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aeeeda0391708755e09263bec674298280794f60/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aeeeda0391708755e09263bec674298280794f60/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=aeeeda0391708755e09263bec674298280794f60", "patch": "@@ -1897,6 +1897,23 @@ get_max_uid ()\n {\n   return cur_insn_uid;\n }\n+\n+void\n+renumber_insns ()\n+{\n+  rtx insn;\n+  int old_max_uid = cur_insn_uid;\n+\n+  /* If there aren't that many instructions, then it's not really\n+     worth renumbering them.  */\n+  if (get_max_uid () < 25000)\n+    return;\n+\n+  cur_insn_uid = 1;\n+\n+  for (insn = get_insns (); insn; insn = NEXT_INSN (insn))\n+    INSN_UID (insn) = cur_insn_uid++;\n+}\n \f\n /* Return the next insn.  If it is a SEQUENCE, return the first insn\n    of the sequence.  */\n@@ -2568,6 +2585,33 @@ reorder_insns_with_line_notes (from, to, after)\n \t\t\t  NOTE_LINE_NUMBER (after_line),\n \t\t\t  to);\n }\n+\n+/* Remove unncessary notes from the instruction stream.  */\n+\n+void\n+remove_unncessary_notes ()\n+{\n+  rtx insn;\n+  rtx next;\n+  varray_type block_stack;\n+\n+  /* Remove NOTE_INSN_DELETED notes.  We must not remove the first\n+     instruction in the function because the compiler depends on the\n+     first instruction being a note.  */\n+  for (insn = NEXT_INSN (get_insns ()); insn; insn = next)\n+    {\n+      /* Remember what's next.  */\n+      next = NEXT_INSN (insn);\n+\n+      /* We're only interested in notes.  */\n+      if (GET_CODE (insn) != NOTE)\n+\tcontinue;\n+\n+      if (NOTE_LINE_NUMBER (insn) == NOTE_INSN_DELETED)\n+\tremove_insn (insn);\n+    }\n+}\n+\n \f\n /* Emit an insn of given code and pattern\n    at a specified place within the doubly-linked list.  */"}, {"sha": "232e515b533a1206d745719c8dc80cb19e3ba1a9", "filename": "gcc/toplev.c", "status": "modified", "additions": 16, "deletions": 18, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aeeeda0391708755e09263bec674298280794f60/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aeeeda0391708755e09263bec674298280794f60/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=aeeeda0391708755e09263bec674298280794f60", "patch": "@@ -3562,15 +3562,14 @@ rest_of_compilation (decl)\n   register rtx insns;\n   int start_time = get_run_time ();\n   int tem;\n-  /* Nonzero if we have saved the original DECL_INITIAL of the function,\n-     to be restored after we finish compiling the function\n-     (for use when compiling inline calls to this function).  */\n-  tree saved_block_tree = 0;\n-  /* Likewise, for DECL_ARGUMENTS.  */\n-  tree saved_arguments = 0;\n   int failure = 0;\n   int rebuild_label_notes_after_reload;\n \n+  /* First, remove any notes we don't need.  That will make iterating\n+     over the instruction sequence faster, and allow the garbage\n+     collector to reclaim the memory used by the notes.  */\n+  remove_unncessary_notes ();\n+\n   /* If we are reconsidering an inline function\n      at the end of compilation, skip the stuff for making it inline.  */\n \n@@ -3792,6 +3791,13 @@ rest_of_compilation (decl)\n   if (ggc_p)\n     ggc_collect ();\n \n+  /* Jump optimization, and the removal of NULL pointer checks, may\n+     have reduced the number of instructions substantially.  CSE, and\n+     future passes, allocate arrays whose dimensions involve the maximum\n+     instruction UID, so if we can reduce the maximum UID we'll save big on\n+     memory.  */\n+  renumber_insns ();\n+\n   /* Perform common subexpression elimination.\n      Nonzero value from `cse_main' means that jumps were simplified\n      and some code may now be unreachable, so do\n@@ -3834,6 +3840,10 @@ rest_of_compilation (decl)\n \t  if (graph_dump_format != no_graph)\n \t    print_rtl_graph_with_bb (dump_base_name, \".02.cse\", insns);\n \t}\n+\n+      /* The second pass of jump optimization is likely to have\n+         removed a bunch more instructions.  */\n+      renumber_insns ();\n     }\n \n   purge_addressof (insns);\n@@ -4455,18 +4465,6 @@ rest_of_compilation (decl)\n     sdbout_types (NULL_TREE);\n #endif\n \n-  /* Put back the tree of subblocks and list of arguments\n-     from before we copied them.\n-     Code generation and the output of debugging info may have modified\n-     the copy, but the original is unchanged.  */\n-\n-  if (saved_block_tree != 0)\n-    {\n-      DECL_INITIAL (decl) = saved_block_tree;\n-      DECL_ARGUMENTS (decl) = saved_arguments;\n-      DECL_ABSTRACT_ORIGIN (decl) = NULL_TREE;\n-    }\n-\n   reload_completed = 0;\n   flow2_completed = 0;\n   no_new_pseudos = 0;"}]}