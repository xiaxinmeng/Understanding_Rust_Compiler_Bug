{"sha": "eb2887a19fee305b6d052d30dcfd321704f2ef09", "node_id": "C_kwDOANBUbNoAKGViMjg4N2ExOWZlZTMwNWI2ZDA1MmQzMGRjZmQzMjE3MDRmMmVmMDk", "commit": {"author": {"name": "Will Schmidt", "email": "will_schmidt@vnet.ibm.com", "date": "2022-06-23T20:54:19Z"}, "committer": {"name": "Will Schmidt", "email": "will_schmidt@vnet.ibm.com", "date": "2022-06-24T14:21:03Z"}, "message": "[PATCH,RS6000 5/5] Replace MASK_<xxxx> usage with OPTION_MASK_<xxxx>\n\nThis continues the changes of replacing the MASK_<xxxx> defines\nwith their OPTION_MASK_<xxxx> equivalents.\n\nThis patch removes the defines for\nMASK_P8_VECTOR, MASK_P9_VECTOR, MASK_P9_MISC, MASK_POPCNTB,\nMASK_POPCNTD, MASK_PPC_GFXOPT, MASK_PPC_GPOPT, MASK_RECIP_PRECISION,\nMASK_SOFT_FLOAT, MASK_VSX, MASK_POWER10, MASK_P10_FUSION.\n\ngcc/\n\t* config/rs6000/aix71.h (MASK_PPC_GPOPT, MASK_PPC_GFXOPT): Replace with\n\tOPTION_MASK_PPC_GPOPT, OPTION_MASK_PPC_GFXOPT.\n\t* config/rs6000/darwin.h (MASK_PPC_GFXOPT): Replace with\n\tOPTION_MASK_PPC_GFXOPT.\n\t* config/rs6000/darwin64-biarch.h (MASK_PPC_GFXOPT): Same.\n\t* config/rs6000/default64.h (MASK_PPC_GPOPT, MASK_PPC_GFXOPT): Replace with\n\tOPTION_MASK_PPC_GPOPT, OPTION_MASK_PPC_GFXOPT.\n\t* config/rs6000/rs6000-c.cc: Update comment.\n\t* config/rs6000/rs6000-cpus.def: Update RS6000_CPU macro calls.\n\t* config/rs6000/rs6000.cc (rs6000_darwin_file_start): Replace\n\tMASK_PPC_GPOPT with OPTION_MASK_PPC_GPOPT.\n\t(rs6000_builtin_mask_names): Replace MASK_PPC_GFXOPT, MASK_POPCNTB\n\twith OPTION_MASK_PPC_GFXOPT, OPTION_MASK_POPCNTB.\n\t* config/rs6000/rs6000.h: (MASK_P8_VECTOR, MASK_P9_VECTOR,\n\tMASK_P9_MISC, MASK_POPCNTB, MASK_POPCNTD, MASK_PPC_GFXOPT,\n\tMASK_PPC_GPOPT, MASK_RECIP_PRECISION, MASK_SOFT_FLOAT,\n\tMASK_VSX, MASK_POWER10, MASK_P10_FUSION): Delete.", "tree": {"sha": "3436bb289714a796d8938ed5a3c08ee06ee04bf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3436bb289714a796d8938ed5a3c08ee06ee04bf6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb2887a19fee305b6d052d30dcfd321704f2ef09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb2887a19fee305b6d052d30dcfd321704f2ef09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb2887a19fee305b6d052d30dcfd321704f2ef09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb2887a19fee305b6d052d30dcfd321704f2ef09/comments", "author": {"login": "willschm", "id": 44359, "node_id": "MDQ6VXNlcjQ0MzU5", "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willschm", "html_url": "https://github.com/willschm", "followers_url": "https://api.github.com/users/willschm/followers", "following_url": "https://api.github.com/users/willschm/following{/other_user}", "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}", "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willschm/subscriptions", "organizations_url": "https://api.github.com/users/willschm/orgs", "repos_url": "https://api.github.com/users/willschm/repos", "events_url": "https://api.github.com/users/willschm/events{/privacy}", "received_events_url": "https://api.github.com/users/willschm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "willschm", "id": 44359, "node_id": "MDQ6VXNlcjQ0MzU5", "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willschm", "html_url": "https://github.com/willschm", "followers_url": "https://api.github.com/users/willschm/followers", "following_url": "https://api.github.com/users/willschm/following{/other_user}", "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}", "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willschm/subscriptions", "organizations_url": "https://api.github.com/users/willschm/orgs", "repos_url": "https://api.github.com/users/willschm/repos", "events_url": "https://api.github.com/users/willschm/events{/privacy}", "received_events_url": "https://api.github.com/users/willschm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d"}], "stats": {"total": 142, "additions": 67, "deletions": 75}, "files": [{"sha": "323d7c884d18694e81d0c0dd26c9cee0399c9fd9", "filename": "gcc/config/rs6000/aix71.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb2887a19fee305b6d052d30dcfd321704f2ef09/gcc%2Fconfig%2Frs6000%2Faix71.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb2887a19fee305b6d052d30dcfd321704f2ef09/gcc%2Fconfig%2Frs6000%2Faix71.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix71.h?ref=eb2887a19fee305b6d052d30dcfd321704f2ef09", "patch": "@@ -137,10 +137,11 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #undef  TARGET_DEFAULT\n #ifdef RS6000_BI_ARCH\n-#define TARGET_DEFAULT (MASK_PPC_GPOPT | MASK_PPC_GFXOPT \\\n+#define TARGET_DEFAULT (OPTION_MASK_PPC_GPOPT | OPTION_MASK_PPC_GFXOPT \\\n \t\t\t| OPTION_MASK_MFCRF | MASK_POWERPC64 | MASK_64BIT)\n #else\n-#define TARGET_DEFAULT (MASK_PPC_GPOPT | MASK_PPC_GFXOPT | OPTION_MASK_MFCRF)\n+#define TARGET_DEFAULT (OPTION_MASK_PPC_GPOPT | OPTION_MASK_PPC_GFXOPT \\\n+\t\t\t| OPTION_MASK_MFCRF)\n #endif\n \n #undef  PROCESSOR_DEFAULT"}, {"sha": "6a8845eb3bb74c47cee74110cbc92c2c07086f78", "filename": "gcc/config/rs6000/darwin.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb2887a19fee305b6d052d30dcfd321704f2ef09/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb2887a19fee305b6d052d30dcfd321704f2ef09/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.h?ref=eb2887a19fee305b6d052d30dcfd321704f2ef09", "patch": "@@ -367,7 +367,7 @@\n    default as well.  */\n \n #undef  TARGET_DEFAULT\n-#define TARGET_DEFAULT (OPTION_MASK_MULTIPLE | MASK_PPC_GFXOPT)\n+#define TARGET_DEFAULT (OPTION_MASK_MULTIPLE | OPTION_MASK_PPC_GFXOPT)\n \n /* Darwin always uses IBM long double, never IEEE long double.  */\n #undef  TARGET_IEEEQUAD"}, {"sha": "6515bcc8bf5a9511b62f6bfd73690ddc876eae3a", "filename": "gcc/config/rs6000/darwin64-biarch.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb2887a19fee305b6d052d30dcfd321704f2ef09/gcc%2Fconfig%2Frs6000%2Fdarwin64-biarch.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb2887a19fee305b6d052d30dcfd321704f2ef09/gcc%2Fconfig%2Frs6000%2Fdarwin64-biarch.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin64-biarch.h?ref=eb2887a19fee305b6d052d30dcfd321704f2ef09", "patch": "@@ -21,7 +21,7 @@\n \n #undef  TARGET_DEFAULT\n #define TARGET_DEFAULT (MASK_POWERPC64 | MASK_64BIT \\\n-\t\t\t| OPTION_MASK_MULTIPLE | MASK_PPC_GFXOPT)\n+\t\t\t| OPTION_MASK_MULTIPLE | OPTION_MASK_PPC_GFXOPT)\n \n #undef DARWIN_ARCH_SPEC\n #define DARWIN_ARCH_SPEC \"%{m32:ppc;:ppc64}\""}, {"sha": "0bec94935e2b5e3fbf33aabcd066fab16c6a7558", "filename": "gcc/config/rs6000/default64.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb2887a19fee305b6d052d30dcfd321704f2ef09/gcc%2Fconfig%2Frs6000%2Fdefault64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb2887a19fee305b6d052d30dcfd321704f2ef09/gcc%2Fconfig%2Frs6000%2Fdefault64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdefault64.h?ref=eb2887a19fee305b6d052d30dcfd321704f2ef09", "patch": "@@ -30,7 +30,7 @@ along with GCC; see the file COPYING3.  If not see\n #define ASM_DEFAULT_SPEC \"-mpower8\"\n #else\n #undef TARGET_DEFAULT\n-#define TARGET_DEFAULT (MASK_PPC_GFXOPT | MASK_PPC_GPOPT \\\n+#define TARGET_DEFAULT (OPTION_MASK_PPC_GFXOPT | OPTION_MASK_PPC_GPOPT \\\n \t\t\t| OPTION_MASK_MFCRF | MASK_POWERPC64 | MASK_64BIT)\n #undef ASM_DEFAULT_SPEC\n #define ASM_DEFAULT_SPEC \"-mpower4\""}, {"sha": "0d13645040ffec7dfdf46c52a11c4415d33a29e3", "filename": "gcc/config/rs6000/rs6000-c.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb2887a19fee305b6d052d30dcfd321704f2ef09/gcc%2Fconfig%2Frs6000%2Frs6000-c.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb2887a19fee305b6d052d30dcfd321704f2ef09/gcc%2Fconfig%2Frs6000%2Frs6000-c.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.cc?ref=eb2887a19fee305b6d052d30dcfd321704f2ef09", "patch": "@@ -384,7 +384,7 @@ rs6000_target_modify_macros (bool define_p, HOST_WIDE_INT flags,\n \tTARGET_DEFAULT macro is defined to equal zero, and\n \tTARGET_POWERPC64 and\n \ta) BYTES_BIG_ENDIAN and the flag to be enabled is either\n-\t   MASK_PPC_GFXOPT or MASK_POWERPC64 (flags for \"powerpc64\"\n+\t   OPTION_MASK_PPC_GFXOPT or MASK_POWERPC64 (flags for \"powerpc64\"\n \t   target), or\n \tb) !BYTES_BIG_ENDIAN and the flag to be enabled is either\n \t   MASK_POWERPC64 or it is one of the flags included in"}, {"sha": "c3825bcccd84c9e25e7180fa13573650dd678af2", "filename": "gcc/config/rs6000/rs6000-cpus.def", "status": "modified", "additions": 55, "deletions": 54, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb2887a19fee305b6d052d30dcfd321704f2ef09/gcc%2Fconfig%2Frs6000%2Frs6000-cpus.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb2887a19fee305b6d052d30dcfd321704f2ef09/gcc%2Fconfig%2Frs6000%2Frs6000-cpus.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-cpus.def?ref=eb2887a19fee305b6d052d30dcfd321704f2ef09", "patch": "@@ -176,90 +176,91 @@\n \n    where the arguments are the fields of struct rs6000_ptt.  */\n \n-RS6000_CPU (\"401\", PROCESSOR_PPC403, MASK_SOFT_FLOAT)\n-RS6000_CPU (\"403\", PROCESSOR_PPC403, MASK_SOFT_FLOAT | MASK_STRICT_ALIGN)\n-RS6000_CPU (\"405\", PROCESSOR_PPC405, MASK_SOFT_FLOAT | OPTION_MASK_MULHW\n-\t    | OPTION_MASK_DLMZB)\n+RS6000_CPU (\"401\", PROCESSOR_PPC403, OPTION_MASK_SOFT_FLOAT)\n+RS6000_CPU (\"403\", PROCESSOR_PPC403, OPTION_MASK_SOFT_FLOAT | MASK_STRICT_ALIGN)\n+RS6000_CPU (\"405\", PROCESSOR_PPC405, OPTION_MASK_SOFT_FLOAT\n+\t    | OPTION_MASK_MULHW | OPTION_MASK_DLMZB)\n RS6000_CPU (\"405fp\", PROCESSOR_PPC405, OPTION_MASK_MULHW | OPTION_MASK_DLMZB)\n-RS6000_CPU (\"440\", PROCESSOR_PPC440, MASK_SOFT_FLOAT | OPTION_MASK_MULHW\n-\t   | OPTION_MASK_DLMZB)\n+RS6000_CPU (\"440\", PROCESSOR_PPC440, OPTION_MASK_SOFT_FLOAT\n+\t    | OPTION_MASK_MULHW | OPTION_MASK_DLMZB)\n RS6000_CPU (\"440fp\", PROCESSOR_PPC440, OPTION_MASK_MULHW | OPTION_MASK_DLMZB)\n-RS6000_CPU (\"464\", PROCESSOR_PPC440, MASK_SOFT_FLOAT | OPTION_MASK_MULHW\n-\t   | OPTION_MASK_DLMZB)\n+RS6000_CPU (\"464\", PROCESSOR_PPC440, OPTION_MASK_SOFT_FLOAT\n+\t    | OPTION_MASK_MULHW | OPTION_MASK_DLMZB)\n RS6000_CPU (\"464fp\", PROCESSOR_PPC440, OPTION_MASK_MULHW | OPTION_MASK_DLMZB)\n-RS6000_CPU (\"476\", PROCESSOR_PPC476, MASK_SOFT_FLOAT | MASK_PPC_GFXOPT\n-\t    | OPTION_MASK_MFCRF | MASK_POPCNTB\n+RS6000_CPU (\"476\", PROCESSOR_PPC476, OPTION_MASK_SOFT_FLOAT\n+\t    | OPTION_MASK_PPC_GFXOPT | OPTION_MASK_MFCRF | OPTION_MASK_POPCNTB\n \t    | OPTION_MASK_FPRND | OPTION_MASK_CMPB | OPTION_MASK_MULHW\n \t    | OPTION_MASK_DLMZB)\n-RS6000_CPU (\"476fp\", PROCESSOR_PPC476,\n-\t    MASK_PPC_GFXOPT | OPTION_MASK_MFCRF | MASK_POPCNTB\n-\t    | OPTION_MASK_FPRND\n+RS6000_CPU (\"476fp\", PROCESSOR_PPC476, OPTION_MASK_PPC_GFXOPT\n+\t    | OPTION_MASK_MFCRF | OPTION_MASK_POPCNTB | OPTION_MASK_FPRND\n \t    | OPTION_MASK_CMPB | OPTION_MASK_MULHW | OPTION_MASK_DLMZB)\n RS6000_CPU (\"505\", PROCESSOR_MPCCORE, 0)\n RS6000_CPU (\"601\", PROCESSOR_PPC601, OPTION_MASK_MULTIPLE)\n-RS6000_CPU (\"602\", PROCESSOR_PPC603, MASK_PPC_GFXOPT)\n-RS6000_CPU (\"603\", PROCESSOR_PPC603, MASK_PPC_GFXOPT)\n-RS6000_CPU (\"603e\", PROCESSOR_PPC603, MASK_PPC_GFXOPT)\n-RS6000_CPU (\"604\", PROCESSOR_PPC604, MASK_PPC_GFXOPT)\n-RS6000_CPU (\"604e\", PROCESSOR_PPC604e, MASK_PPC_GFXOPT)\n-RS6000_CPU (\"620\", PROCESSOR_PPC620, MASK_PPC_GFXOPT | MASK_POWERPC64)\n-RS6000_CPU (\"630\", PROCESSOR_PPC630, MASK_PPC_GFXOPT | MASK_POWERPC64)\n-RS6000_CPU (\"740\", PROCESSOR_PPC750, MASK_PPC_GFXOPT)\n+RS6000_CPU (\"602\", PROCESSOR_PPC603, OPTION_MASK_PPC_GFXOPT)\n+RS6000_CPU (\"603\", PROCESSOR_PPC603, OPTION_MASK_PPC_GFXOPT)\n+RS6000_CPU (\"603e\", PROCESSOR_PPC603, OPTION_MASK_PPC_GFXOPT)\n+RS6000_CPU (\"604\", PROCESSOR_PPC604, OPTION_MASK_PPC_GFXOPT)\n+RS6000_CPU (\"604e\", PROCESSOR_PPC604e, OPTION_MASK_PPC_GFXOPT)\n+RS6000_CPU (\"620\", PROCESSOR_PPC620, OPTION_MASK_PPC_GFXOPT | MASK_POWERPC64)\n+RS6000_CPU (\"630\", PROCESSOR_PPC630, OPTION_MASK_PPC_GFXOPT | MASK_POWERPC64)\n+RS6000_CPU (\"740\", PROCESSOR_PPC750, OPTION_MASK_PPC_GFXOPT)\n RS6000_CPU (\"7400\", PROCESSOR_PPC7400, POWERPC_7400_MASK)\n RS6000_CPU (\"7450\", PROCESSOR_PPC7450, POWERPC_7400_MASK)\n-RS6000_CPU (\"750\", PROCESSOR_PPC750, MASK_PPC_GFXOPT)\n-RS6000_CPU (\"801\", PROCESSOR_MPCCORE, MASK_SOFT_FLOAT)\n-RS6000_CPU (\"821\", PROCESSOR_MPCCORE, MASK_SOFT_FLOAT)\n-RS6000_CPU (\"823\", PROCESSOR_MPCCORE, MASK_SOFT_FLOAT)\n+RS6000_CPU (\"750\", PROCESSOR_PPC750, OPTION_MASK_PPC_GFXOPT)\n+RS6000_CPU (\"801\", PROCESSOR_MPCCORE, OPTION_MASK_SOFT_FLOAT)\n+RS6000_CPU (\"821\", PROCESSOR_MPCCORE, OPTION_MASK_SOFT_FLOAT)\n+RS6000_CPU (\"823\", PROCESSOR_MPCCORE, OPTION_MASK_SOFT_FLOAT)\n RS6000_CPU (\"8540\", PROCESSOR_PPC8540, MASK_STRICT_ALIGN | OPTION_MASK_ISEL)\n RS6000_CPU (\"8548\", PROCESSOR_PPC8548, MASK_STRICT_ALIGN | OPTION_MASK_ISEL)\n-RS6000_CPU (\"a2\", PROCESSOR_PPCA2,\n-\t    MASK_PPC_GFXOPT | MASK_POWERPC64 | MASK_POPCNTB | OPTION_MASK_CMPB\n+RS6000_CPU (\"a2\", PROCESSOR_PPCA2, OPTION_MASK_PPC_GFXOPT | MASK_POWERPC64\n+\t    | OPTION_MASK_POPCNTB | OPTION_MASK_CMPB\n \t    | OPTION_MASK_NO_UPDATE)\n-RS6000_CPU (\"e300c2\", PROCESSOR_PPCE300C2, MASK_SOFT_FLOAT)\n+RS6000_CPU (\"e300c2\", PROCESSOR_PPCE300C2, OPTION_MASK_SOFT_FLOAT)\n RS6000_CPU (\"e300c3\", PROCESSOR_PPCE300C3, 0)\n-RS6000_CPU (\"e500mc\", PROCESSOR_PPCE500MC, MASK_PPC_GFXOPT | OPTION_MASK_ISEL)\n+RS6000_CPU (\"e500mc\", PROCESSOR_PPCE500MC, OPTION_MASK_PPC_GFXOPT\n+\t    | OPTION_MASK_ISEL)\n RS6000_CPU (\"e500mc64\", PROCESSOR_PPCE500MC64,\n-\t    MASK_POWERPC64 | MASK_PPC_GFXOPT | OPTION_MASK_ISEL)\n+\t    MASK_POWERPC64 | OPTION_MASK_PPC_GFXOPT | OPTION_MASK_ISEL)\n RS6000_CPU (\"e5500\", PROCESSOR_PPCE5500,\n-\t    MASK_POWERPC64 | MASK_PPC_GFXOPT | OPTION_MASK_ISEL)\n+\t    MASK_POWERPC64 | OPTION_MASK_PPC_GFXOPT | OPTION_MASK_ISEL)\n RS6000_CPU (\"e6500\", PROCESSOR_PPCE6500, POWERPC_7400_MASK | MASK_POWERPC64\n \t    | OPTION_MASK_MFCRF | OPTION_MASK_ISEL)\n-RS6000_CPU (\"860\", PROCESSOR_MPCCORE, MASK_SOFT_FLOAT)\n-RS6000_CPU (\"970\", PROCESSOR_POWER4, POWERPC_7400_MASK | MASK_PPC_GPOPT\n+RS6000_CPU (\"860\", PROCESSOR_MPCCORE, OPTION_MASK_SOFT_FLOAT)\n+RS6000_CPU (\"970\", PROCESSOR_POWER4, POWERPC_7400_MASK | OPTION_MASK_PPC_GPOPT\n \t    | OPTION_MASK_MFCRF | MASK_POWERPC64)\n-RS6000_CPU (\"cell\", PROCESSOR_CELL, POWERPC_7400_MASK  | MASK_PPC_GPOPT\n+RS6000_CPU (\"cell\", PROCESSOR_CELL, POWERPC_7400_MASK  | OPTION_MASK_PPC_GPOPT\n \t    | OPTION_MASK_MFCRF | MASK_POWERPC64)\n-RS6000_CPU (\"ec603e\", PROCESSOR_PPC603, MASK_SOFT_FLOAT)\n-RS6000_CPU (\"G3\", PROCESSOR_PPC750, MASK_PPC_GFXOPT)\n+RS6000_CPU (\"ec603e\", PROCESSOR_PPC603, OPTION_MASK_SOFT_FLOAT)\n+RS6000_CPU (\"G3\", PROCESSOR_PPC750, OPTION_MASK_PPC_GFXOPT)\n RS6000_CPU (\"G4\",  PROCESSOR_PPC7450, POWERPC_7400_MASK)\n-RS6000_CPU (\"G5\", PROCESSOR_POWER4, POWERPC_7400_MASK | MASK_PPC_GPOPT\n+RS6000_CPU (\"G5\", PROCESSOR_POWER4, POWERPC_7400_MASK | OPTION_MASK_PPC_GPOPT\n \t    | OPTION_MASK_MFCRF | MASK_POWERPC64)\n RS6000_CPU (\"titan\", PROCESSOR_TITAN, OPTION_MASK_MULHW | OPTION_MASK_DLMZB)\n-RS6000_CPU (\"power3\", PROCESSOR_PPC630, MASK_PPC_GFXOPT | MASK_POWERPC64)\n-RS6000_CPU (\"power4\", PROCESSOR_POWER4, MASK_POWERPC64 | MASK_PPC_GPOPT\n-\t    | MASK_PPC_GFXOPT | OPTION_MASK_MFCRF)\n-RS6000_CPU (\"power5\", PROCESSOR_POWER5, MASK_POWERPC64 | MASK_PPC_GPOPT\n-\t    | MASK_PPC_GFXOPT | OPTION_MASK_MFCRF | MASK_POPCNTB)\n-RS6000_CPU (\"power5+\", PROCESSOR_POWER5, MASK_POWERPC64 | MASK_PPC_GPOPT\n-\t    | MASK_PPC_GFXOPT | OPTION_MASK_MFCRF | MASK_POPCNTB\n+RS6000_CPU (\"power3\", PROCESSOR_PPC630, OPTION_MASK_PPC_GFXOPT | MASK_POWERPC64)\n+RS6000_CPU (\"power4\", PROCESSOR_POWER4, MASK_POWERPC64 | OPTION_MASK_PPC_GPOPT\n+\t    | OPTION_MASK_PPC_GFXOPT | OPTION_MASK_MFCRF)\n+RS6000_CPU (\"power5\", PROCESSOR_POWER5, MASK_POWERPC64 | OPTION_MASK_PPC_GPOPT\n+\t    | OPTION_MASK_PPC_GFXOPT | OPTION_MASK_MFCRF | OPTION_MASK_POPCNTB)\n+RS6000_CPU (\"power5+\", PROCESSOR_POWER5, MASK_POWERPC64 | OPTION_MASK_PPC_GPOPT\n+\t    | OPTION_MASK_PPC_GFXOPT | OPTION_MASK_MFCRF | OPTION_MASK_POPCNTB\n \t    | OPTION_MASK_FPRND)\n-RS6000_CPU (\"power6\", PROCESSOR_POWER6, MASK_POWERPC64 | MASK_PPC_GPOPT\n-\t    | MASK_PPC_GFXOPT | OPTION_MASK_MFCRF | MASK_POPCNTB\n+RS6000_CPU (\"power6\", PROCESSOR_POWER6, MASK_POWERPC64 | OPTION_MASK_PPC_GPOPT\n+\t    | OPTION_MASK_PPC_GFXOPT | OPTION_MASK_MFCRF | OPTION_MASK_POPCNTB\n \t    | OPTION_MASK_FPRND | OPTION_MASK_CMPB | OPTION_MASK_DFP\n-\t    | MASK_RECIP_PRECISION)\n-RS6000_CPU (\"power6x\", PROCESSOR_POWER6, MASK_POWERPC64 | MASK_PPC_GPOPT\n-\t    | MASK_PPC_GFXOPT | OPTION_MASK_MFCRF | MASK_POPCNTB\n+\t    | OPTION_MASK_RECIP_PRECISION)\n+RS6000_CPU (\"power6x\", PROCESSOR_POWER6, MASK_POWERPC64 | OPTION_MASK_PPC_GPOPT\n+\t    | OPTION_MASK_PPC_GFXOPT | OPTION_MASK_MFCRF | OPTION_MASK_POPCNTB\n \t    | OPTION_MASK_FPRND | OPTION_MASK_CMPB | OPTION_MASK_DFP\n-\t    | MASK_RECIP_PRECISION)\n+\t    | OPTION_MASK_RECIP_PRECISION)\n RS6000_CPU (\"power7\", PROCESSOR_POWER7, MASK_POWERPC64 | ISA_2_6_MASKS_SERVER)\n RS6000_CPU (\"power8\", PROCESSOR_POWER8, MASK_POWERPC64 | ISA_2_7_MASKS_SERVER\n \t    | OPTION_MASK_HTM)\n RS6000_CPU (\"power9\", PROCESSOR_POWER9, MASK_POWERPC64 | ISA_3_0_MASKS_SERVER\n \t    | OPTION_MASK_HTM)\n RS6000_CPU (\"power10\", PROCESSOR_POWER10, MASK_POWERPC64 | ISA_3_1_MASKS_SERVER)\n RS6000_CPU (\"powerpc\", PROCESSOR_POWERPC, 0)\n-RS6000_CPU (\"powerpc64\", PROCESSOR_POWERPC64, MASK_PPC_GFXOPT | MASK_POWERPC64)\n-RS6000_CPU (\"powerpc64le\", PROCESSOR_POWER8, MASK_POWERPC64 | ISA_2_7_MASKS_SERVER\n-\t    | OPTION_MASK_HTM)\n-RS6000_CPU (\"rs64\", PROCESSOR_RS64A, MASK_PPC_GFXOPT | MASK_POWERPC64)\n+RS6000_CPU (\"powerpc64\", PROCESSOR_POWERPC64, OPTION_MASK_PPC_GFXOPT\n+\t    | MASK_POWERPC64)\n+RS6000_CPU (\"powerpc64le\", PROCESSOR_POWER8, MASK_POWERPC64\n+\t    | ISA_2_7_MASKS_SERVER | OPTION_MASK_HTM)\n+RS6000_CPU (\"rs64\", PROCESSOR_RS64A, OPTION_MASK_PPC_GFXOPT | MASK_POWERPC64)"}, {"sha": "3ff16b8ae04d0241fec0edf500fd7984b3bc2a26", "filename": "gcc/config/rs6000/rs6000.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb2887a19fee305b6d052d30dcfd321704f2ef09/gcc%2Fconfig%2Frs6000%2Frs6000.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb2887a19fee305b6d052d30dcfd321704f2ef09/gcc%2Fconfig%2Frs6000%2Frs6000.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.cc?ref=eb2887a19fee305b6d052d30dcfd321704f2ef09", "patch": "@@ -20732,7 +20732,8 @@ rs6000_darwin_file_start (void)\n     HOST_WIDE_INT if_set;\n   } mapping[] = {\n     { \"ppc64\", \"ppc64\", MASK_64BIT },\n-    { \"970\", \"ppc970\", MASK_PPC_GPOPT | OPTION_MASK_MFCRF | MASK_POWERPC64 },\n+    { \"970\", \"ppc970\", OPTION_MASK_PPC_GPOPT | OPTION_MASK_MFCRF \\\n+\t\t\t| MASK_POWERPC64 },\n     { \"power4\", \"ppc970\", 0 },\n     { \"G5\", \"ppc970\", 0 },\n     { \"7450\", \"ppc7450\", 0 },\n@@ -24069,8 +24070,8 @@ static struct rs6000_opt_mask const rs6000_builtin_mask_names[] =\n   { \"hard-dfp\",\t\t OPTION_MASK_DFP,\tfalse, false },\n   { \"hard-float\",\t OPTION_MASK_SOFT_FLOAT, false, false },\n   { \"long-double-128\",\t OPTION_MASK_MULTIPLE,\tfalse, false },\n-  { \"powerpc64\",\t MASK_POWERPC64,\tfalse, false },\n-  { \"float128\",\t\t OPTION_MASK_FLOAT128_KEYWORD, false, false },\n+  { \"powerpc64\",\t MASK_POWERPC64,  false, false },\n+  { \"float128\",\t\t OPTION_MASK_FLOAT128_KEYWORD,   false, false },\n   { \"float128-hw\",\t OPTION_MASK_FLOAT128_HW,false, false },\n   { \"mma\",\t\t OPTION_MASK_MMA,\tfalse, false },\n   { \"power10\",\t\t OPTION_MASK_POWER10,\tfalse, false },"}, {"sha": "7d04556304a08604e0e9a5f86329bde2757a9d84", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb2887a19fee305b6d052d30dcfd321704f2ef09/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb2887a19fee305b6d052d30dcfd321704f2ef09/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=eb2887a19fee305b6d052d30dcfd321704f2ef09", "patch": "@@ -508,19 +508,8 @@ extern int rs6000_vector_align[];\n    machinery creates OPTION_MASK_<xxx> instead of MASK_<xxx>.  The MASK_<xxxx>\n    options that have not yet been replaced by their OPTION_MASK_<xxx>\n    equivalents are defined here.  */\n-#define MASK_P8_VECTOR\t\t\tOPTION_MASK_P8_VECTOR\n-#define MASK_P9_VECTOR\t\t\tOPTION_MASK_P9_VECTOR\n-#define MASK_P9_MISC\t\t\tOPTION_MASK_P9_MISC\n-#define MASK_POPCNTB\t\t\tOPTION_MASK_POPCNTB\n-#define MASK_POPCNTD\t\t\tOPTION_MASK_POPCNTD\n-#define MASK_PPC_GFXOPT\t\t\tOPTION_MASK_PPC_GFXOPT\n-#define MASK_PPC_GPOPT\t\t\tOPTION_MASK_PPC_GPOPT\n-#define MASK_RECIP_PRECISION\t\tOPTION_MASK_RECIP_PRECISION\n-#define MASK_SOFT_FLOAT\t\t\tOPTION_MASK_SOFT_FLOAT\n+\n #define MASK_STRICT_ALIGN\t\tOPTION_MASK_STRICT_ALIGN\n-#define MASK_VSX\t\t\tOPTION_MASK_VSX\n-#define MASK_POWER10\t\t\tOPTION_MASK_POWER10\n-#define MASK_P10_FUSION\t\t\tOPTION_MASK_P10_FUSION\n \n #ifndef IN_LIBGCC2\n #define MASK_POWERPC64\t\t\tOPTION_MASK_POWERPC64"}]}