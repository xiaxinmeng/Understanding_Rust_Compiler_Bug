{"sha": "4b92a3bf21f0f5c27628a4b1a74da2fd2572f732", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI5MmEzYmYyMWYwZjVjMjc2MjhhNGIxYTc0ZGEyZmQyNTcyZjczMg==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-07-18T21:37:06Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-07-18T21:37:06Z"}, "message": "howto.html: Fix typo.\n\n2001-07-18  Phil Edwards  <pme@sources.redhat.com>\n\n\t* docs/html/27_io/howto.html:  Fix typo.\n\t* docs/html/faq/index.html:  Minor updates for 3.0 all around.\n\t* docs/html/faq/index.txt:  Regenerated.\n\nFrom-SVN: r44135", "tree": {"sha": "9920943138f2e7467016a2cfd148a913ed4533e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9920943138f2e7467016a2cfd148a913ed4533e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b92a3bf21f0f5c27628a4b1a74da2fd2572f732", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b92a3bf21f0f5c27628a4b1a74da2fd2572f732", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b92a3bf21f0f5c27628a4b1a74da2fd2572f732", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b92a3bf21f0f5c27628a4b1a74da2fd2572f732/comments", "author": null, "committer": null, "parents": [{"sha": "d989f648fa20fdb23338fe92c1e14c071fd36a6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d989f648fa20fdb23338fe92c1e14c071fd36a6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d989f648fa20fdb23338fe92c1e14c071fd36a6a"}], "stats": {"total": 118, "additions": 77, "deletions": 41}, "files": [{"sha": "e47ceb8c0b2120b244924e10d244cab0e0e7369e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b92a3bf21f0f5c27628a4b1a74da2fd2572f732/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b92a3bf21f0f5c27628a4b1a74da2fd2572f732/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4b92a3bf21f0f5c27628a4b1a74da2fd2572f732", "patch": "@@ -1,3 +1,9 @@\n+2001-07-18  Phil Edwards  <pme@sources.redhat.com>\n+\n+\t* docs/html/27_io/howto.html:  Fix typo.\n+\t* docs/html/faq/index.html:  Minor updates for 3.0 all around.\n+\t* docs/html/faq/index.txt:  Regenerated.\n+\n 2001-07-18  Stephen M. Webb  <stephen@bregmasoft..com>\n             Roman Sulzhyk  <roman_sulzhyk@yahoo.com>\n "}, {"sha": "3241e6e0fb067c44386d68bcb3cfcc06c9900fc7", "filename": "libstdc++-v3/docs/html/27_io/howto.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b92a3bf21f0f5c27628a4b1a74da2fd2572f732/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F27_io%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b92a3bf21f0f5c27628a4b1a74da2fd2572f732/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F27_io%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F27_io%2Fhowto.html?ref=4b92a3bf21f0f5c27628a4b1a74da2fd2572f732", "patch": "@@ -8,7 +8,7 @@\n    <META NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n    <TITLE>libstdc++-v3 HOWTO:  Chapter 27</TITLE>\n <LINK REL=StyleSheet HREF=\"../lib3styles.css\">\n-<!-- $Id: howto.html,v 1.6 2001/07/09 19:37:01 pme Exp $ -->\n+<!-- $Id: howto.html,v 1.7 2001/07/09 21:47:36 pme Exp $ -->\n </HEAD>\n <BODY>\n \n@@ -438,7 +438,7 @@ <H2><A NAME=\"8\">Pathetic performance?  Ditch C.</A></H2>\n       <PRE>\n      #include <EM>any of the I/O headers such as ios, iostream, etc</EM>\n \n-     std::sync_with_stdio(false);\n+     std::ios::sync_with_stdio(false);\n       </PRE>\n    </P>\n    <P>You must do this before performing any I/O via the C++ stream objects.\n@@ -460,7 +460,7 @@ <H2><A NAME=\"8\">Pathetic performance?  Ditch C.</A></H2>\n <P CLASS=\"fineprint\"><EM>\n Comments and suggestions are welcome, and may be sent to\n <A HREF=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</A>.\n-<BR> $Id: howto.html,v 1.6 2001/07/09 19:37:01 pme Exp $\n+<BR> $Id: howto.html,v 1.7 2001/07/09 21:47:36 pme Exp $\n </EM></P>\n \n "}, {"sha": "128ecb4dde769f22647106a1230060a704af2abc", "filename": "libstdc++-v3/docs/html/faq/index.html", "status": "modified", "additions": 32, "deletions": 14, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b92a3bf21f0f5c27628a4b1a74da2fd2572f732/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b92a3bf21f0f5c27628a4b1a74da2fd2572f732/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html?ref=4b92a3bf21f0f5c27628a4b1a74da2fd2572f732", "patch": "@@ -9,7 +9,7 @@\n   ** Locations of \"the most recent snapshot is the Nth\" text are \n   ** answers 1_1, 1_4, 4_1, 5_6.\n -->\n-<!-- $Id: index.html,v 1.8 2001/05/10 18:42:11 pme Exp $ -->\n+<!-- $Id: index.html,v 1.9 2001/05/30 21:55:04 pme Exp $ -->\n </HEAD>\n <BODY>\n \n@@ -241,7 +241,7 @@ <H2><A NAME=\"1_8\">1.8 What if I have more questions?</A></H2>\n       </P>\n       <P>If you have a question that you think should be included here,\n          or if you have a question <EM>about</EM> a question/answer here,\n-         contact <A HREF=\"mailto:pme@sources.redhat.com\">Phil Edwards</A>\n+         contact <A HREF=\"mailto:pme@gcc.gnu.org\">Phil Edwards</A>\n          or <A HREF=\"mailto:gdr@gcc.gnu.org\">Gabriel Dos Reis</A>.\n       </P>\n \n@@ -257,7 +257,7 @@ <H2><A NAME=\"2_1\">2.1 How do I install libstdc++-v3?</A></H2>\n                  easier and more automated than building the GCC 2.[78]\n                  series was.  If you are using GCC 2.95, you can still\n                  build earlier snapshots of libstdc++.\n-            <LI> GNU Make is the only make that supports these makefiles. \n+            <LI> GNU Make is recommended, but should not be required.\n             <LI> The GNU Autotools are needed if you are messing with\n                  the configury or makefiles.\n          </UL>\n@@ -304,13 +304,13 @@ <H2><A NAME=\"2_3\">2.3 What is this CVS thing that you\n <HR>\n    <H2><A NAME=\"2_4\">2.4 How do I know if it works?</A></H2>\n       <P>libstdc++-v3 comes with its own testsuite.  You do not need\n-         to actually install the library (&quot;<TT>gmake\n+         to actually install the library (&quot;<TT>make\n          install</TT>&quot;) to run the testsuite.\n       </P>\n       <P>To run the testsuite on the library after building it, use\n-         &quot;gmake check&quot; while in your build directory.  To run\n+         &quot;make check&quot; while in your build directory.  To run\n          the testsuite on the library after building and installing it,\n-         use &quot;gmake check-install&quot; instead.\n+         use &quot;make check-install&quot; instead.\n       </P>\n       <P>If you find bugs in the testsuite programs themselves, or if\n          you think of a new test program that should be added to the\n@@ -551,30 +551,47 @@ <H2><A NAME=\"5_1\">5.1 string::iterator is not char*;\n          than a typedef for <TT>T*</TT> outweighs nearly all opposing\n          arguments.\n       </P>\n+      <P>Code which does assume that a vector iterator <code> i </code>\n+         is a pointer can often be fixed by changing <code> i </code> in\n+         certain expressions to <code> &amp;*i </code>.  Future revisions\n+         of the Standard are expected to bless this usage for\n+         vector&lt;&gt; (but not for basic_string&lt;&gt;).\n+      </P>\n \n <HR>\n    <H2><A NAME=\"5_2\">5.2 What's next after libstdc++-v3?</A></H2>\n       <P>Hopefully, not much.  The goal of libstdc++-v3 is to produce\n          a fully-compliant, fully-portable Standard Library.  After that,\n          we're mostly done:  there won't <EM>be</EM> any more compliance\n-         work to do.\n+         work to do.  However:\n       </P>\n-      <P>The ISO Committee will meet periodically to review Defect Reports\n+      <OL>\n+      <LI><P>The ISO Committee will meet periodically to review Defect Reports\n          in the C++ Standard.  Undoubtedly some of these will result in\n          changes to the Standard, which will be reflected in patches to\n          libstdc++.  Some of that is already happening, see 4.2.  Some of\n          those changes are being predicted by the library maintainers, and\n          we add code to the library based on what the current proposed\n          resolution specifies.\n       </P>\n-      <P>The current libstdc++ contains extensions to the Library which\n+      <LI><P>Performance tuning.  Lots of performance tuning.  This too is\n+         already underway for post-3.0 releases, starting with memory\n+         expansion in container classes and buffer usage in synchronized\n+         stream objects.\n+      </P>\n+      <LI><P>An ABI for libstdc++ will eventually be developed, so that\n+         multiple binary-incompatible copies of the library can be replaced\n+         with a single backwards-compatible library, like libgcc_s.so is.\n+      </P>\n+      <LI><P>The current libstdc++ contains extensions to the Library which\n          must be explicitly requested by client code (for example, the\n          hash tables from SGI).  Other extensions may be added to\n          libstdc++-v3 if they seem to be &quot;standard&quot; enough.\n          (For example, the &quot;long long&quot; type from C99.)\n          Bugfixes and rewrites (to improve or fix thread safety, for\n          instance) will of course be a continuing task.\n       </P>\n+      </OL>\n       <P><A\n HREF=\"http://gcc.gnu.org/ml/libstdc++/1999/msg00080.html\">This\n          question</A> about the next libstdc++ prompted some brief but\n@@ -584,10 +601,11 @@ <H2><A NAME=\"5_2\">5.2 What's next after libstdc++-v3?</A></H2>\n \n <HR>\n    <H2><A NAME=\"5_3\">5.3 What about the STL from SGI?</A></H2>\n-      <P>The <A HREF=\"http://www.sgi.com/Technology/STL/\">STL from SGI</A>\n-         is merged into libstdc++-v3 with changes as necessary.  \n-         Currently release 3.3 is being used as an initial codebase, plus\n-         changes, fixes, and extensions.\n+      <P>The <A HREF=\"http://www.sgi.com/Technology/STL/\">STL from SGI</A>,\n+         version 3.3, was the most recent merge of the STL codebase.  The\n+         code in libstdc++ contains many fixes and changes, and it is\n+         very likely that the SGI code is no longer under active\n+         development.  We expect that no future merges will take place.\n       </P>\n       <P>In particular, <TT>string</TT> is not from SGI and makes no\n          use of their &quot;rope&quot; class (which is included as an\n@@ -660,7 +678,7 @@ <H2><A NAME=\"5_7\">5.7 How do I get a copy of the ISO C++ Standard?</A></H2>\n <P CLASS=\"fineprint\"><EM>\n Comments and suggestions are welcome, and may be sent to\n <A HREF=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</A>.\n-<BR> $Id: index.html,v 1.8 2001/05/10 18:42:11 pme Exp $\n+<BR> $Id: index.html,v 1.9 2001/05/30 21:55:04 pme Exp $\n </EM></P>\n \n "}, {"sha": "88c1b4be339bddb6afba9a97bb59581a9d950f90", "filename": "libstdc++-v3/docs/html/faq/index.txt", "status": "modified", "additions": 36, "deletions": 24, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b92a3bf21f0f5c27628a4b1a74da2fd2572f732/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b92a3bf21f0f5c27628a4b1a74da2fd2572f732/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt?ref=4b92a3bf21f0f5c27628a4b1a74da2fd2572f732", "patch": "@@ -187,7 +187,7 @@\n        more automated than building the GCC 2.[78] series was. If you are\n        using GCC 2.95, you can still build earlier snapshots of\n        libstdc++.\n-     * GNU Make is the only make that supports these makefiles.\n+     * GNU Make is recommended, but should not be required.\n      * The GNU Autotools are needed if you are messing with the configury\n        or makefiles.\n \n@@ -228,11 +228,11 @@\n 2.4 How do I know if it works?\n \n    libstdc++-v3 comes with its own testsuite. You do not need to actually\n-   install the library (\"gmake install\") to run the testsuite.\n+   install the library (\"make install\") to run the testsuite.\n \n-   To run the testsuite on the library after building it, use \"gmake\n+   To run the testsuite on the library after building it, use \"make\n    check\" while in your build directory. To run the testsuite on the\n-   library after building and installing it, use \"gmake check-install\"\n+   library after building and installing it, use \"make check-install\"\n    instead.\n \n    If you find bugs in the testsuite programs themselves, or if you think\n@@ -430,37 +430,49 @@ http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n    were never guaranteed by the Standard anyway. The type-safety achieved\n    by making iterators a real class rather than a typedef for T*\n    outweighs nearly all opposing arguments.\n+\n+   Code which does assume that a vector iterator i is a pointer can often\n+   be fixed by changing i in certain expressions to &*i . Future\n+   revisions of the Standard are expected to bless this usage for\n+   vector<> (but not for basic_string<>).\n      _________________________________________________________________\n \n 5.2 What's next after libstdc++-v3?\n \n    Hopefully, not much. The goal of libstdc++-v3 is to produce a\n    fully-compliant, fully-portable Standard Library. After that, we're\n-   mostly done: there won't be any more compliance work to do.\n-\n-   The ISO Committee will meet periodically to review Defect Reports in\n-   the C++ Standard. Undoubtedly some of these will result in changes to\n-   the Standard, which will be reflected in patches to libstdc++. Some of\n-   that is already happening, see 4.2. Some of those changes are being\n-   predicted by the library maintainers, and we add code to the library\n-   based on what the current proposed resolution specifies.\n-\n-   The current libstdc++ contains extensions to the Library which must be\n-   explicitly requested by client code (for example, the hash tables from\n-   SGI). Other extensions may be added to libstdc++-v3 if they seem to be\n-   \"standard\" enough. (For example, the \"long long\" type from C99.)\n-   Bugfixes and rewrites (to improve or fix thread safety, for instance)\n-   will of course be a continuing task.\n+   mostly done: there won't be any more compliance work to do. However:\n+    1. The ISO Committee will meet periodically to review Defect Reports\n+       in the C++ Standard. Undoubtedly some of these will result in\n+       changes to the Standard, which will be reflected in patches to\n+       libstdc++. Some of that is already happening, see 4.2. Some of\n+       those changes are being predicted by the library maintainers, and\n+       we add code to the library based on what the current proposed\n+       resolution specifies.\n+    2. Performance tuning. Lots of performance tuning. This too is\n+       already underway for post-3.0 releases, starting with memory\n+       expansion in container classes and buffer usage in synchronized\n+       stream objects.\n+    3. An ABI for libstdc++ will eventually be developed, so that\n+       multiple binary-incompatible copies of the library can be replaced\n+       with a single backwards-compatible library, like libgcc_s.so is.\n+    4. The current libstdc++ contains extensions to the Library which\n+       must be explicitly requested by client code (for example, the hash\n+       tables from SGI). Other extensions may be added to libstdc++-v3 if\n+       they seem to be \"standard\" enough. (For example, the \"long long\"\n+       type from C99.) Bugfixes and rewrites (to improve or fix thread\n+       safety, for instance) will of course be a continuing task.\n \n    [69]This question about the next libstdc++ prompted some brief but\n    interesting [70]speculation.\n      _________________________________________________________________\n \n 5.3 What about the STL from SGI?\n \n-   The [71]STL from SGI is merged into libstdc++-v3 with changes as\n-   necessary. Currently release 3.3 is being used as an initial codebase,\n-   plus changes, fixes, and extensions.\n+   The [71]STL from SGI, version 3.3, was the most recent merge of the\n+   STL codebase. The code in libstdc++ contains many fixes and changes,\n+   and it is very likely that the SGI code is no longer under active\n+   development. We expect that no future merges will take place.\n \n    In particular, string is not from SGI and makes no use of their \"rope\"\n    class (which is included as an optional extension), nor is valarray\n@@ -517,7 +529,7 @@ http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n \n    Comments and suggestions are welcome, and may be sent to [78]the\n    mailing list.\n-   $Id: index.html,v 1.8 2001/05/10 18:42:11 pme Exp $ \n+   $Id: index.html,v 1.9 2001/05/30 21:55:04 pme Exp $ \n \n References\n \n@@ -571,7 +583,7 @@ References\n   48. http://www.boost.org/\n   49. http://gcc.gnu.org/fom_serv/cache/33.html\n   50. mailto:libstdc++@gcc.gnu.org\n-  51. mailto:pme@sources.redhat.com\n+  51. mailto:pme@gcc.gnu.org\n   52. mailto:gdr@gcc.gnu.org\n   53. ../documentation.html\n   54. ../17_intro/RELEASE-NOTES"}]}