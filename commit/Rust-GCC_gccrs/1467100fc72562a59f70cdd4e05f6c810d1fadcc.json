{"sha": "1467100fc72562a59f70cdd4e05f6c810d1fadcc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ2NzEwMGZjNzI1NjJhNTlmNzBjZGQ0ZTA1ZjZjODEwZDFmYWRjYw==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-05-19T09:58:49Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-05-19T12:23:29Z"}, "message": "Add 'libgomp.oacc-c-c++-common/private-atomic-1.c' [PR83812]\n\n... to at least document/test/XFAIL nvptx offloading: PR83812 \"operation not\nsupported on global/shared address space\".\n\n\tlibgomp/\n\tPR target/83812\n\t* testsuite/libgomp.oacc-c-c++-common/private-atomic-1.c: New.", "tree": {"sha": "7facc2c0c2f7034e4c1afcc149e2386fb67d909a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7facc2c0c2f7034e4c1afcc149e2386fb67d909a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1467100fc72562a59f70cdd4e05f6c810d1fadcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1467100fc72562a59f70cdd4e05f6c810d1fadcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1467100fc72562a59f70cdd4e05f6c810d1fadcc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1467100fc72562a59f70cdd4e05f6c810d1fadcc/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a16fb19e7c4274f8dd9bbdd30d7d06fe2eff8af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a16fb19e7c4274f8dd9bbdd30d7d06fe2eff8af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a16fb19e7c4274f8dd9bbdd30d7d06fe2eff8af"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "77197d8fd443f4c2149099681e26d11b34f981eb", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/private-atomic-1.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1467100fc72562a59f70cdd4e05f6c810d1fadcc/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fprivate-atomic-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1467100fc72562a59f70cdd4e05f6c810d1fadcc/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fprivate-atomic-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fprivate-atomic-1.c?ref=1467100fc72562a59f70cdd4e05f6c810d1fadcc", "patch": "@@ -0,0 +1,37 @@\n+// 'atomic' access of thread-private variable\n+\n+#include <assert.h>\n+\n+int main (void)\n+{\n+  int res;\n+\n+  res = 0;\n+#pragma acc parallel reduction(+: res)\n+  {\n+#pragma acc loop vector reduction(+: res)\n+    for (int i = 0; i < 2322; i++)\n+    {\n+      int v = -222;\n+\n+#pragma acc loop seq\n+      for (int j = 0; j < 121; ++j)\n+\t{\n+#pragma acc atomic update\n+\t  ++v;\n+\t  /* nvptx offloading: PR83812 \"operation not supported on global/shared address space\".\n+\t     { dg-output \"(\\n|\\r\\n|\\r)libgomp: cuStreamSynchronize error: operation not supported on global/shared address space(\\n|\\r\\n|\\r)$\" { target openacc_nvidia_accel_selected } }\n+\t       Scan for what we expect in the \"XFAILed\" case (without actually XFAILing).\n+\t     { dg-shouldfail \"XFAILed\" { openacc_nvidia_accel_selected } }\n+\t       ... instead of 'dg-xfail-run-if' so that 'dg-output' is evaluated at all.\n+\t     { dg-final { if { [dg-process-target { xfail openacc_nvidia_accel_selected }] == \"F\" } { xfail \"[testname-for-summary] really is XFAILed\" } } }\n+\t       ... so that we still get an XFAIL visible in the log.  */\n+\t}\n+\n+      res += (v == -222 + 121);\n+    }\n+  }\n+  assert (res == 2322);\n+\n+  return 0;\n+}"}]}