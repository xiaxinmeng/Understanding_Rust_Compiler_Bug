{"sha": "8735903781aabdb48683d24d783eba6c76fd8c99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODczNTkwMzc4MWFhYmRiNDg2ODNkMjRkNzgzZWJhNmM3NmZkOGM5OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-02-26T21:27:33Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-02-26T21:27:33Z"}, "message": "re PR c++/89507 (bogus \"size of array exceeds maximum object size\")\n\n\tPR c++/89507\n\t* tree.c (valid_constant_size_p): Deal with size INTEGER_CSTs\n\twith types other than sizetype/ssizetype.\n\n\t* g++.dg/other/new2.C: New test.\n\nFrom-SVN: r269233", "tree": {"sha": "7bdb2c7cc9100224603610317f3e4551bef40e1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bdb2c7cc9100224603610317f3e4551bef40e1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8735903781aabdb48683d24d783eba6c76fd8c99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8735903781aabdb48683d24d783eba6c76fd8c99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8735903781aabdb48683d24d783eba6c76fd8c99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8735903781aabdb48683d24d783eba6c76fd8c99/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1405bf4c9c5324639ca4b0a6529b5e4a43eb31db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1405bf4c9c5324639ca4b0a6529b5e4a43eb31db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1405bf4c9c5324639ca4b0a6529b5e4a43eb31db"}], "stats": {"total": 31, "additions": 21, "deletions": 10}, "files": [{"sha": "41afdd13724f29c1fcd9b479682e6b475f8a901b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8735903781aabdb48683d24d783eba6c76fd8c99/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8735903781aabdb48683d24d783eba6c76fd8c99/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8735903781aabdb48683d24d783eba6c76fd8c99", "patch": "@@ -1,3 +1,9 @@\n+2019-02-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/89507\n+\t* tree.c (valid_constant_size_p): Deal with size INTEGER_CSTs\n+\twith types other than sizetype/ssizetype.\n+\n 2019-02-26  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/sparc/sparc-opts.h (enum processor_type): Rename to..."}, {"sha": "14a8f541e814117c0d822ef086ce5dca6bcfeeef", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8735903781aabdb48683d24d783eba6c76fd8c99/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8735903781aabdb48683d24d783eba6c76fd8c99/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8735903781aabdb48683d24d783eba6c76fd8c99", "patch": "@@ -1,5 +1,8 @@\n 2019-02-26  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/89507\n+\t* g++.dg/other/new2.C: New test.\n+\n \tPR tree-optimization/89500\n \t* gcc.dg/pr89500.c: New test.\n \t* gcc.dg/Wstringop-overflow-10.c: New test."}, {"sha": "b086b9c4389392c4a1b316eb4473319f91cccb00", "filename": "gcc/testsuite/g++.dg/other/new2.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8735903781aabdb48683d24d783eba6c76fd8c99/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fnew2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8735903781aabdb48683d24d783eba6c76fd8c99/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fnew2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fnew2.C?ref=8735903781aabdb48683d24d783eba6c76fd8c99", "patch": "@@ -0,0 +1,5 @@\n+// PR c++/89507\n+// { dg-do compile }\n+\n+unsigned char const n = 128;\n+int *p = new int[n];\t// { dg-bogus \"array exceeds maximum object size\" }"}, {"sha": "0c70bb9cdd51083d2e6374d41c7b1e6511df58ad", "filename": "gcc/tree.c", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8735903781aabdb48683d24d783eba6c76fd8c99/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8735903781aabdb48683d24d783eba6c76fd8c99/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=8735903781aabdb48683d24d783eba6c76fd8c99", "patch": "@@ -7533,19 +7533,16 @@ valid_constant_size_p (const_tree size, cst_size_error *perr /* = NULL */)\n       return false;\n     }\n \n-  tree type = TREE_TYPE (size);\n-  if (TYPE_UNSIGNED (type))\n+  if (tree_int_cst_sgn (size) < 0)\n     {\n-      if (!tree_fits_uhwi_p (size)\n-\t  || tree_int_cst_sign_bit (size))\n-\t{\n-\t  *perr = cst_size_too_big;\n-\t  return false;\n-\t}\n+      *perr = cst_size_negative;\n+      return false;\n     }\n-  else if (tree_int_cst_sign_bit (size))\n+  if (!tree_fits_uhwi_p (size)\n+      || (wi::to_widest (TYPE_MAX_VALUE (sizetype))\n+\t  < wi::to_widest (size) * 2))\n     {\n-      *perr = cst_size_negative;\n+      *perr = cst_size_too_big;\n       return false;\n     }\n "}]}