{"sha": "8deb7514502cebe4e025bd278a511fd930dc28e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRlYjc1MTQ1MDJjZWJlNGUwMjViZDI3OGE1MTFmZDkzMGRjMjhlMA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-12-12T05:58:12Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-12-12T05:58:12Z"}, "message": "combine.c (simplify_and_const_int): Simplify (AND (PLUS X Y) C) if C has only low bits set and doesn't intersect...\n\n        * combine.c (simplify_and_const_int): Simplify (AND (PLUS X Y) C)\n        if C has only low bits set and doesn't intersect with X or Y.\n\nFrom-SVN: r47921", "tree": {"sha": "ae84d54ddf94c6dcc08f43e650d604d6b76df2fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae84d54ddf94c6dcc08f43e650d604d6b76df2fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8deb7514502cebe4e025bd278a511fd930dc28e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8deb7514502cebe4e025bd278a511fd930dc28e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8deb7514502cebe4e025bd278a511fd930dc28e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8deb7514502cebe4e025bd278a511fd930dc28e0/comments", "author": null, "committer": null, "parents": [{"sha": "3dba42519e2aba3e1e48a75c29dd5d2554e1789f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dba42519e2aba3e1e48a75c29dd5d2554e1789f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dba42519e2aba3e1e48a75c29dd5d2554e1789f"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "2cdcef5ce2d1a3b876f57a2be5f1759a228a4c36", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8deb7514502cebe4e025bd278a511fd930dc28e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8deb7514502cebe4e025bd278a511fd930dc28e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8deb7514502cebe4e025bd278a511fd930dc28e0", "patch": "@@ -1,3 +1,8 @@\n+2001-12-11  Richard Henderson  <rth@redhat.com>\n+\n+\t* combine.c (simplify_and_const_int): Simplify (AND (PLUS X Y) C)\n+\tif C has only low bits set and doesn't intersect with X or Y.\n+\n Tue Dec 11 23:58:39 EST 2001  John Wehle  (john@feith.com)\n \n \t* basic-block.h (flow_preorder_transversal_compute): Declare."}, {"sha": "eb61c49ecfaa93c25fce51bae6ff8ea814f9a99f", "filename": "gcc/combine.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8deb7514502cebe4e025bd278a511fd930dc28e0/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8deb7514502cebe4e025bd278a511fd930dc28e0/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=8deb7514502cebe4e025bd278a511fd930dc28e0", "patch": "@@ -7791,6 +7791,23 @@ simplify_and_const_int (x, mode, varop, constop)\n \t\t      simplify_and_const_int (NULL_RTX, GET_MODE (varop),\n \t\t\t\t\t      XEXP (varop, 1), constop))));\n \n+  /* If VAROP is PLUS, and the constant is a mask of low bite, distribute\n+     the AND and see if one of the operands simplifies to zero.  If so, we\n+     may eliminate it.  */\n+\n+  if (GET_CODE (varop) == PLUS\n+      && exact_log2 (constop + 1) >= 0)\n+    {\n+      rtx o0, o1;\n+\n+      o0 = simplify_and_const_int (NULL_RTX, mode, XEXP (varop, 0), constop);\n+      o1 = simplify_and_const_int (NULL_RTX, mode, XEXP (varop, 1), constop);\n+      if (o0 == const0_rtx)\n+\treturn o1;\n+      if (o1 == const0_rtx)\n+\treturn o0;\n+    }\n+\n   /* Get VAROP in MODE.  Try to get a SUBREG if not.  Don't make a new SUBREG\n      if we already had one (just check for the simplest cases).  */\n   if (x && GET_CODE (XEXP (x, 0)) == SUBREG"}]}