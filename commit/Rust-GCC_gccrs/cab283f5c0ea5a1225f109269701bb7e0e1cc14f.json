{"sha": "cab283f5c0ea5a1225f109269701bb7e0e1cc14f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FiMjgzZjVjMGVhNWExMjI1ZjEwOTI2OTcwMWJiN2UwZTFjYzE0Zg==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2015-01-15T18:28:02Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2015-01-15T18:28:02Z"}, "message": "re PR fortran/58023 ([F03] ICE on invalid with bad PPC declaration)\n\n2015-01-15  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/58023\n\t* resolve.c (resolve_fl_derived0): Continue resolving next component\n\tafter error.\n\n2015-01-15  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/58023\n\t* gfortran.dg/proc_ptr_comp_43.f90: New.\n\nFrom-SVN: r219676", "tree": {"sha": "fff0713d4952a748630db8c819ecc5721aa09f60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fff0713d4952a748630db8c819ecc5721aa09f60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cab283f5c0ea5a1225f109269701bb7e0e1cc14f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cab283f5c0ea5a1225f109269701bb7e0e1cc14f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cab283f5c0ea5a1225f109269701bb7e0e1cc14f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cab283f5c0ea5a1225f109269701bb7e0e1cc14f/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1357c6e1675c5fd1729128d1873fc4ef375747b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1357c6e1675c5fd1729128d1873fc4ef375747b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1357c6e1675c5fd1729128d1873fc4ef375747b8"}], "stats": {"total": 95, "additions": 81, "deletions": 14}, "files": [{"sha": "df4a2f368400a53987af5a8b4eef91089484571c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cab283f5c0ea5a1225f109269701bb7e0e1cc14f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cab283f5c0ea5a1225f109269701bb7e0e1cc14f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=cab283f5c0ea5a1225f109269701bb7e0e1cc14f", "patch": "@@ -1,3 +1,9 @@\n+2015-01-15  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/58023\n+\t* resolve.c (resolve_fl_derived0): Continue resolving next component\n+\tafter error.\n+\n 2015-01-14  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/61933"}, {"sha": "52734e08bb9d85b2391c4a422f7ff53ee9202ce4", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 38, "deletions": 14, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cab283f5c0ea5a1225f109269701bb7e0e1cc14f/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cab283f5c0ea5a1225f109269701bb7e0e1cc14f/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=cab283f5c0ea5a1225f109269701bb7e0e1cc14f", "patch": "@@ -12377,6 +12377,8 @@ resolve_fl_derived0 (gfc_symbol *sym)\n   c = (sym->attr.is_class) ? sym->components->ts.u.derived->components\n \t\t\t   : sym->components;\n \n+  bool success = true;\n+\n   for ( ; c != NULL; c = c->next)\n     {\n       if (c->attr.artificial)\n@@ -12389,7 +12391,8 @@ resolve_fl_derived0 (gfc_symbol *sym)\n \t{\n \t  gfc_error (\"Coarray component %qs at %L must be allocatable with \"\n \t\t     \"deferred shape\", c->name, &c->loc);\n-\t  return false;\n+\t  success = false;\n+\t  continue;\n \t}\n \n       /* F2008, C443.  */\n@@ -12398,7 +12401,8 @@ resolve_fl_derived0 (gfc_symbol *sym)\n \t{\n \t  gfc_error (\"Component %qs at %L of TYPE(C_PTR) or TYPE(C_FUNPTR) \"\n \t\t     \"shall not be a coarray\", c->name, &c->loc);\n-\t  return false;\n+\t  success = false;\n+\t  continue;\n \t}\n \n       /* F2008, C444.  */\n@@ -12409,15 +12413,17 @@ resolve_fl_derived0 (gfc_symbol *sym)\n \t  gfc_error (\"Component %qs at %L with coarray component \"\n \t\t     \"shall be a nonpointer, nonallocatable scalar\",\n \t\t     c->name, &c->loc);\n-\t  return false;\n+\t  success = false;\n+\t  continue;\n \t}\n \n       /* F2008, C448.  */\n       if (c->attr.contiguous && (!c->attr.dimension || !c->attr.pointer))\n \t{\n \t  gfc_error (\"Component %qs at %L has the CONTIGUOUS attribute but \"\n \t\t     \"is not an array pointer\", c->name, &c->loc);\n-\t  return false;\n+\t  success = false;\n+\t  continue;\n \t}\n \n       if (c->attr.proc_pointer && c->ts.interface)\n@@ -12427,7 +12433,8 @@ resolve_fl_derived0 (gfc_symbol *sym)\n \t  if (!sym->attr.vtype && !check_proc_interface (ifc, &c->loc))\n \t    {\n \t      c->tb->error = 1;\n-\t      return false;\n+\t      success = false;\n+\t      continue;\n \t    }\n \n \t  if (ifc->attr.if_source || ifc->attr.intrinsic)\n@@ -12471,7 +12478,11 @@ resolve_fl_derived0 (gfc_symbol *sym)\n \t\t  gfc_charlen *cl = gfc_new_charlen (sym->ns, ifc->ts.u.cl);\n \t\t  if (cl->length && !cl->resolved\n \t\t      && !gfc_resolve_expr (cl->length))\n-\t\t    return false;\n+\t\t    {\n+\t\t      c->tb->error = 1;\n+\t\t      success = false;\n+\t\t      continue;\n+\t\t    }\n \t\t  c->ts.u.cl = cl;\n \t\t}\n \t    }\n@@ -12514,7 +12525,8 @@ resolve_fl_derived0 (gfc_symbol *sym)\n \t\t\t     \"at %L has no argument %qs\", c->name,\n \t\t\t     c->tb->pass_arg, &c->loc, c->tb->pass_arg);\n \t\t  c->tb->error = 1;\n-\t\t  return false;\n+\t\t  success = false;\n+\t\t  continue;\n \t\t}\n \t    }\n \t  else\n@@ -12528,7 +12540,8 @@ resolve_fl_derived0 (gfc_symbol *sym)\n \t\t\t     \"must have at least one argument\",\n \t\t\t     c->name, &c->loc);\n \t\t  c->tb->error = 1;\n-\t\t  return false;\n+\t\t  success = false;\n+\t\t  continue;\n \t\t}\n \t      me_arg = c->ts.interface->formal->sym;\n \t    }\n@@ -12544,7 +12557,8 @@ resolve_fl_derived0 (gfc_symbol *sym)\n \t\t\t \" the derived type %qs\", me_arg->name, c->name,\n \t\t\t me_arg->name, &c->loc, sym->name);\n \t      c->tb->error = 1;\n-\t      return false;\n+\t      success = false;\n+\t      continue;\n \t    }\n \n \t  /* Check for C453.  */\n@@ -12554,7 +12568,8 @@ resolve_fl_derived0 (gfc_symbol *sym)\n \t\t\t \"must be scalar\", me_arg->name, c->name, me_arg->name,\n \t\t\t &c->loc);\n \t      c->tb->error = 1;\n-\t      return false;\n+\t      success = false;\n+\t      continue;\n \t    }\n \n \t  if (me_arg->attr.pointer)\n@@ -12563,7 +12578,8 @@ resolve_fl_derived0 (gfc_symbol *sym)\n \t\t\t \"may not have the POINTER attribute\", me_arg->name,\n \t\t\t c->name, me_arg->name, &c->loc);\n \t      c->tb->error = 1;\n-\t      return false;\n+\t      success = false;\n+\t      continue;\n \t    }\n \n \t  if (me_arg->attr.allocatable)\n@@ -12572,12 +12588,17 @@ resolve_fl_derived0 (gfc_symbol *sym)\n \t\t\t \"may not be ALLOCATABLE\", me_arg->name, c->name,\n \t\t\t me_arg->name, &c->loc);\n \t      c->tb->error = 1;\n-\t      return false;\n+\t      success = false;\n+\t      continue;\n \t    }\n \n \t  if (gfc_type_is_extensible (sym) && me_arg->ts.type != BT_CLASS)\n-\t    gfc_error (\"Non-polymorphic passed-object dummy argument of %qs\"\n-\t\t       \" at %L\", c->name, &c->loc);\n+\t    {\n+\t      gfc_error (\"Non-polymorphic passed-object dummy argument of %qs\"\n+\t\t\t \" at %L\", c->name, &c->loc);\n+\t      success = false;\n+\t      continue;\n+\t    }\n \n \t}\n \n@@ -12746,6 +12767,9 @@ resolve_fl_derived0 (gfc_symbol *sym)\n \treturn false;\n     }\n \n+  if (!success)\n+    return false;\n+\n   check_defined_assignments (sym);\n \n   if (!sym->attr.defined_assign_comp && super_type)"}, {"sha": "d5751651b88ee96f9af4ee4d0ed5d9c26e597e0a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cab283f5c0ea5a1225f109269701bb7e0e1cc14f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cab283f5c0ea5a1225f109269701bb7e0e1cc14f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cab283f5c0ea5a1225f109269701bb7e0e1cc14f", "patch": "@@ -1,3 +1,8 @@\n+2015-01-15  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/58023\n+\t* gfortran.dg/proc_ptr_comp_43.f90: New.\n+\n 2015-01-15  Mike Stump  <mikestump@comcast.net>\n \n \t* gcc.dg/unroll_1.c: Rename gcc.dg/unroll_[1-5].c to unroll-[2-6]."}, {"sha": "239fe99f71c1497357071a1439c7cf56727509fc", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_comp_43.f90", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cab283f5c0ea5a1225f109269701bb7e0e1cc14f/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_43.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cab283f5c0ea5a1225f109269701bb7e0e1cc14f/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_43.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_43.f90?ref=cab283f5c0ea5a1225f109269701bb7e0e1cc14f", "patch": "@@ -0,0 +1,32 @@\n+! { dg-do compile }\n+!\n+! PR 58023: [F03] ICE on invalid with bad PPC declaration\n+!\n+! Contributed by Andrew Benson <abensonca@gmail.com>\n+\n+module m\n+  implicit none\n+\n+  abstract interface\n+     double precision function mr()\n+     end function mr\n+  end interface\n+\n+  type :: sfd\n+     procedure(mr), pointer :: mr1  ! { dg-error \"must have at least one argument\" }\n+     procedure(mr), pointer :: mr2  ! { dg-error \"must have at least one argument\" }\n+  end type sfd\n+\n+contains\n+\n+  subroutine go()\n+    implicit none\n+    type(sfd):: d\n+\n+    write (0,*) d%mr2()\n+    return\n+  end subroutine go\n+\n+end module m\n+\n+! { dg-final { cleanup-modules \"m\" } }"}]}