{"sha": "b48a653174158c79c24c1e347859e924a5c9a4ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ4YTY1MzE3NDE1OGM3OWMyNGMxZTM0Nzg1OWU5MjRhNWM5YTRhYw==", "commit": {"author": {"name": "Samuel Tardieu", "email": "sam@gcc.gnu.org", "date": "2008-04-15T19:05:29Z"}, "committer": {"name": "Samuel Tardieu", "email": "sam@gcc.gnu.org", "date": "2008-04-15T19:05:29Z"}, "message": "[multiple changes]\n\n2008-04-15  Ed Schonberg  <schonberg@adacore.com>\n\n    gcc/ada/\n\tPR ada/22387\n\t* exp_ch5.adb (Expand_Assign_Record): Within an initialization\n\tprocedure for a derived type retrieve the discriminant values from\n\tthe parent using the corresponding discriminant.\n\n2008-04-15  Samuel Tardieu  <sam@rfc1149.net>\n\n    gcc/testsuite/\n\tPR ada/22387\n\t* gnat.dg/specs/corr_discr.ads: New.\n\nFrom-SVN: r134326", "tree": {"sha": "b0574834c10dbab8128e37cc9354080be70ea76e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0574834c10dbab8128e37cc9354080be70ea76e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b48a653174158c79c24c1e347859e924a5c9a4ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b48a653174158c79c24c1e347859e924a5c9a4ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b48a653174158c79c24c1e347859e924a5c9a4ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b48a653174158c79c24c1e347859e924a5c9a4ac/comments", "author": null, "committer": null, "parents": [{"sha": "bd1f29d927823c063ef88658743c274034fa801a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd1f29d927823c063ef88658743c274034fa801a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd1f29d927823c063ef88658743c274034fa801a"}], "stats": {"total": 54, "additions": 48, "deletions": 6}, "files": [{"sha": "950d1ddaaddfdd1cd62d0a09d9e99f30b58b15f1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b48a653174158c79c24c1e347859e924a5c9a4ac/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b48a653174158c79c24c1e347859e924a5c9a4ac/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b48a653174158c79c24c1e347859e924a5c9a4ac", "patch": "@@ -1,3 +1,10 @@\n+2008-04-15  Ed Schonberg  <schonberg@adacore.com>\n+\n+\tPR ada/22387\n+\t* exp_ch5.adb (Expand_Assign_Record): Within an initialization\n+\tprocedure for a derived type retrieve the discriminant values from\n+\tthe parent using the corresponding discriminant.\n+\n 2008-04-15  Samuel Tardieu  <sam@rfc1149.net>\n             Gary Dismukes  <dismukes@adacore.com>\n "}, {"sha": "0018a673522cbb4279373437bfb5702d1e26f88c", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b48a653174158c79c24c1e347859e924a5c9a4ac/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b48a653174158c79c24c1e347859e924a5c9a4ac/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=b48a653174158c79c24c1e347859e924a5c9a4ac", "patch": "@@ -1345,13 +1345,30 @@ package body Exp_Ch5 is\n             F := First_Discriminant (R_Typ);\n             while Present (F) loop\n \n-               if Is_Unchecked_Union (Base_Type (R_Typ)) then\n-                  Insert_Action (N, Make_Field_Assign (F, True));\n-               else\n-                  Insert_Action (N, Make_Field_Assign (F));\n-               end if;\n+               --  If we are expanding the initialization of a derived record\n+               --  that constrains or renames discriminants of the parent, we\n+               --  must use the corresponding discriminant in the parent.\n+\n+               declare\n+                  CF : Entity_Id;\n \n-               Next_Discriminant (F);\n+               begin\n+                  if Inside_Init_Proc\n+                    and then Present (Corresponding_Discriminant (F))\n+                  then\n+                     CF := Corresponding_Discriminant (F);\n+                  else\n+                     CF := F;\n+                  end if;\n+\n+                  if Is_Unchecked_Union (Base_Type (R_Typ)) then\n+                     Insert_Action (N, Make_Field_Assign (CF, True));\n+                  else\n+                     Insert_Action (N, Make_Field_Assign (CF));\n+                  end if;\n+\n+                  Next_Discriminant (F);\n+               end;\n             end loop;\n          end if;\n "}, {"sha": "b0493497c95f651a7f82a046e3b15d808434e037", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b48a653174158c79c24c1e347859e924a5c9a4ac/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b48a653174158c79c24c1e347859e924a5c9a4ac/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b48a653174158c79c24c1e347859e924a5c9a4ac", "patch": "@@ -1,3 +1,8 @@\n+2008-04-15  Samuel Tardieu  <sam@rfc1149.net>\n+\n+\tPR ada/22387\n+\t* gnat.dg/specs/corr_discr.ads: New.\n+\n 2008-04-15  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/string_slice2.adb: New test."}, {"sha": "70ea860565f8ed64be96d82254358588f3c05abf", "filename": "gcc/testsuite/gnat.dg/specs/corr_discr.ads", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b48a653174158c79c24c1e347859e924a5c9a4ac/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fcorr_discr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b48a653174158c79c24c1e347859e924a5c9a4ac/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fcorr_discr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fcorr_discr.ads?ref=b48a653174158c79c24c1e347859e924a5c9a4ac", "patch": "@@ -0,0 +1,13 @@\n+package Corr_Discr is\n+\n+   type Base (T1 : Boolean := True; T2 : Boolean := False)\n+     is null record;\n+   for Base use record\n+      T1 at 0 range 0 .. 0;\n+      T2 at 0 range 1 .. 1;\n+   end record;\n+\n+   type Deriv (D : Boolean := False) is new Base (T1 => True, T2 => D);\n+\n+end Corr_Discr;\n+"}]}