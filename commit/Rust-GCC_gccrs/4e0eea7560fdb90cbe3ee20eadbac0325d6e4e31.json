{"sha": "4e0eea7560fdb90cbe3ee20eadbac0325d6e4e31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUwZWVhNzU2MGZkYjkwY2JlM2VlMjBlYWRiYWMwMzI1ZDZlNGUzMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-04-12T09:08:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-04-12T09:08:43Z"}, "message": "re PR tree-optimization/70602 (wrong code at -O1 and above on x86_64-linux-gnu in 32-bit mode (and at -Os only in 64-bit mode))\n\n\tPR tree-optimization/70602\n\t* tree-sra.c (generate_subtree_copies): Don't write anything into\n\tconstant pool decls.\n\n\t* gcc.c-torture/execute/pr70602.c: New test.\n\nFrom-SVN: r234895", "tree": {"sha": "f33bf21edaeecb4d83030d5faf1e9251b1c88548", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f33bf21edaeecb4d83030d5faf1e9251b1c88548"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e0eea7560fdb90cbe3ee20eadbac0325d6e4e31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e0eea7560fdb90cbe3ee20eadbac0325d6e4e31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e0eea7560fdb90cbe3ee20eadbac0325d6e4e31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e0eea7560fdb90cbe3ee20eadbac0325d6e4e31/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "21f3a2369bb56501115221846f63f54a035233bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21f3a2369bb56501115221846f63f54a035233bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21f3a2369bb56501115221846f63f54a035233bc"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "62c837239b699a4f4431b15c0cd9491682a35d3b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0eea7560fdb90cbe3ee20eadbac0325d6e4e31/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0eea7560fdb90cbe3ee20eadbac0325d6e4e31/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e0eea7560fdb90cbe3ee20eadbac0325d6e4e31", "patch": "@@ -1,5 +1,9 @@\n 2016-04-12  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/70602\n+\t* tree-sra.c (generate_subtree_copies): Don't write anything into\n+\tconstant pool decls.\n+\n \t* omp-low.c (lower_omp_target): Use GOMP_MAP_FIRSTPRIVATE_INT\n \tregardless whether there are depend clauses or not.\n "}, {"sha": "7aaee6ed008669d4c1459f2ca92a848c1dca5cb7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0eea7560fdb90cbe3ee20eadbac0325d6e4e31/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0eea7560fdb90cbe3ee20eadbac0325d6e4e31/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4e0eea7560fdb90cbe3ee20eadbac0325d6e4e31", "patch": "@@ -1,3 +1,8 @@\n+2016-04-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/70602\n+\t* gcc.c-torture/execute/pr70602.c: New test.\n+\n 2016-04-11  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/70381"}, {"sha": "c6628b037b2e8acc278f5dad9d6fcf92cf53c0f8", "filename": "gcc/testsuite/gcc.c-torture/execute/pr70602.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0eea7560fdb90cbe3ee20eadbac0325d6e4e31/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr70602.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0eea7560fdb90cbe3ee20eadbac0325d6e4e31/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr70602.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr70602.c?ref=4e0eea7560fdb90cbe3ee20eadbac0325d6e4e31", "patch": "@@ -0,0 +1,23 @@\n+/* PR tree-optimization/70602 */\n+\n+struct __attribute__((packed)) S\n+{\n+  int s : 1;\n+  int t : 20;\n+};\n+\n+int a, b, c;\n+\n+int\n+main ()\n+{\n+  for (; a < 1; a++)\n+    {\n+      struct S e[] = { {0, 9}, {0, 9}, {0, 9}, {0, 0}, {0, 9}, {0, 9}, {0, 9}, \n+\t\t       {0, 0}, {0, 9}, {0, 9}, {0, 9}, {0, 0}, {0, 9}, {0, 9}, \n+\t\t       {0, 9}, {0, 0}, {0, 9}, {0, 9}, {0, 9}, {0, 0}, {0, 9} };\n+      b = b || e[0].s;\n+      c = e[0].t;\n+    }\n+  return 0;\n+}"}, {"sha": "1d2b1c5ad050f7013e83c3220274c8bbe42ba077", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0eea7560fdb90cbe3ee20eadbac0325d6e4e31/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0eea7560fdb90cbe3ee20eadbac0325d6e4e31/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=4e0eea7560fdb90cbe3ee20eadbac0325d6e4e31", "patch": "@@ -2743,6 +2743,9 @@ generate_subtree_copies (struct access *access, tree agg,\n \t\t\t gimple_stmt_iterator *gsi, bool write,\n \t\t\t bool insert_after, location_t loc)\n {\n+  /* Never write anything into constant pool decls.  See PR70602.  */\n+  if (!write && constant_decl_p (agg))\n+    return;\n   do\n     {\n       if (chunk_size && access->offset >= start_offset + chunk_size)"}]}