{"sha": "13a6a8d23faa0bec6e9a98a852eb68a15c60ec18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNhNmE4ZDIzZmFhMGJlYzZlOWE5OGE4NTJlYjY4YTE1YzYwZWMxOA==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2012-10-29T14:42:05Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2012-10-29T14:42:05Z"}, "message": "re PR rtl-optimization/55106 (ice: Maximum number of LRA constraint passes is achieved (15))\n\n2012-10-29  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/55106\n\t* g++.dg/pr55106.C: New.\n\nFrom-SVN: r192944", "tree": {"sha": "9337c845d6f7f2f260b17071bdbb243cff46a7a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9337c845d6f7f2f260b17071bdbb243cff46a7a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13a6a8d23faa0bec6e9a98a852eb68a15c60ec18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13a6a8d23faa0bec6e9a98a852eb68a15c60ec18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13a6a8d23faa0bec6e9a98a852eb68a15c60ec18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13a6a8d23faa0bec6e9a98a852eb68a15c60ec18/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9dcbb3806d28c26b27137f6d3b8538a011b8960e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dcbb3806d28c26b27137f6d3b8538a011b8960e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dcbb3806d28c26b27137f6d3b8538a011b8960e"}], "stats": {"total": 72, "additions": 72, "deletions": 0}, "files": [{"sha": "36d2297cd13a099ca83d739b1e9e3f1300f1132e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13a6a8d23faa0bec6e9a98a852eb68a15c60ec18/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13a6a8d23faa0bec6e9a98a852eb68a15c60ec18/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=13a6a8d23faa0bec6e9a98a852eb68a15c60ec18", "patch": "@@ -1,3 +1,8 @@\n+2012-10-29  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/55106\n+\t* g++.dg/pr55106.C: New.\n+\n 2012-10-29  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/53695"}, {"sha": "4727822f0dd6a99e83817c9eadbc8d7f4796b4d4", "filename": "gcc/testsuite/g++.dg/pr55106.C", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13a6a8d23faa0bec6e9a98a852eb68a15c60ec18/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr55106.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13a6a8d23faa0bec6e9a98a852eb68a15c60ec18/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr55106.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr55106.C?ref=13a6a8d23faa0bec6e9a98a852eb68a15c60ec18", "patch": "@@ -0,0 +1,67 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-c -O3\" } */\n+template<typename _Tp> struct A {\n+  typedef _Tp *pointer;\n+  typedef _Tp& reference;\n+  typedef _Tp& const_reference;\n+  template<typename>struct rebind\n+  {\n+    typedef A other;\n+  };\n+};\n+\n+template<typename _Alloc>struct __alloc_traits\n+{\n+  typedef typename _Alloc::pointer         pointer;\n+  typedef typename _Alloc::reference       reference;\n+  typedef typename _Alloc::const_reference const_reference;\n+  template<typename _Tp>struct rebind\n+  {\n+    typedef typename _Alloc::template rebind<_Tp>::other other;\n+  };\n+};\n+template<typename _Tp, typename _Alloc>struct B\n+{\n+  typedef typename __alloc_traits<_Alloc>::template rebind<\n+      _Tp>::other _Tp_alloc_type;\n+  typedef typename __alloc_traits<_Tp_alloc_type>::pointer pointer;\n+  struct F\n+  {\n+    pointer _M_start;\n+  };\n+  F _M_impl;\n+};\n+template<typename _Tp, typename _Alloc = A<_Tp> >class vec : B<_Tp, _Alloc>{\n+  typedef B<_Tp, _Alloc>                 _Base;\n+  typedef typename _Base::_Tp_alloc_type _Tp_alloc_type;\n+  typedef __alloc_traits<_Tp_alloc_type> _Alloc_traits;\n+\n+public:\n+  typedef _Tp                                     value_type;\n+  typedef typename _Alloc_traits::reference       reference;\n+  typedef typename _Alloc_traits::const_reference const_reference;\n+  reference operator[](int p1)\n+  {\n+    return *(this->_M_impl._M_start + p1);\n+  }\n+\n+  const_reference operator[](long) const;\n+};\n+\n+int a[17];\n+class C {\n+  vec<int> m_value;\n+  void opModDivGuts(const C&);\n+  int mostSetBitP1() const;\n+};\n+void C::opModDivGuts(const C& p1)\n+{\n+  int b = p1.mostSetBitP1(), c = b + 1;\n+  int d[16];\n+\n+  for (int i = c; i; i--)\n+    a[i] = p1.m_value[i] << b;\n+\n+  for (int i = 0; i < c; i++)\n+    m_value[i] = d[i] >> b << -b;\n+}"}]}