{"sha": "ad84548336ad9a08b451ddd7ea64f07aee0576a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ4NDU0ODMzNmFkOWEwOGI0NTFkZGQ3ZWE2NGYwN2FlZTA1NzZhNg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-02-06T16:34:21Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-02-06T16:34:21Z"}, "message": "Emit \"#\" instead of calling gcc_unreachable for invalid insns.\n\nImplement standard approach by emitting \"#\" for insns that have to be split.\n\n\t* config/i386/i386.md (*pushtf): Emit \"#\" instead of\n\tcalling gcc_unreachable in insn output.\n\t(*pushxf): Ditto.\n\t(*pushdf): Ditto.\n\t(*pushsf_rex64): Ditto for alternatives other than 1.\n\t(*pushsf): Ditto for alternatives other than 1.", "tree": {"sha": "5d07505fc5a01129734fed26f925c04c0f39c341", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d07505fc5a01129734fed26f925c04c0f39c341"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad84548336ad9a08b451ddd7ea64f07aee0576a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad84548336ad9a08b451ddd7ea64f07aee0576a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad84548336ad9a08b451ddd7ea64f07aee0576a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad84548336ad9a08b451ddd7ea64f07aee0576a6/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c940105cc17111be98d8d42ba48a413b0e63aebe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c940105cc17111be98d8d42ba48a413b0e63aebe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c940105cc17111be98d8d42ba48a413b0e63aebe"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "c842c4fc02ffe0bc84c1701637d439e8d1e0c251", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad84548336ad9a08b451ddd7ea64f07aee0576a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad84548336ad9a08b451ddd7ea64f07aee0576a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ad84548336ad9a08b451ddd7ea64f07aee0576a6", "patch": "@@ -1,3 +1,12 @@\n+2020-02-06  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (*pushtf): Emit \"#\" instead of\n+\tcalling gcc_unreachable in insn output.\n+\t(*pushxf): Ditto.\n+\t(*pushdf): Ditto.\n+\t(*pushsf_rex64): Ditto for alternatives other than 1.\n+\t(*pushsf): Ditto for alternatives other than 1.\n+\n 2020-02-06  Martin Liska  <mliska@suse.cz>\n \n \tPR gcov-profile/91971"}, {"sha": "34649c010b8b756bdeebab3d236ba1b04c104f0c", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad84548336ad9a08b451ddd7ea64f07aee0576a6/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad84548336ad9a08b451ddd7ea64f07aee0576a6/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=ad84548336ad9a08b451ddd7ea64f07aee0576a6", "patch": "@@ -3032,7 +3032,7 @@\n   \"TARGET_64BIT || TARGET_SSE\"\n {\n   /* This insn should be already split before reg-stack.  */\n-  gcc_unreachable ();\n+  return (\"#\");\n }\n   [(set_attr \"isa\" \"*,x64\")\n    (set_attr \"type\" \"multi\")\n@@ -3087,7 +3087,7 @@\n   \"\"\n {\n   /* This insn should be already split before reg-stack.  */\n-  gcc_unreachable ();\n+  return (\"#\");\n }\n   [(set_attr \"isa\" \"*,*,*,nox64,x64\")\n    (set_attr \"type\" \"multi\")\n@@ -3123,7 +3123,7 @@\n   \"\"\n {\n   /* This insn should be already split before reg-stack.  */\n-  gcc_unreachable ();\n+  return (\"#\");\n }\n   [(set_attr \"isa\" \"*,nox64,nox64,nox64,x64,sse2\")\n    (set_attr \"type\" \"multi\")\n@@ -3156,7 +3156,8 @@\n   \"TARGET_64BIT\"\n {\n   /* Anything else should be already split before reg-stack.  */\n-  gcc_assert (which_alternative == 1);\n+  if (which_alternative != 1)\n+    return (\"#\");\n   return \"push{q}\\t%q1\";\n }\n   [(set_attr \"type\" \"multi,push,multi\")\n@@ -3169,7 +3170,8 @@\n   \"!TARGET_64BIT\"\n {\n   /* Anything else should be already split before reg-stack.  */\n-  gcc_assert (which_alternative == 1);\n+  if (which_alternative != 1)\n+    return (\"#\");\n   return \"push{l}\\t%1\";\n }\n   [(set_attr \"type\" \"multi,push,multi\")"}]}