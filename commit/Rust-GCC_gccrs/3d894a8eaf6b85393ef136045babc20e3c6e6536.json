{"sha": "3d894a8eaf6b85393ef136045babc20e3c6e6536", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q4OTRhOGVhZjZiODUzOTNlZjEzNjA0NWJhYmMyMGUzYzZlNjUzNg==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-07-15T15:57:23Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-07-15T15:57:23Z"}, "message": "* tree.h (TREE_RTL_OPERAND_CHECK): Delete.\n\nFrom-SVN: r162224", "tree": {"sha": "0047fbda83e375a099892a2957c347af798eeb17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0047fbda83e375a099892a2957c347af798eeb17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d894a8eaf6b85393ef136045babc20e3c6e6536", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d894a8eaf6b85393ef136045babc20e3c6e6536", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d894a8eaf6b85393ef136045babc20e3c6e6536", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d894a8eaf6b85393ef136045babc20e3c6e6536/comments", "author": null, "committer": null, "parents": [{"sha": "910ad8dee56faaae9c25a6d026a39574937f6329", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/910ad8dee56faaae9c25a6d026a39574937f6329", "html_url": "https://github.com/Rust-GCC/gccrs/commit/910ad8dee56faaae9c25a6d026a39574937f6329"}], "stats": {"total": 16, "additions": 4, "deletions": 12}, "files": [{"sha": "f9fbfd85e360ec319107e4c3a815a447e84745d3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d894a8eaf6b85393ef136045babc20e3c6e6536/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d894a8eaf6b85393ef136045babc20e3c6e6536/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d894a8eaf6b85393ef136045babc20e3c6e6536", "patch": "@@ -1,3 +1,7 @@\n+2010-07-15  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* tree.h (TREE_RTL_OPERAND_CHECK): Delete.\n+\n 2010-07-15  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* tree.h (DECL_CHAIN): Define."}, {"sha": "326950c5c6d1af84a3057e5e3a97f6f14aab3802", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d894a8eaf6b85393ef136045babc20e3c6e6536/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d894a8eaf6b85393ef136045babc20e3c6e6536/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=3d894a8eaf6b85393ef136045babc20e3c6e6536", "patch": "@@ -838,17 +838,6 @@ enum tree_node_structure_enum {\n \t\t\t\t __FILE__, __LINE__, __FUNCTION__);\t\\\n     &__t->exp.operands[__i]; }))\n \n-#define TREE_RTL_OPERAND_CHECK(T, CODE, I) __extension__\t\t\\\n-(*(rtx *)\t\t\t\t\t\t\t\t\\\n- ({__typeof (T) const __t = (T);\t\t\t\t\t\\\n-    const int __i = (I);\t\t\t\t\t\t\\\n-    if (TREE_CODE (__t) != (CODE))\t\t\t\t\t\\\n-      tree_check_failed (__t, __FILE__, __LINE__, __FUNCTION__, (CODE), 0); \\\n-    if (__i < 0 || __i >= TREE_OPERAND_LENGTH (__t))\t\t\t\\\n-      tree_operand_check_failed (__i, __t,\t\t\t\t\\\n-\t\t\t\t __FILE__, __LINE__, __FUNCTION__);\t\\\n-    &__t->exp.operands[__i]; }))\n-\n /* Nodes are chained together for many purposes.\n    Types are chained together to record them for being output to the debugger\n    (see the function `chain_type').\n@@ -930,7 +919,6 @@ extern void omp_clause_range_check_failed (const_tree, const char *, int,\n #define TREE_VEC_ELT_CHECK(T, I)\t\t((T)->vec.a[I])\n #define TREE_OPERAND_CHECK(T, I)\t\t((T)->exp.operands[I])\n #define TREE_OPERAND_CHECK_CODE(T, CODE, I)\t((T)->exp.operands[I])\n-#define TREE_RTL_OPERAND_CHECK(T, CODE, I)  (*(rtx *) &((T)->exp.operands[I]))\n #define OMP_CLAUSE_ELT_CHECK(T, i)\t        ((T)->omp_clause.ops[i])\n #define OMP_CLAUSE_RANGE_CHECK(T, CODE1, CODE2)\t(T)\n #define OMP_CLAUSE_SUBCODE_CHECK(T, CODE)\t(T)"}]}