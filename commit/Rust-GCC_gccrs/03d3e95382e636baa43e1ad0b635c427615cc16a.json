{"sha": "03d3e95382e636baa43e1ad0b635c427615cc16a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNkM2U5NTM4MmU2MzZiYWE0M2UxYWQwYjYzNWM0Mjc2MTVjYzE2YQ==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@il.ibm.com", "date": "2007-02-06T08:41:01Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2007-02-06T08:41:01Z"}, "message": "tree-vect-patterns.c (vect_recog_widen_mult_pattern): Check that vectype is not NULL.\n\n\t* tree-vect-patterns.c (vect_recog_widen_mult_pattern): Check that \n\tvectype is not NULL.\n\t(vect_pattern_recog_1): Likewise.\n\nFrom-SVN: r121640", "tree": {"sha": "11b8037cf34db717be3b5b79cd94c172813054ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11b8037cf34db717be3b5b79cd94c172813054ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03d3e95382e636baa43e1ad0b635c427615cc16a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03d3e95382e636baa43e1ad0b635c427615cc16a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03d3e95382e636baa43e1ad0b635c427615cc16a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03d3e95382e636baa43e1ad0b635c427615cc16a/comments", "author": {"login": "irar2", "id": 16818592, "node_id": "MDQ6VXNlcjE2ODE4NTky", "avatar_url": "https://avatars.githubusercontent.com/u/16818592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irar2", "html_url": "https://github.com/irar2", "followers_url": "https://api.github.com/users/irar2/followers", "following_url": "https://api.github.com/users/irar2/following{/other_user}", "gists_url": "https://api.github.com/users/irar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/irar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irar2/subscriptions", "organizations_url": "https://api.github.com/users/irar2/orgs", "repos_url": "https://api.github.com/users/irar2/repos", "events_url": "https://api.github.com/users/irar2/events{/privacy}", "received_events_url": "https://api.github.com/users/irar2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8fbbe90b2614078f799f65c9e3608f1eec8a48ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fbbe90b2614078f799f65c9e3608f1eec8a48ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fbbe90b2614078f799f65c9e3608f1eec8a48ab"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "9207c8ebe5eadc083f060a511bc81c259bc8c85b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03d3e95382e636baa43e1ad0b635c427615cc16a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03d3e95382e636baa43e1ad0b635c427615cc16a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=03d3e95382e636baa43e1ad0b635c427615cc16a", "patch": "@@ -1,3 +1,9 @@\n+2007-02-06  Ira Rosen  <irar@il.ibm.com>\n+\n+\t* tree-vect-patterns.c (vect_recog_widen_mult_pattern): Check that \n+\tvectype is not NULL.\n+\t(vect_pattern_recog_1): Likewise.\n+\n 2007-02-05  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* fold-const.c (negate_expr_p): Handle CONJ_EXPR."}, {"sha": "3f676a85871274119e70378e7cf7de148a0828d7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03d3e95382e636baa43e1ad0b635c427615cc16a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03d3e95382e636baa43e1ad0b635c427615cc16a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=03d3e95382e636baa43e1ad0b635c427615cc16a", "patch": "@@ -1,3 +1,7 @@\n+2007-02-06  Ira Rosen  <irar@il.ibm.com> \n+\n+\t* gcc.dg/vect/fast-math-vect-pow-2.c: New test.\n+\n 2007-02-05  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* gcc.dg/builtins-20.c: Add more cases."}, {"sha": "a9d927b3f6036c8257be3a5b5677c947f4c6d53b", "filename": "gcc/testsuite/gcc.dg/vect/fast-math-vect-pow-2.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03d3e95382e636baa43e1ad0b635c427615cc16a/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-vect-pow-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03d3e95382e636baa43e1ad0b635c427615cc16a/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-vect-pow-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-vect-pow-2.c?ref=03d3e95382e636baa43e1ad0b635c427615cc16a", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do compile } */\n+\n+typedef double d_type;\n+struct\n+{\n+  d_type x;\n+  d_type y;\n+} S[100];\n+\n+#define N 16\n+d_type foo (d_type t);\n+\n+d_type\n+main1 ()\n+{\n+  int i;\n+  d_type t;\n+\n+  for (i = 0; i < N; i++)\n+    {\n+      t = (d_type) i / (d_type) 10;\n+      S[5].x = t * t;\n+    }\n+  return S[5].x;\n+}\n+\n+int\n+main (void)\n+{\n+  d_type tmp = main1 ();\n+}\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */\n+"}, {"sha": "9fac417d0d0ff3a616b2f0a1752d833db427a4dd", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03d3e95382e636baa43e1ad0b635c427615cc16a/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03d3e95382e636baa43e1ad0b635c427615cc16a/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=03d3e95382e636baa43e1ad0b635c427615cc16a", "patch": "@@ -386,7 +386,8 @@ vect_recog_widen_mult_pattern (tree last_stmt,\n \n   /* Check target support  */\n   vectype = get_vectype_for_scalar_type (half_type0);\n-  if (!supportable_widening_operation (WIDEN_MULT_EXPR, last_stmt, vectype,\n+  if (!vectype\n+      || !supportable_widening_operation (WIDEN_MULT_EXPR, last_stmt, vectype,\n                                        &dummy, &dummy, &dummy_code,\n                                        &dummy_code))\n     return NULL;\n@@ -647,6 +648,9 @@ vect_pattern_recog_1 (\n \n       /* Check target support  */\n       pattern_vectype = get_vectype_for_scalar_type (type_in);\n+      if (!pattern_vectype)\n+        return;\n+\n       optab = optab_for_tree_code (TREE_CODE (pattern_expr), pattern_vectype);\n       vec_mode = TYPE_MODE (pattern_vectype);\n       if (!optab"}]}