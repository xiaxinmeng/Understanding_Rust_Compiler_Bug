{"sha": "60dcf0e05338baa02e0857cfca2742072994817a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBkY2YwZTA1MzM4YmFhMDJlMDg1N2NmY2EyNzQyMDcyOTk0ODE3YQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2014-11-18T12:24:34Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-11-18T12:24:34Z"}, "message": "re PR c++/55443 (ICE for some placement new expressions inside noexcept operator)\n\n2014-11-18  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/55443\n\t* g++.dg/cpp0x/noexcept26.C: New.\n\t* g++.dg/cpp0x/noexcept27.C: Likewise.\n\nFrom-SVN: r217711", "tree": {"sha": "e1e006c02493fc77ca78495c9b1b010e6dce9ffc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1e006c02493fc77ca78495c9b1b010e6dce9ffc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60dcf0e05338baa02e0857cfca2742072994817a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60dcf0e05338baa02e0857cfca2742072994817a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60dcf0e05338baa02e0857cfca2742072994817a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60dcf0e05338baa02e0857cfca2742072994817a/comments", "author": null, "committer": null, "parents": [{"sha": "3a4d1cb198375b66b6aa9f2b5c1659326d0d215d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a4d1cb198375b66b6aa9f2b5c1659326d0d215d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a4d1cb198375b66b6aa9f2b5c1659326d0d215d"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "c4f26efba9cd9d3af0bbdba815c364e9b8ebfcd3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60dcf0e05338baa02e0857cfca2742072994817a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60dcf0e05338baa02e0857cfca2742072994817a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=60dcf0e05338baa02e0857cfca2742072994817a", "patch": "@@ -1,3 +1,9 @@\n+2014-11-18  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/55443\n+\t* g++.dg/cpp0x/noexcept26.C: New.\n+\t* g++.dg/cpp0x/noexcept27.C: Likewise.\n+\n 2014-11-18  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/60245"}, {"sha": "7c8b4137b62fe130d068411ab5449381b57cdfc5", "filename": "gcc/testsuite/g++.dg/cpp0x/noexcept26.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60dcf0e05338baa02e0857cfca2742072994817a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept26.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60dcf0e05338baa02e0857cfca2742072994817a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept26.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept26.C?ref=60dcf0e05338baa02e0857cfca2742072994817a", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/55443\n+// { dg-do compile { target c++11 } }\n+\n+struct X\n+{\n+  constexpr X() { }\n+\n+  void* operator new(__SIZE_TYPE__, void*) noexcept;\n+};\n+\n+int main() { noexcept(new(0) X); }"}, {"sha": "c44902d862aa74151632d11003f0d9225bdcc165", "filename": "gcc/testsuite/g++.dg/cpp0x/noexcept27.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60dcf0e05338baa02e0857cfca2742072994817a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept27.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60dcf0e05338baa02e0857cfca2742072994817a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept27.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept27.C?ref=60dcf0e05338baa02e0857cfca2742072994817a", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/55443\n+// { dg-do compile { target c++11 } }\n+\n+struct X\n+{\n+  X() = default;\n+\n+  X(int);\n+\n+  void* operator new(__SIZE_TYPE__, void*) noexcept;\n+};\n+\n+X x;\n+\n+bool b = noexcept(new(0) X);"}]}