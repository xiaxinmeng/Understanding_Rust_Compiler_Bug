{"sha": "8268bba6f884dfcbcda28ab0f1500551d75399e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI2OGJiYTZmODg0ZGZjYmNkYTI4YWIwZjE1MDA1NTFkNzUzOTllNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-03-19T19:31:38Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-03-19T19:31:38Z"}, "message": "re PR libstdc++/12077 ([3.4 only] wcin.rdbuf()->in_avail() return value too high)\n\n2004-03-19  Paolo Carlini  <pcarlini@suse.de>\n\t    Petur Runolfsson  <peturr02@ru.is>\n\n\tPR libstdc++/12077\n\t* include/ext/stdio_sync_filebuf.h (showmanyc): Remove, there's\n\tno way to find out the conversion used by the underlying FILE*.\n\t* testsuite/ext/stdio_sync_filebuf/wchar_t/12077.cc: New.\n\t* testsuite/27_io/objects/char/9.cc: Tweak.\n\nCo-Authored-By: Petur Runolfsson <peturr02@ru.is>\n\nFrom-SVN: r79695", "tree": {"sha": "a90ad99706f5c95504a4981c4047803de06537be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a90ad99706f5c95504a4981c4047803de06537be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8268bba6f884dfcbcda28ab0f1500551d75399e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8268bba6f884dfcbcda28ab0f1500551d75399e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8268bba6f884dfcbcda28ab0f1500551d75399e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8268bba6f884dfcbcda28ab0f1500551d75399e7/comments", "author": null, "committer": null, "parents": [{"sha": "33d13fac08a9400ab517ad8ef4e7e323210bf5f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33d13fac08a9400ab517ad8ef4e7e323210bf5f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33d13fac08a9400ab517ad8ef4e7e323210bf5f2"}], "stats": {"total": 124, "additions": 92, "deletions": 32}, "files": [{"sha": "e648e0a0f9254f30392ccc9589f13beabdf81f60", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8268bba6f884dfcbcda28ab0f1500551d75399e7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8268bba6f884dfcbcda28ab0f1500551d75399e7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8268bba6f884dfcbcda28ab0f1500551d75399e7", "patch": "@@ -1,3 +1,12 @@\n+2004-03-19  Paolo Carlini  <pcarlini@suse.de>\n+\t    Petur Runolfsson  <peturr02@ru.is>\n+\n+\tPR libstdc++/12077\n+\t* include/ext/stdio_sync_filebuf.h (showmanyc): Remove, there's\n+\tno way to find out the conversion used by the underlying FILE*.\n+\t* testsuite/ext/stdio_sync_filebuf/wchar_t/12077.cc: New.\n+\t* testsuite/27_io/objects/char/9.cc: Tweak.\n+\n 2004-03-19  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/14648"}, {"sha": "cdf1e7c3665c0dd0f6b8c18209751772cc91df8d", "filename": "libstdc++-v3/include/ext/stdio_sync_filebuf.h", "status": "modified", "additions": 1, "deletions": 25, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8268bba6f884dfcbcda28ab0f1500551d75399e7/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstdio_sync_filebuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8268bba6f884dfcbcda28ab0f1500551d75399e7/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstdio_sync_filebuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstdio_sync_filebuf.h?ref=8268bba6f884dfcbcda28ab0f1500551d75399e7", "patch": "@@ -1,6 +1,6 @@\n // Iostreams wrapper for stdio FILE* -*- C++ -*-\n \n-// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -38,16 +38,6 @@\n \n #include <streambuf>\n #include <unistd.h>\n-\n-#if defined(_GLIBCXX_HAVE_S_ISREG) || defined(_GLIBCXX_HAVE_S_IFREG)\n-# include <sys/stat.h>\n-# ifdef _GLIBCXX_HAVE_S_ISREG\n-#  define _GLIBCXX_ISREG(x) S_ISREG(x)\n-# else\n-#  define _GLIBCXX_ISREG(x) (((x) & S_IFMT) == S_IFREG)\n-# endif\n-#endif\n-\n #include <cstdio>\n \n #ifdef _GLIBCXX_USE_WCHAR_T\n@@ -82,7 +72,6 @@ namespace __gnu_cxx\n       { }\n \n     protected:\n-\n       int_type\n       syncgetc();\n \n@@ -132,19 +121,6 @@ namespace __gnu_cxx\n       virtual std::streamsize\n       xsgetn(char_type* __s, std::streamsize __n);\n \n-      virtual std::streamsize\n-      showmanyc()\n-      {\n-#if defined(_GLIBCXX_HAVE_S_ISREG) || defined(_GLIBCXX_HAVE_S_IFREG)\n-\t// Regular files.\n-\tstruct stat __buffer;\n-\tint __ret = fstat(fileno(_M_file), &__buffer);\n-\tif (!__ret && _GLIBCXX_ISREG(__buffer.st_mode))\n-\t  return __buffer.st_size - ftell(_M_file);\n-#endif\n-\treturn 0;\n-      }\n-\n       virtual int_type\n       overflow(int_type __c = traits_type::eof())\n       {"}, {"sha": "ae62173d805268d1220c9a57d807b6e249855476", "filename": "libstdc++-v3/testsuite/27_io/objects/char/9.cc", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8268bba6f884dfcbcda28ab0f1500551d75399e7/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F9.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8268bba6f884dfcbcda28ab0f1500551d75399e7/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F9.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F9.cc?ref=8268bba6f884dfcbcda28ab0f1500551d75399e7", "patch": "@@ -1,6 +1,6 @@\n // 2003-05-01  Petur Runolfsson  <peturr02@ru.is>\n \n-// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -18,10 +18,6 @@\n // Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n // USA.\n  \n-// The ARM simulator does not provide support for \"fstat\", which\n-// causes \"in_avail\" to return an incorrect value.\n-// { dg-do run { xfail arm-none-elf } }\n-\n #include <iostream>\n #include <cstdio>\n #include <testsuite_hooks.h>\n@@ -39,8 +35,8 @@ void test09()\n \n   freopen(name, \"r\", stdin);\n  \n-  // The number of unread characters should be 4 (a, b, c, \\\\n)\n-  VERIFY( 4 == std::cin.rdbuf()->in_avail() );\n+  // basic_streambuf::showmanyc returns 0.\n+  VERIFY( 0 == std::cin.rdbuf()->in_avail() );\n }\n \n int "}, {"sha": "9ba9eb5043eefcadbb8d1219b03a29d3fa6c873d", "filename": "libstdc++-v3/testsuite/ext/stdio_sync_filebuf/wchar_t/12077.cc", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8268bba6f884dfcbcda28ab0f1500551d75399e7/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fstdio_sync_filebuf%2Fwchar_t%2F12077.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8268bba6f884dfcbcda28ab0f1500551d75399e7/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fstdio_sync_filebuf%2Fwchar_t%2F12077.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fstdio_sync_filebuf%2Fwchar_t%2F12077.cc?ref=8268bba6f884dfcbcda28ab0f1500551d75399e7", "patch": "@@ -0,0 +1,79 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+#include <iostream>\n+#include <locale>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/12077\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  const char* name = \"12077_tmp\";\n+\n+  locale loc = __gnu_test::try_named_locale(\"is_IS.UTF-8\");\n+  locale::global(loc);\n+  wcin.imbue(loc);\n+\n+  const char* str =\n+    \"\\x1\\x2\\x3\\x4\\x5\\x6\\x7\\x8\\x9\\xa\\xb\\xc\\xd\\xe\\xf\\x10\\x11\\x12\\x13\"\n+    \"\\x14\\x15\\x16\\x17\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\\x1f\\x20!\\\"#$%&\"\n+    \"'()*+,-./0123456789:;<=>?@}~\\x7f\\xc2\\x80\\xc2\\x81\\xc2\\x82\\xc2\"\n+    \"\\x83\\xc2\\x84\\xc2\\x85\\xc2\\x86\\xc2\\x87\\xc2\\x88\\xc2\\x89\\xc2\\x8a\"\n+    \"\\xc2\\x8b\\xc2\\x8c\\xc2\\x8d\\xc2\\x8e\\xc2\\x8f\\xc2\\x90\\xc2\\x91\\xc2\"\n+    \"\\x92\\xc2\\x93\\xc2\\x94\\xc2\\x95\\xc2\\x96\\xc2\\x97\\xc2\\x98\\xc2\\x99\"\n+    \"\\xc2\\x9a\\xc2\\x9b\\xc2\\x9c\\xc3\\xba\\xc3\\xbb\\xc3\\xbc\\xc3\\xbd\\xc3\"\n+    \"\\xbe\\xc3\\xbf\\xc4\\x80\\xc4\\x81\\xc4\\x82\\xc4\\x83\\xc4\\x84\\xc4\\x85\"\n+    \"\\xc4\\x86\\xc4\\x87\\xc4\\x88\\xc4\\x89\\xc4\\x8a\\xc4\\x8b\\xc4\\x8c\\xc4\"\n+    \"\\x8d\\xc4\\x8e\\xc4\\x8f\\xc4\\x90\\xc4\\x91\\xc4\\x92\\xc4\\x93\\xc4\\x94\"\n+    \"\\xc4\\x95\\xc4\\x96\\xc4\\x97\\xc4\\x98\\xc4\\x99\\xdf\\xb8\\xdf\\xb9\\xdf\"\n+    \"\\xba\\xdf\\xbb\\xdf\\xbc\\xdf\\xbd\\xdf\\xbe\\xdf\\xbf\\xe0\\xa0\\x80\\xe0\"\n+    \"\\xa0\\x81\\xe0\\xa0\\x82\\xe0\\xa0\\x83\\xe0\\xa0\\x84\\xe0\\xa0\\x85\\xe0\"\n+    \"\\xa0\\x86\\xe0\\xa0\\x87\\xe0\\xa0\\x88\\xe0\\xa0\\x89\\xe0\\xa0\\x8a\\xe0\"\n+    \"\\xa0\\x8b\\xe0\\xa0\\x8c\\xe0\\xa0\\x8d\\xe0\\xa0\\x8e\\xe0\\xa0\\x8f\\xe0\"\n+    \"\\xa0\\x90\\xe0\\xa0\\x91\\xe0\\xa0\\x92\\xe0\\xa0\\x93\\xe0\\xa0\\x94\\xe0\"\n+    \"\\xa0\\x95\\xe0\\xa0\\x96\\xe0\\xa0\\x97\\x1\\x2\\x4\\x8\\x10\\x20@\\xc2\\x80\"\n+    \"\\xc4\\x80\\xc8\\x80\\xd0\\x80\\xe0\\xa0\\x80\\xe1\\x80\\x80\\xe2\\x80\\x80\"\n+    \"\\xe4\\x80\\x80\\xe8\\x80\\x80\\xf0\\x90\\x80\\x80\\xf0\\xa0\\x80\\x80\\xf1\"\n+    \"\\x80\\x80\\x80\\xf2\\x80\\x80\\x80\\xf4\\x80\\x80\\x80\\xf8\\x88\\x80\\x80\"\n+    \"\\x80\\xf8\\x90\\x80\\x80\\x80\\xf8\\xa0\\x80\\x80\\x80\\xf9\\x80\\x80\\x80\"\n+    \"\\x80\\xfa\\x80\\x80\\x80\\x80\\xfc\\x84\\x80\\x80\\x80\\x80\\xfc\\x88\\x80\"\n+    \"\\x80\\x80\\x80\\xfc\\x90\\x80\\x80\\x80\\x80\\xfc\\xa0\\x80\\x80\\x80\\x80\"\n+    \"\\xfd\\x80\\x80\\x80\\x80\\x80\";\n+\n+  FILE* file = fopen(name, \"w\");\n+  fputs(str, file);\n+  fclose(file);\n+  \n+  freopen(name, \"r\", stdin);\n+  \n+  streamsize n = wcin.rdbuf()->in_avail();\n+  while (n--)\n+    {\n+      wint_t c = wcin.rdbuf()->sbumpc();\n+      VERIFY( c != WEOF );\n+    }\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}