{"sha": "515a17919798a2c9597b2cf02660b9b07afd3fc4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE1YTE3OTE5Nzk4YTJjOTU5N2IyY2YwMjY2MGI5YjA3YWZkM2ZjNA==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@au.ibm.com", "date": "2004-11-22T22:15:13Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2004-11-22T22:15:13Z"}, "message": "pointer-set.h (pointer_set_contains): Remove.\n\n\t* pointer-set.h (pointer_set_contains): Remove.\n\t* pointer-set.c (pointer_set_contains): Likewise.\n\nFrom-SVN: r91040", "tree": {"sha": "f1409609d5cd57eb07d03d92deaab509af5269d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1409609d5cd57eb07d03d92deaab509af5269d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/515a17919798a2c9597b2cf02660b9b07afd3fc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/515a17919798a2c9597b2cf02660b9b07afd3fc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/515a17919798a2c9597b2cf02660b9b07afd3fc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/515a17919798a2c9597b2cf02660b9b07afd3fc4/comments", "author": null, "committer": null, "parents": [{"sha": "d0d2cc210581dbbf99f0ec13c1148c1d35352a11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0d2cc210581dbbf99f0ec13c1148c1d35352a11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0d2cc210581dbbf99f0ec13c1148c1d35352a11"}], "stats": {"total": 31, "additions": 5, "deletions": 26}, "files": [{"sha": "00c3d5a04058f75f55bb91aae468407f0bf6842a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/515a17919798a2c9597b2cf02660b9b07afd3fc4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/515a17919798a2c9597b2cf02660b9b07afd3fc4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=515a17919798a2c9597b2cf02660b9b07afd3fc4", "patch": "@@ -1,3 +1,8 @@\n+2004-11-23  Ben Elliston  <bje@au.ibm.com>\n+\n+\t* pointer-set.h (pointer_set_contains): Remove.\n+\t* pointer-set.c (pointer_set_contains): Likewise.\n+\n 2004-11-22  Dale Johannesen  <dalej@apple.com>\n \n \t* calls.c (expand_call): Do not call preserve_temp_slots."}, {"sha": "3f79cc2bfa746b8c575ca45a3fa60c0fdc743db6", "filename": "gcc/pointer-set.c", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/515a17919798a2c9597b2cf02660b9b07afd3fc4/gcc%2Fpointer-set.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/515a17919798a2c9597b2cf02660b9b07afd3fc4/gcc%2Fpointer-set.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpointer-set.c?ref=515a17919798a2c9597b2cf02660b9b07afd3fc4", "patch": "@@ -90,31 +90,6 @@ void pointer_set_destroy (struct pointer_set_t *pset)\n   XDELETE (pset);\n }\n \n-/* Returns nonzero if PSET contains P.  P must be nonnull.\n-\n-   Collisions are resolved by linear probing.  More complicated\n-   collision management schemes are only useful when the load factor\n-   significantly exceeds 0.5, and we never let that happen.  */\n-int\n-pointer_set_contains (struct pointer_set_t *pset, void *p)\n-{\n-  size_t n = hash1 (p, pset->n_slots, pset->log_slots);\n-\n-  while (true)\n-    {\n-      if (pset->slots[n] == p)\n-\treturn 1;\n-      else if (pset->slots[n] == 0)\n-\treturn 0;\n-      else\n-\t{\n-\t  ++n;\n-\t  if (n == pset->n_slots)\n-\t    n = 0;\n-\t}\n-    }\n-}\n-\n /* Subroutine of pointer_set_insert.  Inserts P into an empty\n    element of SLOTS, an array of length N_SLOTS.  Returns nonzero\n    if P was already present in N_SLOTS.  */"}, {"sha": "3c2be390daf50c8f31b3d46e9ed07f3df18abd84", "filename": "gcc/pointer-set.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/515a17919798a2c9597b2cf02660b9b07afd3fc4/gcc%2Fpointer-set.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/515a17919798a2c9597b2cf02660b9b07afd3fc4/gcc%2Fpointer-set.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpointer-set.h?ref=515a17919798a2c9597b2cf02660b9b07afd3fc4", "patch": "@@ -26,7 +26,6 @@ struct pointer_set_t;\n struct pointer_set_t *pointer_set_create (void);\n void pointer_set_destroy (struct pointer_set_t *pset);\n \n-int pointer_set_contains (struct pointer_set_t *pset, void *p);\n int pointer_set_insert (struct pointer_set_t *pset, void *p);\n \n #endif  /* POINTER_SET_H  */"}]}