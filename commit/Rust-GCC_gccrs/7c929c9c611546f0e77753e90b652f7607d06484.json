{"sha": "7c929c9c611546f0e77753e90b652f7607d06484", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M5MjljOWM2MTE1NDZmMGU3Nzc1M2U5MGI2NTJmNzYwN2QwNjQ4NA==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2019-10-18T12:04:31Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2019-10-18T12:04:31Z"}, "message": "Fortran] PR91586 Fix ICE on invalid code with CLASS\n\n        gcc/fortran/\n        PR fortran/91586\n        * class.c (gfc_find_derived_vtab): Return NULL\n        instead of deref'ing NULL pointer.\n\n        gcc/testsuite/\n        PR fortran/91586\n        * gfortran.dg/class_71.f90: New.\n\nFrom-SVN: r277153", "tree": {"sha": "73440c6f9b18b5954ec7509eb9d56a31bdba1eed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73440c6f9b18b5954ec7509eb9d56a31bdba1eed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c929c9c611546f0e77753e90b652f7607d06484", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c929c9c611546f0e77753e90b652f7607d06484", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c929c9c611546f0e77753e90b652f7607d06484", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c929c9c611546f0e77753e90b652f7607d06484/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "15abd9320d4492f58783ac31b9fa651cec7747f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15abd9320d4492f58783ac31b9fa651cec7747f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15abd9320d4492f58783ac31b9fa651cec7747f3"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "8a1beeafa01bb9d6d3916551c53f32ae5ed81fba", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c929c9c611546f0e77753e90b652f7607d06484/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c929c9c611546f0e77753e90b652f7607d06484/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7c929c9c611546f0e77753e90b652f7607d06484", "patch": "@@ -1,3 +1,9 @@\n+2019-10-18  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/91586\n+\t* class.c (gfc_find_derived_vtab): Return NULL\n+\tinstead of deref'ing NULL pointer.\n+\n 2019-10-15  James Norris  <jnorris@codesourcery.com>\n \t    Tobias Burnus  <tobias@codesourcery.com>\n "}, {"sha": "9117121e5feb8a7060810a35e18ad96b68b4f518", "filename": "gcc/fortran/class.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c929c9c611546f0e77753e90b652f7607d06484/gcc%2Ffortran%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c929c9c611546f0e77753e90b652f7607d06484/gcc%2Ffortran%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fclass.c?ref=7c929c9c611546f0e77753e90b652f7607d06484", "patch": "@@ -2241,6 +2241,9 @@ gfc_find_derived_vtab (gfc_symbol *derived)\n   if (!derived->attr.unlimited_polymorphic && derived->attr.is_class)\n     derived = gfc_get_derived_super_type (derived);\n \n+  if (!derived)\n+    return NULL;\n+\n   /* Find the gsymbol for the module of use associated derived types.  */\n   if ((derived->attr.use_assoc || derived->attr.used_in_submodule)\n        && !derived->attr.vtype && !derived->attr.is_class)"}, {"sha": "4e817eb13715dec813bb393d59852a5c68ca622d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c929c9c611546f0e77753e90b652f7607d06484/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c929c9c611546f0e77753e90b652f7607d06484/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7c929c9c611546f0e77753e90b652f7607d06484", "patch": "@@ -1,3 +1,8 @@\n+2019-10-18  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/91586\n+\t* gfortran.dg/class_71.f90: New.\n+\n 2019-10-18  Georg-Johann Lay  <avr@gjlay.de>\n \n \tFix some fallout for small targets."}, {"sha": "bc0ffcd2305b47272d2b437be52e9e80622d5078", "filename": "gcc/testsuite/gfortran.dg/class_71.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c929c9c611546f0e77753e90b652f7607d06484/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_71.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c929c9c611546f0e77753e90b652f7607d06484/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_71.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_71.f90?ref=7c929c9c611546f0e77753e90b652f7607d06484", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do compile }\n+!\n+! PR fortran/91586\n+!\n+! Contributed by G. Steinmetz\n+!\n+program p\n+   type t\n+      class(*), allocatable :: a\n+   end type\n+   class(t) :: x, y  ! { dg-error \"must be dummy, allocatable or pointer\" }\n+   y = x  ! { dg-error \"Nonallocatable variable must not be polymorphic in intrinsic assignment\" }\n+end"}]}