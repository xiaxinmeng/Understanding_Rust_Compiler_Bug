{"sha": "b12481cf8ca462dd49ff101f50bda02418f777d8", "node_id": "C_kwDOANBUbNoAKGIxMjQ4MWNmOGNhNDYyZGQ0OWZmMTAxZjUwYmRhMDI0MThmNzc3ZDg", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-05-02T14:53:17Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-05-11T07:38:21Z"}, "message": "converter: Remove redundant variable\n\nSince the introduction of this variable the code has changed and no\nvalue order preservation is required anymore, the comparison can be done\ninline.\n\ngcc/rust/ChangeLog:\n\n\t* util/rust-token-converter.cc (dispatch_float_literals): Remove\n\tsuffixed temporary variable.\n\t(dispatch_integer_literals): Likewise.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "8ca43b6cdc8496561979adafde0c298661f9c2b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ca43b6cdc8496561979adafde0c298661f9c2b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b12481cf8ca462dd49ff101f50bda02418f777d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b12481cf8ca462dd49ff101f50bda02418f777d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b12481cf8ca462dd49ff101f50bda02418f777d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b12481cf8ca462dd49ff101f50bda02418f777d8/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f6b7459551d535ac1d279964c0d30145cd75eb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f6b7459551d535ac1d279964c0d30145cd75eb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f6b7459551d535ac1d279964c0d30145cd75eb5"}], "stats": {"total": 37, "additions": 12, "deletions": 25}, "files": [{"sha": "b0d47de512f7b971c967924266e17c71cab15a38", "filename": "gcc/rust/util/rust-token-converter.cc", "status": "modified", "additions": 12, "deletions": 25, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b12481cf8ca462dd49ff101f50bda02418f777d8/gcc%2Frust%2Futil%2Frust-token-converter.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b12481cf8ca462dd49ff101f50bda02418f777d8/gcc%2Frust%2Futil%2Frust-token-converter.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-token-converter.cc?ref=b12481cf8ca462dd49ff101f50bda02418f777d8", "patch": "@@ -39,16 +39,14 @@ dispatch_float_literals (ProcMacro::TokenStream &ts, TokenPtr &token)\n     {\n       case CORETYPE_F32: {\n \tauto value = std::stof (str, &sz);\n-\tbool suffixed = sz == str.length ();\n \tts.push (ProcMacro::TokenTree::make_tokentree (\n-\t  ProcMacro::Literal::make_f32 (value, suffixed)));\n+\t  ProcMacro::Literal::make_f32 (value, sz == str.length ())));\n       }\n       break;\n       case CORETYPE_F64: {\n \tauto value = std::stod (str, &sz);\n-\tbool suffixed = sz == str.length ();\n \tts.push (ProcMacro::TokenTree::make_tokentree (\n-\t  ProcMacro::Literal::make_f64 (value, suffixed)));\n+\t  ProcMacro::Literal::make_f64 (value, sz == str.length ())));\n       }\n       break;\n     default:\n@@ -63,69 +61,58 @@ dispatch_integer_literals (ProcMacro::TokenStream &ts, TokenPtr &token)\n   auto str = token->as_string ();\n   unsigned long long uvalue;\n   long long svalue;\n-  bool suffixed = false;\n \n   switch (token->get_type_hint ())\n     {\n     case CORETYPE_U8:\n       uvalue = std::stoull (str, &sz);\n-      suffixed = sz == str.length ();\n       ts.push (ProcMacro::TokenTree::make_tokentree (\n-\tProcMacro::Literal::make_u8 (uvalue, suffixed)));\n+\tProcMacro::Literal::make_u8 (uvalue, sz == str.length ())));\n       break;\n     case CORETYPE_U16:\n       uvalue = std::stoull (str, &sz);\n-      suffixed = sz == str.length ();\n       ts.push (ProcMacro::TokenTree::make_tokentree (\n-\tProcMacro::Literal::make_u16 (uvalue, suffixed)));\n+\tProcMacro::Literal::make_u16 (uvalue, sz == str.length ())));\n       break;\n     case CORETYPE_U32:\n       uvalue = std::stoull (str, &sz);\n-      suffixed = sz == str.length ();\n       ts.push (ProcMacro::TokenTree::make_tokentree (\n-\tProcMacro::Literal::make_u32 (uvalue, suffixed)));\n+\tProcMacro::Literal::make_u32 (uvalue, sz == str.length ())));\n       break;\n     case CORETYPE_U64:\n       uvalue = std::stoull (str, &sz);\n-      suffixed = sz == str.length ();\n       ts.push (ProcMacro::TokenTree::make_tokentree (\n-\tProcMacro::Literal::make_u32 (uvalue, suffixed)));\n+\tProcMacro::Literal::make_u32 (uvalue, sz == str.length ())));\n       break;\n     case CORETYPE_I8:\n       svalue = std::stoll (str, &sz);\n-      suffixed = sz == str.length ();\n       ts.push (ProcMacro::TokenTree::make_tokentree (\n-\tProcMacro::Literal::make_i8 (svalue, suffixed)));\n+\tProcMacro::Literal::make_i8 (svalue, sz == str.length ())));\n       break;\n     case CORETYPE_I16:\n       svalue = std::stoll (str, &sz);\n-      suffixed = sz == str.length ();\n       ts.push (ProcMacro::TokenTree::make_tokentree (\n-\tProcMacro::Literal::make_i16 (svalue, suffixed)));\n+\tProcMacro::Literal::make_i16 (svalue, sz == str.length ())));\n       break;\n     case CORETYPE_I32:\n       svalue = std::stoll (str, &sz);\n-      suffixed = sz == str.length ();\n       ts.push (ProcMacro::TokenTree::make_tokentree (\n-\tProcMacro::Literal::make_i32 (svalue, suffixed)));\n+\tProcMacro::Literal::make_i32 (svalue, sz == str.length ())));\n       break;\n     case CORETYPE_I64:\n       svalue = std::stoll (str, &sz);\n-      suffixed = sz == str.length ();\n       ts.push (ProcMacro::TokenTree::make_tokentree (\n-\tProcMacro::Literal::make_i32 (svalue, suffixed)));\n+\tProcMacro::Literal::make_i32 (svalue, sz == str.length ())));\n       break;\n     case CORETYPE_INT:\n       svalue = std::stoll (str, &sz);\n-      suffixed = sz == str.length ();\n       ts.push (ProcMacro::TokenTree::make_tokentree (\n-\tProcMacro::Literal::make_isize (svalue, suffixed)));\n+\tProcMacro::Literal::make_isize (svalue, sz == str.length ())));\n       break;\n     case CORETYPE_UINT:\n       uvalue = std::stoull (str, &sz);\n-      suffixed = sz == str.length ();\n       ts.push (ProcMacro::TokenTree::make_tokentree (\n-\tProcMacro::Literal::make_usize (uvalue, suffixed)));\n+\tProcMacro::Literal::make_usize (uvalue, sz == str.length ())));\n       break;\n     case CORETYPE_UNKNOWN:\n     default:"}]}