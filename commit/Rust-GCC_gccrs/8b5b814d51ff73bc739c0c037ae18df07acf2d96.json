{"sha": "8b5b814d51ff73bc739c0c037ae18df07acf2d96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI1YjgxNGQ1MWZmNzNiYzczOWMwYzAzN2FlMThkZjA3YWNmMmQ5Ng==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2021-05-04T13:43:40Z"}, "committer": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2021-05-04T20:14:14Z"}, "message": "aix: encode function section\n\nAIX XCOFF symbols can be labels or qualnames (names with an appended\nmapping class).  CSECTs must be declared with a mapping class.\nWithin an assembler file, the symbol names with and without the mapping\nclass are unique.  An object file symbol table only presents the symbol\nname without the mapping class, but the section of the symbol depends on\nthe mapping class.\n\nThe AIX XCOFF assembly language does not support first class aliases.\nGCC implements symbol aliases by emitting additional labels for the function\nor object.  When GCC encodes sections for a DECL, it must distinguish\nbetween the primary definition and the aliases, which don't have a\nmapping class encoding.\n\n\t.globl foo[DS]\n\t.globl .foo\n\t.globl foo1\n\t.globl .foo1\n\t.csect foo[DS]\nfoo:\nfoo1:\n\t.long .foo, TOC[tc0] 0\n\t.csect .foo[PR]\n.foo:\n.foo1:\n\nThe CSECT foo[DS] and label foo are distinct.  foo1 is another label (alias)\nfor foo, and .foo1 is another label (alias) for .foo.  foo is the function\ndescriptor and .foo is the code.\n\nThis patch adds the [DS] mapping class to the encoding of FUNCTION_DECL\nbut ensures that mapping class is not added to function aliases.\n\nrs6000_output_mi_thunk is updated to emit the function name that matches\nthe behavior of GCC final.c for normal functions: get_fnname_from_decl based\non the RTL name, not the DECL name.\n\n\t* config/rs6000/rs6000-call.c (rs6000_output_mi_thunk): Use\n\tget_fnname_from_decl for name of thunk.\n\t* config/rs6000/rs6000.c (rs6000_declare_alias): Use assemble_name\n\tand ASM_OUTPUT_LABEL.\n\t(rs6000_xcoff_declare_function_name): Use assemble_name and\n\tASM_OUTPUT_LABEL.\n\t(rs6000_xcoff_declare_object_name): Use ASM_OUTPUT_LABEL.\n\t(rs6000_xcoff_encode_section_info): Don't add mapping class\n\tfor aliases.  Always add [DS] mapping class to primary\n\tFUNCTION_DECL.\n\t(rs6000_asm_weaken_decl): Don't explicitly add [DS].", "tree": {"sha": "b479ca546f65ad9be53fd8af897e6bb0cd1c7ce2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b479ca546f65ad9be53fd8af897e6bb0cd1c7ce2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b5b814d51ff73bc739c0c037ae18df07acf2d96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b5b814d51ff73bc739c0c037ae18df07acf2d96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b5b814d51ff73bc739c0c037ae18df07acf2d96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b5b814d51ff73bc739c0c037ae18df07acf2d96/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "158cdc7bd97d7ccca5bc8adaaf80fe51eacdc038", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/158cdc7bd97d7ccca5bc8adaaf80fe51eacdc038", "html_url": "https://github.com/Rust-GCC/gccrs/commit/158cdc7bd97d7ccca5bc8adaaf80fe51eacdc038"}], "stats": {"total": 43, "additions": 21, "deletions": 22}, "files": [{"sha": "c4332a6186299582f9ddd35d241a475c96886628", "filename": "gcc/config/rs6000/rs6000-call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b5b814d51ff73bc739c0c037ae18df07acf2d96/gcc%2Fconfig%2Frs6000%2Frs6000-call.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b5b814d51ff73bc739c0c037ae18df07acf2d96/gcc%2Fconfig%2Frs6000%2Frs6000-call.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-call.c?ref=8b5b814d51ff73bc739c0c037ae18df07acf2d96", "patch": "@@ -15077,7 +15077,7 @@ rs6000_output_mi_thunk (FILE *file, tree thunk_fndecl ATTRIBUTE_UNUSED,\n \t\t\tHOST_WIDE_INT delta, HOST_WIDE_INT vcall_offset,\n \t\t\ttree function)\n {\n-  const char *fnname = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (thunk_fndecl));\n+  const char *fnname = get_fnname_from_decl (thunk_fndecl);\n   rtx this_rtx, funexp;\n   rtx_insn *insn;\n "}, {"sha": "ee15af9efa434ef8c46557ab581798f8ea1484a9", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 20, "deletions": 21, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b5b814d51ff73bc739c0c037ae18df07acf2d96/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b5b814d51ff73bc739c0c037ae18df07acf2d96/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=8b5b814d51ff73bc739c0c037ae18df07acf2d96", "patch": "@@ -21468,7 +21468,7 @@ rs6000_declare_alias (struct symtab_node *n, void *d)\n \t      putc ('\\n', data->file);\n \t    }\n \t  fputs (\"\\t.globl \", data->file);\n-\t  RS6000_OUTPUT_BASENAME (data->file, buffer);\n+\t  assemble_name (data->file, buffer);\n \t  putc ('\\n', data->file);\n \t}\n #ifdef ASM_WEAKEN_DECL\n@@ -21491,13 +21491,12 @@ rs6000_declare_alias (struct symtab_node *n, void *d)\n \t  putc ('\\n', data->file);\n \t}\n       fputs (\"\\t.lglobl \", data->file);\n-      RS6000_OUTPUT_BASENAME (data->file, buffer);\n+      assemble_name (data->file, buffer);\n       putc ('\\n', data->file);\n     }\n   if (data->function_descriptor)\n-    fputs (\".\", data->file);\n-  RS6000_OUTPUT_BASENAME (data->file, buffer);\n-  fputs (\":\\n\", data->file);\n+    putc ('.', data->file);\n+  ASM_OUTPUT_LABEL (data->file, buffer);\n   return false;\n }\n \n@@ -21574,21 +21573,24 @@ rs6000_xcoff_declare_function_name (FILE *file, const char *name, tree decl)\n       RS6000_OUTPUT_BASENAME (file, buffer);\n       putc ('\\n', file);\n     }\n+\n   fputs (\"\\t.csect \", file);\n-  RS6000_OUTPUT_BASENAME (file, buffer);\n-  fputs (TARGET_32BIT ? \"[DS]\\n\" : \"[DS],3\\n\", file);\n-  RS6000_OUTPUT_BASENAME (file, buffer);\n-  fputs (\":\\n\", file);\n+  assemble_name (file, buffer);\n+  fputs (TARGET_32BIT ? \"\\n\" : \",3\\n\", file);\n+\n+  ASM_OUTPUT_LABEL (file, buffer);\n+\n   symtab_node::get (decl)->call_for_symbol_and_aliases (rs6000_declare_alias,\n \t\t\t\t\t\t\t&data, true);\n   fputs (TARGET_32BIT ? \"\\t.long .\" : \"\\t.llong .\", file);\n   RS6000_OUTPUT_BASENAME (file, buffer);\n   fputs (\", TOC[tc0], 0\\n\", file);\n+\n   in_section = NULL;\n   switch_to_section (function_section (decl));\n   putc ('.', file);\n-  RS6000_OUTPUT_BASENAME (file, buffer);\n-  fputs (\":\\n\", file);\n+  ASM_OUTPUT_LABEL (file, buffer);\n+\n   data.function_descriptor = true;\n   symtab_node::get (decl)->call_for_symbol_and_aliases (rs6000_declare_alias,\n \t\t\t\t\t\t\t&data, true);\n@@ -21683,8 +21685,7 @@ void\n rs6000_xcoff_declare_object_name (FILE *file, const char *name, tree decl)\n {\n   struct declare_alias_data data = {file, false};\n-  RS6000_OUTPUT_BASENAME (file, name);\n-  fputs (\":\\n\", file);\n+  ASM_OUTPUT_LABEL (file, name);\n   symtab_node::get_create (decl)->call_for_symbol_and_aliases (rs6000_declare_alias,\n \t\t\t\t\t\t\t       &data, true);\n }\n@@ -21740,20 +21741,19 @@ rs6000_xcoff_encode_section_info (tree decl, rtx rtl, int first)\n \n   symname = XSTR (symbol, 0);\n \n-  /* Append CSECT mapping class, unless the symbol already is qualified.  */\n+  /* Append CSECT mapping class, unless the symbol already is qualified.\n+     Aliases are implemented as labels, so the symbol name should not add\n+     a mapping class.  */\n   if (decl\n       && DECL_P (decl)\n       && VAR_OR_FUNCTION_DECL_P (decl)\n-      && lookup_attribute (\"alias\", DECL_ATTRIBUTES (decl)) == NULL_TREE\n+      && symtab_node::get (decl)->alias == 0\n       && symname[strlen (symname) - 1] != ']')\n     {\n       const char *smclass = NULL;\n \n       if (TREE_CODE (decl) == FUNCTION_DECL)\n-\t{\n-\t  if (DECL_EXTERNAL (decl))\n-\t    smclass = \"[DS]\";\n-\t}\n+\tsmclass = \"[DS]\";\n       else if (DECL_THREAD_LOCAL_P (decl))\n \t{\n \t  if (bss_initializer_p (decl))\n@@ -21796,8 +21796,6 @@ rs6000_asm_weaken_decl (FILE *stream, tree decl,\n   if (decl && TREE_CODE (decl) == FUNCTION_DECL\n       && DEFAULT_ABI == ABI_AIX && DOT_SYMBOLS)\n     {\n-      if (TARGET_XCOFF && name[strlen (name) - 1] != ']')\n-\tfputs (\"[DS]\", stream);\n #if TARGET_XCOFF && HAVE_GAS_HIDDEN\n       if (TARGET_XCOFF)\n \tfputs (rs6000_xcoff_visibility (decl), stream);\n@@ -21810,6 +21808,7 @@ rs6000_asm_weaken_decl (FILE *stream, tree decl,\n     fputs (rs6000_xcoff_visibility (decl), stream);\n #endif\n   fputc ('\\n', stream);\n+\n   if (val)\n     {\n #ifdef ASM_OUTPUT_DEF"}]}