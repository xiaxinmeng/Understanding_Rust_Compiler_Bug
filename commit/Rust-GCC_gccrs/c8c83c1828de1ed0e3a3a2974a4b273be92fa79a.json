{"sha": "c8c83c1828de1ed0e3a3a2974a4b273be92fa79a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhjODNjMTgyOGRlMWVkMGUzYTNhMjk3NGE0YjI3M2JlOTJmYTc5YQ==", "commit": {"author": {"name": "Bud Davis", "email": "bdavis9659@comcast.net", "date": "2004-12-15T12:42:39Z"}, "committer": {"name": "Bud Davis", "email": "bdavis@gcc.gnu.org", "date": "2004-12-15T12:42:39Z"}, "message": "re PR libfortran/17597 (list directed read has error)\n\n2004-12-15  Bud Davis  <bdavis9659@comcast.net>\n            Steven G. Kargl  <kargls@comcast.net>\n\n        PR fortran/17597\n        * io/list_read.c (read_real): do not push back a comma when\n        it delimits a real value without a decimal point\n\n\n2004-12-15  Bud Davis  <bdavis9659@comcast.net>\n            Steven G. Kargle  <kargls@comcast.net>\n\n        PR fortran/17597\n        * gfortran.dg/list_read_3.f90: New test.\n\nCo-Authored-By: Steven G. Kargl <kargls@comcast.net>\nCo-Authored-By: Steven G. Kargl <kargls@comcast.net>\n\nFrom-SVN: r92190", "tree": {"sha": "4decd83caa2d58072b7195eff91b3b9f7a8e61e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4decd83caa2d58072b7195eff91b3b9f7a8e61e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8c83c1828de1ed0e3a3a2974a4b273be92fa79a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8c83c1828de1ed0e3a3a2974a4b273be92fa79a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8c83c1828de1ed0e3a3a2974a4b273be92fa79a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8c83c1828de1ed0e3a3a2974a4b273be92fa79a/comments", "author": null, "committer": null, "parents": [{"sha": "0aec601466c206f1d9180e928dc694a59e8a1972", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0aec601466c206f1d9180e928dc694a59e8a1972", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0aec601466c206f1d9180e928dc694a59e8a1972"}], "stats": {"total": 116, "additions": 115, "deletions": 1}, "files": [{"sha": "c5ba7ed06edd430d08a4e72ee8e6f90ecefd5b09", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8c83c1828de1ed0e3a3a2974a4b273be92fa79a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8c83c1828de1ed0e3a3a2974a4b273be92fa79a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c8c83c1828de1ed0e3a3a2974a4b273be92fa79a", "patch": "@@ -1,3 +1,9 @@\n+2004-12-15  Bud Davis  <bdavis9659@comcast.net>\n+            Steven G. Kargle  <kargls@comcast.net>\n+\n+\tPR fortran/17597\n+\t* gfortran.dg/list_read_3.f90: New test.\n+\n 2004-12-15  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* gcc.dg/ftrapv-2.c: New test."}, {"sha": "908139a41941ee2653e0ba46bbb54e266a2becfe", "filename": "gcc/testsuite/gfortran.dg/list_read_3.f90", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8c83c1828de1ed0e3a3a2974a4b273be92fa79a/gcc%2Ftestsuite%2Fgfortran.dg%2Flist_read_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8c83c1828de1ed0e3a3a2974a4b273be92fa79a/gcc%2Ftestsuite%2Fgfortran.dg%2Flist_read_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Flist_read_3.f90?ref=c8c83c1828de1ed0e3a3a2974a4b273be92fa79a", "patch": "@@ -0,0 +1,101 @@\n+! { dg-do run }\n+! Program to test reading in a list of integer values into REAL variables.\n+! The comma separator was not handled correctly.\n+!\n+program fg\n+\n+  character(len=80) buff\n+  logical debug\n+\n+  debug = .FALSE.\n+  a = 0\n+  b = 0\n+  c = 0\n+  d = 0\n+  write (buff,'(a)') '10,20,30,40'\n+  read(buff,*) a, b, c, d\n+\n+  if (debug) then\n+    print*,buff\n+    print*,a, b, c, d\n+  end if\n+\n+  if (abs(10. - a) > 1e-5) call abort\n+  if (abs(20. - b) > 1e-5) call abort\n+  if (abs(30. - c) > 1e-5) call abort\n+  if (abs(40. - d) > 1e-5) call abort\n+\n+  a = 0\n+  b = 0\n+  c = 0\n+  d = 0\n+  write (buff,'(a)') '10.,20.,30.,40.'\n+  read(buff,*) a, b, c, d\n+\n+  if (abs(10. - a) > 1e-5) call abort\n+  if (abs(20. - b) > 1e-5) call abort\n+  if (abs(30. - c) > 1e-5) call abort\n+  if (abs(40. - d) > 1e-5) call abort\n+\n+  if (debug) then\n+    print*,buff\n+    print*,a, b, c, d\n+  end if \n+\n+  a = 0\n+  b = 0\n+  c = 0\n+  d = 0\n+  write (buff,'(a)') '10.0,20.0,30.0,40.0'\n+  read(buff,*) a, b, c, d\n+                                                                                \n+  if (abs(10. - a) > 1e-5) call abort\n+  if (abs(20. - b) > 1e-5) call abort\n+  if (abs(30. - c) > 1e-5) call abort\n+  if (abs(40. - d) > 1e-5) call abort\n+\n+  if (debug) then \n+    print*,buff\n+    print*,a, b, c, d\n+  end if\n+                                                                              \n+\n+  a = 0\n+  b = -99 \n+  c = 0\n+  d = 0\n+  write (buff,'(a)') '10.0,,30.0,40.0'\n+  read(buff,*) a, b, c, d\n+                                                                                \n+  if (abs(10. - a) > 1e-5) call abort\n+  if (abs(-99. - b) > 1e-5) call abort\n+  if (abs(30. - c) > 1e-5) call abort\n+  if (abs(40. - d) > 1e-5) call abort\n+\n+  if (debug) then\n+    print*,buff\n+    print*,a, b, c, d\n+  end if\n+                                                                                \n+\n+   call abc\n+\n+end program\n+\n+subroutine abc\n+\n+  character(len=80) buff\n+\n+  a = 0\n+  b = 0\n+  c = 0\n+  d = 0\n+  write (buff,'(a)') '10,-20,30,-40'\n+  read(buff,*) a, b, c, d\n+\n+  if (abs(10. - a) > 1e-5) call abort\n+  if (abs(-20. - b) > 1e-5) call abort\n+  if (abs(30. - c) > 1e-5) call abort\n+  if (abs(-40. - d) > 1e-5) call abort\n+\n+end subroutine abc"}, {"sha": "6b331c6669a8f5078d342795975c99798d279ce3", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8c83c1828de1ed0e3a3a2974a4b273be92fa79a/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8c83c1828de1ed0e3a3a2974a4b273be92fa79a/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=c8c83c1828de1ed0e3a3a2974a4b273be92fa79a", "patch": "@@ -1,3 +1,10 @@\n+2004-12-15  Bud Davis  <bdavis9659@comcast.net>\n+            Steven G. Kargl  <kargls@comcast.net>\n+\n+\tPR fortran/17597\n+\t* io/list_read.c (read_real): do not push back a comma when\n+\tit delimits a real value without a decimal point\n+\n 2004-12-14  Steve Ellcey  <sje@cup.hp.com>\n \n \t* libgfortran/io/transfer.c (us_read): Use memcpy/memset"}, {"sha": "4445de4bb498bf813c00422757669fb4bfc6bd76", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8c83c1828de1ed0e3a3a2974a4b273be92fa79a/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8c83c1828de1ed0e3a3a2974a4b273be92fa79a/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=c8c83c1828de1ed0e3a3a2974a4b273be92fa79a", "patch": "@@ -1043,7 +1043,7 @@ read_real (int length)\n \t  goto got_repeat;\n \n \tCASE_SEPARATORS:\n-          if (c != '\\n')\n+          if (c != '\\n' &&  c != ',')\n             unget_char (c);    /* Real number that is just a digit-string.  */\n \t  goto done;\n "}]}