{"sha": "926c56780f0725ea270127d42ac9f5daffeb2a96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI2YzU2NzgwZjA3MjVlYTI3MDEyN2Q0MmFjOWY1ZGFmZmViMmE5Ng==", "commit": {"author": {"name": "Geoff Keating", "email": "geoffk@cygnus.com", "date": "2000-10-29T07:07:20Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2000-10-29T07:07:20Z"}, "message": "cpphash.c (cpp_forall_identifiers): Add context variable for callback routine.\n\n\t* cpphash.c (cpp_forall_identifiers): Add context variable\n\tfor callback routine.\n\t* cppmain.c (dump_macro): Update to match cpp_forall_identifiers\n\tchange.\n\t(main): Call cpp_forall_identifiers with null context.\n\t* cpplib.h (cpp_forall_identifiers): Update prototype.\n\n\t* cppmain.c: Make `parse_in' and `print' static.\n\nFrom-SVN: r37119", "tree": {"sha": "41e02b5b0c1c221b225bef780afa91428da07398", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41e02b5b0c1c221b225bef780afa91428da07398"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/926c56780f0725ea270127d42ac9f5daffeb2a96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/926c56780f0725ea270127d42ac9f5daffeb2a96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/926c56780f0725ea270127d42ac9f5daffeb2a96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/926c56780f0725ea270127d42ac9f5daffeb2a96/comments", "author": null, "committer": null, "parents": [{"sha": "69f4cc4b9e763cc09896613a3fdd1659384d9869", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69f4cc4b9e763cc09896613a3fdd1659384d9869", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69f4cc4b9e763cc09896613a3fdd1659384d9869"}], "stats": {"total": 34, "additions": 25, "deletions": 9}, "files": [{"sha": "7e6f098c637ad340d4bc4d8fe1b66cd7d91b5545", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/926c56780f0725ea270127d42ac9f5daffeb2a96/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/926c56780f0725ea270127d42ac9f5daffeb2a96/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=926c56780f0725ea270127d42ac9f5daffeb2a96", "patch": "@@ -1,3 +1,14 @@\n+2000-10-28  Geoffrey Keating  <geoffk@cygnus.com>\n+\n+\t* cpphash.c (cpp_forall_identifiers): Add context variable\n+\tfor callback routine.\n+\t* cppmain.c (dump_macro): Update to match cpp_forall_identifiers\n+\tchange.\n+\t(main): Call cpp_forall_identifiers with null context.\n+\t* cpplib.h (cpp_forall_identifiers): Update prototype.\n+\n+\t* cppmain.c: Make `parse_in' and `print' static.\n+\n 2000-10-28  Alan Modra <alan@linuxcare.com.au>\n \n \t* c-decl.c (finish_function): Clear c_function_name_declared_p."}, {"sha": "50172d174ce6900e0360750d0511ee00ec349fba", "filename": "gcc/cpphash.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/926c56780f0725ea270127d42ac9f5daffeb2a96/gcc%2Fcpphash.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/926c56780f0725ea270127d42ac9f5daffeb2a96/gcc%2Fcpphash.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpphash.c?ref=926c56780f0725ea270127d42ac9f5daffeb2a96", "patch": "@@ -264,9 +264,10 @@ higher_prime_number (n)\n }\n \n void\n-cpp_forall_identifiers (pfile, cb)\n+cpp_forall_identifiers (pfile, cb, v)\n      cpp_reader *pfile;\n-     int (*cb) PARAMS ((cpp_reader *, cpp_hashnode *));\n+     int (*cb) PARAMS ((cpp_reader *, cpp_hashnode *, void *));\n+     void *v;\n {\n     cpp_hashnode **p, **limit;\n \n@@ -275,7 +276,7 @@ cpp_forall_identifiers (pfile, cb)\n   do\n     {\n       if (*p)\n-\tif ((*cb) (pfile, *p) == 0)\n+\tif ((*cb) (pfile, *p, v) == 0)\n \t  break;\n     }\n   while (++p < limit);"}, {"sha": "747ff18bad127862f0c9ead33ade5e36a4b3b13c", "filename": "gcc/cpplib.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/926c56780f0725ea270127d42ac9f5daffeb2a96/gcc%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/926c56780f0725ea270127d42ac9f5daffeb2a96/gcc%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.h?ref=926c56780f0725ea270127d42ac9f5daffeb2a96", "patch": "@@ -802,7 +802,10 @@ extern cpp_hashnode *cpp_lookup\t\tPARAMS ((cpp_reader *,\n \t\t\t\t\t\t const unsigned char *, size_t));\n extern void cpp_forall_identifiers\tPARAMS ((cpp_reader *,\n \t\t\t\t\t\t int (*) PARAMS ((cpp_reader *,\n-\t\t\t\t\t\t\t\t  cpp_hashnode *))));\n+\t\t\t\t\t\t\t\t  cpp_hashnode *,\n+\t\t\t\t\t\t\t\t  void *)),\n+\t\t\t\t\t\t void *));\n+\n /* In cppmacro.c */\n extern void cpp_scan_buffer_nooutput\tPARAMS ((cpp_reader *));\n extern void cpp_start_lookahead\t\tPARAMS ((cpp_reader *));"}, {"sha": "3304c154948ef7ded7cc8e49b3e606ba10f7a4d6", "filename": "gcc/cppmain.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/926c56780f0725ea270127d42ac9f5daffeb2a96/gcc%2Fcppmain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/926c56780f0725ea270127d42ac9f5daffeb2a96/gcc%2Fcppmain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppmain.c?ref=926c56780f0725ea270127d42ac9f5daffeb2a96", "patch": "@@ -42,7 +42,7 @@ int main\t\tPARAMS ((int, char **));\n /* General output routines.  */\n static void scan_buffer\tPARAMS ((cpp_reader *));\n static int printer_init PARAMS ((cpp_reader *));\n-static int dump_macro PARAMS ((cpp_reader *, cpp_hashnode *));\n+static int dump_macro PARAMS ((cpp_reader *, cpp_hashnode *, void *));\n \n static void print_line PARAMS ((const char *));\n static void maybe_print_line PARAMS ((unsigned int));\n@@ -62,8 +62,8 @@ static void cb_def_pragma PARAMS ((cpp_reader *));\n static void do_pragma_implementation PARAMS ((cpp_reader *));\n \n const char *progname;\n-cpp_reader parse_in;\n-struct printer print;\n+static cpp_reader parse_in;\n+static struct printer print;\n \n int\n main (argc, argv)\n@@ -143,7 +143,7 @@ main (argc, argv)\n \n   /* -dM command line option.  */\n   if (CPP_OPTION (pfile, dump_macros) == dump_only)\n-    cpp_forall_identifiers (pfile, dump_macro);\n+    cpp_forall_identifiers (pfile, dump_macro, NULL);\n \n   cpp_finish (pfile);\n   cpp_cleanup (pfile);\n@@ -429,9 +429,10 @@ do_pragma_implementation (pfile)\n \n /* Dump out the hash table.  */\n static int\n-dump_macro (pfile, node)\n+dump_macro (pfile, node, v)\n      cpp_reader *pfile;\n      cpp_hashnode *node;\n+     void *v ATTRIBUTE_UNUSED;\n {\n   if (node->type == NT_MACRO && !(node->flags & NODE_BUILTIN))\n     {"}]}