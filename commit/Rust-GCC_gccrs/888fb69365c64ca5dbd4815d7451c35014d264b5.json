{"sha": "888fb69365c64ca5dbd4815d7451c35014d264b5", "node_id": "C_kwDOANBUbNoAKDg4OGZiNjkzNjVjNjRjYTVkYmQ0ODE1ZDc0NTFjMzUwMTRkMjY0YjU", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-12-30T12:15:56Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-01-10T09:38:45Z"}, "message": "[Ada] Remove CodePeer annotations for pragma Loop_Variant\n\ngcc/ada/\n\n\t* libgnat/s-exponn.adb, libgnat/s-expont.adb,\n\tlibgnat/s-exponu.adb, libgnat/s-widthi.adb,\n\tlibgnat/s-widthu.adb: Remove CodePeer annotations for pragma\n\tLoop_Variant.", "tree": {"sha": "0c8930183df29703a733e23774fe6c7f9357c5ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c8930183df29703a733e23774fe6c7f9357c5ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/888fb69365c64ca5dbd4815d7451c35014d264b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/888fb69365c64ca5dbd4815d7451c35014d264b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/888fb69365c64ca5dbd4815d7451c35014d264b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/888fb69365c64ca5dbd4815d7451c35014d264b5/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9c64c604083516b508fc7d20ba5c285ae60661e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9c64c604083516b508fc7d20ba5c285ae60661e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9c64c604083516b508fc7d20ba5c285ae60661e"}], "stats": {"total": 15, "additions": 0, "deletions": 15}, "files": [{"sha": "e7fc40c3f371807b47a1b37f42ee8d643ec97da0", "filename": "gcc/ada/libgnat/s-exponn.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/888fb69365c64ca5dbd4815d7451c35014d264b5/gcc%2Fada%2Flibgnat%2Fs-exponn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/888fb69365c64ca5dbd4815d7451c35014d264b5/gcc%2Fada%2Flibgnat%2Fs-exponn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-exponn.adb?ref=888fb69365c64ca5dbd4815d7451c35014d264b5", "patch": "@@ -130,9 +130,6 @@ is\n          pragma Loop_Invariant\n            (Big (Result) * Big (Factor) ** Exp = Big (Left) ** Right);\n          pragma Loop_Variant (Decreases => Exp);\n-         pragma Annotate\n-           (CodePeer, False_Positive,\n-            \"validity check\", \"confusion on generated code\");\n \n          if Exp rem 2 /= 0 then\n             declare"}, {"sha": "e60d55c1009eedb9829032ca61961ad4cb173290", "filename": "gcc/ada/libgnat/s-expont.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/888fb69365c64ca5dbd4815d7451c35014d264b5/gcc%2Fada%2Flibgnat%2Fs-expont.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/888fb69365c64ca5dbd4815d7451c35014d264b5/gcc%2Fada%2Flibgnat%2Fs-expont.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-expont.adb?ref=888fb69365c64ca5dbd4815d7451c35014d264b5", "patch": "@@ -130,9 +130,6 @@ is\n          pragma Loop_Invariant\n            (Big (Result) * Big (Factor) ** Exp = Big (Left) ** Right);\n          pragma Loop_Variant (Decreases => Exp);\n-         pragma Annotate\n-           (CodePeer, False_Positive,\n-            \"validity check\", \"confusion on generated code\");\n \n          if Exp rem 2 /= 0 then\n             declare"}, {"sha": "06ed5099c2505dff4eb68bbb23f938f636b52753", "filename": "gcc/ada/libgnat/s-exponu.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/888fb69365c64ca5dbd4815d7451c35014d264b5/gcc%2Fada%2Flibgnat%2Fs-exponu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/888fb69365c64ca5dbd4815d7451c35014d264b5/gcc%2Fada%2Flibgnat%2Fs-exponu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-exponu.adb?ref=888fb69365c64ca5dbd4815d7451c35014d264b5", "patch": "@@ -64,9 +64,6 @@ begin\n          pragma Loop_Invariant (Exp > 0);\n          pragma Loop_Invariant (Result * Factor ** Exp = Left ** Right);\n          pragma Loop_Variant (Decreases => Exp);\n-         pragma Annotate\n-           (CodePeer, False_Positive,\n-            \"validity check\", \"confusion on generated code\");\n \n          if Exp rem 2 /= 0 then\n             pragma Assert"}, {"sha": "55a94ecfc10c1403e9deaa7057e38eb899fbd10a", "filename": "gcc/ada/libgnat/s-widthi.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/888fb69365c64ca5dbd4815d7451c35014d264b5/gcc%2Fada%2Flibgnat%2Fs-widthi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/888fb69365c64ca5dbd4815d7451c35014d264b5/gcc%2Fada%2Flibgnat%2Fs-widthi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-widthi.adb?ref=888fb69365c64ca5dbd4815d7451c35014d264b5", "patch": "@@ -163,9 +163,6 @@ begin\n          pragma Loop_Invariant (Pow = Big_10 ** (W - 2));\n          pragma Loop_Invariant (Big (T) = Big (T_Init) / Pow);\n          pragma Loop_Variant (Decreases => T);\n-         pragma Annotate\n-           (CodePeer, False_Positive,\n-            \"validity check\", \"confusion on generated code\");\n       end loop;\n \n       declare"}, {"sha": "72045cb92942cdcf1b6681842a1aa82130de424c", "filename": "gcc/ada/libgnat/s-widthu.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/888fb69365c64ca5dbd4815d7451c35014d264b5/gcc%2Fada%2Flibgnat%2Fs-widthu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/888fb69365c64ca5dbd4815d7451c35014d264b5/gcc%2Fada%2Flibgnat%2Fs-widthu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-widthu.adb?ref=888fb69365c64ca5dbd4815d7451c35014d264b5", "patch": "@@ -156,9 +156,6 @@ begin\n          pragma Loop_Invariant (Pow = Big_10 ** (W - 2));\n          pragma Loop_Invariant (Big (T) = Big (T_Init) / Pow);\n          pragma Loop_Variant (Decreases => T);\n-         pragma Annotate\n-           (CodePeer, False_Positive,\n-            \"validity check\", \"confusion on generated code\");\n       end loop;\n \n       declare"}]}