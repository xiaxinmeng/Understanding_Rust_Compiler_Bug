{"sha": "a84efb51f78ec2224091306024e5e52a3563e070", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg0ZWZiNTFmNzhlYzIyMjQwOTEzMDYwMjRlNWU1MmEzNTYzZTA3MA==", "commit": {"author": {"name": "Jeffrey Oldham", "email": "oldham@codesourcery.com", "date": "2001-03-12T22:22:54Z"}, "committer": {"name": "Jeffrey D. Oldham", "email": "oldham@gcc.gnu.org", "date": "2001-03-12T22:22:54Z"}, "message": "emit-rtl.c (remove_unnecessary_notes): Reverse Richard Kenner's 2001-02-24 which broke building the Java library.\n\n2001-03-12  Jeffrey Oldham  <oldham@codesourcery.com>\n\n\t* emit-rtl.c (remove_unnecessary_notes): Reverse Richard Kenner's\n\t2001-02-24 which broke building the Java library.\n\t* function.c (identify_blocks): Likewise.\n\t(all_blocks): Likewise.\n\t* integrate.c (integrate_decl_tree): Likewise.\n\t* print-tree.c (print_node): Likewise.\n\t* tree.h (BLOCK_NUMBER): Likewise.\n\t(struct tree_block): Likewise.\n\nFrom-SVN: r40431", "tree": {"sha": "beec1cc684380818416b44e8858e5c952f724134", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/beec1cc684380818416b44e8858e5c952f724134"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a84efb51f78ec2224091306024e5e52a3563e070", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a84efb51f78ec2224091306024e5e52a3563e070", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a84efb51f78ec2224091306024e5e52a3563e070", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a84efb51f78ec2224091306024e5e52a3563e070/comments", "author": null, "committer": null, "parents": [{"sha": "52e8d2b2a0b3dd1a1e79f786817ffae3e09b721e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52e8d2b2a0b3dd1a1e79f786817ffae3e09b721e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52e8d2b2a0b3dd1a1e79f786817ffae3e09b721e"}], "stats": {"total": 70, "additions": 33, "deletions": 37}, "files": [{"sha": "912cd5f3cb1772b25d0079e1d27ee08256dad1ac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a84efb51f78ec2224091306024e5e52a3563e070/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a84efb51f78ec2224091306024e5e52a3563e070/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a84efb51f78ec2224091306024e5e52a3563e070", "patch": "@@ -1,3 +1,14 @@\n+2001-03-12  Jeffrey Oldham  <oldham@codesourcery.com>\n+\n+\t* emit-rtl.c (remove_unnecessary_notes): Reverse Richard Kenner's\n+\t2001-02-24 which broke building the Java library.\n+\t* function.c (identify_blocks): Likewise.\n+\t(all_blocks): Likewise.\n+\t* integrate.c (integrate_decl_tree): Likewise.\n+\t* print-tree.c (print_node): Likewise.\n+\t* tree.h (BLOCK_NUMBER): Likewise.\n+\t(struct tree_block): Likewise.\n+\n 2001-03-12  David Edelsohn  <edelsohn@gnu.org>\n \n \t* rs6000/aix51.h (CPP_SPEC, CPLUSPLUS_CPP_SPEC): Fix typo in"}, {"sha": "d95df87907a29a70c1693ad5b4be563bdeb81a30", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a84efb51f78ec2224091306024e5e52a3563e070/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a84efb51f78ec2224091306024e5e52a3563e070/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=a84efb51f78ec2224091306024e5e52a3563e070", "patch": "@@ -2907,7 +2907,6 @@ remove_unnecessary_notes ()\n \t\t     with the block_stack check above.  */\n \t\t  if (debug_ignore_block (NOTE_BLOCK (insn)))\n \t\t    {\n-\t\t      BLOCK_DEAD (NOTE_BLOCK (insn)) = 1;\n \t\t      remove_insn (tmp);\n \t\t      remove_insn (insn);\n \t\t    }"}, {"sha": "dde5ee09f761b19243e04bc9ab0a69c80cf7b555", "filename": "gcc/function.c", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a84efb51f78ec2224091306024e5e52a3563e070/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a84efb51f78ec2224091306024e5e52a3563e070/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=a84efb51f78ec2224091306024e5e52a3563e070", "patch": "@@ -5740,7 +5740,8 @@ identify_blocks ()\n \t\t\t\t\t block_stack);\n \n   /* If we didn't use all of the subblocks, we've misplaced block notes.  */\n-  if (last_block_vector != block_vector + n_blocks)\n+  /* ??? This appears to happen all the time.  Latent bugs elsewhere?  */\n+  if (0 && last_block_vector != block_vector + n_blocks)\n     abort ();\n \n   free (block_vector);\n@@ -5946,28 +5947,27 @@ blocks_nreverse (t)\n    blocks.  */\n \n static int\n-all_blocks (blocks, vector)\n-     tree blocks;\n+all_blocks (block, vector)\n+     tree block;\n      tree *vector;\n {\n   int n_blocks = 0;\n-  tree block;\n \n-  for (block = blocks; block != 0; block = TREE_CHAIN (block))\n-    if (!BLOCK_DEAD (block))\n-      {\n-\tTREE_ASM_WRITTEN (block) = 0;\n+  while (block)\n+    {\n+      TREE_ASM_WRITTEN (block) = 0;\n \n-\t/* Record this block.  */\n-\tif (vector)\n-\t  vector[n_blocks] = block;\n+      /* Record this block.  */\n+      if (vector)\n+\tvector[n_blocks] = block;\n \n-\t++n_blocks;\n+      ++n_blocks;\n \n-\t/* Record the subblocks, and their subblocks...  */\n-\tn_blocks += all_blocks (BLOCK_SUBBLOCKS (block),\n-\t\t\t\tvector ? vector + n_blocks : 0);\n-      }\n+      /* Record the subblocks, and their subblocks...  */\n+      n_blocks += all_blocks (BLOCK_SUBBLOCKS (block),\n+\t\t\t      vector ? vector + n_blocks : 0);\n+      block = BLOCK_CHAIN (block);\n+    }\n \n   return n_blocks;\n }"}, {"sha": "270a9c5a115317e75491ab391c6e85fa46fb6a97", "filename": "gcc/integrate.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a84efb51f78ec2224091306024e5e52a3563e070/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a84efb51f78ec2224091306024e5e52a3563e070/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=a84efb51f78ec2224091306024e5e52a3563e070", "patch": "@@ -1684,12 +1684,11 @@ integrate_decl_tree (let, map)\n \n   next = &BLOCK_SUBBLOCKS (new_block);\n   for (t = BLOCK_SUBBLOCKS (let); t; t = BLOCK_CHAIN (t))\n-    if (!BLOCK_DEAD (t))\n-      {\n-\t*next = integrate_decl_tree (t, map);\n-\tBLOCK_SUPERCONTEXT (*next) = new_block;\n-\tnext = &BLOCK_CHAIN (*next);\n-      }\n+    {\n+      *next = integrate_decl_tree (t, map);\n+      BLOCK_SUPERCONTEXT (*next) = new_block;\n+      next = &BLOCK_CHAIN (*next);\n+    }\n \n   TREE_USED (new_block) = TREE_USED (let);\n   BLOCK_ABSTRACT_ORIGIN (new_block) = let;"}, {"sha": "3bbea3f52f0aa7b85c8dff92cf428eac851cc36c", "filename": "gcc/print-tree.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a84efb51f78ec2224091306024e5e52a3563e070/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a84efb51f78ec2224091306024e5e52a3563e070/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=a84efb51f78ec2224091306024e5e52a3563e070", "patch": "@@ -584,14 +584,6 @@ print_node (file, prefix, node, indent)\n       break;\n \n     case 'b':\n-      if (BLOCK_ABSTRACT (node))\n-\tfprintf (file, \" abstract\");\n-      if (BLOCK_HANDLER_BLOCK (node))\n-\tfprintf (file, \" handler-block\");\n-      if (BLOCK_DEAD (node))\n-\tfprintf (file, \" dead\");\n-      fprintf (file, \" block-number %d\", BLOCK_NUMBER (node));\n-\n       print_node (file, \"vars\", BLOCK_VARS (node), indent + 4);\n       print_node (file, \"supercontext\", BLOCK_SUPERCONTEXT (node), indent + 4);\n       print_node (file, \"subblocks\", BLOCK_SUBBLOCKS (node), indent + 4);"}, {"sha": "4ec4321663a6b9894eedc8d0f57f885b7dee099b", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a84efb51f78ec2224091306024e5e52a3563e070/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a84efb51f78ec2224091306024e5e52a3563e070/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=a84efb51f78ec2224091306024e5e52a3563e070", "patch": "@@ -830,10 +830,6 @@ struct tree_exp\n    listed in the BLOCK_VARS slot.  */\n #define BLOCK_HANDLER_BLOCK(NODE) (BLOCK_CHECK (NODE)->block.handler_block_flag)\n \n-/* Nonzero means the block was deleted as dead and should not be copied\n-   when a function is inlined.  */\n-#define BLOCK_DEAD(NODE) (BLOCK_CHECK (NODE)->block.dead_flag)\n-\n /* An index number for this block.  These values are not guaranteed to\n    be unique across functions -- whether or not they are depends on\n    the debugging output format in use.  */\n@@ -845,8 +841,7 @@ struct tree_block\n \n   unsigned handler_block_flag : 1;\n   unsigned abstract_flag : 1;\n-  unsigned dead_flag : 1;\n-  unsigned block_num : 29;\n+  unsigned block_num : 30;\n \n   union tree_node *vars;\n   union tree_node *subblocks;"}]}