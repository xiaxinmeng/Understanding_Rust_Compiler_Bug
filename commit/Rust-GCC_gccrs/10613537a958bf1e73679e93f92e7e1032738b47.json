{"sha": "10613537a958bf1e73679e93f92e7e1032738b47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA2MTM1MzdhOTU4YmYxZTczNjc5ZTkzZjkyZTdlMTAzMjczOGI0Nw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-02-03T19:26:51Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-02-03T19:26:51Z"}, "message": "PR libstdc++/66145 ensure new ABI for ios::failure tests\n\n\tPR libstdc++/66145\n\t* testsuite/27_io/basic_ios/copyfmt/char/1.cc: Restore ABI override\n\tso new ios::failure can be caught even when old ABI is the default.\n\t* testsuite/27_io/basic_ios/exceptions/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/\n\texceptions_failbit.cc: Likewise.\n\t* testsuite/27_io/basic_istream/extractors_arithmetic/wchar_t/\n\texceptions_failbit.cc: Likewise.\n\t* testsuite/27_io/basic_istream/extractors_other/char/\n\texceptions_null.cc: Likewise.\n\t* testsuite/27_io/basic_istream/extractors_other/wchar_t/\n\texceptions_null.cc: Likewise.\n\t* testsuite/27_io/basic_istream/sentry/char/12297.cc: Likewise.\n\t* testsuite/27_io/basic_istream/sentry/wchar_t/12297.cc: Likewise.\n\t* testsuite/27_io/basic_ostream/inserters_other/char/\n\texceptions_null.cc: Likewise.\n\t* testsuite/27_io/basic_ostream/inserters_other/wchar_t/\n\texceptions_null.cc: Likewise.\n\t* testsuite/27_io/ios_base/storage/2.cc: Likewise.\n\nFrom-SVN: r245167", "tree": {"sha": "f91000eb584e02811e329bfee4607bcf40528b65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f91000eb584e02811e329bfee4607bcf40528b65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10613537a958bf1e73679e93f92e7e1032738b47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10613537a958bf1e73679e93f92e7e1032738b47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10613537a958bf1e73679e93f92e7e1032738b47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10613537a958bf1e73679e93f92e7e1032738b47/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b00f9d236e181c3ef427989126009f21243a007", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b00f9d236e181c3ef427989126009f21243a007", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b00f9d236e181c3ef427989126009f21243a007"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "0d6f5d018a3da3a87871a042e2e7008c59867b95", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10613537a958bf1e73679e93f92e7e1032738b47/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10613537a958bf1e73679e93f92e7e1032738b47/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=10613537a958bf1e73679e93f92e7e1032738b47", "patch": "@@ -1,5 +1,25 @@\n 2017-02-03  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/66145\n+\t* testsuite/27_io/basic_ios/copyfmt/char/1.cc: Restore ABI override\n+\tso new ios::failure can be caught even when old ABI is the default.\n+\t* testsuite/27_io/basic_ios/exceptions/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/\n+\texceptions_failbit.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/extractors_arithmetic/wchar_t/\n+\texceptions_failbit.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/extractors_other/char/\n+\texceptions_null.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/extractors_other/wchar_t/\n+\texceptions_null.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/sentry/char/12297.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/sentry/wchar_t/12297.cc: Likewise.\n+\t* testsuite/27_io/basic_ostream/inserters_other/char/\n+\texceptions_null.cc: Likewise.\n+\t* testsuite/27_io/basic_ostream/inserters_other/wchar_t/\n+\texceptions_null.cc: Likewise.\n+\t* testsuite/27_io/ios_base/storage/2.cc: Likewise.\n+\n \tPR libstdc++/60936\n \t* src/c++11/Makefile.am: Add new files.\n \t* src/c++11/Makefile.in: Regenerate."}, {"sha": "87551a08311119ca609eec379015ff22259527f2", "filename": "libstdc++-v3/testsuite/27_io/basic_ios/copyfmt/char/1.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10613537a958bf1e73679e93f92e7e1032738b47/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ios%2Fcopyfmt%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10613537a958bf1e73679e93f92e7e1032738b47/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ios%2Fcopyfmt%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ios%2Fcopyfmt%2Fchar%2F1.cc?ref=10613537a958bf1e73679e93f92e7e1032738b47", "patch": "@@ -17,6 +17,9 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// The library throws the new definition of std::ios::failure\n+// { dg-options \"-D_GLIBCXX_USE_CXX11_ABI=1\" }\n+\n // 27.4.4.2 basic_ios member functions\n \n // NB: Don't include any other headers in this file."}, {"sha": "86b7bee35d39c56193e88b9bed284f00c7c4721a", "filename": "libstdc++-v3/testsuite/27_io/basic_ios/exceptions/char/1.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10613537a958bf1e73679e93f92e7e1032738b47/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ios%2Fexceptions%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10613537a958bf1e73679e93f92e7e1032738b47/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ios%2Fexceptions%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ios%2Fexceptions%2Fchar%2F1.cc?ref=10613537a958bf1e73679e93f92e7e1032738b47", "patch": "@@ -17,6 +17,9 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// The library throws the new definition of std::ios::failure\n+// { dg-options \"-D_GLIBCXX_USE_CXX11_ABI=1\" }\n+\n // 27.4.4.2 basic_ios member functions\n \n // NB: Don't include any other headers in this file."}, {"sha": "2f1edf6e79c944e4e5a17ec40f0c8207e38d92e4", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/exceptions_failbit.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10613537a958bf1e73679e93f92e7e1032738b47/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2Fexceptions_failbit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10613537a958bf1e73679e93f92e7e1032738b47/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2Fexceptions_failbit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2Fexceptions_failbit.cc?ref=10613537a958bf1e73679e93f92e7e1032738b47", "patch": "@@ -15,6 +15,9 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// The library throws the new definition of std::ios::failure\n+// { dg-options \"-D_GLIBCXX_USE_CXX11_ABI=1\" }\n+\n #include <sstream>\n #include <testsuite_hooks.h>\n "}, {"sha": "7038565eb899641b7c8f511b6ccd1083c1ec511f", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/wchar_t/exceptions_failbit.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10613537a958bf1e73679e93f92e7e1032738b47/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fwchar_t%2Fexceptions_failbit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10613537a958bf1e73679e93f92e7e1032738b47/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fwchar_t%2Fexceptions_failbit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fwchar_t%2Fexceptions_failbit.cc?ref=10613537a958bf1e73679e93f92e7e1032738b47", "patch": "@@ -15,6 +15,9 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// The library throws the new definition of std::ios::failure\n+// { dg-options \"-D_GLIBCXX_USE_CXX11_ABI=1\" }\n+\n #include <sstream>\n #include <testsuite_hooks.h>\n "}, {"sha": "50c70f96378dd0911ab0fcdfb09409175a56aa9f", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_other/char/exceptions_null.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10613537a958bf1e73679e93f92e7e1032738b47/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_other%2Fchar%2Fexceptions_null.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10613537a958bf1e73679e93f92e7e1032738b47/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_other%2Fchar%2Fexceptions_null.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_other%2Fchar%2Fexceptions_null.cc?ref=10613537a958bf1e73679e93f92e7e1032738b47", "patch": "@@ -15,6 +15,9 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// The library throws the new definition of std::ios::failure\n+// { dg-options \"-D_GLIBCXX_USE_CXX11_ABI=1\" }\n+\n #include <istream>\n #include <ostream>\n #include <streambuf>"}, {"sha": "0d8a3cd3f3af3f65da42843aba16e04e1f61c5fd", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_other/wchar_t/exceptions_null.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10613537a958bf1e73679e93f92e7e1032738b47/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_other%2Fwchar_t%2Fexceptions_null.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10613537a958bf1e73679e93f92e7e1032738b47/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_other%2Fwchar_t%2Fexceptions_null.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_other%2Fwchar_t%2Fexceptions_null.cc?ref=10613537a958bf1e73679e93f92e7e1032738b47", "patch": "@@ -15,6 +15,9 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// The library throws the new definition of std::ios::failure\n+// { dg-options \"-D_GLIBCXX_USE_CXX11_ABI=1\" }\n+\n #include <istream>\n #include <ostream>\n #include <streambuf>"}, {"sha": "ceb92347e088b9d224f2d3571792e1aff8bb6199", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/sentry/char/12297.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10613537a958bf1e73679e93f92e7e1032738b47/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fchar%2F12297.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10613537a958bf1e73679e93f92e7e1032738b47/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fchar%2F12297.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fchar%2F12297.cc?ref=10613537a958bf1e73679e93f92e7e1032738b47", "patch": "@@ -18,6 +18,9 @@\n \n // 27.6.1.1.2 class basic_istream::sentry\n \n+// The library throws the new definition of std::ios::failure\n+// { dg-options \"-D_GLIBCXX_USE_CXX11_ABI=1\" }\n+\n #include <sstream>\n #include <testsuite_hooks.h>\n "}, {"sha": "dc9d48a18d83f905d551016c3b5a96704f1ca164", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/sentry/wchar_t/12297.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10613537a958bf1e73679e93f92e7e1032738b47/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fwchar_t%2F12297.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10613537a958bf1e73679e93f92e7e1032738b47/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fwchar_t%2F12297.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fwchar_t%2F12297.cc?ref=10613537a958bf1e73679e93f92e7e1032738b47", "patch": "@@ -15,6 +15,9 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// The library throws the new definition of std::ios::failure\n+// { dg-options \"-D_GLIBCXX_USE_CXX11_ABI=1\" }\n+\n // 27.6.1.1.2 class basic_istream::sentry\n \n #include <sstream>"}, {"sha": "ab9ef94da35ca788270feb8dd7b8690717bb8e2a", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/inserters_other/char/exceptions_null.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10613537a958bf1e73679e93f92e7e1032738b47/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_other%2Fchar%2Fexceptions_null.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10613537a958bf1e73679e93f92e7e1032738b47/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_other%2Fchar%2Fexceptions_null.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_other%2Fchar%2Fexceptions_null.cc?ref=10613537a958bf1e73679e93f92e7e1032738b47", "patch": "@@ -15,6 +15,9 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// The library throws the new definition of std::ios::failure\n+// { dg-options \"-D_GLIBCXX_USE_CXX11_ABI=1\" }\n+\n #include <istream>\n #include <ostream>\n #include <streambuf>"}, {"sha": "bba6dd0e3f1d037b24716fae20485bcd7d59e5cf", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/inserters_other/wchar_t/exceptions_null.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10613537a958bf1e73679e93f92e7e1032738b47/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_other%2Fwchar_t%2Fexceptions_null.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10613537a958bf1e73679e93f92e7e1032738b47/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_other%2Fwchar_t%2Fexceptions_null.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_other%2Fwchar_t%2Fexceptions_null.cc?ref=10613537a958bf1e73679e93f92e7e1032738b47", "patch": "@@ -15,6 +15,9 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// The library throws the new definition of std::ios::failure\n+// { dg-options \"-D_GLIBCXX_USE_CXX11_ABI=1\" }\n+\n #include <istream>\n #include <ostream>\n #include <streambuf>"}, {"sha": "d2c9ec50e5301aabaab23a51bf86fc0c15e5cdc3", "filename": "libstdc++-v3/testsuite/27_io/ios_base/storage/2.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10613537a958bf1e73679e93f92e7e1032738b47/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fstorage%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10613537a958bf1e73679e93f92e7e1032738b47/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fstorage%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fstorage%2F2.cc?ref=10613537a958bf1e73679e93f92e7e1032738b47", "patch": "@@ -28,6 +28,9 @@\n // Radar 6467884: 10.X systems are not robust when paging space is exceeded\n // { dg-skip-if \"\" { *-*-darwin* && lp64 } { \"*\" } { \"\" } } \n \n+// The library throws the new definition of std::ios::failure\n+// { dg-options \"-D_GLIBCXX_USE_CXX11_ABI=1\" }\n+\n #include <sstream>\n #include <iostream>\n #include <limits>"}]}