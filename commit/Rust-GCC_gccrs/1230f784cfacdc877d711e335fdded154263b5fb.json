{"sha": "1230f784cfacdc877d711e335fdded154263b5fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTIzMGY3ODRjZmFjZGM4NzdkNzExZTMzNWZkZGVkMTU0MjYzYjVmYg==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2015-01-27T04:07:54Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2015-01-27T04:07:54Z"}, "message": "rl78.c (move_elim_pass): Don't optimize away volatile memory references.\n\n* config/rl78/rl78.c (move_elim_pass): Don't optimize away\nvolatile memory references.\n\nFrom-SVN: r220151", "tree": {"sha": "54b45df4ce9ddaa17cf5f096b0ad49dd51412d80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54b45df4ce9ddaa17cf5f096b0ad49dd51412d80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1230f784cfacdc877d711e335fdded154263b5fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1230f784cfacdc877d711e335fdded154263b5fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1230f784cfacdc877d711e335fdded154263b5fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1230f784cfacdc877d711e335fdded154263b5fb/comments", "author": null, "committer": null, "parents": [{"sha": "82a0fe9a1d3ab3ed7ce7ed6eb2f7504f1833296b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82a0fe9a1d3ab3ed7ce7ed6eb2f7504f1833296b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82a0fe9a1d3ab3ed7ce7ed6eb2f7504f1833296b"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "5add60716b072d256fdbf685499b13ccbc89488d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1230f784cfacdc877d711e335fdded154263b5fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1230f784cfacdc877d711e335fdded154263b5fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1230f784cfacdc877d711e335fdded154263b5fb", "patch": "@@ -1,3 +1,8 @@\n+2015-01-26  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/rl78/rl78.c (move_elim_pass): Don't optimize away\n+\tvolatile memory references.\n+\n 2015-01-26  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/49263"}, {"sha": "a6d97cd702122eddc95a13dc7353e01bc778c239", "filename": "gcc/config/rl78/rl78.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1230f784cfacdc877d711e335fdded154263b5fb/gcc%2Fconfig%2Frl78%2Frl78.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1230f784cfacdc877d711e335fdded154263b5fb/gcc%2Fconfig%2Frl78%2Frl78.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78.c?ref=1230f784cfacdc877d711e335fdded154263b5fb", "patch": "@@ -222,7 +222,12 @@ move_elim_pass (void)\n \t can eliminate the second SET.  */\n       if (prev\n \t  && rtx_equal_p (SET_DEST (prev), SET_SRC (set))\n-\t  && rtx_equal_p (SET_DEST (set), SET_SRC (prev)))\n+\t  && rtx_equal_p (SET_DEST (set), SET_SRC (prev))\n+\t  /* ... and none of the operands are volatile.  */\n+\t  && ! volatile_refs_p (SET_SRC (prev))\n+\t  && ! volatile_refs_p (SET_DEST (prev))\n+\t  && ! volatile_refs_p (SET_SRC (set))\n+\t  && ! volatile_refs_p (SET_DEST (set)))\n \t{\n \t  if (dump_file)\n \t    fprintf (dump_file, \" Delete insn %d because it is redundant\\n\","}]}