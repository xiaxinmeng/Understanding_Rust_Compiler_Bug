{"sha": "243fa4883cf6fccaaafddcc82e6b58843c82fb30", "node_id": "C_kwDOANBUbNoAKDI0M2ZhNDg4M2NmNmZjY2FhYWZkZGNjODJlNmI1ODg0M2M4MmZiMzA", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2023-03-24T16:32:59Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2023-03-24T16:36:22Z"}, "message": "libgomp.texi: Fix wording in GCN offload specifics\n\nlibgomp/\n\t* libgomp.texi (Offload-Target Specifics): Grammar fix.", "tree": {"sha": "cfa35bde07a17cfc5db964f694f7af235ac8406d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cfa35bde07a17cfc5db964f694f7af235ac8406d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/243fa4883cf6fccaaafddcc82e6b58843c82fb30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/243fa4883cf6fccaaafddcc82e6b58843c82fb30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/243fa4883cf6fccaaafddcc82e6b58843c82fb30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/243fa4883cf6fccaaafddcc82e6b58843c82fb30/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e2cdb1ddb5f6ace909358775e94bfe23046ad5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e2cdb1ddb5f6ace909358775e94bfe23046ad5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e2cdb1ddb5f6ace909358775e94bfe23046ad5a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "dc6b4aca38b2e9c9494685494ccb043ecbd10bbd", "filename": "libgomp/libgomp.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/243fa4883cf6fccaaafddcc82e6b58843c82fb30/libgomp%2Flibgomp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/243fa4883cf6fccaaafddcc82e6b58843c82fb30/libgomp%2Flibgomp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.texi?ref=243fa4883cf6fccaaafddcc82e6b58843c82fb30", "patch": "@@ -4454,7 +4454,7 @@ The implementation remark:\n @item I/O within OpenMP target regions and OpenACC parallel/kernels is supported\n       using the C library @code{printf} functions and the Fortran\n       @code{print}/@code{write} statements.\n-@item Reverse offload (i.e. @code{target} regions with\n+@item Reverse offload regions (i.e. @code{target} regions with\n       @code{device(ancestor:1)}) are processed serially per @code{target} region\n       such that the next reverse offload region is only executed after the previous\n       one returned."}]}