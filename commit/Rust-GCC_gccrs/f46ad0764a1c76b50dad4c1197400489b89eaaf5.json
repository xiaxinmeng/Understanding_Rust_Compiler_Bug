{"sha": "f46ad0764a1c76b50dad4c1197400489b89eaaf5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQ2YWQwNzY0YTFjNzZiNTBkYWQ0YzExOTc0MDA0ODliODllYWFmNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2000-07-03T18:28:34Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2000-07-03T18:28:34Z"}, "message": "builtins.c (get_memory_rtx): Always put into alias set 0.\n\n\t* builtins.c (get_memory_rtx): Always put into alias set 0.\n\n\t* gcc.c-torture/execute/20000703-1.c: New test.\n\nFrom-SVN: r34849", "tree": {"sha": "5794ba7fdb3500e5409b0c012d1d1ab6d06ef2d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5794ba7fdb3500e5409b0c012d1d1ab6d06ef2d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f46ad0764a1c76b50dad4c1197400489b89eaaf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f46ad0764a1c76b50dad4c1197400489b89eaaf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f46ad0764a1c76b50dad4c1197400489b89eaaf5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f46ad0764a1c76b50dad4c1197400489b89eaaf5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9dc79c6f4747cc020280f66605049387b67061fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dc79c6f4747cc020280f66605049387b67061fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dc79c6f4747cc020280f66605049387b67061fe"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "9dbde733a0a878a0075071006882bae428228835", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f46ad0764a1c76b50dad4c1197400489b89eaaf5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f46ad0764a1c76b50dad4c1197400489b89eaaf5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f46ad0764a1c76b50dad4c1197400489b89eaaf5", "patch": "@@ -1,3 +1,7 @@\n+2000-07-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* builtins.c (get_memory_rtx): Always put into alias set 0.\n+\n 2000-07-03  Nick Clifton  <nickc@cygnus.com>\n \n \t* config/arm/arm.md: Fix post increment and pre increment"}, {"sha": "56e6c265caff85ed1f30620638dd0298751c7ca0", "filename": "gcc/builtins.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f46ad0764a1c76b50dad4c1197400489b89eaaf5/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f46ad0764a1c76b50dad4c1197400489b89eaaf5/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=f46ad0764a1c76b50dad4c1197400489b89eaaf5", "patch": "@@ -558,6 +558,9 @@ get_memory_rtx (exp)\n     return mem;\n \n   set_mem_attributes (mem, exp, 0);\n+\n+  /* memcpy, memset and other builtin stringops can alias with anything. */\n+  MEM_ALIAS_SET (mem) = 0;\n   return mem;\n }\n \f"}, {"sha": "283c2b52f07d3848d01bc7fe83025d376db39582", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f46ad0764a1c76b50dad4c1197400489b89eaaf5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f46ad0764a1c76b50dad4c1197400489b89eaaf5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f46ad0764a1c76b50dad4c1197400489b89eaaf5", "patch": "@@ -1,3 +1,7 @@\n+2000-07-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.c-torture/execute/20000703-1.c: New test.\n+\n 2000-07-03  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.old-deja/g++.pt (lookup10.C): New test."}, {"sha": "55bdf74df227f8730a7203ed1b0ec62fae59b0aa", "filename": "gcc/testsuite/gcc.c-torture/execute/20000703-1.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f46ad0764a1c76b50dad4c1197400489b89eaaf5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20000703-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f46ad0764a1c76b50dad4c1197400489b89eaaf5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20000703-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20000703-1.c?ref=f46ad0764a1c76b50dad4c1197400489b89eaaf5", "patch": "@@ -0,0 +1,39 @@\n+void abort(void);\n+void exit(int);\n+struct baz \n+{\n+  char a[17];\n+  char b[3];\n+  unsigned int c;\n+  unsigned int d;\n+};\n+\n+void foo(struct baz *p, unsigned int c, unsigned int d)\n+{\n+  __builtin_memcpy (p->b, \"abc\", 3);\n+  p->c = c;\n+  p->d = d;\n+}\n+\n+void bar(struct baz *p, unsigned int c, unsigned int d)\n+{\n+  ({ void *s = (p);\n+     __builtin_memset (s, '\\0', sizeof (struct baz));\n+     s; });\n+  __builtin_memcpy (p->a, \"01234567890123456\", 17);\n+  __builtin_memcpy (p->b, \"abc\", 3);\n+  p->c = c;\n+  p->d = d;\n+}\n+\n+int main()\n+{\n+  struct baz p;\n+  foo(&p, 71, 18);\n+  if (p.c != 71 || p.d != 18)\n+    abort();\n+  bar(&p, 59, 26);\n+  if (p.c != 59 || p.d != 26)\n+    abort();\n+  exit(0);\n+}"}]}