{"sha": "85ff4ec64932ebee408be67a815011337e31e66b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVmZjRlYzY0OTMyZWJlZTQwOGJlNjdhODE1MDExMzM3ZTMxZTY2Yg==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2013-09-02T09:58:41Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2013-09-02T09:58:41Z"}, "message": "tree-ssa-loop-ivopts.c (set_autoinc_for_original_candidates): Find auto-increment use both before and after candidate.\n\n\n\t* tree-ssa-loop-ivopts.c (set_autoinc_for_original_candidates):\n\tFind auto-increment use both before and after candidate.\n\n\t* gcc.target/arm/ivopts-orig_biv-inc.c: New testcase.\n\nFrom-SVN: r202164", "tree": {"sha": "9f83f99cc963362955b47f3ec80e0ed004f16b2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f83f99cc963362955b47f3ec80e0ed004f16b2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85ff4ec64932ebee408be67a815011337e31e66b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85ff4ec64932ebee408be67a815011337e31e66b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85ff4ec64932ebee408be67a815011337e31e66b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85ff4ec64932ebee408be67a815011337e31e66b/comments", "author": null, "committer": null, "parents": [{"sha": "fde6f97e082794374ec8000e7625f9d1c20dbcb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fde6f97e082794374ec8000e7625f9d1c20dbcb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fde6f97e082794374ec8000e7625f9d1c20dbcb2"}], "stats": {"total": 58, "additions": 50, "deletions": 8}, "files": [{"sha": "5b3126636d9a67bac44a4b4630efce732a0be47b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff4ec64932ebee408be67a815011337e31e66b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff4ec64932ebee408be67a815011337e31e66b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=85ff4ec64932ebee408be67a815011337e31e66b", "patch": "@@ -1,3 +1,8 @@\n+2013-09-02  Bin Cheng  <bin.cheng@arm.com>\n+\n+\t* tree-ssa-loop-ivopts.c (set_autoinc_for_original_candidates):\n+\tFind auto-increment use both before and after candidate.\n+\n 2013-09-02  Marek Polacek  <polacek@redhat.com>\n \n \t* Makefile.in (ubsan.o): Add $(TM_P_H) dependency."}, {"sha": "b74effc240aaea5761abad27dae605721f8e1503", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff4ec64932ebee408be67a815011337e31e66b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff4ec64932ebee408be67a815011337e31e66b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=85ff4ec64932ebee408be67a815011337e31e66b", "patch": "@@ -1,3 +1,7 @@\n+2013-09-02  Bin Cheng  <bin.cheng@arm.com>\n+\n+\t* gcc.target/arm/ivopts-orig_biv-inc.c: New testcase.\n+\n 2013-09-02  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/21682, implement DR 565"}, {"sha": "f466ff35f894f2567272b5f2c53119f0605a2e7b", "filename": "gcc/testsuite/gcc.target/arm/ivopts-orig_biv-inc.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff4ec64932ebee408be67a815011337e31e66b/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fivopts-orig_biv-inc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff4ec64932ebee408be67a815011337e31e66b/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fivopts-orig_biv-inc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fivopts-orig_biv-inc.c?ref=85ff4ec64932ebee408be67a815011337e31e66b", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-ivopts-details\" } */\n+/* { dg-skip-if \"\" { arm_thumb1 } } */\n+\n+extern char *__ctype_ptr__;\n+\n+unsigned char * foo(unsigned char *ReadPtr)\n+{\n+\n+ unsigned char c;\n+\n+ while (!(((__ctype_ptr__+sizeof(\"\"[*ReadPtr]))[(int)(*ReadPtr)])&04) == (!(0)))\n+  ReadPtr++;\n+\n+ return ReadPtr;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"original biv\" 2 \"ivopts\"} } */\n+/* { dg-final { cleanup-tree-dump \"ivopts\" } } */"}, {"sha": "c45f3167f2f4e3b295effc98f5a110fa40c14bc7", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 22, "deletions": 8, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ff4ec64932ebee408be67a815011337e31e66b/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ff4ec64932ebee408be67a815011337e31e66b/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=85ff4ec64932ebee408be67a815011337e31e66b", "patch": "@@ -4876,22 +4876,36 @@ set_autoinc_for_original_candidates (struct ivopts_data *data)\n   for (i = 0; i < n_iv_cands (data); i++)\n     {\n       struct iv_cand *cand = iv_cand (data, i);\n-      struct iv_use *closest = NULL;\n+      struct iv_use *closest_before = NULL;\n+      struct iv_use *closest_after = NULL;\n       if (cand->pos != IP_ORIGINAL)\n \tcontinue;\n+\n       for (j = 0; j < n_iv_uses (data); j++)\n \t{\n \t  struct iv_use *use = iv_use (data, j);\n \t  unsigned uid = gimple_uid (use->stmt);\n-\t  if (gimple_bb (use->stmt) != gimple_bb (cand->incremented_at)\n-\t      || uid > gimple_uid (cand->incremented_at))\n+\n+\t  if (gimple_bb (use->stmt) != gimple_bb (cand->incremented_at))\n \t    continue;\n-\t  if (closest == NULL || uid > gimple_uid (closest->stmt))\n-\t    closest = use;\n+\n+\t  if (uid < gimple_uid (cand->incremented_at)\n+\t      && (closest_before == NULL\n+\t\t  || uid > gimple_uid (closest_before->stmt)))\n+\t    closest_before = use;\n+\n+\t  if (uid > gimple_uid (cand->incremented_at)\n+\t      && (closest_after == NULL\n+\t\t  || uid < gimple_uid (closest_after->stmt)))\n+\t    closest_after = use;\n \t}\n-      if (closest == NULL || !autoinc_possible_for_pair (data, closest, cand))\n-\tcontinue;\n-      cand->ainc_use = closest;\n+\n+      if (closest_before != NULL\n+\t  && autoinc_possible_for_pair (data, closest_before, cand))\n+\tcand->ainc_use = closest_before;\n+      else if (closest_after != NULL\n+\t       && autoinc_possible_for_pair (data, closest_after, cand))\n+\tcand->ainc_use = closest_after;\n     }\n }\n "}]}