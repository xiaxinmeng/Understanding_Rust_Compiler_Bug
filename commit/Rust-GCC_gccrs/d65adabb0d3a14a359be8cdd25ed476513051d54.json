{"sha": "d65adabb0d3a14a359be8cdd25ed476513051d54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY1YWRhYmIwZDNhMTRhMzU5YmU4Y2RkMjVlZDQ3NjUxMzA1MWQ1NA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-05-25T01:12:29Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-05-25T01:12:29Z"}, "message": "auto-profile.c (afdo_propagate): Adjust T const cast to avoid warning.\n\n\t* auto-profile.c (afdo_propagate): Adjust T const cast to avoid\n\twarning.\n\nFrom-SVN: r248444", "tree": {"sha": "6329dfd3fe954ca1f790d54c9836c5b7ad33838c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6329dfd3fe954ca1f790d54c9836c5b7ad33838c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d65adabb0d3a14a359be8cdd25ed476513051d54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d65adabb0d3a14a359be8cdd25ed476513051d54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d65adabb0d3a14a359be8cdd25ed476513051d54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d65adabb0d3a14a359be8cdd25ed476513051d54/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "be136b5c889ca5988c11c7bc5eaffb29ec6249b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be136b5c889ca5988c11c7bc5eaffb29ec6249b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be136b5c889ca5988c11c7bc5eaffb29ec6249b5"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "48155c41b59b500d5ad4fa74217969acd32b820e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d65adabb0d3a14a359be8cdd25ed476513051d54/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d65adabb0d3a14a359be8cdd25ed476513051d54/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d65adabb0d3a14a359be8cdd25ed476513051d54", "patch": "@@ -1,3 +1,8 @@\n+2017-05-24  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* auto-profile.c (afdo_propagate): Adjust T const cast to avoid\n+\twarning.\n+\n 2017-05-24  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/powerpcspe: New port.  Files are copied from the rs6000"}, {"sha": "ff5714a6cbcc9b8b1a5475ee14cdbd760c3d4953", "filename": "gcc/auto-profile.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d65adabb0d3a14a359be8cdd25ed476513051d54/gcc%2Fauto-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d65adabb0d3a14a359be8cdd25ed476513051d54/gcc%2Fauto-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fauto-profile.c?ref=d65adabb0d3a14a359be8cdd25ed476513051d54", "patch": "@@ -1377,7 +1377,7 @@ afdo_propagate (bb_set *annotated_bb, edge_set *annotated_edge)\n   FOR_ALL_BB_FN (bb, cfun)\n   {\n     bb->count = ((basic_block)bb->aux)->count;\n-    if (is_bb_annotated ((const basic_block)bb->aux, *annotated_bb))\n+    if (is_bb_annotated ((basic_block)bb->aux, *annotated_bb))\n       set_bb_annotated (bb, annotated_bb);\n   }\n "}]}