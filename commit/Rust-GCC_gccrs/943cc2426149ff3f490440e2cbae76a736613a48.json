{"sha": "943cc2426149ff3f490440e2cbae76a736613a48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQzY2MyNDI2MTQ5ZmYzZjQ5MDQ0MGUyY2JhZTc2YTczNjYxM2E0OA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-09-07T18:54:27Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-09-07T18:54:27Z"}, "message": "(expand_binop): Must always widen second operand of shift.\n\nFrom-SVN: r5276", "tree": {"sha": "e7d5d60bfede44032d4a54cd870f255c7223f331", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7d5d60bfede44032d4a54cd870f255c7223f331"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/943cc2426149ff3f490440e2cbae76a736613a48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/943cc2426149ff3f490440e2cbae76a736613a48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/943cc2426149ff3f490440e2cbae76a736613a48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/943cc2426149ff3f490440e2cbae76a736613a48/comments", "author": null, "committer": null, "parents": [{"sha": "9e1835de3e7f24dd9c1ccfaf96f43bbf914e1ee8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e1835de3e7f24dd9c1ccfaf96f43bbf914e1ee8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e1835de3e7f24dd9c1ccfaf96f43bbf914e1ee8"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "801b9456aee283e183e5d7844f152f970b337fcb", "filename": "gcc/optabs.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943cc2426149ff3f490440e2cbae76a736613a48/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943cc2426149ff3f490440e2cbae76a736613a48/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=943cc2426149ff3f490440e2cbae76a736613a48", "patch": "@@ -526,7 +526,12 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n \t      no_extend = 1;\n \n \t    xop0 = widen_operand (xop0, wider_mode, unsignedp, no_extend);\n-\t    xop1 = widen_operand (xop1, wider_mode, unsignedp, no_extend);\n+\n+\t    /* The second operand of a shift must always be extended.  */\n+\t    xop1 = widen_operand (xop1, wider_mode, unsignedp,\n+\t\t\t\t  no_extend && binoptab != ashl_optab\n+\t\t\t\t  && binoptab != lshl_optab);\n+\n \t    temp = expand_binop (wider_mode, binoptab, xop0, xop1, NULL_RTX,\n \t\t\t\t unsignedp, OPTAB_DIRECT);\n \t    if (temp)\n@@ -1419,7 +1424,11 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n \t\tno_extend = 1;\n \n \t      xop0 = widen_operand (xop0, wider_mode, unsignedp, no_extend);\n-\t      xop1 = widen_operand (xop1, wider_mode, unsignedp, no_extend);\n+\n+\t      /* The second operand of a shift must always be extended.  */\n+\t      xop1 = widen_operand (xop1, wider_mode, unsignedp,\n+\t\t\t\t    no_extend && binoptab != ashl_optab\n+\t\t\t\t    && binoptab != lshl_optab);\n \n \t      temp = expand_binop (wider_mode, binoptab, xop0, xop1, NULL_RTX,\n \t\t\t\t   unsignedp, methods);"}]}