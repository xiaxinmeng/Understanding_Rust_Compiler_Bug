{"sha": "b88bd5e0ca120822fc2fbac03a903c5b2efdde06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg4YmQ1ZTBjYTEyMDgyMmZjMmZiYWMwM2E5MDNjNWIyZWZkZGUwNg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2016-07-12T16:25:10Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2016-07-12T16:25:10Z"}, "message": "arm.c (arm_option_override): Set MASK_SINGLE_PIC_BASE when -mno-pic-data-is-text-relative is in effect...\n\n\tgcc/\n\t* config/arm/arm.c (arm_option_override): Set MASK_SINGLE_PIC_BASE\n\twhen -mno-pic-data-is-text-relative is in effect, by default.\n\t* doc/invoke.texi (mpic-data-is-text-relative): Document new\n\tbehavior and clarify.\n\n\tgcc/testsuite/\n\t* gcc.target/arm/data-rel-1.c: New.\n\t* gcc.target/arm/data-rel-2.c: New.\n\t* gcc.target/arm/data-rel-3.c: New.\n\nFrom-SVN: r238254", "tree": {"sha": "eb3e8a9c9be49a7d0db808a3534a1b8d2e6aaa5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb3e8a9c9be49a7d0db808a3534a1b8d2e6aaa5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b88bd5e0ca120822fc2fbac03a903c5b2efdde06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b88bd5e0ca120822fc2fbac03a903c5b2efdde06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b88bd5e0ca120822fc2fbac03a903c5b2efdde06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b88bd5e0ca120822fc2fbac03a903c5b2efdde06/comments", "author": null, "committer": null, "parents": [{"sha": "f906f5edd3420d363eb442fe4b82eaa63131b978", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f906f5edd3420d363eb442fe4b82eaa63131b978", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f906f5edd3420d363eb442fe4b82eaa63131b978"}], "stats": {"total": 61, "additions": 54, "deletions": 7}, "files": [{"sha": "6af0d365fcefbae96a7630d88e342decf5dacdc7", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b88bd5e0ca120822fc2fbac03a903c5b2efdde06/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b88bd5e0ca120822fc2fbac03a903c5b2efdde06/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=b88bd5e0ca120822fc2fbac03a903c5b2efdde06", "patch": "@@ -3346,6 +3346,20 @@ arm_option_override (void)\n \t}\n     }\n \n+  if (TARGET_VXWORKS_RTP)\n+    {\n+      if (!global_options_set.x_arm_pic_data_is_text_relative)\n+\tarm_pic_data_is_text_relative = 0;\n+    }\n+  else if (flag_pic\n+\t   && !arm_pic_data_is_text_relative\n+\t   && !(global_options_set.x_target_flags & MASK_SINGLE_PIC_BASE))\n+    /* When text & data segments don't have a fixed displacement, the\n+       intended use is with a single, read only, pic base register.\n+       Unless the user explicitly requested not to do that, set\n+       it.  */\n+    target_flags |= MASK_SINGLE_PIC_BASE;\n+\n   /* If stack checking is disabled, we can use r10 as the PIC register,\n      which keeps r9 available.  The EABI specifies r9 as the PIC register.  */\n   if (flag_pic && TARGET_SINGLE_PIC_BASE)\n@@ -3377,10 +3391,6 @@ arm_option_override (void)\n \tarm_pic_register = pic_register;\n     }\n \n-  if (TARGET_VXWORKS_RTP\n-      && !global_options_set.x_arm_pic_data_is_text_relative)\n-    arm_pic_data_is_text_relative = 0;\n-\n   /* Enable -mfix-cortex-m3-ldrd by default for Cortex-M3 cores.  */\n   if (fix_cm3_ldrd == 2)\n     {"}, {"sha": "9a4db388a3b3dc644b0c555f1a1121cef14ef2df", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b88bd5e0ca120822fc2fbac03a903c5b2efdde06/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b88bd5e0ca120822fc2fbac03a903c5b2efdde06/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=b88bd5e0ca120822fc2fbac03a903c5b2efdde06", "patch": "@@ -14369,9 +14369,12 @@ otherwise the default is @samp{R10}.\n \n @item -mpic-data-is-text-relative\n @opindex mpic-data-is-text-relative\n-Assume that each data segments are relative to text segment at load time.\n-Therefore, it permits addressing data using PC-relative operations.\n-This option is on by default for targets other than VxWorks RTP.\n+Assume that the displacement between the text and data segments is fixed\n+at static link time.  This permits using PC-relative addressing\n+operations to access data known to be in the data segment.  For\n+non-VxWorks RTP targets, this option is enabled by default.  When\n+disabled on such targets, it will enable @option{-msingle-pic-base} by\n+default.\n \n @item -mpoke-function-name\n @opindex mpoke-function-name"}, {"sha": "d9d88f2e8db9540e645a043d2264d78d0b8198d2", "filename": "gcc/testsuite/gcc.target/arm/data-rel-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b88bd5e0ca120822fc2fbac03a903c5b2efdde06/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fdata-rel-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b88bd5e0ca120822fc2fbac03a903c5b2efdde06/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fdata-rel-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fdata-rel-1.c?ref=b88bd5e0ca120822fc2fbac03a903c5b2efdde06", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-options \"-fPIC -mno-pic-data-is-text-relative\" } */\n+/* { dg-final { scan-assembler-not \"j-\\\\(.LPIC\"  } } */\n+/* { dg-final { scan-assembler-not \"_GLOBAL_OFFSET_TABLE_-\\\\(.LPIC\" } } */\n+/* { dg-final { scan-assembler \"j\\\\(GOT\\\\)\" } } */\n+/* { dg-final { scan-assembler \"(ldr|mov)\\tr\\[0-9\\]+, \\\\\\[?r9\" } } */\n+\n+static int j;\n+\n+int *Foo ()\n+{\n+  return &j;\n+}"}, {"sha": "6ba47d677a435bef762fec9b8eac794321c706a2", "filename": "gcc/testsuite/gcc.target/arm/data-rel-2.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b88bd5e0ca120822fc2fbac03a903c5b2efdde06/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fdata-rel-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b88bd5e0ca120822fc2fbac03a903c5b2efdde06/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fdata-rel-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fdata-rel-2.c?ref=b88bd5e0ca120822fc2fbac03a903c5b2efdde06", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-options \"-fPIC -mno-pic-data-is-text-relative -mno-single-pic-base\" } */\n+/* { dg-final { scan-assembler-not \"j-\\\\(.LPIC\"  } } */\n+/* { dg-final { scan-assembler \"_GLOBAL_OFFSET_TABLE_-\\\\(.LPIC\" } } */\n+/* { dg-final { scan-assembler \"j\\\\(GOT\\\\)\" } } */\n+\n+static int j;\n+\n+int *Foo ()\n+{\n+  return &j;\n+}"}, {"sha": "2ce1e6607c5244d8971ac967549644005bf46b37", "filename": "gcc/testsuite/gcc.target/arm/data-rel-3.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b88bd5e0ca120822fc2fbac03a903c5b2efdde06/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fdata-rel-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b88bd5e0ca120822fc2fbac03a903c5b2efdde06/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fdata-rel-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fdata-rel-3.c?ref=b88bd5e0ca120822fc2fbac03a903c5b2efdde06", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-options \"-fPIC -mpic-data-is-text-relative\" } */\n+/* { dg-final { scan-assembler \"j-\\\\(.LPIC\"  } } */\n+/* { dg-final { scan-assembler-not \"_GLOBAL_OFFSET_TABLE_-\\\\(.LPIC\" } } */\n+/* { dg-final { scan-assembler-not \"j\\\\(GOT\\\\)\" } } */\n+\n+static int j;\n+\n+int *Foo ()\n+{\n+  return &j;\n+}"}]}