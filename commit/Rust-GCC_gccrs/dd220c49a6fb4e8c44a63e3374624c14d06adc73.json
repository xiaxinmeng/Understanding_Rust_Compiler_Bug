{"sha": "dd220c49a6fb4e8c44a63e3374624c14d06adc73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQyMjBjNDlhNmZiNGU4YzQ0YTYzZTMzNzQ2MjRjMTRkMDZhZGM3Mw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2003-07-03T18:22:27Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2003-07-03T18:22:27Z"}, "message": "Makefile.in: Use dependency variables in lieu of explicit files throughout.\n\n\t* Makefile.in: Use dependency variables in lieu of explicit\n\tfiles throughout.\n\nFrom-SVN: r68896", "tree": {"sha": "f5df0d83d0ea840d014c021650a10e72f8ddc764", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5df0d83d0ea840d014c021650a10e72f8ddc764"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd220c49a6fb4e8c44a63e3374624c14d06adc73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd220c49a6fb4e8c44a63e3374624c14d06adc73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd220c49a6fb4e8c44a63e3374624c14d06adc73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd220c49a6fb4e8c44a63e3374624c14d06adc73/comments", "author": null, "committer": null, "parents": [{"sha": "8d245821a2f3c28b71bf0958c90cf7fed6c9871d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d245821a2f3c28b71bf0958c90cf7fed6c9871d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d245821a2f3c28b71bf0958c90cf7fed6c9871d"}], "stats": {"total": 55, "additions": 30, "deletions": 25}, "files": [{"sha": "a614b50711443d456514f8b4b43c258039de6adc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd220c49a6fb4e8c44a63e3374624c14d06adc73/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd220c49a6fb4e8c44a63e3374624c14d06adc73/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dd220c49a6fb4e8c44a63e3374624c14d06adc73", "patch": "@@ -1,3 +1,8 @@\n+2003-07-03  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in: Use dependency variables in lieu of explicit\n+\tfiles throughout.\n+\n 2003-07-03  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* rtl.h (ECF_*, flags_from_decl_or_type): Move from here..."}, {"sha": "2d765531ff40772472667144f0c3c0db46521562", "filename": "gcc/Makefile.in", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd220c49a6fb4e8c44a63e3374624c14d06adc73/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd220c49a6fb4e8c44a63e3374624c14d06adc73/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=dd220c49a6fb4e8c44a63e3374624c14d06adc73", "patch": "@@ -1266,16 +1266,16 @@ c-decl.o : c-decl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n c-typeck.o : c-typeck.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_TREE_H) \\\n     $(TARGET_H) flags.h intl.h output.h $(EXPR_H) $(RTL_H) toplev.h $(TM_P_H)\n c-lang.o : c-lang.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_TREE_H) \\\n-    $(GGC_H) langhooks.h $(LANGHOOKS_DEF_H) c-common.h gtype-c.h\n+    $(GGC_H) langhooks.h $(LANGHOOKS_DEF_H) $(C_COMMON_H) gtype-c.h\n c-lex.o : c-lex.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-    $(RTL_H) debug.h $(C_TREE_H) c-common.h real.h c-incpath.h cppdefault.h \\\n+    $(RTL_H) debug.h $(C_TREE_H) $(C_COMMON_H) real.h c-incpath.h cppdefault.h \\\n     c-pragma.h input.h intl.h flags.h toplev.h output.h \\\n     $(CPPLIB_H) $(EXPR_H) $(TM_P_H)\n c-ppoutput.o : c-ppoutput.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-    c-common.h $(TREE_H) $(CPPLIB_H) cpphash.h $(TM_P_H) c-pragma.h\n+    $(C_COMMON_H) $(TREE_H) $(CPPLIB_H) cpphash.h $(TM_P_H) c-pragma.h\n c-objc-common.o : c-objc-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-    $(C_TREE_H) $(RTL_H) insn-config.h integrate.h $(EXPR_H) $(C_TREE_H) \\\n-    flags.h toplev.h tree-inline.h diagnostic.h integrate.h $(VARRAY_H) \\\n+    $(C_TREE_H) $(RTL_H) insn-config.h $(INTEGRATE_H) $(EXPR_H) $(C_TREE_H) \\\n+    flags.h toplev.h tree-inline.h diagnostic.h $(VARRAY_H) \\\n     langhooks.h $(GGC_H) gt-c-objc-common.h $(TARGET_H) cgraph.h\n c-aux-info.o : c-aux-info.c  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n     $(C_TREE_H) flags.h toplev.h\n@@ -1312,13 +1312,13 @@ c-common.o : c-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n \t$(OBSTACK_H) $(C_COMMON_H) flags.h toplev.h output.h c-pragma.h intl.h \\\n \t$(GGC_H) $(EXPR_H) $(TM_P_H) builtin-types.def builtin-attrs.def \\\n \tdiagnostic.h gt-c-common.h langhooks.h varray.h $(RTL_H) $(TARGET_H) \\\n-\tc-tree.h\n+\t$(C_TREE_H)\n c-pretty-print.o : c-pretty-print.c c-pretty-print.h pretty-print.h \\\n \t$(C_COMMON_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) real.h\n \n c-opts.o : c-opts.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n         c-pragma.h flags.h toplev.h langhooks.h tree-inline.h diagnostic.h \\\n-\tintl.h debug.h $(C_COMMON_H) opts.h options.h params.h\n+\tintl.h debug.h $(C_COMMON_H) opts.h options.h $(PARAMS_H)\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$< $(OUTPUT_OPTION) @TARGET_SYSTEM_ROOT_DEFINE@\n \n@@ -1343,7 +1343,7 @@ c-dump.o : c-dump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n \t$(C_TREE_H) tree-dump.h\n \n c-pch.o : c-pch.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(CPPLIB_H) $(TREE_H) \\\n-\tc-common.h output.h toplev.h c-pragma.h $(GGC_H) debug.h langhooks.h \\\n+\t$(C_COMMON_H) output.h toplev.h c-pragma.h $(GGC_H) debug.h langhooks.h \\\n \tflags.h\n \n # Language-independent files.\n@@ -1459,7 +1459,7 @@ convert.o: convert.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) flags\n    convert.h toplev.h langhooks.h\n \n langhooks.o : langhooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) toplev.h \\\n-   tree-inline.h $(RTL_H) insn-config.h integrate.h langhooks.h \\\n+   tree-inline.h $(RTL_H) insn-config.h $(INTEGRATE_H) langhooks.h \\\n    $(LANGHOOKS_DEF_H) flags.h\n tree.o : tree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) flags.h function.h \\\n    toplev.h $(GGC_H) $(HASHTAB_H) $(TARGET_H) output.h $(TM_P_H) langhooks.h \\\n@@ -1468,7 +1468,7 @@ tree-dump.o: tree-dump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(C_TREE_H) flags.h langhooks.h toplev.h output.h c-pragma.h $(RTL_H) $(GGC_H) \\\n    $(EXPR_H) $(SPLAY_TREE_H) tree-dump.h\n tree-inline.o : tree-inline.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   $(RTL_H) expr.h flags.h params.h input.h insn-config.h $(INTEGRATE_H) \\\n+   $(RTL_H) $(EXPR_H) flags.h $(PARAMS_H) input.h insn-config.h $(INTEGRATE_H) \\\n    $(VARRAY_H) $(HASHTAB_H) $(SPLAY_TREE_H) toplev.h langhooks.h \\\n    $(C_COMMON_H) tree-inline.h cgraph.h\n print-tree.o : print-tree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n@@ -1528,16 +1528,16 @@ stmt.o : stmt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) f\n    $(LOOP_H) $(RECOG_H) toplev.h output.h varray.h $(GGC_H) $(TM_P_H) \\\n    langhooks.h $(PREDICT_H) gt-stmt.h $(OPTABS_H)\n except.o : except.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n-   flags.h except.h function.h $(EXPR_H) libfuncs.h integrate.h langhooks.h \\\n+   flags.h except.h function.h $(EXPR_H) libfuncs.h $(INTEGRATE_H) langhooks.h \\\n    insn-config.h hard-reg-set.h $(BASIC_BLOCK_H) output.h \\\n    dwarf2asm.h dwarf2out.h toplev.h $(HASHTAB_H) intl.h $(GGC_H) \\\n    gt-except.h\n expr.o : expr.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) flags.h \\\n-   function.h $(REGS_H) $(EXPR_H) $(OPTABS_H) libfuncs.h insn-attr.h insn-config.h \\\n+   function.h $(REGS_H) $(EXPR_H) $(OPTABS_H) libfuncs.h $(INSN_ATTR_H) insn-config.h \\\n    $(RECOG_H) output.h typeclass.h hard-reg-set.h toplev.h hard-reg-set.h \\\n    except.h reload.h $(GGC_H) langhooks.h intl.h $(TM_P_H) real.h\n dojump.o : dojump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n-   flags.h function.h $(EXPR_H) $(OPTABS_H) insn-attr.h insn-config.h \\\n+   flags.h function.h $(EXPR_H) $(OPTABS_H) $(INSN_ATTR_H) insn-config.h \\\n    langhooks.h\n builtins.o : builtins.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H)\\\n    flags.h $(TARGET_H) function.h $(REGS_H) $(EXPR_H) $(OPTABS_H) insn-config.h \\\n@@ -1551,7 +1551,7 @@ expmed.o : expmed.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_\n    toplev.h $(TM_P_H) langhooks.h\n explow.o : explow.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n    flags.h hard-reg-set.h insn-config.h $(EXPR_H) $(OPTABS_H) $(RECOG_H) \\\n-   toplev.h function.h ggc.h $(TM_P_H) gt-explow.h\n+   toplev.h function.h $(GGC_H) $(TM_P_H) gt-explow.h\n optabs.o : optabs.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n    flags.h insn-config.h $(EXPR_H) $(OPTABS_H) libfuncs.h $(RECOG_H) reload.h \\\n    toplev.h $(GGC_H) real.h $(TM_P_H) except.h gt-optabs.h $(BASIC_BLOCK_H)\n@@ -1580,7 +1580,7 @@ xcoffout.o : xcoffout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(\n    xcoffout.h flags.h toplev.h output.h dbxout.h $(GGC_H) $(TARGET_H)\n emit-rtl.o : emit-rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n    flags.h function.h $(REGS_H) insn-config.h $(RECOG_H) real.h $(GGC_H) \\\n-   $(EXPR_H) $(srcdir)/../include/obstack.h hard-reg-set.h bitmap.h toplev.h \\\n+   $(EXPR_H) $(OBSTACK_H) hard-reg-set.h bitmap.h toplev.h \\\n    $(HASHTAB_H) $(TM_P_H) debug.h langhooks.h gt-emit-rtl.h\n real.o : real.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) toplev.h $(TM_P_H)\n integrate.o : integrate.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n@@ -1596,9 +1596,9 @@ simplify-rtx.o : simplify-rtx.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RT\n    $(REGS_H) hard-reg-set.h flags.h real.h insn-config.h $(RECOG_H) $(EXPR_H) toplev.h \\\n    output.h function.h $(GGC_H) $(OBSTACK_H) $(TM_P_H) $(TREE_H) $(TARGET_H)\n cgraph.o : cgraph.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   langhooks.h toplev.h flags.h ggc.h  $(TARGET_H) cgraph.h gt-cgraph.h output.h\n+   langhooks.h toplev.h flags.h $(GGC_H)  $(TARGET_H) cgraph.h gt-cgraph.h output.h\n cgraphunit.o : cgraphunit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   langhooks.h tree-inline.h toplev.h flags.h ggc.h  $(TARGET_H) cgraph.h\n+   langhooks.h tree-inline.h toplev.h flags.h $(GGC_H)  $(TARGET_H) cgraph.h\n coverage.o : coverage.c gcov-io.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(RTL_H) $(TREE_H) flags.h output.h $(REGS_H) $(EXPR_H) function.h \\\n    toplev.h $(GGC_H) $(TARGET_H) langhooks.h $(COVERAGE_H) libfuncs.h \\\n@@ -1611,7 +1611,7 @@ cse.o : cse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n    output.h function.h $(BASIC_BLOCK_H) $(GGC_H) $(TM_P_H) $(TIMEVAR_H) \\\n    except.h $(TARGET_H) $(PARAMS_H)\n gcse.o : gcse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n-   hard-reg-set.h flags.h real.h insn-config.h ggc.h $(RECOG_H) $(EXPR_H) \\\n+   hard-reg-set.h flags.h real.h insn-config.h $(GGC_H) $(RECOG_H) $(EXPR_H) \\\n    $(BASIC_BLOCK_H) function.h output.h toplev.h $(TM_P_H) $(PARAMS_H) except.h gt-gcse.h\n sibcall.o : sibcall.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n    function.h hard-reg-set.h flags.h insn-config.h $(RECOG_H) $(BASIC_BLOCK_H)\n@@ -1626,7 +1626,7 @@ ssa.o : ssa.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) var\n    $(BASIC_BLOCK_H) output.h ssa.h\n ssa-dce.o : ssa-dce.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) hard-reg-set.h \\\n    $(BASIC_BLOCK_H) ssa.h insn-config.h $(RECOG_H) output.h\n-ssa-ccp.o : ssa-ccp.c $(CONFIG_H) system.h coretypes.h $(TM_H) $(RTL_H) hard-reg-set.h \\\n+ssa-ccp.o : ssa-ccp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) hard-reg-set.h \\\n     $(BASIC_BLOCK_H) ssa.h insn-config.h $(RECOG_H) output.h \\\n     errors.h $(GGC_H) df.h function.h\n df.o : df.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n@@ -1682,10 +1682,10 @@ loop-init.o : loop-init.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h cfgloop.h cfglayout.h \\\n    coretypes.h $(TM_H)\n loop-unswitch.o : loop-unswitch.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TM_H) \\\n-   $(BASIC_BLOCK_H) hard-reg-set.h cfgloop.h cfglayout.h params.h \\\n+   $(BASIC_BLOCK_H) hard-reg-set.h cfgloop.h cfglayout.h $(PARAMS_H) \\\n    output.h $(EXPR_H) coretypes.h $(TM_H)\n loop-unroll.o: loop-unroll.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TM_H) \\\n-   $(BASIC_BLOCK_H) hard-reg-set.h cfgloop.h cfglayout.h params.h \\\n+   $(BASIC_BLOCK_H) hard-reg-set.h cfgloop.h cfglayout.h $(PARAMS_H) \\\n    output.h $(EXPR_H) coretypes.h $(TM_H)\n dominance.o : dominance.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    hard-reg-set.h $(BASIC_BLOCK_H) et-forest.h\n@@ -1707,18 +1707,18 @@ global.o : global.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) flags.h\n    toplev.h $(TM_P_H)\n varray.o : varray.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) varray.h $(GGC_H) errors.h\n ra.o : ra.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TM_P_H) insn-config.h \\\n-   $(RECOG_H) integrate.h function.h $(REGS_H) $(OBSTACK_H) hard-reg-set.h \\\n-   $(BASIC_BLOCK_H) df.h expr.h output.h toplev.h flags.h reload.h ra.h\n+   $(RECOG_H) $(INTEGRATE_H) function.h $(REGS_H) $(OBSTACK_H) hard-reg-set.h \\\n+   $(BASIC_BLOCK_H) df.h $(EXPR_H) output.h toplev.h flags.h reload.h ra.h\n ra-build.o : ra-build.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TM_P_H) \\\n    insn-config.h $(RECOG_H) function.h $(REGS_H) hard-reg-set.h \\\n-   $(BASIC_BLOCK_H) df.h output.h ggc.h ra.h gt-ra-build.h reload.h\n+   $(BASIC_BLOCK_H) df.h output.h $(GGC_H) ra.h gt-ra-build.h reload.h\n ra-colorize.o : ra-colorize.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n     $(TM_P_H) function.h $(REGS_H) hard-reg-set.h $(BASIC_BLOCK_H) df.h output.h ra.h\n ra-debug.o : ra-debug.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    insn-config.h $(RECOG_H) function.h hard-reg-set.h $(BASIC_BLOCK_H) df.h output.h \\\n    ra.h $(TM_P_H)\n ra-rewrite.o : ra-rewrite.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(TM_P_H) function.h $(REGS_H) hard-reg-set.h $(BASIC_BLOCK_H) df.h expr.h \\\n+   $(TM_P_H) function.h $(REGS_H) hard-reg-set.h $(BASIC_BLOCK_H) df.h $(EXPR_H) \\\n    output.h except.h ra.h reload.h insn-config.h\n reload.o : reload.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) flags.h output.h \\\n    $(EXPR_H) $(OPTABS_H) reload.h $(RECOG_H) hard-reg-set.h insn-config.h \\"}]}