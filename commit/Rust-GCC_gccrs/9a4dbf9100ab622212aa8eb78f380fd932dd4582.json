{"sha": "9a4dbf9100ab622212aa8eb78f380fd932dd4582", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE0ZGJmOTEwMGFiNjIyMjEyYWE4ZWI3OGYzODBmZDkzMmRkNDU4Mg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-03-21T08:26:05Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-03-21T08:26:05Z"}, "message": "Fix compile-time hog in MPX boundary checking (PR target/84988).\n\n2018-03-21  Martin Liska  <mliska@suse.cz>\n\n\tPR target/84988\n\t* tree-chkp.c (CHKP_ARRAY_MAX_CHECK_STEPS): Define a new macro.\n\t(chkp_find_bound_slots_1): Limit number of iterations.\n\nFrom-SVN: r258704", "tree": {"sha": "bc351f8884dfdde47c1054b71066d29ab71649bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc351f8884dfdde47c1054b71066d29ab71649bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a4dbf9100ab622212aa8eb78f380fd932dd4582", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a4dbf9100ab622212aa8eb78f380fd932dd4582", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a4dbf9100ab622212aa8eb78f380fd932dd4582", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a4dbf9100ab622212aa8eb78f380fd932dd4582/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1bdbef090299990b1fdef6323bb3daa48acf9349", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bdbef090299990b1fdef6323bb3daa48acf9349", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bdbef090299990b1fdef6323bb3daa48acf9349"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "62899c0e874379eb439ebe892d620b8eb16b0e30", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4dbf9100ab622212aa8eb78f380fd932dd4582/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4dbf9100ab622212aa8eb78f380fd932dd4582/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9a4dbf9100ab622212aa8eb78f380fd932dd4582", "patch": "@@ -1,3 +1,9 @@\n+2018-03-21  Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/84988\n+\t* tree-chkp.c (CHKP_ARRAY_MAX_CHECK_STEPS): Define a new macro.\n+\t(chkp_find_bound_slots_1): Limit number of iterations.\n+\n 2018-03-20  David H. Gutteridge  <dhgutteridge@sympatico.ca>\n \n \tPR target/84838"}, {"sha": "d10e6c404236dfbea3d47e8bc0ef7461a8919081", "filename": "gcc/tree-chkp.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4dbf9100ab622212aa8eb78f380fd932dd4582/gcc%2Ftree-chkp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4dbf9100ab622212aa8eb78f380fd932dd4582/gcc%2Ftree-chkp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chkp.c?ref=9a4dbf9100ab622212aa8eb78f380fd932dd4582", "patch": "@@ -1688,6 +1688,10 @@ chkp_find_bounds_for_elem (tree elem, tree *all_bounds,\n     }\n }\n \n+/* Maximum number of elements to check in an array.  */\n+\n+#define CHKP_ARRAY_MAX_CHECK_STEPS    4096\n+\n /* Fill HAVE_BOUND output bitmap with information about\n    bounds requred for object of type TYPE.\n \n@@ -1733,7 +1737,9 @@ chkp_find_bound_slots_1 (const_tree type, bitmap have_bound,\n \t  || integer_minus_onep (maxval))\n \treturn;\n \n-      for (cur = 0; cur <= TREE_INT_CST_LOW (maxval); cur++)\n+      for (cur = 0;\n+\t  cur <= MIN (CHKP_ARRAY_MAX_CHECK_STEPS, TREE_INT_CST_LOW (maxval));\n+\t  cur++)\n \tchkp_find_bound_slots_1 (etype, have_bound, offs + cur * esize);\n     }\n }"}]}