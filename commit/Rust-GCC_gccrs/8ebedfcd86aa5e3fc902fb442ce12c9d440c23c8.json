{"sha": "8ebedfcd86aa5e3fc902fb442ce12c9d440c23c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGViZWRmY2Q4NmFhNWUzZmM5MDJmYjQ0MmNlMTJjOWQ0NDBjMjNjOA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-11-06T08:35:27Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-11-06T10:10:23Z"}, "message": "tree-optimization/97732 - fix init of SLP induction vectorization\n\nThis PR exposes two issues - one that the vector builder treats\n&x as eligible for VECTOR_CST elements and one that SLP induction\nvectorization forgets to convert init elements to the vector\ncomponent type which makes a difference for pointer vs. integer.\n\n2020-11-06  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/97732\n\t* tree-vect-loop.c (vectorizable_induction): Convert the\n\tinit elements to the vector component type.\n\t* gimple-fold.c (gimple_build_vector): Use CONSTANT_CLASS_P\n\trather than TREE_CONSTANT to determine if elements are\n\teligible for VECTOR_CSTs.\n\n\t* gcc.dg/vect/bb-slp-pr97732.c: New testcase.", "tree": {"sha": "fc165f379cd0ebcd1c2f4097a8676a535e941f42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc165f379cd0ebcd1c2f4097a8676a535e941f42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ebedfcd86aa5e3fc902fb442ce12c9d440c23c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ebedfcd86aa5e3fc902fb442ce12c9d440c23c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ebedfcd86aa5e3fc902fb442ce12c9d440c23c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ebedfcd86aa5e3fc902fb442ce12c9d440c23c8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f11b1f9d155bcbd797d0cb06bee2825c70ba9dd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f11b1f9d155bcbd797d0cb06bee2825c70ba9dd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f11b1f9d155bcbd797d0cb06bee2825c70ba9dd4"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "ca38a31c3c21ea28d9050c03e64312843e9fa2f7", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ebedfcd86aa5e3fc902fb442ce12c9d440c23c8/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ebedfcd86aa5e3fc902fb442ce12c9d440c23c8/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=8ebedfcd86aa5e3fc902fb442ce12c9d440c23c8", "patch": "@@ -7855,7 +7855,7 @@ gimple_build_vector (gimple_seq *seq, location_t loc,\n   gcc_assert (builder->nelts_per_pattern () <= 2);\n   unsigned int encoded_nelts = builder->encoded_nelts ();\n   for (unsigned int i = 0; i < encoded_nelts; ++i)\n-    if (!TREE_CONSTANT ((*builder)[i]))\n+    if (!CONSTANT_CLASS_P ((*builder)[i]))\n       {\n \ttree type = builder->type ();\n \tunsigned int nelts = TYPE_VECTOR_SUBPARTS (type).to_constant ();"}, {"sha": "5187090797d683f9c212e59338bd42680b0f258e", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-pr97732.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ebedfcd86aa5e3fc902fb442ce12c9d440c23c8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr97732.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ebedfcd86aa5e3fc902fb442ce12c9d440c23c8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr97732.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr97732.c?ref=8ebedfcd86aa5e3fc902fb442ce12c9d440c23c8", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+\n+struct S { int a, b; } *e;\n+int d;\n+\n+void\n+foo (struct S *x)\n+{\n+  for (e = x; d; d++, e++)\n+    e->a = e->b = (int) (__UINTPTR_TYPE__) e;\n+}"}, {"sha": "0ba37540d5d1e1347fd63bdd56e2fb9dd5d539fa", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ebedfcd86aa5e3fc902fb442ce12c9d440c23c8/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ebedfcd86aa5e3fc902fb442ce12c9d440c23c8/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=8ebedfcd86aa5e3fc902fb442ce12c9d440c23c8", "patch": "@@ -8001,6 +8001,10 @@ vectorizable_induction (loop_vec_info loop_vinfo,\n \t\t{\n \t\t  /* The scalar inits of the IVs if not vectorized.  */\n \t\t  elt = inits[(ivn*const_nunits + eltn) % group_size];\n+\t\t  if (!useless_type_conversion_p (TREE_TYPE (vectype),\n+\t\t\t\t\t\t  TREE_TYPE (elt)))\n+\t\t    elt = gimple_build (&init_stmts, VIEW_CONVERT_EXPR,\n+\t\t\t\t\tTREE_TYPE (vectype), elt);\n \t\t  init_elts.quick_push (elt);\n \t\t}\n \t      /* The number of steps to add to the initial values.  */"}]}