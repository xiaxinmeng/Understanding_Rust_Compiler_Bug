{"sha": "9e38af5c5521d07a914a03175bf7b7f5d88d3c89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUzOGFmNWM1NTIxZDA3YTkxNGEwMzE3NWJmN2I3ZjVkODhkM2M4OQ==", "commit": {"author": {"name": "Alexander Monakov", "email": "amonakov@ispras.ru", "date": "2016-11-30T18:08:30Z"}, "committer": {"name": "Alexander Monakov", "email": "amonakov@gcc.gnu.org", "date": "2016-11-30T18:08:30Z"}, "message": "libgomp: introduce LIBGOMP_OFFLOADED_ONLY macro\n\n\t* configure.ac [nvptx*-*-*] (libgomp_offloaded_only): Set and use it...\n\t(LIBGOMP_OFFLOADED_ONLY): ...here; new define.\n\t* configure: Regenerate.\n\t* config.h.in: Likewise.\n\nFrom-SVN: r243040", "tree": {"sha": "c5a2737c29a2282ad9665f202a1374c48bced574", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5a2737c29a2282ad9665f202a1374c48bced574"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e38af5c5521d07a914a03175bf7b7f5d88d3c89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e38af5c5521d07a914a03175bf7b7f5d88d3c89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e38af5c5521d07a914a03175bf7b7f5d88d3c89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e38af5c5521d07a914a03175bf7b7f5d88d3c89/comments", "author": {"login": "amonakov", "id": 1997391, "node_id": "MDQ6VXNlcjE5OTczOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1997391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amonakov", "html_url": "https://github.com/amonakov", "followers_url": "https://api.github.com/users/amonakov/followers", "following_url": "https://api.github.com/users/amonakov/following{/other_user}", "gists_url": "https://api.github.com/users/amonakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/amonakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amonakov/subscriptions", "organizations_url": "https://api.github.com/users/amonakov/orgs", "repos_url": "https://api.github.com/users/amonakov/repos", "events_url": "https://api.github.com/users/amonakov/events{/privacy}", "received_events_url": "https://api.github.com/users/amonakov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f96b7f1f47e7dccf7f1da0cab913efb3fe855db8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f96b7f1f47e7dccf7f1da0cab913efb3fe855db8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f96b7f1f47e7dccf7f1da0cab913efb3fe855db8"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "1fafab8682fa7bc9395d1d5685ec67324e1f2f50", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e38af5c5521d07a914a03175bf7b7f5d88d3c89/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e38af5c5521d07a914a03175bf7b7f5d88d3c89/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=9e38af5c5521d07a914a03175bf7b7f5d88d3c89", "patch": "@@ -1,3 +1,10 @@\n+2016-11-30  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\t* configure.ac [nvptx*-*-*] (libgomp_offloaded_only): Set and use it...\n+\t(LIBGOMP_OFFLOADED_ONLY): ...here; new define.\n+\t* configure: Regenerate.\n+\t* config.h.in: Likewise.\n+\n 2016-11-30  Alexander Monakov  <amonakov@ispras.ru>\n \n \t* Makefile.in: Regenerate with automake-1.11.6."}, {"sha": "583b9b482502907b0d6868bad90ebcac0e55374c", "filename": "libgomp/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e38af5c5521d07a914a03175bf7b7f5d88d3c89/libgomp%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e38af5c5521d07a914a03175bf7b7f5d88d3c89/libgomp%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig.h.in?ref=9e38af5c5521d07a914a03175bf7b7f5d88d3c89", "patch": "@@ -115,6 +115,9 @@\n /* Define to 1 if GNU symbol versioning is used for libgomp. */\n #undef LIBGOMP_GNU_SYMBOL_VERSIONING\n \n+/* Define to 1 if building libgomp for an accelerator-only target. */\n+#undef LIBGOMP_OFFLOADED_ONLY\n+\n /* Define to 1 if libgomp should use POSIX threads. */\n #undef LIBGOMP_USE_PTHREADS\n "}, {"sha": "6355ad90ba42e3eb4a607065a199a03b51087887", "filename": "libgomp/configure", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e38af5c5521d07a914a03175bf7b7f5d88d3c89/libgomp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e38af5c5521d07a914a03175bf7b7f5d88d3c89/libgomp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure?ref=9e38af5c5521d07a914a03175bf7b7f5d88d3c89", "patch": "@@ -15074,6 +15074,8 @@ case \"$host\" in\n   nvptx*-*-*)\n     # NVPTX does not support Pthreads, has its own code replacement.\n     libgomp_use_pthreads=no\n+    # NVPTX is an accelerator-only target\n+    libgomp_offloaded_only=yes\n     ;;\n   *)\n     # Check to see if -pthread or -lpthread is needed.  Prefer the former.\n@@ -15125,6 +15127,12 @@ $as_echo \"#define LIBGOMP_USE_PTHREADS 1\" >>confdefs.h\n \n fi\n \n+if test x$libgomp_offloaded_only = xyes; then\n+\n+$as_echo \"#define LIBGOMP_OFFLOADED_ONLY 1\" >>confdefs.h\n+\n+fi\n+\n # Plugins for offload execution, configure.ac fragment.  -*- mode: autoconf -*-\n #\n # Copyright (C) 2014-2016 Free Software Foundation, Inc."}, {"sha": "4086d3f8263effde489e16e6a0fff3cc05102f1e", "filename": "libgomp/configure.ac", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e38af5c5521d07a914a03175bf7b7f5d88d3c89/libgomp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e38af5c5521d07a914a03175bf7b7f5d88d3c89/libgomp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure.ac?ref=9e38af5c5521d07a914a03175bf7b7f5d88d3c89", "patch": "@@ -182,6 +182,8 @@ case \"$host\" in\n   nvptx*-*-*)\n     # NVPTX does not support Pthreads, has its own code replacement.\n     libgomp_use_pthreads=no\n+    # NVPTX is an accelerator-only target\n+    libgomp_offloaded_only=yes\n     ;;\n   *)\n     # Check to see if -pthread or -lpthread is needed.  Prefer the former.\n@@ -208,6 +210,11 @@ if test x$libgomp_use_pthreads != xno; then\n             [Define to 1 if libgomp should use POSIX threads.])\n fi\n \n+if test x$libgomp_offloaded_only = xyes; then\n+  AC_DEFINE(LIBGOMP_OFFLOADED_ONLY, 1,\n+            [Define to 1 if building libgomp for an accelerator-only target.])\n+fi\n+\n m4_include([plugin/configfrag.ac])\n \n # Check for functions needed."}]}