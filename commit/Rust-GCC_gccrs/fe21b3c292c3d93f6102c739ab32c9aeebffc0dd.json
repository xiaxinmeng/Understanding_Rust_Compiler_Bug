{"sha": "fe21b3c292c3d93f6102c739ab32c9aeebffc0dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmUyMWIzYzI5MmMzZDkzZjYxMDJjNzM5YWIzMmM5YWVlYmZmYzBkZA==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2015-07-07T19:46:14Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2015-07-07T19:46:14Z"}, "message": "[MOXIE] Hookize GO_IF_LEGITIMATE_ADDRESS\n\nFrom-SVN: r225524", "tree": {"sha": "826f0474d32bdd3c7692de95ba18f41d9596e111", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/826f0474d32bdd3c7692de95ba18f41d9596e111"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe21b3c292c3d93f6102c739ab32c9aeebffc0dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe21b3c292c3d93f6102c739ab32c9aeebffc0dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe21b3c292c3d93f6102c739ab32c9aeebffc0dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe21b3c292c3d93f6102c739ab32c9aeebffc0dd/comments", "author": null, "committer": null, "parents": [{"sha": "3457d39ea5c16b07c5e1a1d4691b1db27f1e5223", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3457d39ea5c16b07c5e1a1d4691b1db27f1e5223", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3457d39ea5c16b07c5e1a1d4691b1db27f1e5223"}], "stats": {"total": 72, "additions": 48, "deletions": 24}, "files": [{"sha": "06505572858ed0b9edd8bbc5d612c7010ebd9a0b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe21b3c292c3d93f6102c739ab32c9aeebffc0dd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe21b3c292c3d93f6102c739ab32c9aeebffc0dd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fe21b3c292c3d93f6102c739ab32c9aeebffc0dd", "patch": "@@ -1,3 +1,10 @@\n+2015-07-07  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/moxie/moxie.h (GO_IF_LEGITIMATE_ADDRESS): Remove macros.\n+\t* config/moxie/moxie.c (moxie_reg_ok_for_base_p,\n+\t  moxie_legitimate_address_p): New functions.\n+\t  (TARGET_ADDR_SPACE_LEGITIMATE_ADDRESS_P): Define.\n+\n 2015-07-07  Tom de Vries  <tom@codesourcery.com>\n \n \tPR tree-optimization/66642"}, {"sha": "7a80f77bde37295396e54ed25edd4df442d21f39", "filename": "gcc/config/moxie/moxie.c", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe21b3c292c3d93f6102c739ab32c9aeebffc0dd/gcc%2Fconfig%2Fmoxie%2Fmoxie.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe21b3c292c3d93f6102c739ab32c9aeebffc0dd/gcc%2Fconfig%2Fmoxie%2Fmoxie.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmoxie%2Fmoxie.c?ref=fe21b3c292c3d93f6102c739ab32c9aeebffc0dd", "patch": "@@ -595,6 +595,45 @@ moxie_offset_address_p (rtx x)\n   return 0;\n }\n \n+/* Helper function for `moxie_legitimate_address_p'.  */\n+\n+static bool\n+moxie_reg_ok_for_base_p (const_rtx reg, bool strict_p)\n+{\n+  int regno = REGNO (reg);\n+\n+  if (strict_p)\n+    return HARD_REGNO_OK_FOR_BASE_P (regno)\n+\t   || HARD_REGNO_OK_FOR_BASE_P (reg_renumber[regno]);\n+  else    \n+    return !HARD_REGISTER_NUM_P (regno)\n+\t   || HARD_REGNO_OK_FOR_BASE_P (regno);\n+}\n+\n+/* Worker function for TARGET_LEGITIMATE_ADDRESS_P.  */\n+\n+static bool\n+moxie_legitimate_address_p (machine_mode mode ATTRIBUTE_UNUSED,\n+\t\t\t    rtx x, bool strict_p,\n+\t\t\t    addr_space_t as)\n+{\n+  gcc_assert (ADDR_SPACE_GENERIC_P (as));\n+\n+  if (GET_CODE(x) == PLUS\n+      && REG_P (XEXP (x, 0))\n+      && moxie_reg_ok_for_base_p (XEXP (x, 0), strict_p)\n+      && CONST_INT_P (XEXP (x, 1))\n+      && IN_RANGE (INTVAL (XEXP (x, 1)), -32768, 32767))\n+    return true;\n+  if (REG_P (x) && moxie_reg_ok_for_base_p (x, strict_p))\n+    return true;\n+  if (GET_CODE (x) == SYMBOL_REF\n+      || GET_CODE (x) == LABEL_REF\n+      || GET_CODE (x) == CONST)\n+    return true;\n+  return false;\n+}\n+\n /* The Global `targetm' Variable.  */\n \n /* Initialize the GCC target structure.  */\n@@ -615,6 +654,8 @@ moxie_offset_address_p (rtx x)\n #undef  TARGET_FUNCTION_ARG_ADVANCE\n #define TARGET_FUNCTION_ARG_ADVANCE\tmoxie_function_arg_advance\n \n+#undef  TARGET_ADDR_SPACE_LEGITIMATE_ADDRESS_P\n+#define TARGET_ADDR_SPACE_LEGITIMATE_ADDRESS_P\tmoxie_legitimate_address_p\n \n #undef  TARGET_SETUP_INCOMING_VARARGS\n #define TARGET_SETUP_INCOMING_VARARGS \tmoxie_setup_incoming_varargs"}, {"sha": "d8ab936feac8b790c9ad2b39c17ecf5e402ef950", "filename": "gcc/config/moxie/moxie.h", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe21b3c292c3d93f6102c739ab32c9aeebffc0dd/gcc%2Fconfig%2Fmoxie%2Fmoxie.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe21b3c292c3d93f6102c739ab32c9aeebffc0dd/gcc%2Fconfig%2Fmoxie%2Fmoxie.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmoxie%2Fmoxie.h?ref=fe21b3c292c3d93f6102c739ab32c9aeebffc0dd", "patch": "@@ -451,30 +451,6 @@ enum reg_class\n    elements of a jump-table should have.  */\n #define CASE_VECTOR_MODE SImode\n \n-/* A C compound statement with a conditional `goto LABEL;' executed\n-   if X (an RTX) is a legitimate memory address on the target machine\n-   for a memory operand of mode MODE.  */\n-#define GO_IF_LEGITIMATE_ADDRESS(MODE,X,LABEL)\t\t\\\n-  do {                                                  \\\n-    if (GET_CODE(X) == PLUS)\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\\\n-\trtx op1,op2;\t\t\t\t\t\\\n-\top1 = XEXP(X,0);\t\t\t\t\\\n-\top2 = XEXP(X,1);\t\t\t\t\\\n-\tif (GET_CODE(op1) == REG\t\t\t\\\n-\t    && GET_CODE(op2) == CONST_INT \t\t\\\n-\t    && IN_RANGE (INTVAL (op2), -32768, 32767)\t\\\n-\t    && REGNO_OK_FOR_BASE_P(REGNO(op1)))\t\t\\\n-\t  goto LABEL;\t\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\\\n-    if (REG_P (X) && REGNO_OK_FOR_BASE_P (REGNO (X)))\t\\\n-      goto LABEL;\t\t\t\t\t\\\n-    if (GET_CODE (X) == SYMBOL_REF\t\t\t\\\n-\t|| GET_CODE (X) == LABEL_REF\t\t\t\\\n-\t|| GET_CODE (X) == CONST)\t\t\t\\\n-      goto LABEL;\t\t\t\t\t\\\n-  } while (0)\n-\n /* Run-time Target Specification */\n \n #define TARGET_CPU_CPP_BUILTINS() \\"}]}