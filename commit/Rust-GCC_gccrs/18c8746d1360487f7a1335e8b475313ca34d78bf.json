{"sha": "18c8746d1360487f7a1335e8b475313ca34d78bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThjODc0NmQxMzYwNDg3ZjdhMTMzNWU4YjQ3NTMxM2NhMzRkNzhiZg==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola@brainstorm.co.uk", "date": "2001-12-17T17:27:08Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2001-12-17T17:27:08Z"}, "message": "New test for loading unclaimed categories in Objective-C\n\nFrom-SVN: r48111", "tree": {"sha": "5b35f1e708c21d1e7069eb6d6635b8b7adcbb6aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b35f1e708c21d1e7069eb6d6635b8b7adcbb6aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18c8746d1360487f7a1335e8b475313ca34d78bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c8746d1360487f7a1335e8b475313ca34d78bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18c8746d1360487f7a1335e8b475313ca34d78bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c8746d1360487f7a1335e8b475313ca34d78bf/comments", "author": null, "committer": null, "parents": [{"sha": "e5e0f6f5392b636c5478ef7fb4853fb01ad8257f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5e0f6f5392b636c5478ef7fb4853fb01ad8257f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5e0f6f5392b636c5478ef7fb4853fb01ad8257f"}], "stats": {"total": 177, "additions": 177, "deletions": 0}, "files": [{"sha": "4f87ba605ee47df1bb3f0b8c3e5898d61f3dcea3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c8746d1360487f7a1335e8b475313ca34d78bf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c8746d1360487f7a1335e8b475313ca34d78bf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=18c8746d1360487f7a1335e8b475313ca34d78bf", "patch": "@@ -1,3 +1,11 @@\n+Mon Dec 17 16:54:56 2001  Nicola Pero  <nicola@brainstorm.co.uk>\n+\n+\t* objc.dg/special/: New directory.\n+\t* objc.dg/special/special.exp: New file.\n+\t* objc.dg/special/unclaimed-category-1.h: New file.\n+\t* objc.dg/special/unclaimed-category-1a.m: New file.\n+\t* objc.dg/special/unclaimed-category-1.m: New file.\n+\n 2001-12-17  Andreas Jaeger  <aj@suse.de>\n \n \t* gcc.c-torture/compile/20011217-2.c: New test."}, {"sha": "09552a72ad6e6fdb563d699b81f2b2be66fae8a3", "filename": "gcc/testsuite/objc.dg/special/special.exp", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c8746d1360487f7a1335e8b475313ca34d78bf/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Fspecial.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c8746d1360487f7a1335e8b475313ca34d78bf/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Fspecial.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Fspecial.exp?ref=18c8746d1360487f7a1335e8b475313ca34d78bf", "patch": "@@ -0,0 +1,46 @@\n+# GCC Objective-C testsuite that uses the `dg.exp' driver.\n+#   Copyright (C) 1997, 2001 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2 of the License, or\n+# (at your option) any later version.\n+# \n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  \n+\n+# Load support procs.\n+load_lib objc-dg.exp\n+\n+# If a testcase doesn't have special options, use these.\n+global DEFAULT_CFLAGS\n+if ![info exists DEFAULT_CFLAGS] then {\n+    set DEFAULT_CFLAGS \"\"\n+}\n+\n+# Initialize `dg'.\n+dg-init\n+\n+#\n+# unclaimed-category-1 test\n+#\n+# This test is special because we must compile two different modules,\n+# unclaimed-category-1a.m and unclaimed-category-1.m, then link\n+# together, then run the resulting executable.\n+set lines [objc_target_compile \"$srcdir/$subdir/unclaimed-category-1a.m\" \"unclaimed-category-1a.o\" object \"\"]\n+if ![string match \"\" $lines] then {\n+    fail \"unclaimed-category-1a.o\"\n+} else {\n+    dg-runtest \"$srcdir/$subdir/unclaimed-category-1.m\" \"unclaimed-category-1a.o\" \"\" \n+    file delete unclaimed-category-1a.o\n+}\n+\n+# All done.\n+dg-finish\n+"}, {"sha": "6c73d28fd17f0cf4f28b81b4e21ffaefc1e8f609", "filename": "gcc/testsuite/objc.dg/special/unclaimed-category-1.h", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c8746d1360487f7a1335e8b475313ca34d78bf/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Funclaimed-category-1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c8746d1360487f7a1335e8b475313ca34d78bf/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Funclaimed-category-1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Funclaimed-category-1.h?ref=18c8746d1360487f7a1335e8b475313ca34d78bf", "patch": "@@ -0,0 +1,27 @@\n+/* Contributed by Nicola Pero - Fri Dec 14 08:36:00 GMT 2001 */\n+#include <objc/objc.h>\n+#include <objc/Object.h>\n+\n+/* Test loading unclaimed categories - categories of a class defined\n+   separately from the class itself.  */\n+\n+@interface TestClass\n+{\n+  id isa;\n+}\n+- (int)D;\n+@end\n+\n+@interface TestClass (A)\n+- (int)A;\n+@end\n+\n+@interface TestClass (B)\n+- (int)B;\n+@end\n+\n+@interface TestClass (C)\n+- (int)C;\n+@end\n+\n+"}, {"sha": "f9cbfc8d1d1be171f72358fccbc6bc0b614b3166", "filename": "gcc/testsuite/objc.dg/special/unclaimed-category-1.m", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c8746d1360487f7a1335e8b475313ca34d78bf/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Funclaimed-category-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c8746d1360487f7a1335e8b475313ca34d78bf/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Funclaimed-category-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Funclaimed-category-1.m?ref=18c8746d1360487f7a1335e8b475313ca34d78bf", "patch": "@@ -0,0 +1,65 @@\n+/* Contributed by Nicola Pero - Fri Dec 14 08:36:00 GMT 2001 */\n+/* { dg-do run } */\n+#include <objc/objc.h>\n+#include <objc/Object.h>\n+\n+/* Test loading unclaimed categories - categories of a class defined\n+   separately from the class itself.  */\n+\n+\n+/* unclaimed-category-1.m contains only the class definition but not\n+   the categories.  unclaimed-category-1a.m contains only the\n+   categories of the class, but not the class itself.  We want to\n+   check that the runtime can load the class from one module (file)\n+   and the categories from another module (file).  */\n+\n+#include \"unclaimed-category-1.h\"\n+\n+@implementation TestClass\n+- (int)D\n+{\n+  return 4;\n+}\n+@end\n+\n+\n+int main (void)\n+{\n+  TestClass *test;\n+  Class testClass;\n+\n+  testClass = objc_get_class (\"TestClass\");\n+  if (testClass == Nil)\n+    {\n+      abort ();\n+    }\n+  \n+  test = (TestClass *)(class_create_instance (testClass));\n+  if (test == nil)\n+    {\n+      abort ();\n+    }\n+  \n+  if ([test A] != 1)\n+    {\n+      abort ();\n+    }\n+  \n+  if ([test B] != 2)\n+    {\n+      abort ();\n+    }\n+\n+  if ([test C] != 3)\n+    {\n+      abort ();\n+    }\n+  \n+\n+  if ([test D] != 4)\n+    {\n+      abort ();\n+    }\n+\n+  return 0;\n+}"}, {"sha": "6bcd1b4c53c7848caf0adf4b46e4d39252be5eeb", "filename": "gcc/testsuite/objc.dg/special/unclaimed-category-1a.m", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c8746d1360487f7a1335e8b475313ca34d78bf/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Funclaimed-category-1a.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c8746d1360487f7a1335e8b475313ca34d78bf/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Funclaimed-category-1a.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Funclaimed-category-1a.m?ref=18c8746d1360487f7a1335e8b475313ca34d78bf", "patch": "@@ -0,0 +1,31 @@\n+/* Contributed by Nicola Pero - Fri Dec 14 08:36:00 GMT 2001 */\n+#include <objc/objc.h>\n+#include <objc/Object.h>\n+\n+/* Test loading unclaimed categories - categories of a class defined\n+   separately from the class itself.  */\n+\n+#include \"unclaimed-category-1.h\"\n+\n+@implementation TestClass (A)\n+- (int)A\n+{\n+  return 1;\n+}\n+@end\n+\n+@implementation TestClass (B)\n+- (int)B\n+{\n+  return 2;\n+}\n+@end\n+\n+@implementation TestClass (C)\n+- (int)C\n+{\n+  return 3;\n+}\n+@end\n+\n+"}]}