{"sha": "ac4a783640162ed734c538ce1ff516b40431834b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM0YTc4MzY0MDE2MmVkNzM0YzUzOGNlMWZmNTE2YjQwNDMxODM0Yg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2019-09-20T16:05:06Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2019-09-20T16:05:06Z"}, "message": "re PR fortran/78260 (ICE in gimplify_expr, at gimplify.c:11939)\n\n2019-09-20  Tobias Burnus  <tobias@codesourcery.com>\n\n        PR fortran/78260\n        * openmp.c (gfc_resolve_oacc_declare): Reject all\n        non variables but accept function result variables.\n        * trans-openmp.c (gfc_trans_omp_clauses): Handle\n        function-result variables for remaing cases.\n\n2019-09-20  Tobias Burnus  <tobias@codesourcery.com>\n\n        PR fortran/78260\n        * gfortran.dg/goacc/parameter.f95: Change\n        dg-error as it is now detected earlier.\n        * gfortran.dg/goacc/pr85701.f90: Modify to\n        use a separate result variable.\n        * gfortran.dg/goacc/pr78260.f90: New.\n        * gfortran.dg/goacc/pr78260-2.f90: New.\n        * gfortran.dg/gomp/pr78260.f90: New.\n        * gfortran.dg/gomp/pr78260-2.f90: New.\n        * gfortran.dg/gomp/pr78260-3.f90: New.\n\nFrom-SVN: r276002", "tree": {"sha": "58758d89b2d10fe43f3ce6b8d6b20db15be992a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58758d89b2d10fe43f3ce6b8d6b20db15be992a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac4a783640162ed734c538ce1ff516b40431834b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac4a783640162ed734c538ce1ff516b40431834b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac4a783640162ed734c538ce1ff516b40431834b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac4a783640162ed734c538ce1ff516b40431834b/comments", "author": null, "committer": null, "parents": [{"sha": "76c93295f3b3fec8f34fccbb2c5d574c1362752a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76c93295f3b3fec8f34fccbb2c5d574c1362752a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76c93295f3b3fec8f34fccbb2c5d574c1362752a"}], "stats": {"total": 299, "additions": 269, "deletions": 30}, "files": [{"sha": "7435a22f9023a14a6f94df51bda85510cb9bd6cc", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac4a783640162ed734c538ce1ff516b40431834b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac4a783640162ed734c538ce1ff516b40431834b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ac4a783640162ed734c538ce1ff516b40431834b", "patch": "@@ -1,3 +1,11 @@\n+2019-09-20  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/78260\n+\t* openmp.c (gfc_resolve_oacc_declare): Reject all\n+\tnon variables but accept function result variables.\n+\t* trans-openmp.c (gfc_trans_omp_clauses): Handle\n+\tfunction-result variables for remaing cases.\n+\n 2019-09-17  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/91588"}, {"sha": "bda7f288989433b5be6babec038db07bf11a8353", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac4a783640162ed734c538ce1ff516b40431834b/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac4a783640162ed734c538ce1ff516b40431834b/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=ac4a783640162ed734c538ce1ff516b40431834b", "patch": "@@ -6048,18 +6048,14 @@ gfc_resolve_oacc_declare (gfc_namespace *ns)\n \tfor (n = oc->clauses->lists[list]; n; n = n->next)\n \t  {\n \t    n->sym->mark = 0;\n-\t    if (n->sym->attr.function || n->sym->attr.subroutine)\n+\t    if (n->sym->attr.flavor != FL_VARIABLE\n+\t\t&& (n->sym->attr.flavor != FL_PROCEDURE\n+\t\t    || n->sym->result != n->sym))\n \t      {\n \t\tgfc_error (\"Object %qs is not a variable at %L\",\n \t\t\t   n->sym->name, &oc->loc);\n \t\tcontinue;\n \t      }\n-\t    if (n->sym->attr.flavor == FL_PARAMETER)\n-\t      {\n-\t\tgfc_error (\"PARAMETER object %qs is not allowed at %L\",\n-\t\t\t   n->sym->name, &oc->loc);\n-\t\tcontinue;\n-\t      }\n \n \t    if (n->expr && n->expr->ref->type == REF_ARRAY)\n \t      {"}, {"sha": "b4c77aebf4d7630447cb10d734261c9f45d0d0a9", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac4a783640162ed734c538ce1ff516b40431834b/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac4a783640162ed734c538ce1ff516b40431834b/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=ac4a783640162ed734c538ce1ff516b40431834b", "patch": "@@ -2075,7 +2075,7 @@ gfc_trans_omp_clauses (stmtblock_t *block, gfc_omp_clauses *clauses,\n \t      tree node = build_omp_clause (input_location, OMP_CLAUSE_DEPEND);\n \t      if (n->expr == NULL || n->expr->ref->u.ar.type == AR_FULL)\n \t\t{\n-\t\t  tree decl = gfc_get_symbol_decl (n->sym);\n+\t\t  tree decl = gfc_trans_omp_variable (n->sym, false);\n \t\t  if (gfc_omp_privatize_by_reference (decl))\n \t\t    decl = build_fold_indirect_ref (decl);\n \t\t  if (GFC_DESCRIPTOR_TYPE_P (TREE_TYPE (decl)))\n@@ -2136,7 +2136,7 @@ gfc_trans_omp_clauses (stmtblock_t *block, gfc_omp_clauses *clauses,\n \t      tree node2 = NULL_TREE;\n \t      tree node3 = NULL_TREE;\n \t      tree node4 = NULL_TREE;\n-\t      tree decl = gfc_get_symbol_decl (n->sym);\n+\t      tree decl = gfc_trans_omp_variable (n->sym, false);\n \t      if (DECL_P (decl))\n \t\tTREE_ADDRESSABLE (decl) = 1;\n \t      if (n->expr == NULL || n->expr->ref->u.ar.type == AR_FULL)\n@@ -2398,7 +2398,7 @@ gfc_trans_omp_clauses (stmtblock_t *block, gfc_omp_clauses *clauses,\n \t      tree node = build_omp_clause (input_location, clause_code);\n \t      if (n->expr == NULL || n->expr->ref->u.ar.type == AR_FULL)\n \t\t{\n-\t\t  tree decl = gfc_get_symbol_decl (n->sym);\n+\t\t  tree decl = gfc_trans_omp_variable (n->sym, false);\n \t\t  if (gfc_omp_privatize_by_reference (decl))\n \t\t    decl = build_fold_indirect_ref (decl);\n \t\t  else if (DECL_P (decl))"}, {"sha": "f46b109e8eb9b1a6ca89793408b9fe673c4808eb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 30, "deletions": 17, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac4a783640162ed734c538ce1ff516b40431834b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac4a783640162ed734c538ce1ff516b40431834b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ac4a783640162ed734c538ce1ff516b40431834b", "patch": "@@ -1,3 +1,16 @@\n+2019-09-20  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/78260\n+\t* gfortran.dg/goacc/parameter.f95: Change\n+\tdg-error as it is now detected earlier.\n+\t* gfortran.dg/goacc/pr85701.f90: Modify to\n+\tuse a separate result variable.\n+\t* gfortran.dg/goacc/pr78260.f90: New.\n+\t* gfortran.dg/goacc/pr78260-2.f90: New.\n+\t* gfortran.dg/gomp/pr78260.f90: New.\n+\t* gfortran.dg/gomp/pr78260-2.f90: New.\n+\t* gfortran.dg/gomp/pr78260-3.f90: New.\n+\n 2019-09-20  Olivier Hainque  <hainque@adacore.com>\n \n \t* gnat.dg/system_info1.adb: Restrict to *-*-linux* and *-*-mingw*.\n@@ -13,23 +26,23 @@\n \n 2019-09-20  Martin Jambor  <mjambor@suse.cz>\n \n-        * g++.dg/ipa/pr81248.C: Adjust dg-options and dump-scan.\n-        * gcc.dg/ipa/ipa-sra-1.c: Likewise.\n-        * gcc.dg/ipa/ipa-sra-10.c: Likewise.\n-        * gcc.dg/ipa/ipa-sra-11.c: Likewise.\n-        * gcc.dg/ipa/ipa-sra-3.c: Likewise.\n-        * gcc.dg/ipa/ipa-sra-4.c: Likewise.\n-        * gcc.dg/ipa/ipa-sra-5.c: Likewise.\n-        * gcc.dg/ipa/ipacost-2.c: Disable ipa-sra.\n-        * gcc.dg/ipa/ipcp-agg-9.c: Likewise.\n-        * gcc.dg/ipa/pr78121.c: Adjust scan pattern.\n-        * gcc.dg/ipa/vrp1.c: Likewise.\n-        * gcc.dg/ipa/vrp2.c: Likewise.\n-        * gcc.dg/ipa/vrp3.c: Likewise.\n-        * gcc.dg/ipa/vrp7.c: Likewise.\n-        * gcc.dg/ipa/vrp8.c: Likewise.\n-        * gcc.dg/noreorder.c: use noipa attribute instead of noinline.\n-        * gcc.dg/ipa/20040703-wpa.c: New test.\n+\t* g++.dg/ipa/pr81248.C: Adjust dg-options and dump-scan.\n+\t* gcc.dg/ipa/ipa-sra-1.c: Likewise.\n+\t* gcc.dg/ipa/ipa-sra-10.c: Likewise.\n+\t* gcc.dg/ipa/ipa-sra-11.c: Likewise.\n+\t* gcc.dg/ipa/ipa-sra-3.c: Likewise.\n+\t* gcc.dg/ipa/ipa-sra-4.c: Likewise.\n+\t* gcc.dg/ipa/ipa-sra-5.c: Likewise.\n+\t* gcc.dg/ipa/ipacost-2.c: Disable ipa-sra.\n+\t* gcc.dg/ipa/ipcp-agg-9.c: Likewise.\n+\t* gcc.dg/ipa/pr78121.c: Adjust scan pattern.\n+\t* gcc.dg/ipa/vrp1.c: Likewise.\n+\t* gcc.dg/ipa/vrp2.c: Likewise.\n+\t* gcc.dg/ipa/vrp3.c: Likewise.\n+\t* gcc.dg/ipa/vrp7.c: Likewise.\n+\t* gcc.dg/ipa/vrp8.c: Likewise.\n+\t* gcc.dg/noreorder.c: use noipa attribute instead of noinline.\n+\t* gcc.dg/ipa/20040703-wpa.c: New test.\n \t* gcc.dg/ipa/ipa-sra-12.c: New test.\n \t* gcc.dg/ipa/ipa-sra-13.c: Likewise.\n \t* gcc.dg/ipa/ipa-sra-14.c: Likewise."}, {"sha": "cbe67dba7889ef8fe430c3ddb0621345b95cb3fd", "filename": "gcc/testsuite/gfortran.dg/goacc/parameter.f95", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac4a783640162ed734c538ce1ff516b40431834b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fparameter.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac4a783640162ed734c538ce1ff516b40431834b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fparameter.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fparameter.f95?ref=ac4a783640162ed734c538ce1ff516b40431834b", "patch": "@@ -6,7 +6,7 @@ subroutine oacc1\n     implicit none\n     integer :: i\n     integer, parameter :: a = 1\n-    !$acc declare device_resident (a) ! { dg-error \"PARAMETER\" }\n+    !$acc declare device_resident (a) ! { dg-error \"is not a variable\" }\n     !$acc data copy (a) ! { dg-error \"not a variable\" }\n     !$acc end data\n     !$acc data deviceptr (a) ! { dg-error \"not a variable\" }"}, {"sha": "e28564d6f700a18663e53bf24ba491abd58c0559", "filename": "gcc/testsuite/gfortran.dg/goacc/pr78260-2.f90", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac4a783640162ed734c538ce1ff516b40431834b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr78260-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac4a783640162ed734c538ce1ff516b40431834b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr78260-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr78260-2.f90?ref=ac4a783640162ed734c538ce1ff516b40431834b", "patch": "@@ -0,0 +1,20 @@\n+! { dg-do compile }\n+! { dg-options \"-fopenacc -fdump-tree-original\" }\n+! { dg-require-effective-target fopenacc }\n+\n+! PR fortran/78260\n+\n+module m\n+  implicit none\n+  integer :: n = 0\n+contains\n+  integer function f1()\n+    !$acc declare present(f1)\n+    !$acc kernels copyin(f1)\n+    f1 = 5 \n+    !$acc end kernels\n+  end function f1\n+end module m\n+! { dg-final { scan-tree-dump-times \"#pragma acc data map\\\\(force_present:__result_f1\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma acc data map\\\\(force_present:__result_f1\\\\)\" 1 \"original\" } }\n+"}, {"sha": "21bde854919d58e81544d1cedbb081373bbb3221", "filename": "gcc/testsuite/gfortran.dg/goacc/pr78260.f90", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac4a783640162ed734c538ce1ff516b40431834b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr78260.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac4a783640162ed734c538ce1ff516b40431834b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr78260.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr78260.f90?ref=ac4a783640162ed734c538ce1ff516b40431834b", "patch": "@@ -0,0 +1,36 @@\n+! { dg-do compile }\n+! { dg-options \"-fopenacc\" }\n+! { dg-require-effective-target fopenacc }\n+\n+! PR fortran/78260\n+! Contributed by Gerhard Steinmetz\n+\n+module m\n+  implicit none\n+  integer :: n = 0\n+contains\n+  subroutine s\n+    !$acc declare present(m)  ! { dg-error \"Object .m. is not a variable\" }\n+    !$acc kernels copyin(m)   ! { dg-error \"Object .m. is not a variable\" }\n+    n = n + 1\n+    !$acc end kernels\n+  end subroutine s\n+  subroutine s2\n+    !$acc declare present(s2)  ! { dg-error \"Object .s2. is not a variable\" }\n+    !$acc kernels copyin(s2)   ! { dg-error \"Object .s2. is not a variable\" }\n+    n = n + 1\n+    !$acc end kernels\n+  end subroutine s2\n+  integer function f1()\n+    !$acc declare present(f1)  ! OK, f1 is also the result variable\n+    !$acc kernels copyin(f1)   ! OK, f1 is also the result variable\n+    f1 = 5 \n+    !$acc end kernels\n+  end function f1\n+  integer function f2() result(res)\n+    !$acc declare present(f2)  ! { dg-error \"Object .f2. is not a variable\" }\n+    !$acc kernels copyin(f2)   ! { dg-error \"Object .f2. is not a variable\" }\n+    res = 5 \n+    !$acc end kernels\n+  end function f2\n+end module m"}, {"sha": "bae09de90aca1316a9e04129b5dc50d26ba54873", "filename": "gcc/testsuite/gfortran.dg/goacc/pr85701.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac4a783640162ed734c538ce1ff516b40431834b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr85701.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac4a783640162ed734c538ce1ff516b40431834b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr85701.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr85701.f90?ref=ac4a783640162ed734c538ce1ff516b40431834b", "patch": "@@ -9,11 +9,11 @@ subroutine s2\n    !$acc declare present(s2) ! { dg-error \"is not a variable\" }\n end\n \n-function f1 ()\n+function f1 () result(res)\n    !$acc declare copy(f1) ! { dg-error \"is not a variable\" }\n end\n \n-function f2 ()\n+function f2 () result(res)\n    !$acc declare present(f2) ! { dg-error \"is not a variable\" }\n end\n "}, {"sha": "c58ad93471c2b60588d6faefa803e9879c80465f", "filename": "gcc/testsuite/gfortran.dg/gomp/pr78260-2.f90", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac4a783640162ed734c538ce1ff516b40431834b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr78260-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac4a783640162ed734c538ce1ff516b40431834b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr78260-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr78260-2.f90?ref=ac4a783640162ed734c538ce1ff516b40431834b", "patch": "@@ -0,0 +1,59 @@\n+! { dg-do compile }\n+! { dg-options \"-fopenmp -fdump-tree-original\" }\n+\n+! PR fortran/78260\n+\n+module m\n+  implicit none\n+  integer :: n = 0\n+contains\n+  integer function f1()\n+    !$omp target data map(f1)\n+    !$omp target update to(f1)\n+    f1 = 5 \n+    !$omp end target data\n+  end function f1\n+\n+  integer function f2()\n+    dimension :: f2(1)\n+    !$omp target data map(f2)\n+    !$omp target update to(f2)\n+    f2(1) = 5 \n+    !$omp end target data\n+  end function f2\n+\n+  integer function f3() result(res)\n+    dimension :: res(1)\n+    !$omp target data map(res)\n+    !$omp target update to(res)\n+    res(1) = 5 \n+    !$omp end target data\n+  end function f3\n+\n+  integer function f4() result(res)\n+    allocatable :: res\n+    dimension :: res(:)\n+    !$omp target data map(res)\n+    !$omp target update to(res)\n+    res = [5]\n+    !$omp end target data\n+  end function f4\n+\n+  subroutine sub()\n+    integer, allocatable :: arr(:)\n+    !$omp target data map(arr)\n+    !$omp target update to(arr)\n+    arr = [5]\n+    !$omp end target data\n+  end subroutine sub\n+end module m\n+\n+! { dg-final { scan-tree-dump-times \"#pragma omp target data map\\\\(tofrom:\\\\*\\\\(c_char \\\\*\\\\) arr.data \\\\\\[len: D.\\[0-9\\]+ \\\\* 4\\\\\\]\\\\) map\\\\(to:arr \\\\\\[pointer set, len: ..\\\\\\]\\\\) map\\\\(alloc:\\\\(integer\\\\(kind=4\\\\)\\\\\\[0:\\\\\\] \\\\* restrict\\\\) arr.data \\\\\\[pointer assign, bias: 0\\\\\\]\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp target update to\\\\(\\\\*\\\\(c_char \\\\*\\\\) arr.data \\\\\\[len: D.\\[0-9\\]+ \\\\* 4\\\\\\]\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp target data map\\\\(tofrom:\\\\*\\\\(c_char \\\\*\\\\) __result->data \\\\\\[len: D.\\[0-9\\]+ \\\\* 4\\\\\\]\\\\) map\\\\(to:\\\\*__result \\\\\\[pointer set, len: ..\\\\\\]\\\\) map\\\\(alloc:\\\\(integer\\\\(kind=4\\\\)\\\\\\[0:\\\\\\] \\\\* restrict\\\\) __result->data \\\\\\[pointer assign, bias: 0\\\\\\]\\\\) map\\\\(alloc:__result \\\\\\[pointer assign, bias: 0\\\\\\]\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp target update to\\\\(\\\\*\\\\(c_char \\\\*\\\\) __result->data \\\\\\[len: D.\\[0-9\\]+ \\\\* 4\\\\\\]\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp target data map\\\\(tofrom:\\\\*__result.0\\\\) map\\\\(alloc:__result.0 \\\\\\[pointer assign, bias: 0\\\\\\]\\\\)\" 2 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp target update to\\\\(\\\\*__result.0\\\\)\" 2 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp target data map\\\\(tofrom:__result_f1\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp target update to\\\\(__result_f1\\\\)\" 1 \"original\" } }\n+"}, {"sha": "4ca3e361a59b3ce8875ea510e0e142e330ac117d", "filename": "gcc/testsuite/gfortran.dg/gomp/pr78260-3.f90", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac4a783640162ed734c538ce1ff516b40431834b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr78260-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac4a783640162ed734c538ce1ff516b40431834b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr78260-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr78260-3.f90?ref=ac4a783640162ed734c538ce1ff516b40431834b", "patch": "@@ -0,0 +1,74 @@\n+! { dg-do compile }\n+! { dg-options \"-fopenmp -fdump-tree-original\" }\n+\n+! PR fortran/78260\n+\n+integer function f1()\n+  implicit none\n+\n+  f1 = 0\n+\n+  !$omp task depend(inout:f1)\n+  !$omp end task\n+\n+  !$omp task depend(inout:f1)\n+  !$omp end task\n+end function f1\n+\n+integer function f2()\n+  implicit none\n+  dimension :: f2(1)\n+\n+  f2(1) = 0\n+\n+  !$omp task depend(inout:f2)\n+  !$omp end task\n+\n+  !$omp task depend(inout:f2)\n+  !$omp end task\n+end function f2\n+\n+integer function f3() result(res)\n+  implicit none\n+  dimension :: res(1)\n+\n+  res(1) = 0\n+\n+  !$omp task depend(inout:res)\n+  !$omp end task\n+\n+  !$omp task depend(inout:res)\n+  !$omp end task\n+end function f3\n+\n+integer function f4() result(res)\n+  implicit none\n+  allocatable :: res\n+  dimension :: res(:)\n+\n+  res = [0]\n+\n+  !$omp task depend(inout:res)\n+  !$omp end task\n+\n+  !$omp task depend(inout:res)\n+  !$omp end task\n+end function f4\n+\n+subroutine sub()\n+  implicit none\n+  integer, allocatable :: arr(:)\n+\n+  arr = [3]\n+\n+  !$omp task depend(inout:arr)\n+  !$omp end task\n+\n+  !$omp task depend(inout:arr)\n+  !$omp end task\n+end subroutine sub\n+\n+! { dg-final { scan-tree-dump-times \"#pragma omp task depend\\\\(inout:__result_f1\\\\)\" 2 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp task depend\\\\(inout:\\\\*__result.0\\\\)\" 4 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp task depend\\\\(inout:\\\\*\\\\(c_char \\\\*\\\\) __result->data\\\\)\" 2 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp task depend\\\\(inout:\\\\*\\\\(c_char \\\\*\\\\) arr.data\\\\)\" 2 \"original\" } }"}, {"sha": "23acd4c1bf9298af3a546158f17f6928110bbaf8", "filename": "gcc/testsuite/gfortran.dg/gomp/pr78260.f90", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac4a783640162ed734c538ce1ff516b40431834b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr78260.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac4a783640162ed734c538ce1ff516b40431834b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr78260.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr78260.f90?ref=ac4a783640162ed734c538ce1ff516b40431834b", "patch": "@@ -0,0 +1,33 @@\n+! { dg-do compile }\n+\n+! PR fortran/78260\n+\n+module m\n+  implicit none\n+  integer :: n = 0\n+contains\n+  subroutine s\n+    !$omp target data map(m)   ! { dg-error \"Object .m. is not a variable\" }\n+    !$omp target update to(m)  ! { dg-error \"Object .m. is not a variable\" }\n+    n = n + 1\n+    !$omp end target data\n+  end subroutine s\n+  subroutine s2\n+    !$omp target data map(s2)   ! { dg-error \"Object .s2. is not a variable\" }\n+    !$omp target update to(s2)  ! { dg-error \"Object .s2. is not a variable\" }\n+    n = n + 1\n+    !$omp end target data\n+  end subroutine s2\n+  integer function f1()\n+    !$omp target data map(f1)   ! OK, f1 is also the result variable\n+    !$omp target update to(f1)  ! OK, f1 is also the result variable\n+    f1 = 5 \n+    !$omp end target data\n+  end function f1\n+  integer function f2() result(res)\n+    !$omp target data map(f2)   ! { dg-error \"Object .f2. is not a variable\" }\n+    !$omp target update to(f2)  ! { dg-error \"Object .f2. is not a variable\" }\n+    res = 5 \n+    !$omp end target data\n+  end function f2\n+end module m"}]}