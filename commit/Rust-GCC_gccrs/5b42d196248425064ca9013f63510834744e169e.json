{"sha": "5b42d196248425064ca9013f63510834744e169e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI0MmQxOTYyNDg0MjUwNjRjYTkwMTNmNjM1MTA4MzQ3NDRlMTY5ZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2018-05-30T16:42:41Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2018-05-30T16:42:41Z"}, "message": "passes.c (ipa_write_summaries): Only modify statements if body is in memory.\n\n\n\t* passes.c (ipa_write_summaries): Only modify statements if body\n\tis in memory.\n\t* cgraphunit.c (ipa_passes): Also produce intermeidate code when\n\tincrementally linking.\n\t(ipa_passes): Likewise.\n\t* lto-cgraph.c (lto_output_node): When incrementally linking do not\n\tpass down resolution info.\n\t* common.opt (flag_incremental_link): Update info.\n\t* gcc.c (plugin specs): Turn flinker-output=* to\n\t-plugin-opt=-linker-output-known\n\t* toplev.c (compile_file): Also cut compilation when doing incremental\n\tlink.\n\t* flag-types. (enum lto_partition_model): Add\n\tLTO_LINKER_OUTPUT_NOLTOREL.\n\t(invoke.texi): Add -flinker-output docs.\n\t* ipa.c (symbol_table::remove_unreachable_nodes): Handle LTO incremental\n\tlink same way as WPA; do not stream in dead initializers.\n\n\t* dwarf2out.c (dwarf2out_die_ref_for_decl,\n\tdarf2out_register_external_decl): Support incremental link.\n\n\t* lang.opt (lto_linker_output): Add nolto-rel.\n\t* lto-lang.c (lto_post_options): Handle LTO_LINKER_OUTPUT_REL\n\tand LTO_LINKER_OUTPUT_NOLTOREL.\n\t(lto_init): Generate lto when doing incremental link.\n\t* lto.c (lto_precess_name): Add lto1-inclink.\n\n\t* testsuite/g++.dg/lto/20081109-1_0.C: Add -flinker-output=nolto-rel.\n\t* testsuite/g++.dg/lto/20081118_0.C: Add -flinker-output=nolto-rel.\n\t* testsuite/g++.dg/lto/20081119-1_0.C: Add -flinker-output=nolto-rel.\n\t* testsuite/g++.dg/lto/20081120-1_0.C: Add -flinker-output=nolto-rel.\n\t* testsuite/g++.dg/lto/20081120-2_0.C: Add -flinker-output=nolto-rel.\n\t* testsuite/g++.dg/lto/20081123_0.C: Add -flinker-output=nolto-rel.\n\t* testsuite/g++.dg/lto/20081204-1_0.C: Add -flinker-output=nolto-rel.\n\t* testsuite/g++.dg/lto/20081219_0.C: Add -flinker-output=nolto-rel.\n\t* testsuite/g++.dg/lto/20090302_0.C: Add -flinker-output=nolto-rel.\n\t* testsuite/g++.dg/lto/20090313_0.C: Add -flinker-output=nolto-rel.\n\t* testsuite/g++.dg/lto/20091002-2_0.C: Add -flinker-output=nolto-rel.\n\t* testsuite/g++.dg/lto/20091002-3_0.C: Add -flinker-output=nolto-rel.\n\t* testsuite/g++.dg/lto/20091026-1_0.C: Add -flinker-output=nolto-rel.\n\t* testsuite/g++.dg/lto/20100724-1_0.C: Add -flinker-output=nolto-rel.\n\t* testsuite/g++.dg/lto/20101010-4_0.C: Add -flinker-output=nolto-rel.\n\t* testsuite/g++.dg/lto/20101015-2_0.C: Add -flinker-output=nolto-rel.\n\t* testsuite/g++.dg/lto/20110311-1_0.C: Add -flinker-output=nolto-rel.\n\t* testsuite/g++.dg/lto/pr45621_0.C: Add -flinker-output=nolto-rel.\n\t* testsuite/g++.dg/lto/pr48042_0.C: Add -flinker-output=nolto-rel.\n\t* testsuite/g++.dg/lto/pr48354-1_0.C: Add -flinker-output=nolto-rel.\n\t* testsuite/g++.dg/lto/pr54625-1_0.c: Add -flinker-output=nolto-rel.\n\t* testsuite/g++.dg/lto/pr54625-2_0.c: Add -flinker-output=nolto-rel.\n\t* testsuite/g++.dg/lto/pr68811_0.C: Add -flinker-output=nolto-rel.\n\t* testsuite/g++.dg/torture/pr43760.C: New test. Add -flinker-output=nolto-rel.\n\t* testsuite/gcc.dg/lto/20081120-1_0.c: Add -flinker-output=nolto-rel.\n\t* testsuite/gcc.dg/lto/20081120-2_0.c: Add -flinker-output=nolto-rel.\n\t* testsuite/gcc.dg/lto/20081126_0.c: Add -flinker-output=nolto-rel.\n\t* testsuite/gcc.dg/lto/20081204-1_0.c: Add -flinker-output=nolto-rel.\n\t* testsuite/gcc.dg/lto/20081204-2_0.c: Add -flinker-output=nolto-rel.\n\t* testsuite/gcc.dg/lto/20081212-1_0.c: Add -flinker-output=nolto-rel.\n\t* testsuite/gcc.dg/lto/20081224_0.c: Add -flinker-output=nolto-rel.\n\t* testsuite/gcc.dg/lto/20090116_0.c: Add -flinker-output=nolto-rel.\n\t* testsuite/gcc.dg/lto/20090126-1_0.c: Add -flinker-output=nolto-rel.\n\t* testsuite/gcc.dg/lto/20090126-2_0.c: Add -flinker-output=nolto-rel.\n\t* testsuite/gcc.dg/lto/20090206-1_0.c: Add -flinker-output=nolto-rel.\n\t* testsuite/gcc.dg/lto/20090219_0.c: Add -flinker-output=nolto-rel.\n\t* testsuite/gcc.dg/lto/20091013-1_0.c: Add -flinker-output=nolto-rel.\n\t* testsuite/gcc.dg/lto/20091014-1_0.c: Add -flinker-output=nolto-rel.\n\t* testsuite/gcc.dg/lto/20091015-1_0.c: Add -flinker-output=nolto-rel.\n\t* testsuite/gcc.dg/lto/20091016-1_0.c: Add -flinker-output=nolto-rel.\n\t* testsuite/gcc.dg/lto/20091020-1_0.c: Add -flinker-output-nolto-rel.\n\t* testsuite/gcc.dg/lto/20091020-2_0.c: Add -flinker-output-nolto-rel.\n\t* testsuite/gcc.dg/lto/20091027-1_0.c: Add -flinker-output-nolto-rel.\n\t* testsuite/gcc.dg/lto/20100426_0.c: Add -flinker-output-nolto-rel.\n\t* testsuite/gcc.dg/lto/20100430-1_0.c: Add -flinker-output-nolto-rel.\n\t* testsuite/gcc.dg/lto/20100603-1_0.c: Add -flinker-output-nolto-rel.\n\t* testsuite/gcc.dg/lto/20100603-2_0.c: Add -flinker-output-nolto-rel.\n\t* testsuite/gcc.dg/lto/20100603-3_0.c: Add -flinker-output-nolto-rel.\n\t* testsuite/gcc.dg/lto/20111213-1_0.c: Add -flinker-output-nolto-rel.\n\t* testsuite/gcc.dg/lto/pr45736_0.c: Add -flinker-output-nolto-rel.\n\t* testsuite/gcc.dg/lto/pr52634_0.c: Add -flinker-output-nolto-rel.\n\t* testsuite/gcc.dg/lto/pr54702_0.c: Add -flinker-output-nolto-rel.\n\t* testsuite/gcc.dg/lto/pr59323-2_0.c: Add -flinker-output-nolto-rel.\n\t* testsuite/gcc.dg/lto/pr59323_0.c: Add -flinker-output-nolto-rel.\n\t* testsuite/gcc.dg/lto/pr60820_0.c: Add -flinker-output-nolto-rel.\n\t* testsuite/gcc.dg/lto/pr81406_0.c: Add -flinker-output-nolto-rel.\n\t* testsuite/gcc.dg/lto/pr83388_0.c: Add -flinker-output-nolto-rel.\n\t* testsuite/gfortran.dg/lto/20091016-1_0.f90: Add -flinker-output-nolto-rel.\n\t* testsuite/gfortran.dg/lto/20091028-1_0.f90: Add -flinker-output-nolto-rel.\n\t* testsuite/gfortran.dg/lto/20091028-2_0.f90: Add -flinker-output-nolto-rel.\n\t* testsuite/gfortran.dg/lto/pr46911_0.f: Add -flinker-output-nolto-rel.\n\t* testsuite/gfortran.dg/lto/pr47839_0.f90: Add -flinker-output-nolto-rel.\n\nFrom-SVN: r260963", "tree": {"sha": "ab2fb9dcd8a2e6aacec01cadb11d9ff8a8525399", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab2fb9dcd8a2e6aacec01cadb11d9ff8a8525399"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b42d196248425064ca9013f63510834744e169e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b42d196248425064ca9013f63510834744e169e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b42d196248425064ca9013f63510834744e169e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b42d196248425064ca9013f63510834744e169e/comments", "author": null, "committer": null, "parents": [{"sha": "6c363ddd67f5fc1a44d285100560d830ee04f630", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c363ddd67f5fc1a44d285100560d830ee04f630", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c363ddd67f5fc1a44d285100560d830ee04f630"}], "stats": {"total": 303, "additions": 250, "deletions": 53}, "files": [{"sha": "15034d21629b5c3388899047262ab387e6cf01d6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,3 +1,26 @@\n+2018-05-30  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* passes.c (ipa_write_summaries): Only modify statements if body\n+\tis in memory.\n+\t* cgraphunit.c (ipa_passes): Also produce intermeidate code when\n+\tincrementally linking.\n+\t(ipa_passes): Likewise.\n+\t* lto-cgraph.c (lto_output_node): When incrementally linking do not\n+\tpass down resolution info.\n+\t* common.opt (flag_incremental_link): Update info.\n+\t* gcc.c (plugin specs): Turn flinker-output=* to\n+\t-plugin-opt=-linker-output-known\n+\t* toplev.c (compile_file): Also cut compilation when doing incremental\n+\tlink.\n+\t* flag-types. (enum lto_partition_model): Add\n+\tLTO_LINKER_OUTPUT_NOLTOREL.\n+\t(invoke.texi): Add -flinker-output docs.\n+\t* ipa.c (symbol_table::remove_unreachable_nodes): Handle LTO incremental\n+\tlink same way as WPA; do not stream in dead initializers.\n+\n+\t* dwarf2out.c (dwarf2out_die_ref_for_decl,\n+\tdarf2out_register_external_decl): Support incremental link.\n+\n 2018-05-30  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* lto-opts.c (lto_write_options): Skip OPT_dumpdir, OPT_fresolution_."}, {"sha": "b2dafc669dde8aeea294e5afd4f19e8acfe5c843", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -2452,8 +2452,11 @@ ipa_passes (void)\n   if (flag_generate_lto || flag_generate_offload)\n     targetm.asm_out.lto_start ();\n \n-  if (!in_lto_p)\n+  if (!in_lto_p\n+      || flag_incremental_link == INCREMENTAL_LINK_LTO)\n     {\n+      if (!quiet_flag)\n+\tfprintf (stderr, \"Streaming LTO\\n\");\n       if (g->have_offload)\n \t{\n \t  section_name_prefix = OFFLOAD_SECTION_NAME_PREFIX;\n@@ -2472,7 +2475,9 @@ ipa_passes (void)\n   if (flag_generate_lto || flag_generate_offload)\n     targetm.asm_out.lto_end ();\n \n-  if (!flag_ltrans && (in_lto_p || !flag_lto || flag_fat_lto_objects))\n+  if (!flag_ltrans\n+      && ((in_lto_p && flag_incremental_link != INCREMENTAL_LINK_LTO)\n+\t  || !flag_lto || flag_fat_lto_objects))\n     execute_ipa_pass_list (passes->all_regular_ipa_passes);\n   invoke_plugin_callbacks (PLUGIN_ALL_IPA_PASSES_END, NULL);\n \n@@ -2559,7 +2564,8 @@ symbol_table::compile (void)\n \n   /* Do nothing else if any IPA pass found errors or if we are just streaming LTO.  */\n   if (seen_error ()\n-      || (!in_lto_p && flag_lto && !flag_fat_lto_objects))\n+      || ((!in_lto_p || flag_incremental_link == INCREMENTAL_LINK_LTO)\n+\t  && flag_lto && !flag_fat_lto_objects))\n     {\n       timevar_pop (TV_CGRAPHOPT);\n       return;"}, {"sha": "4aebcaf0656e731a1f1a4ad857bfbe5b0a8ba727", "filename": "gcc/common.opt", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -48,9 +48,10 @@ bool in_lto_p = false\n \n ; This variable is set to non-0 only by LTO front-end.  1 indicates that\n ; the output produced will be used for incrmeental linking (thus weak symbols\n-; can still be bound).\n+; can still be bound) and 2 indicates that the IL is going to be linked and\n+; and output to LTO object file.\n Variable\n-int flag_incremental_link = 0\n+enum incremental_link flag_incremental_link = INCREMENTAL_LINK_NONE\n \n ; 0 means straightforward implementation of complex divide acceptable.\n ; 1 means wide ranges of inputs must work for complex divide."}, {"sha": "3a24225690de1b054ac2ca850176205a7d648154", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -5860,7 +5860,8 @@ dwarf2out_die_ref_for_decl (tree decl, const char **sym,\n {\n   dw_die_ref die;\n \n-  if (flag_wpa && !decl_die_table)\n+  if ((flag_wpa || flag_incremental_link == INCREMENTAL_LINK_LTO)\n+      && !decl_die_table)\n     return false;\n \n   if (TREE_CODE (decl) == BLOCK)\n@@ -5870,10 +5871,11 @@ dwarf2out_die_ref_for_decl (tree decl, const char **sym,\n   if (!die)\n     return false;\n \n-  /* During WPA stage we currently use DIEs to store the\n-     decl <-> label + offset map.  That's quite inefficient but it\n-     works for now.  */\n-  if (flag_wpa)\n+  /* During WPA stage and incremental linking we currently use DIEs\n+     to store the decl <-> label + offset map.  That's quite inefficient\n+     but it works for now.  */\n+  if (flag_wpa\n+      || flag_incremental_link == INCREMENTAL_LINK_LTO)\n     {\n       dw_die_ref ref = get_AT_ref (die, DW_AT_abstract_origin);\n       if (!ref)\n@@ -5924,7 +5926,8 @@ dwarf2out_register_external_die (tree decl, const char *sym,\n   if (debug_info_level == DINFO_LEVEL_NONE)\n     return;\n \n-  if (flag_wpa && !decl_die_table)\n+  if ((flag_wpa\n+       || flag_incremental_link == INCREMENTAL_LINK_LTO) && !decl_die_table)\n     decl_die_table = hash_table<decl_die_hasher>::create_ggc (1000);\n \n   dw_die_ref die\n@@ -5959,7 +5962,8 @@ dwarf2out_register_external_die (tree decl, const char *sym,\n \tparent = BLOCK_DIE (ctx);\n       else if (TREE_CODE (ctx) == TRANSLATION_UNIT_DECL\n \t       /* Keep the 1:1 association during WPA.  */\n-\t       && !flag_wpa)\n+\t       && !flag_wpa\n+\t       && flag_incremental_link != INCREMENTAL_LINK_LTO)\n \t/* Otherwise all late annotations go to the main CU which\n \t   imports the original CUs.  */\n \tparent = comp_unit_die ();\n@@ -5980,7 +5984,7 @@ dwarf2out_register_external_die (tree decl, const char *sym,\n   switch (TREE_CODE (decl))\n     {\n     case TRANSLATION_UNIT_DECL:\n-      if (! flag_wpa)\n+      if (! flag_wpa && flag_incremental_link != INCREMENTAL_LINK_LTO)\n \t{\n \t  die = comp_unit_die ();\n \t  dw_die_ref import = new_die (DW_TAG_imported_unit, die, NULL_TREE);"}, {"sha": "500f6638f36ac3e244a1df6c16871b0e584fc2d4", "filename": "gcc/flag-types.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Fflag-types.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Fflag-types.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflag-types.h?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -261,6 +261,15 @@ enum sanitize_code {\n \t\t\t\t  | SANITIZE_BOUNDS_STRICT\n };\n \n+/* Settings of flag_incremental_link.  */\n+enum incremental_link {\n+  INCREMENTAL_LINK_NONE,\n+  /* Do incremental linking and produce binary.  */\n+  INCREMENTAL_LINK_NOLTO,\n+  /* Do incremental linking and produce IL.  */\n+  INCREMENTAL_LINK_LTO\n+};\n+\n /* Different trace modes.  */\n enum sanitize_coverage_code {\n   /* Trace PC.  */\n@@ -289,6 +298,7 @@ enum lto_partition_model {\n enum lto_linker_output {\n   LTO_LINKER_OUTPUT_UNKNOWN,\n   LTO_LINKER_OUTPUT_REL,\n+  LTO_LINKER_OUTPUT_NOLTOREL,\n   LTO_LINKER_OUTPUT_DYN,\n   LTO_LINKER_OUTPUT_PIE,\n   LTO_LINKER_OUTPUT_EXEC"}, {"sha": "2c597ec086a3bf470572694a06f8962c67101721", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -961,6 +961,7 @@ proper position among the other output files.  */\n     -plugin %(linker_plugin_file) \\\n     -plugin-opt=%(lto_wrapper) \\\n     -plugin-opt=-fresolution=%u.res \\\n+    %{flinker-output=*:-plugin-opt=-linker-output-known} \\\n     %{!nostdlib:%{!nodefaultlibs:%:pass-through-libs(%(link_gcc_c_sequence))}} \\\n     }\" PLUGIN_COND_CLOSE\n #else"}, {"sha": "634c69c2b5ce2c1657241514ac859c6651ca648b", "filename": "gcc/ipa.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -130,9 +130,11 @@ process_references (symtab_node *snode,\n \t\t     constant folding.  Keep references alive so partitioning\n \t\t     knows about potential references.  */\n \t\t  || (VAR_P (node->decl)\n-\t\t      && flag_wpa\n-\t\t      && ctor_for_folding (node->decl)\n-\t\t         != error_mark_node))))\n+\t\t      && (flag_wpa\n+\t\t\t  || flag_incremental_link\n+\t\t\t \t == INCREMENTAL_LINK_LTO)\n+\t\t      && dyn_cast <varpool_node *> (node)\n+\t\t      \t   ->ctor_useable_for_folding_p ()))))\n \t{\n \t  /* Be sure that we will not optimize out alias target\n \t     body.  */\n@@ -622,7 +624,7 @@ symbol_table::remove_unreachable_nodes (FILE *file)\n \t    fprintf (file, \" %s\", vnode->dump_name ());\n           vnext = next_variable (vnode);\n \t  /* Signal removal to the debug machinery.  */\n-\t  if (! flag_wpa)\n+\t  if (! flag_wpa || flag_incremental_link == INCREMENTAL_LINK_LTO)\n \t    {\n \t      vnode->definition = false;\n \t      (*debug_hooks->late_global_decl) (vnode->decl);\n@@ -640,8 +642,9 @@ symbol_table::remove_unreachable_nodes (FILE *file)\n \t      changed = true;\n \t    }\n \t  /* Keep body if it may be useful for constant folding.  */\n-\t  if ((init = ctor_for_folding (vnode->decl)) == error_mark_node\n-\t      && !POINTER_BOUNDS_P (vnode->decl))\n+\t  if ((flag_wpa || flag_incremental_link == INCREMENTAL_LINK_LTO)\n+\t      || ((init = ctor_for_folding (vnode->decl)) == error_mark_node\n+\t          && !POINTER_BOUNDS_P (vnode->decl)))\n \t    vnode->remove_initializer ();\n \t  else\n \t    DECL_INITIAL (vnode->decl) = init;"}, {"sha": "b23d1890fc0cea8d844df7e20ceb728e167a6842", "filename": "gcc/lto-cgraph.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Flto-cgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Flto-cgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-cgraph.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -540,7 +540,10 @@ lto_output_node (struct lto_simple_output_block *ob, struct cgraph_node *node,\n   bp_pack_value (&bp, node->thunk.thunk_p, 1);\n   bp_pack_value (&bp, node->parallelized_function, 1);\n   bp_pack_enum (&bp, ld_plugin_symbol_resolution,\n-\t        LDPR_NUM_KNOWN, node->resolution);\n+\t        LDPR_NUM_KNOWN,\n+\t\t/* When doing incremental link, we will get new resolution\n+\t\t   info next time we process the file.  */\n+\t\tflag_incremental_link ? LDPR_UNKNOWN : node->resolution);\n   bp_pack_value (&bp, node->instrumentation_clone, 1);\n   bp_pack_value (&bp, node->split_part, 1);\n   streamer_write_bitpack (&bp);"}, {"sha": "5e1e0a9d8ee7b2a0450afde320e21c576565f751", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,3 +1,11 @@\n+2018-05-30  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* lang.opt (lto_linker_output): Add nolto-rel.\n+\t* lto-lang.c (lto_post_options): Handle LTO_LINKER_OUTPUT_REL\n+\tand LTO_LINKER_OUTPUT_NOLTOREL.\n+\t(lto_init): Generate lto when doing incremental link.\n+\t* lto.c (lto_precess_name): Add lto1-inclink.\n+\n 2018-05-18  Jan Hubicka  <jh@suse.cz>\n \n \tPR lto/85583"}, {"sha": "1d280a8e97d9b53baa0f468eec12aa8e5b84d313", "filename": "gcc/lto/lang.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Flto%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Flto%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flang.opt?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -33,6 +33,9 @@ Enum(lto_linker_output) String(unknown) Value(LTO_LINKER_OUTPUT_UNKNOWN)\n EnumValue\n Enum(lto_linker_output) String(rel) Value(LTO_LINKER_OUTPUT_REL)\n \n+EnumValue\n+Enum(lto_linker_output) String(nolto-rel) Value(LTO_LINKER_OUTPUT_NOLTOREL)\n+\n EnumValue\n Enum(lto_linker_output) String(dyn) Value(LTO_LINKER_OUTPUT_DYN)\n "}, {"sha": "1a70f4f1eeca04c0adc1c71d75c606d38900d1f2", "filename": "gcc/lto/lto-lang.c", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Flto%2Flto-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Flto%2Flto-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-lang.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -879,8 +879,28 @@ lto_post_options (const char **pfilename ATTRIBUTE_UNUSED)\n   switch (flag_lto_linker_output)\n     {\n     case LTO_LINKER_OUTPUT_REL: /* .o: incremental link producing LTO IL  */\n+      /* Configure compiler same way as normal frontend would do with -flto:\n+\t this way we read the trees (declarations & types), symbol table,\n+\t optimization summaries and link them. Subsequently we output new LTO\n+\t file.  */\n+      flag_lto = \"\";\n+      flag_incremental_link = INCREMENTAL_LINK_LTO;\n       flag_whole_program = 0;\n-      flag_incremental_link = 1;\n+      flag_wpa = 0;\n+      flag_generate_lto = 1;\n+      /* It would be cool to produce .o file directly, but our current\n+\t simple objects does not contain the lto symbol markers.  Go the slow\n+\t way through the asm file.  */\n+      lang_hooks.lto.begin_section = lhd_begin_section;\n+      lang_hooks.lto.append_data = lhd_append_data;\n+      lang_hooks.lto.end_section = lhd_end_section;\n+      if (flag_ltrans)\n+\terror (\"-flinker-output=rel and -fltrans are mutually exclussive\");\n+      break;\n+\n+    case LTO_LINKER_OUTPUT_NOLTOREL: /* .o: incremental link producing asm  */\n+      flag_whole_program = 0;\n+      flag_incremental_link = INCREMENTAL_LINK_NOLTO;\n       break;\n \n     case LTO_LINKER_OUTPUT_DYN: /* .so: PID library */\n@@ -1269,7 +1289,8 @@ lto_init (void)\n   in_lto_p = true;\n \n   /* We need to generate LTO if running in WPA mode.  */\n-  flag_generate_lto = (flag_wpa != NULL);\n+  flag_generate_lto = (flag_incremental_link == INCREMENTAL_LINK_LTO\n+\t\t       || flag_wpa != NULL);\n \n   /* Create the basic integer types.  */\n   build_common_tree_nodes (flag_signed_char);"}, {"sha": "86f3fe49a68b46218e883fc457e831832a9b10f3", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -3257,7 +3257,8 @@ static void\n lto_process_name (void)\n {\n   if (flag_lto)\n-    setproctitle (\"lto1-lto\");\n+    setproctitle (flag_incremental_link == INCREMENTAL_LINK_LTO\n+\t\t  ? \"lto1-inclink\" : \"lto1-lto\");\n   if (flag_wpa)\n     setproctitle (\"lto1-wpa\");\n   if (flag_ltrans)"}, {"sha": "2c711f0c0b0f2a41472801a357ce962920e8c0c4", "filename": "gcc/passes.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -2708,7 +2708,7 @@ ipa_write_summaries (void)\n     {\n       struct cgraph_node *node = order[i];\n \n-      if (node->has_gimple_body_p ())\n+      if (gimple_has_body_p (node->decl))\n \t{\n \t  /* When streaming out references to statements as part of some IPA\n \t     pass summary, the statements need to have uids assigned and the"}, {"sha": "1d2af0a36bb6edeb867faf865f772ea60e027c80", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,3 +1,68 @@\n+2018-05-30  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* testsuite/g++.dg/lto/20081109-1_0.C: Add -flinker-output=nolto-rel.\n+\t* testsuite/g++.dg/lto/20081118_0.C: Add -flinker-output=nolto-rel.\n+\t* testsuite/g++.dg/lto/20081119-1_0.C: Add -flinker-output=nolto-rel.\n+\t* testsuite/g++.dg/lto/20081120-1_0.C: Add -flinker-output=nolto-rel.\n+\t* testsuite/g++.dg/lto/20081120-2_0.C: Add -flinker-output=nolto-rel.\n+\t* testsuite/g++.dg/lto/20081123_0.C: Add -flinker-output=nolto-rel.\n+\t* testsuite/g++.dg/lto/20081204-1_0.C: Add -flinker-output=nolto-rel.\n+\t* testsuite/g++.dg/lto/20081219_0.C: Add -flinker-output=nolto-rel.\n+\t* testsuite/g++.dg/lto/20090302_0.C: Add -flinker-output=nolto-rel.\n+\t* testsuite/g++.dg/lto/20090313_0.C: Add -flinker-output=nolto-rel.\n+\t* testsuite/g++.dg/lto/20091002-2_0.C: Add -flinker-output=nolto-rel.\n+\t* testsuite/g++.dg/lto/20091002-3_0.C: Add -flinker-output=nolto-rel.\n+\t* testsuite/g++.dg/lto/20091026-1_0.C: Add -flinker-output=nolto-rel.\n+\t* testsuite/g++.dg/lto/20100724-1_0.C: Add -flinker-output=nolto-rel.\n+\t* testsuite/g++.dg/lto/20101010-4_0.C: Add -flinker-output=nolto-rel.\n+\t* testsuite/g++.dg/lto/20101015-2_0.C: Add -flinker-output=nolto-rel.\n+\t* testsuite/g++.dg/lto/20110311-1_0.C: Add -flinker-output=nolto-rel.\n+\t* testsuite/g++.dg/lto/pr45621_0.C: Add -flinker-output=nolto-rel.\n+\t* testsuite/g++.dg/lto/pr48042_0.C: Add -flinker-output=nolto-rel.\n+\t* testsuite/g++.dg/lto/pr48354-1_0.C: Add -flinker-output=nolto-rel.\n+\t* testsuite/g++.dg/lto/pr54625-1_0.c: Add -flinker-output=nolto-rel.\n+\t* testsuite/g++.dg/lto/pr54625-2_0.c: Add -flinker-output=nolto-rel.\n+\t* testsuite/g++.dg/lto/pr68811_0.C: Add -flinker-output=nolto-rel.\n+\t* testsuite/g++.dg/torture/pr43760.C: New test. Add -flinker-output=nolto-rel.\n+\t* testsuite/gcc.dg/lto/20081120-1_0.c: Add -flinker-output=nolto-rel.\n+\t* testsuite/gcc.dg/lto/20081120-2_0.c: Add -flinker-output=nolto-rel.\n+\t* testsuite/gcc.dg/lto/20081126_0.c: Add -flinker-output=nolto-rel.\n+\t* testsuite/gcc.dg/lto/20081204-1_0.c: Add -flinker-output=nolto-rel.\n+\t* testsuite/gcc.dg/lto/20081204-2_0.c: Add -flinker-output=nolto-rel.\n+\t* testsuite/gcc.dg/lto/20081212-1_0.c: Add -flinker-output=nolto-rel.\n+\t* testsuite/gcc.dg/lto/20081224_0.c: Add -flinker-output=nolto-rel.\n+\t* testsuite/gcc.dg/lto/20090116_0.c: Add -flinker-output=nolto-rel.\n+\t* testsuite/gcc.dg/lto/20090126-1_0.c: Add -flinker-output=nolto-rel.\n+\t* testsuite/gcc.dg/lto/20090126-2_0.c: Add -flinker-output=nolto-rel.\n+\t* testsuite/gcc.dg/lto/20090206-1_0.c: Add -flinker-output=nolto-rel.\n+\t* testsuite/gcc.dg/lto/20090219_0.c: Add -flinker-output=nolto-rel.\n+\t* testsuite/gcc.dg/lto/20091013-1_0.c: Add -flinker-output=nolto-rel.\n+\t* testsuite/gcc.dg/lto/20091014-1_0.c: Add -flinker-output=nolto-rel.\n+\t* testsuite/gcc.dg/lto/20091015-1_0.c: Add -flinker-output=nolto-rel.\n+\t* testsuite/gcc.dg/lto/20091016-1_0.c: Add -flinker-output=nolto-rel.\n+\t* testsuite/gcc.dg/lto/20091020-1_0.c: Add -flinker-output-nolto-rel.\n+\t* testsuite/gcc.dg/lto/20091020-2_0.c: Add -flinker-output-nolto-rel.\n+\t* testsuite/gcc.dg/lto/20091027-1_0.c: Add -flinker-output-nolto-rel.\n+\t* testsuite/gcc.dg/lto/20100426_0.c: Add -flinker-output-nolto-rel.\n+\t* testsuite/gcc.dg/lto/20100430-1_0.c: Add -flinker-output-nolto-rel.\n+\t* testsuite/gcc.dg/lto/20100603-1_0.c: Add -flinker-output-nolto-rel.\n+\t* testsuite/gcc.dg/lto/20100603-2_0.c: Add -flinker-output-nolto-rel.\n+\t* testsuite/gcc.dg/lto/20100603-3_0.c: Add -flinker-output-nolto-rel.\n+\t* testsuite/gcc.dg/lto/20111213-1_0.c: Add -flinker-output-nolto-rel.\n+\t* testsuite/gcc.dg/lto/pr45736_0.c: Add -flinker-output-nolto-rel.\n+\t* testsuite/gcc.dg/lto/pr52634_0.c: Add -flinker-output-nolto-rel.\n+\t* testsuite/gcc.dg/lto/pr54702_0.c: Add -flinker-output-nolto-rel.\n+\t* testsuite/gcc.dg/lto/pr59323-2_0.c: Add -flinker-output-nolto-rel.\n+\t* testsuite/gcc.dg/lto/pr59323_0.c: Add -flinker-output-nolto-rel.\n+\t* testsuite/gcc.dg/lto/pr60820_0.c: Add -flinker-output-nolto-rel.\n+\t* testsuite/gcc.dg/lto/pr81406_0.c: Add -flinker-output-nolto-rel.\n+\t* testsuite/gcc.dg/lto/pr83388_0.c: Add -flinker-output-nolto-rel.\n+\t* testsuite/gfortran.dg/lto/20091016-1_0.f90: Add -flinker-output-nolto-rel.\n+\t* testsuite/gfortran.dg/lto/20091028-1_0.f90: Add -flinker-output-nolto-rel.\n+\t* testsuite/gfortran.dg/lto/20091028-2_0.f90: Add -flinker-output-nolto-rel.\n+\t* testsuite/gfortran.dg/lto/pr46911_0.f: Add -flinker-output-nolto-rel.\n+\t* testsuite/gfortran.dg/lto/pr47839_0.f90: Add -flinker-output-nolto-rel.\n+\n 2018-05-30  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \tRevert:"}, {"sha": "3b5860011db7e03674189232654232db1623e20c", "filename": "gcc/testsuite/g++.dg/lto/20081109-1_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081109-1_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081109-1_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081109-1_0.C?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,6 @@\n // { dg-lto-do link }\n // { dg-require-effective-target fpic }\n // { dg-lto-options {{-fPIC -flto -flto-partition=1to1}} }\n-// { dg-extra-ld-options \"-fPIC -flto -flto-partition=1to1 -r -nostdlib -fno-exceptions\" }\n+// { dg-extra-ld-options \"-fPIC -flto -flto-partition=1to1 -r -nostdlib -fno-exceptions -flinker-output=nolto-rel\" }\n void func(); class Foo { };\n void bar() { try { func(); } catch (Foo) { } };"}, {"sha": "f49157bfbfd91f8a138be27a9494a3cc1aeb77d1", "filename": "gcc/testsuite/g++.dg/lto/20081118_0.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081118_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081118_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081118_0.C?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,7 @@\n /* { dg-lto-do link } */\n /* { dg-require-effective-target fpic } */\n /* { dg-lto-options {{-fPIC -flto -flto-partition=1to1 -r -nostdlib}} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n \n /* We used to ICE because of dangling pointers.  */\n "}, {"sha": "2fd320192d5193bd795763fc2bb027f2a06a2227", "filename": "gcc/testsuite/g++.dg/lto/20081119-1_0.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081119-1_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081119-1_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081119-1_0.C?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,7 @@\n /* { dg-lto-do link } */\n /* { dg-require-effective-target fpic } */\n /* { dg-lto-options {{-fPIC -flto -flto-partition=1to1 -r -nostdlib}} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n \n #include \"20081119-1.h\"\n "}, {"sha": "c78e5d97dc3800e6abd54a7f4efc19289fbac39f", "filename": "gcc/testsuite/g++.dg/lto/20081120-1_0.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081120-1_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081120-1_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081120-1_0.C?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,5 +1,6 @@\n // { dg-lto-do link }\n // { dg-lto-options {{-flto -r -nostdlib}} }\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n extern \"C\"\n {\n  extern __inline __attribute__((__gnu_inline__)) int pthread_equal(int, int)"}, {"sha": "8deae1bb6bab5e55a2eea3b3f41baba67c27d6a5", "filename": "gcc/testsuite/g++.dg/lto/20081120-2_0.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081120-2_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081120-2_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081120-2_0.C?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,5 +1,6 @@\n // { dg-lto-do link }\n // { dg-lto-options {{-flto -r -nostdlib}} }\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n template < typename > struct Foo\n {\n  inline void rdstate() {"}, {"sha": "3bbe69d0874f50985ba22c6fc9832dedc9f6adf4", "filename": "gcc/testsuite/g++.dg/lto/20081123_0.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081123_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081123_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081123_0.C?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,7 @@\n // { dg-lto-do link }\n // { dg-require-effective-target fpic }\n // { dg-lto-options {{-flto -flto-partition=1to1 -r -nostdlib -fPIC}} }\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n \n int\n f(void)"}, {"sha": "e3b4cead8c640595d4189c28102a8c7ce053b29e", "filename": "gcc/testsuite/g++.dg/lto/20081204-1_0.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081204-1_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081204-1_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081204-1_0.C?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,7 @@\n /* { dg-lto-do link } */\n /* { dg-require-effective-target fpic } */\n /* { dg-lto-options {{-flto -flto-partition=1to1 -fPIC -r -nostdlib}} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n \n /* Tests for the absence during linking of:\n    lto1: error: type of '_ZTVN10__cxxabiv120__si_class_type_infoE' does"}, {"sha": "627deeb0376f8a7b7883afac8c38ba3671999f2c", "filename": "gcc/testsuite/g++.dg/lto/20081219_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081219_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081219_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20081219_0.C?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,7 +1,7 @@\n // { dg-lto-do link }\n // { dg-require-effective-target fpic }\n // { dg-lto-options {{-fPIC -flto -flto-partition=1to1 -O2}} }\n-// { dg-extra-ld-options \"-O2 -fPIC -flto -flto-partition=1to1 -r -nostdlib\" }\n+// { dg-extra-ld-options \"-O2 -fPIC -flto -flto-partition=1to1 -r -nostdlib -flinker-output=nolto-rel\" }\n \n typedef long int ptrdiff_t;\n extern \"C\""}, {"sha": "3a617879e19f362731d3eed7408a4c70fe53986d", "filename": "gcc/testsuite/g++.dg/lto/20090302_0.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20090302_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20090302_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20090302_0.C?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,7 @@\n /* { dg-lto-do link } */\n /* { dg-require-effective-target fpic } */\n /* { dg-lto-options {{-fPIC -flto -flto-partition=1to1 -r -nostdlib}} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n struct Foo {\n   bool Mumble();\n   static void Bar() { if (foo_->Mumble()) foo_ = 0; }"}, {"sha": "c883cefe5b6195a3931660f8e6c60a96dd571484", "filename": "gcc/testsuite/g++.dg/lto/20090313_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20090313_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20090313_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20090313_0.C?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,6 @@\n // { dg-lto-do link }\n // { dg-require-effective-target fpic }\n // { dg-lto-options {{-flto -flto-partition=1to1 -fPIC}} }\n-// { dg-extra-ld-options \"-flto -flto-partition=1to1 -r -nostdlib\" }\n+// { dg-extra-ld-options \"-flto -flto-partition=1to1 -r -nostdlib -flinker-output=nolto-rel\" }\n \n int X;"}, {"sha": "06b75298338ecd3b7130c0ac4bc3a959663a206b", "filename": "gcc/testsuite/g++.dg/lto/20091002-2_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20091002-2_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20091002-2_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20091002-2_0.C?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,7 +1,7 @@\n // { dg-lto-do link }\n // { dg-require-effective-target fpic }\n // { dg-lto-options {{-fPIC}} }\n-// { dg-extra-ld-options \"-fPIC -r -nostdlib\" }\n+// { dg-extra-ld-options \"-fPIC -r -nostdlib -flinker-output=nolto-rel\" }\n \n class DataArray {\n     int max() const    { return 0; }"}, {"sha": "b49fc67e8f437dad656ab4ca282b7acf4ad004e8", "filename": "gcc/testsuite/g++.dg/lto/20091002-3_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20091002-3_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20091002-3_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20091002-3_0.C?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,7 +1,7 @@\n // { dg-lto-do link }\n // { dg-require-effective-target fpic }\n // { dg-lto-options {{-fPIC}} }\n-// { dg-extra-ld-options \"-fPIC -r -nostdlib\" }\n+// { dg-extra-ld-options \"-fPIC -r -nostdlib -flinker-output=nolto-rel\" }\n \n template < class T > \n class DataArray {"}, {"sha": "06eff292cb610d0c56db5276da5f3bc6c47091f1", "filename": "gcc/testsuite/g++.dg/lto/20091026-1_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20091026-1_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20091026-1_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20091026-1_0.C?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,5 +1,5 @@\n // { dg-lto-do link }\n-// { dg-extra-ld-options \"-r -nostdlib\" }\n+// { dg-extra-ld-options \"-r -nostdlib -flinker-output=nolto-rel\" }\n \n #include \"20091026-1_a.h\"\n cObject *cHead::find(const char *objname) const"}, {"sha": "f4f7e72b885810b5ad8626a1d690d4bb94fed8f0", "filename": "gcc/testsuite/g++.dg/lto/20100724-1_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20100724-1_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20100724-1_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20100724-1_0.C?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,6 @@\n /* { dg-lto-do link } */\n /* { dg-lto-options {{-ftoplevel-reorder -flto -flto-partition=none} {-ftoplevel-reorder -flto -flto-partition=1to1}} } */\n-/* { dg-extra-ld-options {-r -nostdlib} } */\n+/* { dg-extra-ld-options {-r -nostdlib -flinker-output=nolto-rel} } */\n \n struct Foo { virtual ~Foo(); };\n struct Bar:public Foo { Bar() { } };"}, {"sha": "83499947da72a84048de22293f121d054084c75b", "filename": "gcc/testsuite/g++.dg/lto/20101010-4_0.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20101010-4_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20101010-4_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20101010-4_0.C?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,5 +1,6 @@\n // { dg-lto-do link }\n // { dg-lto-options { { -std=c++0x -flto -r -nostdlib } { -std=c++0x -flto -g -r -nostdlib } } }\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n \n typedef decltype(nullptr) nullptr_t;\n class shared_ptr {"}, {"sha": "fa0e934d49a263d3a7fc2187358c2557508de606", "filename": "gcc/testsuite/g++.dg/lto/20101015-2_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20101015-2_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20101015-2_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20101015-2_0.C?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,6 @@\n // { dg-lto-do link }\n // { dg-lto-options { { -flto } { -g -flto } } }\n-// { dg-extra-ld-options \"-r -nostdlib\" }\n+// { dg-extra-ld-options \"-r -nostdlib -flinker-output=nolto-rel\" }\n \n struct Base { ~Base (); };\n void fun(void) { struct Deriv : Base { } x; }"}, {"sha": "331c9ed28dc585606b43c9dfb0d98359942ef7d7", "filename": "gcc/testsuite/g++.dg/lto/20110311-1_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20110311-1_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20110311-1_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20110311-1_0.C?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-lto-do link } */\n-/* { dg-extra-ld-options \"-r -nostdlib\" } */\n+/* { dg-extra-ld-options \"-r -nostdlib -flinker-output=nolto-rel\" } */\n \n struct NullType {};\n "}, {"sha": "f34b3b70fa7b4d682ed2ba9098faa03c3f81093f", "filename": "gcc/testsuite/g++.dg/lto/pr45621_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr45621_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr45621_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr45621_0.C?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,5 +1,5 @@\n // { dg-lto-do assemble }\n-// { dg-extra-ld-options \"-O2 -fipa-cp-clone -flto -nostdlib -r\" }\n+// { dg-extra-ld-options \"-O2 -fipa-cp-clone -flto -nostdlib -r -flinker-output=nolto-rel\" }\n #include \"pr45621.h\"\n \n void"}, {"sha": "7754e7ec64fdf764965ce301f01a907c526c2fd9", "filename": "gcc/testsuite/g++.dg/lto/pr48042_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr48042_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr48042_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr48042_0.C?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,5 +1,5 @@\n // { dg-lto-do link }\n-// { dg-extra-ld-options \"-r -nostdlib -g\" }\n+// { dg-extra-ld-options \"-r -nostdlib -g -flinker-output=nolto-rel\" }\n \n class A {\n     virtual int x() = 0;"}, {"sha": "f1000657b4a101b26e52e7a18fdf70144e38aee9", "filename": "gcc/testsuite/g++.dg/lto/pr48354-1_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr48354-1_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr48354-1_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr48354-1_0.C?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,6 @@\n // { dg-lto-do link }\n // { dg-lto-options { { -g -flto } } }\n-// { dg-extra-ld-options \"-r -nostdlib\" }\n+// { dg-extra-ld-options \"-r -nostdlib -flinker-output=nolto-rel\" }\n \n template<typename T> struct Identity { typedef T type; };\n struct S {"}, {"sha": "43cba36a30f853ba03c409a6ce79374149fe18e8", "filename": "gcc/testsuite/g++.dg/lto/pr54625-1_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr54625-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr54625-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr54625-1_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-lto-do link } */\n-/* { dg-extra-ld-options { -r -nostdlib } } */\n+/* { dg-extra-ld-options { -r -nostdlib -flinker-output=nolto-rel } } */\n \n float a;\n double sin ();"}, {"sha": "5873b793c4fe31ccecea6d092a1a90bdad39e427", "filename": "gcc/testsuite/g++.dg/lto/pr54625-2_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr54625-2_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr54625-2_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr54625-2_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-lto-do link } */\n-/* { dg-extra-ld-options { -r -nostdlib } } */\n+/* { dg-extra-ld-options { -r -nostdlib -flinker-output=nolto-rel } } */\n \n float a;\n double sin ();"}, {"sha": "a18dc26eb8e8b30402e58c7c555df1a7b66a3862", "filename": "gcc/testsuite/g++.dg/lto/pr68811_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr68811_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr68811_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr68811_0.C?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,6 @@\n // { dg-lto-do link }\n /* { dg-lto-options { { -O2 -w } { -w } } } */\n-// { dg-extra-ld-options \"-r -nostdlib\" }\n+// { dg-extra-ld-options \"-r -nostdlib -flinker-output=nolto-rel\" }\n extern \"C\" char *strcpy(char *, const char *);\n char InitXPCOMGlue_lastSlash;\n void InitXPCOMGlue() { strcpy(&InitXPCOMGlue_lastSlash, \".so\"); }"}, {"sha": "eae8c5e847d8a03e38a58c76aef025005b1bf6c4", "filename": "gcc/testsuite/g++.dg/torture/pr85583.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr85583.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr85583.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr85583.C?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do link } */\n+class b {\n+public:\n+  virtual ~b();\n+};\n+template <typename> class c : b {};\n+class B {\n+  c<char> d;\n+};\n+extern template class c<char>;\n+int\n+main(void) { B a; return 0; }\n+"}, {"sha": "c426fd2f74a5d57aaa94fa464c3ee54457b6ef6d", "filename": "gcc/testsuite/gcc.dg/lto/20081120-1_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081120-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081120-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081120-1_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,5 +1,6 @@\n /* { dg-lto-do link } */\n /* { dg-lto-options {{-flto -r -nostdlib}} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n extern int stat(void) __asm__(\"\" \"stat64\");\n extern inline int stat(void) { }\n static void foo(void) { stat(); }"}, {"sha": "762e0ffc742a0d41247cb623a6497d2142465450", "filename": "gcc/testsuite/gcc.dg/lto/20081120-2_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081120-2_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081120-2_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081120-2_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,3 +1,4 @@\n /* { dg-lto-do link } */\n /* { dg-lto-options {{-flto -flto-partition=1to1 -r -nostdlib}} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n void bar(void) {}"}, {"sha": "ce65562167dae4c3d20e6d6638ed4d3d584de392", "filename": "gcc/testsuite/gcc.dg/lto/20081126_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081126_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081126_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081126_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,7 @@\n /* { dg-lto-do link } */\n /* { dg-skip-if \"\" { ! { i?86-*-* x86_64-*-* } } } */\n /* { dg-lto-options {{-flto -r -nostdlib}} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n \n int f(void) {\n   register int ri asm(\"edi\");"}, {"sha": "b8909310657566471f64150c7961f7883f5518a7", "filename": "gcc/testsuite/gcc.dg/lto/20081204-1_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081204-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081204-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081204-1_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,7 @@\n /* { dg-lto-do link } */\n /* { dg-require-effective-target fpic } */\n /* { dg-lto-options {{-flto -flto-partition=1to1 -fPIC -r -nostdlib}} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n \n /* Tests for the absence during linking of:\n    lto1: error: type of 'i' does not match original declaration  */"}, {"sha": "0770567067830685fb099749241670ddd027f056", "filename": "gcc/testsuite/gcc.dg/lto/20081204-2_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081204-2_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081204-2_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081204-2_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,5 +1,6 @@\n /* { dg-lto-do link } */\n /* { dg-skip-if \"\" { ! { i?86-*-* x86_64-*-* } } } */\n /* { dg-lto-options {{-w -flto -fPIC -r -nostdlib}} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n \n register int ri asm(\"edi\");"}, {"sha": "327821a73cf05cb2b5830e96efe03415b39c6f50", "filename": "gcc/testsuite/gcc.dg/lto/20081212-1_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081212-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081212-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081212-1_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-lto-do link } */\n /* { dg-lto-options {{-r -nostdlib}} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n int exported_var = 42;\n /* { dg-final { scan-symbol \"exported_var\" } } */"}, {"sha": "b319acb562e06e7b0a76214e9bff6f180e36881f", "filename": "gcc/testsuite/gcc.dg/lto/20081224_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081224_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081224_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20081224_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,7 @@\n /* { dg-lto-do link } */\n /* { dg-require-effective-target fpic } */\n /* { dg-lto-options {{-flto -flto-partition=1to1 -r -nostdlib -fPIC}} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n #include \"20081224_0.h\"\n \n extern struct foo x;"}, {"sha": "dc8043c368aa0277fb83daefbdc7d144bebcf157", "filename": "gcc/testsuite/gcc.dg/lto/20090116_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090116_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090116_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090116_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,7 +1,7 @@\n /* { dg-lto-do link } */\n /* { dg-require-effective-target fpic } */\n /* { dg-lto-options {{-O1 -flto -flto-partition=1to1 -fPIC}} } */\n-/* { dg-extra-ld-options {-r -nostdlib -O0} } */\n+/* { dg-extra-ld-options {-r -nostdlib -O0 -flinker-output=nolto-rel} } */\n \n int foo(void) {\n  int ret, i;"}, {"sha": "6e8f741671969ac428d5ad8df7632f28e514b547", "filename": "gcc/testsuite/gcc.dg/lto/20090126-1_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090126-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090126-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090126-1_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,6 @@\n /* { dg-lto-do link } */\n /* { dg-lto-options {{-O0 -flto -flto-partition=1to1}} } */\n-/* { dg-extra-ld-options {-r -nostdlib -O2 -flto -flto-partition=1to1} } */\n+/* { dg-extra-ld-options {-r -nostdlib -O2 -flto -flto-partition=1to1 -flinker-output=nolto-rel} } */\n \n int main(int argc, char **argv) {\n   return 0;"}, {"sha": "1ffa7aedd5039d9f75d19254513ba69b3667628d", "filename": "gcc/testsuite/gcc.dg/lto/20090126-2_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090126-2_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090126-2_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090126-2_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,7 +1,7 @@\n /* { dg-lto-do link } */\n /* { dg-require-effective-target fpic } */\n /* { dg-lto-options {{-fPIC -O2 -flto -flto-partition=1to1}} } */\n-/* { dg-extra-ld-options {-fno-PIC -r -nostdlib -O2 -flto -flto-partition=1to1} } */\n+/* { dg-extra-ld-options {-fno-PIC -r -nostdlib -O2 -flto -flto-partition=1to1 -flinker-output=nolto-rel} } */\n \n int main(int argc, char **argv) {\n   return 0;"}, {"sha": "1361042f29739a619ac80b53978fae7f90e9642e", "filename": "gcc/testsuite/gcc.dg/lto/20090206-1_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090206-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090206-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090206-1_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -3,6 +3,7 @@\n /* { dg-lto-options {{-fPIC -r -nostdlib -flto -flto-partition=1to1 -msse2}} } */\n /* { dg-require-effective-target sse2 } */\n /* { dg-suppress-ld-options {-fPIC -msse2} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n \n typedef short v8hi __attribute__((__vector_size__(16)));\n void func (void) {"}, {"sha": "66fbcd11bcafc3742fe34deb655fa419a4180f67", "filename": "gcc/testsuite/gcc.dg/lto/20090219_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090219_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090219_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20090219_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,7 @@\n /* { dg-lto-do link } */\n /* { dg-require-effective-target fpic } */\n /* { dg-lto-options {{-O3 -flto -flto-partition=1to1 -fPIC -r -nostdlib}} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n \n struct Foo { int f1, f2, f3, f4, f5; };\n "}, {"sha": "979677088ba1d662c6180da2e6d515e27df212e1", "filename": "gcc/testsuite/gcc.dg/lto/20091013-1_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091013-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091013-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091013-1_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,7 @@\n /* { dg-lto-do link } */\n /* { dg-require-effective-target fpic } */\n /* { dg-lto-options {{-fPIC -r -nostdlib -flto} {-fPIC -r -nostdlib -O2 -flto}} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n \n void * HeapAlloc(void*,unsigned int,unsigned long);\n "}, {"sha": "99295d3d95c0f5deaf9fc9b1b92521d8089ab11c", "filename": "gcc/testsuite/gcc.dg/lto/20091014-1_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091014-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091014-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091014-1_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,5 +1,6 @@\n /* { dg-lto-do link } */\n /* { dg-require-effective-target fpic } */\n /* { dg-lto-options {{-fPIC -r -nostdlib -flto}} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n \n /* Empty file.  See PR41173.  */"}, {"sha": "698a7d9a4896cc905ea75ef5afa9a814f58e9695", "filename": "gcc/testsuite/gcc.dg/lto/20091015-1_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091015-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091015-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091015-1_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,7 @@\n /* { dg-lto-do link } */\n /* { dg-require-effective-target fpic } */\n /* { dg-lto-options {{-fPIC -r -nostdlib -O2 -flto} {-fPIC -r -nostdlib -O2 -flto -flto-partition=1to1}} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n \n #include \"20091015-1_b.h\"\n void diagnostic_initialize (FILE **stream) { *stream = stderr; }"}, {"sha": "e7a2915cd5a9aa6ac89c451b7e493f00239368c4", "filename": "gcc/testsuite/gcc.dg/lto/20091016-1_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091016-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091016-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091016-1_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,7 @@\n /* { dg-lto-do link } */\n /* { dg-require-effective-target fpic } */\n /* { dg-lto-options {{-fPIC -r -nostdlib -O2 -flto}} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n \n typedef struct VEC_constructor_elt_gc { } VEC_constructor_elt_gc;\n #include \"20091016-1_a.h\""}, {"sha": "110d3e10e0511b35959b4f214fd9286a16427726", "filename": "gcc/testsuite/gcc.dg/lto/20091020-1_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091020-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091020-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091020-1_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,7 @@\n /* { dg-lto-do link } */\n /* { dg-require-effective-target fpic } */\n /* { dg-lto-options {{-fPIC -r -nostdlib -flto}} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n \n typedef struct {\n     int NumPackStreams;"}, {"sha": "e0b3839c5106902ad5adbc72c0952350d68157c5", "filename": "gcc/testsuite/gcc.dg/lto/20091020-2_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091020-2_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091020-2_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091020-2_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,7 @@\n /* { dg-lto-do link } */\n /* { dg-require-effective-target fpic } */\n /* { dg-lto-options {{-fPIC -r -nostdlib -flto}} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n \n typedef struct {\n     int NumPackStreams;"}, {"sha": "c9a867bc924e5f1c83ae95037dcd41a8d15163d6", "filename": "gcc/testsuite/gcc.dg/lto/20091027-1_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091027-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091027-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20091027-1_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-lto-do link } */\n-/* { dg-extra-ld-options \"-r -nostdlib\" } */\n+/* { dg-extra-ld-options \"-r -nostdlib -flinker-output=nolto-rel\" } */\n \n typedef struct _xmlDict xmlDict;\n struct _xmlDict {"}, {"sha": "49f7122e13cf0f017a79d8f67c78b45731bde1d0", "filename": "gcc/testsuite/gcc.dg/lto/20100426_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100426_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100426_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100426_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,5 +1,6 @@\n /* { dg-lto-do link } */\n /* { dg-lto-options {{-r -nostdlib -flto -g}} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n \n long Perl_my_htonl (long l)\n {"}, {"sha": "1ccfc9ac1ca726136ce789c4ac4662c461179681", "filename": "gcc/testsuite/gcc.dg/lto/20100430-1_0.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100430-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100430-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100430-1_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,5 +1,7 @@\n /* { dg-lto-do link } */\n /* { dg-lto-options {{-O2 -fprofile-arcs -flto -r -nostdlib}} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n+\n \n void\n expand_stmt_with_iterators_1 (void)"}, {"sha": "3cba481fe93fac07302a92d733ff1ee470935718", "filename": "gcc/testsuite/gcc.dg/lto/20100603-1_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100603-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100603-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100603-1_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-lto-do link } */\n /* { dg-extra-ld-options {-r -nostdlib} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n \n /* This file intentionally left empty.  */"}, {"sha": "94c6d007ef02a079ba4da29e42675f81dd002c0e", "filename": "gcc/testsuite/gcc.dg/lto/20100603-2_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100603-2_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100603-2_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100603-2_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,5 +1,6 @@\n /* { dg-lto-do link } */\n /* { dg-extra-ld-options {-r -nostdlib} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n \n int foo;\n int *i = &foo;"}, {"sha": "09d5b26e2305c96ce7e1e8dce185411e297d2cce", "filename": "gcc/testsuite/gcc.dg/lto/20100603-3_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100603-3_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100603-3_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100603-3_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,4 +1,5 @@\n /* { dg-lto-do link } */\n /* { dg-extra-ld-options {-r -nostdlib} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n \n int i = 42;"}, {"sha": "779c12d1def7dcfe4ffc530d11539473def84cc2", "filename": "gcc/testsuite/gcc.dg/lto/20111213-1_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20111213-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20111213-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20111213-1_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,7 @@\n /* { dg-lto-do link } */\n /* { dg-lto-options { { -flto -g } } } */\n /* { dg-extra-ld-options {-r -nostdlib} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n \n void gfc_be_parse_file (void)\n {"}, {"sha": "d481c453d08fddcfd5018325209de96099ee380d", "filename": "gcc/testsuite/gcc.dg/lto/pr45736_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr45736_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr45736_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr45736_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,5 +1,6 @@\n /* { dg-lto-do link } */\n /* { dg-lto-options {{-flto -r -nostdlib -O}} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n \n extern void baz (void);\n "}, {"sha": "7aba0cd3caf03e86d25c8fc021dfe758b8f9fb6d", "filename": "gcc/testsuite/gcc.dg/lto/pr52634_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr52634_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr52634_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr52634_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -2,6 +2,7 @@\n /* { dg-require-alias \"\" } */\n /* { dg-lto-do link } */\n /* { dg-lto-options {{-flto -r -nostdlib -flto-partition=1to1}} */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n extern int cfliteValueCallBacks;\n void baz (int *);\n int main () { baz(&cfliteValueCallBacks); }"}, {"sha": "2713d225dda5ba7eb31b7f83eb6a51d6d7e726b3", "filename": "gcc/testsuite/gcc.dg/lto/pr54702_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr54702_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr54702_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr54702_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,6 @@\n /* { dg-lto-do link } */\n /* { dg-lto-options { { -O2 -flto -w } } } */\n-/* { dg-extra-ld-options { -r -nostdlib } } */\n+/* { dg-extra-ld-options { -r -nostdlib -flinker-output=nolto-rel } } */\n \n #include <stdlib.h>\n void* f ()"}, {"sha": "61872dd5f75d7f8bcf853fafb298a3b2bc6626ea", "filename": "gcc/testsuite/gcc.dg/lto/pr59323-2_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr59323-2_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr59323-2_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr59323-2_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,6 @@\n /* { dg-lto-do link } */\n /* { dg-lto-options { { -O2 -g -flto } } } */\n-/* { dg-extra-ld-options { -r -nostdlib } } */\n+/* { dg-extra-ld-options { -r -nostdlib -flinker-output=nolto-rel } } */\n \n extern void bar(void);\n "}, {"sha": "ee780277657363ccaaedc9915cc5f296df713cf6", "filename": "gcc/testsuite/gcc.dg/lto/pr59323_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr59323_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr59323_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr59323_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,6 @@\n /* { dg-lto-do link } */\n /* { dg-lto-options { { -O2 -g -flto } } } */\n-/* { dg-extra-ld-options { -r -nostdlib } } */\n+/* { dg-extra-ld-options { -r -nostdlib -flinker-output=nolto-rel } } */\n \n extern void bar(void);\n "}, {"sha": "9fd2d2b76e42f955a8fcf01bf5d56153efae0585", "filename": "gcc/testsuite/gcc.dg/lto/pr60820_0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr60820_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr60820_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr60820_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,5 +1,6 @@\n /* { dg-lto-do link } */\n /* { dg-lto-options {{-flto -r -nostdlib -O2}} } */\n+/* { dg-extra-ld-options \"-flinker-output=nolto-rel\" } */\n /* { dg-skip-if \"no alias\" { *-*-darwin* } } */\n #include <stdio.h>\n struct in6_addr {int bah;};"}, {"sha": "26d4195bf638d67aac64913bc0baa3a29e272f66", "filename": "gcc/testsuite/gcc.dg/lto/pr81406_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr81406_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr81406_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr81406_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,7 +1,7 @@\n /* PR lto/81406 */\n /* { dg-lto-do link } */\n /* { dg-lto-options { { -O2 -g -flto } } } */\n-/* { dg-extra-ld-options { -g -r -nostdlib } } */\n+/* { dg-extra-ld-options { -g -r -nostdlib -flinker-output=nolto-rel } } */\n \n int a;\n int *foo (void);"}, {"sha": "eb60b0e17745ef6418919a08b70e20b4278bebc5", "filename": "gcc/testsuite/gcc.dg/lto/pr83388_0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr83388_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr83388_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr83388_0.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,6 @@\n /* { dg-lto-do link } */\n /* { dg-lto-options { { -O2 -flto -fsanitize=null } { -O0 -flto -fsanitize=null } } } */\n-/* { dg-extra-ld-options { -fno-sanitize=null -r -nostdlib } } */\n+/* { dg-extra-ld-options { -fno-sanitize=null -r -nostdlib -flinker-output=nolto-rel } } */\n \n enum { a } e(void);\n struct C {"}, {"sha": "5e96e88731ff0041b83d208bfcb0274069ec5bc6", "filename": "gcc/testsuite/gfortran.dg/lto/20091016-1_0.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgfortran.dg%2Flto%2F20091016-1_0.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgfortran.dg%2Flto%2F20091016-1_0.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Flto%2F20091016-1_0.f90?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,5 +1,6 @@\n ! { dg-lto-do link }\n ! { dg-lto-options {{-flto -g -fPIC -r -nostdlib} {-O -flto -g -fPIC -r -nostdlib}} }\n+! { dg-extra-ld-options \"-flinker-output=nolto-rel\" }\n \n       FUNCTION makenumberstring(x)\n       IMPLICIT NONE"}, {"sha": "3b32432f81d3385df66d9488b3ae3b42da1d979b", "filename": "gcc/testsuite/gfortran.dg/lto/20091028-1_0.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgfortran.dg%2Flto%2F20091028-1_0.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgfortran.dg%2Flto%2F20091028-1_0.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Flto%2F20091028-1_0.f90?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,5 +1,5 @@\n ! { dg-lto-do link }\n-! { dg-extra-ld-options \"-r -nostdlib -finline-functions\" }\n+! { dg-extra-ld-options \"-r -nostdlib -finline-functions -flinker-output=nolto-rel\" }\n \n SUBROUTINE int_gen_ti_header_char( hdrbuf, hdrbufsize, itypesize, &\n                               DataHandle, Element, VarName, Data, code )"}, {"sha": "3b32432f81d3385df66d9488b3ae3b42da1d979b", "filename": "gcc/testsuite/gfortran.dg/lto/20091028-2_0.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgfortran.dg%2Flto%2F20091028-2_0.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgfortran.dg%2Flto%2F20091028-2_0.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Flto%2F20091028-2_0.f90?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,5 +1,5 @@\n ! { dg-lto-do link }\n-! { dg-extra-ld-options \"-r -nostdlib -finline-functions\" }\n+! { dg-extra-ld-options \"-r -nostdlib -finline-functions -flinker-output=nolto-rel\" }\n \n SUBROUTINE int_gen_ti_header_char( hdrbuf, hdrbufsize, itypesize, &\n                               DataHandle, Element, VarName, Data, code )"}, {"sha": "1ee938d8c6ca4f01770f37f624d9d4b19409a9b9", "filename": "gcc/testsuite/gfortran.dg/lto/pr46911_0.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgfortran.dg%2Flto%2Fpr46911_0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgfortran.dg%2Flto%2Fpr46911_0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Flto%2Fpr46911_0.f?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,6 @@\n ! { dg-lto-do link }\n ! { dg-lto-options {{ -O2 -flto -g }} }\n-! { dg-extra-ld-options \"-r -nostdlib\" }\n+! { dg-extra-ld-options \"-r -nostdlib -flinker-output=nolto-rel\" }\n       common/main1/ eps(2)\n       call dalie6s(iqmod6,1,wx,cor6d)\n       end"}, {"sha": "dcc4223d80cab992f1c41580d607875c234489ca", "filename": "gcc/testsuite/gfortran.dg/lto/pr47839_0.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgfortran.dg%2Flto%2Fpr47839_0.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftestsuite%2Fgfortran.dg%2Flto%2Fpr47839_0.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Flto%2Fpr47839_0.f90?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -1,6 +1,6 @@\n ! { dg-lto-do link }\n ! { dg-lto-options {{ -g -flto }} }\n-! { dg-extra-ld-options \"-r -nostdlib\" }\n+! { dg-extra-ld-options \"-r -nostdlib -flinker-output=nolto-rel\" }\n \n MODULE globalvar_mod\n integer        :: xstop"}, {"sha": "8f812c2a475dda61d5eb3e1e61e2011c634329f3", "filename": "gcc/toplev.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b42d196248425064ca9013f63510834744e169e/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=5b42d196248425064ca9013f63510834744e169e", "patch": "@@ -495,7 +495,8 @@ compile_file (void)\n \n   /* Compilation unit is finalized.  When producing non-fat LTO object, we are\n      basically finished.  */\n-  if (in_lto_p || !flag_lto || flag_fat_lto_objects)\n+  if ((in_lto_p && flag_incremental_link != INCREMENTAL_LINK_LTO)\n+      || !flag_lto || flag_fat_lto_objects)\n     {\n       /* File-scope initialization for AddressSanitizer.  */\n       if (flag_sanitize & SANITIZE_ADDRESS)"}]}