{"sha": "39ec52254eda7cc2fab94aa7a5bb2fd1f395296b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzllYzUyMjU0ZWRhN2NjMmZhYjk0YWE3YTViYjJmZDFmMzk1Mjk2Yg==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2003-04-24T20:39:50Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2003-04-24T20:39:50Z"}, "message": "howto.html: Update some links.\n\n2003-04-24  Phil Edwards  <pme@gcc.gnu.org>\n\n\t* docs/html/17_intro/howto.html:  Update some links.\n\t* docs/html/18_support/howto.html:  Link doxygen numeric_limits notes.\n\t* docs/html/27_io/howto.html:  Link doxygen stdio_filebuf notes.\n\t* docs/html/ext/howto.html:  Link to demangler notes and API.\n\t* docs/html/faq/index.html:  Remove trailing whitespace.\n\t(1.4, 2.4, 3.8, 4.1):  Bring up to date.\n\t(5.6):  Change to a bulleted list.\n\n\t* docs/html/faq/index.txt, docs/html/documentation.html,\n\tdocs/html/17_intro/porting.html:  Regenerate.\n\nFrom-SVN: r66050", "tree": {"sha": "5d71cec95a2f49b25a00fe88f78dcb7168f74506", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d71cec95a2f49b25a00fe88f78dcb7168f74506"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39ec52254eda7cc2fab94aa7a5bb2fd1f395296b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39ec52254eda7cc2fab94aa7a5bb2fd1f395296b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39ec52254eda7cc2fab94aa7a5bb2fd1f395296b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39ec52254eda7cc2fab94aa7a5bb2fd1f395296b/comments", "author": null, "committer": null, "parents": [{"sha": "59325650b11bec0af9114c0dcb52567f33fbf2c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59325650b11bec0af9114c0dcb52567f33fbf2c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59325650b11bec0af9114c0dcb52567f33fbf2c0"}], "stats": {"total": 523, "additions": 259, "deletions": 264}, "files": [{"sha": "170e188da2b468e6aa8e6fef6aef0b83040a0e3c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39ec52254eda7cc2fab94aa7a5bb2fd1f395296b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39ec52254eda7cc2fab94aa7a5bb2fd1f395296b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=39ec52254eda7cc2fab94aa7a5bb2fd1f395296b", "patch": "@@ -1,3 +1,16 @@\n+2003-04-24  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\t* docs/html/17_intro/howto.html:  Update some links.\n+\t* docs/html/18_support/howto.html:  Link doxygen numeric_limits notes.\n+\t* docs/html/27_io/howto.html:  Link doxygen stdio_filebuf notes.\n+\t* docs/html/ext/howto.html:  Link to demangler notes and API.\n+\t* docs/html/faq/index.html:  Remove trailing whitespace.\n+\t(1.4, 2.4, 3.8, 4.1):  Bring up to date.\n+\t(5.6):  Change to a bulleted list.\n+\n+\t* docs/html/faq/index.txt, docs/html/documentation.html,\n+\tdocs/html/17_intro/porting.html:  Regenerate.\n+\n 2003-04-23  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* testsuite/27_io/basic_filebuf/3.cc: _S_pback_size now"}, {"sha": "fc43d0f5892c711db0e9766f8113b832ad3a1b64", "filename": "libstdc++-v3/docs/html/17_intro/howto.html", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39ec52254eda7cc2fab94aa7a5bb2fd1f395296b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39ec52254eda7cc2fab94aa7a5bb2fd1f395296b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fhowto.html?ref=39ec52254eda7cc2fab94aa7a5bb2fd1f395296b", "patch": "@@ -163,7 +163,7 @@ <h2><a name=\"4\"><code>&lt;foo&gt;</code> vs <code>&lt;foo.h&gt;</code></a></h2>\n    <p>For those of you new to ISO C++98, no, that isn't a typo, the headers\n       really have new names.  Marshall Cline's C++ FAQ Lite has a good\n       explanation in\n-<a href=\"http://www.parashift.com/c++-faq-lite/coding-standards.html#faq-26.4\">item [26.4]</a>.\n+<a href=\"http://www.parashift.com/c++-faq-lite/coding-standards.html#faq-27.4\">item [27.4]</a>.\n    </p>\n    <p>Return <a href=\"#top\">to top of page</a> or\n       <a href=\"../faq/index.html\">to the FAQ</a>.\n@@ -219,7 +219,8 @@ <h2><a name=\"5\">Behavior specific to libstdc++-v3</a></h2>\n       <a href=\"../18_support/howto.html#5\">runtime demangler function</a>.\n       (The classes in <code>&lt;stdexcept&gt;</code> have constructors which\n       require an argument to use later for <code>what()</code> calls, so the\n-      question does not arise in most user-defined exceptions.)\n+      problem of <code>what()</code>'s value does not arise in most\n+      user-defined exceptions.)\n    </p>\n    <p><strong>[18.5.1]/7</strong> The return value of\n       <code>std::type_info::name()</code> is the mangled type name (see the"}, {"sha": "ac51f4506734d73d66a6fc6987e2d18bf7dd00dd", "filename": "libstdc++-v3/docs/html/17_intro/porting.html", "status": "modified", "additions": 38, "deletions": 1, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39ec52254eda7cc2fab94aa7a5bb2fd1f395296b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39ec52254eda7cc2fab94aa7a5bb2fd1f395296b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting.html?ref=39ec52254eda7cc2fab94aa7a5bb2fd1f395296b", "patch": "@@ -134,12 +134,49 @@ <h2 class=\"chapter\">Operating system</h2>\n target.  It will not work to simply define these macros in\n <code>os_defines.h</code>.\n \n-   <p>At this time, there is one libstdc++-v3-specific macro which may be\n+   <p>At this time, there are a few libstdc++-v3-specific macro which may be\n defined.  <code>_G_USING_THUNKS</code> may be defined to 0 to express that the\n port doesn't use thunks (although it is unclear that this is still\n useful since libio support isn't currently working and the g++ v3 ABI\n invalidates the assumption that some ports don't use thunks).\n \n+   <p><code>_GLIBCPP_USE_C99_CHECK</code> may be defined to 1 to check C99\n+function declarations (which are not covered by specialization below)\n+found in system headers against versions found in the library headers\n+derived from the standard.\n+\n+   <p><code>_GLIBCPP_USE_C99_DYNAMIC</code> may be defined to an expression that\n+yields 0 if and only if the system headers are exposing proper support\n+for C99 functions (which are not covered by specialization below).  If\n+defined, it must be 0 while bootstrapping the compiler/rebuilding the\n+library.\n+\n+   <p><code>_GLIBCPP_USE_C99_LONG_LONG_CHECK</code> may be defined to 1 to check\n+the set of C99 long long function declarations found in system headers\n+against versions found in the library headers derived from the\n+standard.\n+\n+   <p><code>_GLIBCPP_USE_C99_LONG_LONG_DYNAMIC</code> may be defined to an\n+expression that yields 0 if and only if the system headers are\n+exposing proper support for the set of C99 long long functions.  If\n+defined, it must be 0 while bootstrapping the compiler/rebuilding the\n+library.\n+\n+   <p><code>_GLIBCPP_USE_C99_FP_MACROS_DYNAMIC</code> may be defined to an\n+expression that yields 0 if and only if the system headers\n+are exposing proper support for the related set of macros.  If defined,\n+it must be 0 while bootstrapping the compiler/rebuilding the library.\n+\n+   <p><code>_GLIBCPP_USE_C99_FLOAT_TRANSCENDENTALS_CHECK</code> may be defined\n+to 1 to check the related set of function declarations found in system\n+headers against versions found in the library headers derived from\n+the standard.\n+\n+   <p><code>_GLIBCPP_USE_C99_FLOAT_TRANSCENDENTALS_DYNAMIC</code> may be defined\n+to an expression that yields 0 if and only if the system headers\n+are exposing proper support for the related set of functions.  If defined,\n+it must be 0 while bootstrapping the compiler/rebuilding the library.\n+\n    <p>Finally, you should bracket the entire file in an include-guard, like\n this:\n "}, {"sha": "df7305cc0338c5c08e6fd89b9405eb173df6f9bc", "filename": "libstdc++-v3/docs/html/18_support/howto.html", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39ec52254eda7cc2fab94aa7a5bb2fd1f395296b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F18_support%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39ec52254eda7cc2fab94aa7a5bb2fd1f395296b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F18_support%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F18_support%2Fhowto.html?ref=39ec52254eda7cc2fab94aa7a5bb2fd1f395296b", "patch": "@@ -117,7 +117,9 @@ <h3><code>&lt;limits&gt;</code></h3>\n    <p>This header mainly defines traits classes to give access to various\n    implementation defined-aspects of the fundamental types.  The\n    traits classes -- fourteen in total -- are all specilizations of the \n-   template class <code>numeric_limits</code> defined as follows:\n+   template class <code>numeric_limits</code>, documented\n+   <a href=\"http://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/structstd_1_1numeric__limits.html\">here</a>\n+   and defined as follows:\n    </p>\n    <pre>\n    template&lt;typename T&gt; struct class {"}, {"sha": "4a0b6a927fbcbf745ce6e9c746df37639941e7bd", "filename": "libstdc++-v3/docs/html/27_io/howto.html", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39ec52254eda7cc2fab94aa7a5bb2fd1f395296b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F27_io%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39ec52254eda7cc2fab94aa7a5bb2fd1f395296b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F27_io%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F27_io%2Fhowto.html?ref=39ec52254eda7cc2fab94aa7a5bb2fd1f395296b", "patch": "@@ -741,8 +741,9 @@ <h2><a name=\"11\">Using FILE*s and file descriptors with IOStreams</a></h2>\n      <li>Beginning with 3.1, the extra <code>filebuf</code> constructor and\n          the <code>fd()</code> function were removed from the standard\n          filebuf.  Instead, <code>&lt;ext/stdio_filebuf.h&gt;</code> contains\n-         a derived class called <code>__gnu_cxx::stdio_filebuf</code>. This\n-         class can be constructed from a C <code>FILE*</code> or a file\n+         a derived class called\n+         <a href=\"http://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/class____gnu__cxx_1_1stdio__filebuf.html\"><code>__gnu_cxx::stdio_filebuf</code></a>.\n+         This class can be constructed from a C <code>FILE*</code> or a file\n          descriptor, and provides the <code>fd()</code> function.\n      </li>\n    </ul>"}, {"sha": "a0d2929760c50d042204612945e576301b95c037", "filename": "libstdc++-v3/docs/html/documentation.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39ec52254eda7cc2fab94aa7a5bb2fd1f395296b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39ec52254eda7cc2fab94aa7a5bb2fd1f395296b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html?ref=39ec52254eda7cc2fab94aa7a5bb2fd1f395296b", "patch": "@@ -224,6 +224,7 @@ <h2><a name=\"3\">Chapter-Specific Documentation</a></h2>\n      <li><a href=\"ext/howto.html#6\">Allocators (version 3.3)</a></li>\n      <li><a href=\"ext/howto.html#4\">Compile-time checks</a></li>\n      <li><a href=\"ext/howto.html#5\">LWG Issues</a></li>\n+     <li><a href=\"ext/../18_support/howto.html#5\">Demangling</a></li>\n    </ul>\n    </li>\n "}, {"sha": "0f5dd1110c307c12a19cd0e144fca4c47b4b577a", "filename": "libstdc++-v3/docs/html/ext/howto.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39ec52254eda7cc2fab94aa7a5bb2fd1f395296b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39ec52254eda7cc2fab94aa7a5bb2fd1f395296b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html?ref=39ec52254eda7cc2fab94aa7a5bb2fd1f395296b", "patch": "@@ -45,6 +45,7 @@ <h1>Contents</h1>\n    <li><a href=\"#6\">Allocators (version 3.3)</a></li>\n    <li><a href=\"#4\">Compile-time checks</a></li>\n    <li><a href=\"#5\">LWG Issues</a></li>\n+   <li><a href=\"../18_support/howto.html#5\">Demangling</a></li>\n </ul>\n \n <hr />"}, {"sha": "d952c9d47f5e883c25a185b0b5bb2bba4a1ecf0f", "filename": "libstdc++-v3/docs/html/faq/index.html", "status": "modified", "additions": 80, "deletions": 112, "changes": 192, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39ec52254eda7cc2fab94aa7a5bb2fd1f395296b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39ec52254eda7cc2fab94aa7a5bb2fd1f395296b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html?ref=39ec52254eda7cc2fab94aa7a5bb2fd1f395296b", "patch": "@@ -10,9 +10,9 @@\n    <meta name=\"DESCRIPTION\" content=\"FAQ for the GNU libstdc++ effort.\" />\n    <title>libstdc++-v3 FAQ</title>\n <link rel=\"StyleSheet\" href=\"../lib3styles.css\" />\n-<!-- \n-  ** Locations of \"the most recent snapshot is the Nth\" text are \n-  ** answers 1_1, 1_4, 4_1.\n+<!--\n+  ** Locations of \"the most recent snapshot is the Nth\" text are\n+  ** answers 1_1, .\n -->\n </head>\n <body>\n@@ -55,7 +55,7 @@ <h1>Questions</h1>\n       <ol>\n          <li><a href=\"#2_1\">How do I install libstdc++-v3?</a> </li>\n          <li><a href=\"#2_2\">[removed]</a> </li>\n-         <li><a href=\"#2_3\">What is this CVS thing that you keep \n+         <li><a href=\"#2_3\">What is this CVS thing that you keep\n                             mentioning?</a> </li>\n          <li><a href=\"#2_4\">How do I know if it works?</a> </li>\n          <li><a href=\"#2_5\">This library is HUGE!  And what's libsupc++?</a> </li>\n@@ -127,8 +127,8 @@ <h1><a name=\"1_0\">1.0 General Information</a></h1>\n <!-- I suspect these will mostly be links to/into existing documents. -->\n    <h2><a name=\"1_1\">1.1 What is libstdc++-v3?</a></h2>\n       <p>The GNU Standard C++ Library v3 is an\n-         ongoing project to implement the ISO 14882 Standard C++ library \n-         as described in chapters 17 through 27 and annex D.  As the \n+         ongoing project to implement the ISO 14882 Standard C++ library\n+         as described in chapters 17 through 27 and annex D.  As the\n          library reaches stable plateaus, it is captured in a snapshot\n          and released.  The latest release is\n          <a href=\"http://gcc.gnu.org/libstdc++/index.html#download\">the\n@@ -137,15 +137,15 @@ <h2><a name=\"1_1\">1.1 What is libstdc++-v3?</a></h2>\n          far the project has come, or just want the latest\n          bleeding-edge code, the up-to-date source is available over\n          anonymous CVS, and can even be browsed over the Web (see\n-         <a href=\"#1_4\">1.4</a> below). \n+         <a href=\"#1_4\">1.4</a> below).\n       </p>\n       <p>The older libstdc++-v2 project is no longer maintained; the code\n          has been completely replaced and rewritten.\n          <a href=\"#4_4_interface\">If you are using V2</a>, then you need to\n          report bugs to your system vendor, not to the V3 list.\n       </p>\n       <p>A more formal description of the V3 goals can be found in the\n-         official <a href=\"../17_intro/DESIGN\">design document</a>. \n+         official <a href=\"../17_intro/DESIGN\">design document</a>.\n       </p>\n \n <hr />\n@@ -156,11 +156,11 @@ <h2><a name=\"1_2\">1.2 Why should I use libstdc++?</a></h2>\n          implementations are (as the Draft Standard used to say)\n          &quot;incomplet and incorrekt,&quot; and many suffer from\n          limitations of the compilers that use them.\n-      </p> \n+      </p>\n       <p>The GNU C/C++/FORTRAN/&lt;pick-a-language&gt; compiler\n          (<code>gcc</code>, <code>g++</code>, etc) is widely considered to be\n          one of the leading compilers in the world.  Its development\n-         has recently been taken over by the \n+         has recently been taken over by the\n          <a href=\"http://gcc.gnu.org/\">GCC team</a>.  All of\n          the rapid development and near-legendary\n          <a href=\"http://gcc.gnu.org/gcc-3.0/buildstat.html\">portability</a>\n@@ -178,8 +178,8 @@ <h2><a name=\"1_2\">1.2 Why should I use libstdc++?</a></h2>\n    <h2><a name=\"1_3\">1.3 Who's in charge of it?</a></h2>\n       <p>The libstdc++ project is contributed to by several developers\n          all over the world, in the same way as GCC or Linux.\n-         Benjamin Kosnik, Gabriel Dos Reis, Phil Edwards, Ulrich Drepper, \n-         Loren James Rittle, and Paolo Carlini are the lead maintainers of \n+         Benjamin Kosnik, Gabriel Dos Reis, Phil Edwards, Ulrich Drepper,\n+         Loren James Rittle, and Paolo Carlini are the lead maintainers of\n          the CVS archive.\n       </p>\n       <p>Development and discussion is held on the libstdc++ mailing\n@@ -191,23 +191,22 @@ <h2><a name=\"1_3\">1.3 Who's in charge of it?</a></h2>\n \n <hr />\n    <h2><a name=\"1_4\">1.4 How do I get libstdc++?</a></h2>\n-      <p>The fourteenth (and latest) snapshot of libstdc++-v3 is\n-         <a href=\"http://gcc.gnu.org/libstdc++/index.html#download\">available\n-         via ftp</a>.\n-      </p>\n       <p>The <a href=\"http://gcc.gnu.org/libstdc++/\">homepage</a>\n          has instructions for retrieving the latest CVS sources, and for\n          browsing the CVS sources over the web.\n       </p>\n+      <p>Stable versions of libstdc++-v3 are included with releases of\n+         <a href=\"http://gcc.gnu.org/releases.html\">the GCC compilers</a>.\n+      </p>\n       <p>The subset commonly known as the Standard Template Library\n          (chapters 23 through 25, mostly) is adapted from the final release\n          of the SGI STL.\n-      </p> \n+      </p>\n \n <hr />\n    <h2><a name=\"1_5\">1.5 When is libstdc++ going to be finished?</a></h2>\n-<!--      <p>Nathan Myers gave the best of all possible answers in <a \n-         href=\"http://www.deja.com/getdoc.xp?AN=469581698&fmt=text\">a \n+<!--      <p>Nathan Myers gave the best of all possible answers in <a\n+         href=\"http://www.deja.com/getdoc.xp?AN=469581698&fmt=text\">a\n          Usenet article</a>.</p>\n which is no longer available, thanks deja...-->\n       <p>Nathan Myers gave the best of all possible answers, responding to a\n@@ -224,7 +223,7 @@ <h2><a name=\"1_6\">1.6 How do I contribute to the effort?</a></h2>\n          source code; anybody who is willing to help write\n          documentation, for example, or has found a bug in code that\n          we all thought was working, is more than welcome!\n-      </p> \n+      </p>\n \n <hr />\n    <h2><a name=\"1_7\">1.7 What happened to libg++?  I need that!</a></h2>\n@@ -254,7 +253,6 @@ <h2><a name=\"1_7\">1.7 What happened to libg++?  I need that!</a></h2>\n          from libg++ might be extracted into an updated utilities library,\n          but nobody has stated such a project yet.\n       </p>\n-      <!-- The advertisement, so to speak, might have to go.  Hmmmmm.  -->\n       <p>(The <a href=\"http://www.boost.org/\">Boost</a> site houses free\n          C++ libraries that do varying things, and happened to be started\n          by members of the Standards Committee.  Certain &quot;useful\n@@ -317,7 +315,7 @@ <h2><a name=\"2_1\">2.1 How do I install libstdc++-v3?</a></h2>\n          browse those files over CVSweb ahead of time to get a feel for\n          what's required.  RELEASE-NOTES is located in the\n          &quot;.../docs/17_intro/&quot; directory of the distribution.\n-      </p> \n+      </p>\n \n <hr />\n    <h2><a name=\"2_2\">2.2 [removed]</a></h2>\n@@ -332,9 +330,9 @@ <h2><a name=\"2_3\">2.3 What is this CVS thing that you\n          control packages.  It was selected for GNU projects because it's\n          free (speech), free (beer), and very high quality.  The <a\n          href=\"http://www.gnu.org/software/cvs/cvs.html\">CVS entry in\n-         the GNU software catalogue</a> has a better description as \n+         the GNU software catalogue</a> has a better description as\n          well as a\n-         <a href=\"http://www.cvshome.org/\">link to the makers of CVS</a>. \n+         <a href=\"http://www.cvshome.org/\">link to the makers of CVS</a>.\n       </p>\n       <p>The &quot;anonymous client checkout&quot; feature of CVS is\n          similar to anonymous FTP in that it allows anyone to retrieve\n@@ -349,7 +347,9 @@ <h2><a name=\"2_3\">2.3 What is this CVS thing that you\n    <h2><a name=\"2_4\">2.4 How do I know if it works?</a></h2>\n       <p>libstdc++-v3 comes with its own testsuite.  You do not need\n          to actually install the library (&quot;<code>make\n-         install</code>&quot;) to run the testsuite.\n+         install</code>&quot;) to run the testsuite, but you do need\n+         DejaGNU, as described\n+         <a href=\"http://gcc.gnu.org/install/test.html\">here</a>.\n       </p>\n       <p>To run the testsuite on the library after building it, use\n          &quot;make check&quot; while in your build directory.  To run\n@@ -362,7 +362,7 @@ <h2><a name=\"2_4\">2.4 How do I know if it works?</a></h2>\n       </p>\n \n <hr />\n-   <h2><a name=\"2_5\">2.4 This library is HUGE!  And what's libsupc++?</a></h2>\n+   <h2><a name=\"2_5\">2.5 This library is HUGE!  And what's libsupc++?</a></h2>\n       <p>Usually the size of libraries on disk isn't noticeable.  When a\n          link editor (or simply &quot;linker&quot;) pulls things from a\n          static archive library, only the necessary object files are copied\n@@ -431,7 +431,7 @@ <h2><a name=\"3_1\">3.1 Can libstdc++-v3 be used with &lt;my\n          should, in theory, be usable under any ISO-compliant\n          compiler.  It will still be targeted and optimized for\n          GCC/g++, however.\n-      </p> \n+      </p>\n \n <hr />\n    <h2><a name=\"3_2\">3.2 [removed]</a></h2>\n@@ -510,17 +510,17 @@ <h2><a name=\"3_7\">3.7 Threading is broken on i386</a></h2>\n          only available on the i486 and later.  So if you configured GCC\n          to target, for example, i386-linux, but actually used the programs\n          on an i686, then you would encounter no problems.  Only when\n-         actually running the code on a i386 will the problem appear.  \n+         actually running the code on a i386 will the problem appear.\n       </p>\n       <p>This is fixed in 3.2.2.\n       </p>\n \n <hr />\n    <h2><a name=\"3_8\">3.8 Recent GNU/Linux glibc required?</a></h2>\n-      <p>For 3.2.1 (shared library version 5.0.1) and later, the library\n-         uses localization and formatting code from the system C library\n-         (glibc) version 2.2.5.  That version of glibc is over a year old\n-         and contains necessary bugfixes.  Many GNU/Linux distros make\n+      <p>When running on GNU/Linux, libstdc++ 3.2.1 (shared library version\n+         5.0.1) and later uses localization and formatting code from the system\n+         C library (glibc) version 2.2.5.  That version of glibc is over a\n+         year old and contains necessary bugfixes.  Many GNU/Linux distros make\n          glibc version 2.3.x available now.\n       </p>\n       <p>The guideline is simple:  the more recent the C++ library, the\n@@ -546,9 +546,9 @@ <h2><a name=\"3_9\">3.9 Can't use wchar_t/wstring on FreeBSD</a></h2>\n <hr />\n <h1><a name=\"4_0\">4.0 Known Bugs and Non-Bugs</a></h1>\n    <em>Note that this section can get rapdily outdated -- such is the\n-   nature of an open-source project.  For the latest information, join\n-   the mailing list or look through recent archives.   The RELEASE-\n-   NOTES and BUGS files are generally kept up-to-date.</em> \n+       nature of an open-source project.  For the latest information, join\n+       the mailing list or look through recent archives.   The RELEASE-\n+       NOTES and BUGS files are generally kept up-to-date.</em>\n \n    <p>For 3.0.1, the most common &quot;bug&quot; is an apparently missing\n       &quot;<code>../</code>&quot; in include/Makefile, resulting in files\n@@ -579,59 +579,22 @@ <h1><a name=\"4_0\">4.0 Known Bugs and Non-Bugs</a></h1>\n    </p>\n \n    <h2><a name=\"4_1\">4.1 What works already?</a></h2>\n-      <p>This is a verbatim clip from the &quot;Status&quot; section\n+      <p>Short answer:  Pretty much everything <em>works</em> except for some\n+         corner cases.  Also, localization is incomplete.  For whether it works\n+         well, or as you expect it to work, see 5.2.\n+      </p>\n+      <p>Long answer:  See the docs/html/17_intro/CHECKLIST file, which is\n+         badly outdated...\n+      </p>\n+      <p>What follows is a verbatim clip from the &quot;Status&quot; section\n          of the RELEASE-NOTES for the latest snapshot.  For a list of\n          fixed bugs, see that file.\n-      </p> \n+      </p>\n \n <!-- Yeah, I meant that \"verbatim clip\" thing literally... :-)  -->\n \n <pre>\n New:\n----\n-(post 3.0.97)\n-- more doxygen documentation\n-- more named locale fixups\n-- stdio_filebuf that takes fd, FILE\n-- io performance tuning\n-- allocation tuning, valgrind fixups\n-- __cxa_demangle now supported\n-(3.0.97)\n-- more doxygen documentation.\n-- more named locale bug fixes\n-- support for symbol versioning when using GNU ld &gt;= 2.12\n-- wide-io\n-- tuning for executable size\n-(3.0.96)\n-- more doxygen documentation.\n-- extensions moved out of namespace std\n-- HPUX long long support\n-- more string optimizations\n-- support for NetBSD cross compiles\n-- concept_check merge from boost\n-- header simplification\n-- named locale bug shakeout\n-- thread testsuite\n-(3.0.95)\n-- add S390, m68k, x86-64 support.\n-- doxygen documentation has been extended, including man pages.\n-- verbose terminate handling has been added.\n-- some libsupc++ tweaks\n-- warnings for deprecated headers now active.\n-- dejagnu testsuite preliminary documentation.\n-- dejagnu testsuite default.\n-- dejagnu testsuite cross compiler, multilib safe.\n-- long long iostreams on by default, rework of ISO C99 support.\n-- iterator re-write and testsuites.\n-- container testsuites.\n-- allocator revamp and testsuites.\n-- more concept-checking work.\n-- basic_string optimization and MT fixes.\n-- new limits implementation.\n-- update -fno-exceptions code, verify it works.\n-- full named locale support fpr all facets, choice of gnu,\n-  ieee_1003.1-200x (POSIX 2), or generic models. Full support depends\n-  on target OS and underlying &quot;C&quot; library support.\n </pre>\n \n \n@@ -713,8 +676,8 @@ <h2><a name=\"4_4\">4.4 Things in libstdc++ that only look like bugs</a></h2>\n          reason is that the state flags are <strong>not</strong> cleared\n          on a successful call to open().  The standard unfortunately did\n          not specify behavior in this case, and to everybody's great sorrow,\n-         the <a href=\"../ext/howto.html#5\">proposed LWG resolution</a> (see\n-         DR #22) is to leave the flags unchanged.  You must insert a call\n+         the <a href=\"../ext/howto.html#5\">proposed LWG resolution in\n+         DR #22</a> is to leave the flags unchanged.  You must insert a call\n          to <code>fs.clear()</code> between the calls to close() and open(),\n          and then everything will work like we all expect it to work.\n       </p>\n@@ -738,16 +701,15 @@ <h3><a name=\"4_4_interface\">The g++-3 headers are <em>not ours</em></a></h3>\n       </p>\n       <p>If the headers are in <code>${prefix}/include/g++-3</code>, or if\n          the installed library's name looks like <code>libstdc++-2.10.a</code>\n-         or <code>libstdc++-libc6-2.10.so</code>,\n-         then you are using the old libstdc++-v2 library, which is nonstandard\n-         and unmaintained.  Do not report problems with -v2 to the -v3\n-         mailing list.\n+         or <code>libstdc++-libc6-2.10.so</code>, then you are using the old\n+         libstdc++-v2 library, which is nonstandard and unmaintained.  Do not\n+         report problems with -v2 to the -v3 mailing list.\n       </p>\n       <p>For GCC versions 3.0 and 3.1 the libstdc++-v3 header files are\n-        installed in <code>${prefix}/include/g++-v3</code> (see the 'v'?). \n-        Starting with version 3.2 the headers are installed in\n-        <code>${prefix}/include/c++/${version}</code> as this prevents\n-        headers from previous versions being found by mistake.\n+         installed in <code>${prefix}/include/g++-v3</code> (see the 'v'?).\n+         Starting with version 3.2 the headers are installed in\n+         <code>${prefix}/include/c++/${version}</code> as this prevents\n+         headers from previous versions being found by mistake.\n       </p>\n       <p><a name=\"4_4_glibc\"><strong>glibc</strong></a>\n          If you're on a GNU/Linux system and have just upgraded to\n@@ -787,13 +749,13 @@ <h3><a name=\"4_4_interface\">The g++-3 headers are <em>not ours</em></a></h3>\n          when compiling and linking:\n       </p>\n       <pre>\n-    // compile the library components\n+    // compile your library components\n     g++ -fPIC -c a.cc\n     g++ -fPIC -c b.cc\n     ...\n     g++ -fPIC -c z.cc\n \n-    // create the library\n+    // create your library\n     g++ -fPIC -shared -rdynamic -o libfoo.so a.o b.o ... z.o\n \n     // link the executable\n@@ -826,7 +788,7 @@ <h2><a name=\"4_5\">4.5 Aw, that's easy to fix!</a></h2>\n          entry, it is a Good Thing if you can additionally create a small\n          test program to test for the presence of the bug that your\n          patch fixes.  Bugs have a way of being reintroduced; if an old\n-         bug creeps back in, it will be caught immediately by the \n+         bug creeps back in, it will be caught immediately by the\n          <a href=\"#2_4\">testsuite</a> -- but only if such a test exists.\n       </p>\n \n@@ -903,7 +865,8 @@ <h2><a name=\"5_3\">5.3 What about the STL from SGI?</a></h2>\n       <p>In particular, <code>string</code> is not from SGI and makes no\n          use of their &quot;rope&quot; class (which is included as an\n          optional extension), nor is <code>valarray</code> and some others.\n-         Classes like <code>vector&lt;&gt;</code> are, however.\n+         Classes like <code>vector&lt;&gt;</code> are, however we have\n+         made significant changes to them since then.\n       </p>\n       <p>The FAQ for SGI's STL (one jump off of their main page) is\n          recommended reading.\n@@ -949,7 +912,6 @@ <h2><a name=\"5_4\">5.4 Extensions and Backward Compatibility</a></h2>\n       <p>This is a bit cleaner than defining typedefs for all the\n          instantiations you might need.\n       </p>\n-\n       <p>Extensions to the library have\n          <a href=\"../ext/howto.html\">their own page</a>.\n       </p>\n@@ -962,15 +924,21 @@ <h2><a name=\"5_5\">5.5 [removed]</a></h2>\n \n <hr />\n    <h2><a name=\"5_6\">5.6 Is libstdc++-v3 thread-safe?</a></h2>\n-      <p>When the system's libc is itself thread-safe, a non-generic\n-         implementation of atomicity.h exists for the architecture, and gcc\n-         itself reports a thread model other than single; libstdc++-v3\n-         strives to be thread-safe.  The user-code must guard against\n-         concurrent method calls which may access any particular library\n-         object's state.  Typically, the application programmer may infer\n-         what object locks must be held based on the objects referenced in\n-         a method call.  Without getting into great detail, here is an\n-         example which requires user-level locks:\n+      <p>libstdc++-v3 strives to be thread-safe when all of the following\n+         conditions are met:\n+      </p>\n+      <ul>\n+       <li>The system's libc is itself thread-safe,</li>\n+       <li><code>gcc -v</code> reports a thread model other than 'single',</li>\n+       <li>[pre-3.3 only] a non-generic implementation of atomicity.h\n+           exists for the architecture in question.</li>\n+      </ul>\n+      <p>The user-code must guard against concurrent method calls which may\n+         access any particular library object's state.  Typically, the\n+         application programmer may infer what object locks must be held\n+         based on the objects referenced in a method call.  Without getting\n+         into great detail, here is an example which requires user-level\n+         locks:\n       </p>\n       <pre>\n      library_class_a shared_object_a;\n@@ -994,12 +962,12 @@ <h2><a name=\"5_6\">5.6 Is libstdc++-v3 thread-safe?</a></h2>\n        object_a.mutate ();\n      } </pre>\n       <p>All library objects are safe to use in a multithreaded program as\n-         long as each thread carefully locks out access by any other thread\n-         while it uses any object visible to another thread.  In general,\n+         long as each thread carefully locks out access by any other\n+         thread while it uses any object visible to another thread, i.e.,\n+         treat library objects like any other shared resource.  In general,\n          this requirement includes both read and write access to objects;\n-         unless otherwise documented as safe, do not assume that two\n-         threads may access a shared standard library object at the\n-         same time.\n+         unless otherwise documented as safe, do not assume that two threads\n+         may access a shared standard library object at the same time.\n       </p>\n       <p>See chapters <a href=\"../17_intro/howto.html#3\">17</a> (library\n          introduction), <a href=\"../23_containers/howto.html#3\">23</a>\n@@ -1051,7 +1019,7 @@ <h2><a name=\"5_8\">5.8 What's an ABI and why is it so messy?</a></h2>\n          a &quot;free-standing implementation&quot; that doesn't include (much\n          of) the standard library.  It is a good basis for the work to come.\n       </p>\n-      <p>A useful C++ ABI must also incorporate many details of the standard \n+      <p>A useful C++ ABI must also incorporate many details of the standard\n          library implementation.  For a C ABI, the layouts of a few structs\n          (such as FILE, stat, jmpbuf, and the like) and a few macros suffice.\n          For C++, the details include the complete set of names of functions\n@@ -1063,7 +1031,7 @@ <h2><a name=\"5_8\">5.8 What's an ABI and why is it so messy?</a></h2>\n          those details so that future bug fixes and optimizations don't\n          force breaking the ABI.\n       </p>\n-      <p>There are ways to help isolate library implementation details from the \n+      <p>There are ways to help isolate library implementation details from the\n          ABI, but they trade off against speed.  Library details used in\n          inner loops (e.g., getchar) must be exposed and frozen for all\n          time, but many others may reasonably be kept hidden from user code,"}, {"sha": "e671dd4a18276e82b4c4681cd85c6f57812be402", "filename": "libstdc++-v3/docs/html/faq/index.txt", "status": "modified", "additions": 117, "deletions": 146, "changes": 263, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39ec52254eda7cc2fab94aa7a5bb2fd1f395296b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39ec52254eda7cc2fab94aa7a5bb2fd1f395296b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt?ref=39ec52254eda7cc2fab94aa7a5bb2fd1f395296b", "patch": "@@ -4,9 +4,9 @@\n    The latest version of this document is always available at\n    [1]http://gcc.gnu.org/onlinedocs/libstdc++/faq/. The main\n    documentation page is at\n-   [2]http://gcc.gnu.org/onlinedocs/libstdc++/documentation.html.\n+   [2]http://gcc.gnu.org/onlinedocs/libstdc++/documentation.html. \n \n-   To the [3]libstdc++-v3 homepage.\n+   To the [3]libstdc++-v3 homepage. \n      _________________________________________________________________\n \n                                    Questions\n@@ -122,12 +122,12 @@\n \n 1.4 How do I get libstdc++?\n \n-   The fourteenth (and latest) snapshot of libstdc++-v3 is [60]available\n-   via ftp.\n-\n-   The [61]homepage has instructions for retrieving the latest CVS\n+   The [60]homepage has instructions for retrieving the latest CVS\n    sources, and for browsing the CVS sources over the web.\n \n+   Stable versions of libstdc++-v3 are included with releases of [61]the\n+   GCC compilers.\n+\n    The subset commonly known as the Standard Template Library (chapters\n    23 through 25, mostly) is adapted from the final release of the SGI\n    STL.\n@@ -253,7 +253,8 @@\n 2.4 How do I know if it works?\n \n    libstdc++-v3 comes with its own testsuite. You do not need to actually\n-   install the library (\"make install\") to run the testsuite.\n+   install the library (\"make install\") to run the testsuite, but you do\n+   need DejaGNU, as described [73]here.\n \n    To run the testsuite on the library after building it, use \"make\n    check\" while in your build directory. To run the testsuite on the\n@@ -265,7 +266,7 @@\n    up your idea and send it to the list!\n      _________________________________________________________________\n \n-2.4 This library is HUGE! And what's libsupc++?\n+2.5 This library is HUGE! And what's libsupc++?\n \n    Usually the size of libraries on disk isn't noticeable. When a link\n    editor (or simply \"linker\") pulls things from a static archive\n@@ -291,7 +292,7 @@\n    people don't like it, so here are two pseudo-solutions:\n \n    If the only functions from libstdc++.a which you need are language\n-   support functions (those listed in [73]clause 18 of the standard,\n+   support functions (those listed in [74]clause 18 of the standard,\n    e.g., new and delete), then try linking against libsupc++.a (usually\n    specifying -lsupc++ when calling g++ for the final link step will do\n    it). This library contains only those support routines, one per object\n@@ -386,7 +387,7 @@\n    - < /dev/null\" to display a list of predefined macros for any\n    particular installation.\n \n-   This has been discussed on the mailing lists [74]quite a bit.\n+   This has been discussed on the mailing lists [75]quite a bit.\n \n    This method is something of a wart. We'd like to find a cleaner\n    solution, but nobody yet has contributed the time.\n@@ -395,7 +396,7 @@\n 3.6 OS X ctype.h is broken! How can I hack it?\n \n    This is a long-standing bug in the OS X support. Fortunately, the\n-   patch is quite simple, and well-known. [75]Here's a link to the\n+   patch is quite simple, and well-known. [76]Here's a link to the\n    solution.\n      _________________________________________________________________\n \n@@ -413,11 +414,11 @@\n \n 3.8 Recent GNU/Linux glibc required?\n \n-   For 3.2.1 (shared library version 5.0.1) and later, the library uses\n-   localization and formatting code from the system C library (glibc)\n-   version 2.2.5. That version of glibc is over a year old and contains\n-   necessary bugfixes. Many GNU/Linux distros make glibc version 2.3.x\n-   available now.\n+   When running on GNU/Linux, libstdc++ 3.2.1 (shared library version\n+   5.0.1) and later uses localization and formatting code from the system\n+   C library (glibc) version 2.2.5. That version of glibc is over a year\n+   old and contains necessary bugfixes. Many GNU/Linux distros make glibc\n+   version 2.3.x available now.\n \n    The guideline is simple: the more recent the C++ library, the more\n    recent the C library. (This is also documented in the main GCC\n@@ -433,7 +434,7 @@\n    enable itself.\n \n    You can fix the problems yourself, and learn more about the situation,\n-   by reading [76]this short thread (\"_GLIBCPP_USE_WCHAR_T undefined in\n+   by reading [77]this short thread (\"_GLIBCPP_USE_WCHAR_T undefined in\n    FreeBSD's c++config.h?\").\n      _________________________________________________________________\n \n@@ -446,15 +447,15 @@\n \n    For 3.0.1, the most common \"bug\" is an apparently missing \"../\" in\n    include/Makefile, resulting in files like gthr.h and gthr-single.h not\n-   being found. Please read [77]the configuration instructions for GCC,\n+   being found. Please read [78]the configuration instructions for GCC,\n    specifically the part about configuring in a separate build directory,\n    and how strongly recommended it is. Building in the source directory\n    is fragile, is rarely tested, and tends to break, as in this case.\n    This was fixed for 3.0.2.\n \n    For 3.1, the most common \"bug\" is a parse error when using <fstream>,\n    ending with a message, \"bits/basic_file.h:52: parse error before `{'\n-   token.\" Please read [78]the installation instructions for GCC,\n+   token.\" Please read [79]the installation instructions for GCC,\n    specifically the part about not installing newer versions on top of\n    older versions. If you install 3.1 over a 3.0.x release, then the\n    wrong basic_file.h header will be found (its location changed between\n@@ -467,53 +468,17 @@\n \n 4.1 What works already?\n \n-   This is a verbatim clip from the \"Status\" section of the RELEASE-NOTES\n-   for the latest snapshot. For a list of fixed bugs, see that file.\n+   Short answer: Pretty much everything works except for some corner\n+   cases. Also, localization is incomplete. For whether it works well, or\n+   as you expect it to work, see 5.2.\n+\n+   Long answer: See the docs/html/17_intro/CHECKLIST file, which is badly\n+   outdated...\n+\n+   What follows is a verbatim clip from the \"Status\" section of the\n+   RELEASE-NOTES for the latest snapshot. For a list of fixed bugs, see\n+   that file.\n New:\n----\n-(post 3.0.97)\n-- more doxygen documentation\n-- more named locale fixups\n-- stdio_filebuf that takes fd, FILE\n-- io performance tuning\n-- allocation tuning, valgrind fixups\n-- __cxa_demangle now supported\n-(3.0.97)\n-- more doxygen documentation.\n-- more named locale bug fixes\n-- support for symbol versioning when using GNU ld >= 2.12\n-- wide-io\n-- tuning for executable size\n-(3.0.96)\n-- more doxygen documentation.\n-- extensions moved out of namespace std\n-- HPUX long long support\n-- more string optimizations\n-- support for NetBSD cross compiles\n-- concept_check merge from boost\n-- header simplification\n-- named locale bug shakeout\n-- thread testsuite\n-(3.0.95)\n-- add S390, m68k, x86-64 support.\n-- doxygen documentation has been extended, including man pages.\n-- verbose terminate handling has been added.\n-- some libsupc++ tweaks\n-- warnings for deprecated headers now active.\n-- dejagnu testsuite preliminary documentation.\n-- dejagnu testsuite default.\n-- dejagnu testsuite cross compiler, multilib safe.\n-- long long iostreams on by default, rework of ISO C99 support.\n-- iterator re-write and testsuites.\n-- container testsuites.\n-- allocator revamp and testsuites.\n-- more concept-checking work.\n-- basic_string optimization and MT fixes.\n-- new limits implementation.\n-- update -fno-exceptions code, verify it works.\n-- full named locale support fpr all facets, choice of gnu,\n-  ieee_1003.1-200x (POSIX 2), or generic models. Full support depends\n-  on target OS and underlying \"C\" library support.\n      _________________________________________________________________\n \n 4.2 Bugs in gcc/g++ (not libstdc++-v3)\n@@ -523,30 +488,30 @@ New:\n    libstdc++. If you are experiencing one of these problems, you can find\n    more information on the libstdc++ and the GCC mailing lists.\n \n-   Before reporting a bug, examine the [79]bugs database with the\n+   Before reporting a bug, examine the [80]bugs database with the\n    category set to \"libstdc++\". The BUGS file in the source tree also\n    tracks known serious problems.\n      * Debugging is problematic, due to bugs in line-number generation\n        (mostly fixed in the compiler) and gdb lagging behind the compiler\n        (lack of personnel). We recommend configuring the compiler using\n        --with-dwarf2 if the DWARF2 debugging format is not already the\n-       default on your platform. Also, [80]changing your GDB settings can\n+       default on your platform. Also, [81]changing your GDB settings can\n        have a profound effect on your C++ debugging experiences. :-)\n      _________________________________________________________________\n \n 4.3 Bugs in the C++ language/lib specification\n \n-   Yes, unfortunately, there are some. In a [81]message to the list,\n+   Yes, unfortunately, there are some. In a [82]message to the list,\n    Nathan Myers announced that he has started a list of problems in the\n    ISO C++ Standard itself, especially with regard to the chapters that\n-   concern the library. The list itself is [82]posted on his website.\n+   concern the library. The list itself is [83]posted on his website.\n    Developers who are having problems interpreting the Standard may wish\n    to consult his notes.\n \n    For those people who are not part of the ISO Library Group (i.e.,\n    nearly all of us needing to read this page in the first place :-), a\n-   public list of the library defects is occasionally published [83]here.\n-   Some of these have resulted in [84]code changes.\n+   public list of the library defects is occasionally published [84]here.\n+   Some of these have resulted in [85]code changes.\n      _________________________________________________________________\n \n 4.4 Things in libstdc++ that only look like bugs\n@@ -578,7 +543,7 @@ New:\n    state on the previous file. The reason is that the state flags are not\n    cleared on a successful call to open(). The standard unfortunately did\n    not specify behavior in this case, and to everybody's great sorrow,\n-   the [85]proposed LWG resolution (see DR #22) is to leave the flags\n+   the [86]proposed LWG resolution in DR #22 is to leave the flags\n    unchanged. You must insert a call to fs.clear() between the calls to\n    close() and open(), and then everything will work like we all expect\n    it to work.\n@@ -588,15 +553,15 @@ New:\n    same namespace as other comparison functions (e.g., 'using' them and\n    the <iterator> header), then you will suddenly be faced with huge\n    numbers of ambiguity errors. This was discussed on the -v3 list;\n-   Nathan Myers [86]sums things up here. The collisions with\n+   Nathan Myers [87]sums things up here. The collisions with\n    vector/string iterator types have been fixed for 3.1.\n \n   The g++-3 headers are not ours\n \n    If you have found an extremely broken header file which is causing\n    problems for you, look carefully before submitting a \"high\" priority\n    bug report (which you probably shouldn't do anyhow; see the last\n-   paragraph of the page describing [87]the GCC bug database).\n+   paragraph of the page describing [88]the GCC bug database).\n \n    If the headers are in ${prefix}/include/g++-3, or if the installed\n    library's name looks like libstdc++-2.10.a or libstdc++-libc6-2.10.so,\n@@ -621,7 +586,7 @@ type has changed in glibc 2.2.  The patch is at\n http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n \n \n-   Note that 2.95.x shipped with the [88]old v2 library which is no\n+   Note that 2.95.x shipped with the [89]old v2 library which is no\n    longer maintained. Also note that gcc 2.95.3 fixes this problem, but\n    requires a separate patch for libstdc++-v3.\n \n@@ -634,47 +599,47 @@ http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n    visibility, or you just plain forgot, etc).\n \n    More information, including how to optionally enable/disable the\n-   checks, is available [89]here.\n+   checks, is available [90]here.\n \n    dlopen/dlsym If you are using the C++ library across\n    dynamically-loaded objects, make certain that you are passing the\n    correct options when compiling and linking:\n-    // compile the library components\n+    // compile your library components\n     g++ -fPIC -c a.cc\n     g++ -fPIC -c b.cc\n     ...\n     g++ -fPIC -c z.cc\n \n-    // create the library\n+    // create your library\n     g++ -fPIC -shared -rdynamic -o libfoo.so a.o b.o ... z.o\n \n     // link the executable\n     g++ -fPIC -rdynamic -o foo ... -L. -lfoo -ldl\n \n    \"memory leaks\" in containers A few people have reported that the\n    standard containers appear to leak memory when tested with memory\n-   checkers such as [90]valgrind. The library's default allocators keep\n+   checkers such as [91]valgrind. The library's default allocators keep\n    free memory in a pool for later reuse, rather than returning it to the\n    OS. Although this memory is always reachable by the library and is\n    never lost, memory debugging tools can report it as a leak. If you\n-   want to test the library for memory leaks please read [91]Tips for\n+   want to test the library for memory leaks please read [92]Tips for\n    memory leak hunting first.\n      _________________________________________________________________\n \n 4.5 Aw, that's easy to fix!\n \n    If you have found a bug in the library and you think you have a\n    working fix, then send it in! The main GCC site has a page on\n-   [92]submitting patches that covers the procedure, but for libstdc++\n+   [93]submitting patches that covers the procedure, but for libstdc++\n    you should also send the patch to our mailing list in addition to the\n-   GCC patches mailing list. The libstdc++ [93]contributors' page also\n+   GCC patches mailing list. The libstdc++ [94]contributors' page also\n    talks about how to submit patches.\n \n    In addition to the description, the patch, and the ChangeLog entry, it\n    is a Good Thing if you can additionally create a small test program to\n    test for the presence of the bug that your patch fixes. Bugs have a\n    way of being reintroduced; if an old bug creeps back in, it will be\n-   caught immediately by the [94]testsuite -- but only if such a test\n+   caught immediately by the [95]testsuite -- but only if such a test\n    exists.\n      _________________________________________________________________\n \n@@ -708,7 +673,7 @@ http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n        libstdc++. Some of that is already happening, see 4.2. Some of\n        those changes are being predicted by the library maintainers, and\n        we add code to the library based on what the current proposed\n-       resolution specifies. Those additions are listed in [95]the\n+       resolution specifies. Those additions are listed in [96]the\n        extensions page.\n     2. Performance tuning. Lots of performance tuning. This too is\n        already underway for post-3.0 releases, starting with memory\n@@ -724,20 +689,21 @@ http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n        type from C99.) Bugfixes and rewrites (to improve or fix thread\n        safety, for instance) will of course be a continuing task.\n \n-   [96]This question about the next libstdc++ prompted some brief but\n-   interesting [97]speculation.\n+   [97]This question about the next libstdc++ prompted some brief but\n+   interesting [98]speculation.\n      _________________________________________________________________\n \n 5.3 What about the STL from SGI?\n \n-   The [98]STL from SGI, version 3.3, was the most recent merge of the\n+   The [99]STL from SGI, version 3.3, was the most recent merge of the\n    STL codebase. The code in libstdc++ contains many fixes and changes,\n    and it is very likely that the SGI code is no longer under active\n    development. We expect that no future merges will take place.\n \n    In particular, string is not from SGI and makes no use of their \"rope\"\n    class (which is included as an optional extension), nor is valarray\n-   and some others. Classes like vector<> are, however.\n+   and some others. Classes like vector<> are, however we have made\n+   significant changes to them since then.\n \n    The FAQ for SGI's STL (one jump off of their main page) is recommended\n    reading.\n@@ -779,7 +745,7 @@ http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n    This is a bit cleaner than defining typedefs for all the\n    instantiations you might need.\n \n-   Extensions to the library have [99]their own page.\n+   Extensions to the library have [100]their own page.\n      _________________________________________________________________\n \n 5.5 [removed]\n@@ -790,15 +756,18 @@ http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n \n 5.6 Is libstdc++-v3 thread-safe?\n \n-   When the system's libc is itself thread-safe, a non-generic\n-   implementation of atomicity.h exists for the architecture, and gcc\n-   itself reports a thread model other than single; libstdc++-v3 strives\n-   to be thread-safe. The user-code must guard against concurrent method\n-   calls which may access any particular library object's state.\n-   Typically, the application programmer may infer what object locks must\n-   be held based on the objects referenced in a method call. Without\n-   getting into great detail, here is an example which requires\n-   user-level locks:\n+   libstdc++-v3 strives to be thread-safe when all of the following\n+   conditions are met:\n+     * The system's libc is itself thread-safe,\n+     * gcc -v reports a thread model other than 'single',\n+     * [pre-3.3 only] a non-generic implementation of atomicity.h exists\n+       for the architecture in question.\n+\n+   The user-code must guard against concurrent method calls which may\n+   access any particular library object's state. Typically, the\n+   application programmer may infer what object locks must be held based\n+   on the objects referenced in a method call. Without getting into great\n+   detail, here is an example which requires user-level locks:\n      library_class_a shared_object_a;\n \n      thread_main () {\n@@ -823,13 +792,14 @@ a\n \n    All library objects are safe to use in a multithreaded program as long\n    as each thread carefully locks out access by any other thread while it\n-   uses any object visible to another thread. In general, this\n-   requirement includes both read and write access to objects; unless\n-   otherwise documented as safe, do not assume that two threads may\n-   access a shared standard library object at the same time.\n+   uses any object visible to another thread, i.e., treat library objects\n+   like any other shared resource. In general, this requirement includes\n+   both read and write access to objects; unless otherwise documented as\n+   safe, do not assume that two threads may access a shared standard\n+   library object at the same time.\n \n-   See chapters [100]17 (library introduction), [101]23 (containers), and\n-   [102]27 (I/O) for more information.\n+   See chapters [101]17 (library introduction), [102]23 (containers), and\n+   [103]27 (I/O) for more information.\n      _________________________________________________________________\n \n 5.7 How do I get a copy of the ISO C++ Standard?\n@@ -840,11 +810,11 @@ a\n    their two-meeting commitment for voting rights, may get a copy of the\n    standard from their respective national standards organization. In the\n    USA, this national standards organization is ANSI and their website is\n-   right [103]here. (And if you've already registered with them, clicking\n+   right [104]here. (And if you've already registered with them, clicking\n    this link will take you to directly to the place where you can\n-   [104]buy the standard on-line.\n+   [105]buy the standard on-line.\n \n-   Who is your country's member body? Visit the [105]ISO homepage and\n+   Who is your country's member body? Visit the [106]ISO homepage and\n    find out!\n      _________________________________________________________________\n \n@@ -895,8 +865,8 @@ a\n    encompasses the standard library.\n      _________________________________________________________________\n \n-   See [106]license.html for copying conditions. Comments and suggestions\n-   are welcome, and may be sent to [107]the libstdc++ mailing list. \n+   See [107]license.html for copying conditions. Comments and suggestions\n+   are welcome, and may be sent to [108]the libstdc++ mailing list. \n \n References\n \n@@ -959,8 +929,8 @@ References\n   57. http://gcc.gnu.org/\n   58. http://gcc.gnu.org/gcc-3.0/buildstat.html\n   59. http://gcc.gnu.org/libstdc++/\n-  60. http://gcc.gnu.org/libstdc++/index.html#download\n-  61. http://gcc.gnu.org/libstdc++/\n+  60. http://gcc.gnu.org/libstdc++/\n+  61. http://gcc.gnu.org/releases.html\n   62. ../17_intro/contribute.html\n   63. http://www.boost.org/\n   64. http://gcc.gnu.org/extensions.html\n@@ -972,38 +942,39 @@ References\n   70. ../17_intro/RELEASE-NOTES\n   71. http://www.gnu.org/software/cvs/cvs.html\n   72. http://www.cvshome.org/\n-  73. ../18_support/howto.html\n-  74. http://gcc.gnu.org/cgi-bin/htsearch?method=and&format=builtin-long&sort=score&words=_XOPEN_SOURCE+Solaris\n-  75. http://gcc.gnu.org/ml/gcc/2002-03/msg00817.html\n-  76. http://gcc.gnu.org/ml/libstdc++/2003-02/subjects.html#00286\n-  77. http://gcc.gnu.org/install/configure.html\n-  78. http://gcc.gnu.org/install/\n-  79. http://gcc.gnu.org/bugs.html\n-  80. http://gcc.gnu.org/ml/libstdc++/2002-02/msg00034.html\n-  81. http://gcc.gnu.org/ml/libstdc++/1998/msg00006.html\n-  82. http://www.cantrip.org/draft-bugs.txt\n-  83. http://anubis.dkuug.dk/jtc1/sc22/wg21/\n-  84. ../faq/index.html#5_2\n-  85. ../ext/howto.html#5\n-  86. http://gcc.gnu.org/ml/libstdc++/2001-01/msg00247.html\n-  87. http://gcc.gnu.org/gnatswrite.html\n-  88. ../faq/index.html#4_4_interface\n-  89. ../19_diagnostics/howto.html#3\n-  90. http://developer.kde.org/~sewardj/\n-  91. ../debug.html#mem\n-  92. http://gcc.gnu.org/contribute.html\n-  93. ../17_intro/contribute.html\n-  94. ../faq/index.html#2_4\n-  95. ../ext/howto.html#5\n-  96. http://gcc.gnu.org/ml/libstdc++/1999/msg00080.html\n-  97. http://gcc.gnu.org/ml/libstdc++/1999/msg00084.html\n-  98. http://www.sgi.com/Technology/STL/\n-  99. ../ext/howto.html\n- 100. ../17_intro/howto.html#3\n- 101. ../23_containers/howto.html#3\n- 102. ../27_io/howto.html#9\n- 103. http://www.ansi.org/\n- 104. http://webstore.ansi.org/ansidocstore/product.asp?sku=ISO%2FIEC+14882%2D1998\n- 105. http://www.iso.ch/\n- 106. ../17_intro/license.html\n- 107. mailto:libstdc++@gcc.gnu.org\n+  73. http://gcc.gnu.org/install/test.html\n+  74. ../18_support/howto.html\n+  75. http://gcc.gnu.org/cgi-bin/htsearch?method=and&format=builtin-long&sort=score&words=_XOPEN_SOURCE+Solaris\n+  76. http://gcc.gnu.org/ml/gcc/2002-03/msg00817.html\n+  77. http://gcc.gnu.org/ml/libstdc++/2003-02/subjects.html#00286\n+  78. http://gcc.gnu.org/install/configure.html\n+  79. http://gcc.gnu.org/install/\n+  80. http://gcc.gnu.org/bugs.html\n+  81. http://gcc.gnu.org/ml/libstdc++/2002-02/msg00034.html\n+  82. http://gcc.gnu.org/ml/libstdc++/1998/msg00006.html\n+  83. http://www.cantrip.org/draft-bugs.txt\n+  84. http://anubis.dkuug.dk/jtc1/sc22/wg21/\n+  85. ../faq/index.html#5_2\n+  86. ../ext/howto.html#5\n+  87. http://gcc.gnu.org/ml/libstdc++/2001-01/msg00247.html\n+  88. http://gcc.gnu.org/gnatswrite.html\n+  89. ../faq/index.html#4_4_interface\n+  90. ../19_diagnostics/howto.html#3\n+  91. http://developer.kde.org/~sewardj/\n+  92. ../debug.html#mem\n+  93. http://gcc.gnu.org/contribute.html\n+  94. ../17_intro/contribute.html\n+  95. ../faq/index.html#2_4\n+  96. ../ext/howto.html#5\n+  97. http://gcc.gnu.org/ml/libstdc++/1999/msg00080.html\n+  98. http://gcc.gnu.org/ml/libstdc++/1999/msg00084.html\n+  99. http://www.sgi.com/Technology/STL/\n+ 100. ../ext/howto.html\n+ 101. ../17_intro/howto.html#3\n+ 102. ../23_containers/howto.html#3\n+ 103. ../27_io/howto.html#9\n+ 104. http://www.ansi.org/\n+ 105. http://webstore.ansi.org/ansidocstore/product.asp?sku=ISO%2FIEC+14882%2D1998\n+ 106. http://www.iso.ch/\n+ 107. ../17_intro/license.html\n+ 108. mailto:libstdc++@gcc.gnu.org"}]}