{"sha": "435697aae738e1a3b3bb62711d5e15fad9f37b40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM1Njk3YWFlNzM4ZTFhM2IzYmI2MjcxMWQ1ZTE1ZmFkOWYzN2I0MA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2009-11-21T12:01:11Z"}, "committer": {"name": "Laurent Guerby", "email": "guerby@gcc.gnu.org", "date": "2009-11-21T12:01:11Z"}, "message": "s-osinte-linux.ads (struct_timeval, [...]): Delete.\n\n2009-11-21  Eric Botcazou  <ebotcazou@adacore.com>\n            Laurent GUERBY  <laurent@guerby.net>\n\n        * s-osinte-linux.ads (struct_timeval, To_Duration, To_Timeval,\n        gettimeofday): Delete.\n        * s-osinte-posix.adb (To_Duration, To_Timeval): Delete.\n        * s-osprim-posix.adb (struct_timezone, struct_timeval, \n        gettimeofday): Delete.\n        (Clock): Use cal.c timeval_to_duration.\n        * s-taprop-linux.adb (Monotonic_Clock): Likewise.\n\n\nCo-Authored-By: Laurent GUERBY <laurent@guerby.net>\n\nFrom-SVN: r154407", "tree": {"sha": "ac8a28fe73dc0485fa6d6a2a4fc2a0a67afa2c9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac8a28fe73dc0485fa6d6a2a4fc2a0a67afa2c9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/435697aae738e1a3b3bb62711d5e15fad9f37b40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/435697aae738e1a3b3bb62711d5e15fad9f37b40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/435697aae738e1a3b3bb62711d5e15fad9f37b40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/435697aae738e1a3b3bb62711d5e15fad9f37b40/comments", "author": null, "committer": null, "parents": [{"sha": "e81f2ecf58f3d5d17a0dbf64f608cef15be5b9ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e81f2ecf58f3d5d17a0dbf64f608cef15be5b9ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e81f2ecf58f3d5d17a0dbf64f608cef15be5b9ca"}], "stats": {"total": 123, "additions": 54, "deletions": 69}, "files": [{"sha": "86f2bcc3c22b0f155f98cd31072713007113529b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/435697aae738e1a3b3bb62711d5e15fad9f37b40/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/435697aae738e1a3b3bb62711d5e15fad9f37b40/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=435697aae738e1a3b3bb62711d5e15fad9f37b40", "patch": "@@ -1,3 +1,14 @@\n+2009-11-21  Eric Botcazou  <ebotcazou@adacore.com>\n+            Laurent GUERBY  <laurent@guerby.net>\n+\n+        * s-osinte-linux.ads (struct_timeval, To_Duration, To_Timeval,\n+        gettimeofday): Delete.\n+        * s-osinte-posix.adb (To_Duration, To_Timeval): Delete.\n+        * s-osprim-posix.adb (struct_timezone, struct_timeval, \n+        gettimeofday): Delete.\n+        (Clock): Use cal.c timeval_to_duration.\n+        * s-taprop-linux.adb (Monotonic_Clock): Likewise.\n+\n 2009-11-12  Eric Botcazou  <ebotcazou@adacore.com>\n             Laurent GUERBY  <laurent@guerby.net>\n "}, {"sha": "2a620c5504a045427dc4b0cf41b4cc427f3a5f6d", "filename": "gcc/ada/s-osinte-linux.ads", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/435697aae738e1a3b3bb62711d5e15fad9f37b40/gcc%2Fada%2Fs-osinte-linux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/435697aae738e1a3b3bb62711d5e15fad9f37b40/gcc%2Fada%2Fs-osinte-linux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-linux.ads?ref=435697aae738e1a3b3bb62711d5e15fad9f37b40", "patch": "@@ -228,19 +228,6 @@ package System.OS_Interface is\n    function To_Timespec (D : Duration) return timespec;\n    pragma Inline (To_Timespec);\n \n-   type struct_timeval is private;\n-\n-   function To_Duration (TV : struct_timeval) return Duration;\n-   pragma Inline (To_Duration);\n-\n-   function To_Timeval (D : Duration) return struct_timeval;\n-   pragma Inline (To_Timeval);\n-\n-   function gettimeofday\n-     (tv : access struct_timeval;\n-      tz : System.Address := System.Null_Address) return int;\n-   pragma Import (C, gettimeofday, \"gettimeofday\");\n-\n    function sysconf (name : int) return long;\n    pragma Import (C, sysconf);\n "}, {"sha": "310454ad15c9869812de5e921da26b2c05c9d42b", "filename": "gcc/ada/s-osinte-posix.adb", "status": "modified", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/435697aae738e1a3b3bb62711d5e15fad9f37b40/gcc%2Fada%2Fs-osinte-posix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/435697aae738e1a3b3bb62711d5e15fad9f37b40/gcc%2Fada%2Fs-osinte-posix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-posix.adb?ref=435697aae738e1a3b3bb62711d5e15fad9f37b40", "patch": "@@ -74,11 +74,6 @@ package body System.OS_Interface is\n       return Duration (TS.tv_sec) + Duration (TS.tv_nsec) / 10#1#E9;\n    end To_Duration;\n \n-   function To_Duration (TV : struct_timeval) return Duration is\n-   begin\n-      return Duration (TV.tv_sec) + Duration (TV.tv_usec) / 10#1#E6;\n-   end To_Duration;\n-\n    ------------------------\n    -- To_Target_Priority --\n    ------------------------\n@@ -114,30 +109,4 @@ package body System.OS_Interface is\n                        tv_nsec => long (Long_Long_Integer (F * 10#1#E9)));\n    end To_Timespec;\n \n-   ----------------\n-   -- To_Timeval --\n-   ----------------\n-\n-   function To_Timeval (D : Duration) return struct_timeval is\n-      S : time_t;\n-      F : Duration;\n-\n-   begin\n-      S := time_t (Long_Long_Integer (D));\n-      F := D - Duration (S);\n-\n-      --  If F has negative value due to a round-up, adjust for positive F\n-      --  value.\n-\n-      if F < 0.0 then\n-         S := S - 1;\n-         F := F + 1.0;\n-      end if;\n-\n-      return\n-        struct_timeval'\n-          (tv_sec  => S,\n-           tv_usec => time_t (Long_Long_Integer (F * 10#1#E6)));\n-   end To_Timeval;\n-\n end System.OS_Interface;"}, {"sha": "e03a132c8a3b0083ae07ae961c979e50dd84b01f", "filename": "gcc/ada/s-osprim-posix.adb", "status": "modified", "additions": 20, "deletions": 22, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/435697aae738e1a3b3bb62711d5e15fad9f37b40/gcc%2Fada%2Fs-osprim-posix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/435697aae738e1a3b3bb62711d5e15fad9f37b40/gcc%2Fada%2Fs-osprim-posix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-posix.adb?ref=435697aae738e1a3b3bb62711d5e15fad9f37b40", "patch": "@@ -38,26 +38,8 @@ package body System.OS_Primitives is\n    --  these declarations in System.OS_Interface and move these ones in\n    --  the spec.\n \n-   type struct_timezone is record\n-      tz_minuteswest  : Integer;\n-      tz_dsttime   : Integer;\n-   end record;\n-   pragma Convention (C, struct_timezone);\n-   type struct_timezone_ptr is access all struct_timezone;\n-\n    type time_t is new Long_Integer;\n \n-   type struct_timeval is record\n-      tv_sec       : time_t;\n-      tv_usec      : Long_Integer;\n-   end record;\n-   pragma Convention (C, struct_timeval);\n-\n-   function gettimeofday\n-     (tv : not null access struct_timeval;\n-      tz : struct_timezone_ptr) return Integer;\n-   pragma Import (C, gettimeofday, \"gettimeofday\");\n-\n    type timespec is record\n       tv_sec  : time_t;\n       tv_nsec : Long_Integer;\n@@ -72,11 +54,26 @@ package body System.OS_Primitives is\n    -----------\n \n    function Clock return Duration is\n-      TV     : aliased struct_timeval;\n-\n+      type timeval is array (1 .. 2) of Long_Integer;\n+\n+      procedure timeval_to_duration\n+        (T    : not null access timeval;\n+         sec  : not null access Long_Integer;\n+         usec : not null access Long_Integer);\n+      pragma Import (C, timeval_to_duration, \"__gnat_timeval_to_duration\");\n+\n+      Micro  : constant := 10**6;\n+      sec    : aliased Long_Integer;\n+      usec   : aliased Long_Integer;\n+      TV     : aliased timeval;\n       Result : Integer;\n       pragma Unreferenced (Result);\n \n+      function gettimeofday\n+        (Tv : access timeval;\n+         Tz : System.Address := System.Null_Address) return Integer;\n+      pragma Import (C, gettimeofday, \"gettimeofday\");\n+\n    begin\n       --  The return codes for gettimeofday are as follows (from man pages):\n       --    EPERM  settimeofday is called by someone other than the superuser\n@@ -86,8 +83,9 @@ package body System.OS_Primitives is\n       --  None of these codes signal a potential clock skew, hence the return\n       --  value is never checked.\n \n-      Result := gettimeofday (TV'Access, null);\n-      return Duration (TV.tv_sec) + Duration (TV.tv_usec) / 10#1#E6;\n+      Result := gettimeofday (TV'Access, System.Null_Address);\n+      timeval_to_duration (TV'Access, sec'Access, usec'Access);\n+      return Duration (sec) + Duration (usec) / Micro;\n    end Clock;\n \n    ---------------------"}, {"sha": "0f0773cec5eb5e4666ddde8ec83b98683337d30c", "filename": "gcc/ada/s-taprop-linux.adb", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/435697aae738e1a3b3bb62711d5e15fad9f37b40/gcc%2Fada%2Fs-taprop-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/435697aae738e1a3b3bb62711d5e15fad9f37b40/gcc%2Fada%2Fs-taprop-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-linux.adb?ref=435697aae738e1a3b3bb62711d5e15fad9f37b40", "patch": "@@ -589,12 +589,32 @@ package body System.Task_Primitives.Operations is\n    ---------------------\n \n    function Monotonic_Clock return Duration is\n-      TV     : aliased struct_timeval;\n-      Result : Interfaces.C.int;\n+      use Interfaces;\n+\n+      type timeval is array (1 .. 2) of C.long;\n+\n+      procedure timeval_to_duration\n+        (T    : not null access timeval;\n+         sec  : not null access C.long;\n+         usec : not null access C.long);\n+      pragma Import (C, timeval_to_duration, \"__gnat_timeval_to_duration\");\n+\n+      Micro  : constant := 10**6;\n+      sec    : aliased C.long;\n+      usec   : aliased C.long;\n+      TV     : aliased timeval;\n+      Result : int;\n+\n+      function gettimeofday\n+        (Tv : access timeval;\n+         Tz : System.Address := System.Null_Address) return int;\n+      pragma Import (C, gettimeofday, \"gettimeofday\");\n+\n    begin\n       Result := gettimeofday (TV'Access, System.Null_Address);\n       pragma Assert (Result = 0);\n-      return To_Duration (TV);\n+      timeval_to_duration (TV'Access, sec'Access, usec'Access);\n+      return Duration (sec) + Duration (usec) / Micro;\n    end Monotonic_Clock;\n \n    -------------------"}]}