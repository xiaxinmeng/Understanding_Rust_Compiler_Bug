{"sha": "b3e2e29c19d3a3b8fae32db9cbec787d675b13f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjNlMmUyOWMxOWQzYTNiOGZhZTMyZGI5Y2JlYzc4N2Q2NzViMTNmMg==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2005-10-19T03:34:50Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2005-10-19T03:34:50Z"}, "message": "re PR tree-optimization/24231 (SSA corruption with C++ code and exceptions and loads)\n\n2005-10-18  Daniel Berlin <dberlin@dberlin.org>\n\n\tFix PR tree-optimization/24231\n\n\t* tree-ssa-pre.c (try_look_through_load): Skip abnormal phi names\n\t(compute_avail): Ditto.\n\nFrom-SVN: r105594", "tree": {"sha": "01634c8307640767e543dba4724d506583a77332", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01634c8307640767e543dba4724d506583a77332"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3e2e29c19d3a3b8fae32db9cbec787d675b13f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3e2e29c19d3a3b8fae32db9cbec787d675b13f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3e2e29c19d3a3b8fae32db9cbec787d675b13f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3e2e29c19d3a3b8fae32db9cbec787d675b13f2/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fd4aca960b65ab4749712571057ab955385fe8b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd4aca960b65ab4749712571057ab955385fe8b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd4aca960b65ab4749712571057ab955385fe8b5"}], "stats": {"total": 125, "additions": 123, "deletions": 2}, "files": [{"sha": "38edb127c56c198878f83c066f94ab338988bd19", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3e2e29c19d3a3b8fae32db9cbec787d675b13f2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3e2e29c19d3a3b8fae32db9cbec787d675b13f2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b3e2e29c19d3a3b8fae32db9cbec787d675b13f2", "patch": "@@ -1,3 +1,10 @@\n+2005-10-18  Daniel Berlin <dberlin@dberlin.org>\n+\n+\tFix PR tree-optimization/24231\n+\n+\t* tree-ssa-pre.c (try_look_through_load): Skip abnormal phi names\n+\t(compute_avail): Ditto.\n+\n 2006-10-18  Richard Henderson  <rth@redhat.com>\n \n \tPR target/24428"}, {"sha": "d3c053efd435dc96c0a7797c41f8d06207a28fc9", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr24231-1.C", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3e2e29c19d3a3b8fae32db9cbec787d675b13f2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr24231-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3e2e29c19d3a3b8fae32db9cbec787d675b13f2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr24231-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr24231-1.C?ref=b3e2e29c19d3a3b8fae32db9cbec787d675b13f2", "patch": "@@ -0,0 +1,42 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* FRE testcase for PR 24231, problem with PRE coalescing abnormal phis.  */\n+struct f\n+{\n+  int i;\n+};\n+struct h{h();};\n+int g(void);\n+int g1(void) throw();\n+int h2222(f*);\n+void ghh(int);\n+\n+int main(void)\n+{\n+  int i;\n+  f t;\n+  try\n+  {\n+    i = g1();\n+    try\n+    {\n+      i = g();\n+    }catch(...)\n+    {}\n+    int j = i;\n+    try\n+    { t.i = i;\n+      i = g();\n+    }catch(...)\n+   {}\n+    i = 2;\n+    int h = t.i;\n+    ghh (h);\n+\n+    g();\n+  }catch(...)\n+  {}\n+  return i;\n+}\n+\n+"}, {"sha": "188b1a26b46048175b6939f61eab73708bd416ed", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr24231-2.C", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3e2e29c19d3a3b8fae32db9cbec787d675b13f2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr24231-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3e2e29c19d3a3b8fae32db9cbec787d675b13f2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr24231-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr24231-2.C?ref=b3e2e29c19d3a3b8fae32db9cbec787d675b13f2", "patch": "@@ -0,0 +1,41 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* FRE testcase for PR 24231, problem with PRE coalescing abnormal phis.  */\n+struct f\n+{\n+  int i;\n+};\n+struct h{h();};\n+int g(void);\n+int g1(void) throw();\n+int h2222(f*);\n+void ghh(int);\n+\n+int main(void)\n+{\n+  int i;\n+  f t;\n+  try\n+  {\n+    i = g1();\n+    try\n+    {\n+      i = g();\n+    }catch(...)\n+    {}\n+    int j = i;\n+    try\n+    {\n+      i = g();\n+    }catch(...)\n+    {}\n+    t.i = j;\n+    i = 2;\n+    int h = t.i;\n+    ghh (h);\n+\n+    g();\n+  }catch(...)\n+  {}\n+  return i;\n+}"}, {"sha": "a9ea58b1197e2b6f233a7c702e56a461a61ae775", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr24231-3.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3e2e29c19d3a3b8fae32db9cbec787d675b13f2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr24231-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3e2e29c19d3a3b8fae32db9cbec787d675b13f2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr24231-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr24231-3.C?ref=b3e2e29c19d3a3b8fae32db9cbec787d675b13f2", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* PRE testcase for PR 24231, problem with PRE coalescing abnormal phis.  */\n+struct MemoryManager {\n+      virtual void deallocate() = 0;\n+};\n+struct XalanVector {\n+      ~XalanVector()   {\n+\t      m_memoryManager->deallocate();\n+\t        }\n+        void swap(XalanVector& theOther)   {\n+\t        MemoryManager* const theTempManager = m_memoryManager;\n+\t\t    m_memoryManager = theOther.m_memoryManager;\n+\t\t        theOther.m_memoryManager = theTempManager;\n+\t\t\t    theOther.m_size = 0;\n+\t\t\t      }\n+\t  void push_back()   {\n+\t          XalanVector theTemp(*this);\n+\t\t      theTemp.push_back();\n+\t\t          swap(theTemp);\n+\t\t\t    }\n+\t    MemoryManager* m_memoryManager;\n+\t      int m_size;\n+};\n+void f(void) {\n+      XalanVector tempVector;\n+        tempVector.push_back();\n+}"}, {"sha": "425d2204a3c2442dd00e39f9d0371fc67fba977f", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3e2e29c19d3a3b8fae32db9cbec787d675b13f2/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3e2e29c19d3a3b8fae32db9cbec787d675b13f2/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=b3e2e29c19d3a3b8fae32db9cbec787d675b13f2", "patch": "@@ -2187,11 +2187,13 @@ try_look_through_load (tree lhs, tree mem_ref, tree stmt, basic_block block)\n      that all of them come from the same statement STORE_STMT.  See if there\n      is a useful expression we can deduce from STORE_STMT.  */\n   rhs = TREE_OPERAND (store_stmt, 1);\n-  if (TREE_CODE (rhs) == SSA_NAME\n+  if ((TREE_CODE (rhs) == SSA_NAME\n+       && !SSA_NAME_OCCURS_IN_ABNORMAL_PHI (rhs))\n       || is_gimple_min_invariant (rhs)\n       || TREE_CODE (rhs) == ADDR_EXPR\n       || TREE_INVARIANT (rhs))\n     {\n+      \n       /* Yay!  Compute a value number for the RHS of the statement and\n  \t add its value to the AVAIL_OUT set for the block.  Add the LHS\n \t to TMP_GEN.  */\n@@ -2322,7 +2324,8 @@ compute_avail (void)\n \t\t      continue;\n \t\t    }\n \t\t}\n-\t      else if (TREE_CODE (rhs) == SSA_NAME\n+\t      else if ((TREE_CODE (rhs) == SSA_NAME\n+\t\t\t&& !SSA_NAME_OCCURS_IN_ABNORMAL_PHI (rhs))\n \t\t       || is_gimple_min_invariant (rhs)\n \t\t       || TREE_CODE (rhs) == ADDR_EXPR\n \t\t       || TREE_INVARIANT (rhs)"}]}