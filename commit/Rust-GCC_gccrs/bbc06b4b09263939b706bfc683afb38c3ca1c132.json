{"sha": "bbc06b4b09263939b706bfc683afb38c3ca1c132", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJjMDZiNGIwOTI2MzkzOWI3MDZiZmM2ODNhZmIzOGMzY2ExYzEzMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-06-01T11:09:17Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-06-01T11:09:17Z"}, "message": "* pt.c (for_each_template_parm): Use first_rtl_op.\n\nFrom-SVN: r20171", "tree": {"sha": "d90579f4e22951aa5a512a47969bd17ad02217f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d90579f4e22951aa5a512a47969bd17ad02217f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbc06b4b09263939b706bfc683afb38c3ca1c132", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbc06b4b09263939b706bfc683afb38c3ca1c132", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbc06b4b09263939b706bfc683afb38c3ca1c132", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbc06b4b09263939b706bfc683afb38c3ca1c132/comments", "author": null, "committer": null, "parents": [{"sha": "994d3884f0bce17afb8365b1b6d6485c810d7303", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/994d3884f0bce17afb8365b1b6d6485c810d7303", "html_url": "https://github.com/Rust-GCC/gccrs/commit/994d3884f0bce17afb8365b1b6d6485c810d7303"}], "stats": {"total": 430, "additions": 256, "deletions": 174}, "files": [{"sha": "50b6d5f300b51b0647a4c5376d2f7ddd0bff0b4b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbc06b4b09263939b706bfc683afb38c3ca1c132/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbc06b4b09263939b706bfc683afb38c3ca1c132/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bbc06b4b09263939b706bfc683afb38c3ca1c132", "patch": "@@ -1,5 +1,7 @@\n 1998-06-01  Jason Merrill  <jason@yorick.cygnus.com>\n \n+\t* pt.c (for_each_template_parm): Use first_rtl_op.\n+\n \t* tree.c (build_cplus_array_type_1): Also check index_type for\n \ttemplate parms.\n "}, {"sha": "1489f0c2227463973b4498943d60b96f0a2793d4", "filename": "gcc/cp/g++FAQ.texi", "status": "modified", "additions": 253, "deletions": 173, "changes": 426, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbc06b4b09263939b706bfc683afb38c3ca1c132/gcc%2Fcp%2Fg%2B%2BFAQ.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbc06b4b09263939b706bfc683afb38c3ca1c132/gcc%2Fcp%2Fg%2B%2BFAQ.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fg%2B%2BFAQ.texi?ref=bbc06b4b09263939b706bfc683afb38c3ca1c132", "patch": "@@ -3,7 +3,7 @@\n @setfilename g++FAQ.info\n @settitle Frequently asked questions about the GNU C++ compiler\n @setchapternewpage off\n-@c version: %W% %G%\n+@c version: @(#)g++FAQ.texi\t1.61 05/31/98\n @c %**end of header\n \n @iftex\n@@ -12,7 +12,7 @@\n @titlepage\n @title G++ FAQ\n @subtitle Frequently asked questions about the GNU C++ compiler\n-@subtitle March 16, 1998.\n+@subtitle May 31, 1998.\n @sp 1\n @author Joe Buck\n @page\n@@ -35,10 +35,6 @@ all those who sent suggestions for improvements.  Thanks to Marcus Speh\n for doing the index.  A hypertext version is available on the World Wide\n Web at @file{http://www.cygnus.com/misc/g++FAQ_toc.html}.\n \n-@strong{News flash}: gcc 2.8.0 has finally been released!\n-This FAQ still has much material that refers to older releases; it will\n-take some time before it is completely \"modernized\".\n-\n Please send updates and corrections to the FAQ to\n @code{jbuck@@synopsys.com}.  Please do @emph{not} use me as a resource\n to get your questions answered; that's what @file{gnu.g++.help} is for and I\n@@ -63,91 +59,92 @@ You can find this FAQ at\n or in HTML form at @file{http://www.cerfnet.com/~mpcline/On-Line-C++-FAQs/}.\n \n @menu\n-* basics::          What is g++?  How do I get it?\n-* egcs and 2.8.0::  The next generation(s) of g++\n-* installation::    How to install, installation problems\n-* evolution::       The Evolution of g++\n-* User Problems::   Commonly reported problems and bugs\n-* legalities::      Lawyer stuff, GPL, LGPL, etc.\n-* index::           Index of terms\n+* basics::                      What is g++?  How do I get it?\n+* egcs and 2.8.x::              The next generation(s) of g++\n+* installation::                How to install, installation problems\n+* evolution::                   The Evolution of g++\n+* User Problems::               Commonly reported problems and bugs\n+* legalities::                  Lawyer stuff, GPL, LGPL, etc.\n+* index::                       Index of terms\n \n  --- The Detailed Node Listing ---\n \n The basics: what is g++?\n \n-* latest versions::  \n-* g++ for Unix::    \n-* g++ for HP::      \n-* g++ for Solaris 2.x::  \n-* g++ for other platforms::  \n-* 1.x vs 2.x versions::  \n+* latest versions::             What are the latest versions of g++ and libraries?\n+* g++ for Unix::                How do I get g++ for Unix?\n+* getting-egcs::                How do I get egcs?\n+* g++ for HP::                  \n+* g++ for Solaris 2.x::         \n+* g++ for other platforms::     \n+* 1.x vs 2.x versions::         \n \n The Next Generation(s) of g++\n \n-* new-in-2.8.0::    What's new in gcc 2.8.0?    \n-* egcs-intro::      What is egcs?\n-* egcs-whats-new::  What's new in egcs vs 2.7.2?\n-* egcs-bug-fixes::  What was fixed in egcs-1.0.1 and 1.0.2?\n-* egcs-linux::      If I install on Linux, will it overwrite my libraries?\n-* egcs-run-both::   How can I run both egcs and an FSF release?\n-* egcs-vs-2.8.0::   How will egcs affect 2.8.0?\n-* egcs-robustness::  How robust is egcs?\n+* new-in-2.8.x::                What's new in gcc 2.8.x?    \n+* egcs-intro::                  What is egcs?\n+* egcs-whats-new::              What's new in egcs vs 2.7.2?\n+* egcs-bug-fixes::              What was fixed in the latest egcs releases?\n+* egcs-linux::                  If I install on Linux, will it overwrite my libraries?\n+* egcs-run-both::               How can I run both egcs and an FSF release?\n+* egcs-vs-2.8.x::               How will egcs affect 2.8.x?\n+* egcs-robustness::             How robust is egcs?\n \n Installation Issues and Problems\n \n-* gcc-2 + g++-1::   \n-* what else do I need?::  \n-* use GNU linker?::  \n-* Use GNU assembler?::  \n-* shared libraries::  \n-* repository::      \n-* repo bugs::       \n-* Use GNU C library?::  \n+* gcc-2 + g++-1::               \n+* what else do I need?::        \n+* use GNU linker?::             \n+* Use GNU assembler?::          \n+* shared libraries::            \n+* repository::                  \n+* repo bugs::                   \n+* Use GNU C library?::          \n * Global constructor problems::  \n-* Strange assembler errors::  \n+* Strange assembler errors::    \n * Other problems building libg++::  \n-* More size_t problems::  \n-* Rebuild libg++?::  \n-* co-existing versions::  \n-* Installing on Linux::  \n-* Linux Slackware 3.0::  \n+* More size_t problems::        \n+* Rebuild libg++?::             \n+* co-existing versions::        \n+* Installing on Linux::         \n+* Linux Slackware 3.0::         \n \n The Evolution of g++\n \n-* version 2.7.x::   What's changed in 2.7.x from earlier versions\n-* libstdc++::       \n+* version 2.7.x::               What's changed in 2.7.x from earlier versions\n+* libstdc++::                   \n \n User Problems\n \n-* missing virtual table::  \n-* for scope::       \n-* const constructor::  \n-* unused parameter warnings::  \n+* missing virtual table::       \n+* for scope::                   \n+* const constructor::           \n+* unused parameter warnings::   \n * jump crosses initialization::  \n-* Demangler::       \n-* static data members::  \n-* internal compiler error::  \n-* bug reports::     \n-* porting to g++::  \n-* name mangling::   \n+* Demangler::                   \n+* static data members::         \n+* internal compiler error::     \n+* bug reports::                 \n+* porting to g++::              \n+* name mangling::               \n * problems linking with other libraries::  \n-* documentation::   \n-* templates::       \n-* undefined templates::  \n-* redundant templates::  \n-* Standard Template Library::  \n-* STL and string::  \n-* exceptions::      \n-* namespaces::      \n-* agreement with standards::  \n+* documentation::               \n+* templates::                   \n+* undefined templates::         \n+* redundant templates::         \n+* Standard Template Library::   \n+* STL and string::              \n+* exceptions::                  \n+* namespaces::                  \n+* agreement with standards::    \n * compiling standard libraries::  \n-* debugging on SVR4 systems::  \n+* debugging on SVR4 systems::   \n * debugging problems on Solaris::  \n-* X11 conflicts with libg++::  \n-* assignment to streams::  \n+* X11 conflicts with libg++::   \n+* assignment to streams::       \n @end menu\n \n-@node basics, egcs and 2.8.0, Top, Top\n+@node basics, egcs and 2.8.x, Top, Top\n @chapter The basics: what is g++?\n \n @cindex Free Software Foundation\n@@ -165,12 +162,13 @@ it is not public domain, but is protected by the GNU Public License,\n or GPL (@pxref{legalities}).\n \n @menu\n-* latest versions::  \n-* g++ for Unix::    \n-* g++ for HP::      \n-* g++ for Solaris 2.x::  \n-* g++ for other platforms::  \n-* 1.x vs 2.x versions::  \n+* latest versions::             What is the latest version of gcc/g++/libg++?\n+* g++ for Unix::                How do I get a copy of g++ for Unix?\n+* getting-egcs::                How do I get egcs?\n+* g++ for HP::                  Getting g++ for the HP precision architecture\n+* g++ for Solaris 2.x::         Getting g++ for Solaris\n+* g++ for other platforms::     \n+* 1.x vs 2.x versions::         \n @end menu\n \n @node latest versions, g++ for Unix, basics, basics\n@@ -179,12 +177,12 @@ or GPL (@pxref{legalities}).\n @cindex egcs release\n \n The newest release from the egcs project (on the Web:\n-@file{http://www.cygnus.com/egcs/}) is egcs-1.0.2, released March 16,\n+@file{http://www.cygnus.com/egcs/}) is egcs-1.0.3, released May 15,\n 1998.\n \n @cindex gcc/g++, version date\n The current version of gcc/g++ is 2.8.1, released March 4, 1998.\n-This release fixes some bugs in the 2.8.0 release from January.\n+This release fixes some bugs in the 2.8.x release from January.\n It is a huge improvement over the 2.7.x releases.\n \n libg++ has now been deprecated (that is, it is no longer really\n@@ -203,12 +201,16 @@ version (2.7.2, say).  You'll need to use a version of libg++ that\n has the same first two digits as the compiler version, e.g. use libg++\n 2.7.x (for the latest x you can find) with gcc version 2.7.2.1.\n \n+From version 2.8.0 on, you don't need libg++, you only need libstdc++\n+(again, the latest version with the same two leading digits as the\n+version of g++ you use).\n+\n The latest \"1.x\" version of gcc is 1.42, and the latest \"1.x\" version of\n g++ is 1.42.0.\n While gcc 1.42 is quite usable for C programs, g++ 1.x is only of\n historical interest (since the C++ language has changed so much).\n \n-@node g++ for Unix, g++ for HP, latest versions, basics\n+@node g++ for Unix, getting-egcs, latest versions, basics\n @section How do I get a copy of g++ for Unix?\n \n First, you may already have it if you have gcc for your platform;\n@@ -285,7 +287,54 @@ which you will need to uncompress the distributions.\n @cindex libstdc++\n Don't forget to retrieve libstdc++ as well!\n \n-@node g++ for HP, g++ for Solaris 2.x, g++ for Unix, basics\n+@node getting-egcs, g++ for HP, g++ for Unix, basics\n+@section How do I get egcs?\n+\n+See @xref{egcs-intro} to find out what egcs is.\n+\n+You can obtain egcs either by FTP or with a Web browser.  To do the\n+latter, start from @file{http://egcs.cygnus.com/}.  The master\n+FTP site is @file{ftp://ftp.cygnus.com/pub/egcs/releases}, however\n+you'll probably get a faster download if you use a mirror site.\n+Mirror sites also have egcs snapshots unless otherwise noted.\n+@itemize @bullet\n+@item\n+US (west coast): @file{ftp://go.cygnus.com/pub/ftp.cygnus.com/egcs/}\n+@item\n+US (east coast): @file{ftp://ftp.goof.com/pub/pcg/egcs/}\n+or (for releases only): @file{ftp://cambridge.cygnus.com/pub/egcs/}\n+@item\n+US (Arizona): @file{ftp://ftp.ninemoons.com/pub/mirrors/egcs/}\n+@item\n+UK: @file{ftp://sunsite.doc.ic.ac.uk/Mirrors/egcs.cygnus.com/pub/egcs/}\n+@item\n+Austria: @file{ftp://gd.tuwien.ac.at/gnu/egcs}\n+@item\n+France: @file{ftp://ftp.ilog.fr/pub/mirrors/egcs/} or\n+@file{ftp://ftp.lip6.fr/pub/egcs}\n+@item\n+Czech Republic: @file{ftp://sunsite.mff.cuni.cz/pub/GNU/egcs/}\n+@item\n+Denmark: @file{ftp://sunsite.auc.dk/pub/egcs/}\n+@item\n+Germany @file{ftp://ftp.fu-berlin.de/unix/languages/egcs/} or\n+@file{ftp://ftp.gwdg.de/pub/cygnus/egcs/}\n+@item\n+Poland: @file{ftp://sunsite.icm.edu.pl/pub/programming/egcs/}\n+@item\n+Sweden: @file{ftp://ftp.sunet.se/pub/gnu/egcs/}\n+@item\n+Brasil (releases only, no snapshots):\n+@file{ftp://ftp.unicamp.br/pub/gnu/=EXTRA=/cygnus/egcs/}\n+@item\n+Portugal: @file{ftp://ftp.lca.uevora.pt/pub/egcs/}\n+@item\n+Romania: @file{ftp://ftp.lbi.ro/pub/egcs/}\n+@item\n+Australia/NZ (release only): @file{ftp://moshpit.cygnus.com/pub/egcs/}\n+@end itemize\n+\n+@node g++ for HP, g++ for Solaris 2.x, getting-egcs, basics\n @section Getting gcc/g++ for the HP Precision Architecture\n \n @cindex HP Precision Architecture\n@@ -439,9 +488,9 @@ him directly (shebs@@cygnus.com) for more information.\n @node 1.x vs 2.x versions,  , g++ for other platforms, basics\n @section But I can only find g++-1.42!\n \n-``I keep hearing people talking about g++ 2.8.0 (or some other number\n-starting with 2), but the latest version I can find is g++ 1.42.\n-Where is it?''\n+``I keep hearing people talking about g++ 2.8.1 (or some other number\n+starting with 2), but the latest version I can find is g++ 1.42.  Where\n+is it?''\n \n @cindex Objective-C\n @cindex g++, version number\n@@ -453,22 +502,22 @@ install the C++ compiler as well.\n One could argue that we shouldn't even refer to \"g++-2.x.y\" but it's a\n convention.  It means ``the C++ compiler included with gcc-2.x.y.''\n \n-@node egcs and 2.8.0, installation, basics, Top\n+@node egcs and 2.8.x, installation, basics, Top\n @chapter The Next Generation(s) of g++\n \n @menu\n-* new-in-2.8.0::    What's new in gcc 2.8.0?    \n-* egcs-intro::      What is egcs?\n-* egcs-whats-new::  What's new in egcs vs 2.7.2?\n-* egcs-bug-fixes::  What was fixed in egcs-1.0.1 and egcs-1.0.2?\n-* egcs-linux::      If I install on Linux, will it overwrite my libraries?\n-* egcs-run-both::   How can I run both egcs and an FSF release?\n-* egcs-vs-2.8.0::   How will egcs affect 2.8.x?\n-* egcs-robustness::  How robust is egcs?\n+* new-in-2.8.x::                What's new in gcc 2.8.x?    \n+* egcs-intro::                  What is egcs?\n+* egcs-whats-new::              What's new in egcs vs 2.7.2?\n+* egcs-bug-fixes::              What was fixed in the latest egcs releases?\n+* egcs-linux::                  If I install on Linux, will it overwrite my libraries?\n+* egcs-run-both::               How can I run both egcs and an FSF release?\n+* egcs-vs-2.8.x::               How will egcs affect 2.8.x?\n+* egcs-robustness::             How robust is egcs?\n @end menu\n \n-@node new-in-2.8.0, egcs-intro, egcs and 2.8.0, egcs and 2.8.0\n-@section What's new in gcc/g++ 2.8.0?\n+@node new-in-2.8.x, egcs-intro, egcs and 2.8.x, egcs and 2.8.x\n+@section What's new in gcc/g++ 2.8.x?\n \n After a two-year wait, gcc 2.8.0 was released in January 1998, along\n with libstdc++-2.8.0 and libg++-2.8.0.  This has been followed up in\n@@ -484,13 +533,13 @@ that have not yet made it into gcc-2.8.x, C++ users will find the\n two compilers to be almost the same at this stage, other than that 2.8.x\n users may get more bogus warnings with -Wall and optimization because\n some fixes to flow analysis in the presence of exceptions that egcs made\n-are not yet present in gcc 2.8.0.\n+are not yet present in gcc 2.8.x (as of 2.8.1).\n \n Because the new feature lists for egcs and gcc 2.8 are almost the same,\n please see @xref{egcs-whats-new} for a list of new features.  It is a\n fairly long list.\n \n-@node egcs-intro, egcs-whats-new, new-in-2.8.0, egcs and 2.8.0\n+@node egcs-intro, egcs-whats-new, new-in-2.8.x, egcs and 2.8.x\n @section What is egcs?\n \n egcs is the Experimental GNU compiler system (see\n@@ -574,14 +623,15 @@ Features that are still missing include namespaces and templates as\n template arguments, though there is support for the latter feature\n in the egcs snapshots (which has not yet made it into a release).\n \n-@node egcs-bug-fixes, egcs-linux, egcs-whats-new, egcs and 2.8.0\n-@section What was fixed in egcs-1.0.1?\n+@node egcs-bug-fixes, egcs-linux, egcs-whats-new, egcs and 2.8.x\n+@section What was fixed in the latest egcs releases?\n \n @itemize @bullet\n \n @item\n Add support for Red Hat 5.0 Linux and better support for Linux\n-systems using glibc2.\n+systems using glibc2.  (1.0.3 was specifically done to fix some\n+remaining problems detected when building Red Hat 5.1).\n  \n @item\n Compatibility with both egcs-1.0 and gcc-2.8 libgcc exception handling\n@@ -604,12 +654,12 @@ Fix build problems on x86-solaris systems.\n \n To avoid future compatibility problems, we strongly urge anyone who is\n planning on distributing shared libraries that contain C++ code to\n-upgrade to egcs-1.0.1 first.  See\n+upgrade to at least egcs-1.0.1 first (and preferably to 1.0.3).  See\n @file{http://www.cygnus.com/egcs/egcs-1.0.1.html} for details about the\n compatibility issues as well as additional information about the\n bugfixes since the egcs-1.0 release.\n \n-@node egcs-linux, egcs-run-both, egcs-bug-fixes, egcs and 2.8.0\n+@node egcs-linux, egcs-run-both, egcs-bug-fixes, egcs and 2.8.x\n @section If I install egcs on Linux, will it overwrite my libraries?\n \n No.  If you build from sources, by default, egcs installs executables in\n@@ -621,7 +671,7 @@ to put egcs in @code{/usr/bin} and @code{/usr/lib}, then yes, you are\n replacing your system compiler and C++ library (I don't know if anyone\n has provided such packages yet -- proceed with caution).\n \n-@node egcs-run-both, egcs-vs-2.8.0, egcs-linux, egcs and 2.8.0\n+@node egcs-run-both, egcs-vs-2.8.x, egcs-linux, egcs and 2.8.x\n @section How can I run both egcs and an FSF release of g++ on the same machine?\n \n The recommended approach is to provide a different argument to the\n@@ -635,47 +685,46 @@ ln -s /usr/local/egcs/bin/gcc /usr/local/bin/egcc\n ln -s /usr/local/egcs/bin/g++ /usr/local/bin/eg++\n @end example\n \n-@node egcs-vs-2.8.0, egcs-robustness, egcs-run-both, egcs and 2.8.0\n-@section What about 2.8.0?  How does egcs affect the 2.8.x development?\n+@node egcs-vs-2.8.x, egcs-robustness, egcs-run-both, egcs and 2.8.x\n+@section What about 2.8.x?  How does egcs affect the 2.8.x development?\n \n-2.8.0 has now been released, with essentially the same C++ front end as\n-egcs.\n+2.8.0 has now been released (followed up by 2.8.1), with essentially the\n+same C++ front end as egcs.\n \n Bug fixes generated in egcs will be passed to the 2.8.x releases for\n inclusion; the reverse is also taking place, though a bug fix may\n-appear in one before it does in the other.  egcs development is expected\n-to proceed more quickly.\n+appear in one before it does in the other.  egcs development is currently\n+proceeding much more quickly than gcc 2.8.x development.  However, there\n+is essentially only one C++ front end, which is shared by the two\n+distinct compiler back ends.\n \n-@node egcs-robustness,  , egcs-vs-2.8.0, egcs and 2.8.0\n+@node egcs-robustness,  , egcs-vs-2.8.x, egcs and 2.8.x\n @section How robust is egcs?\n \n While the 'e' stands for 'experimental', egcs has been tested thoroughly\n-and should be of high quality.  A few glitches in the initial release\n-were fixed in 1.0.1, and a few more in 1.0.2.  egcs-1.0 users should upgrade.\n+and should be of high quality.  The author considers egcs 1.0.3 the\n+must robust GNU C++ compiler ever produced.\n \n-Memory bloat problems with deeply nested templates were fixed in\n-1.0.2.\n-\n-@node installation, evolution, egcs and 2.8.0, Top\n+@node installation, evolution, egcs and 2.8.x, Top\n @chapter Installation Issues and Problems\n \n @menu\n-* gcc-2 + g++-1::   \n-* what else do I need?::  \n-* use GNU linker?::  \n-* Use GNU assembler?::  \n-* shared libraries::  \n-* repository::      \n-* repo bugs::       \n-* Use GNU C library?::  \n+* gcc-2 + g++-1::               \n+* what else do I need?::        \n+* use GNU linker?::             \n+* Use GNU assembler?::          \n+* shared libraries::            \n+* repository::                  \n+* repo bugs::                   \n+* Use GNU C library?::          \n * Global constructor problems::  \n-* Strange assembler errors::  \n+* Strange assembler errors::    \n * Other problems building libg++::  \n-* More size_t problems::  \n-* Rebuild libg++?::  \n-* co-existing versions::  \n-* Installing on Linux::  \n-* Linux Slackware 3.0::  \n+* More size_t problems::        \n+* Rebuild libg++?::             \n+* co-existing versions::        \n+* Installing on Linux::         \n+* Linux Slackware 3.0::         \n @end menu\n \n @node gcc-2 + g++-1, what else do I need?, installation, installation\n@@ -713,7 +762,7 @@ or the GNU linker (see next question).\n @cindex GNU gdb\n Finally, while it is not required, you'll almost certainly want the GNU\n debugger, gdb.  The latest version is\n-4.16, released April 22, 1996.\n+4.17, released April 27, 1997.\n Other debuggers (like dbx, for example) will normally not be able to\n understand at least some of the debug information produced by g++.\n \n@@ -743,8 +792,11 @@ there by programs named \"patch\" or \"munch\".  With GNU C++, it is performed\n either by the GNU linker or by a program known as \"collect\".  The collect\n program is part of the gcc-2.x distribution; you can obtain the GNU linker\n separately as part of the \"binutils\" package.  The latest version of\n-binutils is 2.7, released July 10, 1996; 2.6 is in common use and works\n-well.\n+binutils is 2.9.1, released May 1, 1998.\n+\n+Note that if you want to use exceptions on Intel-like platforms and use\n+gas (e.g. you run Linux), you need binutils version 2.8.1 or newer for\n+exceptions to work correctly!\n \n (To be technical, it's \"collect2\"; there were originally several\n alternative versions of collect, and this is the one that survived).\n@@ -1175,8 +1227,8 @@ This chapter discusses the evolution of g++ and describes what can be expected\n in the future.\n \n @menu\n-* version 2.7.x::   What's changed in 2.7.x from earlier versions\n-* libstdc++::       \n+* version 2.7.x::               What's changed in 2.7.x from earlier versions\n+* libstdc++::                   \n @end menu\n \n @node version 2.7.x, libstdc++, evolution, evolution\n@@ -1339,32 +1391,32 @@ will always be available, enhancements to it should not be expected.\n @chapter User Problems\n \n @menu\n-* missing virtual table::  \n-* for scope::       \n-* const constructor::  \n-* unused parameter warnings::  \n+* missing virtual table::       \n+* for scope::                   \n+* const constructor::           \n+* unused parameter warnings::   \n * jump crosses initialization::  \n-* Demangler::       \n-* static data members::  \n-* internal compiler error::  \n-* bug reports::     \n-* porting to g++::  \n-* name mangling::   \n+* Demangler::                   \n+* static data members::         \n+* internal compiler error::     \n+* bug reports::                 \n+* porting to g++::              \n+* name mangling::               \n * problems linking with other libraries::  \n-* documentation::   \n-* templates::       \n-* undefined templates::  \n-* redundant templates::  \n-* Standard Template Library::  \n-* STL and string::  \n-* exceptions::      \n-* namespaces::      \n-* agreement with standards::  \n+* documentation::               \n+* templates::                   \n+* undefined templates::         \n+* redundant templates::         \n+* Standard Template Library::   \n+* STL and string::              \n+* exceptions::                  \n+* namespaces::                  \n+* agreement with standards::    \n * compiling standard libraries::  \n-* debugging on SVR4 systems::  \n+* debugging on SVR4 systems::   \n * debugging problems on Solaris::  \n-* X11 conflicts with libg++::  \n-* assignment to streams::  \n+* X11 conflicts with libg++::   \n+* assignment to streams::       \n @end menu\n \n @node missing virtual table, for scope, User Problems, User Problems\n@@ -1615,7 +1667,7 @@ An older\n standard reference is \"The Annotated C++ Reference Manual\", by Ellis and\n Stroustrup (copyright 1990, ISBN #0-201-51459-1).  This is what they're\n talking about on the net when they refer to ``the ARM''.  But you should\n-know that changes have been made to the language since then.\n+know that vast changes have been made to the language since then.\n \n The ANSI/ISO C++ standards committee have adopted some changes to the\n C++ language since the publication of the original ARM, and newer\n@@ -1806,6 +1858,17 @@ in which it is used.\n can be added to 2.7.0 or later does implement a separate pass, but there\n is still no searching of files that the compiler never saw).\n \n+As of 2.8.x and egcs-1.0.x, the template implementation has most\n+of the features specified in the draft standard.  Still missing are\n+template arguments that are themselves templates; however, template\n+class member functions work, and most of the limitations of the older\n+g++ versions are fixed.\n+\n+I think that given this new implementation, it should not be necessary\n+for users to mess around with switches like @code{-fno-implicit-templates}\n+and @code{#pragma} directives; most of the time, the default behavior\n+will work OK.  Users of older versions might want to read on.\n+\n @cindex -fno-implicit-templates\n For version 2.6.0, however, a new switch @code{-fno-implicit-templates}\n was added; with this switch, templates are expanded only under user\n@@ -1827,7 +1890,8 @@ implementation besides the above (thanks to Jason Merrill for this info):\n \n @enumerate 1\n @item\n-Static data member templates are not supported.  You can work around\n+Static data member templates are not supported in compiler versions older\n+than 2.8.0.  You can work around\n this by explicitly declaring the static variable for each template\n specialization:\n \n@@ -1840,8 +1904,6 @@ template <class T> T A<T>::t = 0; // gets bogus error\n int A<int>::t = 0;                // OK (workaround)\n @end example\n \n-(still a limitation in 2.7.2)\n-\n @item\n Template member names are not available when defining member function\n templates.\n@@ -1858,7 +1920,7 @@ template <class T> void A<T>::f (foo) @{ @} // gets bogus error\n \n @item\n Templates are instantiated using the parser.  This results in two\n-problems:\n+problems (again, these problems are fixed in 2.8.0 and egcs):\n \n a) Class templates are instantiated in some situations where such\n instantiation should not occur.\n@@ -2028,13 +2090,24 @@ solution, I'm afraid, is to wait for the new release.\n @node exceptions, namespaces, STL and string, User Problems\n @section Problems and limitations with exceptions\n \n-Recent g++ versions provide limited support for exceptions.  You must\n+The first really usable exceptions implementations are in 2.8.x and\n+egcs.  With these versions, exceptions are enabled by default; use\n+-fno-exceptions to disable exceptions.\n+\n+However, 2.8.1 still has not integrated egcs work that computes an\n+accurate control flow graph in the presence of exceptions.  For this\n+reason, you will sometimes get bogus warnings when compiling with 2.8.1,\n+-O, and -Wall, about uninitialized variables and the like.\n+\n+2.7.2.x has very limited and partially broken support for exceptions.\n+With that compiler, you must\n provide the @code{-fhandle-exceptions} flag to enable exception\n-handling.  As of version 2.7.2, exceptions may not work properly\n+handling.  In version 2.7.2 and older, exceptions may not work properly\n (and you may get odd error messages when compiling) if you turn\n-on optimization (the @code{-O} flag).\n+on optimization (the @code{-O} flag).  If you care about exceptions,\n+please upgrade to a newer compiler!\n \n-You must give the @code{-frtti} switch to enable catching\n+In 2.7.2, you must give the @code{-frtti} switch to enable catching\n of derived exception objects with handlers for the base exception class;\n if @code{-frtti} is not given, only exact type matching works.\n \n@@ -2044,6 +2117,12 @@ for the Alpha, and ``m68k is rumored to work on some platforms''\n and ``VAX may also work'' (according to Mike Stump).\n @emph{It still doesn't work on HP-PA or MIPS platforms.}\n \n+Exception handling adds space overhead (the size of the executable\n+grows); the problem is worse on the ix86 (Intel-like) architecture\n+than on RISC architectures.  The extra exceptions code is generated\n+in a separate program section and is only paged in if an exception\n+is thrown, so the cost is in disk, not in RAM or CPU.\n+\n @node namespaces, agreement with standards, exceptions, User Problems\n @section Does g++ support namespaces?\n \n@@ -2057,7 +2136,8 @@ compile standard programs they make\n using namespace std;\n @end example\n \n-a no-op.\n+a no-op.  There is namespace implementation work going on in the egcs\n+snapshots (but it hasn't been released yet).\n \n @node agreement with standards, compiling standard libraries, namespaces, User Problems\n @section What are the differences between g++ and the ARM specification of C++?\n@@ -2092,11 +2172,11 @@ function should be chosen, g++ chooses one (often the first one\n declared).  This is usually not a problem when porting C++ code from\n other compilers to g++, but shows up as errors when code developed under\n g++ is ported to other compilers.  (I believe this is no longer a\n-significant problem in 2.7.0).\n+significant problem in 2.7.0 or later).\n \n-[A full bug list would be very long indeed, so I won't put one here.\n-I may add a list of frequently-reported bugs and \"non-bugs\" like the\n-static class members issue mentioned above].\n+[A full bug list would be very long indeed, so I won't put one here;\n+the sheer complexity of the C++ language means that every compiler I've\n+tried has some problems. 2.8.x and egcs are a big improvement]\n \n @node compiling standard libraries, debugging on SVR4 systems, agreement with standards, User Problems\n @section Will g++ compile InterViews?  The NIH class library?  Rogue Wave?\n@@ -2140,16 +2220,13 @@ fixed their code to comply with the new standard yet.\n Most systems based on System V Release 4 (except Solaris) encode symbolic\n debugging information in a format known as `DWARF'.\n \n-Although the GNU C compiler already knows how to write out symbolic debugging\n-information in the DWARF format, the GNU C++ compiler does not yet have this\n-feature yet.  However, work is in progress for DWARF 2 debug support for\n-gcc and g++ and it works fairly well in 2.8.x and egcs, though we'll\n-have to wait for gdb 4.17 to be released to take full advantage.\n+Now that we have gdb 4.17, DWARF debugging is finally supported (if\n+you use gcc 2.8.1 or egcs-1.0.x or newer).\n \n @cindex stabs\n @cindex --with-stabs\n \n-In the meantime, you @emph{can} get g++ debugging under SVR4 systems by\n+For users of older versions of the tools, you @emph{can} get g++ debugging under SVR4 systems by\n configuring gcc with the @code{--with-stabs} option.  This causes gcc to\n use an alternate debugging format, one more like that used under SunOS4.\n You won't need to do anything special to GDB; it will always understand\n@@ -2312,7 +2389,9 @@ step with @code{c++} instead of @code{g++} to search only the\n \n Note that in egcs and in gcc-2.8.x, if you do not\n specify any libraries the @code{g++} command will only link in\n-@file{-lstdc++}, so your executable will not be affected by the LGPL.\n+@file{-lstdc++}, so your executable will not be affected by the LGPL\n+(unless you link in some other LGPLed library: the GNU C library used\n+on GNU/Linux systems is one such library).\n \n If you wish to discuss legal issues connected with GNU software on the\n net, please use @file{gnu.misc.discuss}, not the technical newsgroups.\n@@ -2326,3 +2405,4 @@ net, please use @file{gnu.misc.discuss}, not the technical newsgroups.\n @page\n @contents\n @bye\n+"}, {"sha": "cf38f207f527fc2d154c42ba89b63c82738bb8f9", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbc06b4b09263939b706bfc683afb38c3ca1c132/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbc06b4b09263939b706bfc683afb38c3ca1c132/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=bbc06b4b09263939b706bfc683afb38c3ca1c132", "patch": "@@ -3316,7 +3316,7 @@ for_each_template_parm (t, fn, data)\n \tcase '<':\n \t  {\n \t    int i;\n-\t    for (i = tree_code_length[(int) TREE_CODE (t)]; --i >= 0;)\n+\t    for (i = first_rtl_op (TREE_CODE (t)); --i >= 0;)\n \t      if (for_each_template_parm (TREE_OPERAND (t, i), fn, data))\n \t\treturn 1;\n \t    return 0;"}]}