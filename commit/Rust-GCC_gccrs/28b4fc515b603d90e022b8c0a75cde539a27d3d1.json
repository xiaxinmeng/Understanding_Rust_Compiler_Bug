{"sha": "28b4fc515b603d90e022b8c0a75cde539a27d3d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhiNGZjNTE1YjYwM2Q5MGUwMjJiOGMwYTc1Y2RlNTM5YTI3ZDNkMQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2012-09-03T11:34:22Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2012-09-03T11:34:22Z"}, "message": "common.opt (--no-sysroot-suffix): New driver option.\n\n\t* common.opt (--no-sysroot-suffix): New driver option.\n\t* doc/invoke.texi (--no-sysroot-suffix): Document.\n\t* gcc.c (driver_handle_option): Handle --no-sysroot-suffix as not\n\tneeding spec processing.\n\t(main): Do not process sysroot suffixes if no_sysroot_suffix.\n\nFrom-SVN: r190882", "tree": {"sha": "864ddfc1802112f202a37bdbc0819fc724c00fdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/864ddfc1802112f202a37bdbc0819fc724c00fdd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28b4fc515b603d90e022b8c0a75cde539a27d3d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28b4fc515b603d90e022b8c0a75cde539a27d3d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28b4fc515b603d90e022b8c0a75cde539a27d3d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28b4fc515b603d90e022b8c0a75cde539a27d3d1/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6cd87119867047cb1a2fd9b1618c77aef122fc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6cd87119867047cb1a2fd9b1618c77aef122fc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6cd87119867047cb1a2fd9b1618c77aef122fc9"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "ad59d6348f464ff5876d312d2906e0edee1d6783", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28b4fc515b603d90e022b8c0a75cde539a27d3d1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28b4fc515b603d90e022b8c0a75cde539a27d3d1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=28b4fc515b603d90e022b8c0a75cde539a27d3d1", "patch": "@@ -1,3 +1,11 @@\n+2012-09-03  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* common.opt (--no-sysroot-suffix): New driver option.\n+\t* doc/invoke.texi (--no-sysroot-suffix): Document.\n+\t* gcc.c (driver_handle_option): Handle --no-sysroot-suffix as not\n+\tneeding spec processing.\n+\t(main): Do not process sysroot suffixes if no_sysroot_suffix.\n+\n 2012-09-02  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/33135"}, {"sha": "87e28b5efe9a0ef369a5ef8ae8a2da685dbdb049", "filename": "gcc/common.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28b4fc515b603d90e022b8c0a75cde539a27d3d1/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28b4fc515b603d90e022b8c0a75cde539a27d3d1/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=28b4fc515b603d90e022b8c0a75cde539a27d3d1", "patch": "@@ -291,6 +291,9 @@ Driver Alias(no-canonical-prefixes)\n -no-standard-libraries\n Driver Alias(nostdlib)\n \n+-no-sysroot-suffix\n+Driver Var(no_sysroot_suffix)\n+\n -no-warnings\n Common Alias(w)\n "}, {"sha": "f8e8a1bad708bc5aa8a044b2e7041a353208bec4", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28b4fc515b603d90e022b8c0a75cde539a27d3d1/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28b4fc515b603d90e022b8c0a75cde539a27d3d1/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=28b4fc515b603d90e022b8c0a75cde539a27d3d1", "patch": "@@ -457,7 +457,7 @@ Objective-C and Objective-C++ Dialects}.\n @xref{Directory Options,,Options for Directory Search}.\n @gccoptlist{-B@var{prefix} -I@var{dir} -iplugindir=@var{dir} @gol\n -iquote@var{dir} -L@var{dir} -specs=@var{file} -I- @gol\n---sysroot=@var{dir}}\n+--sysroot=@var{dir} --no-sysroot-suffix}\n \n @item Machine Dependent Options\n @xref{Submodel Options,,Hardware Models and Configurations}.\n@@ -9841,6 +9841,15 @@ for this option.  If your linker does not support this option, the\n header file aspect of @option{--sysroot} still works, but the\n library aspect does not.\n \n+@item --no-sysroot-suffix\n+@opindex no-sysroot-suffix\n+For some targets, a suffix is added to the root directory specified\n+with @option{--sysroot}, depending on the other options used, so that\n+headers may for example be found in\n+@file{@var{dir}/@var{suffix}/usr/include} instead of\n+@file{@var{dir}/usr/include}.  This option disables the addition of\n+such a suffix.\n+\n @item -I-\n @opindex I-\n This option has been deprecated.  Please use @option{-iquote} instead for"}, {"sha": "5f68d5978e3b7c7ff5efa62887f3eaae25c6f9f0", "filename": "gcc/gcc.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28b4fc515b603d90e022b8c0a75cde539a27d3d1/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28b4fc515b603d90e022b8c0a75cde539a27d3d1/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=28b4fc515b603d90e022b8c0a75cde539a27d3d1", "patch": "@@ -3249,6 +3249,7 @@ driver_handle_option (struct gcc_options *opts,\n       add_linker_option (\"--target-help\", 13);\n       break;\n \n+    case OPT__no_sysroot_suffix:\n     case OPT_pass_exit_codes:\n     case OPT_print_search_dirs:\n     case OPT_print_file_name_:\n@@ -6340,6 +6341,7 @@ main (int argc, char **argv)\n \n   /* Process sysroot_suffix_spec.  */\n   if (*sysroot_suffix_spec != 0\n+      && !no_sysroot_suffix\n       && do_spec_2 (sysroot_suffix_spec) == 0)\n     {\n       if (VEC_length (const_char_p, argbuf) > 1)\n@@ -6363,6 +6365,7 @@ main (int argc, char **argv)\n \n   /* Process sysroot_hdrs_suffix_spec.  */\n   if (*sysroot_hdrs_suffix_spec != 0\n+      && !no_sysroot_suffix\n       && do_spec_2 (sysroot_hdrs_suffix_spec) == 0)\n     {\n       if (VEC_length (const_char_p, argbuf) > 1)"}]}