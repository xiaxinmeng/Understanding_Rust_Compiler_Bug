{"sha": "88ac13da93a2c1acf2e11a8ad5f33377d8014c01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhhYzEzZGE5M2EyYzFhY2YyZTExYThhZDVmMzMzNzdkODAxNGMwMQ==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2014-02-12T14:46:30Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2014-02-12T14:46:30Z"}, "message": "Refactor common code into new maybe_fold_stmt function.\n\n\tgcc/\n\t* gimplify.c (gimplify_call_expr, gimplify_modify_expr): Move\n\tcommon code...\n\t(maybe_fold_stmt): ... into this new function.\n\t* omp-low.c (lower_omp): Update comment.\n\nFrom-SVN: r207724", "tree": {"sha": "c3cd305fe391b2bab585d10fda9bcd8a019a2a9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3cd305fe391b2bab585d10fda9bcd8a019a2a9f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88ac13da93a2c1acf2e11a8ad5f33377d8014c01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88ac13da93a2c1acf2e11a8ad5f33377d8014c01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88ac13da93a2c1acf2e11a8ad5f33377d8014c01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88ac13da93a2c1acf2e11a8ad5f33377d8014c01/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bae729a29f4d0a06380db341b7cf6146316aff67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bae729a29f4d0a06380db341b7cf6146316aff67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bae729a29f4d0a06380db341b7cf6146316aff67"}], "stats": {"total": 42, "additions": 23, "deletions": 19}, "files": [{"sha": "caf93a919daac7c008cf5f38c2cea57df026b8e7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88ac13da93a2c1acf2e11a8ad5f33377d8014c01/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88ac13da93a2c1acf2e11a8ad5f33377d8014c01/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=88ac13da93a2c1acf2e11a8ad5f33377d8014c01", "patch": "@@ -1,5 +1,10 @@\n 2014-02-12  Thomas Schwinge  <thomas@codesourcery.com>\n \n+\t* gimplify.c (gimplify_call_expr, gimplify_modify_expr): Move\n+\tcommon code...\n+\t(maybe_fold_stmt): ... into this new function.\n+\t* omp-low.c (lower_omp): Update comment.\n+\n \t* omp-low.c (lower_omp_target): Add clobber for sizes array, after\n \tlast use.\n "}, {"sha": "ff341d43bf325b052972d77e71004ec4b3d52dac", "filename": "gcc/gimplify.c", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88ac13da93a2c1acf2e11a8ad5f33377d8014c01/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88ac13da93a2c1acf2e11a8ad5f33377d8014c01/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=88ac13da93a2c1acf2e11a8ad5f33377d8014c01", "patch": "@@ -2191,6 +2191,20 @@ gimplify_arg (tree *arg_p, gimple_seq *pre_p, location_t call_location)\n   return gimplify_expr (arg_p, pre_p, NULL, test, fb);\n }\n \n+/* Don't fold STMT inside ORT_TARGET, because it can break code by adding decl\n+   references that weren't in the source.  We'll do it during omplower pass\n+   instead.  */\n+\n+static bool\n+maybe_fold_stmt (gimple_stmt_iterator *gsi)\n+{\n+  struct gimplify_omp_ctx *ctx;\n+  for (ctx = gimplify_omp_ctxp; ctx; ctx = ctx->outer_context)\n+    if (ctx->region_type == ORT_TARGET)\n+      return false;\n+  return fold_stmt (gsi);\n+}\n+\n /* Gimplify the CALL_EXPR node *EXPR_P into the GIMPLE sequence PRE_P.\n    WANT_VALUE is true if the result of the call is desired.  */\n \n@@ -2424,14 +2438,7 @@ gimplify_call_expr (tree *expr_p, gimple_seq *pre_p, bool want_value)\n       notice_special_calls (call);\n       gimplify_seq_add_stmt (pre_p, call);\n       gsi = gsi_last (*pre_p);\n-      /* Don't fold stmts inside of target construct.  We'll do it\n-\t during omplower pass instead.  */\n-      struct gimplify_omp_ctx *ctx;\n-      for (ctx = gimplify_omp_ctxp; ctx; ctx = ctx->outer_context)\n-\tif (ctx->region_type == ORT_TARGET)\n-\t  break;\n-      if (ctx == NULL)\n-\tfold_stmt (&gsi);\n+      maybe_fold_stmt (&gsi);\n       *expr_p = NULL_TREE;\n     }\n   else\n@@ -4579,14 +4586,7 @@ gimplify_modify_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p,\n \n   gimplify_seq_add_stmt (pre_p, assign);\n   gsi = gsi_last (*pre_p);\n-  /* Don't fold stmts inside of target construct.  We'll do it\n-     during omplower pass instead.  */\n-  struct gimplify_omp_ctx *ctx;\n-  for (ctx = gimplify_omp_ctxp; ctx; ctx = ctx->outer_context)\n-    if (ctx->region_type == ORT_TARGET)\n-      break;\n-  if (ctx == NULL)\n-    fold_stmt (&gsi);\n+  maybe_fold_stmt (&gsi);\n \n   if (want_value)\n     {"}, {"sha": "91c8656ee9cb04c4d9c59761411653bf4c22cb81", "filename": "gcc/omp-low.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88ac13da93a2c1acf2e11a8ad5f33377d8014c01/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88ac13da93a2c1acf2e11a8ad5f33377d8014c01/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=88ac13da93a2c1acf2e11a8ad5f33377d8014c01", "patch": "@@ -10134,9 +10134,8 @@ lower_omp (gimple_seq *body, omp_context *ctx)\n   gimple_stmt_iterator gsi;\n   for (gsi = gsi_start (*body); !gsi_end_p (gsi); gsi_next (&gsi))\n     lower_omp_1 (&gsi, ctx);\n-  /* Inside target region we haven't called fold_stmt during gimplification,\n-     because it can break code by adding decl references that weren't in the\n-     source.  Call fold_stmt now.  */\n+  /* During gimplification, we have not always invoked fold_stmt\n+     (gimplify.c:maybe_fold_stmt); call it now.  */\n   if (target_nesting_level)\n     for (gsi = gsi_start (*body); !gsi_end_p (gsi); gsi_next (&gsi))\n       fold_stmt (&gsi);"}]}