{"sha": "57675c7f92a3bd3ca8dae1faac7f2f51d40e0f9e", "node_id": "C_kwDOANBUbNoAKDU3Njc1YzdmOTJhM2JkM2NhOGRhZTFmYWFjN2YyZjUxZDQwZTBmOWU", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2022-10-20T09:37:33Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2022-10-20T09:37:33Z"}, "message": "aarch64: Prevent generation of /M BRKAS and BRKBS\n\nBit of a brown-paper-bag bug, but: GCC was generating\nnon-existent merging forms of BRKAS and BRKBS.  Those\ninstructions only support zero predication (although\nBRKA and BRKB support both).\n\ngcc/\n\t* config/aarch64/aarch64-sve.md (*aarch64_brk<brk_op>_cc): Remove\n\tmerging alternative.\n\t(*aarch64_brk<brk_op>_ptest): Likewise.\n\ngcc/testsuite/\n\t* gcc.target/aarch64/sve/acle/general/brka_1.c: Expect a separate\n\tPTEST instruction.\n\t* gcc.target/aarch64/sve/acle/general/brkb_1.c: Likewise.", "tree": {"sha": "4d3cda0f39a73292bc96f0071693a4a2eb758b3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d3cda0f39a73292bc96f0071693a4a2eb758b3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57675c7f92a3bd3ca8dae1faac7f2f51d40e0f9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57675c7f92a3bd3ca8dae1faac7f2f51d40e0f9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57675c7f92a3bd3ca8dae1faac7f2f51d40e0f9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57675c7f92a3bd3ca8dae1faac7f2f51d40e0f9e/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bec66640597e2604f51fc1642c7d279164cd442", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bec66640597e2604f51fc1642c7d279164cd442", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bec66640597e2604f51fc1642c7d279164cd442"}], "stats": {"total": 34, "additions": 16, "deletions": 18}, "files": [{"sha": "b8cc47ef5fcee84f9b4c6637f99a79ca632fab61", "filename": "gcc/config/aarch64/aarch64-sve.md", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57675c7f92a3bd3ca8dae1faac7f2f51d40e0f9e/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57675c7f92a3bd3ca8dae1faac7f2f51d40e0f9e/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md?ref=57675c7f92a3bd3ca8dae1faac7f2f51d40e0f9e", "patch": "@@ -9612,45 +9612,41 @@\n (define_insn \"*aarch64_brk<brk_op>_cc\"\n   [(set (reg:CC_NZC CC_REGNUM)\n \t(unspec:CC_NZC\n-\t  [(match_operand:VNx16BI 1 \"register_operand\" \"Upa, Upa\")\n+\t  [(match_operand:VNx16BI 1 \"register_operand\" \"Upa\")\n \t   (match_dup 1)\n \t   (match_operand:SI 4 \"aarch64_sve_ptrue_flag\")\n \t   (unspec:VNx16BI\n \t     [(match_dup 1)\n-\t      (match_operand:VNx16BI 2 \"register_operand\" \"Upa, Upa\")\n-\t      (match_operand:VNx16BI 3 \"aarch64_simd_reg_or_zero\" \"Dz, 0\")]\n+\t      (match_operand:VNx16BI 2 \"register_operand\" \"Upa\")\n+\t      (match_operand:VNx16BI 3 \"aarch64_simd_imm_zero\")]\n \t     SVE_BRK_UNARY)]\n \t  UNSPEC_PTEST))\n-   (set (match_operand:VNx16BI 0 \"register_operand\" \"=Upa, Upa\")\n+   (set (match_operand:VNx16BI 0 \"register_operand\" \"=Upa\")\n \t(unspec:VNx16BI\n \t  [(match_dup 1)\n \t   (match_dup 2)\n \t   (match_dup 3)]\n \t  SVE_BRK_UNARY))]\n   \"TARGET_SVE\"\n-  \"@\n-   brk<brk_op>s\\t%0.b, %1/z, %2.b\n-   brk<brk_op>s\\t%0.b, %1/m, %2.b\"\n+  \"brk<brk_op>s\\t%0.b, %1/z, %2.b\"\n )\n \n ;; Same, but with only the flags result being interesting.\n (define_insn \"*aarch64_brk<brk_op>_ptest\"\n   [(set (reg:CC_NZC CC_REGNUM)\n \t(unspec:CC_NZC\n-\t  [(match_operand:VNx16BI 1 \"register_operand\" \"Upa, Upa\")\n+\t  [(match_operand:VNx16BI 1 \"register_operand\" \"Upa\")\n \t   (match_dup 1)\n \t   (match_operand:SI 4 \"aarch64_sve_ptrue_flag\")\n \t   (unspec:VNx16BI\n \t     [(match_dup 1)\n-\t      (match_operand:VNx16BI 2 \"register_operand\" \"Upa, Upa\")\n-\t      (match_operand:VNx16BI 3 \"aarch64_simd_reg_or_zero\" \"Dz, 0\")]\n+\t      (match_operand:VNx16BI 2 \"register_operand\" \"Upa\")\n+\t      (match_operand:VNx16BI 3 \"aarch64_simd_imm_zero\")]\n \t     SVE_BRK_UNARY)]\n \t  UNSPEC_PTEST))\n-   (clobber (match_scratch:VNx16BI 0 \"=Upa, Upa\"))]\n+   (clobber (match_scratch:VNx16BI 0 \"=Upa\"))]\n   \"TARGET_SVE\"\n-  \"@\n-   brk<brk_op>s\\t%0.b, %1/z, %2.b\n-   brk<brk_op>s\\t%0.b, %1/m, %2.b\"\n+  \"brk<brk_op>s\\t%0.b, %1/z, %2.b\"\n )\n \n ;; -------------------------------------------------------------------------"}, {"sha": "6146ef828490e8482aff547ad6f4726723a134c2", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/general/brka_1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57675c7f92a3bd3ca8dae1faac7f2f51d40e0f9e/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral%2Fbrka_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57675c7f92a3bd3ca8dae1faac7f2f51d40e0f9e/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral%2Fbrka_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral%2Fbrka_1.c?ref=57675c7f92a3bd3ca8dae1faac7f2f51d40e0f9e", "patch": "@@ -18,5 +18,6 @@ test2 (svbool_t pg, svbool_t x, svbool_t y, int *any)\n   return svptest_any (pg, res);\n }\n \n-/* { dg-final { scan-assembler-times {\\tbrkas\\tp[0-9]+\\.b, p[0-9]+/m,} 2 } } */\n-/* { dg-final { scan-assembler-not {\\tbrka\\t} } } */\n+/* { dg-final { scan-assembler-times {\\tbrka\\t} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tptest\\t} 2 } } */\n+/* { dg-final { scan-assembler-not {\\tbrkas\\t} } } */"}, {"sha": "7f1c75837de913d6439e5766975c1d3dddeb11f2", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/general/brkb_1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57675c7f92a3bd3ca8dae1faac7f2f51d40e0f9e/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral%2Fbrkb_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57675c7f92a3bd3ca8dae1faac7f2f51d40e0f9e/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral%2Fbrkb_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral%2Fbrkb_1.c?ref=57675c7f92a3bd3ca8dae1faac7f2f51d40e0f9e", "patch": "@@ -18,5 +18,6 @@ test2 (svbool_t pg, svbool_t x, svbool_t y, int *any)\n   return svptest_any (pg, res);\n }\n \n-/* { dg-final { scan-assembler-times {\\tbrkbs\\tp[0-9]+\\.b, p[0-9]+/m,} 2 } } */\n-/* { dg-final { scan-assembler-not {\\tbrkb\\t} } } */\n+/* { dg-final { scan-assembler-times {\\tbrkb\\t} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tptest\\t} 2 } } */\n+/* { dg-final { scan-assembler-not {\\tbrkbs\\t} } } */"}]}