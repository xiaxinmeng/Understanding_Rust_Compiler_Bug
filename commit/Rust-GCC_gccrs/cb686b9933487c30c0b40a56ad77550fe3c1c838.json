{"sha": "cb686b9933487c30c0b40a56ad77550fe3c1c838", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I2ODZiOTkzMzQ4N2MzMGMwYjQwYTU2YWQ3NzU1MGZlM2MxYzgzOA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2012-06-30T11:42:52Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2012-06-30T11:42:52Z"}, "message": "coverage.c (bbg_file_stamp): New.\n\n\t* coverage.c (bbg_file_stamp): New.\n\t(read_counts_file): Merge incoming stamp with bbg_file_stamp.\n\t(build_info): Write bbg_file_stamp.\n\t(coverage_init): Initialize bbg_file_stamp.  Read counts file\n\tbefore writing graph header.\n\t(coverage_finish): Don't unlink the data file if we can generate a\n\tunique file stamp.\n\t* tree.h (crc32_unsigned): Declare.\n\t* tree.c (crc32_unsigned_bits): New, broken out of ...\n\t(crc32_byte): ... here.  Use it.\n\t(crc32_unsigned): New.\n\nFrom-SVN: r189095", "tree": {"sha": "a70e5fccd55bbaf8e0965e83fa6b62299d11c5f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a70e5fccd55bbaf8e0965e83fa6b62299d11c5f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb686b9933487c30c0b40a56ad77550fe3c1c838", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb686b9933487c30c0b40a56ad77550fe3c1c838", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb686b9933487c30c0b40a56ad77550fe3c1c838", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb686b9933487c30c0b40a56ad77550fe3c1c838/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1ec205bf200fa9e34f7cff4082eb73ac62f2248e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ec205bf200fa9e34f7cff4082eb73ac62f2248e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ec205bf200fa9e34f7cff4082eb73ac62f2248e"}], "stats": {"total": 82, "additions": 59, "deletions": 23}, "files": [{"sha": "cb3dc027701b6ab500966c539203f0a1caa3703a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb686b9933487c30c0b40a56ad77550fe3c1c838/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb686b9933487c30c0b40a56ad77550fe3c1c838/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb686b9933487c30c0b40a56ad77550fe3c1c838", "patch": "@@ -1,3 +1,17 @@\n+2012-06-30  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* coverage.c (bbg_file_stamp): New.\n+\t(read_counts_file): Merge incoming stamp with bbg_file_stamp.\n+\t(build_info): Write bbg_file_stamp.\n+\t(coverage_init): Initialize bbg_file_stamp.  Read counts file\n+\tbefore writing graph header.\n+\t(coverage_finish): Don't unlink the data file if we can generate a\n+\tunique file stamp.\n+\t* tree.h (crc32_unsigned): Declare.\n+\t* tree.c (crc32_unsigned_bits): New, broken out of ...\n+\t(crc32_byte): ... here.  Use it.\n+\t(crc32_unsigned): New.\n+\n 2012-06-29   Cary Coutant  <ccoutant@google.com>\n \n \t* dwarf2out.c (add_pubname_string): Don't check for want_pubnames."}, {"sha": "8978afc0b82bd2fa22e1fa224afce30fd2f9df4d", "filename": "gcc/coverage.c", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb686b9933487c30c0b40a56ad77550fe3c1c838/gcc%2Fcoverage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb686b9933487c30c0b40a56ad77550fe3c1c838/gcc%2Fcoverage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoverage.c?ref=cb686b9933487c30c0b40a56ad77550fe3c1c838", "patch": "@@ -101,6 +101,9 @@ static GTY(()) tree gcov_fn_info_ptr_type;\n    we're not writing to the notes file.  */\n static char *bbg_file_name;\n \n+/* File stamp for graph file.  */\n+static unsigned bbg_file_stamp;\n+\n /* Name of the count data file.  */\n static char *da_file_name;\n \n@@ -205,8 +208,9 @@ read_counts_file (void)\n       return;\n     }\n \n-  /* Read and discard the stamp.  */\n-  gcov_read_unsigned ();\n+  /* Read the stamp, used for creating a generation count.  */\n+  tag = gcov_read_unsigned ();\n+  bbg_file_stamp = crc32_unsigned (bbg_file_stamp, tag);\n \n   counts_hash = htab_create (10,\n \t\t\t     htab_counts_entry_hash, htab_counts_entry_eq,\n@@ -905,7 +909,7 @@ build_info (tree info_type, tree fn_ary)\n   /* stamp */\n   CONSTRUCTOR_APPEND_ELT (v1, info_fields,\n \t\t\t  build_int_cstu (TREE_TYPE (info_fields),\n-\t\t\t\t\t  local_tick));\n+\t\t\t\t\t  bbg_file_stamp));\n   info_fields = DECL_CHAIN (info_fields);\n \n   /* Filename */\n@@ -1101,6 +1105,11 @@ coverage_init (const char *filename)\n   memcpy (da_file_name + prefix_len, filename, len);\n   strcpy (da_file_name + prefix_len + len, GCOV_DATA_SUFFIX);\n \n+  bbg_file_stamp = local_tick;\n+  \n+  if (flag_branch_probabilities)\n+    read_counts_file ();\n+\n   /* Name of bbg file.  */\n   if (flag_test_coverage && !flag_compare_debug)\n     {\n@@ -1117,12 +1126,9 @@ coverage_init (const char *filename)\n \t{\n \t  gcov_write_unsigned (GCOV_NOTE_MAGIC);\n \t  gcov_write_unsigned (GCOV_VERSION);\n-\t  gcov_write_unsigned (local_tick);\n+\t  gcov_write_unsigned (bbg_file_stamp);\n \t}\n     }\n-\n-  if (flag_branch_probabilities)\n-    read_counts_file ();\n }\n \n /* Performs file-level cleanup.  Close graph file, generate coverage\n@@ -1133,10 +1139,11 @@ coverage_finish (void)\n {\n   if (bbg_file_name && gcov_close ())\n     unlink (bbg_file_name);\n-  \n-  if (!local_tick || local_tick == (unsigned)-1)\n-    /* Only remove the da file, if we cannot stamp it.  If we can\n-       stamp it, libgcov will DTRT.  */\n+\n+  if (!flag_branch_probabilities && flag_test_coverage\n+      && (!local_tick || local_tick == (unsigned)-1))\n+    /* Only remove the da file, if we're emitting coverage code and\n+       cannot uniquely stamp it.  If we can stamp it, libgcov will DTRT.  */\n     unlink (da_file_name);\n \n   if (coverage_obj_init ())"}, {"sha": "5aa5399d7d1450b3c78a2f4c53084d8e5e82d176", "filename": "gcc/tree.c", "status": "modified", "additions": 26, "deletions": 12, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb686b9933487c30c0b40a56ad77550fe3c1c838/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb686b9933487c30c0b40a56ad77550fe3c1c838/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=cb686b9933487c30c0b40a56ad77550fe3c1c838", "patch": "@@ -8738,23 +8738,37 @@ dump_tree_statistics (void)\n \n /* Generate a crc32 of a byte.  */\n \n-unsigned\n-crc32_byte (unsigned chksum, char byte)\n+static unsigned\n+crc32_unsigned_bits (unsigned chksum, unsigned value, unsigned bits)\n {\n-  unsigned value = (unsigned) byte << 24;\n-      unsigned ix;\n-\n-      for (ix = 8; ix--; value <<= 1)\n-  \t{\n-  \t  unsigned feedback;\n+  unsigned ix;\n \n-  \t  feedback = (value ^ chksum) & 0x80000000 ? 0x04c11db7 : 0;\n- \t  chksum <<= 1;\n- \t  chksum ^= feedback;\n-  \t}\n+  for (ix = bits; ix--; value <<= 1)\n+    {\n+      unsigned feedback;\n+      \n+      feedback = (value ^ chksum) & 0x80000000 ? 0x04c11db7 : 0;\n+      chksum <<= 1;\n+      chksum ^= feedback;\n+    }\n   return chksum;\n }\n \n+/* Generate a crc32 of a 32-bit unsigned.  */\n+\n+unsigned\n+crc32_unsigned (unsigned chksum, unsigned value)\n+{\n+  return crc32_unsigned_bits (chksum, value, 32);\n+}\n+\n+/* Generate a crc32 of a byte.  */\n+\n+unsigned\n+crc32_byte (unsigned chksum, char byte)\n+{\n+  return crc32_unsigned_bits (chksum, (unsigned) byte << 24, 8);\n+}\n \n /* Generate a crc32 of a string.  */\n "}, {"sha": "43d5fdc69c60cf42f95afe5e8ec8156cb9e85a5c", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb686b9933487c30c0b40a56ad77550fe3c1c838/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb686b9933487c30c0b40a56ad77550fe3c1c838/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=cb686b9933487c30c0b40a56ad77550fe3c1c838", "patch": "@@ -5170,6 +5170,7 @@ inlined_function_outer_scope_p (const_tree block)\n /* In tree.c */\n extern unsigned crc32_string (unsigned, const char *);\n extern unsigned crc32_byte (unsigned, char);\n+extern unsigned crc32_unsigned (unsigned, unsigned);\n extern void clean_symbol_name (char *);\n extern tree get_file_function_name (const char *);\n extern tree get_callee_fndecl (const_tree);"}]}