{"sha": "87c20fe7623b31c72d31b015254fd7f7964f2ead", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdjMjBmZTc2MjNiMzFjNzJkMzFiMDE1MjU0ZmQ3Zjc5NjRmMmVhZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-11-03T10:34:34Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-11-03T10:34:34Z"}, "message": "re PR tree-optimization/46165 (ICE: verify_flow_info failed when casting-out attribute noreturn with -fno-tree-ccp -fno-tree-copy-prop -fno-tree-dce)\n\n\tPR tree-optimization/46165\n\t* tree-ssa-pre.c (eliminate): Return TODO_cleanup_cfg if changing\n\ta normal call into noreturn call.\n\n\t* gcc.dg/pr46165.c: New test.\n\nFrom-SVN: r166236", "tree": {"sha": "ae4c8e41d3e76010b164935427be7eb77a66ab6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae4c8e41d3e76010b164935427be7eb77a66ab6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87c20fe7623b31c72d31b015254fd7f7964f2ead", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87c20fe7623b31c72d31b015254fd7f7964f2ead", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87c20fe7623b31c72d31b015254fd7f7964f2ead", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87c20fe7623b31c72d31b015254fd7f7964f2ead/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca818bd905c80e424dbc4074bf6f25c6e5ccd897", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca818bd905c80e424dbc4074bf6f25c6e5ccd897", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca818bd905c80e424dbc4074bf6f25c6e5ccd897"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "0454a9fee826e7ce86850ae65c78a4bd8f2d77a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87c20fe7623b31c72d31b015254fd7f7964f2ead/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87c20fe7623b31c72d31b015254fd7f7964f2ead/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=87c20fe7623b31c72d31b015254fd7f7964f2ead", "patch": "@@ -1,3 +1,9 @@\n+2010-11-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/46165\n+\t* tree-ssa-pre.c (eliminate): Return TODO_cleanup_cfg if changing\n+\ta normal call into noreturn call.\n+\n 2010-11-03  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/46251"}, {"sha": "d97167acda6b4efbdecf72a3080b85a2ebc38c7b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87c20fe7623b31c72d31b015254fd7f7964f2ead/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87c20fe7623b31c72d31b015254fd7f7964f2ead/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=87c20fe7623b31c72d31b015254fd7f7964f2ead", "patch": "@@ -1,3 +1,8 @@\n+2010-11-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/46165\n+\t* gcc.dg/pr46165.c: New test.\n+\n 2010-11-03  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/46251"}, {"sha": "a13300e7ec92a7e632e352934d658d8431ecdf63", "filename": "gcc/testsuite/gcc.dg/pr46165.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87c20fe7623b31c72d31b015254fd7f7964f2ead/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46165.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87c20fe7623b31c72d31b015254fd7f7964f2ead/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46165.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46165.c?ref=87c20fe7623b31c72d31b015254fd7f7964f2ead", "patch": "@@ -0,0 +1,11 @@\n+/* PR tree-optimization/46165 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fno-tree-ccp -fno-tree-copy-prop -fno-tree-dce\" } */\n+\n+extern void foo (void) __attribute__((noreturn));\n+void\n+g (void)\n+{\n+  void (*f) (void) = foo;\n+  f ();\n+}"}, {"sha": "fda94375b144a013d667d6d173bcb891a96f1e22", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87c20fe7623b31c72d31b015254fd7f7964f2ead/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87c20fe7623b31c72d31b015254fd7f7964f2ead/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=87c20fe7623b31c72d31b015254fd7f7964f2ead", "patch": "@@ -4364,6 +4364,7 @@ eliminate (void)\n \t\t{\n \t\t  bool can_make_abnormal_goto\n \t\t    = stmt_can_make_abnormal_goto (stmt);\n+\t\t  bool was_noreturn = gimple_call_noreturn_p (stmt);\n \n \t\t  if (dump_file && (dump_flags & TDF_DETAILS))\n \t\t    {\n@@ -4376,6 +4377,11 @@ eliminate (void)\n \t\t  gimple_call_set_fn (stmt, fn);\n \t\t  update_stmt (stmt);\n \n+\t\t  /* When changing a call into a noreturn call, cfg cleanup\n+\t\t     is needed to fix up the noreturn call.  */\n+\t\t  if (!was_noreturn && gimple_call_noreturn_p (stmt))\n+\t\t    todo |= TODO_cleanup_cfg;\n+\n \t\t  /* If we removed EH side-effects from the statement, clean\n \t\t     its EH information.  */\n \t\t  if (maybe_clean_or_replace_eh_stmt (stmt, stmt))"}]}