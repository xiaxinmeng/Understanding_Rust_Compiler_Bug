{"sha": "fb0b2546c2ede042b47189a589e69d64a57a359a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmIwYjI1NDZjMmVkZTA0MmI0NzE4OWE1ODllNjlkNjRhNTdhMzU5YQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@redhat.com", "date": "2000-11-22T18:07:05Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2000-11-22T18:07:05Z"}, "message": "Paper over problem with -frename-registers; Provide help for options\n\nFrom-SVN: r37661", "tree": {"sha": "5cbbad3124a1b867c39e27db3b0fbca8782a5d3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5cbbad3124a1b867c39e27db3b0fbca8782a5d3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb0b2546c2ede042b47189a589e69d64a57a359a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb0b2546c2ede042b47189a589e69d64a57a359a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb0b2546c2ede042b47189a589e69d64a57a359a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb0b2546c2ede042b47189a589e69d64a57a359a/comments", "author": null, "committer": null, "parents": [{"sha": "5789a524a6f2b22957e266c35ee1602d071fba3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5789a524a6f2b22957e266c35ee1602d071fba3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5789a524a6f2b22957e266c35ee1602d071fba3d"}], "stats": {"total": 112, "additions": 76, "deletions": 36}, "files": [{"sha": "5b54a90d971c25351e005f947377c2fd71a12be1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb0b2546c2ede042b47189a589e69d64a57a359a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb0b2546c2ede042b47189a589e69d64a57a359a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb0b2546c2ede042b47189a589e69d64a57a359a", "patch": "@@ -1,3 +1,10 @@\n+2000-11-22  Michael Meissner  <meissner@redhat.com>\n+\n+\t* d30v.h (TARGET_SWITCHES): Add documentation strings.\n+\t(TARGET_OPTIONS): Ditto.\n+\t(OPTIMIZATION_OPTIONS): Temporarily turn off -frename-registers if\n+\t-O3.\n+\t\n Wed Nov 22 06:40:56 2000  Jeffrey A Law  (law@cygnus.com)\n \n \t* pa.c (hppa_encode_label): Account for addition of encoding"}, {"sha": "ef9ecd93dc5b8dd17ab00812d5ccd4c4369085b0", "filename": "gcc/config/d30v/d30v.h", "status": "modified", "additions": 69, "deletions": 36, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb0b2546c2ede042b47189a589e69d64a57a359a/gcc%2Fconfig%2Fd30v%2Fd30v.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb0b2546c2ede042b47189a589e69d64a57a359a/gcc%2Fconfig%2Fd30v%2Fd30v.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fd30v%2Fd30v.h?ref=fb0b2546c2ede042b47189a589e69d64a57a359a", "patch": "@@ -419,61 +419,88 @@ extern int target_flags;\n    `target_flags'.  Its definition is an initializer with a subgrouping for\n    each command option.\n \n-   Each subgrouping contains a string constant, that defines the option name,\n-   and a number, which contains the bits to set in `target_flags'.  A negative\n-   number says to clear bits instead; the negative of the number is which bits\n-   to clear.  The actual option name is made by appending `-m' to the specified\n-   name.\n+   Each subgrouping contains a string constant, that defines the option name, a\n+   number, which contains the bits to set in `target_flags', and a second\n+   string which is the description displayed by `--help'.  If the number is\n+   negative then the bits specified by the number are cleared instead of being\n+   set.  If the description string is present but empty, then no help\n+   information will be displayed for that option, but it will not count as an\n+   undocumented option.  The actual option name is made by appending `-m' to\n+   the specified name.\n \n    One of the subgroupings should have a null string.  The number in this\n-   grouping is the default value for `target_flags'.  Any target options act\n+   grouping is the default value for target_flags.  Any target options act\n    starting with that value.\n \n-   Here is an example which defines `-m68000' and `-m68020' with opposite\n-   meanings, and picks the latter as the default:\n+   Here is an example which defines -m68000 and -m68020 with opposite meanings,\n+   and picks the latter as the default:\n \n-        #define TARGET_SWITCHES \\\n-          { { \"68020\", 1},      \\\n-            { \"68000\", -1},     \\\n-            { \"\", 1}}  */\n+  #define TARGET_SWITCHES \\\n+    { { \"68020\", TARGET_MASK_68020, \"\" },      \\\n+      { \"68000\", -TARGET_MASK_68020, \"Compile for the 68000\" }, \\\n+      { \"\", TARGET_MASK_68020, \"\" }}  */\n \n #define TARGET_SWITCHES\t\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n-  { \"cond-move\",\t-MASK_NO_COND_MOVE },\t\t\t\t\\\n-  { \"no-cond-move\",\t MASK_NO_COND_MOVE },\t\t\t\t\\\n-  { \"debug-arg\",\t MASK_DEBUG_ARG },\t\t\t\t\\\n-  { \"debug-stack\",\t MASK_DEBUG_STACK }, \t\t\t\t\\\n-  { \"debug-addr\",\t MASK_DEBUG_ADDR },\t\t\t\t\\\n-  { \"asm-optimize\",\t 0 },\t\t\t\t\t\t\\\n-  { \"no-asm-optimize\",\t 0 },\t\t\t\t\t\t\\\n-  { \"extmem\",\t\t 0 },\t\t\t\t\t\t\\\n-  { \"extmemory\",\t 0 },\t\t\t\t\t\t\\\n-  { \"onchip\",\t\t 0 },\t\t\t\t\t\t\\\n-  { \"\",\t\t\t TARGET_DEFAULT },\t\t\t\t\\\n+  { \"cond-move\",\t-MASK_NO_COND_MOVE,\t\t\t\t\\\n+      N_(\"Enable use of conditional move instructions\") },\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  { \"no-cond-move\",\tMASK_NO_COND_MOVE,\t\t\t\t\\\n+      N_(\"Disable use of conditional move instructions\") },\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  { \"debug-arg\",\t MASK_DEBUG_ARG,\t\t\t\t\\\n+      N_(\"Debug argument support in compiler\") },\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  { \"debug-stack\",\t MASK_DEBUG_STACK,\t\t\t\t\\\n+      N_(\"Debug stack support in compiler\") },\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  { \"debug-addr\",\t MASK_DEBUG_ADDR,\t\t\t\t\\\n+      N_(\"Debug memory address support in compiler\") },\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  { \"asm-optimize\",\t 0,\t\t\t\t\t\t\\\n+      N_(\"Make adjacent short instructions parallel if possible.\") },\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  { \"no-asm-optimize\",\t 0,\t\t\t\t\t\t\\\n+      N_(\"Do not make adjacent short instructions parallel.\") },\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  { \"extmem\",\t\t 0,\t\t\t\t\t\t\\\n+      N_(\"Link programs/data to be in external memory by default\") },\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  { \"extmemory\",\t 0,\t\t\t\t\t\t\\\n+      N_(\"Link programs/data to be in external memory by default\") },\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  { \"onchip\",\t\t 0,\t\t\t\t\t\t\\\n+      N_(\"Link programs/data to be in onchip memory by default\") },\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  { \"\",\t\t\t TARGET_DEFAULT, \"\" },\t\t\t\t\\\n }\n \n /* This macro is similar to `TARGET_SWITCHES' but defines names of command\n    options that have values.  Its definition is an initializer with a\n    subgrouping for each command option.\n \n    Each subgrouping contains a string constant, that defines the fixed part of\n-   the option name, and the address of a variable.  The variable, type `char\n-   *', is set to the variable part of the given option if the fixed part\n-   matches.  The actual option name is made by appending `-m' to the specified\n-   name.\n+   the option name, the address of a variable, and a description string.  The\n+   variable, type `char *', is set to the variable part of the given option if\n+   the fixed part matches.  The actual option name is made by appending `-m' to\n+   the specified name.\n \n-   Here is an example which defines `-mshort-data-NUMBER'.  If the given option\n-   is `-mshort-data-512', the variable `m88k_short_data' will be set to the\n-   string `\"512\"'.\n+   Here is an example which defines `-mshort-data-<number>'.  If the given\n+   option is `-mshort-data-512', the variable `m88k_short_data' will be set to\n+   the string \"512\".\n \n-        extern char *m88k_short_data;\n-        #define TARGET_OPTIONS \\\n-         { { \"short-data-\", &m88k_short_data } }  */\n+   extern char *m88k_short_data;\n+   #define TARGET_OPTIONS \\\n+     { { \"short-data-\", &m88k_short_data, \\\n+\t \"Specify the size of the short data section\" } } */\n \n #define TARGET_OPTIONS\t\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n-   {\"branch-cost=\",  &d30v_branch_cost_string},\t\t\t\t\\\n-   {\"cond-exec=\",    &d30v_cond_exec_string},\t\t\t\t\\\n+  {\"branch-cost=\",  &d30v_branch_cost_string,\t\t\t\t\\\n+     N_(\"Change the branch costs within the compiler\") },\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  {\"cond-exec=\",    &d30v_cond_exec_string,\t\t\t\t\\\n+     N_(\"Change the threshold for conversion to conditional execution\") }, \\\n }\n \n /* This macro is a C statement to print on `stderr' a string describing the\n@@ -517,7 +544,13 @@ extern int target_flags;\n \n    *Do not examine `write_symbols' in this macro!* The debugging options are\n    *not supposed to alter the generated code.  */\n-/* #define OPTIMIZATION_OPTIONS(LEVEL,SIZE) */\n+\n+/* -frename-registers seems to abort on d30v, turn off until fixed.  */\n+#define OPTIMIZATION_OPTIONS(LEVEL,SIZE) \t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\t\\\n+  if (LEVEL >= 3)\t\t\t\t\t\t\t\\\n+    flag_rename_registers = 0;\t\t\t\t\t\t\\\n+} while (0)\n \n /* Define this macro if debugging can be performed even without a frame\n    pointer.  If this macro is defined, GNU CC will turn on the"}]}