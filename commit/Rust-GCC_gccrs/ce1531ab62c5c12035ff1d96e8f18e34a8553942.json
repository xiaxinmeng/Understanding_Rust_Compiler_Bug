{"sha": "ce1531ab62c5c12035ff1d96e8f18e34a8553942", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2UxNTMxYWI2MmM1YzEyMDM1ZmYxZDk2ZThmMThlMzRhODU1Mzk0Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "1999-12-28T09:33:11Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "1999-12-28T09:33:11Z"}, "message": "sparc.md (cmp_zero_qi, [...]): New patterns.\n\n\t* config/sparc/sparc.md (cmp_zero_qi,\n\tcmp_zero_extendqisi2_andcc_set, cmp_zero_qi_sp64,\n\tcmp_zero_extendqidi2_andcc_set): New patterns.\n\nFrom-SVN: r31108", "tree": {"sha": "c53b9d3cc4fa748dbc4ebb2b32cd818eead7f057", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c53b9d3cc4fa748dbc4ebb2b32cd818eead7f057"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce1531ab62c5c12035ff1d96e8f18e34a8553942", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce1531ab62c5c12035ff1d96e8f18e34a8553942", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce1531ab62c5c12035ff1d96e8f18e34a8553942", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce1531ab62c5c12035ff1d96e8f18e34a8553942/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6ffaeb140000c5b7a24f441b588065efd56910fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ffaeb140000c5b7a24f441b588065efd56910fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ffaeb140000c5b7a24f441b588065efd56910fd"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "c899c7e6385f38c95fd6bc19094bfc2cad6995ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1531ab62c5c12035ff1d96e8f18e34a8553942/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1531ab62c5c12035ff1d96e8f18e34a8553942/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce1531ab62c5c12035ff1d96e8f18e34a8553942", "patch": "@@ -1,3 +1,9 @@\n+1999-12-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/sparc/sparc.md (cmp_zero_qi,\n+\tcmp_zero_extendqisi2_andcc_set, cmp_zero_qi_sp64,\n+\tcmp_zero_extendqidi2_andcc_set): New patterns.\n+\n 1999-12-28  Manfred Hollstein  <mhollstein@cygnus.com>\n \n \t* m68k/t-mot3300-gald (CROSS_LIBGCC1): Define to libgcc1-asm.a."}, {"sha": "f09d083dc12e6606e9558118019703eb84cd8761", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1531ab62c5c12035ff1d96e8f18e34a8553942/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1531ab62c5c12035ff1d96e8f18e34a8553942/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=ce1531ab62c5c12035ff1d96e8f18e34a8553942", "patch": "@@ -4489,6 +4489,15 @@\n   [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"1\")])\n \n+(define_insn \"*cmp_zero_qi\"\n+  [(set (reg:CC 100)\n+\t(compare:CC (match_operand:QI 0 \"register_operand\" \"r\")\n+\t\t    (const_int 0)))]\n+  \"! TARGET_LIVE_G0\"\n+  \"andcc\\\\t%0, 0xff, %%g0\"\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"1\")])\n+\n (define_insn \"*cmp_zero_extendqisi2_set\"\n   [(set (reg:CC 100)\n \t(compare:CC (zero_extend:SI (match_operand:QI 1 \"register_operand\" \"r\"))\n@@ -4500,6 +4509,18 @@\n   [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"1\")])\n \n+(define_insn \"*cmp_zero_extendqisi2_andcc_set\"\n+  [(set (reg:CC 100)\n+\t(compare:CC (and:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t\t    (const_int 255))\n+\t\t    (const_int 0)))\n+   (set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(zero_extend:SI (subreg:QI (match_dup 1) 0)))]\n+  \"\"\n+  \"andcc\\\\t%1, 0xff, %0\"\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"1\")])\n+\n (define_insn \"*cmp_zero_extendqidi2\"\n   [(set (reg:CCX 100)\n \t(compare:CCX (zero_extend:DI (match_operand:QI 0 \"register_operand\" \"r\"))\n@@ -4509,6 +4530,15 @@\n   [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"1\")])\n \n+(define_insn \"*cmp_zero_qi_sp64\"\n+  [(set (reg:CCX 100)\n+\t(compare:CCX (match_operand:QI 0 \"register_operand\" \"r\")\n+\t\t     (const_int 0)))]\n+  \"TARGET_ARCH64\"\n+  \"andcc\\\\t%0, 0xff, %%g0\"\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"1\")])\n+\n (define_insn \"*cmp_zero_extendqidi2_set\"\n   [(set (reg:CCX 100)\n \t(compare:CCX (zero_extend:DI (match_operand:QI 1 \"register_operand\" \"r\"))\n@@ -4520,6 +4550,18 @@\n   [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"1\")])\n \n+(define_insn \"*cmp_zero_extendqidi2_andcc_set\"\n+  [(set (reg:CCX 100)\n+\t(compare:CCX (and:DI (match_operand:DI 1 \"register_operand\" \"r\")\n+\t\t\t     (const_int 255))\n+\t\t     (const_int 0)))\n+   (set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(zero_extend:DI (subreg:QI (match_dup 1) 0)))]\n+  \"TARGET_ARCH64\"\n+  \"andcc\\\\t%1, 0xff, %0\"\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"1\")])\n+\n ;; Similarly, handle {SI,DI}->QI mode truncation followed by a compare.\n \n (define_insn \"*cmp_siqi_trunc\""}]}