{"sha": "7d12830c32ccb918b5bb6d682e9d6e9b59247def", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2QxMjgzMGMzMmNjYjkxOGI1YmI2ZDY4MmU5ZDZlOWI1OTI0N2RlZg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-08-31T00:30:56Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-08-31T00:30:56Z"}, "message": "Makefile.in (LIBS, LIBDEPS): Link with & depend on libiberty.a.\n\n\t* Makefile.in (LIBS, LIBDEPS): Link with & depend on libiberty.a.\n\tRemove hacks for stuff which now comes from libiberty.\n\nFrom-SVN: r28994", "tree": {"sha": "292a1d19139b0710f8e763c409cdf7680bd91757", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/292a1d19139b0710f8e763c409cdf7680bd91757"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d12830c32ccb918b5bb6d682e9d6e9b59247def", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d12830c32ccb918b5bb6d682e9d6e9b59247def", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d12830c32ccb918b5bb6d682e9d6e9b59247def", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d12830c32ccb918b5bb6d682e9d6e9b59247def/comments", "author": null, "committer": null, "parents": [{"sha": "5c45a8ac5ff0e34eac7862114c318f42b4b97608", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c45a8ac5ff0e34eac7862114c318f42b4b97608", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c45a8ac5ff0e34eac7862114c318f42b4b97608"}], "stats": {"total": 102, "additions": 37, "deletions": 65}, "files": [{"sha": "76471e1e83aeb51db844fa6c9c394ecf5fc3f754", "filename": "gcc/ch/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d12830c32ccb918b5bb6d682e9d6e9b59247def/gcc%2Fch%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d12830c32ccb918b5bb6d682e9d6e9b59247def/gcc%2Fch%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2FChangeLog?ref=7d12830c32ccb918b5bb6d682e9d6e9b59247def", "patch": "@@ -1,3 +1,8 @@\n+1999-08-30  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (LIBS, LIBDEPS): Link with & depend on libiberty.a.\n+\tRemove hacks for stuff which now comes from libiberty.\n+\n 1999-08-29  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* lang.c (chill_print_error_function): Constify a char*."}, {"sha": "b42532a7a0c1ff7bf46cba22f3b252bdfda8fb16", "filename": "gcc/ch/Makefile.in", "status": "modified", "additions": 13, "deletions": 31, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d12830c32ccb918b5bb6d682e9d6e9b59247def/gcc%2Fch%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d12830c32ccb918b5bb6d682e9d6e9b59247def/gcc%2Fch%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2FMakefile.in?ref=7d12830c32ccb918b5bb6d682e9d6e9b59247def", "patch": "@@ -38,8 +38,6 @@\n # Variables that exist for you to override.\n # See below for how to change them for certain systems.\n \n-ALLOCA =\n-\n # Various ways of specifying flags for compilations:  \n # CFLAGS is for the user to override to, e.g., do a bootstrap with -O2.\n # BOOT_CFLAGS is the value of CFLAGS to pass\n@@ -67,10 +65,6 @@ TEXI2DVI = texi2dvi\n # to compile all the gen* files first by hand to avoid erroneous results.\n P =\n \n-# This is used in the definition of SUBDIR_USE_ALLOCA.\n-# ??? Perhaps it would be better if it just looked for *gcc*.\n-OLDCC = cc\n-\n # This is used instead of ALL_CFLAGS when compiling with GCC_FOR_TARGET.\n # It omits XCFLAGS, and specifies -B./.\n # It also specifies -B$(tooldir)/ to find as and ld for a cross compiler.\n@@ -102,10 +96,6 @@ texidir = $(srcdir)/../../texinfo\n # Additional system libraries to link with.\n CLIB=\n \n-# Change this to a null string if obstacks are installed in the\n-# system library.\n-OBSTACK=obstack.o\n-\n # Choose the real default target.\n ALL=all\n \n@@ -138,17 +128,13 @@ ALL_CFLAGS = $(INTERNAL_CFLAGS) $(X_CFLAGS) $(T_CFLAGS) $(CFLAGS) $(XCFLAGS)\n # Likewise.\n ALL_CPPFLAGS = $(CPPFLAGS) $(X_CPPFLAGS) $(T_CPPFLAGS)\n \n-# CYGNUS LOCAL: SUBDIR_USE_ALLOCA is different from FSF.\n-# Even if ALLOCA is set, don't use it if compiling with GCC.\n-\n-SUBDIR_OBSTACK = `if [ x$(OBSTACK) != x ]; then echo ../$(OBSTACK); else true; fi`\n-#SUBDIR_USE_ALLOCA = `case \"${CC}\" in \"${OLDCC}\") if [ x$(ALLOCA) != x ]; then echo ../$(ALLOCA); else true; fi ;; esac`\n-SUBDIR_USE_ALLOCA = `if [ x$(ALLOCA) != x ]; then echo ../$(ALLOCA); else true; fi`\n-SUBDIR_MALLOC = `if [ x$(MALLOC) != x ]; then echo ../$(MALLOC); else true; fi`\n+# This is where we get libiberty.a from.\n+LIBIBERTY = ../../libiberty/libiberty.a\n \n # How to link with both our special library facilities\n # and the system's installed libraries.\n-LIBS = $(SUBDIR_OBSTACK) $(SUBDIR_USE_ALLOCA) $(SUBDIR_MALLOC) $(CLIB)\n+LIBS = $(LIBIBERTY) $(CLIB)\n+LIBDEPS = $(LIBIBERTY)\n \n # Specify the directories to be searched for header files.\n # Both . and srcdir are used, in that order,\n@@ -270,10 +256,10 @@ $(srcdir)/hash.h:\n \t  gperf.tmp > $(srcdir)/hash.h\n \t$(RM) gperf.tmp gperf.tmp2 sed.tmp\n \n-actions.o : actions.c $(CONFIG_H) $(CHILL_TREE_H) actions.h $(RTL_H) \\\n-\tlex.h $(srcdir)/../flags.h $(srcdir)/../../include/obstack.h \\\n-\t$(srcdir)/../input.h $(srcdir)/../expr.h ../insn-codes.h \\\n-\t$(srcdir)/../system.h $(srcdir)/../toplev.h\n+actions.o : actions.c $(CONFIG_H) $(CHILL_TREE_H) actions.h $(RTL_H)\t\\\n+\tlex.h $(srcdir)/../flags.h $(srcdir)/../input.h\t\t\t\\\n+\t$(srcdir)/../expr.h ../insn-codes.h $(srcdir)/../system.h\t\\\n+\t$(srcdir)/../toplev.h\n convert.o : convert.c $(CONFIG_H) $(CHILL_TREE_H) $(srcdir)/../flags.h \\\n \t$(srcdir)/../tree.h $(srcdir)/../system.h $(srcdir)/../toplev.h\n decl.o : decl.c $(CONFIG_H) $(CHILL_TREE_H) $(srcdir)/../flags.h lex.h \\\n@@ -291,24 +277,20 @@ inout.o : inout.c $(CONFIG_H) $(CHILL_TREE_H) $(srcdir)/../flags.h \\\n lang.o : lang.c $(CONFIG_H) $(CHILL_TREE_H) $(srcdir)/../input.h lex.h \\\n \t$(srcdir)/../system.h $(srcdir)/../toplev.h\n lex.o : lex.c $(CONFIG_H) $(CHILL_TREE_H) $(RTL_H) $(srcdir)/../flags.h \\\n-\t$(srcdir)/../input.h $(srcdir)/parse.h $(srcdir)/../system.h \\\n-\t$(srcdir)/../toplev.h $(srcdir)/../../include/obstack.h lex.h \\\n-\t$(srcdir)/../dwarfout.h hash.h\n+\t$(srcdir)/../input.h $(srcdir)/parse.h $(srcdir)/../system.h\t\\\n+\t$(srcdir)/../toplev.h lex.h $(srcdir)/../dwarfout.h hash.h\n loop.o : loop.c $(CONFIG_H) $(RTL_H) $(CHILL_TREE_H) lex.h \\\n \t$(srcdir)/../flags.h $(srcdir)/../input.h \\\n-\t$(srcdir)/../../include/obstack.h $(srcdir)/../tree.h \\\n-\t$(srcdir)/../system.h $(srcdir)/../toplev.h\n+\t$(srcdir)/../tree.h $(srcdir)/../system.h $(srcdir)/../toplev.h\n parse.o : parse.c $(CONFIG_H) $(CHILL_TREE_H) parse.h \\\n \tlex.h actions.h tasking.h $(srcdir)/../system.h $(srcdir)/../toplev.h\n satisfy.o : satisfy.c $(CONFIG_H) $(CHILL_TREE_H) $(srcdir)/../tree.h \\\n \t$(srcdir)/../flags.h lex.h $(srcdir)/../system.h $(srcdir)/../toplev.h\n timing.o : timing.c $(CONFIG_H) $(CHILL_TREE_H) $(RTL_H) $(srcdir)/../flags.h \\\n-\t$(srcdir)/../input.h $(srcdir)/../../include/obstack.h lex.h \\\n-\t$(srcdir)/../system.h $(srcdir)/../toplev.h\n+\t$(srcdir)/../input.h lex.h $(srcdir)/../system.h $(srcdir)/../toplev.h\n tasking.o : tasking.c $(CONFIG_H) $(CHILL_TREE_H) $(RTL_H) \\\n \t$(srcdir)/../flags.h $(srcdir)/../input.h \\\n-\t$(srcdir)/../../include/obstack.h lex.h $(srcdir)/../system.h \\\n-\t$(srcdir)/../toplev.h\n+\tlex.h $(srcdir)/../system.h $(srcdir)/../toplev.h\n tree.o : tree.c $(CONFIG_H) $(CHILL_TREE_H) $(srcdir)/../system.h \\\n \t$(srcdir)/../toplev.h\n typeck.o : typeck.c $(CONFIG_H) $(CHILL_TREE_H) ../insn-codes.h \\"}, {"sha": "00a915a5e875c56e33246080e404999910253e4a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d12830c32ccb918b5bb6d682e9d6e9b59247def/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d12830c32ccb918b5bb6d682e9d6e9b59247def/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7d12830c32ccb918b5bb6d682e9d6e9b59247def", "patch": "@@ -1,3 +1,8 @@\n+1999-08-30  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (LIBS, LIBDEPS): Link with & depend on libiberty.a.\n+\tRemove hacks for stuff which now comes from libiberty.\n+\n 1999-08-30  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* cp-tree.h (IS_AGGR_TYPE_2): Fix typo."}, {"sha": "091898ecaebf56a846d732e6839f4633d154be91", "filename": "gcc/cp/Makefile.in", "status": "modified", "additions": 4, "deletions": 17, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d12830c32ccb918b5bb6d682e9d6e9b59247def/gcc%2Fcp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d12830c32ccb918b5bb6d682e9d6e9b59247def/gcc%2Fcp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMakefile.in?ref=7d12830c32ccb918b5bb6d682e9d6e9b59247def", "patch": "@@ -41,8 +41,6 @@ INTERFACE = 2\n # Variables that exist for you to override.\n # See below for how to change them for certain systems.\n \n-ALLOCA =\n-\n # Various ways of specifying flags for compilations:  \n # CFLAGS is for the user to override to, e.g., do a bootstrap with -O2.\n # BOOT_CFLAGS is the value of CFLAGS to pass\n@@ -74,10 +72,6 @@ TEXI2DVI = texi2dvi\n # to compile all the gen* files first by hand to avoid erroneous results.\n P =\n \n-# This is used in the definition of SUBDIR_USE_ALLOCA.\n-# ??? Perhaps it would be better if it just looked for *gcc*.\n-OLDCC = cc\n-\n # This is used instead of ALL_CFLAGS when compiling with GCC_FOR_TARGET.\n # It omits XCFLAGS, and specifies -B./.\n # It also specifies -B$(tooldir)/ to find as and ld for a cross compiler.\n@@ -112,10 +106,6 @@ top_builddir = ..\n # Internationalization library.\n INTLLIBS = @INTLLIBS@\n \n-# Change this to a null string if obstacks are installed in the\n-# system library.\n-OBSTACK=obstack.o\n-\n # Choose the real default target.\n ALL=all\n \n@@ -152,16 +142,13 @@ ALL_CFLAGS = $(INTERNAL_CFLAGS) $(X_CFLAGS) $(T_CFLAGS) $(CFLAGS) $(XCFLAGS) -W\n # Likewise.\n ALL_CPPFLAGS = $(CPPFLAGS) $(X_CPPFLAGS) $(T_CPPFLAGS)\n \n-# Even if ALLOCA is set, don't use it if compiling with GCC.\n-\n-SUBDIR_OBSTACK = `if [ x$(OBSTACK) != x ]; then echo ../$(OBSTACK); else true; fi`\n-SUBDIR_USE_ALLOCA = `case \"${CC}\" in \"${OLDCC}\") if [ x$(ALLOCA) != x ]; then echo ../$(ALLOCA); else true; fi ;; esac`\n-SUBDIR_MALLOC = `if [ x$(MALLOC) != x ]; then echo ../$(MALLOC); else true; fi`\n+# This is where we get libiberty.a from.\n+LIBIBERTY = ../../libiberty/libiberty.a\n \n # How to link with both our special library facilities\n # and the system's installed libraries.\n-LIBS = $(SUBDIR_OBSTACK) $(SUBDIR_USE_ALLOCA) $(SUBDIR_MALLOC) \\\n-  $(INTLLIBS) $(CLIB)\n+LIBS = $(INTLLIBS) $(LIBIBERTY) $(CLIB)\n+LIBDEPS = $(INTLLIBS) $(LIBIBERTY)\n \n # Specify the directories to be searched for header files.\n # Both . and srcdir are used, in that order,"}, {"sha": "848cd25ed176bb584c911dd7f3190324724704c8", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d12830c32ccb918b5bb6d682e9d6e9b59247def/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d12830c32ccb918b5bb6d682e9d6e9b59247def/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=7d12830c32ccb918b5bb6d682e9d6e9b59247def", "patch": "@@ -1,3 +1,8 @@\n+Mon Aug 30 20:29:30 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (LIBS, LIBDEPS): Link with & depend on libiberty.a.\n+\tRemove hacks for stuff which now comes from libiberty.\n+\n Sun Aug 29 09:47:45 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* com.c (lang_printable_name): Constify a char*."}, {"sha": "5d1e558e4cda8ec4365c09eba838c8ce4de865d3", "filename": "gcc/f/Makefile.in", "status": "modified", "additions": 5, "deletions": 17, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d12830c32ccb918b5bb6d682e9d6e9b59247def/gcc%2Ff%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d12830c32ccb918b5bb6d682e9d6e9b59247def/gcc%2Ff%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FMakefile.in?ref=7d12830c32ccb918b5bb6d682e9d6e9b59247def", "patch": "@@ -37,8 +37,6 @@\n # Variables that exist for you to override.\n # See below for how to change them for certain systems.\n \n-ALLOCA =\n-\n # Various ways of specifying flags for compilations:\n # CFLAGS is for the user to override to, e.g., do a bootstrap with -O2.\n # BOOT_CFLAGS is the value of CFLAGS to pass\n@@ -70,10 +68,6 @@ TEXI2DVI = texi2dvi\n # to compile all the gen* files first by hand to avoid erroneous results.\n P =\n \n-# This is used in the definition of SUBDIR_USE_ALLOCA.\n-# ??? Perhaps it would be better if it just looked for *gcc*.\n-OLDCC = cc\n-\n # This is used instead of ALL_CFLAGS when compiling with GCC_FOR_TARGET.\n # It omits XCFLAGS, and specifies -B./.\n # It also specifies -B$(tooldir)/ to find as and ld for a cross compiler.\n@@ -94,10 +88,6 @@ VPATH = @srcdir@\n # Additional system libraries to link with.\n CLIB=\n \n-# Change this to a null string if obstacks are installed in the\n-# system library.\n-OBSTACK=obstack.o\n-\n # Choose the real default target.\n ALL=all\n \n@@ -134,21 +124,19 @@ ALL_CFLAGS = $(INTERNAL_CFLAGS) $(X_CFLAGS) $(T_CFLAGS) $(CFLAGS) $(XCFLAGS) -W\n # Likewise.\n ALL_CPPFLAGS = $(CPPFLAGS) $(X_CPPFLAGS) $(T_CPPFLAGS)\n \n+# This is where we get libiberty.a from.\n+LIBIBERTY = ../../libiberty/libiberty.a\n+\n # We should be compiling with the built compiler, for which\n # BOOT_LDFLAGS is appropriate.  (Formerly we had a separate\n # F771_LDFLAGS, but the ld flags can be taken care of by the target\n # configuration files in egcs.)\n LDFLAGS=$(BOOT_LDFLAGS)\n \n-# Even if ALLOCA is set, don't use it if compiling with GCC.\n-\n-SUBDIR_OBSTACK = `if [ x$(OBSTACK) != x ]; then echo ../$(OBSTACK); else true; fi`\n-SUBDIR_USE_ALLOCA = `case \"${CC}\" in \"${OLDCC}\") if [ x$(ALLOCA) != x ]; then echo ../$(ALLOCA); else true; fi ;; esac`\n-SUBDIR_MALLOC = `if [ x$(MALLOC) != x ]; then echo ../$(MALLOC); else true; fi`\n-\n # How to link with both our special library facilities\n # and the system's installed libraries.\n-LIBS = $(SUBDIR_OBSTACK) $(SUBDIR_USE_ALLOCA) $(SUBDIR_MALLOC) $(CLIB)\n+LIBS = $(LIBIBERTY) $(CLIB)\n+LIBDEPS = $(LIBIBERTY)\n \n # Specify the directories to be searched for header files.\n # Both . and srcdir are used, in that order,"}]}