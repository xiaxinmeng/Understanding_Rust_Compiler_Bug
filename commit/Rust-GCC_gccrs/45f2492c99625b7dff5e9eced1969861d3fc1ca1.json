{"sha": "45f2492c99625b7dff5e9eced1969861d3fc1ca1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDVmMjQ5MmM5OTYyNWI3ZGZmNWU5ZWNlZDE5Njk4NjFkM2ZjMWNhMQ==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2003-12-12T07:00:29Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-12-12T07:00:29Z"}, "message": "PR preprocessor/12935 preprocessor/12952 preprocessor/13046\n\n\tPR preprocessor/12935 preprocessor/12952 preprocessor/13046\n\t* cpplib.c (prepare_directive_trad): Clear skipping only in\n\t#if and #elif directives.\n\t(do_undef): Call the handler even if the identifier is not a macro.\n\t* cpptrad.c (scan_parameters): Emit an error message.\n\t(_cpp_create_trad_definition): Remember the params list even on\n\tfailure.\n\t* testsuite/gcc.dg/cpp/trad/macro.c: New tests.\n\nFrom-SVN: r74562", "tree": {"sha": "4614d26a7b81e6a3878d634b99ee0a34b5e069e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4614d26a7b81e6a3878d634b99ee0a34b5e069e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45f2492c99625b7dff5e9eced1969861d3fc1ca1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45f2492c99625b7dff5e9eced1969861d3fc1ca1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45f2492c99625b7dff5e9eced1969861d3fc1ca1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45f2492c99625b7dff5e9eced1969861d3fc1ca1/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d2b6eb76fa7c35f512f8f8dd16b027a525550460", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2b6eb76fa7c35f512f8f8dd16b027a525550460", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2b6eb76fa7c35f512f8f8dd16b027a525550460"}], "stats": {"total": 64, "additions": 51, "deletions": 13}, "files": [{"sha": "ad91bf6c5f49c783c0fc82d07993b5d9da308700", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45f2492c99625b7dff5e9eced1969861d3fc1ca1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45f2492c99625b7dff5e9eced1969861d3fc1ca1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=45f2492c99625b7dff5e9eced1969861d3fc1ca1", "patch": "@@ -1,3 +1,13 @@\n+2003-12-12  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\tPR preprocessor/12935 preprocessor/12952 preprocessor/13046\n+\t* cpplib.c (prepare_directive_trad): Clear skipping only in\n+\t#if and #elif directives.\n+\t(do_undef): Call the handler even if the identifier is not a macro.\n+\t* cpptrad.c (scan_parameters): Emit an error message.\n+\t(_cpp_create_trad_definition): Remember the params list even on\n+\tfailure.\n+\n 2003-12-11  Zack Weinberg  <zack@codesourcery.com>\n \n \t* arm.c (ARM_ADDRESS_COST, THUMB_ADDRESS_COST): Convert macros"}, {"sha": "2b213cb461a80bcd2a6fd9ac61c361a6c261f15e", "filename": "gcc/cpplib.c", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45f2492c99625b7dff5e9eced1969861d3fc1ca1/gcc%2Fcpplib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45f2492c99625b7dff5e9eced1969861d3fc1ca1/gcc%2Fcpplib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.c?ref=45f2492c99625b7dff5e9eced1969861d3fc1ca1", "patch": "@@ -272,14 +272,17 @@ prepare_directive_trad (cpp_reader *pfile)\n \t\t\t&& ! (pfile->directive->flags & EXPAND));\n       bool was_skipping = pfile->state.skipping;\n \n-      pfile->state.skipping = false;\n       pfile->state.in_expression = (pfile->directive == &dtable[T_IF]\n \t\t\t\t    || pfile->directive == &dtable[T_ELIF]);\n+      if (pfile->state.in_expression)\n+\tpfile->state.skipping = false;\n+\n       if (no_expand)\n \tpfile->state.prevent_expansion++;\n       _cpp_scan_out_logical_line (pfile, NULL);\n       if (no_expand)\n \tpfile->state.prevent_expansion--;\n+\n       pfile->state.skipping = was_skipping;\n       _cpp_overlay_buffer (pfile, pfile->out.base,\n \t\t\t   pfile->out.cur - pfile->out.base);\n@@ -520,22 +523,26 @@ do_undef (cpp_reader *pfile)\n {\n   cpp_hashnode *node = lex_macro_node (pfile);\n \n-  /* 6.10.3.5 paragraph 2: [#undef] is ignored if the specified identifier\n-     is not currently defined as a macro name.  */\n-  if (node && node->type == NT_MACRO)\n+  if (node)\n     {\n       if (pfile->cb.undef)\n \tpfile->cb.undef (pfile, pfile->directive_line, node);\n \n-      if (node->flags & NODE_WARN)\n-\tcpp_error (pfile, CPP_DL_WARNING,\n-\t\t   \"undefining \\\"%s\\\"\", NODE_NAME (node));\n+      /* 6.10.3.5 paragraph 2: [#undef] is ignored if the specified\n+\t identifier is not currently defined as a macro name.  */\n+      if (node->type == NT_MACRO)\n+\t{\n+\t  if (node->flags & NODE_WARN)\n+\t    cpp_error (pfile, CPP_DL_WARNING,\n+\t\t       \"undefining \\\"%s\\\"\", NODE_NAME (node));\n \n-      if (CPP_OPTION (pfile, warn_unused_macros))\n-\t_cpp_warn_if_unused_macro (pfile, node, NULL);\n+\t  if (CPP_OPTION (pfile, warn_unused_macros))\n+\t    _cpp_warn_if_unused_macro (pfile, node, NULL);\n \n-      _cpp_free_definition (node);\n+\t  _cpp_free_definition (node);\n+\t}\n     }\n+\n   check_eol (pfile);\n }\n "}, {"sha": "08636edb7a591fac53eba7b0c415c6f3aafc777a", "filename": "gcc/cpptrad.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45f2492c99625b7dff5e9eced1969861d3fc1ca1/gcc%2Fcpptrad.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45f2492c99625b7dff5e9eced1969861d3fc1ca1/gcc%2Fcpptrad.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpptrad.c?ref=45f2492c99625b7dff5e9eced1969861d3fc1ca1", "patch": "@@ -907,6 +907,9 @@ scan_parameters (cpp_reader *pfile, cpp_macro *macro)\n       break;\n     }\n \n+  if (!ok)\n+    cpp_error (pfile, CPP_DL_ERROR, \"syntax error in macro parameter list\");\n+\n   CUR (pfile->context) = cur + (*cur == ')');\n \n   return ok;\n@@ -982,14 +985,17 @@ _cpp_create_trad_definition (cpp_reader *pfile, cpp_macro *macro)\n   /* Is this a function-like macro?  */\n   if (* CUR (context) == '(')\n     {\n+      bool ok = scan_parameters (pfile, macro);\n+\n+      /* Remember the params so we can clear NODE_MACRO_ARG flags.  */\n+      macro->params = (cpp_hashnode **) BUFF_FRONT (pfile->a_buff);\n+\n       /* Setting macro to NULL indicates an error occurred, and\n \t prevents unnecessary work in _cpp_scan_out_logical_line.  */\n-      if (!scan_parameters (pfile, macro))\n+      if (!ok)\n \tmacro = NULL;\n       else\n \t{\n-\t  /* Success.  Commit the parameter array.  */\n-\t  macro->params = (cpp_hashnode **) BUFF_FRONT (pfile->a_buff);\n \t  BUFF_FRONT (pfile->a_buff) = (uchar *) &macro->params[macro->paramc];\n \t  macro->fun_like = 1;\n \t}"}, {"sha": "358b09377dedaba832be65fa1e790bc2133309fb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45f2492c99625b7dff5e9eced1969861d3fc1ca1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45f2492c99625b7dff5e9eced1969861d3fc1ca1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=45f2492c99625b7dff5e9eced1969861d3fc1ca1", "patch": "@@ -1,3 +1,7 @@\n+2003-12-12  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* testsuite/gcc.dg/cpp/trad/macro.c: New tests.\n+\n 2003-12-11  Zack Weinberg  <zack@codesourcery.com>\n \n \t* gcc.c-torture/execute/wchar_t-1.x: Delete."}, {"sha": "164b4ecfee654a711a8f49b37f2bb0fd430e7b99", "filename": "gcc/testsuite/gcc.dg/cpp/trad/macro.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45f2492c99625b7dff5e9eced1969861d3fc1ca1/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fmacro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45f2492c99625b7dff5e9eced1969861d3fc1ca1/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fmacro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fmacro.c?ref=45f2492c99625b7dff5e9eced1969861d3fc1ca1", "patch": "@@ -0,0 +1,11 @@\n+/* Test that varargs are rejected, and that we don't complain about\n+   macro args in skipped blocks.  */\n+\n+/* { dg-do preprocess } */\n+\n+#define f(x) \n+#define g(x, y...)\t\t/* { dg-error \"macro parameter list\" } */\n+\n+#if 0\n+#define f(a,b)\t\t\t/* { dg-bogus \"passed 2 arguments\" } */\n+#endif"}]}