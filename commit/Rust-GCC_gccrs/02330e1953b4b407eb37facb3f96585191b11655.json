{"sha": "02330e1953b4b407eb37facb3f96585191b11655", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDIzMzBlMTk1M2I0YjQwN2ViMzdmYWNiM2Y5NjU4NTE5MWIxMTY1NQ==", "commit": {"author": {"name": "Daniel Franke", "email": "franke.daniel@gmail.com", "date": "2007-03-08T21:46:16Z"}, "committer": {"name": "Daniel Franke", "email": "dfranke@gcc.gnu.org", "date": "2007-03-08T21:46:16Z"}, "message": "re PR fortran/30947 (intrinsic: ALARM)\n\n2007-03-08  Daniel Franke  <franke.daniel@gmail.com>\n\n        PR fortran/30947\n        * intrinsics/signal.c (alarm_sub_int): Avoid SEGFAULT with\n        integer arguments.\n\nFrom-SVN: r122716", "tree": {"sha": "b27cd78d4f00e742212ffe4e854e65352ce4928e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b27cd78d4f00e742212ffe4e854e65352ce4928e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02330e1953b4b407eb37facb3f96585191b11655", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02330e1953b4b407eb37facb3f96585191b11655", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02330e1953b4b407eb37facb3f96585191b11655", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02330e1953b4b407eb37facb3f96585191b11655/comments", "author": {"login": "dfranke76", "id": 15729164, "node_id": "MDQ6VXNlcjE1NzI5MTY0", "avatar_url": "https://avatars.githubusercontent.com/u/15729164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfranke76", "html_url": "https://github.com/dfranke76", "followers_url": "https://api.github.com/users/dfranke76/followers", "following_url": "https://api.github.com/users/dfranke76/following{/other_user}", "gists_url": "https://api.github.com/users/dfranke76/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfranke76/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfranke76/subscriptions", "organizations_url": "https://api.github.com/users/dfranke76/orgs", "repos_url": "https://api.github.com/users/dfranke76/repos", "events_url": "https://api.github.com/users/dfranke76/events{/privacy}", "received_events_url": "https://api.github.com/users/dfranke76/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "32af37843c42725d625ee9b4e0bb25273c701c9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32af37843c42725d625ee9b4e0bb25273c701c9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32af37843c42725d625ee9b4e0bb25273c701c9e"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "889a70d5fc8ddddaf44ed9c4d21660097b0e5c89", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02330e1953b4b407eb37facb3f96585191b11655/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02330e1953b4b407eb37facb3f96585191b11655/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=02330e1953b4b407eb37facb3f96585191b11655", "patch": "@@ -1,3 +1,9 @@\n+2007-03-08  Daniel Franke  <franke.daniel@gmail.com>\n+\n+\tPR fortran/30947\n+\t* intrinsics/signal.c (alarm_sub_int): Avoid SEGFAULT with \n+\tinteger arguments.\n+\n 2007-03-04  Thomas Koenig  <Thomas.Koenig@online.de>\n \n \tPR libfortran/30981"}, {"sha": "2c2f38d2969fd3af9ae63c08d5a0e97842bbe3db", "filename": "libgfortran/intrinsics/signal.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02330e1953b4b407eb37facb3f96585191b11655/libgfortran%2Fintrinsics%2Fsignal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02330e1953b4b407eb37facb3f96585191b11655/libgfortran%2Fintrinsics%2Fsignal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fsignal.c?ref=02330e1953b4b407eb37facb3f96585191b11655", "patch": "@@ -170,14 +170,14 @@ alarm_sub_int (int *seconds, int *handler, int *status)\n #if defined (SIGALRM) && defined (HAVE_ALARM) && defined (HAVE_SIGNAL)\n   if (status != NULL)\n     {\n-      if (signal (SIGALRM, (void (*)(int)) handler) == SIG_ERR)\n+      if (signal (SIGALRM, (void (*)(int)) *handler) == SIG_ERR)\n \t*status = -1;\n       else\n \t*status = alarm (*seconds);\n     }\n   else\n     {\n-      signal (SIGALRM, (void (*)(int)) handler);\n+      signal (SIGALRM, (void (*)(int)) *handler);\n       alarm (*seconds);\n     }\n #else"}]}