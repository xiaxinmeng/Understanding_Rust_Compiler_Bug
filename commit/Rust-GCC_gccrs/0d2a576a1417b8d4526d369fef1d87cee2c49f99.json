{"sha": "0d2a576a1417b8d4526d369fef1d87cee2c49f99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQyYTU3NmExNDE3YjhkNDUyNmQzNjlmZWYxZDg3Y2VlMmM0OWY5OQ==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2019-04-01T16:18:30Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2019-04-01T16:18:30Z"}, "message": "re PR rtl-optimization/89865 (FAIL: gcc.target/i386/pr49095.c scan-assembler-times \\\\\\\\), % 45)\n\n2019-04-01  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/89865\n\t* ira-costs.c (process_bb_node_for_hard_reg_moves): Skip hard\n\tregister if it is a part of small class.\n\nFrom-SVN: r270060", "tree": {"sha": "0daf295fe0fc9f597e05112c5233db6a08e137e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0daf295fe0fc9f597e05112c5233db6a08e137e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d2a576a1417b8d4526d369fef1d87cee2c49f99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d2a576a1417b8d4526d369fef1d87cee2c49f99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d2a576a1417b8d4526d369fef1d87cee2c49f99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d2a576a1417b8d4526d369fef1d87cee2c49f99/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a0802144bb4c0e60a110c6d5d8af22cb035da9c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0802144bb4c0e60a110c6d5d8af22cb035da9c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0802144bb4c0e60a110c6d5d8af22cb035da9c9"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "5016bd26c2136d2f3413be1479046c54b6d79251", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d2a576a1417b8d4526d369fef1d87cee2c49f99/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d2a576a1417b8d4526d369fef1d87cee2c49f99/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d2a576a1417b8d4526d369fef1d87cee2c49f99", "patch": "@@ -1,3 +1,9 @@\n+2019-04-01  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/89865\n+\t* ira-costs.c (process_bb_node_for_hard_reg_moves): Skip hard\n+\tregister if it is a part of small class.\n+\n 2019-04-01  Andrey Belevantsev  <abel@ispras.ru>\n \n \tPR rtl-optimization/87273"}, {"sha": "c7feaba371838ddac64e2cf2d34b0fa9658add6e", "filename": "gcc/ira-costs.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d2a576a1417b8d4526d369fef1d87cee2c49f99/gcc%2Fira-costs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d2a576a1417b8d4526d369fef1d87cee2c49f99/gcc%2Fira-costs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-costs.c?ref=0d2a576a1417b8d4526d369fef1d87cee2c49f99", "patch": "@@ -2107,6 +2107,13 @@ process_bb_node_for_hard_reg_moves (ira_loop_tree_node_t loop_tree_node)\n \t}\n       else\n \tcontinue;\n+      if (reg_class_size[(int) REGNO_REG_CLASS (hard_regno)]\n+\t  == (ira_reg_class_max_nregs\n+\t      [REGNO_REG_CLASS (hard_regno)][(int) ALLOCNO_MODE(a)]))\n+\t/* If the class can provide only one hard reg to the allocno,\n+\t   we processed the insn record_operand_costs already and we\n+\t   actually updated the hard reg cost there.  */\n+\tcontinue;\n       rclass = ALLOCNO_CLASS (a);\n       if (! TEST_HARD_REG_BIT (reg_class_contents[rclass], hard_regno))\n \tcontinue;"}]}