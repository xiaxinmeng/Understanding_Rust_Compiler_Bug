{"sha": "42601c633c7cf0c9617c3dfb5e9334527ca9d5c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI2MDFjNjMzYzdjZjBjOTYxN2MzZGZiNWU5MzM0NTI3Y2E5ZDVjNA==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2012-03-07T10:38:25Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2012-03-07T10:38:25Z"}, "message": "re PR target/52506 ([avr]: XMEGA: Wrong order of save/restore of RAMPX/Y/Z/D SFRs in ISR pro-/epilogue)\n\n\tPR target/52506\n\t* gcc/config/avr/avr.c (expand_epilogue): Fix order of restoration\n\tto: RAMPZ, RAMPY, RAMPX, RAMPD.\n\t(expand_prologue): Only clear RAMPZ if it has effect on RAM-read.\n\nFrom-SVN: r185032", "tree": {"sha": "44328b3e4e663e7c2f142753cab701d61b37d86f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44328b3e4e663e7c2f142753cab701d61b37d86f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42601c633c7cf0c9617c3dfb5e9334527ca9d5c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42601c633c7cf0c9617c3dfb5e9334527ca9d5c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42601c633c7cf0c9617c3dfb5e9334527ca9d5c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42601c633c7cf0c9617c3dfb5e9334527ca9d5c4/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "611082257d0365f045685d125954cb5294a8c7b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/611082257d0365f045685d125954cb5294a8c7b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/611082257d0365f045685d125954cb5294a8c7b8"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "c8895e87e9a0cb863e1af5f0fbe394987a91ca47", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42601c633c7cf0c9617c3dfb5e9334527ca9d5c4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42601c633c7cf0c9617c3dfb5e9334527ca9d5c4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=42601c633c7cf0c9617c3dfb5e9334527ca9d5c4", "patch": "@@ -1,3 +1,10 @@\n+2012-03-07  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/52506\n+\t* gcc/config/avr/avr.c (expand_epilogue): Fix order of restoration\n+\tto: RAMPZ, RAMPY, RAMPX, RAMPD.\n+\t(expand_prologue): Only clear RAMPZ if it has effect on RAM-read.\n+\n 2012-03-07  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/52505"}, {"sha": "0fcec0dff1ad763f6c649e2a2a052f4d90f6a0ff", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42601c633c7cf0c9617c3dfb5e9334527ca9d5c4/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42601c633c7cf0c9617c3dfb5e9334527ca9d5c4/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=42601c633c7cf0c9617c3dfb5e9334527ca9d5c4", "patch": "@@ -1123,11 +1123,11 @@ expand_prologue (void)\n           emit_push_sfr (rampy_rtx, false /* frame-related */, true /* clr */);\n         }\n \n-      if (AVR_HAVE_RAMPZ \n+      if (AVR_HAVE_RAMPZ\n           && TEST_HARD_REG_BIT (set, REG_Z)\n           && TEST_HARD_REG_BIT (set, REG_Z + 1))\n         {\n-          emit_push_sfr (rampz_rtx, false /* frame-related */, true /* clr */);\n+          emit_push_sfr (rampz_rtx, false /* frame-related */, AVR_HAVE_RAMPD);\n         }\n     }  /* is_interrupt is_signal */\n \n@@ -1347,12 +1347,12 @@ expand_epilogue (bool sibcall_p)\n       /* Restore RAMPZ/Y/X/D using tmp_reg as scratch.\n          The conditions to restore them must be tha same as in prologue.  */\n       \n-      if (AVR_HAVE_RAMPX\n-          && TEST_HARD_REG_BIT (set, REG_X)\n-          && TEST_HARD_REG_BIT (set, REG_X + 1))\n+      if (AVR_HAVE_RAMPZ\n+          && TEST_HARD_REG_BIT (set, REG_Z)\n+          && TEST_HARD_REG_BIT (set, REG_Z + 1))\n         {\n           emit_pop_byte (TMP_REGNO);\n-          emit_move_insn (rampx_rtx, tmp_reg_rtx);\n+          emit_move_insn (rampz_rtx, tmp_reg_rtx);\n         }\n \n       if (AVR_HAVE_RAMPY\n@@ -1364,12 +1364,12 @@ expand_epilogue (bool sibcall_p)\n           emit_move_insn (rampy_rtx, tmp_reg_rtx);\n         }\n \n-      if (AVR_HAVE_RAMPZ\n-          && TEST_HARD_REG_BIT (set, REG_Z)\n-          && TEST_HARD_REG_BIT (set, REG_Z + 1))\n+      if (AVR_HAVE_RAMPX\n+          && TEST_HARD_REG_BIT (set, REG_X)\n+          && TEST_HARD_REG_BIT (set, REG_X + 1))\n         {\n           emit_pop_byte (TMP_REGNO);\n-          emit_move_insn (rampz_rtx, tmp_reg_rtx);\n+          emit_move_insn (rampx_rtx, tmp_reg_rtx);\n         }\n \n       if (AVR_HAVE_RAMPD)"}]}