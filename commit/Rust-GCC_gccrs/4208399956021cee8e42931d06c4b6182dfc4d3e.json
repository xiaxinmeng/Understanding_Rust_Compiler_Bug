{"sha": "4208399956021cee8e42931d06c4b6182dfc4d3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDIwODM5OTk1NjAyMWNlZThlNDI5MzFkMDZjNGI2MTgyZGZjNGQzZQ==", "commit": {"author": {"name": "Greta Yorsh", "email": "greta.yorsh@arm.com", "date": "2012-10-17T13:17:30Z"}, "committer": {"name": "Greta Yorsh", "email": "gretay@gcc.gnu.org", "date": "2012-10-17T13:17:30Z"}, "message": "arm.md (UNSPEC_PROLOGUE_USE): Rename this...\n\n\n        * config/arm/arm.md (UNSPEC_PROLOGUE_USE): Rename this...\n        (UNSPEC_REGISTER_USE): ... to this.\n        (prologue_use): Rename this...\n\t  (force_register_use): ... to this and update output assembly.\n        (epilogue) Rename gen_prologue_use to gen_force_register_use.\n        * config/arm/arm.c (arm_expand_prologue): Likewise.\n        (thumb1_expand_epilogue): Likewise.\n        (arm_expand_epilogue): Likewise.\n        (arm_expand_epilogue): Likewise.\n\nFrom-SVN: r192533", "tree": {"sha": "32b8e25f4cf68684beddb7bfd4b12669308fe918", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32b8e25f4cf68684beddb7bfd4b12669308fe918"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4208399956021cee8e42931d06c4b6182dfc4d3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4208399956021cee8e42931d06c4b6182dfc4d3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4208399956021cee8e42931d06c4b6182dfc4d3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4208399956021cee8e42931d06c4b6182dfc4d3e/comments", "author": null, "committer": null, "parents": [{"sha": "eb5af262af2fa9034ec4fb08b0434ce01458bffb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb5af262af2fa9034ec4fb08b0434ce01458bffb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb5af262af2fa9034ec4fb08b0434ce01458bffb"}], "stats": {"total": 34, "additions": 23, "deletions": 11}, "files": [{"sha": "6c0e29c4a3bd388294c188255f03f5d04414b85a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4208399956021cee8e42931d06c4b6182dfc4d3e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4208399956021cee8e42931d06c4b6182dfc4d3e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4208399956021cee8e42931d06c4b6182dfc4d3e", "patch": "@@ -1,3 +1,15 @@\n+2012-10-17  Greta Yorsh  <Greta.Yorsh@arm.com>\n+\n+        * config/arm/arm.md (UNSPEC_PROLOGUE_USE): Rename this...\n+        (UNSPEC_REGISTER_USE): ... to this.\n+        (prologue_use): Rename this...\n+\t  (force_register_use): ... to this and update output assembly.\n+        (epilogue) Rename gen_prologue_use to gen_force_register_use.\n+        * config/arm/arm.c (arm_expand_prologue): Likewise.\n+        (thumb1_expand_epilogue): Likewise.\n+        (arm_expand_epilogue): Likewise.\n+        (arm_expand_epilogue): Likewise.\n+\n 2012-10-17  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* config/avr/avr-arch.h (avr_extra_arch_macro): Remove prototype."}, {"sha": "fc3a5080987e89e519b1b4aefaea341775eae858", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4208399956021cee8e42931d06c4b6182dfc4d3e/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4208399956021cee8e42931d06c4b6182dfc4d3e/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=4208399956021cee8e42931d06c4b6182dfc4d3e", "patch": "@@ -16732,7 +16732,7 @@ arm_expand_prologue (void)\n \t\t}\n \t      emit_set_insn (ip_rtx, insn);\n \t      /* Add a USE to stop propagate_one_insn() from barfing.  */\n-\t      emit_insn (gen_prologue_use (ip_rtx));\n+\t      emit_insn (gen_force_register_use (ip_rtx));\n \t    }\n \t}\n       else\n@@ -22621,7 +22621,7 @@ thumb1_expand_epilogue (void)\n \n   /* Emit a USE (stack_pointer_rtx), so that\n      the stack adjustment will not be deleted.  */\n-  emit_insn (gen_prologue_use (stack_pointer_rtx));\n+  emit_insn (gen_force_register_use (stack_pointer_rtx));\n \n   if (crtl->profile || !TARGET_SCHED_PROLOG)\n     emit_insn (gen_blockage ());\n@@ -22845,7 +22845,7 @@ arm_expand_epilogue (bool really_return)\n \n           /* Emit USE(stack_pointer_rtx) to ensure that stack adjustment is not\n              deleted.  */\n-          emit_insn (gen_prologue_use (stack_pointer_rtx));\n+          emit_insn (gen_force_register_use (stack_pointer_rtx));\n         }\n       else\n         {\n@@ -22863,7 +22863,7 @@ arm_expand_epilogue (bool really_return)\n           emit_insn (gen_movsi (stack_pointer_rtx, hard_frame_pointer_rtx));\n           /* Emit USE(stack_pointer_rtx) to ensure that stack adjustment is not\n              deleted.  */\n-          emit_insn (gen_prologue_use (stack_pointer_rtx));\n+          emit_insn (gen_force_register_use (stack_pointer_rtx));\n         }\n     }\n   else\n@@ -22881,7 +22881,7 @@ arm_expand_epilogue (bool really_return)\n                                  GEN_INT (amount)));\n           /* Emit USE(stack_pointer_rtx) to ensure that stack adjustment is\n              not deleted.  */\n-          emit_insn (gen_prologue_use (stack_pointer_rtx));\n+          emit_insn (gen_force_register_use (stack_pointer_rtx));\n         }\n     }\n "}, {"sha": "7c80f91fb942a47ccb7217c8ff71ab48a6ce4913", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4208399956021cee8e42931d06c4b6182dfc4d3e/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4208399956021cee8e42931d06c4b6182dfc4d3e/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=4208399956021cee8e42931d06c4b6182dfc4d3e", "patch": "@@ -76,7 +76,7 @@\n                         ; that points at the containing instruction.\n   UNSPEC_PRLG_STK       ; A special barrier that prevents frame accesses\n                         ; being scheduled before the stack adjustment insn.\n-  UNSPEC_PROLOGUE_USE   ; As USE insns are not meaningful after reload,\n+  UNSPEC_REGISTER_USE   ; As USE insns are not meaningful after reload,\n                         ; this unspec is used to prevent the deletion of\n                         ; instructions setting registers for EH handling\n                         ; and stack frame generation.  Operand 0 is the\n@@ -10610,7 +10610,7 @@\n   \"TARGET_EITHER\"\n   \"\n   if (crtl->calls_eh_return)\n-    emit_insn (gen_prologue_use (gen_rtx_REG (Pmode, 2)));\n+    emit_insn (gen_force_register_use (gen_rtx_REG (Pmode, 2)));\n   if (TARGET_THUMB1)\n    {\n      thumb1_expand_epilogue ();\n@@ -10644,7 +10644,7 @@\n ;; does not think that it is unused by the sibcall branch that\n ;; will replace the standard function epilogue.\n (define_expand \"sibcall_epilogue\"\n-   [(parallel [(unspec:SI [(reg:SI LR_REGNUM)] UNSPEC_PROLOGUE_USE)\n+   [(parallel [(unspec:SI [(reg:SI LR_REGNUM)] UNSPEC_REGISTER_USE)\n                (unspec_volatile [(return)] VUNSPEC_EPILOGUE)])]\n    \"TARGET_32BIT\"\n    \"\n@@ -11260,10 +11260,10 @@\n   \"\"\n )\n \n-(define_insn \"prologue_use\"\n-  [(unspec:SI [(match_operand:SI 0 \"register_operand\" \"\")] UNSPEC_PROLOGUE_USE)]\n+(define_insn \"force_register_use\"\n+  [(unspec:SI [(match_operand:SI 0 \"register_operand\" \"\")] UNSPEC_REGISTER_USE)]\n   \"\"\n-  \"%@ %0 needed for prologue\"\n+  \"%@ %0 needed\"\n   [(set_attr \"length\" \"0\")]\n )\n "}]}