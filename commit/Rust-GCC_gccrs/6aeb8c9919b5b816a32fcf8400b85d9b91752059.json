{"sha": "6aeb8c9919b5b816a32fcf8400b85d9b91752059", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFlYjhjOTkxOWI1YjgxNmEzMmZjZjg0MDBiODVkOWI5MTc1MjA1OQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-08-12T08:55:05Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-08-12T08:55:05Z"}, "message": "call.c (build_over_call): Instead of memcpy use an assignment of two MEM_REFs.\n\n2011-08-12  Richard Guenther  <rguenther@suse.de>\n\n\t* call.c (build_over_call): Instead of memcpy use an\n\tassignment of two MEM_REFs.\n\nFrom-SVN: r177691", "tree": {"sha": "88501efa7f691a8047eed2a88aa3396008ce5ecd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88501efa7f691a8047eed2a88aa3396008ce5ecd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6aeb8c9919b5b816a32fcf8400b85d9b91752059", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aeb8c9919b5b816a32fcf8400b85d9b91752059", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6aeb8c9919b5b816a32fcf8400b85d9b91752059", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aeb8c9919b5b816a32fcf8400b85d9b91752059/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f895fc2a0d23a15668d829cec8c9bfaa98ae5615", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f895fc2a0d23a15668d829cec8c9bfaa98ae5615", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f895fc2a0d23a15668d829cec8c9bfaa98ae5615"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "47d636ef3b04e31df1abe9ca00ed23d9b9851dc9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aeb8c9919b5b816a32fcf8400b85d9b91752059/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aeb8c9919b5b816a32fcf8400b85d9b91752059/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6aeb8c9919b5b816a32fcf8400b85d9b91752059", "patch": "@@ -1,3 +1,8 @@\n+2011-08-12  Richard Guenther  <rguenther@suse.de>\n+\n+\t* call.c (build_over_call): Instead of memcpy use an\n+\tassignment of two MEM_REFs.\n+\n 2011-08-11  Romain Geissler  <romain.geissler@gmail.com>\n             Brian Hackett  <bhackett1024@gmail.com>\n "}, {"sha": "a3b0f8a85bbda2e5efda18893f957126997e2874", "filename": "gcc/cp/call.c", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aeb8c9919b5b816a32fcf8400b85d9b91752059/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aeb8c9919b5b816a32fcf8400b85d9b91752059/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=6aeb8c9919b5b816a32fcf8400b85d9b91752059", "patch": "@@ -6766,19 +6766,22 @@ build_over_call (struct z_candidate *cand, int flags, tsubst_flags_t complain)\n \t}\n       else\n \t{\n-\t  /* We must only copy the non-tail padding parts.\n-\t     Use __builtin_memcpy for the bitwise copy.  */\n-\t  tree arg0, arg1, arg2, t;\n+\t  /* We must only copy the non-tail padding parts.  */\n+\t  tree arg0, arg2, t;\n+\t  tree array_type, alias_set;\n \n \t  arg2 = TYPE_SIZE_UNIT (as_base);\n-\t  arg1 = arg;\n \t  arg0 = cp_build_addr_expr (to, complain);\n \n-\t  t = implicit_built_in_decls[BUILT_IN_MEMCPY];\n-\t  t = build_call_n (t, 3, arg0, arg1, arg2);\n-\n-\t  t = convert (TREE_TYPE (arg0), t);\n-\t  val = cp_build_indirect_ref (t, RO_NULL, complain);\n+\t  array_type = build_array_type (char_type_node,\n+\t\t\t\t\t build_index_type\n+\t\t\t\t\t   (size_binop (MINUS_EXPR,\n+\t\t\t\t\t\t\targ2, size_int (1))));\n+\t  alias_set = build_int_cst (build_pointer_type (type), 0);\n+\t  t = build2 (MODIFY_EXPR, void_type_node,\n+\t\t      build2 (MEM_REF, array_type, arg0, alias_set),\n+\t\t      build2 (MEM_REF, array_type, arg, alias_set));\n+\t  val = build2 (COMPOUND_EXPR, TREE_TYPE (to), t, to);\n           TREE_NO_WARNING (val) = 1;\n \t}\n "}]}