{"sha": "3c9364f29e7e47eb9de33f2d8843d5b00284ceca", "node_id": "C_kwDOANBUbNoAKDNjOTM2NGYyOWU3ZTQ3ZWI5ZGUzM2YyZDg4NDNkNWIwMDI4NGNlY2E", "commit": {"author": {"name": "Haochen Jiang", "email": "haochen.jiang@intel.com", "date": "2022-02-08T02:51:26Z"}, "committer": {"name": "Hongyu Wang", "email": "hongyu.wang@intel.com", "date": "2022-05-12T09:30:43Z"}, "message": "i386: Add combine splitter to transform pxor/pcmpeqb/pmovmskb/cmp 0xffff to ptest.\n\ngcc/ChangeLog:\n\n\tPR target/104371\n\t* config/i386/sse.md (vi1avx2const): New define_mode_attr.\n\t(pxor/pcmpeqb/pmovmskb/cmp 0xffff to ptest splitter):\n\tNew define_split pattern.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/104371\n\t* gcc.target/i386/pr104371-1.c: New test.\n\t* gcc.target/i386/pr104371-2.c: Ditto.", "tree": {"sha": "8d5b5d22227232ca4f5708e63a075d0ef7090e6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d5b5d22227232ca4f5708e63a075d0ef7090e6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c9364f29e7e47eb9de33f2d8843d5b00284ceca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c9364f29e7e47eb9de33f2d8843d5b00284ceca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c9364f29e7e47eb9de33f2d8843d5b00284ceca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c9364f29e7e47eb9de33f2d8843d5b00284ceca/comments", "author": {"login": "jianghc724", "id": 10798680, "node_id": "MDQ6VXNlcjEwNzk4Njgw", "avatar_url": "https://avatars.githubusercontent.com/u/10798680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jianghc724", "html_url": "https://github.com/jianghc724", "followers_url": "https://api.github.com/users/jianghc724/followers", "following_url": "https://api.github.com/users/jianghc724/following{/other_user}", "gists_url": "https://api.github.com/users/jianghc724/gists{/gist_id}", "starred_url": "https://api.github.com/users/jianghc724/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jianghc724/subscriptions", "organizations_url": "https://api.github.com/users/jianghc724/orgs", "repos_url": "https://api.github.com/users/jianghc724/repos", "events_url": "https://api.github.com/users/jianghc724/events{/privacy}", "received_events_url": "https://api.github.com/users/jianghc724/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wwwhhhyyy", "id": 5366075, "node_id": "MDQ6VXNlcjUzNjYwNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/5366075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wwwhhhyyy", "html_url": "https://github.com/wwwhhhyyy", "followers_url": "https://api.github.com/users/wwwhhhyyy/followers", "following_url": "https://api.github.com/users/wwwhhhyyy/following{/other_user}", "gists_url": "https://api.github.com/users/wwwhhhyyy/gists{/gist_id}", "starred_url": "https://api.github.com/users/wwwhhhyyy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wwwhhhyyy/subscriptions", "organizations_url": "https://api.github.com/users/wwwhhhyyy/orgs", "repos_url": "https://api.github.com/users/wwwhhhyyy/repos", "events_url": "https://api.github.com/users/wwwhhhyyy/events{/privacy}", "received_events_url": "https://api.github.com/users/wwwhhhyyy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f78783dbedca0183d193e475262ca3c489fd365", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f78783dbedca0183d193e475262ca3c489fd365", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f78783dbedca0183d193e475262ca3c489fd365"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "6578104fee26eb087302c41ad2a0cf8d22c34b4c", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c9364f29e7e47eb9de33f2d8843d5b00284ceca/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c9364f29e7e47eb9de33f2d8843d5b00284ceca/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=3c9364f29e7e47eb9de33f2d8843d5b00284ceca", "patch": "@@ -20177,6 +20177,24 @@\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"SI\")])\n \n+;; Optimize pxor/pcmpeqb/pmovmskb/cmp 0xffff to ptest.\n+(define_mode_attr vi1avx2const\n+  [(V32QI \"0xffffffff\") (V16QI \"0xffff\")])\n+\n+(define_split\n+  [(set (reg:CCZ FLAGS_REG)\n+\t(compare:CCZ (unspec:SI\n+\t\t\t[(eq:VI1_AVX2\n+\t\t\t    (match_operand:VI1_AVX2 0 \"vector_operand\")\n+\t\t\t    (match_operand:VI1_AVX2 1 \"const0_operand\"))]\n+\t\t    UNSPEC_MOVMSK)\n+\t\t (match_operand 2 \"const_int_operand\")))]\n+  \"TARGET_SSE4_1 && (INTVAL (operands[2]) == (int) (<vi1avx2const>))\"\n+  [(set (reg:CC FLAGS_REG)\n+\t(unspec:CC [(match_dup 0)\n+\t\t    (match_dup 0)]\n+\t\t   UNSPEC_PTEST))])\n+\n (define_expand \"sse2_maskmovdqu\"\n   [(set (match_operand:V16QI 0 \"memory_operand\")\n \t(unspec:V16QI [(match_operand:V16QI 1 \"register_operand\")"}, {"sha": "b4373c55ab2e8bcd5d92b52294778b9e71501689", "filename": "gcc/testsuite/gcc.target/i386/pr104371-1.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c9364f29e7e47eb9de33f2d8843d5b00284ceca/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104371-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c9364f29e7e47eb9de33f2d8843d5b00284ceca/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104371-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104371-1.c?ref=3c9364f29e7e47eb9de33f2d8843d5b00284ceca", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse4\" } */\n+/* { dg-final { scan-assembler \"ptest\\[ \\\\t\\]\" } } */\n+/* { dg-final { scan-assembler-not \"pxor\\[ \\\\t\\]\" } } */\n+/* { dg-final { scan-assembler-not \"pcmpeqb\\[ \\\\t\\]\" } } */\n+/* { dg-final { scan-assembler-not \"pmovmskb\\[ \\\\t\\]\" } } */\n+\n+#include <smmintrin.h>\n+\n+int is_zero(__m128i x)\n+{\n+  return _mm_movemask_epi8(_mm_cmpeq_epi8(x, _mm_setzero_si128())) == 0xffff;\n+}"}, {"sha": "3431ffc1cc26fdfec011532283e51a00cc7121b4", "filename": "gcc/testsuite/gcc.target/i386/pr104371-2.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c9364f29e7e47eb9de33f2d8843d5b00284ceca/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104371-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c9364f29e7e47eb9de33f2d8843d5b00284ceca/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104371-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104371-2.c?ref=3c9364f29e7e47eb9de33f2d8843d5b00284ceca", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx2\" } */\n+/* { dg-final { scan-assembler \"vptest\\[ \\\\t\\]\" } } */\n+/* { dg-final { scan-assembler-not \"vpxor\\[ \\\\t\\]\" } } */\n+/* { dg-final { scan-assembler-not \"vpcmpeqb\\[ \\\\t\\]\" } } */\n+/* { dg-final { scan-assembler-not \"vpmovmskb\\[ \\\\t\\]\" } } */\n+\n+#include <immintrin.h>\n+\n+int is_zero256(__m256i x)\n+{\n+  return _mm256_movemask_epi8(_mm256_cmpeq_epi8(x, _mm256_setzero_si256())) == 0xffffffff;\n+}"}]}