{"sha": "72a30e45c5629a3f1cece39777b71a557eed3c57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJhMzBlNDVjNTYyOWEzZjFjZWNlMzk3NzdiNzFhNTU3ZWVkM2M1Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-08-01T20:20:17Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-08-01T20:20:17Z"}, "message": "Warn about mangled name change even if DECL_REALLY_EXTERN.\n\n\t* mangle.c (mangle_decl): Warn about mangled name change even if\n\tDECL_REALLY_EXTERN.\n\nFrom-SVN: r238966", "tree": {"sha": "23d695967db0739592b64c0bbf0cab739a8530b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23d695967db0739592b64c0bbf0cab739a8530b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72a30e45c5629a3f1cece39777b71a557eed3c57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72a30e45c5629a3f1cece39777b71a557eed3c57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72a30e45c5629a3f1cece39777b71a557eed3c57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72a30e45c5629a3f1cece39777b71a557eed3c57/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "884929e21dcf4028cfdc852a58d4d8370cfa6b72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/884929e21dcf4028cfdc852a58d4d8370cfa6b72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/884929e21dcf4028cfdc852a58d4d8370cfa6b72"}], "stats": {"total": 63, "additions": 34, "deletions": 29}, "files": [{"sha": "38ae44377866249dc4d3f91d227ca6d63067c7df", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72a30e45c5629a3f1cece39777b71a557eed3c57/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72a30e45c5629a3f1cece39777b71a557eed3c57/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=72a30e45c5629a3f1cece39777b71a557eed3c57", "patch": "@@ -1,5 +1,8 @@\n 2016-08-01  Jason Merrill  <jason@redhat.com>\n \n+\t* mangle.c (mangle_decl): Warn about mangled name change even if\n+\tDECL_REALLY_EXTERN.\n+\n \t* mangle.c (get_abi_tags): New.\n \t(find_substitution, write_unqualified_name, write_abi_tags)\n \t(maybe_check_abi_tags): Use it."}, {"sha": "d1bf3effbd25edef1f1e6653737738be26536e99", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 31, "deletions": 29, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72a30e45c5629a3f1cece39777b71a557eed3c57/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72a30e45c5629a3f1cece39777b71a557eed3c57/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=72a30e45c5629a3f1cece39777b71a557eed3c57", "patch": "@@ -3700,50 +3700,52 @@ mangle_decl (const tree decl)\n   SET_DECL_ASSEMBLER_NAME (decl, id);\n \n   if (id != DECL_NAME (decl)\n-      && !DECL_REALLY_EXTERN (decl)\n       /* Don't do this for a fake symbol we aren't going to emit anyway.  */\n       && TREE_CODE (decl) != TYPE_DECL\n       && !DECL_MAYBE_IN_CHARGE_CONSTRUCTOR_P (decl)\n       && !DECL_MAYBE_IN_CHARGE_DESTRUCTOR_P (decl))\n     {\n-      bool set = false;\n+      int save_ver = flag_abi_version;\n+      tree id2 = NULL_TREE;\n \n-      /* Check IDENTIFIER_GLOBAL_VALUE before setting to avoid redundant\n-\t errors from multiple definitions.  */\n-      tree d = IDENTIFIER_GLOBAL_VALUE (id);\n-      if (!d || decl_implicit_alias_p (d))\n+      if (!DECL_REALLY_EXTERN (decl))\n \t{\n-\t  set = true;\n-\t  SET_IDENTIFIER_GLOBAL_VALUE (id, decl);\n-\t}\n+\t  bool set = false;\n \n-      if (!G.need_abi_warning)\n-\treturn;\n+\t  /* Check IDENTIFIER_GLOBAL_VALUE before setting to avoid redundant\n+\t     errors from multiple definitions.  */\n+\t  tree d = IDENTIFIER_GLOBAL_VALUE (id);\n+\t  if (!d || decl_implicit_alias_p (d))\n+\t    {\n+\t      set = true;\n+\t      SET_IDENTIFIER_GLOBAL_VALUE (id, decl);\n+\t    }\n \n-      /* If the mangling will change in the future, emit an alias with the\n-\t future mangled name for forward-compatibility.  */\n-      int save_ver;\n-      tree id2;\n+\t  if (!G.need_abi_warning)\n+\t    return;\n \n-      if (!set)\n-\t{\n-\t  SET_IDENTIFIER_GLOBAL_VALUE (id, decl);\n-\t  inform (DECL_SOURCE_LOCATION (decl), \"a later -fabi-version= (or \"\n-\t\t  \"=0) avoids this error with a change in mangling\");\n-\t}\n-\n-      save_ver = flag_abi_version;\n+\t  /* If the mangling will change in the future, emit an alias with the\n+\t     future mangled name for forward-compatibility.  */\n+\t  if (!set)\n+\t    {\n+\t      SET_IDENTIFIER_GLOBAL_VALUE (id, decl);\n+\t      inform (DECL_SOURCE_LOCATION (decl), \"a later -fabi-version= (or \"\n+\t\t      \"=0) avoids this error with a change in mangling\");\n+\t    }\n \n-      flag_abi_version = flag_abi_compat_version;\n-      id2 = mangle_decl_string (decl);\n-      id2 = targetm.mangle_decl_assembler_name (decl, id2);\n+\t  flag_abi_version = flag_abi_compat_version;\n+\t  id2 = mangle_decl_string (decl);\n+\t  id2 = targetm.mangle_decl_assembler_name (decl, id2);\n+\t  flag_abi_version = save_ver;\n \n-      if (id2 != id)\n-\tnote_mangling_alias (decl, id2);\n+\t  if (id2 != id)\n+\t    note_mangling_alias (decl, id2);\n+\t}\n \n       if (warn_abi)\n \t{\n-\t  if (flag_abi_compat_version != warn_abi_version)\n+\t  if (flag_abi_compat_version != warn_abi_version\n+\t      || id2 == NULL_TREE)\n \t    {\n \t      flag_abi_version = warn_abi_version;\n \t      id2 = mangle_decl_string (decl);"}]}