{"sha": "d876207f939fcac31113cfb9119ed8398d4775db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg3NjIwN2Y5MzlmY2FjMzExMTNjZmI5MTE5ZWQ4Mzk4ZDQ3NzVkYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-11-11T15:21:12Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-11-11T15:21:12Z"}, "message": "tree-core.h (pedantic_lvalues): Remove.\n\n2014-11-11  Richard Biener  <rguenther@suse.de>\n\n\t* tree-core.h (pedantic_lvalues): Remove.\n\t* fold-const.c (pedantic_lvalues): Likewise.\n\t(pedantic_non_lvalue_loc): Remove conditional non_lvalue_loc call.\n\n\tc/\n\t* c-decl.c (c_init_decl_processing): Do not set pedantic_lvalues\n\tto true.\n\nFrom-SVN: r217356", "tree": {"sha": "52649e138a3331c6ff0aac8c721049208bed9ce2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52649e138a3331c6ff0aac8c721049208bed9ce2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d876207f939fcac31113cfb9119ed8398d4775db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d876207f939fcac31113cfb9119ed8398d4775db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d876207f939fcac31113cfb9119ed8398d4775db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d876207f939fcac31113cfb9119ed8398d4775db/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f657d66569fa873772fb624a4413dfa2014d700c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f657d66569fa873772fb624a4413dfa2014d700c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f657d66569fa873772fb624a4413dfa2014d700c"}], "stats": {"total": 25, "additions": 11, "deletions": 14}, "files": [{"sha": "23e6e90984e63dd382fc394033c7967d37d42315", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d876207f939fcac31113cfb9119ed8398d4775db/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d876207f939fcac31113cfb9119ed8398d4775db/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d876207f939fcac31113cfb9119ed8398d4775db", "patch": "@@ -1,3 +1,9 @@\n+2014-11-11  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-core.h (pedantic_lvalues): Remove.\n+\t* fold-const.c (pedantic_lvalues): Likewise.\n+\t(pedantic_non_lvalue_loc): Remove conditional non_lvalue_loc call.\n+\n 2014-11-11  Martin Liska  <mliska@suse.cz>\n \n \tPR ipa/63622"}, {"sha": "fa3c925e74681bf18956e941e5e963efb988224b", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d876207f939fcac31113cfb9119ed8398d4775db/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d876207f939fcac31113cfb9119ed8398d4775db/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=d876207f939fcac31113cfb9119ed8398d4775db", "patch": "@@ -1,3 +1,8 @@\n+2014-11-11  Richard Biener  <rguenther@suse.de>\n+\n+\t* c-decl.c (c_init_decl_processing): Do not set pedantic_lvalues\n+\tto true.\n+\n 2014-11-10  Andi Kleen  <ak@linux.intel.com>\n \n \tPR c/60804"}, {"sha": "9288e2c1e8ca5b5781c35ed11915b18cfab27bc5", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d876207f939fcac31113cfb9119ed8398d4775db/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d876207f939fcac31113cfb9119ed8398d4775db/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=d876207f939fcac31113cfb9119ed8398d4775db", "patch": "@@ -3947,8 +3947,6 @@ c_init_decl_processing (void)\n \n   input_location = save_loc;\n \n-  pedantic_lvalues = true;\n-\n   make_fname_decl = c_make_fname_decl;\n   start_fname_decls ();\n }"}, {"sha": "756f469d0387a1ad5bca28ede7fbc229618395fc", "filename": "gcc/fold-const.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d876207f939fcac31113cfb9119ed8398d4775db/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d876207f939fcac31113cfb9119ed8398d4775db/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=d876207f939fcac31113cfb9119ed8398d4775db", "patch": "@@ -2152,20 +2152,12 @@ non_lvalue_loc (location_t loc, tree x)\n   return build1_loc (loc, NON_LVALUE_EXPR, TREE_TYPE (x), x);\n }\n \n-/* Nonzero means lvalues are limited to those valid in pedantic ANSI C.\n-   Zero means allow extended lvalues.  */\n-\n-int pedantic_lvalues;\n-\n /* When pedantic, return an expr equal to X but certainly not valid as a\n    pedantic lvalue.  Otherwise, return X.  */\n \n static tree\n pedantic_non_lvalue_loc (location_t loc, tree x)\n {\n-  if (pedantic_lvalues)\n-    return non_lvalue_loc (loc, x);\n-\n   return protected_set_expr_location_unshare (x, loc);\n }\n \f"}, {"sha": "58bdffff6ad18e77edac5e5d58f7ddcad5ffa8b6", "filename": "gcc/tree-core.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d876207f939fcac31113cfb9119ed8398d4775db/gcc%2Ftree-core.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d876207f939fcac31113cfb9119ed8398d4775db/gcc%2Ftree-core.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-core.h?ref=d876207f939fcac31113cfb9119ed8398d4775db", "patch": "@@ -1877,10 +1877,6 @@ extern GTY(()) builtin_info_type builtin_info;\n /* If nonzero, an upper limit on alignment of structure fields, in bits,  */\n extern unsigned int maximum_field_alignment;\n \n-/* Nonzero means lvalues are limited to those valid in pedantic ANSI C.\n-   Zero means allow extended lvalues.  */\n-extern int pedantic_lvalues;\n-\n /* Points to the FUNCTION_DECL of the function whose body we are reading.  */\n extern GTY(()) tree current_function_decl;\n "}]}