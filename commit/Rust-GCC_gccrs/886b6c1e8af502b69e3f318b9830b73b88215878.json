{"sha": "886b6c1e8af502b69e3f318b9830b73b88215878", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg2YjZjMWU4YWY1MDJiNjllM2YzMThiOTgzMGI3M2I4ODIxNTg3OA==", "commit": {"author": {"name": "YiFei Zhu", "email": "zhuyifei1999@gmail.com", "date": "2021-04-22T10:05:57Z"}, "committer": {"name": "David Faust", "email": "david.faust@oracle.com", "date": "2021-04-23T16:56:21Z"}, "message": "bpf: allow BSS symbols to be global symbols\n\nPrior to this, a BSS declaration such as:\n\n  int foo;\n  static int bar;\n\nGenerates:\n\n  .global foo\n  .local  foo\n  .comm   foo,4,4\n  .local  bar\n  .comm\t  bar,4,4\n\nCreating symbols:\n\n  0000000000000000 b foo\n  0000000000000004 b bar\n\nBoth symbols are local. However, libbpf bpf_object__variable_offset\nrquires symbols to be STB_GLOBAL & STT_OBJECT for data section lookup.\nThis patch makes the same declaration generate:\n\n  .global foo\n  .type   foo, @object\n  .lcomm  foo,4,4\n  .local  bar\n  .comm   bar,4,4\n\nCreating symbols:\n\n  0000000000000000 B foo\n  0000000000000004 b bar\n\nAnd libbpf will be okay with looking up the global symbol \"foo\".\n\n2021-04-22  YiFei Zhu  <zhuyifei1999@gmail.com>\n\ngcc/\n\n\t* config/bpf/bpf.h (ASM_OUTPUT_ALIGNED_BSS): Use .type and .lcomm.", "tree": {"sha": "f0c571bf02002a92edeb420d9c6d8b0724c80f95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0c571bf02002a92edeb420d9c6d8b0724c80f95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/886b6c1e8af502b69e3f318b9830b73b88215878", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/886b6c1e8af502b69e3f318b9830b73b88215878", "html_url": "https://github.com/Rust-GCC/gccrs/commit/886b6c1e8af502b69e3f318b9830b73b88215878", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/886b6c1e8af502b69e3f318b9830b73b88215878/comments", "author": {"login": "zhuyifei1999", "id": 2096920, "node_id": "MDQ6VXNlcjIwOTY5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2096920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhuyifei1999", "html_url": "https://github.com/zhuyifei1999", "followers_url": "https://api.github.com/users/zhuyifei1999/followers", "following_url": "https://api.github.com/users/zhuyifei1999/following{/other_user}", "gists_url": "https://api.github.com/users/zhuyifei1999/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhuyifei1999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhuyifei1999/subscriptions", "organizations_url": "https://api.github.com/users/zhuyifei1999/orgs", "repos_url": "https://api.github.com/users/zhuyifei1999/repos", "events_url": "https://api.github.com/users/zhuyifei1999/events{/privacy}", "received_events_url": "https://api.github.com/users/zhuyifei1999/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dafaust", "id": 4460334, "node_id": "MDQ6VXNlcjQ0NjAzMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4460334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dafaust", "html_url": "https://github.com/dafaust", "followers_url": "https://api.github.com/users/dafaust/followers", "following_url": "https://api.github.com/users/dafaust/following{/other_user}", "gists_url": "https://api.github.com/users/dafaust/gists{/gist_id}", "starred_url": "https://api.github.com/users/dafaust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dafaust/subscriptions", "organizations_url": "https://api.github.com/users/dafaust/orgs", "repos_url": "https://api.github.com/users/dafaust/repos", "events_url": "https://api.github.com/users/dafaust/events{/privacy}", "received_events_url": "https://api.github.com/users/dafaust/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a662e103e911af935aa5c601051c135986ce3de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a662e103e911af935aa5c601051c135986ce3de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a662e103e911af935aa5c601051c135986ce3de"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "4c5b19e262b98bce4df359a213db700f9b1e130c", "filename": "gcc/config/bpf/bpf.h", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/886b6c1e8af502b69e3f318b9830b73b88215878/gcc%2Fconfig%2Fbpf%2Fbpf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/886b6c1e8af502b69e3f318b9830b73b88215878/gcc%2Fconfig%2Fbpf%2Fbpf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbpf%2Fbpf.h?ref=886b6c1e8af502b69e3f318b9830b73b88215878", "patch": "@@ -422,9 +422,15 @@ enum reg_class\n    Try to use asm_output_aligned_bss to implement this macro.  */\n \n #define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN)\t\\\n-  do {\t\t\t\t\t\t\t\t\\\n-    ASM_OUTPUT_ALIGNED_LOCAL (FILE, NAME, SIZE, ALIGN);\t\t\\\n-  } while (0)\n+  do\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      ASM_OUTPUT_TYPE_DIRECTIVE (FILE, NAME, \"object\");\t\t\t\\\n+      fprintf ((FILE), \"%s\", \"\\t.lcomm\\t\");\t\t\t\t\\\n+      assemble_name ((FILE), (NAME));\t\t\t\t\t\\\n+      fprintf ((FILE), \",\" HOST_WIDE_INT_PRINT_UNSIGNED \",%u\\n\",\t\\\n+\t       (SIZE), (ALIGN) / BITS_PER_UNIT);\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  while (0)\n \n /*** Output and Generation of Labels.  */\n "}]}