{"sha": "c3f23a53ba8aa5c616463c1ae881de4349b1b21d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNmMjNhNTNiYThhYTVjNjE2NDYzYzFhZTg4MWRlNDM0OWIxYjIxZA==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2001-12-14T06:36:14Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2001-12-14T06:36:14Z"}, "message": "attribs.c (c_common_attribute_table): Swap decl_req and type_req for the mode attribute.\n\n        * attribs.c (c_common_attribute_table): Swap decl_req and type_req\n\tfor the mode attribute.\n        (handle_mode_attribute): Handle types, not decls.\n\nFrom-SVN: r47990", "tree": {"sha": "0206709f85ba3245fab535963e7a39aa96a96127", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0206709f85ba3245fab535963e7a39aa96a96127"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3f23a53ba8aa5c616463c1ae881de4349b1b21d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3f23a53ba8aa5c616463c1ae881de4349b1b21d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3f23a53ba8aa5c616463c1ae881de4349b1b21d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3f23a53ba8aa5c616463c1ae881de4349b1b21d/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "803e889402a3683f6c40af790e0c9e24051148af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/803e889402a3683f6c40af790e0c9e24051148af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/803e889402a3683f6c40af790e0c9e24051148af"}], "stats": {"total": 17, "additions": 6, "deletions": 11}, "files": [{"sha": "f02961dd82013b719f9d155f213de65699e44a40", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3f23a53ba8aa5c616463c1ae881de4349b1b21d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3f23a53ba8aa5c616463c1ae881de4349b1b21d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c3f23a53ba8aa5c616463c1ae881de4349b1b21d", "patch": "@@ -1,4 +1,4 @@\n-2001-12-09  Aldy Hernandez  <aldyh@redhat.com>\n+2001-12-13  Aldy Hernandez  <aldyh@redhat.com>\n \n         * attribs.c (c_common_attribute_table): Swap decl_req and type_req\n \tfor the mode attribute."}, {"sha": "73d9d39961f267021cb1da0d161795dfd0978da1", "filename": "gcc/attribs.c", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3f23a53ba8aa5c616463c1ae881de4349b1b21d/gcc%2Fattribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3f23a53ba8aa5c616463c1ae881de4349b1b21d/gcc%2Fattribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.c?ref=c3f23a53ba8aa5c616463c1ae881de4349b1b21d", "patch": "@@ -120,7 +120,7 @@ static const struct attribute_spec c_common_attribute_table[] =\n \t\t\t      handle_constructor_attribute },\n   { \"destructor\",             0, 0, true,  false, false,\n \t\t\t      handle_destructor_attribute },\n-  { \"mode\",                   1, 1, true,  false, false,\n+  { \"mode\",                   1, 1, false,  true, false,\n \t\t\t      handle_mode_attribute },\n   { \"section\",                1, 1, true,  false, false,\n \t\t\t      handle_section_attribute },\n@@ -761,8 +761,7 @@ handle_mode_attribute (node, name, args, flags, no_add_attrs)\n      int flags ATTRIBUTE_UNUSED;\n      bool *no_add_attrs;\n {\n-  tree decl = *node;\n-  tree type = TREE_TYPE (decl);\n+  tree type = *node;\n \n   *no_add_attrs = true;\n \n@@ -786,7 +785,7 @@ handle_mode_attribute (node, name, args, flags, no_add_attrs)\n \t  p = newp;\n \t}\n \n-      /* Give this decl a type with the specified mode.\n+      /* Change this type to have a type with the specified mode.\n \t First check for the special modes.  */\n       if (! strcmp (p, \"byte\"))\n \tmode = byte_mode;\n@@ -805,12 +804,8 @@ handle_mode_attribute (node, name, args, flags, no_add_attrs)\n \t\t\t\t\t     TREE_UNSIGNED (type))))\n \terror (\"no data type for mode `%s'\", p);\n       else\n-\t{\n-\t  TREE_TYPE (decl) = type = typefm;\n-\t  DECL_SIZE (decl) = DECL_SIZE_UNIT (decl) = 0;\n-\t  if (TREE_CODE (decl) != FIELD_DECL)\n-\t    layout_decl (decl, 0);\n-\t}\n+\t*node = typefm;\n+        /* No need to layout the type here.  The caller should do this.  */\n     }\n \n   return NULL_TREE;"}]}