{"sha": "a2fef3a4f27336be71d27d73fbf037173c6b0b9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJmZWYzYTRmMjczMzZiZTcxZDI3ZDczZmJmMDM3MTczYzZiMGI5ZQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-01-24T22:27:20Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-01-24T22:27:20Z"}, "message": "cris.c (TARGET_PROMOTE_FUNCTION_ARGS): New.\n\n\t* config/cris/cris.c (TARGET_PROMOTE_FUNCTION_ARGS): New.\n\t(TARGET_STRUCT_VALUE_RTX): Likewise.\n\t(cris_struct_value_rtx): Likewise.\n\t* config/cris/cris.h (PROMOTE_FUNCTION_ARGS): Remove.\n\t(CRIS_STACKADJ_REG): Use CRIS_STRUCT_VALUE_REGNUM instead of\n\tSTRUCT_VALUE_REGNUM.\n\t(STRUCT_VALUE_REGNUM): Rename to CRIS_STRUCT_VALUE_REGNUM.\n\nFrom-SVN: r76525", "tree": {"sha": "b08672aaa7ae65005791165f3b57c165cea4d9cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b08672aaa7ae65005791165f3b57c165cea4d9cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2fef3a4f27336be71d27d73fbf037173c6b0b9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2fef3a4f27336be71d27d73fbf037173c6b0b9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2fef3a4f27336be71d27d73fbf037173c6b0b9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2fef3a4f27336be71d27d73fbf037173c6b0b9e/comments", "author": null, "committer": null, "parents": [{"sha": "8cd2bdca39c5eb59e6822b48a96f18a6348b1931", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cd2bdca39c5eb59e6822b48a96f18a6348b1931", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cd2bdca39c5eb59e6822b48a96f18a6348b1931"}], "stats": {"total": 46, "additions": 37, "deletions": 9}, "files": [{"sha": "aebf32359cdb2ec7a9054c277394e041cc07707a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2fef3a4f27336be71d27d73fbf037173c6b0b9e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2fef3a4f27336be71d27d73fbf037173c6b0b9e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a2fef3a4f27336be71d27d73fbf037173c6b0b9e", "patch": "@@ -1,3 +1,13 @@\n+2004-01-24  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/cris/cris.c (TARGET_PROMOTE_FUNCTION_ARGS): New.\n+\t(TARGET_STRUCT_VALUE_RTX): Likewise.\n+\t(cris_struct_value_rtx): Likewise.\n+\t* config/cris/cris.h (PROMOTE_FUNCTION_ARGS): Remove.\n+\t(CRIS_STACKADJ_REG): Use CRIS_STRUCT_VALUE_REGNUM instead of\n+\tSTRUCT_VALUE_REGNUM.\n+\t(STRUCT_VALUE_REGNUM): Rename to CRIS_STRUCT_VALUE_REGNUM.\n+\n 2004-01-24  Ian Lance Taylor  <ian@wasabisystems.com>\n \n \tPR bootstrap/13848"}, {"sha": "77d421d11fd84b1a29b02ee26161f6eab91256fb", "filename": "gcc/config/cris/cris.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2fef3a4f27336be71d27d73fbf037173c6b0b9e/gcc%2Fconfig%2Fcris%2Fcris.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2fef3a4f27336be71d27d73fbf037173c6b0b9e/gcc%2Fconfig%2Fcris%2Fcris.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.c?ref=a2fef3a4f27336be71d27d73fbf037173c6b0b9e", "patch": "@@ -92,6 +92,8 @@ static void cris_print_index (rtx, FILE *);\n \n static struct machine_function * cris_init_machine_status (void);\n \n+static rtx cris_struct_value_rtx (tree, int);\n+\n static int cris_initial_frame_pointer_offset (void);\n \n static int saved_regs_mentioned (rtx);\n@@ -176,6 +178,12 @@ int cris_cpu_version = CRIS_DEFAULT_CPU_VERSION;\n #undef TARGET_ADDRESS_COST\n #define TARGET_ADDRESS_COST cris_address_cost\n \n+#undef TARGET_PROMOTE_FUNCTION_ARGS\n+#define TARGET_PROMOTE_FUNCTION_ARGS hook_bool_tree_true\n+\n+#undef TARGET_STRUCT_VALUE_RTX\n+#define TARGET_STRUCT_VALUE_RTX cris_struct_value_rtx\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \n /* Predicate functions.  */\n@@ -3177,6 +3185,15 @@ cris_output_addr_const (FILE *file, rtx x)\n     }\n }\n \n+/* Worker function for TARGET_STRUCT_VALUE_RTX.  */\n+\n+static rtx\n+cris_struct_value_rtx (tree fntype ATTRIBUTE_UNUSED,\n+\t\t       int incoming ATTRIBUTE_UNUSED)\n+{\n+  return gen_rtx_REG (Pmode, CRIS_STRUCT_VALUE_REGNUM);\n+}\n+\n #if 0\n /* Various small functions to replace macros.  Only called from a\n    debugger.  They might collide with gcc functions or system functions,"}, {"sha": "be529a952ef914e2506fabb25a3dcf6abcc05d1f", "filename": "gcc/config/cris/cris.h", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2fef3a4f27336be71d27d73fbf037173c6b0b9e/gcc%2Fconfig%2Fcris%2Fcris.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2fef3a4f27336be71d27d73fbf037173c6b0b9e/gcc%2Fconfig%2Fcris%2Fcris.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.h?ref=a2fef3a4f27336be71d27d73fbf037173c6b0b9e", "patch": "@@ -1,5 +1,6 @@\n /* Definitions for GCC.  Part of the machine description for CRIS.\n-   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004\n+   Free Software Foundation, Inc.\n    Contributed by Axis Communications.  Written by Hans-Peter Nilsson.\n \n This file is part of GCC.\n@@ -476,7 +477,8 @@ extern int target_flags;\n \n #define UNITS_PER_WORD 4\n \n-/* A combination of defining PROMOTE_MODE, PROMOTE_FUNCTION_ARGS,\n+/* A combination of defining PROMOTE_MODE,\n+   TARGET_PROMOTE_FUNCTION_ARGS that always returns true,\n    PROMOTE_FOR_CALL_ONLY and *not* defining PROMOTE_PROTOTYPES gives the\n    best code size and speed for gcc, ipps and products in gcc-2.7.2.  */\n #define CRIS_PROMOTED_MODE(MODE, UNSIGNEDP, TYPE) \\\n@@ -486,14 +488,12 @@ extern int target_flags;\n #define PROMOTE_MODE(MODE, UNSIGNEDP, TYPE)  \\\n   (MODE) = CRIS_PROMOTED_MODE (MODE, UNSIGNEDP, TYPE)\n \n-#define PROMOTE_FUNCTION_ARGS\n-\n /* Defining PROMOTE_FUNCTION_RETURN in gcc-2.7.2 uncovers bug 981110 (even\n    if defining FUNCTION_VALUE with MODE as PROMOTED_MODE ;-)\n \n    FIXME: Report this when cris.h is part of GCC, so others can easily\n    see the problem.  Maybe check other systems that define\n-   PROMOTE_FUNCTION_RETURN.  */\n+   TARGET_PROMOTE_FUNCTION_RETURN that always returns true.  */\n #define PROMOTE_FOR_CALL_ONLY\n \n /* We will be using prototype promotion, so they will be 32 bit.  */\n@@ -832,7 +832,7 @@ enum reg_class {NO_REGS, ALL_REGS, LIM_REG_CLASSES};\n   (IN_RANGE ((N), 0, 3) ? (CRIS_FIRST_ARG_REG + 3 - (N)) : INVALID_REGNUM)\n \n /* Store the stack adjustment in the structure-return-address register.  */\n-#define CRIS_STACKADJ_REG STRUCT_VALUE_REGNUM\n+#define CRIS_STACKADJ_REG CRIS_STRUCT_VALUE_REGNUM\n #define EH_RETURN_STACKADJ_RTX gen_rtx_REG (SImode, CRIS_STACKADJ_REG)\n \n #define EH_RETURN_HANDLER_RTX \\\n@@ -897,8 +897,9 @@ enum reg_class {NO_REGS, ALL_REGS, LIM_REG_CLASSES};\n /* Node: Stack Arguments */\n \n /* Since many parameters take up one register each in any case,\n-   PROMOTE_PROTOTYPES would seem like a good idea, but measurements\n-   indicate that a combination using PROMOTE_MODE is better.  */\n+   defining TARGET_PROMOTE_PROTOTYPES that always returns true would\n+   seem like a good idea, but measurements indicate that a combination\n+   using PROMOTE_MODE is better.  */\n \n #define ACCUMULATE_OUTGOING_ARGS 1\n \n@@ -992,7 +993,7 @@ struct cum_args {int regs;};\n  ((unsigned) int_size_in_bytes (TYPE) > CRIS_MAX_ARGS_IN_REGS * UNITS_PER_WORD)\n #endif\n \n-#define STRUCT_VALUE_REGNUM ((CRIS_FIRST_ARG_REG) - 1)\n+#define CRIS_STRUCT_VALUE_REGNUM ((CRIS_FIRST_ARG_REG) - 1)\n \n \n /* Node: Caller Saves */"}]}