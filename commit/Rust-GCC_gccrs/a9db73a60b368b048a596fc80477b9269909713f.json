{"sha": "a9db73a60b368b048a596fc80477b9269909713f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTlkYjczYTYwYjM2OGIwNDhhNTk2ZmM4MDQ3N2I5MjY5OTA5NzEzZg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-07T04:34:39Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-07T04:34:39Z"}, "message": "Fix whitespace in previous change.\n\nFrom-SVN: r6033", "tree": {"sha": "14cdf1fbdbd0ad7b95c8c45b776bb594ca93ce30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14cdf1fbdbd0ad7b95c8c45b776bb594ca93ce30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9db73a60b368b048a596fc80477b9269909713f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9db73a60b368b048a596fc80477b9269909713f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9db73a60b368b048a596fc80477b9269909713f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9db73a60b368b048a596fc80477b9269909713f/comments", "author": null, "committer": null, "parents": [{"sha": "b3fe46340aaf3611a87f190bd4ac52d3d80e219e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3fe46340aaf3611a87f190bd4ac52d3d80e219e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3fe46340aaf3611a87f190bd4ac52d3d80e219e"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "68abcaff640e8c4bde6041b72587fe803d9d9e02", "filename": "gcc/config/m88k/m88k.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9db73a60b368b048a596fc80477b9269909713f/gcc%2Fconfig%2Fm88k%2Fm88k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9db73a60b368b048a596fc80477b9269909713f/gcc%2Fconfig%2Fm88k%2Fm88k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.c?ref=a9db73a60b368b048a596fc80477b9269909713f", "patch": "@@ -1344,11 +1344,12 @@ real_or_0_operand (op, mode)\n /* Return true if OP is valid to use in the context of logic aritmethic\n    on condition codes. */\n \n-int partial_ccmode_register_operand(op,mode)\n+int\n+partial_ccmode_register_operand (op, mode)\n      rtx op;\n      enum machine_mode mode;\n {\n-  return (register_operand(op,CCmode) || register_operand(op,CCEVENmode));\n+  return register_operand (op, CCmode) || register_operand (op, CCEVENmode);\n }\n \n /* Return true if OP is a relational operator.  */\n@@ -1376,11 +1377,12 @@ relop (op, mode)\n     }\n }\n \n-int even_relop(op,mode)\n+int\n+even_relop (op, mode)\n      rtx op;\n      enum machine_mode mode;\n {\n-  switch (GET_CODE(op))\n+  switch (GET_CODE (op))\n     {\n     case EQ:\n     case LT:\n@@ -1393,11 +1395,12 @@ int even_relop(op,mode)\n     }\n }\n \n-int odd_relop(op,mode)\n+int\n+odd_relop (op, mode)\n      rtx op;\n      enum machine_mode mode;\n {\n-  switch (GET_CODE(op))\n+  switch (GET_CODE (op))\n     {\n     case NE:\n     case LE:\n@@ -2849,7 +2852,7 @@ print_operand (file, x, code)\n \n     case '!': /* Reverse the following condition. */\n       sequencep++;\n-      reversep=1;\n+      reversep = 1;\n       return; \n     case 'R': /* reverse the condition of the next print_operand\n \t\t if operand is a label_ref.  */"}]}