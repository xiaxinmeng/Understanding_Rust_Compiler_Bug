{"sha": "77636079f9e3661e3e2321b37a29c20284449f9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc2MzYwNzlmOWUzNjYxZTNlMjMyMWIzN2EyOWMyMDI4NDQ0OWY5ZQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-11-25T17:34:11Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-11-25T17:34:11Z"}, "message": "(expand_value_return): Don't emit move between differing modes when PROMOTE_FUNCTION_RETURN is defined...\n\n(expand_value_return): Don't emit move between differing\nmodes when PROMOTE_FUNCTION_RETURN is defined; convert instead.\n\nFrom-SVN: r2795", "tree": {"sha": "b1b3cbd8aa97fdbdf688c80916ddfa5c17fa0d03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1b3cbd8aa97fdbdf688c80916ddfa5c17fa0d03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77636079f9e3661e3e2321b37a29c20284449f9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77636079f9e3661e3e2321b37a29c20284449f9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77636079f9e3661e3e2321b37a29c20284449f9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77636079f9e3661e3e2321b37a29c20284449f9e/comments", "author": null, "committer": null, "parents": [{"sha": "32436219b6f789d1400d15e1da117d741033bf2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32436219b6f789d1400d15e1da117d741033bf2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32436219b6f789d1400d15e1da117d741033bf2e"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "6719a5c0cf65aa9187532463c5eb4f7736e26a18", "filename": "gcc/stmt.c", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77636079f9e3661e3e2321b37a29c20284449f9e/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77636079f9e3661e3e2321b37a29c20284449f9e/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=77636079f9e3661e3e2321b37a29c20284449f9e", "patch": "@@ -2185,7 +2185,26 @@ expand_value_return (val)\n      unless it's already there.  */\n \n   if (return_reg != val)\n-    emit_move_insn (return_reg, val);\n+    {\n+#ifdef PROMOTE_FUNCTION_RETURN\n+      enum machine_mode mode = DECL_MODE (DECL_RESULT (current_function_decl));\n+      tree type = TREE_TYPE (DECL_RESULT (current_function_decl));\n+      int unsignedp = TREE_UNSIGNED (type);\n+\n+      if (TREE_CODE (type) == INTEGER_TYPE || TREE_CODE (type) == ENUMERAL_TYPE\n+\t  || TREE_CODE (type) == BOOLEAN_TYPE || TREE_CODE (type) == CHAR_TYPE\n+\t  || TREE_CODE (type) == REAL_TYPE || TREE_CODE (type) == POINTER_TYPE\n+\t  || TREE_CODE (type) == OFFSET_TYPE)\n+\t{\n+\t  PROMOTE_MODE (mode, unsignedp, type);\n+\t}\n+\n+      if (GET_MODE (val) != VOIDmode && GET_MODE (val) != mode)\n+\tconvert_to_mode (return_reg, val, unsignedp);\n+      else\n+#endif\n+\temit_move_insn (return_reg, val);\n+    }\n   if (GET_CODE (return_reg) == REG\n       && REGNO (return_reg) < FIRST_PSEUDO_REGISTER)\n     emit_insn (gen_rtx (USE, VOIDmode, return_reg));"}]}