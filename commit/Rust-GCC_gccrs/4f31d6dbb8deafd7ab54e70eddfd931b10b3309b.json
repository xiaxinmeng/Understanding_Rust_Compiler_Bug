{"sha": "4f31d6dbb8deafd7ab54e70eddfd931b10b3309b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGYzMWQ2ZGJiOGRlYWZkN2FiNTRlNzBlZGRmZDkzMWIxMGIzMzA5Yg==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2020-01-24T19:11:47Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-04T09:11:10Z"}, "message": "[Ada] Implement AI12-0275 (Make subtype_mark optional in object renamings)\n\n2020-06-04  Gary Dismukes  <dismukes@adacore.com>\n\ngcc/ada/\n\n\t* par-ch3.adb (P_Identifier_Declarations): Add parsing of object\n\trenamings that have neither a subtype_mark nor an\n\taccess_definition. Issue an error if the version is earlier than\n\tAda_2020, and suggest using -gnatX.\n\t* sem_ch8.adb (Analyze_Object_Renaming): Handle\n\tobject_renaming_declarations that don't have an explicit\n\tsubtype. Errors are issued when the name is inappropriate or\n\tambiguous, and otherwise the Etype of the renaming entity is set\n\tfrom the Etype of the renamed object.\n\t* sem_util.adb (Has_Null_Exclusion): Allow for the case of no\n\tsubtype given in an N_Object_Renaming_Declaration.\n\t* sprint.adb (Sprint_Node_Actual): Handle printing of\n\tN_Object_Renaming_Declarations that are specified without an\n\texplicit subtype.", "tree": {"sha": "fc6f000859ceafe678afb79e961ac60f729e277d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc6f000859ceafe678afb79e961ac60f729e277d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f31d6dbb8deafd7ab54e70eddfd931b10b3309b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f31d6dbb8deafd7ab54e70eddfd931b10b3309b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f31d6dbb8deafd7ab54e70eddfd931b10b3309b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f31d6dbb8deafd7ab54e70eddfd931b10b3309b/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96cd8940614e0f87aca7bb6064a45710aca6212f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96cd8940614e0f87aca7bb6064a45710aca6212f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96cd8940614e0f87aca7bb6064a45710aca6212f"}], "stats": {"total": 152, "additions": 145, "deletions": 7}, "files": [{"sha": "9065f4bb75ced1921f6c19ab82a74d11e9fdaedb", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f31d6dbb8deafd7ab54e70eddfd931b10b3309b/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f31d6dbb8deafd7ab54e70eddfd931b10b3309b/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=4f31d6dbb8deafd7ab54e70eddfd931b10b3309b", "patch": "@@ -1480,6 +1480,32 @@ package body Ch3 is\n          Done := False;\n          return;\n \n+      --  AI12-0275: Object renaming declaration without subtype_mark or\n+      --  access_definition\n+\n+      elsif Token = Tok_Renames then\n+         if Ada_Version < Ada_2020 then\n+            Error_Msg_SC\n+              (\"object renaming without subtype is an Ada 202x feature\");\n+            Error_Msg_SC (\"\\compile with -gnatX\");\n+         end if;\n+\n+         Scan; -- past renames\n+\n+         Decl_Node :=\n+           New_Node (N_Object_Renaming_Declaration, Ident_Sloc);\n+         Set_Name (Decl_Node, P_Name);\n+         Set_Defining_Identifier (Decl_Node, Idents (1));\n+\n+         P_Aspect_Specifications (Decl_Node, Semicolon => False);\n+\n+         T_Semicolon;\n+\n+         Append (Decl_Node, Decls);\n+         Done := False;\n+\n+         return;\n+\n       --  Otherwise we have an error situation\n \n       else"}, {"sha": "4a730fc8ae8fb39f6e17bbded55443fe4558d6be", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 102, "deletions": 4, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f31d6dbb8deafd7ab54e70eddfd931b10b3309b/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f31d6dbb8deafd7ab54e70eddfd931b10b3309b/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=4f31d6dbb8deafd7ab54e70eddfd931b10b3309b", "patch": "@@ -906,10 +906,108 @@ package body Sem_Ch8 is\n             Find_Type (Subtype_Mark (N));\n          end if;\n \n-      elsif Present (Subtype_Mark (N)) then\n-         Find_Type (Subtype_Mark (N));\n-         T := Entity (Subtype_Mark (N));\n-         Analyze (Nam);\n+      elsif Present (Subtype_Mark (N))\n+        or else not Present (Access_Definition (N))\n+      then\n+         if Present (Subtype_Mark (N)) then\n+            Find_Type (Subtype_Mark (N));\n+            T := Entity (Subtype_Mark (N));\n+            Analyze (Nam);\n+\n+         --  AI12-0275: Case of object renaming without a subtype_mark\n+\n+         else\n+            Analyze (Nam);\n+\n+            --  Normal case of no overloading in object name\n+\n+            if not Is_Overloaded (Nam) then\n+\n+               --  Catch error cases (such as attempting to rename a procedure\n+               --  or package) using the shorthand form.\n+\n+               if No (Etype (Nam))\n+                 or else Etype (Nam) = Standard_Void_Type\n+               then\n+                  Error_Msg_N (\"object name expected in renaming\", Nam);\n+\n+                  Set_Ekind (Id, E_Variable);\n+                  Set_Etype (Id, Any_Type);\n+\n+                  return;\n+\n+               else\n+                  T := Etype (Nam);\n+               end if;\n+\n+            --  Case of overloaded name, which will be illegal if there's more\n+            --  than one acceptable interpretation (such as overloaded function\n+            --  calls).\n+\n+            else\n+               declare\n+                  I    : Interp_Index;\n+                  I1   : Interp_Index;\n+                  It   : Interp;\n+                  It1  : Interp;\n+                  Nam1 : Entity_Id;\n+\n+               begin\n+                  --  More than one candidate interpretation is available\n+\n+                  --  Remove procedure calls, which syntactically cannot appear\n+                  --  in this context, but which cannot be removed by type\n+                  --  checking, because the context does not impose a type.\n+\n+                  Get_First_Interp (Nam, I, It);\n+                  while Present (It.Typ) loop\n+                     if It.Typ = Standard_Void_Type then\n+                        Remove_Interp (I);\n+                     end if;\n+\n+                     Get_Next_Interp (I, It);\n+                  end loop;\n+\n+                  Get_First_Interp (Nam, I, It);\n+                  I1  := I;\n+                  It1 := It;\n+\n+                  --  If there's no type present, we have an error case (such\n+                  --  as overloaded procedures named in the object renaming).\n+\n+                  if No (It.Typ) then\n+                     Error_Msg_N (\"object name expected in renaming\", Nam);\n+\n+                     Set_Ekind (Id, E_Variable);\n+                     Set_Etype (Id, Any_Type);\n+\n+                     return;\n+                  end if;\n+\n+                  Get_Next_Interp (I, It);\n+\n+                  if Present (It.Typ) then\n+                     Nam1  := It1.Nam;\n+                     It1 := Disambiguate (Nam, I1, I, Any_Type);\n+\n+                     if It1 = No_Interp then\n+                        Error_Msg_N (\"ambiguous name in object renaming\", Nam);\n+\n+                        Error_Msg_Sloc := Sloc (It.Nam);\n+                        Error_Msg_N (\"\\\\possible interpretation#!\", Nam);\n+\n+                        Error_Msg_Sloc := Sloc (Nam1);\n+                        Error_Msg_N (\"\\\\possible interpretation#!\", Nam);\n+\n+                        return;\n+                     end if;\n+                  end if;\n+\n+                  Set_Etype (Nam, It1.Typ);\n+                  T := It1.Typ;\n+               end;\n+            end if;\n+         end if;\n \n          --  The object renaming declaration may become Ghost if it renames a\n          --  Ghost entity."}, {"sha": "49594e47aea923ccbe8946e59b3ec0da6d0c6056", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f31d6dbb8deafd7ab54e70eddfd931b10b3309b/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f31d6dbb8deafd7ab54e70eddfd931b10b3309b/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=4f31d6dbb8deafd7ab54e70eddfd931b10b3309b", "patch": "@@ -11726,14 +11726,22 @@ package body Sem_Util is\n \n          when N_Component_Definition\n             | N_Formal_Object_Declaration\n-            | N_Object_Renaming_Declaration\n          =>\n             if Present (Subtype_Mark (N)) then\n                return Null_Exclusion_Present (N);\n             else pragma Assert (Present (Access_Definition (N)));\n                return Null_Exclusion_Present (Access_Definition (N));\n             end if;\n \n+         when N_Object_Renaming_Declaration =>\n+            if Present (Subtype_Mark (N)) then\n+               return Null_Exclusion_Present (N);\n+            elsif Present (Access_Definition (N)) then\n+               return Null_Exclusion_Present (Access_Definition (N));\n+            else\n+               return False;  -- Case of no subtype in renaming (AI12-0275)\n+            end if;\n+\n          when N_Discriminant_Specification =>\n             if Nkind (Discriminant_Type (N)) = N_Access_Definition then\n                return Null_Exclusion_Present (Discriminant_Type (N));"}, {"sha": "f177981de70f7478b6012e3d68f019b7084285d5", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f31d6dbb8deafd7ab54e70eddfd931b10b3309b/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f31d6dbb8deafd7ab54e70eddfd931b10b3309b/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=4f31d6dbb8deafd7ab54e70eddfd931b10b3309b", "patch": "@@ -2441,14 +2441,15 @@ package body Sprint is\n             Write_Indent;\n             Set_Debug_Sloc;\n             Sprint_Node (Defining_Identifier (Node));\n-            Write_Str (\" : \");\n \n             --  Ada 2005 (AI-230): Access renamings\n \n             if Present (Access_Definition (Node)) then\n+               Write_Str (\" : \");\n                Sprint_Node (Access_Definition (Node));\n \n             elsif Present (Subtype_Mark (Node)) then\n+               Write_Str (\" : \");\n \n                --  Ada 2005 (AI-423): Object renaming with a null exclusion\n \n@@ -2458,8 +2459,13 @@ package body Sprint is\n \n                Sprint_Node (Subtype_Mark (Node));\n \n+            --  AI12-0275: Object_Renaming_Declaration without explicit subtype\n+\n+            elsif Ada_Version >= Ada_2020 then\n+               null;\n+\n             else\n-               Write_Str (\" ??? \");\n+               Write_Str (\" :  ??? \");\n             end if;\n \n             Write_Str_With_Col_Check (\" renames \");"}]}