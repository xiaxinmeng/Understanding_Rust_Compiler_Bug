{"sha": "85b87c94afe309afc7be3fa3e5ad6e303affe2ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODViODdjOTRhZmUzMDlhZmM3YmUzZmEzZTVhZDZlMzAzYWZmZTJlYQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2004-05-18T02:55:41Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2004-05-18T02:55:41Z"}, "message": "Forgot to commit.\n\nFrom-SVN: r81969", "tree": {"sha": "dc15d72c797cba9f36d3bcd1fbc6f1e7e6210d89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc15d72c797cba9f36d3bcd1fbc6f1e7e6210d89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85b87c94afe309afc7be3fa3e5ad6e303affe2ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85b87c94afe309afc7be3fa3e5ad6e303affe2ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85b87c94afe309afc7be3fa3e5ad6e303affe2ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85b87c94afe309afc7be3fa3e5ad6e303affe2ea/comments", "author": null, "committer": null, "parents": [{"sha": "dd7473111a63cdeb442d1b74535405739bf7e866", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd7473111a63cdeb442d1b74535405739bf7e866", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd7473111a63cdeb442d1b74535405739bf7e866"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "e544992251c2e004f3d8704e3024c03ab1cbcc5e", "filename": "gcc/tree-ssa-copy.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85b87c94afe309afc7be3fa3e5ad6e303affe2ea/gcc%2Ftree-ssa-copy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85b87c94afe309afc7be3fa3e5ad6e303affe2ea/gcc%2Ftree-ssa-copy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copy.c?ref=85b87c94afe309afc7be3fa3e5ad6e303affe2ea", "patch": "@@ -272,11 +272,16 @@ cprop_into_stmt (tree stmt, varray_type const_and_copies)\n /* CONST_AND_COPIES is a table which maps an SSA_NAME to the current\n    known value for that SSA_NAME (or NULL if no value is known).  \n \n-   Propagate values from CONST_AND_COPIES into the PHI nodes of the\n-   successors of BB.  */\n+   NONZERO_VARS is the set SSA_NAMES known to have a nonzero value,\n+   even if we don't know their precise value.\n+\n+   Propagate values from CONST_AND_COPIES and NONZERO_VARS into the PHI\n+   nodes of the successors of BB.  */\n \n void\n-cprop_into_successor_phis (basic_block bb, varray_type const_and_copies)\n+cprop_into_successor_phis (basic_block bb,\n+\t\t\t   varray_type const_and_copies,\n+\t\t\t   bitmap nonzero_vars)\n {\n   edge e;\n \n@@ -342,6 +347,11 @@ cprop_into_successor_phis (basic_block bb, varray_type const_and_copies)\n \t  if (TREE_CODE (*orig_p) != SSA_NAME)\n \t    continue;\n \n+\t  /* If the alternative is known to have a nonzero value, record\n+\t     that fact in the PHI node itself for future use.  */\n+\t  if (bitmap_bit_p (nonzero_vars, SSA_NAME_VERSION (*orig_p)))\n+\t    PHI_ARG_NONZERO (phi, i) = true;\n+\n \t  /* If we have *ORIG_P in our constant/copy table, then replace\n \t     ORIG_P with its value in our constant/copy table.  */\n \t  new = VARRAY_TREE (const_and_copies, SSA_NAME_VERSION (*orig_p));"}]}