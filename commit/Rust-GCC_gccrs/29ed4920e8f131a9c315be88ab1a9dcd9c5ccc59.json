{"sha": "29ed4920e8f131a9c315be88ab1a9dcd9c5ccc59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjllZDQ5MjBlOGYxMzFhOWMzMTViZTg4YWIxYTlkY2Q5YzVjY2M1OQ==", "commit": {"author": {"name": "Ira Rosen", "email": "ira.rosen@linaro.org", "date": "2011-09-22T07:21:07Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2011-09-22T07:21:07Z"}, "message": "re PR middle-end/50451 (internal compiler error at tree-vect-loop.c:3557)\n\n\n        PR tree-optimization/50451\n        * tree-vect-slp.c (vect_get_constant_vectors): Don't fail for\n        constant operands in reduction.\n        (vect_get_slp_defs): Don't create vector operand for NULL scalar\n        operand.\n\nFrom-SVN: r179079", "tree": {"sha": "acf4c7ff9710dd5dd58db601b2596de7f7e45c83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/acf4c7ff9710dd5dd58db601b2596de7f7e45c83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29ed4920e8f131a9c315be88ab1a9dcd9c5ccc59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29ed4920e8f131a9c315be88ab1a9dcd9c5ccc59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29ed4920e8f131a9c315be88ab1a9dcd9c5ccc59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29ed4920e8f131a9c315be88ab1a9dcd9c5ccc59/comments", "author": null, "committer": null, "parents": [{"sha": "f0d070991398a5619b043ab830814b6df0d5898a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0d070991398a5619b043ab830814b6df0d5898a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0d070991398a5619b043ab830814b6df0d5898a"}], "stats": {"total": 42, "additions": 34, "deletions": 8}, "files": [{"sha": "164daa39e67f9f468e7abedb273d894848b6470e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29ed4920e8f131a9c315be88ab1a9dcd9c5ccc59/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29ed4920e8f131a9c315be88ab1a9dcd9c5ccc59/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=29ed4920e8f131a9c315be88ab1a9dcd9c5ccc59", "patch": "@@ -1,3 +1,11 @@\n+2011-09-22  Ira Rosen  <ira.rosen@linaro.org>\n+\n+\tPR tree-optimization/50451\n+\t* tree-vect-slp.c (vect_get_constant_vectors): Don't fail for\n+\tconstant operands in reduction.\n+\t(vect_get_slp_defs): Don't create vector operand for NULL scalar\n+\toperand.\n+\n 2011-09-22  David S. Miller  <davem@davemloft.net>\n \n \t* config/sparc/sparc.c (sparc_vis_init_builtins): Do not mark"}, {"sha": "0c9ffed25857db8204931c83bbafe97b633b9d0e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29ed4920e8f131a9c315be88ab1a9dcd9c5ccc59/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29ed4920e8f131a9c315be88ab1a9dcd9c5ccc59/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=29ed4920e8f131a9c315be88ab1a9dcd9c5ccc59", "patch": "@@ -1,3 +1,8 @@\n+2011-09-22  Ira Rosen  <ira.rosen@linaro.org>\n+\n+\tPR tree-optimization/50451\n+\t* gcc.dg/vect/pr50451.c: New test.\n+\n 2011-09-21  Ian Lance Taylor  <iant@google.com>\n \n \t* go.test/go-test.exp (errchk): Add special case for bug332."}, {"sha": "0733ea2ad5119325faafefb181f389107b5a7270", "filename": "gcc/testsuite/gcc.dg/vect/pr50451.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29ed4920e8f131a9c315be88ab1a9dcd9c5ccc59/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr50451.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29ed4920e8f131a9c315be88ab1a9dcd9c5ccc59/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr50451.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr50451.c?ref=29ed4920e8f131a9c315be88ab1a9dcd9c5ccc59", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_int } */\n+\n+int\n+foo (int integral, int decimal, int power_ten)\n+{\n+  while (power_ten > 0)\n+    {\n+      integral *= 10;\n+      decimal *= 10;\n+      power_ten--;\n+    }\n+\n+  return integral+decimal;\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */\n+"}, {"sha": "9171ba991b111d2d523866a523c895463b109aa5", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29ed4920e8f131a9c315be88ab1a9dcd9c5ccc59/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29ed4920e8f131a9c315be88ab1a9dcd9c5ccc59/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=29ed4920e8f131a9c315be88ab1a9dcd9c5ccc59", "patch": "@@ -1905,14 +1905,9 @@ vect_get_constant_vectors (tree op, slp_tree slp_node,\n   gimple def_stmt;\n   struct loop *loop;\n \n-  if (STMT_VINFO_DEF_TYPE (stmt_vinfo) == vect_reduction_def)\n+  if (STMT_VINFO_DEF_TYPE (stmt_vinfo) == vect_reduction_def\n+      && reduc_index != -1)\n     {\n-      if (reduc_index == -1)\n-        {\n-          VEC_free (tree, heap, *vec_oprnds);\n-          return;\n-        }\n-\n       op_num = reduc_index - 1;\n       op = gimple_op (stmt, reduc_index);\n       /* For additional copies (see the explanation of NUMBER_OF_COPIES below)\n@@ -2164,7 +2159,7 @@ vect_get_slp_defs (tree op0, tree op1, slp_tree slp_node,\n     return;\n \n   code = gimple_assign_rhs_code (first_stmt);\n-  if (get_gimple_rhs_class (code) != GIMPLE_BINARY_RHS || !vec_oprnds1)\n+  if (get_gimple_rhs_class (code) != GIMPLE_BINARY_RHS || !vec_oprnds1 || !op1)\n     return;\n \n   /* The number of vector defs is determined by the number of vector statements"}]}