{"sha": "2f97afcb1e412636ef3f3c2ede8f4cf365e76d29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY5N2FmY2IxZTQxMjYzNmVmM2YzYzJlZGU4ZjRjZjM2NWU3NmQyOQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-12-29T19:06:04Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-12-29T19:06:04Z"}, "message": "(expand_mult_highpart): Use convert_modes instead of\ngen_lowpart to do conversions.\n\nFrom-SVN: r8704", "tree": {"sha": "bc814dcd42418a0c79d03370a0d9e70592c6d1a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc814dcd42418a0c79d03370a0d9e70592c6d1a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f97afcb1e412636ef3f3c2ede8f4cf365e76d29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f97afcb1e412636ef3f3c2ede8f4cf365e76d29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f97afcb1e412636ef3f3c2ede8f4cf365e76d29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f97afcb1e412636ef3f3c2ede8f4cf365e76d29/comments", "author": null, "committer": null, "parents": [{"sha": "7b3ba71bda2c9e29a82d11397091147317064906", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b3ba71bda2c9e29a82d11397091147317064906", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b3ba71bda2c9e29a82d11397091147317064906"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "b2862b6de259edf6ceace15b3a4c9df0e3ed3bd6", "filename": "gcc/expmed.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f97afcb1e412636ef3f3c2ede8f4cf365e76d29/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f97afcb1e412636ef3f3c2ede8f4cf365e76d29/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=2f97afcb1e412636ef3f3c2ede8f4cf365e76d29", "patch": "@@ -2487,7 +2487,7 @@ expand_mult_highpart (mode, op0, cnst1, target, unsignedp)\n       tem = expand_mult (wider_mode, op0, wide_op1, NULL_RTX, unsignedp);\n       tem = expand_shift (RSHIFT_EXPR, wider_mode, tem,\n \t\t\t  build_int_2 (size, 0), NULL_RTX, 1);\n-      return gen_lowpart (mode, tem);\n+      return convert_modes (mode, wider_mode, tem, unsignedp);\n     }\n \n   if (target == 0)\n@@ -2532,7 +2532,7 @@ expand_mult_highpart (mode, op0, cnst1, target, unsignedp)\n \t      /* Extract the high half of the just generated product.  */\n \t      tem = expand_shift (RSHIFT_EXPR, wider_mode, tem,\n \t\t\t\t  build_int_2 (size, 0), NULL_RTX, 1);\n-\t      tem = gen_lowpart (mode, tem);\n+\t      tem = convert_modes (mode, wider_mode, tem, unsignedp);\n \t      /* We used the wrong signedness.  Adjust the result.  */\n \t      return expand_mult_highpart_adjust (mode, tem, op0, op1,\n \t\t\t\t\t\t  target, unsignedp);\n@@ -2553,7 +2553,7 @@ expand_mult_highpart (mode, op0, cnst1, target, unsignedp)\n   /* Extract the high half of the just generated product.  */\n   tem = expand_shift (RSHIFT_EXPR, wider_mode, tem,\n \t\t      build_int_2 (size, 0), NULL_RTX, 1);\n-  return gen_lowpart (mode, tem);\n+  return convert_modes (mode, wider_mode, tem, unsignedp);\n }\n \f\n /* Emit the code to divide OP0 by OP1, putting the result in TARGET"}]}