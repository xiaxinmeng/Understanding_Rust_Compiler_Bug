{"sha": "9f7c2bad52e51ec88a71c0d50826bfa2e6f44b15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY3YzJiYWQ1MmU1MWVjODhhNzFjMGQ1MDgyNmJmYTJlNmY0NGIxNQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-09-03T00:16:33Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-09-03T00:16:33Z"}, "message": "Daily bump.", "tree": {"sha": "f369270d1d1a548f368a253cb711c74a750ada81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f369270d1d1a548f368a253cb711c74a750ada81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f7c2bad52e51ec88a71c0d50826bfa2e6f44b15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f7c2bad52e51ec88a71c0d50826bfa2e6f44b15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f7c2bad52e51ec88a71c0d50826bfa2e6f44b15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f7c2bad52e51ec88a71c0d50826bfa2e6f44b15/comments", "author": null, "committer": null, "parents": [{"sha": "93b6b2f614eb692d1d8126ec6cb946984a9d01d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93b6b2f614eb692d1d8126ec6cb946984a9d01d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93b6b2f614eb692d1d8126ec6cb946984a9d01d7"}], "stats": {"total": 390, "additions": 389, "deletions": 1}, "files": [{"sha": "81cbe64b5a8ec2422cace153a2088691ccc05df3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f7c2bad52e51ec88a71c0d50826bfa2e6f44b15/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f7c2bad52e51ec88a71c0d50826bfa2e6f44b15/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f7c2bad52e51ec88a71c0d50826bfa2e6f44b15", "patch": "@@ -1,3 +1,86 @@\n+2021-09-02  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/17506\n+\tPR testsuite/37182\n+\t* tree-ssa-uninit.c (warn_uninit): Remove conditional guarding note.\n+\n+2021-09-02  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-loop-im.c (fill_always_executed_in_1): Refine\n+\tfix for PR78185 and continue processing when leaving\n+\tfinite inner loops.\n+\n+2021-09-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/99591\n+\t* match.pd: Demote operands of IFN_{ADD,SUB,MUL}_OVERFLOW if they\n+\twere promoted.\n+\n+2021-09-02  Richard Biener  <rguenther@suse.de>\n+\n+\tRevert:\n+\t2021-09-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/102155\n+\t* tree-ssa-loop-im.c (fill_always_executed_in_1): Iterate\n+\tover a part of the RPO array and do not recurse here.\n+\tDump blocks marked as always executed.\n+\t(fill_always_executed_in): Walk over the RPO array and\n+\tprocess loops whose header we run into.\n+\t(loop_invariant_motion_in_fun): Compute the first RPO\n+\tusing rev_post_order_and_mark_dfs_back_seme in iteration\n+\torder and pass that to fill_always_executed_in.\n+\n+2021-09-02  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* config/i386/i386-modes.def (FLOAT_MODE): Define ieee HFmode.\n+\t* config/i386/i386.c (enum x86_64_reg_class): Add\n+\tX86_64_SSEHF_CLASS.\n+\t(merge_classes): Handle X86_64_SSEHF_CLASS.\n+\t(examine_argument): Ditto.\n+\t(construct_container): Ditto.\n+\t(classify_argument): Ditto, and set HFmode/HCmode to\n+\tX86_64_SSEHF_CLASS.\n+\t(function_value_32): Return _FLoat16/Complex Float16 by\n+\t%xmm0.\n+\t(function_value_64): Return _Float16/Complex Float16 by SSE\n+\tregister.\n+\t(ix86_print_operand): Handle CONST_DOUBLE HFmode.\n+\t(ix86_secondary_reload): Require gpr as intermediate register\n+\tto store _Float16 from sse register when sse4 is not\n+\tavailable.\n+\t(ix86_libgcc_floating_mode_supported_p): Enable _FLoat16 under\n+\tsse2.\n+\t(ix86_scalar_mode_supported_p): Ditto.\n+\t(TARGET_LIBGCC_FLOATING_MODE_SUPPORTED_P): Defined.\n+\t* config/i386/i386.h (VALID_SSE2_REG_MODE): Add HFmode.\n+\t(VALID_INT_MODE_P): Add HFmode and HCmode.\n+\t* config/i386/i386.md (*pushhf_rex64): New define_insn.\n+\t(*pushhf): Ditto.\n+\t(*movhf_internal): Ditto.\n+\t* doc/extend.texi (Half-Precision Floating Point): Documemt\n+\t_Float16 for x86.\n+\n+2021-09-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/102155\n+\t* tree-ssa-loop-im.c (fill_always_executed_in_1): Iterate\n+\tover a part of the RPO array and do not recurse here.\n+\tDump blocks marked as always executed.\n+\t(fill_always_executed_in): Walk over the RPO array and\n+\tprocess loops whose header we run into.\n+\t(loop_invariant_motion_in_fun): Compute the first RPO\n+\tusing rev_post_order_and_mark_dfs_back_seme in iteration\n+\torder and pass that to fill_always_executed_in.\n+\n+2021-09-02  YunQiang Su  <syq@debian.org>\n+\n+\tRevert:\n+\t2021-08-31  YunQiang Su  <yunqiang.su@cipunited.com>\n+\n+\t* config/mips/mips.c (mips_module_isa_name): New.\n+\t  mips_file_start: add .module mipsREV to all asm output\n+\n 2021-09-01  Jeff Law  <jlaw@localhost.localdomain>\n \n \tPR tree-optimization/102152"}, {"sha": "1591e4e43ac2778ba2feb200fae365dd4837a86c", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f7c2bad52e51ec88a71c0d50826bfa2e6f44b15/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f7c2bad52e51ec88a71c0d50826bfa2e6f44b15/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=9f7c2bad52e51ec88a71c0d50826bfa2e6f44b15", "patch": "@@ -1 +1 @@\n-20210902\n+20210903"}, {"sha": "34fca8e6825c9d38ab2314967426020f25d2aab0", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f7c2bad52e51ec88a71c0d50826bfa2e6f44b15/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f7c2bad52e51ec88a71c0d50826bfa2e6f44b15/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=9f7c2bad52e51ec88a71c0d50826bfa2e6f44b15", "patch": "@@ -1,3 +1,8 @@\n+2021-09-02  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* lto-lang.c (lto_type_for_mode): Return float16_type_node\n+\twhen mode == TYPE_MODE (float16_type_node).\n+\n 2021-05-31  Martin Liska  <mliska@suse.cz>\n \n \t* lto-common.c (compare_tree_sccs_1): Compare"}, {"sha": "0d8eb186f473cedde45a81fff06dd6ced221340d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 231, "deletions": 0, "changes": 231, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f7c2bad52e51ec88a71c0d50826bfa2e6f44b15/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f7c2bad52e51ec88a71c0d50826bfa2e6f44b15/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9f7c2bad52e51ec88a71c0d50826bfa2e6f44b15", "patch": "@@ -1,3 +1,234 @@\n+2021-09-02  Sandra Loosemore  <sandra@codesourcery.com>\n+\t    Jos\u00e9 Rui Faustino de Sousa  <jrfsousa@gmail.com>\n+\n+\tPR fortran/100911\n+\tPR fortran/100915\n+\tPR fortran/100916\n+\t* gfortran.dg/PR100911.c: New file.\n+\t* gfortran.dg/PR100911.f90: New file.\n+\t* gfortran.dg/PR100914.c: New file.\n+\t* gfortran.dg/PR100914.f90: New file.\n+\t* gfortran.dg/PR100915.c: New file.\n+\t* gfortran.dg/PR100915.f90: New file.\n+\n+2021-09-02  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* gfortran.dg/c-interop/allocatable-dummy-c.c: New file.\n+\t* gfortran.dg/c-interop/allocatable-dummy.f90: New file.\n+\t* gfortran.dg/c-interop/allocatable-optional-pointer.f90: New file.\n+\t* gfortran.dg/c-interop/allocate-c.c: New file.\n+\t* gfortran.dg/c-interop/allocate-errors-c.c: New file.\n+\t* gfortran.dg/c-interop/allocate-errors.f90: New file.\n+\t* gfortran.dg/c-interop/allocate.f90: New file.\n+\t* gfortran.dg/c-interop/argument-association-assumed-rank-1.f90:\n+\tNew file.\n+\t* gfortran.dg/c-interop/argument-association-assumed-rank-2.f90:\n+\tNew file.\n+\t* gfortran.dg/c-interop/argument-association-assumed-rank-3.f90:\n+\tNew file.\n+\t* gfortran.dg/c-interop/argument-association-assumed-rank-4.f90:\n+\tNew file.\n+\t* gfortran.dg/c-interop/argument-association-assumed-rank-5.f90:\n+\tNew file.\n+\t* gfortran.dg/c-interop/argument-association-assumed-rank-6.f90:\n+\tNew file.\n+\t* gfortran.dg/c-interop/argument-association-assumed-rank-7.f90:\n+\tNew file.\n+\t* gfortran.dg/c-interop/argument-association-assumed-rank-8.f90:\n+\tNew file.\n+\t* gfortran.dg/c-interop/assumed-type-dummy.f90: New file.\n+\t* gfortran.dg/c-interop/c-interop.exp: New file.\n+\t* gfortran.dg/c-interop/c1255-1.f90: New file.\n+\t* gfortran.dg/c-interop/c1255-2.f90: New file.\n+\t* gfortran.dg/c-interop/c1255a.f90: New file.\n+\t* gfortran.dg/c-interop/c407a-1.f90: New file.\n+\t* gfortran.dg/c-interop/c407a-2.f90: New file.\n+\t* gfortran.dg/c-interop/c407b-1.f90: New file.\n+\t* gfortran.dg/c-interop/c407b-2.f90: New file.\n+\t* gfortran.dg/c-interop/c407c-1.f90: New file.\n+\t* gfortran.dg/c-interop/c516.f90: New file.\n+\t* gfortran.dg/c-interop/c524a.f90: New file.\n+\t* gfortran.dg/c-interop/c535a-1.f90: New file.\n+\t* gfortran.dg/c-interop/c535a-2.f90: New file.\n+\t* gfortran.dg/c-interop/c535b-1.f90: New file.\n+\t* gfortran.dg/c-interop/c535b-2.f90: New file.\n+\t* gfortran.dg/c-interop/c535b-3.f90: New file.\n+\t* gfortran.dg/c-interop/c535c-1.f90: New file.\n+\t* gfortran.dg/c-interop/c535c-2.f90: New file.\n+\t* gfortran.dg/c-interop/c535c-3.f90: New file.\n+\t* gfortran.dg/c-interop/c535c-4.f90: New file.\n+\t* gfortran.dg/c-interop/cf-descriptor-1-c.c: New file.\n+\t* gfortran.dg/c-interop/cf-descriptor-1.f90: New file.\n+\t* gfortran.dg/c-interop/cf-descriptor-2-c.c: New file.\n+\t* gfortran.dg/c-interop/cf-descriptor-2.f90: New file.\n+\t* gfortran.dg/c-interop/cf-descriptor-3-c.c: New file.\n+\t* gfortran.dg/c-interop/cf-descriptor-3.f90: New file.\n+\t* gfortran.dg/c-interop/cf-descriptor-4-c.c: New file.\n+\t* gfortran.dg/c-interop/cf-descriptor-4.f90: New file.\n+\t* gfortran.dg/c-interop/cf-descriptor-5-c.c: New file.\n+\t* gfortran.dg/c-interop/cf-descriptor-5.f90: New file.\n+\t* gfortran.dg/c-interop/cf-descriptor-6-c.c: New file.\n+\t* gfortran.dg/c-interop/cf-descriptor-6.f90: New file.\n+\t* gfortran.dg/c-interop/cf-descriptor-7-c.c: New file.\n+\t* gfortran.dg/c-interop/cf-descriptor-7.f90: New file.\n+\t* gfortran.dg/c-interop/cf-descriptor-8-c.c: New file.\n+\t* gfortran.dg/c-interop/cf-descriptor-8.f90: New file.\n+\t* gfortran.dg/c-interop/cf-out-descriptor-1-c.c: New file.\n+\t* gfortran.dg/c-interop/cf-out-descriptor-1.f90: New file.\n+\t* gfortran.dg/c-interop/cf-out-descriptor-2-c.c: New file.\n+\t* gfortran.dg/c-interop/cf-out-descriptor-2.f90: New file.\n+\t* gfortran.dg/c-interop/cf-out-descriptor-3-c.c: New file.\n+\t* gfortran.dg/c-interop/cf-out-descriptor-3.f90: New file.\n+\t* gfortran.dg/c-interop/cf-out-descriptor-4-c.c: New file.\n+\t* gfortran.dg/c-interop/cf-out-descriptor-4.f90: New file.\n+\t* gfortran.dg/c-interop/cf-out-descriptor-5-c.c: New file.\n+\t* gfortran.dg/c-interop/cf-out-descriptor-5.f90: New file.\n+\t* gfortran.dg/c-interop/cf-out-descriptor-6-c.c: New file.\n+\t* gfortran.dg/c-interop/cf-out-descriptor-6.f90: New file.\n+\t* gfortran.dg/c-interop/contiguous-1-c.c: New file.\n+\t* gfortran.dg/c-interop/contiguous-1.f90: New file.\n+\t* gfortran.dg/c-interop/contiguous-2-c.c: New file.\n+\t* gfortran.dg/c-interop/contiguous-2.f90: New file.\n+\t* gfortran.dg/c-interop/contiguous-3-c.c: New file.\n+\t* gfortran.dg/c-interop/contiguous-3.f90: New file.\n+\t* gfortran.dg/c-interop/deferred-character-1.f90: New file.\n+\t* gfortran.dg/c-interop/deferred-character-2.f90: New file.\n+\t* gfortran.dg/c-interop/dump-descriptors.c: New file.\n+\t* gfortran.dg/c-interop/dump-descriptors.h: New file.\n+\t* gfortran.dg/c-interop/establish-c.c: New file.\n+\t* gfortran.dg/c-interop/establish-errors-c.c: New file.\n+\t* gfortran.dg/c-interop/establish-errors.f90: New file.\n+\t* gfortran.dg/c-interop/establish.f90: New file.\n+\t* gfortran.dg/c-interop/explicit-interface.f90: New file.\n+\t* gfortran.dg/c-interop/fc-descriptor-1-c.c: New file.\n+\t* gfortran.dg/c-interop/fc-descriptor-1.f90: New file.\n+\t* gfortran.dg/c-interop/fc-descriptor-2-c.c: New file.\n+\t* gfortran.dg/c-interop/fc-descriptor-2.f90: New file.\n+\t* gfortran.dg/c-interop/fc-descriptor-3-c.c: New file.\n+\t* gfortran.dg/c-interop/fc-descriptor-3.f90: New file.\n+\t* gfortran.dg/c-interop/fc-descriptor-4-c.c: New file.\n+\t* gfortran.dg/c-interop/fc-descriptor-4.f90: New file.\n+\t* gfortran.dg/c-interop/fc-descriptor-5-c.c: New file.\n+\t* gfortran.dg/c-interop/fc-descriptor-5.f90: New file.\n+\t* gfortran.dg/c-interop/fc-descriptor-6-c.c: New file.\n+\t* gfortran.dg/c-interop/fc-descriptor-6.f90: New file.\n+\t* gfortran.dg/c-interop/fc-descriptor-7-c.c: New file.\n+\t* gfortran.dg/c-interop/fc-descriptor-7.f90: New file.\n+\t* gfortran.dg/c-interop/fc-descriptor-8-c.c: New file.\n+\t* gfortran.dg/c-interop/fc-descriptor-8.f90: New file.\n+\t* gfortran.dg/c-interop/fc-descriptor-9-c.c: New file.\n+\t* gfortran.dg/c-interop/fc-descriptor-9.f90: New file.\n+\t* gfortran.dg/c-interop/fc-out-descriptor-1-c.c: New file.\n+\t* gfortran.dg/c-interop/fc-out-descriptor-1.f90: New file.\n+\t* gfortran.dg/c-interop/fc-out-descriptor-2-c.c: New file.\n+\t* gfortran.dg/c-interop/fc-out-descriptor-2.f90: New file.\n+\t* gfortran.dg/c-interop/fc-out-descriptor-3-c.c: New file.\n+\t* gfortran.dg/c-interop/fc-out-descriptor-3.f90: New file.\n+\t* gfortran.dg/c-interop/fc-out-descriptor-4-c.c: New file.\n+\t* gfortran.dg/c-interop/fc-out-descriptor-4.f90: New file.\n+\t* gfortran.dg/c-interop/fc-out-descriptor-5-c.c: New file.\n+\t* gfortran.dg/c-interop/fc-out-descriptor-5.f90: New file.\n+\t* gfortran.dg/c-interop/fc-out-descriptor-6-c.c: New file.\n+\t* gfortran.dg/c-interop/fc-out-descriptor-6.f90: New file.\n+\t* gfortran.dg/c-interop/fc-out-descriptor-7-c.c: New file.\n+\t* gfortran.dg/c-interop/fc-out-descriptor-7.f90: New file.\n+\t* gfortran.dg/c-interop/ff-descriptor-1.f90: New file.\n+\t* gfortran.dg/c-interop/ff-descriptor-2.f90: New file.\n+\t* gfortran.dg/c-interop/ff-descriptor-3.f90: New file.\n+\t* gfortran.dg/c-interop/ff-descriptor-4.f90: New file.\n+\t* gfortran.dg/c-interop/ff-descriptor-5.f90: New file.\n+\t* gfortran.dg/c-interop/ff-descriptor-6.f90: New file.\n+\t* gfortran.dg/c-interop/ff-descriptor-7.f90: New file.\n+\t* gfortran.dg/c-interop/note-5-3.f90: New file.\n+\t* gfortran.dg/c-interop/note-5-4-c.c: New file.\n+\t* gfortran.dg/c-interop/note-5-4.f90: New file.\n+\t* gfortran.dg/c-interop/optional-c.c: New file.\n+\t* gfortran.dg/c-interop/optional.f90: New file.\n+\t* gfortran.dg/c-interop/rank-class.f90: New file.\n+\t* gfortran.dg/c-interop/rank.f90: New file.\n+\t* gfortran.dg/c-interop/removed-restrictions-1.f90: New file.\n+\t* gfortran.dg/c-interop/removed-restrictions-2.f90: New file.\n+\t* gfortran.dg/c-interop/removed-restrictions-3.f90: New file.\n+\t* gfortran.dg/c-interop/removed-restrictions-4.f90: New file.\n+\t* gfortran.dg/c-interop/section-1-c.c: New file.\n+\t* gfortran.dg/c-interop/section-1.f90: New file.\n+\t* gfortran.dg/c-interop/section-1p.f90: New file.\n+\t* gfortran.dg/c-interop/section-2-c.c: New file.\n+\t* gfortran.dg/c-interop/section-2.f90: New file.\n+\t* gfortran.dg/c-interop/section-2p.f90: New file.\n+\t* gfortran.dg/c-interop/section-3-c.c: New file.\n+\t* gfortran.dg/c-interop/section-3.f90: New file.\n+\t* gfortran.dg/c-interop/section-3p.f90: New file.\n+\t* gfortran.dg/c-interop/section-4-c.c: New file.\n+\t* gfortran.dg/c-interop/section-4.f90: New file.\n+\t* gfortran.dg/c-interop/section-errors-c.c: New file.\n+\t* gfortran.dg/c-interop/section-errors.f90: New file.\n+\t* gfortran.dg/c-interop/select-c.c: New file.\n+\t* gfortran.dg/c-interop/select-errors-c.c: New file.\n+\t* gfortran.dg/c-interop/select-errors.f90: New file.\n+\t* gfortran.dg/c-interop/select.f90: New file.\n+\t* gfortran.dg/c-interop/setpointer-c.c: New file.\n+\t* gfortran.dg/c-interop/setpointer-errors-c.c: New file.\n+\t* gfortran.dg/c-interop/setpointer-errors.f90: New file.\n+\t* gfortran.dg/c-interop/setpointer.f90: New file.\n+\t* gfortran.dg/c-interop/shape.f90: New file.\n+\t* gfortran.dg/c-interop/size.f90: New file.\n+\t* gfortran.dg/c-interop/tkr.f90: New file.\n+\t* gfortran.dg/c-interop/typecodes-array-basic-c.c: New file.\n+\t* gfortran.dg/c-interop/typecodes-array-basic.f90: New file.\n+\t* gfortran.dg/c-interop/typecodes-array-char-c.c: New file.\n+\t* gfortran.dg/c-interop/typecodes-array-char.f90: New file.\n+\t* gfortran.dg/c-interop/typecodes-array-float128-c.c: New file.\n+\t* gfortran.dg/c-interop/typecodes-array-float128.f90: New file.\n+\t* gfortran.dg/c-interop/typecodes-array-int128-c.c: New file.\n+\t* gfortran.dg/c-interop/typecodes-array-int128.f90: New file.\n+\t* gfortran.dg/c-interop/typecodes-array-longdouble-c.c: New file.\n+\t* gfortran.dg/c-interop/typecodes-array-longdouble.f90: New file.\n+\t* gfortran.dg/c-interop/typecodes-sanity-c.c: New file.\n+\t* gfortran.dg/c-interop/typecodes-sanity.f90: New file.\n+\t* gfortran.dg/c-interop/typecodes-scalar-basic-c.c: New file.\n+\t* gfortran.dg/c-interop/typecodes-scalar-basic.f90: New file.\n+\t* gfortran.dg/c-interop/typecodes-scalar-float128-c.c: New file.\n+\t* gfortran.dg/c-interop/typecodes-scalar-float128.f90: New file.\n+\t* gfortran.dg/c-interop/typecodes-scalar-int128-c.c: New file.\n+\t* gfortran.dg/c-interop/typecodes-scalar-int128.f90: New file.\n+\t* gfortran.dg/c-interop/typecodes-scalar-longdouble-c.c: New file.\n+\t* gfortran.dg/c-interop/typecodes-scalar-longdouble.f90: New file.\n+\t* gfortran.dg/c-interop/ubound.f90: New file.\n+\t* lib/target-supports.exp\n+\t(check_effective_target_fortran_real_c_float128): New function.\n+\n+2021-09-02  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/17506\n+\tPR testsuite/37182\n+\t* gcc.dg/diagnostic-tree-expr-ranges-2.c: Add expected output.\n+\t* gcc.dg/uninit-15-O0.c: Remove xfail.\n+\t* gcc.dg/uninit-15.c: Same.\n+\n+2021-09-02  Marcel Vollweiler  <marcel@codesourcery.com>\n+\n+\t* gfortran.dg/gomp/target-device-ancestor-4.f90: Comment out dg-final to avoid\n+\tUNRESOLVED.\n+\n+2021-09-02  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/ssa-lim-16.c: New testcase.\n+\n+2021-09-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/99591\n+\t* gcc.target/i386/pr99591.c: New test.\n+\t* gcc.target/i386/pr97950.c: Match or reject setb or jn?b instructions\n+\ttogether with seta or jn?a.\n+\n+2021-09-02  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* gcc.target/i386/sse2-float16-1.c: New test.\n+\t* gcc.target/i386/sse2-float16-2.c: Ditto.\n+\t* gcc.target/i386/sse2-float16-3.c: Ditto.\n+\t* gcc.target/i386/float16-5.c: New test.\n+\n 2021-09-01  Jeff Law  <jlaw@localhost.localdomain>\n \n \tPR tree-optimization/102152"}, {"sha": "5fe8adec99b7b4eca0b8648fcd644d61c1f8e7b9", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f7c2bad52e51ec88a71c0d50826bfa2e6f44b15/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f7c2bad52e51ec88a71c0d50826bfa2e6f44b15/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=9f7c2bad52e51ec88a71c0d50826bfa2e6f44b15", "patch": "@@ -1,3 +1,21 @@\n+2021-09-02  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* config/i386/32/sfp-machine.h (_FP_NANFRAC_H): New macro.\n+\t* config/i386/64/sfp-machine.h (_FP_NANFRAC_H): Ditto.\n+\t* config/i386/sfp-machine.h (_FP_NANSIGN_H): Ditto.\n+\t* config/i386/t-softfp: Add hf soft-fp.\n+\t* config.host: Add i386/64/t-softfp.\n+\t* config/i386/64/t-softfp: New file.\n+\n+2021-09-02  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* soft-fp/eqhf2.c: New file.\n+\t* soft-fp/extendhfdf2.c: New file.\n+\t* soft-fp/extendhfsf2.c: New file.\n+\t* soft-fp/half.h (FP_CMP_EQ_H): New marco.\n+\t* soft-fp/truncdfhf2.c: New file\n+\t* soft-fp/truncsfhf2.c: New file\n+\n 2021-09-01  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n \n \t* unwind-arm-common.inc (abort): Remove."}, {"sha": "e27093dac9770f27a39b84588ea03d1f6d67cd81", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f7c2bad52e51ec88a71c0d50826bfa2e6f44b15/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f7c2bad52e51ec88a71c0d50826bfa2e6f44b15/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=9f7c2bad52e51ec88a71c0d50826bfa2e6f44b15", "patch": "@@ -1,3 +1,19 @@\n+2021-09-02  Sandra Loosemore  <sandra@codesourcery.com>\n+\t    Jos\u00e9 Rui Faustino de Sousa  <jrfsousa@gmail.com>\n+\n+\tPR fortran/100907\n+\tPR fortran/100911\n+\tPR fortran/100914\n+\tPR fortran/100915\n+\tPR fortran/100917\n+\t* ISO_Fortran_binding-1-tmpl.h (CFI_type_cfunptr): Make equivalent\n+\tto CFI_type_cptr.\n+\t* runtime/ISO_Fortran_binding.c (cfi_desc_to_gfc_desc): Fix\n+\thandling of CFI_type_cptr and CFI_type_cfunptr.  Additional error\n+\tchecking and code cleanup.\n+\t(gfc_desc_to_cfi_desc): Likewise.  Also correct kind mapping\n+\tfor character, complex, and long double types.\n+\n 2021-08-27  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* Makefile.am: Use configured libm availability."}, {"sha": "47666416818df2635e7e5775c2da457467f50e4a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f7c2bad52e51ec88a71c0d50826bfa2e6f44b15/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f7c2bad52e51ec88a71c0d50826bfa2e6f44b15/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9f7c2bad52e51ec88a71c0d50826bfa2e6f44b15", "patch": "@@ -1,3 +1,38 @@\n+2021-09-02  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/atomic_base.h (__atomic_base<P*>::compare_exchange_weak):\n+\tAdd new functions.\n+\t* include/std/atomic (atomic<T*>::compare_exchange_weak): Use\n+\tit.\n+\n+2021-09-02  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/atomic: Tweak whitespace.\n+\n+2021-09-02  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR c++/102177\n+\t* include/bits/atomic_base.h (__is_valid_cmpexch_failure_order):\n+\tNew function to check if a memory order is valid for the failure\n+\tcase of compare exchange operations.\n+\t(__atomic_base<I>::compare_exchange_weak): Simplify assertions\n+\tby using __is_valid_cmpexch_failure_order.\n+\t(__atomic_base<I>::compare_exchange_strong): Likewise.\n+\t(__atomic_base<P*>::compare_exchange_weak): Likewise.\n+\t(__atomic_base<P*>::compare_exchange_strong): Likewise.\n+\t(__atomic_impl::compare_exchange_weak): Add assertion.\n+\t(__atomic_impl::compare_exchange_strong): Likewise.\n+\t* include/std/atomic (atomic::compare_exchange_weak): Likewise.\n+\t(atomic::compare_exchange_strong): Likewise.\n+\n+2021-09-02  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/functional (invoke_r): Define.\n+\t* include/std/version (__cpp_lib_invoke_r): Define.\n+\t* testsuite/20_util/function_objects/invoke/version.cc: Check\n+\tfor __cpp_lib_invoke_r as well as __cpp_lib_invoke.\n+\t* testsuite/20_util/function_objects/invoke/4.cc: New test.\n+\n 2021-08-31  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/98421"}]}