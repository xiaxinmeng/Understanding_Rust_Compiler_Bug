{"sha": "d5214afa121044b22e6c0b5c662f148f26c089d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDUyMTRhZmExMjEwNDRiMjJlNmMwYjVjNjYyZjE0OGYyNmMwODlkMQ==", "commit": {"author": {"name": "Paul Koning", "email": "ni1d@arrl.net", "date": "2010-11-09T01:13:30Z"}, "committer": {"name": "Paul Koning", "email": "pkoning@gcc.gnu.org", "date": "2010-11-09T01:13:30Z"}, "message": "* config/pdp11/pdp11.md (lshrsi3, lshrhi3): Fix wrong code.\n\nFrom-SVN: r166468", "tree": {"sha": "ba93dbdcafde222472a44547ffb5b89ff5d84560", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba93dbdcafde222472a44547ffb5b89ff5d84560"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5214afa121044b22e6c0b5c662f148f26c089d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5214afa121044b22e6c0b5c662f148f26c089d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5214afa121044b22e6c0b5c662f148f26c089d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5214afa121044b22e6c0b5c662f148f26c089d1/comments", "author": null, "committer": null, "parents": [{"sha": "8860adf4b71c8ef1e9096e7ed89e12fb84d7426b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8860adf4b71c8ef1e9096e7ed89e12fb84d7426b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8860adf4b71c8ef1e9096e7ed89e12fb84d7426b"}], "stats": {"total": 74, "additions": 65, "deletions": 9}, "files": [{"sha": "e4512dd480cec69cddca36950ae9cb05fc444aef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5214afa121044b22e6c0b5c662f148f26c089d1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5214afa121044b22e6c0b5c662f148f26c089d1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d5214afa121044b22e6c0b5c662f148f26c089d1", "patch": "@@ -1,3 +1,7 @@\n+2010-11-08  Paul Koning  <ni1d@arrl.net>\n+\n+\t* config/pdp11/pdp11.md (lshrsi3, lshrhi3): Fix wrong code.\n+\t\n 2010-11-08  Paul Koning  <ni1d@arrl.net>\n \n \t* config/pdp11/pdp11.md (negsi2): Fix wrong code."}, {"sha": "552eb4931c87de577ddf08c50aa664524ca54a70", "filename": "gcc/config/pdp11/pdp11.md", "status": "modified", "additions": 61, "deletions": 9, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5214afa121044b22e6c0b5c662f148f26c089d1/gcc%2Fconfig%2Fpdp11%2Fpdp11.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5214afa121044b22e6c0b5c662f148f26c089d1/gcc%2Fconfig%2Fpdp11%2Fpdp11.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.md?ref=d5214afa121044b22e6c0b5c662f148f26c089d1", "patch": "@@ -849,15 +849,15 @@\n   [(set_attr \"length\" \"2,4\")])\n \n ;; lsr\n-(define_insn \"\" \n+(define_insn \"lsrhi1\" \n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=rR,Q\")\n \t(lshiftrt:HI (match_operand:HI 1 \"general_operand\" \"0,0\")\n \t\t   (const_int 1)))]\n   \"\"\n   \"clc\\;ror %0\"\n   [(set_attr \"length\" \"2,4\")])\n \n-(define_insn \"lshrsi3\"\n+(define_insn \"lsrsi1\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(lshiftrt:SI (match_operand:SI 1 \"general_operand\" \"0\")\n                    (const_int 1)))]\n@@ -880,6 +880,36 @@\n }\n   [(set_attr \"length\" \"10\")])\n \n+(define_expand \"lshrsi3\"\n+  [(match_operand:SI 0 \"register_operand\" \"\")\n+   (match_operand:SI 1 \"register_operand\" \"0\")\n+   (match_operand:HI 2 \"general_operand\" \"\")]\n+  \"\"\n+  \"\n+{\n+  rtx r;\n+\n+  if (!TARGET_40_PLUS &&\n+      (GET_CODE (operands[2]) != CONST_INT ||\n+       (unsigned) INTVAL (operands[2]) > 3))\n+    FAIL;\n+  emit_insn (gen_lsrsi1 (operands[0], operands[1]));\n+  if (GET_CODE (operands[2]) != CONST_INT)\n+    {\n+      r = gen_reg_rtx (HImode);\n+      emit_insn (gen_subhi3 (r, operands [2], GEN_INT (1)));\n+      emit_insn (gen_ashrsi3 (operands[0], operands[0], r));\n+    }\n+  else if ((unsigned) INTVAL (operands[2]) != 1)\n+    {\n+      emit_insn (gen_ashlsi3 (operands[0], operands[0],\n+                              GEN_INT (1 - INTVAL (operands[2]))));\n+    }\n+  DONE;\n+}\n+\"\n+)\n+\n ;; shift is by arbitrary count is expensive, \n ;; shift by one cheap - so let's do that, if\n ;; space doesn't matter\n@@ -996,13 +1026,35 @@\n   operands[2] = negate_rtx (HImode, operands[2]);\n }\")\n \n-;;;;- logical shift instructions\n-;;(define_insn \"lshrsi3\"\n-;;  [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n-;;\t(lshiftrt:HI (match_operand:HI 1 \"register_operand\" \"0\")\n-;;\t\t     (match_operand:HI 2 \"general_operand\" \"rI\")))]\n-;;  \"\"\n-;;  \"srl %0,%2\")\n+(define_expand \"lshrhi3\"\n+  [(match_operand:HI 0 \"register_operand\" \"\")\n+   (match_operand:HI 1 \"register_operand\" \"\")\n+   (match_operand:HI 2 \"general_operand\" \"\")]\n+  \"\"\n+  \"\n+{\n+  rtx r;\n+\n+  if (!TARGET_40_PLUS &&\n+      (GET_CODE (operands[2]) != CONST_INT ||\n+       (unsigned) INTVAL (operands[2]) > 3))\n+    FAIL;\n+  emit_insn (gen_lsrhi1 (operands[0], operands[1]));\n+  if (GET_CODE (operands[2]) != CONST_INT)\n+    {\n+      r = gen_reg_rtx (HImode);\n+      emit_insn (gen_subhi3 (r, operands [2], GEN_INT (1)));\n+      emit_insn (gen_ashrhi3 (operands[0], operands[0], r));\n+    }\n+  else if ((unsigned) INTVAL (operands[2]) != 1)\n+    {\n+      emit_insn (gen_ashlhi3 (operands[0], operands[0],\n+                              GEN_INT (1 - INTVAL (operands[2]))));\n+    }\n+  DONE;\n+}\n+\"\n+)\n \n ;; absolute \n "}]}