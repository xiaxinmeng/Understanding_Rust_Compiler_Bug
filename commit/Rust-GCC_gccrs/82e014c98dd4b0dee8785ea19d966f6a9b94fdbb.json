{"sha": "82e014c98dd4b0dee8785ea19d966f6a9b94fdbb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJlMDE0Yzk4ZGQ0YjBkZWU4Nzg1ZWExOWQ5NjZmNmE5Yjk0ZmRiYg==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2001-10-19T06:34:01Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2001-10-19T06:34:01Z"}, "message": "limits.h: New file.\n\n\n\t* config/cpu/x86-64/bits/limits.h: New file.\n\n\t* config/cpu/x86-64/bits/atomicity.h: New file.\n\n\t* configure.target: Add x86-64.\n\nFrom-SVN: r46342", "tree": {"sha": "ba2de912a5825c3d394f79581de99922ae928ef1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba2de912a5825c3d394f79581de99922ae928ef1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82e014c98dd4b0dee8785ea19d966f6a9b94fdbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82e014c98dd4b0dee8785ea19d966f6a9b94fdbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82e014c98dd4b0dee8785ea19d966f6a9b94fdbb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82e014c98dd4b0dee8785ea19d966f6a9b94fdbb/comments", "author": null, "committer": null, "parents": [{"sha": "c307e6ddbe4cf07ae84d9a0d65f3699926de4208", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c307e6ddbe4cf07ae84d9a0d65f3699926de4208", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c307e6ddbe4cf07ae84d9a0d65f3699926de4208"}], "stats": {"total": 91, "additions": 91, "deletions": 0}, "files": [{"sha": "15ff07fc17214f36eee66e46e7a9ce70663421e9", "filename": "libstdc++-v3/config/cpu/x86-64/bits/atomicity.h", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82e014c98dd4b0dee8785ea19d966f6a9b94fdbb/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fx86-64%2Fbits%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82e014c98dd4b0dee8785ea19d966f6a9b94fdbb/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fx86-64%2Fbits%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fx86-64%2Fbits%2Fatomicity.h?ref=82e014c98dd4b0dee8785ea19d966f6a9b94fdbb", "patch": "@@ -0,0 +1,55 @@\n+// Low-level functions for atomic operations: AMD x86-64, -*- C++ -*-\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#ifndef _BITS_ATOMICITY_H\n+#define _BITS_ATOMICITY_H\t1\n+\n+typedef int _Atomic_word;\n+\n+static inline _Atomic_word\n+__attribute__ ((__unused__))\n+__exchange_and_add (volatile _Atomic_word *__mem, int __val)\n+{\n+  register _Atomic_word __result;\n+  __asm__ __volatile__ (\"lock; xaddl %0,%2\"\n+\t\t\t: \"=r\" (__result)\n+                        : \"0\" (__val), \"m\" (*__mem)\n+                        : \"memory\");\n+  return __result;\n+}\n+\n+static inline void\n+__attribute__ ((__unused__))\n+__atomic_add (volatile _Atomic_word* __mem, int __val)\n+{\n+  __asm__ __volatile__ (\"lock; addl %0,%1\"\n+\t\t\t: : \"ir\" (__val), \"m\" (*__mem) : \"memory\");\n+}\n+\n+#endif /* atomicity.h */"}, {"sha": "31b6eab5d224dc2d1d64291916d10974647c6fe3", "filename": "libstdc++-v3/config/cpu/x86-64/bits/limits.h", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82e014c98dd4b0dee8785ea19d966f6a9b94fdbb/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fx86-64%2Fbits%2Flimits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82e014c98dd4b0dee8785ea19d966f6a9b94fdbb/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fx86-64%2Fbits%2Flimits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fx86-64%2Fbits%2Flimits.h?ref=82e014c98dd4b0dee8785ea19d966f6a9b94fdbb", "patch": "@@ -0,0 +1,36 @@\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#ifndef _GLIBCPP_CPU_LIMITS\n+#define _GLIBCPP_CPU_LIMITS 1\n+\n+// Some operating systems set this\n+#ifndef __glibcpp_long_double_bits\n+#define __glibcpp_long_double_bits 80\n+#endif\n+\n+#endif"}]}