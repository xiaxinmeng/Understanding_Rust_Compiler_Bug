{"sha": "1aa6ca40fbf259b41619c8d9bac82f963b488160", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFhNmNhNDBmYmYyNTliNDE2MTljOGQ5YmFjODJmOTYzYjQ4ODE2MA==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2007-01-11T15:21:53Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2007-01-11T15:21:53Z"}, "message": "warnings.m4: Use m4_expand_once to clear the AC_SUBST'ed variable.\n\nconfig:\n2007-01-11  Paolo Bonzini  <bonzini@gnu.org>\n\n        * warnings.m4: Use m4_expand_once to clear the AC_SUBST'ed variable.\n        (ACX_PROG_CC_WARNINGS_ARE_ERRORS): Fix typo.  Add optional 2nd argument.\n\nlibcpp:\n2007-01-11  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* configure: Regenerate.\n\nFrom-SVN: r120675", "tree": {"sha": "586035d8fe26ce5e3612adb719b745c5848c78a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/586035d8fe26ce5e3612adb719b745c5848c78a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1aa6ca40fbf259b41619c8d9bac82f963b488160", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aa6ca40fbf259b41619c8d9bac82f963b488160", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1aa6ca40fbf259b41619c8d9bac82f963b488160", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aa6ca40fbf259b41619c8d9bac82f963b488160/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d943d7c4d9c09dcd4ffea6c86f91c4e98e97dd21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d943d7c4d9c09dcd4ffea6c86f91c4e98e97dd21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d943d7c4d9c09dcd4ffea6c86f91c4e98e97dd21"}], "stats": {"total": 41, "additions": 28, "deletions": 13}, "files": [{"sha": "225e57629bad59145fc28b054c4d4f71a6405ef9", "filename": "config/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aa6ca40fbf259b41619c8d9bac82f963b488160/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aa6ca40fbf259b41619c8d9bac82f963b488160/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=1aa6ca40fbf259b41619c8d9bac82f963b488160", "patch": "@@ -1,6 +1,11 @@\n 2007-01-11  Paolo Bonzini  <bonzini@gnu.org>\n \n-\t* config/warnings.m4: Add second parameter with name of variable.\n+        * warnings.m4: Use m4_expand_once to clear the AC_SUBST'ed variable.\n+        (ACX_PROG_CC_WARNINGS_ARE_ERRORS): Fix typo.  Add optional 2nd argument.\n+\n+2007-01-11  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* warnings.m4: Add second parameter with name of variable.\n \tAlways append to the variable if it exists.\n \n 2007-01-01  Mike Stump  <mrs@apple.com>"}, {"sha": "d3358b6a89446808a66f2d73151bd36f00943142", "filename": "config/warnings.m4", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aa6ca40fbf259b41619c8d9bac82f963b488160/config%2Fwarnings.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aa6ca40fbf259b41619c8d9bac82f963b488160/config%2Fwarnings.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fwarnings.m4?ref=1aa6ca40fbf259b41619c8d9bac82f963b488160", "patch": "@@ -19,14 +19,15 @@\n #Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n #02110-1301, USA.\n \n-# ACX_PROG_CC_WARNING_OPTS(WARNINGS, [VARIABLE = WARN_CFLAGS@)\n+# ACX_PROG_CC_WARNING_OPTS(WARNINGS, [VARIABLE = WARN_CFLAGS)\n #   Sets @VARIABLE@ to the subset of the given options which the\n #   compiler accepts.\n AC_DEFUN([ACX_PROG_CC_WARNING_OPTS],\n [AC_REQUIRE([AC_PROG_CC])dnl\n m4_pushdef([acx_Var], [m4_default([$2], [WARN_CFLAGS])])dnl\n AC_SUBST(acx_Var)dnl\n-acx_Var=\n+m4_expand_once([acx_Var=\n+],m4_quote(acx_Var=))dnl\n save_CFLAGS=\"$CFLAGS\"\n for option in $1; do\n   AS_VAR_PUSHDEF([acx_Woption], [acx_cv_prog_cc_warning_$option])\n@@ -51,8 +52,9 @@ AC_DEFUN([ACX_PROG_CC_WARNING_ALMOST_PEDANTIC],\n [AC_REQUIRE([AC_PROG_CC])dnl\n m4_pushdef([acx_Var], [m4_default([$2], [WARN_PEDANTIC])])dnl\n AC_SUBST(acx_Var)dnl\n+m4_expand_once([acx_Var=\n+],m4_quote(acx_Var=))dnl\n AS_VAR_PUSHDEF([acx_Pedantic], [acx_cv_prog_cc_pedantic_$1])dnl\n-acx_Var=\n AS_IF([test \"$GCC\" = yes],\n [AC_CACHE_CHECK([whether $CC supports -pedantic $1], acx_Pedantic,\n [save_CFLAGS=\"$CFLAGS\"\n@@ -68,23 +70,25 @@ AS_VAR_POPDEF([acx_Pedantic])dnl\n m4_popdef([acx_Var])dnl\n ])# ACX_PROG_CC_WARNING_ALMOST_PEDANTIC\n \n-# ACX_PROG_CC_WARNINGS_ARE_ERRORS([x.y.z])\n-#   sets WERROR to \"-Werror\" if the compiler is GCC >=x.y.z, or if\n+# ACX_PROG_CC_WARNINGS_ARE_ERRORS([x.y.z], [VARIABLE = WERROR])\n+#   sets @VARIABLE@ to \"-Werror\" if the compiler is GCC >=x.y.z, or if\n #   --enable-werror-always was given on the command line, otherwise\n #   to nothing.\n #   If the argument is the word \"manual\" instead of a version number,\n-#   then WERROR will be set to -Werror only if --enable-werror-always\n+#   then @VARIABLE@ will be set to -Werror only if --enable-werror-always\n #   appeared on the configure command line.\n AC_DEFUN([ACX_PROG_CC_WARNINGS_ARE_ERRORS],\n [AC_REQUIRE([AC_PROG_CC])dnl\n-AC_SUBST([WERROR])dnl\n-WERROR=\n+m4_pushdef([acx_Var], [m4_default([$2], [WERROR])])dnl\n+AC_SUBST(acx_Var)dnl\n+m4_expand_once([acx_Var=\n+],m4_quote(acx_Var=))dnl\n AC_ARG_ENABLE(werror-always, \n     AS_HELP_STRING([--enable-werror-always],\n \t\t   [enable -Werror despite compiler version]),\n [], [enable_werror_always=no])\n AS_IF([test $enable_werror_always = yes],\n-      [WERROR=-Werror],\n+      [acx_Var=\"$acx_Var${acx_Var:+ }-Werror\"])\n  m4_if($1, [manual],,\n  [AS_VAR_PUSHDEF([acx_GCCvers], [acx_cv_prog_cc_gcc_$1_or_newer])dnl\n   AC_CACHE_CHECK([whether $CC is GCC >=$1], acx_GCCvers,\n@@ -98,6 +102,7 @@ AS_IF([test $enable_werror_always = yes],\n    [AS_VAR_SET(acx_GCCvers, yes)],\n    [AS_VAR_SET(acx_GCCvers, no)])])\n  AS_IF([test AS_VAR_GET(acx_GCCvers) = yes],\n-       [WERROR=-WerrorB])\n-  AS_VAR_POPDEF([acx_GCCvers])]))\n+       [acx_Var=\"$acx_Var${acx_Var:+ }-Werror\"])\n+  AS_VAR_POPDEF([acx_GCCvers])])\n+m4_popdef([acx_Var])dnl\n ])# ACX_PROG_CC_WARNINGS_ARE_ERRORS"}, {"sha": "ab548bb2b02c9216121117bdf05df4d8464de7b0", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aa6ca40fbf259b41619c8d9bac82f963b488160/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aa6ca40fbf259b41619c8d9bac82f963b488160/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=1aa6ca40fbf259b41619c8d9bac82f963b488160", "patch": "@@ -2,6 +2,10 @@\n \n \t* configure: Regenerate.\n \n+2007-01-11  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* configure: Regenerate.\n+\n 2007-01-04  Tom Tromey  <tromey@redhat.com>\n \n \tPR preprocessor/28165:"}, {"sha": "45c97247f5381e7d3745d008945bc9561ca98115", "filename": "libcpp/configure", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aa6ca40fbf259b41619c8d9bac82f963b488160/libcpp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aa6ca40fbf259b41619c8d9bac82f963b488160/libcpp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure?ref=1aa6ca40fbf259b41619c8d9bac82f963b488160", "patch": "@@ -2835,11 +2835,12 @@ else\n   enable_werror_always=no\n fi;\n if test $enable_werror_always = yes; then\n-  WERROR=-Werror\n+  WERROR=\"$WERROR${WERROR:+ }-Werror\"\n fi\n \n \n \n+\n # Dependency checking.\n rm -rf .tst 2>/dev/null\n mkdir .tst 2>/dev/null"}]}