{"sha": "1e7d57a3b1f7bcd100a632033a148995261b1b9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU3ZDU3YTNiMWY3YmNkMTAwYTYzMjAzM2ExNDg5OTUyNjFiMWI5Yw==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@paru.cas.cz", "date": "1999-04-06T16:21:09Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-04-06T16:21:09Z"}, "message": "Jan Hubicka <hubicka@paru.cas.cz>\n\nJan Hubicka  <hubicka@paru.cas.cz>\n        * flow.c (split_edge) update correctly flow graph, disable\n        EDGE_CRITICAL flag on the split edge, update NUSES for new label.\n\nFrom-SVN: r26222", "tree": {"sha": "f94a640d6af468c10d7c52b0a1e86b204ba6f224", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f94a640d6af468c10d7c52b0a1e86b204ba6f224"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e7d57a3b1f7bcd100a632033a148995261b1b9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e7d57a3b1f7bcd100a632033a148995261b1b9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e7d57a3b1f7bcd100a632033a148995261b1b9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e7d57a3b1f7bcd100a632033a148995261b1b9c/comments", "author": null, "committer": null, "parents": [{"sha": "2454beafbaa21ee0ede1adb06625760ff41d1448", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2454beafbaa21ee0ede1adb06625760ff41d1448", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2454beafbaa21ee0ede1adb06625760ff41d1448"}], "stats": {"total": 30, "additions": 22, "deletions": 8}, "files": [{"sha": "d3892b20f5cb4b26b187e3c0d31f292187136284", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e7d57a3b1f7bcd100a632033a148995261b1b9c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e7d57a3b1f7bcd100a632033a148995261b1b9c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e7d57a3b1f7bcd100a632033a148995261b1b9c", "patch": "@@ -1,3 +1,8 @@\n+Tue Apr  6 16:18:58 1999  Jan Hubicka  <hubicka@paru.cas.cz>\n+\n+\t* flow.c (split_edge) update correctly flow graph, disable\n+\tEDGE_CRITICAL flag on the split edge, update NUSES for new label.\n+\n Tue Apr  6 15:47:51 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* emit-rtl.c (gen_rtx_CONST_DOUBLE): Use XWINT not XINT."}, {"sha": "d2d1d50082505c7c1c493961a211bb71cafb8c6f", "filename": "gcc/flow.c", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e7d57a3b1f7bcd100a632033a148995261b1b9c/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e7d57a3b1f7bcd100a632033a148995261b1b9c/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=1e7d57a3b1f7bcd100a632033a148995261b1b9c", "patch": "@@ -1180,6 +1180,7 @@ split_edge (edge_in)\n     for (pp = &old_succ->pred; *pp != edge_in; pp = &(*pp)->pred_next)\n       continue;\n     *pp = edge_in->pred_next;\n+    edge_in->pred_next = NULL;\n   }\n \n   /* Create the new structures.  */\n@@ -1207,9 +1208,18 @@ split_edge (edge_in)\n   /* Wire them up.  */\n   bb->pred = edge_in;\n   bb->succ = edge_out;\n+\n   edge_in->dest = bb;\n+  edge_in->flags &= ~EDGE_CRITICAL;\n+\n+  edge_out->pred_next = old_succ->pred;\n+  edge_out->succ_next = NULL;\n   edge_out->src = bb;\n   edge_out->dest = old_succ;\n+  edge_out->flags = EDGE_FALLTHRU;\n+  edge_out->probability = REG_BR_PROB_BASE;\n+\n+  old_succ->pred = edge_out;\n \n   /* Tricky case -- if there existed a fallthru into the successor\n      (and we're not it) we must add a new unconditional jump around\n@@ -1222,7 +1232,7 @@ split_edge (edge_in)\n   if ((edge_in->flags & EDGE_FALLTHRU) == 0)\n     {\n       edge e;\n-      for (e = old_succ->pred; e ; e = e->pred_next)\n+      for (e = edge_out->pred_next; e ; e = e->pred_next)\n \tif (e->flags & EDGE_FALLTHRU)\n \t  break;\n \n@@ -1236,7 +1246,6 @@ split_edge (edge_in)\n \t      /* Non critical -- we can simply add a jump to the end\n \t\t of the existing predecessor.  */\n \t      jump_block = e->src;\n-\t      pos = jump_block->end;\n \t    }\n \t  else\n \t    {\n@@ -1245,13 +1254,16 @@ split_edge (edge_in)\n \t         call ourselves.  */\n \t      jump_block = split_edge (e);\n \t      e = jump_block->succ;\n-\t      pos = jump_block->head;\n \t    }\n \n-\t  /* Now add the jump insn...  */\n-\t  pos = emit_jump_insn_after (gen_jump (old_succ->head), pos);\n+\t  /* Now add the jump insn ...  */\n+\t  pos = emit_jump_insn_after (gen_jump (old_succ->head),\n+\t\t\t\t      jump_block->end);\n \t  jump_block->end = pos;\n \t  emit_barrier_after (pos);\n+\n+\t  /* ... let jump know that label is in use, ...  */\n+\t  ++LABEL_NUSES (old_succ->head);\n \t  \n \t  /* ... and clear fallthru on the outgoing edge.  */\n \t  e->flags &= ~EDGE_FALLTHRU;\n@@ -1331,9 +1343,6 @@ split_edge (edge_in)\n       bb->head = new_label;\n     }\n \n-  /* In all cases, the new block falls through to the successor.  */\n-  edge_out->flags = EDGE_FALLTHRU;\n-\n   return bb;\n }\n "}]}