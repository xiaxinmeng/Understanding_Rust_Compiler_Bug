{"sha": "686d390a8fc1c0f72122910844e86d4a412c4e34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg2ZDM5MGE4ZmMxYzBmNzIxMjI5MTA4NDRlODZkNGE0MTJjNGUzNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-03-11T12:07:01Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-03-11T12:07:01Z"}, "message": "re PR rtl-optimization/70174 (ICE at -O1 and above on x86_64-linux-gnu in gen_lowpart_general, at rtlhooks.c:63)\n\n\tPR rtl-optimization/70174\n\t* expmed.c (store_bit_field_using_insv): Use gen_lowpart_if_possible\n\tfollowed by gen_lowpart on force_reg instead of just gen_lowpart.\n\n\t* gcc.dg/pr70174.c: New test.\n\nFrom-SVN: r234137", "tree": {"sha": "5a071c96fbe5aca86382143c24af8284299b350e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a071c96fbe5aca86382143c24af8284299b350e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/686d390a8fc1c0f72122910844e86d4a412c4e34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/686d390a8fc1c0f72122910844e86d4a412c4e34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/686d390a8fc1c0f72122910844e86d4a412c4e34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/686d390a8fc1c0f72122910844e86d4a412c4e34/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "02d472a2cb30a5692a57b2fc021b2fa043c84213", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02d472a2cb30a5692a57b2fc021b2fa043c84213", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02d472a2cb30a5692a57b2fc021b2fa043c84213"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "09ea7f7bd7a277d890702c4aa4ad8459f1767f4f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/686d390a8fc1c0f72122910844e86d4a412c4e34/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/686d390a8fc1c0f72122910844e86d4a412c4e34/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=686d390a8fc1c0f72122910844e86d4a412c4e34", "patch": "@@ -1,5 +1,9 @@\n 2016-03-11  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/70174\n+\t* expmed.c (store_bit_field_using_insv): Use gen_lowpart_if_possible\n+\tfollowed by gen_lowpart on force_reg instead of just gen_lowpart.\n+\n \tPR tree-optimization/70169\n \t* tree-ssa-loop.c (gen_lsm_tmp_name): Handle FUNCTION_DECL and\n \tLABEL_DECL like VAR_DECL.  Emit nothing instead of gcc_unreachable"}, {"sha": "31d905bd3d5739f360ba7621c74c07037b846832", "filename": "gcc/expmed.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/686d390a8fc1c0f72122910844e86d4a412c4e34/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/686d390a8fc1c0f72122910844e86d4a412c4e34/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=686d390a8fc1c0f72122910844e86d4a412c4e34", "patch": "@@ -658,24 +658,28 @@ store_bit_field_using_insv (const extraction_insn *insv, rtx op0,\n     {\n       if (GET_MODE_BITSIZE (GET_MODE (value)) >= bitsize)\n \t{\n+\t  rtx tmp;\n \t  /* Optimization: Don't bother really extending VALUE\n \t     if it has all the bits we will actually use.  However,\n \t     if we must narrow it, be sure we do it correctly.  */\n \n \t  if (GET_MODE_SIZE (GET_MODE (value)) < GET_MODE_SIZE (op_mode))\n \t    {\n-\t      rtx tmp;\n-\n \t      tmp = simplify_subreg (op_mode, value1, GET_MODE (value), 0);\n \t      if (! tmp)\n \t\ttmp = simplify_gen_subreg (op_mode,\n \t\t\t\t\t   force_reg (GET_MODE (value),\n \t\t\t\t\t\t      value1),\n \t\t\t\t\t   GET_MODE (value), 0);\n-\t      value1 = tmp;\n \t    }\n \t  else\n-\t    value1 = gen_lowpart (op_mode, value1);\n+\t    {\n+\t      tmp = gen_lowpart_if_possible (op_mode, value1);\n+\t      if (! tmp)\n+\t\ttmp = gen_lowpart (op_mode, force_reg (GET_MODE (value),\n+\t\t\t\t\t\t       value1));\n+\t    }\n+\t  value1 = tmp;\n \t}\n       else if (CONST_INT_P (value))\n \tvalue1 = gen_int_mode (INTVAL (value), op_mode);"}, {"sha": "a1035ef7a46dcc4ea67c97299f5453c8017229f2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/686d390a8fc1c0f72122910844e86d4a412c4e34/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/686d390a8fc1c0f72122910844e86d4a412c4e34/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=686d390a8fc1c0f72122910844e86d4a412c4e34", "patch": "@@ -1,5 +1,8 @@\n 2016-03-11  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/70174\n+\t* gcc.dg/pr70174.c: New test.\n+\n \tPR tree-optimization/70169\n \t* gcc.dg/pr70169.c: New test.\n "}, {"sha": "8a3bc904fad431e9eec0f5579caf7b143611765b", "filename": "gcc/testsuite/gcc.dg/pr70174.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/686d390a8fc1c0f72122910844e86d4a412c4e34/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70174.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/686d390a8fc1c0f72122910844e86d4a412c4e34/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70174.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70174.c?ref=686d390a8fc1c0f72122910844e86d4a412c4e34", "patch": "@@ -0,0 +1,11 @@\n+/* PR rtl-optimization/70174 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+struct S { int f : 4; } a;\n+  \n+void\n+foo (void)\n+{ \n+  a.f = foo;\t/* { dg-warning \"assignment makes integer from pointer without a cast\" } */\n+}"}]}