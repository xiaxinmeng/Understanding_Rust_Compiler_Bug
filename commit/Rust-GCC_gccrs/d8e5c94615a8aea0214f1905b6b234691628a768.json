{"sha": "d8e5c94615a8aea0214f1905b6b234691628a768", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhlNWM5NDYxNWE4YWVhMDIxNGYxOTA1YjZiMjM0NjkxNjI4YTc2OA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-23T21:45:46Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-23T21:45:46Z"}, "message": "(output_move_double): If the dest is register pair and both regs are used in src address...\n\n(output_move_double): If the dest is register pair and both regs are\nused in src address, use ADDR to compute src address, not ADDD, which\nthrows away scaled index.\n\nFrom-SVN: r7540", "tree": {"sha": "5e61e5dd6971c02f49ec68f136bb8e5df82cbf94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e61e5dd6971c02f49ec68f136bb8e5df82cbf94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8e5c94615a8aea0214f1905b6b234691628a768", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8e5c94615a8aea0214f1905b6b234691628a768", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8e5c94615a8aea0214f1905b6b234691628a768", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8e5c94615a8aea0214f1905b6b234691628a768/comments", "author": null, "committer": null, "parents": [{"sha": "014aa47e1e4d76db5f974efe51068d61ec5d176d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/014aa47e1e4d76db5f974efe51068d61ec5d176d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/014aa47e1e4d76db5f974efe51068d61ec5d176d"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "89cfbc38fc5125fd802426147fd5030ae54f5aaf", "filename": "gcc/config/ns32k/ns32k.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8e5c94615a8aea0214f1905b6b234691628a768/gcc%2Fconfig%2Fns32k%2Fns32k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8e5c94615a8aea0214f1905b6b234691628a768/gcc%2Fconfig%2Fns32k%2Fns32k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fns32k.c?ref=d8e5c94615a8aea0214f1905b6b234691628a768", "patch": "@@ -339,12 +339,12 @@ output_move_double (operands)\n \t  && reg_mentioned_p (latehalf[0], XEXP (operands[1], 0)))\n \t{\n \t  /* If both halves of dest are used in the src memory address,\n-\t     add the two regs and put them in the low reg (operands[0]).\n+\t     load the destination address into the low reg (operands[0]).\n \t     Then it works to load latehalf first.  */\n \t  rtx xops[2];\n-\t  xops[0] = latehalf[0];\n+\t  xops[0] = XEXP (operands[1], 0);\n \t  xops[1] = operands[0];\n-\t  output_asm_insn (\"addd %0,%1\", xops);\n+\t  output_asm_insn (\"addr %a0,%1\", xops);\n \t  operands[1] = gen_rtx (MEM, DImode, operands[0]);\n \t  latehalf[1] = adj_offsettable_operand (operands[1], 4);\n \t  /* The first half has the overlap, Do the late half first.  */"}]}