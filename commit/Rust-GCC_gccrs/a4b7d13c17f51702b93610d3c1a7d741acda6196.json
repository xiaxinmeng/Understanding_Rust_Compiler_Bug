{"sha": "a4b7d13c17f51702b93610d3c1a7d741acda6196", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRiN2QxM2MxN2Y1MTcwMmI5MzYxMGQzYzFhN2Q3NDFhY2RhNjE5Ng==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-06-04T11:17:58Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-06-04T11:17:58Z"}, "message": "output.h (merge_weak, [...]): Move protos from here...\n\n\t* output.h (merge_weak, assemble_alias,\n\tinitializer_constant_valid_p,\n\tinitializer_constant_valid_for_bitfield_p): Move protos from here...\n\t* tree.h: ... to here.\n\n\t* cgraphclones.c: Do not include output.h.\n\t* gimplify.c: Likewise.\n\t* reload.c: Likewise.\n\t* recog.c: Likewise.\n\t* tree-ssa-loop-ivopts.c: Likewise.\n\t* tree-switch-conversion.c: Likewise.\n\t* c-parser.c: Likewise.\n\t* c-typeck.c: Likewise.\n\n\t* Makefile.in: Fix dependencies.\n\nc-family/\n\t* c-common.c: Do not include output.h.\n\t* c-pragma.c: Likewise.\n\ncp/\n\t* semantics.c: Do not include output.h.\n\t* decl2.c: Likewise.\n\t* friend.c: Likewise.\n\t* typeck.c: Likewise.\n\t* typeck2.c: Likewise.\n\t* Make-lang.in: Fix dependencies.\n\nada/\n\t* gcc-interface/utils2.c: Do not include output.h.\n\t* gcc-interface/Make-lang.in: Fix dependencies.\n\nFrom-SVN: r188178", "tree": {"sha": "8e9c8694b65f0c085a2c42663cc1b4b5fb0e57b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e9c8694b65f0c085a2c42663cc1b4b5fb0e57b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4b7d13c17f51702b93610d3c1a7d741acda6196", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4b7d13c17f51702b93610d3c1a7d741acda6196", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4b7d13c17f51702b93610d3c1a7d741acda6196", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4b7d13c17f51702b93610d3c1a7d741acda6196/comments", "author": null, "committer": null, "parents": [{"sha": "0b8a03e10ef01bf8f44bbba141a0c2451317c887", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b8a03e10ef01bf8f44bbba141a0c2451317c887", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b8a03e10ef01bf8f44bbba141a0c2451317c887"}], "stats": {"total": 129, "additions": 74, "deletions": 55}, "files": [{"sha": "9e1821e83e8ce85d5527def86971bb0d89c295ff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -1,3 +1,19 @@\n+2012-06-04  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* output.h (merge_weak, assemble_alias,\n+\tinitializer_constant_valid_p,\n+\tinitializer_constant_valid_for_bitfield_p): Move protos from here...\n+\t* tree.h: ... to here.\n+\t* cgraphclones.c: Do not include output.h.\n+\t* gimplify.c: Likewise.\n+\t* reload.c: Likewise.\n+\t* recog.c: Likewise.\n+\t* tree-ssa-loop-ivopts.c: Likewise.\n+\t* tree-switch-conversion.c: Likewise.\n+\t* c-parser.c: Likewise.\n+\t* c-typeck.c: Likewise.\n+\t* Makefile.in: Fix dependencies.\n+\n 2012-06-04  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/46261"}, {"sha": "341949d579fe2a70f86b0dec34ea025fb5e7cd23", "filename": "gcc/Makefile.in", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -1900,13 +1900,13 @@ c-objc-common.o : c-objc-common.c c-objc-common.h \\\n \n c-parser.o : c-parser.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \t$(TM_H) $(TREE_H) $(C_TREE_H) $(C_COMMON_H) $(C_PRAGMA_H) $(CPPLIB_H) \\\n-\t$(GGC_H) $(TIMEVAR_H) $(INPUT_H) $(FLAGS_H) output.h \\\n+\t$(GGC_H) $(TIMEVAR_H) $(INPUT_H) $(FLAGS_H) \\\n \tgt-c-parser.h langhooks.h \\\n \t$(VEC_H) $(TARGET_H) $(CGRAPH_H) $(PLUGIN_H) \\\n \t c-family/c-objc.h\n \n c-typeck.o : c-typeck.c c-lang.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-\t$(TREE_H) $(C_TREE_H) $(TARGET_H) $(FLAGS_H) intl.h output.h \\\n+\t$(TREE_H) $(C_TREE_H) $(TARGET_H) $(FLAGS_H) intl.h \\\n \tlanghooks.h tree-iterator.h $(BITMAP_H) $(GIMPLE_H) \\\n \tc-family/c-objc.h\n \n@@ -2528,7 +2528,7 @@ tree-predcom.o: tree-predcom.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TM_P_H) \\\n    tree-affine.h $(TREE_INLINE_H) $(TREE_PRETTY_PRINT_H)\n tree-ssa-loop-ivopts.o : tree-ssa-loop-ivopts.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(EXPR_H) \\\n-   output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n+   $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(TREE_PASS_H) $(GGC_H) $(RECOG_H) insn-config.h $(HASHTAB_H) $(SCEV_H) \\\n    $(CFGLOOP_H) $(PARAMS_H) langhooks.h $(BASIC_BLOCK_H) \\\n    tree-affine.h pointer-set.h $(TARGET_H) \\\n@@ -2575,7 +2575,7 @@ tree-optimize.o : tree-optimize.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n gimplify.o : gimplify.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(GIMPLE_H) \\\n    $(DIAGNOSTIC_H) $(TREE_INLINE_H) langhooks.h \\\n    $(LANGHOOKS_DEF_H) $(TREE_FLOW_H) $(CGRAPH_H) $(TIMEVAR_H) $(TM_H) \\\n-   coretypes.h $(EXCEPT_H) $(FLAGS_H) $(RTL_H) $(FUNCTION_H) $(EXPR_H) output.h \\\n+   coretypes.h $(EXCEPT_H) $(FLAGS_H) $(RTL_H) $(FUNCTION_H) $(EXPR_H) \\\n    $(GGC_H) gt-gimplify.h $(HASHTAB_H) $(TARGET_H) $(DIAGNOSTIC_CORE_H) $(OPTABS_H) \\\n    $(SPLAY_TREE_H) $(VEC_H) tree-iterator.h $(TREE_PASS_H) $(TREE_PRETTY_PRINT_H)\n gimple-iterator.o : gimple-iterator.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n@@ -2940,7 +2940,7 @@ cgraphclones.o : cgraphclones.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(FIBHEAP_H) $(PARAMS_H) $(RTL_H) $(TIMEVAR_H) $(IPA_PROP_H) \\\n    tree-iterator.h $(COVERAGE_H) $(TREE_DUMP_H) \\\n    $(GIMPLE_PRETTY_PRINT_H) ipa-inline.h $(IPA_UTILS_H) \\\n-   $(LTO_STREAMER_H) output.h $(EXCEPT_H) $(GCC_PLUGIN_H) gt-cgraphclones.h\n+   $(LTO_STREAMER_H) $(EXCEPT_H) $(GCC_PLUGIN_H) gt-cgraphclones.h\n cgraphbuild.o : cgraphbuild.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) langhooks.h $(CGRAPH_H) intl.h pointer-set.h $(GIMPLE_H) \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) $(IPA_UTILS_H) $(EXCEPT_H) \\\n@@ -3238,7 +3238,7 @@ bitmap.o : bitmap.c $(CONFIG_H) $(SYSTEM_H)  coretypes.h \\\n vec.o : vec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(VEC_H) $(GGC_H) \\\n    $(DIAGNOSTIC_CORE_H) $(HASHTAB_H)\n reload.o : reload.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n-   $(FLAGS_H) output.h $(EXPR_H) $(OPTABS_H) reload.h $(RECOG_H) \\\n+   $(FLAGS_H) $(EXPR_H) $(OPTABS_H) reload.h $(RECOG_H) \\\n    hard-reg-set.h insn-config.h $(REGS_H) $(FUNCTION_H) real.h \\\n    addresses.h $(TM_P_H) $(PARAMS_H) $(TARGET_H) $(DF_H) ira.h $(DIAGNOSTIC_CORE_H)\n reload1.o : reload1.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n@@ -3384,7 +3384,7 @@ final.o : final.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(TARGET_DEF_H) $(TREE_PRETTY_PRINT_H)\n recog.o : recog.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(FUNCTION_H) $(BASIC_BLOCK_H) $(REGS_H) $(RECOG_H) $(EXPR_H) \\\n-   $(FLAGS_H) insn-config.h $(INSN_ATTR_H) output.h reload.h \\\n+   $(FLAGS_H) insn-config.h $(INSN_ATTR_H) reload.h \\\n    addresses.h $(TM_P_H) $(TIMEVAR_H) $(TREE_PASS_H) hard-reg-set.h \\\n    $(DF_H) $(DBGCNT_H) $(TARGET_H) $(DIAGNOSTIC_CORE_H)\n reg-stack.o : reg-stack.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\"}, {"sha": "98d10084b277ca8a84adcee50634fe3ba2c505b4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -1,3 +1,8 @@\n+2012-06-04  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* gcc-interface/utils2.c: Do not include output.h.\n+\t* gcc-interface/Make-lang.in: Fix dependencies.\n+\n 2012-05-29  Michael Matz  <matz@suse.de>\n \n \t* gcc-interface/utils.c (create_var_decl_1): Don't call expand_decl."}, {"sha": "c1a7b070ecc7925f0e69a8733b32e7ddf632cdfd", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -1284,7 +1284,7 @@ ada/utils.o : ada/gcc-interface/utils.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) -I.. $(ALL_CPPFLAGS) $< -o $@\n \n ada/utils2.o : ada/gcc-interface/utils2.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(TREE_H) $(FLAGS_H) toplev.h output.h $(TREE_INLINE_H) \\\n+   $(TM_H) $(TREE_H) $(FLAGS_H) toplev.h $(TREE_INLINE_H) \\\n    ada/gcc-interface/ada.h ada/types.h ada/atree.h ada/elists.h ada/namet.h \\\n    ada/nlists.h ada/snames.h ada/stringt.h ada/uintp.h ada/fe.h ada/sinfo.h \\\n    ada/einfo.h $(ADA_TREE_H) ada/gcc-interface/gigi.h"}, {"sha": "931d5bb312a796fb64ca72e7e4fb1c197ffad194", "filename": "gcc/ada/gcc-interface/utils2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fada%2Fgcc-interface%2Futils2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fada%2Fgcc-interface%2Futils2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils2.c?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -31,7 +31,6 @@\n #include \"flags.h\"\n #include \"toplev.h\"\n #include \"ggc.h\"\n-#include \"output.h\"\n #include \"tree-inline.h\"\n \n #include \"ada.h\""}, {"sha": "1b51d219c587713eeb80872e1ab88d50f28ee313", "filename": "gcc/c-decl.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -36,7 +36,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-inline.h\"\n #include \"flags.h\"\n #include \"function.h\"\n-#include \"output.h\"\n #include \"c-tree.h\"\n #include \"toplev.h\"\n #include \"tm_p.h\""}, {"sha": "79e2cf4be0ce21a45ba422c6ec4da6c6cf027f29", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -1,3 +1,8 @@\n+2012-06-04  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* c-common.c: Do not include output.h.\n+\t* c-pragma.c: Likewise.\n+\n 2012-05-31  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* c-ada-spec.c: Do not include output.h."}, {"sha": "4dd040b5fa5465b7436e81350682885bf33de14b", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"intl.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n-#include \"output.h\"\n #include \"c-pragma.h\"\n #include \"ggc.h\"\n #include \"c-common.h\""}, {"sha": "89a22a3dafe459b237f273687083cb544cf2aa90", "filename": "gcc/c-family/c-cppbuiltin.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fc-family%2Fc-cppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fc-family%2Fc-cppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-cppbuiltin.c?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -27,7 +27,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"c-common.h\"\n #include \"c-pragma.h\"\n-#include \"output.h\"\n+#include \"output.h\"\t\t/* For user_label_prefix.  */\n #include \"debug.h\"\t\t/* For dwarf2out_do_cfi_asm.  */\n #include \"tm_p.h\"\t\t/* For TARGET_CPU_CPP_BUILTINS & friends.  */\n #include \"target.h\""}, {"sha": "830ca81a0d50b903fe0b203bf27a61ff20ac0f6d", "filename": "gcc/c-family/c-pragma.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fc-family%2Fc-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fc-family%2Fc-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pragma.c?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"c-pragma.h\"\n #include \"flags.h\"\n #include \"c-common.h\"\n-#include \"output.h\"\n #include \"tm_p.h\"\t\t/* For REGISTER_TARGET_PRAGMAS (why is\n \t\t\t\t   this not a target hook?).  */\n #include \"vec.h\""}, {"sha": "b4135eedea5d509cbaaac7d0481f3e8ba556c807", "filename": "gcc/c-parser.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parser.c?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -49,7 +49,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"c-family/c-pragma.h\"\n #include \"c-tree.h\"\n #include \"flags.h\"\n-#include \"output.h\"\n #include \"ggc.h\"\n #include \"c-family/c-common.h\"\n #include \"c-family/c-objc.h\""}, {"sha": "00747ebc9c3599d663dd4a8d378cabb825e4f2b3", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -34,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"c-tree.h\"\n #include \"c-lang.h\"\n #include \"flags.h\"\n-#include \"output.h\"\n #include \"intl.h\"\n #include \"target.h\"\n #include \"tree-iterator.h\""}, {"sha": "1a32328c46ea3fffe29932a6d9857d56f5637bd6", "filename": "gcc/cgraphclones.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fcgraphclones.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fcgraphclones.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphclones.c?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -93,7 +93,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\"\n #include \"tree-dump.h\"\n #include \"gimple-pretty-print.h\"\n-#include \"output.h\"\n #include \"coverage.h\"\n #include \"ipa-inline.h\"\n #include \"ipa-utils.h\""}, {"sha": "1a2f8e6c39f664e8269926fda35aa2fd9c5f70f8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -1,3 +1,12 @@\n+2012-06-04  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* semantics.c: Do not include output.h.\n+\t* decl2.c: Likewise.\n+\t* friend.c: Likewise.\n+\t* typeck.c: Likewise.\n+\t* typeck2.c: Likewise.\n+\t* Make-lang.in: Fix dependencies.\n+\n 2012-06-01  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/52973"}, {"sha": "af355f05079a5b5e15abfe7c047baf3613c935db", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -277,19 +277,19 @@ cp/decl.o: cp/decl.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) cp/decl.h \\\n   intl.h tree-iterator.h pointer-set.h $(SPLAY_TREE_H) \\\n   c-family/c-objc.h\n cp/decl2.o: cp/decl2.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) cp/decl.h \\\n-  output.h toplev.h $(C_COMMON_H) gt-cp-decl2.h $(CGRAPH_H) \\\n+  toplev.h $(C_COMMON_H) gt-cp-decl2.h $(CGRAPH_H) \\\n   $(C_PRAGMA_H) $(TREE_DUMP_H) intl.h $(TARGET_H) $(GIMPLE_H) pointer-set.h \\\n   $(SPLAY_TREE_H) c-family/c-ada-spec.h \\\n   c-family/c-objc.h\n cp/cp-objcp-common.o : cp/cp-objcp-common.c $(CONFIG_H) $(SYSTEM_H) \\\n   coretypes.h $(TM_H) $(TREE_H) $(CXX_TREE_H) $(C_COMMON_H) \\\n   langhooks.h $(LANGHOOKS_DEF_H) $(DIAGNOSTIC_H) debug.h \\\n   $(CXX_PRETTY_PRINT_H) cp/cp-objcp-common.h gt-cp-cp-objcp-common.h\n-cp/typeck2.o: cp/typeck2.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) output.h \\\n+cp/typeck2.o: cp/typeck2.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) \\\n   $(TM_P_H) $(DIAGNOSTIC_CORE_H) gt-cp-typeck2.h $(REAL_H) intl.h\n cp/typeck.o: cp/typeck.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) \\\n   toplev.h $(DIAGNOSTIC_H) convert.h $(C_COMMON_H) $(TARGET_H) \\\n-  output.h c-family/c-objc.h\n+  c-family/c-objc.h\n cp/class.o: cp/class.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h \\\n   $(TARGET_H) convert.h $(CGRAPH_H) $(TREE_DUMP_H) gt-cp-class.h \\\n   $(SPLAY_TREE_H) pointer-set.h\n@@ -324,7 +324,7 @@ cp/error.o: cp/error.c $(CXX_TREE_H) $(TM_H) $(DIAGNOSTIC_H) \\\n cp/repo.o: cp/repo.c $(CXX_TREE_H) $(TM_H) toplev.h $(DIAGNOSTIC_CORE_H) \\\n   gt-cp-repo.h\n cp/semantics.o: cp/semantics.c $(CXX_TREE_H) $(TM_H) toplev.h \\\n-  $(FLAGS_H) output.h $(RTL_H) $(TIMEVAR_H) \\\n+  $(FLAGS_H) $(RTL_H) $(TIMEVAR_H) \\\n   $(TREE_INLINE_H) $(CGRAPH_H) $(TARGET_H) $(C_COMMON_H) $(GIMPLE_H) \\\n   bitmap.h gt-cp-semantics.h c-family/c-objc.h\n cp/dump.o: cp/dump.c $(CXX_TREE_H) $(TM_H) $(TREE_DUMP_H)"}, {"sha": "81e9db0bebc38d41362c2845335535e664b3be62", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -39,7 +39,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-inline.h\"\n #include \"decl.h\"\n #include \"intl.h\"\n-#include \"output.h\"\n+#include \"output.h\" /* for have_global_bss_p */\n #include \"toplev.h\"\n #include \"hashtab.h\"\n #include \"tm_p.h\""}, {"sha": "78e17af61a4e9403fa2fd0e012e33cf4bc4a571c", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -36,7 +36,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"cp-tree.h\"\n #include \"decl.h\"\n-#include \"output.h\"\n #include \"toplev.h\"\n #include \"timevar.h\"\n #include \"cpplib.h\""}, {"sha": "e68af3d14cd439c536683b86747b78219fe83bef", "filename": "gcc/cp/friend.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fcp%2Ffriend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fcp%2Ffriend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ffriend.c?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -25,7 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n-#include \"output.h\"\n \n /* Friend data structures are described in cp-tree.h.  */\n "}, {"sha": "4334d4c0916ed67c5fa27ae69e306d7b3c14f114", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -36,7 +36,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"intl.h\"\n #include \"toplev.h\"\n #include \"flags.h\"\n-#include \"output.h\"\n #include \"timevar.h\"\n #include \"diagnostic.h\"\n #include \"cgraph.h\""}, {"sha": "bca676bbe18fe439ff8a4558971f6cd1113d685b", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -34,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n-#include \"output.h\"\n #include \"diagnostic.h\"\n #include \"intl.h\"\n #include \"target.h\""}, {"sha": "688dabc7fbc9fee8dde1b203c3026ecfa2020a4f", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -36,7 +36,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"intl.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n-#include \"output.h\"\n #include \"diagnostic-core.h\"\n \n static tree"}, {"sha": "633e326dae02506512826baf2e946a571a1a8f55", "filename": "gcc/gimplify.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -37,7 +37,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hashtab.h\"\n #include \"flags.h\"\n #include \"function.h\"\n-#include \"output.h\"\n #include \"ggc.h\"\n #include \"diagnostic-core.h\"\n #include \"target.h\""}, {"sha": "d142230d19c1b7c4314b179f648c602e3350d463", "filename": "gcc/go/go-backend.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fgo%2Fgo-backend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fgo%2Fgo-backend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-backend.c?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -26,7 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"intl.h\"\n-#include \"output.h\"\n+#include \"output.h\"\t/* for assemble_string */\n #include \"target.h\"\n #include \"common/common-target.h\"\n "}, {"sha": "bfc852959a770aa2a51a7e5630842700ccddcd9a", "filename": "gcc/java/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -34,7 +34,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"obstack.h\"\n #include \"diagnostic-core.h\"\n #include \"toplev.h\"\n-#include \"output.h\"\n+#include \"output.h\" /* for switch_to_section and get_section */\n #include \"parse.h\"\n #include \"function.h\"\n #include \"ggc.h\""}, {"sha": "306fb1c2e5957f30e644fc721f575ae9409c5443", "filename": "gcc/output.h", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -157,11 +157,6 @@ extern const char *get_insn_template (int, rtx);\n \n /* Functions in varasm.c.  */\n \n-/* Declare DECL to be a weak symbol.  */\n-extern void declare_weak (tree);\n-/* Merge weak status.  */\n-extern void merge_weak (tree, tree);\n-\n /* Emit any pending weak declarations.  */\n extern void weak_finish (void);\n \n@@ -179,7 +174,6 @@ extern int decode_reg_name (const char *);\n    external name.  */\n extern int decode_reg_name_and_count (const char *, int *);\n \n-extern void assemble_alias (tree, tree);\n extern void do_assemble_alias (tree, tree);\n \n extern void default_assemble_visibility (tree, int);\n@@ -305,22 +299,6 @@ extern void output_quoted_string (FILE *, const char *);\n \n extern bool constructor_static_from_elts_p (const_tree);\n \n-/* Return nonzero if VALUE is a valid constant-valued expression\n-   for use in initializing a static variable; one that can be an\n-   element of a \"constant\" initializer.\n-\n-   Return null_pointer_node if the value is absolute;\n-   if it is relocatable, return the variable that determines the relocation.\n-   We assume that VALUE has been folded as much as possible;\n-   therefore, we do not need to check for such things as\n-   arithmetic-combinations of integers.  */\n-extern tree initializer_constant_valid_p (tree, tree);\n-\n-/* Return true if VALUE is a valid constant-valued expression\n-   for use in initializing a static bit-field; one that can be\n-   an element of a \"constant\" initializer.  */\n-extern bool initializer_constant_valid_for_bitfield_p (tree);\n-\n /* Output assembler code for constant EXP to FILE, with no label.\n    This includes the pseudo-op such as \".int\" or \".byte\", and a newline.\n    Assumes output_addressed_constants has been done on EXP already."}, {"sha": "9377d6358ad5a758b9b557ce18eb29ea780b2288", "filename": "gcc/recog.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -36,7 +36,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"function.h\"\n #include \"flags.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"reload.h\"\n #include \"target.h\"\n #include \"timevar.h\""}, {"sha": "e42cc5c041f0ec6d0406d87536fa988202f74cb1", "filename": "gcc/reload.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -106,7 +106,6 @@ a register with any other reload.  */\n #include \"addresses.h\"\n #include \"hard-reg-set.h\"\n #include \"flags.h\"\n-#include \"output.h\"\n #include \"function.h\"\n #include \"params.h\"\n #include \"target.h\""}, {"sha": "052a2006ae6c6ab95b7871b6a847deb3a968b04b", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -69,7 +69,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"output.h\"\n #include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\""}, {"sha": "f6b0b047e4f1e5b7ee217a6fd13c5ece92a81e21", "filename": "gcc/tree-switch-conversion.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Ftree-switch-conversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Ftree-switch-conversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-switch-conversion.c?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -89,7 +89,6 @@ eight) times the number of the actual switch branches. */\n #include \"tree-flow.h\"\n #include \"tree-flow-inline.h\"\n #include \"tree-ssa-operands.h\"\n-#include \"output.h\"\n #include \"input.h\"\n #include \"tree-pass.h\"\n #include \"gimple-pretty-print.h\""}, {"sha": "8513e554f658161314f473b2177d8bc41a5f59c2", "filename": "gcc/tree.h", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b7d13c17f51702b93610d3c1a7d741acda6196/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=a4b7d13c17f51702b93610d3c1a7d741acda6196", "patch": "@@ -5680,6 +5680,29 @@ extern bool decl_replaceable_p (tree);\n extern bool decl_binds_to_current_def_p (tree);\n extern enum tls_model decl_default_tls_model (const_tree);\n \n+/* Declare DECL to be a weak symbol.  */\n+extern void declare_weak (tree);\n+/* Merge weak status.  */\n+extern void merge_weak (tree, tree);\n+/* Make one symbol an alias for another.  */\n+extern void assemble_alias (tree, tree);\n+\n+/* Return nonzero if VALUE is a valid constant-valued expression\n+   for use in initializing a static variable; one that can be an\n+   element of a \"constant\" initializer.\n+\n+   Return null_pointer_node if the value is absolute;\n+   if it is relocatable, return the variable that determines the relocation.\n+   We assume that VALUE has been folded as much as possible;\n+   therefore, we do not need to check for such things as\n+   arithmetic-combinations of integers.  */\n+extern tree initializer_constant_valid_p (tree, tree);\n+\n+/* Return true if VALUE is a valid constant-valued expression\n+   for use in initializing a static bit-field; one that can be\n+   an element of a \"constant\" initializer.  */\n+extern bool initializer_constant_valid_for_bitfield_p (tree);\n+\n /* In stmt.c */\n extern void expand_computed_goto (tree);\n extern bool parse_output_constraint (const char **, int, int, int,"}]}