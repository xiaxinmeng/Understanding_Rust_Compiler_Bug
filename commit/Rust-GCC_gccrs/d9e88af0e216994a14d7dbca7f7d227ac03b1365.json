{"sha": "d9e88af0e216994a14d7dbca7f7d227ac03b1365", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDllODhhZjBlMjE2OTk0YTE0ZDdkYmNhN2Y3ZDIyN2FjMDNiMTM2NQ==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2005-12-17T23:29:21Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2005-12-17T23:29:21Z"}, "message": "m68k.md (m68k_output_function_prologue): Always call dwarf2out_def_cfa.\n\n2005-12-17  Paul Brook  <paul@codesourcery.com>\n\n\t* config/m68k/m68k.md (m68k_output_function_prologue): Always call\n\tdwarf2out_def_cfa. Only add space for frame pointer to cfa_offset\n\twhen frame_pointer_needed.\n\nFrom-SVN: r108725", "tree": {"sha": "009857b03dae950ea78dcb2270edffe38363f929", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/009857b03dae950ea78dcb2270edffe38363f929"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9e88af0e216994a14d7dbca7f7d227ac03b1365", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9e88af0e216994a14d7dbca7f7d227ac03b1365", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9e88af0e216994a14d7dbca7f7d227ac03b1365", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9e88af0e216994a14d7dbca7f7d227ac03b1365/comments", "author": null, "committer": null, "parents": [{"sha": "cceb18855ea7d7f2e897858656481174b6da5e93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cceb18855ea7d7f2e897858656481174b6da5e93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cceb18855ea7d7f2e897858656481174b6da5e93"}], "stats": {"total": 38, "additions": 23, "deletions": 15}, "files": [{"sha": "a2056a119a947d90fd570c691e9dbd36e8a70ce4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9e88af0e216994a14d7dbca7f7d227ac03b1365/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9e88af0e216994a14d7dbca7f7d227ac03b1365/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d9e88af0e216994a14d7dbca7f7d227ac03b1365", "patch": "@@ -1,3 +1,9 @@\n+2005-12-17  Paul Brook  <paul@codesourcery.com>\n+\n+\t* config/m68k/m68k.md (m68k_output_function_prologue): Always call\n+\tdwarf2out_def_cfa. Only add space for frame pointer to cfa_offset\n+\twhen frame_pointer_needed. \n+\n 2005-12-17  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* tree-inline.c (copy_body_r): Use explicit cast when converting"}, {"sha": "2ef980fe9cc7658eb187a5736c2c87b102c1d935", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9e88af0e216994a14d7dbca7f7d227ac03b1365/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9e88af0e216994a14d7dbca7f7d227ac03b1365/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=d9e88af0e216994a14d7dbca7f7d227ac03b1365", "patch": "@@ -559,16 +559,6 @@ m68k_output_function_prologue (FILE *stream,\n \t\t     \"\\tlink\" ASM_DOTW \" %s,%I0\\n\"\n \t\t     \"\\tadd\" ASM_DOT \"l %I%wd,%Rsp\\n\",\n \t\t     M68K_REGNAME (FRAME_POINTER_REGNUM), -fsize_with_regs);\n-\n-      if (dwarf2out_do_frame ())\n-\t{\n-\t  char *l;\n-          l = (char *) dwarf2out_cfi_label ();\n-\t  cfa_offset += 4;\n-\t  dwarf2out_reg_save (l, FRAME_POINTER_REGNUM, -cfa_offset);\n-\t  dwarf2out_def_cfa (l, FRAME_POINTER_REGNUM, cfa_offset);\n-\t  cfa_offset += current_frame.size;\n-\t}\n     }\n   else if (fsize_with_regs) /* !frame_pointer_needed */\n     {\n@@ -603,13 +593,25 @@ m68k_output_function_prologue (FILE *stream,\n       else /* fsize_with_regs >= 0x8000 */\n \tasm_fprintf (stream, \"\\tadd\" ASM_DOT \"l %I%wd,%Rsp\\n\",\n \t\t     -fsize_with_regs);\n+    } /* !frame_pointer_needed */\n \n-      if (dwarf2out_do_frame ())\n+  if (dwarf2out_do_frame ())\n+    {\n+      if (frame_pointer_needed)\n \t{\n-\t  cfa_offset += current_frame.size + 4;\n-\t  dwarf2out_def_cfa (\"\", STACK_POINTER_REGNUM, cfa_offset);\n-\t}\n-    } /* !frame_pointer_needed */\n+\t cfa_offset += current_frame.size + 4;\n+\t char *l;\n+\t  l = (char *) dwarf2out_cfi_label ();\n+\t cfa_offset += 4;                                                      +         dwarf2out_reg_save (l, FRAME_POINTER_REGNUM, -cfa_offset);\n+\t dwarf2out_def_cfa (l, FRAME_POINTER_REGNUM, cfa_offset);\n+\t cfa_offset += current_frame.size;\n+       }\n+      else\n+       {\n+\t cfa_offset += current_frame.size;\n+\t dwarf2out_def_cfa (\"\", STACK_POINTER_REGNUM, cfa_offset);\n+       }\n+    }\n \n   if (current_frame.fpu_mask)\n     {"}]}