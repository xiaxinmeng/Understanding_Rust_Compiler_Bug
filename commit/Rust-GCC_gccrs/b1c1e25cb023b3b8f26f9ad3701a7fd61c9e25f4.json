{"sha": "b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFjMWUyNWNiMDIzYjNiOGYyNmY5YWQzNzAxYTdmZDYxYzllMjVmNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-01-03T15:30:02Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-01-03T15:30:02Z"}, "message": "gen-soccon.c: New utility program to generate g-soccon.ads automatically.\n\n\t* gen-soccon.c: New utility program to generate g-soccon.ads\n\tautomatically.\n\n\t* socket.c, gsocket.h: Split inclusion of system header files into a\n\tgsocket.h file separated from socket.c, to allow reuse in gen-soccon.c.\n\n\t* g-soccon.ads, g-soccon-unixware.ads, g-soccon-tru64.ads,\n\tg-soccon-aix.ads, g-soccon-irix.ads, g-soccon-hpux.ads,\n\tg-soccon-interix.ads, g-soccon-solaris.ads, g-soccon-mingw.ads,\n\tg-soccon-vxworks.ads, g-soccon-freebsd.ads: Note that these files\n\tshould not be edited by hand anymore, but should be regenerated using\n\tgen-soccon.\n\nFrom-SVN: r92828", "tree": {"sha": "ff38df68a6a2cf36acb36fb9756271956ee76af3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff38df68a6a2cf36acb36fb9756271956ee76af3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/comments", "author": null, "committer": null, "parents": [{"sha": "ab4af6a54975fdcd2e65e87b41627cf4b266fb85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab4af6a54975fdcd2e65e87b41627cf4b266fb85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab4af6a54975fdcd2e65e87b41627cf4b266fb85"}], "stats": {"total": 705, "additions": 666, "deletions": 39}, "files": [{"sha": "7bfb0351295bfcfa31acc1312d9a0a80c9baf0e7", "filename": "gcc/ada/g-soccon-aix.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fg-soccon-aix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fg-soccon-aix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-aix.ads?ref=b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4", "patch": "@@ -36,6 +36,7 @@\n --  directly with'ed by an applications program.\n \n --  This is the version for AIX\n+--  Do not edit this file by hand, instead edit and re-run gen-soccon.c\n \n package GNAT.Sockets.Constants is\n "}, {"sha": "af7f274e63b04cdc8c0f7f599268b0c514099991", "filename": "gcc/ada/g-soccon-freebsd.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fg-soccon-freebsd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fg-soccon-freebsd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-freebsd.ads?ref=b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4", "patch": "@@ -36,6 +36,7 @@\n --  directly with'ed by an applications program.\n \n --  This is the version for i386 FreeBSD\n+--  Do not edit this file by hand, instead edit and re-run gen-soccon.c\n \n package GNAT.Sockets.Constants is\n "}, {"sha": "1ebf90a58e84b1f6a4bd216d8b1a37b3b50a740f", "filename": "gcc/ada/g-soccon-hpux.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fg-soccon-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fg-soccon-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-hpux.ads?ref=b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4", "patch": "@@ -36,6 +36,7 @@\n --  directly with'ed by an applications program.\n \n --  This is the version for HP/UX\n+--  Do not edit this file by hand, instead edit and re-run gen-soccon.c\n \n package GNAT.Sockets.Constants is\n "}, {"sha": "cd7829f13d926f1d60eabd6fff34c1106fe55739", "filename": "gcc/ada/g-soccon-interix.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fg-soccon-interix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fg-soccon-interix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-interix.ads?ref=b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4", "patch": "@@ -36,6 +36,7 @@\n --  directly with'ed by an applications program.\n \n --  This is the version for Interix\n+--  Do not edit this file by hand, instead edit and re-run gen-soccon.c\n \n package GNAT.Sockets.Constants is\n "}, {"sha": "0fa8987d6122ba18579874c5c85fb1c0845cfe97", "filename": "gcc/ada/g-soccon-irix.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fg-soccon-irix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fg-soccon-irix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-irix.ads?ref=b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4", "patch": "@@ -36,6 +36,7 @@\n --  directly with'ed by an applications program.\n \n --  This is the version for SGI\n+--  Do not edit this file by hand, instead edit and re-run gen-soccon.c\n \n package GNAT.Sockets.Constants is\n "}, {"sha": "0d8f9b0698b26c2bfef159a8c4d2b571c9d3f10c", "filename": "gcc/ada/g-soccon-mingw.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fg-soccon-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fg-soccon-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-mingw.ads?ref=b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4", "patch": "@@ -36,6 +36,7 @@\n --  directly with'ed by an applications program.\n \n --  This is the version for MINGW32 NT\n+--  Do not edit this file by hand, instead edit and re-run gen-soccon.c\n \n package GNAT.Sockets.Constants is\n "}, {"sha": "a8dfe51f55a4a609f20982fe2154e77964e94e4e", "filename": "gcc/ada/g-soccon-solaris.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fg-soccon-solaris.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fg-soccon-solaris.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-solaris.ads?ref=b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4", "patch": "@@ -36,6 +36,7 @@\n --  directly with'ed by an applications program.\n \n --  This is the version for Solaris\n+--  Do not edit this file by hand, instead edit and re-run gen-soccon.c\n \n package GNAT.Sockets.Constants is\n "}, {"sha": "51190f7688f7e7bd61016c568898a8d24224292c", "filename": "gcc/ada/g-soccon-tru64.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fg-soccon-tru64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fg-soccon-tru64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-tru64.ads?ref=b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4", "patch": "@@ -36,6 +36,7 @@\n --  directly with'ed by an applications program.\n \n --  This is the version for OSF\n+--  Do not edit this file by hand, instead edit and re-run gen-soccon.c\n \n package GNAT.Sockets.Constants is\n "}, {"sha": "71b4a651d5a16d27355dbc7ed407a7889c25ec22", "filename": "gcc/ada/g-soccon-unixware.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fg-soccon-unixware.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fg-soccon-unixware.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-unixware.ads?ref=b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4", "patch": "@@ -36,6 +36,7 @@\n --  directly with'ed by an applications program.\n \n --  This is the version for UnixWare\n+--  Do not edit this file by hand, instead edit and re-run gen-soccon.c\n \n package GNAT.Sockets.Constants is\n "}, {"sha": "1dd5c5a3500c7ee7562125f2a3172650f1ea71bb", "filename": "gcc/ada/g-soccon-vxworks.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fg-soccon-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fg-soccon-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-vxworks.ads?ref=b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4", "patch": "@@ -36,6 +36,7 @@\n --  directly with'ed by an applications program.\n \n --  This is the version for VxWorks\n+--  Do not edit this file by hand, instead edit and re-run gen-soccon.c\n \n package GNAT.Sockets.Constants is\n "}, {"sha": "c95eda573d80ee73d5311ab68e33db941c3a37aa", "filename": "gcc/ada/g-soccon.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fg-soccon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fg-soccon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon.ads?ref=b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4", "patch": "@@ -36,6 +36,7 @@\n --  directly with'ed by an applications program.\n \n --  This is the version for GNU/Linux\n+--  Do not edit this file by hand, instead edit and re-run gen-soccon.c\n \n package GNAT.Sockets.Constants is\n "}, {"sha": "de63816cc09285234c92ff5bafb631994c97e5e7", "filename": "gcc/ada/gen-soccon.c", "status": "added", "additions": 584, "deletions": 0, "changes": 584, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fgen-soccon.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fgen-soccon.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen-soccon.c?ref=b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4", "patch": "@@ -0,0 +1,584 @@\n+/*****************************************************************************\n+**                                                                          **\n+**                          GNAT SYSTEM UTILITIES                           **\n+**                                                                          **\n+**                           G E N - S O C C O N                            **\n+**                                                                          **\n+**              Copyright (C) 2004 Free Software Foundation, Inc.           **\n+**                                                                          **\n+** GNAT is free software;  you can  redistribute it  and/or modify it under **\n+** terms of the  GNU General Public License as published  by the Free Soft- **\n+** ware  Foundation;  either version 2,  or (at your option) any later ver- **\n+** sion.  GNAT is distributed in the hope that it will be useful, but WITH- **\n+** OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY **\n+** or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License **\n+** for  more details.  You should have  received  a copy of the GNU General **\n+** Public License  distributed with GNAT;  see file COPYING.  If not, write **\n+** to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, **\n+** MA 02111-1307, USA.                                                      **\n+**                                                                          **\n+** GNAT was originally developed  by the GNAT team at  New York University. **\n+** Extensive contributions were provided by Ada Core Technologies Inc.      **\n+**                                                                          **\n+******************************************************************************/\n+\n+/* This program generates g-soccon.ads */\n+\n+#include <stdio.h>\n+#include <string.h>\n+\n+#include \"socket.h\"\n+#include <netinet/in.h>\n+#include <netinet/tcp.h>\n+#include <sys/filio.h>\n+#include <netdb.h>\n+\n+struct line {\n+  char *text;\n+  char *value;\n+  char *comment;\n+  struct line *next;\n+};\n+\n+struct line *first = NULL, *last = NULL;\n+\n+#define TXT(_text) add_line(_text, NULL, NULL);\n+/* Plain text */\n+\n+#define _NL TXT(\"\")\n+/* Empty line */\n+\n+#define itoad(n) itoa (\"%d\", n)\n+#define itoax(n) itoa (\"16#%08x#\", n)\n+\n+#define CND(name,comment) add_line(#name, itoad (name), comment);\n+/* Constant (decimal) */\n+\n+#define CNX(name,comment) add_line(#name, itoax (name), comment);\n+/* Constant (hexadecimal) */\n+\n+#define CN_(name,comment) add_line(#name, name, comment);\n+/* Constant (generic) */\n+\n+void output (void);\n+/* Generate output spec */\n+\n+char *itoa (char *, int);\n+/* int to string */\n+\n+void add_line (char *, char*, char*);\n+\n+void main (void) {\n+\n+TXT(\"------------------------------------------------------------------------------\")\n+TXT(\"--                                                                          --\")\n+TXT(\"--                         GNAT COMPILER COMPONENTS                         --\")\n+TXT(\"--                                                                          --\")\n+TXT(\"--               G N A T . S O C K E T S . C O N S T A N T S                --\")\n+TXT(\"--                                                                          --\")\n+TXT(\"--                                 S p e c                                  --\")\n+TXT(\"--                                                                          --\")\n+TXT(\"--          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\")\n+TXT(\"--                                                                          --\")\n+TXT(\"-- GNAT is free software;  you can  redistribute it  and/or modify it under --\")\n+TXT(\"-- terms of the  GNU General Public License as published  by the Free Soft- --\")\n+TXT(\"-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\")\n+TXT(\"-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\")\n+TXT(\"-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\")\n+TXT(\"-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\")\n+TXT(\"-- for  more details.  You should have  received  a copy of the GNU General --\")\n+TXT(\"-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\")\n+TXT(\"-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\")\n+TXT(\"-- MA 02111-1307, USA.                                                      --\")\n+TXT(\"--                                                                          --\")\n+TXT(\"-- As a special exception,  if other files  instantiate  generics from this --\")\n+TXT(\"-- unit, or you link  this unit with other files  to produce an executable, --\")\n+TXT(\"-- this  unit  does not  by itself cause  the resulting  executable  to  be --\")\n+TXT(\"-- covered  by the  GNU  General  Public  License.  This exception does not --\")\n+TXT(\"-- however invalidate  any other reasons why  the executable file  might be --\")\n+TXT(\"-- covered by the  GNU Public License.                                      --\")\n+TXT(\"--                                                                          --\")\n+TXT(\"-- GNAT was originally developed  by the GNAT team at  New York University. --\")\n+TXT(\"-- Extensive contributions were provided by Ada Core Technologies Inc.      --\")\n+TXT(\"--                                                                          --\")\n+TXT(\"------------------------------------------------------------------------------\")\n+_NL\n+TXT(\"--  This package provides target dependent definitions of constant for use\")\n+TXT(\"--  by the GNAT.Sockets package (g-socket.ads). This package should not be\")\n+TXT(\"--  directly with'ed by an applications program.\")\n+_NL\n+TXT(\"--  This is the version for \" TARGET)\n+TXT(\"--  This file is generated automatically, do not modify it by hand! Instead,\")\n+TXT(\"--  make changes to gen-soccon.c and re-run it on each target.\")\n+_NL\n+TXT(\"package GNAT.Sockets.Constants is\")\n+_NL\n+TXT(\"   --------------\")\n+TXT(\"   -- Families --\")\n+TXT(\"   --------------\")\n+_NL\n+\n+#ifndef AF_INET\n+#define AF_INET -1\n+#endif\n+CND(AF_INET, \"IPv4 address family\")\n+\n+#ifndef AF_INET6\n+#define AF_INET6 -1\n+#endif\n+CND(AF_INET6, \"IPv6 address family\")\n+_NL\n+TXT(\"   -----------\")\n+TXT(\"   -- Modes --\")\n+TXT(\"   -----------\")\n+_NL\n+\n+#ifndef SOCK_STREAM\n+#define SOCK_STREAM -1\n+#endif\n+CND(SOCK_STREAM, \"Stream socket\")\n+\n+#ifndef SOCK_DGRAM\n+#define SOCK_DGRAM -1\n+#endif\n+CND(SOCK_DGRAM, \"Datagram socket\")\n+_NL\n+TXT(\"   -------------------\")\n+TXT(\"   -- Socket errors --\")\n+TXT(\"   -------------------\")\n+_NL\n+\n+#ifndef EACCES\n+#define EACCES -1\n+#endif\n+CND(EACCES, \"Permission denied\")\n+\n+#ifndef EADDRINUSE\n+#define EADDRINUSE -1\n+#endif\n+CND(EADDRINUSE, \"Address already in use\")\n+\n+#ifndef EADDRNOTAVAIL\n+#define EADDRNOTAVAIL -1\n+#endif\n+CND(EADDRNOTAVAIL, \"Cannot assign address\")\n+\n+#ifndef EAFNOSUPPORT\n+#define EAFNOSUPPORT -1\n+#endif\n+CND(EAFNOSUPPORT, \"Addr family not supported\")\n+\n+#ifndef EALREADY\n+#define EALREADY -1\n+#endif\n+CND(EALREADY, \"Operation in progress\")\n+\n+#ifndef EBADF\n+#define EBADF -1\n+#endif\n+CND(EBADF, \"Bad file descriptor\")\n+\n+#ifndef ECONNABORTED\n+#define ECONNABORTED -1\n+#endif\n+CND(ECONNABORTED, \"Connection aborted\")\n+\n+#ifndef ECONNREFUSED\n+#define ECONNREFUSED -1\n+#endif\n+CND(ECONNREFUSED, \"Connection refused\")\n+\n+#ifndef ECONNRESET\n+#define ECONNRESET -1\n+#endif\n+CND(ECONNRESET, \"Connection reset by peer\")\n+\n+#ifndef EDESTADDRREQ\n+#define EDESTADDRREQ -1\n+#endif\n+CND(EDESTADDRREQ, \"Destination addr required\")\n+\n+#ifndef EFAULT\n+#define EFAULT -1\n+#endif\n+CND(EFAULT, \"Bad address\")\n+\n+#ifndef EHOSTDOWN\n+#define EHOSTDOWN -1\n+#endif\n+CND(EHOSTDOWN, \"Host is down\")\n+\n+#ifndef EHOSTUNREACH\n+#define EHOSTUNREACH -1\n+#endif\n+CND(EHOSTUNREACH, \"No route to host\")\n+\n+#ifndef EINPROGRESS\n+#define EINPROGRESS -1\n+#endif\n+CND(EINPROGRESS, \"Operation now in progress\")\n+\n+#ifndef EINTR\n+#define EINTR -1\n+#endif\n+CND(EINTR, \"Interrupted system call\")\n+\n+#ifndef EINVAL\n+#define EINVAL -1\n+#endif\n+CND(EINVAL, \"Invalid argument\")\n+\n+#ifndef EIO\n+#define EIO -1\n+#endif\n+CND(EIO, \"Input output error\")\n+\n+#ifndef EISCONN\n+#define EISCONN -1\n+#endif\n+CND(EISCONN, \"Socket already connected\")\n+\n+#ifndef ELOOP\n+#define ELOOP -1\n+#endif\n+CND(ELOOP, \"Too many symbolic lynks\")\n+\n+#ifndef EMFILE\n+#define EMFILE -1\n+#endif\n+CND(EMFILE, \"Too many open files\")\n+\n+#ifndef EMSGSIZE\n+#define EMSGSIZE -1\n+#endif\n+CND(EMSGSIZE, \"Message too long\")\n+\n+#ifndef ENAMETOOLONG\n+#define ENAMETOOLONG -1\n+#endif\n+CND(ENAMETOOLONG, \"Name too long\")\n+\n+#ifndef ENETDOWN\n+#define ENETDOWN -1\n+#endif\n+CND(ENETDOWN, \"Network is down\")\n+\n+#ifndef ENETRESET\n+#define ENETRESET -1\n+#endif\n+CND(ENETRESET, \"Disconn. on network reset\")\n+\n+#ifndef ENETUNREACH\n+#define ENETUNREACH -1\n+#endif\n+CND(ENETUNREACH, \"Network is unreachable\")\n+\n+#ifndef ENOBUFS\n+#define ENOBUFS -1\n+#endif\n+CND(ENOBUFS, \"No buffer space available\")\n+\n+#ifndef ENOPROTOOPT\n+#define ENOPROTOOPT -1\n+#endif\n+CND(ENOPROTOOPT, \"Protocol not available\")\n+\n+#ifndef ENOTCONN\n+#define ENOTCONN -1\n+#endif\n+CND(ENOTCONN, \"Socket not connected\")\n+\n+#ifndef ENOTSOCK\n+#define ENOTSOCK -1\n+#endif\n+CND(ENOTSOCK, \"Operation on non socket\")\n+\n+#ifndef EOPNOTSUPP\n+#define EOPNOTSUPP -1\n+#endif\n+CND(EOPNOTSUPP, \"Operation not supported\")\n+\n+#ifndef EPFNOSUPPORT\n+#define EPFNOSUPPORT -1\n+#endif\n+CND(EPFNOSUPPORT, \"Unknown protocol family\")\n+\n+#ifndef EPROTONOSUPPORT\n+#define EPROTONOSUPPORT -1\n+#endif\n+CND(EPROTONOSUPPORT, \"Unknown protocol\")\n+\n+#ifndef EPROTOTYPE\n+#define EPROTOTYPE -1\n+#endif\n+CND(EPROTOTYPE, \"Unknown protocol type\")\n+\n+#ifndef ESHUTDOWN\n+#define ESHUTDOWN -1\n+#endif\n+CND(ESHUTDOWN, \"Cannot send once shutdown\")\n+\n+#ifndef ESOCKTNOSUPPORT\n+#define ESOCKTNOSUPPORT -1\n+#endif\n+CND(ESOCKTNOSUPPORT, \"Socket type not supported\")\n+\n+#ifndef ETIMEDOUT\n+#define ETIMEDOUT -1\n+#endif\n+CND(ETIMEDOUT, \"Connection timed out\")\n+\n+#ifndef ETOOMANYREFS\n+#define ETOOMANYREFS -1\n+#endif\n+CND(ETOOMANYREFS, \"Too many references\")\n+\n+#ifndef EWOULDBLOCK\n+#define EWOULDBLOCK -1\n+#endif\n+CND(EWOULDBLOCK, \"Operation would block\")\n+_NL\n+TXT(\"   -----------------\")\n+TXT(\"   -- Host errors --\")\n+TXT(\"   -----------------\")\n+_NL\n+\n+#ifndef HOST_NOT_FOUND\n+#define HOST_NOT_FOUND -1\n+#endif\n+CND(HOST_NOT_FOUND, \"Unknown host\")\n+\n+#ifndef TRY_AGAIN\n+#define TRY_AGAIN -1\n+#endif\n+CND(TRY_AGAIN, \"Host name lookup failure\")\n+\n+#ifndef NO_DATA\n+#define NO_DATA -1\n+#endif\n+CND(NO_DATA, \"No data record for name\")\n+\n+#ifndef NO_RECOVERY\n+#define NO_RECOVERY -1\n+#endif\n+CND(NO_RECOVERY, \"Non recoverable errors\")\n+_NL\n+TXT(\"   -------------------\")\n+TXT(\"   -- Control flags --\")\n+TXT(\"   -------------------\")\n+_NL\n+\n+#ifndef FIONBIO\n+#define FIONBIO -1\n+#endif\n+CNX(FIONBIO, \"Set/clear non-blocking io\")\n+\n+#ifndef FIONREAD\n+#define FIONREAD -1\n+#endif\n+CNX(FIONREAD, \"How many bytes to read\")\n+_NL\n+TXT(\"   --------------------\")\n+TXT(\"   -- Shutdown modes --\")\n+TXT(\"   --------------------\")\n+_NL\n+\n+#ifndef SHUT_RD\n+#define SHUT_RD -1\n+#endif\n+CND(SHUT_RD, \"No more recv\")\n+\n+#ifndef SHUT_WR\n+#define SHUT_WR -1\n+#endif\n+CND(SHUT_WR, \"No more send\")\n+\n+#ifndef SHUT_RDWR\n+#define SHUT_RDWR -1\n+#endif\n+CND(SHUT_RDWR, \"No more recv/send\")\n+_NL\n+TXT(\"   ---------------------\")\n+TXT(\"   -- Protocol levels --\")\n+TXT(\"   ---------------------\")\n+_NL\n+\n+#ifndef SOL_SOCKET\n+#define SOL_SOCKET -1\n+#endif\n+CND(SOL_SOCKET, \"Options for socket level\")\n+\n+#ifndef IPPROTO_IP\n+#define IPPROTO_IP -1\n+#endif\n+CND(IPPROTO_IP, \"Dummy protocol for IP\")\n+\n+#ifndef IPPROTO_UDP\n+#define IPPROTO_UDP -1\n+#endif\n+CND(IPPROTO_UDP, \"UDP\")\n+\n+#ifndef IPPROTO_TCP\n+#define IPPROTO_TCP -1\n+#endif\n+CND(IPPROTO_TCP, \"TCP\")\n+_NL\n+TXT(\"   -------------------\")\n+TXT(\"   -- Request flags --\")\n+TXT(\"   -------------------\")\n+_NL\n+\n+#ifndef MSG_OOB\n+#define MSG_OOB -1\n+#endif\n+CND(MSG_OOB, \"Process out-of-band data\")\n+\n+#ifndef MSG_PEEK\n+#define MSG_PEEK -1\n+#endif\n+CND(MSG_PEEK, \"Peek at incoming data\")\n+\n+#ifndef MSG_EOR\n+#define MSG_EOR -1\n+#endif\n+CND(MSG_EOR, \"Send end of record\")\n+\n+#ifndef MSG_WAITALL\n+#define MSG_WAITALL -1\n+#endif\n+CND(MSG_WAITALL, \"Wait for full reception\")\n+\n+#ifndef MSG_NOSIGNAL\n+#define MSG_NOSIGNAL -1\n+#endif\n+CND(MSG_NOSIGNAL, \"No SIGPIPE on send\")\n+\n+#ifdef __linux__\n+# define MSG_Forced_Flags \"MSG_NOSIGNAL\"\n+#else\n+# define MSG_Forced_Flags \"0\"\n+#endif\n+CN_(MSG_Forced_Flags, \"\")\n+TXT(\"   --  Flags set on all send(2) calls\")\n+\n+_NL\n+TXT(\"   --------------------\")\n+TXT(\"   -- Socket options --\")\n+TXT(\"   --------------------\")\n+_NL\n+\n+#ifndef TCP_NODELAY\n+#define TCP_NODELAY -1\n+#endif\n+CND(TCP_NODELAY, \"Do not coalesce packets\")\n+\n+#ifndef SO_SNDBUF\n+#define SO_SNDBUF -1\n+#endif\n+CND(SO_SNDBUF, \"Set/get send buffer size\")\n+\n+#ifndef SO_RCVBUF\n+#define SO_RCVBUF -1\n+#endif\n+CND(SO_RCVBUF, \"Set/get recv buffer size\")\n+\n+#ifndef SO_REUSEADDR\n+#define SO_REUSEADDR -1\n+#endif\n+CND(SO_REUSEADDR, \"Bind reuse local address\")\n+\n+#ifndef SO_KEEPALIVE\n+#define SO_KEEPALIVE -1\n+#endif\n+CND(SO_KEEPALIVE, \"Enable keep-alive msgs\")\n+\n+#ifndef SO_LINGER\n+#define SO_LINGER -1\n+#endif\n+CND(SO_LINGER, \"Defer close to flush data\")\n+\n+#ifndef SO_ERROR\n+#define SO_ERROR -1\n+#endif\n+CND(SO_ERROR, \"Get/clear error status\")\n+\n+#ifndef SO_BROADCAST\n+#define SO_BROADCAST -1\n+#endif\n+CND(SO_BROADCAST, \"Can send broadcast msgs\")\n+\n+#ifndef IP_ADD_MEMBERSHIP\n+#define IP_ADD_MEMBERSHIP -1\n+#endif\n+CND(IP_ADD_MEMBERSHIP, \"Join a multicast group\")\n+\n+#ifndef IP_DROP_MEMBERSHIP\n+#define IP_DROP_MEMBERSHIP -1\n+#endif\n+CND(IP_DROP_MEMBERSHIP, \"Leave a multicast group\")\n+\n+#ifndef IP_MULTICAST_TTL\n+#define IP_MULTICAST_TTL -1\n+#endif\n+CND(IP_MULTICAST_TTL, \"Set/get multicast TTL\")\n+\n+#ifndef IP_MULTICAST_LOOP\n+#define IP_MULTICAST_LOOP -1\n+#endif\n+CND(IP_MULTICAST_LOOP, \"Set/get mcast loopback\")\n+_NL\n+TXT(\"end GNAT.Sockets.Constants;\")\n+\n+output ();\n+}\n+\n+void\n+output (void) {\n+  int text_max = 0, value_max = 0, l;\n+  struct line *p;\n+  char fmt[64];\n+#define UPD_MAX(x) do { \\\n+  l = strlen (p->x); \\\n+  if (l > x ## _max) x ## _max = l; \\\n+} while (0)\n+\n+  for (p = first; p != NULL; p = p->next) {\n+    if (p->value != NULL) {\n+      UPD_MAX(text);\n+      UPD_MAX(value);\n+    }\n+  }\n+  sprintf (fmt, \"   %%-%ds : constant := %%%ds;%%s%%s\\n\",\n+    text_max, value_max);\n+\n+  for (p = first; p != NULL; p = p->next) {\n+    if (p->value == NULL) {\n+      printf (\"%s\\n\", p->text);\n+    } else {\n+      char *comment_sep = (strlen (p->comment) > 0)\n+                          ? \" --  \" : \"\";\n+      printf (fmt, p->text, p->value, comment_sep, p->comment);\n+    }\n+  }\n+}\n+\n+char *\n+itoa (char *fmt, int n) {\n+  char buf[32];\n+  sprintf (buf, fmt, n);\n+  return strdup (buf);\n+}\n+\n+void add_line (char *_text, char *_value, char *_comment) {\n+  struct line *l = (struct line *) malloc (sizeof (struct line));\n+  l->text = _text;\n+  l->value = _value;\n+  l->comment = _comment;\n+  l->next = NULL;\n+  if (last == NULL)\n+    first = last = l;\n+  else {\n+    last->next = l;\n+    last = l;\n+  }\n+}"}, {"sha": "134aa2620de4220f3eaae8d805f106f2818117ee", "filename": "gcc/ada/gsocket.h", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fgsocket.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fgsocket.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgsocket.h?ref=b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4", "patch": "@@ -0,0 +1,67 @@\n+/****************************************************************************\n+ *                                                                          *\n+ *                         GNAT COMPILER COMPONENTS                         *\n+ *                                                                          *\n+ *                               S O C K E T                                *\n+ *                                                                          *\n+ *                              C Header File                               *\n+ *                                                                          *\n+ *            Copyright (C) 2004, Free Software Foundation, Inc.            *\n+ *                                                                          *\n+ * GNAT is free software;  you can  redistribute it  and/or modify it under *\n+ * terms of the  GNU General Public License as published  by the Free Soft- *\n+ * ware  Foundation;  either version 2,  or (at your option) any later ver- *\n+ * sion.  GNAT is distributed in the hope that it will be useful, but WITH- *\n+ * OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY *\n+ * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License *\n+ * for  more details.  You should have  received  a copy of the GNU General *\n+ * Public License  distributed with GNAT;  see file COPYING.  If not, write *\n+ * to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, *\n+ * MA 02111-1307, USA.                                                      *\n+ *                                                                          *\n+ * As a  special  exception,  if you  link  this file  with other  files to *\n+ * produce an executable,  this file does not by itself cause the resulting *\n+ * executable to be covered by the GNU General Public License. This except- *\n+ * ion does not  however invalidate  any other reasons  why the  executable *\n+ * file might be covered by the  GNU Public License.                        *\n+ *                                                                          *\n+ * GNAT was originally developed  by the GNAT team at  New York University. *\n+ * Extensive contributions were provided by Ada Core Technologies Inc.      *\n+ *                                                                          *\n+ ****************************************************************************/\n+\n+#ifdef __vxworks\n+#include \"vxWorks.h\"\n+#endif\n+\n+#ifdef IN_RTS\n+#include \"tconfig.h\"\n+#include \"tsystem.h\"\n+\n+#if defined (WINNT)\n+#define FD_SETSIZE 1024\n+#include <windows.h>\n+\n+#ifdef __MINGW32__\n+#include \"mingw32.h\"\n+#if STD_MINGW\n+#include <winsock.h>\n+#else\n+#include <windows32/sockets.h>\n+#endif\n+#endif\n+#endif\n+\n+#if defined (VMS)\n+#define FD_SETSIZE 4096\n+#include <sys/time.h>\n+#endif\n+\n+#else\n+#include \"config.h\"\n+#include \"system.h\"\n+#endif\n+\n+#if !(defined (VMS) || defined (__MINGW32__))\n+# include <sys/socket.h>\n+#endif"}, {"sha": "cffb0284d5dbccf7f7abbd77e7d10f52dc984371", "filename": "gcc/ada/socket.c", "status": "modified", "additions": 4, "deletions": 39, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fsocket.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4/gcc%2Fada%2Fsocket.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsocket.c?ref=b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4", "patch": "@@ -2,11 +2,11 @@\n  *                                                                          *\n  *                         GNAT COMPILER COMPONENTS                         *\n  *                                                                          *\n- *                              S O C K E T                                 *\n+ *                               S O C K E T                                *\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *            Copyright (C) 2003, Free Software Foundation, Inc.            *\n+ *          Copyright (C) 2003-2004 Free Software Foundation, Inc.          *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -30,44 +30,9 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-/*  This file provides a portable binding to the fd set functions           */\n-\n-#ifdef __vxworks\n-#include \"vxWorks.h\"\n-#endif\n-\n-#ifdef IN_RTS\n-#include \"tconfig.h\"\n-#include \"tsystem.h\"\n-\n-#if defined (WINNT)\n-#define FD_SETSIZE 1024\n-#include <windows.h>\n-\n-#ifdef __MINGW32__\n-#include \"mingw32.h\"\n-#if STD_MINGW\n-#include <winsock.h>\n-#else\n-#include <windows32/sockets.h>\n-#endif\n-#endif\n-#endif\n-\n-#if defined (VMS)\n-#define FD_SETSIZE 4096\n-#include <sys/time.h>\n-#endif\n-\n-#else\n-#include \"config.h\"\n-#include \"system.h\"\n-#endif\n-\n-#if !(defined (VMS) || defined (__MINGW32__))\n-# include <sys/socket.h>\n-#endif\n+/*  This file provides a portable binding to the sockets API                */\n \n+#include \"gsocket.h\"\n #include \"raise.h\"\n \n extern void __gnat_disable_sigpipe (int fd);"}]}