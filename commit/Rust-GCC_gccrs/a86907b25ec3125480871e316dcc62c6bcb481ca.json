{"sha": "a86907b25ec3125480871e316dcc62c6bcb481ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg2OTA3YjI1ZWMzMTI1NDgwODcxZTMxNmRjYzYyYzZiY2I0ODFjYQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-05-18T16:34:39Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-05-18T16:34:39Z"}, "message": "tree-cfg.c (verify_gimple_expr): Allow conversions from pointers to sizetype and vice versa.\n\n2008-05-18  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-cfg.c (verify_gimple_expr): Allow conversions from\n\tpointers to sizetype and vice versa.\n\nFrom-SVN: r135504", "tree": {"sha": "70368411195a0b5b04ad6e103fa62c92da27024e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70368411195a0b5b04ad6e103fa62c92da27024e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a86907b25ec3125480871e316dcc62c6bcb481ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a86907b25ec3125480871e316dcc62c6bcb481ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a86907b25ec3125480871e316dcc62c6bcb481ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a86907b25ec3125480871e316dcc62c6bcb481ca/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "371a05751b4083b428df1ee560689341814afc65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/371a05751b4083b428df1ee560689341814afc65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/371a05751b4083b428df1ee560689341814afc65"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "0e398e356a09033ff67b16283669096cfc311188", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a86907b25ec3125480871e316dcc62c6bcb481ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a86907b25ec3125480871e316dcc62c6bcb481ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a86907b25ec3125480871e316dcc62c6bcb481ca", "patch": "@@ -1,3 +1,8 @@\n+2008-05-18  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-cfg.c (verify_gimple_expr): Allow conversions from\n+\tpointers to sizetype and vice versa.\n+\n 2008-05-18  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.c (ix86_secondary_reload): New static function."}, {"sha": "c0cb7b87488924b8f1c2e26271a6a5f57b0175f8", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a86907b25ec3125480871e316dcc62c6bcb481ca/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a86907b25ec3125480871e316dcc62c6bcb481ca/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=a86907b25ec3125480871e316dcc62c6bcb481ca", "patch": "@@ -3658,7 +3658,10 @@ verify_gimple_expr (tree expr)\n \t   there is no sign or zero extension involved.  */\n \tif (((POINTER_TYPE_P (type) && INTEGRAL_TYPE_P (TREE_TYPE (op)))\n \t     || (POINTER_TYPE_P (TREE_TYPE (op)) && INTEGRAL_TYPE_P (type)))\n-\t    && TYPE_PRECISION (type) == TYPE_PRECISION (TREE_TYPE (op)))\n+\t    && (TYPE_PRECISION (type) == TYPE_PRECISION (TREE_TYPE (op))\n+\t\t/* For targets were the precision of sizetype doesn't\n+\t\t   match that of pointers we need the following.  */\n+\t\t|| type == sizetype || TREE_TYPE (op) == sizetype))\n \t  return false;\n \n \t/* Allow conversion from integer to offset type and vice versa.  */"}]}