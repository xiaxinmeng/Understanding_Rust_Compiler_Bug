{"sha": "9c4d77fc1cc363342b5963b07e837d2b017cac43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWM0ZDc3ZmMxY2MzNjMzNDJiNTk2M2IwN2U4MzdkMmIwMTdjYWM0Mw==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-03-17T12:56:49Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-03-17T19:12:03Z"}, "message": "testsuite, Darwin : Fix match output for asan/memcmp-1.c.\n\nThe Darwin part of libasan produces different output for memcmp\ncases from other ports.  The GCC implementation does produce the\nsame output for this test as the clang one (modulo the two points\nbelow).\n\n1. To be more compatible with Linux, Darwin testcases that include\nstring.h should set _FORTIFY_SOURCE=0 since, otherwise, it will be\ndefaulted on and the _chk versions of the string builtins will be\nused.\n\n2. The system tool that handles symbolization (atos) is not reliable\nwith GCC's DWARF-2 output but, fortunately, all the platform\nversions that support the current sanitizers are able to handle\ndwarf-3 for this testcase.\n\ngcc/testsuite/ChangeLog:\n\n\t* c-c++-common/asan/memcmp-1.c: Add _FORTIFY_SOURCE=0 and\n\t-gdwarf-3 to the command line options.  Provide Darwin-\n\tspecific match lines for the expected output.", "tree": {"sha": "46b4d1bf81e83170c9df11cfe79d03687ead475c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46b4d1bf81e83170c9df11cfe79d03687ead475c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c4d77fc1cc363342b5963b07e837d2b017cac43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c4d77fc1cc363342b5963b07e837d2b017cac43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c4d77fc1cc363342b5963b07e837d2b017cac43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c4d77fc1cc363342b5963b07e837d2b017cac43/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7581eb38eeaa8af64f3cdfe2faf764f5883f16f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7581eb38eeaa8af64f3cdfe2faf764f5883f16f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7581eb38eeaa8af64f3cdfe2faf764f5883f16f"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "0d08c098e0ea061dc88a0b49fc7e9632b4f1b1e1", "filename": "gcc/testsuite/c-c++-common/asan/memcmp-1.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c4d77fc1cc363342b5963b07e837d2b017cac43/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fmemcmp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c4d77fc1cc363342b5963b07e837d2b017cac43/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fmemcmp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fmemcmp-1.c?ref=9c4d77fc1cc363342b5963b07e837d2b017cac43", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do run } */\n /* { dg-options \"-fno-builtin-memcmp\" } */\n+/* { dg-additional-options \"-D_FORTIFY_SOURCE=0 -gdwarf-3\" { target *-*-darwin* } } */\n /* { dg-shouldfail \"asan\" } */\n \n #include <string.h>\n@@ -16,5 +17,8 @@ main ()\n }\n \n /* { dg-output \"ERROR: AddressSanitizer: stack-buffer-overflow.*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #\\[1-9\\] 0x\\[0-9a-f\\]+ +(in _*(interceptor_|wrap_|)memcmp|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #\\[2-9\\] 0x\\[0-9a-f\\]+ +(in _*main|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #\\[1-9\\] 0x\\[0-9a-f\\]+ +(in _*(interceptor_|wrap_|)memcmp|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" { target { ! *-*-darwin* } } } */\n+/* { dg-output \"    #\\[2-9\\] 0x\\[0-9a-f\\]+ +(in _*main|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" { target { ! *-*-darwin* } } } */\n+\n+/* { dg-output \"    #\\[0-9\\] 0x\\[0-9a-f\\]+ +(in MemcmpInterceptorCommon|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" { target *-*-darwin* } } */\n+/* { dg-output \"    #\\[1-9\\] 0x\\[0-9a-f\\]+ +(in wrap_(memcmp|bcmp)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" { target *-*-darwin* } } */"}]}