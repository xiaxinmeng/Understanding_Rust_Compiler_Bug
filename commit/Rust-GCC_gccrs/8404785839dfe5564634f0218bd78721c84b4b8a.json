{"sha": "8404785839dfe5564634f0218bd78721c84b4b8a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQwNDc4NTgzOWRmZTU1NjQ2MzRmMDIxOGJkNzg3MjFjODRiNGI4YQ==", "commit": {"author": {"name": "Robert Millan", "email": "rmh.gcc@aybabtu.com", "date": "2009-12-30T10:53:31Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-12-30T10:53:31Z"}, "message": "re PR other/42537 ([PATCH] misc spelling fixes)\n\n/gcc\n2009-12-30  Robert Millan  <rmh.gcc@aybabtu.com>\n\n\tPR other/42537\n\t* errors.c: Fix typo in comment.\n\t* graphite-sese-to-poly.c: Likewise.\n\t* profile.c (is_inconsistent): Fix typo in string.\n\n/libjava\n2009-12-30  Robert Millan  <rmh.gcc@aybabtu.com>\n\n\tPR other/42537\n\t* classpath/java/rmi/activation/Activatable.java: Fix typos in comment.\n\nFrom-SVN: r155518", "tree": {"sha": "f4a8cde4def020c6f13f9049140e74e2ea47f9a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4a8cde4def020c6f13f9049140e74e2ea47f9a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8404785839dfe5564634f0218bd78721c84b4b8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8404785839dfe5564634f0218bd78721c84b4b8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8404785839dfe5564634f0218bd78721c84b4b8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8404785839dfe5564634f0218bd78721c84b4b8a/comments", "author": null, "committer": null, "parents": [{"sha": "0ac3a9af09c7b4afc87bcafc032522bdd15a40f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ac3a9af09c7b4afc87bcafc032522bdd15a40f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ac3a9af09c7b4afc87bcafc032522bdd15a40f4"}], "stats": {"total": 42, "additions": 27, "deletions": 15}, "files": [{"sha": "8e2ee77bba3c4b9e84a3d7ffb244b6071fb301aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8404785839dfe5564634f0218bd78721c84b4b8a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8404785839dfe5564634f0218bd78721c84b4b8a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8404785839dfe5564634f0218bd78721c84b4b8a", "patch": "@@ -1,3 +1,10 @@\n+2009-12-30  Robert Millan  <rmh.gcc@aybabtu.com>\n+\n+\tPR other/42537\n+\t* errors.c: Fix typo in comment.\n+\t* graphite-sese-to-poly.c: Likewise.\n+\t* profile.c (is_inconsistent): Fix typo in string.\n+\n 2009-12-29  Ian Lance Taylor  <iant@google.com>\n \n \tPR middle-end/42099\n@@ -34,7 +41,7 @@\n \t* config/avr/avr-c.c: New File.\n \t(avr_cpu_cpp_builtins) : Add.\n \t* config/avr/t-avr: Add make information for avr-c.\n-\t* config.gcc (avr-*-*): Include avr-c.o as c and cpp object. \n+\t* config.gcc (avr-*-*): Include avr-c.o as c and cpp object.\n \n 2009-12-24  Andy Hutchinson  <hutchinsonandy@gcc.gnu.org>\n "}, {"sha": "d76fba9025223ef82194415eb0cc4864cee36760", "filename": "gcc/ChangeLog-2002", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8404785839dfe5564634f0218bd78721c84b4b8a/gcc%2FChangeLog-2002", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8404785839dfe5564634f0218bd78721c84b4b8a/gcc%2FChangeLog-2002", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog-2002?ref=8404785839dfe5564634f0218bd78721c84b4b8a", "patch": "@@ -4241,7 +4241,7 @@ Tue Oct 22 19:07:03 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* real.c (sticky_rshift_significand): Return inexact, don't\n \tor it in immediately.\n-\t(sub_significands): Accept incomming carry.\n+\t(sub_significands): Accept incoming carry.\n \t(div_significands, rtd_divmod): Update for sub_significands change.\n \t(round_for_format): Update for sticky_rshift_significand change.\n \t(do_add): Don't involve the inexact bit in addition, do give the\n@@ -27738,7 +27738,7 @@ objc:\n \t(INIT_CUMULATIVE_ARGS, INIT_CUMULATIVE_INCOMING_ARGS): Update.\n \t* config/ia64/ia64.c (ia64_function_arg_advance): Set int_regs.\n \t(ia64_expand_prologue): Look at int_regs, not words, for number\n-\tof incomming int regs.\n+\tof incoming int regs.\n \n 2002-03-22  Andrew MacLeod  <amacleod@redhat.com>\n "}, {"sha": "bd366c8dd6919641a4270439d1353466fd226e45", "filename": "gcc/ChangeLog-2005", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8404785839dfe5564634f0218bd78721c84b4b8a/gcc%2FChangeLog-2005", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8404785839dfe5564634f0218bd78721c84b4b8a/gcc%2FChangeLog-2005", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog-2005?ref=8404785839dfe5564634f0218bd78721c84b4b8a", "patch": "@@ -6100,7 +6100,7 @@\n \n \tPR 23706\n \t* mode-switching.c (optimize_mode_switching): Clear transp bit\n-\tfor block with incomming abnormal edges.\n+\tfor block with incoming abnormal edges.\n \n \t* config/sh/sh.c (fpscr_values, emit_fpu_switch): New.\n \t(fpscr_set_from_mem): Use them."}, {"sha": "1d661d0d70bf36fdee9b8fd90d2ad397ec638a77", "filename": "gcc/ChangeLog-2006", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8404785839dfe5564634f0218bd78721c84b4b8a/gcc%2FChangeLog-2006", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8404785839dfe5564634f0218bd78721c84b4b8a/gcc%2FChangeLog-2006", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog-2006?ref=8404785839dfe5564634f0218bd78721c84b4b8a", "patch": "@@ -21081,7 +21081,7 @@\n \n \tPR tree-opt/25315\n \tPR tree-opt/25857\n-\t* tree-ssa-pre.c (insert_extra_phis): If an incomming edge is abnormal\n+\t* tree-ssa-pre.c (insert_extra_phis): If an incoming edge is abnormal\n \treturn from the function.\n \n 2006-01-22  Zack Weinberg  <zackw@panix.com>"}, {"sha": "602745f7ede823b948e1fea2299d297d38b7a3b8", "filename": "gcc/cp/ChangeLog-2004", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8404785839dfe5564634f0218bd78721c84b4b8a/gcc%2Fcp%2FChangeLog-2004", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8404785839dfe5564634f0218bd78721c84b4b8a/gcc%2Fcp%2FChangeLog-2004", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog-2004?ref=8404785839dfe5564634f0218bd78721c84b4b8a", "patch": "@@ -4031,7 +4031,7 @@\n \tdfs_accumulate_vtbls_inits, build_vbase_offset_vtbl_entries,\n \tbuild_vcall_offset_vtbl_entries, add_vcall_offset_vtbl_entries_r,\n \tadd_vcall_offset_vtbl_entries_1): Likewise.\n-\t* decl.c (xref_basetypes): Incomming virtual base indicated by\n+\t* decl.c (xref_basetypes): Incoming virtual base indicated by\n \tTREE_TYPE. Adjust.\n \t* dump.c (cp_dump_tree): Use BINFO_VIRTUAL_P.\n \t* init.c (finish_init_stmts, sort_mem_initializers,"}, {"sha": "040dfdd09523126cf34454b59a9b0d6ee3ba8551", "filename": "gcc/errors.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8404785839dfe5564634f0218bd78721c84b4b8a/gcc%2Ferrors.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8404785839dfe5564634f0218bd78721c84b4b8a/gcc%2Ferrors.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ferrors.c?ref=8404785839dfe5564634f0218bd78721c84b4b8a", "patch": "@@ -104,7 +104,7 @@ internal_error (const char *format, ...)\n    shares no directory elements with the pathname of __FILE__.  This\n    is used by fancy_abort() to print `Internal compiler error in expr.c'\n    instead of `Internal compiler error in ../../GCC/gcc/expr.c'.  This\n-   version is ment to be used for the gen* programs and therefor need not\n+   version is meant to be used for the gen* programs and therefor need not\n    handle subdirectories.  */\n \n const char *"}, {"sha": "3be2d8603912cb76e4e17697160f7211eba387ce", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8404785839dfe5564634f0218bd78721c84b4b8a/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8404785839dfe5564634f0218bd78721c84b4b8a/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=8404785839dfe5564634f0218bd78721c84b4b8a", "patch": "@@ -2245,7 +2245,7 @@ rewrite_phi_out_of_ssa (gimple_stmt_iterator *psi)\n \t |  end_2\n \t | end_1\n \n-\t whereas inserting the copy on the incomming edge is correct\n+\t whereas inserting the copy on the incoming edge is correct\n \n \t | a = ...\n \t | loop_1"}, {"sha": "ac460464697cef6abbb60cb8bce2fac952a26c97", "filename": "gcc/profile.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8404785839dfe5564634f0218bd78721c84b4b8a/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8404785839dfe5564634f0218bd78721c84b4b8a/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=8404785839dfe5564634f0218bd78721c84b4b8a", "patch": "@@ -343,7 +343,7 @@ is_inconsistent (void)\n         {\n \t  if (dump_file)\n \t    {\n-\t      fprintf (dump_file, \"BB %i count does not match sum of incomming edges \"\n+\t      fprintf (dump_file, \"BB %i count does not match sum of incoming edges \"\n \t\t       HOST_WIDEST_INT_PRINT_DEC\" should be \" HOST_WIDEST_INT_PRINT_DEC,\n \t\t       bb->index,\n \t\t       bb->count,"}, {"sha": "5a64e2534380d92fd851400041b2448f7288c88e", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8404785839dfe5564634f0218bd78721c84b4b8a/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8404785839dfe5564634f0218bd78721c84b4b8a/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=8404785839dfe5564634f0218bd78721c84b4b8a", "patch": "@@ -1,3 +1,8 @@\n+2009-12-30  Robert Millan  <rmh.gcc@aybabtu.com>\n+\n+\tPR other/42537\n+\t* classpath/java/rmi/activation/Activatable.java: Fix typos in comment.\n+\n 2009-12-14  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* configure.ac: Remove code to un-precious-ize CC, CXX,\n@@ -18,11 +23,11 @@\n \n 2009-12-09  Bryce McKinlay  <bmckinlay@gmail.com>\n \n-\tPR java/41991  \n+\tPR java/41991\n \t* configure.ac (SYSTEMSPEC): Pass -allow_stack_execute to Darwin\n \tlinker.\n \t* Makefile.am (gij_LDFLAGS): Remove extra_gij_ldflags.\n-\t* configure: Regenerate.  \n+\t* configure: Regenerate.\n \t* Makefile.in: Regenerate.\n \n 2009-12-08  Eric Botcazou  <ebotcazou@adacore.com>\n@@ -262,7 +267,7 @@\n \t(PrintStream(File, String)): Likewise.\n \t(PrintStream(String)): Likewise.\n \t(PrintStream(String, String)): Likewise.\n-\t\n+\n 2009-07-24  Kai Tietz  <kai.tietz@onevision.com>\n \n \t* gnu/java/security/jce/prng/natVMSecureRandomWin32.cc: New Win32"}, {"sha": "6977d984c546901fa13e26dd2161ae69e0c28230", "filename": "libjava/classpath/java/rmi/activation/Activatable.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8404785839dfe5564634f0218bd78721c84b4b8a/libjava%2Fclasspath%2Fjava%2Frmi%2Factivation%2FActivatable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8404785839dfe5564634f0218bd78721c84b4b8a/libjava%2Fclasspath%2Fjava%2Frmi%2Factivation%2FActivatable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Frmi%2Factivation%2FActivatable.java?ref=8404785839dfe5564634f0218bd78721c84b4b8a", "patch": "@@ -150,7 +150,7 @@ protected Activatable(String codebase, MarshalledObject<?> data,\n    * constructor when the object itself is activated via its special\n    * \"activation\" constructor with the two parameters ({@link ActivationID},\n    * {@link MarshalledObject}). As a side effect, the object is exported and is\n-   * available to accept incomming calls.\n+   * available to accept incoming calls.\n    * \n    * @param anId the activation id\n    * @param port the port, on which the activatable will be listening\n@@ -179,7 +179,7 @@ protected Activatable(ActivationID anId, int port) throws RemoteException\n    * constructor when the object itself is activated via its special\n    * \"activation\" constructor with the two parameters ({@link ActivationID},\n    * {@link MarshalledObject}). As a side effect, the object is exported and is\n-   * available to accept incomming calls.\n+   * available to accept incoming calls.\n    * \n    * @param anId the activation id\n    * @param port the port, on which the activatable will be listening\n@@ -412,7 +412,7 @@ public static Remote exportObject(Remote obj, ActivationID id, int port,\n \n   /**\n    * Make the remote object unavailable for incoming calls. This method also\n-   * unregisters the object, so it cannot be activated again by incomming call\n+   * unregisters the object, so it cannot be activated again by incoming call\n    * (unless registered).\n    * \n    * @param obj the object to unexport"}]}