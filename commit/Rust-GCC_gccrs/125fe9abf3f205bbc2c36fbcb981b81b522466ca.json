{"sha": "125fe9abf3f205bbc2c36fbcb981b81b522466ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI1ZmU5YWJmM2YyMDViYmMyYzM2ZmJjYjk4MWI4MWI1MjI0NjZjYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-06-20T14:51:04Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-06-20T14:51:04Z"}, "message": "re PR debug/86194 (ICE: SIGSEGV in avoid_constant_pool_reference (simplify-rtx.c:215) with -O -g -mavx512bw)\n\n\tPR debug/86194\n\t* var-tracking.c (use_narrower_mode_test): Check if shift amount can\n\tbe narrowed.\n\n\t* gcc.target/i386/pr86194.c: New test.\n\nFrom-SVN: r261807", "tree": {"sha": "6dc80876fb8dbc1fb96fd0405677f44dbd1c36b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6dc80876fb8dbc1fb96fd0405677f44dbd1c36b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/125fe9abf3f205bbc2c36fbcb981b81b522466ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/125fe9abf3f205bbc2c36fbcb981b81b522466ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/125fe9abf3f205bbc2c36fbcb981b81b522466ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/125fe9abf3f205bbc2c36fbcb981b81b522466ca/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c81a5aecc58eb17bc951d0306945c029439b5fcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c81a5aecc58eb17bc951d0306945c029439b5fcb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c81a5aecc58eb17bc951d0306945c029439b5fcb"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "7b399f1a3b9bb8b3a68f3639a5001f4f720b00ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125fe9abf3f205bbc2c36fbcb981b81b522466ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125fe9abf3f205bbc2c36fbcb981b81b522466ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=125fe9abf3f205bbc2c36fbcb981b81b522466ca", "patch": "@@ -1,5 +1,9 @@\n 2018-06-20  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR debug/86194\n+\t* var-tracking.c (use_narrower_mode_test): Check if shift amount can\n+\tbe narrowed.\n+\n \tPR tree-optimization/86231\n \t* tree-vrp.c (union_ranges): For (  [  )  ] or (   )[   ] range and\n \tanti-range don't overwrite *vr0min before using it to compute *vr0max."}, {"sha": "ce89b3348f66f941fe92d09af751835261a55034", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125fe9abf3f205bbc2c36fbcb981b81b522466ca/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125fe9abf3f205bbc2c36fbcb981b81b522466ca/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=125fe9abf3f205bbc2c36fbcb981b81b522466ca", "patch": "@@ -1,5 +1,8 @@\n 2018-06-20  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR debug/86194\n+\t* gcc.target/i386/pr86194.c: New test.\n+\n \tPR tree-optimization/86231\n \t* gcc.dg/tree-ssa/vrp119.c: New test.\n \t* gcc.c-torture/execute/pr86231.c: New test."}, {"sha": "0993155f0c469f4ad2e1c5a072b2e4374c7fbd66", "filename": "gcc/testsuite/gcc.target/i386/pr86194.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125fe9abf3f205bbc2c36fbcb981b81b522466ca/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr86194.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125fe9abf3f205bbc2c36fbcb981b81b522466ca/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr86194.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr86194.c?ref=125fe9abf3f205bbc2c36fbcb981b81b522466ca", "patch": "@@ -0,0 +1,24 @@\n+/* PR debug/86194 */\n+/* { dg-do compile { target int128 } } */\n+/* { dg-options \"-O -g -mavx512bw\" } */\n+\n+typedef unsigned U __attribute__ ((vector_size (64)));\n+typedef unsigned long V __attribute__ ((vector_size (64)));\n+typedef unsigned __int128 W __attribute__ ((vector_size (64)));\n+\n+U u;\n+\n+W\n+bar (W w)\n+{\n+  U k = u;\n+  w <<= (W)(U) { 5, 3, 3, 0, 7, 3, 1, 3, k[7] };\n+  k += (U) { -(char)w[3] } != k;\n+  return (W)k + w;\n+}\n+\n+void\n+foo (void)\n+{\n+  u = (U){ bar ((W)(V) { 0, ~0, 0, 0, 0, 0, ~0 })[0] };\n+}"}, {"sha": "8e800960b6d0faab28197b68823200a480206f28", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125fe9abf3f205bbc2c36fbcb981b81b522466ca/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125fe9abf3f205bbc2c36fbcb981b81b522466ca/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=125fe9abf3f205bbc2c36fbcb981b81b522466ca", "patch": "@@ -964,6 +964,24 @@ use_narrower_mode_test (rtx x, const_rtx subreg)\n \t  case MULT:\n \t    break;\n \t  case ASHIFT:\n+\t    if (GET_MODE (XEXP (x, 1)) != VOIDmode)\n+\t      {\n+\t\tenum machine_mode mode = GET_MODE (subreg);\n+\t\trtx op1 = XEXP (x, 1);\n+\t\tenum machine_mode op1_mode = GET_MODE (op1);\n+\t\tif (GET_MODE_PRECISION (as_a <scalar_int_mode> (mode))\n+\t\t    < GET_MODE_PRECISION (as_a <scalar_int_mode> (op1_mode)))\n+\t\t  {\n+\t\t    poly_uint64 byte = subreg_lowpart_offset (mode, op1_mode);\n+\t\t    if (GET_CODE (op1) == SUBREG || GET_CODE (op1) == CONCAT)\n+\t\t      {\n+\t\t\tif (!simplify_subreg (mode, op1, op1_mode, byte))\n+\t\t\t  return false;\n+\t\t      }\n+\t\t    else if (!validate_subreg (mode, op1_mode, op1, byte))\n+\t\t      return false;\n+\t\t  }\n+\t      }\n \t    iter.substitute (XEXP (x, 0));\n \t    break;\n \t  default:"}]}