{"sha": "d5587eca17799a4737e2134b1fc4f153cfbed341", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU1ODdlY2ExNzc5OWE0NzM3ZTIxMzRiMWZjNGYxNTNjZmJlZDM0MQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-10-07T18:49:33Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-10-07T18:49:33Z"}, "message": "acinclude.m4: Remove CPU_FLAGS\n\n\n\n2000-10-07  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n\n\t* acinclude.m4: Remove CPU_FLAGS\n\t* libio/Makefile.am: Here too.\n\t* Makefile.am: Here too.\n\n\t* src/Makefile.am (CONFIG_INCLUDES): Remove.\n\t(INCLUDES): Remove CONFIG_INCLUDES.\n\t(cpu_headers): Remove.\n\t(myinstallheaders): Remove cpu_headers.\n\t(generated_headers): Rename to build_headers.\n\t(build_headers): Add atomicity.h, ctype_base.h,\n\tctype_specializations.h.\n\n\t* config/os: New directory.\n\t* config/aix: Move to...\n\t* config/bsd: Move to...\n\t* config/generic: Move to...\n\t* config/gnu-linux: Move to...\n\t* config/irix: Move to...\n\t* config/newlib: Move to...\n\t* config/solaris: Move to...\n\t* config/os/*: Here.\n\nFrom-SVN: r36777", "tree": {"sha": "a1cd3e49cd77b31c009b0c4754c3cff5499f2520", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1cd3e49cd77b31c009b0c4754c3cff5499f2520"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5587eca17799a4737e2134b1fc4f153cfbed341", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5587eca17799a4737e2134b1fc4f153cfbed341", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5587eca17799a4737e2134b1fc4f153cfbed341", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5587eca17799a4737e2134b1fc4f153cfbed341/comments", "author": null, "committer": null, "parents": [{"sha": "c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c81a475f00bd63bcc907938e4bb0f9edb11f1fde"}], "stats": {"total": 1873, "additions": 0, "deletions": 1873}, "files": [{"sha": "bae6bb4a4583bfce94e965a9489f8e235b131023", "filename": "libstdc++-v3/config/aix/bits/ctype_base.h", "status": "removed", "additions": 0, "deletions": 62, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Faix%2Fbits%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Faix%2Fbits%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Faix%2Fbits%2Fctype_base.h?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,62 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 2000, 1999 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// Information as gleaned from /usr/include/ctype.h\n-  \n-  struct ctype_base\n-  {\n-    typedef unsigned char \tmask;\n-    // Non-standard typedefs.\n-    typedef const int* \t\t__to_type;\n-\n-    enum\n-    {\n-      space = _ISSPACE,\n-      print = _ISPRINT,\n-      cntrl = _ISCNTRL,\n-      upper = _ISUPPER,\n-      lower = _ISLOWER,\n-      alpha = _ISALPHA,\n-      digit = _ISDIGIT,\n-      punct = _ISPUNCT,\n-      xdigit = _ISXDIGIT,\n-      alnum = _ISALNUM,\n-      graph = _ISGRAPH\n-    };\n-  };\n-\n-\n-\n-\n-\n-"}, {"sha": "2083a174a4bab91b8a94f7e615f2468644a4d7e3", "filename": "libstdc++-v3/config/aix/bits/ctype_specializations.h", "status": "removed", "additions": 0, "deletions": 76, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Faix%2Fbits%2Fctype_specializations.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Faix%2Fbits%2Fctype_specializations.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Faix%2Fbits%2Fctype_specializations.h?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,76 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n-// functions go in ctype.cc\n-  \n-  bool\n-  ctype<char>::\n-  is(mask __m, char __c) const throw()\n-  { return _IS(__c, __m); }\n-\n-  const char*\n-  ctype<char>::\n-  is(const char* __low, const char* __high, mask* __vec) const throw()\n-  {\n-    while (__low < __high)\n-      *__vec++ = __OBJ_DATA(__lc_ctype)->mask[*__low++];\n-    return __high;\n-  }\n-\n-  const char*\n-  ctype<char>::\n-  scan_is(mask __m, const char* __low, const char* __high) const throw()\n-  {\n-    while (__low < __high && !this->is(__m, *__low))\n-      ++__low;\n-    return __low;\n-  }\n-\n-  const char*\n-  ctype<char>::\n-  scan_not(mask __m, const char* __low, const char* __high) const throw()\n-  {\n-    while (__low < __high && this->is(__m, *__low) != 0)\n-      ++__low;\n-    return __low;\n-  }\n-\n-\n-\n-\n-\n-\n-\n-\n-"}, {"sha": "67972999ee175e926217ea7796ac103c48dc732e", "filename": "libstdc++-v3/config/aix/ctype.cc", "status": "removed", "additions": 0, "deletions": 71, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Faix%2Fctype.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Faix%2Fctype.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Faix%2Fctype.cc?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,71 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// Information as gleaned from /usr/include/ctype.h\n-  \n-  ctype<char>::ctype(const mask* __table = 0, bool __del = false, \n-\tsize_t __refs = 0) throw()\n-    : _Ctype_nois<char>(__refs), _M_del(__table != 0 && __del), \n-      _M_toupper(NULL), _M_tolower(NULL),\n-      _M_ctable(NULL), _M_table(__table == 0 ? _M_ctable: __table) \n-    { }\n-\n-  char\n-  ctype<char>::do_toupper(char __c) const\n-  { return _toupper(__c); }\n-\n-  const char*\n-  ctype<char>::do_toupper(char* __low, const char* __high) const\n-  {\n-    while (__low < __high)\n-      {\n-\t*__low = this->do_toupper(*__low);\n-\t++__low;\n-      }\n-    return __high;\n-  }\n-\n-  char\n-  ctype<char>::do_tolower(char __c) const\n-  { return _tolower(__a); }\n-\n-  const char* \n-  ctype<char>::do_tolower(char* __low, const char* __high) const\n-  {\n-    while (__low < __high)\n-      {\n-\t*__low = this->do_tolower(*__low);\n-\t++__low;\n-      }\n-    return __high;\n-  }"}, {"sha": "145321f5fee4b175d17dc0915c0beb5e632361d5", "filename": "libstdc++-v3/config/bsd/bits/ctype_base.h", "status": "removed", "additions": 0, "deletions": 78, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fbsd%2Fbits%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fbsd%2Fbits%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fbsd%2Fbits%2Fctype_base.h?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,78 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// Information as gleaned from /usr/include/ctype.h on FreeBSD 3.4,\n-// 4.0 and all versions of the CVS managed file at:\n-// :pserver:anoncvs@anoncvs.freebsd.org:/home/ncvs/src/include/ctype.h\n-// which should cover most classic BSD configurations\n-  \n-  struct ctype_base\n-  {\n-    typedef unsigned long \tmask;\n-    // Non-standard typedefs.\n-    typedef const int* \t\t__to_type;\n-\n-    enum\n-    {\n-#ifdef _CTYPE_S\n-      // FreeBSD 4.0 uses this style of define.\n-      space = _CTYPE_S,\n-      print = _CTYPE_R,\n-      cntrl = _CTYPE_C,\n-      upper = _CTYPE_U,\n-      lower = _CTYPE_L,\n-      alpha = _CTYPE_A,\n-      digit = _CTYPE_D,\n-      punct = _CTYPE_P,\n-      xdigit = _CTYPE_X,\n-      alnum = _CTYPE_A | _CTYPE_D,\n-      graph = _CTYPE_G\n-#else\n-      // Other BSD's, including Free BSD 3.4, uses this style of define.\n-      space = _S,\n-      print = _R,\n-      cntrl = _C,\n-      upper = _U,\n-      lower = _L,\n-      alpha = _A,\n-      digit = _D,\n-      punct = _P,\n-      xdigit = _X,\n-      alnum = _A | _D,\n-      graph = _G\n-#endif\n-    };\n-  };\n-\n-\n-"}, {"sha": "c2a49c4025df128cba2374a878e8e6e3cfa69298", "filename": "libstdc++-v3/config/bsd/bits/ctype_specializations.h", "status": "removed", "additions": 0, "deletions": 78, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fbsd%2Fbits%2Fctype_specializations.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fbsd%2Fbits%2Fctype_specializations.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fbsd%2Fbits%2Fctype_specializations.h?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,78 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n-// functions go in ctype.cc\n-  \n-  bool\n-  ctype<char>::\n-  is(mask __m, char __c) const throw()\n-  { \n-    if (__m & digit || __m & xdigit)\n-      return __isctype(__c, __m);\n-    else\n-      return __istype(__c, __m);\n-  }\n-\n-  const char*\n-  ctype<char>::\n-  is(const char* __low, const char* __high, mask* __vec) const throw()\n-  {\n-    // XXX\n-    while (__low < __high)\n-      *__vec++ = _M_table[(unsigned char)(*__low++)];\n-    return __high;\n-  }\n-\n-  const char*\n-  ctype<char>::\n-  scan_is(mask __m, const char* __low, const char* __high) const throw()\n-  {\n-    while (__low < __high && !this->is(__m, *__low))\n-      ++__low;\n-    return __low;\n-  }\n-\n-  const char*\n-  ctype<char>::\n-  scan_not(mask __m, const char* __low, const char* __high) const throw()\n-  {\n-    while (__low < __high && this->is(__m, *__low) != 0)\n-      ++__low;\n-    return __low;\n-  }\n-\n-\n-\n-\n-"}, {"sha": "f419865763538bd0205605e44f24571cf7591bdb", "filename": "libstdc++-v3/config/bsd/ctype.cc", "status": "removed", "additions": 0, "deletions": 71, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fbsd%2Fctype.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fbsd%2Fctype.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fbsd%2Fctype.cc?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,71 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// Information as gleaned from /usr/include/ctype.h\n-  \n-  ctype<char>::ctype(const mask* __table = 0, bool __del = false, \n-\tsize_t __refs = 0) throw()\n-    : _Ctype_nois<char>(__refs), _M_del(__table != 0 && __del), \n-      _M_toupper(NULL), _M_tolower(NULL),\n-      _M_ctable(NULL), _M_table(__table == 0 ? _M_ctable: __table) \n-    { }\n-\n-  char\n-  ctype<char>::do_toupper(char __c) const\n-  { return ::toupper((int) __c); }\n-\n-  const char*\n-  ctype<char>::do_toupper(char* __low, const char* __high) const\n-  {\n-    while (__low < __high)\n-      {\n-\t*__low = ::toupper((int) *__low);\n-\t++__low;\n-      }\n-    return __high;\n-  }\n-\n-  char\n-  ctype<char>::do_tolower(char __c) const\n-  { return ::tolower((int) __c); }\n-\n-  const char* \n-  ctype<char>::do_tolower(char* __low, const char* __high) const\n-  {\n-    while (__low < __high)\n-      {\n-\t*__low = ::tolower((int) *__low);\n-\t++__low;\n-      }\n-    return __high;\n-  }"}, {"sha": "8b5e0a07252e391e0987f96f4d541bb6ea699699", "filename": "libstdc++-v3/config/generic/bits/ctype_base.h", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fgeneric%2Fbits%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fgeneric%2Fbits%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fgeneric%2Fbits%2Fctype_base.h?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,59 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 1997-1999 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// Default information, may not be appropriate for specific host.\n-  \n-  struct ctype_base\n-  {\n-    typedef unsigned int \tmask;\n-    // Non-standard typedefs.\n-    typedef const int* \t\t__to_type;\n-\n-    enum\n-    {\n-      space = (1 << 5),\t// Whitespace\n-      print = (1 << 6),\t// Printing\n-      cntrl = (1 << 9),\t// Control character\n-      upper = (1 << 0),\t// UPPERCASE\n-      lower = (1 << 1),\t// lowercase\n-      alpha = (1 << 5),\t// Alphabetic\n-      digit = (1 << 2),\t// Numeric\n-      punct = (1 << 10),// Punctuation\n-      xdigit = (1 << 4),// Hexadecimal numeric\n-      alnum = (1 << 11),// Alphanumeric\n-      graph = (1 << 7)\t// Graphical\n-    };\n-  };\n-\n-\n-"}, {"sha": "952b0da8c9808c7fb5e2297070ee5be2744ed436", "filename": "libstdc++-v3/config/generic/bits/ctype_specializations.h", "status": "removed", "additions": 0, "deletions": 72, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fgeneric%2Fbits%2Fctype_specializations.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fgeneric%2Fbits%2Fctype_specializations.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fgeneric%2Fbits%2Fctype_specializations.h?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,72 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n-// functions go in ctype.cc\n-  \n-  bool\n-  ctype<char>::\n-  is(mask __m, char __c) const throw()\n-  { return _M_table[(unsigned char)(__c)] & __m; }\n-\n-  const char*\n-  ctype<char>::\n-  is(const char* __low, const char* __high, mask* __vec) const throw()\n-  {\n-    while (__low < __high)\n-      *__vec++ = _M_table[(unsigned char)(*__low++)];\n-    return __high;\n-  }\n-\n-  const char*\n-  ctype<char>::\n-  scan_is(mask __m, const char* __low, const char* __high) const throw()\n-  {\n-    while (__low < __high && !this->is(__m, *__low))\n-      ++__low;\n-    return __low;\n-  }\n-\n-  const char*\n-  ctype<char>::\n-  scan_not(mask __m, const char* __low, const char* __high) const throw()\n-  {\n-    while (__low < __high && this->is(__m, *__low) != 0)\n-      ++__low;\n-    return __low;\n-  }\n-\n-\n-\n-\n-"}, {"sha": "e4de5c2eae9bfca80ceb757e5cdc40482608ecab", "filename": "libstdc++-v3/config/generic/ctype.cc", "status": "removed", "additions": 0, "deletions": 71, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fgeneric%2Fctype.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fgeneric%2Fctype.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fgeneric%2Fctype.cc?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,71 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// Information as gleaned from /usr/include/ctype.h\n-  \n-  ctype<char>::ctype(const mask* __table = 0, bool __del = false, \n-\tsize_t __refs = 0) throw()\n-    : _Ctype_nois<char>(__refs), _M_del(__table != 0 && __del), \n-      _M_toupper(NULL), _M_tolower(NULL),\n-      _M_ctable(NULL), _M_table(__table == 0 ? _M_ctable: __table) \n-    { }\n-\n-  char\n-  ctype<char>::do_toupper(char __c) const\n-  { return ::toupper((int) __c); }\n-\n-  const char*\n-  ctype<char>::do_toupper(char* __low, const char* __high) const\n-  {\n-    while (__low < __high)\n-      {\n-\t*__low = ::toupper((int) *__low);\n-\t++__low;\n-      }\n-    return __high;\n-  }\n-\n-  char\n-  ctype<char>::do_tolower(char __c) const\n-  { return ::tolower((int) __c); }\n-\n-  const char* \n-  ctype<char>::do_tolower(char* __low, const char* __high) const\n-  {\n-    while (__low < __high)\n-      {\n-\t*__low = ::tolower((int) *__low);\n-\t++__low;\n-      }\n-    return __high;\n-  }"}, {"sha": "dfd29fbc4da7e20fc4ad19151d236bbb72b7154b", "filename": "libstdc++-v3/config/gnu-linux/bits/ctype_base.h", "status": "removed", "additions": 0, "deletions": 78, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fgnu-linux%2Fbits%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fgnu-linux%2Fbits%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fgnu-linux%2Fbits%2Fctype_base.h?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,78 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// Information as gleaned from /usr/include/ctype.h\n-  \n-#if _GLIBCPP_USE_SHADOW_HEADERS\n-  using _C_legacy::_ISspace;\n-  using _C_legacy::_ISprint;\n-  using _C_legacy::_IScntrl;\n-  using _C_legacy::_ISupper;\n-  using _C_legacy::_ISlower;\n-  using _C_legacy::_ISalpha;\n-  using _C_legacy::_ISdigit;\n-  using _C_legacy::_ISpunct;\n-  using _C_legacy::_ISxdigit;\n-  using _C_legacy::_ISalnum;\n-  using _C_legacy::_ISgraph;\n-#endif\n-\n-  struct ctype_base\n-  {\n-    // Non-standard typedefs.\n-    // XXX\n-    typedef unsigned short \tmask;   \n-    typedef unsigned short \t__table_type;   \n-    typedef const int* \t\t__to_type;\n-\n-    // XXX\n-    //    enum mask\n-    enum \n-    {\n-      space = _ISspace,\n-      print = _ISprint,\n-      cntrl = _IScntrl,\n-      upper = _ISupper,\n-      lower = _ISlower,\n-      alpha = _ISalpha,\n-      digit = _ISdigit,\n-      punct = _ISpunct,\n-      xdigit = _ISxdigit,\n-      alnum = _ISalnum,\n-      graph = _ISgraph\n-    };\n-  };\n-\n-\n-\n-"}, {"sha": "fdba4e7535eea2c63f1cf43102648e81628e3f04", "filename": "libstdc++-v3/config/gnu-linux/bits/ctype_specializations.h", "status": "removed", "additions": 0, "deletions": 72, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fgnu-linux%2Fbits%2Fctype_specializations.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fgnu-linux%2Fbits%2Fctype_specializations.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fgnu-linux%2Fbits%2Fctype_specializations.h?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,72 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n-// functions go in ctype.cc\n-  \n-  bool\n-  ctype<char>::\n-  is(mask __m, char __c) const throw()\n-  { return _M_table[(unsigned char)(__c)] & __m; }\n-\n-  const char*\n-  ctype<char>::\n-  is(const char* __low, const char* __high, mask* __vec) const throw()\n-  {\n-    while (__low < __high)\n-      *__vec++ = _M_table[(unsigned char)(*__low++)];\n-    return __high;\n-  }\n-\n-  const char*\n-  ctype<char>::\n-  scan_is(mask __m, const char* __low, const char* __high) const throw()\n-  {\n-    while (__low < __high && !(_M_table[(unsigned char)(*__low)] & __m))\n-      ++__low;\n-    return __low;\n-  }\n-\n-  const char*\n-  ctype<char>::\n-  scan_not(mask __m, const char* __low, const char* __high) const throw()\n-  {\n-    while (__low < __high \n-\t   && (_M_table[(unsigned char)(*__low)] & __m) != 0)\n-      ++__low;\n-    return __low;\n-  }\n-\n-\n-\n-"}, {"sha": "63032425c702f0dc18d3e5a0a9c95d4dcc908cd2", "filename": "libstdc++-v3/config/gnu-linux/ctype.cc", "status": "removed", "additions": 0, "deletions": 88, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fgnu-linux%2Fctype.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fgnu-linux%2Fctype.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fgnu-linux%2Fctype.cc?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,88 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// Information as gleaned from /usr/include/ctype.h\n-\n-#if _GLIBCPP_USE_SHADOW_HEADERS\n-  using _C_legacy::__ctype_toupper;\n-  using _C_legacy::__ctype_tolower;\n-  using _C_legacy::__ctype_b;\n-#endif\n-\n-  ctype<char>::ctype(const mask* __table, bool __del, size_t __refs)\n-    : _Ctype_nois<char>(__refs), _M_del(__table != 0 && __del), \n-      _M_toupper(__ctype_toupper), _M_tolower(__ctype_tolower),\n-      _M_ctable(__ctype_b), _M_table(__table == 0 ? _M_ctable: __table) \n-    { }\n-\n-  char\n-  ctype<char>::do_toupper(char __c) const\n-  { return _M_toupper[static_cast<int>(__c)]; }\n-\n-  const char*\n-  ctype<char>::do_toupper(char* __low, const char* __high) const\n-  {\n-    while (__low < __high)\n-      {\n-\t*__low = _M_toupper[static_cast<int>(*__low)];\n-\t++__low;\n-      }\n-    return __high;\n-  }\n-\n-  char\n-  ctype<char>::do_tolower(char __c) const\n-  { return _M_tolower[static_cast<int>(__c)]; }\n-\n-  const char* \n-  ctype<char>::do_tolower(char* __low, const char* __high) const\n-  {\n-    while (__low < __high)\n-      {\n-\t*__low = _M_tolower[static_cast<int>(*__low)];\n-\t++__low;\n-      }\n-    return __high;\n-  }\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-"}, {"sha": "32394eb7a4a9f8b26da4644c14d143a19a46fe4a", "filename": "libstdc++-v3/config/irix/bits/ctype_base.h", "status": "removed", "additions": 0, "deletions": 60, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Firix%2Fbits%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Firix%2Fbits%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Firix%2Fbits%2Fctype_base.h?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,60 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 1997-1999 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// Information as gleaned from /usr/include/ctype.h on irix 6.5\n-  \n-  struct ctype_base\n-  {\n-    typedef unsigned char \tmask;\n-    // Non-standard typedefs.\n-    typedef int* \t\t__to_type;\n-\n-    enum\n-    {\n-      space = _ISspace,\n-      print = _ISprint,\n-      cntrl = _IScntrl,\n-      upper = _ISupper,\n-      lower = _ISlower,\n-      alpha = _ISalpha,\n-      digit = _ISdigit,\n-      punct = _ISpunct,\n-      xdigit = _ISxdigit,\n-      alnum = _ISalnum,\n-      graph = _ISgraph\n-    };\n-  };\n-\n-\n-\n-"}, {"sha": "88a93b4c7bafd9b66ddef0281fb3b5d21ce05b33", "filename": "libstdc++-v3/config/irix/bits/ctype_specializations.h", "status": "removed", "additions": 0, "deletions": 73, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Firix%2Fbits%2Fctype_specializations.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Firix%2Fbits%2Fctype_specializations.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Firix%2Fbits%2Fctype_specializations.h?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,73 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 2000 Cygnus Solutions\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n-// functions go in ctype.cc\n-  \n-  bool\n-  ctype<char>::\n-  is(mask __m, char __c) const throw()\n-  { return (_M_table + 1)[(unsigned char)(__c)] & __m; }\n-\n-  const char*\n-  ctype<char>::\n-  is(const char* __low, const char* __high, mask* __vec) const throw()\n-  {\n-    while (__low < __high)\n-      *__vec++ = (_M_table + 1)[(unsigned char)(*__low++)];\n-    return __high;\n-  }\n-\n-  const char*\n-  ctype<char>::\n-  scan_is(mask __m, const char* __low, const char* __high) const throw()\n-  {\n-    while (__low < __high && !((_M_table + 1)[(unsigned char)(*__low)] & __m))\n-      ++__low;\n-    return __low;\n-  }\n-\n-  const char*\n-  ctype<char>::\n-  scan_not(mask __m, const char* __low, const char* __high) const throw()\n-  {\n-    while (__low < __high \n-\t   && ((_M_table + 1)[(unsigned char)(*__low)] & __m) != 0)\n-      ++__low;\n-    return __low;\n-  }\n-\n-\n-\n-\n-"}, {"sha": "553e776e1dd5d5f8b26ffbbadb720050bde38c48", "filename": "libstdc++-v3/config/irix/ctype.cc", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Firix%2Fctype.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Firix%2Fctype.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Firix%2Fctype.cc?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,45 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 1997-1999 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// Information as gleaned from /usr/include/ctype.h\n-  \n-  ctype_base::__to_type const& ctype<char>::_S_toupper = _toupper;\n-  ctype_base::__to_type const& ctype<char>::_S_tolower = _tolower;\n-  const ctype_base::mask* const& ctype<char>::_S_table = __ctype;\n-\n-#ifdef _GLIBCPP_USE_WCHAR_T  \n-  ctype_base::__to_type const& ctype<wchar_t>::_S_toupper = _toupper;\n-  ctype_base::__to_type const& ctype<wchar_t>::_S_tolower = _tolower;\n-  const ctype_base::mask* const& ctype<wchar_t>::_S_table = __ctype;\n-#endif\n-"}, {"sha": "447073e2a046ddaa496f33f1cfea7668d84b9114", "filename": "libstdc++-v3/config/newlib/bits/ctype_base.h", "status": "removed", "additions": 0, "deletions": 61, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fnewlib%2Fbits%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fnewlib%2Fbits%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fnewlib%2Fbits%2Fctype_base.h?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,61 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// Information as gleaned from /usr/include/ctype.h, for solaris2.5.1\n-\n-// Support for Solaris 2.5.1\n-  \n-  struct ctype_base\n-  {\n-    typedef char \t\tmask;\n-    // Non-standard typedefs.\n-    typedef const int* \t\t__to_type;\n-\n-    enum\n-    {\n-      space = 010,\t\t\t\t// Whitespace\n-      print = 020 | 01 | 02 | 04 | 0200,\t// Printing\n-      cntrl = 040,\t\t\t\t// Control character\n-      upper = 01,\t\t\t\t// UPPERCASE\n-      lower = 02,\t\t\t\t// lowercase\n-      alpha = 01 | 02,\t\t\t\t// Alphabetic\n-      digit = 04,\t\t\t\t// Numeric\n-      punct = 020,\t\t\t\t// Punctuation\n-      xdigit = 0200,\t\t\t\t// Hexadecimal numeric\n-      alnum = 01 | 02 | 04,\t\t\t// Alphanumeric\n-      graph = 020 | 01 | 02 | 04 \t\t// Graphical\n-    };\n-  };\n-\n-\n-"}, {"sha": "ff8bb67c1edeeaee85e86995c7f3941a104fa737", "filename": "libstdc++-v3/config/newlib/bits/ctype_specializations.h", "status": "removed", "additions": 0, "deletions": 73, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fnewlib%2Fbits%2Fctype_specializations.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fnewlib%2Fbits%2Fctype_specializations.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fnewlib%2Fbits%2Fctype_specializations.h?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,73 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n-// functions go in ctype.cc\n-  \n-  bool\n-  ctype<char>::\n-  is(mask __m, char __c) const throw()\n-  { return (_M_table + 1)[(unsigned char)(__c)] & __m; }\n-\n-  const char*\n-  ctype<char>::\n-  is(const char* __low, const char* __high, mask* __vec) const throw()\n-  {\n-    while (__low < __high)\n-      *__vec++ = (_M_table + 1)[(unsigned char)(*__low++)];\n-    return __high;\n-  }\n-\n-  const char*\n-  ctype<char>::\n-  scan_is(mask __m, const char* __low, const char* __high) const throw()\n-  {\n-    while (__low < __high && !((_M_table + 1)[(unsigned char)(*__low)] & __m))\n-      ++__low;\n-    return __low;\n-  }\n-\n-  const char*\n-  ctype<char>::\n-  scan_not(mask __m, const char* __low, const char* __high) const throw()\n-  {\n-    while (__low < __high \n-\t   && ((_M_table + 1)[(unsigned char)(*__low)] & __m) != 0)\n-      ++__low;\n-    return __low;\n-  }\n-\n-\n-\n-\n-"}, {"sha": "1984d65439370211b9745d774f782224a45c8089", "filename": "libstdc++-v3/config/newlib/ctype.cc", "status": "removed", "additions": 0, "deletions": 78, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fnewlib%2Fctype.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fnewlib%2Fctype.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fnewlib%2Fctype.cc?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,78 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// Information as gleaned from /usr/include/ctype.h\n-  \n-  ctype<char>::ctype(const mask* __table = 0, bool __del = false, \n-\tsize_t __refs = 0) throw()\n-    : _Ctype_nois<char>(__refs), _M_del(__table != 0 && __del), \n-      _M_toupper(NULL), _M_tolower(NULL),\n-      _M_ctable(_ctype_), _M_table(__table == 0 ? _M_ctable: __table) \n-    { }\n-\n-  char\n-  ctype<char>::do_toupper(char __c) const\n-  { \n-    int __x = __c;\n-    return (this->is(ctype_base::upper, __c) ? (__x - 'A' + 'a') : __x);\n-  }\n-\n-  const char*\n-  ctype<char>::do_toupper(char* __low, const char* __high) const\n-  {\n-    while (__low < __high)\n-      {\n-\t*__low = this->do_toupper(*__low);\n-\t++__low;\n-      }\n-    return __high;\n-  }\n-\n-  char\n-  ctype<char>::do_tolower(char __c) const\n-  { \n-    int __x = __c;\n-    return (this->is(ctype_base::lower, __c) ? (__x - 'A' + 'a') : __x);\n-  }\n-\n-  const char* \n-  ctype<char>::do_tolower(char* __low, const char* __high) const\n-  {\n-    while (__low < __high)\n-      {\n-\t*__low = this->do_tolower(*__low);\n-\t++__low;\n-      }\n-    return __high;\n-  }\n-"}, {"sha": "1f4e1d65d3d54196c3b5ba0a59c4f20c94bb7f4e", "filename": "libstdc++-v3/config/solaris/solaris2.5/bits/ctype_base.h", "status": "removed", "additions": 0, "deletions": 56, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.5%2Fbits%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.5%2Fbits%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.5%2Fbits%2Fctype_base.h?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,56 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 1997-1999 Cygnus Solutions\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// Information as gleaned from /usr/include/ctype.h, for solaris2.5.1\n-\n-  struct ctype_base\n-  {\n-    typedef unsigned char \tmask;\n-    // Non-standard typedefs.\n-    typedef const int* \t\t__to_type;\n-\n-    enum\n-    {\n-      space = 010,\t\t\t\t// Whitespace\n-      print = 020 | 01 | 02 | 04 | 0200,\t// Printing\n-      cntrl = 040,\t\t\t\t// Control character\n-      upper = 01,\t\t\t\t// UPPERCASE\n-      lower = 02,\t\t\t\t// lowercase\n-      alpha = 01 | 02,\t\t\t\t// Alphabetic\n-      digit = 04,\t\t\t\t// Numeric\n-      punct = 020,\t\t\t\t// Punctuation\n-      xdigit = 0200,\t\t\t\t// Hexadecimal numeric\n-      alnum = 01 | 02 | 04,\t\t\t// Alphanumeric\n-      graph = 020 | 01 | 02 | 04 \t\t// Graphical\n-    };\n-  };"}, {"sha": "88a93b4c7bafd9b66ddef0281fb3b5d21ce05b33", "filename": "libstdc++-v3/config/solaris/solaris2.5/bits/ctype_specializations.h", "status": "removed", "additions": 0, "deletions": 73, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.5%2Fbits%2Fctype_specializations.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.5%2Fbits%2Fctype_specializations.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.5%2Fbits%2Fctype_specializations.h?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,73 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 2000 Cygnus Solutions\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n-// functions go in ctype.cc\n-  \n-  bool\n-  ctype<char>::\n-  is(mask __m, char __c) const throw()\n-  { return (_M_table + 1)[(unsigned char)(__c)] & __m; }\n-\n-  const char*\n-  ctype<char>::\n-  is(const char* __low, const char* __high, mask* __vec) const throw()\n-  {\n-    while (__low < __high)\n-      *__vec++ = (_M_table + 1)[(unsigned char)(*__low++)];\n-    return __high;\n-  }\n-\n-  const char*\n-  ctype<char>::\n-  scan_is(mask __m, const char* __low, const char* __high) const throw()\n-  {\n-    while (__low < __high && !((_M_table + 1)[(unsigned char)(*__low)] & __m))\n-      ++__low;\n-    return __low;\n-  }\n-\n-  const char*\n-  ctype<char>::\n-  scan_not(mask __m, const char* __low, const char* __high) const throw()\n-  {\n-    while (__low < __high \n-\t   && ((_M_table + 1)[(unsigned char)(*__low)] & __m) != 0)\n-      ++__low;\n-    return __low;\n-  }\n-\n-\n-\n-\n-"}, {"sha": "c02a31ead51c886c7d774574c3e277709614421f", "filename": "libstdc++-v3/config/solaris/solaris2.5/ctype.cc", "status": "removed", "additions": 0, "deletions": 72, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.5%2Fctype.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.5%2Fctype.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.5%2Fctype.cc?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,72 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 2000 Cygnus Solutions\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// Information as gleaned from /usr/include/ctype.h\n-  \n-  ctype<char>::ctype(const mask* __table = 0, bool __del = false, \n-\tsize_t __refs = 0) throw()\n-    : _Ctype_nois<char>(__refs), _M_del(__table != 0 && __del), \n-      _M_toupper(NULL), _M_tolower(NULL),\n-      _M_ctable(__ctype), _M_table(__table == 0 ? _M_ctable: __table) \n-    { }\n-\n-  char\n-  ctype<char>::do_toupper(char __c) const\n-  { return ((_M_table + 258)[static_cast<int>(__c)]); }\n-\n-  const char*\n-  ctype<char>::do_toupper(char* __low, const char* __high) const\n-  {\n-    while (__low < __high)\n-      {\n-\t*__low = this->do_toupper(*__low);\n-\t++__low;\n-      }\n-    return __high;\n-  }\n-\n-  char\n-  ctype<char>::do_tolower(char __c) const\n-  { return ((_M_table + 258)[static_cast<int>(__c)]); }\n-\n-  const char* \n-  ctype<char>::do_tolower(char* __low, const char* __high) const\n-  {\n-    while (__low < __high)\n-      {\n-\t*__low = this->do_tolower(*__low);\n-\t++__low;\n-      }\n-    return __high;\n-  }\n-"}, {"sha": "4e2618f89e733efb73cd3dc4b4395ad375c5b99e", "filename": "libstdc++-v3/config/solaris/solaris2.6/bits/ctype_base.h", "status": "removed", "additions": 0, "deletions": 58, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.6%2Fbits%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.6%2Fbits%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.6%2Fbits%2Fctype_base.h?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,58 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 1997-1999 Cygnus Solutions\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// Information as gleaned from /usr/include/ctype.h. Looks like this\n-// only works with solaris2.6 and solaris2.7, but not solaris2.5.1.\n-\n-  struct ctype_base\n-  {\n-    typedef unsigned int \tmask;\n-    // Non-standard typedefs.\n-    typedef long* \t\t__to_type;\n-\n-    enum\n-    {\n-      space = _ISSPACE,\n-      print = _ISPRINT,\n-      cntrl = _ISCNTRL,\n-      upper = _ISUPPER,\n-      lower = _ISLOWER,\n-      alpha = _ISALPHA,\n-      digit = _ISDIGIT,\n-      punct = _ISPUNCT,\n-      xdigit = _ISXDIGIT,\n-      alnum = _ISALNUM,\n-      graph = _ISGRAPH\n-    };\n-  };\n-"}, {"sha": "819fc19caed2583e86b6867762999924f0aebb1b", "filename": "libstdc++-v3/config/solaris/solaris2.6/bits/ctype_specializations.h", "status": "removed", "additions": 0, "deletions": 73, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.6%2Fbits%2Fctype_specializations.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.6%2Fbits%2Fctype_specializations.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.6%2Fbits%2Fctype_specializations.h?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,73 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 2000 Cygnus Solutions\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n-// functions go in ctype.cc\n-  \n-  bool\n-  ctype<char>::\n-  is(mask __m, char __c) const throw()\n-  { return _M_table[(unsigned char)(__c)] & __m; }\n-\n-  const char*\n-  ctype<char>::\n-  is(const char* __low, const char* __high, mask* __vec) const throw()\n-  {\n-    while (__low < __high)\n-      *__vec++ = _M_table[(unsigned char)(*__low++)];\n-    return __high;\n-  }\n-\n-  const char*\n-  ctype<char>::\n-  scan_is(mask __m, const char* __low, const char* __high) const throw()\n-  {\n-    while (__low < __high && !(_M_table[(unsigned char)(*__low)] & __m))\n-      ++__low;\n-    return __low;\n-  }\n-\n-  const char*\n-  ctype<char>::\n-  scan_not(mask __m, const char* __low, const char* __high) const throw()\n-  {\n-    while (__low < __high \n-\t   && (_M_table[(unsigned char)(*__low)] & __m) != 0)\n-      ++__low;\n-    return __low;\n-  }\n-\n-\n-\n-\n-"}, {"sha": "f760ac934ae66a20cdc592edfe5767a66e8d16f9", "filename": "libstdc++-v3/config/solaris/solaris2.6/ctype.cc", "status": "removed", "additions": 0, "deletions": 71, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.6%2Fctype.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.6%2Fctype.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.6%2Fctype.cc?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,71 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 1997-1999, 2000 Cygnus Solutions\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// Information as gleaned from /usr/include/ctype.h\n-  \n-  ctype<char>::ctype(const mask* __table = 0, bool __del = false, \n-\tsize_t __refs = 0) throw()\n-    : _Ctype_nois<char>(__refs), _M_del(__table != 0 && __del), \n-      _M_toupper(__trans_upper), _M_tolower(__trans_lower),\n-      _M_ctable(__ctype_mask), _M_table(__table == 0 ? _M_ctable: __table) \n-    { }\n-\n-  char\n-  ctype<char>::do_toupper(char __c) const\n-  { return _M_toupper[(int) __c]; }\n-\n-  const char*\n-  ctype<char>::do_toupper(char* __low, const char* __high) const\n-  {\n-    while (__low < __high)\n-      {\n-\t*__low = _M_toupper[(int) *__low];\n-\t++__low;\n-      }\n-    return __high;\n-  }\n-\n-  char\n-  ctype<char>::do_tolower(char __c) const\n-  { return _M_tolower[(int) __c]; }\n-\n-  const char* \n-  ctype<char>::do_tolower(char* __low, const char* __high) const\n-  {\n-    while (__low < __high)\n-      {\n-\t*__low = _M_tolower[(int) *__low];\n-\t++__low;\n-      }\n-    return __high;\n-  }"}, {"sha": "782a09b2fedfc0fa9e4ef2139e157545c7880467", "filename": "libstdc++-v3/config/solaris/solaris2.7/bits/ctype_base.h", "status": "removed", "additions": 0, "deletions": 58, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.7%2Fbits%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.7%2Fbits%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.7%2Fbits%2Fctype_base.h?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,58 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 1997-1999 Cygnus Solutions\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// Information as gleaned from /usr/include/ctype.h. Looks like this\n-// only works with solaris2.6 and solaris2.7, but not solaris2.5.1.\n-\n-  struct ctype_base\n-  {\n-    typedef unsigned int \tmask;\n-    // Non-standard typedefs.\n-    typedef int* \t\t__to_type;\n-\n-    enum\n-    {\n-      space = _ISSPACE,\n-      print = _ISPRINT,\n-      cntrl = _ISCNTRL,\n-      upper = _ISUPPER,\n-      lower = _ISLOWER,\n-      alpha = _ISALPHA,\n-      digit = _ISDIGIT,\n-      punct = _ISPUNCT,\n-      xdigit = _ISXDIGIT,\n-      alnum = _ISALNUM,\n-      graph = _ISGRAPH\n-    };\n-  };\n-"}, {"sha": "819fc19caed2583e86b6867762999924f0aebb1b", "filename": "libstdc++-v3/config/solaris/solaris2.7/bits/ctype_specializations.h", "status": "removed", "additions": 0, "deletions": 73, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.7%2Fbits%2Fctype_specializations.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.7%2Fbits%2Fctype_specializations.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.7%2Fbits%2Fctype_specializations.h?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,73 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 2000 Cygnus Solutions\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n-// functions go in ctype.cc\n-  \n-  bool\n-  ctype<char>::\n-  is(mask __m, char __c) const throw()\n-  { return _M_table[(unsigned char)(__c)] & __m; }\n-\n-  const char*\n-  ctype<char>::\n-  is(const char* __low, const char* __high, mask* __vec) const throw()\n-  {\n-    while (__low < __high)\n-      *__vec++ = _M_table[(unsigned char)(*__low++)];\n-    return __high;\n-  }\n-\n-  const char*\n-  ctype<char>::\n-  scan_is(mask __m, const char* __low, const char* __high) const throw()\n-  {\n-    while (__low < __high && !(_M_table[(unsigned char)(*__low)] & __m))\n-      ++__low;\n-    return __low;\n-  }\n-\n-  const char*\n-  ctype<char>::\n-  scan_not(mask __m, const char* __low, const char* __high) const throw()\n-  {\n-    while (__low < __high \n-\t   && (_M_table[(unsigned char)(*__low)] & __m) != 0)\n-      ++__low;\n-    return __low;\n-  }\n-\n-\n-\n-\n-"}, {"sha": "348495ecefb52bfe92d2799196d6e693c20da3e7", "filename": "libstdc++-v3/config/solaris/solaris2.7/ctype.cc", "status": "removed", "additions": 0, "deletions": 73, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.7%2Fctype.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c81a475f00bd63bcc907938e4bb0f9edb11f1fde/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.7%2Fctype.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fsolaris%2Fsolaris2.7%2Fctype.cc?ref=c81a475f00bd63bcc907938e4bb0f9edb11f1fde", "patch": "@@ -1,73 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 1997-1999, 2000 Cygnus Solutions\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// Information as gleaned from /usr/include/ctype.h\n-  \n-  ctype<char>::ctype(const mask* __table = 0, bool __del = false, \n-\tsize_t __refs = 0) throw()\n-    : _Ctype_nois<char>(__refs), _M_del(__table != 0 && __del), \n-      _M_toupper(__trans_upper), _M_tolower(__trans_lower),\n-      _M_ctable(__ctype_mask), _M_table(__table == 0 ? _M_ctable: __table) \n-    { }\n-\n-  char\n-  ctype<char>::do_toupper(char __c) const\n-  { return _M_toupper[(int) __c]; }\n-\n-  const char*\n-  ctype<char>::do_toupper(char* __low, const char* __high) const\n-  {\n-    while (__low < __high)\n-      {\n-\t*__low = _M_toupper[(int) *__low];\n-\t++__low;\n-      }\n-    return __high;\n-  }\n-\n-  char\n-  ctype<char>::do_tolower(char __c) const\n-  { return _M_tolower[(int) __c]; }\n-\n-  const char* \n-  ctype<char>::do_tolower(char* __low, const char* __high) const\n-  {\n-    while (__low < __high)\n-      {\n-\t*__low = _M_tolower[(int) *__low];\n-\t++__low;\n-      }\n-    return __high;\n-  }\n-\n-"}]}