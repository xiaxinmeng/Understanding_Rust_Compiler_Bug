{"sha": "ddaf3b8666fb3cf656b439b36807e4fbd44f9755", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRhZjNiODY2NmZiM2NmNjU2YjQzOWIzNjgwN2U0ZmJkNDRmOTc1NQ==", "commit": {"author": {"name": "Volker Reichelt", "email": "reichelt@igpm.rwth-aachen.de", "date": "2006-03-22T19:36:22Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2006-03-22T19:36:22Z"}, "message": "re PR driver/22600 (Exit code should be different from 1 for internal compiler error)\n\n\tPR driver/22600\t\n\t* system.h (ICE_EXIT_CODE): New macro.\n\t* diagnostic.c (diagnostic_count_diagnostic): Exit with ICE_EXIT_CODE.\n\t(diagnostic_action_after_output): Likewise.\n\t* gcc.c (fatal_ice): New function.\n\t(execute): Use it instead of fatal.\n\t(fancy_abort): Likewise.\n\t* doc/invoke.texi (-pass-exit-codes): Document return code for ICEs.\n\n\t* fortran/error.c (gfc_fatal_error): Return ICE_EXIT_CODE instead of 4.\n\nFrom-SVN: r112292", "tree": {"sha": "0ef1c23dc84a162b943f0131666ec56296a921be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ef1c23dc84a162b943f0131666ec56296a921be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddaf3b8666fb3cf656b439b36807e4fbd44f9755", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddaf3b8666fb3cf656b439b36807e4fbd44f9755", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddaf3b8666fb3cf656b439b36807e4fbd44f9755", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddaf3b8666fb3cf656b439b36807e4fbd44f9755/comments", "author": null, "committer": null, "parents": [{"sha": "d67ab5eef80ed2d4891562bf5ff791c1b2af4a97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d67ab5eef80ed2d4891562bf5ff791c1b2af4a97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d67ab5eef80ed2d4891562bf5ff791c1b2af4a97"}], "stats": {"total": 51, "additions": 43, "deletions": 8}, "files": [{"sha": "fe517ce3f04123addc81391ee27d3d8b6a7d5129", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddaf3b8666fb3cf656b439b36807e4fbd44f9755/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddaf3b8666fb3cf656b439b36807e4fbd44f9755/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ddaf3b8666fb3cf656b439b36807e4fbd44f9755", "patch": "@@ -1,3 +1,14 @@\n+2006-03-22  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\tPR driver/22600\n+\t* system.h (ICE_EXIT_CODE): New macro.\n+\t* diagnostic.c (diagnostic_count_diagnostic): Exit with ICE_EXIT_CODE.\n+\t(diagnostic_action_after_output): Likewise.\n+\t* gcc.c (fatal_ice): New function.\n+\t(execute): Use it instead of fatal.\n+\t(fancy_abort): Likewise.\n+\t* doc/invoke.texi (-pass-exit-codes): Document return code for ICEs.\n+\n 2006-03-22  Jeff Law  <law@redhat.com>\n \n \t* loop-unroll.c (analyze_iv_to_split_insn): Handle"}, {"sha": "3691477e07b5bc68de9f8469d2e2270f5241ac4a", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddaf3b8666fb3cf656b439b36807e4fbd44f9755/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddaf3b8666fb3cf656b439b36807e4fbd44f9755/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=ddaf3b8666fb3cf656b439b36807e4fbd44f9755", "patch": "@@ -188,7 +188,7 @@ diagnostic_count_diagnostic (diagnostic_context *context,\n \t  expanded_location s = expand_location (diagnostic->location);\n \t  fnotice (stderr, \"%s:%d: confused by earlier errors, bailing out\\n\",\n \t\t   s.file, s.line);\n-\t  exit (FATAL_EXIT_CODE);\n+\t  exit (ICE_EXIT_CODE);\n \t}\n #endif\n       if (context->internal_error)\n@@ -263,7 +263,7 @@ diagnostic_action_after_output (diagnostic_context *context,\n       fnotice (stderr, \"Please submit a full bug report,\\n\"\n \t       \"with preprocessed source if appropriate.\\n\"\n \t       \"See %s for instructions.\\n\", bug_report_url);\n-      exit (FATAL_EXIT_CODE);\n+      exit (ICE_EXIT_CODE);\n \n     case DK_FATAL:\n       if (context->abort_on_error)"}, {"sha": "16ec89b7df265cb34214c8e7d60ec7a6cb58369c", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddaf3b8666fb3cf656b439b36807e4fbd44f9755/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddaf3b8666fb3cf656b439b36807e4fbd44f9755/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=ddaf3b8666fb3cf656b439b36807e4fbd44f9755", "patch": "@@ -957,7 +957,8 @@ Normally the @command{gcc} program will exit with the code of 1 if any\n phase of the compiler returns a non-success return code.  If you specify\n @option{-pass-exit-codes}, the @command{gcc} program will instead return with\n numerically highest error produced by any phase that returned an error\n-indication.\n+indication.  The C, C++, and Fortran frontends return 4, if an internal\n+compiler error is encountered.\n @end table\n \n If you only want some of the stages of compilation, you can use"}, {"sha": "e6ce54a3f42678e70665bf2c319dbb25aee519cf", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddaf3b8666fb3cf656b439b36807e4fbd44f9755/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddaf3b8666fb3cf656b439b36807e4fbd44f9755/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ddaf3b8666fb3cf656b439b36807e4fbd44f9755", "patch": "@@ -1,3 +1,8 @@\n+2006-03-22  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\tPR driver/22600\n+\t* error.c (gfc_fatal_error): Return ICE_EXIT_CODE instead of 4.\n+\n 2006-03-22  Thomas Koenig  <Thomas.Koenig@online.de>\n \n \tPR fortran/19303"}, {"sha": "435fc16a36fff9b5ddbf03f4bbef1125f93d982a", "filename": "gcc/fortran/error.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddaf3b8666fb3cf656b439b36807e4fbd44f9755/gcc%2Ffortran%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddaf3b8666fb3cf656b439b36807e4fbd44f9755/gcc%2Ffortran%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ferror.c?ref=ddaf3b8666fb3cf656b439b36807e4fbd44f9755", "patch": "@@ -677,7 +677,7 @@ gfc_internal_error (const char *format, ...)\n   error_print (\"\", format, argp);\n   va_end (argp);\n \n-  exit (4);\n+  exit (ICE_EXIT_CODE);\n }\n \n "}, {"sha": "c606773f42ed1a602ba9f28dc25ba067c13e9d49", "filename": "gcc/gcc.c", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddaf3b8666fb3cf656b439b36807e4fbd44f9755/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddaf3b8666fb3cf656b439b36807e4fbd44f9755/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=ddaf3b8666fb3cf656b439b36807e4fbd44f9755", "patch": "@@ -330,6 +330,7 @@ static int default_arg (const char *, int);\n static void set_multilib_dir (void);\n static void print_multilib_info (void);\n static void perror_with_name (const char *);\n+static void fatal_ice (const char *, ...) ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n static void notice (const char *, ...) ATTRIBUTE_PRINTF_1;\n static void display_help (void);\n static void add_preprocessor_option (const char *, int);\n@@ -2997,12 +2998,12 @@ execute (void)\n \t      }\n \t    else\n #endif\n-\t      fatal (\"\\\n+\t      fatal_ice (\"\\\n Internal error: %s (program %s)\\n\\\n Please submit a full bug report.\\n\\\n See %s for instructions.\",\n-\t\t     strsignal (WTERMSIG (status)), commands[i].prog,\n-\t\t     bug_report_url);\n+\t\t \tstrsignal (WTERMSIG (status)), commands[i].prog,\n+\t\t \tbug_report_url);\n \t  }\n \telse if (WIFEXITED (status)\n \t\t && WEXITSTATUS (status) >= MIN_FATAL_STATUS)\n@@ -6818,11 +6819,26 @@ perror_with_name (const char *name)\n void\n fancy_abort (const char *file, int line, const char *func)\n {\n-  fatal (\"internal gcc abort in %s, at %s:%d\", func, file, line);\n+  fatal_ice (\"internal gcc abort in %s, at %s:%d\", func, file, line);\n }\n \f\n /* Output an error message and exit.  */\n \n+void\n+fatal_ice (const char *cmsgid, ...)\n+{\n+  va_list ap;\n+\n+  va_start (ap, cmsgid);\n+\n+  fprintf (stderr, \"%s: \", programname);\n+  vfprintf (stderr, _(cmsgid), ap);\n+  va_end (ap);\n+  fprintf (stderr, \"\\n\");\n+  delete_temp_files ();\n+  exit (pass_exit_codes ? ICE_EXIT_CODE : 1);\n+}\n+\n void\n fatal (const char *cmsgid, ...)\n {"}, {"sha": "4d191e7009d32b99c1c696774077c32e06bf9410", "filename": "gcc/system.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddaf3b8666fb3cf656b439b36807e4fbd44f9755/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddaf3b8666fb3cf656b439b36807e4fbd44f9755/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=ddaf3b8666fb3cf656b439b36807e4fbd44f9755", "patch": "@@ -227,6 +227,8 @@ extern int errno;\n # endif\n #endif\n \n+#define ICE_EXIT_CODE 4\n+\n #ifdef HAVE_UNISTD_H\n # include <unistd.h>\n #endif"}]}