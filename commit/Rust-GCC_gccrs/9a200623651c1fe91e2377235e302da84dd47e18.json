{"sha": "9a200623651c1fe91e2377235e302da84dd47e18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWEyMDA2MjM2NTFjMWZlOTFlMjM3NzIzNWUzMDJkYTg0ZGQ0N2UxOA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2007-03-22T20:38:27Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2007-03-22T20:38:27Z"}, "message": "c-incpath.c (add_sysroot_to_chain): New.\n\n\t* c-incpath.c (add_sysroot_to_chain): New.\n\t(merge_include_chains): Add sysroot argument.  Call\n\tadd_sysroot_to_chain if sysrooted.\n\t(register_include_chains): Update call to merge_include_chains.\n\t* doc/cppopts.texi: Document use of '=' in include directory\n\targuments.\n\nFrom-SVN: r123134", "tree": {"sha": "2bc90b2b69bca238979afbdfab5748dfe632c623", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bc90b2b69bca238979afbdfab5748dfe632c623"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a200623651c1fe91e2377235e302da84dd47e18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a200623651c1fe91e2377235e302da84dd47e18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a200623651c1fe91e2377235e302da84dd47e18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a200623651c1fe91e2377235e302da84dd47e18/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd4a64247f0e8fb81da6be573bb03b95ad2c0846", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd4a64247f0e8fb81da6be573bb03b95ad2c0846", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd4a64247f0e8fb81da6be573bb03b95ad2c0846"}], "stats": {"total": 46, "additions": 43, "deletions": 3}, "files": [{"sha": "047a1ffcfe9c52efa57c3191ecc181ae65a2e733", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a200623651c1fe91e2377235e302da84dd47e18/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a200623651c1fe91e2377235e302da84dd47e18/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9a200623651c1fe91e2377235e302da84dd47e18", "patch": "@@ -1,3 +1,12 @@\n+2007-03-22  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* c-incpath.c (add_sysroot_to_chain): New.\n+\t(merge_include_chains): Add sysroot argument.  Call\n+\tadd_sysroot_to_chain if sysrooted.\n+\t(register_include_chains): Update call to merge_include_chains.\n+\t* doc/cppopts.texi: Document use of '=' in include directory\n+\targuments.\n+\n 2007-03-22  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (cmp<mode>): Rename from cmpsf and cmpdf."}, {"sha": "3e819cec8380f8d8490436d649b9f3b51d13dac1", "filename": "gcc/c-incpath.c", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a200623651c1fe91e2377235e302da84dd47e18/gcc%2Fc-incpath.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a200623651c1fe91e2377235e302da84dd47e18/gcc%2Fc-incpath.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-incpath.c?ref=9a200623651c1fe91e2377235e302da84dd47e18", "patch": "@@ -51,7 +51,8 @@ static const char dir_separator_str[] = { DIR_SEPARATOR, 0 };\n static void add_env_var_paths (const char *, int);\n static void add_standard_paths (const char *, const char *, const char *, int);\n static void free_path (struct cpp_dir *, int);\n-static void merge_include_chains (cpp_reader *, int);\n+static void merge_include_chains (const char *, cpp_reader *, int);\n+static void add_sysroot_to_chain (const char *, int);\n static struct cpp_dir *remove_duplicates (cpp_reader *, struct cpp_dir *,\n \t\t\t\t\t   struct cpp_dir *,\n \t\t\t\t\t   struct cpp_dir *, int);\n@@ -282,6 +283,19 @@ remove_duplicates (cpp_reader *pfile, struct cpp_dir *head,\n   return head;\n }\n \n+/* Add SYSROOT to any user-supplied paths in CHAIN starting with\n+   \"=\".  */\n+\n+static void\n+add_sysroot_to_chain (const char *sysroot, int chain)\n+{\n+  struct cpp_dir *p;\n+\n+  for (p = heads[chain]; p != NULL; p = p->next)\n+    if (p->name[0] == '=' && p->user_supplied_p)\n+      p->name = concat (sysroot, p->name + 1, NULL);\n+}\n+\n /* Merge the four include chains together in the order quote, bracket,\n    system, after.  Remove duplicate dirs (as determined by\n    INO_T_EQ()).\n@@ -293,8 +307,17 @@ remove_duplicates (cpp_reader *pfile, struct cpp_dir *head,\n    written -iquote bar -Ifoo -Iquux.  */\n \n static void\n-merge_include_chains (cpp_reader *pfile, int verbose)\n+merge_include_chains (const char *sysroot, cpp_reader *pfile, int verbose)\n {\n+  /* Add the sysroot to user-supplied paths starting with \"=\".  */\n+  if (sysroot)\n+    {\n+      add_sysroot_to_chain (sysroot, QUOTE);\n+      add_sysroot_to_chain (sysroot, BRACKET);\n+      add_sysroot_to_chain (sysroot, SYSTEM);\n+      add_sysroot_to_chain (sysroot, AFTER);\n+    }\n+\n   /* Join the SYSTEM and AFTER chains.  Remove duplicates in the\n      resulting SYSTEM chain.  */\n   if (heads[SYSTEM])\n@@ -419,7 +442,7 @@ register_include_chains (cpp_reader *pfile, const char *sysroot,\n \n   target_c_incpath.extra_includes (sysroot, iprefix, stdinc);\n \n-  merge_include_chains (pfile, verbose);\n+  merge_include_chains (sysroot, pfile, verbose);\n \n   cpp_set_include_chains (pfile, heads[QUOTE], heads[BRACKET],\n \t\t\t  quote_ignores_source_dir);"}, {"sha": "17235bdae589b44ec257d2da17d2ae96117431d4", "filename": "gcc/doc/cppopts.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a200623651c1fe91e2377235e302da84dd47e18/gcc%2Fdoc%2Fcppopts.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a200623651c1fe91e2377235e302da84dd47e18/gcc%2Fdoc%2Fcppopts.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcppopts.texi?ref=9a200623651c1fe91e2377235e302da84dd47e18", "patch": "@@ -65,6 +65,8 @@ of system headers are not defeated\n (@pxref{System Headers})\n @end ifset\n .\n+If @var{dir} begins with @code{=}, then the @code{=} will be replaced\n+by the sysroot prefix; see @option{--sysroot} and @option{-isysroot}.\n \n @item -o @var{file}\n @opindex o\n@@ -464,6 +466,8 @@ specified by @option{-include}.\n Search @var{dir} for header files, but do it @emph{after} all\n directories specified with @option{-I} and the standard system directories\n have been exhausted.  @var{dir} is treated as a system include directory.\n+If @var{dir} begins with @code{=}, then the @code{=} will be replaced\n+by the sysroot prefix; see @option{--sysroot} and @option{-isysroot}.\n \n @item -iprefix @var{prefix}\n @opindex iprefix\n@@ -499,6 +503,8 @@ is applied to the standard system directories.\n @ifset cppmanual\n @xref{System Headers}.\n @end ifset\n+If @var{dir} begins with @code{=}, then the @code{=} will be replaced\n+by the sysroot prefix; see @option{--sysroot} and @option{-isysroot}.\n \n @item -iquote @var{dir}\n @opindex iquote\n@@ -509,6 +515,8 @@ Search @var{dir} only for header files requested with\n @ifset cppmanual\n @xref{Search Path}.\n @end ifset\n+If @var{dir} begins with @code{=}, then the @code{=} will be replaced\n+by the sysroot prefix; see @option{--sysroot} and @option{-isysroot}.\n \n @item -fdollars-in-identifiers\n @opindex fdollars-in-identifiers"}]}