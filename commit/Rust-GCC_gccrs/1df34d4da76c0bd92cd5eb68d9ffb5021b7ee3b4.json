{"sha": "1df34d4da76c0bd92cd5eb68d9ffb5021b7ee3b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRmMzRkNGRhNzZjMGJkOTJjZDVlYjY4ZDlmZmI1MDIxYjdlZTNiNA==", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@linux-mips.org", "date": "2009-07-01T01:23:54Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@gcc.gnu.org", "date": "2009-07-01T01:23:54Z"}, "message": "vax.h (TARGET_BSD_DIVMOD): New macro.\n\n\t* config/vax/vax.h (TARGET_BSD_DIVMOD): New macro.  Set to 1.\n\t* config/vax/linux.h (TARGET_BSD_DIVMOD): New macro.  Redefine the\n\tto 0.\n\t* config/vax/vax.c (vax_init_libfuncs): Only redefine udiv_optab\n\tand umod_optab if TARGET_BSD_DIVMOD.\n\t* config/vax/lib1funcs.asm: New file.\n\t* config/vax/t-linux: New file.\n\t* config.gcc (vax-*-linux*): Set tmake_file to vax/t-linux.\n\nFrom-SVN: r149128", "tree": {"sha": "678db9620aef6b8c0ac4f01da0f5a5ac39c84a78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/678db9620aef6b8c0ac4f01da0f5a5ac39c84a78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1df34d4da76c0bd92cd5eb68d9ffb5021b7ee3b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1df34d4da76c0bd92cd5eb68d9ffb5021b7ee3b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1df34d4da76c0bd92cd5eb68d9ffb5021b7ee3b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1df34d4da76c0bd92cd5eb68d9ffb5021b7ee3b4/comments", "author": null, "committer": null, "parents": [{"sha": "429a907c9aad98f4cee72a79ec9c50c3d5fde320", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/429a907c9aad98f4cee72a79ec9c50c3d5fde320", "html_url": "https://github.com/Rust-GCC/gccrs/commit/429a907c9aad98f4cee72a79ec9c50c3d5fde320"}], "stats": {"total": 120, "additions": 118, "deletions": 2}, "files": [{"sha": "0b58daf36c513c62f9e972a9bcec00aae70a10b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1df34d4da76c0bd92cd5eb68d9ffb5021b7ee3b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1df34d4da76c0bd92cd5eb68d9ffb5021b7ee3b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1df34d4da76c0bd92cd5eb68d9ffb5021b7ee3b4", "patch": "@@ -1,3 +1,14 @@\n+2009-07-01  Maciej W. Rozycki  <macro@linux-mips.org>\n+\n+\t* config/vax/vax.h (TARGET_BSD_DIVMOD): New macro.  Set to 1.\n+\t* config/vax/linux.h (TARGET_BSD_DIVMOD): New macro.  Redefine the\n+\tto 0.\n+\t* config/vax/vax.c (vax_init_libfuncs): Only redefine udiv_optab\n+\tand umod_optab if TARGET_BSD_DIVMOD.\n+\t* config/vax/lib1funcs.asm: New file.\n+\t* config/vax/t-linux: New file.\n+\t* config.gcc (vax-*-linux*): Set tmake_file to vax/t-linux.\n+\n 2009-06-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/40566"}, {"sha": "fe345c139531597cc7ed9a4d2949b7a5b5e851b8", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1df34d4da76c0bd92cd5eb68d9ffb5021b7ee3b4/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1df34d4da76c0bd92cd5eb68d9ffb5021b7ee3b4/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=1df34d4da76c0bd92cd5eb68d9ffb5021b7ee3b4", "patch": "@@ -2439,6 +2439,7 @@ v850-*-*)\n \t;;\n vax-*-linux*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h linux.h vax/elf.h vax/linux.h\"\n+\ttmake_file=vax/t-linux\n \t;;\n vax-*-netbsdelf*)\n \ttm_file=\"${tm_file} elfos.h netbsd.h netbsd-elf.h vax/elf.h vax/netbsd-elf.h\""}, {"sha": "1d57b56dad96eb6ce84de40ad29ad59bc33b9602", "filename": "gcc/config/vax/lib1funcs.asm", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1df34d4da76c0bd92cd5eb68d9ffb5021b7ee3b4/gcc%2Fconfig%2Fvax%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1df34d4da76c0bd92cd5eb68d9ffb5021b7ee3b4/gcc%2Fconfig%2Fvax%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Flib1funcs.asm?ref=1df34d4da76c0bd92cd5eb68d9ffb5021b7ee3b4", "patch": "@@ -0,0 +1,92 @@\n+/* Copyright (C) 2009 Free Software Foundation, Inc.\n+   This file is part of GCC.\n+   Contributed by Maciej W. Rozycki <macro@linux-mips.org>.\n+\n+   This file is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by the\n+   Free Software Foundation; either version 3, or (at your option) any\n+   later version.\n+\n+   This file is distributed in the hope that it will be useful, but\n+   WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   General Public License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#ifdef L_udivsi3\n+\t.text\n+\t.globl\t__udivsi3\n+\t.type\t__udivsi3, @function\n+__udivsi3:\n+\t.word\t0\n+\tmovl\t8(%ap), %r1\n+\tblss\t0f\t\t\t/* Check bit #31 of divisor.  */\n+\tmovl\t4(%ap), %r2\n+\tblss\t1f\t\t\t/* Check bit #31 of dividend.  */\n+\n+\t/* Both zero, do a standard division.  */\n+\n+\tdivl3\t%r1, %r2, %r0\n+\tret\n+\n+\t/* MSB of divisor set, only 1 or 0 may result.  */\n+0:\n+\tdecl\t%r1\n+\tclrl\t%r0\n+\tcmpl\t%r1, 4(%ap)\n+\tadwc\t$0, %r0\n+\tret\n+\n+\t/* MSB of dividend set, do an extended division.  */\n+1:\n+\tclrl\t%r3\n+\tediv\t%r1, %r2, %r0, %r3\n+\tret\n+\t.size\t__udivsi3, . - __udivsi3\n+\t.previous\n+#endif\n+\n+#ifdef L_umodsi3\n+\t.text\n+\t.globl\t__umodsi3\n+\t.type\t__umodsi3, @function\n+__umodsi3:\n+\t.word\t0\n+\tmovl\t8(%ap), %r1\n+\tblss\t0f\t\t\t/* Check bit #31 of divisor.  */\n+\tmovl\t4(%ap), %r2\n+\tblss\t1f\t\t\t/* Check bit #31 of dividend.  */\n+\n+\t/* Both zero, do a standard division.  */\n+\n+\tdivl3\t%r1, %r2, %r0\n+\tmull2\t%r0, %r1\n+\tsubl3\t%r1, %r2, %r0\n+\tret\n+\n+\t/* MSB of divisor set, subtract the divisor at most once.  */\n+0:\n+\tmovl\t4(%ap), %r2\n+\tclrl\t%r0\n+\tcmpl\t%r2, %r1\n+\tsbwc\t$0, %r0\n+\tbicl2\t%r0, %r1\n+\tsubl3\t%r1, %r2, %r0\n+\tret\n+\n+\t/* MSB of dividend set, do an extended division.  */\n+1:\n+\tclrl\t%r3\n+\tediv\t%r1, %r2, %r3, %r0\n+\tret\n+\t.size\t__umodsi3, . - __umodsi3\n+\t.previous\n+#endif"}, {"sha": "1087069adbb70c34f706ba7ccffe713b63eed179", "filename": "gcc/config/vax/linux.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1df34d4da76c0bd92cd5eb68d9ffb5021b7ee3b4/gcc%2Fconfig%2Fvax%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1df34d4da76c0bd92cd5eb68d9ffb5021b7ee3b4/gcc%2Fconfig%2Fvax%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Flinux.h?ref=1df34d4da76c0bd92cd5eb68d9ffb5021b7ee3b4", "patch": "@@ -37,6 +37,10 @@ along with GCC; see the file COPYING3.  If not see\n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT (MASK_QMATH | MASK_G_FLOAT)\n \n+/* Use standard names for udiv and umod libgcc calls.  */\n+#undef TARGET_BSD_DIVMOD\n+#define TARGET_BSD_DIVMOD 0\n+\n #undef CPP_SPEC\n #define CPP_SPEC \"%{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT}\"\n "}, {"sha": "9af1edb0fabefdfb67c09ace0be129cf61d98c7f", "filename": "gcc/config/vax/t-linux", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1df34d4da76c0bd92cd5eb68d9ffb5021b7ee3b4/gcc%2Fconfig%2Fvax%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1df34d4da76c0bd92cd5eb68d9ffb5021b7ee3b4/gcc%2Fconfig%2Fvax%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Ft-linux?ref=1df34d4da76c0bd92cd5eb68d9ffb5021b7ee3b4", "patch": "@@ -0,0 +1,2 @@\n+LIB1ASMSRC = vax/lib1funcs.asm\n+LIB1ASMFUNCS = _udivsi3 _umodsi3"}, {"sha": "4dfaa2e9dd106a52a6c2dac9cf5d869cd0450dc0", "filename": "gcc/config/vax/vax.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1df34d4da76c0bd92cd5eb68d9ffb5021b7ee3b4/gcc%2Fconfig%2Fvax%2Fvax.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1df34d4da76c0bd92cd5eb68d9ffb5021b7ee3b4/gcc%2Fconfig%2Fvax%2Fvax.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.c?ref=1df34d4da76c0bd92cd5eb68d9ffb5021b7ee3b4", "patch": "@@ -175,8 +175,11 @@ vax_file_start (void)\n static void\n vax_init_libfuncs (void)\n {\n-  set_optab_libfunc (udiv_optab, SImode, TARGET_ELF ? \"*__udiv\" : \"*udiv\");\n-  set_optab_libfunc (umod_optab, SImode, TARGET_ELF ? \"*__urem\" : \"*urem\");\n+  if (TARGET_BSD_DIVMOD)\n+    {\n+      set_optab_libfunc (udiv_optab, SImode, TARGET_ELF ? \"*__udiv\" : \"*udiv\");\n+      set_optab_libfunc (umod_optab, SImode, TARGET_ELF ? \"*__urem\" : \"*urem\");\n+    }\n }\n \n /* This is like nonimmediate_operand with a restriction on the type of MEM.  */"}, {"sha": "0ac7ba58b57163d7f534c0423574a58b54b43d0a", "filename": "gcc/config/vax/vax.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1df34d4da76c0bd92cd5eb68d9ffb5021b7ee3b4/gcc%2Fconfig%2Fvax%2Fvax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1df34d4da76c0bd92cd5eb68d9ffb5021b7ee3b4/gcc%2Fconfig%2Fvax%2Fvax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.h?ref=1df34d4da76c0bd92cd5eb68d9ffb5021b7ee3b4", "patch": "@@ -63,6 +63,9 @@ along with GCC; see the file COPYING3.  If not see\n /* Nonzero if ELF.  Redefined by vax/elf.h.  */\n #define TARGET_ELF 0\n \n+/* Use BSD names for udiv and umod libgcc calls.  */\n+#define TARGET_BSD_DIVMOD 1\n+\n /* Default target_flags if no switches specified.  */\n \n #ifndef TARGET_DEFAULT"}]}