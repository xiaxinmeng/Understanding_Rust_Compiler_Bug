{"sha": "5c04da88731961636d08c0fd06f2aa291410d5b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWMwNGRhODg3MzE5NjE2MzZkMDhjMGZkMDZmMmFhMjkxNDEwZDViOQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-12-05T20:06:46Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-12-05T20:06:46Z"}, "message": "PR c++/92271 - make __is_same alias for __is_same_as.\n\nRichard Smith proposed adding a synonym for __is_same_as, to accomodate the\nconvention of exposing std::SOME_TRAIT<A, B>::value as __SOME_TRAIT(A, B).\n\nSo add that alias, and also adjust the C++ printer.  I didn't bother changing\nthe RID_ identifier.\n\n\t* c-common.c: Add __is_same, an alias for __is_same_as.\n\n\t* cxx-pretty-print.c (pp_cxx_trait_expression) <case CPTK_IS_SAME_AS>:\n\tPrint \"__is_same\".\n\n\t* g++.dg/ext/is_same.C: New test.\n\nFrom-SVN: r279018", "tree": {"sha": "3d47b17b0b603fea3e1891725ae3aa55e1559103", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d47b17b0b603fea3e1891725ae3aa55e1559103"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c04da88731961636d08c0fd06f2aa291410d5b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c04da88731961636d08c0fd06f2aa291410d5b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c04da88731961636d08c0fd06f2aa291410d5b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c04da88731961636d08c0fd06f2aa291410d5b9/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "34fbe3f0946f88828765184ed6581bda62cdf49f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34fbe3f0946f88828765184ed6581bda62cdf49f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34fbe3f0946f88828765184ed6581bda62cdf49f"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "82a62b82749637b0aae6e968060531a5dc44de3d", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c04da88731961636d08c0fd06f2aa291410d5b9/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c04da88731961636d08c0fd06f2aa291410d5b9/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=5c04da88731961636d08c0fd06f2aa291410d5b9", "patch": "@@ -1,3 +1,8 @@\n+2019-12-05  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/92271 - make __is_same alias for __is_same_as.\n+\t* c-common.c: Add __is_same, an alias for __is_same_as.\n+\n 2019-12-03  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/91363 - P0960R3: Parenthesized initialization of aggregates."}, {"sha": "8292d18621b64fd685783ac994c27ec2ca488c78", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c04da88731961636d08c0fd06f2aa291410d5b9/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c04da88731961636d08c0fd06f2aa291410d5b9/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=5c04da88731961636d08c0fd06f2aa291410d5b9", "patch": "@@ -418,6 +418,7 @@ const struct c_common_resword c_common_reswords[] =\n   { \"__is_literal_type\", RID_IS_LITERAL_TYPE, D_CXXONLY },\n   { \"__is_pod\",\t\tRID_IS_POD,\tD_CXXONLY },\n   { \"__is_polymorphic\",\tRID_IS_POLYMORPHIC, D_CXXONLY },\n+  { \"__is_same\",     RID_IS_SAME_AS, D_CXXONLY },\n   { \"__is_same_as\",     RID_IS_SAME_AS, D_CXXONLY },\n   { \"__is_standard_layout\", RID_IS_STD_LAYOUT, D_CXXONLY },\n   { \"__is_trivial\",     RID_IS_TRIVIAL, D_CXXONLY },"}, {"sha": "4e88ed828f6476701da0bf3c52432c7101bb7765", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c04da88731961636d08c0fd06f2aa291410d5b9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c04da88731961636d08c0fd06f2aa291410d5b9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5c04da88731961636d08c0fd06f2aa291410d5b9", "patch": "@@ -1,3 +1,9 @@\n+2019-12-05  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/92271 - make __is_same alias for __is_same_as.\n+\t* cxx-pretty-print.c (pp_cxx_trait_expression) <case CPTK_IS_SAME_AS>:\n+\tPrint \"__is_same\".\n+\n 2019-12-05  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* cp-gimplify.c: Include memmodel.h."}, {"sha": "62805446ba9e8c2a0ded51f9dcc9176e26660e6f", "filename": "gcc/cp/cxx-pretty-print.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c04da88731961636d08c0fd06f2aa291410d5b9/gcc%2Fcp%2Fcxx-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c04da88731961636d08c0fd06f2aa291410d5b9/gcc%2Fcp%2Fcxx-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcxx-pretty-print.c?ref=5c04da88731961636d08c0fd06f2aa291410d5b9", "patch": "@@ -2661,7 +2661,7 @@ pp_cxx_trait_expression (cxx_pretty_printer *pp, tree t)\n       pp_cxx_ws_string (pp, \"__is_polymorphic\");\n       break;\n     case CPTK_IS_SAME_AS:\n-      pp_cxx_ws_string (pp, \"__is_same_as\");\n+      pp_cxx_ws_string (pp, \"__is_same\");\n       break;\n     case CPTK_IS_STD_LAYOUT:\n       pp_cxx_ws_string (pp, \"__is_std_layout\");"}, {"sha": "e1692fae10db9a2808dbe7144f1ef2042031b3e3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c04da88731961636d08c0fd06f2aa291410d5b9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c04da88731961636d08c0fd06f2aa291410d5b9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5c04da88731961636d08c0fd06f2aa291410d5b9", "patch": "@@ -1,3 +1,8 @@\n+2019-12-05  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/92271 - make __is_same alias for __is_same_as.\n+\t* g++.dg/ext/is_same.C: New test.\n+\n 2019-12-05  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* testsuite/libgomp.fortran/use_device_ptr-optional-2.f90: Add"}, {"sha": "5e9079c51099fb489dc4d27d3d531791b4323bc2", "filename": "gcc/testsuite/g++.dg/ext/is_same.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c04da88731961636d08c0fd06f2aa291410d5b9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_same.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c04da88731961636d08c0fd06f2aa291410d5b9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_same.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_same.C?ref=5c04da88731961636d08c0fd06f2aa291410d5b9", "patch": "@@ -0,0 +1,5 @@\n+// PR c++/92271 - make __is_same alias for __is_same_as.\n+// { dg-do compile { target c++11 } }\n+\n+static_assert(__is_same(int, int) == __is_same_as(int, int), \"\");\n+static_assert(__is_same(unsigned int, int) == __is_same_as(unsigned int, int), \"\");"}]}