{"sha": "14f986ed7a69f4f21b7312328fbef1747b12b6db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRmOTg2ZWQ3YTY5ZjRmMjFiNzMxMjMyOGZiZWYxNzQ3YjEyYjZkYg==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2012-04-05T14:37:45Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@gcc.gnu.org", "date": "2012-04-05T14:37:45Z"}, "message": "arm.md (arch): Add neon_onlya8 and neon_nota8.\n\n2012-04-05  Andrew Stubbs  <ams@codesourcery.com>\n\n\tgcc/\n\t* config/arm/arm.md (arch): Add neon_onlya8 and neon_nota8.\n\t(arch_enabled): Handle new arch types.\n\t(one_cmpldi2): Add NEON support.\n\nFrom-SVN: r186167", "tree": {"sha": "c15a5fed26b1ae1ff50a3e1c10892ca1b9865d1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c15a5fed26b1ae1ff50a3e1c10892ca1b9865d1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14f986ed7a69f4f21b7312328fbef1747b12b6db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14f986ed7a69f4f21b7312328fbef1747b12b6db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14f986ed7a69f4f21b7312328fbef1747b12b6db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14f986ed7a69f4f21b7312328fbef1747b12b6db/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f3b249e5d1c08057fc6f405d197e82f7cb7783b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3b249e5d1c08057fc6f405d197e82f7cb7783b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3b249e5d1c08057fc6f405d197e82f7cb7783b5"}], "stats": {"total": 37, "additions": 30, "deletions": 7}, "files": [{"sha": "8fbf1abfeb1f2c96fc30c294657792165021cd49", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14f986ed7a69f4f21b7312328fbef1747b12b6db/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14f986ed7a69f4f21b7312328fbef1747b12b6db/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=14f986ed7a69f4f21b7312328fbef1747b12b6db", "patch": "@@ -1,3 +1,9 @@\n+2012-04-05  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* config/arm/arm.md (arch): Add neon_onlya8 and neon_nota8.\n+\t(arch_enabled): Handle new arch types.\n+\t(one_cmpldi2): Add NEON support.\n+\n 2012-04-05  Richard Guenther  <rguenther@suse.de>\n \n \t* gimple.c (walk_gimple_op): Compute val_only for the LHS"}, {"sha": "3cdc1535f3a77b9426416d2e56b268825825298e", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14f986ed7a69f4f21b7312328fbef1747b12b6db/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14f986ed7a69f4f21b7312328fbef1747b12b6db/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=14f986ed7a69f4f21b7312328fbef1747b12b6db", "patch": "@@ -196,7 +196,7 @@\n ; for ARM or Thumb-2 with arm_arch6, and nov6 for ARM without\n ; arm_arch6.  This attribute is used to compute attribute \"enabled\",\n ; use type \"any\" to enable an alternative in all cases.\n-(define_attr \"arch\" \"any,a,t,32,t1,t2,v6,nov6,onlya8,nota8\"\n+(define_attr \"arch\" \"any,a,t,32,t1,t2,v6,nov6,onlya8,neon_onlya8,nota8,neon_nota8\"\n   (const_string \"any\"))\n \n (define_attr \"arch_enabled\" \"no,yes\"\n@@ -235,8 +235,18 @@\n \t      (eq_attr \"tune\" \"cortexa8\"))\n \t (const_string \"yes\")\n \n+\t (and (eq_attr \"arch\" \"neon_onlya8\")\n+\t      (eq_attr \"tune\" \"cortexa8\")\n+\t      (match_test \"TARGET_NEON\"))\n+\t (const_string \"yes\")\n+\n \t (and (eq_attr \"arch\" \"nota8\")\n \t      (not (eq_attr \"tune\" \"cortexa8\")))\n+\t (const_string \"yes\")\n+\n+\t (and (eq_attr \"arch\" \"neon_nota8\")\n+\t      (not (eq_attr \"tune\" \"cortexa8\"))\n+\t      (match_test \"TARGET_NEON\"))\n \t (const_string \"yes\")]\n \t(const_string \"no\")))\n \n@@ -4250,11 +4260,16 @@\n   \"\")\n \n (define_insn_and_split \"one_cmpldi2\"\n-  [(set (match_operand:DI 0 \"s_register_operand\" \"=&r,&r\")\n-\t(not:DI (match_operand:DI 1 \"s_register_operand\" \"0,r\")))]\n+  [(set (match_operand:DI 0 \"s_register_operand\"\t \"=w,&r,&r,?w\")\n+\t(not:DI (match_operand:DI 1 \"s_register_operand\" \" w, 0, r, w\")))]\n   \"TARGET_32BIT\"\n-  \"#\"\n-  \"TARGET_32BIT && reload_completed\"\n+  \"@\n+   vmvn\\t%P0, %P1\n+   #\n+   #\n+   vmvn\\t%P0, %P1\"\n+  \"TARGET_32BIT && reload_completed\n+   && arm_general_register_operand (operands[0], DImode)\"\n   [(set (match_dup 0) (not:SI (match_dup 1)))\n    (set (match_dup 2) (not:SI (match_dup 3)))]\n   \"\n@@ -4264,8 +4279,10 @@\n     operands[3] = gen_highpart (SImode, operands[1]);\n     operands[1] = gen_lowpart (SImode, operands[1]);\n   }\"\n-  [(set_attr \"length\" \"8\")\n-   (set_attr \"predicable\" \"yes\")]\n+  [(set_attr \"length\" \"*,8,8,*\")\n+   (set_attr \"predicable\" \"no,yes,yes,no\")\n+   (set_attr \"neon_type\" \"neon_int_1,*,*,neon_int_1\")\n+   (set_attr \"arch\" \"neon_nota8,*,*,neon_onlya8\")]\n )\n \n (define_expand \"one_cmplsi2\""}]}