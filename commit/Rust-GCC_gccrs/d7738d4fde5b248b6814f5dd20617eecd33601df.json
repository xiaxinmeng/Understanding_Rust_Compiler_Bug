{"sha": "d7738d4fde5b248b6814f5dd20617eecd33601df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc3MzhkNGZkZTViMjQ4YjY4MTRmNWRkMjA2MTdlZWNkMzM2MDFkZg==", "commit": {"author": {"name": "xiezhiheng", "email": "xiezhiheng@huawei.com", "date": "2020-08-27T08:07:26Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-08-27T08:07:26Z"}, "message": "AArch64: Add FLAG for min/max intrinsics [PR94442]\n\n2020-08-27  Zhiheng Xie  <xiezhiheng@huawei.com>\n\ngcc/ChangeLog:\n\n\t* config/aarch64/aarch64-simd-builtins.def: Add proper FLAG\n\tfor min/max intrinsics.", "tree": {"sha": "7659313d0ab020220998574caf2438ec445aa825", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7659313d0ab020220998574caf2438ec445aa825"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7738d4fde5b248b6814f5dd20617eecd33601df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7738d4fde5b248b6814f5dd20617eecd33601df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7738d4fde5b248b6814f5dd20617eecd33601df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7738d4fde5b248b6814f5dd20617eecd33601df/comments", "author": null, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff7463172e564c5dd2432d7af8eaa0124cbd4af7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff7463172e564c5dd2432d7af8eaa0124cbd4af7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff7463172e564c5dd2432d7af8eaa0124cbd4af7"}], "stats": {"total": 44, "additions": 22, "deletions": 22}, "files": [{"sha": "a9b47e4ea1f92d2f01abecdc4ddf272ffdca1e63", "filename": "gcc/config/aarch64/aarch64-simd-builtins.def", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7738d4fde5b248b6814f5dd20617eecd33601df/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7738d4fde5b248b6814f5dd20617eecd33601df/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def?ref=d7738d4fde5b248b6814f5dd20617eecd33601df", "patch": "@@ -300,36 +300,36 @@\n   BUILTIN_VALL (UNOP, reduc_plus_scal_, 10, ALL)\n \n   /* Implemented by reduc_<maxmin_uns>_scal_<mode> (producing scalar).  */\n-  BUILTIN_VDQIF_F16 (UNOP, reduc_smax_scal_, 10, ALL)\n-  BUILTIN_VDQIF_F16 (UNOP, reduc_smin_scal_, 10, ALL)\n-  BUILTIN_VDQ_BHSI (UNOPU, reduc_umax_scal_, 10, ALL)\n-  BUILTIN_VDQ_BHSI (UNOPU, reduc_umin_scal_, 10, ALL)\n-  BUILTIN_VHSDF (UNOP, reduc_smax_nan_scal_, 10, ALL)\n-  BUILTIN_VHSDF (UNOP, reduc_smin_nan_scal_, 10, ALL)\n+  BUILTIN_VDQIF_F16 (UNOP, reduc_smax_scal_, 10, NONE)\n+  BUILTIN_VDQIF_F16 (UNOP, reduc_smin_scal_, 10, NONE)\n+  BUILTIN_VDQ_BHSI (UNOPU, reduc_umax_scal_, 10, NONE)\n+  BUILTIN_VDQ_BHSI (UNOPU, reduc_umin_scal_, 10, NONE)\n+  BUILTIN_VHSDF (UNOP, reduc_smax_nan_scal_, 10, NONE)\n+  BUILTIN_VHSDF (UNOP, reduc_smin_nan_scal_, 10, NONE)\n \n   /* Implemented by <maxmin_uns><mode>3.\n      smax variants map to fmaxnm,\n      smax_nan variants map to fmax.  */\n-  BUILTIN_VDQ_BHSI (BINOP, smax, 3, ALL)\n-  BUILTIN_VDQ_BHSI (BINOP, smin, 3, ALL)\n-  BUILTIN_VDQ_BHSI (BINOP, umax, 3, ALL)\n-  BUILTIN_VDQ_BHSI (BINOP, umin, 3, ALL)\n-  BUILTIN_VHSDF_DF (BINOP, smax_nan, 3, ALL)\n-  BUILTIN_VHSDF_DF (BINOP, smin_nan, 3, ALL)\n+  BUILTIN_VDQ_BHSI (BINOP, smax, 3, NONE)\n+  BUILTIN_VDQ_BHSI (BINOP, smin, 3, NONE)\n+  BUILTIN_VDQ_BHSI (BINOP, umax, 3, NONE)\n+  BUILTIN_VDQ_BHSI (BINOP, umin, 3, NONE)\n+  BUILTIN_VHSDF_DF (BINOP, smax_nan, 3, NONE)\n+  BUILTIN_VHSDF_DF (BINOP, smin_nan, 3, NONE)\n \n   /* Implemented by <maxmin_uns><mode>3.  */\n-  BUILTIN_VHSDF_HSDF (BINOP, fmax, 3, ALL)\n-  BUILTIN_VHSDF_HSDF (BINOP, fmin, 3, ALL)\n+  BUILTIN_VHSDF_HSDF (BINOP, fmax, 3, FP)\n+  BUILTIN_VHSDF_HSDF (BINOP, fmin, 3, FP)\n \n   /* Implemented by aarch64_<maxmin_uns>p<mode>.  */\n-  BUILTIN_VDQ_BHSI (BINOP, smaxp, 0, ALL)\n-  BUILTIN_VDQ_BHSI (BINOP, sminp, 0, ALL)\n-  BUILTIN_VDQ_BHSI (BINOP, umaxp, 0, ALL)\n-  BUILTIN_VDQ_BHSI (BINOP, uminp, 0, ALL)\n-  BUILTIN_VHSDF (BINOP, smaxp, 0, ALL)\n-  BUILTIN_VHSDF (BINOP, sminp, 0, ALL)\n-  BUILTIN_VHSDF (BINOP, smax_nanp, 0, ALL)\n-  BUILTIN_VHSDF (BINOP, smin_nanp, 0, ALL)\n+  BUILTIN_VDQ_BHSI (BINOP, smaxp, 0, NONE)\n+  BUILTIN_VDQ_BHSI (BINOP, sminp, 0, NONE)\n+  BUILTIN_VDQ_BHSI (BINOP, umaxp, 0, NONE)\n+  BUILTIN_VDQ_BHSI (BINOP, uminp, 0, NONE)\n+  BUILTIN_VHSDF (BINOP, smaxp, 0, NONE)\n+  BUILTIN_VHSDF (BINOP, sminp, 0, NONE)\n+  BUILTIN_VHSDF (BINOP, smax_nanp, 0, NONE)\n+  BUILTIN_VHSDF (BINOP, smin_nanp, 0, NONE)\n \n   /* Implemented by <frint_pattern><mode>2.  */\n   BUILTIN_VHSDF (UNOP, btrunc, 2, ALL)"}]}