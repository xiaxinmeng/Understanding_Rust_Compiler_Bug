{"sha": "f8c02bc55a20d70e5edc71b42129909324eb5c8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhjMDJiYzU1YTIwZDcwZTVlZGM3MWI0MjEyOTkwOTMyNGViNWM4ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2001-03-20T16:59:44Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-03-20T16:59:44Z"}, "message": "vec.cc (__cxa_vec_cleanup): New fn.\n\n        * libsupc++/vec.cc (__cxa_vec_cleanup): New fn.\n        (__cxa_vec_ctor, __cxa_vec_cctor, __cxa_vec_dtor): Call it.\n        * libsupc++/cxxabi.h: Declare it.\n\nFrom-SVN: r40657", "tree": {"sha": "9d4ac3acff9751a13c92bb20b21eb226a39dc231", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d4ac3acff9751a13c92bb20b21eb226a39dc231"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8c02bc55a20d70e5edc71b42129909324eb5c8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8c02bc55a20d70e5edc71b42129909324eb5c8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8c02bc55a20d70e5edc71b42129909324eb5c8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8c02bc55a20d70e5edc71b42129909324eb5c8e/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e03a61f143b31bd50419ce19ee181064b90a532c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e03a61f143b31bd50419ce19ee181064b90a532c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e03a61f143b31bd50419ce19ee181064b90a532c"}], "stats": {"total": 59, "additions": 49, "deletions": 10}, "files": [{"sha": "7ab9839fc8cff6f0cf036c04e1a656cdd0a9164f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c02bc55a20d70e5edc71b42129909324eb5c8e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c02bc55a20d70e5edc71b42129909324eb5c8e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f8c02bc55a20d70e5edc71b42129909324eb5c8e", "patch": "@@ -1,3 +1,9 @@\n+2001-03-20  Jason Merrill  <jason@redhat.com>\n+\n+\t* libsupc++/vec.cc (__cxa_vec_cleanup): New fn.\n+\t(__cxa_vec_ctor, __cxa_vec_cctor, __cxa_vec_dtor): Call it.\n+\t* libsupc++/cxxabi.h: Declare it.\n+\n 2001-03-16  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* src/gen-num-limits.cc (signal_adapter): Overloaded to match"}, {"sha": "1d4464a274e95f174ae59487d7e49d6c270f6d6a", "filename": "libstdc++-v3/libsupc++/cxxabi.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c02bc55a20d70e5edc71b42129909324eb5c8e/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c02bc55a20d70e5edc71b42129909324eb5c8e/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h?ref=f8c02bc55a20d70e5edc71b42129909324eb5c8e", "patch": "@@ -473,6 +473,13 @@ void __cxa_vec_dtor (void *__array_address,\n                      __SIZE_TYPE__ __element_size,\n                      void (*__destructor) (void *));\n \n+/* destruct array */\n+extern \"C\"\n+void __cxa_vec_cleanup (void *__array_address,\n+\t\t\t__SIZE_TYPE__ __element_count,\n+\t\t\t__SIZE_TYPE__ __element_size,\n+\t\t\tvoid (*__destructor) (void *));\n+\n /* destruct and release array */\n extern \"C\"\n void __cxa_vec_delete (void *__array_address,"}, {"sha": "037d052bae6986786955bd35f87d4e75235490c6", "filename": "libstdc++-v3/libsupc++/vec.cc", "status": "modified", "additions": 36, "deletions": 10, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c02bc55a20d70e5edc71b42129909324eb5c8e/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fvec.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c02bc55a20d70e5edc71b42129909324eb5c8e/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fvec.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fvec.cc?ref=f8c02bc55a20d70e5edc71b42129909324eb5c8e", "patch": "@@ -150,7 +150,7 @@ namespace __cxxabiv1\n       {\n \t{\n \t  uncatch_exception ue;\n-\t  __cxa_vec_dtor(array_address, ix, element_size, destructor);\n+\t  __cxa_vec_cleanup(array_address, ix, element_size, destructor);\n \t}\n \t__throw_exception_again;\n       }\n@@ -180,7 +180,7 @@ namespace __cxxabiv1\n       {\n \t{\n \t  uncatch_exception ue;\n-\t  __cxa_vec_dtor (dest_array, ix, element_size, destructor);\n+\t  __cxa_vec_cleanup(dest_array, ix, element_size, destructor);\n \t}\n \t__throw_exception_again;\n       }\n@@ -197,10 +197,9 @@ namespace __cxxabiv1\n       {\n \tchar *ptr = static_cast<char *>(array_address);\n \tstd::size_t ix = element_count;\n-\tbool unwinding = std::uncaught_exception();\n-      \n+\n \tptr += element_count * element_size;\n-      \n+\n \ttry\n \t  {\n \t    while (ix--)\n@@ -211,19 +210,46 @@ namespace __cxxabiv1\n \t  }\n \tcatch (...)\n \t  {\n-\t    if (unwinding)\n-\t      // [except.ctor]/3 If a destructor called during stack unwinding\n-\t      // exits with an exception, terminate is called.\n-\t      std::terminate ();\n \t    {\n \t      uncatch_exception ue;\n-\t      __cxa_vec_dtor(array_address, ix, element_size, destructor);\n+\t      __cxa_vec_cleanup(array_address, ix, element_size, destructor);\n \t    }\n \t    __throw_exception_again;\n \t  }\n       }\n   }\n \n+  // Destruct array as a result of throwing an exception.\n+  // [except.ctor]/3 If a destructor called during stack unwinding\n+  // exits with an exception, terminate is called.\n+  extern \"C\" void\n+  __cxa_vec_cleanup(void *array_address,\n+\t\t    std::size_t element_count,\n+\t\t    std::size_t element_size,\n+\t\t    void (*destructor) (void *))\n+  {\n+    if (destructor)\n+      {\n+\tchar *ptr = static_cast <char *> (array_address);\n+\tstd::size_t ix = element_count;\n+\n+\tptr += element_count * element_size;\n+\n+\ttry\n+\t  {\n+\t    while (ix--)\n+\t      {\n+\t\tptr -= element_size;\n+\t\tdestructor(ptr);\n+\t      }\n+\t  }\n+\tcatch (...)\n+\t  {\n+\t    std::terminate();\n+\t  }\n+      }\n+  }\n+\n   // Destruct and release array.\n   extern \"C\" void\n   __cxa_vec_delete(void *array_address,"}]}