{"sha": "21539e2eb20fbcbc48670d6402a9a7f85ef93af7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE1MzllMmViMjBmYmNiYzQ4NjcwZDY0MDJhOWE3Zjg1ZWY5M2FmNw==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@ubuntu.com", "date": "2010-11-23T13:23:42Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2010-11-23T13:23:42Z"}, "message": "configure.ac: For --enable-gold, handle value `default' instead of `both*'.\n\n2010-11-23  Matthias Klose  <doko@ubuntu.com>\n\n\t* configure.ac: For --enable-gold, handle value `default' instead of\n\t`both*'.   New configure option --{en,dis}able-ld.\n\t* configure: Regenerate.\n\nFrom-SVN: r167076", "tree": {"sha": "e680101f35ed58e8e493af65da5128b51afb8c2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e680101f35ed58e8e493af65da5128b51afb8c2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21539e2eb20fbcbc48670d6402a9a7f85ef93af7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21539e2eb20fbcbc48670d6402a9a7f85ef93af7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21539e2eb20fbcbc48670d6402a9a7f85ef93af7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21539e2eb20fbcbc48670d6402a9a7f85ef93af7/comments", "author": {"login": "doko42", "id": 11258518, "node_id": "MDQ6VXNlcjExMjU4NTE4", "avatar_url": "https://avatars.githubusercontent.com/u/11258518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doko42", "html_url": "https://github.com/doko42", "followers_url": "https://api.github.com/users/doko42/followers", "following_url": "https://api.github.com/users/doko42/following{/other_user}", "gists_url": "https://api.github.com/users/doko42/gists{/gist_id}", "starred_url": "https://api.github.com/users/doko42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doko42/subscriptions", "organizations_url": "https://api.github.com/users/doko42/orgs", "repos_url": "https://api.github.com/users/doko42/repos", "events_url": "https://api.github.com/users/doko42/events{/privacy}", "received_events_url": "https://api.github.com/users/doko42/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "39c4e2985d83f7f8cb3b0d959245a6d34cdc2227", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39c4e2985d83f7f8cb3b0d959245a6d34cdc2227", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39c4e2985d83f7f8cb3b0d959245a6d34cdc2227"}], "stats": {"total": 144, "additions": 106, "deletions": 38}, "files": [{"sha": "56c58cc0e42bcc08e36c308011ef5eeadae97cc8", "filename": "ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21539e2eb20fbcbc48670d6402a9a7f85ef93af7/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21539e2eb20fbcbc48670d6402a9a7f85ef93af7/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=21539e2eb20fbcbc48670d6402a9a7f85ef93af7", "patch": "@@ -1,3 +1,9 @@\n+2010-11-23  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* configure.ac: For --enable-gold, handle value `default' instead of\n+\t`both*'.   New configure option --{en,dis}able-ld.\n+\t* configure: Regenerate.\n+\n 2010-11-20  Ian Lance Taylor  <iant@google.com>\n \n \t* configure.ac: Only disable a language library if no language needs"}, {"sha": "2758ab0ea2ef049739e345b6955e09e40c817f14", "filename": "configure", "status": "modified", "additions": 53, "deletions": 19, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21539e2eb20fbcbc48670d6402a9a7f85ef93af7/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21539e2eb20fbcbc48670d6402a9a7f85ef93af7/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=21539e2eb20fbcbc48670d6402a9a7f85ef93af7", "patch": "@@ -741,6 +741,7 @@ ac_user_opts='\n enable_option_checking\n with_build_libsubdir\n enable_gold\n+enable_ld\n enable_libada\n enable_libssp\n enable_build_with_cxx\n@@ -1450,7 +1451,8 @@ Optional Features:\n   --disable-option-checking  ignore unrecognized --enable/--with options\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n-  --enable-gold[=ARG]     build gold [ARG={both}[/{gold,ld}]]\n+  --enable-gold[=ARG]     build gold [ARG={default,yes,no}]\n+  --enable-ld[=ARG]     build ld [ARG={default,yes,no}]\n   --enable-libada         build libada directory\n   --enable-libssp         build libssp directory\n   --enable-build-with-cxx build with C++ compiler instead of C compiler\n@@ -2849,22 +2851,30 @@ case ${with_newlib} in\n   yes) skipdirs=`echo \" ${skipdirs} \" | sed -e 's/ target-newlib / /'` ;;\n esac\n \n-# Handle --enable-gold.\n-#   --enable-gold\t\tBuild only gold\n-#   --disable-gold [default]\tBuild only ld\n-#   --enable-gold=both\t\tBuild both gold and ld, ld is default\n-#   --enable-gold=both/ld\tSame\n-#   --enable-gold=both/gold\tBuild both gold and ld, gold is default, ld is renamed ld.bfd\n-\n+# Handle --enable-gold, --enable-ld.\n+# --disable-gold [--enable-ld]\n+#     Build only ld.  Default option.\n+# --enable-gold[=default] [--enable-ld]\n+#     Build both gold and ld.  Install gold as \"ld.gold\" and \"ld\",\n+#     install ld as \"ld.bfd\".\n+# --enable-gold[=default] --disable-ld\n+#     Build only gold, which is then installed as both \"ld.gold\" and \"ld\".\n+# --enable-gold --enable-ld=default\n+#     Build both gold (installed as \"gold\") and ld (installed as \"ld\").\n+#     In other words, ld is default\n+# --enable-gold=default --enable-ld=default\n+#     Error.\n+\n+default_ld=\n # Check whether --enable-gold was given.\n if test \"${enable_gold+set}\" = set; then :\n   enableval=$enable_gold; ENABLE_GOLD=$enableval\n else\n   ENABLE_GOLD=no\n fi\n \n-  case \"${ENABLE_GOLD}\" in\n-  yes|both|both/gold|both/ld)\n+case \"${ENABLE_GOLD}\" in\n+  yes|default)\n     # Check for ELF target.\n     is_elf=no\n     case \"${target}\" in\n@@ -2884,14 +2894,10 @@ fi\n       # Check for target supported by gold.\n       case \"${target}\" in\n         i?86-*-* | x86_64-*-* | sparc*-*-* | powerpc*-*-* | arm*-*-*)\n-\t  case \"${ENABLE_GOLD}\" in\n-\t  both*)\n-            configdirs=\"$configdirs gold\"\n-\t    ;;\n-\t  *)\n-            configdirs=`echo \" ${configdirs} \" | sed -e 's/ ld / gold /'`\n-\t    ;;\n-\t  esac\n+\t  configdirs=\"$configdirs gold\"\n+\t  if test x${ENABLE_GOLD} = xdefault; then\n+\t    default_ld=gold\n+\t  fi\n \t  ENABLE_GOLD=yes\n           ;;\n       esac\n@@ -2902,7 +2908,35 @@ fi\n   *)\n     as_fn_error \"invalid --enable-gold argument\" \"$LINENO\" 5\n     ;;\n-  esac\n+esac\n+\n+# Check whether --enable-ld was given.\n+if test \"${enable_ld+set}\" = set; then :\n+  enableval=$enable_ld; ENABLE_LD=$enableval\n+else\n+  ENABLE_LD=yes\n+fi\n+\n+\n+case \"${ENABLE_LD}\" in\n+  default)\n+    if test x${default_ld} != xgold; then\n+      as_fn_error \"either gold or ld can be the default ld\" \"$LINENO\" 5\n+    fi\n+    ;;\n+  yes)\n+    ;;\n+  no)\n+    if test x${ENABLE_GOLD} != xyes; then\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: neither ld nor gold are enabled\" >&5\n+$as_echo \"$as_me: WARNING: neither ld nor gold are enabled\" >&2;}\n+    fi\n+    configdirs=`echo \" ${configdirs} \" | sed -e 's/ ld / /'`\n+    ;;\n+  *)\n+    as_fn_error \"invalid --enable-ld argument\" \"$LINENO\" 5\n+    ;;\n+esac\n \n # Configure extra directories which are host specific\n "}, {"sha": "626bb4e10f1c23796e1d3b4bff4af92237f62432", "filename": "configure.ac", "status": "modified", "additions": 47, "deletions": 19, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21539e2eb20fbcbc48670d6402a9a7f85ef93af7/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21539e2eb20fbcbc48670d6402a9a7f85ef93af7/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=21539e2eb20fbcbc48670d6402a9a7f85ef93af7", "patch": "@@ -324,19 +324,27 @@ case ${with_newlib} in\n   yes) skipdirs=`echo \" ${skipdirs} \" | sed -e 's/ target-newlib / /'` ;;\n esac\n \n-# Handle --enable-gold.\n-#   --enable-gold\t\tBuild only gold\n-#   --disable-gold [default]\tBuild only ld\n-#   --enable-gold=both\t\tBuild both gold and ld, ld is default\n-#   --enable-gold=both/ld\tSame\n-#   --enable-gold=both/gold\tBuild both gold and ld, gold is default, ld is renamed ld.bfd\n-\n+# Handle --enable-gold, --enable-ld.\n+# --disable-gold [--enable-ld]\n+#     Build only ld.  Default option.\n+# --enable-gold[=default] [--enable-ld]\n+#     Build both gold and ld.  Install gold as \"ld.gold\" and \"ld\",\n+#     install ld as \"ld.bfd\".\n+# --enable-gold[=default] --disable-ld\n+#     Build only gold, which is then installed as both \"ld.gold\" and \"ld\".\n+# --enable-gold --enable-ld=default\n+#     Build both gold (installed as \"gold\") and ld (installed as \"ld\").\n+#     In other words, ld is default\n+# --enable-gold=default --enable-ld=default\n+#     Error.\n+\n+default_ld=\n AC_ARG_ENABLE(gold,\n-[[  --enable-gold[=ARG]     build gold [ARG={both}[/{gold,ld}]]]],\n+[[  --enable-gold[=ARG]     build gold [ARG={default,yes,no}]]],\n ENABLE_GOLD=$enableval,\n ENABLE_GOLD=no)\n-  case \"${ENABLE_GOLD}\" in\n-  yes|both|both/gold|both/ld)\n+case \"${ENABLE_GOLD}\" in\n+  yes|default)\n     # Check for ELF target.\n     is_elf=no\n     case \"${target}\" in\n@@ -356,14 +364,10 @@ ENABLE_GOLD=no)\n       # Check for target supported by gold.\n       case \"${target}\" in\n         i?86-*-* | x86_64-*-* | sparc*-*-* | powerpc*-*-* | arm*-*-*)\n-\t  case \"${ENABLE_GOLD}\" in \n-\t  both*)\n-            configdirs=\"$configdirs gold\"\n-\t    ;;\n-\t  *)\n-            configdirs=`echo \" ${configdirs} \" | sed -e 's/ ld / gold /'`\n-\t    ;;\n-\t  esac\n+\t  configdirs=\"$configdirs gold\"\n+\t  if test x${ENABLE_GOLD} = xdefault; then\n+\t    default_ld=gold\n+\t  fi\n \t  ENABLE_GOLD=yes\n           ;;\n       esac\n@@ -374,7 +378,31 @@ ENABLE_GOLD=no)\n   *)\n     AC_MSG_ERROR([invalid --enable-gold argument])\n     ;;\n-  esac\n+esac\n+\n+AC_ARG_ENABLE(ld,\n+[[  --enable-ld[=ARG]     build ld [ARG={default,yes,no}]]],\n+ENABLE_LD=$enableval,\n+ENABLE_LD=yes)\n+\n+case \"${ENABLE_LD}\" in\n+  default)\n+    if test x${default_ld} != xgold; then\n+      AC_MSG_ERROR([either gold or ld can be the default ld])\n+    fi\n+    ;;\n+  yes)\n+    ;;\n+  no)\n+    if test x${ENABLE_GOLD} != xyes; then\n+      AC_MSG_WARN([neither ld nor gold are enabled])\n+    fi\n+    configdirs=`echo \" ${configdirs} \" | sed -e 's/ ld / /'`\n+    ;;\n+  *)\n+    AC_MSG_ERROR([invalid --enable-ld argument])\n+    ;;\n+esac\n \n # Configure extra directories which are host specific\n "}]}