{"sha": "854f240ee0246d13c0a471a1919003b462bde00b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU0ZjI0MGVlMDI0NmQxM2MwYTQ3MWExOTE5MDAzYjQ2MmJkZTAwYg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2004-07-09T09:35:48Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-07-09T09:35:48Z"}, "message": "sparc.md (return): Rewrite length formula.\n\n\t* config/sparc/sparc.md (return): Rewrite length formula.\n\t* config/sparc/sparc.c (output_return): Pass 1 as 5th\n\targument to final_scan_insn when in a delay slot.\n\t(output_sibcall): Likewise.\n\nFrom-SVN: r84352", "tree": {"sha": "6c30f3fae428bf0ddd28200d8231f1e32c60714b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c30f3fae428bf0ddd28200d8231f1e32c60714b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/854f240ee0246d13c0a471a1919003b462bde00b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/854f240ee0246d13c0a471a1919003b462bde00b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/854f240ee0246d13c0a471a1919003b462bde00b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/854f240ee0246d13c0a471a1919003b462bde00b/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2ad4dcf985bf7b87b56e31a4d7d1f878e8dcea78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ad4dcf985bf7b87b56e31a4d7d1f878e8dcea78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ad4dcf985bf7b87b56e31a4d7d1f878e8dcea78"}], "stats": {"total": 45, "additions": 26, "deletions": 19}, "files": [{"sha": "e16a2a87e4d25d694ad9419af510096c490d819b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/854f240ee0246d13c0a471a1919003b462bde00b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/854f240ee0246d13c0a471a1919003b462bde00b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=854f240ee0246d13c0a471a1919003b462bde00b", "patch": "@@ -1,3 +1,10 @@\n+2004-07-09  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* config/sparc/sparc.md (return): Rewrite length formula.\n+\t* config/sparc/sparc.c (output_return): Pass 1 as 5th\n+\targument to final_scan_insn when in a delay slot.\n+\t(output_sibcall): Likewise.\n+\n 2004-07-09  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* arm.c (arm_cpp_interwork): New variable."}, {"sha": "cfaa34aaaae73bdec27627ccdaedfdc93a9721bd", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/854f240ee0246d13c0a471a1919003b462bde00b/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/854f240ee0246d13c0a471a1919003b462bde00b/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=854f240ee0246d13c0a471a1919003b462bde00b", "patch": "@@ -4553,7 +4553,7 @@ output_return (rtx insn)\n \t      epilogue_renumber (&pat, 0);\n \t      fprintf (asm_out_file, \"\\treturn\\t%%i7+%d\\n\",\n \t\t       sparc_skip_caller_unimp ? 12 : 8);\n-\t      final_scan_insn (delay, asm_out_file, 1, 0, 0, NULL);\n+\t      final_scan_insn (delay, asm_out_file, 1, 0, 1, NULL);\n \t    }\n \t  else\n \t    {\n@@ -4614,7 +4614,7 @@ output_sibcall (rtx insn, rtx call_operand)\n \n \t  output_asm_insn (\"sethi\\t%%hi(%a0), %%g1\", operands);\n \t  output_asm_insn (\"jmp\\t%%g1 + %%lo(%a0)\", operands);\n-\t  final_scan_insn (delay, asm_out_file, 1, 0, 0, NULL);\n+\t  final_scan_insn (delay, asm_out_file, 1, 0, 1, NULL);\n \n \t  PATTERN (delay) = gen_blockage ();\n \t  INSN_CODE (delay) = -1;"}, {"sha": "dc7ef6e80c0eb0ece7e1bdd809580f413d3944e9", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/854f240ee0246d13c0a471a1919003b462bde00b/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/854f240ee0246d13c0a471a1919003b462bde00b/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=854f240ee0246d13c0a471a1919003b462bde00b", "patch": "@@ -7708,23 +7708,23 @@\n   \"* return output_return (insn);\"\n   [(set_attr \"type\" \"return\")\n    (set (attr \"length\")\n-\t(if_then_else (eq_attr \"leaf_function\" \"true\")\n-\t\t      (if_then_else (eq_attr \"empty_delay_slot\" \"true\")\n-\t\t\t\t    (const_int 2)\n-\t\t\t\t    (const_int 1))\n-\t\t      (if_then_else (eq_attr \"calls_eh_return\" \"true\")\n-\t\t\t\t    (if_then_else (eq_attr \"delayed_branch\" \"true\")\n-\t\t\t\t\t\t  (if_then_else (eq_attr \"isa\" \"v9\")\n-\t\t\t\t\t\t\t\t(const_int 2)\n-\t\t\t\t\t\t\t\t(const_int 3))\n-\t\t\t\t\t\t  (if_then_else (eq_attr \"isa\" \"v9\")\n-\t\t\t\t\t\t\t\t(const_int 3)\n-\t\t\t\t\t\t\t\t(const_int 4)))\n-\t\t\t\t    (if_then_else (eq_attr \"empty_delay_slot\" \"true\")\n-\t\t\t\t\t\t  (if_then_else (eq_attr \"delayed_branch\" \"true\")\n-\t\t\t\t\t\t\t\t(const_int 2)\n-\t\t\t\t\t\t\t\t(const_int 3))\n-\t\t\t\t\t\t  (const_int 1)))))])\n+\t(cond [(eq_attr \"leaf_function\" \"true\")\n+\t\t (if_then_else (eq_attr \"empty_delay_slot\" \"true\")\n+\t\t\t       (const_int 2)\n+\t\t\t       (const_int 1))\n+\t       (eq_attr \"calls_eh_return\" \"true\")\n+\t\t (if_then_else (eq_attr \"delayed_branch\" \"true\")\n+\t\t\t       (if_then_else (eq_attr \"isa\" \"v9\")\n+\t\t\t\t\t     (const_int 2)\n+\t\t\t\t\t     (const_int 3))\n+\t\t\t       (if_then_else (eq_attr \"isa\" \"v9\")\n+\t\t\t\t\t     (const_int 3)\n+\t\t\t\t\t     (const_int 4)))\n+\t       (eq_attr \"empty_delay_slot\" \"true\")\n+\t\t (if_then_else (eq_attr \"delayed_branch\" \"true\")\n+\t\t\t       (const_int 2)\n+\t\t\t       (const_int 3))\n+\t      ] (const_int 1)))])\n \n ;; UNSPEC_VOLATILE is considered to use and clobber all hard registers and\n ;; all of memory.  This blocks insns from being moved across this point."}]}