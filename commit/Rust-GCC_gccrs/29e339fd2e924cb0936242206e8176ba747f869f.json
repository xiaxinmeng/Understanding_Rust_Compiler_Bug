{"sha": "29e339fd2e924cb0936242206e8176ba747f869f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjllMzM5ZmQyZTkyNGNiMDkzNjI0MjIwNmU4MTc2YmE3NDdmODY5Zg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-11-17T19:56:39Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-11-17T19:56:39Z"}, "message": "gcc-simulate-thread.exp (simulate-thread): Run on all targets.\n\n\t* lib/gcc-simulate-thread.exp (simulate-thread): Run on all targets.\n\tLook for simulate_thread_done to determine working gdb.  Reduce timeout\n\tto 10 seconds and fail when timeout occurs.  Improve error messages.\n\nFrom-SVN: r181452", "tree": {"sha": "7a8d53ef0108ccf1e1576fada451e375dee404c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a8d53ef0108ccf1e1576fada451e375dee404c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29e339fd2e924cb0936242206e8176ba747f869f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29e339fd2e924cb0936242206e8176ba747f869f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29e339fd2e924cb0936242206e8176ba747f869f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29e339fd2e924cb0936242206e8176ba747f869f/comments", "author": null, "committer": null, "parents": [{"sha": "c39169c82c278bff88da0fcb05516420fbcf808a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c39169c82c278bff88da0fcb05516420fbcf808a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c39169c82c278bff88da0fcb05516420fbcf808a"}], "stats": {"total": 44, "additions": 22, "deletions": 22}, "files": [{"sha": "fa073e0c022dc302bae1189865dbf967d803a3dd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e339fd2e924cb0936242206e8176ba747f869f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e339fd2e924cb0936242206e8176ba747f869f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=29e339fd2e924cb0936242206e8176ba747f869f", "patch": "@@ -1,3 +1,9 @@\n+2011-10-17  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* lib/gcc-simulate-thread.exp (simulate-thread): Run on all targets.\n+\tLook for simulate_thread_done to determine working gdb.  Reduce timeout\n+\tto 10 seconds and fail when timeout occurs.  Improve error messages.\n+\n 2011-11-17  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/51137\n@@ -11,8 +17,7 @@\n \n 2011-11-17  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n-\t* lib/gcc-simulate-thread.exp (simulate-thread): Skip on\n-\talpha*-*-*.\n+\t* lib/gcc-simulate-thread.exp (simulate-thread): Skip on alpha*-*-*.\n \n 2011-10-16  Uros Bizjak  <ubizjak@gmail.com>\n "}, {"sha": "b545f89666b5748232eb6bb92a36691439625528", "filename": "gcc/testsuite/lib/gcc-simulate-thread.exp", "status": "modified", "additions": 15, "deletions": 20, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e339fd2e924cb0936242206e8176ba747f869f/gcc%2Ftestsuite%2Flib%2Fgcc-simulate-thread.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e339fd2e924cb0936242206e8176ba747f869f/gcc%2Ftestsuite%2Flib%2Fgcc-simulate-thread.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-simulate-thread.exp?ref=29e339fd2e924cb0936242206e8176ba747f869f", "patch": "@@ -22,15 +22,6 @@\n # Call 'fail' if a given test printed \"FAIL:\", otherwise call 'pass'.\n \n proc simulate-thread { args } {\n-\n-    # ??? Exit immediately if this is alpha*-*-* target, single-stepping\n-    # executable between ldl_l and stl_c insns in gdb breaks LL/SC chaining.\n-    if { [istarget alpha*-*-*] } { return }\n-    \n-    # GNU gdb 6.3 on powerpc-darwin also  on these (and expect does not appear\n-    # to be able to terminate them).\n-    if { [istarget powerpc*-*-darwin*] } { return }\n-\n     if { ![isnative] || [is_remote target] } { return }\n \n     if { [llength $args] == 1 } {\n@@ -54,46 +45,50 @@ proc simulate-thread { args } {\n \treturn\n     }\n \n+    set message \"(thread simulation test)\"\n+\n     send_log \"Spawning: $gdb_name -nx -nw -quiet -x $cmd_file ./$exec_file\\n\"\n     set res [remote_spawn target \"$gdb_name -nx -nw  -x $cmd_file ./$exec_file\"]\n     if { $res < 0 || $res == \"\" } {\n-\tunsupported \"$testcase\"\n+\tunsupported \"$testcase $message\"\n \treturn\n     }\n \n     set gdb_worked 0\n-    remote_expect target [timeout_value] {\n+\n+    # Set timeout to 10 seconds due to huge amount of generated log.\n+    remote_expect target 10 {\n \t# Too old GDB\n \t-re \"Unhandled dwarf expression|Error in sourced command file\" {\n-\t    unsupported \"$testcase\"\n+\t    unsupported \"$testcase $message\"\n \t    remote_close target\n \t    return\n \t}\n \t-re \"FAIL:\" {\n-\t    fail \"$testcase\"\n+\t    fail \"$testcase $message\"\n \t    remote_close target\n \t    return\n \t}\n-\t# If the gdb output contained simulate_thread_main, assume\n+\t# If the gdb output contained simulate_thread_done, assume\n \t# that at the very least, we had a working gdb that was able\n-\t# to break in simulate_thread_main.\n-\t-re \"simulate_thread_main\" {\n+\t# to break in simulate_thread_done.\n+\t-re \"simulate_thread_done\" {\n \t    set gdb_worked 1\n \t    exp_continue\n \t}\n \ttimeout {\n-\t    unsupported \"$testcase\"\n+\t    fail \"$testcase $message\"\n \t    remote_close target\n \t    return\n \t}\n     }\n \n     remote_close target\n     if {$gdb_worked} {\n-\tpass \"$testcase\"\n+\tpass \"$testcase $message\"\n     } else {\n-\t# Fail in the absence of a sane GDB.\n-\tfail \"$testcase\"\n+\t# Unsupported in the absence of a sane GDB.\n+\tunsupported \"$testcase $message\"\n     }\n     return\n }"}]}