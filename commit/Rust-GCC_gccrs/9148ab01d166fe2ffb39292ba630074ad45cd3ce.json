{"sha": "9148ab01d166fe2ffb39292ba630074ad45cd3ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE0OGFiMDFkMTY2ZmUyZmZiMzkyOTJiYTYzMDA3NGFkNDVjZDNjZQ==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2005-03-08T15:42:57Z"}, "committer": {"name": "Julian Brown", "email": "jules@gcc.gnu.org", "date": "2005-03-08T15:42:57Z"}, "message": "* decl.c (finish_method): Give methods once-only linkage.\n\nFrom-SVN: r96106", "tree": {"sha": "56d088477d0aecc0e2f7dd76a85d0112fee3744e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56d088477d0aecc0e2f7dd76a85d0112fee3744e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9148ab01d166fe2ffb39292ba630074ad45cd3ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9148ab01d166fe2ffb39292ba630074ad45cd3ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9148ab01d166fe2ffb39292ba630074ad45cd3ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9148ab01d166fe2ffb39292ba630074ad45cd3ce/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "77fb4cc1a1cfcf13f529a696eb370ef44a898201", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77fb4cc1a1cfcf13f529a696eb370ef44a898201", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77fb4cc1a1cfcf13f529a696eb370ef44a898201"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "78fab7f668bacc907354f4a6619014e5868eb2ad", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9148ab01d166fe2ffb39292ba630074ad45cd3ce/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9148ab01d166fe2ffb39292ba630074ad45cd3ce/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=9148ab01d166fe2ffb39292ba630074ad45cd3ce", "patch": "@@ -1,3 +1,7 @@\n+2005-03-08  Julian Brown  <julian@codesourcery.com>\n+\n+\t* decl.c (finish_method): Give methods once-only linkage.\n+\n 2005-03-07  Bryce McKinlay  <mckinlay@redhat.com>\n \n \t* verify-glue.c (vfy_is_assignable_from): Perform static check using"}, {"sha": "ea7a9b4209a68dcb13c71604136baa5f188d2987", "filename": "gcc/java/decl.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9148ab01d166fe2ffb39292ba630074ad45cd3ce/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9148ab01d166fe2ffb39292ba630074ad45cd3ce/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=9148ab01d166fe2ffb39292ba630074ad45cd3ce", "patch": "@@ -2036,6 +2036,13 @@ finish_method (tree fndecl)\n \t\t    build2 (TRY_FINALLY_EXPR, void_type_node, *tp, exit));\n     }\n \n+  /* Ensure non-abstract non-static non-private members are defined only once\n+     when linking. This is an issue when using CNI to interface with C++ object\n+     files.  */\n+  if (! METHOD_STATIC (fndecl) && ! METHOD_PRIVATE (fndecl)\n+      && ! METHOD_ABSTRACT (fndecl))\n+    make_decl_one_only (fndecl);\n+\n   /* Prepend class initialization for static methods reachable from\n      other classes.  */\n   if (METHOD_STATIC (fndecl) && ! METHOD_PRIVATE (fndecl)"}]}