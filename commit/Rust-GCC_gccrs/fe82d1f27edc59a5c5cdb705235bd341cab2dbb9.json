{"sha": "fe82d1f27edc59a5c5cdb705235bd341cab2dbb9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU4MmQxZjI3ZWRjNTlhNWM1Y2RiNzA1MjM1YmQzNDFjYWIyZGJiOQ==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2014-12-19T17:48:15Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2014-12-19T17:48:15Z"}, "message": "[AArch64 2/3] Add SIMD-reg variants of logical operators and/ior/xor/not\n\n\t* config/aarch64/aarch64.md (<optab><mode>3, one_cmpl<mode>2):\n\tAdd SIMD-register variant.\n\t* config/aarch64/iterators.md (Vbtype): Add value for SI.\n\nFrom-SVN: r218960", "tree": {"sha": "8d7747ebe7777be2fb70a60a341a6863a4ff06a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d7747ebe7777be2fb70a60a341a6863a4ff06a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe82d1f27edc59a5c5cdb705235bd341cab2dbb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe82d1f27edc59a5c5cdb705235bd341cab2dbb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe82d1f27edc59a5c5cdb705235bd341cab2dbb9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe82d1f27edc59a5c5cdb705235bd341cab2dbb9/comments", "author": null, "committer": null, "parents": [{"sha": "f1f1391ce029d83261560db18bd9c1f442221c5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1f1391ce029d83261560db18bd9c1f442221c5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1f1391ce029d83261560db18bd9c1f442221c5e"}], "stats": {"total": 34, "additions": 24, "deletions": 10}, "files": [{"sha": "10b5538cd60156e801b6a28f9c37071fa1ee834b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe82d1f27edc59a5c5cdb705235bd341cab2dbb9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe82d1f27edc59a5c5cdb705235bd341cab2dbb9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fe82d1f27edc59a5c5cdb705235bd341cab2dbb9", "patch": "@@ -1,3 +1,9 @@\n+2014-12-19  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* config/aarch64/aarch64.md (<optab><mode>3, one_cmpl<mode>2):\n+\tAdd SIMD-register variant.\n+\t* config/aarch64/iterators.md (Vbtype): Add value for SI.\n+\n 2014-12-19  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* config/aarch64/aarch64.md (subdi3, adddi3_aarch64): Don't penalize"}, {"sha": "bc9138d6cf9331f94ad03281545517d5741ea8d6", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe82d1f27edc59a5c5cdb705235bd341cab2dbb9/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe82d1f27edc59a5c5cdb705235bd341cab2dbb9/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=fe82d1f27edc59a5c5cdb705235bd341cab2dbb9", "patch": "@@ -2866,12 +2866,16 @@\n ;; -------------------------------------------------------------------\n \n (define_insn \"<optab><mode>3\"\n-  [(set (match_operand:GPI 0 \"register_operand\" \"=r,rk\")\n-\t(LOGICAL:GPI (match_operand:GPI 1 \"register_operand\" \"%r,r\")\n-\t\t     (match_operand:GPI 2 \"aarch64_logical_operand\" \"r,<lconst>\")))]\n+  [(set (match_operand:GPI 0 \"register_operand\" \"=r,rk,w\")\n+\t(LOGICAL:GPI (match_operand:GPI 1 \"register_operand\" \"%r,r,w\")\n+\t\t     (match_operand:GPI 2 \"aarch64_logical_operand\" \"r,<lconst>,w\")))]\n   \"\"\n-  \"<logical>\\\\t%<w>0, %<w>1, %<w>2\"\n-  [(set_attr \"type\" \"logic_reg,logic_imm\")]\n+  \"@\n+  <logical>\\\\t%<w>0, %<w>1, %<w>2\n+  <logical>\\\\t%<w>0, %<w>1, %<w>2\n+  <logical>\\\\t%0.<Vbtype>, %1.<Vbtype>, %2.<Vbtype>\"\n+  [(set_attr \"type\" \"logic_reg,logic_imm,neon_logic\")\n+   (set_attr \"simd\" \"*,*,yes\")]\n )\n \n ;; zero_extend version of above\n@@ -2992,11 +2996,14 @@\n )\n \n (define_insn \"one_cmpl<mode>2\"\n-  [(set (match_operand:GPI 0 \"register_operand\" \"=r\")\n-\t(not:GPI (match_operand:GPI 1 \"register_operand\" \"r\")))]\n+  [(set (match_operand:GPI 0 \"register_operand\" \"=r,w\")\n+\t(not:GPI (match_operand:GPI 1 \"register_operand\" \"r,w\")))]\n   \"\"\n-  \"mvn\\\\t%<w>0, %<w>1\"\n-  [(set_attr \"type\" \"logic_reg\")]\n+  \"@\n+  mvn\\\\t%<w>0, %<w>1\n+  mvn\\\\t%0.8b, %1.8b\"\n+  [(set_attr \"type\" \"logic_reg,neon_logic\")\n+   (set_attr \"simd\" \"*,yes\")]\n )\n \n (define_insn \"*one_cmpl_<optab><mode>2\""}, {"sha": "26e3ebcbcabbf224eb05b1b31d8a814e4e992f0d", "filename": "gcc/config/aarch64/iterators.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe82d1f27edc59a5c5cdb705235bd341cab2dbb9/gcc%2Fconfig%2Faarch64%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe82d1f27edc59a5c5cdb705235bd341cab2dbb9/gcc%2Fconfig%2Faarch64%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fiterators.md?ref=fe82d1f27edc59a5c5cdb705235bd341cab2dbb9", "patch": "@@ -387,7 +387,8 @@\n \t\t\t  (V2SI \"8b\") (V4SI  \"16b\")\n \t\t\t  (V2DI \"16b\") (V2SF  \"8b\")\n \t\t\t  (V4SF \"16b\") (V2DF  \"16b\")\n-\t\t\t  (DI   \"8b\")  (DF    \"8b\")])\n+\t\t\t  (DI   \"8b\")  (DF    \"8b\")\n+\t\t\t  (SI   \"8b\")])\n \n ;; Define element mode for each vector mode.\n (define_mode_attr VEL [(V8QI \"QI\") (V16QI \"QI\")"}]}