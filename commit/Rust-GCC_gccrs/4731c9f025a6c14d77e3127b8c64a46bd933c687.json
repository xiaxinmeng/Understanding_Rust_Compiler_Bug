{"sha": "4731c9f025a6c14d77e3127b8c64a46bd933c687", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDczMWM5ZjAyNWE2YzE0ZDc3ZTMxMjdiOGM2NGE0NmJkOTMzYzY4Nw==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2016-06-01T17:06:50Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2016-06-01T17:06:50Z"}, "message": "re PR fortran/52393 (I/O: \"READ format\" statement with parenthesed default-char-expr)\n\n2016-06-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/52393\n\t* io.c (match_io): For READ, try to match a default character\n\texpression. If found, set the dt format expression to this,\n\totherwise go back and try control list.\n\n\tPR fortran/52393\n\t* gfortran.dg/fmt_read_3.f90: New test.\n\nFrom-SVN: r237003", "tree": {"sha": "eafde5e9fd53bc92265eb5140f61ccade2ebc1e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eafde5e9fd53bc92265eb5140f61ccade2ebc1e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4731c9f025a6c14d77e3127b8c64a46bd933c687", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4731c9f025a6c14d77e3127b8c64a46bd933c687", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4731c9f025a6c14d77e3127b8c64a46bd933c687", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4731c9f025a6c14d77e3127b8c64a46bd933c687/comments", "author": null, "committer": null, "parents": [{"sha": "042dee3e3bd99807f894963d89177a0f0db6ffd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/042dee3e3bd99807f894963d89177a0f0db6ffd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/042dee3e3bd99807f894963d89177a0f0db6ffd5"}], "stats": {"total": 88, "additions": 74, "deletions": 14}, "files": [{"sha": "2a9c9ceab934ab845cd0d6781c8895c23530b699", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4731c9f025a6c14d77e3127b8c64a46bd933c687/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4731c9f025a6c14d77e3127b8c64a46bd933c687/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4731c9f025a6c14d77e3127b8c64a46bd933c687", "patch": "@@ -1,3 +1,10 @@\n+2016-06-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/52393\n+\t* io.c (match_io): For READ, try to match a default character\n+\texpression. If found, set the dt format expression to this,\n+\totherwise go back and try control list.\n+\n 2016-06-01  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/71156"}, {"sha": "204cce2e5656cecfc3cb88f9de919198669d11a8", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 49, "deletions": 14, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4731c9f025a6c14d77e3127b8c64a46bd933c687/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4731c9f025a6c14d77e3127b8c64a46bd933c687/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=4731c9f025a6c14d77e3127b8c64a46bd933c687", "patch": "@@ -3689,7 +3689,7 @@ match_io (io_kind k)\n   gfc_symbol *sym;\n   int comma_flag;\n   locus where;\n-  locus spec_end;\n+  locus spec_end, control;\n   gfc_dt *dt;\n   match m;\n \n@@ -3751,21 +3751,56 @@ match_io (io_kind k)\n     {\n       /* Before issuing an error for a malformed 'print (1,*)' type of\n \t error, check for a default-char-expr of the form ('(I0)').  */\n-      if (k == M_PRINT && m == MATCH_YES)\n-\t{\n-\t  /* Reset current locus to get the initial '(' in an expression.  */\n-\t  gfc_current_locus = where;\n-\t  dt->format_expr = NULL;\n-\t  m = match_dt_format (dt);\n+      if (m == MATCH_YES)\n+        {\n+\t  control = gfc_current_locus;\n+\t  if (k == M_PRINT)\n+\t    {\n+\t      /* Reset current locus to get the initial '(' in an expression.  */\n+\t      gfc_current_locus = where;\n+\t      dt->format_expr = NULL;\n+\t      m = match_dt_format (dt);\n \n-\t  if (m == MATCH_ERROR)\n-\t    goto cleanup;\n-\t  if (m == MATCH_NO || dt->format_expr == NULL)\n-\t    goto syntax;\n+\t      if (m == MATCH_ERROR)\n+\t\tgoto cleanup;\n+\t      if (m == MATCH_NO || dt->format_expr == NULL)\n+\t\tgoto syntax;\n \n-\t  comma_flag = 1;\n-\t  dt->io_unit = default_unit (k);\n-\t  goto get_io_list;\n+\t      comma_flag = 1;\n+\t      dt->io_unit = default_unit (k);\n+\t      goto get_io_list;\n+\t    }\n+\t  if (k == M_READ)\n+\t    {\n+\t      /* Reset current locus to get the initial '(' in an expression.  */\n+\t      gfc_current_locus = where;\n+\t      dt->format_expr = NULL;\n+\t      m = gfc_match_expr (&dt->format_expr);\n+\t      if (m == MATCH_YES)\n+\t        {\n+\t\t  if (dt->format_expr\n+\t\t      && dt->format_expr->ts.type == BT_CHARACTER)\n+\t\t    {\n+\t\t      comma_flag = 1;\n+\t\t      dt->io_unit = default_unit (k);\n+\t\t      goto get_io_list;\n+\t\t    }\n+\t\t  else\n+\t\t    {\n+\t\t      gfc_free_expr (dt->format_expr);\n+\t\t      dt->format_expr = NULL;\n+\t\t      gfc_current_locus = control;\n+\t\t    }\n+\t\t}\n+\t      else\n+\t        {\n+\t\t  gfc_clear_error ();\n+\t\t  gfc_undo_symbols ();\n+\t\t  gfc_free_expr (dt->format_expr);\n+\t\t  dt->format_expr = NULL;\n+\t\t  gfc_current_locus = control;\n+\t\t}\n+\t    }\n \t}\n     }\n "}, {"sha": "7ee77b62f3f40c0cebdb4c8947aa257823dc768e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4731c9f025a6c14d77e3127b8c64a46bd933c687/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4731c9f025a6c14d77e3127b8c64a46bd933c687/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4731c9f025a6c14d77e3127b8c64a46bd933c687", "patch": "@@ -1,3 +1,8 @@\n+2016-06-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/52393\n+\t* gfortran.dg/fmt_read_3.f90: New test.\n+\n 2016-06-01  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* lib/target-supports.exp (check_effective_target_arm_acq_rel): New"}, {"sha": "72053697c40a1e0999ab4c6caafd4986e705b513", "filename": "gcc/testsuite/gfortran.dg/fmt_read_3.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4731c9f025a6c14d77e3127b8c64a46bd933c687/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_read_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4731c9f025a6c14d77e3127b8c64a46bd933c687/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_read_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_read_3.f90?ref=4731c9f025a6c14d77e3127b8c64a46bd933c687", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do compile }\n+! PR52392 \"READ format\" statement with parenthesed default-char-expr\n+PROGRAM ReadMeTwo\n+  IMPLICIT NONE\n+  CHARACTER(10) :: var\n+  var = \"TestStr\"\n+  PRINT ('(') // 'A)', var \n+  PRINT ('(') // 'A)', var \n+  READ ('(') // 'A)', var  \n+  PRINT *, var\n+  READ *, var\n+END PROGRAM ReadMeTwo\n+"}]}