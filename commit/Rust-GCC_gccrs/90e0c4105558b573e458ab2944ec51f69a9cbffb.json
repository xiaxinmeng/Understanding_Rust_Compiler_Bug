{"sha": "90e0c4105558b573e458ab2944ec51f69a9cbffb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBlMGM0MTA1NTU4YjU3M2U0NThhYjI5NDRlYzUxZjY5YTljYmZmYg==", "commit": {"author": {"name": "Neil Booth", "email": "neil@cat.daikokuya.demon.co.uk", "date": "2001-05-12T16:16:23Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-05-12T16:16:23Z"}, "message": "dwarfout.c (dwarfout_init): Add cast.\n\n\t* dwarfout.c (dwarfout_init): Add cast.\n\t* sched-deps.c (sched_analyze_insn): Remove unused vars.\n\t* unwind-dw2-fde.c (_Unwind_Find_FDE): Flag unused parameter so.\ncp:\n\t* method.c (build_mangled_C99_name): Remove unused prototype.\n\nFrom-SVN: r41996", "tree": {"sha": "92990621542b19053cd06bed439c95904d8adcdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92990621542b19053cd06bed439c95904d8adcdb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90e0c4105558b573e458ab2944ec51f69a9cbffb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90e0c4105558b573e458ab2944ec51f69a9cbffb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90e0c4105558b573e458ab2944ec51f69a9cbffb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90e0c4105558b573e458ab2944ec51f69a9cbffb/comments", "author": null, "committer": null, "parents": [{"sha": "800914c30a3ef354012ba5a62198805bd93ffeb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/800914c30a3ef354012ba5a62198805bd93ffeb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/800914c30a3ef354012ba5a62198805bd93ffeb6"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "6c9408a481ac9c32e31dfefa8e6dd395d1f56624", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90e0c4105558b573e458ab2944ec51f69a9cbffb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90e0c4105558b573e458ab2944ec51f69a9cbffb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=90e0c4105558b573e458ab2944ec51f69a9cbffb", "patch": "@@ -1,3 +1,7 @@\n+2001-05-12  Neil Booth  <neil@cat.daikokuya.demon.co.uk>\n+\n+\t* method.c (build_mangled_C99_name): Remove unused prototype.\n+\n 2001-05-12  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* cp-tree.h (ptrmemfunc_vbit_where_t): Declare type."}, {"sha": "e7d2bbbd66557370a26c6b4833dd13f34625dd7c", "filename": "gcc/cp/method.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90e0c4105558b573e458ab2944ec51f69a9cbffb/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90e0c4105558b573e458ab2944ec51f69a9cbffb/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=90e0c4105558b573e458ab2944ec51f69a9cbffb", "patch": "@@ -63,9 +63,6 @@ struct pending_inline *pending_inlines;\n \n static void do_build_assign_ref PARAMS ((tree));\n static void do_build_copy_constructor PARAMS ((tree));\n-#if HOST_BITS_PER_WIDE_INT >= 64\n-static void build_mangled_C99_name PARAMS ((int));\n-#endif\n static tree synthesize_exception_spec PARAMS ((tree, tree (*) (tree, void *), void *));\n static tree locate_dtor PARAMS ((tree, void *));\n static tree locate_ctor PARAMS ((tree, void *));"}, {"sha": "7db0def2d692940c48dc43a220b87930304ffd3c", "filename": "gcc/dwarfout.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90e0c4105558b573e458ab2944ec51f69a9cbffb/gcc%2Fdwarfout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90e0c4105558b573e458ab2944ec51f69a9cbffb/gcc%2Fdwarfout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarfout.c?ref=90e0c4105558b573e458ab2944ec51f69a9cbffb", "patch": "@@ -5806,7 +5806,7 @@ dwarfout_init (asm_out_file, main_input_filename)\n   fputc ('\\n', asm_out_file);\n   ASM_OUTPUT_PUSH_SECTION (asm_out_file, DEBUG_SECTION);\n   ASM_OUTPUT_LABEL (asm_out_file, DEBUG_BEGIN_LABEL);\n-  output_die (output_compile_unit_die, main_input_filename);\n+  output_die (output_compile_unit_die, (PTR) main_input_filename);\n   ASM_OUTPUT_POP_SECTION (asm_out_file);\n \n   fputc ('\\n', asm_out_file);"}, {"sha": "ecdf28212ba783fee4f1980658cef6dbe2575b2c", "filename": "gcc/sched-deps.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90e0c4105558b573e458ab2944ec51f69a9cbffb/gcc%2Fsched-deps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90e0c4105558b573e458ab2944ec51f69a9cbffb/gcc%2Fsched-deps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-deps.c?ref=90e0c4105558b573e458ab2944ec51f69a9cbffb", "patch": "@@ -1095,7 +1095,7 @@ sched_analyze_insn (deps, x, insn, loop_notes)\n   /* Add dependencies if a scheduling barrier was found.  */\n   if (schedule_barrier_found)\n     {\n-      rtx u, pending, pending_mem;\n+      rtx u;\n \n       for (i = 0; i < deps->max_reg; i++)\n \t{"}, {"sha": "7b6b44a58732075c7da6b67e1685323c27d08c4e", "filename": "gcc/unwind-dw2-fde.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90e0c4105558b573e458ab2944ec51f69a9cbffb/gcc%2Funwind-dw2-fde.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90e0c4105558b573e458ab2944ec51f69a9cbffb/gcc%2Funwind-dw2-fde.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-dw2-fde.c?ref=90e0c4105558b573e458ab2944ec51f69a9cbffb", "patch": "@@ -469,7 +469,7 @@ frame_init (struct object* ob)\n }\n \n fde *\n-_Unwind_Find_FDE (void *pc, struct dwarf_eh_bases *bases)\n+_Unwind_Find_FDE (void *pc, struct dwarf_eh_bases *bases ATTRIBUTE_UNUSED)\n {\n   struct object *ob;\n   size_t lo, hi;"}]}