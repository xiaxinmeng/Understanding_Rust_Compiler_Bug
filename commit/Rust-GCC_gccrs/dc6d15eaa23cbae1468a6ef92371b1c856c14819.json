{"sha": "dc6d15eaa23cbae1468a6ef92371b1c856c14819", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM2ZDE1ZWFhMjNjYmFlMTQ2OGE2ZWY5MjM3MWIxYzg1NmMxNDgxOQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-12-10T18:41:08Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-06-10T08:04:14Z"}, "message": "Add gcc_assert that &global_options are not dirty modified.\n\ngcc/ChangeLog:\n\n2020-03-20  Martin Liska  <mliska@suse.cz>\n\n\tPR tree-optimization/92860\n\t* optc-save-gen.awk: Generate new function cl_optimization_compare.\n\t* opth-gen.awk: Generate declaration of the function.\n\ngcc/c-family/ChangeLog:\n\n2020-03-20  Martin Liska  <mliska@suse.cz>\n\n\tPR tree-optimization/92860\n\t* c-attribs.c (handle_optimize_attribute):\n\tSave global options and compare it after parsing of function\n\tattribute.\n\t* c-pragma.c (opt_stack::saved_global_options): New field.\n\t(handle_pragma_push_options): Save global_options.\n\t(handle_pragma_pop_options): Compare them after pop.", "tree": {"sha": "954a57a5125fe9d401fbc977c6897a783e8cc47f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/954a57a5125fe9d401fbc977c6897a783e8cc47f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc6d15eaa23cbae1468a6ef92371b1c856c14819", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl7gk/4ACgkQTcGC3A+n\nN4XGowf8Dv+tnBoHXbAW769SynkHClZXIRtoPuZD0w59YtaU9Nct/HMvLcTNiV7J\n7HEDrNESPKlBS87s9LnITyM9BRtWpg0rAX0xAEHxnVTCXhlGtEdVNm8xcAoH/jox\nXeIJ1KiUIlUpBPBvcEEeN99eebVewBwgEA0GEK2T9Xn/ZZXd0a6ywwQfm6CprmXu\n/SBA7w889Izd3OhAxDl2/cZ1AMNHoUdhrADe7yFMGIKf/RHN4EAnAfU3Nj7HSzRJ\npPgNpPkya+NeoEsiz4vLwXUYNhub/dEJ943Wr4O4tcEb9AsiwdjLSR08D3wYYR0j\npXXYKXZfsjF18mZQsH2Ioq2xsTIcQQ==\n=eBb+\n-----END PGP SIGNATURE-----", "payload": "tree 954a57a5125fe9d401fbc977c6897a783e8cc47f\nparent 771e60dd073b4dc0663fa9282b854dafdd92242d\nauthor Martin Liska <mliska@suse.cz> 1576003268 +0100\ncommitter Martin Liska <mliska@suse.cz> 1591776254 +0200\n\nAdd gcc_assert that &global_options are not dirty modified.\n\ngcc/ChangeLog:\n\n2020-03-20  Martin Liska  <mliska@suse.cz>\n\n\tPR tree-optimization/92860\n\t* optc-save-gen.awk: Generate new function cl_optimization_compare.\n\t* opth-gen.awk: Generate declaration of the function.\n\ngcc/c-family/ChangeLog:\n\n2020-03-20  Martin Liska  <mliska@suse.cz>\n\n\tPR tree-optimization/92860\n\t* c-attribs.c (handle_optimize_attribute):\n\tSave global options and compare it after parsing of function\n\tattribute.\n\t* c-pragma.c (opt_stack::saved_global_options): New field.\n\t(handle_pragma_push_options): Save global_options.\n\t(handle_pragma_pop_options): Compare them after pop.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc6d15eaa23cbae1468a6ef92371b1c856c14819", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc6d15eaa23cbae1468a6ef92371b1c856c14819", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc6d15eaa23cbae1468a6ef92371b1c856c14819/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "771e60dd073b4dc0663fa9282b854dafdd92242d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/771e60dd073b4dc0663fa9282b854dafdd92242d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/771e60dd073b4dc0663fa9282b854dafdd92242d"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "372148315389db6671dfd943fd1a68670fcb1cbc", "filename": "gcc/c-family/c-attribs.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc6d15eaa23cbae1468a6ef92371b1c856c14819/gcc%2Fc-family%2Fc-attribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc6d15eaa23cbae1468a6ef92371b1c856c14819/gcc%2Fc-family%2Fc-attribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-attribs.c?ref=dc6d15eaa23cbae1468a6ef92371b1c856c14819", "patch": "@@ -4452,6 +4452,13 @@ handle_optimize_attribute (tree *node, tree name, tree args,\n \n       /* If we previously had some optimization options, use them as the\n \t default.  */\n+      gcc_options *saved_global_options = NULL;\n+      if (flag_checking)\n+\t{\n+\t  saved_global_options = XNEW (gcc_options);\n+\t  *saved_global_options = global_options;\n+\t}\n+\n       if (old_opts)\n \tcl_optimization_restore (&global_options,\n \t\t\t\t TREE_OPTIMIZATION (old_opts));\n@@ -4463,6 +4470,11 @@ handle_optimize_attribute (tree *node, tree name, tree args,\n \n       /* Restore current options.  */\n       cl_optimization_restore (&global_options, &cur_opts);\n+      if (saved_global_options != NULL)\n+\t{\n+\t  cl_optimization_compare (saved_global_options, &global_options);\n+\t  free (saved_global_options);\n+\t}\n     }\n \n   return NULL_TREE;"}, {"sha": "e3169e68fb643031302b39b76945aa0805b91b66", "filename": "gcc/c-family/c-pragma.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc6d15eaa23cbae1468a6ef92371b1c856c14819/gcc%2Fc-family%2Fc-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc6d15eaa23cbae1468a6ef92371b1c856c14819/gcc%2Fc-family%2Fc-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pragma.c?ref=dc6d15eaa23cbae1468a6ef92371b1c856c14819", "patch": "@@ -1003,6 +1003,7 @@ struct GTY(()) opt_stack {\n   tree target_strings;\n   tree optimize_binary;\n   tree optimize_strings;\n+  gcc_options * GTY ((skip)) saved_global_options;\n };\n \n static GTY(()) struct opt_stack * options_stack;\n@@ -1028,6 +1029,11 @@ handle_pragma_push_options (cpp_reader *ARG_UNUSED(dummy))\n   options_stack = p;\n \n   /* Save optimization and target flags in binary format.  */\n+  if (flag_checking)\n+    {\n+      p->saved_global_options = XNEW (gcc_options);\n+      *p->saved_global_options = global_options;\n+    }\n   p->optimize_binary = build_optimization_node (&global_options);\n   p->target_binary = build_target_option_node (&global_options);\n \n@@ -1079,6 +1085,11 @@ handle_pragma_pop_options (cpp_reader *ARG_UNUSED(dummy))\n \t\t\t\t      p->optimize_binary);\n       optimization_current_node = p->optimize_binary;\n     }\n+  if (flag_checking)\n+    {\n+      cl_optimization_compare (p->saved_global_options, &global_options);\n+      free (p->saved_global_options);\n+    }\n \n   current_target_pragma = p->target_strings;\n   current_optimize_pragma = p->optimize_strings;"}, {"sha": "4a0e5ab64f388c7b2f688d263848d54e6dfc160a", "filename": "gcc/optc-save-gen.awk", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc6d15eaa23cbae1468a6ef92371b1c856c14819/gcc%2Foptc-save-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc6d15eaa23cbae1468a6ef92371b1c856c14819/gcc%2Foptc-save-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptc-save-gen.awk?ref=dc6d15eaa23cbae1468a6ef92371b1c856c14819", "patch": "@@ -945,5 +945,30 @@ for (i = 0; i < n_opt_val; i++) {\n \t      print \"    free (const_cast <char *>(ptr->\" name\"));\";\n \t}\n }\n+print \"}\";\n+\n+print \"void\";\n+print \"cl_optimization_compare (gcc_options *ptr1, gcc_options *ptr2)\"\n+print \"{\"\n+\n+# all these options are mentioned in PR92860\n+checked_options[\"flag_merge_constants\"]++\n+checked_options[\"param_max_fields_for_field_sensitive\"]++\n+checked_options[\"flag_omit_frame_pointer\"]++\n+checked_options[\"unroll_only_small_loops\"]++\n+\n+for (i = 0; i < n_opts; i++) {\n+\tname = var_name(flags[i]);\n+\tif (name == \"\")\n+\t\tcontinue;\n+\n+\tif (name in checked_options)\n+\t\tcontinue;\n+\tchecked_options[name]++\n+\n+\tprint \"  if (ptr1->x_\" name \" != ptr2->x_\" name \")\"\n+\tprint \"    internal_error (\\\"Error: global_options are modified in local context\\\\n\\\");\";\n+}\n+\n print \"}\";\n }"}, {"sha": "472fd59141352d3269422f656d780529a2bdd459", "filename": "gcc/opth-gen.awk", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc6d15eaa23cbae1468a6ef92371b1c856c14819/gcc%2Fopth-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc6d15eaa23cbae1468a6ef92371b1c856c14819/gcc%2Fopth-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopth-gen.awk?ref=dc6d15eaa23cbae1468a6ef92371b1c856c14819", "patch": "@@ -318,6 +318,9 @@ print \"\";\n print \"/* Free heap memory used by optimization options.  */\";\n print \"extern void cl_optimization_option_free (cl_optimization *ptr1);\"\n print \"\";\n+print \"/* Compare and report difference for a part of cl_optimization options.  */\";\n+print \"extern void cl_optimization_compare (gcc_options *ptr1, gcc_options *ptr2);\";\n+print \"\";\n print \"/* Generator files may not have access to location_t, and don't need these.  */\"\n print \"#if defined(UNKNOWN_LOCATION)\"\n print \"bool                                                                  \""}]}