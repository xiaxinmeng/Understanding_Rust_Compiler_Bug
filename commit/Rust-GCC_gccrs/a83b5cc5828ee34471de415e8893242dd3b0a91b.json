{"sha": "a83b5cc5828ee34471de415e8893242dd3b0a91b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTgzYjVjYzU4MjhlZTM0NDcxZGU0MTVlODg5MzI0MmRkM2IwYTkxYg==", "commit": {"author": {"name": "Andrew Benson", "email": "abenson@carnegiescience.edu", "date": "2020-01-28T17:58:40Z"}, "committer": {"name": "Andrew Benson", "email": "abenson@carnegiescience.edu", "date": "2020-01-28T18:02:49Z"}, "message": "Allow concatenated module+submodule names.\n\nIncrease length of char variables \"parent1\" and \"parent2\" in\nset_syms_host_assoc() to allow them to hold concatenated module +\nsubmodule names.\n\n        PR fortran/93473\n        * parse.c: Increase length of char variables to allow them to hold\n        a concatenated module + submodule name.\n        * gfortran.dg/pr93473.f90: New test.", "tree": {"sha": "3a4b51a3c966fa78965f48a5c7a8c5b4af89493e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a4b51a3c966fa78965f48a5c7a8c5b4af89493e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a83b5cc5828ee34471de415e8893242dd3b0a91b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a83b5cc5828ee34471de415e8893242dd3b0a91b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a83b5cc5828ee34471de415e8893242dd3b0a91b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a83b5cc5828ee34471de415e8893242dd3b0a91b/comments", "author": {"login": "abensonca", "id": 7468651, "node_id": "MDQ6VXNlcjc0Njg2NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/7468651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abensonca", "html_url": "https://github.com/abensonca", "followers_url": "https://api.github.com/users/abensonca/followers", "following_url": "https://api.github.com/users/abensonca/following{/other_user}", "gists_url": "https://api.github.com/users/abensonca/gists{/gist_id}", "starred_url": "https://api.github.com/users/abensonca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abensonca/subscriptions", "organizations_url": "https://api.github.com/users/abensonca/orgs", "repos_url": "https://api.github.com/users/abensonca/repos", "events_url": "https://api.github.com/users/abensonca/events{/privacy}", "received_events_url": "https://api.github.com/users/abensonca/received_events", "type": "User", "site_admin": false}, "committer": {"login": "abensonca", "id": 7468651, "node_id": "MDQ6VXNlcjc0Njg2NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/7468651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abensonca", "html_url": "https://github.com/abensonca", "followers_url": "https://api.github.com/users/abensonca/followers", "following_url": "https://api.github.com/users/abensonca/following{/other_user}", "gists_url": "https://api.github.com/users/abensonca/gists{/gist_id}", "starred_url": "https://api.github.com/users/abensonca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abensonca/subscriptions", "organizations_url": "https://api.github.com/users/abensonca/orgs", "repos_url": "https://api.github.com/users/abensonca/repos", "events_url": "https://api.github.com/users/abensonca/events{/privacy}", "received_events_url": "https://api.github.com/users/abensonca/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d056cbfb3484f4037b34c908b26e1c6776c86b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d056cbfb3484f4037b34c908b26e1c6776c86b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d056cbfb3484f4037b34c908b26e1c6776c86b5"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "3e8a24ce8cf2668cc92b1b93bf23942b940929a4", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a83b5cc5828ee34471de415e8893242dd3b0a91b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a83b5cc5828ee34471de415e8893242dd3b0a91b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a83b5cc5828ee34471de415e8893242dd3b0a91b", "patch": "@@ -1,3 +1,10 @@\n+2020-01-28  Andrew Benson  <abensonca@gmail.com>\n+\n+\tPR fortran/93473\n+\t* parse.c: Increase length of char variables to allow them to hold\n+\ta concatenated module + submodule name.\n+\t* gfortran.dg/pr93473.f90: New test.\n+\n 2020-01-28  Julian Brown  <julian@codesourcery.com>\n \n \tPR fortran/93025"}, {"sha": "f71a95dd8719b5855f2421302d039e0aaf5fdc50", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a83b5cc5828ee34471de415e8893242dd3b0a91b/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a83b5cc5828ee34471de415e8893242dd3b0a91b/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=a83b5cc5828ee34471de415e8893242dd3b0a91b", "patch": "@@ -6045,8 +6045,9 @@ set_syms_host_assoc (gfc_symbol *sym)\n {\n   gfc_component *c;\n   const char dot[2] = \".\";\n-  char parent1[GFC_MAX_SYMBOL_LEN + 1];\n-  char parent2[GFC_MAX_SYMBOL_LEN + 1];\n+  /* Symbols take the form module.submodule_ or module.name_. */\n+  char parent1[2 * GFC_MAX_SYMBOL_LEN + 2];\n+  char parent2[2 * GFC_MAX_SYMBOL_LEN + 2];\n \n   if (sym == NULL)\n     return;"}, {"sha": "dda8525cfd9a542ee4d1fa4db39ccc885a4f3d9c", "filename": "gcc/testsuite/gfortran.dg/pr93473.f90", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a83b5cc5828ee34471de415e8893242dd3b0a91b/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93473.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a83b5cc5828ee34471de415e8893242dd3b0a91b/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93473.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93473.f90?ref=a83b5cc5828ee34471de415e8893242dd3b0a91b", "patch": "@@ -0,0 +1,28 @@\n+! { dg-do compile }\n+! { dg-options \"-ffree-line-length-none\" }\n+! PR fortran/93473\n+module aModestlyLongModuleName\n+  \n+  type :: aTypeWithASignificantlyLongNameButStillAllowedOK\n+  end type aTypeWithASignificantlyLongNameButStillAllowedOK\n+  \n+  interface\n+     module function aFunctionWithALongButStillAllowedName(parameters) result(self)\n+       type(aTypeWithASignificantlyLongNameButStillAllowedOK) :: self\n+     end function aFunctionWithALongButStillAllowedName\n+  end interface\n+  \n+end module aModestlyLongModuleName\n+\n+submodule (aModestlyLongModuleName) aTypeWithASignificantlyLongNameButStillAllowedOK_\n+\n+contains\n+\n+  module procedure aFunctionWithALongButStillAllowedName\n+     class(*), pointer :: genericObject\n+  end procedure aFunctionWithALongButStillAllowedName\n+\n+end submodule aTypeWithASignificantlyLongNameButStillAllowedOK_\n+\n+submodule (aModestlyLongModuleName:aTypeWithASignificantlyLongNameButStillAllowedOK_) aSubmoduleWithASignificantlyLongButStillAllowedName__\n+end submodule aSubmoduleWithASignificantlyLongButStillAllowedName__"}]}