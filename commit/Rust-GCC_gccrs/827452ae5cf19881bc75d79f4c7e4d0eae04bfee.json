{"sha": "827452ae5cf19881bc75d79f4c7e4d0eae04bfee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI3NDUyYWU1Y2YxOTg4MWJjNzVkNzlmNGM3ZTRkMGVhZTA0YmZlZQ==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2003-01-20T06:46:28Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2003-01-20T06:46:28Z"}, "message": "Makefile.am (core_java_source_files): Add VMObjectStreamClass.java.\n\n       * Makefile.am (core_java_source_files): Add VMObjectStreamClass.java.\n       (nat_source_files): Add natVMObjectStreamClass.cc.\n       * Makefile.in: Regenerated.\n       * gcj/javaprims.h (namespace java): Regenerated.\n       * java/io/ObjectStreamClass.java (getClassUID): Call\n       VMObjectStreamClass.hasClassInitializer().\n       (hasClassInitializer): Removed.\n       * java/io/VMObjectStreamClass.java: New class.\n       * java/io/natVMObjectStreamClass.cc: New file.\n       * java/lang/Class.h: Make java::io::VMObjectStreamClass friend class.\n\nFrom-SVN: r61501", "tree": {"sha": "a149f7ce318b5edc50d058cfa27ab5f7e09956fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a149f7ce318b5edc50d058cfa27ab5f7e09956fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/827452ae5cf19881bc75d79f4c7e4d0eae04bfee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/827452ae5cf19881bc75d79f4c7e4d0eae04bfee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/827452ae5cf19881bc75d79f4c7e4d0eae04bfee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/827452ae5cf19881bc75d79f4c7e4d0eae04bfee/comments", "author": null, "committer": null, "parents": [{"sha": "d99c740f5832aa30a8250cbc236838f507c1767f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d99c740f5832aa30a8250cbc236838f507c1767f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d99c740f5832aa30a8250cbc236838f507c1767f"}], "stats": {"total": 135, "additions": 102, "deletions": 33}, "files": [{"sha": "8112a68b43d76a9aeda62d264408e9685b54c5e9", "filename": "libjava/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/827452ae5cf19881bc75d79f4c7e4d0eae04bfee/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/827452ae5cf19881bc75d79f4c7e4d0eae04bfee/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=827452ae5cf19881bc75d79f4c7e4d0eae04bfee", "patch": "@@ -1,3 +1,16 @@\n+2003-01-17  Mark Wielaard  <mark@klomp.org>\n+\n+\t* Makefile.am (core_java_source_files): Add VMObjectStreamClass.java.\n+\t(nat_source_files): Add natVMObjectStreamClass.cc.\n+\t* Makefile.in: Regenerated.\n+\t* gcj/javaprims.h (namespace java): Regenerated.\n+\t* java/io/ObjectStreamClass.java (getClassUID): Call\n+\tVMObjectStreamClass.hasClassInitializer().\n+\t(hasClassInitializer): Removed.\n+\t* java/io/VMObjectStreamClass.java: New class.\n+\t* java/io/natVMObjectStreamClass.cc: New file.\n+\t* java/lang/Class.h: Make java::io::VMObjectStreamClass friend class.\n+\n 2003-01-16  Mark Wielaard  <mark@klomp.org>\n \n \t* java/net/SocketImpl.java (toString): Don't explicitly call"}, {"sha": "5993ed0c8e82d81675866ad205a5d40af6be70cc", "filename": "libjava/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/827452ae5cf19881bc75d79f4c7e4d0eae04bfee/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/827452ae5cf19881bc75d79f4c7e4d0eae04bfee/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=827452ae5cf19881bc75d79f4c7e4d0eae04bfee", "patch": "@@ -1692,6 +1692,7 @@ java/io/StringWriter.java \\\n java/io/SyncFailedException.java \\\n java/io/UTFDataFormatException.java \\\n java/io/UnsupportedEncodingException.java \\\n+java/io/VMObjectStreamClass.java \\\n java/io/WriteAbortedException.java \\\n java/io/Writer.java \\\n java/util/AbstractCollection.java \\\n@@ -2333,6 +2334,7 @@ java/io/natFile.cc \\\n java/io/natFileDescriptor.cc \\\n java/io/natObjectInputStream.cc \\\n java/io/natObjectOutputStream.cc \\\n+java/io/natVMObjectStreamClass.cc \\\n java/lang/natCharacter.cc \\\n java/lang/natClass.cc \\\n java/lang/natClassLoader.cc \\"}, {"sha": "f9ad64744ca9f3f7df4008aa6e8a4c4707eae522", "filename": "libjava/Makefile.in", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/827452ae5cf19881bc75d79f4c7e4d0eae04bfee/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/827452ae5cf19881bc75d79f4c7e4d0eae04bfee/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=827452ae5cf19881bc75d79f4c7e4d0eae04bfee", "patch": "@@ -1449,6 +1449,7 @@ java/io/StringWriter.java \\\n java/io/SyncFailedException.java \\\n java/io/UTFDataFormatException.java \\\n java/io/UnsupportedEncodingException.java \\\n+java/io/VMObjectStreamClass.java \\\n java/io/WriteAbortedException.java \\\n java/io/Writer.java \\\n java/util/AbstractCollection.java \\\n@@ -2084,6 +2085,7 @@ java/io/natFile.cc \\\n java/io/natFileDescriptor.cc \\\n java/io/natObjectInputStream.cc \\\n java/io/natObjectOutputStream.cc \\\n+java/io/natVMObjectStreamClass.cc \\\n java/lang/natCharacter.cc \\\n java/lang/natClass.cc \\\n java/lang/natClassLoader.cc \\\n@@ -2252,11 +2254,11 @@ gnu/gcj/runtime/natNameFinder.lo gnu/gcj/runtime/natSharedLibLoader.lo \\\n gnu/gcj/runtime/natStackTrace.lo gnu/gcj/runtime/natStringBuffer.lo \\\n gnu/gcj/runtime/natVMClassLoader.lo java/io/natFile.lo \\\n java/io/natFileDescriptor.lo java/io/natObjectInputStream.lo \\\n-java/io/natObjectOutputStream.lo java/lang/natCharacter.lo \\\n-java/lang/natClass.lo java/lang/natClassLoader.lo \\\n-java/lang/natConcreteProcess.lo java/lang/natDouble.lo \\\n-java/lang/natFloat.lo java/lang/natMath.lo java/lang/natObject.lo \\\n-java/lang/natRuntime.lo java/lang/natString.lo \\\n+java/io/natObjectOutputStream.lo java/io/natVMObjectStreamClass.lo \\\n+java/lang/natCharacter.lo java/lang/natClass.lo \\\n+java/lang/natClassLoader.lo java/lang/natConcreteProcess.lo \\\n+java/lang/natDouble.lo java/lang/natFloat.lo java/lang/natMath.lo \\\n+java/lang/natObject.lo java/lang/natRuntime.lo java/lang/natString.lo \\\n java/lang/natStringBuffer.lo java/lang/natSystem.lo \\\n java/lang/natThread.lo java/lang/natVMSecurityManager.lo \\\n java/lang/ref/natReference.lo java/lang/reflect/natArray.lo \\\n@@ -2350,7 +2352,7 @@ libgcj-test.spec.in libgcj.spec.in\n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = gtar\n+TAR = tar\n GZIP_ENV = --best\n DIST_SUBDIRS =  @DIRLTDL@ testsuite gcj include @DIRLTDL@ gcj include\n DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n@@ -2942,10 +2944,12 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/io/SyncFailedException.P \\\n .deps/java/io/UTFDataFormatException.P \\\n .deps/java/io/UnsupportedEncodingException.P \\\n+.deps/java/io/VMObjectStreamClass.P \\\n .deps/java/io/WriteAbortedException.P .deps/java/io/Writer.P \\\n .deps/java/io/natFile.P .deps/java/io/natFileDescriptor.P \\\n .deps/java/io/natObjectInputStream.P \\\n .deps/java/io/natObjectOutputStream.P \\\n+.deps/java/io/natVMObjectStreamClass.P \\\n .deps/java/lang/AbstractMethodError.P \\\n .deps/java/lang/ArithmeticException.P \\\n .deps/java/lang/ArrayIndexOutOfBoundsException.P \\"}, {"sha": "a9d8b310418b0f1fb5396c3ea8644983556a0e59", "filename": "libjava/gcj/javaprims.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/827452ae5cf19881bc75d79f4c7e4d0eae04bfee/libjava%2Fgcj%2Fjavaprims.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/827452ae5cf19881bc75d79f4c7e4d0eae04bfee/libjava%2Fgcj%2Fjavaprims.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2Fjavaprims.h?ref=827452ae5cf19881bc75d79f4c7e4d0eae04bfee", "patch": "@@ -120,6 +120,7 @@ extern \"Java\"\n       class SyncFailedException;\n       class UTFDataFormatException;\n       class UnsupportedEncodingException;\n+      class VMObjectStreamClass;\n       class ValidatorAndPriority;\n       class WriteAbortedException;\n       class Writer;"}, {"sha": "2111635525a675d3f5a3efe12d1fd84311d3bab5", "filename": "libjava/java/io/ObjectStreamClass.java", "status": "modified", "additions": 1, "deletions": 26, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/827452ae5cf19881bc75d79f4c7e4d0eae04bfee/libjava%2Fjava%2Fio%2FObjectStreamClass.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/827452ae5cf19881bc75d79f4c7e4d0eae04bfee/libjava%2Fjava%2Fio%2FObjectStreamClass.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FObjectStreamClass.java?ref=827452ae5cf19881bc75d79f4c7e4d0eae04bfee", "patch": "@@ -525,7 +525,7 @@ private long getClassUID (Class cl)\n       }\n \n       // write class initializer method if present\n-      if (hasClassInitializer (cl))\n+      if (VMObjectStreamClass.hasClassInitializer (cl))\n       {\n \tdata_out.writeUTF (\"<clinit>\");\n \tdata_out.writeInt (Modifier.STATIC);\n@@ -613,31 +613,6 @@ private ObjectStreamField[] getSerialPersistentFields (Class clazz)\n     return o;\n   }\n \n-\n-  // Returns true if CLAZZ has a static class initializer\n-  // (a.k.a. <clinit>).\n-  private static boolean hasClassInitializer (Class clazz)\n-  {\n-    Method m = null;\n-\n-    try\n-      {\n-\t/*\n-\t * There exists a problem here, according to the spec\n-\t * clazz.getDeclaredMethod (\"<clinit>\", classArgs);\n-\t * will always throw NoSuchMethodException, even if the static \n-\t * intializer does exist.\n-\t */\n-\tClass classArgs[] = {};\n-\tm = clazz.getDeclaredMethod (\"<clinit>\", classArgs);\n-      }\n-    catch (java.lang.NoSuchMethodException e)\n-      {\n-      }\n-\n-    return m != null;\n-  }\n-\n   public static final ObjectStreamField[] NO_FIELDS = {};\n \n   private static Hashtable classLookupTable = new Hashtable ();"}, {"sha": "fd4023e402b98373636f46d1c108ac4a1a56f050", "filename": "libjava/java/io/VMObjectStreamClass.java", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/827452ae5cf19881bc75d79f4c7e4d0eae04bfee/libjava%2Fjava%2Fio%2FVMObjectStreamClass.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/827452ae5cf19881bc75d79f4c7e4d0eae04bfee/libjava%2Fjava%2Fio%2FVMObjectStreamClass.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FVMObjectStreamClass.java?ref=827452ae5cf19881bc75d79f4c7e4d0eae04bfee", "patch": "@@ -0,0 +1,50 @@\n+/* VMObjectStreamClass.java -- VM helper functions for ObjectStreamClass\n+   Copyright (C) 2003  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.io;\n+\n+import java.lang.reflect.Method;\n+\n+final class VMObjectStreamClass\n+{\n+  /**\n+    * Returns true if CLAZZ has a static class initializer\n+    * (a.k.a. <clinit>).\n+    */\n+  static native boolean hasClassInitializer (Class clazz);\n+}"}, {"sha": "b7a056c457ff0fc8afedadf57ad04637d2e67cc5", "filename": "libjava/java/io/natVMObjectStreamClass.cc", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/827452ae5cf19881bc75d79f4c7e4d0eae04bfee/libjava%2Fjava%2Fio%2FnatVMObjectStreamClass.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/827452ae5cf19881bc75d79f4c7e4d0eae04bfee/libjava%2Fjava%2Fio%2FnatVMObjectStreamClass.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FnatVMObjectStreamClass.cc?ref=827452ae5cf19881bc75d79f4c7e4d0eae04bfee", "patch": "@@ -0,0 +1,23 @@\n+// natVMObjectStreamClass.cc - Native part of VMObjectStreamClass class.\n+\n+/* Copyright (C) 2003  Free Software Foundation\n+\n+   This VMObjectStreamClass is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the ObjectInputStream \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+#include <gcj/cni.h>\n+#include <jvm.h>\n+\n+#include <java/io/VMObjectStreamClass.h>\n+#include <java/lang/Class.h>\n+\n+jboolean\n+java::io::VMObjectStreamClass::hasClassInitializer (jclass klass)\n+{\n+  _Jv_Method *meth = _Jv_GetMethodLocal(klass, gcj::clinit_name,\n+\t\t\t\t\t       gcj::void_signature);\n+  return (meth != NULL);\n+}"}, {"sha": "db05cb618a69ab9fc40b4f9e3b28573202ca4a47", "filename": "libjava/java/lang/Class.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/827452ae5cf19881bc75d79f4c7e4d0eae04bfee/libjava%2Fjava%2Flang%2FClass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/827452ae5cf19881bc75d79f4c7e4d0eae04bfee/libjava%2Fjava%2Flang%2FClass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClass.h?ref=827452ae5cf19881bc75d79f4c7e4d0eae04bfee", "patch": "@@ -1,6 +1,6 @@\n // Class.h - Header file for java.lang.Class.  -*- c++ -*-\n \n-/* Copyright (C) 1998, 1999, 2000, 2001, 2002  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -364,6 +364,7 @@ class java::lang::Class : public java::lang::Object\n \n   friend class _Jv_BytecodeVerifier;\n   friend class gnu::gcj::runtime::StackTrace;\n+  friend class java::io::VMObjectStreamClass;\n \n   // Chain for class pool.\n   jclass next;"}]}