{"sha": "556ab5125912fa2233986eb19d6cd995cf7de1d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU2YWI1MTI1OTEyZmEyMjMzOTg2ZWIxOWQ2Y2Q5OTVjZjdkZTFkMg==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-07-31T20:05:28Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-11-06T19:33:21Z"}, "message": "Darwin: Darwin 20 is to be macOS 11 (Big Sur).\n\nAs per Nigel Tufnel's assertion \"... this one goes to 11\".\n\nThe various parts of the code that deal with mapping Darwin versions\nto macOS (X) versions need updating to deal with  a major version of\n11.\n\nSo now we have, for example:\n\nDarwin  4 => macOS (X) 10.0\n\u2026\nDarwin 14 => macOS (X) 10.10\n...\nDarwin 19 => macOS (X) 10.15\n\nDarwin 20 => macOS  11.0\n\nBecause of the historical duplication of the \"10\" in macOSX 10.xx and\nthe number of tools that expect this, it is likely that system tools will\nallow macos11.0 and/or macosx11.0 (despite that the latter makes little\nsense).\n\nUpdate the link test to cover Catalina (Darwin19/10.15) and\nBig Sur (Darwin20/11.0).\n\ngcc/ChangeLog:\n\n\t* config/darwin-c.c: Allow for Darwin20 to correspond to macOS 11.\n\t* config/darwin-driver.c: Likewise.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/darwin-minversion-link.c: Allow for Darwin19 (macOS 10.15)\n\tand Darwin20 (macOS 11.0).", "tree": {"sha": "a6a0f9552df92ee5c9a3220a440e57b35e675651", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6a0f9552df92ee5c9a3220a440e57b35e675651"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/556ab5125912fa2233986eb19d6cd995cf7de1d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/556ab5125912fa2233986eb19d6cd995cf7de1d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/556ab5125912fa2233986eb19d6cd995cf7de1d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/556ab5125912fa2233986eb19d6cd995cf7de1d2/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "600be7f09ea1ea4b59e4e733fda2aca3ba892a6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/600be7f09ea1ea4b59e4e733fda2aca3ba892a6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/600be7f09ea1ea4b59e4e733fda2aca3ba892a6b"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "9034f49908e040950fe8835f985b19d1dd152fcb", "filename": "gcc/config/darwin-c.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/556ab5125912fa2233986eb19d6cd995cf7de1d2/gcc%2Fconfig%2Fdarwin-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/556ab5125912fa2233986eb19d6cd995cf7de1d2/gcc%2Fconfig%2Fdarwin-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-c.c?ref=556ab5125912fa2233986eb19d6cd995cf7de1d2", "patch": "@@ -692,10 +692,10 @@ macosx_version_as_macro (void)\n   if (!version_array)\n     goto fail;\n \n-  if (version_array[MAJOR] != 10)\n+  if (version_array[MAJOR] < 10 || version_array[MAJOR] > 11)\n     goto fail;\n \n-  if (version_array[MINOR] < 10)\n+  if (version_array[MAJOR] == 10 && version_array[MINOR] < 10)\n     version_macro = version_as_legacy_macro (version_array);\n   else\n     version_macro = version_as_modern_macro (version_array);"}, {"sha": "8ae300057fd36a3ab0a187a75a2502ec82aa3f3f", "filename": "gcc/config/darwin-driver.c", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/556ab5125912fa2233986eb19d6cd995cf7de1d2/gcc%2Fconfig%2Fdarwin-driver.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/556ab5125912fa2233986eb19d6cd995cf7de1d2/gcc%2Fconfig%2Fdarwin-driver.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-driver.c?ref=556ab5125912fa2233986eb19d6cd995cf7de1d2", "patch": "@@ -65,7 +65,7 @@ validate_macosx_version_min (const char *version_str)\n   major = strtoul (version_str, &end, 10);\n   version_str = end + ((*end == '.') ? 1 : 0);\n \n-  if (major != 10) /* So far .. all MacOS 10 ... */\n+  if (major < 10 || major > 11 ) /* MacOS 10 and 11 are known. */\n     return NULL;\n \n   /* Version string components must be present and numeric.  */\n@@ -104,7 +104,7 @@ validate_macosx_version_min (const char *version_str)\n   if (need_rewrite)\n     {\n       char *new_version;\n-      asprintf (&new_version, \"10.%lu.%lu\", minor, tiny);\n+      asprintf (&new_version, \"%2lu.%lu.%lu\", major, minor, tiny);\n       return new_version;\n     }\n \n@@ -115,6 +115,12 @@ validate_macosx_version_min (const char *version_str)\n #include <sys/sysctl.h>\n #include \"xregex.h\"\n \n+/* Determine the version of the running OS.\n+   We only look at the first two components (ignoring the patch one) and\n+   report NN.MM.0 where NN is currently either 10 or 11 and MM is the OS\n+   minor release number.\n+   If we can't parse what the kernel gives us, warn the user, and do nothing.  */\n+\n static char *\n darwin_find_version_from_kernel (void)\n {\n@@ -125,8 +131,6 @@ darwin_find_version_from_kernel (void)\n   char * version_p;\n   char * new_flag;\n \n-  /* Determine the version of the running OS.  If we can't, warn user,\n-     and do nothing.  */\n   if (sysctl (osversion_name, ARRAY_SIZE (osversion_name), osversion,\n \t      &osversion_len, NULL, 0) == -1)\n     {\n@@ -144,10 +148,11 @@ darwin_find_version_from_kernel (void)\n     major_vers = major_vers * 10 + (*version_p++ - '0');\n   if (*version_p++ != '.')\n     goto parse_failed;\n-  \n-  /* The major kernel version number is 4 plus the second OS version\n-     component.  */\n-  if (major_vers - 4 <= 4)\n+\n+  /* Darwin20 sees a transition to macOS 11.  */\n+  if (major_vers >= 20)\n+    asprintf (&new_flag, \"11.%02d.00\", major_vers - 20);\n+  else if (major_vers - 4 <= 4)\n     /* On 10.4 and earlier, the old linker is used which does not\n        support three-component system versions.\n        FIXME: we should not assume this - a newer linker could be used.  */"}, {"sha": "765fb799a91820621789b10f574ac760b2e42bb9", "filename": "gcc/testsuite/gcc.dg/darwin-minversion-link.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/556ab5125912fa2233986eb19d6cd995cf7de1d2/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-link.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/556ab5125912fa2233986eb19d6cd995cf7de1d2/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-link.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-link.c?ref=556ab5125912fa2233986eb19d6cd995cf7de1d2", "patch": "@@ -13,8 +13,9 @@\n /* { dg-additional-options \"-mmacosx-version-min=010.011.06 -DCHECK=101106\" { target *-*-darwin15* } } */\n /* { dg-additional-options \"-mmacosx-version-min=010.012.06 -DCHECK=101206\" { target *-*-darwin16* } } */\n /* { dg-additional-options \"-mmacosx-version-min=010.013.06 -DCHECK=101306\" { target *-*-darwin17* } } */\n-/* This next test covers 10.18 and (currently unreleased) 10.19 for now. */  \n-/* { dg-additional-options \"-mmacosx-version-min=010.014.05 -DCHECK=101405\" { target *-*-darwin1[89]* } } */\n+/* { dg-additional-options \"-mmacosx-version-min=010.014.05 -DCHECK=101405\" { target *-*-darwin18* } } */\n+/* { dg-additional-options \"-mmacosx-version-min=010.015.06 -DCHECK=101506\" { target *-*-darwin19* } } */\n+/* { dg-additional-options \"-mmacosx-version-min=011.000.00 -DCHECK=110000\" { target *-*-darwin20 } } */\n \n int\n main ()"}]}