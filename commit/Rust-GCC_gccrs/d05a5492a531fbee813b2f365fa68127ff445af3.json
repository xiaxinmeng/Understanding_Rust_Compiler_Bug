{"sha": "d05a5492a531fbee813b2f365fa68127ff445af3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA1YTU0OTJhNTMxZmJlZTgxM2IyZjM2NWZhNjgxMjdmZjQ0NWFmMw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@cygnus.com", "date": "1998-05-28T06:47:21Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1998-05-28T06:47:21Z"}, "message": "Make rtx, tree types type correct if the appropriate include files was not included\n\nFrom-SVN: r20114", "tree": {"sha": "0c8776fc0cc09c89cb6d94bb6656b081961c734d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c8776fc0cc09c89cb6d94bb6656b081961c734d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d05a5492a531fbee813b2f365fa68127ff445af3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d05a5492a531fbee813b2f365fa68127ff445af3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d05a5492a531fbee813b2f365fa68127ff445af3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d05a5492a531fbee813b2f365fa68127ff445af3/comments", "author": null, "committer": null, "parents": [{"sha": "b7698cf042b922cfa0e38695ab90e441faae301e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7698cf042b922cfa0e38695ab90e441faae301e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7698cf042b922cfa0e38695ab90e441faae301e"}], "stats": {"total": 43, "additions": 32, "deletions": 11}, "files": [{"sha": "c3069118519571c6e1cdd6b6ca054f81f4f6c0d6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05a5492a531fbee813b2f365fa68127ff445af3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05a5492a531fbee813b2f365fa68127ff445af3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d05a5492a531fbee813b2f365fa68127ff445af3", "patch": "@@ -1,3 +1,17 @@\n+Thu May 28 09:36:39 1998  Michael Meissner  <meissner@cygnus.com>\n+\n+\t* except.h (rtx): Define rtx type correctly if needed.\n+\t* function.h (rtx): Ditto.\n+\t(tree): Define tree type correctly if needed.\n+\n+\t* c-pragma.c (toplevel): Include rtl.h.\n+\n+\t* stor-layout.c (toplevel): Move include of rtl.h before\n+\texcept.h.\n+\n+\t* Makefile.in (c-pragma.o): Add except.h, rtl.h dependencies.\n+\t(tree.o): Add except.h dependency.\n+\t\n Wed May 27 22:02:40 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* reload1.c: Revert accidental checkin."}, {"sha": "7d9ef0ec0534b0976a072a68555238a0452b4844", "filename": "gcc/Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05a5492a531fbee813b2f365fa68127ff445af3/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05a5492a531fbee813b2f365fa68127ff445af3/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=d05a5492a531fbee813b2f365fa68127ff445af3", "patch": "@@ -1259,8 +1259,8 @@ c-lex.o : c-lex.c $(CONFIG_H) system.h $(TREE_H) $(RTL_H) c-lex.h c-tree.h \\\n     toplev.h output.h\n c-aux-info.o : c-aux-info.c  $(CONFIG_H) system.h $(TREE_H) c-tree.h flags.h\n c-convert.o : c-convert.c $(CONFIG_H) system.h $(TREE_H) flags.h toplev.h\n-c-pragma.o: c-pragma.c $(CONFIG_H) system.h $(TREE_H) except.h function.h \\\n-    defaults.h c-pragma.h toplev.h\n+c-pragma.o: c-pragma.c $(CONFIG_H) system.h $(RTL_H) $(TREE_H) except.h \\\n+    function.h defaults.h c-pragma.h toplev.h\n c-iterate.o: c-iterate.c $(CONFIG_H) system.h $(TREE_H) $(RTL_H) c-tree.h \\\n     flags.h toplev.h \n \n@@ -1341,7 +1341,7 @@ prefix.o: prefix.c $(CONFIG_H) system.h gansidecl.h Makefile\n \n convert.o: convert.c $(CONFIG_H) $(TREE_H) flags.h convert.h toplev.h\n \n-tree.o : tree.c $(CONFIG_H) system.h $(TREE_H) flags.h function.h toplev.h\n+tree.o : tree.c $(CONFIG_H) system.h $(TREE_H) flags.h function.h toplev.h except.h\n print-tree.o : print-tree.c $(CONFIG_H) system.h $(TREE_H)\n stor-layout.o : stor-layout.c $(CONFIG_H) system.h $(TREE_H) flags.h \\\n    function.h expr.h insn-codes.h $(RTL_H) toplev.h except.h"}, {"sha": "3d01925a4bde7b510a789ec46aea275098d0a0c8", "filename": "gcc/c-pragma.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05a5492a531fbee813b2f365fa68127ff445af3/gcc%2Fc-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05a5492a531fbee813b2f365fa68127ff445af3/gcc%2Fc-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pragma.c?ref=d05a5492a531fbee813b2f365fa68127ff445af3", "patch": "@@ -20,6 +20,7 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n+#include \"rtl.h\"\n #include \"tree.h\"\n #include \"except.h\"\n #include \"function.h\""}, {"sha": "b96399e91164b90e5109929f7457d9d388b44fa2", "filename": "gcc/except.h", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05a5492a531fbee813b2f365fa68127ff445af3/gcc%2Fexcept.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05a5492a531fbee813b2f365fa68127ff445af3/gcc%2Fexcept.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.h?ref=d05a5492a531fbee813b2f365fa68127ff445af3", "patch": "@@ -19,9 +19,9 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-\n-#ifndef GET_CODE\n-#define rtx int *\n+#if !defined(NULL_RTX) && !defined(rtx)\n+typedef struct rtx_def *_except_rtx;\n+#define rtx _except_rtx\n #endif\n \n #ifdef TREE_CODE\n@@ -388,3 +388,7 @@ rtx expand_builtin_dwarf_reg_size\tPROTO((tree, rtx));\n int in_same_eh_region                   PROTO((rtx, rtx));\n void free_insn_eh_region                PROTO((void));\n void init_insn_eh_region                PROTO((rtx, int));\n+\n+#ifdef rtx\n+#undef rtx\n+#endif"}, {"sha": "59a149d448164dfa6855fac2f272374f31b2c5a0", "filename": "gcc/function.h", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05a5492a531fbee813b2f365fa68127ff445af3/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05a5492a531fbee813b2f365fa68127ff445af3/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=d05a5492a531fbee813b2f365fa68127ff445af3", "patch": "@@ -19,11 +19,13 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n \n-#ifndef NULL_TREE\n-#define tree int *\n+#if !defined(NULL_TREE) && !defined(tree)\n+typedef union union_node *_function_tree;\n+#define tree _function_tree\n #endif\n-#ifndef GET_CODE\n-#define rtx int *\n+#if !defined(NULL_RTX) && !defined(rtx)\n+typedef struct rtx_def *_function_rtx;\n+#define rtx _function_rtx\n #endif\n \n struct var_refs_queue"}, {"sha": "043ad286be3f7217e3dfffbb071bb963655c378d", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05a5492a531fbee813b2f365fa68127ff445af3/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05a5492a531fbee813b2f365fa68127ff445af3/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=d05a5492a531fbee813b2f365fa68127ff445af3", "patch": "@@ -23,10 +23,10 @@ Boston, MA 02111-1307, USA.  */\n #include \"system.h\"\n \n #include \"tree.h\"\n+#include \"rtl.h\"\n #include \"flags.h\"\n #include \"except.h\"\n #include \"function.h\"\n-#include \"rtl.h\"\n #include \"expr.h\"\n #include \"toplev.h\"\n "}]}