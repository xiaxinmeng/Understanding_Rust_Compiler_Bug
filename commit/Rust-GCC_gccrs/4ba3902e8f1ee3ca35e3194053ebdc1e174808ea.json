{"sha": "4ba3902e8f1ee3ca35e3194053ebdc1e174808ea", "node_id": "C_kwDOANBUbNoAKDRiYTM5MDJlOGYxZWUzY2EzNWUzMTk0MDUzZWJkYzFlMTc0ODA4ZWE", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2022-10-24T18:17:24Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2022-10-25T16:30:47Z"}, "message": "rs6000: Add CCANY; replace <un>signed by <mode:CCANY>\n\nThis is in preparation for adding CCFP, and maybe CCEQ, and whatever\nother CC mode we may want later.  CCANY is used for CC mode consumers\nthat actually can take any of the four CR field bits.\n\n2022-10-25  Segher Boessenkool  <segher@kernel.crashing.org>\n\n\t* config/rs6000/rs6000.md (CCEITHER): Delete.\n\t(CCANY): New.\n\t(un): Delete.\n\t(isel_<un>signed_<GPR:mode>): Rename to...\n\t(isel_<CCANY:mode>_<GPR:mode>): ... this.  Adjust.\n\t(*isel_reversed_<un>signed_<GPR:mode>): Rename to...\n\t(*isel_reversed_<CCANY:mode>_<GPR:mode>): ... this.  Adjust.\n\t(setbc_<un>signed_<GPR:mode>): Rename to...\n\t(setbc_<CCANY:mode>_<GPR:mode>C): ... this.  Adjust.\"\n\t(*setbcr_<un>signed_<GPR:mode>): Rename to ...\n\t(*setbcr_<CCANY:mode>_<GPR:mode>): ... this.  Adjust.\n\t(*setnbc_<un>signed_<GPR:mode>): Rename to ...\n\t(*setnbc_<CCANY:mode>_<GPR:mode>): ... this.  Adjust.\n\t(*setnbcr_<un>signed_<GPR:mode>): Rename to ...\n\t(*setnbcr_<CCANY:mode>_<GPR:mode>): ... this.  Adjust.\n\t(eq<mode>3 for GPR): Adjust.\n\t(ne<mode>3 for GPR): Adjust.\n\t* config/rs6000/rs6000-string.cc (do_isel): Adjust.\n\t* config/rs6000/rs6000.cc (rs6000_emit_int_cmove): Adjust.", "tree": {"sha": "8dab4669673cf69f0598a7b9aa72a2316a0ea504", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8dab4669673cf69f0598a7b9aa72a2316a0ea504"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ba3902e8f1ee3ca35e3194053ebdc1e174808ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ba3902e8f1ee3ca35e3194053ebdc1e174808ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ba3902e8f1ee3ca35e3194053ebdc1e174808ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ba3902e8f1ee3ca35e3194053ebdc1e174808ea/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c5b1160776382772fc0a33130dfaf621699fdbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c5b1160776382772fc0a33130dfaf621699fdbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c5b1160776382772fc0a33130dfaf621699fdbf"}], "stats": {"total": 39, "additions": 19, "deletions": 20}, "files": [{"sha": "cd8ee8c2f7e4b839fa323568ac9c8cfb61e25c61", "filename": "gcc/config/rs6000/rs6000-string.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ba3902e8f1ee3ca35e3194053ebdc1e174808ea/gcc%2Fconfig%2Frs6000%2Frs6000-string.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ba3902e8f1ee3ca35e3194053ebdc1e174808ea/gcc%2Fconfig%2Frs6000%2Frs6000-string.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-string.cc?ref=4ba3902e8f1ee3ca35e3194053ebdc1e174808ea", "patch": "@@ -414,9 +414,9 @@ static void\n do_isel (rtx dest, rtx cmp, rtx src_t, rtx src_f, rtx cr)\n {\n   if (GET_MODE (dest) == DImode)\n-    emit_insn (gen_isel_signed_di (dest, cmp, src_t, src_f, cr));\n+    emit_insn (gen_isel_cc_di (dest, cmp, src_t, src_f, cr));\n   else\n-    emit_insn (gen_isel_signed_si (dest, cmp, src_t, src_f, cr));\n+    emit_insn (gen_isel_cc_si (dest, cmp, src_t, src_f, cr));\n }\n \n /* Emit a subtract of the proper mode for DEST."}, {"sha": "01e5bbcf0b69ac60dd3f988f11f1a6a618eadf38", "filename": "gcc/config/rs6000/rs6000.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ba3902e8f1ee3ca35e3194053ebdc1e174808ea/gcc%2Fconfig%2Frs6000%2Frs6000.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ba3902e8f1ee3ca35e3194053ebdc1e174808ea/gcc%2Fconfig%2Frs6000%2Frs6000.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.cc?ref=4ba3902e8f1ee3ca35e3194053ebdc1e174808ea", "patch": "@@ -16341,8 +16341,8 @@ rs6000_emit_int_cmove (rtx dest, rtx op, rtx true_cond, rtx false_cond)\n   signedp = GET_MODE (cr) == CCmode;\n \n   isel_func = (mode == SImode\n-\t       ? (signedp ? gen_isel_signed_si : gen_isel_unsigned_si)\n-\t       : (signedp ? gen_isel_signed_di : gen_isel_unsigned_di));\n+\t       ? (signedp ? gen_isel_cc_si : gen_isel_ccuns_si)\n+\t       : (signedp ? gen_isel_cc_di : gen_isel_ccuns_di));\n \n   switch (cond_code)\n     {"}, {"sha": "3bae303086b1253cfe1d86514b166dd7d23e1286", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ba3902e8f1ee3ca35e3194053ebdc1e174808ea/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ba3902e8f1ee3ca35e3194053ebdc1e174808ea/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=4ba3902e8f1ee3ca35e3194053ebdc1e174808ea", "patch": "@@ -5428,13 +5428,12 @@\n ;; leave out the mode in operand 4 and use one pattern, but reload can\n ;; change the mode underneath our feet and then gets confused trying\n ;; to reload the value.\n-(define_mode_iterator CCEITHER [CC CCUNS])\n-(define_mode_attr un [(CC \"\") (CCUNS \"un\")])\n-(define_insn \"isel_<un>signed_<GPR:mode>\"\n+(define_mode_iterator CCANY [CC CCUNS])\n+(define_insn \"isel_<CCANY:mode>_<GPR:mode>\"\n   [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r\")\n \t(if_then_else:GPR\n \t (match_operator 1 \"scc_comparison_operator\"\n-\t\t\t [(match_operand:CCEITHER 4 \"cc_reg_operand\" \"y,y\")\n+\t\t\t [(match_operand:CCANY 4 \"cc_reg_operand\" \"y,y\")\n \t\t\t  (const_int 0)])\n \t (match_operand:GPR 2 \"reg_or_zero_operand\" \"O,b\")\n \t (match_operand:GPR 3 \"gpc_reg_operand\" \"r,r\")))]\n@@ -5446,11 +5445,11 @@\n ;; isel can handle reversed comparisons so long as the operands are\n ;; registers.\n \n-(define_insn \"*isel_reversed_<un>signed_<GPR:mode>\"\n+(define_insn \"*isel_reversed_<CCANY:mode>_<GPR:mode>\"\n   [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r\")\n \t(if_then_else:GPR\n \t (match_operator 1 \"scc_rev_comparison_operator\"\n-\t\t\t [(match_operand:CCEITHER 4 \"cc_reg_operand\" \"y,y\")\n+\t\t\t [(match_operand:CCANY 4 \"cc_reg_operand\" \"y,y\")\n \t\t\t  (const_int 0)])\n \t (match_operand:GPR 2 \"gpc_reg_operand\" \"r,r\")\n \t (match_operand:GPR 3 \"reg_or_zero_operand\" \"O,b\")))]\n@@ -5462,38 +5461,38 @@\n   [(set_attr \"type\" \"isel\")])\n \n ; Set Boolean Condition (Reverse)\n-(define_insn \"setbc_<un>signed_<GPR:mode>\"\n+(define_insn \"setbc_<CCANY:mode>_<GPR:mode>\"\n   [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r\")\n \t(match_operator:GPR 1 \"scc_comparison_operator\"\n-\t\t\t[(match_operand:CCEITHER 2 \"cc_reg_operand\" \"y\")\n+\t\t\t[(match_operand:CCANY 2 \"cc_reg_operand\" \"y\")\n \t\t\t (const_int 0)]))]\n   \"TARGET_POWER10\"\n   \"setbc %0,%j1\"\n   [(set_attr \"type\" \"isel\")])\n \n-(define_insn \"*setbcr_<un>signed_<GPR:mode>\"\n+(define_insn \"*setbcr_<CCANY:mode>_<GPR:mode>\"\n   [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r\")\n \t(match_operator:GPR 1 \"scc_rev_comparison_operator\"\n-\t\t\t[(match_operand:CCEITHER 2 \"cc_reg_operand\" \"y\")\n+\t\t\t[(match_operand:CCANY 2 \"cc_reg_operand\" \"y\")\n \t\t\t (const_int 0)]))]\n   \"TARGET_POWER10\"\n   \"setbcr %0,%j1\"\n   [(set_attr \"type\" \"isel\")])\n \n ; Set Negative Boolean Condition (Reverse)\n-(define_insn \"*setnbc_<un>signed_<GPR:mode>\"\n+(define_insn \"*setnbc_<CCANY:mode>_<GPR:mode>\"\n   [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r\")\n \t(neg:GPR (match_operator:GPR 1 \"scc_comparison_operator\"\n-\t\t\t[(match_operand:CCEITHER 2 \"cc_reg_operand\" \"y\")\n+\t\t\t[(match_operand:CCANY 2 \"cc_reg_operand\" \"y\")\n \t\t\t (const_int 0)])))]\n   \"TARGET_POWER10\"\n   \"setnbc %0,%j1\"\n   [(set_attr \"type\" \"isel\")])\n \n-(define_insn \"*setnbcr_<un>signed_<GPR:mode>\"\n+(define_insn \"*setnbcr_<CCANY:mode>_<GPR:mode>\"\n   [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r\")\n \t(neg:GPR (match_operator:GPR 1 \"scc_rev_comparison_operator\"\n-\t\t\t[(match_operand:CCEITHER 2 \"cc_reg_operand\" \"y\")\n+\t\t\t[(match_operand:CCANY 2 \"cc_reg_operand\" \"y\")\n \t\t\t (const_int 0)])))]\n   \"TARGET_POWER10\"\n   \"setnbcr %0,%j1\"\n@@ -12644,7 +12643,7 @@\n       rtx compare = gen_rtx_COMPARE (CCmode, operands[1], operands[2]);\n       emit_insn (gen_rtx_SET (cc, compare));\n       rtx eq = gen_rtx_fmt_ee (EQ, <MODE>mode, cc, const0_rtx);\n-      emit_insn (gen_setbc_signed_<mode> (operands[0], eq, cc));\n+      emit_insn (gen_setbc_cc_<mode> (operands[0], eq, cc));\n       DONE;\n     }\n \n@@ -12700,7 +12699,7 @@\n       rtx compare = gen_rtx_COMPARE (CCmode, operands[1], operands[2]);\n       emit_insn (gen_rtx_SET (cc, compare));\n       rtx ne = gen_rtx_fmt_ee (NE, <MODE>mode, cc, const0_rtx);\n-      emit_insn (gen_setbc_signed_<mode> (operands[0], ne, cc));\n+      emit_insn (gen_setbc_cc_<mode> (operands[0], ne, cc));\n       DONE;\n     }\n "}]}