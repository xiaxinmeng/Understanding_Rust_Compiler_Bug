{"sha": "ab014eb3ae304092718018b8ae6122636b4c0b10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWIwMTRlYjNhZTMwNDA5MjcxODAxOGI4YWU2MTIyNjM2YjRjMGIxMA==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2017-01-19T18:30:44Z"}, "committer": {"name": "Tamar Christina", "email": "tnfchris@gcc.gnu.org", "date": "2017-01-19T18:30:44Z"}, "message": "aarch64.c (aarch64_simd_gen_const_vector_dup): Change int to HOST_WIDE_INT.\n\ngcc/\n2017-01-19  Tamar Christina  <tamar.christina@arm.com>\n\n\t* config/aarch64/aarch64.c (aarch64_simd_gen_const_vector_dup):\n\tChange int to HOST_WIDE_INT.\n\t* config/aarch64/aarch64-protos.h\n\t(aarch64_simd_gen_const_vector_dup): Likewise.\n\t* config/aarch64/aarch64-simd.md: Add copysign<mode>3.\n\ngcc/testsuite/\n2017-01-19  Tamar Christina  <tamar.christina@arm.com>\n\n\t* gcc/testsuite/lib/target-supports.exp\n\t(check_effective_target_vect_call_copysignf): Enable for AArch64.\n\nFrom-SVN: r244649", "tree": {"sha": "cb9dfe907818ae9cefb29e5a2002e64cb59a0870", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb9dfe907818ae9cefb29e5a2002e64cb59a0870"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab014eb3ae304092718018b8ae6122636b4c0b10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab014eb3ae304092718018b8ae6122636b4c0b10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab014eb3ae304092718018b8ae6122636b4c0b10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab014eb3ae304092718018b8ae6122636b4c0b10/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "45b48129d5e03ba60d434986f480a46ab119ddb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45b48129d5e03ba60d434986f480a46ab119ddb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45b48129d5e03ba60d434986f480a46ab119ddb7"}], "stats": {"total": 42, "additions": 38, "deletions": 4}, "files": [{"sha": "6bfb0c65b6ff5083d09e7eae91b07c7763cc5425", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab014eb3ae304092718018b8ae6122636b4c0b10/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab014eb3ae304092718018b8ae6122636b4c0b10/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ab014eb3ae304092718018b8ae6122636b4c0b10", "patch": "@@ -1,3 +1,11 @@\n+2017-01-19  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_simd_gen_const_vector_dup):\n+\tChange int to HOST_WIDE_INT.\n+\t* config/aarch64/aarch64-protos.h\n+\t(aarch64_simd_gen_const_vector_dup): Likewise.\n+\t* config/aarch64/aarch64-simd.md: Add copysign<mode>3.\n+\n 2017-01-19  David Malcolm  <dmalcolm@redhat.com>\n \n \t* langhooks-def.h (lhd_type_for_size): New decl."}, {"sha": "7a9a21ea51c77ad18b92d31924c420622fed3d60", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab014eb3ae304092718018b8ae6122636b4c0b10/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab014eb3ae304092718018b8ae6122636b4c0b10/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=ab014eb3ae304092718018b8ae6122636b4c0b10", "patch": "@@ -362,7 +362,7 @@ rtx aarch64_eh_return_handler_rtx (void);\n rtx aarch64_mask_from_zextract_ops (rtx, rtx);\n const char *aarch64_output_move_struct (rtx *operands);\n rtx aarch64_return_addr (int, rtx);\n-rtx aarch64_simd_gen_const_vector_dup (machine_mode, int);\n+rtx aarch64_simd_gen_const_vector_dup (machine_mode, HOST_WIDE_INT);\n bool aarch64_simd_mem_operand_p (rtx);\n rtx aarch64_simd_vect_par_cnst_half (machine_mode, bool);\n rtx aarch64_tls_get_addr (void);"}, {"sha": "b61f79a09462b8cecca7dd2cc4ac0eb4be2dbc79", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab014eb3ae304092718018b8ae6122636b4c0b10/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab014eb3ae304092718018b8ae6122636b4c0b10/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=ab014eb3ae304092718018b8ae6122636b4c0b10", "patch": "@@ -338,6 +338,24 @@\n   }\n )\n \n+(define_expand \"copysign<mode>3\"\n+  [(match_operand:VHSDF 0 \"register_operand\")\n+   (match_operand:VHSDF 1 \"register_operand\")\n+   (match_operand:VHSDF 2 \"register_operand\")]\n+  \"TARGET_FLOAT && TARGET_SIMD\"\n+{\n+  rtx v_bitmask = gen_reg_rtx (<V_cmp_result>mode);\n+  int bits = GET_MODE_UNIT_BITSIZE (<MODE>mode) - 1;\n+\n+  emit_move_insn (v_bitmask,\n+\t\t  aarch64_simd_gen_const_vector_dup (<V_cmp_result>mode,\n+\t\t\t\t\t\t     HOST_WIDE_INT_M1U << bits));\n+  emit_insn (gen_aarch64_simd_bsl<mode> (operands[0], v_bitmask,\n+\t\t\t\t\t operands[2], operands[1]));\n+  DONE;\n+}\n+)\n+\n (define_insn \"*aarch64_mul3_elt<mode>\"\n  [(set (match_operand:VMUL 0 \"register_operand\" \"=w\")\n     (mult:VMUL"}, {"sha": "4432cae6b8ddc84b00219eae884720af69dc376f", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab014eb3ae304092718018b8ae6122636b4c0b10/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab014eb3ae304092718018b8ae6122636b4c0b10/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=ab014eb3ae304092718018b8ae6122636b4c0b10", "patch": "@@ -11237,14 +11237,16 @@ aarch64_mov_operand_p (rtx x, machine_mode mode)\n \n /* Return a const_int vector of VAL.  */\n rtx\n-aarch64_simd_gen_const_vector_dup (machine_mode mode, int val)\n+aarch64_simd_gen_const_vector_dup (machine_mode mode, HOST_WIDE_INT val)\n {\n   int nunits = GET_MODE_NUNITS (mode);\n   rtvec v = rtvec_alloc (nunits);\n   int i;\n \n+  rtx cache = GEN_INT (val);\n+\n   for (i=0; i < nunits; i++)\n-    RTVEC_ELT (v, i) = GEN_INT (val);\n+    RTVEC_ELT (v, i) = cache;\n \n   return gen_rtx_CONST_VECTOR (mode, v);\n }"}, {"sha": "1a3a521187ec48579097db7a1669a767e3e2a410", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab014eb3ae304092718018b8ae6122636b4c0b10/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab014eb3ae304092718018b8ae6122636b4c0b10/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ab014eb3ae304092718018b8ae6122636b4c0b10", "patch": "@@ -1,3 +1,8 @@\n+2017-01-19  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* gcc/testsuite/lib/target-supports.exp\n+\t(check_effective_target_vect_call_copysignf): Enable for AArch64.\n+\n 2017-01-19  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR testsuite/79051"}, {"sha": "12dbf475e31933cff781c2f9e9c1cfbe2ce108bb", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab014eb3ae304092718018b8ae6122636b4c0b10/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab014eb3ae304092718018b8ae6122636b4c0b10/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=ab014eb3ae304092718018b8ae6122636b4c0b10", "patch": "@@ -6158,7 +6158,8 @@ proc check_effective_target_vect_call_copysignf { } {\n     } else {\n \tset et_vect_call_copysignf_saved($et_index) 0\n \tif { [istarget i?86-*-*] || [istarget x86_64-*-*]\n-\t     || [istarget powerpc*-*-*] } {\n+\t     || [istarget powerpc*-*-*]\n+\t     || [istarget aarch64*-*-*] } {\n \t   set et_vect_call_copysignf_saved($et_index) 1\n \t}\n     }"}]}