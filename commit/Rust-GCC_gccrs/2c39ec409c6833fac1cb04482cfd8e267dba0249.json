{"sha": "2c39ec409c6833fac1cb04482cfd8e267dba0249", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmMzOWVjNDA5YzY4MzNmYWMxY2IwNDQ4MmNmZDhlMjY3ZGJhMDI0OQ==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-10-07T20:21:09Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-10-07T20:21:09Z"}, "message": "(FASTEST_ALIGNMENT): Define as 8 for -m88110 otherwise 4.\n\n\t(CONSTANT_ALIGNMENT, DATA_ALIGNMENT): Base on FASTEST_ALIGNMENT.\n(READONLY_DATA_SECTION): Don't override svr4.h\n\t(ASM_OUTPUT_CASE_LABEL): For svr4, use .rodata.\n\nFrom-SVN: r2358", "tree": {"sha": "2b96d88110f4ab48688a70b21b1ff561a92c117e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b96d88110f4ab48688a70b21b1ff561a92c117e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c39ec409c6833fac1cb04482cfd8e267dba0249", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c39ec409c6833fac1cb04482cfd8e267dba0249", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c39ec409c6833fac1cb04482cfd8e267dba0249", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c39ec409c6833fac1cb04482cfd8e267dba0249/comments", "author": null, "committer": null, "parents": [{"sha": "a8663ab3b5995a1d13b709fe7779c3ce279e7d82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8663ab3b5995a1d13b709fe7779c3ce279e7d82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8663ab3b5995a1d13b709fe7779c3ce279e7d82"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "25c7438a4a00c56154b68d4693900a581927816f", "filename": "gcc/config/m88k/m88k.h", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c39ec409c6833fac1cb04482cfd8e267dba0249/gcc%2Fconfig%2Fm88k%2Fm88k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c39ec409c6833fac1cb04482cfd8e267dba0249/gcc%2Fconfig%2Fm88k%2Fm88k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.h?ref=2c39ec409c6833fac1cb04482cfd8e267dba0249", "patch": "@@ -209,9 +209,9 @@ extern char * reg_names[];\n /* Print subsidiary information on the compiler version in use.\n    Redefined in m88kv4.h, and m88kluna.h.  */\n #define VERSION_INFO1\t\"88open OCS/BCS, \"\n-#define VERSION_INFO2\t\"09/18/92\"\n+#define VERSION_INFO2\t\"10/07/92\"\n #define VERSION_STRING\tversion_string\n-#define\tTM_SCCS_ID\t\"@(#)m88k.h\t2.2.12.2 09/18/92 06:21:09\"\n+#define\tTM_SCCS_ID\t\"@(#)m88k.h\t2.2.13.1 10/07/92 06:31:59\"\n \n /* Run-time compilation parameters selecting different hardware subsets.  */\n \n@@ -425,16 +425,20 @@ extern char * reg_names[];\n /* No data type wants to be aligned rounder than this.  */\n #define BIGGEST_ALIGNMENT 64\n \n-/* Make strings word-aligned so strcpy from constants will be faster.  */\n+/* The best alignment to use in cases where we have a choice.  */\n+#define FASTEST_ALIGNMENT (TARGET_88100 ? 32 : 64)\n+\n+/* Make strings 4/8 byte aligned so strcpy from constants will be faster.  */\n #define CONSTANT_ALIGNMENT(EXP, ALIGN)  \\\n-  (TREE_CODE (EXP) == STRING_CST\t\\\n-   && (ALIGN) < BITS_PER_WORD ? BITS_PER_WORD : (ALIGN))\n+  ((TREE_CODE (EXP) == STRING_CST\t\\\n+    && (ALIGN) < FASTEST_ALIGNMENT)\t\\\n+   ? FASTEST_ALIGNMENT : (ALIGN))\n \n-/* Make arrays of chars word-aligned for the same reasons.  */\n+/* Make arrays of chars 4/8 byte aligned for the same reasons.  */\n #define DATA_ALIGNMENT(TYPE, ALIGN)\t\t\\\n   (TREE_CODE (TYPE) == ARRAY_TYPE\t\t\\\n    && TYPE_MODE (TREE_TYPE (TYPE)) == QImode\t\\\n-   && (ALIGN) < BITS_PER_WORD ? BITS_PER_WORD : (ALIGN))\n+   && (ALIGN) < FASTEST_ALIGNMENT ? FASTEST_ALIGNMENT : (ALIGN))\n \n /* Alignment of field after `int : 0' in a structure.\n    Ignored with PCC_BITFIELD_TYPE_MATTERS.  */\n@@ -2015,7 +2019,10 @@ enum reg_class { NO_REGS, AP_REG, XRF_REGS, GENERAL_REGS, AGRF_REGS,\n #define ASM_OUTPUT_CASE_LABEL(FILE, PREFIX, NUM, TABLE)\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     if (! CASE_VECTOR_INSNS)\t\t\t\t\t\t\\\n-      readonly_data_section ();\t\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+        readonly_data_section ();\t\t\t\t\t\\\n+        ASM_OUTPUT_ALIGN (FILE, 2);\t\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n     ASM_OUTPUT_INTERNAL_LABEL (FILE, PREFIX, NUM);\t\t\t\\\n   } while (0)\n \n@@ -2404,8 +2411,6 @@ sdata_section ()\t\t\t\t\t\t\t\\\n   INIT_SECTION_FUNCTION\t\t\t\t\t\t\t\\\n   FINI_SECTION_FUNCTION\n \n-#undef READONLY_DATA_SECTION\n-\n /* A C statement or statements to switch to the appropriate\n    section for output of DECL.  DECL is either a `VAR_DECL' node\n    or a constant of some sort.  RELOC indicates whether forming"}]}