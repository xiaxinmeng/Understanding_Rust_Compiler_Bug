{"sha": "3cb929a32af3986ad95ca511ea84d0863c29ce57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NiOTI5YTMyYWYzOTg2YWQ5NWNhNTExZWE4NGQwODYzYzI5Y2U1Nw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-05-29T22:00:53Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-05-29T22:00:53Z"}, "message": "PR libstdc++/88881 fix filesystem::symlink_status for Windows\n\nThe fix for PR 88881 only added a workaround to filesystem::status, but\nfilesystem::symlink_status is also affected by the _wstat bug and needs\nthe same workaround.\n\nThe recent change to optimize path::parent_path() means that the\nworkaround can be simplified to just use parent_path().\n\n\tPR libstdc++/88881\n\t* src/c++17/fs_ops.cc [_GLIBCXX_FILESYSTEM_IS_WINDOWS]\n\t(status(const path&, error_code&)): Use parent_path() to remove\n\ttrailing slash.\n\t(symlink_status(const path&, error_code&)): Duplicate workaround for\n\tbug in _wstat for paths with trailing slash.\n\t* testsuite/27_io/filesystem/operations/remove_all.cc: Check path\n\twith trailing slash.\n\t* testsuite/27_io/filesystem/operations/status.cc: Likewise.\n\t* testsuite/27_io/filesystem/operations/symlink_status.cc: Likewise.\n\nFrom-SVN: r271755", "tree": {"sha": "3aab7c7b08315be8684c214abba7437dce9fb60f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3aab7c7b08315be8684c214abba7437dce9fb60f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3cb929a32af3986ad95ca511ea84d0863c29ce57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cb929a32af3986ad95ca511ea84d0863c29ce57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cb929a32af3986ad95ca511ea84d0863c29ce57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cb929a32af3986ad95ca511ea84d0863c29ce57/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5ccb10ad04e5cc1c44ea4d50a501840927ad70e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5ccb10ad04e5cc1c44ea4d50a501840927ad70e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5ccb10ad04e5cc1c44ea4d50a501840927ad70e"}], "stats": {"total": 111, "additions": 97, "deletions": 14}, "files": [{"sha": "2005182e92695644bbcabfcfe9b084bdc7c23094", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cb929a32af3986ad95ca511ea84d0863c29ce57/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cb929a32af3986ad95ca511ea84d0863c29ce57/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3cb929a32af3986ad95ca511ea84d0863c29ce57", "patch": "@@ -1,5 +1,16 @@\n 2019-05-29  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/88881\n+\t* src/c++17/fs_ops.cc [_GLIBCXX_FILESYSTEM_IS_WINDOWS]\n+\t(status(const path&, error_code&)): Use parent_path() to remove\n+\ttrailing slash.\n+\t(symlink_status(const path&, error_code&)): Duplicate workaround for\n+\tbug in _wstat for paths with trailing slash.\n+\t* testsuite/27_io/filesystem/operations/remove_all.cc: Check path\n+\twith trailing slash.\n+\t* testsuite/27_io/filesystem/operations/status.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/symlink_status.cc: Likewise.\n+\n \t* src/c++17/fs_path.cc (path::parent_path()): Create whole path at\n \tonce instead of building it iteratively.\n "}, {"sha": "d8064819d3611e85cd312b69ec24ec1d859e6ea8", "filename": "libstdc++-v3/src/c++17/fs_ops.cc", "status": "modified", "additions": 33, "deletions": 14, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cb929a32af3986ad95ca511ea84d0863c29ce57/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_ops.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cb929a32af3986ad95ca511ea84d0863c29ce57/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_ops.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_ops.cc?ref=3cb929a32af3986ad95ca511ea84d0863c29ce57", "patch": "@@ -1395,23 +1395,19 @@ fs::status(const fs::path& p, error_code& ec) noexcept\n #if ! defined __MINGW64_VERSION_MAJOR || __MINGW64_VERSION_MAJOR < 6\n   // stat() fails if there's a trailing slash (PR 88881)\n   path p2;\n-  if (p.has_relative_path())\n+  if (p.has_relative_path() && !p.has_filename())\n     {\n-      wstring_view s = p.native();\n-      const auto len = s.find_last_not_of(L\"/\\\\\") + wstring_view::size_type(1);\n-      if (len != 0 && len != s.length())\n+      __try\n \t{\n-\t  __try\n-\t    {\n-\t      p2.assign(s.substr(0, len));\n-\t    }\n-\t  __catch(const bad_alloc&)\n-\t    {\n-\t      ec = std::make_error_code(std::errc::not_enough_memory);\n-\t      return status;\n-\t    }\n+\t  p2 = p.parent_path();\n \t  str = p2.c_str();\n \t}\n+      __catch(const bad_alloc&)\n+\t{\n+\t  ec = std::make_error_code(std::errc::not_enough_memory);\n+\t  return status;\n+\t}\n+      str = p2.c_str();\n     }\n #endif\n #endif\n@@ -1440,8 +1436,31 @@ fs::file_status\n fs::symlink_status(const fs::path& p, std::error_code& ec) noexcept\n {\n   file_status status;\n+  auto str = p.c_str();\n+\n+#if _GLIBCXX_FILESYSTEM_IS_WINDOWS\n+#if ! defined __MINGW64_VERSION_MAJOR || __MINGW64_VERSION_MAJOR < 6\n+  // stat() fails if there's a trailing slash (PR 88881)\n+  path p2;\n+  if (p.has_relative_path() && !p.has_filename())\n+    {\n+      __try\n+\t{\n+\t  p2 = p.parent_path();\n+\t  str = p2.c_str();\n+\t}\n+      __catch(const bad_alloc&)\n+\t{\n+\t  ec = std::make_error_code(std::errc::not_enough_memory);\n+\t  return status;\n+\t}\n+      str = p2.c_str();\n+    }\n+#endif\n+#endif\n+\n   stat_type st;\n-  if (posix::lstat(p.c_str(), &st))\n+  if (posix::lstat(str, &st))\n     {\n       int err = errno;\n       ec.assign(err, std::generic_category());"}, {"sha": "a19bac9c5f6bc4f45ca0fe42e3023df42b4b2eae", "filename": "libstdc++-v3/testsuite/27_io/filesystem/operations/remove_all.cc", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cb929a32af3986ad95ca511ea84d0863c29ce57/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fremove_all.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cb929a32af3986ad95ca511ea84d0863c29ce57/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fremove_all.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fremove_all.cc?ref=3cb929a32af3986ad95ca511ea84d0863c29ce57", "patch": "@@ -108,9 +108,42 @@ test02()\n   VERIFY( !exists(dir) );\n }\n \n+void\n+test03()\n+{\n+  // PR libstdc++/88881 symlink_status confused by trailing slash on Windows\n+  const std::error_code bad_ec = make_error_code(std::errc::invalid_argument);\n+  unsigned removed;\n+  std::error_code ec = bad_ec;\n+  const auto p = __gnu_test::nonexistent_path() / \"\"; // with trailing slash\n+\n+  create_directories(p);\n+  removed = remove_all(p, ec);\n+  VERIFY( !ec );\n+  VERIFY( removed == 1 );\n+  VERIFY( !exists(p) );\n+  create_directories(p);\n+  removed = remove_all(p);\n+  VERIFY( removed == 1 );\n+  VERIFY( !exists(p) );\n+\n+  const auto p_subs = p/\"foo/bar\";\n+  ec = bad_ec;\n+  create_directories(p_subs);\n+  removed = remove_all(p, ec);\n+  VERIFY( !ec );\n+  VERIFY( removed == 3 );\n+  VERIFY( !exists(p) );\n+  create_directories(p_subs);\n+  remove_all(p);\n+  VERIFY( removed == 3 );\n+  VERIFY( !exists(p) );\n+}\n+\n int\n main()\n {\n   test01();\n   test02();\n+  test03();\n }"}, {"sha": "b65a2f20906460f48836a8d5a1b9a66dd2d7b038", "filename": "libstdc++-v3/testsuite/27_io/filesystem/operations/status.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cb929a32af3986ad95ca511ea84d0863c29ce57/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fstatus.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cb929a32af3986ad95ca511ea84d0863c29ce57/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fstatus.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fstatus.cc?ref=3cb929a32af3986ad95ca511ea84d0863c29ce57", "patch": "@@ -93,10 +93,20 @@ test03()\n   fs::permissions(dir, fs::perms::owner_all, ec);\n }\n \n+void\n+test04()\n+{\n+  // PR libstdc++/88881\n+  fs::path p = \"./\";\n+  auto st = status(p);\n+  VERIFY( is_directory(st) );\n+}\n+\n int\n main()\n {\n   test01();\n   test02();\n   test03();\n+  test04();\n }"}, {"sha": "c097e4f2bf0632931d00420c894bb7f72d178d2b", "filename": "libstdc++-v3/testsuite/27_io/filesystem/operations/symlink_status.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cb929a32af3986ad95ca511ea84d0863c29ce57/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fsymlink_status.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cb929a32af3986ad95ca511ea84d0863c29ce57/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fsymlink_status.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fsymlink_status.cc?ref=3cb929a32af3986ad95ca511ea84d0863c29ce57", "patch": "@@ -111,10 +111,20 @@ test03()\n   fs::permissions(dir, fs::perms::owner_all, ec);\n }\n \n+void\n+test04()\n+{\n+  // PR libstdc++/88881\n+  fs::path p = \"./\";\n+  auto st = symlink_status(p);\n+  VERIFY( is_directory(st) );\n+}\n+\n int\n main()\n {\n   test01();\n   test02();\n   test03();\n+  test04();\n }"}]}