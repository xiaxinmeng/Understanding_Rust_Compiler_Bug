{"sha": "249083758d18f86be080a87d0ec8630ad58c1f30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ5MDgzNzU4ZDE4Zjg2YmUwODBhODdkMGVjODYzMGFkNThjMWYzMA==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@superh.com", "date": "2003-11-22T14:18:48Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2003-11-22T14:18:48Z"}, "message": "flow.c (update_life_info): Amend comment about when a register can become dead.\n\n\t* flow.c (update_life_info): Amend comment about when a register\n\tcan become dead.\n\nFrom-SVN: r73838", "tree": {"sha": "4cfdf829d7d0f5f2f97e1df25e84a2183686596d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cfdf829d7d0f5f2f97e1df25e84a2183686596d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/249083758d18f86be080a87d0ec8630ad58c1f30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/249083758d18f86be080a87d0ec8630ad58c1f30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/249083758d18f86be080a87d0ec8630ad58c1f30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/249083758d18f86be080a87d0ec8630ad58c1f30/comments", "author": null, "committer": null, "parents": [{"sha": "3eee102eda9cf88ca7a8e1c007c48892aedb4d9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eee102eda9cf88ca7a8e1c007c48892aedb4d9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3eee102eda9cf88ca7a8e1c007c48892aedb4d9b"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "2502b4b369710a904ee56f221883161c3433bd90", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/249083758d18f86be080a87d0ec8630ad58c1f30/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/249083758d18f86be080a87d0ec8630ad58c1f30/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=249083758d18f86be080a87d0ec8630ad58c1f30", "patch": "@@ -1,3 +1,8 @@\n+2003-11-22  J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* flow.c (update_life_info): Amend comment about when a register\n+\tcan become dead.\n+\n 2003-11-21  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* doc/.cvsignore: Delete."}, {"sha": "0dffb46f2efe2b0ecd5d80dc68ac39ab7db2c05f", "filename": "gcc/flow.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/249083758d18f86be080a87d0ec8630ad58c1f30/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/249083758d18f86be080a87d0ec8630ad58c1f30/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=249083758d18f86be080a87d0ec8630ad58c1f30", "patch": "@@ -594,6 +594,9 @@ verify_local_live_at_start (regset new_live_at_start, basic_block bb)\n    generates subregs of a multi-word pseudo, current life analysis will\n    lose the kill.  So we _can_ have a pseudo go live.  How irritating.\n \n+   It is also not true when a peephole decides that it doesn't need one\n+   or more of the inputs.\n+\n    Including PROP_REG_INFO does not properly refresh regs_ever_live\n    unless the caller resets it to zero.  */\n "}]}