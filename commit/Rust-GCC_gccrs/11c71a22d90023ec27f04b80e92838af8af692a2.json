{"sha": "11c71a22d90023ec27f04b80e92838af8af692a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFjNzFhMjJkOTAwMjNlYzI3ZjA0YjgwZTkyODM4YWY4YWY2OTJhMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-12-19T20:10:49Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-12-19T20:10:49Z"}, "message": "re PR c++/51553 (brace initialization and conversion operators)\n\n\tPR c++/51553\n\t* cp-tree.h (LOOKUP_LIST_INIT_CTOR): Rename from\n\tLOOKUP_NO_COPY_CTOR_CONVERSION.\n\t(add_list_candidates): Set it earlier.\n\t(add_candidates): Don't check explicit on ctors when it's set.\n\t(add_function_candidate): Check it even when LOOKUP_ONLYCONVERTING\n\tis set.\n\nFrom-SVN: r182496", "tree": {"sha": "1f29fff9643d552d01255418d102f7c4d9dc4eeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f29fff9643d552d01255418d102f7c4d9dc4eeb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11c71a22d90023ec27f04b80e92838af8af692a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11c71a22d90023ec27f04b80e92838af8af692a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11c71a22d90023ec27f04b80e92838af8af692a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11c71a22d90023ec27f04b80e92838af8af692a2/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "00ef7059049de2761ed8c9db8839ce3566d09cb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00ef7059049de2761ed8c9db8839ce3566d09cb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00ef7059049de2761ed8c9db8839ce3566d09cb7"}], "stats": {"total": 36, "additions": 22, "deletions": 14}, "files": [{"sha": "e5d0b4c4a5cb5c45c187b122ef7111f177ac9532", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11c71a22d90023ec27f04b80e92838af8af692a2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11c71a22d90023ec27f04b80e92838af8af692a2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=11c71a22d90023ec27f04b80e92838af8af692a2", "patch": "@@ -1,5 +1,13 @@\n 2011-12-19  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/51553\n+\t* cp-tree.h (LOOKUP_LIST_INIT_CTOR): Rename from\n+\tLOOKUP_NO_COPY_CTOR_CONVERSION.\n+\t(add_list_candidates): Set it earlier.\n+\t(add_candidates): Don't check explicit on ctors when it's set.\n+\t(add_function_candidate): Check it even when LOOKUP_ONLYCONVERTING\n+\tis set.\n+\n \tPR c++/51553\n \t* call.c (add_function_candidate): Allow conversions for the copy\n \tparm in list-initialization unless the argument is an init-list."}, {"sha": "29aed980ee154b1f3a435303d41e7400b910b872", "filename": "gcc/cp/call.c", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11c71a22d90023ec27f04b80e92838af8af692a2/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11c71a22d90023ec27f04b80e92838af8af692a2/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=11c71a22d90023ec27f04b80e92838af8af692a2", "patch": "@@ -1956,17 +1956,17 @@ add_function_candidate (struct z_candidate **candidates,\n \t     to handle move constructors and template constructors as well;\n \t     the standardese should soon be updated similarly.  */\n \t  if (ctype && i == 0 && (len-skip == 1)\n-\t      && !(flags & LOOKUP_ONLYCONVERTING)\n \t      && DECL_CONSTRUCTOR_P (fn)\n \t      && parmtype != error_mark_node\n \t      && (same_type_ignoring_top_level_qualifiers_p\n \t\t  (non_reference (parmtype), ctype)))\n \t    {\n-\t      lflags |= LOOKUP_COPY_PARM;\n+\t      if (!(flags & LOOKUP_ONLYCONVERTING))\n+\t\tlflags |= LOOKUP_COPY_PARM;\n \t      /* We allow user-defined conversions within init-lists, but\n \t\t don't list-initialize the copy parm, as that would mean\n \t\t using two levels of braces for the same type.  */\n-\t      if ((flags & LOOKUP_NO_COPY_CTOR_CONVERSION)\n+\t      if ((flags & LOOKUP_LIST_INIT_CTOR)\n \t\t  && BRACE_ENCLOSED_INITIALIZER_P (arg))\n \t\tlflags |= LOOKUP_NO_CONVERSION;\n \t    }\n@@ -3344,9 +3344,8 @@ add_list_candidates (tree fns, tree first_arg,\n \n   gcc_assert (*candidates == NULL);\n \n-  /* For list-initialization we consider explicit constructors, but\n-     give an error if one is selected.  */\n-  flags &= ~LOOKUP_ONLYCONVERTING;\n+  /* We're looking for a ctor for list-initialization.  */\n+  flags |= LOOKUP_LIST_INIT_CTOR;\n   /* And we don't allow narrowing conversions.  We also use this flag to\n      avoid the copy constructor call for copy-list-initialization.  */\n   flags |= LOOKUP_NO_NARROWING;\n@@ -3374,8 +3373,6 @@ add_list_candidates (tree fns, tree first_arg,\n   flags &= ~LOOKUP_LIST_ONLY;\n   /* We allow more user-defined conversions within an init-list.  */\n   flags &= ~LOOKUP_NO_CONVERSION;\n-  /* But not for the copy ctor.  */\n-  flags |= LOOKUP_NO_COPY_CTOR_CONVERSION;\n \n   add_candidates (fns, first_arg, args, NULL_TREE,\n \t\t  explicit_targs, template_only, conversion_path,\n@@ -4801,7 +4798,11 @@ add_candidates (tree fns, tree first_arg, const VEC(tree,gc) *args,\n       if (DECL_CONSTRUCTOR_P (fn))\n \t{\n \t  check_list_ctor = !!(flags & LOOKUP_LIST_ONLY);\n-\t  check_converting = !!(flags & LOOKUP_ONLYCONVERTING);\n+\t  /* For list-initialization we consider explicit constructors\n+\t     and complain if one is chosen.  */\n+\t  check_converting\n+\t    = ((flags & (LOOKUP_ONLYCONVERTING|LOOKUP_LIST_INIT_CTOR))\n+\t       == LOOKUP_ONLYCONVERTING);\n \t}\n       else\n \t{"}, {"sha": "633b6b43171f725c64f73e5b3b04272fb493fc28", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11c71a22d90023ec27f04b80e92838af8af692a2/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11c71a22d90023ec27f04b80e92838af8af692a2/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=11c71a22d90023ec27f04b80e92838af8af692a2", "patch": "@@ -4384,11 +4384,10 @@ enum overload_flags { NO_SPECIAL = 0, DTOR_FLAG, TYPENAME_FLAG };\n #define LOOKUP_PREFER_RVALUE (LOOKUP_HIDDEN << 1)\n /* We're inside an init-list, so narrowing conversions are ill-formed.  */\n #define LOOKUP_NO_NARROWING (LOOKUP_PREFER_RVALUE << 1)\n-/* Avoid user-defined conversions for the first parameter of a copy\n-   constructor (or move constructor).  */\n-#define LOOKUP_NO_COPY_CTOR_CONVERSION (LOOKUP_NO_NARROWING << 1)\n+/* We're looking up a constructor for list-initialization.  */\n+#define LOOKUP_LIST_INIT_CTOR (LOOKUP_NO_NARROWING << 1)\n /* This is the first parameter of a copy constructor.  */\n-#define LOOKUP_COPY_PARM (LOOKUP_NO_COPY_CTOR_CONVERSION << 1)\n+#define LOOKUP_COPY_PARM (LOOKUP_LIST_INIT_CTOR << 1)\n /* We only want to consider list constructors.  */\n #define LOOKUP_LIST_ONLY (LOOKUP_COPY_PARM << 1)\n /* Return after determining which function to call and checking access."}, {"sha": "bcf1658074d2458b198d8c6fc993cbaab2846054", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist64.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11c71a22d90023ec27f04b80e92838af8af692a2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist64.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11c71a22d90023ec27f04b80e92838af8af692a2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist64.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist64.C?ref=11c71a22d90023ec27f04b80e92838af8af692a2", "patch": "@@ -22,7 +22,7 @@ X aa = Y();\n X b{ Y() };\n X bb(Y());\n \n-X c = { Z() };  // { dg-error \"\" \"\" { xfail *-*-* } }\n+X c = { Z() };  // { dg-error \"\" }\n X cc = Z();\t// { dg-error \"\" }\n \n X d{ Z() };"}]}