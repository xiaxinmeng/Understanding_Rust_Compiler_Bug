{"sha": "95730f5e3596777f1d1cffbb6da565d807bda365", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU3MzBmNWUzNTk2Nzc3ZjFkMWNmZmJiNmRhNTY1ZDgwN2JkYTM2NQ==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@il.ibm.com", "date": "2008-06-26T06:31:16Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2008-06-26T06:31:16Z"}, "message": "* testsuite/lib/target-supports.exp\n\t(check_effective_target_vect_cmdline_needed): Add SPU to the list\n\tof targets that do not need command line argument to enable SIMD.\n\nFrom-SVN: r137142", "tree": {"sha": "25aecf9096fadf2950de813b4ab2d16459b02609", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25aecf9096fadf2950de813b4ab2d16459b02609"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95730f5e3596777f1d1cffbb6da565d807bda365", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95730f5e3596777f1d1cffbb6da565d807bda365", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95730f5e3596777f1d1cffbb6da565d807bda365", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95730f5e3596777f1d1cffbb6da565d807bda365/comments", "author": {"login": "irar2", "id": 16818592, "node_id": "MDQ6VXNlcjE2ODE4NTky", "avatar_url": "https://avatars.githubusercontent.com/u/16818592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irar2", "html_url": "https://github.com/irar2", "followers_url": "https://api.github.com/users/irar2/followers", "following_url": "https://api.github.com/users/irar2/following{/other_user}", "gists_url": "https://api.github.com/users/irar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/irar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irar2/subscriptions", "organizations_url": "https://api.github.com/users/irar2/orgs", "repos_url": "https://api.github.com/users/irar2/repos", "events_url": "https://api.github.com/users/irar2/events{/privacy}", "received_events_url": "https://api.github.com/users/irar2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e4371462d33d73485ddd7ea29ab86cbb794afa49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4371462d33d73485ddd7ea29ab86cbb794afa49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4371462d33d73485ddd7ea29ab86cbb794afa49"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "d2df6992b1b5d714506bc16b85ddb9d380c69462", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95730f5e3596777f1d1cffbb6da565d807bda365/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95730f5e3596777f1d1cffbb6da565d807bda365/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=95730f5e3596777f1d1cffbb6da565d807bda365", "patch": "@@ -1,3 +1,9 @@\n+2008-06-26  Ira Rosen  <irar@il.ibm.com>\n+\n+\t* testsuite/lib/target-supports.exp\n+\t(check_effective_target_vect_cmdline_needed): Add SPU to the list\n+\tof targets that do not need command line argument to enable SIMD.\n+\n 2008-06-26  Ira Rosen  <irar@il.ibm.com>\n \n \t* gcc.dg/vect/vect.exp: Run tests with -funroll-loops for SPU in case"}, {"sha": "ecca42118b2ce9a50b88305476d78fc073e4638e", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95730f5e3596777f1d1cffbb6da565d807bda365/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95730f5e3596777f1d1cffbb6da565d807bda365/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=95730f5e3596777f1d1cffbb6da565d807bda365", "patch": "@@ -1130,7 +1130,8 @@ proc check_effective_target_vect_cmdline_needed { } {\n \t\t && [check_effective_target_lp64])\n \t     || ([istarget powerpc*-*-*]\n \t\t && ([check_effective_target_powerpc_spe]\n-\t\t     || [check_effective_target_powerpc_altivec]))} {\n+\t\t     || [check_effective_target_powerpc_altivec]))\n+             || [istarget spu-*-*] } {\n \t   set et_vect_cmdline_needed_saved 0\n \t}\n     }"}]}