{"sha": "73e6dac17f3fb27a10f805faacc61875c66f35c4", "node_id": "C_kwDOANBUbNoAKDczZTZkYWMxN2YzZmIyN2ExMGY4MDVmYWFjYzYxODc1YzY2ZjM1YzQ", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2023-02-13T12:27:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-13T12:27:06Z"}, "message": "Merge #1847\n\n1847: Merge upstream, last commit before 2023-01-31 GCC/Rust upstreaming r=tschwinge a=tschwinge\n\n\n\nCo-authored-by: Andrea Corallo <andrea.corallo@arm.com>\nCo-authored-by: Richard Biener <rguenther@suse.de>\nCo-authored-by: Srinath Parvathaneni <srinath.parvathaneni@arm.com>\nCo-authored-by: Iain Sandoe <iain@sandoe.co.uk>\nCo-authored-by: Fran\u00e7ois Dumont <fdumont@gcc.gnu.org>\nCo-authored-by: Jason Merrill <jason@redhat.com>\nCo-authored-by: Harald Anlauf <anlauf@gmx.de>\nCo-authored-by: Marek Polacek <polacek@redhat.com>\nCo-authored-by: GCC Administrator <gccadmin@gcc.gnu.org>\nCo-authored-by: Lulu Cheng <chenglulu@loongson.cn>\nCo-authored-by: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>\nCo-authored-by: Jakub Jelinek <jakub@redhat.com>\nCo-authored-by: Eric Biggers <ebiggers@google.com>\nCo-authored-by: Xianmiao Qu <cooper.qu@linux.alibaba.com>\nCo-authored-by: Andre Vieira <andre.simoesdiasvieira@arm.com>", "tree": {"sha": "c08811d678831a0dcb1d957694f52c3bc9318b3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c08811d678831a0dcb1d957694f52c3bc9318b3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73e6dac17f3fb27a10f805faacc61875c66f35c4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj6iyaCRBK7hj4Ov3rIwAA4QMIACq4F8y0NeZua5SDA3UGbyZX\n5SfjSMZh8q9kPORkoekBCyQg/8fasZaeZ/UwRpwzgjJrwLXpk7p1HFlhICv39RuZ\nVvE7QQyYG/XOj8jzSdBRS7uNZ9hQXn5pXMVhbLRbT5QkiggInSAm+fbPmlhFBtm8\nBSwYSBZU78Yoa2S3Lbch1FUMZJmbacF4Yv/0GIyD9on7BG0cUdaWBmVcFZ6Hi3cX\njrhVmErvfEScsMyloUirsRkTSE19SRgB2nyaBjsNEKAA3oynhO2mOMulpjvhJVYh\nr0VcZNDuuYCDye8XfrQeSwhyYHH31nq8Ipzv0kvwBaN+muQxFJN7PYtKMqdR5gY=\n=0IUk\n-----END PGP SIGNATURE-----\n", "payload": "tree c08811d678831a0dcb1d957694f52c3bc9318b3c\nparent 59d4ee6cc1b14ddc01d062a41bec364e959793c7\nparent a7bd5c91f8a55210a0b292b407549a395a406f23\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1676291226 +0000\ncommitter GitHub <noreply@github.com> 1676291226 +0000\n\nMerge #1847\n\n1847: Merge upstream, last commit before 2023-01-31 GCC/Rust upstreaming r=tschwinge a=tschwinge\n\n\n\nCo-authored-by: Andrea Corallo <andrea.corallo@arm.com>\nCo-authored-by: Richard Biener <rguenther@suse.de>\nCo-authored-by: Srinath Parvathaneni <srinath.parvathaneni@arm.com>\nCo-authored-by: Iain Sandoe <iain@sandoe.co.uk>\nCo-authored-by: Fran\u00e7ois Dumont <fdumont@gcc.gnu.org>\nCo-authored-by: Jason Merrill <jason@redhat.com>\nCo-authored-by: Harald Anlauf <anlauf@gmx.de>\nCo-authored-by: Marek Polacek <polacek@redhat.com>\nCo-authored-by: GCC Administrator <gccadmin@gcc.gnu.org>\nCo-authored-by: Lulu Cheng <chenglulu@loongson.cn>\nCo-authored-by: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>\nCo-authored-by: Jakub Jelinek <jakub@redhat.com>\nCo-authored-by: Eric Biggers <ebiggers@google.com>\nCo-authored-by: Xianmiao Qu <cooper.qu@linux.alibaba.com>\nCo-authored-by: Andre Vieira <andre.simoesdiasvieira@arm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73e6dac17f3fb27a10f805faacc61875c66f35c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73e6dac17f3fb27a10f805faacc61875c66f35c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73e6dac17f3fb27a10f805faacc61875c66f35c4/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59d4ee6cc1b14ddc01d062a41bec364e959793c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59d4ee6cc1b14ddc01d062a41bec364e959793c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59d4ee6cc1b14ddc01d062a41bec364e959793c7"}, {"sha": "a7bd5c91f8a55210a0b292b407549a395a406f23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7bd5c91f8a55210a0b292b407549a395a406f23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7bd5c91f8a55210a0b292b407549a395a406f23"}], "stats": {"total": 996980, "additions": 886308, "deletions": 110672}, "files": [{"sha": "5a2b20ad6858896c3946b9b0773eef0c31048142", "filename": ".github/bors_log_expected_warnings", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/.github%2Fbors_log_expected_warnings", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/.github%2Fbors_log_expected_warnings", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/.github%2Fbors_log_expected_warnings?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -26,11 +26,11 @@\n ../../gcc/analyzer/call-summary.cc:123:26: warning: unknown conversion type character \u2018E\u2019 in format [-Wformat=]\n ../../gcc/analyzer/call-summary.cc:99:32: warning: too many arguments for format [-Wformat-extra-args]\n ../../gcc/analyzer/call-summary.cc:99:40: warning: unknown conversion type character \u2018E\u2019 in format [-Wformat=]\n-../../gcc/analyzer/diagnostic-manager.cc:774:20: warning: too many arguments for format [-Wformat-extra-args]\n-../../gcc/analyzer/diagnostic-manager.cc:774:28: warning: unknown conversion type character \u2018E\u2019 in format [-Wformat=]\n+../../gcc/analyzer/diagnostic-manager.cc:790:20: warning: too many arguments for format [-Wformat-extra-args]\n+../../gcc/analyzer/diagnostic-manager.cc:790:28: warning: unknown conversion type character \u2018E\u2019 in format [-Wformat=]\n ../../gcc/analyzer/program-state.cc:1398:15: warning: format not a string literal and no format arguments [-Wformat-security]\n-../../gcc/c-family/c-common.cc:6595:14: warning: format not a string literal and no format arguments [-Wformat-security]\n-../../gcc/c-family/c-common.cc:6599:16: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../gcc/c-family/c-common.cc:6596:14: warning: format not a string literal and no format arguments [-Wformat-security]\n+../../gcc/c-family/c-common.cc:6600:16: warning: format not a string literal and no format arguments [-Wformat-security]\n ../../gcc/c/c-convert.cc:84:13: warning: format not a string literal and no format arguments [-Wformat-security]\n ../../gcc/c/c-typeck.cc:12254:16: warning: format not a string literal and no format arguments [-Wformat-security]\n ../../gcc/c/c-typeck.cc:3808:17: warning: format not a string literal and no format arguments [-Wformat-security]\n@@ -41,11 +41,11 @@\n ../../gcc/diagnostic.cc:2237:15: warning: format not a string literal and no format arguments [-Wformat-security]\n ../../gcc/expmed.cc:1838:45: warning: \u2018*(unsigned int*)((char*)&imode + offsetof(scalar_int_mode, scalar_int_mode::m_mode))\u2019 may be used uninitialized in this function [-Wmaybe-uninitialized]\n ../../gcc/fold-const.cc:313:13: warning: format not a string literal and no format arguments [-Wformat-security]\n-../../gcc/gcc.cc:10516:12: warning: ignoring return value of \u2018ssize_t read(int, void*, size_t)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n-../../gcc/gcc.cc:7746:9: warning: ignoring return value of \u2018ssize_t write(int, const void*, size_t)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n-../../gcc/gcc.cc:7749:13: warning: ignoring return value of \u2018ssize_t write(int, const void*, size_t)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n-../../gcc/gcc.cc:7750:13: warning: ignoring return value of \u2018ssize_t write(int, const void*, size_t)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n-../../gcc/gcc.cc:7752:9: warning: ignoring return value of \u2018ssize_t write(int, const void*, size_t)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n+../../gcc/gcc.cc:10519:12: warning: ignoring return value of \u2018ssize_t read(int, void*, size_t)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n+../../gcc/gcc.cc:7749:9: warning: ignoring return value of \u2018ssize_t write(int, const void*, size_t)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n+../../gcc/gcc.cc:7752:13: warning: ignoring return value of \u2018ssize_t write(int, const void*, size_t)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n+../../gcc/gcc.cc:7753:13: warning: ignoring return value of \u2018ssize_t write(int, const void*, size_t)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n+../../gcc/gcc.cc:7755:9: warning: ignoring return value of \u2018ssize_t write(int, const void*, size_t)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n ../../gcc/genhooks.cc:112:17: warning: ignoring return value of \u2018int fscanf(FILE*, const char*, ...)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n ../../gcc/genhooks.cc:121:14: warning: ignoring return value of \u2018int fscanf(FILE*, const char*, ...)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n ../../gcc/genhooks.cc:174:14: warning: ignoring return value of \u2018int fscanf(FILE*, const char*, ...)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n@@ -55,9 +55,9 @@\n ../../gcc/lto-wrapper.cc:1147:8: warning: ignoring return value of \u2018ssize_t read(int, void*, size_t)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n ../../gcc/lto-wrapper.cc:1365:10: warning: format not a string literal and no format arguments [-Wformat-security]\n ../../gcc/lto-wrapper.cc:1957:23: warning: format not a string literal and no format arguments [-Wformat-security]\n-../../gcc/lto/lto-common.cc:2076:10: warning: ignoring return value of \u2018int fscanf(FILE*, const char*, ...)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n-../../gcc/lto/lto-common.cc:2078:9: warning: ignoring return value of \u2018size_t fread(void*, size_t, size_t, FILE*)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n-../../gcc/lto/lto-common.cc:2098:10: warning: ignoring return value of \u2018int fscanf(FILE*, const char*, ...)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n+../../gcc/lto/lto-common.cc:2077:10: warning: ignoring return value of \u2018int fscanf(FILE*, const char*, ...)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n+../../gcc/lto/lto-common.cc:2079:9: warning: ignoring return value of \u2018size_t fread(void*, size_t, size_t, FILE*)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n+../../gcc/lto/lto-common.cc:2099:10: warning: ignoring return value of \u2018int fscanf(FILE*, const char*, ...)\u2019 declared with attribute \u2018warn_unused_result\u2019 [-Wunused-result]\n ../../gcc/tree-ssa-sccvn.cc:280:21: warning: format not a string literal and no format arguments [-Wformat-security]\n ../../libcpp/expr.cc:821:35: warning: format not a string literal and no format arguments [-Wformat-security]\n ../../libcpp/expr.cc:824:38: warning: format not a string literal and no format arguments [-Wformat-security]\n@@ -87,4 +87,4 @@ gengtype-lex.cc:357:15: warning: this statement may fall through [-Wimplicit-fal\n gengtype-lex.cc:357:15: warning: this statement may fall through [-Wimplicit-fallthrough=]\n gengtype-lex.cc:357:15: warning: this statement may fall through [-Wimplicit-fallthrough=]\n gengtype-lex.cc:357:15: warning: this statement may fall through [-Wimplicit-fallthrough=]\n-libtool: install: warning: remember to run `libtool --finish /usr/local/libexec/gcc/x86_64-pc-linux-gnu/13.0.0'\n+libtool: install: warning: remember to run `libtool --finish /usr/local/libexec/gcc/x86_64-pc-linux-gnu/13.0.1'"}, {"sha": "e0671ebaf88e0352a255200c6db41dd048927795", "filename": "ChangeLog", "status": "modified", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,3 +1,62 @@\n+2023-01-10  Philip Herron  <herron.philip@googlemail.com>\n+\n+\t* MAINTAINERS: Add Philip Herron as Rust front-end maintainer\n+\n+2023-01-06  Cl\u00e9ment Chigot  <chigot@adacore.com>\n+\n+\t* configure.ac: Skip GMP and MPFR when --disable-gdb is\n+\tprovided.\n+\t* configure: Regenerate.\n+\n+2023-01-04  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* MAINTAINERS: Add Gaius Mulley as Modula-2 front-end maintainer.\n+\n+2022-12-31  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* Makefile.def: Do not build shared libffi.\n+\t* Makefile.in: Regenerate.\n+\n+2022-12-21  Andrew Pinski  <apinski@marvell.com>\n+\n+\t* Makefile.def: Add configure-gdb dependencies\n+\ton all-gmp and all-mpfr.\n+\t* configure.ac: Split out MPC checking from MPFR.\n+\tRequire GMP and MPFR if the gdb directory exist.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\n+2022-12-14  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* configure.ac (target_libraries): Add target-libgm2.\n+\tAdd NCN_STRICT_CHECK_TARGET_TOOLS entry for gm2.\n+\tAdd GCC_TARGET_TOOL entry for gm2.\n+\t(compare_exclusions): Add gcc/m2/gm2-compiler/M2Version,\n+\tgcc/m2/gm2-compiler-boot/SYSTEM and gcc/m2/gm2version.\n+\t* Makefile.def (target_modules): Add libgm2.\n+\t(flags_to_pass): Add GM2_FOR_TARGET, GM2FLAGS_FOR_TARGET.\n+\t(dependencies): Add all-target-libgm2 and on=all-target-libatomic.\n+\t(languages): Add entry for language=m2 with gcc-check-target=check-m2\n+\tand lib-check-target=check-target-libgm2.\n+\t* Makefile.tpl (BUILD_EXPORTS): Add definition for GM2 and GM2FLAGS.\n+\t(HOST_EXPORTS): Add definition for GM2.\n+\t(BASE_TARGET_EXPORTS): Add definition for GM2.\n+\t(GM2_FOR_BUILD): Defined.\n+\t(GM2FLAGS): Defined.\n+\t(GM2_FOR_TARGET): Defined.\n+\t(GM2FLAGS_FOR_TARGET): Defined.\n+\t(EXTRA_HOST_FLAGS): Defined.\n+\t(POSTSTAGE1_FLAGS_TO_PASS): Add GM2 and GM2_FOR_BUILD.\n+\t(EXTRA_TARGET_FLAGS): Add GM2 and GM2FLAGS.\n+\t(EXTRA_GCC_FLAGS): Add GM2_FOR_TARGET.\n+\t* configure: Rebuilt.\n+\t* Makefile.in: Rebuilt.\n+\n+2022-12-13  Philip Herron  <philip.herron@embecosm.com>\n+\n+\t* Makefile.def: Add Rust language.\n+\t* Makefile.in: Regenerate via autogen.\n+\n 2022-12-09  Martin Liska  <mliska@suse.cz>\n \n \t* MAINTAINERS: Fix spacing."}, {"sha": "18edc86df67cedb5cc86506db0622bc15138c19e", "filename": "MAINTAINERS", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/MAINTAINERS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/MAINTAINERS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/MAINTAINERS?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -163,9 +163,11 @@ c++\t\t\tJason Merrill\t\t<jason@redhat.com>\n c++\t\t\tNathan Sidwell\t\t<nathan@acm.org>\n D front end\t\tIain Buclaw\t\t<ibuclaw@gdcproject.org>\n go\t\t\tIan Lance Taylor\t<ian@airs.com>\n+Modula-2 front end\tGaius Mulley\t\t<gaiusmod2@gmail.com>\n objective-c/c++\t\tMike Stump\t\t<mikestump@comcast.net>\n objective-c/c++\t\tIain Sandoe\t\t<iain@sandoe.co.uk>\n Rust\t\t\tArthur Cohen\t\t<arthur.cohen@embecosm.com>\n+Rust\t\t\tPhilip Herron\t\t<herron.philip@googlemail.com>\n \n \t\t\tVarious Maintainers\n "}, {"sha": "35e994eb77efcc4d09afde8c9473216703623a2e", "filename": "Makefile.def", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -181,10 +181,12 @@ target_modules = { module= libtermcap; no_check=true;\n                    missing=maintainer-clean; };\n target_modules = { module= winsup; };\n target_modules = { module= libgloss; no_check=true; };\n-target_modules = { module= libffi; no_install=true; };\n+target_modules = { module= libffi; no_install=true;\n+                   extra_configure_flags='--disable-shared --with-pic'; };\n target_modules = { module= zlib; bootstrap=true; };\n target_modules = { module= rda; };\n target_modules = { module= libada; };\n+target_modules = { module= libgm2; lib_path=.libs; };\n target_modules = { module= libgomp; bootstrap= true; lib_path=.libs; };\n target_modules = { module= libitm; lib_path=.libs; };\n target_modules = { module= libatomic; bootstrap=true; lib_path=.libs; };\n@@ -307,6 +309,8 @@ flags_to_pass = { flag= GOC_FOR_TARGET ; };\n flags_to_pass = { flag= GOCFLAGS_FOR_TARGET ; };\n flags_to_pass = { flag= GDC_FOR_TARGET ; };\n flags_to_pass = { flag= GDCFLAGS_FOR_TARGET ; };\n+flags_to_pass = { flag= GM2_FOR_TARGET ; };\n+flags_to_pass = { flag= GM2FLAGS_FOR_TARGET ; };\n flags_to_pass = { flag= LD_FOR_TARGET ; };\n flags_to_pass = { flag= LIPO_FOR_TARGET ; };\n flags_to_pass = { flag= LDFLAGS_FOR_TARGET ; };\n@@ -412,6 +416,8 @@ dependencies = { module=configure-isl; on=all-gmp; };\n dependencies = { module=all-intl; on=all-libiconv; };\n \n // Host modules specific to gdb.\n+dependencies = { module=configure-gdb; on=all-gmp; };\n+dependencies = { module=configure-gdb; on=all-mpfr; };\n dependencies = { module=configure-gdb; on=all-intl; };\n dependencies = { module=configure-gdb; on=configure-sim; };\n dependencies = { module=configure-gdb; on=all-bfd; };\n@@ -618,6 +624,8 @@ dependencies = { module=configure-target-libgo; on=all-target-libstdc++-v3; };\n dependencies = { module=all-target-libgo; on=all-target-libbacktrace; };\n dependencies = { module=all-target-libgo; on=all-target-libffi; };\n dependencies = { module=all-target-libgo; on=all-target-libatomic; };\n+dependencies = { module=configure-target-libgm2; on=all-target-libstdc++-v3; };\n+dependencies = { module=all-target-libgm2; on=all-target-libatomic; };\n dependencies = { module=configure-target-libphobos; on=configure-target-libbacktrace; };\n dependencies = { module=configure-target-libphobos; on=configure-target-zlib; };\n dependencies = { module=all-target-libphobos; on=all-target-libbacktrace; };\n@@ -673,6 +681,8 @@ languages = { language=obj-c++;\tgcc-check-target=check-obj-c++; };\n languages = { language=go;\tgcc-check-target=check-go;\n \t\t\t\tlib-check-target=check-target-libgo;\n \t\t\t\tlib-check-target=check-gotools; };\n+languages = { language=m2;\tgcc-check-target=check-m2;\n+\t\t\t\tlib-check-target=check-target-libgm2; };\n languages = { language=d;\tgcc-check-target=check-d;\n \t\t\t\tlib-check-target=check-target-libphobos; };\n languages = { language=jit;\tgcc-check-target=check-jit; };"}, {"sha": "06a9398e172212a21a7ec540a0cf196dbd268cc7", "filename": "Makefile.in", "status": "modified", "additions": 542, "deletions": 2, "changes": 544, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -163,6 +163,8 @@ BUILD_EXPORTS = \\\n \tGOCFLAGS=\"$(GOCFLAGS_FOR_BUILD)\"; export GOCFLAGS; \\\n \tGDC=\"$(GDC_FOR_BUILD)\"; export GDC; \\\n \tGDCFLAGS=\"$(GDCFLAGS_FOR_BUILD)\"; export GDCFLAGS; \\\n+\tGM2=\"$(GM2_FOR_BUILD)\"; export GM2; \\\n+\tGM2FLAGS=\"$(GM2FLAGS_FOR_BUILD)\"; export GM2FLAGS; \\\n \tDLLTOOL=\"$(DLLTOOL_FOR_BUILD)\"; export DLLTOOL; \\\n \tDSYMUTIL=\"$(DSYMUTIL_FOR_BUILD)\"; export DSYMUTIL; \\\n \tLD=\"$(LD_FOR_BUILD)\"; export LD; \\\n@@ -201,6 +203,7 @@ HOST_EXPORTS = \\\n \tGFORTRAN=\"$(GFORTRAN)\"; export GFORTRAN; \\\n \tGOC=\"$(GOC)\"; export GOC; \\\n \tGDC=\"$(GDC)\"; export GDC; \\\n+\tGM2=\"$(GM2)\"; export GM2; \\\n \tAR=\"$(AR)\"; export AR; \\\n \tAS=\"$(AS)\"; export AS; \\\n \tCC_FOR_BUILD=\"$(CC_FOR_BUILD)\"; export CC_FOR_BUILD; \\\n@@ -304,6 +307,7 @@ BASE_TARGET_EXPORTS = \\\n \tGFORTRAN=\"$(GFORTRAN_FOR_TARGET) $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export GFORTRAN; \\\n \tGOC=\"$(GOC_FOR_TARGET) $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export GOC; \\\n \tGDC=\"$(GDC_FOR_TARGET) $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export GDC; \\\n+\tGM2=\"$(GM2_FOR_TARGET) $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export GM2; \\\n \tDLLTOOL=\"$(DLLTOOL_FOR_TARGET)\"; export DLLTOOL; \\\n \tDSYMUTIL=\"$(DSYMUTIL_FOR_TARGET)\"; export DSYMUTIL; \\\n \tLD=\"$(COMPILER_LD_FOR_TARGET)\"; export LD; \\\n@@ -370,6 +374,7 @@ DSYMUTIL_FOR_BUILD = @DSYMUTIL_FOR_BUILD@\n GFORTRAN_FOR_BUILD = @GFORTRAN_FOR_BUILD@\n GOC_FOR_BUILD = @GOC_FOR_BUILD@\n GDC_FOR_BUILD = @GDC_FOR_BUILD@\n+GM2_FOR_BUILD = @GM2_FOR_BUILD@\n LDFLAGS_FOR_BUILD = @LDFLAGS_FOR_BUILD@\n LD_FOR_BUILD = @LD_FOR_BUILD@\n NM_FOR_BUILD = @NM_FOR_BUILD@\n@@ -440,6 +445,7 @@ CXXFLAGS = @CXXFLAGS@\n LIBCXXFLAGS = $(CXXFLAGS) -fno-implicit-templates\n GOCFLAGS = $(CFLAGS)\n GDCFLAGS = $(CFLAGS)\n+GM2FLAGS = $(CFLAGS)\n \n # Pass additional PGO and LTO compiler options to the PGO build.\n BUILD_CFLAGS = $(PGO_BUILD_CFLAGS) $(PGO_BUILD_LTO_CFLAGS)\n@@ -655,6 +661,7 @@ RAW_CXX_FOR_TARGET=$(STAGE_CC_WRAPPER) @RAW_CXX_FOR_TARGET@\n GFORTRAN_FOR_TARGET=$(STAGE_CC_WRAPPER) @GFORTRAN_FOR_TARGET@\n GOC_FOR_TARGET=$(STAGE_CC_WRAPPER) @GOC_FOR_TARGET@\n GDC_FOR_TARGET=$(STAGE_CC_WRAPPER) @GDC_FOR_TARGET@\n+GM2_FOR_TARGET=$(STAGE_CC_WRAPPER) @GM2_FOR_TARGET@\n DLLTOOL_FOR_TARGET=@DLLTOOL_FOR_TARGET@\n DSYMUTIL_FOR_TARGET=@DSYMUTIL_FOR_TARGET@\n LD_FOR_TARGET=@LD_FOR_TARGET@\n@@ -680,6 +687,7 @@ CXXFLAGS_FOR_TARGET = @CXXFLAGS_FOR_TARGET@\n LIBCFLAGS_FOR_TARGET = $(CFLAGS_FOR_TARGET)\n LIBCXXFLAGS_FOR_TARGET = $(CXXFLAGS_FOR_TARGET) -fno-implicit-templates\n LDFLAGS_FOR_TARGET = @LDFLAGS_FOR_TARGET@\n+GM2FLAGS_FOR_TARGET = -O2 -g\n GOCFLAGS_FOR_TARGET = -O2 -g\n GDCFLAGS_FOR_TARGET = -O2 -g\n \n@@ -706,7 +714,7 @@ all:\n \n # This is the list of directories that may be needed in RPATH_ENVVAR\n # so that programs built for the target machine work.\n-TARGET_LIB_PATH = $(TARGET_LIB_PATH_libstdc++-v3)$(TARGET_LIB_PATH_libsanitizer)$(TARGET_LIB_PATH_libvtv)$(TARGET_LIB_PATH_libssp)$(TARGET_LIB_PATH_libphobos)$(TARGET_LIB_PATH_libgomp)$(TARGET_LIB_PATH_libitm)$(TARGET_LIB_PATH_libatomic)$(HOST_LIB_PATH_gcc)\n+TARGET_LIB_PATH = $(TARGET_LIB_PATH_libstdc++-v3)$(TARGET_LIB_PATH_libsanitizer)$(TARGET_LIB_PATH_libvtv)$(TARGET_LIB_PATH_libssp)$(TARGET_LIB_PATH_libphobos)$(TARGET_LIB_PATH_libgm2)$(TARGET_LIB_PATH_libgomp)$(TARGET_LIB_PATH_libitm)$(TARGET_LIB_PATH_libatomic)$(HOST_LIB_PATH_gcc)\n \n @if target-libstdc++-v3\n TARGET_LIB_PATH_libstdc++-v3 = $$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs:\n@@ -728,6 +736,10 @@ TARGET_LIB_PATH_libssp = $$r/$(TARGET_SUBDIR)/libssp/.libs:\n TARGET_LIB_PATH_libphobos = $$r/$(TARGET_SUBDIR)/libphobos/src/.libs:\n @endif target-libphobos\n \n+@if target-libgm2\n+TARGET_LIB_PATH_libgm2 = $$r/$(TARGET_SUBDIR)/libgm2/.libs:\n+@endif target-libgm2\n+\n @if target-libgomp\n TARGET_LIB_PATH_libgomp = $$r/$(TARGET_SUBDIR)/libgomp/.libs:\n @endif target-libgomp\n@@ -873,6 +885,8 @@ BASE_FLAGS_TO_PASS = \\\n \t\"GOCFLAGS_FOR_TARGET=$(GOCFLAGS_FOR_TARGET)\" \\\n \t\"GDC_FOR_TARGET=$(GDC_FOR_TARGET)\" \\\n \t\"GDCFLAGS_FOR_TARGET=$(GDCFLAGS_FOR_TARGET)\" \\\n+\t\"GM2_FOR_TARGET=$(GM2_FOR_TARGET)\" \\\n+\t\"GM2FLAGS_FOR_TARGET=$(GM2FLAGS_FOR_TARGET)\" \\\n \t\"LD_FOR_TARGET=$(LD_FOR_TARGET)\" \\\n \t\"LIPO_FOR_TARGET=$(LIPO_FOR_TARGET)\" \\\n \t\"LDFLAGS_FOR_TARGET=$(LDFLAGS_FOR_TARGET)\" \\\n@@ -946,6 +960,7 @@ EXTRA_HOST_FLAGS = \\\n \t'GFORTRAN=$(GFORTRAN)' \\\n \t'GOC=$(GOC)' \\\n \t'GDC=$(GDC)' \\\n+\t'GM2=$(GM2)' \\\n \t'LD=$(LD)' \\\n \t'LIPO=$(LIPO)' \\\n \t'NM=$(NM)' \\\n@@ -972,6 +987,7 @@ POSTSTAGE1_FLAGS_TO_PASS = \\\n \tCC=\"$${CC}\" CC_FOR_BUILD=\"$${CC_FOR_BUILD}\" \\\n \tCXX=\"$${CXX}\" CXX_FOR_BUILD=\"$${CXX_FOR_BUILD}\" \\\n \tGDC=\"$${GDC}\" GDC_FOR_BUILD=\"$${GDC_FOR_BUILD}\" \\\n+\tGM2=\"$${GM2}\" GM2_FOR_BUILD=\"$${GM2_FOR_BUILD}\" \\\n \tGNATBIND=\"$${GNATBIND}\" \\\n \tLDFLAGS=\"$${LDFLAGS}\" \\\n \tHOST_LIBS=\"$${HOST_LIBS}\" \\\n@@ -1007,6 +1023,8 @@ EXTRA_TARGET_FLAGS = \\\n \t'GOCFLAGS=$$(GOCFLAGS_FOR_TARGET)' \\\n \t'GDC=$$(GDC_FOR_TARGET) $$(XGCC_FLAGS_FOR_TARGET) $$(TFLAGS)' \\\n \t'GDCFLAGS=$$(GDCFLAGS_FOR_TARGET)' \\\n+\t'GM2=$$(GM2_FOR_TARGET) $$(XGCC_FLAGS_FOR_TARGET) $$(TFLAGS)' \\\n+\t'GM2FLAGS=$$(GM2FLAGS_FOR_TARGET)' \\\n \t'LD=$(COMPILER_LD_FOR_TARGET)' \\\n \t'LDFLAGS=$$(LDFLAGS_FOR_TARGET)' \\\n \t'LIBCFLAGS=$$(LIBCFLAGS_FOR_TARGET)' \\\n@@ -1033,6 +1051,7 @@ TARGET_FLAGS_TO_PASS = $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)\n # cross-building scheme.\n EXTRA_GCC_FLAGS = \\\n \t\"GCC_FOR_TARGET=$(GCC_FOR_TARGET) $$TFLAGS\" \\\n+\t\"GM2_FOR_TARGET=$(GM2_FOR_TARGET) $$TFLAGS\" \\\n \t\"`echo 'STMP_FIXPROTO=$(STMP_FIXPROTO)' | sed -e s'/[^=][^=]*=$$/XFOO=/'`\" \\\n \t\"`echo 'LIMITS_H_TEST=$(LIMITS_H_TEST)' | sed -e s'/[^=][^=]*=$$/XFOO=/'`\"\n \n@@ -1120,6 +1139,7 @@ configure-target:  \\\n     maybe-configure-target-zlib \\\n     maybe-configure-target-rda \\\n     maybe-configure-target-libada \\\n+    maybe-configure-target-libgm2 \\\n     maybe-configure-target-libgomp \\\n     maybe-configure-target-libitm \\\n     maybe-configure-target-libatomic\n@@ -1313,6 +1333,7 @@ all-target: maybe-all-target-zlib\n @endif target-zlib-no-bootstrap\n all-target: maybe-all-target-rda\n all-target: maybe-all-target-libada\n+all-target: maybe-all-target-libgm2\n @if target-libgomp-no-bootstrap\n all-target: maybe-all-target-libgomp\n @endif target-libgomp-no-bootstrap\n@@ -1411,6 +1432,7 @@ info-target: maybe-info-target-libffi\n info-target: maybe-info-target-zlib\n info-target: maybe-info-target-rda\n info-target: maybe-info-target-libada\n+info-target: maybe-info-target-libgm2\n info-target: maybe-info-target-libgomp\n info-target: maybe-info-target-libitm\n info-target: maybe-info-target-libatomic\n@@ -1500,6 +1522,7 @@ dvi-target: maybe-dvi-target-libffi\n dvi-target: maybe-dvi-target-zlib\n dvi-target: maybe-dvi-target-rda\n dvi-target: maybe-dvi-target-libada\n+dvi-target: maybe-dvi-target-libgm2\n dvi-target: maybe-dvi-target-libgomp\n dvi-target: maybe-dvi-target-libitm\n dvi-target: maybe-dvi-target-libatomic\n@@ -1589,6 +1612,7 @@ pdf-target: maybe-pdf-target-libffi\n pdf-target: maybe-pdf-target-zlib\n pdf-target: maybe-pdf-target-rda\n pdf-target: maybe-pdf-target-libada\n+pdf-target: maybe-pdf-target-libgm2\n pdf-target: maybe-pdf-target-libgomp\n pdf-target: maybe-pdf-target-libitm\n pdf-target: maybe-pdf-target-libatomic\n@@ -1678,6 +1702,7 @@ html-target: maybe-html-target-libffi\n html-target: maybe-html-target-zlib\n html-target: maybe-html-target-rda\n html-target: maybe-html-target-libada\n+html-target: maybe-html-target-libgm2\n html-target: maybe-html-target-libgomp\n html-target: maybe-html-target-libitm\n html-target: maybe-html-target-libatomic\n@@ -1767,6 +1792,7 @@ TAGS-target: maybe-TAGS-target-libffi\n TAGS-target: maybe-TAGS-target-zlib\n TAGS-target: maybe-TAGS-target-rda\n TAGS-target: maybe-TAGS-target-libada\n+TAGS-target: maybe-TAGS-target-libgm2\n TAGS-target: maybe-TAGS-target-libgomp\n TAGS-target: maybe-TAGS-target-libitm\n TAGS-target: maybe-TAGS-target-libatomic\n@@ -1856,6 +1882,7 @@ install-info-target: maybe-install-info-target-libffi\n install-info-target: maybe-install-info-target-zlib\n install-info-target: maybe-install-info-target-rda\n install-info-target: maybe-install-info-target-libada\n+install-info-target: maybe-install-info-target-libgm2\n install-info-target: maybe-install-info-target-libgomp\n install-info-target: maybe-install-info-target-libitm\n install-info-target: maybe-install-info-target-libatomic\n@@ -1945,6 +1972,7 @@ install-dvi-target: maybe-install-dvi-target-libffi\n install-dvi-target: maybe-install-dvi-target-zlib\n install-dvi-target: maybe-install-dvi-target-rda\n install-dvi-target: maybe-install-dvi-target-libada\n+install-dvi-target: maybe-install-dvi-target-libgm2\n install-dvi-target: maybe-install-dvi-target-libgomp\n install-dvi-target: maybe-install-dvi-target-libitm\n install-dvi-target: maybe-install-dvi-target-libatomic\n@@ -2034,6 +2062,7 @@ install-pdf-target: maybe-install-pdf-target-libffi\n install-pdf-target: maybe-install-pdf-target-zlib\n install-pdf-target: maybe-install-pdf-target-rda\n install-pdf-target: maybe-install-pdf-target-libada\n+install-pdf-target: maybe-install-pdf-target-libgm2\n install-pdf-target: maybe-install-pdf-target-libgomp\n install-pdf-target: maybe-install-pdf-target-libitm\n install-pdf-target: maybe-install-pdf-target-libatomic\n@@ -2123,6 +2152,7 @@ install-html-target: maybe-install-html-target-libffi\n install-html-target: maybe-install-html-target-zlib\n install-html-target: maybe-install-html-target-rda\n install-html-target: maybe-install-html-target-libada\n+install-html-target: maybe-install-html-target-libgm2\n install-html-target: maybe-install-html-target-libgomp\n install-html-target: maybe-install-html-target-libitm\n install-html-target: maybe-install-html-target-libatomic\n@@ -2212,6 +2242,7 @@ installcheck-target: maybe-installcheck-target-libffi\n installcheck-target: maybe-installcheck-target-zlib\n installcheck-target: maybe-installcheck-target-rda\n installcheck-target: maybe-installcheck-target-libada\n+installcheck-target: maybe-installcheck-target-libgm2\n installcheck-target: maybe-installcheck-target-libgomp\n installcheck-target: maybe-installcheck-target-libitm\n installcheck-target: maybe-installcheck-target-libatomic\n@@ -2301,6 +2332,7 @@ mostlyclean-target: maybe-mostlyclean-target-libffi\n mostlyclean-target: maybe-mostlyclean-target-zlib\n mostlyclean-target: maybe-mostlyclean-target-rda\n mostlyclean-target: maybe-mostlyclean-target-libada\n+mostlyclean-target: maybe-mostlyclean-target-libgm2\n mostlyclean-target: maybe-mostlyclean-target-libgomp\n mostlyclean-target: maybe-mostlyclean-target-libitm\n mostlyclean-target: maybe-mostlyclean-target-libatomic\n@@ -2390,6 +2422,7 @@ clean-target: maybe-clean-target-libffi\n clean-target: maybe-clean-target-zlib\n clean-target: maybe-clean-target-rda\n clean-target: maybe-clean-target-libada\n+clean-target: maybe-clean-target-libgm2\n clean-target: maybe-clean-target-libgomp\n clean-target: maybe-clean-target-libitm\n clean-target: maybe-clean-target-libatomic\n@@ -2479,6 +2512,7 @@ distclean-target: maybe-distclean-target-libffi\n distclean-target: maybe-distclean-target-zlib\n distclean-target: maybe-distclean-target-rda\n distclean-target: maybe-distclean-target-libada\n+distclean-target: maybe-distclean-target-libgm2\n distclean-target: maybe-distclean-target-libgomp\n distclean-target: maybe-distclean-target-libitm\n distclean-target: maybe-distclean-target-libatomic\n@@ -2568,6 +2602,7 @@ maintainer-clean-target: maybe-maintainer-clean-target-libffi\n maintainer-clean-target: maybe-maintainer-clean-target-zlib\n maintainer-clean-target: maybe-maintainer-clean-target-rda\n maintainer-clean-target: maybe-maintainer-clean-target-libada\n+maintainer-clean-target: maybe-maintainer-clean-target-libgm2\n maintainer-clean-target: maybe-maintainer-clean-target-libgomp\n maintainer-clean-target: maybe-maintainer-clean-target-libitm\n maintainer-clean-target: maybe-maintainer-clean-target-libatomic\n@@ -2715,6 +2750,7 @@ check-target:  \\\n     maybe-check-target-zlib \\\n     maybe-check-target-rda \\\n     maybe-check-target-libada \\\n+    maybe-check-target-libgm2 \\\n     maybe-check-target-libgomp \\\n     maybe-check-target-libitm \\\n     maybe-check-target-libatomic\n@@ -2906,6 +2942,7 @@ install-target:  \\\n     maybe-install-target-zlib \\\n     maybe-install-target-rda \\\n     maybe-install-target-libada \\\n+    maybe-install-target-libgm2 \\\n     maybe-install-target-libgomp \\\n     maybe-install-target-libitm \\\n     maybe-install-target-libatomic\n@@ -3015,6 +3052,7 @@ install-strip-target:  \\\n     maybe-install-strip-target-zlib \\\n     maybe-install-strip-target-rda \\\n     maybe-install-strip-target-libada \\\n+    maybe-install-strip-target-libgm2 \\\n     maybe-install-strip-target-libgomp \\\n     maybe-install-strip-target-libitm \\\n     maybe-install-strip-target-libatomic\n@@ -55429,7 +55467,7 @@ configure-target-libffi:\n \t  $$s/$$module_srcdir/configure \\\n \t  --srcdir=$${topdir}/$$module_srcdir \\\n \t  $(TARGET_CONFIGARGS) --build=${build_alias} --host=${target_alias} \\\n-\t  --target=${target_alias}  \\\n+\t  --target=${target_alias} --disable-shared --with-pic \\\n \t  || exit 1\n @endif target-libffi\n \n@@ -58104,6 +58142,491 @@ maintainer-clean-target-libada:\n \n \n \n+.PHONY: configure-target-libgm2 maybe-configure-target-libgm2\n+maybe-configure-target-libgm2:\n+@if gcc-bootstrap\n+configure-target-libgm2: stage_current\n+@endif gcc-bootstrap\n+@if target-libgm2\n+maybe-configure-target-libgm2: configure-target-libgm2\n+configure-target-libgm2: \n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\techo \"Checking multilib configuration for libgm2...\"; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(TARGET_SUBDIR)/libgm2; \\\n+\t$(CC_FOR_TARGET) --print-multi-lib > $(TARGET_SUBDIR)/libgm2/multilib.tmp 2> /dev/null; \\\n+\tif test -r $(TARGET_SUBDIR)/libgm2/multilib.out; then \\\n+\t  if cmp -s $(TARGET_SUBDIR)/libgm2/multilib.tmp $(TARGET_SUBDIR)/libgm2/multilib.out; then \\\n+\t    rm -f $(TARGET_SUBDIR)/libgm2/multilib.tmp; \\\n+\t  else \\\n+\t    rm -f $(TARGET_SUBDIR)/libgm2/Makefile; \\\n+\t    mv $(TARGET_SUBDIR)/libgm2/multilib.tmp $(TARGET_SUBDIR)/libgm2/multilib.out; \\\n+\t  fi; \\\n+\telse \\\n+\t  mv $(TARGET_SUBDIR)/libgm2/multilib.tmp $(TARGET_SUBDIR)/libgm2/multilib.out; \\\n+\tfi; \\\n+\ttest ! -f $(TARGET_SUBDIR)/libgm2/Makefile || exit 0; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(TARGET_SUBDIR)/libgm2; \\\n+\t$(NORMAL_TARGET_EXPORTS)  \\\n+\techo Configuring in $(TARGET_SUBDIR)/libgm2; \\\n+\tcd \"$(TARGET_SUBDIR)/libgm2\" || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(TARGET_SUBDIR)/libgm2/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libgm2; \\\n+\trm -f no-such-file || : ; \\\n+\tCONFIG_SITE=no-such-file $(SHELL) \\\n+\t  $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(TARGET_CONFIGARGS) --build=${build_alias} --host=${target_alias} \\\n+\t  --target=${target_alias}  \\\n+\t  || exit 1\n+@endif target-libgm2\n+\n+\n+\n+\n+\n+.PHONY: all-target-libgm2 maybe-all-target-libgm2\n+maybe-all-target-libgm2:\n+@if gcc-bootstrap\n+all-target-libgm2: stage_current\n+@endif gcc-bootstrap\n+@if target-libgm2\n+TARGET-target-libgm2=all\n+maybe-all-target-libgm2: all-target-libgm2\n+all-target-libgm2: configure-target-libgm2\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS)  \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)   \\\n+\t\t$(TARGET-target-libgm2))\n+@endif target-libgm2\n+\n+\n+\n+\n+\n+.PHONY: check-target-libgm2 maybe-check-target-libgm2\n+maybe-check-target-libgm2:\n+@if target-libgm2\n+maybe-check-target-libgm2: check-target-libgm2\n+\n+check-target-libgm2:\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(TARGET_FLAGS_TO_PASS)   check)\n+\n+@endif target-libgm2\n+\n+.PHONY: install-target-libgm2 maybe-install-target-libgm2\n+maybe-install-target-libgm2:\n+@if target-libgm2\n+maybe-install-target-libgm2: install-target-libgm2\n+\n+install-target-libgm2: installdirs\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(TARGET_FLAGS_TO_PASS)  install)\n+\n+@endif target-libgm2\n+\n+.PHONY: install-strip-target-libgm2 maybe-install-strip-target-libgm2\n+maybe-install-strip-target-libgm2:\n+@if target-libgm2\n+maybe-install-strip-target-libgm2: install-strip-target-libgm2\n+\n+install-strip-target-libgm2: installdirs\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(TARGET_FLAGS_TO_PASS)  install-strip)\n+\n+@endif target-libgm2\n+\n+# Other targets (info, dvi, pdf, etc.)\n+\n+.PHONY: maybe-info-target-libgm2 info-target-libgm2\n+maybe-info-target-libgm2:\n+@if target-libgm2\n+maybe-info-target-libgm2: info-target-libgm2\n+\n+info-target-libgm2: \\\n+    configure-target-libgm2 \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing info in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           info) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+.PHONY: maybe-dvi-target-libgm2 dvi-target-libgm2\n+maybe-dvi-target-libgm2:\n+@if target-libgm2\n+maybe-dvi-target-libgm2: dvi-target-libgm2\n+\n+dvi-target-libgm2: \\\n+    configure-target-libgm2 \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing dvi in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           dvi) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+.PHONY: maybe-pdf-target-libgm2 pdf-target-libgm2\n+maybe-pdf-target-libgm2:\n+@if target-libgm2\n+maybe-pdf-target-libgm2: pdf-target-libgm2\n+\n+pdf-target-libgm2: \\\n+    configure-target-libgm2 \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing pdf in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           pdf) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+.PHONY: maybe-html-target-libgm2 html-target-libgm2\n+maybe-html-target-libgm2:\n+@if target-libgm2\n+maybe-html-target-libgm2: html-target-libgm2\n+\n+html-target-libgm2: \\\n+    configure-target-libgm2 \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing html in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           html) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+.PHONY: maybe-TAGS-target-libgm2 TAGS-target-libgm2\n+maybe-TAGS-target-libgm2:\n+@if target-libgm2\n+maybe-TAGS-target-libgm2: TAGS-target-libgm2\n+\n+TAGS-target-libgm2: \\\n+    configure-target-libgm2 \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing TAGS in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           TAGS) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+.PHONY: maybe-install-info-target-libgm2 install-info-target-libgm2\n+maybe-install-info-target-libgm2:\n+@if target-libgm2\n+maybe-install-info-target-libgm2: install-info-target-libgm2\n+\n+install-info-target-libgm2: \\\n+    configure-target-libgm2 \\\n+    info-target-libgm2 \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing install-info in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           install-info) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+.PHONY: maybe-install-dvi-target-libgm2 install-dvi-target-libgm2\n+maybe-install-dvi-target-libgm2:\n+@if target-libgm2\n+maybe-install-dvi-target-libgm2: install-dvi-target-libgm2\n+\n+install-dvi-target-libgm2: \\\n+    configure-target-libgm2 \\\n+    dvi-target-libgm2 \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing install-dvi in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           install-dvi) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+.PHONY: maybe-install-pdf-target-libgm2 install-pdf-target-libgm2\n+maybe-install-pdf-target-libgm2:\n+@if target-libgm2\n+maybe-install-pdf-target-libgm2: install-pdf-target-libgm2\n+\n+install-pdf-target-libgm2: \\\n+    configure-target-libgm2 \\\n+    pdf-target-libgm2 \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing install-pdf in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           install-pdf) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+.PHONY: maybe-install-html-target-libgm2 install-html-target-libgm2\n+maybe-install-html-target-libgm2:\n+@if target-libgm2\n+maybe-install-html-target-libgm2: install-html-target-libgm2\n+\n+install-html-target-libgm2: \\\n+    configure-target-libgm2 \\\n+    html-target-libgm2 \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing install-html in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           install-html) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+.PHONY: maybe-installcheck-target-libgm2 installcheck-target-libgm2\n+maybe-installcheck-target-libgm2:\n+@if target-libgm2\n+maybe-installcheck-target-libgm2: installcheck-target-libgm2\n+\n+installcheck-target-libgm2: \\\n+    configure-target-libgm2 \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing installcheck in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           installcheck) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+.PHONY: maybe-mostlyclean-target-libgm2 mostlyclean-target-libgm2\n+maybe-mostlyclean-target-libgm2:\n+@if target-libgm2\n+maybe-mostlyclean-target-libgm2: mostlyclean-target-libgm2\n+\n+mostlyclean-target-libgm2: \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing mostlyclean in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           mostlyclean) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+.PHONY: maybe-clean-target-libgm2 clean-target-libgm2\n+maybe-clean-target-libgm2:\n+@if target-libgm2\n+maybe-clean-target-libgm2: clean-target-libgm2\n+\n+clean-target-libgm2: \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing clean in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           clean) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+.PHONY: maybe-distclean-target-libgm2 distclean-target-libgm2\n+maybe-distclean-target-libgm2:\n+@if target-libgm2\n+maybe-distclean-target-libgm2: distclean-target-libgm2\n+\n+distclean-target-libgm2: \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing distclean in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           distclean) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+.PHONY: maybe-maintainer-clean-target-libgm2 maintainer-clean-target-libgm2\n+maybe-maintainer-clean-target-libgm2:\n+@if target-libgm2\n+maybe-maintainer-clean-target-libgm2: maintainer-clean-target-libgm2\n+\n+maintainer-clean-target-libgm2: \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libgm2/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing maintainer-clean in $(TARGET_SUBDIR)/libgm2\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libgm2 && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           maintainer-clean) \\\n+\t  || exit 1\n+\n+@endif target-libgm2\n+\n+\n+\n+\n+\n .PHONY: configure-target-libgomp maybe-configure-target-libgomp\n maybe-configure-target-libgomp:\n @if gcc-bootstrap\n@@ -61221,6 +61744,14 @@ check-gcc-go:\n \t(cd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) check-go);\n check-go: check-gcc-go check-target-libgo check-gotools\n \n+.PHONY: check-gcc-m2 check-m2\n+check-gcc-m2:\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\t(cd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) check-m2);\n+check-m2: check-gcc-m2 check-target-libgm2\n+\n .PHONY: check-gcc-d check-d\n check-gcc-d:\n \tr=`${PWD_COMMAND}`; export r; \\\n@@ -64679,6 +65210,7 @@ configure-stageautoprofile-target-zlib: maybe-all-stageautoprofile-gcc\n configure-stageautofeedback-target-zlib: maybe-all-stageautofeedback-gcc\n configure-target-rda: stage_last\n configure-target-libada: stage_last\n+configure-target-libgm2: stage_last\n configure-stage1-target-libgomp: maybe-all-stage1-gcc\n configure-stage2-target-libgomp: maybe-all-stage2-gcc\n configure-stage3-target-libgomp: maybe-all-stage3-gcc\n@@ -64720,6 +65252,7 @@ configure-target-libffi: maybe-all-gcc\n configure-target-zlib: maybe-all-gcc\n configure-target-rda: maybe-all-gcc\n configure-target-libada: maybe-all-gcc\n+configure-target-libgm2: maybe-all-gcc\n configure-target-libgomp: maybe-all-gcc\n configure-target-libitm: maybe-all-gcc\n configure-target-libatomic: maybe-all-gcc\n@@ -65970,6 +66503,8 @@ configure-libcc1: maybe-configure-gcc\n all-libcc1: maybe-all-gcc\n all-c++tools: maybe-all-gcc\n all-utils: maybe-all-libiberty\n+configure-gdb: maybe-all-gmp\n+configure-gdb: maybe-all-mpfr\n configure-gdb: maybe-all-intl\n configure-gdb: maybe-all-bfd\n configure-gdb: maybe-all-libiconv\n@@ -66006,6 +66541,8 @@ all-target-fastjar: maybe-all-target-zlib\n configure-target-libgo: maybe-all-target-libstdc++-v3\n all-target-libgo: maybe-all-target-libbacktrace\n all-target-libgo: maybe-all-target-libatomic\n+configure-target-libgm2: maybe-all-target-libstdc++-v3\n+all-target-libgm2: maybe-all-target-libatomic\n configure-target-newlib: maybe-all-binutils\n configure-target-newlib: maybe-all-ld\n configure-target-libgfortran: maybe-all-target-libbacktrace\n@@ -66111,6 +66648,7 @@ configure-target-libffi: maybe-all-target-libgcc\n configure-target-zlib: maybe-all-target-libgcc\n configure-target-rda: maybe-all-target-libgcc\n configure-target-libada: maybe-all-target-libgcc\n+configure-target-libgm2: maybe-all-target-libgcc\n configure-target-libgomp: maybe-all-target-libgcc\n configure-target-libitm: maybe-all-target-libgcc\n configure-target-libatomic: maybe-all-target-libgcc\n@@ -66153,6 +66691,8 @@ configure-target-rda: maybe-all-target-newlib maybe-all-target-libgloss\n \n configure-target-libada: maybe-all-target-newlib maybe-all-target-libgloss\n \n+configure-target-libgm2: maybe-all-target-newlib maybe-all-target-libgloss\n+\n configure-target-libgomp: maybe-all-target-newlib maybe-all-target-libgloss\n \n configure-target-libitm: maybe-all-target-newlib maybe-all-target-libgloss"}, {"sha": "dfbd74b68f8df71f0ea80ce173411b9b297ba10e", "filename": "Makefile.tpl", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -166,6 +166,8 @@ BUILD_EXPORTS = \\\n \tGOCFLAGS=\"$(GOCFLAGS_FOR_BUILD)\"; export GOCFLAGS; \\\n \tGDC=\"$(GDC_FOR_BUILD)\"; export GDC; \\\n \tGDCFLAGS=\"$(GDCFLAGS_FOR_BUILD)\"; export GDCFLAGS; \\\n+\tGM2=\"$(GM2_FOR_BUILD)\"; export GM2; \\\n+\tGM2FLAGS=\"$(GM2FLAGS_FOR_BUILD)\"; export GM2FLAGS; \\\n \tDLLTOOL=\"$(DLLTOOL_FOR_BUILD)\"; export DLLTOOL; \\\n \tDSYMUTIL=\"$(DSYMUTIL_FOR_BUILD)\"; export DSYMUTIL; \\\n \tLD=\"$(LD_FOR_BUILD)\"; export LD; \\\n@@ -204,6 +206,7 @@ HOST_EXPORTS = \\\n \tGFORTRAN=\"$(GFORTRAN)\"; export GFORTRAN; \\\n \tGOC=\"$(GOC)\"; export GOC; \\\n \tGDC=\"$(GDC)\"; export GDC; \\\n+\tGM2=\"$(GM2)\"; export GM2; \\\n \tAR=\"$(AR)\"; export AR; \\\n \tAS=\"$(AS)\"; export AS; \\\n \tCC_FOR_BUILD=\"$(CC_FOR_BUILD)\"; export CC_FOR_BUILD; \\\n@@ -307,6 +310,7 @@ BASE_TARGET_EXPORTS = \\\n \tGFORTRAN=\"$(GFORTRAN_FOR_TARGET) $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export GFORTRAN; \\\n \tGOC=\"$(GOC_FOR_TARGET) $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export GOC; \\\n \tGDC=\"$(GDC_FOR_TARGET) $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export GDC; \\\n+\tGM2=\"$(GM2_FOR_TARGET) $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export GM2; \\\n \tDLLTOOL=\"$(DLLTOOL_FOR_TARGET)\"; export DLLTOOL; \\\n \tDSYMUTIL=\"$(DSYMUTIL_FOR_TARGET)\"; export DSYMUTIL; \\\n \tLD=\"$(COMPILER_LD_FOR_TARGET)\"; export LD; \\\n@@ -373,6 +377,7 @@ DSYMUTIL_FOR_BUILD = @DSYMUTIL_FOR_BUILD@\n GFORTRAN_FOR_BUILD = @GFORTRAN_FOR_BUILD@\n GOC_FOR_BUILD = @GOC_FOR_BUILD@\n GDC_FOR_BUILD = @GDC_FOR_BUILD@\n+GM2_FOR_BUILD = @GM2_FOR_BUILD@\n LDFLAGS_FOR_BUILD = @LDFLAGS_FOR_BUILD@\n LD_FOR_BUILD = @LD_FOR_BUILD@\n NM_FOR_BUILD = @NM_FOR_BUILD@\n@@ -443,6 +448,7 @@ CXXFLAGS = @CXXFLAGS@\n LIBCXXFLAGS = $(CXXFLAGS) -fno-implicit-templates\n GOCFLAGS = $(CFLAGS)\n GDCFLAGS = $(CFLAGS)\n+GM2FLAGS = $(CFLAGS)\n \n # Pass additional PGO and LTO compiler options to the PGO build.\n BUILD_CFLAGS = $(PGO_BUILD_CFLAGS) $(PGO_BUILD_LTO_CFLAGS)\n@@ -578,6 +584,7 @@ RAW_CXX_FOR_TARGET=$(STAGE_CC_WRAPPER) @RAW_CXX_FOR_TARGET@\n GFORTRAN_FOR_TARGET=$(STAGE_CC_WRAPPER) @GFORTRAN_FOR_TARGET@\n GOC_FOR_TARGET=$(STAGE_CC_WRAPPER) @GOC_FOR_TARGET@\n GDC_FOR_TARGET=$(STAGE_CC_WRAPPER) @GDC_FOR_TARGET@\n+GM2_FOR_TARGET=$(STAGE_CC_WRAPPER) @GM2_FOR_TARGET@\n DLLTOOL_FOR_TARGET=@DLLTOOL_FOR_TARGET@\n DSYMUTIL_FOR_TARGET=@DSYMUTIL_FOR_TARGET@\n LD_FOR_TARGET=@LD_FOR_TARGET@\n@@ -603,6 +610,7 @@ CXXFLAGS_FOR_TARGET = @CXXFLAGS_FOR_TARGET@\n LIBCFLAGS_FOR_TARGET = $(CFLAGS_FOR_TARGET)\n LIBCXXFLAGS_FOR_TARGET = $(CXXFLAGS_FOR_TARGET) -fno-implicit-templates\n LDFLAGS_FOR_TARGET = @LDFLAGS_FOR_TARGET@\n+GM2FLAGS_FOR_TARGET = -O2 -g\n GOCFLAGS_FOR_TARGET = -O2 -g\n GDCFLAGS_FOR_TARGET = -O2 -g\n \n@@ -709,6 +717,7 @@ EXTRA_HOST_FLAGS = \\\n \t'GFORTRAN=$(GFORTRAN)' \\\n \t'GOC=$(GOC)' \\\n \t'GDC=$(GDC)' \\\n+\t'GM2=$(GM2)' \\\n \t'LD=$(LD)' \\\n \t'LIPO=$(LIPO)' \\\n \t'NM=$(NM)' \\\n@@ -735,6 +744,7 @@ POSTSTAGE1_FLAGS_TO_PASS = \\\n \tCC=\"$${CC}\" CC_FOR_BUILD=\"$${CC_FOR_BUILD}\" \\\n \tCXX=\"$${CXX}\" CXX_FOR_BUILD=\"$${CXX_FOR_BUILD}\" \\\n \tGDC=\"$${GDC}\" GDC_FOR_BUILD=\"$${GDC_FOR_BUILD}\" \\\n+\tGM2=\"$${GM2}\" GM2_FOR_BUILD=\"$${GM2_FOR_BUILD}\" \\\n \tGNATBIND=\"$${GNATBIND}\" \\\n \tLDFLAGS=\"$${LDFLAGS}\" \\\n \tHOST_LIBS=\"$${HOST_LIBS}\" \\\n@@ -770,6 +780,8 @@ EXTRA_TARGET_FLAGS = \\\n \t'GOCFLAGS=$$(GOCFLAGS_FOR_TARGET)' \\\n \t'GDC=$$(GDC_FOR_TARGET) $$(XGCC_FLAGS_FOR_TARGET) $$(TFLAGS)' \\\n \t'GDCFLAGS=$$(GDCFLAGS_FOR_TARGET)' \\\n+\t'GM2=$$(GM2_FOR_TARGET) $$(XGCC_FLAGS_FOR_TARGET) $$(TFLAGS)' \\\n+\t'GM2FLAGS=$$(GM2FLAGS_FOR_TARGET)' \\\n \t'LD=$(COMPILER_LD_FOR_TARGET)' \\\n \t'LDFLAGS=$$(LDFLAGS_FOR_TARGET)' \\\n \t'LIBCFLAGS=$$(LIBCFLAGS_FOR_TARGET)' \\\n@@ -796,6 +808,7 @@ TARGET_FLAGS_TO_PASS = $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)\n # cross-building scheme.\n EXTRA_GCC_FLAGS = \\\n \t\"GCC_FOR_TARGET=$(GCC_FOR_TARGET) $$TFLAGS\" \\\n+\t\"GM2_FOR_TARGET=$(GM2_FOR_TARGET) $$TFLAGS\" \\\n \t\"`echo 'STMP_FIXPROTO=$(STMP_FIXPROTO)' | sed -e s'/[^=][^=]*=$$/XFOO=/'`\" \\\n \t\"`echo 'LIMITS_H_TEST=$(LIMITS_H_TEST)' | sed -e s'/[^=][^=]*=$$/XFOO=/'`\"\n "}, {"sha": "fa25ac5f54f1e8d90173a4a1c4739302a29e13af", "filename": "c++tools/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/c%2B%2Btools%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/c%2B%2Btools%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2FChangeLog?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,3 +1,9 @@\n+2023-01-09  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\tPR other/107616\n+\t* server.cc (server): Don't call FD_ISSET when HAVE_PSELECT\n+\tand HAVE_SELECT are zero.\n+\n 2022-11-23  Marek Polacek  <polacek@redhat.com>\n \n \tRevert:\n@@ -170,7 +176,7 @@\n \t* server.cc: New.\n \n \f\n-Copyright (C) 2020-2022 Free Software Foundation, Inc.\n+Copyright (C) 2020-2023 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"}, {"sha": "56cba0901351e9b80c6cdb568a58a10fbcf0c1a0", "filename": "c++tools/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/c%2B%2Btools%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/c%2B%2Btools%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2FMakefile.in?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,5 +1,5 @@\n # Makefile for c++tools\n-#   Copyright (C) 2020-2022 Free Software Foundation, Inc.\n+#   Copyright (C) 2020-2023 Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by"}, {"sha": "23e98c8e7216040d1f6dff0b55bc057c61399214", "filename": "c++tools/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/c%2B%2Btools%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/c%2B%2Btools%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fconfigure.ac?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,5 +1,5 @@\n # Configure script for c++tools\n-#   Copyright (C) 2020-2022 Free Software Foundation, Inc.\n+#   Copyright (C) 2020-2023 Free Software Foundation, Inc.\n #   Written by Nathan Sidwell <nathan@acm.org> while at FaceBook\n #\n # This file is free software; you can redistribute it and/or modify it"}, {"sha": "d1f009cab64fef0956421784bba23b09812db5ad", "filename": "c++tools/resolver.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/c%2B%2Btools%2Fresolver.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/c%2B%2Btools%2Fresolver.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fresolver.cc?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,5 +1,5 @@\n /* C++ modules.  Experimental!\t-*- c++ -*-\n-   Copyright (C) 2017-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2017-2023 Free Software Foundation, Inc.\n    Written by Nathan Sidwell <nathan@acm.org> while at FaceBook\n \n    This file is part of GCC."}, {"sha": "96277007c94a8359d76554860e1589f0e6d822bb", "filename": "c++tools/resolver.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/c%2B%2Btools%2Fresolver.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/c%2B%2Btools%2Fresolver.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fresolver.h?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,5 +1,5 @@\n /* C++ modules.  Experimental!\t-*- c++ -*-\n-   Copyright (C) 2017-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2017-2023 Free Software Foundation, Inc.\n    Written by Nathan Sidwell <nathan@acm.org> while at FaceBook\n \n    This file is part of GCC."}, {"sha": "79905eca9accc45928cca4859ff7e5183fb0e7cb", "filename": "c++tools/server.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/c%2B%2Btools%2Fserver.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/c%2B%2Btools%2Fserver.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fserver.cc?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,5 +1,5 @@\n /* C++ modules.  Experimental!\n-   Copyright (C) 2018-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2018-2023 Free Software Foundation, Inc.\n    Written by Nathan Sidwell <nathan@acm.org> while at FaceBook\n \n    This file is part of GCC.\n@@ -319,7 +319,7 @@ static void ATTRIBUTE_NORETURN\n print_version (void)\n {\n   fnotice (stdout, \"%s %s%s\\n\", progname, pkgversion_string, version_string);\n-  fprintf (stdout, \"Copyright %s 2018-2022 Free Software Foundation, Inc.\\n\",\n+  fprintf (stdout, \"Copyright %s 2018-2023 Free Software Foundation, Inc.\\n\",\n \t   (\"(C)\"));\n   fnotice (stdout,\n \t   (\"This is free software; see the source for copying conditions.\\n\"\n@@ -753,8 +753,10 @@ server (bool ipv6, int sock_fd, module_resolver *resolver)\n \t\t      }\n \t\t  }\n \n+#if defined (HAVE_PSELECT) || defined (HAVE_SELECT)\n \t      if (active < 0 && sock_fd >= 0 && FD_ISSET (sock_fd, &readers))\n \t\tactive = -1;\n+#endif\n \t    }\n \n \t  if (active >= 0)"}, {"sha": "858830994104960d205d02abe5152edd6f9eadb1", "filename": "configure", "status": "modified", "additions": 289, "deletions": 9, "changes": 298, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -613,6 +613,7 @@ DSYMUTIL_FOR_TARGET\n DLLTOOL_FOR_TARGET\n AS_FOR_TARGET\n AR_FOR_TARGET\n+GM2_FOR_TARGET\n GDC_FOR_TARGET\n GOC_FOR_TARGET\n GFORTRAN_FOR_TARGET\n@@ -803,6 +804,7 @@ enable_compressed_debug_sections\n enable_libquadmath\n enable_libquadmath_support\n enable_libada\n+enable_libgm2\n enable_libssp\n enable_libstdcxx\n enable_bootstrap\n@@ -880,6 +882,7 @@ GCC_FOR_TARGET\n GFORTRAN_FOR_TARGET\n GOC_FOR_TARGET\n GDC_FOR_TARGET\n+GM2_FOR_TARGET\n AR_FOR_TARGET\n AS_FOR_TARGET\n DLLTOOL_FOR_TARGET\n@@ -1540,6 +1543,7 @@ Optional Features:\n   --disable-libquadmath-support\n                           disable libquadmath support for Fortran\n   --enable-libada         build libada directory\n+  --enable-libgm2         build libgm2 directory\n   --enable-libssp         build libssp directory\n   --disable-libstdcxx     do not build libstdc++-v3 directory\n   --enable-bootstrap      enable bootstrapping [yes if native build]\n@@ -1674,6 +1678,8 @@ Some influential environment variables:\n               GOC for the target\n   GDC_FOR_TARGET\n               GDC for the target\n+  GM2_FOR_TARGET\n+              GM2 for the target\n   AR_FOR_TARGET\n               AR for the target\n   AS_FOR_TARGET\n@@ -2812,7 +2818,7 @@ host_libs=\"intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libbacktr\n # binutils, gas and ld appear in that order because it makes sense to run\n # \"make check\" in that particular order.\n # If --enable-gold is used, \"gold\" may replace \"ld\".\n-host_tools=\"texinfo flex bison binutils gas ld fixincludes gcc cgen sid sim gdb gdbserver gprof etc expect dejagnu m4 utils guile fastjar gnattools libcc1 gotools c++tools\"\n+host_tools=\"texinfo flex bison binutils gas ld fixincludes gcc cgen sid sim gdb gdbserver gprof etc expect dejagnu m4 utils guile fastjar gnattools libcc1 gm2tools gotools c++tools\"\n \n # these libraries are built for the target environment, and are built after\n # the host libraries and the host tools (which may be a cross compiler)\n@@ -2833,6 +2839,7 @@ target_libraries=\"target-libgcc \\\n \t\ttarget-libffi \\\n \t\ttarget-libobjc \\\n \t\ttarget-libada \\\n+\t\ttarget-libgm2 \\\n \t\ttarget-libgo \\\n \t\ttarget-libphobos \\\n \t\ttarget-zlib\"\n@@ -3176,6 +3183,17 @@ if test \"${ENABLE_LIBADA}\" != \"yes\" ; then\n   noconfigdirs=\"$noconfigdirs gnattools\"\n fi\n \n+# Check whether --enable-libgm2 was given.\n+if test \"${enable_libgm2+set}\" = set; then :\n+  enableval=$enable_libgm2; ENABLE_LIBGM2=$enableval\n+else\n+  ENABLE_LIBGM2=no\n+fi\n+\n+if test \"${ENABLE_LIBGM2}\" != \"yes\" ; then\n+  noconfigdirs=\"$noconfigdirs gm2tools\"\n+fi\n+\n # Check whether --enable-libssp was given.\n if test \"${enable_libssp+set}\" = set; then :\n   enableval=$enable_libssp; ENABLE_LIBSSP=$enableval\n@@ -7888,7 +7906,22 @@ _ACEOF\n \n \n # Check for GMP, MPFR and MPC\n-gmplibs=\"-lmpc -lmpfr -lgmp\"\n+require_gmp=no\n+require_mpc=no\n+if test -d ${srcdir}/gcc ; then\n+  require_gmp=yes\n+  require_mpc=yes\n+fi\n+if test -d ${srcdir}/gdb ; then\n+  if test \"x$enable_gdb\" != xno; then\n+   require_gmp=yes\n+  fi\n+fi\n+\n+gmplibs=\"-lmpfr -lgmp\"\n+if test x\"$require_mpc\" = \"xyes\" ; then\n+  gmplibs=\"-lmpc $gmplibs\"\n+fi\n gmpinc=\n have_gmp=no\n \n@@ -8023,7 +8056,7 @@ if test \"x$with_gmp$with_gmp_include$with_gmp_lib\" = x && test -d ${srcdir}/gmp;\n   have_gmp=yes\n fi\n \n-if test -d ${srcdir}/gcc && test \"x$have_gmp\" = xno; then\n+if test \"x$require_gmp\" = xyes && test \"x$have_gmp\" = xno; then\n   have_gmp=yes\n   saved_CFLAGS=\"$CFLAGS\"\n   CFLAGS=\"$CFLAGS $gmpinc\"\n@@ -8133,7 +8166,7 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n   fi\n \n   # Check for the MPC header version.\n-  if test x\"$have_gmp\" = xyes ; then\n+  if test \"x$require_mpc\" = xyes && test x\"$have_gmp\" = xyes ; then\n     # Check for the recommended and required versions of MPC.\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for the correct version of mpc.h\" >&5\n $as_echo_n \"checking for the correct version of mpc.h... \" >&6; }\n@@ -8187,18 +8220,17 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n   if test x\"$have_gmp\" = xyes; then\n     saved_LIBS=\"$LIBS\"\n     LIBS=\"$LIBS $gmplibs\"\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for the correct version of the gmp/mpfr/mpc libraries\" >&5\n-$as_echo_n \"checking for the correct version of the gmp/mpfr/mpc libraries... \" >&6; }\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for the correct version of the gmp/mpfr libraries\" >&5\n+$as_echo_n \"checking for the correct version of the gmp/mpfr libraries... \" >&6; }\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n-#include <mpc.h>\n+#include <mpfr.h>\n int\n main ()\n {\n \n     mpfr_t n;\n     mpfr_t x;\n-    mpc_t c;\n     int t;\n     mpfr_init (n);\n     mpfr_init (x);\n@@ -8207,6 +8239,37 @@ main ()\n     mpfr_subnormalize (x, t, MPFR_RNDN);\n     mpfr_clear(n);\n     mpfr_clear(x);\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }; have_gmp=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+    LIBS=\"$saved_LIBS\"\n+  fi\n+\n+  # Now check the MPC library\n+  if test \"x$require_mpc\" = xyes && test x\"$have_gmp\" = xyes; then\n+    saved_LIBS=\"$LIBS\"\n+    LIBS=\"$LIBS $gmplibs\"\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for the correct version of the mpc libraries\" >&5\n+$as_echo_n \"checking for the correct version of the mpc libraries... \" >&6; }\n+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <mpc.h>\n+int\n+main ()\n+{\n+\n+    mpc_t c;\n     mpc_init2 (c, 53);\n     mpc_set_ui_ui (c, 1, 1, MPC_RNDNN);\n     mpc_cosh (c, c, MPC_RNDNN);\n@@ -8235,7 +8298,8 @@ rm -f core conftest.err conftest.$ac_objext \\\n # The library versions listed in the error message below should match\n # the HARD-minimums enforced above.\n   if test x$have_gmp != xyes; then\n-    as_fn_error $? \"Building GCC requires GMP 4.2+, MPFR 3.1.0+ and MPC 0.8.0+.\n+    if test -d ${srcdir}/gcc ; then\n+      as_fn_error $? \"Building GCC requires GMP 4.2+, MPFR 3.1.0+ and MPC 0.8.0+.\n Try the --with-gmp, --with-mpfr and/or --with-mpc options to specify\n their locations.  Source code for these libraries can be found at\n their respective hosting sites as well as at\n@@ -8244,6 +8308,13 @@ http://gcc.gnu.org/install/prerequisites.html for additional info.  If\n you obtained GMP, MPFR and/or MPC from a vendor distribution package,\n make sure that you have installed both the libraries and the header\n files.  They may be located in separate packages.\" \"$LINENO\" 5\n+    else\n+      as_fn_error $? \"Building GDB requires GMP 4.2+, and MPFR 3.1.0+.\n+Try the --with-gmp and/or --with-mpfr options to specify\n+their locations.  If you obtained GMP and/or MPFR from a vendor\n+distribution package, make sure that you have installed both the libraries\n+and the header files.  They may be located in separate packages.\" \"$LINENO\" 5\n+    fi\n   fi\n fi\n \n@@ -13786,6 +13857,167 @@ fi\n \n \n \n+if test -n \"$GM2_FOR_TARGET\"; then\n+  ac_cv_prog_GM2_FOR_TARGET=$GM2_FOR_TARGET\n+elif test -n \"$ac_cv_prog_GM2_FOR_TARGET\"; then\n+  GM2_FOR_TARGET=$ac_cv_prog_GM2_FOR_TARGET\n+fi\n+\n+if test -n \"$ac_cv_prog_GM2_FOR_TARGET\"; then\n+  for ncn_progname in gm2; do\n+    # Extract the first word of \"${ncn_progname}\", so it can be a program name with args.\n+set dummy ${ncn_progname}; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_prog_GM2_FOR_TARGET+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$GM2_FOR_TARGET\"; then\n+  ac_cv_prog_GM2_FOR_TARGET=\"$GM2_FOR_TARGET\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_GM2_FOR_TARGET=\"${ncn_progname}\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+GM2_FOR_TARGET=$ac_cv_prog_GM2_FOR_TARGET\n+if test -n \"$GM2_FOR_TARGET\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $GM2_FOR_TARGET\" >&5\n+$as_echo \"$GM2_FOR_TARGET\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+  done\n+fi\n+\n+if test -z \"$ac_cv_prog_GM2_FOR_TARGET\" && test -n \"$with_build_time_tools\"; then\n+  for ncn_progname in gm2; do\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ${ncn_progname} in $with_build_time_tools\" >&5\n+$as_echo_n \"checking for ${ncn_progname} in $with_build_time_tools... \" >&6; }\n+    if test -x $with_build_time_tools/${ncn_progname}; then\n+      ac_cv_prog_GM2_FOR_TARGET=$with_build_time_tools/${ncn_progname}\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+      break\n+    else\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+    fi\n+  done\n+fi\n+\n+if test -z \"$ac_cv_prog_GM2_FOR_TARGET\"; then\n+  for ncn_progname in gm2; do\n+    if test -n \"$ncn_target_tool_prefix\"; then\n+      # Extract the first word of \"${ncn_target_tool_prefix}${ncn_progname}\", so it can be a program name with args.\n+set dummy ${ncn_target_tool_prefix}${ncn_progname}; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_prog_GM2_FOR_TARGET+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$GM2_FOR_TARGET\"; then\n+  ac_cv_prog_GM2_FOR_TARGET=\"$GM2_FOR_TARGET\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_GM2_FOR_TARGET=\"${ncn_target_tool_prefix}${ncn_progname}\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+GM2_FOR_TARGET=$ac_cv_prog_GM2_FOR_TARGET\n+if test -n \"$GM2_FOR_TARGET\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $GM2_FOR_TARGET\" >&5\n+$as_echo \"$GM2_FOR_TARGET\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+    fi\n+    if test -z \"$ac_cv_prog_GM2_FOR_TARGET\" && test $build = $target ; then\n+      # Extract the first word of \"${ncn_progname}\", so it can be a program name with args.\n+set dummy ${ncn_progname}; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_prog_GM2_FOR_TARGET+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$GM2_FOR_TARGET\"; then\n+  ac_cv_prog_GM2_FOR_TARGET=\"$GM2_FOR_TARGET\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_GM2_FOR_TARGET=\"${ncn_progname}\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+GM2_FOR_TARGET=$ac_cv_prog_GM2_FOR_TARGET\n+if test -n \"$GM2_FOR_TARGET\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $GM2_FOR_TARGET\" >&5\n+$as_echo \"$GM2_FOR_TARGET\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+    fi\n+    test -n \"$ac_cv_prog_GM2_FOR_TARGET\" && break\n+  done\n+fi\n+\n+if test -z \"$ac_cv_prog_GM2_FOR_TARGET\" ; then\n+  set dummy gm2\n+  if test $build = $target ; then\n+    GM2_FOR_TARGET=\"$2\"\n+  else\n+    GM2_FOR_TARGET=\"${ncn_target_tool_prefix}$2\"\n+  fi\n+else\n+  GM2_FOR_TARGET=\"$ac_cv_prog_GM2_FOR_TARGET\"\n+fi\n+\n+\n+\n cat > conftest.c << \\EOF\n #ifdef __GNUC__\n   gcc_yay;\n@@ -17718,6 +17950,51 @@ $as_echo \"pre-installed\" >&6; }\n   fi\n fi\n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking where to find the target gm2\" >&5\n+$as_echo_n \"checking where to find the target gm2... \" >&6; }\n+if test \"x${build}\" != \"x${host}\" ; then\n+  if expr \"x$GM2_FOR_TARGET\" : \"x/\" > /dev/null; then\n+    # We already found the complete path\n+    ac_dir=`dirname $GM2_FOR_TARGET`\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir\" >&5\n+$as_echo \"pre-installed in $ac_dir\" >&6; }\n+  else\n+    # Canadian cross, just use what we found\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: pre-installed\" >&5\n+$as_echo \"pre-installed\" >&6; }\n+  fi\n+else\n+  ok=yes\n+  case \" ${configdirs} \" in\n+    *\" gcc \"*) ;;\n+    *) ok=no ;;\n+  esac\n+  case ,${enable_languages}, in\n+    *,m2,*) ;;\n+    *) ok=no ;;\n+  esac\n+  if test $ok = yes; then\n+    # An in-tree tool is available and we can use it\n+    GM2_FOR_TARGET='$$r/$(HOST_SUBDIR)/gcc/gm2 -B$$r/$(HOST_SUBDIR)/gcc/'\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: just compiled\" >&5\n+$as_echo \"just compiled\" >&6; }\n+  elif expr \"x$GM2_FOR_TARGET\" : \"x/\" > /dev/null; then\n+    # We already found the complete path\n+    ac_dir=`dirname $GM2_FOR_TARGET`\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir\" >&5\n+$as_echo \"pre-installed in $ac_dir\" >&6; }\n+  elif test \"x$target\" = \"x$host\"; then\n+    # We can use an host tool\n+    GM2_FOR_TARGET='$(GM2)'\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: host tool\" >&5\n+$as_echo \"host tool\" >&6; }\n+  else\n+    # We need a cross tool\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: pre-installed\" >&5\n+$as_echo \"pre-installed\" >&6; }\n+  fi\n+fi\n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking where to find the target ld\" >&5\n $as_echo_n \"checking where to find the target ld... \" >&6; }\n if test \"x${build}\" != \"x${host}\" ; then\n@@ -18279,6 +18556,9 @@ fi\n # Specify what files to not compare during bootstrap.\n \n compare_exclusions=\"gcc/cc*-checksum\\$(objext) | gcc/ada/*tools/*\"\n+compare_exclusions=\"$compare_exclusions | gcc/m2/gm2-compiler-boot/M2Version*\"\n+compare_exclusions=\"$compare_exclusions | gcc/m2/gm2-compiler-boot/SYSTEM*\"\n+compare_exclusions=\"$compare_exclusions | gcc/m2/gm2version*\"\n case \"$target\" in\n   hppa*64*-*-hpux*) ;;\n   powerpc*-ibm-aix*) compare_exclusions=\"$compare_exclusions | *libgomp*\\$(objext)\" ;;"}, {"sha": "2b612dce6e9a1d3ab5eab994d7cf2a09c8a04916", "filename": "configure.ac", "status": "modified", "additions": 56, "deletions": 8, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -140,7 +140,7 @@ host_libs=\"intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libbacktr\n # binutils, gas and ld appear in that order because it makes sense to run\n # \"make check\" in that particular order.\n # If --enable-gold is used, \"gold\" may replace \"ld\".\n-host_tools=\"texinfo flex bison binutils gas ld fixincludes gcc cgen sid sim gdb gdbserver gprof etc expect dejagnu m4 utils guile fastjar gnattools libcc1 gotools c++tools\"\n+host_tools=\"texinfo flex bison binutils gas ld fixincludes gcc cgen sid sim gdb gdbserver gprof etc expect dejagnu m4 utils guile fastjar gnattools libcc1 gm2tools gotools c++tools\"\n \n # these libraries are built for the target environment, and are built after\n # the host libraries and the host tools (which may be a cross compiler)\n@@ -161,6 +161,7 @@ target_libraries=\"target-libgcc \\\n \t\ttarget-libffi \\\n \t\ttarget-libobjc \\\n \t\ttarget-libada \\\n+\t\ttarget-libgm2 \\\n \t\ttarget-libgo \\\n \t\ttarget-libphobos \\\n \t\ttarget-zlib\"\n@@ -464,6 +465,14 @@ if test \"${ENABLE_LIBADA}\" != \"yes\" ; then\n   noconfigdirs=\"$noconfigdirs gnattools\"\n fi\n \n+AC_ARG_ENABLE(libgm2,\n+[AS_HELP_STRING([--enable-libgm2], [build libgm2 directory])],\n+ENABLE_LIBGM2=$enableval,\n+ENABLE_LIBGM2=no)\n+if test \"${ENABLE_LIBGM2}\" != \"yes\" ; then\n+  noconfigdirs=\"$noconfigdirs gm2tools\"\n+fi\n+\n AC_ARG_ENABLE(libssp,\n [AS_HELP_STRING([--enable-libssp], [build libssp directory])],\n ENABLE_LIBSSP=$enableval,\n@@ -1473,7 +1482,22 @@ AC_SUBST(PGO_BUILD_LTO_CFLAGS)\n _LT_CHECK_OBJDIR\n \n # Check for GMP, MPFR and MPC\n-gmplibs=\"-lmpc -lmpfr -lgmp\"\n+require_gmp=no\n+require_mpc=no\n+if test -d ${srcdir}/gcc ; then\n+  require_gmp=yes\n+  require_mpc=yes\n+fi\n+if test -d ${srcdir}/gdb ; then\n+  if test \"x$enable_gdb\" != xno; then\n+   require_gmp=yes\n+  fi\n+fi\n+\n+gmplibs=\"-lmpfr -lgmp\"\n+if test x\"$require_mpc\" = \"xyes\" ; then\n+  gmplibs=\"-lmpc $gmplibs\"\n+fi\n gmpinc=\n have_gmp=no\n \n@@ -1588,7 +1612,7 @@ if test \"x$with_gmp$with_gmp_include$with_gmp_lib\" = x && test -d ${srcdir}/gmp;\n   have_gmp=yes\n fi\n \n-if test -d ${srcdir}/gcc && test \"x$have_gmp\" = xno; then\n+if test \"x$require_gmp\" = xyes && test \"x$have_gmp\" = xno; then\n   have_gmp=yes\n   saved_CFLAGS=\"$CFLAGS\"\n   CFLAGS=\"$CFLAGS $gmpinc\"\n@@ -1628,7 +1652,7 @@ if test -d ${srcdir}/gcc && test \"x$have_gmp\" = xno; then\n   fi\n \n   # Check for the MPC header version.\n-  if test x\"$have_gmp\" = xyes ; then\n+  if test \"x$require_mpc\" = xyes && test x\"$have_gmp\" = xyes ; then\n     # Check for the recommended and required versions of MPC.\n     AC_MSG_CHECKING([for the correct version of mpc.h])\n     AC_TRY_COMPILE([#include <mpc.h>],[\n@@ -1647,11 +1671,10 @@ if test -d ${srcdir}/gcc && test \"x$have_gmp\" = xno; then\n   if test x\"$have_gmp\" = xyes; then\n     saved_LIBS=\"$LIBS\"\n     LIBS=\"$LIBS $gmplibs\"\n-    AC_MSG_CHECKING([for the correct version of the gmp/mpfr/mpc libraries])\n-    AC_TRY_LINK([#include <mpc.h>],[\n+    AC_MSG_CHECKING([for the correct version of the gmp/mpfr libraries])\n+    AC_TRY_LINK([#include <mpfr.h>],[\n     mpfr_t n;\n     mpfr_t x;\n-    mpc_t c;\n     int t;\n     mpfr_init (n);\n     mpfr_init (x);\n@@ -1660,6 +1683,17 @@ if test -d ${srcdir}/gcc && test \"x$have_gmp\" = xno; then\n     mpfr_subnormalize (x, t, MPFR_RNDN);\n     mpfr_clear(n);\n     mpfr_clear(x);\n+    ], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([no]); have_gmp=no])\n+    LIBS=\"$saved_LIBS\"\n+  fi\n+\n+  # Now check the MPC library\n+  if test \"x$require_mpc\" = xyes && test x\"$have_gmp\" = xyes; then\n+    saved_LIBS=\"$LIBS\"\n+    LIBS=\"$LIBS $gmplibs\"\n+    AC_MSG_CHECKING([for the correct version of the mpc libraries])\n+    AC_TRY_LINK([#include <mpc.h>],[\n+    mpc_t c;\n     mpc_init2 (c, 53);\n     mpc_set_ui_ui (c, 1, 1, MPC_RNDNN);\n     mpc_cosh (c, c, MPC_RNDNN);\n@@ -1675,7 +1709,8 @@ if test -d ${srcdir}/gcc && test \"x$have_gmp\" = xno; then\n # The library versions listed in the error message below should match\n # the HARD-minimums enforced above.\n   if test x$have_gmp != xyes; then\n-    AC_MSG_ERROR([Building GCC requires GMP 4.2+, MPFR 3.1.0+ and MPC 0.8.0+.\n+    if test -d ${srcdir}/gcc ; then\n+      AC_MSG_ERROR([Building GCC requires GMP 4.2+, MPFR 3.1.0+ and MPC 0.8.0+.\n Try the --with-gmp, --with-mpfr and/or --with-mpc options to specify\n their locations.  Source code for these libraries can be found at\n their respective hosting sites as well as at\n@@ -1684,6 +1719,13 @@ http://gcc.gnu.org/install/prerequisites.html for additional info.  If\n you obtained GMP, MPFR and/or MPC from a vendor distribution package,\n make sure that you have installed both the libraries and the header\n files.  They may be located in separate packages.])\n+    else\n+      AC_MSG_ERROR([Building GDB requires GMP 4.2+, and MPFR 3.1.0+.\n+Try the --with-gmp and/or --with-mpfr options to specify\n+their locations.  If you obtained GMP and/or MPFR from a vendor\n+distribution package, make sure that you have installed both the libraries\n+and the header files.  They may be located in separate packages.])\n+    fi\n   fi\n fi\n \n@@ -3579,6 +3621,7 @@ NCN_STRICT_CHECK_TARGET_TOOLS(GCC_FOR_TARGET, gcc, ${CC_FOR_TARGET})\n NCN_STRICT_CHECK_TARGET_TOOLS(GFORTRAN_FOR_TARGET, gfortran)\n NCN_STRICT_CHECK_TARGET_TOOLS(GOC_FOR_TARGET, gccgo)\n NCN_STRICT_CHECK_TARGET_TOOLS(GDC_FOR_TARGET, gdc)\n+NCN_STRICT_CHECK_TARGET_TOOLS(GM2_FOR_TARGET, gm2)\n \n ACX_CHECK_INSTALLED_TARGET_TOOL(AR_FOR_TARGET, ar)\n ACX_CHECK_INSTALLED_TARGET_TOOL(AS_FOR_TARGET, as)\n@@ -3617,6 +3660,8 @@ GCC_TARGET_TOOL(gccgo, GOC_FOR_TARGET, GOC,\n \t\t[gcc/gccgo -B$$r/$(HOST_SUBDIR)/gcc/], go)\n GCC_TARGET_TOOL(gdc, GDC_FOR_TARGET, GDC,\n \t\t[gcc/gdc -B$$r/$(HOST_SUBDIR)/gcc/], d)\n+GCC_TARGET_TOOL(gm2, GM2_FOR_TARGET, GM2,\n+\t\t[gcc/gm2 -B$$r/$(HOST_SUBDIR)/gcc/], m2)\n GCC_TARGET_TOOL(ld, LD_FOR_TARGET, LD, [ld/ld-new])\n GCC_TARGET_TOOL(lipo, LIPO_FOR_TARGET, LIPO)\n GCC_TARGET_TOOL(nm, NM_FOR_TARGET, NM, [binutils/nm-new])\n@@ -3743,6 +3788,9 @@ AC_SUBST(stage2_werror_flag)\n # Specify what files to not compare during bootstrap.\n \n compare_exclusions=\"gcc/cc*-checksum\\$(objext) | gcc/ada/*tools/*\"\n+compare_exclusions=\"$compare_exclusions | gcc/m2/gm2-compiler-boot/M2Version*\"\n+compare_exclusions=\"$compare_exclusions | gcc/m2/gm2-compiler-boot/SYSTEM*\"\n+compare_exclusions=\"$compare_exclusions | gcc/m2/gm2version*\"\n case \"$target\" in\n   hppa*64*-*-hpux*) ;;\n   powerpc*-ibm-aix*) compare_exclusions=\"$compare_exclusions | *libgomp*\\$(objext)\" ;;"}, {"sha": "772dfbe5bb629581738d48eb4f1c20779f062699", "filename": "contrib/ChangeLog", "status": "modified", "additions": 128, "deletions": 0, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,3 +1,131 @@\n+2023-01-19  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* gcc_update (files_and_dependencies): Add dependencies for\n+\tgcc/m2/gm2config.h.in, gcc/m2/configure,\n+\tgcc/m2/gm2-libs/config-host, libgm2/Makefile.in,\n+\tlibgm2/aclocal.m4, libgm2/libm2cor/Makefile.in,\n+\tlibgm2/libm2pim/Makefile.in, libgm2/libm2iso/Makefile.in,\n+\tlibgm2/libm2log/Makefile.in and libgm2/libm2min/Makefile.in.\n+\n+2023-01-17  Martin Liska  <mliska@suse.cz>\n+\n+\t* update-copyright.py: Ignore test_patches.txt.\n+\n+2023-01-17  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/test_patches.txt: The CR character was removed\n+\twith ./contrib/update-copyright.py which I'm going to change.\n+\n+2023-01-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/108413\n+\t* update-copyright.py (LibPhobosFilter): Add __builtins.di to\n+\tskipped files.\n+\n+2023-01-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/108413\n+\t* update-copyright.py (TestsuiteFilter): Add .mod and .rs extensions.\n+\t(GCCCopyright): Add 'The fast_float authors' as external author.\n+\n+2023-01-15  Gerald Pfeifer  <gerald@pfeifer.com>\n+\n+\t* config-list.mk: Update FreeBSD targets to version 13.\n+\tAdd aarch64-freebsd13.\n+\n+2023-01-12  Gerald Pfeifer  <gerald@pfeifer.com>\n+\n+\t* config-list.mk: Remove i486-freebsd4, ia64-freebsd6, and\n+\tsparc64-freebsd6.\n+\n+2023-01-06  Martin Liska  <mliska@suse.cz>\n+\n+\t* update-copyright.py: Add contrib as a default dir.\n+\n+2022-12-28  Martin Liska  <mliska@suse.cz>\n+\n+\t* update-copyright.py: Add contrib folder.\n+\n+2022-12-23  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* dg-out-generator.pl: New file.\n+\n+2022-12-21  Martin Liska  <mliska@suse.cz>\n+\n+\t* filter-clang-warnings.py: Simplify.\n+\n+2022-12-21  Martin Liska  <mliska@suse.cz>\n+\n+\t* filter-clang-warnings.py: Skip Makefile and libffi warnings.\n+\n+2022-12-19  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Support digits in PR's\n+\tcomponent in subject.\n+\n+2022-12-19  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/test_email.py: Add new test.\n+\t* gcc-changelog/test_patches.txt: Add new patch.\n+\n+2022-12-19  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Allow digit in component name.\n+\n+2022-12-19  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* gcc-changelog/git_check_commit.py (__main__): With -v print a\n+\twarning for the auto-added files.\n+\t* gcc-changelog/git_commit.py (GitCommit.__init__): Add self.warnings.\n+\t(GitCommit.check_mentioned_files): Add warning for auto-added files.\n+\t(GitCommit.print_warnings): New function.\n+\t* gcc-changelog/git_email.py (__main__): Remove bogus argument to\n+\tGitEmail constructor; print auto-added-files warning.\n+\t* gcc-changelog/test_email.py (test_auto_add_file_1,\n+\ttest_auto_add_file_2): New tests.\n+\t* gcc-changelog/test_patches.txt: Add two test cases.\n+\n+2022-12-19  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/setup.cfg: Do not use flake8 pytest plug-in.\n+\n+2022-12-16  Martin Liska  <mliska@suse.cz>\n+\n+\t* filter-clang-warnings.py: Print each warning only one time.\n+\n+2022-12-16  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_email.py: Use PatchSet constructor\n+\tas newline argument is not supported with older unidiff\n+\tlibrary.\n+\n+2022-12-16  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* gcc-changelog/git_email.py (GitEmail:__init__): Support older\n+\tunidiff.PatchSet that do not have a newline= argument\n+\tof from_filename.\n+\n+2022-12-14  Martin Liska  <mliska@suse.cz>\n+\n+\t* analyze_brprob.py: Add copyright header.\n+\t* analyze_brprob_spec.py: Likewise.\n+\t* check-params-in-docs.py: Likewise.\n+\t* check_GNU_style.py: Likewise.\n+\t* check_GNU_style_lib.py: Likewise.\n+\t* filter-clang-warnings.py: Likewise.\n+\t* gcc-changelog/git_check_commit.py: Likewise.\n+\t* gcc-changelog/git_commit.py: Likewise.\n+\t* gcc-changelog/git_email.py: Likewise.\n+\t* gcc-changelog/git_repository.py: Likewise.\n+\t* gcc-changelog/git_update_version.py: Likewise.\n+\t* gcc-changelog/test_email.py: Likewise.\n+\t* mark_spam.py: Likewise.\n+\n+2022-12-14  Martin Liska  <mliska@suse.cz>\n+\n+\t* mklog.py: Check for number of hunks and not if a modified\n+\tfile is binary.\n+\n 2022-12-12  Martin Liska  <mliska@suse.cz>\n \n \t* mklog.py: Do not search PR entry in a file that is binary."}, {"sha": "d86e69366e1fff388a7be65d6ea5b09a26af81f4", "filename": "contrib/analyze_brprob.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fanalyze_brprob.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fanalyze_brprob.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fanalyze_brprob.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,4 +1,6 @@\n #!/usr/bin/env python3\n+\n+# Copyright (C) 2016-2023 Free Software Foundation, Inc.\n #\n # Script to analyze results of our branch prediction heuristics\n #"}, {"sha": "dcf5f77282ccadf493cb30f0d07f352378df67bd", "filename": "contrib/analyze_brprob_spec.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fanalyze_brprob_spec.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fanalyze_brprob_spec.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fanalyze_brprob_spec.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,5 +1,7 @@\n #!/usr/bin/env python3\n \n+# Copyright (C) 2016-2023 Free Software Foundation, Inc.\n+#\n # This file is part of GCC.\n #\n # GCC is free software; you can redistribute it and/or modify it under"}, {"sha": "daf1bce6e6f18ba10ac4722a730bb11e29b357b8", "filename": "contrib/bench-stringop", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fbench-stringop", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fbench-stringop", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fbench-stringop?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -4,7 +4,7 @@\n #\n # Contributed by Jan Hubicka <jh@suse.cz>\n #\n-# Copyright (C) 2019 Free Software Foundation, Inc.\n+# Copyright (C) 2019-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "0378d2914328e051e6ebfc7e3240cc383734761e", "filename": "contrib/check-MAINTAINERS.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fcheck-MAINTAINERS.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fcheck-MAINTAINERS.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcheck-MAINTAINERS.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env python3\n \n-# Copyright (C) 2022 Free Software Foundation, Inc.\n+# Copyright (C) 2022-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "971386fc851cf191eed18226c4b3c28633029ae0", "filename": "contrib/check-params-in-docs.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fcheck-params-in-docs.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fcheck-params-in-docs.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcheck-params-in-docs.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,4 +1,6 @@\n #!/usr/bin/env python3\n+\n+# Copyright (C) 2018-2023 Free Software Foundation, Inc.\n #\n # Find missing and extra parameters in documentation compared to\n # output of: gcc --help=params."}, {"sha": "efac33e43ef1b0f3cf00128e341fd6b6da202e89", "filename": "contrib/check_GNU_style.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fcheck_GNU_style.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fcheck_GNU_style.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcheck_GNU_style.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,4 +1,6 @@\n #!/usr/bin/env python3\n+\n+# Copyright (C) 2017-2023 Free Software Foundation, Inc.\n #\n # Checks some of the GNU style formatting rules in a set of patches.\n # The script is a rewritten of the same bash script and should eventually"}, {"sha": "d47aa0786d386ab0eccb7631de3775fe648365b9", "filename": "contrib/check_GNU_style.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fcheck_GNU_style.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fcheck_GNU_style.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcheck_GNU_style.sh?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,7 +1,7 @@\n #!/bin/sh\n \n # Checks some of the GNU style formatting rules in a set of patches.\n-# Copyright (C) 2010, 2012, 2016  Free Software Foundation, Inc.\n+# Copyright (C) 2010-2023 Free Software Foundation, Inc.\n # Contributed by Sebastian Pop <sebastian.pop@amd.com>\n \n # This program is free software; you can redistribute it and/or modify"}, {"sha": "94a742941cfcd7fd5146c1f1e940b1f18f159843", "filename": "contrib/check_GNU_style_lib.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fcheck_GNU_style_lib.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fcheck_GNU_style_lib.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcheck_GNU_style_lib.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,4 +1,6 @@\n #!/usr/bin/env python3\n+\n+# Copyright (C) 2017-2023 Free Software Foundation, Inc.\n #\n # Checks some of the GNU style formatting rules in a set of patches.\n # The script is a rewritten of the same bash script and should eventually"}, {"sha": "5c95ce9eb0d0e635eee8748c07e0ed0f0e96478b", "filename": "contrib/check_makefile_deps.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fcheck_makefile_deps.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fcheck_makefile_deps.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcheck_makefile_deps.sh?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -2,7 +2,7 @@\n #\n # Check for accurate dependencies in gcc/Makefile.in.\n #\n-# Copyright (C) 2008, 2012 Free Software Foundation, Inc.\n+# Copyright (C) 2008-2023 Free Software Foundation, Inc.\n # Written by Ralf Wildenhues <Ralf.Wildenhues@gmx.de>.\n #\n # This script is Free Software, and it can be copied, distributed and"}, {"sha": "d6218b6febd2999e99a7ec0bae4ff5ec6ead51e0", "filename": "contrib/check_warning_flags.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fcheck_warning_flags.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fcheck_warning_flags.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcheck_warning_flags.sh?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -3,7 +3,7 @@\n # Check that the warning flags documented in invoke.texi match up\n # with what the compiler accepts.\n #\n-# Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n+# Copyright (C) 2008-2023 Free Software Foundation, Inc.\n # Written by Ralf Wildenhues <Ralf.Wildenhues@gmx.de>.\n #\n # This script is Free Software, and it can be copied, distributed and"}, {"sha": "5d264aee3c60c82d5456901fc0d2c830f0424227", "filename": "contrib/clang-format", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fclang-format", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fclang-format", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fclang-format?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2015 Free Software Foundation, Inc.\n+# Copyright (C) 2015-2023 Free Software Foundation, Inc.\n #\n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by"}, {"sha": "18580c55beaf5f83f33391a3859c137f44d3d00d", "filename": "contrib/compare-all-tests", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fcompare-all-tests", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fcompare-all-tests", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcompare-all-tests?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,7 +1,7 @@\n #! /bin/bash\n \n # Compare the assembly language output for all the gcc tests.\n-# Copyright (C) 2009, 2011 Free Software Foundation, Inc.\n+# Copyright (C) 2009-2023 Free Software Foundation, Inc.\n # Contributed by Paolo Bonzini.\n #\n # Invoke it as \"bash compare-all-tests target1 target2 ... targetN\"."}, {"sha": "47659533bc9ba91e568af6ae301ec8ac29638bf6", "filename": "contrib/compare-debug", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fcompare-debug", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fcompare-debug", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcompare-debug?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -2,7 +2,7 @@\n \n # Compare stripped copies of two given object files.\n \n-# Copyright (C) 2007, 2008, 2009, 2010, 2012, 2020 Free Software Foundation\n+# Copyright (C) 2007-2023 Free Software Foundation, Inc.\n # Originally by Alexandre Oliva <aoliva@redhat.com>\n \n # This file is part of GCC."}, {"sha": "d2580ac67f7afb6fa24ccf0f70be9dbe4c2fb434", "filename": "contrib/compare-lto", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fcompare-lto", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fcompare-lto", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcompare-lto?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -2,7 +2,7 @@\n \n # Compare copies of two given object files.\n \n-# Copyright (C) 2007, 2008, 2009, 2010, 2012 Free Software Foundation\n+# Copyright (C) 2007-2023 Free Software Foundation, Inc.\n # Originally by Alexandre Oliva <aoliva@redhat.com>\n # Modified for LTO bootstrap by Richard Biener <rguenther@suse.de>\n "}, {"sha": "ed18b0b0b964f1c34ddcdf4677587d43c6117e37", "filename": "contrib/compareSumTests3", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2FcompareSumTests3", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2FcompareSumTests3", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FcompareSumTests3?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -5,7 +5,7 @@\n #\n # Author: Matthew Sachs <msachs@apple.com>\n #\n-# Copyright (c) 2006 Free Software Foundation.\n+# Copyright (C) 2006-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "2922ff5b0fbaf842b6144dbd56cddbd84bf3ba78", "filename": "contrib/compare_two_ftime_report_sets", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fcompare_two_ftime_report_sets", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fcompare_two_ftime_report_sets", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcompare_two_ftime_report_sets?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -5,7 +5,7 @@\n \n # Contributed by Lawrence Crowl <crowl@google.com>\n #\n-# Copyright (C) 2012 Free Software Foundation, Inc.\n+# Copyright (C) 2012-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "20b8f4a196fb14ea4e7500a6032b3327ea198251", "filename": "contrib/config-list.mk", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fconfig-list.mk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fconfig-list.mk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fconfig-list.mk?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -29,7 +29,7 @@ GCC_SRC_DIR=../../gcc\n #     > make.out 2>&1 &\n #\n \n-LIST = aarch64-elf aarch64-linux-gnu aarch64-rtems \\\n+LIST = aarch64-elf aarch64-freebsd13 aarch64-linux-gnu aarch64-rtems \\\n   alpha-linux-gnu alpha-netbsd alpha-openbsd \\\n   alpha64-dec-vms alpha-dec-vms \\\n   amdgcn-amdhsa \\\n@@ -48,14 +48,14 @@ LIST = aarch64-elf aarch64-linux-gnu aarch64-rtems \\\n   hppa64-hpux11.3 \\\n   hppa64-hpux11.0OPT-enable-sjlj-exceptions=yes \\\n   i686-pc-linux-gnu i686-apple-darwin i686-apple-darwin9 i686-apple-darwin10 \\\n-  i486-freebsd4 i686-freebsd6 i686-kfreebsd-gnu \\\n+  i686-freebsd13 i686-kfreebsd-gnu \\\n   i686-netbsdelf9 \\\n   i686-openbsd i686-elf i686-kopensolaris-gnu i686-symbolics-gnu \\\n   i686-pc-msdosdjgpp i686-lynxos i686-nto-qnx \\\n   i686-rtems i686-solaris2.11 i686-wrs-vxworks \\\n   i686-wrs-vxworksae \\\n   i686-cygwinOPT-enable-threads=yes i686-mingw32crt ia64-elf \\\n-  ia64-freebsd6 ia64-linux ia64-hpux ia64-hp-vms iq2000-elf lm32-elf \\\n+  ia64-linux ia64-hpux ia64-hp-vms iq2000-elf lm32-elf \\\n   lm32-rtems lm32-uclinux \\\n   loongarch64-linux-gnuf64 loongarch64-linux-gnuf32 loongarch64-linux-gnusf \\\n   m32c-elf m32r-elf m32rle-elf \\\n@@ -76,7 +76,7 @@ LIST = aarch64-elf aarch64-linux-gnu aarch64-rtems \\\n   or1k-elf or1k-linux-uclibc or1k-linux-musl or1k-rtems \\\n   pdp11-aout \\\n   powerpc-darwin8 \\\n-  powerpc-darwin7 powerpc64-darwin powerpc-freebsd6 powerpc-netbsd \\\n+  powerpc-darwin7 powerpc64-darwin powerpc-freebsd13 powerpc-netbsd \\\n   powerpc-eabisimaltivec powerpc-eabisim ppc-elf \\\n   powerpc-eabialtivec powerpc-xilinx-eabi powerpc-eabi \\\n   powerpc-rtems \\\n@@ -93,12 +93,12 @@ LIST = aarch64-elf aarch64-linux-gnu aarch64-rtems \\\n   sparc-leon-elf sparc-rtems sparc-linux-gnu \\\n   sparc-leon3-linux-gnuOPT-enable-target=all sparc-netbsdelf \\\n   sparc64-sun-solaris2.11OPT-with-gnu-ldOPT-with-gnu-asOPT-enable-threads=posix \\\n-  sparc-wrs-vxworks sparc64-elf sparc64-rtems sparc64-linux sparc64-freebsd6 \\\n+  sparc-wrs-vxworks sparc64-elf sparc64-rtems sparc64-linux \\\n   sparc64-netbsd sparc64-openbsd \\\n   v850e1-elf v850e-elf v850-elf v850-rtems vax-linux-gnu \\\n   vax-netbsdelf visium-elf x86_64-apple-darwin \\\n   x86_64-pc-linux-gnuOPT-with-fpmath=avx \\\n-  x86_64-elfOPT-with-fpmath=sse x86_64-freebsd6 x86_64-netbsd \\\n+  x86_64-elfOPT-with-fpmath=sse x86_64-freebsd13 x86_64-netbsd \\\n   x86_64-w64-mingw32 \\\n   x86_64-mingw32OPT-enable-sjlj-exceptions=yes x86_64-rtems \\\n   xstormy16-elf xtensa-elf \\"}, {"sha": "33e0605dc50d57f38c8df6ba2902056fcd866167", "filename": "contrib/dg-cmp-results.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fdg-cmp-results.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fdg-cmp-results.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fdg-cmp-results.sh?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,5 +1,5 @@\n #!/bin/bash\n-# Copyright (C) 2006, 2008 Free Software Foundation\n+# Copyright (C) 2006-2023 Free Software Foundation, Inc.\n #\n # Analyze changes in GCC DejaGNU test logs for binutils, gcc, gdb, etc.\n # Original version written in 2005 by James Lemke <jwlemke@wasabisystems.com>."}, {"sha": "7c2eb48fcd04242aed132e0536335f87725bcfc1", "filename": "contrib/dg-extract-results.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fdg-extract-results.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fdg-extract-results.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fdg-extract-results.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/python\n #\n-# Copyright (C) 2014 Free Software Foundation, Inc.\n+# Copyright (C) 2014-2023 Free Software Foundation, Inc.\n #\n # This script is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by"}, {"sha": "33968ed7b236bc063c3b87e8ab6c9e977a8b7f2a", "filename": "contrib/dg-extract-results.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fdg-extract-results.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fdg-extract-results.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fdg-extract-results.sh?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n # The resulting file can be used with test result comparison scripts for\n # results from tests that were run in parallel.  See usage() below.\n \n-# Copyright (C) 2008, 2009, 2010, 2012 Free Software Foundation\n+# Copyright (C) 2008-2023 Free Software Foundation, Inc.\n # Contributed by Janis Johnson <janis187@us.ibm.com>\n #\n # This file is part of GCC."}, {"sha": "2472c728631f25011690594403b6587f9c1d31aa", "filename": "contrib/dg-out-generator.pl", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fdg-out-generator.pl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fdg-out-generator.pl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fdg-out-generator.pl?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -0,0 +1,79 @@\n+#!/usr/bin/env perl\n+#\n+# Copyright (C) 2022-2023 Free Software Foundation, Inc.\n+# Contributed by Arsen Arsenovi\u0107.\n+#\n+# This script is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+\n+# This script reads program output on STDIN, and out of it produces a block of\n+# dg-output lines that can be yanked at the end of a file.  It will escape\n+# special ARE and Tcl constructs automatically.\n+#\n+# Each argument passed on the standard input is treated as a string to be\n+# replaced by ``.*'' in the final result.  This is intended to mask out build\n+# paths, filenames, etc.\n+#\n+# Usage example:\n+\n+# $ g++-13 -fcontracts -o test \\\n+#  'g++.dg/contracts/contracts-access1.C' && \\\n+#   ./test |& dg-out-generator.pl 'g++.dg/contracts/contracts-access1.C'\n+# // { dg-output {contract violation in function Base::b at .*:11: pub > 0(\\n|\\r\\n|\\r)} }\n+# // { dg-output {\\[level:default, role:default, continuation mode:never\\](\\n|\\r\\n|\\r)} }\n+# // { dg-output {terminate called without an active exception(\\n|\\r\\n|\\r)} }\n+\n+# You can now freely dump the above into your testcase.\n+\n+use strict;\n+use warnings;\n+use POSIX 'floor';\n+\n+my $escapees = '(' . join ('|', map { quotemeta } @ARGV) . ')';\n+\n+sub gboundary($)\n+{\n+  my $str = shift;\n+  my $sz = 10.0;\n+  for (;;)\n+    {\n+      my $bnd = join '', (map chr 64 + rand 27, 1 .. floor $sz);\n+      return $bnd unless index ($str, $bnd) >= 0;\n+      $sz += 0.1;\n+    }\n+}\n+\n+while (<STDIN>)\n+  {\n+    # Escape our escapees.\n+    my $boundary;\n+    if (@ARGV) {\n+      # Checking this is necessary to avoid a spurious .* between all\n+      # characters if no arguments are passed.\n+      $boundary = gboundary $_;\n+      s/$escapees/$boundary/g;\n+    }\n+\n+    # Quote stuff special in Tcl ARE.  This step also effectively nulls any\n+    # concern about escaping.  As long as all curly braces are escaped, the\n+    # string will, when passing through the braces rule of Tcl, be identical to\n+    # the input.\n+    s/([[\\]*+?{}()\\\\])/\\\\$1/g;\n+\n+    # Newlines should be more tolerant.\n+    s/\\n$/(\\\\n|\\\\r\\\\n|\\\\r)/;\n+\n+    # Then split out the boundary, replacing it with .*.\n+    s/$boundary/.*/g if defined $boundary;\n+\n+    # Then, let's print it in a dg-output block.  If you'd prefer /* keep in\n+    # mind that if your string contains */ it could terminate the comment\n+    # early.  Maybe add an extra s!\\*/!*()/!g or something.\n+    print \"// { dg-output {$_} }\\n\";\n+  }\n+\n+# File Local Vars:\n+# indent-tabs-mode: nil\n+# End:"}, {"sha": "54992f754bc36e95262a416ce4e49cc0f1e7cf00", "filename": "contrib/dglib.pm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fdglib.pm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fdglib.pm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fdglib.pm?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -10,7 +10,7 @@\n #\t\ttrue if and only if it is a passing result (PASS, XFAIL, or\n #\t\tKFAIL.)\n #\n-# Copyright (c) 2006 Free Software Foundation.\n+# Copyright (C) 2006-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "930f3a2a09ec036128a35a140b19b2a343a68c77", "filename": "contrib/download_prerequisites", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fdownload_prerequisites", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fdownload_prerequisites", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fdownload_prerequisites?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -77,7 +77,7 @@ The following options are available:\n \"\n \n versiontext=\"${program} ${version}\n-Copyright (C) 2016-2021 Free Software Foundation, Inc.\n+Copyright (C) 2016-2023 Free Software Foundation, Inc.\n This is free software; see the source for copying conditions.  There is NO\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n "}, {"sha": "4a89fbdc7816e5e0d8687bfc31022bf23aebb215", "filename": "contrib/filter-clang-warnings.py", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Ffilter-clang-warnings.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Ffilter-clang-warnings.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ffilter-clang-warnings.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,4 +1,6 @@\n #!/usr/bin/env python3\n+\n+# Copyright (C) 2018-2023 Free Software Foundation, Inc.\n #\n # Script to analyze warnings produced by clang.\n #\n@@ -69,18 +71,19 @@ def skip_warning(filename, message):\n args = parser.parse_args()\n \n lines = [line.strip() for line in open(args.log)]\n-total = 0\n-messages = []\n+messages = set()\n for line in lines:\n     token = ': warning: '\n     i = line.find(token)\n     if i != -1:\n         location = line[:i]\n         message = line[i + len(token):]\n+        if '/libffi/' in location or location.startswith('Makefile'):\n+            continue\n         if not skip_warning(location, message):\n-            total += 1\n-            messages.append(line)\n+            messages.add(line)\n \n for line in sorted(messages):\n     print(line)\n-print('\\nTotal warnings: %d' % total)\n+\n+print('\\nTotal warnings: %d' % len(messages))"}, {"sha": "c9ff97858a887bdfa4e8907824b6d27e98fd6fd5", "filename": "contrib/gcc-changelog/git_check_commit.py", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgcc-changelog%2Fgit_check_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgcc-changelog%2Fgit_check_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_check_commit.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,4 +1,6 @@\n #!/usr/bin/env python3\n+\n+# Copyright (C) 2020-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -40,7 +42,13 @@\n     if git_commit.success:\n         if args.print_changelog:\n             git_commit.print_output()\n+        if args.verbose and git_commit.warnings:\n+            for warning in git_commit.warnings:\n+                print('WARN: %s' % warning)\n     else:\n+        if args.verbose and git_commit.warnings:\n+            for warning in git_commit.warnings:\n+                print('WARN: %s' % warning)\n         for error in git_commit.errors:\n             print('ERR: %s' % error)\n             if args.verbose and error.details:"}, {"sha": "4f3131021f214f86b3a5211b43968879cf027d16", "filename": "contrib/gcc-changelog/git_commit.py", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgcc-changelog%2Fgit_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgcc-changelog%2Fgit_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_commit.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,4 +1,6 @@\n #!/usr/bin/env python3\n+\n+# Copyright (C) 2020-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -20,6 +22,7 @@\n import os\n import re\n import sys\n+from collections import defaultdict\n \n default_changelog_locations = {\n     'c++tools',\n@@ -160,9 +163,9 @@\n         re.compile(r'^(?P<datetime>\\d{4}-\\d{2}-\\d{2})\\ {2}(?P<name>.*  <.*>)')\n additional_author_regex = re.compile(r'^\\t(?P<spaces>\\ *)?(?P<name>.*  <.*>)')\n changelog_regex = re.compile(r'^(?:[fF]or +)?([a-z0-9+-/]*)ChangeLog:?')\n-subject_pr_regex = re.compile(r'(^|\\W)PR\\s+(?P<component>[a-zA-Z+-]+)/(?P<pr>\\d{4,7})')\n+subject_pr_regex = re.compile(r'(^|\\W)PR\\s+(?P<component>[a-zA-Z0-9+-]+)/(?P<pr>\\d{4,7})')\n subject_pr2_regex = re.compile(r'[(\\[]PR\\s*(?P<pr>\\d{4,7})[)\\]]')\n-pr_regex = re.compile(r'\\tPR (?P<component>[a-z+-]+\\/)?(?P<pr>[0-9]+)$')\n+pr_regex = re.compile(r'\\tPR (?P<component>[a-z0-9+-]+\\/)?(?P<pr>[0-9]+)$')\n dr_regex = re.compile(r'\\tDR ([0-9]+)$')\n star_prefix_regex = re.compile(r'\\t\\*(?P<spaces>\\ *)(?P<content>.*)')\n end_of_location_regex = re.compile(r'[\\[<(:]')\n@@ -302,6 +305,7 @@ def __init__(self, info, commit_to_info_hook=None, ref_name=None):\n         self.changes = None\n         self.changelog_entries = []\n         self.errors = []\n+        self.warnings = []\n         self.top_level_authors = []\n         self.co_authors = []\n         self.top_level_prs = []\n@@ -704,6 +708,7 @@ def check_mentioned_files(self):\n                 msg += f' (did you mean \"{candidates[0]}\"?)'\n                 details = '\\n'.join(difflib.Differ().compare([file], [candidates[0]])).rstrip()\n             self.errors.append(Error(msg, file, details))\n+        auto_add_warnings = defaultdict(list)\n         for file in sorted(changed_files - mentioned_files):\n             if not self.in_ignored_location(file):\n                 if file in self.new_files:\n@@ -736,6 +741,7 @@ def check_mentioned_files(self):\n                         file = file[len(entry.folder):].lstrip('/')\n                         entry.lines.append('\\t* %s: New file.' % file)\n                         entry.files.append(file)\n+                        auto_add_warnings[entry.folder].append(file)\n                     else:\n                         msg = 'new file in the top-level folder not mentioned in a ChangeLog'\n                         self.errors.append(Error(msg, file))\n@@ -753,6 +759,11 @@ def check_mentioned_files(self):\n             if pattern not in used_patterns:\n                 error = \"pattern doesn't match any changed files\"\n                 self.errors.append(Error(error, pattern))\n+        for entry, val in auto_add_warnings.items():\n+            if len(val) == 1:\n+                self.warnings.append(f\"Auto-added new file '{entry}/{val[0]}'\")\n+            else:\n+                self.warnings.append(f\"Auto-added {len(val)} new files in '{entry}'\")\n \n     def check_for_correct_changelog(self):\n         for entry in self.changelog_entries:\n@@ -828,6 +839,12 @@ def print_errors(self):\n         for error in self.errors:\n             print(error)\n \n+    def print_warnings(self):\n+        if self.warnings:\n+            print('Warnings:')\n+            for warning in self.warnings:\n+                print(warning)\n+\n     def check_commit_email(self):\n         # Parse 'Martin Liska  <mliska@suse.cz>'\n         email = self.info.author.split(' ')[-1].strip('<>')"}, {"sha": "49f41f2ec9959b059a9ec78eed6733aeb2fe5b0b", "filename": "contrib/gcc-changelog/git_email.py", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgcc-changelog%2Fgit_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgcc-changelog%2Fgit_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_email.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,4 +1,6 @@\n #!/usr/bin/env python3\n+\n+# Copyright (C) 2020-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -37,14 +39,15 @@\n class GitEmail(GitCommit):\n     def __init__(self, filename):\n         self.filename = filename\n-        diff = PatchSet.from_filename(filename, newline='\\n')\n         date = None\n         author = None\n         subject = ''\n \n         subject_last = False\n-        with open(self.filename, 'r') as f:\n-            lines = f.read().splitlines()\n+        with open(self.filename, newline='\\n') as f:\n+            data = f.read()\n+            diff = PatchSet(data)\n+            lines = data.splitlines()\n         lines = list(takewhile(lambda line: line != '---', lines))\n         for line in lines:\n             if line.startswith(DATE_PREFIX):\n@@ -116,11 +119,13 @@ def show_help():\n \n         success = 0\n         for full in sorted(allfiles):\n-            email = GitEmail(full, False)\n+            email = GitEmail(full)\n             print(email.filename)\n             if email.success:\n                 success += 1\n                 print('  OK')\n+                for warning in email.warnings:\n+                    print('  WARN: %s' % warning)\n             else:\n                 for error in email.errors:\n                     print('  ERR: %s' % error)\n@@ -132,6 +137,7 @@ def show_help():\n         if email.success:\n             print('OK')\n             email.print_output()\n+            email.print_warnings()\n         else:\n             if not email.info.lines:\n                 print('Error: patch contains no parsed lines', file=sys.stderr)"}, {"sha": "672f5f9579bbfd02e5d6b81ad106b55c7b007d3d", "filename": "contrib/gcc-changelog/git_repository.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgcc-changelog%2Fgit_repository.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgcc-changelog%2Fgit_repository.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_repository.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,4 +1,6 @@\n #!/usr/bin/env python3\n+\n+# Copyright (C) 2020-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "bbba3b53251f6d271118f8b6520cf9ca74d0b033", "filename": "contrib/gcc-changelog/git_update_version.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgcc-changelog%2Fgit_update_version.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgcc-changelog%2Fgit_update_version.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_update_version.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,4 +1,6 @@\n #!/usr/bin/env python3\n+\n+# Copyright (C) 2020-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "a606029e25fdd8ee55bd437e0b8a4245ddfb4aa6", "filename": "contrib/gcc-changelog/setup.cfg", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgcc-changelog%2Fsetup.cfg", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgcc-changelog%2Fsetup.cfg", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fsetup.cfg?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -2,4 +2,4 @@\n max-line-length = 120\n \n [tool:pytest]\n-addopts = -vv --flake8\n+addopts = -vv"}, {"sha": "4adf728f11ba8d1027bc1b98d641907b813168ca", "filename": "contrib/gcc-changelog/test_email.py", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgcc-changelog%2Ftest_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgcc-changelog%2Ftest_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_email.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,4 +1,6 @@\n #!/usr/bin/env python3\n+\n+# Copyright (C) 2020-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -459,3 +461,21 @@ def test_space_after_tab(self):\n     def test_CR_in_patch(self):\n         email = self.from_patch_glob('0001-Add-M-character.patch')\n         assert (email.errors[0].message == 'cannot find a ChangeLog location in message')\n+\n+    def test_auto_add_file_1(self):\n+        email = self.from_patch_glob('0001-Auto-Add-File.patch')\n+        assert not email.errors\n+        assert (len(email.warnings) == 1)\n+        assert (email.warnings[0]\n+                == \"Auto-added new file 'libgomp/testsuite/libgomp.fortran/allocate-4.f90'\")\n+\n+    def test_auto_add_file_2(self):\n+        email = self.from_patch_glob('0002-Auto-Add-File.patch')\n+        assert not email.errors\n+        assert (len(email.warnings) == 2)\n+        assert (email.warnings[0] == \"Auto-added new file 'gcc/doc/gm2.texi'\")\n+        assert (email.warnings[1] == \"Auto-added 2 new files in 'gcc/m2'\")\n+\n+    def test_digit_in_PR_component(self):\n+        email = self.from_patch_glob('modula-PR-component.patch')\n+        assert not email.errors"}, {"sha": "1d120f8e4723fc40941c34a709f8541f033e0449", "filename": "contrib/gcc-changelog/test_patches.txt", "status": "modified", "additions": 122, "deletions": 1, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgcc-changelog%2Ftest_patches.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgcc-changelog%2Ftest_patches.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_patches.txt?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -3536,7 +3536,7 @@ index 765ae746745..15735b6684f 100644\n @@ -1,3 +1,4 @@\n +\n  /* Interprocedural Identical Code Folding pass\n-    Copyright (C) 2014-2022 Free Software Foundation, Inc.\n+    Copyright (C) 2014-2023 Free Software Foundation, Inc.\n  \n diff --git a/gcc/ipa-icf2.cc b/gcc/ipa-icf2.cc\n new file mode 100644\n@@ -3636,3 +3636,124 @@ index 0000000..d75da75\n -- \n 2.38.1\n \n+=== 0001-Auto-Add-File.patch ====\n+From e205ec03f0794aeac3e8a89e947c12624d5a274e Mon Sep 17 00:00:00 2001\n+From: Tobias Burnus <tobias@codesourcery.com>\n+Date: Thu, 15 Dec 2022 12:25:07 +0100\n+Subject: [PATCH] libgfortran's ISO_Fortran_binding.c: Use GCC11 version for\n+ backward-only code [PR108056]\n+\n+libgfortran/ChangeLog:\n+\n+\tPR libfortran/108056\n+\t* runtime/ISO_Fortran_binding.c (cfi_desc_to_gfc_desc,\n+\tgfc_desc_to_cfi_desc): Mostly revert to GCC 11 version for\n+\tthose backward-compatiblity-only functions.\n+---\n+ libgfortran/runtime/ISO_Fortran_binding.c     | 151 +++---------------\n+ .../testsuite/libgomp.fortran/allocate-4.f90  |  42 +++++\n+ 2 files changed, 64 insertions(+), 129 deletions(-)\n+ create mode 100644 libgomp/testsuite/libgomp.fortran/allocate-4.f90\n+\n+diff --git a/libgfortran/runtime/ISO_Fortran_binding.c b/libgfortran/runtime/ISO_Fortran_binding.c\n+index 342df4275b9..e63a717a69b 100644\n+--- a/libgfortran/runtime/ISO_Fortran_binding.c\n++++ b/libgfortran/runtime/ISO_Fortran_binding.c\n+@@ -41,1 +41,1 @@ export_proto(cfi_desc_to_gfc_desc);\n+-  signed char type;\n++  size_t type;\n+diff --git a/libgomp/testsuite/libgomp.fortran/allocate-4.f90 b/libgomp/testsuite/libgomp.fortran/allocate-4.f90\n+new file mode 100644\n+index 00000000000..ddb507ba8e4\n+--- /dev/null\n++++ b/libgomp/testsuite/libgomp.fortran/allocate-4.f90\n+@@ -0,0 +1,1 @@\n++end\n+-- \n+2.25.1\n+\n+=== 0002-Auto-Add-File.patch ====\n+From 1eee94d351774cdc2efc8ee508b82d065184c6ee Mon Sep 17 00:00:00 2001\n+From: Gaius Mulley <gaiusmod2@gmail.com>\n+Date: Wed, 14 Dec 2022 17:43:08 +0000\n+Subject: [PATCH 363/400] Merge modula-2 front end onto gcc.\n+\n+This commit merges the devel/modula2 into master.\n+The libraries reside in libgm2, the compiler in gcc/m2\n+and the testsuite in gcc/testsuite/gm2.\n+\n+gcc/ChangeLog:\n+\n+\t* configure.ac (HAVE_PYTHON): Test for Python3 added.\n+\t* doc/install.texi: Add m2 as a language.  (--disable-libgm2)\n+\n+Signed-off-by: Gaius Mulley <gaiusmod2@gmail.com>\n+---\n+ gcc/configure.ac                              |    15 +-\n+ gcc/doc/gm2.texi                              |  2838 ++\n+ gcc/doc/install.texi                          |    53 +-\n+ gcc/m2/COPYING.FDL                            |   397 +\n+ gcc/m2/COPYING.RUNTIME                        |    73 +\n+diff --git a/gcc/configure.ac b/gcc/configure.ac\n+index 7ca08726efa..5efbf11793c 100644\n+--- a/gcc/configure.ac\n++++ b/gcc/configure.ac\n+@@ -7651,3 +7665,2 @@ done\n+ [subdirs='$subdirs'])\n+ AC_OUTPUT\n+-\n+diff --git a/gcc/doc/gm2.texi b/gcc/doc/gm2.texi\n+new file mode 100644\n+index 00000000000..513fdd3ec7f\n+--- /dev/null\n++++ b/gcc/doc/gm2.texi\n+@@ -0,0 +1,1 @@\n++\\input texinfo\n+diff --git a/gcc/doc/install.texi b/gcc/doc/install.texi\n+index 89ff6a6734b..6884a74936b 100644\n+--- a/gcc/doc/install.texi\n++++ b/gcc/doc/install.texi\n+@@ -308,1 +308,2 @@ On some targets, @samp{libphobos} isn't enabled by default, but compiles\n+ \n++@item @anchor{GM2-prerequisite}GM2\n+diff --git a/gcc/m2/COPYING.FDL b/gcc/m2/COPYING.FDL\n+new file mode 100644\n+index 00000000000..9854856fa81\n+--- /dev/null\n++++ b/gcc/m2/COPYING.FDL\n+@@ -0,0 +1,1 @@\n++\t\tGNU Free Documentation License\n+diff --git a/gcc/m2/COPYING.RUNTIME b/gcc/m2/COPYING.RUNTIME\n+new file mode 100644\n+index 00000000000..649af5e573a\n+--- /dev/null\n++++ b/gcc/m2/COPYING.RUNTIME\n+@@ -0,0 +1,1 @@\n++GCC RUNTIME LIBRARY EXCEPTION\n+-- \n+2.25.1\n+\n+=== modula-PR-component.patch ===\n+From 1052d89a0b9769453561e18da32b1558d059b320 Mon Sep 17 00:00:00 2001\n+From: Martin Liska <mliska@suse.cz>\n+Date: Mon, 19 Dec 2022 14:34:18 +0100\n+Subject: [PATCH] gcc-changelog: allow digit in component name\n+\n+\tPR modula2/123456\n+\n+contrib/ChangeLog:\n+\n+\t* gcc-changelog/git_commit.py: Allow digit in component name.\n+---\n+ contrib/gcc-changelog/git_commit.py | 2 +-\n+ 1 file changed, 1 insertion(+), 1 deletion(-)\n+\n+diff --git a/contrib/gcc-changelog/git_commit.py b/contrib/gcc-changelog/git_commit.py\n+index e82fbcacd3e..7fde02cba85 100755\n+--- a/contrib/gcc-changelog/git_commit.py\n++++ b/contrib/gcc-changelog/git_commit.py\n+@@ -0,0 +1,1 @@\n++\t\tGNU Free Documentation License\n+-- \n+2.39.0\n+"}, {"sha": "8abae8e5259b9ad3cdbc639ba45030e4c97e2613", "filename": "contrib/gcc_build", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgcc_build", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgcc_build", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc_build?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -11,7 +11,7 @@\n # Contents:\n #   Script to automatically download and build GCC.\n #\n-# Copyright (c) 2000, 2001, 2003, 2005 Free Software Foundation.\n+# Copyright (C) 2000-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "1bfc67ac91adcbf4d2fcc9ca922330aac19f7533", "filename": "contrib/gcc_update", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgcc_update", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgcc_update", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc_update?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -4,7 +4,7 @@\n # repository, with an emphasis on treating generated files correctly, so\n # that autoconf, gperf et al are not required for the ``end'' user.\n #\n-# (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009, \n+# (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009,\n # 2010, 2011, 2012, 2013, 2014, 2015, 2017 Free Software Foundation\n # Originally by Gerald Pfeifer <gerald@pfeifer.com>, August 1998.\n #\n@@ -96,6 +96,9 @@ gcc/config/rs6000/fusion.md: gcc/config/rs6000/genfusion.pl\n gcc/cp/cfns.h: gcc/cp/cfns.gperf\n gcc/cp/std-name-hint.h: gcc/cp/std-name-hint.gperf\n gcc/cp/std-name-hint.gperf: gcc/cp/cxxapi-data.csv\n+gcc/m2/configure: gcc/m2/configure.ac\n+gcc/m2/gm2config.h.in: gcc/m2/configure.ac\n+gcc/m2/gm2-libs/config-host: gcc/m2/gm2-libs/config-host.in\n # testsuite\n # Without this, _Pragma3.c can have a false negative.\n gcc/testsuite/gcc.dg/cpp/_Pragma3.c: gcc/testsuite/gcc.dg/cpp/mi1c.h\n@@ -128,6 +131,13 @@ libffi/configure: libffi/configure.ac libffi/aclocal.m4\n libffi/fficonfig.h.in: libffi/configure.ac libffi/aclocal.m4\n libgfortran/aclocal.m4: libgfortran/configure.ac libgfortran/acinclude.m4\n libgfortran/Makefile.in: libgfortran/Makefile.am libgfortran/configure.ac libgfortran/aclocal.m4\n+libgm2/Makefile.in: libgm2/Makefile.am libgm2/configure.ac libgm2/aclocal.m4\n+libgm2/aclocal.m4: libgm2/configure.ac\n+libgm2/libm2cor/Makefile.in: libgm2/libm2cor/Makefile.am\n+libgm2/libm2pim/Makefile.in: libgm2/libm2pim/Makefile.am\n+libgm2/libm2iso/Makefile.in: libgm2/libm2iso/Makefile.am\n+libgm2/libm2log/Makefile.in: libgm2/libm2log/Makefile.am\n+libgm2/libm2min/Makefile.in: libgm2/libm2min/Makefile.am\n libquadmath/configure: libquadmath/configure.ac libquadmath/aclocal.m4\n libquadmath/aclocal.m4: libquadmath/configure.ac libquadmath/acinclude.m4\n libquadmath/Makefile.in: libquadmath/Makefile.am libquadmath/configure.ac libgfortran/aclocal.m4\n@@ -345,7 +355,7 @@ case $vcs_type in\n \t\tfi\n \tfi\n \tbranch=`$GCC_GIT name-rev --name-only HEAD || :`\n-\t;;    \n+\t;;\n \n     hg)\n \tchat \"Updating HG tree\""}, {"sha": "ac23b83888db72c250fcccd1adfa96abc88795be", "filename": "contrib/gen_autofdo_event.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgen_autofdo_event.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgen_autofdo_event.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgen_autofdo_event.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,7 +1,7 @@\n #!/usr/bin/python3\n # Generate Intel taken branches Linux perf event script for autofdo profiling.\n \n-# Copyright (C) 2016 Free Software Foundation, Inc.\n+# Copyright (C) 2016-2023 Free Software Foundation, Inc.\n #\n # GCC is free software; you can redistribute it and/or modify it under\n # the terms of the GNU General Public License as published by the Free"}, {"sha": "4ecdf18faf2f76385c0f87496f2fccd3822dffca", "filename": "contrib/gennews", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgennews", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgennews", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgennews?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -3,7 +3,7 @@\n # Script to generate the NEWS file from online release notes.\n # Contributed by Joseph Myers <jsm28@cam.ac.uk>.\n #\n-# Copyright (C) 2000-2022 Free Software Foundation, Inc.\n+# Copyright (C) 2000-2023 Free Software Foundation, Inc.\n # This file is part of GCC.\n #\n # GCC is free software; you can redistribute it and/or modify"}, {"sha": "c37bc22891b357b0c3adba0b49fbcbcb6efe53a5", "filename": "contrib/git-backport.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgit-backport.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgit-backport.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgit-backport.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env python3\n \n-# Copyright (C) 2020 Free Software Foundation, Inc.\n+# Copyright (C) 2020-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "ff01da764cbb931db2ebb7119e12456682517257", "filename": "contrib/git-commit-mklog.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgit-commit-mklog.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgit-commit-mklog.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgit-commit-mklog.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env python3\n \n-# Copyright (C) 2020 Free Software Foundation, Inc.\n+# Copyright (C) 2020-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "e826576fad205b4815ba1a8bb1de6b24691c271e", "filename": "contrib/git-fix-changelog.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgit-fix-changelog.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fgit-fix-changelog.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgit-fix-changelog.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env python3\n \n-# Copyright (C) 2020 Free Software Foundation, Inc.\n+# Copyright (C) 2020-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "750d81c324b0583f791f0ccd0151a86ff5cd61f6", "filename": "contrib/jit-coverage-report.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fjit-coverage-report.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fjit-coverage-report.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fjit-coverage-report.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -4,7 +4,7 @@\n # cases, and which lack test coverage.  Tested with Python 2.7 and 3.2\n # To be run from the root directory of the source tree.\n #\n-# Copyright (C) 2014 Free Software Foundation, Inc.\n+# Copyright (C) 2014-2023 Free Software Foundation, Inc.\n # Written by David Malcolm <dmalcolm@redhat.com>.\n #\n # This script is Free Software, and it can be copied, distributed and"}, {"sha": "3407d0bc1f8a449c13b7e09cb783a3873a4e37cc", "filename": "contrib/legacy/mklog", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Flegacy%2Fmklog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Flegacy%2Fmklog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Flegacy%2Fmklog?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env python3\n \n-# Copyright (C) 2017-2019 Free Software Foundation, Inc.\n+# Copyright (C) 2017-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "7b8cb5844fc76ff69f04c84adbb9ee0c34d5138c", "filename": "contrib/legacy/mklog.pl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Flegacy%2Fmklog.pl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Flegacy%2Fmklog.pl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Flegacy%2Fmklog.pl?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/perl\n-# Copyright (C) 2012-2017 Free Software Foundation, Inc.\n+# Copyright (C) 2012-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "d16ea5f75a56def52577fcb131c28ed8902b3924", "filename": "contrib/mark_spam.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fmark_spam.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fmark_spam.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fmark_spam.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,4 +1,6 @@\n #!/usr/bin/env python3\n+\n+# Copyright (C) 2016-2023 Free Software Foundation, Inc.\n #\n # Script to mark bunch of PRs as spam \n #"}, {"sha": "777212c98d75f5f50b988e35fdd992619bcb5240", "filename": "contrib/mklog.py", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fmklog.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fmklog.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fmklog.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env python3\n \n-# Copyright (C) 2020 Free Software Foundation, Inc.\n+# Copyright (C) 2020-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -186,8 +186,9 @@ def generate_changelog(data, no_functions=False, fill_pr_titles=False,\n             # contains commented code which a note that it\n             # has not been tested due to a certain PR or DR.\n             this_file_prs = []\n-            if not file.is_binary_file:\n-                for line in list(file)[0][0:10]:\n+            hunks = list(file)\n+            if hunks:\n+                for line in hunks[0][0:10]:\n                     m = pr_regex.search(line.value)\n                     if m:\n                         pr = m.group('pr')"}, {"sha": "155ffa22f680598ca14749a1d646dd4d87267012", "filename": "contrib/patch_tester.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fpatch_tester.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fpatch_tester.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fpatch_tester.sh?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,7 +1,7 @@\n #!/bin/sh\n \n # Tests a set of patches from a directory.\n-# Copyright (C) 2007, 2008, 2011  Free Software Foundation, Inc.\n+# Copyright (C) 2007-2023 Free Software Foundation, Inc.\n # Contributed by Sebastian Pop <sebastian.pop@amd.com>\n \n # This program is free software; you can redistribute it and/or modify"}, {"sha": "48c9dad3c6f487cf8778e737e51d7cdf633d9d68", "filename": "contrib/prepare-commit-msg", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fprepare-commit-msg", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fprepare-commit-msg", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fprepare-commit-msg?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,6 +1,6 @@\n #!/bin/sh\n \n-# Copyright (C) 2020 Free Software Foundation, Inc.\n+# Copyright (C) 2020-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "1e04b758d258bda2a32d8a12040585cd7ac91698", "filename": "contrib/prepare_patch.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fprepare_patch.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fprepare_patch.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fprepare_patch.sh?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -2,7 +2,7 @@\n #set -x\n \n # Prepares a patch for the patch tester.\n-# Copyright (C) 2007  Free Software Foundation, Inc.\n+# Copyright (C) 2007-2023 Free Software Foundation, Inc.\n # Contributed by Sebastian Pop <sebastian.pop@amd.com>\n \n # This program is free software; you can redistribute it and/or modify"}, {"sha": "c390ee0cd7863c0683088852f1a23e3d4cf28a00", "filename": "contrib/reghunt/bin/gcc-build-full", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Fgcc-build-full", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Fgcc-build-full", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Freghunt%2Fbin%2Fgcc-build-full?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -3,7 +3,7 @@\n # Perform a simple build of GCC for a particular language, using several\n # environment variables defined by reghunt scripts and config files.\n #\n-# Copyright (C) 2007 Free Software Foundation.\n+# Copyright (C) 2007-2023 Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by"}, {"sha": "ec5860a5f3c53bbad4d250929be7fdb8b60a7ff3", "filename": "contrib/reghunt/bin/gcc-build-simple", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Fgcc-build-simple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Fgcc-build-simple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Freghunt%2Fbin%2Fgcc-build-simple?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -5,7 +5,7 @@\n #\n # This doesn't work for sources earlier than about 2003-02-25.\n #\n-# Copyright (C) 2007 Free Software Foundation.\n+# Copyright (C) 2007-2023 Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by"}, {"sha": "38b49ff938bb44f636531a6d3b9b425645a8a2fc", "filename": "contrib/reghunt/bin/gcc-svn-patchlist", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Fgcc-svn-patchlist", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Fgcc-svn-patchlist", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Freghunt%2Fbin%2Fgcc-svn-patchlist?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -4,7 +4,7 @@\n # by default) between the specified dates.  This skips commits that do\n # not modify any existing files and changes by gccadmin.\n #\n-# Copyright (C) 2007 Free Software Foundation.\n+# Copyright (C) 2007-2023 Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by"}, {"sha": "a4a4ac7bafd5b602cc546b52347a537b44b8c4cb", "filename": "contrib/reghunt/bin/gcc-svn-update", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Fgcc-svn-update", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Fgcc-svn-update", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Freghunt%2Fbin%2Fgcc-svn-update?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -3,7 +3,7 @@\n # Update or check out GCC sources for a particular Subversion revision\n # and a particular branch.\n #\n-# Copyright (C) 2007 Free Software Foundation.\n+# Copyright (C) 2007-2023 Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by"}, {"sha": "b20022cb869c96dad26b949f4a01dc165223c110", "filename": "contrib/reghunt/bin/gcc-test-accepts-invalid", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Fgcc-test-accepts-invalid", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Fgcc-test-accepts-invalid", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Freghunt%2Fbin%2Fgcc-test-accepts-invalid?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -3,7 +3,7 @@\n # Test an \"accepts-invalid\" GCC bug, using environment variables set in\n # several reghunt scripts and configuration files.\n #\n-# Copyright (C) 2007 Free Software Foundation.\n+# Copyright (C) 2007-2023 Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by"}, {"sha": "4d5e6e92f35ea557006ce6b73baf3bd31833fbcc", "filename": "contrib/reghunt/bin/gcc-test-bogus-warning", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Fgcc-test-bogus-warning", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Fgcc-test-bogus-warning", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Freghunt%2Fbin%2Fgcc-test-bogus-warning?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -3,7 +3,7 @@\n # Test a \"bogus-warning\" GCC bug, using environment variables set in\n # several reghunt scripts and configuration files.\n #\n-# Copyright (C) 2007 Free Software Foundation.\n+# Copyright (C) 2007-2023 Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by"}, {"sha": "cd30c1e56344655dc3929cf0b5e69d9bc98dedf5", "filename": "contrib/reghunt/bin/gcc-test-compiler-hangs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Fgcc-test-compiler-hangs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Fgcc-test-compiler-hangs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Freghunt%2Fbin%2Fgcc-test-compiler-hangs?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -3,7 +3,7 @@\n # Test a bug for which the compiler hangs, using environment variables\n # set in several reghunt scripts and configuration files.\n #\n-# Copyright (C) 2007 Free Software Foundation.\n+# Copyright (C) 2007-2023 Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by"}, {"sha": "002a941907c494189f9ccd3a20157ac447fb4278", "filename": "contrib/reghunt/bin/gcc-test-ice-on-invalid-code", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Fgcc-test-ice-on-invalid-code", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Fgcc-test-ice-on-invalid-code", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Freghunt%2Fbin%2Fgcc-test-ice-on-invalid-code?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -3,7 +3,7 @@\n # Test an \"ice-on-invalid-code\" GCC bug, using environment variables set\n # in several reghunt scripts and configuration files.\n #\n-# Copyright (C) 2007 Free Software Foundation.\n+# Copyright (C) 2007-2023 Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by"}, {"sha": "b49738e6131ab18393c74b4bae4a5a73dccc4b9d", "filename": "contrib/reghunt/bin/gcc-test-ice-on-valid-code", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Fgcc-test-ice-on-valid-code", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Fgcc-test-ice-on-valid-code", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Freghunt%2Fbin%2Fgcc-test-ice-on-valid-code?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -3,7 +3,7 @@\n # Test an \"ice-on-valid-code\" GCC bug, using environment variables set\n # in several reghunt scripts and configuration files.\n #\n-# Copyright (C) 2007 Free Software Foundation.\n+# Copyright (C) 2007-2023 Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by"}, {"sha": "c82c1e0792f9c251f0f65e7ef74a2077fccb70ab", "filename": "contrib/reghunt/bin/gcc-test-missing-warning", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Fgcc-test-missing-warning", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Fgcc-test-missing-warning", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Freghunt%2Fbin%2Fgcc-test-missing-warning?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -3,7 +3,7 @@\n # Test a \"missing-warning\" GCC bug, using environment variables set in\n # several reghunt scripts and configuration files.\n #\n-# Copyright (C) 2007 Free Software Foundation.\n+# Copyright (C) 2007-2023 Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by"}, {"sha": "b2eec5c882cecc6a14066c7393d4e2b6c834fd46", "filename": "contrib/reghunt/bin/gcc-test-rejects-valid", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Fgcc-test-rejects-valid", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Fgcc-test-rejects-valid", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Freghunt%2Fbin%2Fgcc-test-rejects-valid?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -3,7 +3,7 @@\n # Test a \"rejects-valid\" GCC bug, using environment variables set in\n # several reghunt scripts and configuration files.\n #\n-# Copyright (C) 2007 Free Software Foundation.\n+# Copyright (C) 2007-2023 Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by"}, {"sha": "a20b52c3a259cd3537fd2be91d6b2d170d0bae4a", "filename": "contrib/reghunt/bin/gcc-test-segfault-on-valid-code", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Fgcc-test-segfault-on-valid-code", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Fgcc-test-segfault-on-valid-code", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Freghunt%2Fbin%2Fgcc-test-segfault-on-valid-code?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -4,7 +4,7 @@\n # segfault, using environment variables set in several reghunt scripts\n # and configuration files.\n #\n-# Copyright (C) 2007 Free Software Foundation.\n+# Copyright (C) 2007-2023 Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by"}, {"sha": "63d2cb56bb3151b434f4e88e45a8727ebbaf8d75", "filename": "contrib/reghunt/bin/gcc-test-wrong-code", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Fgcc-test-wrong-code", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Fgcc-test-wrong-code", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Freghunt%2Fbin%2Fgcc-test-wrong-code?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -3,7 +3,7 @@\n # Test a \"wrong-code\" GCC bug, using environment variables set in\n # several reghunt scripts and configuration files.\n #\n-# Copyright (C) 2007 Free Software Foundation.\n+# Copyright (C) 2007-2023 Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by"}, {"sha": "6427535dabe1aaf189a4e58ada4c01b36f882d1e", "filename": "contrib/reghunt/bin/reg-hunt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Freg-hunt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Freg-hunt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Freghunt%2Fbin%2Freg-hunt?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -47,7 +47,7 @@\n #\n #\n #\n-# Copyright (c) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.\n+# Copyright (C) 2002-2023 Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by"}, {"sha": "314a29b9d77b89baed98e32d4222e1dd9ee5255a", "filename": "contrib/reghunt/bin/reg-newmid", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Freg-newmid", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Freg-newmid", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Freghunt%2Fbin%2Freg-newmid?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -10,7 +10,7 @@\n # A nifty improvement would be to record known ranges of failure as\n # ranges, and then pick revisions just before and just after the range.\n #\n-# Copyright (C) 2006 Free Software Foundation, Inc.\n+# Copyright (C) 2006-2023 Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by"}, {"sha": "c93baa75f41c5393313bd6c8fdb76afe75952bc8", "filename": "contrib/reghunt/bin/reg-test", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Freg-test", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fbin%2Freg-test", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Freghunt%2Fbin%2Freg-test?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -25,7 +25,7 @@\n #               is STOP in the current directory.\n #\n #\n-# Copyright (c) 2002, 2003, 2005 Free Software Foundation, Inc.\n+# Copyright (C) 2002-2023 Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by"}, {"sha": "de0166d672c86dc80685f133a81a46c7571c165e", "filename": "contrib/reghunt/date_based/reg_periodic", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fdate_based%2Freg_periodic", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fdate_based%2Freg_periodic", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Freghunt%2Fdate_based%2Freg_periodic?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -25,7 +25,7 @@\n #               is STOP in the current directory.\n #\n #\n-# Copyright (c) 2002, 2003, 2005, 2009, 2010 Free Software Foundation, Inc.\n+# Copyright (C) 2002-2023 Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by"}, {"sha": "92d949c04fafa41f50b0b645465079877ddd73a6", "filename": "contrib/reghunt/date_based/reg_search", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fdate_based%2Freg_search", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Freghunt%2Fdate_based%2Freg_search", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Freghunt%2Fdate_based%2Freg_search?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -45,7 +45,7 @@\n #\n #\n #\n-# Copyright (c) 2002, 2003, 2005, 2009, 2010 Free Software Foundation, Inc.\n+# Copyright (C) 2002-2023 Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by"}, {"sha": "565f4e352deb54f70011b460fd14f72627aa01e4", "filename": "contrib/regression/GCC_Regression_Tester.wdgt/widget.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fregression%2FGCC_Regression_Tester.wdgt%2Fwidget.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fregression%2FGCC_Regression_Tester.wdgt%2Fwidget.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fregression%2FGCC_Regression_Tester.wdgt%2Fwidget.html?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,5 +1,5 @@\n <!-- Get and update the GCC regression tester's web page.\n-     Copyright (C) 2005, 2007, 2009 Free Software Foundation, Inc.\n+     Copyright (C) 2005-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "1808fcc392faf76332117ad23fe35be7c9da183f", "filename": "contrib/regression/btest-gcc.sh", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fregression%2Fbtest-gcc.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fregression%2Fbtest-gcc.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fregression%2Fbtest-gcc.sh?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,8 +1,7 @@\n #!/bin/sh\n \n #  Test GCC.\n-#  Copyright (C) 1999, 2000, 2001, 2002, 2005, 2006, 2009, 2012\n-#  Free Software Foundation, Inc.\n+#  Copyright (C) 1999-2023 Free Software Foundation, Inc.\n \n #  This program is free software; you can redistribute it and/or modify\n #  it under the terms of the GNU General Public License as published by"}, {"sha": "4c6ab1e1b7cb6565ea42160c7c7ca40c86e4b7ac", "filename": "contrib/regression/mkindex.pl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fregression%2Fmkindex.pl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fregression%2Fmkindex.pl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fregression%2Fmkindex.pl?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,7 +1,7 @@\n #!/usr/bin/perl\n \n # Copy log files from a GCC build for HTTP access.\n-# Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+# Copyright (C) 2008-2023 Free Software Foundation, Inc.\n # \n # This program is free software: you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by"}, {"sha": "ea7820f33fac1ad62aba8b0a7c9c74b4498a2ff2", "filename": "contrib/regression/objs-gcc.sh", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fregression%2Fobjs-gcc.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fregression%2Fobjs-gcc.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fregression%2Fobjs-gcc.sh?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,8 +1,7 @@\n #!/bin/sh\n \n #  Build tools for testing GCC.\n-#  Copyright (C) 1999, 2000, 2001, 2002, 2009\n-#  Free Software Foundation, Inc.\n+#  Copyright (C) 1999-2023 Free Software Foundation, Inc.\n \n #  This program is free software; you can redistribute it and/or modify\n #  it under the terms of the GNU General Public License as published by"}, {"sha": "b15b20f49e9d3d8664feca5b42970fbd1a1d3dab", "filename": "contrib/test_installed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Ftest_installed", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Ftest_installed", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ftest_installed?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -60,7 +60,7 @@ while true; do\n \n   --help) cat <<\\EOF\n Runs the testsuite for an installed version of gcc/g++/gfortran/objc\n-Copyright (C) 1998  Free Software Foundation\n+Copyright (C) 1998-2023 Free Software Foundation, Inc.\n by Alexandre Oliva <oliva@dcc.unicamp.br>\n \n Supported arguments:"}, {"sha": "d1ee60db84055944ac9dc9b96b54707e2d204722", "filename": "contrib/test_mklog.py", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Ftest_mklog.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Ftest_mklog.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ftest_mklog.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env python3\n \n-# Copyright (C) 2020 Free Software Foundation, Inc.\n+# Copyright (C) 2020-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -155,7 +155,7 @@\n +\n +\n  /* Interprocedural Identical Code Folding pass\n-    Copyright (C) 2014-2020 Free Software Foundation, Inc.\n+    Copyright (C) 2014-2023 Free Software Foundation, Inc.\n  \n diff --git a/gcc/testsuite/gcc.dg/pr32374.c b/gcc/testsuite/gcc.dg/pr32374.c\n deleted file mode 100644\n@@ -222,7 +222,7 @@\n +\n +\n  /* Output variables, constants and external declarations, for GNU compiler.\n-    Copyright (C) 1987-2020 Free Software Foundation, Inc.\n+    Copyright (C) 1987-2023 Free Software Foundation, Inc.\n  \n diff --git a/libssp/gets-chk.c b/libssp/gets-chk.c\n index 4ad78c1f77b..6687b368038 100644"}, {"sha": "43d9d50af8dfec5ac32507f45f433c89235aa9ef", "filename": "contrib/testsuite-management/validate_failures.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Ftestsuite-management%2Fvalidate_failures.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Ftestsuite-management%2Fvalidate_failures.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ftestsuite-management%2Fvalidate_failures.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -5,7 +5,7 @@\n \n # Contributed by Diego Novillo <dnovillo@google.com>\n #\n-# Copyright (C) 2011-2013 Free Software Foundation, Inc.\n+# Copyright (C) 2011-2023 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #"}, {"sha": "32517e19f43208bb07223f4d36c723e7bb9ab381", "filename": "contrib/texi2pod.pl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Ftexi2pod.pl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Ftexi2pod.pl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ftexi2pod.pl?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,6 +1,6 @@\n #! /usr/bin/perl -w\n \n-#   Copyright (C) 1999-2014 Free Software Foundation, Inc.\n+#   Copyright (C) 1999-2023 Free Software Foundation, Inc.\n \n # This file is part of GCC.\n "}, {"sha": "5af03113a2f1f063769752ea426fcaf6f6ba9e95", "filename": "contrib/unicode/from_glibc/unicode_utils.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Funicode%2Ffrom_glibc%2Funicode_utils.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Funicode%2Ffrom_glibc%2Funicode_utils.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Funicode%2Ffrom_glibc%2Funicode_utils.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,6 +1,6 @@\n # Utilities to generate Unicode data for glibc from upstream Unicode data.\n #\n-# Copyright (C) 2014-2020 Free Software Foundation, Inc.\n+# Copyright (C) 2014-2023 Free Software Foundation, Inc.\n # This file is part of the GNU C Library.\n #\n # The GNU C Library is free software; you can redistribute it and/or"}, {"sha": "b48dc2aaa451f1f94fa9417ae0c475460d2843d4", "filename": "contrib/unicode/from_glibc/utf8_gen.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Funicode%2Ffrom_glibc%2Futf8_gen.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Funicode%2Ffrom_glibc%2Futf8_gen.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Funicode%2Ffrom_glibc%2Futf8_gen.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/python3\n # -*- coding: utf-8 -*-\n-# Copyright (C) 2014-2020 Free Software Foundation, Inc.\n+# Copyright (C) 2014-2023 Free Software Foundation, Inc.\n # This file is part of the GNU C Library.\n #\n # The GNU C Library is free software; you can redistribute it and/or"}, {"sha": "cbd1060bed14c5e5f91a22490cfb6953d68e1205", "filename": "contrib/unused_functions.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Funused_functions.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Funused_functions.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Funused_functions.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,7 +1,7 @@\n #!/usr/bin/env python\n # -*- coding: utf-8 -*-\n #\n-# Copyright (c) 2018 Free Software Foundation\n+# Copyright (C) 2018-2023 Free Software Foundation, Inc.\n # Contributed by Bernhard Reutner-Fischer <aldot@gcc.gnu.org>\n # Inspired by bloat-o-meter from busybox.\n "}, {"sha": "f3691dc11cc9452574fb2a110fcc2e458821bfea", "filename": "contrib/update-copyright.py", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fupdate-copyright.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fupdate-copyright.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fupdate-copyright.py?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env python3\n #\n-# Copyright (C) 2013-2022 Free Software Foundation, Inc.\n+# Copyright (C) 2013-2023 Free Software Foundation, Inc.\n #\n # This script is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -596,6 +596,8 @@ def __init__ (self):\n                 '.go',\n                 '.inc',\n                 '.java',\n+                '.mod',\n+                '.rs'\n                 ])\n \n     def skip_file (self, dir, filename):\n@@ -636,8 +638,9 @@ def __init__ (self):\n         GenericFilter.__init__ (self)\n \n         self.skip_files |= set ([\n-                # Source module imported from upstream.\n+                # Source modules imported from upstream.\n                 'object.d',\n+                '__builtins.di'\n                 ])\n \n         self.skip_dirs |= set ([\n@@ -680,6 +683,19 @@ def get_line_filter (self, dir, filename):\n             return re.compile ('// \\(C\\) Copyright Jeremy Siek')\n         return GenericFilter.get_line_filter (self, dir, filename)\n \n+class ContribFilter(GenericFilter):\n+    def __init__ (self):\n+        GenericFilter.__init__ (self)\n+\n+        self.skip_files |= set ([\n+                # A different copyrights.\n+                'unicode-license.txt',\n+                'Info.plist',\n+                # Contains CR (^M).\n+                'repro_fail',\n+                'test_patches.txt',\n+                ])\n+\n class GCCCopyright (Copyright):\n     def __init__ (self, errors):\n         Copyright.__init__ (self, errors)\n@@ -699,6 +715,7 @@ def __init__ (self, errors):\n         self.add_external_author ('Advanced Micro Devices Inc.')\n         self.add_external_author ('Ami Tavory and Vladimir Dreizin, IBM-HRL.')\n         self.add_external_author ('Cavium Networks.')\n+        self.add_external_author ('David Malcolm')\n         self.add_external_author ('Faraday Technology Corp.')\n         self.add_external_author ('Florida State University')\n         self.add_external_author ('Gerard Jungman')\n@@ -720,6 +737,7 @@ def __init__ (self, errors):\n         self.add_external_author ('Stephen L. Moshier')\n         self.add_external_author ('Sun Microsystems, Inc. All rights reserved.')\n         self.add_external_author ('The D Language Foundation, All Rights Reserved')\n+        self.add_external_author ('The fast_float authors')\n         self.add_external_author ('The Go Authors.  All rights reserved.')\n         self.add_external_author ('The Go Authors. All rights reserved.')\n         self.add_external_author ('The Go Authors.')\n@@ -738,7 +756,7 @@ def __init__ (self):\n         # boehm-gc is imported from upstream.\n         self.add_dir ('c++tools')\n         self.add_dir ('config', ConfigFilter())\n-        # contrib isn't really part of GCC.\n+        self.add_dir ('contrib', ContribFilter())\n         self.add_dir ('fixincludes')\n         self.add_dir ('gcc', GCCFilter())\n         self.add_dir (os.path.join ('gcc', 'testsuite'), TestsuiteFilter())\n@@ -772,6 +790,7 @@ def __init__ (self):\n \n         self.default_dirs = [\n             'c++tools',\n+            'contrib',\n             'gcc',\n             'include',\n             'libada',"}, {"sha": "373bbe6c39ece96153be392b17f3bd2ee017e41c", "filename": "contrib/vim-gcc-dev/ftdetect/gcc-dev.vim", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fvim-gcc-dev%2Fftdetect%2Fgcc-dev.vim", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fvim-gcc-dev%2Fftdetect%2Fgcc-dev.vim", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fvim-gcc-dev%2Fftdetect%2Fgcc-dev.vim?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,6 +1,6 @@\n \" Vim file type detection rules for GCC development\n \"\n-\" Copyright (C) 2018 Free Software Foundation, Inc.\n+\" Copyright (C) 2018-2023 Free Software Foundation, Inc.\n \"\n \" This script is free software; you can redistribute it and/or modify\n \" it under the terms of the GNU General Public License as published by"}, {"sha": "f1e0a452da076768f77911b64b0795cd89f3856d", "filename": "contrib/vim-gcc-dev/syntax/gcc-match.vim", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fvim-gcc-dev%2Fsyntax%2Fgcc-match.vim", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fvim-gcc-dev%2Fsyntax%2Fgcc-match.vim", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fvim-gcc-dev%2Fsyntax%2Fgcc-match.vim?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,6 +1,6 @@\n \" Vim syntax highlighting rules for GCC match-and-simplify language.\n \"\n-\" Copyright (C) 2018 Free Software Foundation, Inc.\n+\" Copyright (C) 2018-2023 Free Software Foundation, Inc.\n \"\n \" This script is free software; you can redistribute it and/or modify\n \" it under the terms of the GNU General Public License as published by"}, {"sha": "6b67b1f6f3f2b7fbf19e9042b2bbf08f3ff63d95", "filename": "contrib/vim-gcc-dev/syntax/gcc-rtl.vim", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fvim-gcc-dev%2Fsyntax%2Fgcc-rtl.vim", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fvim-gcc-dev%2Fsyntax%2Fgcc-rtl.vim", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fvim-gcc-dev%2Fsyntax%2Fgcc-rtl.vim?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,6 +1,6 @@\n \" Syntax highlighting rules for RTL dump files (for Vim).\n \"\n-\" Copyright (C) 2018 Free Software Foundation, Inc.\n+\" Copyright (C) 2018-2023 Free Software Foundation, Inc.\n \"\n \" This script is free software; you can redistribute it and/or modify\n \" it under the terms of the GNU General Public License as published by"}, {"sha": "3c50d8b734c637ab2c373c1f2f0d42e9c0110d72", "filename": "contrib/vim-gcc-dev/syntax/gimple.vim", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fvim-gcc-dev%2Fsyntax%2Fgimple.vim", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fvim-gcc-dev%2Fsyntax%2Fgimple.vim", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fvim-gcc-dev%2Fsyntax%2Fgimple.vim?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,6 +1,6 @@\n \" Syntax highlighting rules for GIMPLE dump files (for Vim).\n \"\n-\" Copyright (C) 2015 Free Software Foundation, Inc.\n+\" Copyright (C) 2015-2023 Free Software Foundation, Inc.\n \"\n \" This script is free software; you can redistribute it and/or modify\n \" it under the terms of the GNU General Public License as published by"}, {"sha": "b7560dc3efbe278155892bdb343703338d5965bc", "filename": "contrib/vimrc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fvimrc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/contrib%2Fvimrc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fvimrc?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -11,7 +11,7 @@\n \"   $ make vimrc\n \" from GCC build folder.\n \" \n-\" Copyright (C) 2014 Free Software Foundation, Inc.\n+\" Copyright (C) 2014-2023 Free Software Foundation, Inc.\n \"\n \" This program is free software; you can redistribute it and/or modify\n \" it under the terms of the GNU General Public License as published by"}, {"sha": "f7d559264b0a171db427940618ee8c31d85437a9", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,3 +1,17 @@\n+2023-01-21  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* fixincl.x: Regenerate.\n+\t* inclhack.def (darwin_objc_runtime_1): New hack.\n+\t* tests/base/objc/runtime.h: New file.\n+\n+2023-01-21  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR target/107568\n+\t* fixincl.x: Regenerate.\n+\t* inclhack.def: Add a fix for MacOS13 SDK function deprecations\n+\tin stdio.h.\n+\t* tests/base/stdio.h (__deprecated_msg): New test.\n+\n 2022-11-23  Marek Polacek  <polacek@redhat.com>\n \n \tRevert:"}, {"sha": "acb906eea296b3cd847d05f625e409598ff9b998", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 104, "deletions": 5, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -2,11 +2,11 @@\n  *\n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  *\n- * It has been AutoGen-ed  September 29, 2022 at 10:22:55 PM by AutoGen 5.18.16\n+ * It has been AutoGen-ed  January 18, 2023 at 09:06:47 PM by AutoGen 5.18.7\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Thu Sep 29 22:22:55 CEST 2022\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Wed Jan 18 21:06:47 GMT 2023\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 272 fixup descriptions.\n+ * This file contains 274 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -2608,6 +2608,46 @@ static const char* apzBsd_Stdio_Attrs_ConflictPatch[] = {\n int vfscanf(FILE *, const char *, __builtin_va_list) __asm__ (_BSD_STRING(__USER_LABEL_PREFIX__) \\\"__svfscanf\\\");\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Apple_Local_Stdio_Fn_Deprecation fix\n+ */\n+tSCC zApple_Local_Stdio_Fn_DeprecationName[] =\n+     \"apple_local_stdio_fn_deprecation\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zApple_Local_Stdio_Fn_DeprecationList[] =\n+  \"stdio.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzApple_Local_Stdio_Fn_DeprecationMachs[] = {\n+        \"*-*-*darwin2*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zApple_Local_Stdio_Fn_DeprecationSelect0[] =\n+       \"__deprecated_msg([^\\n\\\n+]*)$\";\n+\n+#define    APPLE_LOCAL_STDIO_FN_DEPRECATION_TEST_CT  1\n+static tTestDesc aApple_Local_Stdio_Fn_DeprecationTests[] = {\n+  { TT_EGREP,    zApple_Local_Stdio_Fn_DeprecationSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Apple_Local_Stdio_Fn_Deprecation\n+ */\n+static const char* apzApple_Local_Stdio_Fn_DeprecationPatch[] = {\n+    \"format\",\n+    \"#if defined(__APPLE_LOCAL_DEPRECATIONS)\\n\\\n+%0\\n\\\n+#endif\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Ctrl_Quotes_Def fix\n@@ -3044,6 +3084,53 @@ static const char* apzDarwin_Os_Trace_2Patch[] = {\n #endif\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Darwin_Objc_Runtime_1 fix\n+ */\n+tSCC zDarwin_Objc_Runtime_1Name[] =\n+     \"darwin_objc_runtime_1\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zDarwin_Objc_Runtime_1List[] =\n+  \"objc/runtime.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzDarwin_Objc_Runtime_1Machs[] = {\n+        \"*-*-darwin2*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zDarwin_Objc_Runtime_1Select0[] =\n+       \"OBJC_EXPORT void.*\\n\\\n+objc_enumerateClasses.*\\n\\\n+.*\\n\\\n+.*\\n\\\n+.*\\n\\\n+.*void \\\\(\\\\^ _Nonnull block.*\\n\\\n+.*\\n\\\n+.*\\n\\\n+.*OBJC_REFINED_FOR_SWIFT.*\";\n+\n+#define    DARWIN_OBJC_RUNTIME_1_TEST_CT  1\n+static tTestDesc aDarwin_Objc_Runtime_1Tests[] = {\n+  { TT_EGREP,    zDarwin_Objc_Runtime_1Select0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Darwin_Objc_Runtime_1\n+ */\n+static const char* apzDarwin_Objc_Runtime_1Patch[] = {\n+    \"format\",\n+    \"#if __BLOCKS__\\n\\\n+%0\\n\\\n+#endif\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Darwin_Os_Trace_3 fix\n@@ -11075,9 +11162,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          310\n+#define REGEX_COUNT          312\n #define MACH_LIST_SIZE_LIMIT 187\n-#define FIX_COUNT            272\n+#define FIX_COUNT            274\n \n /*\n  *  Enumerate the fixes\n@@ -11144,6 +11231,7 @@ typedef enum {\n     BROKEN_CABS_FIXIDX,\n     BROKEN_NAN_FIXIDX,\n     BSD_STDIO_ATTRS_CONFLICT_FIXIDX,\n+    APPLE_LOCAL_STDIO_FN_DEPRECATION_FIXIDX,\n     CTRL_QUOTES_DEF_FIXIDX,\n     CTRL_QUOTES_USE_FIXIDX,\n     CXX_UNREADY_FIXIDX,\n@@ -11155,6 +11243,7 @@ typedef enum {\n     DARWIN_LONGJMP_NORETURN_FIXIDX,\n     DARWIN_OS_TRACE_1_FIXIDX,\n     DARWIN_OS_TRACE_2_FIXIDX,\n+    DARWIN_OBJC_RUNTIME_1_FIXIDX,\n     DARWIN_OS_TRACE_3_FIXIDX,\n     DARWIN_OS_BASE_1_FIXIDX,\n     DARWIN_DISPATCH_OBJECT_1_FIXIDX,\n@@ -11663,6 +11752,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      BSD_STDIO_ATTRS_CONFLICT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aBsd_Stdio_Attrs_ConflictTests,   apzBsd_Stdio_Attrs_ConflictPatch, 0 },\n \n+  {  zApple_Local_Stdio_Fn_DeprecationName,    zApple_Local_Stdio_Fn_DeprecationList,\n+     apzApple_Local_Stdio_Fn_DeprecationMachs,\n+     APPLE_LOCAL_STDIO_FN_DEPRECATION_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aApple_Local_Stdio_Fn_DeprecationTests,   apzApple_Local_Stdio_Fn_DeprecationPatch, 0 },\n+\n   {  zCtrl_Quotes_DefName,    zCtrl_Quotes_DefList,\n      apzCtrl_Quotes_DefMachs,\n      CTRL_QUOTES_DEF_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n@@ -11718,6 +11812,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      DARWIN_OS_TRACE_2_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aDarwin_Os_Trace_2Tests,   apzDarwin_Os_Trace_2Patch, 0 },\n \n+  {  zDarwin_Objc_Runtime_1Name,    zDarwin_Objc_Runtime_1List,\n+     apzDarwin_Objc_Runtime_1Machs,\n+     DARWIN_OBJC_RUNTIME_1_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aDarwin_Objc_Runtime_1Tests,   apzDarwin_Objc_Runtime_1Patch, 0 },\n+\n   {  zDarwin_Os_Trace_3Name,    zDarwin_Os_Trace_3List,\n      apzDarwin_Os_Trace_3Machs,\n      DARWIN_OS_TRACE_3_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "b02dd8e057537a652569833de47c5993bf4699e7", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1269,6 +1269,18 @@ fix = {\n     test_text = '#define  vfscanf\t__svfscanf';\n };\n \n+fix = {\n+    hackname  = apple_local_stdio_fn_deprecation;\n+    mach      = \"*-*-*darwin2*\";\n+    files     = stdio.h;\n+    select    = \"__deprecated_msg([^\\n]*)$\";\n+    c_fix     = format;\n+    c_fix_arg = \"#if defined(__APPLE_LOCAL_DEPRECATIONS)\\n\"\n+                \"%0\\n\"\n+                \"#endif\";\n+    test_text = '__deprecated_msg(\"This function is provided for compat...\")';\n+};\n+\n /*\n  *  Fix various macros used to define ioctl numbers.\n  *  The traditional syntax was:\n@@ -1479,6 +1491,41 @@ fix = {\n   test_text = \"typedef void (^os_trace_payload_t)(xpc_object_t xdict);\";\n };\n \n+/*\n+ *  macOSX 13.0 SDK objc/runtime.h uses Apple Blocks extension without a guard.\n+ */\n+\n+fix = {\n+  hackname  = darwin_objc_runtime_1;\n+  mach      = \"*-*-darwin2*\";\n+  files     = objc/runtime.h;\n+  select    =   <<- _EOSelect_\n+\tOBJC_EXPORT void.*\n+\tobjc_enumerateClasses.*\n+\t.*\n+\t.*\n+\t.*\n+\t.*void \\(\\^ _Nonnull block.*\n+\t.*\n+\t.*\n+\t.*OBJC_REFINED_FOR_SWIFT.*\n+\t_EOSelect_;\n+  c_fix     = format;\n+  c_fix_arg = \"#if __BLOCKS__\\n%0\\n#endif\";\n+  test_text = <<- _OBJC_RUNTIME_1\n+OBJC_EXPORT void\n+objc_enumerateClasses(const void * _Nullable image,\n+                      const char * _Nullable namePrefix,\n+                      Protocol * _Nullable conformingTo,\n+                      Class _Nullable subclassing,\n+                      void (^ _Nonnull block)(Class _Nonnull aClass, BOOL * _Nonnull stop)\n+                      OBJC_NOESCAPE)\n+OBJC_AVAILABLE(13.0, 16.0, 16.0, 9.0, 7.0)\n+OBJC_REFINED_FOR_SWIFT;\n+_OBJC_RUNTIME_1;\n+};\n+\n+\n /*\n  *  In Mac OS X 10.1[012] <os/trace.h>, need to guard users of\n  *  os_trace_payload_t typedef, too."}, {"sha": "8b4855bb8ab0f527f3244953da375511c75e630a", "filename": "fixincludes/tests/base/objc/runtime.h", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/fixincludes%2Ftests%2Fbase%2Fobjc%2Fruntime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/fixincludes%2Ftests%2Fbase%2Fobjc%2Fruntime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fobjc%2Fruntime.h?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -0,0 +1,24 @@\n+/*  DO NOT EDIT THIS FILE.\n+\n+    It has been auto-edited by fixincludes from:\n+\n+\t\"fixinc/tests/inc/objc/runtime.h\"\n+\n+    This had to be done to correct non-standard usages in the\n+    original, manufacturer supplied header file.  */\n+\n+\n+\n+#if defined( DARWIN_OBJC_RUNTIME_1_CHECK )\n+#if __BLOCKS__\n+OBJC_EXPORT void\n+objc_enumerateClasses(const void * _Nullable image,\n+                      const char * _Nullable namePrefix,\n+                      Protocol * _Nullable conformingTo,\n+                      Class _Nullable subclassing,\n+                      void (^ _Nonnull block)(Class _Nonnull aClass, BOOL * _Nonnull stop)\n+                      OBJC_NOESCAPE)\n+OBJC_AVAILABLE(13.0, 16.0, 16.0, 9.0, 7.0)\n+OBJC_REFINED_FOR_SWIFT;\n+#endif\n+#endif  /* DARWIN_OBJC_RUNTIME_1_CHECK */"}, {"sha": "38381bacb2d5af025cceb485716d37ae027c0480", "filename": "fixincludes/tests/base/stdio.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/fixincludes%2Ftests%2Fbase%2Fstdio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/fixincludes%2Ftests%2Fbase%2Fstdio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fstdio.h?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -41,6 +41,13 @@ int vfscanf(FILE *, const char *, __builtin_va_list) __asm__ (_BSD_STRING(__USER\n #endif  /* BSD_STDIO_ATTRS_CONFLICT_CHECK */\n \n \n+#if defined( APPLE_LOCAL_STDIO_FN_DEPRECATION_CHECK )\n+#if defined(__APPLE_LOCAL_DEPRECATIONS)\n+__deprecated_msg(\"This function is provided for compat...\")\n+#endif\n+#endif  /* APPLE_LOCAL_STDIO_FN_DEPRECATION_CHECK */\n+\n+\n #if defined( HPUX10_STDIO_DECLARATIONS_CHECK )\n #  define _iob __iob\n "}, {"sha": "e90a67144e34e94fe1dbc489bc2c23ee0d5217dc", "filename": "gcc/ABOUT-GCC-NLS", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2FABOUT-GCC-NLS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2FABOUT-GCC-NLS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FABOUT-GCC-NLS?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -49,7 +49,7 @@ configure GCC with --enable-maintainer-mode to get the master catalog\n rebuilt.\n \n \f\n-Copyright (C) 1998-2022 Free Software Foundation, Inc.\n+Copyright (C) 1998-2023 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"}, {"sha": "5cb7d8566fff607c34e26fa88ecf737156fbf0d9", "filename": "gcc/BASE-VER", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2FBASE-VER", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2FBASE-VER", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FBASE-VER?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1 +1 @@\n-13.0.0\n+13.0.1"}, {"sha": "3a8041bb3645845b4e1d4ad87aacb4ae5e3e90b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1447, "deletions": 33621, "changes": 35068, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4"}, {"sha": "248b5dea178a45a071c45095ee9eba7b8e589db9", "filename": "gcc/ChangeLog-2022", "status": "added", "additions": 35086, "deletions": 0, "changes": 35086, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2FChangeLog-2022", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2FChangeLog-2022", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog-2022?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4"}, {"sha": "aa6d8640ab91e4ed8737a946e0845e70d166baf5", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1 +1 @@\n-20221213\n+20230131"}, {"sha": "6b70dc7825c50623e6da02f1e7c4576ca1a87bfd", "filename": "gcc/LANGUAGES", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2FLANGUAGES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2FLANGUAGES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FLANGUAGES?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -57,7 +57,7 @@ Feb 1, 1998:\n     DEFTREECODE (CLASS_METHOD_DECL, \"class_method_decl\", 'd', 0)\n \n \f\n-Copyright (C) 1998-2022 Free Software Foundation, Inc.\n+Copyright (C) 1998-2023 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"}, {"sha": "487e5069952909a3994970b368770a3de718ac1a", "filename": "gcc/Makefile.in", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,7 +1,7 @@\n # Makefile for GNU Compiler Collection\n # Run 'configure' to generate Makefile from Makefile.in\n \n-# Copyright (C) 1987-2022 Free Software Foundation, Inc.\n+# Copyright (C) 1987-2023 Free Software Foundation, Inc.\n \n #This file is part of GCC.\n \n@@ -532,7 +532,11 @@ LINKER_PLUGIN_API_H = $(srcdir)/../include/plugin-api.h\n # Default native SYSTEM_HEADER_DIR, to be overridden by targets.\n NATIVE_SYSTEM_HEADER_DIR = @NATIVE_SYSTEM_HEADER_DIR@\n # Default cross SYSTEM_HEADER_DIR, to be overridden by targets.\n-CROSS_SYSTEM_HEADER_DIR = @CROSS_SYSTEM_HEADER_DIR@\n+ifeq (@includedir@,$(prefix)/include)\n+  CROSS_SYSTEM_HEADER_DIR = @CROSS_SYSTEM_HEADER_DIR@\n+else\n+  CROSS_SYSTEM_HEADER_DIR = @includedir@\n+endif\n \n # autoconf sets SYSTEM_HEADER_DIR to one of the above.\n # Purge it of unnecessary internal relative paths\n@@ -731,6 +735,7 @@ htmldir = @htmldir@\n USE_NLS = @USE_NLS@\n \n # Internationalization library.\n+INCINTL = @INCINTL@\n LIBINTL = @LIBINTL@\n LIBINTL_DEP = @LIBINTL_DEP@\n \n@@ -822,7 +827,7 @@ BUILD_LINKERFLAGS = $(BUILD_CXXFLAGS)\n # Native linker and preprocessor flags.  For x-fragment overrides.\n BUILD_LDFLAGS=@BUILD_LDFLAGS@\n BUILD_CPPFLAGS= -I. -I$(@D) -I$(srcdir) -I$(srcdir)/$(@D) \\\n-\t\t-I$(srcdir)/../include @INCINTL@ $(CPPINC) $(CPPFLAGS)\n+\t\t-I$(srcdir)/../include $(INCINTL) $(CPPINC) $(CPPFLAGS)\n \n # Actual name to use when installing a native compiler.\n GCC_INSTALL_NAME := $(shell echo gcc|sed '$(program_transform_name)')\n@@ -1130,7 +1135,7 @@ BUILD_ERRORS = build/errors.o\n # currently being compiled, in both source trees, to be examined as well.\n # libintl.h will be found in ../intl if we are using the included libintl.\n INCLUDES = -I. -I$(@D) -I$(srcdir) -I$(srcdir)/$(@D) \\\n-\t   -I$(srcdir)/../include @INCINTL@ \\\n+\t   -I$(srcdir)/../include $(INCINTL) \\\n \t   $(CPPINC) $(CODYINC) $(GMPINC) $(DECNUMINC) $(BACKTRACEINC) \\\n \t   $(ISLINC)\n "}, {"sha": "af6904728833193ba57e74ec5bdd4070992efe42", "filename": "gcc/README.Portability", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2FREADME.Portability", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2FREADME.Portability", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FREADME.Portability?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,4 +1,4 @@\n-Copyright (C) 2000-2022 Free Software Foundation, Inc.\n+Copyright (C) 2000-2023 Free Software Foundation, Inc.\n \n This file is intended to contain a few notes about writing C code\n within GCC so that it compiles without error on the full range of"}, {"sha": "57164ff5f089d6f76cdaffbe926269e5c68df441", "filename": "gcc/acinclude.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Facinclude.m4?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,4 +1,4 @@\n-dnl Copyright (C) 2005-2022 Free Software Foundation, Inc.\n+dnl Copyright (C) 2005-2023 Free Software Foundation, Inc.\n dnl\n dnl This file is part of GCC.\n dnl"}, {"sha": "cebcb42d0ff140588349ecf950db8ba1b6771b75", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 1345, "deletions": 10961, "changes": 12306, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4"}, {"sha": "19c0a4d5d4245818e4273d18064f06bf51f432ab", "filename": "gcc/ada/ChangeLog-2022", "status": "added", "additions": 11068, "deletions": 0, "changes": 11068, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2FChangeLog-2022", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2FChangeLog-2022", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog-2022?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4"}, {"sha": "c65c26d8875662699e1d29cf75350cd1b2c1f794", "filename": "gcc/ada/accessibility.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Faccessibility.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Faccessibility.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faccessibility.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2022-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2022-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "e30c90ab6a792555e341ef54ee76cefda30fed1f", "filename": "gcc/ada/accessibility.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Faccessibility.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Faccessibility.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faccessibility.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2022-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2022-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "6aadb77e52c0ce2148eb5c743650b8f33ed0b513", "filename": "gcc/ada/ada_get_targ.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fada_get_targ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fada_get_targ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fada_get_targ.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "890f1a4cb08729f3fe4afe59a7f0a99a81c23bda", "filename": "gcc/ada/adabkend.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fadabkend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fadabkend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadabkend.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2022, AdaCore                     --\n+--                     Copyright (C) 2001-2023, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "96d975d869bc3787b3b00af091d33225177dde44", "filename": "gcc/ada/adabkend.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fadabkend.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fadabkend.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadabkend.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "03ba47258fd3aca1412dc077ce3c79c95b21fdfb", "filename": "gcc/ada/adadecode.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fadadecode.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fadadecode.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadadecode.c?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *           Copyright (C) 2001-2022, Free Software Foundation, Inc.        *\n+ *           Copyright (C) 2001-2023, Free Software Foundation, Inc.        *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "fe07989871588bbaef9be9bb8924d0d32c973868", "filename": "gcc/ada/adadecode.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fadadecode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fadadecode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadadecode.h?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *           Copyright (C) 2001-2022, Free Software Foundation, Inc.        *\n+ *           Copyright (C) 2001-2023, Free Software Foundation, Inc.        *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "1c23d15846b1476846e88831f4fabc90584d7749", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2022, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2023, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -227,6 +227,7 @@ UINT __gnat_current_ccs_encoding;\n \n #elif defined (_WIN32)\n \n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n #include <accctrl.h>\n #include <aclapi.h>"}, {"sha": "987432c93072c05b8458f33341f8981d8d71e79b", "filename": "gcc/ada/adaint.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fadaint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fadaint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.h?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 1992-2022, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2023, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "14d7294bd7b62daa90e23c78f61f2e087d3c1ac8", "filename": "gcc/ada/affinity.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Faffinity.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Faffinity.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faffinity.c?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *            Copyright (C) 2005-2022, Free Software Foundation, Inc.       *\n+ *            Copyright (C) 2005-2023, Free Software Foundation, Inc.       *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "c0b8ad6062309b30604b66b8874799d646f0273a", "filename": "gcc/ada/ali-util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fali-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fali-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali-util.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "3d88ac8efe16aa190985ecf253e7cc2ae8352c5c", "filename": "gcc/ada/ali-util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fali-util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fali-util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali-util.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "c67eb4235b8cc64dd303deefd037da472b8440c1", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "ac5121ecf80c2d700fa4390caff935a38adc6fb2", "filename": "gcc/ada/ali.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "a108147a3fc65f0a6066d58122fbe30796d655a4", "filename": "gcc/ada/alloc.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Falloc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Falloc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Falloc.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "cee9af5408c8885233717bd6027e091d36c2a09d", "filename": "gcc/ada/argv-lynxos178-raven-cert.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fargv-lynxos178-raven-cert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fargv-lynxos178-raven-cert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fargv-lynxos178-raven-cert.c?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *         Copyright (C) 1992-2022, Free Software Foundation, Inc.          *\n+ *         Copyright (C) 1992-2023, Free Software Foundation, Inc.          *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "a773befb8c0e2383fd66f5654a34594d60af0932", "filename": "gcc/ada/argv.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fargv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fargv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fargv.c?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *         Copyright (C) 1992-2022, Free Software Foundation, Inc.          *\n+ *         Copyright (C) 1992-2023, Free Software Foundation, Inc.          *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "0b2774fb3b1ed53fbe74c7dee51024a7686f8131", "filename": "gcc/ada/aspects.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Faspects.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Faspects.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2010-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2010-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "36957d466e65dbea11f91a4969eb05aebc024cf6", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2010-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2010-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "6ad8b5d2fa3358178a572ad3c47dfd0275ff7dfc", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "eb1ff90c3eedfef7ce6fc739992351f73dca42e3", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "1451272b54e79171ff9899524b247f8b93c12c18", "filename": "gcc/ada/atree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fatree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fatree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.h?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 1992-2022, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2023, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "12fe5cfea6d3940001949db5493ca845674ef19d", "filename": "gcc/ada/aux-io.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Faux-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Faux-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faux-io.c?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *           Copyright (C) 1992-2022, Free Software Foundation, Inc.        *\n+ *           Copyright (C) 1992-2023, Free Software Foundation, Inc.        *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "23f5abe955edc2ac0d015d5b51cdf9f522274ca2", "filename": "gcc/ada/back_end.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fback_end.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fback_end.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fback_end.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "47d5ea14e49641e8c61ca1138b70dc6dc670efcf", "filename": "gcc/ada/back_end.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fback_end.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fback_end.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fback_end.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "60715c56fdf25ccc6135ee77fa57320307d9363d", "filename": "gcc/ada/backend_utils.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbackend_utils.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbackend_utils.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbackend_utils.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2021-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2021-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "7f7466ad8b9ab15b3e0ad8a6004cc7f1cca401b4", "filename": "gcc/ada/backend_utils.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbackend_utils.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbackend_utils.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbackend_utils.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2021-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2021-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "f09de1bef3b6c6a531c415b5b822f5f34170da65", "filename": "gcc/ada/bcheck.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbcheck.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbcheck.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbcheck.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "c9079eabd7620b06b21d0ce61c57a425ff9eb347", "filename": "gcc/ada/bcheck.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbcheck.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbcheck.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbcheck.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "101213cd83861b9f73ea837584ae4f062e83ed1f", "filename": "gcc/ada/binde.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbinde.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbinde.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbinde.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "37338c120d5c2c45082c17a813934c57a91b02e4", "filename": "gcc/ada/binde.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbinde.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbinde.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbinde.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "765482c4ee5e959b87a294f308b20bd0988f604f", "filename": "gcc/ada/binderr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbinderr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbinderr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbinderr.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "2ebca71f1a1a5caaa70e78944b3cc22b24fcb781", "filename": "gcc/ada/binderr.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbinderr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbinderr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbinderr.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "ae20e5f40d3813c0d3f2ba3b4e800dd0805b59e6", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "22975251d7f679ff22c8f9a9b0aa3231608f7ec6", "filename": "gcc/ada/bindgen.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindgen.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindgen.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "5c6fc397e1f5bca58bd5c76be7ca7c7d64a527f6", "filename": "gcc/ada/bindo-augmentors.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-augmentors.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-augmentors.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-augmentors.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2023, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "17b2d0c0f2f58140fc00c02c307a9dc1d3f839fc", "filename": "gcc/ada/bindo-augmentors.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-augmentors.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-augmentors.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-augmentors.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2023, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "172f50fe51b8655d6f2b0dffcdeea6137216ed51", "filename": "gcc/ada/bindo-builders.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-builders.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-builders.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-builders.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2023, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "08ed6edb5112a6a9474c6bc1f0fac8e9ee3c02d7", "filename": "gcc/ada/bindo-builders.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-builders.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-builders.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-builders.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2023, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "4a46cc114f43eed6af205ff92cdf4115962c1240", "filename": "gcc/ada/bindo-diagnostics.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-diagnostics.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-diagnostics.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-diagnostics.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2023, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "5f94433b7b1934db8f2b5cdfbb6e5a0e31a1f653", "filename": "gcc/ada/bindo-diagnostics.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-diagnostics.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-diagnostics.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-diagnostics.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2023, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "0b61353e3ce2e66ab13fe1e5ca6de6b37dc2b61a", "filename": "gcc/ada/bindo-elaborators.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-elaborators.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-elaborators.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-elaborators.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2023, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "010323621b6081d48fc29e20ef45c5869973b161", "filename": "gcc/ada/bindo-elaborators.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-elaborators.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-elaborators.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-elaborators.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2023, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "8a6c549ee439a1436c732fc5e1a41f903bfb201e", "filename": "gcc/ada/bindo-graphs.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-graphs.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-graphs.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-graphs.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2023, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "737a1518e3a0de65629a6a4c1fec1148bfbfa4df", "filename": "gcc/ada/bindo-graphs.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-graphs.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-graphs.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-graphs.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2023, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "f849f70cb9addb2d9a9a1c7f1d962dc706cd276c", "filename": "gcc/ada/bindo-units.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-units.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-units.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-units.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2023, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "9aa78d8b9fb2a123cd6b7125da746b02e321d8b6", "filename": "gcc/ada/bindo-units.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-units.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-units.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-units.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2023, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "c6286c3e4478dd34727487fe0e909792e3a09e8f", "filename": "gcc/ada/bindo-validators.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-validators.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-validators.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-validators.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2023, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "bd2b7f2e6cdc864db2302f2ba36a2da8d7584a34", "filename": "gcc/ada/bindo-validators.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-validators.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-validators.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-validators.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2023, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "c0515c7c2dbdb4dbeddc0cbf9595563694af7735", "filename": "gcc/ada/bindo-writers.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-writers.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-writers.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-writers.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2023, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "eee8a85152fbf64ec16065a220ed72a3b5add9cd", "filename": "gcc/ada/bindo-writers.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-writers.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo-writers.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-writers.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2023, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "cf2c63097ba8d93e5915c45c64eb3d50a06cff34", "filename": "gcc/ada/bindo.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2023, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "32b943fcbdc248aa5d2410ba2fc83abd0dbef06e", "filename": "gcc/ada/bindo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2023, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "fca425b22441320dfdb053ae8f7ab24c2b729ee3", "filename": "gcc/ada/bindusg.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindusg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindusg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindusg.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "ba84f259650ac79e70fdaa66810ac83eda6d9484", "filename": "gcc/ada/bindusg.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindusg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbindusg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindusg.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "e8d8f27a59450df8d780798e2b6ff34ca91ce439", "filename": "gcc/ada/butil.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbutil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbutil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbutil.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "04b85cda3cd4891a1ec5c6e715a657a5f5828d10", "filename": "gcc/ada/butil.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbutil.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fbutil.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbutil.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "7a4da19e7a2157641e3deadfd5f85286a623b64b", "filename": "gcc/ada/cal.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fcal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fcal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcal.c?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2022, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2023, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "134d447a20e2056ef0dd326f37d80f0122ad4516", "filename": "gcc/ada/casing.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fcasing.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fcasing.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcasing.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "2cdc8961e9c8c54a202cc903f14e7c53566e9659", "filename": "gcc/ada/casing.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fcasing.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fcasing.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcasing.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "e21f3065cb15d8fafb062f6db9c998c11dcfa9bc", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1388,13 +1388,23 @@ package body Checks is\n \n       function Denotes_Explicit_Dereference (Obj : Node_Id) return Boolean is\n       begin\n-         return\n-           Nkind (Obj) = N_Explicit_Dereference\n-             or else\n-               (Is_Entity_Name (Obj)\n-                 and then Present (Renamed_Object (Entity (Obj)))\n-                 and then Nkind (Renamed_Object (Entity (Obj))) =\n-                                              N_Explicit_Dereference);\n+         if Is_Entity_Name (Obj) then\n+            return Present (Renamed_Object (Entity (Obj)))\n+              and then\n+                Denotes_Explicit_Dereference (Renamed_Object (Entity (Obj)));\n+\n+         --  This routine uses the rules of the language so we need to exclude\n+         --  rewritten constructs that introduce artificial dereferences.\n+\n+         elsif Nkind (Obj) = N_Explicit_Dereference then\n+            return not Is_Captured_Function_Call (Obj)\n+              and then not\n+                (Nkind (Parent (Obj)) = N_Object_Renaming_Declaration\n+                  and then Is_Return_Object (Defining_Entity (Parent (Obj))));\n+\n+         else\n+            return False;\n+         end if;\n       end Denotes_Explicit_Dereference;\n \n       ----------------------------------------\n@@ -1497,9 +1507,7 @@ package body Checks is\n                              and then not Is_Aliased_Unconstrained_Component)\n                    or else (Ada_Version >= Ada_2005\n                              and then not Is_Constrained (T_Typ)\n-                             and then Denotes_Explicit_Dereference (Lhs)\n-                             and then Nkind (Original_Node (Lhs)) /=\n-                                        N_Function_Call))\n+                             and then Denotes_Explicit_Dereference (Lhs)))\n       then\n          T_Typ := Get_Actual_Subtype (Lhs);\n       end if;"}, {"sha": "64f0809dbea47de1cee4f83807adb93c3f90c0bd", "filename": "gcc/ada/checks.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fchecks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fchecks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "f22560983965577396dbea77194b71c4e5080626", "filename": "gcc/ada/cio.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fcio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fcio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcio.c?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2022, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2023, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -67,6 +67,7 @@ extern \"C\" {\n #endif\n \n #ifdef RTX\n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n #include <Rtapi.h>\n #endif"}, {"sha": "fe0bda4dcfcce4234dcf0af0e39efe1123c44fb6", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "f6870a7ff1c30fad1150fcb749ee079df7cf62a7", "filename": "gcc/ada/clean.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fclean.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fclean.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2003-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "4fc0e5d3baad4440791938c86f41b9084e9845f1", "filename": "gcc/ada/comperr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fcomperr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fcomperr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcomperr.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "21cbbe163ac5182dbef65ee62331d25c0e34b885", "filename": "gcc/ada/comperr.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fcomperr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fcomperr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcomperr.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "b0a0ab2022876a70b6bee7924363fc23ebf120cc", "filename": "gcc/ada/contracts.adb", "status": "modified", "additions": 6, "deletions": 101, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fcontracts.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fcontracts.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2015-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2015-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,7 +30,6 @@ with Einfo.Entities; use Einfo.Entities;\n with Einfo.Utils;    use Einfo.Utils;\n with Elists;         use Elists;\n with Errout;         use Errout;\n-with Exp_Ch6;        use Exp_Ch6;\n with Exp_Prag;       use Exp_Prag;\n with Exp_Tss;        use Exp_Tss;\n with Exp_Util;       use Exp_Util;\n@@ -1616,40 +1615,8 @@ package body Contracts is\n       --  preserving the result for the purpose of evaluating postconditions,\n       --  contracts, type invariants, etc.\n \n-      --  In the case of a regular function, generate:\n+      --  In the case of a function, generate:\n       --\n-      --  function Original_Func (X : in out Integer) return Typ is\n-      --     <prologue renamings>\n-      --     <preconditions>\n-      --\n-      --     function _Wrapped_Statements return Typ is\n-      --        <original declarations>\n-      --     begin\n-      --        <original statements>\n-      --     end;\n-      --\n-      --  begin\n-      --     declare\n-      --        type Axx is access all Typ;\n-      --        Rxx : constant Axx := _Wrapped_Statements'reference;\n-      --        Result_Obj : Typ renames Rxx.all;\n-      --\n-      --     begin\n-      --        <postconditions statments>\n-      --        return Rxx.all;\n-      --     end;\n-      --  end;\n-      --\n-      --  This sequence is recognized by Expand_Simple_Function_Return as a\n-      --  tail call, in other words equivalent to \"return _Wrapped_Statements;\"\n-      --  and thus the copy to the anonymous return object is elided, including\n-      --  a pair of calls to Adjust/Finalize for types requiring finalization.\n-\n-      --  Note that an extended return statement does not yield the same result\n-      --  because the copy of the return object is not elided by GNAT for now.\n-\n-      --  Or else, in the case of a BIP function, generate:\n-\n       --  function Original_Func (X : in out Integer) return Typ is\n       --     <prologue renamings>\n       --     <preconditions>\n@@ -1733,9 +1700,9 @@ package body Contracts is\n            (Handled_Statement_Sequence (Body_Decl), Stmts);\n \n       --  Generate the post-execution statements and the extended return\n-      --  when the subprogram being wrapped is a BIP function.\n+      --  when the subprogram being wrapped is a function.\n \n-      elsif Is_Build_In_Place_Result_Type (Ret_Type) then\n+      else\n          Set_Statements (Handled_Statement_Sequence (Body_Decl), New_List (\n            Make_Extended_Return_Statement (Loc,\n              Return_Object_Declarations => New_List (\n@@ -1751,65 +1718,6 @@ package body Contracts is\n              Handled_Statement_Sequence =>\n                Make_Handled_Sequence_Of_Statements (Loc,\n                  Statements => Stmts))));\n-\n-      --  Declare a renaming of the result of the call to the wrapper and\n-      --  append a return of the result of the call when the subprogram is\n-      --  a function, after manually removing the side effects. Note that\n-      --  we cannot call Remove_Side_Effects here because nothing has been\n-      --  analyzed yet and we cannot return the renaming itself because\n-      --  Expand_Simple_Function_Return expects an explicit dereference.\n-\n-      else\n-         declare\n-            A_Id : constant Node_Id := Make_Temporary (Loc, 'A');\n-            R_Id : constant Node_Id := Make_Temporary (Loc, 'R');\n-\n-         begin\n-            Set_Statements (Handled_Statement_Sequence (Body_Decl), New_List (\n-              Make_Block_Statement (Loc,\n-\n-                Declarations => New_List (\n-                  Make_Full_Type_Declaration (Loc,\n-                    Defining_Identifier => A_Id,\n-                    Type_Definition     =>\n-                      Make_Access_To_Object_Definition (Loc,\n-                        All_Present        => True,\n-                        Null_Exclusion_Present => True,\n-                        Subtype_Indication =>\n-                          New_Occurrence_Of (Ret_Type, Loc))),\n-\n-                  Make_Object_Declaration (Loc,\n-                    Defining_Identifier => R_Id,\n-                    Object_Definition   => New_Occurrence_Of (A_Id, Loc),\n-                    Constant_Present    => True,\n-                    Expression          =>\n-                      Make_Reference (Loc,\n-                        Make_Function_Call (Loc,\n-                          Name => New_Occurrence_Of (Wrapper_Id, Loc)))),\n-\n-                  Make_Object_Renaming_Declaration (Loc,\n-                    Defining_Identifier => Result,\n-                    Subtype_Mark        => New_Occurrence_Of (Ret_Type, Loc),\n-                    Name                =>\n-                      Make_Explicit_Dereference (Loc,\n-                        New_Occurrence_Of (R_Id, Loc)))),\n-\n-                Handled_Statement_Sequence =>\n-                  Make_Handled_Sequence_Of_Statements (Loc,\n-                    Statements => Stmts))));\n-\n-            Append_To (Stmts,\n-              Make_Simple_Return_Statement (Loc,\n-                Expression =>\n-                  Make_Explicit_Dereference (Loc,\n-                    New_Occurrence_Of (R_Id, Loc))));\n-\n-            --  It is required for Is_Related_To_Func_Return to return True\n-            --  that the temporary Rxx be related to the expression of the\n-            --  simple return statement built just above.\n-\n-            Set_Related_Expression (R_Id, Expression (Last (Stmts)));\n-         end;\n       end if;\n    end Build_Subprogram_Contract_Wrapper;\n \n@@ -3479,18 +3387,15 @@ package body Contracts is\n       --       end _Wrapped_Statements;\n \n       --    begin\n-      --       declare\n-      --          Result : ... renames _Wrapped_Statements;\n-      --       begin\n+      --       return Result : constant ... := _Wrapped_Statements do\n       --          <refined postconditions from body>\n       --          <postconditions from body>\n       --          <postconditions from spec>\n       --          <inherited postconditions>\n       --          <contract case consequences>\n       --          <invariant check of function result>\n       --          <invariant and predicate checks of parameters\n-      --          return Result;\n-      --       end;\n+      --       end return;\n       --    end Original_Code;\n \n       --  Step 1: augment contracts list with postconditions associated with"}, {"sha": "0a03d19d431068db3a545ea06e9971fbeffadcb3", "filename": "gcc/ada/contracts.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fcontracts.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fcontracts.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2015-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2015-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "e9e687329c22dac9956c2e8bb5026c52cadec868", "filename": "gcc/ada/csets.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fcsets.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fcsets.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcsets.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "9e8756b0d9f722fa1b408b90548bc1be633f9a92", "filename": "gcc/ada/csets.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fcsets.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fcsets.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcsets.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "72c287a87392c46f49d1ee60675444d7cbe89a20", "filename": "gcc/ada/cstand.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fcstand.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fcstand.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "e6bfec55d7ae752eed6abdf3d7b16f63af60b419", "filename": "gcc/ada/cstand.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fcstand.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fcstand.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "bc527b58628052a07bae207af3c05494d9b638ed", "filename": "gcc/ada/cstreams.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fcstreams.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fcstreams.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstreams.c?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *              Auxiliary C functions for Interfaces.C.Streams              *\n  *                                                                          *\n- *          Copyright (C) 1992-2022, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2023, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "b2e03ac7013ac3e85f1500db483768bf00c89eb4", "filename": "gcc/ada/ctrl_c.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fctrl_c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fctrl_c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fctrl_c.c?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *        Copyright (C) 2002-2022, Free Software Foundation, Inc.           *\n+ *        Copyright (C) 2002-2023, Free Software Foundation, Inc.           *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -126,6 +126,7 @@ __gnat_uninstall_int_handler (void)\n \n #elif defined (__MINGW32__)\n \n+#define WIN32_LEAN_AND_MEAN\n #include \"mingw32.h\"\n #include <windows.h>\n "}, {"sha": "7497fa04076c7b52182ddc3bf1f93204a7694e33", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "3a9756613d1a4ab6ecff8be16ba1153fb3c1797d", "filename": "gcc/ada/debug.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fdebug.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fdebug.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "f999b7f3ceb0b8639a9badf8483fed47ac66a46a", "filename": "gcc/ada/debug_a.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fdebug_a.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fdebug_a.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug_a.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "fec166dfa5c1431ef68933faad7a117c7efd85c4", "filename": "gcc/ada/debug_a.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fdebug_a.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fdebug_a.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug_a.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "634bbc94c31ff7df2a4db10334067fdb26fa22fa", "filename": "gcc/ada/doc/gnat_ugn/building_executable_programs_with_gnat.rst", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -3704,6 +3704,8 @@ of the pragma in the :title:`GNAT_Reference_manual`).\n   containing a component whose type has the user-defined \"=\" as\n   primitive). Note that the user-defined \"=\" must be a primitive operator\n   in order to trigger the warning.\n+  See RM-4.5.2(14/3-15/5, 21, 24/3, 32.1/1)\n+  for the exact Ada rules on composability of \"=\".\n \n   The default is that these warnings are not given.\n "}, {"sha": "639534d90e67a082bd1ae0afb363776af75fb726", "filename": "gcc/ada/doc/gnat_ugn/gnat_utility_programs.rst", "status": "modified", "additions": 325, "deletions": 506, "changes": 831, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -496,18 +496,18 @@ building specialized scripts.\n \n    where\n \n-   * ``switches`` is an optional sequence of switches defining such properties as\n-     the formatting rules, the source search path, and the destination for the\n-     output source file\n+   * ``switches`` is an optional sequence of switches defining such properties\n+     as the formatting rules, the source search path, and the destination for\n+     the output source file\n \n    * ``filename`` is the name of the source file to reformat; wildcards\n      or several file names on the same gnatpp command are allowed. The\n      file name may contain path information; it does not have to follow\n      the GNAT file naming rules\n \n-     Note that it is no longer necessary to specify the Ada language version;\n-     ``gnatpp`` can process Ada source code written in any version from\n-     Ada 83 onward without specifying any language version switch.\n+   Note that it is no longer necessary to specify the Ada language version;\n+   ``gnatpp`` can process Ada source code written in any version from Ada 83\n+   onward without specifying any language version switch.\n \n \n    .. _Switches_for_gnatpp:\n@@ -519,8 +519,8 @@ building specialized scripts.\n    ``gnatpp``, organized by category.\n \n    You specify a switch by supplying a name and generally also a value.\n-   In many cases the values for a switch with a given name are incompatible with\n-   each other\n+   In many cases the values for a switch with a given name are incompatible\n+   with each other\n    (for example the switch that controls the casing of a reserved word may have\n    exactly one value: upper case, lower case, or\n    mixed case) and thus exactly one such switch can be in effect for an\n@@ -532,191 +532,267 @@ building specialized scripts.\n    Abbreviated forms (the name appearing once, followed by each value) are\n    not permitted.\n \n-   .. _Alignment_Control:\n \n-   Alignment Control\n-   ^^^^^^^^^^^^^^^^^\n+   .. _Layout_Control:\n \n-   .. index:: Alignment control in gnatpp\n-\n-   Programs can be easier to read if certain constructs are vertically aligned.\n-   By default, alignment of the following constructs is set ON:\n-\n-     * ``:`` in declarations,\n-     * ``:=`` in initializations in declarations,\n-     * ``:=`` in assignment statements,\n-     * ``=>`` in associations, and\n-     * ``at`` keywords in the component clauses in record representation clauses.\n-\n-   In addition, ``in`` and ``out`` in parameter specifications are lined up.\n+   Layout Control\n+   ^^^^^^^^^^^^^^\n \n-   .. index:: --no-alignment (gnatpp)\n-   .. index:: --alignment (gnatpp)\n-   .. index:: --no-align-modes (gnatpp)\n+   .. index:: Layout control in gnatpp\n \n+   ``gnatpp`` provides a layout switch which controls the general\n+   formatting style:\n \n-   :switch:`--no-alignment`\n-     Set alignment to OFF\n+   .. index:: layout(gnatpp)\n \n+   :switch:`--layout=default|minimal|compact|tall`\n \n-   :switch:`--alignment`\n-     Set alignment to ON\n+   :switch:`default`\n+     The default layout will follow a compact style but add aligment and put\n+     some keywords on a separate line.\n+     \n+     Alignment is added in the the following constructs:\n \n+     * ``:`` in declarations,\n+     * ``:=`` in initializations in declarations,\n+     * ``:=`` in assignment statements,\n+     * ``=>`` in associations, and\n+     * ``at`` keywords in the component clauses in record representation\n+       clauses.\n+\n+     In addition, ``in`` and ``out`` keywords in parameter specifications are\n+     also lined up.\n+\n+     The keyword ``is`` is placed on a separate line in a subprogram body in\n+     case the spec occupies more than one line.\n+\n+     The keyword ``return`` is placed on a separate line if a subprogram spec\n+     does not fit on one line.\n+\n+   :switch:`minimal`\n+     The minimal layout will avoid changing the source layout by keeping all\n+     line breaks from the original source (it will not insert or delete any).\n+     It will add indentation where appropriate as long as it does not exceed\n+     the line length limit.\n+\n+   :switch:`compact`\n+     The compact layout will avoid adding line breaks and alignment by packing\n+     as many subexpressions on the same line as possible.\n+\n+     Whole-line comments that form a paragraph will be filled in typical word\n+     processor style (that is, moving words between lines to make them similar\n+     in length, except the last one which may be shorter).\n+\n+     For each whole-line comment that does not end with two hyphens, inserts\n+     spaces if necessary after the starting two hyphens to ensure that there\n+     are at least two spaces preceding the first non-blank character of the\n+     comment.\n+\n+   :switch:`tall`\n+     The tall layout will favor adding lines breaks and alignment. It adds\n+     all the alignment and line breaks defined in the ``default`` option,\n+     and in addition:\n+\n+     * Places the keyword ``loop`` in FOR and WHILE loop statements on a\n+       separate line\n+     * Places the keyword ``then`` in IF statements on a separate line\n+     * Places each keyword ``use`` in USE clauses on a separate line\n+     * Splits the line just before the keyword ``record`` in a RECORD type\n+       declaration\n+     * Indents named blocks and loop statments with respect to the name\n+     * When necessary, splits binary operators always before the operator\n+     * Inserts an extra blank before various occurrences of ``(`` and ``:``\n+     * When it is necessary to split a line between two subexpressions (because\n+       otherwise the construct would exceed --max-line-length), then all such\n+       subexpressions are placed on separate lines\n+     * Formats enumeration type declarations \u201cvertically\u201d, e.g. each\n+       enumeration literal goes on a separate line\n+     * Formats array type declarations \u201cvertically\u201d, e.g. for multidimensional\n+       arrays, each index_subtype_definition or discrete_subtype_definition\n+       goes on a separate line\n+     * Format aggregates \u201cvertically\u201d if named notation is used for all\n+       component_associations, e.g. each component_association goes on a\n+       separate line\n+     * Formats case statements, case expressions, and variant parts with\n+       additional line breaks\n+     * Inserts blank lines where appropriate (between bodies and other large\n+       constructs)\n+     * Similarly to the :switch:`compact` layout, two spaces are added in the\n+       beginning of a whole-line comment when needed\n \n-   :switch:`--no-align-modes`\n-     Do not line up ``in`` and ``out`` in parameter specifications.\n \n    .. _Casing_Control:\n \n-\n    Casing Control\n    ^^^^^^^^^^^^^^\n \n    .. index:: Casing control in gnatpp\n \n-   ``gnatpp`` allows you to specify the casing for reserved words,\n-   pragma names, attribute designators and identifiers.\n-   For identifiers you may define a\n-   general rule for name casing but also override this rule\n-   via a set of dictionary files.\n+   ``gnatpp`` allows you to specify the casing for reserved words, pragma\n+   names, attribute designators and identifiers. For identifiers you may define\n+   a general rule for name casing but also override this rule via a set of\n+   dictionary files.\n \n-   Three types of casing are supported: lower case, upper case, and mixed case.\n-   'Mixed case' means that the first letter, and also each letter immediately\n-   following an underscore, are converted to their uppercase forms;\n-   all the other letters are converted to their lowercase forms.\n-\n-   (Note: the casing switches are not yet fully supported in the\n-   libadalang-based version of gnatpp.)\n+   Three types of casing are supported: 'Lower Case', 'Upper Case', and\n+   'Mixed Case'. 'Mixed case' means that the first letter, and also each\n+   letter immediately following an underscore, are converted to their\n+   uppercase forms and all the other letters are converted to their lowercase\n+   forms.\n \n    .. index:: --name-case-as-declared (gnatpp)\n \n-   :switch:`--name-case-as-declared`\n+   :switch:`--name-case-as-declared, -nD`\n      Name casing for defining occurrences are as they appear in the source file\n-     (this is the default)\n+     (this is the default).\n \n    .. index:: --name-upper-case (gnatpp)\n \n-   :switch:`--name-upper-case`\n-     Names are in upper case\n+   :switch:`--name-upper-case, -nU`\n+     Names are in upper case.\n \n    .. index:: --name-lower-case (gnatpp)\n \n-   :switch:`--name-lower-case`\n-     Names are in lower case\n+   :switch:`--name-lower-case, -nL`\n+     Names are in lower case.\n \n    .. index:: --name-mixed-case (gnatpp)\n \n-   :switch:`--name-mixed-case`\n-     Names are in mixed case\n+   :switch:`--name-mixed-case, -nM`\n+     Names are in mixed case.\n \n    .. index:: --attribute-lower-case (gnatpp)\n \n-   :switch:`--attribute-lower-case`\n-     Attribute designators are lower case\n+   :switch:`--attribute-lower-case, -aL`\n+     Attribute designators are lower case.\n \n    .. index:: --attribute-upper-case (gnatpp)\n \n-   :switch:`--attribute-upper-case`\n-     Attribute designators are upper case\n+   :switch:`--attribute-upper-case, -aU`\n+     Attribute designators are upper case.\n \n    .. index:: --attribute-mixed-case (gnatpp)\n \n-   :switch:`--attribute-mixed-case`\n-     Attribute designators are mixed case (this is the default)\n+   :switch:`--attribute-mixed-case, -aM`\n+     Attribute designators are mixed case (this is the default).\n \n    .. index:: --keyword-lower-case (gnatpp)\n \n-   :switch:`--keyword-lower-case`\n+   :switch:`--keyword-lower-case, -kL`\n      Keywords (technically, these are known in Ada as *reserved words*) are\n-     lower case (this is the default)\n+     lower case (this is the default).\n \n    .. index:: --keyword-upper-case (gnatpp)\n \n-   :switch:`--keyword-upper-case`\n-     Keywords are upper case\n+   :switch:`--keyword-upper-case, -kU`\n+     Keywords are upper case.\n \n    .. index:: --enum-case-as-declared (gnatpp)\n \n-   :switch:`--enum-case-as-declared`\n-     Enumeration literal casing for defining occurrences are as they appear in the\n-     source file. Overrides -n casing setting.\n+   :switch:`--enum-case-as-declared, -neD`\n+     Enumeration literal casing for defining occurrences are as they appear in\n+     the source file. Overrides -n casing setting.\n \n    .. index:: --enum-upper-case (gnatpp)\n \n-   :switch:`--enum-upper-case`\n+   :switch:`--enum-upper-case, -neU`\n      Enumeration literals are in upper case. Overrides -n casing\n      setting.\n \n    .. index:: --enum-lower-case (gnatpp)\n \n-   :switch:`--enum-lower-case`\n+   :switch:`--enum-lower-case, -neL`\n      Enumeration literals are in lower case. Overrides -n casing\n      setting.\n \n    .. index:: --enum-mixed-case (gnatpp)\n \n-   :switch:`--enum-mixed-case`\n+   :switch:`--enum-mixed-case, -neM`\n      Enumeration literals are in mixed case. Overrides -n casing\n      setting.\n \n    .. index:: --type-case-as-declared (gnatpp)\n \n-   :switch:`--type-case-as-declared`\n+   :switch:`--type-case-as-declared, -ntD`\n      Names introduced by type and subtype declarations are always\n      cased as they appear in the declaration in the source file.\n      Overrides -n casing setting.\n \n    .. index:: --type-upper-case (gnatpp)\n \n-   :switch:`--type-upper-case`\n+   :switch:`--type-upper-case, -ntU`\n      Names introduced by type and subtype declarations are always in\n      upper case. Overrides -n casing setting.\n \n    .. index:: --type-lower-case (gnatpp)\n \n-   :switch:`--type-lower-case`\n+   :switch:`--type-lower-case, -ntL`\n      Names introduced by type and subtype declarations are always in\n      lower case. Overrides -n casing setting.\n \n    .. index:: --type-mixed-case (gnatpp)\n \n-   :switch:`--type-mixed-case`\n+   :switch:`--type-mixed-case, -ntM`\n      Names introduced by type and subtype declarations are always in\n      mixed case. Overrides -n casing setting.\n \n    .. index:: --number-upper-case (gnatpp)\n \n-   :switch:`--number-upper-case`\n+   :switch:`--number-upper-case, -nnU`\n      Names introduced by number declarations are always in\n      upper case. Overrides -n casing setting.\n \n    .. index:: --number-lower-case (gnatpp)\n \n-   :switch:`--number-lower-case`\n+   :switch:`--number-lower-case, -nnL`\n      Names introduced by number declarations are always in\n      lower case. Overrides -n casing setting.\n \n    .. index:: --number-mixed-case (gnatpp)\n \n-   :switch:`--number-mixed-case`\n+   :switch:`--number-mixed-case, -nnM`\n      Names introduced by number declarations are always in\n      mixed case. Overrides -n casing setting.\n \n    .. index:: --pragma-lower-case (gnatpp)\n \n-   :switch:`--pragma-lower-case`\n-     Pragma names are lower case\n+   :switch:`--pragma-lower-case, -pL`\n+     Pragma names are lower case.\n \n    .. index:: --pragma-upper-case (gnatpp)\n \n-   :switch:`--pragma-upper-case`\n-     Pragma names are upper case\n+   :switch:`--pragma-upper-case, -pU`\n+     Pragma names are upper case.\n \n    .. index:: --pragma-mixed-case (gnatpp)\n \n-   :switch:`--pragma-mixed-case`\n-     Pragma names are mixed case (this is the default)\n+   :switch:`--pragma-mixed-case, -pM`\n+     Pragma names are mixed case (this is the default).\n+\n+   .. index:: --constant-case-as-non-constant (gnatpp)\n+\n+   :switch:`--constant-case-as-non-constant, -cN`\n+     Constant object declaration names have the same case as the name casing\n+     (this is the default).\n+\n+   .. index:: --constant-case-as-declared (gnatpp)\n \n+   :switch:`--constant-case-as-declared, -cD`\n+     Constant object declaration names are as they appear in the source file.\n+\n+   .. index:: --constant-lower-case (gnatpp)\n+\n+   :switch:`--constant-lower-case, -cL`\n+     Constant object declaration names are lower case.\n+\n+   .. index:: --constant-upper-case (gnatpp)\n+\n+   :switch:`--constan-upper-case, -cU`\n+     Constant object declaration names are upper case.\n+\n+   .. index:: --constant-mixed-case (gnatpp)\n+\n+   :switch:`--constant-mixed-case, -cM`\n+     Constant object declaration names are mixed case.\n \n    .. index:: --syntax-only (gnatpp)\n \n@@ -725,10 +801,9 @@ building specialized scripts.\n      This means gnatpp will not be able to support any of the\n      \"as-declared\" switches.\n \n-\n    .. index:: --dictionary (gnatpp)\n \n-   :switch:`--dictionary={file}`\n+   :switch:`--dictionary={file}, -D={file}`\n      Use ``file`` as a *dictionary file* that defines\n      the casing for a set of specified names,\n      thereby overriding the effect on these names by\n@@ -741,10 +816,9 @@ building specialized scripts.\n      to define the casing for the Ada predefined names and\n      the names declared in the GNAT libraries.\n \n-\n    .. index:: --dictionary=- (gnatpp)\n \n-   :switch:`--dictionary=-`\n+   :switch:`--dictionary=-, -D=-`\n      Do not use the default dictionary file;\n      instead, use the casing\n      defined by a ``-n`` switch and any explicit\n@@ -762,146 +836,6 @@ building specialized scripts.\n    on their effect.\n \n \n-   .. index:: -c (gnatpp)\n-\n-\n-   :switch:`--comments-unchanged`\n-     All comments remain unchanged.\n-\n-\n-   :switch:`--comments-gnat-indentation`\n-     GNAT-style comment line indentation.\n-     This is the default.\n-\n-\n-   :switch:`--comments-gnat-beginning`\n-     GNAT-style comment beginning.\n-\n-\n-   :switch:`--comments-fill`\n-     Fill comment blocks.\n-     The default is :switch:`--no-comments-fill`.\n-\n-\n-   :switch:`--comments-special`\n-     Keep unchanged special form comments.\n-     The default is :switch:`--no-comments-special`.\n-\n-\n-   .. index:: --comments-only (gnatpp)\n-\n-   :switch:`--comments-only`\n-     Format just the comments.\n-\n-   .. index:: --no-end-id (gnatpp)\n-\n-\n-   :switch:`--no-end-id`\n-     Do not insert the name of a unit after ``end``; leave whatever comes\n-     after ``end``, if anything, alone.\n-\n-   .. index:: --no-separate-is (gnatpp)\n-\n-\n-   :switch:`--no-separate-is`\n-     Do not place the keyword ``is`` on a separate line in a subprogram body in\n-     case if the spec occupies more than one line.\n-\n-   .. index:: --no-separate-return (gnatpp)\n-\n-\n-   :switch:`--no-separate-return`\n-     In :switch:`--no-compact` mode, if a subprogram spec does not fit on\n-     one line, try to place the ``return`` on the same line as the last\n-     formal parameter.\n-\n-   .. index:: --separate-loop (gnatpp)\n-\n-\n-   :switch:`--separate-loop`\n-     Place the keyword ``loop`` in FOR and WHILE loop statements\n-     on a separate line.\n-\n-   .. index:: --no-separate-then (gnatpp)\n-\n-\n-   :switch:`--separate-then`\n-     Place the keyword ``then`` in IF statements\n-     on a separate line.\n-\n-   .. index:: --no-separate-loop (gnatpp)\n-\n-\n-   :switch:`--no-separate-loop`\n-     Do not place the keyword ``loop`` in FOR and WHILE loop statements\n-     on a separate line. This option is\n-     incompatible with the :switch:`--separate-loop` option.\n-\n-   .. index:: --no-separate-then (gnatpp)\n-\n-\n-   :switch:`--no-separate-then`\n-     Do not place the keyword ``then`` in IF statements\n-     on a separate line. This option is\n-     incompatible with the :switch:`--separate-then` option.\n-\n-   .. index:: --separate-loop-then (gnatpp)\n-\n-\n-   :switch:`--separate-loop-then`\n-     Equivalent to :switch:`--separate-loop` :switch:`--separate-then`.\n-\n-   .. index:: --no-separate-loop-then (gnatpp)\n-\n-\n-   :switch:`--no-separate-loop-then`\n-     Equivalent to :switch:`--no-separate-loop` :switch:`--no-separate-then`.\n-\n-   .. index:: --use-on-new-line (gnatpp)\n-\n-\n-   :switch:`--use-on-new-line`\n-     Start each USE clause in a context clause from a separate line.\n-\n-\n-   .. index:: --insert-blank-lines (gnatpp)\n-\n-\n-   :switch:`--insert-blank-lines`\n-     Insert blank lines where appropriate (between bodies and other large\n-     constructs).\n-\n-   .. index:: --preserve-blank-lines (gnatpp)\n-\n-\n-   :switch:`--preserve-blank-lines`\n-     Preserve blank lines in the input. By default, gnatpp will squeeze\n-     multiple blank lines down to one.\n-\n-   .. index:: --preserve-line-breaks (gnatpp)\n-\n-   :switch:`--preserve-line-breaks`\n-     Preserve line breaks in the input, to the extent possible.\n-     By default, line breaks are also inserted at appropriate\n-     places.\n-\n-   .. index:: --source-line-breaks (gnatpp)\n-\n-   :switch:`--source-line-breaks`\n-     Keep the line breaks from the source; do not insert or delete any\n-     line breaks.\n-\n-   .. index:: --spaces-only (gnatpp)\n-\n-   :switch:`--spaces-only`\n-     Disable all formatting except for inserting and removing spaces.\n-     This implies --source-line-breaks.\n-\n-   The ``--comments`` switches are compatible with one another, except\n-   that the ``--comments-unchanged`` switch disables all other comment\n-   formatting switches.\n-\n-\n    .. _General_Text_Layout_Control:\n \n    General Text Layout Control\n@@ -911,19 +845,19 @@ building specialized scripts.\n \n    .. index:: --max-line-length (gnatpp)\n \n-   :switch:`--max-line-length={nnn}`\n+   :switch:`--max-line-length={nnn}, -M={nnn}`\n      Maximum line length, ``nnn`` from 32...256, the default value is 79\n \n \n    .. index:: --indentation (gnatpp)\n \n-   :switch:`--indentation={nnn}`\n+   :switch:`--indentation={nnn}, -i={nnn}`\n      Indentation level, ``nnn`` from 1...9, the default value is 3\n \n \n    .. index:: --indent-continuation (gnatpp)\n \n-   :switch:`--indent-continuation={nnn}`\n+   :switch:`--indent-continuation={nnn}, -cl={nnn}`\n      Indentation level for continuation lines (relative to the line being\n      continued), ``nnn`` from 1...9.\n      The default\n@@ -956,63 +890,6 @@ building specialized scripts.\n      example, with ``--based-grouping=4``, ``16#0001FFFE#`` will be\n      changed to ``16#0001_FFFE#``.\n \n-\n-   .. index:: --split-line-before-record (gnatpp)\n-\n-   :switch:`--split-line-before-record`\n-     Split the line just before ``record`` in a record type declaration.\n-\n-\n-   .. index:: --indent-named-statements (gnatpp)\n-\n-   :switch:`--indent-named-statements`\n-     Named block and loop statements are indented with respect to\n-     the name.\n-\n-\n-   .. index:: --split-line-before-op (gnatpp)\n-\n-   :switch:`--split-line-before-op`\n-     If it is necessary to split a line at a binary operator, by default\n-     the line is split after the operator. With this option, it is split\n-     before the operator.\n-\n-\n-   .. index:: --RM-style-spacing (gnatpp)\n-\n-   :switch:`--RM-style-spacing`\n-     Do not insert an extra blank before various occurrences of\n-     '(' and ':'. Alignment is off by default in this mode;\n-     use :switch:`--alignment` to turn it on.\n-\n-\n-   .. index:: --compact (gnatpp)\n-   .. index:: --no-compact (gnatpp)\n-\n-   :switch:`--compact`\n-     This is the default. In calls and similar, this packs as many\n-     subexpressions on the same line as possible. Example:\n-\n-     .. code-block:: ada\n-\n-        Some_Procedure\n-          (Short_One, Another_Short_One,\n-           A_Very_Very_Very_Very_Very_Very_Very_Very_Long_One);\n-\n-   :switch:`--no-compact`\n-     Turns off --compact mode. In calls and similar, if it is necessary\n-     to split a line between two subexpressions (because otherwise the\n-     construct would exceed --max-line-length), then all such subexpressions\n-     are placed on separate lines. Example:\n-\n-     .. code-block:: ada\n-\n-        Some_Procedure\n-          (Short_One,\n-           Another_Short_One,\n-           A_Very_Very_Very_Very_Very_Very_Very_Very_Long_One);\n-\n-\n    .. index:: --call-threshold (gnatpp)\n \n    :switch:`--call-threshold={nnn}`\n@@ -1021,40 +898,14 @@ building specialized scripts.\n      a new line. If ``nnn`` is 0, no check for the number of associations\n      is made; this is the default.\n \n-\n    .. index:: --par-threshold (gnatpp)\n \n    :switch:`--par-threshold={nnn}`\n      If the number of parameter specifications is greater than ``nnn``\n      (or equal to ``nnn`` in case of a function), start each specification from\n-     a new line. If ``nnn`` is 0, and :switch:`--no-separate-is` was not specified, then\n-     the ``is`` is placed on a separate line. This feature is disabled by default.\n-\n-   .. index:: --vertical-enum-types (gnatpp)\n-\n-   :switch:`--vertical-enum-types`\n-     Format enumeration type declarations \"vertically\", e.g. each\n-     enumeration literal goes on a separate line.\n-\n-   .. index:: --vertical-array-types (gnatpp)\n-\n-   :switch:`--vertical-array-types`\n-     Format array type declarations \"vertically\", e.g. for\n-     multidimensional arrays, each index_subtype_definition or\n-     discrete_subtype_definition goes on a separate line.\n-\n-   .. index:: --vertical-named-aggregates (gnatpp)\n-\n-   :switch:`--vertical-named-aggregates`\n-     Format aggregates \"vertically\" if named notation is used for all\n-     component_associations, e.g. each component_association\n-     goes on a separate line.\n-\n-   .. index:: --vertical-case-alternatives (gnatpp)\n-\n-   :switch:`--vertical-case-alternatives`\n-     Format case statements, case expressions, and variant parts with\n-     additional line breaks.\n+     a new line. If ``nnn`` is 0, and :switch:`--no-separate-is` was not\n+     specified, then the ``is`` is placed on a separate line. This feature is\n+     disabled by default.\n \n \n    .. _Setting_the_Source_Search_Path:\n@@ -1090,7 +941,7 @@ building specialized scripts.\n \n    .. index:: --replace (gnatpp)\n \n-   :switch:`--replace`\n+   :switch:`--replace, -rnb`\n      This is the default.\n      Replace the input source file with the reformatted output without\n      creating any backup copy of the input source.\n@@ -1108,38 +959,38 @@ building specialized scripts.\n \n    .. index:: --pipe (gnatpp)\n \n-   :switch:`--pipe`\n+   :switch:`--pipe, -pipe`\n      Send the output to ``Standard_Output``\n \n \n    .. index:: --output (gnatpp)\n \n-   :switch:`--output={output_file}`\n+   :switch:`--output={output_file}, -o={output_file}`\n      Write the output into ``output_file``.\n      If ``output_file`` already exists, ``gnatpp`` terminates without\n      reading or processing the input file.\n \n \n    .. index:: --output-force (gnatpp)\n \n-   :switch:`--output-force={output_file}`\n+   :switch:`--output-force={output_file}, -of={output_file}`\n      Write the output into ``output_file``, overwriting the existing file\n      (if one is present).\n \n \n    .. index:: --replace-backup (gnatpp)\n \n-   :switch:`--replace-backup`\n+   :switch:`--replace-backup, -r`\n      Replace the input source file with the reformatted output, and copy the\n-     original input source into the file whose name is obtained by appending the\n-     :file:`.npp` suffix to the name of the input file.\n+     original input source into the file whose name is obtained by appending\n+     the :file:`.npp` suffix to the name of the input file.\n      If a file with this name already exists, ``gnatpp`` terminates without\n      reading or processing the input file.\n \n \n    .. index:: --replace-force-backup (gnatpp)\n \n-   :switch:`--replace-force-backup`\n+   :switch:`--replace-force-backup, -rf`\n      Like ``--replace-backup`` except that if the file with the specified name\n      already exists, it is overwritten.\n \n@@ -1159,7 +1010,7 @@ building specialized scripts.\n \n    .. index:: --wide-character-encoding (gnatpp)\n \n-   :switch:`--wide-character-encoding={e}`\n+   :switch:`--wide-character-encoding={e}, -W={e}`\n      Specify the wide character encoding method for the input and output\n      files. ``e`` is one of the following:\n \n@@ -1198,18 +1049,17 @@ building specialized scripts.\n \n    :switch:`-P {file}`\n      Indicates the name of the project file that describes the set of sources\n-     to be processed. The exact set of argument sources depends on other options\n-     specified; see below.\n+     to be processed. The exact set of argument sources depends on other\n+     options specified; see below.\n \n \n    .. index:: -U  (gnatpp)\n \n    :switch:`-U`\n      If a project file is specified and no argument source is explicitly\n      specified (either directly or by means of ``--files`` option), process\n-     all the units of the closure of the argument project. Otherwise this option\n-     has no effect.\n-\n+     all the units of the closure of the argument project. Otherwise this\n+     option has no effect.\n \n    :switch:`-U {main_unit}`\n      If a project file is specified and no argument source is explicitly\n@@ -1255,13 +1105,13 @@ building specialized scripts.\n    .. index:: --pp-on  (gnatpp)\n \n    :switch:`--pp-on={xxx}`\n-     Use :switch:`--xxx` as the command to turn pretty printing back on, instead\n-     of the default ``--!pp on``.\n+     Use :switch:`--xxx` as the command to turn pretty printing back on,\n+     instead of the default ``--!pp on``.\n \n \n    .. index:: --files (gnatpp)\n \n-   :switch:`--files={filename}`\n+   :switch:`--files={filename}, -files={filename}`\n      Take as arguments the files listed in text file ``file``.\n      Text file ``file`` may contain empty lines that are ignored.\n      Each nonempty line should contain the name of an existing file.\n@@ -1274,23 +1124,24 @@ building specialized scripts.\n      Do not process the sources listed in a specified file. This option cannot\n      be used in incremental mode.\n \n+\n    .. index:: --jobs (gnatpp)\n \n-   :switch:`--jobs={n}`\n+   :switch:`--jobs={n}, -j={n}`\n      With ``--incremental``, use *n* ``gnatpp`` processes to perform\n      pretty printing in parallel. If *n* is 0, then the maximum number\n      processes is the number of core processors on the platform.\n \n \n    .. index:: --verbose (gnatpp)\n \n-   :switch:`--verbose`\n+   :switch:`--verbose, -v`\n      Verbose mode\n \n \n    .. index:: --quiet (gnatpp)\n \n-   :switch:`--quiet`\n+   :switch:`--quiet, -q`\n      Quiet mode\n \n    If a project file is specified and no argument source is explicitly\n@@ -1304,9 +1155,9 @@ building specialized scripts.\n    Formatting Rules\n    ----------------\n \n-   The following subsections show how ``gnatpp`` treats white space,\n-   comments, program layout, and name casing.\n-   They provide detailed descriptions of the switches shown above.\n+   The following subsections show how ``gnatpp`` treats, comments, program\n+   layout, name casing and how to disable ``gnatpp`` in source code regions.\n+   They provide more details of the switches shown above.\n \n \n    .. _Disabling_Pretty_Printing:\n@@ -1353,32 +1204,13 @@ building specialized scripts.\n    included in the argument to these switches.\n \n \n-   .. _White_Space_and_Empty_Lines:\n-\n-   White Space and Empty Lines\n-   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-   ``gnatpp`` does not have an option to control space characters.\n-   It will add or remove spaces according to the style illustrated by the\n-   examples in the :title:`Ada Reference Manual`.\n-   The output file will contain no lines with trailing white space.\n-\n-   By default, a sequence of one or more blank lines in the input is\n-   converted to a single blank line in the output; multiple blank lines\n-   are squeezed down to one.\n-   The ``--preserve-blank-lines`` option\n-   turns off the squeezing; each blank line in the input is copied\n-   to the output.\n-   The ``--insert-blank-lines`` option\n-   causes additional blank lines to be inserted if not already\n-   present in the input (e.g. between bodies).\n-\n-\n    .. _Formatting_Comments:\n \n    Formatting Comments\n    ^^^^^^^^^^^^^^^^^^^\n \n+   Only ``--layout=compact`` and ``--layout=tall`` format comments.\n+\n    Comments in Ada code are of two kinds:\n \n    * a *whole-line comment*, which appears by itself (possibly preceded by\n@@ -1390,38 +1222,21 @@ building specialized scripts.\n    A whole-line comment is indented according to the surrounding code,\n    with some exceptions. Comments that start in column 1 are kept\n    there. If possible, comments are not moved so far to the right that\n-   the maximum line length is exceeded. The ``--comments-unchanged``\n-   option turns off comment formatting. Special-form comments such as\n+   the maximum line length is exceeded. Special-form comments such as\n    SPARK-style ``--#...`` are left alone.\n \n    For an end-of-line comment, ``gnatpp`` tries to leave the same\n    number of spaces between the end of the preceding Ada code and the\n    beginning of the comment as appear in the original source.\n \n-   The ``--comments-gnat-beginning`` switch (GNAT style comment\n-   beginning) has the following effect:\n-\n-     * For each whole-line comment that does not end with two hyphens,\n-       ``gnatpp`` inserts spaces if necessary after the starting two\n-       hyphens to ensure that there are at least two spaces between\n-       these hyphens and the first non-blank character of the comment.\n+   For each whole-line comment that does not end with two hyphens or that are\n+   not special-form comments, ``gnatpp`` inserts spaces if necessary after the\n+   starting two hyphens to ensure that there are at least two spaces between\n+   these hyphens and the first non-blank character of the comment.\n \n-   The ``--comments-fill`` switch specifies that whole-line comments\n-   that form a paragraph will be filled in typical word processor style\n-   (that is, moving words between lines to make the lines other than the\n-   last similar in length ).\n-\n-   The ``--comments-only`` switch specifies that only the comments are\n-   formatted; the rest of the program text is left alone. The comments\n-   are formatted according to the ``--comments-gnat-beginning`` and\n-   ``--comments-fill`` switches; other formatting switches are ignored. For\n-   example, ``--comments-only --comments-fill`` means to fill comment\n-   paragraphs, and do nothing else. Likewise, ``--comments-only\n-   --comments-gnat-beginning`` ensures comments start with at least two\n-   spaces after ``--``, and ``--comments-only --comments-gnat-beginning\n-   --comments-fill`` does both. If ``--comments-only`` is given without\n-   ``--comments-gnat-beginning`` or ``--comments-fill``, then gnatpp\n-   doesn't format anything.\n+   With ``--layout=compact``, whole-line comments that form a paragraph will be\n+   filled in typical word processor style (that is, moving words between lines\n+   to make the lines other than the last similar in length).\n \n \n    .. _Name_Casing:\n@@ -1643,188 +1458,192 @@ building specialized scripts.\n    Legacy Switches\n    ^^^^^^^^^^^^^^^\n \n-   Some switches have a short form, mostly for legacy reasons,\n-   as shown below.\n-\n-   .. index:: -n (gnatpp)\n-\n-   :switch:`-nD`\n-     :switch:`--name-case-as-declared`\n-\n-   :switch:`-nU`\n-     :switch:`--name-upper-case`\n-\n-   :switch:`-nL`\n-     :switch:`--name-lower-case`\n-\n-   :switch:`-nM`\n-     :switch:`--name-mixed-case`\n-\n-   .. index:: -a (gnatpp)\n-\n-   :switch:`-aL`\n-     :switch:`--attribute-lower-case`\n-\n-   :switch:`-aU`\n-     :switch:`--attribute-upper-case`\n+   .. index:: --alignment (gnatpp)\n \n-   :switch:`-aM`\n-     :switch:`--attribute-mixed-case`\n+   :switch:`--alignment, --no-alignment`\n+      Programs can be easier to read if certain constructs are vertically\n+      aligned.\n \n-   .. index:: -k (gnatpp)\n+        * ``:`` in declarations,\n+        * ``:=`` in initializations in declarations,\n+        * ``:=`` in assignment statements,\n+        * ``=>`` in associations, and\n+        * ``at`` keywords in the component clauses in record representation\n+          clauses.\n \n-   :switch:`-kL`\n-     :switch:`--keyword-lower-case`\n+   .. index:: --align-modes (gnatpp)\n \n-   :switch:`-kU`\n-     :switch:`--keyword-upper-case`\n+   :switch:`--align-modes, --no-align-modes`\n \n-   .. index:: -ne (gnatpp)\n+      Line up ``in`` and ``out`` in parameter specifications.\n \n-   :switch:`-neD`\n-     :switch:`--enum-case-as-declared`\n+   .. index:: --compact (gnatpp)\n \n-   :switch:`-neU`\n-     :switch:`--enum-upper-case`\n+   :switch:`--compact, --no-compact`\n+     In calls and similar, ``--compact`` packs as many\n+     subexpressions on the same line as possible. Example:\n \n-   :switch:`-neL`\n-     :switch:`--enum-lower-case`\n+     .. code-block:: ada\n \n-   :switch:`-neM`\n-     :switch:`--enum-mixed-case`\n+        Some_Procedure\n+          (Short_One, Another_Short_One,\n+           A_Very_Very_Very_Very_Very_Very_Very_Very_Long_One);\n \n-   .. index:: -nt (gnatpp)\n+     On the contrary, with ``--no-compact``, in calls and similar, if it is\n+     necessary to split a line between two subexpressions (because otherwise\n+     the construct would exceed --max-line-length), then all such\n+     subexpressions are placed on separate lines. Example:\n \n-   :switch:`-ntD`\n-     :switch:`--type-case-as-declared`\n+     .. code-block:: ada\n \n-   :switch:`-ntU`\n-     :switch:`--type-upper-case`\n+        Some_Procedure\n+          (Short_One,\n+           Another_Short_One,\n+           A_Very_Very_Very_Very_Very_Very_Very_Very_Long_One);\n \n-   :switch:`-ntL`\n-     :switch:`--type-lower-case`\n+   .. index:: --end-id (gnatpp)\n \n-   :switch:`-ntM`\n-     :switch:`--type-mixed-case`\n+   :switch:`--end-id, --no-end-id`\n+     Insert the name of a unit after ``end``. Otherwise, leave whatever comes\n+     after ``end``, if anything, alone.\n \n-   :switch:`-nnU`\n-     :switch:`--number-upper-case`\n+   .. index:: --separate-is (gnatpp)\n \n-   :switch:`-nnL`\n-     :switch:`--number-lower-case`\n+   :switch:`--separate-is, --no-separate-is`\n+     Place the keyword ``is`` on a separate line in a subprogram body in\n+     case if the spec occupies more than one line.\n \n-   :switch:`-nnM`\n-     :switch:`--number-mixed-case`\n+   .. index:: --separate-return (gnatpp)\n \n-   .. index:: -p (gnatpp)\n+   :switch:`--separate-return, --no-separate-return`\n+     If a subprogram spec does not fit on one line, place the ``return`` on\n+     a separate line. Otherwise try to place it in the same line as the last\n+     parameter specification.\n \n-   :switch:`-pL`\n-     :switch:`--pragma-lower-case`\n+   .. index:: --separate-loop (gnatpp)\n \n-   :switch:`-pU`\n-     :switch:`--pragma-upper-case`\n+   :switch:`--separate-loop, --no-separate-loop`\n+     Place the keyword ``loop`` in FOR and WHILE loop statements\n+     on a separate line.\n \n-   :switch:`-pM`\n-     :switch:`--pragma-mixed-case`\n \n-   .. index:: -D (gnatpp)\n+   .. index:: --separate-then (gnatpp)\n \n-   :switch:`-D{file}`\n-     :switch:`--dictionary={file}`\n+   :switch:`--separate-then, --no-separate-then`\n+     Place the keyword ``then`` in IF statements\n+     on a separate line.\n \n-   .. index:: -D- (gnatpp)\n+   .. index:: --separate-loop-then (gnatpp)\n \n-   :switch:`-D-`\n-     :switch:`--dictionary=-`\n+   :switch:`--separate-loop-then, --no-separate-loop-then`\n+     Equivalent to :switch:`--separate-loop` :switch:`--separate-then`.\n \n-   .. index:: -c (gnatpp)\n+   .. index:: --split-line-before-record (gnatpp)\n \n-   :switch:`-c0`\n-     :switch:`--comments-unchanged`\n+   :switch:`--split-line-before-record, --no-split-line-before-record`\n+     Split the line just before ``record`` in a record type declaration.\n \n-   :switch:`-c1`\n-     :switch:`--comments-gnat-indentation`\n+   .. index:: --indent-named-statements (gnatpp)\n \n-   :switch:`-c3`\n-     :switch:`--comments-gnat-beginning`\n+   :switch:`--indent-named-statements, --no-indent-named-statements`\n+     Named block and loop statements are indented with respect to\n+     the name.\n \n-   :switch:`-c4`\n-     :switch:`--comments-fill`\n+   .. index:: --split-line-before-op (gnatpp)\n \n-   :switch:`-c5`\n-     :switch:`--comments-special`\n+   :switch:`--split-line-before-op, --no-split-line-before-op`\n+     If it is necessary to split a line at a binary operator, by default\n+     the line is split after the operator. With this option, it is split\n+     before the operator.\n \n-   .. index:: -M (gnatpp)\n+   .. index:: --use-on-new-line (gnatpp)\n \n-   :switch:`-M{nnn}`\n-     :switch:`--max-line-length={nnn}`\n+   :switch:`--use-on-new-line, --no-use-one-new-line`\n+     Start each USE clause in a context clause from a separate line.\n \n-   .. index:: -i (gnatpp)\n+   .. index:: --vertical-enum-types (gnatpp)\n \n-   :switch:`-i{nnn}`\n-     :switch:`--indentation={nnn}`\n+   :switch:`--vertical-enum-types, --no-vertical-enum-types`\n+     Format enumeration type declarations \"vertically\", e.g. each\n+     enumeration literal goes on a separate line.\n \n-   .. index:: -cl (gnatpp)\n+   .. index:: --vertical-array-types (gnatpp)\n \n-   :switch:`-cl{nnn}`\n-     :switch:`--indent-continuation={nnn}`\n+   :switch:`--vertical-array-types, --no-vertical-array-types`\n+     Format array type declarations \"vertically\", e.g. for\n+     multidimensional arrays, each index_subtype_definition or\n+     discrete_subtype_definition goes on a separate line.\n \n-   .. index:: -pipe (gnatpp)\n+   .. index:: --vertical-named-aggregates (gnatpp)\n \n-   :switch:`-pipe`\n-     :switch:`--pipe`\n+   :switch:`--vertical-named-aggregates, --no-vertical-named-aggregates`\n+     Format aggregates \"vertically\" if named notation is used for all\n+     component_associations, e.g. each component_association\n+     goes on a separate line.\n \n-   .. index:: -o (gnatpp)\n+   .. index:: --vertical-case-alternatives (gnatpp)\n \n-   :switch:`-o {output-file}`\n-     :switch:`--output={output-file}`\n+   :switch:`--vertical-case-alternatives, --no-vertical-case-alternatives`\n+     Format case statements, case expressions, and variant parts with\n+     additional line breaks.\n \n-   .. index:: -of (gnatpp)\n+   .. index:: --RM-style-spacing (gnatpp)\n \n-   :switch:`-of {output-file}`\n-     :switch:`--output-force={output-file}`\n+   :switch:`--RM-style-spacing`\n+     Do not insert an extra blank before various occurrences of\n+     '(' and ':'. Alignment is off by default in this mode;\n+     use :switch:`--alignment` to turn it on.\n \n-   .. index:: -r (gnatpp)\n+   .. index:: --insert-blank-lines (gnatpp)\n \n-   :switch:`-rnb`\n-     :switch:`--replace`\n+   :switch:`--insert-blank-lines, --no-insert-blank-lines`\n+     Insert blank lines where appropriate (between bodies and other large\n+     constructs).\n \n-   :switch:`-r`\n-     :switch:`--replace-backup`\n+   .. index:: --preserve-blank-lines (gnatpp)\n \n-   .. index:: -rf (gnatpp)\n+   :switch:`--preserve-blank-lines, --no-preserve-blank-lines`\n+     Preserve blank lines in the input. By default, gnatpp will squeeze\n+     multiple blank lines down to one.\n \n-   :switch:`-rf`\n-     :switch:`--replace-force-backup`\n+   .. index:: --preserve-line-breaks (gnatpp)\n \n-   .. index:: -rnb (gnatpp)\n+   :switch:`--preserve-line-breaks, --no-preserve-line-breaks`\n+     Preserve line breaks in the input, to the extent possible.\n+     By default, line breaks are also inserted at appropriate\n+     places.\n \n-   .. index:: --eol (gnatpp)\n+   .. index:: --source-line-breaks (gnatpp)\n \n-   .. index:: -W (gnatpp)\n+   :switch:`--source-line-breaks, --no-source-line-breaks`\n+     Keep the line breaks from the source; do not insert or delete any\n+     line breaks.\n \n-   :switch:`-W{e}`\n-     :switch:`--wide-character-encoding={e}`\n+   .. index:: --spaces-only (gnatpp)\n \n-   .. index:: -files (gnatpp)\n+   :switch:`--spaces-only, --no-spaces-only`\n+     Disable all formatting except for inserting and removing spaces.\n+     This implies --source-line-breaks.\n \n-   :switch:`-files {filename}`\n-     :switch:`--files={filename}`\n+   .. index:: -c (gnatpp)\n \n-   .. index:: -j (gnatpp)\n+   :switch:`--comments-unchanged, -c0`\n+     All comments remain unchanged.\n \n-   :switch:`-j{n}`\n-     :switch:`--jobs={n}`\n+   :switch:`--comments-gnat-indentation, -c1`\n+     GNAT-style comment line indentation.\n \n-   .. index:: -v (gnatpp)\n+   :switch:`--comments-gnat-beginning, -c3`\n+     GNAT-style comment beginning.\n \n-   :switch:`-v`\n-     :switch:`--verbose`\n+   :switch:`--comments-fill, -c4`\n+     Fill comment blocks.\n \n-   .. index:: -q (gnatpp)\n+   :switch:`--comments-special, -c5`\n+     Keep unchanged special form comments.\n \n-   :switch:`-q`\n-     :switch:`--quiet`\n+   :switch:`--comments-only`\n+     Format just the comments.\n \n \n .. only:: PRO or GPL"}, {"sha": "a136a5a0f75f3eb15c56b39d184bb785b5561110", "filename": "gcc/ada/doc/gnat_ugn/platform_specific_information.rst", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fplatform_specific_information.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fplatform_specific_information.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fplatform_specific_information.rst?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -13,8 +13,8 @@ Platform-Specific Information\n *****************************\n \n This appendix contains information relating to the implementation\n-of run-time libraries on various platforms and also covers\n-topics related to the GNAT implementation on Windows and Mac OS.\n+of run-time libraries on various platforms and also covers topics\n+related to the GNAT implementation on specific Operating Systems.\n \n .. _`Run_Time_Libraries`:\n "}, {"sha": "dc379cbc85297d5f88a9d37315912e7c95392eda", "filename": "gcc/ada/einfo-utils.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Feinfo-utils.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Feinfo-utils.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo-utils.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 2020-2022, Free Software Foundation, Inc.        --\n+--           Copyright (C) 2020-2023, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "896d8f0de199f379b10779773642d12869dd4b96", "filename": "gcc/ada/einfo-utils.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Feinfo-utils.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Feinfo-utils.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo-utils.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---           Copyright (C) 2020-2022, Free Software Foundation, Inc.        --\n+--           Copyright (C) 2020-2023, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "5e227c1ed01a056970c825c307ded325b50cd995", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "a200d6334bfd44c6b43261ba9c72023be19c4210", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1865,7 +1865,7 @@ package Einfo is\n --    Has_Per_Object_Constraint\n --       Defined in E_Component entities. Set if the subtype of the component\n --       has a per object constraint. Per object constraints result from the\n---       following situations :\n+--       following situations:\n --\n --       1. N_Attribute_Reference - when the prefix is the enclosing type and\n --          the attribute is Access.\n@@ -4136,14 +4136,14 @@ package Einfo is\n --       set instead, or a similar appearance as an out parameter actual, in\n --       which case Referenced_As_Out_Parameter is set.\n \n---    Referenced_As_LHS :\n+--    Referenced_As_LHS\n --       Defined in all entities. This flag is set instead of Referenced if a\n --       simple variable that is not a renaming appears as the left side of an\n --       assignment. The reason we distinguish this kind of reference is that\n --       we have a separate warning for variables that are only assigned and\n --       never read.\n \n---    Referenced_As_Out_Parameter :\n+--    Referenced_As_Out_Parameter\n --       Defined in all entities. This flag is set instead of Referenced if a\n --       simple variable that is not a renaming appears as an actual for an out\n --       formal. The reason we distinguish this kind of reference is that"}, {"sha": "6af7228d90a560767f402f1faeaccc6928219dfe", "filename": "gcc/ada/elists.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Felists.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Felists.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Felists.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "31397ca91fba5e4b852c2487df22f178737421ef", "filename": "gcc/ada/elists.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Felists.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Felists.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Felists.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "378b598e02312df47140ba94786891abc7bdc257", "filename": "gcc/ada/elists.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Felists.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Felists.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Felists.h?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *            Copyright (C) 1992-2022, Free Software Foundation, Inc.       *\n+ *            Copyright (C) 1992-2023, Free Software Foundation, Inc.       *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "e26e228f9cdc95776de0725dcdb0db13231cc2b2", "filename": "gcc/ada/env.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fenv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fenv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fenv.c?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *            Copyright (C) 2005-2022, Free Software Foundation, Inc.       *\n+ *            Copyright (C) 2005-2023, Free Software Foundation, Inc.       *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "2a65e431aec2c6d2c8592290afc6347cf1db0611", "filename": "gcc/ada/env.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fenv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fenv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fenv.h?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 2009-2022, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 2009-2023, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "e73e9fb295a200d057eeaffab216eba1bfcfccc8", "filename": "gcc/ada/err_vars.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ferr_vars.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ferr_vars.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferr_vars.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "9a298267d20e4c8a0287b1a5a612b1a5ee3a445b", "filename": "gcc/ada/errno.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ferrno.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ferrno.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrno.c?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *           Copyright (C) 1992-2022, Free Software Foundation, Inc.        *\n+ *           Copyright (C) 1992-2023, Free Software Foundation, Inc.        *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "96b56ffc57a4a10c9179a100e47eed2414f234f5", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -53,7 +53,7 @@ with Stand;          use Stand;\n with Stylesw;        use Stylesw;\n with System.OS_Lib;\n with Uname;          use Uname;\n-with Warnsw; pragma Unreferenced (Warnsw); -- disable spurious warning\n+with Warnsw;\n \n package body Errout is\n \n@@ -2193,8 +2193,9 @@ package body Errout is\n          end if;\n \n          if Include_Subprogram_In_Messages then\n-            Write_Str\n-              (\",\"\"subprogram\"\":\"\"\" & Subprogram_Name_Ptr (Error.Node) & \"\"\"\");\n+            Write_Str (\",\"\"subprogram\"\":\"\"\");\n+            Write_JSON_Escaped_String (Subprogram_Name_Ptr (Error.Node));\n+            Write_Str (\"\"\"\");\n          end if;\n \n          Write_Str (\"}\");"}, {"sha": "1e09961432573edb1fb4ab401dd1729a66e2a9be", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "291a340ef6e7689e6a2750b6f2940060374a2887", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "c32b19ffe88e66652b1ead983cae13d8761993c7", "filename": "gcc/ada/erroutc.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ferroutc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ferroutc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "8b3c2ec2bfa378bbb5772dac771be56c7342af57", "filename": "gcc/ada/errutil.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ferrutil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ferrutil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrutil.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1991-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1991-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "42e4448fc8c813d197fd4cd974c018bc4a8bb41b", "filename": "gcc/ada/errutil.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ferrutil.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ferrutil.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrutil.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2002-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2002-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "42ed41309c54227c47ea2c7a6a9b6da9556e785e", "filename": "gcc/ada/eval_fat.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Feval_fat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Feval_fat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feval_fat.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "169266d9ee82590b53c120ff7cef12e549ca2f9e", "filename": "gcc/ada/eval_fat.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Feval_fat.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Feval_fat.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feval_fat.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "50a6203e84d4a96206979daec9e2402c85c5ed9f", "filename": "gcc/ada/exit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexit.c?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2022, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2023, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "f1cbbfc31557783ab4e453a0440ff5a6c3cc635c", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 93, "deletions": 15, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -62,6 +62,7 @@ with Sem_Eval;       use Sem_Eval;\n with Sem_Mech;       use Sem_Mech;\n with Sem_Res;        use Sem_Res;\n with Sem_Util;       use Sem_Util;\n+use Sem_Util.Storage_Model_Support;\n with Sinfo;          use Sinfo;\n with Sinfo.Nodes;    use Sinfo.Nodes;\n with Sinfo.Utils;    use Sinfo.Utils;\n@@ -75,6 +76,15 @@ with Warnsw;         use Warnsw;\n \n package body Exp_Aggr is\n \n+   function Build_Assignment_With_Temporary\n+     (Target : Node_Id;\n+      Typ    : Node_Id;\n+      Source : Node_Id) return List_Id;\n+   --  Returns a list of actions to assign Source to Target of type Typ using\n+   --  an extra temporary:\n+   --   Tmp := Source;\n+   --   Target := Tmp;\n+\n    type Case_Bounds is record\n      Choice_Lo   : Node_Id;\n      Choice_Hi   : Node_Id;\n@@ -2508,6 +2518,42 @@ package body Exp_Aggr is\n       return New_Code;\n    end Build_Array_Aggr_Code;\n \n+   -------------------------------------\n+   -- Build_Assignment_With_Temporary --\n+   -------------------------------------\n+\n+   function Build_Assignment_With_Temporary\n+     (Target : Node_Id;\n+      Typ    : Node_Id;\n+      Source : Node_Id) return List_Id\n+   is\n+      Loc : constant Source_Ptr := Sloc (Source);\n+\n+      Aggr_Code : List_Id;\n+      Tmp       : Entity_Id;\n+      Tmp_Decl  : Node_Id;\n+\n+   begin\n+      Tmp := Make_Temporary (Loc, 'A', Source);\n+      Tmp_Decl :=\n+        Make_Object_Declaration (Loc,\n+          Defining_Identifier => Tmp,\n+          Object_Definition   => New_Occurrence_Of (Typ, Loc));\n+      Set_No_Initialization (Tmp_Decl, True);\n+\n+      Aggr_Code := New_List (Tmp_Decl);\n+      Append_To (Aggr_Code,\n+        Make_OK_Assignment_Statement (Loc,\n+          Name       => New_Occurrence_Of (Tmp, Loc),\n+          Expression => Source));\n+\n+      Append_To (Aggr_Code,\n+        Make_OK_Assignment_Statement (Loc,\n+          Name       => Target,\n+          Expression => New_Occurrence_Of (Tmp, Loc)));\n+      return Aggr_Code;\n+   end Build_Assignment_With_Temporary;\n+\n    ----------------------------\n    -- Build_Record_Aggr_Code --\n    ----------------------------\n@@ -4514,15 +4560,29 @@ package body Exp_Aggr is\n          New_Aggr := New_Copy_Tree (Aggr);\n          Set_Expansion_Delayed (New_Aggr, False);\n \n-         Aggr_Code :=\n-           New_List (\n-             Make_OK_Assignment_Statement (Sloc (New_Aggr),\n-               Name       => Target,\n-               Expression => New_Aggr));\n+         --  In the case of Target's type using the Designated_Storage_Model\n+         --  aspect with a Copy_To procedure, insert a temporary and have the\n+         --  back end handle the assignment to it. Copy the result to the\n+         --  original target.\n+\n+         if Has_Designated_Storage_Model_Aspect\n+              (Etype (Prefix (Expression (Target))))\n+           and then Present (Storage_Model_Copy_To\n+                               (Storage_Model_Object\n+                                  (Etype (Prefix (Expression (Target))))))\n+         then\n+            Aggr_Code := Build_Assignment_With_Temporary (Target,\n+                           Typ, New_Aggr);\n+         else\n+            Aggr_Code :=\n+              New_List (\n+                Make_OK_Assignment_Statement (Sloc (New_Aggr),\n+                  Name       => Target,\n+                  Expression => New_Aggr));\n+         end if;\n \n       --  Or else, generate component assignments to it, as for an aggregate\n       --  that appears on the right-hand side of an assignment statement.\n-\n       else\n          Aggr_Code :=\n            Build_Array_Aggr_Code (Aggr,\n@@ -7065,16 +7125,34 @@ package body Exp_Aggr is\n            and then not Is_Possibly_Unaligned_Slice (Target)\n            and then Aggr_Assignment_OK_For_Backend (N)\n          then\n-            if Maybe_In_Place_OK then\n-               return;\n-            end if;\n \n-            Aggr_Code :=\n-              New_List (\n-                Make_Assignment_Statement (Loc,\n-                  Name       => Target,\n-                  Expression => New_Copy_Tree (N)));\n+            --  In the case of an assignment using an access with the\n+            --  Designated_Storage_Model aspect with a Copy_To procedure,\n+            --  insert a temporary and have the back end handle the assignment\n+            --  to it. Copy the result to the original target.\n+\n+            if Parent_Kind = N_Assignment_Statement\n+              and then Nkind (Name (Parent_Node)) = N_Explicit_Dereference\n+              and then Has_Designated_Storage_Model_Aspect\n+                         (Etype (Prefix (Name (Parent_Node))))\n+              and then Present (Storage_Model_Copy_To\n+                                  (Storage_Model_Object\n+                                     (Etype (Prefix (Name (Parent_Node))))))\n+            then\n+               Aggr_Code := Build_Assignment_With_Temporary (Target,\n+                              Typ, New_Copy_Tree (N));\n+            else\n+               if Maybe_In_Place_OK then\n+                  return;\n+               end if;\n \n+               Aggr_Code :=\n+                 New_List (\n+                   Make_Assignment_Statement (Loc,\n+                     Name       => Target,\n+                     Expression => New_Copy_Tree (N)));\n+\n+            end if;\n          else\n             Aggr_Code :=\n               Build_Array_Aggr_Code (N,"}, {"sha": "4babf2ec54c3ff56bcdd60b78c89fea04f1ac60f", "filename": "gcc/ada/exp_aggr.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_aggr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_aggr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "ddbd51fd9af0fab66834ad4df4bf66879818e269", "filename": "gcc/ada/exp_atag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_atag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_atag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_atag.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2006-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2006-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "7a7ad6eb670e93d6d52ca9359facf248cbd93583", "filename": "gcc/ada/exp_atag.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_atag.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_atag.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_atag.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2006-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2006-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "aababd516d5487226e3e1b84b534b3115734afe5", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -5638,9 +5638,7 @@ package body Exp_Attr is\n                          Make_Integer_Literal (Loc, 1))));\n \n             else\n-               --  Add Boolean parameter True, to request program error if\n-               --  we have a bad representation on our hands. If checks are\n-               --  suppressed, then add False instead\n+               --  Add Boolean parameter depending on check suppression\n \n                Append_To (Exprs, Rep_To_Pos_Flag (Ptyp, Loc));\n                Rewrite (N,\n@@ -5650,13 +5648,13 @@ package body Exp_Attr is\n                        (Enum_Pos_To_Rep (Etyp), Loc),\n                    Expressions => New_List (\n                      Make_Op_Subtract (Loc,\n-                    Left_Opnd =>\n-                      Make_Function_Call (Loc,\n-                        Name =>\n-                          New_Occurrence_Of\n-                            (TSS (Etyp, TSS_Rep_To_Pos), Loc),\n-                          Parameter_Associations => Exprs),\n-                    Right_Opnd => Make_Integer_Literal (Loc, 1)))));\n+                       Left_Opnd =>\n+                         Make_Function_Call (Loc,\n+                           Name =>\n+                             New_Occurrence_Of\n+                               (TSS (Etyp, TSS_Rep_To_Pos), Loc),\n+                           Parameter_Associations => Exprs),\n+                       Right_Opnd => Make_Integer_Literal (Loc, 1)))));\n             end if;\n \n             --  Suppress checks since they have all been done above\n@@ -6771,9 +6769,7 @@ package body Exp_Attr is\n                          Make_Integer_Literal (Loc, 1))));\n \n             else\n-               --  Add Boolean parameter True, to request program error if\n-               --  we have a bad representation on our hands. Add False if\n-               --  checks are suppressed.\n+               --  Add Boolean parameter depending on check suppression\n \n                Append_To (Exprs, Rep_To_Pos_Flag (Ptyp, Loc));\n                Rewrite (N,\n@@ -6797,7 +6793,8 @@ package body Exp_Attr is\n             Analyze_And_Resolve (N, Typ, Suppress => All_Checks);\n \n          --  For floating-point, we transform 'Succ into a call to the Succ\n-         --  floating-point attribute function in Fat_xxx (xxx is root type)\n+         --  floating-point attribute function in Fat_xxx (xxx is root type).\n+         --  Note that this function takes care of the overflow case.\n \n          elsif Is_Floating_Point_Type (Ptyp) then\n             Expand_Fpt_Attribute_R (N);"}, {"sha": "4d815bd3cba1e768592e5896a07d76be96bdbbd2", "filename": "gcc/ada/exp_attr.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_attr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_attr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "dae05867bd70dfd88c38554ac2f260a5793e92c8", "filename": "gcc/ada/exp_cg.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_cg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_cg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_cg.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2010-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2010-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "91308ee950dc3fad661061688b2652c9c3f097b0", "filename": "gcc/ada/exp_cg.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_cg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_cg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_cg.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2010-2022, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2010-2023, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "5502924bc50638b8665630966bd6600d129dba9f", "filename": "gcc/ada/exp_ch10.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch10.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch10.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch10.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "e2adefe83fe1be0f57f0b09ef185151bc7da2653", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "483c7591038ef3a3048e69ec06c5605d2ccecb4d", "filename": "gcc/ada/exp_ch11.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch11.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch11.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "f5d35db9a4880a374248a69b2d94607095e46003", "filename": "gcc/ada/exp_ch12.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch12.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1997-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1997-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "26050ad6fbb2e20129247c1d34331226d0ca7e7f", "filename": "gcc/ada/exp_ch12.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch12.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch12.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch12.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "cb1447de928f7b7e57e1cb2a65cc0751cf58c539", "filename": "gcc/ada/exp_ch13.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch13.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "55fe00c03b79244c637477e9d5f97a7d02e25766", "filename": "gcc/ada/exp_ch13.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch13.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch13.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch13.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "06a276bbc03cae4b8353da3fc8e22bbadcf6cfd5", "filename": "gcc/ada/exp_ch2.adb", "status": "modified", "additions": 118, "deletions": 1, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch2.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -23,6 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Aspects;        use Aspects;\n with Atree;          use Atree;\n with Checks;         use Checks;\n with Debug;          use Debug;\n@@ -34,9 +35,11 @@ with Exp_Smem;       use Exp_Smem;\n with Exp_Tss;        use Exp_Tss;\n with Exp_Util;       use Exp_Util;\n with Namet;          use Namet;\n+with Nlists;         use Nlists;\n with Nmake;          use Nmake;\n with Opt;            use Opt;\n with Output;         use Output;\n+with Rtsfind;        use Rtsfind;\n with Sem;            use Sem;\n with Sem_Eval;       use Sem_Eval;\n with Sem_Res;        use Sem_Res;\n@@ -47,6 +50,7 @@ with Sinfo.Nodes;    use Sinfo.Nodes;\n with Sinfo.Utils;    use Sinfo.Utils;\n with Sinput;         use Sinput;\n with Snames;         use Snames;\n+with Stand;\n with Tbuild;         use Tbuild;\n \n package body Exp_Ch2 is\n@@ -711,4 +715,117 @@ package body Exp_Ch2 is\n       Analyze_And_Resolve (N, T);\n    end Expand_Renaming;\n \n+   ------------------------------------------\n+   -- Expand_N_Interpolated_String_Literal --\n+   ------------------------------------------\n+\n+   procedure Expand_N_Interpolated_String_Literal (N : Node_Id) is\n+\n+      function Build_Interpolated_String_Image (N : Node_Id) return Node_Id;\n+      --  Build the following Expression_With_Actions node:\n+      --     do\n+      --        Sink : Buffer;\n+      --        [ Set_Trim_Leading_Spaces (Sink); ]\n+      --        Type'Put_Image (Sink, X);\n+      --        { [ Set_Trim_Leading_Spaces (Sink); ]\n+      --          Type'Put_Image (Sink, X); }\n+      --        Result : constant String := Get (Sink);\n+      --        Destroy (Sink);\n+      --     in Result end\n+\n+      -------------------------------------\n+      -- Build_Interpolated_String_Image --\n+      -------------------------------------\n+\n+      function Build_Interpolated_String_Image (N : Node_Id) return Node_Id\n+      is\n+         Loc           : constant Source_Ptr := Sloc (N);\n+         Sink_Entity   : constant Entity_Id  := Make_Temporary (Loc, 'S');\n+         Sink_Decl     : constant Node_Id :=\n+                           Make_Object_Declaration (Loc,\n+                             Defining_Identifier => Sink_Entity,\n+                             Object_Definition =>\n+                               New_Occurrence_Of (RTE (RE_Buffer_Type), Loc));\n+\n+         Get_Id        : constant RE_Id :=\n+                           (if Etype (N) = Stand.Standard_String then\n+                               RE_Get\n+                            elsif Etype (N) = Stand.Standard_Wide_String then\n+                               RE_Wide_Get\n+                            else\n+                               RE_Wide_Wide_Get);\n+\n+         Result_Entity : constant Entity_Id := Make_Temporary (Loc, 'R');\n+         Result_Decl   : constant Node_Id :=\n+                           Make_Object_Declaration (Loc,\n+                             Defining_Identifier => Result_Entity,\n+                             Object_Definition =>\n+                               New_Occurrence_Of (Etype (N), Loc),\n+                             Expression =>\n+                               Make_Function_Call (Loc,\n+                                 Name => New_Occurrence_Of (RTE (Get_Id), Loc),\n+                                 Parameter_Associations => New_List (\n+                                   New_Occurrence_Of (Sink_Entity, Loc))));\n+\n+         Actions  : constant List_Id := New_List;\n+         Elem_Typ : Entity_Id;\n+         Str_Elem : Node_Id;\n+\n+      begin\n+         pragma Assert (Etype (N) /= Stand.Any_String);\n+\n+         Append_To (Actions, Sink_Decl);\n+\n+         Str_Elem := First (Expressions (N));\n+         while Present (Str_Elem) loop\n+            Elem_Typ := Etype (Str_Elem);\n+\n+            --  If the type is numeric or has a specified Integer_Literal or\n+            --  Real_Literal aspect, then prior to invoking Put_Image, the\n+            --  Trim_Leading_Spaces flag is set on the text buffer.\n+\n+            if Is_Numeric_Type (Underlying_Type (Elem_Typ))\n+              or else Has_Aspect (Elem_Typ, Aspect_Integer_Literal)\n+              or else Has_Aspect (Elem_Typ, Aspect_Real_Literal)\n+            then\n+               Append_To (Actions,\n+                 Make_Procedure_Call_Statement (Loc,\n+                   Name                   =>\n+                     New_Occurrence_Of\n+                       (RTE (RE_Set_Trim_Leading_Spaces), Loc),\n+                   Parameter_Associations => New_List (\n+                     Convert_To (RTE (RE_Root_Buffer_Type),\n+                       New_Occurrence_Of (Sink_Entity, Loc)),\n+                     New_Occurrence_Of (Stand.Standard_True, Loc))));\n+            end if;\n+\n+            Append_To (Actions,\n+              Make_Attribute_Reference (Loc,\n+                Prefix         => New_Occurrence_Of (Elem_Typ, Loc),\n+                Attribute_Name => Name_Put_Image,\n+                Expressions    => New_List (\n+                  New_Occurrence_Of (Sink_Entity, Loc),\n+                  Duplicate_Subexpr (Str_Elem))));\n+\n+            Next (Str_Elem);\n+         end loop;\n+\n+         Append_To (Actions, Result_Decl);\n+\n+         return Make_Expression_With_Actions (Loc,\n+           Actions    => Actions,\n+           Expression => New_Occurrence_Of (Result_Entity, Loc));\n+      end Build_Interpolated_String_Image;\n+\n+      --  Local variables\n+\n+      Typ : constant Entity_Id := Etype (N);\n+\n+   --  Start of processing for Expand_N_Interpolated_String_Literal\n+\n+   begin\n+      Rewrite (N, Build_Interpolated_String_Image (N));\n+      Analyze_And_Resolve (N, Typ);\n+   end Expand_N_Interpolated_String_Literal;\n+\n end Exp_Ch2;"}, {"sha": "55dfd0171ff44507f516d641468898f9ed066b6e", "filename": "gcc/ada/exp_ch2.ads", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch2.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -28,8 +28,9 @@\n with Types; use Types;\n package Exp_Ch2 is\n \n-   procedure Expand_N_Expanded_Name  (N : Node_Id);\n-   procedure Expand_N_Identifier     (N : Node_Id);\n-   procedure Expand_N_Real_Literal   (N : Node_Id);\n+   procedure Expand_N_Expanded_Name               (N : Node_Id);\n+   procedure Expand_N_Identifier                  (N : Node_Id);\n+   procedure Expand_N_Interpolated_String_Literal (N : Node_Id);\n+   procedure Expand_N_Real_Literal                (N : Node_Id);\n \n end Exp_Ch2;"}, {"sha": "abe71b252e7761a8da1cb8d7a42a2705c6a6694f", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 295, "deletions": 210, "changes": 505, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -6230,6 +6230,15 @@ package body Exp_Ch3 is\n       Base_Typ : constant Entity_Id  := Base_Type (Typ);\n       Next_N   : constant Node_Id    := Next (N);\n \n+      Special_Ret_Obj : constant Boolean := Is_Special_Return_Object (Def_Id);\n+      --  If this is a special return object, it will be allocated differently\n+      --  and ultimately rewritten as a renaming, so initialization activities\n+      --  need to be deferred until after that is done.\n+\n+      Func_Id : constant Entity_Id :=\n+       (if Special_Ret_Obj then Return_Applies_To (Scope (Def_Id)) else Empty);\n+      --  The function if this is a special return object, otherwise Empty\n+\n       function Build_Equivalent_Aggregate return Boolean;\n       --  If the object has a constrained discriminated type and no initial\n       --  value, it may be possible to build an equivalent aggregate instead,\n@@ -6238,7 +6247,6 @@ package body Exp_Ch3 is\n       function Build_Heap_Or_Pool_Allocator\n         (Temp_Id    : Entity_Id;\n          Temp_Typ   : Entity_Id;\n-         Func_Id    : Entity_Id;\n          Ret_Typ    : Entity_Id;\n          Alloc_Expr : Node_Id) return Node_Id;\n       --  Create the statements necessary to allocate a return object on the\n@@ -6298,6 +6306,38 @@ package body Exp_Ch3 is\n       --  Generate all initialization actions for return object Def_Id. Any\n       --  new code is inserted after node After.\n \n+      function Is_Renamable_Function_Call (Expr : Node_Id) return Boolean;\n+      --  If we are not at library level and the object declaration originally\n+      --  appears in the form:\n+\n+      --    Obj : Typ := Func (...);\n+\n+      --  and has been rewritten as the dereference of a captured reference\n+      --  to the function result built either on the primary or the secondary\n+      --  stack, then the declaration can be rewritten as the renaming of this\n+      --  dereference:\n+\n+      --    type Ann is access all Typ;\n+      --    Rnn : constant Axx := Func (...)'reference;\n+      --    Obj : Typ renames Rnn.all;\n+\n+      --  This will avoid making an extra copy and, in the case where Typ needs\n+      --  finalization, a pair of calls to the Adjust and Finalize primitives,\n+      --  or Deep_Adjust and Deep_Finalize routines, depending on whether Typ\n+      --  has components that themselves need finalization.\n+\n+      --  However, in the case of a special return object, we need to make sure\n+      --  that the object Rnn is recognized by the Is_Related_To_Func_Return\n+      --  predicate; otherwise, if it is of a type that needs finalization,\n+      --  then Requires_Cleanup_Actions would return true because of this and\n+      --  Build_Finalizer would finalize it prematurely because of this (see\n+      --  also Expand_Simple_Function_Return for the same test in the case of\n+      --  a simple return).\n+\n+      --  Finally, in the case of a special return object, we also need to make\n+      --  sure that the two functions return on the same stack, otherwise we\n+      --  would create a dangling reference.\n+\n       function Make_Allocator_For_Return (Expr : Node_Id) return Node_Id;\n       --  Make an allocator for a return object initialized with Expr\n \n@@ -6437,7 +6477,6 @@ package body Exp_Ch3 is\n       function Build_Heap_Or_Pool_Allocator\n         (Temp_Id    : Entity_Id;\n          Temp_Typ   : Entity_Id;\n-         Func_Id    : Entity_Id;\n          Ret_Typ    : Entity_Id;\n          Alloc_Expr : Node_Id) return Node_Id\n       is\n@@ -7093,14 +7132,28 @@ package body Exp_Ch3 is\n          end if;\n       end Initialize_Return_Object;\n \n+      --------------------------------\n+      -- Is_Renamable_Function_Call --\n+      --------------------------------\n+\n+      function Is_Renamable_Function_Call (Expr : Node_Id) return Boolean is\n+      begin\n+         return not Is_Library_Level_Entity (Def_Id)\n+           and then Is_Captured_Function_Call (Expr)\n+           and then (not Special_Ret_Obj\n+                      or else\n+                        (Is_Related_To_Func_Return (Entity (Prefix (Expr)))\n+                          and then Needs_Secondary_Stack (Etype (Expr)) =\n+                                   Needs_Secondary_Stack (Etype (Func_Id))));\n+      end Is_Renamable_Function_Call;\n+\n       -------------------------------\n       -- Make_Allocator_For_Return --\n       -------------------------------\n \n       function Make_Allocator_For_Return (Expr : Node_Id) return Node_Id is\n-         Func_Id : constant Entity_Id := Return_Applies_To (Scope (Def_Id));\n-\n-         Alloc : Node_Id;\n+         Alloc      : Node_Id;\n+         Alloc_Expr : Entity_Id;\n \n       begin\n          --  If the return object's declaration includes an expression and the\n@@ -7126,18 +7179,32 @@ package body Exp_Ch3 is\n                Apply_CW_Accessibility_Check (Expr, Func_Id);\n             end if;\n \n+            Alloc_Expr := New_Copy_Tree (Expr);\n+\n+            --  In the constrained array case, deal with a potential sliding.\n+            --  In the interface case, put back a conversion that we may have\n+            --  removed earlier in the processing.\n+\n+            if (Ekind (Typ) = E_Array_Subtype\n+                 or else (Is_Interface (Typ)\n+                           and then Is_Class_Wide_Type (Etype (Alloc_Expr))))\n+              and then Typ /= Etype (Alloc_Expr)\n+            then\n+               Alloc_Expr := Convert_To (Typ, Alloc_Expr);\n+            end if;\n+\n             --  We always use the type of the expression for the qualified\n             --  expression, rather than the return object's type. We cannot\n             --  always use the return object's type because the expression\n-            --  might be of a specific type and the result object mignt not.\n+            --  might be of a specific type and the return object mignt not.\n \n             Alloc :=\n               Make_Allocator (Loc,\n                 Expression =>\n                   Make_Qualified_Expression (Loc,\n                     Subtype_Mark =>\n-                      New_Occurrence_Of (Etype (Expr), Loc),\n-                    Expression   => New_Copy_Tree (Expr)));\n+                      New_Occurrence_Of (Etype (Alloc_Expr), Loc),\n+                    Expression   => Alloc_Expr));\n \n          else\n             Alloc :=\n@@ -7343,7 +7410,7 @@ package body Exp_Ch3 is\n             end if;\n          end if;\n \n-         if not Is_Special_Return_Object (Def_Id) then\n+         if not Special_Ret_Obj then\n             Default_Initialize_Object (Init_After);\n          end if;\n \n@@ -7403,7 +7470,7 @@ package body Exp_Ch3 is\n                Expander_Mode_Restore;\n             end if;\n \n-            if not Is_Special_Return_Object (Def_Id) then\n+            if not Special_Ret_Obj then\n                Convert_Aggr_In_Object_Decl (N);\n             end if;\n \n@@ -7474,79 +7541,149 @@ package body Exp_Ch3 is\n          then\n             pragma Assert (Is_Class_Wide_Type (Typ));\n \n+            --  If the original node of the expression was a conversion\n+            --  to this specific class-wide interface type then restore\n+            --  the original node because we must copy the object before\n+            --  displacing the pointer to reference the secondary tag\n+            --  component. This code must be kept synchronized with the\n+            --  expansion done by routine Expand_Interface_Conversion\n+\n+            if not Comes_From_Source (Expr)\n+              and then Nkind (Expr) = N_Explicit_Dereference\n+              and then Nkind (Original_Node (Expr)) = N_Type_Conversion\n+              and then Etype (Original_Node (Expr)) = Typ\n+            then\n+               Rewrite (Expr, Original_Node (Expression (N)));\n+            end if;\n+\n+            --  Avoid expansion of redundant interface conversion\n+\n+            if Nkind (Expr) = N_Type_Conversion\n+              and then Etype (Expr) = Typ\n+            then\n+               Expr_Q := Expression (Expr);\n+            else\n+               Expr_Q := Expr;\n+            end if;\n+\n+            --  We may use a renaming if the initialization expression is a\n+            --  captured function call that meets a few conditions.\n+\n+            Rewrite_As_Renaming := Is_Renamable_Function_Call (Expr_Q);\n+\n             --  If the object is a special return object, then bypass special\n             --  treatment of class-wide interface initialization below. In this\n-            --  case, the expansion of the return statement will take care of\n-            --  creating the object (via allocator) and initializing it.\n+            --  case, the expansion of the return object will take care of this\n+            --  initialization via the expansion of the allocator.\n \n-            if Is_Special_Return_Object (Def_Id) then\n+            if Special_Ret_Obj and then not Rewrite_As_Renaming then\n+\n+               --  If the type needs finalization and is not inherently\n+               --  limited, then the target is adjusted after the copy\n+               --  and attached to the finalization list.\n+\n+               if Needs_Finalization (Typ)\n+                 and then not Is_Limited_View (Typ)\n+               then\n+                  Adj_Call :=\n+                    Make_Adjust_Call (\n+                      Obj_Ref => New_Occurrence_Of (Def_Id, Loc),\n+                      Typ     => Base_Typ);\n+               end if;\n+\n+            --  Renaming an expression of the object's type is immediate\n+\n+            elsif Rewrite_As_Renaming\n+              and then Base_Type (Etype (Expr_Q)) = Base_Type (Typ)\n+            then\n                null;\n \n             elsif Tagged_Type_Expansion then\n                declare\n-                  Iface    : constant Entity_Id := Root_Type (Typ);\n-                  Expr_N   : Node_Id := Expr;\n-                  Expr_Typ : Entity_Id;\n-                  New_Expr : Node_Id;\n-                  Obj_Id   : Entity_Id;\n-                  Tag_Comp : Node_Id;\n+                  Iface : constant Entity_Id := Root_Type (Typ);\n+\n+                  Expr_Typ     : Entity_Id;\n+                  New_Expr     : Node_Id;\n+                  Obj_Id       : Entity_Id;\n+                  Ptr_Obj_Decl : Node_Id;\n+                  Ptr_Obj_Id   : Entity_Id;\n+                  Tag_Comp     : Node_Id;\n \n                begin\n-                  --  If the original node of the expression was a conversion\n-                  --  to this specific class-wide interface type then restore\n-                  --  the original node because we must copy the object before\n-                  --  displacing the pointer to reference the secondary tag\n-                  --  component. This code must be kept synchronized with the\n-                  --  expansion done by routine Expand_Interface_Conversion\n-\n-                  if not Comes_From_Source (Expr_N)\n-                    and then Nkind (Expr_N) = N_Explicit_Dereference\n-                    and then Nkind (Original_Node (Expr_N)) = N_Type_Conversion\n-                    and then Etype (Original_Node (Expr_N)) = Typ\n-                  then\n-                     Rewrite (Expr_N, Original_Node (Expression (N)));\n+                  Expr_Typ := Base_Type (Etype (Expr_Q));\n+                  if Is_Class_Wide_Type (Expr_Typ) then\n+                     Expr_Typ := Root_Type (Expr_Typ);\n                   end if;\n \n-                  --  Avoid expansion of redundant interface conversion\n+                  --  Rename limited objects since they cannot be copied\n \n-                  if Is_Interface (Etype (Expr_N))\n-                    and then Nkind (Expr_N) = N_Type_Conversion\n-                    and then Etype (Expr_N) = Typ\n-                  then\n-                     Expr_N := Expression (Expr_N);\n-                     Set_Expression (N, Expr_N);\n+                  if Is_Limited_Record (Expr_Typ) then\n+                     Rewrite_As_Renaming := True;\n                   end if;\n \n-                  Obj_Id   := Make_Temporary (Loc, 'D', Expr_N);\n-                  Expr_Typ := Base_Type (Etype (Expr_N));\n+                  Obj_Id := Make_Temporary (Loc, 'D', Expr_Q);\n \n-                  if Is_Class_Wide_Type (Expr_Typ) then\n-                     Expr_Typ := Root_Type (Expr_Typ);\n-                  end if;\n+                  --  Replace\n+                  --     IW : I'Class := Expr;\n+                  --  by\n+                  --     Dnn : Tag renames Tag_Ptr!(Expr'Address).all;\n+                  --     type Ityp is not null access I'Class;\n+                  --     Rnn : constant Ityp :=\n+                  --             Ityp!(Displace (Dnn'Address, I'Tag));\n+                  --     IW : I'Class renames Rnn.all;\n+\n+                  if Rewrite_As_Renaming then\n+                     New_Expr :=\n+                       Make_Explicit_Dereference (Loc,\n+                         Unchecked_Convert_To (RTE (RE_Tag_Ptr),\n+                           Make_Attribute_Reference (Loc,\n+                             Prefix => Relocate_Node (Expr_Q),\n+                             Attribute_Name => Name_Address)));\n+\n+                     --  Suppress junk access checks on RE_Tag_Ptr\n+\n+                     Insert_Action (N,\n+                       Make_Object_Renaming_Declaration (Loc,\n+                         Defining_Identifier => Obj_Id,\n+                         Subtype_Mark        =>\n+                           New_Occurrence_Of (RTE (RE_Tag), Loc),\n+                         Name                => New_Expr),\n+                       Suppress => Access_Check);\n+\n+                     --  Dynamically reference the tag associated with the\n+                     --  interface.\n+\n+                     Tag_Comp :=\n+                       Make_Function_Call (Loc,\n+                         Name => New_Occurrence_Of (RTE (RE_Displace), Loc),\n+                         Parameter_Associations => New_List (\n+                           Make_Attribute_Reference (Loc,\n+                             Prefix => New_Occurrence_Of (Obj_Id, Loc),\n+                             Attribute_Name => Name_Address),\n+                           New_Occurrence_Of\n+                             (Node (First_Elmt (Access_Disp_Table (Iface))),\n+                              Loc)));\n \n                   --  Replace\n-                  --     CW : I'Class := Obj;\n+                  --     IW : I'Class := Expr;\n                   --  by\n-                  --     Tmp : T := Obj;\n+                  --     Dnn : Typ := Expr;\n                   --     type Ityp is not null access I'Class;\n-                  --     CW  : I'Class renames Ityp (Tmp.I_Tag'Address).all;\n+                  --     Rnn : constant Ityp := Ityp (Dnn.I_Tag'Address);\n+                  --     IW  : I'Class renames Rnn.all;\n \n-                  if Comes_From_Source (Expr_N)\n-                    and then Nkind (Expr_N) = N_Identifier\n-                    and then not Is_Interface (Expr_Typ)\n+                  elsif Has_Tag_Of_Type (Expr_Q)\n                     and then Interface_Present_In_Ancestor (Expr_Typ, Typ)\n                     and then (Expr_Typ = Etype (Expr_Typ)\n                                or else not\n                                  Is_Variable_Size_Record (Etype (Expr_Typ)))\n                   then\n-                     --  Copy the object\n-\n                      Insert_Action (N,\n                        Make_Object_Declaration (Loc,\n                          Defining_Identifier => Obj_Id,\n                          Object_Definition   =>\n                            New_Occurrence_Of (Expr_Typ, Loc),\n-                         Expression          => Relocate_Node (Expr_N)));\n+                         Expression          => Relocate_Node (Expr_Q)));\n \n                      --  Statically reference the tag associated with the\n                      --  interface\n@@ -7559,14 +7696,15 @@ package body Exp_Ch3 is\n                              (Find_Interface_Tag (Expr_Typ, Iface), Loc));\n \n                   --  Replace\n-                  --     IW : I'Class := Obj;\n+                  --     IW : I'Class := Expr;\n                   --  by\n                   --     type Equiv_Record is record ... end record;\n                   --     implicit subtype CW is <Class_Wide_Subtype>;\n-                  --     Tmp : CW := CW!(Obj);\n+                  --     Dnn : CW := CW!(Expr);\n                   --     type Ityp is not null access I'Class;\n-                  --     IW : I'Class renames\n-                  --            Ityp!(Displace (Temp'Address, I'Tag)).all;\n+                  --     Rnn : constant Ityp :=\n+                  --             Ityp!(Displace (Dnn'Address, I'Tag));\n+                  --     IW : I'Class renames Rnn.all;\n \n                   else\n                      --  Generate the equivalent record type and update the\n@@ -7576,49 +7714,36 @@ package body Exp_Ch3 is\n                        (N             => N,\n                         Unc_Type      => Typ,\n                         Subtype_Indic => Obj_Def,\n-                        Exp           => Expr_N);\n-\n-                     if not Is_Interface (Etype (Expr_N)) then\n-                        New_Expr := Relocate_Node (Expr_N);\n+                        Exp           => Expr_Q);\n \n                      --  For interface types we use 'Address which displaces\n-                     --  the pointer to the base of the object (if required)\n+                     --  the pointer to the base of the object (if required).\n \n-                     else\n+                     if Is_Interface (Etype (Expr_Q)) then\n                         New_Expr :=\n                           Unchecked_Convert_To (Etype (Obj_Def),\n                             Make_Explicit_Dereference (Loc,\n                               Unchecked_Convert_To (RTE (RE_Tag_Ptr),\n                                 Make_Attribute_Reference (Loc,\n-                                  Prefix => Relocate_Node (Expr_N),\n+                                  Prefix => Relocate_Node (Expr_Q),\n                                   Attribute_Name => Name_Address))));\n-                     end if;\n \n-                     --  Copy the object\n-\n-                     if not Is_Limited_Record (Expr_Typ) then\n-                        Insert_Action (N,\n-                          Make_Object_Declaration (Loc,\n-                            Defining_Identifier => Obj_Id,\n-                            Object_Definition   =>\n-                              New_Occurrence_Of (Etype (Obj_Def), Loc),\n-                            Expression => New_Expr));\n-\n-                     --  Rename limited type object since they cannot be copied\n-                     --  This case occurs when the initialization expression\n-                     --  has been previously expanded into a temporary object.\n-\n-                     else pragma Assert (not Comes_From_Source (Expr_Q));\n-                        Insert_Action (N,\n-                          Make_Object_Renaming_Declaration (Loc,\n-                            Defining_Identifier => Obj_Id,\n-                            Subtype_Mark        =>\n-                              New_Occurrence_Of (Etype (Obj_Def), Loc),\n-                            Name                =>\n-                              Unchecked_Convert_To\n-                                (Etype (Obj_Def), New_Expr)));\n+                     --  For other types, no displacement is needed\n+\n+                     else\n+                        New_Expr := Relocate_Node (Expr_Q);\n                      end if;\n \n+                     --  Suppress junk access checks on RE_Tag_Ptr\n+\n+                     Insert_Action (N,\n+                       Make_Object_Declaration (Loc,\n+                         Defining_Identifier => Obj_Id,\n+                         Object_Definition   =>\n+                           New_Occurrence_Of (Etype (Obj_Def), Loc),\n+                         Expression          => New_Expr),\n+                       Suppress => Access_Check);\n+\n                      --  Dynamically reference the tag associated with the\n                      --  interface.\n \n@@ -7634,87 +7759,65 @@ package body Exp_Ch3 is\n                               Loc)));\n                   end if;\n \n-                  Rewrite (N,\n-                    Make_Object_Renaming_Declaration (Loc,\n-                      Defining_Identifier => Make_Temporary (Loc, 'D'),\n-                      Subtype_Mark        => New_Occurrence_Of (Typ, Loc),\n-                      Name                =>\n-                        Convert_Tag_To_Interface (Typ, Tag_Comp)));\n-\n-                  --  If the original entity comes from source, then mark the\n-                  --  new entity as needing debug information, even though it's\n-                  --  defined by a generated renaming that does not come from\n-                  --  source, so that Materialize_Entity will be set on the\n-                  --  entity when Debug_Renaming_Declaration is called during\n-                  --  analysis.\n-\n-                  if Comes_From_Source (Def_Id) then\n-                     Set_Debug_Info_Needed (Defining_Identifier (N));\n-                  end if;\n-\n-                  Analyze (N, Suppress => All_Checks);\n-\n-                  --  Replace internal identifier of rewritten node by the\n-                  --  identifier found in the sources. We also have to exchange\n-                  --  entities containing their defining identifiers to ensure\n-                  --  the correct replacement of the object declaration by this\n-                  --  object renaming declaration because these identifiers\n-                  --  were previously added by Enter_Name to the current scope.\n-                  --  We must preserve the homonym chain of the source entity\n-                  --  as well. We must also preserve the kind of the entity,\n-                  --  which may be a constant. Preserve entity chain because\n-                  --  itypes may have been generated already, and the full\n-                  --  chain must be preserved for final freezing. Finally,\n-                  --  preserve Comes_From_Source setting, so that debugging\n-                  --  and cross-referencing information is properly kept, and\n-                  --  preserve source location, to prevent spurious errors when\n-                  --  entities are declared (they must have their own Sloc).\n-\n-                  declare\n-                     New_Id    : constant Entity_Id := Defining_Identifier (N);\n-                     Next_Temp : constant Entity_Id := Next_Entity (New_Id);\n-                     Save_CFS  : constant Boolean   :=\n-                                   Comes_From_Source (Def_Id);\n-                     Save_SP   : constant Node_Id   := SPARK_Pragma (Def_Id);\n-                     Save_SPI  : constant Boolean   :=\n-                                   SPARK_Pragma_Inherited (Def_Id);\n-\n-                  begin\n-                     Link_Entities (New_Id, Next_Entity (Def_Id));\n-                     Link_Entities (Def_Id, Next_Temp);\n+                  --  As explained in Exp_Disp, we use Convert_Tag_To_Interface\n+                  --  to do the final conversion, but we insert an intermediate\n+                  --  temporary before the dereference so that we can process\n+                  --  the expansion as part of the analysis of the declaration\n+                  --  of this temporary, and then rewrite manually the original\n+                  --  object as the simple renaming of this dereference.\n \n-                     Set_Chars (Defining_Identifier (N), Chars (Def_Id));\n-                     Set_Homonym (Defining_Identifier (N), Homonym (Def_Id));\n-                     Mutate_Ekind (Defining_Identifier (N), Ekind (Def_Id));\n-                     Set_Sloc (Defining_Identifier (N), Sloc (Def_Id));\n+                  Tag_Comp := Convert_Tag_To_Interface (Typ, Tag_Comp);\n+                  pragma Assert (Nkind (Tag_Comp) = N_Explicit_Dereference\n+                    and then\n+                      Nkind (Prefix (Tag_Comp)) = N_Unchecked_Type_Conversion);\n \n-                     Set_Comes_From_Source (Def_Id, False);\n+                  Ptr_Obj_Id := Make_Temporary (Loc, 'R');\n \n-                     --  ??? This is extremely dangerous!!! Exchanging entities\n-                     --  is very low level, and as a result it resets flags and\n-                     --  fields which belong to the original Def_Id. Several of\n-                     --  these attributes are saved and restored, but there may\n-                     --  be many more that need to be preserverd.\n+                  Ptr_Obj_Decl :=\n+                    Make_Object_Declaration (Loc,\n+                      Defining_Identifier => Ptr_Obj_Id,\n+                      Constant_Present    => True,\n+                      Object_Definition   =>\n+                        New_Occurrence_Of\n+                          (Entity (Subtype_Mark (Prefix (Tag_Comp))), Loc),\n+                      Expression => Prefix (Tag_Comp));\n \n-                     Exchange_Entities (Defining_Identifier (N), Def_Id);\n+                  Insert_Action (N, Ptr_Obj_Decl, Suppress => All_Checks);\n \n-                     --  Restore clobbered attributes\n+                  Set_Prefix (Tag_Comp, New_Occurrence_Of (Ptr_Obj_Id, Loc));\n+                  Expr_Q := Tag_Comp;\n+                  Set_Etype (Expr_Q, Typ);\n+                  Set_Parent (Expr_Q, N);\n \n-                     Set_Comes_From_Source      (Def_Id, Save_CFS);\n-                     Set_SPARK_Pragma           (Def_Id, Save_SP);\n-                     Set_SPARK_Pragma_Inherited (Def_Id, Save_SPI);\n-                  end;\n+                  Rewrite_As_Renaming := True;\n                end;\n \n-               return;\n-\n             else\n                return;\n             end if;\n \n          --  Common case of explicit object initialization\n \n          else\n+            --  Small optimization: if the expression is a function call and\n+            --  the object is stand-alone, not declared at library level and of\n+            --  a class-wide type, then we capture the result of the call into\n+            --  a temporary, with the benefit that, if the result's type does\n+            --  not need finalization, nothing will be finalized and, if it\n+            --  does, the temporary only will be finalized by means of a direct\n+            --  call to the Finalize primitive if the result's type is not a\n+            --  class-wide type; whereas, in both cases, the stand-alone object\n+            --  itself would be finalized by means of a dispatching call to the\n+            --  Deep_Finalize routine.\n+\n+            if Nkind (Expr_Q) = N_Function_Call\n+              and then not Special_Ret_Obj\n+              and then not Is_Library_Level_Entity (Def_Id)\n+              and then Is_Class_Wide_Type (Typ)\n+            then\n+               Remove_Side_Effects (Expr_Q);\n+            end if;\n+\n             --  In most cases, we must check that the initial value meets any\n             --  constraint imposed by the declared type. However, there is one\n             --  very important exception to this rule. If the entity has an\n@@ -7779,7 +7882,7 @@ package body Exp_Ch3 is\n             if Present (Tag_Assign) then\n                if Present (Following_Address_Clause (N)) then\n                   Ensure_Freeze_Node (Def_Id);\n-               elsif not Is_Special_Return_Object (Def_Id) then\n+               elsif not Special_Ret_Obj then\n                   Insert_Action_After (Init_After, Tag_Assign);\n                end if;\n \n@@ -7883,53 +7986,30 @@ package body Exp_Ch3 is\n             Rewrite_As_Renaming :=\n \n               --  The declaration cannot be rewritten if it has got constraints\n-              --  in other words the nominal subtype must be unconstrained.\n \n               Is_Entity_Name (Original_Node (Obj_Def))\n \n-                --  The aliased case has to be excluded because the expression\n-                --  will not be aliased in the general case.\n-\n-                and then not Aliased_Present (N)\n-\n-                --  If the object declaration originally appears in the form\n-\n-                --    Obj : Typ := Func (...);\n+                --  Nor if it is effectively an unconstrained declaration\n \n-                --  and has been rewritten as the dereference of a reference\n-                --  to the function result built either on the primary or the\n-                --  secondary stack, then the declaration can be rewritten as\n-                --  the renaming of this dereference:\n+                and then not (Is_Array_Type (Typ)\n+                               and then Is_Constr_Subt_For_UN_Aliased (Typ))\n \n-                --    type Axx is access all Typ;\n-                --    Rxx : constant Axx := Func (...)'reference;\n-                --    Obj : Typ renames Rxx.all;\n-\n-                --  This avoids an extra copy and, in the case where Typ needs\n-                --  finalization, a pair of Adjust/Finalize calls (see below).\n+                --  We may use a renaming if the initialization expression is a\n+                --  captured function call that meets a few conditions.\n \n                 and then\n-                  ((not Is_Library_Level_Entity (Def_Id)\n-                     and then Nkind (Expr_Q) = N_Explicit_Dereference\n-                     and then not Comes_From_Source (Expr_Q)\n-                     and then Nkind (Original_Node (Expr_Q)) = N_Function_Call\n-                     and then not Is_Class_Wide_Type (Typ))\n-\n-                   --  If the initializing expression is a variable with the\n-                   --  flag OK_To_Rename set, then transform:\n-\n-                   --     Obj : Typ := Expr;\n-\n-                   --  into\n+                  (Is_Renamable_Function_Call (Expr_Q)\n \n-                   --     Obj : Typ renames Expr;\n+                   --  Or else if it is a variable with OK_To_Rename set\n \n-                   or else OK_To_Rename_Ref (Expr_Q)\n+                   or else (OK_To_Rename_Ref (Expr_Q)\n+                             and then not Special_Ret_Obj)\n \n-                   --  Likewise if it is a slice of such a variable\n+                   --  Or else if it is a slice of such a variable\n \n                    or else (Nkind (Expr_Q) = N_Slice\n-                             and then OK_To_Rename_Ref (Prefix (Expr_Q))));\n+                             and then OK_To_Rename_Ref (Prefix (Expr_Q))\n+                             and then not Special_Ret_Obj));\n \n             --  If the type needs finalization and is not inherently limited,\n             --  then the target is adjusted after the copy and attached to the\n@@ -7950,9 +8030,7 @@ package body Exp_Ch3 is\n                    Obj_Ref => New_Occurrence_Of (Def_Id, Loc),\n                    Typ     => Base_Typ);\n \n-               if Present (Adj_Call)\n-                 and then not Is_Special_Return_Object (Def_Id)\n-               then\n+               if Present (Adj_Call) and then not Special_Ret_Obj then\n                   Insert_Action_After (Init_After, Adj_Call);\n                end if;\n             end if;\n@@ -8122,10 +8200,8 @@ package body Exp_Ch3 is\n \n       if Is_Build_In_Place_Return_Object (Def_Id) then\n          declare\n-            Func_Id : constant Entity_Id := Return_Applies_To (Scope (Def_Id));\n-\n-            Init_Stmt       : Node_Id;\n-            Obj_Acc_Formal  : Entity_Id;\n+            Init_Stmt      : Node_Id;\n+            Obj_Acc_Formal : Entity_Id;\n \n          begin\n             --  Retrieve the implicit access parameter passed by the caller\n@@ -8415,7 +8491,6 @@ package body Exp_Ch3 is\n                             Build_Heap_Or_Pool_Allocator\n                               (Temp_Id    => Alloc_Obj_Id,\n                                Temp_Typ   => Acc_Typ,\n-                               Func_Id    => Func_Id,\n                                Ret_Typ    => Desig_Typ,\n                                Alloc_Expr => Heap_Allocator))),\n \n@@ -8439,7 +8514,6 @@ package body Exp_Ch3 is\n                             Build_Heap_Or_Pool_Allocator\n                               (Temp_Id    => Alloc_Obj_Id,\n                                Temp_Typ   => Acc_Typ,\n-                               Func_Id    => Func_Id,\n                                Ret_Typ    => Desig_Typ,\n                                Alloc_Expr => Pool_Allocator)))),\n \n@@ -8556,14 +8630,12 @@ package body Exp_Ch3 is\n \n       --  If we can rename the initialization expression, we need to make sure\n       --  that we use the proper type in the case of a return object that lives\n-      --  on the secondary stack. See other cases below for a similar handling.\n+      --  on the secondary stack (see other cases below for a similar handling)\n+      --  and that the tag is assigned in the case of any return object.\n \n       elsif Rewrite_As_Renaming then\n-         if Is_Secondary_Stack_Return_Object (Def_Id) then\n+         if Special_Ret_Obj then\n             declare\n-               Func_Id  : constant Entity_Id  :=\n-                 Return_Applies_To (Scope (Def_Id));\n-\n                Desig_Typ : constant Entity_Id :=\n                  (if Ekind (Typ) = E_Array_Subtype\n                   then Etype (Func_Id) else Typ);\n@@ -8576,6 +8648,22 @@ package body Exp_Ch3 is\n                   Set_Etype (Def_Id, Desig_Typ);\n                   Set_Actual_Subtype (Def_Id, Typ);\n                end if;\n+\n+               if Present (Tag_Assign) then\n+                  Insert_Action_After (Init_After, Tag_Assign);\n+               end if;\n+\n+               --  Ada 2005 (AI95-344): If the result type is class-wide,\n+               --  insert a check that the level of the return expression's\n+               --  underlying type is not deeper than the level of the master\n+               --  enclosing the function.\n+\n+               --  AI12-043: The check is made immediately after the return\n+               --  object is created.\n+\n+               if Is_Class_Wide_Type (Etype (Func_Id)) then\n+                  Apply_CW_Accessibility_Check (Expr_Q, Func_Id);\n+               end if;\n             end;\n          end if;\n \n@@ -8597,9 +8685,6 @@ package body Exp_Ch3 is\n \n       elsif Is_Secondary_Stack_Return_Object (Def_Id) then\n          declare\n-            Func_Id  : constant Entity_Id  :=\n-              Return_Applies_To (Scope (Def_Id));\n-\n             Desig_Typ : constant Entity_Id :=\n               (if Ekind (Typ) = E_Array_Subtype\n                then Etype (Func_Id) else Typ);\n@@ -8684,8 +8769,8 @@ package body Exp_Ch3 is\n       --    type Txx is access all ...;\n       --    Rxx : constant Txx :=\n       --      new <expression-type>['(<expression>)][storage_pool =\n-      --        system__secondary_stack__rs_pool][procedure_to_call =\n-      --        system__secondary_stack__rs_allocate];\n+      --        system__return_stack__rs_pool][procedure_to_call =\n+      --        system__return_stack__rs_allocate];\n \n       --    Result : T renames Rxx.all;\n "}, {"sha": "d2f8534da812f9a07ce4f855e0cf5824e55cf76b", "filename": "gcc/ada/exp_ch3.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "31823eaeca7e0b8d394abd8a6b4baecc61a8d6e0", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 48, "deletions": 58, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -698,11 +698,14 @@ package body Exp_Ch4 is\n          --  recursion and inappropriate call to Initialize.\n \n          --  We don't want to remove side effects when the expression must be\n-         --  built in place. In the case of a build-in-place function call,\n-         --  that could lead to a duplication of the call, which was already\n-         --  substituted for the allocator.\n+         --  built in place and we don't need it when there is no storage pool\n+         --  or this is a return/secondary stack allocation.\n \n-         if not Aggr_In_Place then\n+         if not Aggr_In_Place\n+           and then Present (Storage_Pool (N))\n+           and then not Is_RTE (Storage_Pool (N), RE_RS_Pool)\n+           and then not Is_RTE (Storage_Pool (N), RE_SS_Pool)\n+         then\n             Remove_Side_Effects (Exp);\n          end if;\n \n@@ -747,7 +750,7 @@ package body Exp_Ch4 is\n \n          --  Processing for allocators returning non-interface types\n \n-         if not Is_Interface (Directly_Designated_Type (PtrT)) then\n+         if not Is_Interface (DesigT) then\n             if Aggr_In_Place then\n                Temp_Decl :=\n                  Make_Object_Declaration (Loc,\n@@ -960,8 +963,9 @@ package body Exp_Ch4 is\n \n          if Needs_Finalization (DesigT)\n            and then Needs_Finalization (T)\n-           and then not Aggr_In_Place\n            and then not Is_Limited_View (T)\n+           and then not Aggr_In_Place\n+           and then Nkind (Exp) /= N_Function_Call\n            and then not For_Special_Return_Object (N)\n          then\n             --  An unchecked conversion is needed in the classwide case because\n@@ -993,7 +997,7 @@ package body Exp_Ch4 is\n          --  component containing the secondary dispatch table of the interface\n          --  type.\n \n-         if Is_Interface (Directly_Designated_Type (PtrT)) then\n+         if Is_Interface (DesigT) then\n             Displace_Allocator_Pointer (N);\n          end if;\n \n@@ -2728,7 +2732,6 @@ package body Exp_Ch4 is\n       Len        : Unat;\n       J          : Nat;\n       Clen       : Node_Id;\n-      Decl       : Node_Id;\n       Set        : Boolean;\n \n    --  Start of processing for Expand_Concatenate\n@@ -3255,32 +3258,10 @@ package body Exp_Ch4 is\n       Set_Is_Internal       (Ent);\n       Set_Debug_Info_Needed (Ent);\n \n-      --  If the bound is statically known to be out of range, we do not want\n-      --  to abort, we want a warning and a constraint error at run time. Note\n-      --  that we have arranged that the result will not be treated as a static\n-      --  constant, so we won't get an illegality during the insertion. We also\n-      --  enable all checks (in particular range checks) in case the bounds of\n-      --  Subtyp_Ind are out of range.\n-\n-      Decl :=\n-        Make_Object_Declaration (Loc,\n-          Defining_Identifier => Ent,\n-          Object_Definition   => Subtyp_Ind);\n-      Insert_Action (Cnode, Decl);\n-\n-      --  If the result of the concatenation appears as the initializing\n-      --  expression of an object declaration, we can just rename the\n-      --  result, rather than copying it.\n-\n-      Set_OK_To_Rename (Ent);\n-\n       --  If we are concatenating strings and the current scope already uses\n       --  the secondary stack, allocate the result also on the secondary stack\n       --  to avoid putting too much pressure on the primary stack.\n \n-      --  We use an unconstrained allocation, i.e. we also allocate the bounds,\n-      --  so that the result can be renamed in all contexts.\n-\n       --  Don't do this if -gnatd.h is set, as this will break the wrapping of\n       --  Cnode in an Expression_With_Actions, see Expand_N_Op_Concat.\n \n@@ -3291,33 +3272,32 @@ package body Exp_Ch4 is\n       then\n          --  Generate:\n          --     subtype Axx is String (<low-bound> .. <high-bound>)\n-         --     type Ayy is access String;\n+         --     type Ayy is access Axx;\n          --     Rxx : Ayy := new <Axx> [storage_pool = ss_pool];\n-         --     Sxx : String renames Rxx.all;\n+         --     Sxx : Axx renames Rxx.all;\n \n          declare\n             ConstrT : constant Entity_Id := Make_Temporary (Loc, 'A');\n             Acc_Typ : constant Entity_Id := Make_Temporary (Loc, 'A');\n \n-            Alloc   : Node_Id;\n-            Deref   : Node_Id;\n-            Temp    : Entity_Id;\n+            Alloc : Node_Id;\n+            Temp  : Entity_Id;\n \n          begin\n-            Insert_Action (Decl,\n+            Insert_Action (Cnode,\n               Make_Subtype_Declaration (Loc,\n                 Defining_Identifier => ConstrT,\n                 Subtype_Indication  => Subtyp_Ind),\n               Suppress => All_Checks);\n \n-            Freeze_Itype (ConstrT, Decl);\n+            Freeze_Itype (ConstrT, Cnode);\n \n-            Insert_Action (Decl,\n+            Insert_Action (Cnode,\n               Make_Full_Type_Declaration (Loc,\n                 Defining_Identifier => Acc_Typ,\n                 Type_Definition     =>\n                   Make_Access_To_Object_Definition (Loc,\n-                    Subtype_Indication => New_Occurrence_Of (Atyp, Loc))),\n+                    Subtype_Indication => New_Occurrence_Of (ConstrT, Loc))),\n               Suppress => All_Checks);\n \n             Mutate_Ekind (Acc_Typ, E_Access_Type);\n@@ -3335,33 +3315,43 @@ package body Exp_Ch4 is\n             Set_No_Initialization (Alloc);\n \n             Temp := Make_Temporary (Loc, 'R', Alloc);\n-            Insert_Action (Decl,\n+            Insert_Action (Cnode,\n               Make_Object_Declaration (Loc,\n                 Defining_Identifier => Temp,\n                 Object_Definition   => New_Occurrence_Of (Acc_Typ, Loc),\n                 Expression          => Alloc),\n               Suppress => All_Checks);\n \n-            Deref :=\n-              Make_Explicit_Dereference (Loc,\n-                Prefix => New_Occurrence_Of (Temp, Loc));\n-            Set_Etype (Deref, Atyp);\n-\n-            Rewrite (Decl,\n+            Insert_Action (Cnode,\n               Make_Object_Renaming_Declaration (Loc,\n                 Defining_Identifier => Ent,\n-                Subtype_Mark        => New_Occurrence_Of (Atyp, Loc),\n-                Name                => Deref));\n-\n-            --  We do not analyze this renaming declaration because this would\n-            --  change the subtype of Ent back to a constrained string.\n-\n-            Set_Etype (Ent, Atyp);\n-            Set_Renamed_Object (Ent, Deref);\n-            Set_Analyzed (Decl);\n+                Subtype_Mark        => New_Occurrence_Of (ConstrT, Loc),\n+                Name                =>\n+                  Make_Explicit_Dereference (Loc,\n+                    Prefix => New_Occurrence_Of (Temp, Loc))),\n+              Suppress => All_Checks);\n          end;\n+\n+      else\n+         --  If the bound is statically known to be out of range, we do not\n+         --  want to abort, we want a warning and a runtime constraint error.\n+         --  Note that we have arranged that the result will not be treated\n+         --  as a static constant, so we won't get an illegality during this\n+         --  insertion. We also enable checks (in particular range checks) in\n+         --  case the bounds of Subtyp_Ind are out of range.\n+\n+         Insert_Action (Cnode,\n+           Make_Object_Declaration (Loc,\n+             Defining_Identifier => Ent,\n+             Object_Definition   => Subtyp_Ind));\n       end if;\n \n+      --  If the result of the concatenation appears as the initializing\n+      --  expression of an object declaration, we can just rename the\n+      --  result, rather than copying it.\n+\n+      Set_OK_To_Rename (Ent);\n+\n       --  Catch the static out of range case now\n \n       if Raises_Constraint_Error (High_Bound)\n@@ -11836,7 +11826,7 @@ package body Exp_Ch4 is\n \n          if Is_Fixed_Point_Type (Etype (Expr)) then\n             Ityp := Small_Integer_Type_For\n-                      (Esize (Base_Type (Etype (Expr))), False);\n+                      (Esize (Base_Type (Etype (Expr))), Uns => False);\n \n             --  Generate a temporary with the integer type to facilitate in the\n             --  C backend the code generation for the unchecked conversion.\n@@ -12206,7 +12196,7 @@ package body Exp_Ch4 is\n             declare\n                Expr_Id : constant Entity_Id := Make_Temporary (Loc, 'T', Conv);\n                Int_Typ : constant Entity_Id :=\n-                           Small_Integer_Type_For (RM_Size (Btyp), False);\n+                 Small_Integer_Type_For (RM_Size (Btyp), Uns => False);\n \n             begin\n                --  Generate a temporary with the integer value. Required in the"}, {"sha": "1891e2e55433bc97d50893009da4325fb6a0cd83", "filename": "gcc/ada/exp_ch4.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch4.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch4.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "265e1a74b9344c4ce91e563946c4da03bc38e967", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "48a61637b52f10fd8c0090c3f4796a49a5f17bd1", "filename": "gcc/ada/exp_ch5.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch5.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch5.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "7abf25e3859a8b6992f21fa0bf3f63284002df7b", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 48, "deletions": 36, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -687,7 +687,11 @@ package body Exp_Ch6 is\n       Loc : constant Source_Ptr := Sloc (Exp);\n \n    begin\n+       --  CodePeer does not do anything useful on Ada.Tags.Type_Specific_Data\n+       --  components.\n+\n       if Ada_Version >= Ada_2005\n+        and then not CodePeer_Mode\n         and then Tagged_Type_Expansion\n         and then not Scope_Suppress.Suppress (Accessibility_Check)\n         and then\n@@ -770,20 +774,18 @@ package body Exp_Ch6 is\n                    Attribute_Name => Name_Tag);\n             end if;\n \n-            --  CodePeer does not do anything useful with\n-            --  Ada.Tags.Type_Specific_Data components.\n-\n-            if not CodePeer_Mode then\n-               Insert_Action (Exp,\n-                 Make_Raise_Program_Error (Loc,\n-                   Condition =>\n-                     Make_Op_Gt (Loc,\n-                       Left_Opnd  => Build_Get_Access_Level (Loc, Tag_Node),\n-                       Right_Opnd =>\n-                         Make_Integer_Literal (Loc,\n-                           Scope_Depth (Enclosing_Dynamic_Scope (Func)))),\n-                   Reason    => PE_Accessibility_Check_Failed));\n-            end if;\n+            --  Suppress junk access chacks on RE_Tag_Ptr\n+\n+            Insert_Action (Exp,\n+              Make_Raise_Program_Error (Loc,\n+                Condition =>\n+                  Make_Op_Gt (Loc,\n+                    Left_Opnd  => Build_Get_Access_Level (Loc, Tag_Node),\n+                    Right_Opnd =>\n+                      Make_Integer_Literal (Loc,\n+                        Scope_Depth (Enclosing_Dynamic_Scope (Func)))),\n+                Reason    => PE_Accessibility_Check_Failed),\n+              Suppress => Access_Check);\n          end;\n       end if;\n    end Apply_CW_Accessibility_Check;\n@@ -5131,14 +5133,11 @@ package body Exp_Ch6 is\n \n       --  Another optimization: if the returned value is used to initialize an\n       --  object, then no need to copy/readjust/finalize, we can initialize it\n-      --  in place. However, if the call returns on the secondary stack or this\n-      --  is a special return object, then we need the expansion because we'll\n-      --  be renaming the temporary as the (permanent) object.\n+      --  in place. However, if the call returns on the secondary stack, then\n+      --  we need the expansion because we'll be renaming the temporary as the\n+      --  (permanent) object.\n \n-      if Nkind (Par) = N_Object_Declaration\n-        and then not Use_Sec_Stack\n-        and then not Is_Special_Return_Object (Defining_Entity (Par))\n-      then\n+      if Nkind (Par) = N_Object_Declaration and then not Use_Sec_Stack then\n          return;\n       end if;\n \n@@ -6435,16 +6434,21 @@ package body Exp_Ch6 is\n       --  The result type of the function\n \n       Utyp : constant Entity_Id := Underlying_Type (R_Type);\n+      --  The underlying result type of the function\n \n       Exp : Node_Id := Expression (N);\n       pragma Assert (Present (Exp));\n \n       Exp_Is_Function_Call : constant Boolean :=\n         Nkind (Exp) = N_Function_Call\n-          or else (Nkind (Exp) = N_Explicit_Dereference\n-                   and then Is_Entity_Name (Prefix (Exp))\n-                   and then Ekind (Entity (Prefix (Exp))) = E_Constant\n-                   and then Is_Related_To_Func_Return (Entity (Prefix (Exp))));\n+          or else\n+            (Is_Captured_Function_Call (Exp)\n+              and then Is_Related_To_Func_Return (Entity (Prefix (Exp))));\n+      --  If the expression is a captured function call, then we need to make\n+      --  sure that the object doing the capture is properly recognized by the\n+      --  Is_Related_To_Func_Return predicate; otherwise, if it is of a type\n+      --  that needs finalization, Requires_Cleanup_Actions would return true\n+      --  because of this and Build_Finalizer would finalize it prematurely.\n \n       Exp_Typ : constant Entity_Id := Etype (Exp);\n       --  The type of the expression (not necessarily the same as R_Type)\n@@ -6628,7 +6632,8 @@ package body Exp_Ch6 is\n          --  size. We create an actual subtype for this purpose. However we\n          --  need not do it if the expression is a function call since this\n          --  will be done in the called function and doing it here too would\n-         --  cause a temporary with maximum size to be created.\n+         --  cause a temporary with maximum size to be created. Likewise for\n+         --  a special return object, since there is no copy in this case.\n \n          declare\n             Ubt  : constant Entity_Id := Underlying_Type (Base_Type (Exp_Typ));\n@@ -6637,6 +6642,8 @@ package body Exp_Ch6 is\n \n          begin\n             if not Exp_Is_Function_Call\n+              and then not (Is_Entity_Name (Exp)\n+                             and then Is_Special_Return_Object (Entity (Exp)))\n               and then Has_Defaulted_Discriminants (Ubt)\n               and then not Is_Constrained (Ubt)\n               and then not Has_Unchecked_Union (Ubt)\n@@ -6735,7 +6742,7 @@ package body Exp_Ch6 is\n             null;\n \n          --  Optimize the case where the result is a function call that also\n-         --  returns on the secondary stack. In this case the result is already\n+         --  returns on the secondary stack; in this case the result is already\n          --  on the secondary stack and no further processing is required.\n \n          elsif Exp_Is_Function_Call\n@@ -6771,13 +6778,14 @@ package body Exp_Ch6 is\n          --  gigi is not able to properly allocate class-wide types.\n \n          --  But optimize the case where the result is a function call that\n-         --  also needs finalization. In this case the result can directly be\n+         --  also needs finalization; in this case the result can directly be\n          --  allocated on the secondary stack and no further processing is\n-         --  required.\n+         --  required, unless the returned object is an interface.\n \n          elsif CW_Or_Needs_Finalization (Utyp)\n-           and then not (Exp_Is_Function_Call\n-                          and then Needs_Finalization (Exp_Typ))\n+           and then (Is_Interface (R_Type)\n+                      or else not (Exp_Is_Function_Call\n+                                    and then Needs_Finalization (Exp_Typ)))\n          then\n             declare\n                Acc_Typ : constant Entity_Id := Make_Temporary (Loc, 'A');\n@@ -7763,10 +7771,10 @@ package body Exp_Ch6 is\n          return False;\n       end if;\n \n-      --  If the function is imported from a foreign language, we don't do\n-      --  build-in-place, whereas Import (Ada) functions can do it. Note also\n-      --  that it is OK for a build-in-place function to return a type with a\n-      --  foreign convention because the machinery ensures there is no copying.\n+      --  We never use build-in-place if the convention is other than Ada,\n+      --  but note that it is OK for a build-in-place function to return a\n+      --  type with a foreign convention because the machinery ensures there\n+      --  is no copying.\n \n       return (Kind in E_Function | E_Generic_Function\n                or else\n@@ -9382,6 +9390,10 @@ package body Exp_Ch6 is\n       Preserve_Comes_From_Source (Orig_Id, Orig_Decl);\n \n       Set_Comes_From_Source (New_Id, False);\n+\n+      --  Preserve aliased indication\n+\n+      Set_Is_Aliased (Orig_Id, Is_Aliased (New_Id));\n    end Replace_Renaming_Declaration_Id;\n \n    ---------------------------------"}, {"sha": "7b7620733778c3fa33672208c299ddd2d0f11936", "filename": "gcc/ada/exp_ch6.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch6.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch6.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "7ea39f7ba16e6be7ea4c1a8ac3ff2905d3c08ade", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 7, "deletions": 32, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2264,16 +2264,13 @@ package body Exp_Ch7 is\n                --  The object is of the form:\n                --    Obj : [constant] Typ [:= Expr];\n \n-               --  Do not process tag-to-class-wide conversions because they do\n-               --  not yield an object. Do not process the incomplete view of a\n-               --  deferred constant. Note that an object initialized by means\n-               --  of a build-in-place function call may appear as a deferred\n-               --  constant after expansion activities. These kinds of objects\n-               --  must be finalized.\n+               --  Do not process the incomplete view of a deferred constant.\n+               --  Note that an object initialized by means of a BIP function\n+               --  call may appear as a deferred constant after expansion\n+               --  activities. These kinds of objects must be finalized.\n \n                elsif not Is_Imported (Obj_Id)\n                  and then Needs_Finalization (Obj_Typ)\n-                 and then not Is_Tag_To_Class_Wide_Conversion (Obj_Id)\n                  and then not (Ekind (Obj_Id) = E_Constant\n                                 and then not Has_Completion (Obj_Id)\n                                 and then No (BIP_Initialization_Call (Obj_Id)))\n@@ -2388,20 +2385,6 @@ package body Exp_Ch7 is\n                  and then Present (Status_Flag_Or_Transient_Decl (Obj_Id))\n                then\n                   Processing_Actions (Has_No_Init => True);\n-\n-               --  Detect a case where a source object has been initialized by\n-               --  a controlled function call or another object which was later\n-               --  rewritten as a class-wide conversion of Ada.Tags.Displace.\n-\n-               --     Obj1 : CW_Type := Src_Obj;\n-               --     Obj2 : CW_Type := Function_Call (...);\n-\n-               --     Obj1 : CW_Type renames (... Ada.Tags.Displace (Src_Obj));\n-               --     Tmp  : ... := Function_Call (...)'reference;\n-               --     Obj2 : CW_Type renames (... Ada.Tags.Displace (Tmp));\n-\n-               elsif Is_Displacement_Of_Object_Or_Function_Result (Obj_Id) then\n-                  Processing_Actions (Has_No_Init => True);\n                end if;\n \n             --  Inspect the freeze node of an access-to-controlled type and\n@@ -6060,11 +6043,7 @@ package body Exp_Ch7 is\n       --  Derivations from [Limited_]Controlled\n \n       elsif Is_Controlled (Utyp) then\n-         if Has_Controlled_Component (Utyp) then\n-            Adj_Id := Find_Optional_Prim_Op (Utyp, TSS_Deep_Adjust);\n-         else\n-            Adj_Id := Find_Optional_Prim_Op (Utyp, Name_Of (Adjust_Case));\n-         end if;\n+         Adj_Id := Find_Optional_Prim_Op (Utyp, Name_Of (Adjust_Case));\n \n       --  Tagged types\n \n@@ -8413,11 +8392,7 @@ package body Exp_Ch7 is\n       --  Derivations from [Limited_]Controlled\n \n       elsif Is_Controlled (Utyp) then\n-         if Has_Controlled_Component (Utyp) then\n-            Fin_Id := Find_Optional_Prim_Op (Utyp, TSS_Deep_Finalize);\n-         else\n-            Fin_Id := Find_Optional_Prim_Op (Utyp, Name_Of (Finalize_Case));\n-         end if;\n+         Fin_Id := Find_Optional_Prim_Op (Utyp, Name_Of (Finalize_Case));\n \n       --  Tagged types\n "}, {"sha": "37754dbd3f90ef2d8cc2c6ebfb535595d4ceebc8", "filename": "gcc/ada/exp_ch7.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch7.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch7.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "09c364cbd82e838c504846d2e357ffe0156a3534", "filename": "gcc/ada/exp_ch8.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch8.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "a6a00fcf9c840f1b466d813090f0d1d9e2520ac0", "filename": "gcc/ada/exp_ch8.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch8.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch8.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch8.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "96e68805b00a4f8893a61cbfb47d55b920e92180", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "4f435862c47df9821f57a027c5ae6e7032feb6eb", "filename": "gcc/ada/exp_ch9.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_ch9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "d4ff47f9475950c9cb9028beaa65563cdaad19b5", "filename": "gcc/ada/exp_code.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_code.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_code.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_code.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "441e9e52581b972094184cf1db81789b6f34f8ff", "filename": "gcc/ada/exp_code.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_code.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_code.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_code.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1996-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "32ff9fb9c32c85839beddff38635029ff0f06530", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "bb0af95fe122690433a5c4fce1f1800da57359fd", "filename": "gcc/ada/exp_dbug.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_dbug.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_dbug.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1996-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "7970b7923633d681fa05d935c907f21018b79af0", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "c3c4e2f0e9305f067663dd5e4baa2428e5e79335", "filename": "gcc/ada/exp_disp.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_disp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_disp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "7805f74e41283e62012661ac093442df226f6dd1", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "c43df61f94bb4e3d59e5d6ba6aecf10561776d22", "filename": "gcc/ada/exp_dist.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_dist.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_dist.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "61c2f923f0825fe31e1169ffc296a5d53b1f6480", "filename": "gcc/ada/exp_fixd.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_fixd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_fixd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_fixd.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "1f03b7d5d9e6a4107f79dcf01f4fc30678184503", "filename": "gcc/ada/exp_fixd.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_fixd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_fixd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_fixd.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "93fdb70306fc822c15af582115452f4e2113c322", "filename": "gcc/ada/exp_imgv.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_imgv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_imgv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_imgv.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "85d3b93863bf17fdc624307a5ee17065d7f23823", "filename": "gcc/ada/exp_imgv.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_imgv.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_imgv.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_imgv.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "a1e55882391ee2628aae0ec3d5e779ce71badeb6", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "86a34858c95b086dcb003da8d52c5d8bd99cfe94", "filename": "gcc/ada/exp_intr.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_intr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_intr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "c3908a54538dbe6108d62a20b276052d3e003eca", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "40ccbd9d6fac0b3bdb3c667b34bb452f3db3146e", "filename": "gcc/ada/exp_pakd.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_pakd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_pakd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "ceb27848dad8a07da2c426d5cde418fd2b7a07ed", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "27c537c46ca403f3dacd503805da968c6c725e1a", "filename": "gcc/ada/exp_prag.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_prag.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_prag.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "19e0415e4172eea24fec00933ed4aab41b046b4f", "filename": "gcc/ada/exp_put_image.adb", "status": "modified", "additions": 36, "deletions": 9, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_put_image.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_put_image.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_put_image.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2020-2022, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2020-2023, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -338,7 +338,8 @@ package body Exp_Put_Image is\n \n          --  For other elementary types, generate:\n          --\n-         --     Wide_Wide_Put (Sink, U_Type'Wide_Wide_Image (Item));\n+         --     Wide_Wide_Put (Root_Buffer_Type'Class (Sink),\n+         --       U_Type'Wide_Wide_Image (Item));\n          --\n          --  It would be more elegant to do it the other way around (define\n          --  '[[Wide_]Wide_]Image in terms of 'Put_Image). But this is easier\n@@ -362,13 +363,23 @@ package body Exp_Put_Image is\n                 Prefix => New_Occurrence_Of (U_Type, Loc),\n                 Attribute_Name => Name_Wide_Wide_Image,\n                 Expressions => New_List (Relocate_Node (Item)));\n+            Sink_Exp : constant Node_Id :=\n+              Make_Type_Conversion (Loc,\n+                Subtype_Mark =>\n+                  New_Occurrence_Of\n+                    (Class_Wide_Type (RTE (RE_Root_Buffer_Type)), Loc),\n+                Expression   => Relocate_Node (Sink));\n             Put_Call : constant Node_Id :=\n               Make_Procedure_Call_Statement (Loc,\n                 Name =>\n                   New_Occurrence_Of (RTE (RE_Wide_Wide_Put), Loc),\n                 Parameter_Associations => New_List\n-                  (Relocate_Node (Sink), Image));\n+                  (Sink_Exp, Image));\n          begin\n+            --  We have built a dispatching call to handle calls to\n+            --  descendants (since they are not available through rtsfind).\n+            --  Further details available in the body of Put_String_Exp.\n+\n             return Put_Call;\n          end;\n       end if;\n@@ -427,12 +438,28 @@ package body Exp_Put_Image is\n             (Etype (Next_Formal (First_Formal (Libent))),\n              Relocate_Node (Item));\n       begin\n-         return\n-           Make_Procedure_Call_Statement (Loc,\n-             Name => New_Occurrence_Of (Libent, Loc),\n-             Parameter_Associations => New_List (\n-               Relocate_Node (Sink),\n-               Conv));\n+         --  Do not output string delimiters if this is part of an\n+         --  interpolated string literal.\n+\n+         if Nkind (Parent (N)) = N_Expression_With_Actions\n+           and then Nkind (Original_Node (Parent (N)))\n+                      = N_Interpolated_String_Literal\n+         then\n+            return\n+              Make_Procedure_Call_Statement (Loc,\n+                Name => New_Occurrence_Of (Libent, Loc),\n+                Parameter_Associations => New_List (\n+                  Relocate_Node (Sink),\n+                  Conv,\n+                  New_Occurrence_Of (Stand.Standard_False, Loc)));\n+         else\n+            return\n+              Make_Procedure_Call_Statement (Loc,\n+                Name => New_Occurrence_Of (Libent, Loc),\n+                Parameter_Associations => New_List (\n+                  Relocate_Node (Sink),\n+                  Conv));\n+         end if;\n       end;\n    end Build_String_Put_Image_Call;\n "}, {"sha": "a4c94120154d6f4ad68390f78e651f42f465e24d", "filename": "gcc/ada/exp_put_image.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_put_image.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_put_image.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_put_image.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2020-2022, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2020-2023, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "66019be8e58b2bfe2fc0a9ebdc17f6351f073a02", "filename": "gcc/ada/exp_sel.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_sel.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_sel.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_sel.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "5c6408aa986da68a4748a1517f5917d1b60ddfd5", "filename": "gcc/ada/exp_sel.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_sel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_sel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_sel.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "e5f6f2fd507a1ce327736a67d04c5124637542d1", "filename": "gcc/ada/exp_smem.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_smem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_smem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_smem.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "50392ea0d55f0488aa61d5b2e2353ac87d7f1b9c", "filename": "gcc/ada/exp_smem.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_smem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_smem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_smem.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1998-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "efa5c2cd8da9369dfb95316825253eac5e78c50c", "filename": "gcc/ada/exp_spark.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_spark.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "a2a3d35221e75cb3c694e3f7d044bc0ab8bed97d", "filename": "gcc/ada/exp_spark.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_spark.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_spark.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_spark.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2011-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2011-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "2610584cef0d299042aab14c172daa425705e8a1", "filename": "gcc/ada/exp_strm.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_strm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_strm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_strm.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "e0d180aacbca21b9542e8b6d07fdee84535a4f27", "filename": "gcc/ada/exp_strm.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_strm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_strm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_strm.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "975fddb3c15d82e52841e501725e355983824ac4", "filename": "gcc/ada/exp_tss.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_tss.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_tss.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_tss.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -78,8 +78,11 @@ package body Exp_Tss is\n       else\n          Proc := Init_Proc (Base_Type (Full_Type), Ref);\n \n+         --  For derived record types, if the base type does not have one,\n+         --  we use the Init_Proc of the ancestor type.\n+\n          if No (Proc)\n-           and then Is_Composite_Type (Full_Type)\n+           and then Is_Record_Type (Full_Type)\n            and then Is_Derived_Type (Full_Type)\n          then\n             return Init_Proc (Root_Type (Full_Type), Ref);"}, {"sha": "070e7c1ee9b016fd67da1b102c9db779575ae448", "filename": "gcc/ada/exp_tss.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_tss.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_tss.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_tss.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "239cda02ea7c04a87ad479b1c54717de1c270bcb", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2014-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2014-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "40d2257da770e3bc9451a2089df0762eb70d2e78", "filename": "gcc/ada/exp_unst.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_unst.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_unst.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2014-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2014-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "80c01bf40fd27cd639bb9d7d7ed11fbb076e03b5", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 151, "deletions": 292, "changes": 443, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -168,10 +168,6 @@ package body Exp_Util is\n    --  Force evaluation of bounds of a slice, which may be given by a range\n    --  or by a subtype indication with or without a constraint.\n \n-   function Is_Verifiable_DIC_Pragma (Prag : Node_Id) return Boolean;\n-   --  Determine whether pragma Default_Initial_Condition denoted by Prag has\n-   --  an assertion expression that should be verified at run time.\n-\n    function Is_Uninitialized_Aggregate\n      (Exp : Node_Id;\n       T   : Entity_Id) return Boolean;\n@@ -182,6 +178,10 @@ package body Exp_Util is\n    --  the bounds of the aggregate can be propagated directly to the\n    --  object declaration.\n \n+   function Is_Verifiable_DIC_Pragma (Prag : Node_Id) return Boolean;\n+   --  Determine whether pragma Default_Initial_Condition denoted by Prag has\n+   --  an assertion expression that should be verified at run time.\n+\n    function Make_CW_Equivalent_Type\n      (T : Entity_Id;\n       E : Node_Id) return Entity_Id;\n@@ -5815,7 +5815,6 @@ package body Exp_Util is\n          --  discriminants.\n \n          else\n-            Remove_Side_Effects (Exp);\n             Rewrite (Subtype_Indic,\n               Make_Subtype_From_Expr (Exp, Underlying_Record_View (Unc_Type)));\n          end if;\n@@ -5880,7 +5879,6 @@ package body Exp_Util is\n          end if;\n \n       else\n-         Remove_Side_Effects (Exp);\n          Rewrite (Subtype_Indic,\n            Make_Subtype_From_Expr (Exp, Unc_Type, Related_Id));\n       end if;\n@@ -7188,6 +7186,63 @@ package body Exp_Util is\n       end if;\n    end Has_Access_Constraint;\n \n+   ---------------------\n+   -- Has_Tag_Of_Type --\n+   ---------------------\n+\n+   function Has_Tag_Of_Type (Exp : Node_Id) return Boolean is\n+      Typ : constant Entity_Id := Etype (Exp);\n+\n+   begin\n+      pragma Assert (Is_Tagged_Type (Typ));\n+\n+      --  The tag of an object of a class-wide type is that of its\n+      --  initialization expression.\n+\n+      if Is_Class_Wide_Type (Typ) then\n+         return False;\n+      end if;\n+\n+      --  The tag of a stand-alone object of a specific tagged type T\n+      --  identifies T.\n+\n+      if Is_Entity_Name (Exp)\n+        and then Ekind (Entity (Exp)) in E_Constant | E_Variable\n+      then\n+         return True;\n+\n+      else\n+         case Nkind (Exp) is\n+            --  The tag of a component or an aggregate of a specific tagged\n+            --  type T identifies T.\n+\n+            when N_Indexed_Component\n+              |  N_Selected_Component\n+              |  N_Aggregate\n+            =>\n+               return True;\n+\n+            --  The tag of the result returned by a function whose result\n+            --  type is a specific tagged type T identifies T.\n+\n+            when N_Function_Call =>\n+               return True;\n+\n+            when N_Explicit_Dereference =>\n+               return Is_Captured_Function_Call (Exp);\n+\n+            --  For a tagged type, the operand of a qualified expression\n+            --  shall resolve to be of the type of the expression.\n+\n+            when N_Qualified_Expression =>\n+               return Has_Tag_Of_Type (Expression (Exp));\n+\n+            when others =>\n+               return False;\n+         end case;\n+      end if;\n+   end Has_Tag_Of_Type;\n+\n    --------------------\n    -- Homonym_Number --\n    --------------------\n@@ -7913,6 +7968,7 @@ package body Exp_Util is\n                | N_Indexed_Component\n                | N_Integer_Literal\n                | N_Iterator_Specification\n+               | N_Interpolated_String_Literal\n                | N_Itype_Reference\n                | N_Label\n                | N_Loop_Parameter_Specification\n@@ -8122,6 +8178,10 @@ package body Exp_Util is\n \n    function Integer_Type_For (S : Uint; Uns : Boolean) return Entity_Id is\n    begin\n+      pragma Assert\n+        (Standard_Long_Integer_Size in\n+         Standard_Integer_Size | Standard_Long_Long_Integer_Size);\n+      --  So we don't need to check for Standard_Long_Integer_Size below\n       pragma Assert (S <= System_Max_Integer_Size);\n \n       --  This is the canonical 32-bit type\n@@ -8156,205 +8216,29 @@ package body Exp_Util is\n       end if;\n    end Integer_Type_For;\n \n-   --------------------------------------------------\n-   -- Is_Displacement_Of_Object_Or_Function_Result --\n-   --------------------------------------------------\n-\n-   function Is_Displacement_Of_Object_Or_Function_Result\n-     (Obj_Id : Entity_Id) return Boolean\n-   is\n-      function Is_Controlled_Function_Call (N : Node_Id) return Boolean;\n-      --  Determine whether node N denotes a controlled function call\n-\n-      function Is_Controlled_Indexing (N : Node_Id) return Boolean;\n-      --  Determine whether node N denotes a generalized indexing form which\n-      --  involves a controlled result.\n-\n-      function Is_Displace_Call (N : Node_Id) return Boolean;\n-      --  Determine whether node N denotes a call to Ada.Tags.Displace\n-\n-      function Is_Source_Object (N : Node_Id) return Boolean;\n-      --  Determine whether a particular node denotes a source object\n-\n-      function Strip (N : Node_Id) return Node_Id;\n-      --  Examine arbitrary node N by stripping various indirections and return\n-      --  the \"real\" node.\n-\n-      ---------------------------------\n-      -- Is_Controlled_Function_Call --\n-      ---------------------------------\n-\n-      function Is_Controlled_Function_Call (N : Node_Id) return Boolean is\n-         Expr : Node_Id;\n-\n-      begin\n-         --  When a function call appears in Object.Operation format, the\n-         --  original representation has several possible forms depending on\n-         --  the availability and form of actual parameters:\n-\n-         --    Obj.Func                    N_Selected_Component\n-         --    Obj.Func (Actual)           N_Indexed_Component\n-         --    Obj.Func (Formal => Actual) N_Function_Call, whose Name is an\n-         --                                N_Selected_Component\n-\n-         Expr := Original_Node (N);\n-         loop\n-            if Nkind (Expr) = N_Function_Call then\n-               Expr := Name (Expr);\n-\n-            --  \"Obj.Func (Actual)\" case\n-\n-            elsif Nkind (Expr) = N_Indexed_Component then\n-               Expr := Prefix (Expr);\n-\n-            --  \"Obj.Func\" or \"Obj.Func (Formal => Actual) case\n-\n-            elsif Nkind (Expr) = N_Selected_Component then\n-               Expr := Selector_Name (Expr);\n-\n-            else\n-               exit;\n-            end if;\n-         end loop;\n-\n-         return\n-           Nkind (Expr) in N_Has_Entity\n-             and then Present (Entity (Expr))\n-             and then Ekind (Entity (Expr)) = E_Function\n-             and then Needs_Finalization (Etype (Entity (Expr)));\n-      end Is_Controlled_Function_Call;\n-\n-      ----------------------------\n-      -- Is_Controlled_Indexing --\n-      ----------------------------\n-\n-      function Is_Controlled_Indexing (N : Node_Id) return Boolean is\n-         Expr : constant Node_Id := Original_Node (N);\n-\n-      begin\n-         return\n-           Nkind (Expr) = N_Indexed_Component\n-             and then Present (Generalized_Indexing (Expr))\n-             and then Needs_Finalization (Etype (Expr));\n-      end Is_Controlled_Indexing;\n-\n-      ----------------------\n-      -- Is_Displace_Call --\n-      ----------------------\n-\n-      function Is_Displace_Call (N : Node_Id) return Boolean is\n-         Call : constant Node_Id := Strip (N);\n-\n-      begin\n-         return\n-           Present (Call)\n-             and then Nkind (Call) = N_Function_Call\n-             and then Nkind (Name (Call)) in N_Has_Entity\n-             and then Is_RTE (Entity (Name (Call)), RE_Displace);\n-      end Is_Displace_Call;\n-\n-      ----------------------\n-      -- Is_Source_Object --\n-      ----------------------\n-\n-      function Is_Source_Object (N : Node_Id) return Boolean is\n-         Obj : constant Node_Id := Strip (N);\n-\n-      begin\n-         return\n-           Present (Obj)\n-             and then Comes_From_Source (Obj)\n-             and then Nkind (Obj) in N_Has_Entity\n-             and then Is_Object (Entity (Obj));\n-      end Is_Source_Object;\n-\n-      -----------\n-      -- Strip --\n-      -----------\n-\n-      function Strip (N : Node_Id) return Node_Id is\n-         Result : Node_Id;\n-\n-      begin\n-         Result := N;\n-         loop\n-            if Nkind (Result) = N_Explicit_Dereference then\n-               Result := Prefix (Result);\n-\n-            elsif Nkind (Result) in\n-                    N_Type_Conversion | N_Unchecked_Type_Conversion\n-            then\n-               Result := Expression (Result);\n-\n-            else\n-               exit;\n-            end if;\n-         end loop;\n-\n-         return Result;\n-      end Strip;\n-\n-      --  Local variables\n-\n-      Obj_Decl  : constant Node_Id   := Declaration_Node (Obj_Id);\n-      Obj_Typ   : constant Entity_Id := Base_Type (Etype (Obj_Id));\n-      Orig_Decl : constant Node_Id   := Original_Node (Obj_Decl);\n-      Orig_Expr : Node_Id;\n-\n-   --  Start of processing for Is_Displacement_Of_Object_Or_Function_Result\n+   -------------------------------\n+   -- Is_Captured_Function_Call --\n+   -------------------------------\n \n+   function Is_Captured_Function_Call (N : Node_Id) return Boolean is\n    begin\n-      --  Case 1:\n-\n-      --     Obj : CW_Type := Function_Call (...);\n-\n-      --  is rewritten into:\n-\n-      --     Temp : ... := Function_Call (...)'reference;\n-      --     Obj  : CW_Type renames (... Ada.Tags.Displace (Temp));\n-\n-      --  where the return type of the function and the class-wide type require\n-      --  dispatch table pointer displacement.\n-\n-      --  Case 2:\n-\n-      --     Obj : CW_Type := Container (...);\n-\n-      --  is rewritten into:\n-\n-      --     Temp : ... := Function_Call (Container, ...)'reference;\n-      --     Obj  : CW_Type renames (... Ada.Tags.Displace (Temp));\n-\n-      --  where the container element type and the class-wide type require\n-      --  dispatch table pointer dispacement.\n-\n-      --  Case 3:\n-\n-      --     Obj : CW_Type := Src_Obj;\n-\n-      --  is rewritten into:\n-\n-      --     Obj : CW_Type renames (... Ada.Tags.Displace (Src_Obj));\n-\n-      --  where the type of the source object and the class-wide type require\n-      --  dispatch table pointer displacement.\n-\n-      if Nkind (Obj_Decl) = N_Object_Renaming_Declaration\n-        and then Is_Class_Wide_Type (Obj_Typ)\n-        and then Is_Displace_Call (Renamed_Object (Obj_Id))\n-        and then Nkind (Orig_Decl) = N_Object_Declaration\n-        and then Comes_From_Source (Orig_Decl)\n+      if Nkind (N) = N_Explicit_Dereference\n+        and then Is_Entity_Name (Prefix (N))\n+        and then Ekind (Entity (Prefix (N))) = E_Constant\n       then\n-         Orig_Expr := Expression (Orig_Decl);\n+         declare\n+            Value : constant Node_Id := Constant_Value (Entity (Prefix (N)));\n \n-         return\n-           Is_Controlled_Function_Call (Orig_Expr)\n-             or else Is_Controlled_Indexing (Orig_Expr)\n-             or else Is_Source_Object (Orig_Expr);\n-      end if;\n+         begin\n+            return Present (Value)\n+              and then Nkind (Value) = N_Reference\n+              and then Nkind (Prefix (Value)) = N_Function_Call;\n+         end;\n \n-      return False;\n-   end Is_Displacement_Of_Object_Or_Function_Result;\n+      else\n+         return False;\n+      end if;\n+   end Is_Captured_Function_Call;\n \n    ------------------------------\n    -- Is_Finalizable_Transient --\n@@ -8565,6 +8449,23 @@ package body Exp_Util is\n                Search (Name (Ren_Decl));\n             end if;\n \n+            --  For renamings generated by Expand_N_Object_Declaration to deal\n+            --  with (class-wide) interface objects, there is an intermediate\n+            --  temporary of an anonymous access type used to hold the result\n+            --  of the displacement of the address of the renamed object.\n+\n+            if Present (Ren_Obj)\n+              and then Ekind (Ren_Obj) = E_Constant\n+              and then Is_Itype (Etype (Ren_Obj))\n+              and then Ekind (Etype (Ren_Obj)) = E_Anonymous_Access_Type\n+              and then\n+                Is_Class_Wide_Type (Directly_Designated_Type (Etype (Ren_Obj)))\n+              and then\n+                Is_Interface (Directly_Designated_Type (Etype (Ren_Obj)))\n+            then\n+               Search (Constant_Value (Ren_Obj));\n+            end if;\n+\n             return Ren_Obj;\n          end Find_Renamed_Object;\n \n@@ -8806,10 +8707,6 @@ package body Exp_Util is\n \n           and then not Initialized_By_Aliased_BIP_Func_Call (Obj_Id)\n \n-          --  Do not consider conversions of tags to class-wide types\n-\n-          and then not Is_Tag_To_Class_Wide_Conversion (Obj_Id)\n-\n           --  Do not consider iterators because those are treated as normal\n           --  controlled objects and are processed by the usual finalization\n           --  machinery. This avoids the double finalization of an iterator.\n@@ -9168,7 +9065,8 @@ package body Exp_Util is\n           and then Nkind (Unqual_Conv (Expr)) = N_Explicit_Dereference\n           and then (Nkind (Parent (Expr)) = N_Simple_Return_Statement\n                      or else\n-                       (Nkind (Parent (Expr)) = N_Object_Renaming_Declaration\n+                       (Nkind (Parent (Expr)) in N_Object_Declaration\n+                                               | N_Object_Renaming_Declaration\n                          and then\n                         Is_Return_Object (Defining_Entity (Parent (Expr)))));\n    end Is_Related_To_Func_Return;\n@@ -9316,23 +9214,6 @@ package body Exp_Util is\n         and then Has_Controlling_Result (Id);\n    end Is_Secondary_Stack_Thunk;\n \n-   -------------------------------------\n-   -- Is_Tag_To_Class_Wide_Conversion --\n-   -------------------------------------\n-\n-   function Is_Tag_To_Class_Wide_Conversion\n-     (Obj_Id : Entity_Id) return Boolean\n-   is\n-      Expr : constant Node_Id := Expression (Parent (Obj_Id));\n-\n-   begin\n-      return\n-        Is_Class_Wide_Type (Etype (Obj_Id))\n-          and then Present (Expr)\n-          and then Nkind (Expr) = N_Unchecked_Type_Conversion\n-          and then Is_RTE (Etype (Expression (Expr)), RE_Tag);\n-   end Is_Tag_To_Class_Wide_Conversion;\n-\n    --------------------------------\n    -- Is_Uninitialized_Aggregate --\n    --------------------------------\n@@ -9639,7 +9520,7 @@ package body Exp_Util is\n \n    --   type Equiv_T is record\n    --     _parent : T (List of discriminant constraints taken from Exp);\n-   --     Ext__50 : Storage_Array (1 .. (Exp'size - Typ'object_size)/8);\n+   --     Cnn : Storage_Array (1 .. (Exp'size - Typ'object_size)/Storage_Unit);\n    --   end Equiv_T;\n    --\n    --  Note that this type does not guarantee same alignment as all derived\n@@ -9659,11 +9540,13 @@ package body Exp_Util is\n       Root_Utyp   : constant Entity_Id  := Underlying_Type (Root_Typ);\n       List_Def    : constant List_Id    := Empty_List;\n       Comp_List   : constant List_Id    := New_List;\n+\n       Equiv_Type  : Entity_Id;\n       Range_Type  : Entity_Id;\n       Str_Type    : Entity_Id;\n       Constr_Root : Entity_Id;\n-      Sizexpr     : Node_Id;\n+      Size_Attr   : Node_Id;\n+      Size_Expr   : Node_Id;\n \n    begin\n       --  If the root type is already constrained, there are no discriminants\n@@ -9698,42 +9581,62 @@ package body Exp_Util is\n \n       Range_Type := Make_Temporary (Loc, 'G');\n \n+      --  If the expression is known to have the tag of its type, then we can\n+      --  use it directly for the prefix of the Size attribute; otherwise we\n+      --  need to convert it first to the class-wide type to force a call to\n+      --  the _Size primitive operation.\n+\n+      if Has_Tag_Of_Type (E) then\n+         if not Has_Discriminants (Etype (E))\n+           or else Is_Constrained (Etype (E))\n+         then\n+            Size_Attr :=\n+              Make_Attribute_Reference (Loc,\n+                Prefix => New_Occurrence_Of (Etype (E), Loc),\n+                Attribute_Name => Name_Object_Size);\n+\n+         else\n+            Size_Attr :=\n+              Make_Attribute_Reference (Loc,\n+                Prefix => Duplicate_Subexpr_No_Checks (E),\n+                Attribute_Name => Name_Size);\n+         end if;\n+\n+      else\n+         Size_Attr :=\n+           Make_Attribute_Reference (Loc,\n+             Prefix => OK_Convert_To (T, Duplicate_Subexpr_No_Checks (E)),\n+             Attribute_Name => Name_Size);\n+      end if;\n+\n       if not Is_Interface (Root_Typ) then\n \n          --  subtype rg__xx is\n-         --    Storage_Offset range 1 .. (Expr'size - typ'object_size)\n+         --    Storage_Offset range 1 .. (Exp'size - Typ'object_size)\n          --                                / Storage_Unit\n \n-         Sizexpr :=\n+         Size_Expr :=\n            Make_Op_Subtract (Loc,\n-             Left_Opnd =>\n-               Make_Attribute_Reference (Loc,\n-                 Prefix =>\n-                   OK_Convert_To (T, Duplicate_Subexpr_No_Checks (E)),\n-                 Attribute_Name => Name_Size),\n+             Left_Opnd => Size_Attr,\n              Right_Opnd =>\n                Make_Attribute_Reference (Loc,\n                  Prefix => New_Occurrence_Of (Constr_Root, Loc),\n                  Attribute_Name => Name_Object_Size));\n       else\n          --  subtype rg__xx is\n-         --    Storage_Offset range 1 .. (Expr'size - Ada.Tags.Tag'object_size)\n+         --    Storage_Offset range 1 .. (Exp'size - Ada.Tags.Tag'object_size)\n          --                                / Storage_Unit\n \n-         Sizexpr :=\n+         Size_Expr :=\n            Make_Op_Subtract (Loc,\n-             Left_Opnd =>\n-               Make_Attribute_Reference (Loc,\n-                 Prefix =>\n-                   OK_Convert_To (T, Duplicate_Subexpr_No_Checks (E)),\n-                 Attribute_Name => Name_Size),\n+             Left_Opnd => Size_Attr,\n              Right_Opnd =>\n                Make_Attribute_Reference (Loc,\n                  Prefix => New_Occurrence_Of (RTE (RE_Tag), Loc),\n                  Attribute_Name => Name_Object_Size));\n       end if;\n \n-      Set_Paren_Count (Sizexpr, 1);\n+      Set_Paren_Count (Size_Expr, 1);\n \n       Append_To (List_Def,\n         Make_Subtype_Declaration (Loc,\n@@ -9747,7 +9650,7 @@ package body Exp_Util is\n                     Low_Bound => Make_Integer_Literal (Loc, 1),\n                     High_Bound =>\n                       Make_Op_Divide (Loc,\n-                        Left_Opnd => Sizexpr,\n+                        Left_Opnd => Size_Expr,\n                         Right_Opnd => Make_Integer_Literal (Loc,\n                             Intval => System_Storage_Unit)))))));\n \n@@ -12775,16 +12678,13 @@ package body Exp_Util is\n             --  The object is of the form:\n             --    Obj : [constant] Typ [:= Expr];\n             --\n-            --  Do not process tag-to-class-wide conversions because they do\n-            --  not yield an object. Do not process the incomplete view of a\n-            --  deferred constant. Note that an object initialized by means\n-            --  of a build-in-place function call may appear as a deferred\n-            --  constant after expansion activities. These kinds of objects\n-            --  must be finalized.\n+            --  Do not process the incomplete view of a deferred constant.\n+            --  Note that an object initialized by means of a BIP function\n+            --  call may appear as a deferred constant after expansion\n+            --  activities. These kinds of objects must be finalized.\n \n             elsif not Is_Imported (Obj_Id)\n               and then Needs_Finalization (Obj_Typ)\n-              and then not Is_Tag_To_Class_Wide_Conversion (Obj_Id)\n               and then not (Ekind (Obj_Id) = E_Constant\n                              and then not Has_Completion (Obj_Id)\n                              and then No (BIP_Initialization_Call (Obj_Id)))\n@@ -12870,20 +12770,6 @@ package body Exp_Util is\n               and then Present (Status_Flag_Or_Transient_Decl (Obj_Id))\n             then\n                return True;\n-\n-            --  Detect a case where a source object has been initialized by\n-            --  a controlled function call or another object which was later\n-            --  rewritten as a class-wide conversion of Ada.Tags.Displace.\n-\n-            --     Obj1 : CW_Type := Src_Obj;\n-            --     Obj2 : CW_Type := Function_Call (...);\n-\n-            --     Obj1 : CW_Type renames (... Ada.Tags.Displace (Src_Obj));\n-            --     Tmp  : ... := Function_Call (...)'reference;\n-            --     Obj2 : CW_Type renames (... Ada.Tags.Displace (Tmp));\n-\n-            elsif Is_Displacement_Of_Object_Or_Function_Result (Obj_Id) then\n-               return True;\n             end if;\n \n          --  Inspect the freeze node of an access-to-controlled type and look\n@@ -14023,7 +13909,8 @@ package body Exp_Util is\n    function Small_Integer_Type_For (S : Uint; Uns : Boolean) return Entity_Id\n    is\n    begin\n-      pragma Assert (S <= System_Max_Integer_Size);\n+      --  The only difference between this and Integer_Type_For is that this\n+      --  can return small (8- or 16-bit) types.\n \n       if S <= Standard_Short_Short_Integer_Size then\n          if Uns then\n@@ -14039,36 +13926,8 @@ package body Exp_Util is\n             return Standard_Short_Integer;\n          end if;\n \n-      elsif S <= Standard_Integer_Size then\n-         if Uns then\n-            return Standard_Unsigned;\n-         else\n-            return Standard_Integer;\n-         end if;\n-\n-      elsif S <= Standard_Long_Integer_Size then\n-         if Uns then\n-            return Standard_Long_Unsigned;\n-         else\n-            return Standard_Long_Integer;\n-         end if;\n-\n-      elsif S <= Standard_Long_Long_Integer_Size then\n-         if Uns then\n-            return Standard_Long_Long_Unsigned;\n-         else\n-            return Standard_Long_Long_Integer;\n-         end if;\n-\n-      elsif S <= Standard_Long_Long_Long_Integer_Size then\n-         if Uns then\n-            return Standard_Long_Long_Long_Unsigned;\n-         else\n-            return Standard_Long_Long_Long_Integer;\n-         end if;\n-\n       else\n-         raise Program_Error;\n+         return Integer_Type_For (S, Uns);\n       end if;\n    end Small_Integer_Type_For;\n "}, {"sha": "3dd10d77cea4a5401950b28c698a2ea46c0c9195", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 16, "deletions": 12, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -732,6 +732,10 @@ package Exp_Util is\n    function Has_Access_Constraint (E : Entity_Id) return Boolean;\n    --  Given object or type E, determine if a discriminant is of an access type\n \n+   function Has_Tag_Of_Type (Exp : Node_Id) return Boolean;\n+   --  Return True if expression Exp of a tagged type is known to statically\n+   --  have the tag of this tagged type as specified by RM 3.9(19-25).\n+\n    function Homonym_Number (Subp : Entity_Id) return Pos;\n    --  Here subp is the entity for a subprogram. This routine returns the\n    --  homonym number used to disambiguate overloaded subprograms in the same\n@@ -757,12 +761,13 @@ package Exp_Util is\n    --  Return a suitable standard integer type containing at least S bits and\n    --  of the signedness given by Uns. See also Small_Integer_Type_For.\n \n-   function Is_Displacement_Of_Object_Or_Function_Result\n-     (Obj_Id : Entity_Id) return Boolean;\n-   --  Determine whether Obj_Id is a source entity that has been initialized by\n-   --  either a controlled function call or the assignment of another source\n-   --  object. In both cases the initialization expression is rewritten as a\n-   --  class-wide conversion of Ada.Tags.Displace.\n+   function Is_Captured_Function_Call (N : Node_Id) return Boolean;\n+   --  Return True if N is a captured function call, i.e. the result of calling\n+   --  Remove_Side_Effects on an N_Function_Call node:\n+\n+   --    type Ann is access all Typ;\n+   --    Rnn : constant Ann := Func (...)'reference;\n+   --    Rnn.all\n \n    function Is_Finalizable_Transient\n      (Decl     : Node_Id;\n@@ -817,6 +822,10 @@ package Exp_Util is\n    --  Determine whether object Id is related to an expanded return statement.\n    --  The case concerned is \"return Id.all;\".\n \n+   --  This is effectively used to determine which temporaries generated for\n+   --  return statements must be finalized because they are regular temporaries\n+   --  and which ones must not be since they are allocated on the return stack.\n+\n    --  WARNING: There is a matching C declaration of this subprogram in fe.h\n \n    function Is_Renamed_Object (N : Node_Id) return Boolean;\n@@ -839,11 +848,6 @@ package Exp_Util is\n \n    --  WARNING: There is a matching C declaration of this subprogram in fe.h\n \n-   function Is_Tag_To_Class_Wide_Conversion\n-     (Obj_Id : Entity_Id) return Boolean;\n-   --  Determine whether object Obj_Id is the result of a tag-to-class-wide\n-   --  type conversion.\n-\n    function Is_Untagged_Derivation (T : Entity_Id) return Boolean;\n    --  Returns true if type T is not tagged and is a derived type,\n    --  or is a private type whose completion is such a type."}, {"sha": "a26ea91dc453647aeee271fed37d0e2e90b4d4ed", "filename": "gcc/ada/expander.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexpander.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexpander.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpander.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -515,6 +515,9 @@ package body Expander is\n                when N_Variant_Part =>\n                   Expand_N_Variant_Part (N);\n \n+               when N_Interpolated_String_Literal =>\n+                  Expand_N_Interpolated_String_Literal (N);\n+\n                --  For all other node kinds, no expansion activity required\n \n                when others =>"}, {"sha": "ef403a66716901208ac0c8db7874852ace1be884", "filename": "gcc/ada/expander.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexpander.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexpander.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpander.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "e6899632bc9045e70d7c70def7f43cc4eaa3595d", "filename": "gcc/ada/expect.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexpect.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fexpect.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpect.c?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *                     Copyright (C) 2001-2022, AdaCore                     *\n+ *                     Copyright (C) 2001-2023, AdaCore                     *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -71,6 +71,7 @@\n \n #ifdef _WIN32\n \n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n #include <process.h>\n #include <signal.h>"}, {"sha": "dd1ee51aadca083fe1ec7f209bd6b7b4b2abfd20", "filename": "gcc/ada/fe.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffe.h?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 1992-2022, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2023, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "ce009307ae52470e761bbbf8288a55ea951ec580", "filename": "gcc/ada/final.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffinal.c?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2022, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2023, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "798db6e2a7f066c4eac16338c01ed17553b6210b", "filename": "gcc/ada/fmap.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffmap.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffmap.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffmap.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "3a68027f4a2c0a1bcdbf68dc0107b9ebfaae4dbe", "filename": "gcc/ada/fmap.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffmap.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffmap.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffmap.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "9a8db19d04e82084ac1895318f44b48372003fd5", "filename": "gcc/ada/fname-sf.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffname-sf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffname-sf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname-sf.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "c18b6c08161fa96fc2bb8b4756c508a651b496a6", "filename": "gcc/ada/fname-sf.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffname-sf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffname-sf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname-sf.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "7fc8d515dbfc4cc5a8b285ce1dcaca8a75545d94", "filename": "gcc/ada/fname-uf.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffname-uf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffname-uf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname-uf.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "3791f9f904403123f4b5180d84393cbce820d9a8", "filename": "gcc/ada/fname-uf.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffname-uf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffname-uf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname-uf.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "e51f2f549a86830f3c446f4980195c7e8a58222d", "filename": "gcc/ada/fname.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffname.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffname.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "57445f3f2a7cdeb0cb7dd4cae72fef804639daef", "filename": "gcc/ada/fname.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffname.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffname.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "86622003b97a90e8ba6002a15cbafb6d79dfcee3", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -398,7 +398,7 @@ package body Freeze is\n       Nam        : constant Node_Id := Name (N);\n       Old_S      : Entity_Id;\n       Spec       : constant Node_Id := New_Copy_Tree (Specification (Decl));\n-      Actuals    : List_Id := No_List;\n+      Actuals    : List_Id;\n       Call_Node  : Node_Id;\n       Call_Name  : Node_Id;\n       Body_Node  : Node_Id;\n@@ -473,18 +473,20 @@ package body Freeze is\n          Set_Is_Overloaded (Call_Name, False);\n       end if;\n \n+      if Nkind (Decl) /= N_Subprogram_Declaration then\n+         Rewrite (N,\n+           Make_Subprogram_Declaration (Loc,\n+             Specification => Specification (N)));\n+      end if;\n+\n       --  For simple renamings, subsequent calls can be expanded directly as\n       --  calls to the renamed entity. The body must be generated in any case\n       --  for calls that may appear elsewhere. This is not done in the case\n       --  where the subprogram is an instantiation because the actual proper\n-      --  body has not been built yet. This is also not done in GNATprove mode\n-      --  as we need to check other conditions for creating a body to inline\n-      --  in that case, which are controlled in Analyze_Subprogram_Body_Helper.\n+      --  body has not been built yet.\n \n       if Ekind (Old_S) in E_Function | E_Procedure\n-        and then Nkind (Decl) = N_Subprogram_Declaration\n         and then not Is_Generic_Instance (Old_S)\n-        and then not GNATprove_Mode\n       then\n          Set_Body_To_Inline (Decl, Old_S);\n       end if;\n@@ -658,12 +660,6 @@ package body Freeze is\n                  Statements => New_List (Call_Node)));\n       end if;\n \n-      if Nkind (Decl) /= N_Subprogram_Declaration then\n-         Rewrite (N,\n-           Make_Subprogram_Declaration (Loc,\n-             Specification => Specification (N)));\n-      end if;\n-\n       --  Link the body to the entity whose declaration it completes. If\n       --  the body is analyzed when the renamed entity is frozen, it may\n       --  be necessary to restore the proper scope (see package Exp_Ch13).\n@@ -6281,7 +6277,10 @@ package body Freeze is\n          end if;\n \n          --  Otherwise, loop through scopes checking if an enclosing scope\n-         --  comes from source or is a generic.\n+         --  comes from source or is a generic. Note that, for the purpose\n+         --  of this test, we need to consider that the internally generated\n+         --  subprogram described above comes from source too if the original\n+         --  subprogram itself does.\n \n          declare\n             S : Entity_Id;\n@@ -6291,6 +6290,8 @@ package body Freeze is\n             while Present (S) loop\n                if Is_Overloadable (S) then\n                   if Comes_From_Source (S)\n+                    or else (Chars (S) = Name_uWrapped_Statements\n+                              and then Comes_From_Source (Scope (S)))\n                     or else Is_Generic_Instance (S)\n                     or else Is_Child_Unit (S)\n                   then"}, {"sha": "f59fe8513b9a764eefaf1ffd561b649ba4343ca2", "filename": "gcc/ada/freeze.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffreeze.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffreeze.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "d964acd19f810d1ee02ef43a535090fa9e5050bb", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "2273d4963dcabeab17c4aeb08f0c9e172a855b39", "filename": "gcc/ada/frontend.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffrontend.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Ffrontend.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.ads?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2023, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "9507f2f0920319539a34dceb6dc3e3ee5013708b", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,7 +1,5 @@\n # Top level -*- makefile -*- fragment for GNU Ada (GNAT).\n-#   Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-#   2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013\n-#   Free Software Foundation, Inc.\n+# Copyright (C) 2009-2023 Free Software Foundation, Inc.\n \n #This file is part of GCC.\n \n@@ -260,11 +258,20 @@ else\n   endif\n endif\n \n+ifneq ($(filter darwin9% darwin8%,$(host_os)),)\n+# gnat1 uses exceptions which is incompatible with statically-linked libgcc\n+#\u00a0on Darwin8 and 9, since gnat1 also pulls in libraries linked with the system\n+# unwinder.\n+GCC_LINKERFLAGS = $(filter-out -Werror -static-libgcc, $(ALL_LINKERFLAGS))\n+GCC_LDFLAGS = $(filter-out -static-libgcc, $(LDFLAGS))\n+else\n # Strip -Werror during linking for the LTO bootstrap\n GCC_LINKERFLAGS = $(filter-out -Werror, $(ALL_LINKERFLAGS))\n+GCC_LDFLAGS = $(LDFLAGS)\n+endif\n \n-GCC_LINK=$(LINKER) $(GCC_LINKERFLAGS) $(LDFLAGS)\n-GCC_LLINK=$(LLINKER) $(GCC_LINKERFLAGS) $(LDFLAGS)\n+GCC_LINK=$(LINKER) $(GCC_LINKERFLAGS) $(GCC_LDFLAGS)\n+GCC_LLINK=$(LLINKER) $(GCC_LINKERFLAGS) $(GCC_LDFLAGS)\n \n # Lists of files for various purposes.\n "}, {"sha": "da6a56fcec816466ae86a1ae15d4074bc707c4d3", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,5 +1,5 @@\n # Makefile for GNU Ada Compiler (GNAT).\n-#   Copyright (C) 1994-2018 Free Software Foundation, Inc.\n+#   Copyright (C) 1994-2023 Free Software Foundation, Inc.\n \n #This file is part of GCC.\n "}, {"sha": "b8925f5c90b55f63b6744fbb3d90a7f81316e42a", "filename": "gcc/ada/gcc-interface/ada-builtin-types.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fgcc-interface%2Fada-builtin-types.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e6dac17f3fb27a10f805faacc61875c66f35c4/gcc%2Fada%2Fgcc-interface%2Fada-builtin-types.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fada-builtin-types.def?ref=73e6dac17f3fb27a10f805faacc61875c66f35c4", "patch": "@@ -1,7 +1,7 @@\n /* This file contains the type definitions for the builtins exclusively\n    used in the GNU Ada compiler.\n \n-   Copyright (C) 2019-2022 Free Software Foundation, Inc.\n+   Copyright (C) 2019-2023 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}]}