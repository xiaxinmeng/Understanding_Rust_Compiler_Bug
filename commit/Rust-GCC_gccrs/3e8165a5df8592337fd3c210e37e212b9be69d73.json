{"sha": "3e8165a5df8592337fd3c210e37e212b9be69d73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U4MTY1YTVkZjg1OTIzMzdmZDNjMjEwZTM3ZTIxMmI5YmU2OWQ3Mw==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2015-03-27T12:10:16Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2015-03-27T12:10:16Z"}, "message": "Add verification to libgomp.graphite/force-parallel-6.c\n\n2015-03-27  Tom de Vries  <tom@codesourcery.com>\n\n\tPR testsuite/65594\n\t* testsuite/libgomp.graphite/force-parallel-6.c (abort): Declare.\n\t(init, check): New function.\n\t(foo): Change return type to void.\n\t(main): Call init and check.\n\nFrom-SVN: r221728", "tree": {"sha": "aa08b4e13b23d4c441ee166f0a962f80265e5f3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa08b4e13b23d4c441ee166f0a962f80265e5f3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e8165a5df8592337fd3c210e37e212b9be69d73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e8165a5df8592337fd3c210e37e212b9be69d73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e8165a5df8592337fd3c210e37e212b9be69d73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e8165a5df8592337fd3c210e37e212b9be69d73/comments", "author": null, "committer": null, "parents": [{"sha": "4d688c9a17b7f64625582073ff3ca578ecf74306", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d688c9a17b7f64625582073ff3ca578ecf74306", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d688c9a17b7f64625582073ff3ca578ecf74306"}], "stats": {"total": 60, "additions": 57, "deletions": 3}, "files": [{"sha": "b2e7892b0ef03708cf4b7e1d29fa254899917dfd", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e8165a5df8592337fd3c210e37e212b9be69d73/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e8165a5df8592337fd3c210e37e212b9be69d73/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=3e8165a5df8592337fd3c210e37e212b9be69d73", "patch": "@@ -1,3 +1,11 @@\n+2015-03-27  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR testsuite/65594\n+\t* testsuite/libgomp.graphite/force-parallel-6.c (abort): Declare.\n+\t(init, check): New function.\n+\t(foo): Change return type to void.\n+\t(main): Call init and check.\n+\n 2015-03-27  Tom de Vries  <tom@codesourcery.com>\n \n \tPR testsuite/65594"}, {"sha": "cbc57357b33040ac87f02b278d4b11b728729e2b", "filename": "libgomp/testsuite/libgomp.graphite/force-parallel-6.c", "status": "modified", "additions": 49, "deletions": 3, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e8165a5df8592337fd3c210e37e212b9be69d73/libgomp%2Ftestsuite%2Flibgomp.graphite%2Fforce-parallel-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e8165a5df8592337fd3c210e37e212b9be69d73/libgomp%2Ftestsuite%2Flibgomp.graphite%2Fforce-parallel-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.graphite%2Fforce-parallel-6.c?ref=3e8165a5df8592337fd3c210e37e212b9be69d73", "patch": "@@ -1,10 +1,31 @@\n+void abort (void);\n+\n #define N 500\n #define M 50\n \n int X[2*N], Y[2*N], B[2*N];\n int A[2*N][2*N], C[2*N][2*N];\n \n-int foo(void)\n+static void __attribute__((noinline,noclone))\n+init (void)\n+{\n+  volatile int i, j;\n+\n+  for (i = 0; i < 2 * N; ++i)\n+    {\n+      B[i] = 1;\n+      X[i] = 1;\n+      Y[i] = 1;\n+      for (j = 0; j < 2 * N; ++j)\n+\t{\n+\t  A[i][j] = 1;\n+\t  C[i][j] = 1;\n+\t}\n+    }\n+}\n+\n+static void __attribute__((noinline,noclone))\n+foo (void)\n {\n   int i, j, k;\n \n@@ -21,13 +42,38 @@ int foo(void)\n \t  Y[i+j] = A[j+1][N];\n \t}\n     }\n+}\n \n-  return A[1][5]*B[6];\n+static void __attribute__((noinline,noclone))\n+check (void)\n+{\n+  volatile int i, j;\n+\n+  for (i = 0; i < 2 * N; ++i)\n+    {\n+      int expect_x = i < M ? 11 : 1;\n+\n+      if (B[i] != 1\n+\t  || X[i] != expect_x\n+\t  || Y[i] != 1)\n+\tabort ();\n+\n+      for (j = 0; j < 2 * N; ++j)\n+\t{\n+\t  int expect_a = (0 < i && i <= M && j < N) ? 2 : 1;\n+\n+\t  if (A[i][j] != expect_a\n+\t      || C[i][j] != 1)\n+\t    abort ();\n+\t}\n+    }\n }\n \n int main(void)\n {\n-  foo();\n+  init ();\n+  foo ();\n+  check ();\n \n   return 0;\n }"}]}