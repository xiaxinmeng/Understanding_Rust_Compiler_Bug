{"sha": "63cd7cef7e0f49fa557c5f694dbbd2e68de1f822", "node_id": "C_kwDOANBUbNoAKDYzY2Q3Y2VmN2UwZjQ5ZmE1NTdjNWY2OTRkYmJkMmU2OGRlMWY4MjI", "commit": {"author": {"name": "Sebastian Huber", "email": "sebastian.huber@embedded-brains.de", "date": "2022-03-31T06:10:37Z"}, "committer": {"name": "Sebastian Huber", "email": "sebastian.huber@embedded-brains.de", "date": "2022-03-31T06:12:43Z"}, "message": "gcov: Reword comment for gcov_read_string()\n\ngcc/\n\n\t* gcov-io.cc (gcov_read_string): Reword documentation comment.", "tree": {"sha": "2a022c6a66b0123591b9dcc885ef78ac63d482c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a022c6a66b0123591b9dcc885ef78ac63d482c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63cd7cef7e0f49fa557c5f694dbbd2e68de1f822", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63cd7cef7e0f49fa557c5f694dbbd2e68de1f822", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63cd7cef7e0f49fa557c5f694dbbd2e68de1f822", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63cd7cef7e0f49fa557c5f694dbbd2e68de1f822/comments", "author": {"login": "sebhub", "id": 932056, "node_id": "MDQ6VXNlcjkzMjA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/932056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebhub", "html_url": "https://github.com/sebhub", "followers_url": "https://api.github.com/users/sebhub/followers", "following_url": "https://api.github.com/users/sebhub/following{/other_user}", "gists_url": "https://api.github.com/users/sebhub/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebhub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebhub/subscriptions", "organizations_url": "https://api.github.com/users/sebhub/orgs", "repos_url": "https://api.github.com/users/sebhub/repos", "events_url": "https://api.github.com/users/sebhub/events{/privacy}", "received_events_url": "https://api.github.com/users/sebhub/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sebhub", "id": 932056, "node_id": "MDQ6VXNlcjkzMjA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/932056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebhub", "html_url": "https://github.com/sebhub", "followers_url": "https://api.github.com/users/sebhub/followers", "following_url": "https://api.github.com/users/sebhub/following{/other_user}", "gists_url": "https://api.github.com/users/sebhub/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebhub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebhub/subscriptions", "organizations_url": "https://api.github.com/users/sebhub/orgs", "repos_url": "https://api.github.com/users/sebhub/repos", "events_url": "https://api.github.com/users/sebhub/events{/privacy}", "received_events_url": "https://api.github.com/users/sebhub/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ce8154f1c72e6d701bff969a007938e2f986369", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ce8154f1c72e6d701bff969a007938e2f986369", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ce8154f1c72e6d701bff969a007938e2f986369"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "72c40f8eaa06c269a0a3c56e0b4677b62cbf7a7f", "filename": "gcc/gcov-io.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63cd7cef7e0f49fa557c5f694dbbd2e68de1f822/gcc%2Fgcov-io.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63cd7cef7e0f49fa557c5f694dbbd2e68de1f822/gcc%2Fgcov-io.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-io.cc?ref=63cd7cef7e0f49fa557c5f694dbbd2e68de1f822", "patch": "@@ -473,9 +473,9 @@ mangle_path (char const *base)\n /* We need to expose the below function when compiling for gcov-tool.  */\n \n #if !IN_LIBGCOV || defined (IN_GCOV_TOOL)\n-/* Read string from coverage file. Returns a pointer to a static\n-   buffer, or NULL on empty string. You must copy the string before\n-   calling another gcov function.  */\n+/* Read string from coverage file.  Allocate the buffer for the string\n+   from the heap or die.  Return a pointer to the string, or NULL on\n+   empty string.  */\n \n GCOV_LINKAGE const char *\n gcov_read_string (void)"}]}