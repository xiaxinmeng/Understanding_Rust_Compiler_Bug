{"sha": "543a341c1b5295d1dc494487f96e82908b954436", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQzYTM0MWMxYjUyOTVkMWRjNDk0NDg3Zjk2ZTgyOTA4Yjk1NDQzNg==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2012-01-05T11:00:23Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2012-01-05T11:00:23Z"}, "message": "avr.c (avr_replace_prefix): Remove.\n\n\t* config/avr/avr.c (avr_replace_prefix): Remove.\n\t(avr_asm_named_section): Use ACONCAT instead of avr_replace_prefix.\n\t(avr_asm_function_rodata_section): Ditto.\n\t(avr_asm_select_section): Ditto.\n\nFrom-SVN: r182904", "tree": {"sha": "199d25f9df5e07d0c7c20711d9392d04ee31567e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/199d25f9df5e07d0c7c20711d9392d04ee31567e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/543a341c1b5295d1dc494487f96e82908b954436", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/543a341c1b5295d1dc494487f96e82908b954436", "html_url": "https://github.com/Rust-GCC/gccrs/commit/543a341c1b5295d1dc494487f96e82908b954436", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/543a341c1b5295d1dc494487f96e82908b954436/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bfd2688d62e54328773003669b1ead08dd05766", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bfd2688d62e54328773003669b1ead08dd05766", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bfd2688d62e54328773003669b1ead08dd05766"}], "stats": {"total": 51, "additions": 16, "deletions": 35}, "files": [{"sha": "edaad12707e0e368b853720737173c6b02ae5e6d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/543a341c1b5295d1dc494487f96e82908b954436/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/543a341c1b5295d1dc494487f96e82908b954436/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=543a341c1b5295d1dc494487f96e82908b954436", "patch": "@@ -1,3 +1,10 @@\n+2012-01-05  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* config/avr/avr.c (avr_replace_prefix): Remove.\n+\t(avr_asm_named_section): Use ACONCAT instead of avr_replace_prefix.\n+\t(avr_asm_function_rodata_section): Ditto.\n+\t(avr_asm_select_section): Ditto.\n+\n 2012-01-05  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n \n \t* reload.c (find_reloads): Adjust LABEL_NUSES on REG_LABEL_OPERAND"}, {"sha": "a62835c093bfbffda4ec2ce6496265c2344df0e2", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 9, "deletions": 35, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/543a341c1b5295d1dc494487f96e82908b954436/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/543a341c1b5295d1dc494487f96e82908b954436/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=543a341c1b5295d1dc494487f96e82908b954436", "patch": "@@ -301,31 +301,6 @@ bool avr_need_copy_data_p = false;\n \n \f\n \n-/* Custom function to replace string prefix.\n-\n-   Return a ggc-allocated string with strlen (OLD_PREFIX) characters removed\n-   from the start of OLD_STR and then prepended with NEW_PREFIX.  */\n-\n-static inline const char*\n-avr_replace_prefix (const char *old_str,\n-                    const char *old_prefix, const char *new_prefix)\n-{\n-  char *new_str;\n-  size_t len = strlen (old_str) + strlen (new_prefix) - strlen (old_prefix);\n-\n-  gcc_assert (strlen (old_prefix) <= strlen (old_str));\n-\n-  /* Unfortunately, ggc_alloc_string returns a const char* and thus cannot be\n-     used here.  */\n-     \n-  new_str = (char*) ggc_alloc_atomic (1 + len);\n-\n-  strcat (stpcpy (new_str, new_prefix), old_str + strlen (old_prefix));\n-  \n-  return (const char*) new_str;\n-}\n-\n-\n /* Custom function to count number of set bits.  */\n \n static inline int\n@@ -7196,9 +7171,8 @@ avr_asm_function_rodata_section (tree decl)\n \n           if (STR_PREFIX_P (name, old_prefix))\n             {\n-              const char *rname = avr_replace_prefix (name,\n-                                                      old_prefix, new_prefix);\n-\n+              const char *rname = ACONCAT ((new_prefix,\n+                                            name + strlen (old_prefix), NULL));\n               flags &= ~SECTION_CODE;\n               flags |= AVR_HAVE_JMP_CALL ? 0 : SECTION_CODE;\n               \n@@ -7223,15 +7197,16 @@ avr_asm_named_section (const char *name, unsigned int flags, tree decl)\n       int segment = avr_addrspace[as].segment % avr_current_arch->n_segments;\n       const char *old_prefix = \".rodata\";\n       const char *new_prefix = progmem_section_prefix[segment];\n-      const char *sname = new_prefix;\n       \n       if (STR_PREFIX_P (name, old_prefix))\n         {\n-          sname = avr_replace_prefix (name, old_prefix, new_prefix);\n+          const char *sname = ACONCAT ((new_prefix,\n+                                        name + strlen (old_prefix), NULL));\n+          default_elf_asm_named_section (sname, flags, decl);\n+          return;\n         }\n \n-      default_elf_asm_named_section (sname, flags, decl);\n-\n+      default_elf_asm_named_section (new_prefix, flags, decl);\n       return;\n     }\n   \n@@ -7326,9 +7301,8 @@ avr_asm_select_section (tree decl, int reloc, unsigned HOST_WIDE_INT align)\n \n           if (STR_PREFIX_P (name, old_prefix))\n             {\n-              const char *sname = avr_replace_prefix (name,\n-                                                      old_prefix, new_prefix);\n-\n+              const char *sname = ACONCAT ((new_prefix,\n+                                            name + strlen (old_prefix), NULL));\n               return get_section (sname, sect->common.flags, sect->named.decl);\n             }\n         }"}]}