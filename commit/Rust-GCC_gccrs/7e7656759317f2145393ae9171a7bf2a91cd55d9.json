{"sha": "7e7656759317f2145393ae9171a7bf2a91cd55d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U3NjU2NzU5MzE3ZjIxNDUzOTNhZTkxNzFhN2JmMmE5MWNkNTVkOQ==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2002-09-30T20:51:57Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2002-09-30T20:51:57Z"}, "message": "longlong.h: Partially synchronize with GMP-4.1 version: Use i370 definitions also for s390.\n\n\t* longlong.h: Partially synchronize with GMP-4.1 version:\n\tUse i370 definitions also for s390.\n\tAdd generic definition of umul_ppmm in terms of smul_ppmm.\n\t[s390] (umul_ppmm): Remove.\n\t[s390] (smul_ppmm): Fix incorrect assembler constraints.\n\t[s390] (smul_ppmm, sdiv_qrnnd): Rename __xx to __x.\n\nFrom-SVN: r57670", "tree": {"sha": "975fe3a8a36af2ace3e26572e4d24e6279bb340f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/975fe3a8a36af2ace3e26572e4d24e6279bb340f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e7656759317f2145393ae9171a7bf2a91cd55d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e7656759317f2145393ae9171a7bf2a91cd55d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e7656759317f2145393ae9171a7bf2a91cd55d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e7656759317f2145393ae9171a7bf2a91cd55d9/comments", "author": null, "committer": null, "parents": [{"sha": "92e89ef0ae66022aea6a057a8eb695f0d27a9bd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92e89ef0ae66022aea6a057a8eb695f0d27a9bd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92e89ef0ae66022aea6a057a8eb695f0d27a9bd8"}], "stats": {"total": 62, "additions": 34, "deletions": 28}, "files": [{"sha": "d8073b4d418f7a4ce742a572eba5f3a78018f1eb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7656759317f2145393ae9171a7bf2a91cd55d9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7656759317f2145393ae9171a7bf2a91cd55d9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7e7656759317f2145393ae9171a7bf2a91cd55d9", "patch": "@@ -1,3 +1,12 @@\n+2002-09-30  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* longlong.h: Partially synchronize with GMP-4.1 version:\n+\tUse i370 definitions also for s390.\n+\tAdd generic definition of umul_ppmm in terms of smul_ppmm.\n+\t[s390] (umul_ppmm): Remove.\n+\t[s390] (smul_ppmm): Fix incorrect assembler constraints.\n+\t[s390] (smul_ppmm, sdiv_qrnnd): Rename __xx to __x.\n+\n 2002-09-30  Bob Wilson  <bob.wilson@acm.org>\n \n \t* config/xtensa/xtensa.h (REG_CLASS_NAMES, REG_CLASS_CONTENTS):"}, {"sha": "83ce96564b6c5ecc6af66afd0e476096af4d3a54", "filename": "gcc/longlong.h", "status": "modified", "additions": 25, "deletions": 28, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7656759317f2145393ae9171a7bf2a91cd55d9/gcc%2Flonglong.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7656759317f2145393ae9171a7bf2a91cd55d9/gcc%2Flonglong.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flonglong.h?ref=7e7656759317f2145393ae9171a7bf2a91cd55d9", "patch": "@@ -292,44 +292,27 @@ UDItype __umulsidi3 (USItype, USItype);\n   } while (0)\n #endif\n \n-#if (defined (__i370__) || defined (__mvs__)) && W_TYPE_SIZE == 32\n-#define umul_ppmm(xh, xl, m0, m1) \\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    union {UDItype __ll;\t\t\t\t\t\t\\\n-\t   struct {USItype __h, __l;} __i;\t\t\t\t\\\n-\t  } __xx;\t\t\t\t\t\t\t\\\n-    USItype __m0 = (m0), __m1 = (m1);\t\t\t\t\t\\\n-    __asm__ (\"mr %0,%3\"\t\t\t\t\t\t\t\\\n-\t     : \"=r\" (__xx.__i.__h),\t\t\t\t\t\\\n-\t       \"=r\" (__xx.__i.__l)\t\t\t\t\t\\\n-\t     : \"%1\" (__m0),\t\t\t\t\t\t\\\n-\t       \"r\" (__m1));\t\t\t\t\t\t\\\n-    (xh) = __xx.__i.__h; (xl) = __xx.__i.__l;\t\t\t\t\\\n-    (xh) += ((((SItype) __m0 >> 31) & __m1)\t\t\t\t\\\n-\t     + (((SItype) __m1 >> 31) & __m0));\t\t\t\t\\\n-  } while (0)\n+#if (defined (__i370__) || defined (__s390__) || defined (__mvs__)) && W_TYPE_SIZE == 32\n #define smul_ppmm(xh, xl, m0, m1) \\\n   do {\t\t\t\t\t\t\t\t\t\\\n     union {DItype __ll;\t\t\t\t\t\t\t\\\n \t   struct {USItype __h, __l;} __i;\t\t\t\t\\\n-\t  } __xx;\t\t\t\t\t\t\t\\\n-    __asm__ (\"mr %0,%3\"\t\t\t\t\t\t\t\\\n-\t     : \"=r\" (__xx.__i.__h),\t\t\t\t\t\\\n-\t       \"=r\" (__xx.__i.__l)\t\t\t\t\t\\\n-\t     : \"%1\" (m0),\t\t\t\t\t\t\\\n-\t       \"r\" (m1));\t\t\t\t\t\t\\\n-    (xh) = __xx.__i.__h; (xl) = __xx.__i.__l;\t\t\t\t\\\n+\t  } __x;\t\t\t\t\t\t\t\\\n+    __asm__ (\"lr %N0,%1\\n\\tmr %0,%2\"\t\t\t\t\t\\\n+\t     : \"=&r\" (__x.__ll)\t\t\t\t\t\t\\\n+\t     : \"r\" (m0), \"r\" (m1));\t\t\t\t\t\\\n+    (xh) = __x.__i.__h; (xl) = __x.__i.__l;\t\t\t\t\\\n   } while (0)\n #define sdiv_qrnnd(q, r, n1, n0, d) \\\n   do {\t\t\t\t\t\t\t\t\t\\\n     union {DItype __ll;\t\t\t\t\t\t\t\\\n \t   struct {USItype __h, __l;} __i;\t\t\t\t\\\n-\t  } __xx;\t\t\t\t\t\t\t\\\n-    __xx.__i.__h = n1; __xx.__i.__l = n0;\t\t\t\t\\\n+\t  } __x;\t\t\t\t\t\t\t\\\n+    __x.__i.__h = n1; __x.__i.__l = n0;\t\t\t\t\t\\\n     __asm__ (\"dr %0,%2\"\t\t\t\t\t\t\t\\\n-\t     : \"=r\" (__xx.__ll)\t\t\t\t\t\t\\\n-\t     : \"0\" (__xx.__ll), \"r\" (d));\t\t\t\t\\\n-    (q) = __xx.__i.__l; (r) = __xx.__i.__h;\t\t\t\t\\\n+\t     : \"=r\" (__x.__ll)\t\t\t\t\t\t\\\n+\t     : \"0\" (__x.__ll), \"r\" (d));\t\t\t\t\\\n+    (q) = __x.__i.__l; (r) = __x.__i.__h;\t\t\t\t\\\n   } while (0)\n #endif\n \n@@ -1201,6 +1184,20 @@ UDItype __umulsidi3 (USItype, USItype);\n   } while (0)\n #endif\n \n+/* If we lack umul_ppmm but have smul_ppmm, define umul_ppmm in terms of\n+   smul_ppmm.  */\n+#if !defined (umul_ppmm) && defined (smul_ppmm)\n+#define umul_ppmm(w1, w0, u, v)\t\t\t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    UWtype __w1;\t\t\t\t\t\t\t\\\n+    UWtype __xm0 = (u), __xm1 = (v);\t\t\t\t\t\\\n+    smul_ppmm (__w1, w0, __xm0, __xm1);\t\t\t\t\t\\\n+    (w1) = __w1 + (-(__xm0 >> (W_TYPE_SIZE - 1)) & __xm1)\t\t\\\n+\t\t+ (-(__xm1 >> (W_TYPE_SIZE - 1)) & __xm0);\t\t\\\n+  } while (0)\n+#endif\n+\n+/* If we still don't have umul_ppmm, define it using plain C.  */\n #if !defined (umul_ppmm)\n #define umul_ppmm(w1, w0, u, v)\t\t\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\"}]}