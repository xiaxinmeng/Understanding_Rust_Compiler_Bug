{"sha": "bb59f396f8ca74c7d663c197e99d15bbe9f6e5b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI1OWYzOTZmOGNhNzRjN2Q2NjNjMTk3ZTk5ZDE1YmJlOWY2ZTViNg==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2014-11-18T20:20:53Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2014-11-18T20:20:53Z"}, "message": "re PR libstdc++/43622 (Incomplete C++ library support for __float128)\n\n2014-11-18  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR libstdc++/43622\ngcc/cp/\n\t* rtti.c (emit_support_tinfos): Handle __float128.\nlibstdc++-v3/\n\t* config/abi/pre/float128.ver: New file.\n\t* configure.ac: Use float128.ver when relevant.\n\t* configure: Regenerate.\n\t* testsuite/util/testsuite_abi.cc (check_version): Accept new\n\tCXXABI_FLOAT128 version.\n\nFrom-SVN: r217735", "tree": {"sha": "5b3d99e4e1395d1c33d0403fec1bef77b04a596d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b3d99e4e1395d1c33d0403fec1bef77b04a596d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb59f396f8ca74c7d663c197e99d15bbe9f6e5b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb59f396f8ca74c7d663c197e99d15bbe9f6e5b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb59f396f8ca74c7d663c197e99d15bbe9f6e5b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb59f396f8ca74c7d663c197e99d15bbe9f6e5b6/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ac2f8d26b5a601186735d1341eaec7779e9fa7fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac2f8d26b5a601186735d1341eaec7779e9fa7fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac2f8d26b5a601186735d1341eaec7779e9fa7fe"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "2e18932dc491483d4954b88dcdeb5e98bd0c6176", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb59f396f8ca74c7d663c197e99d15bbe9f6e5b6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb59f396f8ca74c7d663c197e99d15bbe9f6e5b6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bb59f396f8ca74c7d663c197e99d15bbe9f6e5b6", "patch": "@@ -1,3 +1,8 @@\n+2014-11-18  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR libstdc++/43622\n+\t* rtti.c (emit_support_tinfos): Handle __float128.\n+\n 2014-11-18  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/63925"}, {"sha": "aef71f27bc5a65bd9f68662fcea80bce4466359e", "filename": "gcc/cp/rtti.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb59f396f8ca74c7d663c197e99d15bbe9f6e5b6/gcc%2Fcp%2Frtti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb59f396f8ca74c7d663c197e99d15bbe9f6e5b6/gcc%2Fcp%2Frtti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.c?ref=bb59f396f8ca74c7d663c197e99d15bbe9f6e5b6", "patch": "@@ -1547,6 +1547,8 @@ emit_support_tinfos (void)\n \temit_support_tinfo_1 (int_n_trees[ix].signed_type);\n \temit_support_tinfo_1 (int_n_trees[ix].unsigned_type);\n       }\n+  for (tree t = registered_builtin_types; t; t = TREE_CHAIN (t))\n+    emit_support_tinfo_1 (TREE_VALUE (t));\n }\n \n /* Finish a type info decl. DECL_PTR is a pointer to an unemitted"}, {"sha": "c0e173895583ed9b78b125610cf31742994eefec", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb59f396f8ca74c7d663c197e99d15bbe9f6e5b6/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb59f396f8ca74c7d663c197e99d15bbe9f6e5b6/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=bb59f396f8ca74c7d663c197e99d15bbe9f6e5b6", "patch": "@@ -1,3 +1,12 @@\n+2014-11-18  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR libstdc++/43622\n+\t* config/abi/pre/float128.ver: New file.\n+\t* configure.ac: Use float128.ver when relevant.\n+\t* configure: Regenerate.\n+\t* testsuite/util/testsuite_abi.cc (check_version): Accept new\n+\tCXXABI_FLOAT128 version.\n+\n 2014-11-17  Jason Merrill  <jason@redhat.com>\n \n \t* include/backward/binders.h: Suppress -Wdeprecated-declarations."}, {"sha": "26c62c70be0dad07a88ef86cb8020e0d00a97ff2", "filename": "libstdc++-v3/config/abi/pre/float128.ver", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb59f396f8ca74c7d663c197e99d15bbe9f6e5b6/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Ffloat128.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb59f396f8ca74c7d663c197e99d15bbe9f6e5b6/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Ffloat128.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Ffloat128.ver?ref=bb59f396f8ca74c7d663c197e99d15bbe9f6e5b6", "patch": "@@ -0,0 +1,10 @@\n+# Appended to version file.\n+\n+CXXABI_FLOAT128 {\n+\n+    # typeinfo and typeinfo name for __float128\n+    _ZT[IS]g;\n+    _ZT[IS]Pg;\n+    _ZT[IS]PKg;\n+\n+};"}, {"sha": "5fcb705b36351370d22747245bce74cb7eabad74", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb59f396f8ca74c7d663c197e99d15bbe9f6e5b6/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb59f396f8ca74c7d663c197e99d15bbe9f6e5b6/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=bb59f396f8ca74c7d663c197e99d15bbe9f6e5b6", "patch": "@@ -15710,6 +15710,9 @@ ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $\n ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n+if test \"$enable_float128\" = yes; then\n+  port_specific_symbol_files=\"$port_specific_symbol_files \\$(top_srcdir)/config/abi/pre/float128.ver\"\n+fi\n \n # Checks for compiler support that doesn't require linking.\n "}, {"sha": "135d536e1b206014ba32567069de36dbc17edb68", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb59f396f8ca74c7d663c197e99d15bbe9f6e5b6/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb59f396f8ca74c7d663c197e99d15bbe9f6e5b6/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=bb59f396f8ca74c7d663c197e99d15bbe9f6e5b6", "patch": "@@ -153,6 +153,9 @@ GLIBCXX_ENABLE_THREADS\n GLIBCXX_ENABLE_ATOMIC_BUILTINS\n GLIBCXX_ENABLE_DECIMAL_FLOAT\n GLIBCXX_ENABLE_INT128_FLOAT128\n+if test \"$enable_float128\" = yes; then\n+  port_specific_symbol_files=\"$port_specific_symbol_files \\$(top_srcdir)/config/abi/pre/float128.ver\"\n+fi\n \n # Checks for compiler support that doesn't require linking.\n GLIBCXX_CHECK_COMPILER_FEATURES"}, {"sha": "15b05dcb9574baaf6a58ccafc2f7d9fc848775c1", "filename": "libstdc++-v3/testsuite/util/testsuite_abi.cc", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb59f396f8ca74c7d663c197e99d15bbe9f6e5b6/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_abi.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb59f396f8ca74c7d663c197e99d15bbe9f6e5b6/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_abi.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_abi.cc?ref=bb59f396f8ca74c7d663c197e99d15bbe9f6e5b6", "patch": "@@ -213,6 +213,7 @@ check_version(symbol& test, bool added)\n       known_versions.push_back(\"CXXABI_1.3.8\");\n       known_versions.push_back(\"CXXABI_1.3.9\");\n       known_versions.push_back(\"CXXABI_TM_1\");\n+      known_versions.push_back(\"CXXABI_FLOAT128\");\n     }\n   compat_list::iterator begin = known_versions.begin();\n   compat_list::iterator end = known_versions.end();\n@@ -230,16 +231,18 @@ check_version(symbol& test, bool added)\n       // Check that added symbols are added in the latest pre-release version.\n       bool latestp = (test.version_name == \"GLIBCXX_3.4.21\"\n \t\t     || test.version_name == \"CXXABI_1.3.9\"\n+\t\t     || test.version_name == \"CXXABI_FLOAT128\"\n \t\t     || test.version_name == \"CXXABI_TM_1\");\n       if (added && !latestp)\n \ttest.version_status = symbol::incompatible;\n \n       // Check that long double compatibility symbols demangled as\n-      // __float128 are put into some _LDBL_ version name.\n+      // __float128 and regular __float128 symbols are put into some _LDBL_\n+      // or _FLOAT128 version name.\n       if (added && test.demangled_name.find(\"__float128\") != std::string::npos)\n \t{\n-\t  // Has to be in _LDBL_ version name.\n-\t  if (test.version_name.find(\"_LDBL_\") == std::string::npos)\n+\t  if (test.version_name.find(\"_LDBL_\") == std::string::npos\n+\t      && test.version_name.find(\"_FLOAT128\") == std::string::npos)\n \t    test.version_status = symbol::incompatible;\n \t}\n "}]}