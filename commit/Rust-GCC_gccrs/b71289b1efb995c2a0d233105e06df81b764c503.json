{"sha": "b71289b1efb995c2a0d233105e06df81b764c503", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjcxMjg5YjFlZmI5OTVjMmEwZDIzMzEwNWUwNmRmODFiNzY0YzUwMw==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2017-11-16T16:50:47Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2017-11-16T16:50:47Z"}, "message": "ipa-fnsummary.c (analyze_function_body): Accumulate time consistently in sreal.\n\n\n\t* ipa-fnsummary.c (analyze_function_body): Accumulate time consistently\n\tin sreal.\n\t* gcc.dg/ipa/ipcp-2.c: Lower threshold.\n\nFrom-SVN: r254834", "tree": {"sha": "147b0c8e02c69feb8d77653d9080514bd892f6ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/147b0c8e02c69feb8d77653d9080514bd892f6ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b71289b1efb995c2a0d233105e06df81b764c503", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b71289b1efb995c2a0d233105e06df81b764c503", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b71289b1efb995c2a0d233105e06df81b764c503", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b71289b1efb995c2a0d233105e06df81b764c503/comments", "author": null, "committer": null, "parents": [{"sha": "913f8c088eb3b2d6e2c7a55954de4e0c38d78766", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/913f8c088eb3b2d6e2c7a55954de4e0c38d78766", "html_url": "https://github.com/Rust-GCC/gccrs/commit/913f8c088eb3b2d6e2c7a55954de4e0c38d78766"}], "stats": {"total": 28, "additions": 17, "deletions": 11}, "files": [{"sha": "9c1eb3d46d6daf26a785d41a7448cf673fb096b1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b71289b1efb995c2a0d233105e06df81b764c503/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b71289b1efb995c2a0d233105e06df81b764c503/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b71289b1efb995c2a0d233105e06df81b764c503", "patch": "@@ -1,3 +1,8 @@\n+2017-11-16  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-fnsummary.c (analyze_function_body): Accumulate time consistently\n+\tin sreal.\n+\n 2017-11-16  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* predict.c (combine_predictions_for_bb): Preserve zero predicted\t"}, {"sha": "1b99194a26736ac51ecc1d93039013bff14815bf", "filename": "gcc/ipa-fnsummary.c", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b71289b1efb995c2a0d233105e06df81b764c503/gcc%2Fipa-fnsummary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b71289b1efb995c2a0d233105e06df81b764c503/gcc%2Fipa-fnsummary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-fnsummary.c?ref=b71289b1efb995c2a0d233105e06df81b764c503", "patch": "@@ -1986,7 +1986,7 @@ analyze_function_body (struct cgraph_node *node, bool early)\n      <0,2>.  */\n   basic_block bb;\n   struct function *my_function = DECL_STRUCT_FUNCTION (node->decl);\n-  int freq;\n+  sreal freq;\n   struct ipa_fn_summary *info = ipa_fn_summaries->get (node);\n   predicate bb_predicate;\n   struct ipa_func_body_info fbi;\n@@ -2052,7 +2052,7 @@ analyze_function_body (struct cgraph_node *node, bool early)\n   for (n = 0; n < nblocks; n++)\n     {\n       bb = BASIC_BLOCK_FOR_FN (cfun, order[n]);\n-      freq = compute_call_stmt_bb_frequency (node->decl, bb);\n+      freq = bb->count.to_sreal_scale (ENTRY_BLOCK_PTR_FOR_FN (cfun)->count);\n       if (clobber_only_eh_bb_p (bb))\n \t{\n \t  if (dump_file && (dump_flags & TDF_DETAILS))\n@@ -2127,7 +2127,7 @@ analyze_function_body (struct cgraph_node *node, bool early)\n \t      fprintf (dump_file, \"  \");\n \t      print_gimple_stmt (dump_file, stmt, 0);\n \t      fprintf (dump_file, \"\\t\\tfreq:%3.2f size:%3i time:%3i\\n\",\n-\t\t       ((double) freq) / CGRAPH_FREQ_BASE, this_size,\n+\t\t       freq.to_double (), this_size,\n \t\t       this_time);\n \t    }\n \n@@ -2201,7 +2201,7 @@ analyze_function_body (struct cgraph_node *node, bool early)\n \t    will_be_nonconstant = true;\n \t  if (this_time || this_size)\n \t    {\n-\t      this_time *= freq;\n+\t      sreal final_time = (sreal)this_time * freq;\n \n \t      prob = eliminated_by_inlining_prob (stmt);\n \t      if (prob == 1 && dump_file && (dump_flags & TDF_DETAILS))\n@@ -2218,7 +2218,7 @@ analyze_function_body (struct cgraph_node *node, bool early)\n \n \t      if (*(is_gimple_call (stmt) ? &bb_predicate : &p) != false)\n \t\t{\n-\t\t  time += this_time;\n+\t\t  time += final_time;\n \t\t  size += this_size;\n \t\t}\n \n@@ -2231,14 +2231,12 @@ analyze_function_body (struct cgraph_node *node, bool early)\n \t\t    {\n \t\t      predicate ip = bb_predicate & predicate::not_inlined ();\n \t\t      info->account_size_time (this_size * prob,\n-\t\t\t\t\t       (sreal)(this_time * prob)\n-\t\t\t\t\t       / (CGRAPH_FREQ_BASE * 2), ip,\n+\t\t\t\t\t       (this_time * prob) / 2, ip,\n \t\t\t\t\t       p);\n \t\t    }\n \t\t  if (prob != 2)\n \t\t    info->account_size_time (this_size * (2 - prob),\n-\t\t\t\t\t     (sreal)(this_time * (2 - prob))\n-\t\t\t\t\t      / (CGRAPH_FREQ_BASE * 2),\n+\t\t\t\t\t     (this_time * (2 - prob) / 2),\n \t\t\t\t\t     bb_predicate,\n \t\t\t\t\t     p);\n \t\t}\n@@ -2256,7 +2254,6 @@ analyze_function_body (struct cgraph_node *node, bool early)\n \t}\n     }\n   set_hint_predicate (&ipa_fn_summaries->get (node)->array_index, array_index);\n-  time = time / CGRAPH_FREQ_BASE;\n   free (order);\n \n   if (nonconstant_names.exists () && !early)"}, {"sha": "d8db9acb468ae04d16c37ef4d7025f4d0a973f33", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b71289b1efb995c2a0d233105e06df81b764c503/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b71289b1efb995c2a0d233105e06df81b764c503/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b71289b1efb995c2a0d233105e06df81b764c503", "patch": "@@ -1,3 +1,7 @@\n+2017-11-16  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* gcc.dg/ipa/ipcp-2.c: Lower threshold.\n+\n 2017-11-16  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/63477"}, {"sha": "6b6fc4e4318a842e6fbdc51e162a4785eb7f106e", "filename": "gcc/testsuite/gcc.dg/ipa/ipcp-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b71289b1efb995c2a0d233105e06df81b764c503/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipcp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b71289b1efb995c2a0d233105e06df81b764c503/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipcp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipcp-2.c?ref=b71289b1efb995c2a0d233105e06df81b764c503", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O3 -fipa-cp -fipa-cp-clone -fdump-ipa-cp -fno-early-inlining --param ipa-cp-eval-threshold=100\"  } */\n+/* { dg-options \"-O3 -fipa-cp -fipa-cp-clone -fdump-ipa-cp -fno-early-inlining --param ipa-cp-eval-threshold=80\"  } */\n /* { dg-add-options bind_pic_locally } */\n \n extern int get_stuff (int);"}]}