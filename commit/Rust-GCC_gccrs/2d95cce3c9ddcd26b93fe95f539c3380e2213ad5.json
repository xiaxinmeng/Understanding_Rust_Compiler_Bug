{"sha": "2d95cce3c9ddcd26b93fe95f539c3380e2213ad5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ5NWNjZTNjOWRkY2QyNmI5M2ZlOTVmNTM5YzMzODBlMjIxM2FkNQ==", "commit": {"author": {"name": "Aaron Luchko", "email": "aluchko@redhat.com", "date": "2005-07-05T17:26:38Z"}, "committer": {"name": "Aaron Luchko", "email": "aluchko@gcc.gnu.org", "date": "2005-07-05T17:26:38Z"}, "message": "StringReferenceCommandSet.java: New file.\n\n        * gnu/classpath/jdwp/processor/StringReferenceCommandSet.java:\n        New file.\n\nFrom-SVN: r101628", "tree": {"sha": "b9f0d9f77a2b20cfacb2686c27735351f9ad4edb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9f0d9f77a2b20cfacb2686c27735351f9ad4edb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d95cce3c9ddcd26b93fe95f539c3380e2213ad5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d95cce3c9ddcd26b93fe95f539c3380e2213ad5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d95cce3c9ddcd26b93fe95f539c3380e2213ad5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d95cce3c9ddcd26b93fe95f539c3380e2213ad5/comments", "author": null, "committer": null, "parents": [{"sha": "ef3303124e42a68b2fb48632746242069123c852", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef3303124e42a68b2fb48632746242069123c852", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef3303124e42a68b2fb48632746242069123c852"}], "stats": {"total": 103, "additions": 103, "deletions": 0}, "files": [{"sha": "4d08213fb394cbd474d34d52b6436053bca0538f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d95cce3c9ddcd26b93fe95f539c3380e2213ad5/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d95cce3c9ddcd26b93fe95f539c3380e2213ad5/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=2d95cce3c9ddcd26b93fe95f539c3380e2213ad5", "patch": "@@ -1,3 +1,8 @@\n+2005-07-05  Aaron Luchko  <aluchko@redhat.com>\n+\n+\t* gnu/classpath/jdwp/processor/StringReferenceCommandSet.java:\n+\tNew file.\n+\n 2005-07-04  Aaron Luchko  <aluchko@redhat.com>\n \n \t* gnu/classpath/jdwp/processor/CommandSet.java: New file."}, {"sha": "1f1b04cb0cc92f3ccb4b264df719ba877886367d", "filename": "libjava/gnu/classpath/jdwp/processor/StringReferenceCommandSet.java", "status": "added", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d95cce3c9ddcd26b93fe95f539c3380e2213ad5/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FStringReferenceCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d95cce3c9ddcd26b93fe95f539c3380e2213ad5/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FStringReferenceCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FStringReferenceCommandSet.java?ref=2d95cce3c9ddcd26b93fe95f539c3380e2213ad5", "patch": "@@ -0,0 +1,98 @@\n+/* StringReferenceCommandSet.java -- class to implement the StringReference\n+   Command Set\n+   Copyright (C) 2005 Free Software Foundation\n+ \n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.processor;\n+\n+import gnu.classpath.jdwp.Jdwp;\n+import gnu.classpath.jdwp.JdwpConstants;\n+import gnu.classpath.jdwp.exception.JdwpException;\n+import gnu.classpath.jdwp.exception.JdwpInternalErrorException;\n+import gnu.classpath.jdwp.exception.NotImplementedException;\n+import gnu.classpath.jdwp.id.ObjectId;\n+import gnu.classpath.jdwp.util.JdwpString;\n+\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+\n+/**\n+ * A class representing the StringReference Command Set.\n+ * \n+ * @author Aaron Luchko <aluchko@redhat.com>\n+ */\n+public class StringReferenceCommandSet implements CommandSet\n+{\n+\n+  public boolean runCommand(ByteBuffer bb, DataOutputStream os, byte command)\n+      throws JdwpException\n+  {\n+    try\n+      {\n+\n+        // Although there's only a single command to choose from we still use\n+        // a switch to maintain consistency with the rest of the CommandSets\n+        switch (command)\n+          {\n+          case JdwpConstants.CommandSet.StringReference.VALUE:\n+            executeValue(bb, os);\n+            break;\n+          default:\n+            throw new NotImplementedException(\"Command \" + command +\n+            \" not found in String Reference Command Set.\");\n+          }\n+      }\n+    catch (IOException ex)\n+      {\n+        // The DataOutputStream we're using isn't talking to a socket at all\n+        // So if we throw an IOException we're in serious trouble\n+        throw new JdwpInternalErrorException(ex);\n+      }\n+    return true;\n+  }\n+\n+  private void executeValue(ByteBuffer bb, DataOutputStream os)\n+      throws JdwpException, IOException\n+  {\n+    ObjectId oid = Jdwp.getIdManager().readId(bb);\n+\n+    String str = (String) oid.getObject();\n+    JdwpString.writeString(os, str);\n+  }\n+}"}]}