{"sha": "c4f4c60457d1657cbd72015de3d818eb6462a0e9", "node_id": "C_kwDOANBUbNoAKGM0ZjRjNjA0NTdkMTY1N2NiZDcyMDE1ZGUzZDgxOGViNjQ2MmEwZTk", "commit": {"author": {"name": "Frederik Harwath", "email": "frederik@codesourcery.com", "date": "2020-07-20T09:24:21Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-11-30T11:59:07Z"}, "message": "Re OpenACC \"gang reduction on an orphan loop\" error message\n\nFollow-up to preceding commit 2b7dac2c0dcb087da9e4018943c023c0678234a3\n\"Make OpenACC orphan gang reductions errors\".\n\n\tgcc/fortran/\n\t* openmp.c (oacc_is_parallel_or_serial): Evolve into...\n\t(oacc_is_compute_construct): ... this function.\n\t(resolve_oacc_loop_blocks): Use \"oacc_is_compute_construct\"\n\tinstead of \"oacc_is_parallel_or_serial\" for checking that a\n\tloop is not orphaned.\n\tgcc/testsuite/\n\t* gfortran.dg/goacc/orphan-reductions-3.f90: New test\n\tverifying that the \"gang reduction on an orphan loop\" error message\n\tis not emitted for non-orphaned loops.\n\t* c-c++-common/goacc/orphan-reductions-3.c: Likewise for C and C++.\n\nCo-Authored-By: Thomas Schwinge <thomas@codesourcery.com>", "tree": {"sha": "299f6d0e98fbd3b0ff6a975bc3862b44961c6b90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/299f6d0e98fbd3b0ff6a975bc3862b44961c6b90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4f4c60457d1657cbd72015de3d818eb6462a0e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4f4c60457d1657cbd72015de3d818eb6462a0e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4f4c60457d1657cbd72015de3d818eb6462a0e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4f4c60457d1657cbd72015de3d818eb6462a0e9/comments", "author": {"login": "frederik-h", "id": 22046314, "node_id": "MDQ6VXNlcjIyMDQ2MzE0", "avatar_url": "https://avatars.githubusercontent.com/u/22046314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frederik-h", "html_url": "https://github.com/frederik-h", "followers_url": "https://api.github.com/users/frederik-h/followers", "following_url": "https://api.github.com/users/frederik-h/following{/other_user}", "gists_url": "https://api.github.com/users/frederik-h/gists{/gist_id}", "starred_url": "https://api.github.com/users/frederik-h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frederik-h/subscriptions", "organizations_url": "https://api.github.com/users/frederik-h/orgs", "repos_url": "https://api.github.com/users/frederik-h/repos", "events_url": "https://api.github.com/users/frederik-h/events{/privacy}", "received_events_url": "https://api.github.com/users/frederik-h/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1a58ab0db20c0862e8b5039bd448fc8c9799cac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1a58ab0db20c0862e8b5039bd448fc8c9799cac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1a58ab0db20c0862e8b5039bd448fc8c9799cac"}], "stats": {"total": 200, "additions": 196, "deletions": 4}, "files": [{"sha": "7950c7fb43d667fc62da9813fc45b41b16e10721", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4f4c60457d1657cbd72015de3d818eb6462a0e9/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4f4c60457d1657cbd72015de3d818eb6462a0e9/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=c4f4c60457d1657cbd72015de3d818eb6462a0e9", "patch": "@@ -8341,9 +8341,11 @@ oacc_is_serial (gfc_code *code)\n }\n \n static bool\n-oacc_is_parallel_or_serial (gfc_code *code)\n+oacc_is_compute_construct (gfc_code *code)\n {\n-  return oacc_is_parallel (code) || oacc_is_serial (code);\n+  return (oacc_is_parallel (code)\n+\t  || oacc_is_kernels (code)\n+\t  || oacc_is_serial (code));\n }\n \n static gfc_statement\n@@ -8656,8 +8658,7 @@ resolve_oacc_loop_blocks (gfc_code *code)\n       for (c = omp_current_ctx; c; c = c->previous)\n \tif (!oacc_is_loop (c->code))\n \t  break;\n-      if (c == NULL || !(oacc_is_parallel_or_serial (c->code)\n-\t\t\t || oacc_is_kernels (c->code)))\n+      if (c == NULL || !(oacc_is_compute_construct (c->code)))\n \tgfc_error (\"gang reduction on an orphan loop at %L\", &code->loc);\n     }\n "}, {"sha": "cd8ad274ebb6cba27d6f3c1f1ce58670fb737238", "filename": "gcc/testsuite/c-c++-common/goacc/orphan-reductions-3.c", "status": "added", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4f4c60457d1657cbd72015de3d818eb6462a0e9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Forphan-reductions-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4f4c60457d1657cbd72015de3d818eb6462a0e9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Forphan-reductions-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Forphan-reductions-3.c?ref=c4f4c60457d1657cbd72015de3d818eb6462a0e9", "patch": "@@ -0,0 +1,102 @@\n+/* Verify that the error message for gang reduction on orphaned OpenACC loops\n+   is not reported for non-orphaned loops. */\n+\n+/* { dg-additional-options \"-Wopenacc-parallelism\" } */\n+\n+int\n+kernels (int n)\n+{\n+  int i, s1 = 0, s2 = 0;\n+#pragma acc kernels\n+  {\n+#pragma acc loop gang reduction(+:s1) /* { dg-bogus \"gang reduction on an orphan loop\" } */\n+  for (i = 0; i < n; i++)\n+    s1 = s1 + 2;\n+\n+#pragma acc loop gang reduction(+:s2) /* { dg-bogus \"gang reduction on an orphan loop\" } */\n+  for (i = 0; i < n; i++)\n+    s2 = s2 + 2;\n+  }\n+  return s1 + s2;\n+}\n+\n+int\n+parallel (int n)\n+{\n+  int i, s1 = 0, s2 = 0;\n+#pragma acc parallel\n+  {\n+#pragma acc loop gang reduction(+:s1) /* { dg-bogus \"gang reduction on an orphan loop\" } */\n+  for (i = 0; i < n; i++)\n+    s1 = s1 + 2;\n+\n+#pragma acc loop gang reduction(+:s2) /* { dg-bogus \"gang reduction on an orphan loop\" } */\n+  for (i = 0; i < n; i++)\n+    s2 = s2 + 2;\n+  }\n+  return s1 + s2;\n+}\n+\n+int\n+serial (int n)\n+{\n+  int i, s1 = 0, s2 = 0;\n+#pragma acc serial /* { dg-warning \"region contains gang partitioned code but is not gang partitioned\" } */\n+  {\n+#pragma acc loop gang reduction(+:s1) /* { dg-bogus \"gang reduction on an orphan loop\" } */\n+  for (i = 0; i < n; i++)\n+    s1 = s1 + 2;\n+\n+#pragma acc loop gang reduction(+:s2) /* { dg-bogus \"gang reduction on an orphan loop\" } */\n+  for (i = 0; i < n; i++)\n+    s2 = s2 + 2;\n+  }\n+  return s1 + s2;\n+}\n+\n+int\n+serial_combined (int n)\n+{\n+  int i, s1 = 0, s2 = 0;\n+#pragma acc serial loop gang reduction(+:s1) /* { dg-bogus \"gang reduction on an orphan loop\" } */\n+  /* { dg-warning \"region contains gang partitioned code but is not gang partitioned\" \"\" { target *-*-* } .-1 } */\n+  for (i = 0; i < n; i++)\n+    s1 = s1 + 2;\n+\n+#pragma acc serial loop gang reduction(+:s2) /* { dg-bogus \"gang reduction on an orphan loop\" } */\n+  /* { dg-warning \"region contains gang partitioned code but is not gang partitioned\" \"\" { target *-*-* } .-1 } */\n+  for (i = 0; i < n; i++)\n+    s2 = s2 + 2;\n+\n+  return s1 + s2;\n+}\n+\n+int\n+parallel_combined (int n)\n+{\n+  int i, s1 = 0, s2 = 0;\n+#pragma acc parallel loop gang reduction(+:s1) /* { dg-bogus \"gang reduction on an orphan loop\" } */\n+  for (i = 0; i < n; i++)\n+    s1 = s1 + 2;\n+\n+#pragma acc parallel loop gang reduction(+:s2) /* { dg-bogus \"gang reduction on an orphan loop\" } */\n+  for (i = 0; i < n; i++)\n+    s2 = s2 + 2;\n+\n+  return s1 + s2;\n+}\n+\n+int\n+kernels_combined (int n)\n+{\n+  int i, s1 = 0, s2 = 0;\n+#pragma acc kernels loop gang reduction(+:s1) /* { dg-bogus \"gang reduction on an orphan loop\" } */\n+  for (i = 0; i < n; i++)\n+    s1 = s1 + 2;\n+\n+#pragma acc kernels loop gang reduction(+:s2) /* { dg-bogus \"gang reduction on an orphan loop\" } */\n+  for (i = 0; i < n; i++)\n+    s2 = s2 + 2;\n+\n+  return s1 + s2;\n+}"}, {"sha": "1e0b1d64578c937212579987a9ca749017075c03", "filename": "gcc/testsuite/gfortran.dg/goacc/orphan-reductions-3.f90", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4f4c60457d1657cbd72015de3d818eb6462a0e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Forphan-reductions-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4f4c60457d1657cbd72015de3d818eb6462a0e9/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Forphan-reductions-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Forphan-reductions-3.f90?ref=c4f4c60457d1657cbd72015de3d818eb6462a0e9", "patch": "@@ -0,0 +1,89 @@\n+! Verify that the error message for gang reductions on orphaned OpenACC loops\n+! is not reported for non-orphaned loops.\n+\n+! { dg-additional-options \"-Wopenacc-parallelism\" }\n+\n+subroutine kernels\n+  implicit none\n+\n+  integer, parameter :: n = 100\n+  integer :: i, sum\n+  sum = 0\n+\n+  !$acc kernels\n+  !$acc loop gang reduction(+:sum) ! { dg-bogus \"gang reduction on an orphan loop\" }\n+  do i = 1, n\n+     sum = sum + 1\n+  end do\n+  !$acc end kernels\n+end subroutine kernels\n+\n+subroutine parallel\n+  implicit none\n+\n+  integer, parameter :: n = 100\n+  integer :: i, sum\n+  sum = 0\n+\n+  !$acc parallel\n+  !$acc loop gang reduction(+:sum) ! { dg-bogus \"gang reduction on an orphan loop\" }\n+  do i = 1, n\n+     sum = sum + 1\n+  end do\n+  !$acc end parallel\n+end subroutine parallel\n+\n+subroutine serial\n+  implicit none\n+\n+  integer, parameter :: n = 100\n+  integer :: i, sum\n+  sum = 0\n+\n+  !$acc serial ! { dg-warning \"region contains gang partitioned code but is not gang partitioned\" }\n+  !$acc loop gang reduction(+:sum) ! { dg-bogus \"gang reduction on an orphan loop\" }\n+  do i = 1, n\n+     sum = sum + 1\n+  end do\n+  !$acc end serial\n+end subroutine serial\n+\n+subroutine kernels_combined\n+  implicit none\n+\n+  integer, parameter :: n = 100\n+  integer :: i, sum\n+  sum = 0\n+\n+  !$acc kernels loop gang reduction(+:sum) ! { dg-bogus \"gang reduction on an orphan loop\" }\n+  do i = 1, n\n+     sum = sum + 1\n+  end do\n+end subroutine kernels_combined\n+\n+subroutine parallel_combined\n+  implicit none\n+\n+  integer, parameter :: n = 100\n+  integer :: i, sum\n+  sum = 0\n+\n+  !$acc parallel loop gang reduction(+:sum) ! { dg-bogus \"gang reduction on an orphan loop\" }\n+  do i = 1, n\n+     sum = sum + 1\n+  end do\n+end subroutine parallel_combined\n+\n+subroutine serial_combined\n+  implicit none\n+\n+  integer, parameter :: n = 100\n+  integer :: i, sum\n+  sum = 0\n+\n+  !$acc serial loop gang reduction(+:sum) ! { dg-bogus \"gang reduction on an orphan loop\" }\n+  ! { dg-warning \"region contains gang partitioned code but is not gang partitioned\" \"\" { target *-*-* } .-1 }\n+  do i = 1, n\n+     sum = sum + 1\n+  end do\n+end subroutine serial_combined"}]}