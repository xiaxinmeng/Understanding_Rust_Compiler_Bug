{"sha": "0fa221685a36ef98cb20a6d435a150b5992e99e0", "node_id": "C_kwDOANBUbNoAKDBmYTIyMTY4NWEzNmVmOThjYjIwYTZkNDM1YTE1MGI1OTkyZTk5ZTA", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-01-25T00:17:57Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-01-25T00:17:57Z"}, "message": "Daily bump.", "tree": {"sha": "0dda946609b23d59cecc62a627eff3d4db3f9176", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dda946609b23d59cecc62a627eff3d4db3f9176"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fa221685a36ef98cb20a6d435a150b5992e99e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fa221685a36ef98cb20a6d435a150b5992e99e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fa221685a36ef98cb20a6d435a150b5992e99e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fa221685a36ef98cb20a6d435a150b5992e99e0/comments", "author": null, "committer": null, "parents": [{"sha": "e00d5cafbe1a77772ecc57eec921ff0b7dd41344", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e00d5cafbe1a77772ecc57eec921ff0b7dd41344", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e00d5cafbe1a77772ecc57eec921ff0b7dd41344"}], "stats": {"total": 283, "additions": 282, "deletions": 1}, "files": [{"sha": "8fd73353a25f8b6ba0e4d99e773f30eb8f3700dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fa221685a36ef98cb20a6d435a150b5992e99e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fa221685a36ef98cb20a6d435a150b5992e99e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0fa221685a36ef98cb20a6d435a150b5992e99e0", "patch": "@@ -1,3 +1,73 @@\n+2023-01-24  Takayuki 'January June' Suwa  <jjsuwa_sys3175@yahoo.co.jp>\n+\n+\t* config/xtensa/xtensa.md:\n+\tFix exit from loops detecting references before overwriting in the\n+\tsplit pattern.\n+\n+2023-01-24  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\t* lra-constraints.cc (get_hard_regno): Remove final_p arg.  Always\n+\tdo elimination but only for hard register.\n+\t(operands_match_p, uses_hard_regs_p, process_alt_operands): Adjust\n+\tcalls of get_hard_regno.\n+\n+2023-01-24  Stefan Schulze Frielinghaus  <stefansf@linux.ibm.com>\n+\n+\t* config/s390/s390-d.cc (s390_d_target_versions): Fix detection\n+\tof CPU version.\n+\n+2023-01-24  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\tPR target/108177\n+\t* config/arm/mve.md (mve_vstrbq_p_<supf><mode>, mve_vstrhq_p_fv8hf,\n+\tmve_vstrhq_p_<supf><mode>, mve_vstrwq_p_<supf>v4si): Add memory operand\n+\tas input operand.\n+\n+2023-01-24  Xianmiao Qu  <cooper.qu@linux.alibaba.com>\n+\n+\t* config.gcc(csky-*-linux*): Define CSKY_ENABLE_MULTILIB\n+\tand only include 'csky/t-csky-linux' when enable multilib.\n+\t* config/csky/csky-linux-elf.h(SYSROOT_SUFFIX_SPEC): Don't\n+\tdefine it when disable multilib.\n+\n+2023-01-24  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/108500\n+\t* dominance.h (calculate_dominance_info): Add parameter\n+\tto indicate fast-query compute, defaulted to true.\n+\t* dominance.cc (calculate_dominance_info): Honor\n+\tfast-query compute parameter.\n+\t* tree-cfgcleanup.cc (cleanup_tree_cfg_noloop): Do\n+\tnot compute the dominator fast-query DFS numbers.\n+\n+2023-01-24  Eric Biggers  <ebiggers@google.com>\n+\n+\tPR bootstrap/90543\n+\t* optc-save-gen.awk: Fix copy-and-paste error.\n+\n+2023-01-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/108474\n+\t* cgraphbuild.cc: Include gimplify.h.\n+\t(record_reference): Replace VAR_DECLs with DECL_HAS_VALUE_EXPR_P with\n+\ttheir corresponding DECL_VALUE_EXPR expressions after unsharing.\n+\n+2023-01-24  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n+\n+\tPR target/108505\n+\t* config.gcc (tm_file): Move the variable out of loop.\n+\n+2023-01-24  Lulu Cheng  <chenglulu@loongson.cn>\n+\t    Yang Yujie  <yangyujie@loongson.cn>\n+\n+\tPR target/107731\n+\t* config/loongarch/loongarch.cc (loongarch_classify_address):\n+\tAdd precessint for CONST_INT.\n+\t(loongarch_print_operand_reloc): Operand modifier 'c' is supported.\n+\t(loongarch_print_operand): Increase the processing of '%c'.\n+\t* doc/extend.texi: Adds documents for LoongArch operand modifiers.\n+\tAnd port the public operand modifiers information to this document.\n+\n 2023-01-23  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n \n \t* doc/invoke.texi (-mbranch-protection): Update documentation."}, {"sha": "e26ffa6a16ccc9cb95c8e45eb370bc1153d7cbbf", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fa221685a36ef98cb20a6d435a150b5992e99e0/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fa221685a36ef98cb20a6d435a150b5992e99e0/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=0fa221685a36ef98cb20a6d435a150b5992e99e0", "patch": "@@ -1 +1 @@\n-20230124\n+20230125"}, {"sha": "53e9949440844d468fe6ecf48ae28c5b7ac9589f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fa221685a36ef98cb20a6d435a150b5992e99e0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fa221685a36ef98cb20a6d435a150b5992e99e0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0fa221685a36ef98cb20a6d435a150b5992e99e0", "patch": "@@ -1,3 +1,27 @@\n+2023-01-24  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/108504\n+\t* parser.cc (cp_lexer_new_main): Pass C_LEX_STRING_NO_JOIN for first\n+\ttoken, too.\n+\n+2023-01-24  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/108526\n+\t* pt.cc (tsubst_function_decl): Handle static lambda.\n+\n+2023-01-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/108474\n+\t* cp-gimplify.cc (cp_fold_r): Revert 2023-01-19 changes.\n+\n+2023-01-24  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/107303\n+\tPR c++/107329\n+\t* cp-gimplify.cc (cp_fold_r) [TARGET_EXPR]: In case of double\n+\tTARGET_EXPR, keep the outer one instead of the inner one.\n+\t(maybe_replace_decl): New.\n+\n 2023-01-23  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/107267"}, {"sha": "bd9ecfda4254c42222065df3b42a87e6898384dc", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fa221685a36ef98cb20a6d435a150b5992e99e0/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fa221685a36ef98cb20a6d435a150b5992e99e0/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0fa221685a36ef98cb20a6d435a150b5992e99e0", "patch": "@@ -1,3 +1,9 @@\n+2023-01-24  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/108529\n+\t* simplify.cc (simplify_transformation): Do not try to simplify\n+\ttransformational intrinsic when the ARRAY argument has a NULL shape.\n+\n 2023-01-23  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/108502"}, {"sha": "07ab75d1ffca4ed0c2567e0342d4b6868c30f4eb", "filename": "gcc/m2/ChangeLog", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fa221685a36ef98cb20a6d435a150b5992e99e0/gcc%2Fm2%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fa221685a36ef98cb20a6d435a150b5992e99e0/gcc%2Fm2%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FChangeLog?ref=0fa221685a36ef98cb20a6d435a150b5992e99e0", "patch": "@@ -1,3 +1,58 @@\n+2023-01-24  Co-Authored by: Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* Make-lang.in (GM2-COMP-BOOT-DEFS): Add\n+\tDynamicStringPath.def.\n+\t(GM2-COMP-BOOT-MODS): Add DynamicStringPath.mod.\n+\t(GM2-COMP-DEFS): Add DynamicStringPath.def.\n+\t(GM2-COMP-MODS): Add DynamicStringPath.mod.\n+\t($(objdir)/m2/gm2-libs-min/SYSTEM.def): Split path into\n+\tmultiple -I components.\n+\t($(objdir)/m2/gm2-libs/SYSTEM.def): Ditto.\n+\t($(objdir)/m2/gm2-libs-coroutines/SYSTEM.def): Ditto.\n+\t* gm2-compiler/M2Options.mod: Import DynamicStringPath.\n+\t(SetSearchPath): Reimplement using DynamicStringPath\n+\tprocedures.\n+\t* gm2-compiler/M2Search.def (InitSearchPath): Remove.\n+\t(PrependSearchPath): Remove.\n+\t* gm2-compiler/M2Search.mod (SFIO): Remove import.\n+\t(DynamicStringPath): Add import.\n+\t(Directory): Remove.\n+\t(UserPath): Remove.\n+\t(InitialPath): Remove.\n+\t(InitSearchPath): Remove.\n+\t(PrependSearchPath): Remove.\n+\t(FindSourceFile): Re-implement.\n+\t(FindSourceDefFile): Re-implement.\n+\t(FindSourceModFile): Re-implement.\n+\t* gm2-gcc/init.cc (_M2_DynamicStringPath_init):\n+\tNew prototype.\n+\t(init_FrontEndInit): Call _M2_DynamicStringPath_init.\n+\t* tools-src/makeSystem: Allow multiple -I paths.\n+\t* gm2-compiler/DynamicStringPath.def: New file.\n+\t* gm2-compiler/DynamicStringPath.mod: New file.\n+\t* gm2-gcc/m2options.h (M2Options_SetMakeIncludePath): Add\n+\tprototype.\n+\n+2023-01-24  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* m2.flex (cpreprocessor): Add temporary variable\n+\twhich is initialized to 0.\n+\t(commentCLevel): New variable.\n+\t(endOfCComment): New function.\n+\t(splitSlashStar): New function to split /* into / and *\n+\ttokens.\n+\t(COMMENTC): New flex state.\n+\t(\"/*\"): New rule to test whether we should treat /*\n+\tas a single token or as two tokens.\n+\t(<COMMENTC>.): New rule to skip a character.\n+\t(<COMMENTC>\\n.*): New rule to consume the line.\n+\t(<COMMENTC>\"*/\"): New rule to call endOfCComment.\n+\n+2023-01-24  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* gm2-libs-iso/RTco.def: Import RTentity.\n+\tDeclare RTco as a definition for C module.\n+\n 2023-01-23  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR modula2/108182"}, {"sha": "dd07af37159e7fe565407591c1d52e5509cd0e3e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fa221685a36ef98cb20a6d435a150b5992e99e0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fa221685a36ef98cb20a6d435a150b5992e99e0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0fa221685a36ef98cb20a6d435a150b5992e99e0", "patch": "@@ -1,3 +1,100 @@\n+2023-01-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/107329\n+\tPR testsuite/108533\n+\t* g++.dg/init/new51.C (size_t): New typedef.\n+\t(RexxClass::operator new, RexxClass::operator delete): Use size_t\n+\tinstead of unsigned long.\n+\n+2023-01-24  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/108504\n+\t* g++.dg/ext/pragma1.C: New test.\n+\n+2023-01-24  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/108526\n+\t* g++.dg/cpp23/static-operator-call5.C: New test.\n+\n+2023-01-24  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\t* gcc.target/pdp11/pdp11.exp: New.\n+\t* gcc.target/pdp11/pr108388.c: New.\n+\n+2023-01-24  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/108529\n+\t* gfortran.dg/pr108529.f90: New test.\n+\n+2023-01-24  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* gcc.target/arm/mve/pr108177-1-run.c: New test.\n+\t* gcc.target/arm/mve/pr108177-1.c: New test.\n+\t* gcc.target/arm/mve/pr108177-10-run.c: New test.\n+\t* gcc.target/arm/mve/pr108177-10.c: New test.\n+\t* gcc.target/arm/mve/pr108177-11-run.c: New test.\n+\t* gcc.target/arm/mve/pr108177-11.c: New test.\n+\t* gcc.target/arm/mve/pr108177-12-run.c: New test.\n+\t* gcc.target/arm/mve/pr108177-12.c: New test.\n+\t* gcc.target/arm/mve/pr108177-13-run.c: New test.\n+\t* gcc.target/arm/mve/pr108177-13.c: New test.\n+\t* gcc.target/arm/mve/pr108177-14-run.c: New test.\n+\t* gcc.target/arm/mve/pr108177-14.c: New test.\n+\t* gcc.target/arm/mve/pr108177-2-run.c: New test.\n+\t* gcc.target/arm/mve/pr108177-2.c: New test.\n+\t* gcc.target/arm/mve/pr108177-3-run.c: New test.\n+\t* gcc.target/arm/mve/pr108177-3.c: New test.\n+\t* gcc.target/arm/mve/pr108177-4-run.c: New test.\n+\t* gcc.target/arm/mve/pr108177-4.c: New test.\n+\t* gcc.target/arm/mve/pr108177-5-run.c: New test.\n+\t* gcc.target/arm/mve/pr108177-5.c: New test.\n+\t* gcc.target/arm/mve/pr108177-6-run.c: New test.\n+\t* gcc.target/arm/mve/pr108177-6.c: New test.\n+\t* gcc.target/arm/mve/pr108177-7-run.c: New test.\n+\t* gcc.target/arm/mve/pr108177-7.c: New test.\n+\t* gcc.target/arm/mve/pr108177-8-run.c: New test.\n+\t* gcc.target/arm/mve/pr108177-8.c: New test.\n+\t* gcc.target/arm/mve/pr108177-9-run.c: New test.\n+\t* gcc.target/arm/mve/pr108177-9.c: New test.\n+\t* gcc.target/arm/mve/pr108177-main.x: New test include.\n+\t* gcc.target/arm/mve/pr108177.x: New test include.\n+\n+2023-01-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/108474\n+\t* g++.dg/cpp1z/decomp57.C: New test.\n+\t* g++.dg/cpp1z/decomp58.C: New test.\n+\n+2023-01-24  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR testsuite/107808\n+\t* gcc.dg/vect/vect-bitfield-write-2.c: Require vect_long_long.\n+\t* gcc.dg/vect/vect-bitfield-write-3.c: Likewise.\n+\n+2023-01-24  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR testsuite/104756\n+\t* gcc.dg/vect/vect-fmax-1.c: Require vect_float.\n+\t* gcc.dg/vect/vect-fmax-2.c: Likewise.\n+\t* gcc.dg/vect/vect-fmax-3.c: Likewise.\n+\t* gcc.dg/vect/vect-fmin-1.c: Likewise.\n+\t* gcc.dg/vect/vect-fmin-2.c: Likewise.\n+\t* gcc.dg/vect/vect-fmin-3.c: Likewise.\n+\n+2023-01-24  Lulu Cheng  <chenglulu@loongson.cn>\n+\t    Yang Yujie  <yangyujie@loongson.cn>\n+\n+\tPR target/107731\n+\t* gcc.target/loongarch/tst-asm-const.c: Moved to...\n+\t* gcc.target/loongarch/pr107731.c: ...here.\n+\n+2023-01-24  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/107303\n+\tPR c++/107329\n+\t* g++.dg/ext/builtin-shufflevector-5.C: New test.\n+\t* g++.dg/init/new51.C: New test.\n+\n 2023-01-23  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/107267"}, {"sha": "f7709dc6adafbaaf938735a1789f32cfa82bfe2e", "filename": "libgm2/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fa221685a36ef98cb20a6d435a150b5992e99e0/libgm2%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fa221685a36ef98cb20a6d435a150b5992e99e0/libgm2%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgm2%2FChangeLog?ref=0fa221685a36ef98cb20a6d435a150b5992e99e0", "patch": "@@ -1,3 +1,15 @@\n+2023-01-24  Co-Authored by: Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* libm2cor/Makefile.am (SYSTEM.def): Split path into\n+\tmultiple -I components.\n+\t* libm2cor/Makefile.in: Rebuild.\n+\t* libm2min/Makefile.am (SYSTEM.def): Split path into\n+\tmultiple -I components.\n+\t* libm2min/Makefile.in: Rebuild.\n+\t* libm2iso/Makefile.am (SYSTEM.def): Split path into\n+\tmultiple -I components.\n+\t* libm2iso/Makefile.in: Rebuild.\n+\n 2023-01-23  Richard Biener  <rguenther@suse.de>\n \n \tPR modula2/108144"}, {"sha": "36618a4ba8ae0e74cccc8e5282002d8311e3ac68", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fa221685a36ef98cb20a6d435a150b5992e99e0/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fa221685a36ef98cb20a6d435a150b5992e99e0/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0fa221685a36ef98cb20a6d435a150b5992e99e0", "patch": "@@ -1,3 +1,20 @@\n+2023-01-24  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/108530\n+\t* src/c++20/tzdb.cc (current_zone): Look for DEFAULT_TIMEZONE in\n+\t/etc/sysconfig/clock.\n+\n+2023-01-24  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/102301\n+\t* include/bits/ranges_base.h: Include <bits/stl_iterator.h> for\n+\tstd::make_reverse_iterator.\n+\t* include/std/tuple: Include <bits/ranges_util.h> for subrange.\n+\t(make_from_tuple): Add static assertion from P2255 to diagnose\n+\tdangling references.\n+\t* testsuite/20_util/tuple/make_from_tuple/dangling_ref.cc: New test.\n+\t* testsuite/20_util/tuple/make_from_tuple/tuple_like.cc: New test.\n+\n 2023-01-23  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* include/debug/safe_iterator.h (_Safe_iterator<>::_Unchecked): New."}]}