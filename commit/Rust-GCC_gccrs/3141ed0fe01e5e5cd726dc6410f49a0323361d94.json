{"sha": "3141ed0fe01e5e5cd726dc6410f49a0323361d94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzE0MWVkMGZlMDFlNWU1Y2Q3MjZkYzY0MTBmNDlhMDMyMzM2MWQ5NA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2005-11-29T18:34:58Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-11-29T18:34:58Z"}, "message": "re PR java/18278 (JNI functions cannot return a weak reference)\n\ngcc/java:\n\tPR java/18278:\n\t* expr.c (build_jni_stub): Unwrap the return value.\n\t* java-tree.h (soft_unwrapjni_node): New define.\n\t(enum java_tree_index): Added JTI_SOFT_UNWRAPJNI_NODE.\n\t* decl.c (java_init_decl_processing): Initialize\n\tsoft_unwrapjni_node.\nlibjava:\n\tPR java/18278:\n\t* testsuite/libjava.jni/pr18278.out: New file.\n\t* testsuite/libjava.jni/pr18278.c: New file.\n\t* testsuite/libjava.jni/pr18278.java: New file.\n\t* include/jvm.h (_Jv_UnwrapJNIweakReference): Declare.\n\t* jni.cc (_Jv_UnwrapJNIweakReference): New function.\n\t(call): Unwrap return value if needed.\n\nFrom-SVN: r107676", "tree": {"sha": "5ba6f0f10a37c9d1c36de0493f0563ef6f583cad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ba6f0f10a37c9d1c36de0493f0563ef6f583cad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3141ed0fe01e5e5cd726dc6410f49a0323361d94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3141ed0fe01e5e5cd726dc6410f49a0323361d94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3141ed0fe01e5e5cd726dc6410f49a0323361d94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3141ed0fe01e5e5cd726dc6410f49a0323361d94/comments", "author": null, "committer": null, "parents": [{"sha": "4311c8e54c31efed7aa9aaef244a4ac93fbf96d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4311c8e54c31efed7aa9aaef244a4ac93fbf96d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4311c8e54c31efed7aa9aaef244a4ac93fbf96d2"}], "stats": {"total": 81, "additions": 79, "deletions": 2}, "files": [{"sha": "a8309728abc3f5b40366732ccec359ca0b2338a5", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3141ed0fe01e5e5cd726dc6410f49a0323361d94/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3141ed0fe01e5e5cd726dc6410f49a0323361d94/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=3141ed0fe01e5e5cd726dc6410f49a0323361d94", "patch": "@@ -1,3 +1,12 @@\n+2005-11-28  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR java/18278:\n+\t* expr.c (build_jni_stub): Unwrap the return value.\n+\t* java-tree.h (soft_unwrapjni_node): New define.\n+\t(enum java_tree_index): Added JTI_SOFT_UNWRAPJNI_NODE.\n+\t* decl.c (java_init_decl_processing): Initialize\n+\tsoft_unwrapjni_node.\n+\n 2005-11-24  Bryce McKinlay  <mckinlay@redhat.com>\n \n         * gcj.texi (gij options): Add -Xss documentation."}, {"sha": "21488ff53546ca023e372262d39e161af5a32ba2", "filename": "gcc/java/decl.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3141ed0fe01e5e5cd726dc6410f49a0323361d94/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3141ed0fe01e5e5cd726dc6410f49a0323361d94/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=3141ed0fe01e5e5cd726dc6410f49a0323361d94", "patch": "@@ -1169,6 +1169,12 @@ java_init_decl_processing (void)\n \t\t\tbuild_function_type (void_type_node, t),\n \t\t\t0, NOT_BUILT_IN, NULL, NULL_TREE);\n \n+  t = tree_cons (NULL_TREE, object_ptr_type_node, endlink);\n+  soft_unwrapjni_node\n+    = builtin_function (\"_Jv_UnwrapJNIweakReference\",\n+\t\t\tbuild_function_type (object_ptr_type_node, t),\n+\t\t\t0, NOT_BUILT_IN, NULL, NULL_TREE);\n+\n   t = tree_cons (NULL_TREE, int_type_node,\n \t\t tree_cons (NULL_TREE, int_type_node, endlink));\n   soft_idiv_node"}, {"sha": "4c2f3f48b896fcf34bb0359e152e35dcb47a2f31", "filename": "gcc/java/expr.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3141ed0fe01e5e5cd726dc6410f49a0323361d94/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3141ed0fe01e5e5cd726dc6410f49a0323361d94/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=3141ed0fe01e5e5cd726dc6410f49a0323361d94", "patch": "@@ -2558,8 +2558,17 @@ build_jni_stub (tree method)\n   /* If the JNI call returned a result, capture it here.  If we had to\n      unwrap JNI object results, we would do that here.  */\n   if (res_var != NULL_TREE)\n-    call = build2 (MODIFY_EXPR, TREE_TYPE (TREE_TYPE (method)),\n-\t\t   res_var, call);\n+    {\n+      /* If the call returns an object, it may return a JNI weak\n+\t reference, in which case we must unwrap it.  */\n+      if (! JPRIMITIVE_TYPE_P (TREE_TYPE (TREE_TYPE (method))))\n+\tcall = build3 (CALL_EXPR, TREE_TYPE (TREE_TYPE (method)),\n+\t\t       build_address_of (soft_unwrapjni_node),\n+\t\t       build_tree_list (NULL_TREE, call),\n+\t\t       NULL_TREE);\n+      call = build2 (MODIFY_EXPR, TREE_TYPE (TREE_TYPE (method)),\n+\t\t     res_var, call);\n+    }\n \n   TREE_SIDE_EFFECTS (call) = 1;\n   CAN_COMPLETE_NORMALLY (call) = 1;"}, {"sha": "d3371318960688fa8860adfe6dd658a89cd6d793", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3141ed0fe01e5e5cd726dc6410f49a0323361d94/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3141ed0fe01e5e5cd726dc6410f49a0323361d94/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=3141ed0fe01e5e5cd726dc6410f49a0323361d94", "patch": "@@ -394,6 +394,7 @@ enum java_tree_index\n   JTI_SOFT_LOOKUPJNIMETHOD_NODE,\n   JTI_SOFT_GETJNIENVNEWFRAME_NODE,\n   JTI_SOFT_JNIPOPSYSTEMFRAME_NODE,\n+  JTI_SOFT_UNWRAPJNI_NODE,\n   JTI_SOFT_FMOD_NODE,\n   JTI_SOFT_IDIV_NODE,\n   JTI_SOFT_IREM_NODE,\n@@ -663,6 +664,8 @@ extern GTY(()) tree java_global_trees[JTI_MAX];\n   java_global_trees[JTI_SOFT_GETJNIENVNEWFRAME_NODE]\n #define soft_jnipopsystemframe_node \\\n   java_global_trees[JTI_SOFT_JNIPOPSYSTEMFRAME_NODE]\n+#define soft_unwrapjni_node \\\n+  java_global_trees[JTI_SOFT_UNWRAPJNI_NODE]\n #define soft_fmod_node \\\n   java_global_trees[JTI_SOFT_FMOD_NODE]\n #define soft_idiv_node \\"}, {"sha": "2d88d05c1c2bd4053f184a1d5ccd49a29e7e287a", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3141ed0fe01e5e5cd726dc6410f49a0323361d94/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3141ed0fe01e5e5cd726dc6410f49a0323361d94/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=3141ed0fe01e5e5cd726dc6410f49a0323361d94", "patch": "@@ -1,3 +1,13 @@\n+2005-11-28  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR java/18278:\n+\t* testsuite/libjava.jni/pr18278.out: New file.\n+\t* testsuite/libjava.jni/pr18278.c: New file.\n+\t* testsuite/libjava.jni/pr18278.java: New file.\n+\t* include/jvm.h (_Jv_UnwrapJNIweakReference): Declare.\n+\t* jni.cc (_Jv_UnwrapJNIweakReference): New function.\n+\t(call): Unwrap return value if needed.\n+\n 2005-11-25  Mark Wielaard  <mark@klomp.org>\n \n \t* standard.omit.in: Remove javax/rmi, org/omg, gnu/CORBA and"}, {"sha": "8d3405947d2f32eb80fbbc7517430d050271ce8a", "filename": "libjava/include/jvm.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3141ed0fe01e5e5cd726dc6410f49a0323361d94/libjava%2Finclude%2Fjvm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3141ed0fe01e5e5cd726dc6410f49a0323361d94/libjava%2Finclude%2Fjvm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjvm.h?ref=3141ed0fe01e5e5cd726dc6410f49a0323361d94", "patch": "@@ -459,6 +459,8 @@ extern \"C\" void _Jv_RegisterClasses_Counted (const jclass *classes,\n extern \"C\" void _Jv_RegisterResource (void *vptr);\n extern void _Jv_UnregisterClass (_Jv_Utf8Const*, java::lang::ClassLoader*);\n \n+extern \"C\" jobject _Jv_UnwrapJNIweakReference (jobject);\n+\n extern jclass _Jv_FindClass (_Jv_Utf8Const *name,\n \t\t\t     java::lang::ClassLoader *loader);\n extern jclass _Jv_FindClassFromSignature (char *,"}, {"sha": "fd8270657188988c3f86779d900209a429246fe8", "filename": "libjava/jni.cc", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3141ed0fe01e5e5cd726dc6410f49a0323361d94/libjava%2Fjni.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3141ed0fe01e5e5cd726dc6410f49a0323361d94/libjava%2Fjni.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni.cc?ref=3141ed0fe01e5e5cd726dc6410f49a0323361d94", "patch": "@@ -226,6 +226,12 @@ unwrap (T *obj)\n   return reinterpret_cast<T *> (wr->get ());\n }\n \n+jobject\n+_Jv_UnwrapJNIweakReference (jobject obj)\n+{\n+  return unwrap (obj);\n+}\n+\n \f\n \n static jobject JNICALL\n@@ -2304,6 +2310,13 @@ _Jv_JNIMethod::call (ffi_cif *, void *ret, ffi_raw *args, void *__this)\n \t\t     ret, real_args);\n #endif\n \n+  // We might need to unwrap a JNI weak reference here.\n+  if (_this->jni_cif.rtype == &ffi_type_pointer)\n+    {\n+      _Jv_value *val = (_Jv_value *) ret;\n+      val->object_value = unwrap (val->object_value);\n+    }\n+\n   if (sync != NULL)\n     _Jv_MonitorExit (sync);\n "}, {"sha": "7ca73a4306284f7a6c6bb308d49568adefe54d55", "filename": "libjava/testsuite/libjava.jni/pr18278.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3141ed0fe01e5e5cd726dc6410f49a0323361d94/libjava%2Ftestsuite%2Flibjava.jni%2Fpr18278.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3141ed0fe01e5e5cd726dc6410f49a0323361d94/libjava%2Ftestsuite%2Flibjava.jni%2Fpr18278.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Fpr18278.c?ref=3141ed0fe01e5e5cd726dc6410f49a0323361d94", "patch": "@@ -0,0 +1,10 @@\n+#include <jni.h>\n+#include <stdio.h>\n+\n+#include \"pr18278.h\"\n+\n+jobject Java_pr18278_weakRef(JNIEnv *env, jclass cls, jobject data)\n+{\n+  jobject r =  (* env)->NewWeakGlobalRef(env, data);\n+  return r;\n+}"}, {"sha": "8a39ddebf4d3e3307f5b1fc67864c3f083f5ab4b", "filename": "libjava/testsuite/libjava.jni/pr18278.java", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3141ed0fe01e5e5cd726dc6410f49a0323361d94/libjava%2Ftestsuite%2Flibjava.jni%2Fpr18278.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3141ed0fe01e5e5cd726dc6410f49a0323361d94/libjava%2Ftestsuite%2Flibjava.jni%2Fpr18278.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Fpr18278.java?ref=3141ed0fe01e5e5cd726dc6410f49a0323361d94", "patch": "@@ -0,0 +1,13 @@\n+public class pr18278 {\n+    public pr18278() {}\n+\n+    public static void main(String[] args) {\n+        System.loadLibrary(\"pr18278\");\n+\tString bob = \"Bob\";\n+\tObject o = weakRef(\"Bob\");\n+\tSystem.out.println(o);\n+\tSystem.out.println(bob == o);\n+    }\n+\n+    static native Object weakRef(Object o);\n+}"}, {"sha": "e01142a4a2f12d9834192eb19a21458b99151edd", "filename": "libjava/testsuite/libjava.jni/pr18278.out", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3141ed0fe01e5e5cd726dc6410f49a0323361d94/libjava%2Ftestsuite%2Flibjava.jni%2Fpr18278.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3141ed0fe01e5e5cd726dc6410f49a0323361d94/libjava%2Ftestsuite%2Flibjava.jni%2Fpr18278.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Fpr18278.out?ref=3141ed0fe01e5e5cd726dc6410f49a0323361d94", "patch": "@@ -0,0 +1,2 @@\n+Bob\n+true"}]}