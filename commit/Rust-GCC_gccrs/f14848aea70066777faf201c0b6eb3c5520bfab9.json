{"sha": "f14848aea70066777faf201c0b6eb3c5520bfab9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE0ODQ4YWVhNzAwNjY3NzdmYWYyMDFjMGI2ZWIzYzU1MjBiZmFiOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-05-06T07:31:19Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-05-06T07:31:19Z"}, "message": "combine: Don't replace SET_SRC with REG_EQUAL note content if SET_SRC has side-effects [PR94873]\n\nThere were some discussions about whether REG_EQUAL notes are valid on insns with a single\nset which contains auto-inc-dec side-effects in the SET_SRC and the majority thinks that\nit should be valid.  So, this patch fixes the combiner to punt in that case, because otherwise\nthe auto-inc-dec side-effects from the SET_SRC are lost.\n\n2020-05-06  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR rtl-optimization/94873\n\t* combine.c (combine_instructions): Don't optimize using REG_EQUAL\n\tnote if SET_SRC (set) has side-effects.\n\n\t* gcc.dg/pr94873.c: New test.", "tree": {"sha": "40a788d722939d41065beb0c1b63add3e11e28e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40a788d722939d41065beb0c1b63add3e11e28e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f14848aea70066777faf201c0b6eb3c5520bfab9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f14848aea70066777faf201c0b6eb3c5520bfab9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f14848aea70066777faf201c0b6eb3c5520bfab9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f14848aea70066777faf201c0b6eb3c5520bfab9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "366386c7a970bf6a32c5a2abb714ca6c7f4e7790", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/366386c7a970bf6a32c5a2abb714ca6c7f4e7790", "html_url": "https://github.com/Rust-GCC/gccrs/commit/366386c7a970bf6a32c5a2abb714ca6c7f4e7790"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "8040d0d59af0ed1ab7313f725308026f15fc7f91", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f14848aea70066777faf201c0b6eb3c5520bfab9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f14848aea70066777faf201c0b6eb3c5520bfab9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f14848aea70066777faf201c0b6eb3c5520bfab9", "patch": "@@ -1,3 +1,9 @@\n+2020-05-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/94873\n+\t* combine.c (combine_instructions): Don't optimize using REG_EQUAL\n+\tnote if SET_SRC (set) has side-effects.\n+\n 2020-05-06  Hongtao Liu  <hongtao.liu@intel.com>\n \t    Wei Xiao  <wei3.xiao@intel.com>\n "}, {"sha": "f69413a34d02ad206019450a4bca58f20f6e0ccb", "filename": "gcc/combine.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f14848aea70066777faf201c0b6eb3c5520bfab9/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f14848aea70066777faf201c0b6eb3c5520bfab9/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=f14848aea70066777faf201c0b6eb3c5520bfab9", "patch": "@@ -1485,6 +1485,7 @@ combine_instructions (rtx_insn *f, unsigned int nregs)\n \t      if ((set = single_set (temp)) != 0\n \t\t  && (note = find_reg_equal_equiv_note (temp)) != 0\n \t\t  && (note = XEXP (note, 0), GET_CODE (note)) != EXPR_LIST\n+\t\t  && ! side_effects_p (SET_SRC (set))\n \t\t  /* Avoid using a register that may already been marked\n \t\t     dead by an earlier instruction.  */\n \t\t  && ! unmentioned_reg_p (note, SET_SRC (set))"}, {"sha": "1f01ff0b886034da6fd582d0c5dfc19abfc0c97c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f14848aea70066777faf201c0b6eb3c5520bfab9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f14848aea70066777faf201c0b6eb3c5520bfab9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f14848aea70066777faf201c0b6eb3c5520bfab9", "patch": "@@ -1,3 +1,8 @@\n+2020-05-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/94873\n+\t* gcc.dg/pr94873.c: New test.\n+\n 2020-05-06  Hongtao.liu  <hongtao.liu@intel.com>\n \t    Wei Xiao  <wei3.xiao@intel.com>\n "}, {"sha": "36152176fbf389bf96f83abe9836516f20218703", "filename": "gcc/testsuite/gcc.dg/pr94873.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f14848aea70066777faf201c0b6eb3c5520bfab9/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94873.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f14848aea70066777faf201c0b6eb3c5520bfab9/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94873.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94873.c?ref=f14848aea70066777faf201c0b6eb3c5520bfab9", "patch": "@@ -0,0 +1,27 @@\n+/* PR rtl-optimization/94873 */\n+/* { dg-do run { target int128 } } */\n+/* { dg-options \"-O -fno-merge-constants -fno-split-wide-types -fno-tree-fre\" } */\n+\n+__attribute__((noipa)) void\n+foo (const char *p, int q)\n+{\n+  if (p[0] != '%' || p[1] != '0' || p[2] != '2' || p[3] != 'x' || p[4] != '\\0')\n+    __builtin_abort ();\n+#if __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__\n+  if ((unsigned char) q != 0x95)\n+    __builtin_abort ();\n+#elif __BYTE_ORDER__ == __ORDER_BIG_ENDIAN__\n+  if ((unsigned char) q != 0)\n+    __builtin_abort ();\n+#endif\n+}\n+\n+int\n+main ()\n+{\n+  union U { __int128 a; char b[sizeof (__int128)]; };\n+  char x = ((union U){ .a = 0xF4409395252B9560ULL}).b[1];\n+  for (unsigned i = 0; i < sizeof (x); i++)\n+    foo (\"%02x\", i[(volatile unsigned char *) &x]);\n+  return 0;\n+}"}]}