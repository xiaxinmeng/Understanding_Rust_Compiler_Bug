{"sha": "9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY0ZmQzMjRhYjkzMmMwZmJiM2JmMjhmNzIzMGYxNzIzNmJhMmRhYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-05-03T11:58:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-05-03T11:58:34Z"}, "message": "[multiple changes]\n\n2004-05-03  Olivier Hainque  <hainque@act-europe.fr>\n\n\tPR ada/15152\n\n\t* exp_ch2.adb (Expand_Current_Value): Leave Machine_Code Asm arguments\n\talone. Replacing object references by literals is inappropriate in a\n\tso low level context.\n\n2004-05-03  Arnaud Charlet  <charlet@act-europe.fr>\n\n\t* a-exexpr.adb: Add comments\n\n2004-05-03  Joel Brobecker  <brobecker@gnat.com>\n\n\t* a-tags.adb (Tag_Table): Add Index_Check pragma Suppress. Allows us to\n\tdeclare the Ancestor_Tags array in Type_Specific_Data with a small size\n\twithout risking a bounds check error when accessing one of its\n\tcomponents.\n\t(Type_Specific_Data): Define Ancestor_Tags as a small array.\n\tThis prevents us from hitting a limitation during the debug info\n\tgeneration when using stabs.\n\n\t* a-tags.adb (Dispatch_Table): Define the Prims_Ptr component as a\n\tsmall array.\n\tThis prevents us from hitting a limitation during the debug info\n\tgeneration when using stabs.\n\n2004-05-03  Eric Botcazou  <ebotcazou@act-europe.fr>\n\n\tlang-specs.h: Remove -gnatz* from specs.\n\n2004-05-03  Vincent Celier  <celier@gnat.com>\n\n\t* gprmake.adb, makegpr.ads, makegpr.adb: New files.\n\n\t* Make-lang.in, Makefile.in: Add gprmake\n\n2004-05-03  Thomas Quinot  <quinot@act-europe.fr>\n\n\t* sem_aggr.adb: Fix typo in comment.\n\n2004-05-03  Robert Dewar  <dewar@gnat.com>\n\n\t* make.adb: Minor reformatting\n\n\t* rtsfind.ads, rtsfind.adb: (RTU_Loaded): New function\n\n\t* sem_attr.adb (Eval_Attribute, case Type_Class): Fix check for address\n\tso that it works when address is not a private type.\n\n\t* sem_ch13.adb (Check_Expr_Constants, case N_Integer_Literal): Deal\n\tproperly with rewritten unchecked conversions. This prevents\n\torder-of-elaboration issues that can otherwise arise.\n\t(Minimum_Size): Don't check size of access types under VMS\n\n\t* sem_ch4.adb (Remove_Address_Interpretation): New circuit to remove\n\tinterpretations of integer literals as type System.Address.\n\n\t* sem_util.ads, sem_util.adb (Is_Descendent_Of_Address): New function\n\t(Is_Descendent_Of): New function\n\n2004-05-03  Jose Ruiz  <ruiz@act-europe.fr>\n\n\t* sem_prag.adb: Boolean_Entry_Barriers is a synonym of Simple_Barriers.\n\tMax_Entry_Queue_Depth is a synonym of Max_Entry_Queue_Length.\n\tNo_Dynamic_Interrupts is a synonym of No_Dynamic_Attachment.\n\n\t* sem_res.adb: Use the new restriction Max_Entry_Queue_Length instead\n\tof the old Max_Entry_Queue_Depth.\n\n\t* snames.adb: Boolean_Entry_Barriers is a synonym of Simple_Barriers.\n\tMax_Entry_Queue_Depth is a synonym of Max_Entry_Queue_Length\n\tNo_Dynamic_Interrupts is a synonym of No_Dynamic_Attachment\n\n\t* snames.ads: New entry for proper handling of Boolean_Entry_Barriers.\n\tNew entry for proper handling of Max_Entry_Queue_Depth.\n\tNew entry for proper handling of No_Dynamic_Interrupts.\n\n\t* s-rident.ads: Adding restriction Simple_Barriers (AI-00249) that\n\tsupersedes the GNAT specific restriction Boolean_Entry_Barriers.\n\tAdding restriction Max_Entry_Queue_Length (AI-00249) that supersedes\n\tthe GNAT specific restriction Max_Entry_Queue_Depth.\n\tAdding restriction No_Dynamic_Attachment (AI-00249) that supersedes\n\tthe GNAT specific restriction No_Dynamic_Interrupts.\n\n\t* restrict.ads, restrict.adb: Use the new restriction Simple_Barriers\n\tinstead of the old Boolean_Entry_Barriers.\n\tUse the new restriction No_Dynamic_Attachment instead of the old\n\tNo_Dynamic_Interrupts.\n\n\t* exp_ch9.adb: Check restriction Simple_Barriers (AI-00249) that\n\tsupersedes the GNAT specific restriction Boolean_Entry_Barriers.\n\n\t* gnatbind.adb: Use the new restriction Max_Entry_Queue_Length instead\n\tof the old Max_Entry_Queue_Depth.\n\n2004-05-03  GNAT Script  <nobody@gnat.com>\n\n\t* Make-lang.in: Makefile automatically updated\n\nFrom-SVN: r81429", "tree": {"sha": "c63309227b71a108f3774e414aacfd0be78c8d20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c63309227b71a108f3774e414aacfd0be78c8d20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/comments", "author": null, "committer": null, "parents": [{"sha": "178af0f39063ac9facc911211ab49dd274c0b851", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/178af0f39063ac9facc911211ab49dd274c0b851", "html_url": "https://github.com/Rust-GCC/gccrs/commit/178af0f39063ac9facc911211ab49dd274c0b851"}], "stats": {"total": 5545, "additions": 4770, "deletions": 775}, "files": [{"sha": "d6c5534ca12ed21468376ec82f34c26771275b3c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 100, "deletions": 0, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -1,3 +1,103 @@\n+2004-05-03  Olivier Hainque  <hainque@act-europe.fr>\n+\n+\tPR ada/15152\n+\n+\t* exp_ch2.adb (Expand_Current_Value): Leave Machine_Code Asm arguments\n+\talone. Replacing object references by literals is inappropriate in a\n+\tso low level context.\n+\n+2004-05-03  Arnaud Charlet  <charlet@act-europe.fr>\n+\n+\t* a-exexpr.adb: Add comments\n+\n+2004-05-03  Joel Brobecker  <brobecker@gnat.com>\n+\n+\t* a-tags.adb (Tag_Table): Add Index_Check pragma Suppress. Allows us to\n+\tdeclare the Ancestor_Tags array in Type_Specific_Data with a small size\n+\twithout risking a bounds check error when accessing one of its\n+\tcomponents.\n+\t(Type_Specific_Data): Define Ancestor_Tags as a small array.\n+\tThis prevents us from hitting a limitation during the debug info\n+\tgeneration when using stabs.\n+\n+\t* a-tags.adb (Dispatch_Table): Define the Prims_Ptr component as a\n+\tsmall array.\n+\tThis prevents us from hitting a limitation during the debug info\n+\tgeneration when using stabs.\n+\n+2004-05-03  Eric Botcazou  <ebotcazou@act-europe.fr>\n+\n+\tlang-specs.h: Remove -gnatz* from specs.\n+\n+2004-05-03  Vincent Celier  <celier@gnat.com>\n+\n+\t* gprmake.adb, makegpr.ads, makegpr.adb: New files.\n+\n+\t* Make-lang.in, Makefile.in: Add gprmake\n+\n+2004-05-03  Thomas Quinot  <quinot@act-europe.fr>\n+\n+\t* sem_aggr.adb: Fix typo in comment.\n+\n+2004-05-03  Robert Dewar  <dewar@gnat.com>\n+\n+\t* make.adb: Minor reformatting\n+\n+\t* rtsfind.ads, rtsfind.adb: (RTU_Loaded): New function\n+\n+\t* sem_attr.adb (Eval_Attribute, case Type_Class): Fix check for address\n+\tso that it works when address is not a private type.\n+\n+\t* sem_ch13.adb (Check_Expr_Constants, case N_Integer_Literal): Deal\n+\tproperly with rewritten unchecked conversions. This prevents\n+\torder-of-elaboration issues that can otherwise arise.\n+\t(Minimum_Size): Don't check size of access types under VMS\n+\n+\t* sem_ch4.adb (Remove_Address_Interpretation): New circuit to remove\n+\tinterpretations of integer literals as type System.Address.\n+\n+\t* sem_util.ads, sem_util.adb (Is_Descendent_Of_Address): New function\n+\t(Is_Descendent_Of): New function\n+\n+2004-05-03  Jose Ruiz  <ruiz@act-europe.fr>\n+\n+\t* sem_prag.adb: Boolean_Entry_Barriers is a synonym of Simple_Barriers.\n+\tMax_Entry_Queue_Depth is a synonym of Max_Entry_Queue_Length.\n+\tNo_Dynamic_Interrupts is a synonym of No_Dynamic_Attachment.\n+\n+\t* sem_res.adb: Use the new restriction Max_Entry_Queue_Length instead\n+\tof the old Max_Entry_Queue_Depth.\n+\n+\t* snames.adb: Boolean_Entry_Barriers is a synonym of Simple_Barriers.\n+\tMax_Entry_Queue_Depth is a synonym of Max_Entry_Queue_Length\n+\tNo_Dynamic_Interrupts is a synonym of No_Dynamic_Attachment\n+\n+\t* snames.ads: New entry for proper handling of Boolean_Entry_Barriers.\n+\tNew entry for proper handling of Max_Entry_Queue_Depth.\n+\tNew entry for proper handling of No_Dynamic_Interrupts.\n+\n+\t* s-rident.ads: Adding restriction Simple_Barriers (AI-00249) that\n+\tsupersedes the GNAT specific restriction Boolean_Entry_Barriers.\n+\tAdding restriction Max_Entry_Queue_Length (AI-00249) that supersedes\n+\tthe GNAT specific restriction Max_Entry_Queue_Depth.\n+\tAdding restriction No_Dynamic_Attachment (AI-00249) that supersedes\n+\tthe GNAT specific restriction No_Dynamic_Interrupts.\n+\n+\t* restrict.ads, restrict.adb: Use the new restriction Simple_Barriers\n+\tinstead of the old Boolean_Entry_Barriers.\n+\tUse the new restriction No_Dynamic_Attachment instead of the old\n+\tNo_Dynamic_Interrupts.\n+\n+\t* exp_ch9.adb: Check restriction Simple_Barriers (AI-00249) that\n+\tsupersedes the GNAT specific restriction Boolean_Entry_Barriers.\n+\n+\t* gnatbind.adb: Use the new restriction Max_Entry_Queue_Length instead\n+\tof the old Max_Entry_Queue_Depth.\n+\n+2004-05-03  GNAT Script  <nobody@gnat.com>\n+\n+\t* Make-lang.in: Makefile automatically updated\n+\n 2004-04-29  Ed Schonberg  <schonberg@gnat.com>\n \n \t* checks.adb (Enable_Range_Check): If the prefix of an index component"}, {"sha": "751bc0395869ccf08d78bcc4f8f65eff0f56798c", "filename": "gcc/ada/Make-lang.in", "status": "modified", "additions": 354, "deletions": 328, "changes": 682, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-lang.in?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa"}, {"sha": "41b5f5baee29e73aa2119a225bd5196850a92ae1", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -1606,7 +1606,7 @@ gnattools2: ../stamp-tools\n \t  ../../gnatls$(exeext) ../../gnatprep$(exeext) \\\n \t  ../../gnatxref$(exeext) \\\n \t  ../../gnatfind$(exeext) ../../gnatname$(exeext) \\\n-\t  ../../gnatclean$(exeext) \\\n+\t  ../../gnatclean$(exeext) ../../gprmake$(exeext) \\\n \t  ../../gprcmd$(exeext)   ../../gpr2make$(exeext)\n \n # These tools are only built for the native version.\n@@ -1648,6 +1648,12 @@ gnattools4: ../stamp-tools\n \t$(GNATLINK) -v gnatname -o $@ --GCC=\"$(CC) $(ADA_INCLUDES)\" \\\n \t\t    $(TOOLS_LIBS)\n \n+../../gprmake$(exeext): ../stamp-tools\n+\t$(GNATMAKE) -c $(ADA_INCLUDES) gprmake --GCC=\"$(CC) $(ALL_ADAFLAGS)\"\n+\t$(GNATBIND) $(ADA_INCLUDES) $(GNATBIND_FLAGS) gprmake\n+\t$(GNATLINK) -v gprmake -o $@ --GCC=\"$(CC) $(ADA_INCLUDES)\" \\\n+\t\t    $(TOOLS_LIBS)\n+\n ../../gpr2make$(exeext): ../stamp-tools\n \t$(GNATMAKE) -c $(ADA_INCLUDES) gpr2make --GCC=\"$(CC) $(ALL_ADAFLAGS)\"\n \t$(GNATBIND) $(ADA_INCLUDES) $(GNATBIND_FLAGS) gpr2make "}, {"sha": "b42b3fc7fd77bcbc2543cc3ae90f3be7d7c45b9a", "filename": "gcc/ada/a-exexpr.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fa-exexpr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fa-exexpr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exexpr.adb?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -2,7 +2,7 @@\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n---                     ADA.EXCEPTIONS.EXCEPTION_PROPAGATION                 --\n+--  A D A . E X C E P T I O N S . E X C E P T I O N _ P R O P A G A T I O N --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n@@ -104,15 +104,15 @@ package body Exception_Propagation is\n \n    type Unwind_Word is mod 2 ** System.Word_Size;\n    for Unwind_Word'Size use System.Word_Size;\n+   --  Map the corresponding C type used in Unwind_Exception below.\n \n    type Unwind_Exception is record\n       Class    : Exception_Class := GNAT_Exception_Class;\n       Cleanup  : System.Address  := System.Null_Address;\n       Private1 : Unwind_Word;\n       Private2 : Unwind_Word;\n    end record;\n-\n-   pragma Convention (C, Unwind_Exception);\n+   --  Map the GCC struct used for exception handling.\n \n    for Unwind_Exception'Alignment use Standard'Maximum_Alignment;\n    --  The C++ ABI mandates the common exception header to be at least\n@@ -122,7 +122,7 @@ package body Exception_Propagation is\n    --  1/ We pass pointers to such headers down to the underlying\n    --     libGCC unwinder,\n \n-   --  and\n+   --    and\n \n    --  2/ The GNAT_GCC_Exception record below starts with this common\n    --     common header and has a C counterpart which needs to be laid"}, {"sha": "c232695ce75ccf3718dfb35daf8c7287b8434f41", "filename": "gcc/ada/a-tags.adb", "status": "modified", "additions": 26, "deletions": 6, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fa-tags.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fa-tags.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tags.adb?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -65,8 +65,12 @@ package body Ada.Tags is\n \n    subtype Cstring is String (Positive);\n    type Cstring_Ptr is access all Cstring;\n+\n    type Tag_Table is array (Natural range <>) of Tag;\n    pragma Suppress_Initialization (Tag_Table);\n+   pragma Suppress (Index_Check, On => Tag_Table);\n+   --  We suppress index checks because the declared size in the record\n+   --  below is a dummy size of one (see below).\n \n    type Wide_Boolean is new Boolean;\n    --  This name should probably be changed sometime ??? and indeed\n@@ -79,13 +83,33 @@ package body Ada.Tags is\n       HT_Link            : Tag;\n       Remotely_Callable  : Wide_Boolean;\n       RC_Offset          : SSE.Storage_Offset;\n-      Ancestor_Tags      : Tag_Table (Natural);\n+      Ancestor_Tags      : Tag_Table (0 .. 1);\n    end record;\n+   --  The size of the Ancestor_Tags array actually depends on the tagged\n+   --  type to which it applies.  We are using the same mechanism as for\n+   --  the Prims_Ptr array in the Dispatch_Table record.  See comments\n+   --  below for more details.\n \n    type Dispatch_Table is record\n       TSD       : Type_Specific_Data_Ptr;\n-      Prims_Ptr : Address_Array (Positive);\n+      Prims_Ptr : Address_Array (1 .. 1);\n    end record;\n+   --  The size of the Prims_Ptr array actually depends on the tagged\n+   --  type to which it applies. For each tagged type, the expander\n+   --  computes the actual array size, and allocates the Dispatch_Table\n+   --  record accordingly.\n+   --\n+   --  To avoid the use of discriminants to define the actual size\n+   --  of the dispatch table, we used to declare the tag as a pointer\n+   --  to a record that contains an arbitrary array of addresses, using\n+   --  Positive as its index. This ensures that there are never range\n+   --  checks when accessing the dispatch table, but it prevents GDB\n+   --  from displaying tagged types properly. A better approach is\n+   --  to declare this record type as holding a small number of addresses,\n+   --  and to explicitly suppress checks on it.\n+   --\n+   --  Note that in both cases, this type is never allocated, and serves\n+   --  only to declare the corresponding access type.\n \n    ---------------------------------------------\n    -- Unchecked Conversions for String Fields --\n@@ -182,7 +206,6 @@ package body Ada.Tags is\n          function H is new System.HTable.Hash (HTable_Headers);\n          Str : constant Cstring_Ptr    := To_Cstring_Ptr (F);\n          Res : constant HTable_Headers := H (Str (1 .. Length (Str)));\n-\n       begin\n          return Res;\n       end Hash;\n@@ -219,7 +242,6 @@ package body Ada.Tags is\n \n    function CW_Membership (Obj_Tag : Tag; Typ_Tag : Tag) return Boolean is\n       Pos : constant Integer := Obj_Tag.TSD.Idepth - Typ_Tag.TSD.Idepth;\n-\n    begin\n       return Pos >= 0 and then Obj_Tag.TSD.Ancestor_Tags (Pos) = Typ_Tag;\n    end CW_Membership;\n@@ -230,7 +252,6 @@ package body Ada.Tags is\n \n    function Expanded_Name (T : Tag) return String is\n       Result : constant Cstring_Ptr := T.TSD.Expanded_Name;\n-\n    begin\n       return Result (1 .. Length (Result));\n    end Expanded_Name;\n@@ -241,7 +262,6 @@ package body Ada.Tags is\n \n    function External_Tag (T : Tag) return String is\n       Result : constant Cstring_Ptr := T.TSD.External_Tag;\n-\n    begin\n       return Result (1 .. Length (Result));\n    end External_Tag;"}, {"sha": "6e6adbfa4e15c28c7a3429734b5899fbc02e77be", "filename": "gcc/ada/a-tags.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fa-tags.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fa-tags.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tags.ads?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -210,6 +210,10 @@ private\n    --  Size of each ancestor tag entry in the TSD\n \n    type Address_Array is array (Natural range <>) of System.Address;\n+   pragma Suppress (Index_Check, On => Address_Array);\n+   --  The reason we suppress index checks is that in the body, objects\n+   --  of this type are declared with a dummy size of 1, the actual size\n+   --  depending on the number of primitive operations.\n \n    type Dispatch_Table;\n    type Tag is access all Dispatch_Table;"}, {"sha": "5788109391641de78b70248499066d2f685f177c", "filename": "gcc/ada/exp_ch2.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fexp_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fexp_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch2.adb?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -41,6 +41,7 @@ with Sem_Res;  use Sem_Res;\n with Sem_Util; use Sem_Util;\n with Sem_Warn; use Sem_Warn;\n with Sinfo;    use Sinfo;\n+with Snames;   use Snames;\n with Stand;    use Stand;\n with Tbuild;   use Tbuild;\n with Uintp;    use Uintp;\n@@ -216,6 +217,13 @@ package body Exp_Ch2 is\n          --  issue that they do not get replaced when they could be).\n \n          and then Nkind (Parent (N)) /= N_Pragma_Argument_Association\n+\n+         --  Same for Asm_Input and Asm_Output attribute references.\n+\n+         and then not (Nkind (Parent (N)) = N_Attribute_Reference\n+           and then (Attribute_Name (Parent (N)) = Name_Asm_Input\n+             or else Attribute_Name (Parent (N)) = Name_Asm_Output))\n+\n       then\n          --  Case of Current_Value is a compile time known value\n "}, {"sha": "d0eb4394697557b0df1b2fdd5f28c07dd2561d25", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -3413,7 +3413,7 @@ package body Exp_Ch9 is\n \n       --  It is not a boolean variable or literal, so check the restriction\n \n-      Check_Restriction (Boolean_Entry_Barriers, Cond);\n+      Check_Restriction (Simple_Barriers, Cond);\n    end Expand_Entry_Barrier;\n \n    ------------------------------------"}, {"sha": "3dc76ef09322ef6718f0cc2eccdbbf7321be78cd", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -113,7 +113,7 @@ procedure Gnatbind is\n          No_Reentrancy            => True,\n          --  Not checkable at compile time\n \n-         Max_Entry_Queue_Depth    => True,\n+         Max_Entry_Queue_Length    => True,\n          --  Not checkable at compile time\n \n          Max_Storage_At_Blocking  => True,"}, {"sha": "dc8a659b0b3a14fca024e8e1d399d14b49477383", "filename": "gcc/ada/gprmake.adb", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fgprmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fgprmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgprmake.adb?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -0,0 +1,36 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                             G P R M A K E                                --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--        Copyright (C) 2004 Free Software Foundation, Inc.                 --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  The driver for the gprmake tool.\n+\n+with Makegpr;\n+\n+procedure Gprmake is\n+begin\n+   --  The code is in Makegpr\n+\n+   Makegpr.Gprmake;\n+end Gprmake;"}, {"sha": "8cd85a81c6021bc060e32cbf33fb60a787c04a2d", "filename": "gcc/ada/lang-specs.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flang-specs.h?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -32,13 +32,13 @@\n   {\"@ada\",\n    \"\\\n  %{pg:%{fomit-frame-pointer:%e-pg and -fomit-frame-pointer are incompatible}}\\\n- %{!gnatc*:%{!gnatz*:%{!gnats*:%{!S:%{!c:\\\n-    %eone of -c, -S, -gnatc, -gnatz, or -gnats is required for Ada}}}}}\\\n+ %{!gnatc*:%{!gnats*:%{!S:%{!c:\\\n+    %eone of -c, -S, -gnatc or -gnats is required for Ada}}}}\\\n  gnat1 %{I*} %{k8:-gnatk8} %{w:-gnatws} %1 %{!Q:-quiet} %{nostdinc*}\\\n     %{nostdlib*}\\\n     -dumpbase %{.adb:%b.adb}%{.ads:%b.ads}%{!.adb:%{!.ads:%b.ada}}\\\n     %{g*} %{O*} %{W*} %{w} %{p} %{pg:-p} %{m*} %{a} %{f*} %{d*}\\\n     %{!S:%{o*:%w%*-gnatO}} \\\n     %i %{S:%W{o*}%{!o*:-o %b.s}} \\\n-    %{!S:%{gnatc*|gnatz*|gnats*: -o %j}} \\\n-    %{!gnatc*:%{!gnatz*:%{!gnats*:%(invoke_as)}}}\", 0, 0, 0},\n+    %{!S:%{gnatc*|gnats*: -o %j}} \\\n+    %{!gnatc*:%{!gnats*:%(invoke_as)}}\", 0, 0, 0},"}, {"sha": "d3f2da3edaa506570c0ca3a206f74496aec96092", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -343,12 +343,12 @@ package body Make is\n    --  Can be set to False with the switches -c, -b and -l.\n    --  These flags are reset to True for each invokation of procedure Gnatmake.\n \n-   Shared_String : aliased String := \"-shared\";\n+   Shared_String           : aliased String := \"-shared\";\n    Force_Elab_Flags_String : aliased String := \"-F\";\n \n-   No_Shared_Switch  : aliased Argument_List := (1 .. 0 => null);\n-   Shared_Switch     : aliased Argument_List := (1 => Shared_String'Access);\n-   Bind_Shared       : Argument_List_Access := No_Shared_Switch'Access;\n+   No_Shared_Switch : aliased Argument_List := (1 .. 0 => null);\n+   Shared_Switch    : aliased Argument_List := (1 => Shared_String'Access);\n+   Bind_Shared      : Argument_List_Access := No_Shared_Switch'Access;\n    --  Switch to added in front of gnatbind switches. By default no switch is\n    --  added. Switch \"-shared\" is added if there is a non-static Library\n    --  Project File.\n@@ -378,7 +378,9 @@ package body Make is\n    --  and is set to True whenever one of the source of the executable is\n    --  compiled, or has already been compiled for another executable.\n \n-   Max_Header : constant := 200; --  Arbitrary\n+   Max_Header : constant := 200;\n+   --  This needs a proper comment, it used to say \"arbitrary\"\n+   --  that's not an adequate comment ???\n \n    type Header_Num is range 1 .. Max_Header;\n    --  Header_Num for the hash table Obsoleted below"}, {"sha": "08a1f4decaf9af1299295cd01066d7c364d76ce4", "filename": "gcc/ada/makegpr.adb", "status": "added", "additions": 3527, "deletions": 0, "changes": 3527, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fmakegpr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fmakegpr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakegpr.adb?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa"}, {"sha": "fc751e86411bdfbbe9ed3d7cab157c129439e730", "filename": "gcc/ada/makegpr.ads", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fmakegpr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fmakegpr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakegpr.ads?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -0,0 +1,35 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                              M A K E G P R                               --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--          Copyright (C) 2004 Free Software Foundation, Inc.               --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  The following package implements the facilities to compile, bind and/or\n+--  link a set of Ada and non Ada sources, specified in Project Files.\n+\n+package Makegpr is\n+\n+   procedure Gprmake;\n+   --  The driver of gprmake.\n+\n+end Makegpr;"}, {"sha": "e9a4a4be7490e2cb67b83c570cde8c739d1ce651", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -368,7 +368,7 @@ package body Restrict is\n         and then Restrictions.Set (No_Task_Allocators)\n         and then Restrictions.Set (No_Dynamic_Priorities)\n         and then Restrictions.Set (No_Terminate_Alternatives)\n-        and then Restrictions.Set (No_Dynamic_Interrupts)\n+        and then Restrictions.Set (No_Dynamic_Attachment)\n         and then Restrictions.Set (No_Protected_Type_Allocators)\n         and then Restrictions.Set (No_Local_Protected_Objects)\n         and then Restrictions.Set (No_Requeue_Statements)\n@@ -442,7 +442,7 @@ package body Restrict is\n    procedure Set_Ravenscar (N : Node_Id) is\n    begin\n       Set_Restricted_Profile (N);\n-      Set_Restriction (Boolean_Entry_Barriers,       N);\n+      Set_Restriction (Simple_Barriers,              N);\n       Set_Restriction (No_Select_Statements,         N);\n       Set_Restriction (No_Calendar,                  N);\n       Set_Restriction (No_Entry_Queue,               N);\n@@ -468,7 +468,7 @@ package body Restrict is\n       Set_Restriction (No_Task_Allocators,           N);\n       Set_Restriction (No_Dynamic_Priorities,        N);\n       Set_Restriction (No_Terminate_Alternatives,    N);\n-      Set_Restriction (No_Dynamic_Interrupts,        N);\n+      Set_Restriction (No_Dynamic_Attachment,        N);\n       Set_Restriction (No_Protected_Type_Allocators, N);\n       Set_Restriction (No_Local_Protected_Objects,   N);\n       Set_Restriction (No_Requeue_Statements,        N);"}, {"sha": "9029620b1f3ca1859fc0049b36a69210b728ee40", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -104,9 +104,9 @@ package Restrict is\n    --  (which is why this restriction itself is excluded from the list).\n \n    Implementation_Restriction : array (All_Restrictions) of Boolean :=\n-     (Boolean_Entry_Barriers             => True,\n+     (Simple_Barriers                    => True,\n       No_Calendar                        => True,\n-      No_Dynamic_Interrupts              => True,\n+      No_Dynamic_Attachment              => True,\n       No_Enumeration_Maps                => True,\n       No_Entry_Calls_In_Elaboration_Code => True,\n       No_Entry_Queue                     => True,"}, {"sha": "b43da3db60310a6ddee6d80b7618902edb47dfc5", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 26, "deletions": 17, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -174,6 +174,23 @@ package body Rtsfind is\n    --  used if you are sure that the message comes directly or indirectly from\n    --  a call to the RTE function.\n \n+   ------------------------\n+   -- Entity_Not_Defined --\n+   ------------------------\n+\n+   procedure Entity_Not_Defined (Id : RE_Id) is\n+   begin\n+      if No_Run_Time_Mode then\n+         RTE_Error_Msg (\"|construct not allowed in no run time mode\");\n+      elsif Configurable_Run_Time_Mode then\n+         RTE_Error_Msg (\"|construct not allowed in this configuration>\");\n+      else\n+         RTE_Error_Msg (\"run-time configuration error\");\n+      end if;\n+\n+      Output_Entity_Name (Id, \"not defined\");\n+   end Entity_Not_Defined;\n+\n    -------------------\n    -- Get_Unit_Name --\n    -------------------\n@@ -403,23 +420,6 @@ package body Rtsfind is\n         Chars (Sel) in Text_IO_Package_Name;\n    end Is_Text_IO_Kludge_Unit;\n \n-   ------------------------\n-   -- Entity_Not_Defined --\n-   ------------------------\n-\n-   procedure Entity_Not_Defined (Id : RE_Id) is\n-   begin\n-      if No_Run_Time_Mode then\n-         RTE_Error_Msg (\"|construct not allowed in no run time mode\");\n-      elsif Configurable_Run_Time_Mode then\n-         RTE_Error_Msg (\"|construct not allowed in this configuration>\");\n-      else\n-         RTE_Error_Msg (\"run-time configuration error\");\n-      end if;\n-\n-      Output_Entity_Name (Id, \"not defined\");\n-   end Entity_Not_Defined;\n-\n    ---------------\n    -- Load_Fail --\n    ---------------\n@@ -1046,6 +1046,15 @@ package body Rtsfind is\n       end if;\n    end RTE_Error_Msg;\n \n+   ----------------\n+   -- RTU_Loaded --\n+   ----------------\n+\n+   function RTU_Loaded (U : RTU_Id) return Boolean is\n+   begin\n+      return Present (RT_Unit_Table (U).Entity);\n+   end RTU_Loaded;\n+\n    --------------------\n    -- Text_IO_Kludge --\n    --------------------"}, {"sha": "511242909d26035148f4a012792205b399e31baf", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -2712,6 +2712,12 @@ package Rtsfind is\n    --  exception and without generating an error message, i.e. if the\n    --  call will obtain the desired entity without any problems.\n \n+   function RTU_Loaded (U : RTU_Id) return Boolean;\n+   pragma Inline (RTU_Loaded);\n+   --  Returns true if indicated unit has already been successfully loaded.\n+   --  If the unit has not been loaded, returns False. Note that this does\n+   --  not mean that an attempt to load it subsequently would fail.\n+\n    procedure Text_IO_Kludge (Nam : Node_Id);\n    --  In Ada 83, and hence for compatibility in Ada 9X, package Text_IO has\n    --  generic subpackages (e.g. Integer_IO). They really should be child"}, {"sha": "e3bdbff6876b1bca2d2f7a146301a777ab06c6ef", "filename": "gcc/ada/s-rident.ads", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rident.ads?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -57,7 +57,7 @@ package System.Rident is\n \n       --  The following cases are checked for consistency in the binder\n \n-     (Boolean_Entry_Barriers,                  -- GNAT (Ravenscar)\n+     (Simple_Barriers,                         -- GNAT (Ravenscar)\n       No_Abort_Statements,                     -- (RM D.7(5), H.4(3))\n       No_Access_Subprograms,                   -- (RM H.4(17))\n       No_Allocators,                           -- (RM H.4(7))\n@@ -66,7 +66,7 @@ package System.Rident is\n       No_Delay,                                -- (RM H.4(21))\n       No_Direct_Boolean_Operators,             -- GNAT\n       No_Dispatch,                             -- (RM H.4(19))\n-      No_Dynamic_Interrupts,                   -- GNAT\n+      No_Dynamic_Attachment,                   -- GNAT\n       No_Dynamic_Priorities,                   -- (RM D.9(9))\n       No_Enumeration_Maps,                     -- GNAT\n       No_Entry_Calls_In_Elaboration_Code,      -- GNAT\n@@ -144,7 +144,7 @@ package System.Rident is\n       --  between different non-zero values.\n \n       Max_Asynchronous_Select_Nesting,         -- (RM D.7(18), H.4(3))\n-      Max_Entry_Queue_Depth,                   -- GNAT\n+      Max_Entry_Queue_Length,                  -- GNAT\n \n       --  The remaining entries are not checked at compile/bind time\n \n@@ -154,19 +154,22 @@ package System.Rident is\n \n    --  Synonyms permitted for historical purposes of compatibility\n \n-   --   No_Requeue         synonym for No_Requeue_Statements\n-   --   No_Task_Attributes synonym for No_Task_Attributes_Package\n+   --   Boolean_Entry_Barriers synonym for Simple_Barriers\n+   --   Max_Entry_Queue_Depth  synonym for Max_Entry_Queue_Length\n+   --   No_Dynamic_Interrupts  synonym for No_Dynamic_Attachment\n+   --   No_Requeue             synonym for No_Requeue_Statements\n+   --   No_Task_Attributes     synonym for No_Task_Attributes_Package\n \n    subtype All_Restrictions is Restriction_Id range\n-     Boolean_Entry_Barriers .. Max_Storage_At_Blocking;\n+     Simple_Barriers .. Max_Storage_At_Blocking;\n    --  All restrictions (excluding only Not_A_Restriction_Id)\n \n    subtype All_Boolean_Restrictions is Restriction_Id range\n-     Boolean_Entry_Barriers .. No_Elaboration_Code;\n+     Simple_Barriers .. No_Elaboration_Code;\n    --  All restrictions which do not take a parameter\n \n    subtype Partition_Boolean_Restrictions is All_Boolean_Restrictions range\n-     Boolean_Entry_Barriers .. Static_Storage_Size;\n+     Simple_Barriers .. Static_Storage_Size;\n    --  Boolean restrictions that are checked for partition consistency.\n    --  Note that all parameter restrictions are checked for partition\n    --  consistency by default, so this distinction is only needed in the\n@@ -186,7 +189,7 @@ package System.Rident is\n \n    subtype Checked_Parameter_Restrictions is\n      All_Parameter_Restrictions range\n-       Max_Protected_Entries .. Max_Entry_Queue_Depth;\n+       Max_Protected_Entries .. Max_Entry_Queue_Length;\n    --  These are the parameter restrictions that can be at least partially\n    --  checked at compile/binder time. Minimally, the compiler can detect\n    --  violations of a restriction pragma with a value of zero reliably.\n@@ -213,7 +216,7 @@ package System.Rident is\n \n    subtype Checked_Zero_Parameter_Restrictions is\n      Checked_Parameter_Restrictions range\n-       Max_Asynchronous_Select_Nesting .. Max_Entry_Queue_Depth;\n+       Max_Asynchronous_Select_Nesting .. Max_Entry_Queue_Length;\n    --  Restrictions with parameters where the compiler can detect the use of\n    --  the feature, and hence violations of a restriction specifying a value\n    --  of zero, but cannot detect specific values other than zero/nonzero."}, {"sha": "e5646e7f3388b02339745b7f1c0c96434bbdbf12", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -212,7 +212,7 @@ package body Sem_Aggr is\n    --  This procedure performs the semantic checks for an array aggregate.\n    --  True is returned if the aggregate resolution succeeds.\n    --  The procedure works by recursively checking each nested aggregate.\n-   --  Specifically, after checking a sub-aggreate nested at the i-th level\n+   --  Specifically, after checking a sub-aggregate nested at the i-th level\n    --  we recursively check all the subaggregates at the i+1-st level (if any).\n    --  Note that for aggregates analysis and resolution go hand in hand.\n    --  Aggregate analysis has been delayed up to here and it is done while"}, {"sha": "efbd935641e6f35a20c36775a6349e50b2229589", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -5896,7 +5896,7 @@ package body Sem_Attr is\n          Id  : RE_Id;\n \n       begin\n-         if Is_RTE (P_Root_Type, RE_Address) then\n+         if Is_Descendent_Of_Address (Typ) then\n             Id := RE_Type_Class_Address;\n \n          elsif Is_Enumeration_Type (Typ) then"}, {"sha": "1da9566e0dde8abc53c474e2a113a75f82dc3efa", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -45,6 +45,7 @@ with Snames;   use Snames;\n with Stand;    use Stand;\n with Sinfo;    use Sinfo;\n with Table;\n+with Targparm; use Targparm;\n with Ttypes;   use Ttypes;\n with Tbuild;   use Tbuild;\n with Urealp;   use Urealp;\n@@ -2699,8 +2700,19 @@ package body Sem_Ch13 is\n                   end if;\n                end if;\n \n-            when N_Integer_Literal   |\n-                 N_Real_Literal      |\n+            when N_Integer_Literal   =>\n+\n+               --  If this is a rewritten unchecked conversion, in a system\n+               --  where Address is an integer type, always use the base type\n+               --  for a literal value. This is user-friendly and prevents\n+               --  order-of-elaboration issues with instances of unchecked\n+               --  conversion.\n+\n+               if Nkind (Original_Node (Nod)) = N_Function_Call then\n+                  Set_Etype (Nod, Base_Type (Etype (Nod)));\n+               end if;\n+\n+            when N_Real_Literal      |\n                  N_String_Literal    |\n                  N_Character_Literal =>\n                return;\n@@ -3068,10 +3080,19 @@ package body Sem_Ch13 is\n       then\n          return 0;\n \n-      --  Access types\n+         --  Access types. Normally an access type cannot have a size smaller\n+         --  than the size of System.Address. The exception is on VMS, where\n+         --  we have short and long addresses, and it is possible for an access\n+         --  type to have a short address size (and thus be less than the size\n+         --  of System.Address itself). We simply skip the check for VMS, and\n+         --  leave the back end to do the check.\n \n       elsif Is_Access_Type (T) then\n-         return System_Address_Size;\n+         if OpenVMS_On_Target then\n+            return 0;\n+         else\n+            return System_Address_Size;\n+         end if;\n \n       --  Floating-point types\n "}, {"sha": "954d4d343cb562a54f221f9966ca67acb824bcdd", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 49, "deletions": 7, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -4346,9 +4346,9 @@ package body Sem_Ch4 is\n    --------------------------------\n \n    procedure Remove_Abstract_Operations (N : Node_Id) is\n-      I           : Interp_Index;\n-      It          : Interp;\n-      Abstract_Op : Entity_Id := Empty;\n+      I            : Interp_Index;\n+      It           : Interp;\n+      Abstract_Op  : Entity_Id := Empty;\n \n       --  AI-310: If overloaded, remove abstract non-dispatching\n       --  operations. We activate this if either extensions are\n@@ -4359,6 +4359,42 @@ package body Sem_Ch4 is\n       --  subprograms are used to hide its operators, they will be\n       --  truly hidden.\n \n+      procedure Remove_Address_Interpretations;\n+      --  Ambiguities may arise when the operands are literal and the\n+      --  address operations in s-auxdec are visible. In that case, remove\n+      --  the interpretation of a literal as Address, to retain the semantics\n+      --  of Address as a private type.\n+\n+      ------------------------------------\n+      -- Remove_Address_Intereprtations --\n+      ------------------------------------\n+\n+      procedure Remove_Address_Interpretations is\n+         Formal : Entity_Id;\n+\n+      begin\n+         if Is_Overloaded (N) then\n+            Get_First_Interp (N, I, It);\n+            while Present (It.Nam) loop\n+               Formal := First_Entity (It.Nam);\n+\n+               if Is_Descendent_Of_Address (Etype (Formal))\n+                 or else\n+                   (Present (Next_Entity (Formal))\n+                      and then\n+                        Is_Descendent_Of_Address\n+                          (Etype (Next_Entity (Formal))))\n+               then\n+                  Remove_Interp (I);\n+               end if;\n+\n+               Get_Next_Interp (I, It);\n+            end loop;\n+         end if;\n+      end Remove_Address_Interpretations;\n+\n+   --  Start of processing for Remove_Abstract_Operations\n+\n    begin\n       if Is_Overloaded (N) then\n          Get_First_Interp (N, I, It);\n@@ -4388,17 +4424,21 @@ package body Sem_Ch4 is\n          if No (Abstract_Op) then\n             return;\n \n+            --  Remove address interpretations if we have a universal\n+            --  interpretation. This avoids literals being interpreted\n+            --  as type Address, which is never appropriate.\n+\n          elsif Nkind (N) in N_Op then\n             if Nkind (N) in N_Unary_Op\n               and then Present (Universal_Interpretation (Right_Opnd (N)))\n             then\n-               return;\n+               Remove_Address_Interpretations;\n \n             elsif Nkind (N) in N_Binary_Op\n               and then Present (Universal_Interpretation (Right_Opnd (N)))\n               and then Present (Universal_Interpretation (Left_Opnd  (N)))\n             then\n-               return;\n+               Remove_Address_Interpretations;\n \n             else\n                Get_First_Interp (N, I, It);\n@@ -4428,12 +4468,14 @@ package body Sem_Ch4 is\n                    (No (Next (Arg1))\n                      or else Present (Universal_Interpretation (Next (Arg1))))\n                then\n-                  return;\n+                  Remove_Address_Interpretations;\n \n                else\n                   Get_First_Interp (N, I, It);\n                   while Present (It.Nam) loop\n-                     if Scope (It.Nam) = Standard_Standard then\n+                     if Scope (It.Nam) = Standard_Standard\n+                       and then It.Typ = Base_Type (Etype (Abstract_Op))\n+                     then\n                         Remove_Interp (I);\n                      end if;\n "}, {"sha": "b7c3cafa0b5965689e61766e34f76ad3eacd7926", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 53, "deletions": 2, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -888,7 +888,7 @@ package body Sem_Prag is\n               (\"argument of pragma% must be entity name\", Arg1);\n \n          elsif Prag_Id = Pragma_Interrupt_Handler then\n-            Check_Restriction (No_Dynamic_Interrupts, N);\n+            Check_Restriction (No_Dynamic_Attachment, N);\n          end if;\n \n          declare\n@@ -3276,10 +3276,61 @@ package body Sem_Prag is\n                   Error_Pragma_Arg\n                     (\"invalid form for restriction\", Arg);\n \n+               --  Deal with synonyms. This should be done more cleanly ???\n+\n                else\n+                  --  Boolean_Entry_Barriers is a synonym of Simple_Barriers\n+\n+                  if Chars (Expr) = Name_Boolean_Entry_Barriers then\n+                     Check_Restriction\n+                       (No_Implementation_Restrictions, Arg);\n+                     Set_Restriction (Simple_Barriers, N);\n+                     Set_Warning (Simple_Barriers);\n+\n+                  --  Max_Entry_Queue_Depth is a synonym of\n+                  --  Max_Entry_Queue_Length\n+\n+                  elsif Chars (Expr) = Name_Max_Entry_Queue_Depth then\n+                     Analyze_And_Resolve (Expr, Any_Integer);\n+\n+                     if not Is_OK_Static_Expression (Expr) then\n+                        Flag_Non_Static_Expr\n+                          (\"value must be static expression!\", Expr);\n+                        raise Pragma_Exit;\n+\n+                     elsif not Is_Integer_Type (Etype (Expr))\n+                       or else Expr_Value (Expr) < 0\n+                     then\n+                        Error_Pragma_Arg\n+                          (\"value must be non-negative integer\", Arg);\n+\n+                     --  Restriction pragma is active\n+\n+                     else\n+                        Val := Expr_Value (Expr);\n+\n+                        if not UI_Is_In_Int_Range (Val) then\n+                           Error_Pragma_Arg\n+                             (\"pragma ignored, value too large?\", Arg);\n+                        else\n+                           Set_Restriction (Max_Entry_Queue_Length, N,\n+                                            Integer (UI_To_Int (Val)));\n+                           Set_Warning (Max_Entry_Queue_Length);\n+                        end if;\n+                     end if;\n+\n+                  --  No_Dynamic_Interrupts is a synonym for\n+                  --  No_Dynamic_Attachment\n+\n+                  elsif Chars (Expr) = Name_No_Dynamic_Interrupts then\n+                     Check_Restriction\n+                       (No_Implementation_Restrictions, Arg);\n+                     Set_Restriction (No_Dynamic_Attachment, N);\n+                     Set_Warning (No_Dynamic_Attachment);\n+\n                   --  No_Requeue is a synonym for No_Requeue_Statements\n \n-                  if Chars (Expr) = Name_No_Requeue then\n+                  elsif Chars (Expr) = Name_No_Requeue then\n                      Check_Restriction\n                        (No_Implementation_Restrictions, Arg);\n                      Set_Restriction (No_Requeue_Statements, N);"}, {"sha": "275e9584993e622ffebc5c6c892630857b4f0fec", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -4487,7 +4487,7 @@ package body Sem_Res is\n       --  call at all violates a specified nesting depth of zero.\n \n       if Is_Protected_Type (Scope (Nam)) then\n-         Check_Restriction (Max_Entry_Queue_Depth, N);\n+         Check_Restriction (Max_Entry_Queue_Length, N);\n       end if;\n \n       --  Use context type to disambiguate a protected function that can be"}, {"sha": "0951d8413cdd512b2ff8ae74d141ba0bad1820e7", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -42,6 +42,7 @@ with Nmake;    use Nmake;\n with Output;   use Output;\n with Opt;      use Opt;\n with Restrict; use Restrict;\n+with Rtsfind; use Rtsfind;\n with Scans;    use Scans;\n with Scn;      use Scn;\n with Sem;      use Sem;\n@@ -3380,6 +3381,88 @@ package body Sem_Util is\n         and then Prefix (P) = N;\n    end Is_Dereferenced;\n \n+   ----------------------\n+   -- Is_Descendent_Of --\n+   ----------------------\n+\n+   function Is_Descendent_Of (T1 : Entity_Id; T2 : Entity_Id) return Boolean is\n+      T    : Entity_Id;\n+      Etyp : Entity_Id;\n+\n+   begin\n+      pragma Assert (Nkind (T1) in N_Entity);\n+      pragma Assert (Nkind (T2) in N_Entity);\n+\n+      T := Base_Type (T1);\n+\n+      --  Immediate return if the types match\n+\n+      if T = T2 then\n+         return True;\n+\n+      --  Comment needed here ???\n+\n+      elsif Ekind (T) = E_Class_Wide_Type then\n+         return Etype (T) = T2;\n+\n+      --  All other cases\n+\n+      else\n+         loop\n+            Etyp := Etype (T);\n+\n+            --  Done if we found the type we are looking for\n+\n+            if Etyp = T2 then\n+               return True;\n+\n+            --  Done if no more derivations to check\n+\n+            elsif T = T1 then\n+               return False;\n+\n+            --  Following test catches error cases resulting from prev errors\n+\n+            elsif No (Etyp) then\n+               return False;\n+\n+            elsif Is_Private_Type (T) and then Etyp = Full_View (T) then\n+               return False;\n+\n+            elsif Is_Private_Type (Etyp) and then Full_View (Etyp) = T then\n+               return False;\n+            end if;\n+\n+            --  Return if no further entries to check\n+\n+            if T = Base_Type (T1) or else T = T1 then\n+               return False;\n+            end if;\n+         end loop;\n+      end if;\n+\n+      raise Program_Error;\n+   end Is_Descendent_Of;\n+\n+   ------------------------------\n+   -- Is_Descendent_Of_Address --\n+   ------------------------------\n+\n+   function Is_Descendent_Of_Address (T1 : Entity_Id) return Boolean is\n+   begin\n+      --  If Address has not been loaded, answer must be False\n+\n+      if not RTU_Loaded (System) then\n+         return False;\n+\n+      --  Otherwise we can get the entity we are interested in without\n+      --  causing an unwanted dependency on System, and do the test.\n+\n+      else\n+         return Is_Descendent_Of (T1, Base_Type (RTE (RE_Address)));\n+      end if;\n+   end Is_Descendent_Of_Address;\n+\n    --------------\n    -- Is_False --\n    --------------"}, {"sha": "d85c35c1e88f4cdcef633e906289c2491a39f5ee", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 24, "deletions": 14, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -259,28 +259,28 @@ package Sem_Util is\n       Governed_By   : List_Id;\n       Into          : Elist_Id;\n       Report_Errors : out Boolean);\n-   --  The purpose of this procedure is to gather the valid components\n-   --  in a record type according to the values of its discriminants, in order\n-   --  to validate the components of a record aggregate.\n+   --  The purpose of this procedure is to gather the valid components in a\n+   --  record type according to the values of its discriminants, in order to\n+   --  validate the components of a record aggregate.\n    --\n    --    Typ is the type of the aggregate when its constrained discriminants\n    --      need to be collected, otherwise it is Empty.\n    --\n    --    Comp_List is an N_Component_List node.\n    --\n-   --    Governed_By is a list of N_Component_Association nodes,\n-   --     where each choice list contains the name of a discriminant and\n-   --     the expression field gives its value. The values of the\n-   --     discriminants governing the (possibly nested) variant parts in\n-   --     Comp_List are found in this Component_Association List.\n+   --    Governed_By is a list of N_Component_Association nodes, where each\n+   --     choice list contains the name of a discriminant and the expression\n+   --     field gives its value. The values of the discriminants governing\n+   --     the (possibly nested) variant parts in Comp_List are found in this\n+   --     Component_Association List.\n    --\n-   --    Into is the list where the valid components are appended.\n-   --     Note that Into need not be an Empty list. If it's not, components\n-   --     are attached to its tail.\n+   --    Into is the list where the valid components are appended. Note that\n+   --     Into need not be an Empty list. If it's not, components are attached\n+   --     to its tail.\n+   --\n+   --    Report_Errors is set to True if the values of the discriminants are\n+   --     non-static.\n    --\n-   --    Report_Errors is set to True if the values of the discriminants\n-   --     are non-static.\n-\n    --  This procedure is also used when building a record subtype. If the\n    --  discriminant constraint of the subtype is static, the components of the\n    --  subtype are only those of the variants selected by the values of the\n@@ -442,6 +442,16 @@ package Sem_Util is\n    --  of the access value (selected/indexed component, explicit dereference\n    --  or a slice), and false otherwise.\n \n+   function Is_Descendent_Of (T1 : Entity_Id; T2 : Entity_Id) return Boolean;\n+   --  Returns True if type T1 is a descendent of type T2, and false otherwise.\n+   --  This is the RM definition, a type is a descendent of another type if it\n+   --  is the same type or is derived from a descendent of the other type.\n+\n+   function Is_Descendent_Of_Address (T1 : Entity_Id) return Boolean;\n+   --  Returns True if type T1 is a descendent of Address or its base type.\n+   --  Similar to calling Is_Descendent_Of with Base_Type (RTE (RE_Address))\n+   --  except that it avoids creating an unconditional dependency on System.\n+\n    function Is_False (U : Uint) return Boolean;\n    --  The argument is a Uint value which is the Boolean'Pos value of a\n    --  Boolean operand (i.e. is either 0 for False, or 1 for True). This"}, {"sha": "d764320be368a71715adc03b25b0da7a98844cee", "filename": "gcc/ada/snames.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fsnames.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fsnames.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.adb?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -319,6 +319,7 @@ package body Snames is\n      \"win32#\" &\n      \"as_is#\" &\n      \"body_file_name#\" &\n+     \"boolean_entry_barriers#\" &\n      \"casing#\" &\n      \"code#\" &\n      \"component#\" &\n@@ -340,6 +341,7 @@ package body Snames is\n      \"internal#\" &\n      \"link_name#\" &\n      \"lowercase#\" &\n+     \"max_entry_queue_depth#\" &\n      \"max_size#\" &\n      \"mechanism#\" &\n      \"mixedcase#\" &\n@@ -350,6 +352,7 @@ package body Snames is\n      \"on#\" &\n      \"parameter_types#\" &\n      \"reference#\" &\n+     \"no_dynamic_interrupts#\" &\n      \"no_requeue#\" &\n      \"no_task_attributes#\" &\n      \"restricted#\" &"}, {"sha": "402a791ef637796c8b51bcc0ca5b76de2fc8c983", "filename": "gcc/ada/snames.ads", "status": "modified", "additions": 366, "deletions": 363, "changes": 729, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fsnames.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4fd324ab932c0fbb3bf28f7230f17236ba2daa/gcc%2Fada%2Fsnames.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads?ref=9f4fd324ab932c0fbb3bf28f7230f17236ba2daa", "patch": "@@ -517,66 +517,69 @@ package Snames is\n \n    Name_As_Is                          : constant Name_Id := N + 260;\n    Name_Body_File_Name                 : constant Name_Id := N + 261;\n-   Name_Casing                         : constant Name_Id := N + 262;\n-   Name_Code                           : constant Name_Id := N + 263;\n-   Name_Component                      : constant Name_Id := N + 264;\n-   Name_Component_Size_4               : constant Name_Id := N + 265;\n-   Name_Copy                           : constant Name_Id := N + 266;\n-   Name_D_Float                        : constant Name_Id := N + 267;\n-   Name_Descriptor                     : constant Name_Id := N + 268;\n-   Name_Dot_Replacement                : constant Name_Id := N + 269;\n-   Name_Dynamic                        : constant Name_Id := N + 270;\n-   Name_Entity                         : constant Name_Id := N + 271;\n-   Name_External_Name                  : constant Name_Id := N + 272;\n-   Name_First_Optional_Parameter       : constant Name_Id := N + 273;\n-   Name_Form                           : constant Name_Id := N + 274;\n-   Name_G_Float                        : constant Name_Id := N + 275;\n-   Name_Gcc                            : constant Name_Id := N + 276;\n-   Name_Gnat                           : constant Name_Id := N + 277;\n-   Name_GPL                            : constant Name_Id := N + 278;\n-   Name_IEEE_Float                     : constant Name_Id := N + 279;\n-   Name_Internal                       : constant Name_Id := N + 280;\n-   Name_Link_Name                      : constant Name_Id := N + 281;\n-   Name_Lowercase                      : constant Name_Id := N + 282;\n-   Name_Max_Size                       : constant Name_Id := N + 283;\n-   Name_Mechanism                      : constant Name_Id := N + 284;\n-   Name_Mixedcase                      : constant Name_Id := N + 285;\n-   Name_Modified_GPL                   : constant Name_Id := N + 286;\n-   Name_Name                           : constant Name_Id := N + 287;\n-   Name_NCA                            : constant Name_Id := N + 288;\n-   Name_No                             : constant Name_Id := N + 289;\n-   Name_On                             : constant Name_Id := N + 290;\n-   Name_Parameter_Types                : constant Name_Id := N + 291;\n-   Name_Reference                      : constant Name_Id := N + 292;\n-   Name_No_Requeue                     : constant Name_Id := N + 293;\n-   Name_No_Task_Attributes             : constant Name_Id := N + 294;\n-   Name_Restricted                     : constant Name_Id := N + 295;\n-   Name_Result_Mechanism               : constant Name_Id := N + 296;\n-   Name_Result_Type                    : constant Name_Id := N + 297;\n-   Name_Runtime                        : constant Name_Id := N + 298;\n-   Name_SB                             : constant Name_Id := N + 299;\n-   Name_Secondary_Stack_Size           : constant Name_Id := N + 300;\n-   Name_Section                        : constant Name_Id := N + 301;\n-   Name_Semaphore                      : constant Name_Id := N + 302;\n-   Name_Spec_File_Name                 : constant Name_Id := N + 303;\n-   Name_Static                         : constant Name_Id := N + 304;\n-   Name_Stack_Size                     : constant Name_Id := N + 305;\n-   Name_Subunit_File_Name              : constant Name_Id := N + 306;\n-   Name_Task_Stack_Size_Default        : constant Name_Id := N + 307;\n-   Name_Task_Type                      : constant Name_Id := N + 308;\n-   Name_Time_Slicing_Enabled           : constant Name_Id := N + 309;\n-   Name_Top_Guard                      : constant Name_Id := N + 310;\n-   Name_UBA                            : constant Name_Id := N + 311;\n-   Name_UBS                            : constant Name_Id := N + 312;\n-   Name_UBSB                           : constant Name_Id := N + 313;\n-   Name_Unit_Name                      : constant Name_Id := N + 314;\n-   Name_Unknown                        : constant Name_Id := N + 315;\n-   Name_Unrestricted                   : constant Name_Id := N + 316;\n-   Name_Uppercase                      : constant Name_Id := N + 317;\n-   Name_User                           : constant Name_Id := N + 318;\n-   Name_VAX_Float                      : constant Name_Id := N + 319;\n-   Name_VMS                            : constant Name_Id := N + 320;\n-   Name_Working_Storage                : constant Name_Id := N + 321;\n+   Name_Boolean_Entry_Barriers         : constant Name_Id := N + 262;\n+   Name_Casing                         : constant Name_Id := N + 263;\n+   Name_Code                           : constant Name_Id := N + 264;\n+   Name_Component                      : constant Name_Id := N + 265;\n+   Name_Component_Size_4               : constant Name_Id := N + 266;\n+   Name_Copy                           : constant Name_Id := N + 267;\n+   Name_D_Float                        : constant Name_Id := N + 268;\n+   Name_Descriptor                     : constant Name_Id := N + 269;\n+   Name_Dot_Replacement                : constant Name_Id := N + 270;\n+   Name_Dynamic                        : constant Name_Id := N + 271;\n+   Name_Entity                         : constant Name_Id := N + 272;\n+   Name_External_Name                  : constant Name_Id := N + 273;\n+   Name_First_Optional_Parameter       : constant Name_Id := N + 274;\n+   Name_Form                           : constant Name_Id := N + 275;\n+   Name_G_Float                        : constant Name_Id := N + 276;\n+   Name_Gcc                            : constant Name_Id := N + 277;\n+   Name_Gnat                           : constant Name_Id := N + 278;\n+   Name_GPL                            : constant Name_Id := N + 279;\n+   Name_IEEE_Float                     : constant Name_Id := N + 280;\n+   Name_Internal                       : constant Name_Id := N + 281;\n+   Name_Link_Name                      : constant Name_Id := N + 282;\n+   Name_Lowercase                      : constant Name_Id := N + 283;\n+   Name_Max_Entry_Queue_Depth          : constant Name_Id := N + 284;\n+   Name_Max_Size                       : constant Name_Id := N + 285;\n+   Name_Mechanism                      : constant Name_Id := N + 286;\n+   Name_Mixedcase                      : constant Name_Id := N + 287;\n+   Name_Modified_GPL                   : constant Name_Id := N + 288;\n+   Name_Name                           : constant Name_Id := N + 289;\n+   Name_NCA                            : constant Name_Id := N + 290;\n+   Name_No                             : constant Name_Id := N + 291;\n+   Name_On                             : constant Name_Id := N + 292;\n+   Name_Parameter_Types                : constant Name_Id := N + 293;\n+   Name_Reference                      : constant Name_Id := N + 294;\n+   Name_No_Dynamic_Interrupts          : constant Name_Id := N + 295;\n+   Name_No_Requeue                     : constant Name_Id := N + 296;\n+   Name_No_Task_Attributes             : constant Name_Id := N + 297;\n+   Name_Restricted                     : constant Name_Id := N + 298;\n+   Name_Result_Mechanism               : constant Name_Id := N + 299;\n+   Name_Result_Type                    : constant Name_Id := N + 300;\n+   Name_Runtime                        : constant Name_Id := N + 301;\n+   Name_SB                             : constant Name_Id := N + 302;\n+   Name_Secondary_Stack_Size           : constant Name_Id := N + 303;\n+   Name_Section                        : constant Name_Id := N + 304;\n+   Name_Semaphore                      : constant Name_Id := N + 305;\n+   Name_Spec_File_Name                 : constant Name_Id := N + 306;\n+   Name_Static                         : constant Name_Id := N + 307;\n+   Name_Stack_Size                     : constant Name_Id := N + 308;\n+   Name_Subunit_File_Name              : constant Name_Id := N + 309;\n+   Name_Task_Stack_Size_Default        : constant Name_Id := N + 310;\n+   Name_Task_Type                      : constant Name_Id := N + 311;\n+   Name_Time_Slicing_Enabled           : constant Name_Id := N + 312;\n+   Name_Top_Guard                      : constant Name_Id := N + 313;\n+   Name_UBA                            : constant Name_Id := N + 314;\n+   Name_UBS                            : constant Name_Id := N + 315;\n+   Name_UBSB                           : constant Name_Id := N + 316;\n+   Name_Unit_Name                      : constant Name_Id := N + 317;\n+   Name_Unknown                        : constant Name_Id := N + 318;\n+   Name_Unrestricted                   : constant Name_Id := N + 319;\n+   Name_Uppercase                      : constant Name_Id := N + 320;\n+   Name_User                           : constant Name_Id := N + 321;\n+   Name_VAX_Float                      : constant Name_Id := N + 322;\n+   Name_VMS                            : constant Name_Id := N + 323;\n+   Name_Working_Storage                : constant Name_Id := N + 324;\n \n    --  Names of recognized attributes. The entries with the comment \"Ada 83\"\n    --  are attributes that are defined in Ada 83, but not in Ada 95. These\n@@ -590,374 +593,374 @@ package Snames is\n    --  The entries marked VMS are recognized only in OpenVMS implementations\n    --  of GNAT, and are treated as illegal in all other contexts.\n \n-   First_Attribute_Name                : constant Name_Id := N + 322;\n-   Name_Abort_Signal                   : constant Name_Id := N + 322;  -- GNAT\n-   Name_Access                         : constant Name_Id := N + 323;\n-   Name_Address                        : constant Name_Id := N + 324;\n-   Name_Address_Size                   : constant Name_Id := N + 325;  -- GNAT\n-   Name_Aft                            : constant Name_Id := N + 326;\n-   Name_Alignment                      : constant Name_Id := N + 327;\n-   Name_Asm_Input                      : constant Name_Id := N + 328;  -- GNAT\n-   Name_Asm_Output                     : constant Name_Id := N + 329;  -- GNAT\n-   Name_AST_Entry                      : constant Name_Id := N + 330;  -- VMS\n-   Name_Bit                            : constant Name_Id := N + 331;  -- GNAT\n-   Name_Bit_Order                      : constant Name_Id := N + 332;\n-   Name_Bit_Position                   : constant Name_Id := N + 333;  -- GNAT\n-   Name_Body_Version                   : constant Name_Id := N + 334;\n-   Name_Callable                       : constant Name_Id := N + 335;\n-   Name_Caller                         : constant Name_Id := N + 336;\n-   Name_Code_Address                   : constant Name_Id := N + 337;  -- GNAT\n-   Name_Component_Size                 : constant Name_Id := N + 338;\n-   Name_Compose                        : constant Name_Id := N + 339;\n-   Name_Constrained                    : constant Name_Id := N + 340;\n-   Name_Count                          : constant Name_Id := N + 341;\n-   Name_Default_Bit_Order              : constant Name_Id := N + 342; -- GNAT\n-   Name_Definite                       : constant Name_Id := N + 343;\n-   Name_Delta                          : constant Name_Id := N + 344;\n-   Name_Denorm                         : constant Name_Id := N + 345;\n-   Name_Digits                         : constant Name_Id := N + 346;\n-   Name_Elaborated                     : constant Name_Id := N + 347; -- GNAT\n-   Name_Emax                           : constant Name_Id := N + 348; -- Ada 83\n-   Name_Enum_Rep                       : constant Name_Id := N + 349; -- GNAT\n-   Name_Epsilon                        : constant Name_Id := N + 350; -- Ada 83\n-   Name_Exponent                       : constant Name_Id := N + 351;\n-   Name_External_Tag                   : constant Name_Id := N + 352;\n-   Name_First                          : constant Name_Id := N + 353;\n-   Name_First_Bit                      : constant Name_Id := N + 354;\n-   Name_Fixed_Value                    : constant Name_Id := N + 355; -- GNAT\n-   Name_Fore                           : constant Name_Id := N + 356;\n-   Name_Has_Discriminants              : constant Name_Id := N + 357; -- GNAT\n-   Name_Identity                       : constant Name_Id := N + 358;\n-   Name_Img                            : constant Name_Id := N + 359; -- GNAT\n-   Name_Integer_Value                  : constant Name_Id := N + 360; -- GNAT\n-   Name_Large                          : constant Name_Id := N + 361; -- Ada 83\n-   Name_Last                           : constant Name_Id := N + 362;\n-   Name_Last_Bit                       : constant Name_Id := N + 363;\n-   Name_Leading_Part                   : constant Name_Id := N + 364;\n-   Name_Length                         : constant Name_Id := N + 365;\n-   Name_Machine_Emax                   : constant Name_Id := N + 366;\n-   Name_Machine_Emin                   : constant Name_Id := N + 367;\n-   Name_Machine_Mantissa               : constant Name_Id := N + 368;\n-   Name_Machine_Overflows              : constant Name_Id := N + 369;\n-   Name_Machine_Radix                  : constant Name_Id := N + 370;\n-   Name_Machine_Rounds                 : constant Name_Id := N + 371;\n-   Name_Machine_Size                   : constant Name_Id := N + 372; -- GNAT\n-   Name_Mantissa                       : constant Name_Id := N + 373; -- Ada 83\n-   Name_Max_Size_In_Storage_Elements   : constant Name_Id := N + 374;\n-   Name_Maximum_Alignment              : constant Name_Id := N + 375; -- GNAT\n-   Name_Mechanism_Code                 : constant Name_Id := N + 376; -- GNAT\n-   Name_Model_Emin                     : constant Name_Id := N + 377;\n-   Name_Model_Epsilon                  : constant Name_Id := N + 378;\n-   Name_Model_Mantissa                 : constant Name_Id := N + 379;\n-   Name_Model_Small                    : constant Name_Id := N + 380;\n-   Name_Modulus                        : constant Name_Id := N + 381;\n-   Name_Null_Parameter                 : constant Name_Id := N + 382; -- GNAT\n-   Name_Object_Size                    : constant Name_Id := N + 383; -- GNAT\n-   Name_Partition_ID                   : constant Name_Id := N + 384;\n-   Name_Passed_By_Reference            : constant Name_Id := N + 385; -- GNAT\n-   Name_Pool_Address                   : constant Name_Id := N + 386;\n-   Name_Pos                            : constant Name_Id := N + 387;\n-   Name_Position                       : constant Name_Id := N + 388;\n-   Name_Range                          : constant Name_Id := N + 389;\n-   Name_Range_Length                   : constant Name_Id := N + 390; -- GNAT\n-   Name_Round                          : constant Name_Id := N + 391;\n-   Name_Safe_Emax                      : constant Name_Id := N + 392; -- Ada 83\n-   Name_Safe_First                     : constant Name_Id := N + 393;\n-   Name_Safe_Large                     : constant Name_Id := N + 394; -- Ada 83\n-   Name_Safe_Last                      : constant Name_Id := N + 395;\n-   Name_Safe_Small                     : constant Name_Id := N + 396; -- Ada 83\n-   Name_Scale                          : constant Name_Id := N + 397;\n-   Name_Scaling                        : constant Name_Id := N + 398;\n-   Name_Signed_Zeros                   : constant Name_Id := N + 399;\n-   Name_Size                           : constant Name_Id := N + 400;\n-   Name_Small                          : constant Name_Id := N + 401;\n-   Name_Storage_Size                   : constant Name_Id := N + 402;\n-   Name_Storage_Unit                   : constant Name_Id := N + 403; -- GNAT\n-   Name_Tag                            : constant Name_Id := N + 404;\n-   Name_Target_Name                    : constant Name_Id := N + 405; -- GNAT\n-   Name_Terminated                     : constant Name_Id := N + 406;\n-   Name_To_Address                     : constant Name_Id := N + 407; -- GNAT\n-   Name_Type_Class                     : constant Name_Id := N + 408; -- GNAT\n-   Name_UET_Address                    : constant Name_Id := N + 409; -- GNAT\n-   Name_Unbiased_Rounding              : constant Name_Id := N + 410;\n-   Name_Unchecked_Access               : constant Name_Id := N + 411;\n-   Name_Unconstrained_Array            : constant Name_Id := N + 412;\n-   Name_Universal_Literal_String       : constant Name_Id := N + 413; -- GNAT\n-   Name_Unrestricted_Access            : constant Name_Id := N + 414; -- GNAT\n-   Name_VADS_Size                      : constant Name_Id := N + 415; -- GNAT\n-   Name_Val                            : constant Name_Id := N + 416;\n-   Name_Valid                          : constant Name_Id := N + 417;\n-   Name_Value_Size                     : constant Name_Id := N + 418; -- GNAT\n-   Name_Version                        : constant Name_Id := N + 419;\n-   Name_Wchar_T_Size                   : constant Name_Id := N + 420; -- GNAT\n-   Name_Wide_Width                     : constant Name_Id := N + 421;\n-   Name_Width                          : constant Name_Id := N + 422;\n-   Name_Word_Size                      : constant Name_Id := N + 423; -- GNAT\n+   First_Attribute_Name                : constant Name_Id := N + 325;\n+   Name_Abort_Signal                   : constant Name_Id := N + 325;  -- GNAT\n+   Name_Access                         : constant Name_Id := N + 326;\n+   Name_Address                        : constant Name_Id := N + 327;\n+   Name_Address_Size                   : constant Name_Id := N + 328;  -- GNAT\n+   Name_Aft                            : constant Name_Id := N + 329;\n+   Name_Alignment                      : constant Name_Id := N + 330;\n+   Name_Asm_Input                      : constant Name_Id := N + 331;  -- GNAT\n+   Name_Asm_Output                     : constant Name_Id := N + 332;  -- GNAT\n+   Name_AST_Entry                      : constant Name_Id := N + 333;  -- VMS\n+   Name_Bit                            : constant Name_Id := N + 334;  -- GNAT\n+   Name_Bit_Order                      : constant Name_Id := N + 335;\n+   Name_Bit_Position                   : constant Name_Id := N + 336;  -- GNAT\n+   Name_Body_Version                   : constant Name_Id := N + 337;\n+   Name_Callable                       : constant Name_Id := N + 338;\n+   Name_Caller                         : constant Name_Id := N + 339;\n+   Name_Code_Address                   : constant Name_Id := N + 340;  -- GNAT\n+   Name_Component_Size                 : constant Name_Id := N + 341;\n+   Name_Compose                        : constant Name_Id := N + 342;\n+   Name_Constrained                    : constant Name_Id := N + 343;\n+   Name_Count                          : constant Name_Id := N + 344;\n+   Name_Default_Bit_Order              : constant Name_Id := N + 345; -- GNAT\n+   Name_Definite                       : constant Name_Id := N + 346;\n+   Name_Delta                          : constant Name_Id := N + 347;\n+   Name_Denorm                         : constant Name_Id := N + 348;\n+   Name_Digits                         : constant Name_Id := N + 349;\n+   Name_Elaborated                     : constant Name_Id := N + 350; -- GNAT\n+   Name_Emax                           : constant Name_Id := N + 351; -- Ada 83\n+   Name_Enum_Rep                       : constant Name_Id := N + 352; -- GNAT\n+   Name_Epsilon                        : constant Name_Id := N + 353; -- Ada 83\n+   Name_Exponent                       : constant Name_Id := N + 354;\n+   Name_External_Tag                   : constant Name_Id := N + 355;\n+   Name_First                          : constant Name_Id := N + 356;\n+   Name_First_Bit                      : constant Name_Id := N + 357;\n+   Name_Fixed_Value                    : constant Name_Id := N + 358; -- GNAT\n+   Name_Fore                           : constant Name_Id := N + 359;\n+   Name_Has_Discriminants              : constant Name_Id := N + 360; -- GNAT\n+   Name_Identity                       : constant Name_Id := N + 361;\n+   Name_Img                            : constant Name_Id := N + 362; -- GNAT\n+   Name_Integer_Value                  : constant Name_Id := N + 363; -- GNAT\n+   Name_Large                          : constant Name_Id := N + 364; -- Ada 83\n+   Name_Last                           : constant Name_Id := N + 365;\n+   Name_Last_Bit                       : constant Name_Id := N + 366;\n+   Name_Leading_Part                   : constant Name_Id := N + 367;\n+   Name_Length                         : constant Name_Id := N + 368;\n+   Name_Machine_Emax                   : constant Name_Id := N + 369;\n+   Name_Machine_Emin                   : constant Name_Id := N + 370;\n+   Name_Machine_Mantissa               : constant Name_Id := N + 371;\n+   Name_Machine_Overflows              : constant Name_Id := N + 372;\n+   Name_Machine_Radix                  : constant Name_Id := N + 373;\n+   Name_Machine_Rounds                 : constant Name_Id := N + 374;\n+   Name_Machine_Size                   : constant Name_Id := N + 375; -- GNAT\n+   Name_Mantissa                       : constant Name_Id := N + 376; -- Ada 83\n+   Name_Max_Size_In_Storage_Elements   : constant Name_Id := N + 377;\n+   Name_Maximum_Alignment              : constant Name_Id := N + 378; -- GNAT\n+   Name_Mechanism_Code                 : constant Name_Id := N + 379; -- GNAT\n+   Name_Model_Emin                     : constant Name_Id := N + 380;\n+   Name_Model_Epsilon                  : constant Name_Id := N + 381;\n+   Name_Model_Mantissa                 : constant Name_Id := N + 382;\n+   Name_Model_Small                    : constant Name_Id := N + 383;\n+   Name_Modulus                        : constant Name_Id := N + 384;\n+   Name_Null_Parameter                 : constant Name_Id := N + 385; -- GNAT\n+   Name_Object_Size                    : constant Name_Id := N + 386; -- GNAT\n+   Name_Partition_ID                   : constant Name_Id := N + 387;\n+   Name_Passed_By_Reference            : constant Name_Id := N + 388; -- GNAT\n+   Name_Pool_Address                   : constant Name_Id := N + 389;\n+   Name_Pos                            : constant Name_Id := N + 390;\n+   Name_Position                       : constant Name_Id := N + 391;\n+   Name_Range                          : constant Name_Id := N + 392;\n+   Name_Range_Length                   : constant Name_Id := N + 393; -- GNAT\n+   Name_Round                          : constant Name_Id := N + 394;\n+   Name_Safe_Emax                      : constant Name_Id := N + 395; -- Ada 83\n+   Name_Safe_First                     : constant Name_Id := N + 396;\n+   Name_Safe_Large                     : constant Name_Id := N + 397; -- Ada 83\n+   Name_Safe_Last                      : constant Name_Id := N + 398;\n+   Name_Safe_Small                     : constant Name_Id := N + 399; -- Ada 83\n+   Name_Scale                          : constant Name_Id := N + 400;\n+   Name_Scaling                        : constant Name_Id := N + 401;\n+   Name_Signed_Zeros                   : constant Name_Id := N + 402;\n+   Name_Size                           : constant Name_Id := N + 403;\n+   Name_Small                          : constant Name_Id := N + 404;\n+   Name_Storage_Size                   : constant Name_Id := N + 405;\n+   Name_Storage_Unit                   : constant Name_Id := N + 406; -- GNAT\n+   Name_Tag                            : constant Name_Id := N + 407;\n+   Name_Target_Name                    : constant Name_Id := N + 408; -- GNAT\n+   Name_Terminated                     : constant Name_Id := N + 409;\n+   Name_To_Address                     : constant Name_Id := N + 410; -- GNAT\n+   Name_Type_Class                     : constant Name_Id := N + 411; -- GNAT\n+   Name_UET_Address                    : constant Name_Id := N + 412; -- GNAT\n+   Name_Unbiased_Rounding              : constant Name_Id := N + 413;\n+   Name_Unchecked_Access               : constant Name_Id := N + 414;\n+   Name_Unconstrained_Array            : constant Name_Id := N + 415;\n+   Name_Universal_Literal_String       : constant Name_Id := N + 416; -- GNAT\n+   Name_Unrestricted_Access            : constant Name_Id := N + 417; -- GNAT\n+   Name_VADS_Size                      : constant Name_Id := N + 418; -- GNAT\n+   Name_Val                            : constant Name_Id := N + 419;\n+   Name_Valid                          : constant Name_Id := N + 420;\n+   Name_Value_Size                     : constant Name_Id := N + 421; -- GNAT\n+   Name_Version                        : constant Name_Id := N + 422;\n+   Name_Wchar_T_Size                   : constant Name_Id := N + 423; -- GNAT\n+   Name_Wide_Width                     : constant Name_Id := N + 424;\n+   Name_Width                          : constant Name_Id := N + 425;\n+   Name_Word_Size                      : constant Name_Id := N + 426; -- GNAT\n \n    --  Attributes that designate attributes returning renamable functions,\n    --  i.e. functions that return other than a universal value.\n \n-   First_Renamable_Function_Attribute  : constant Name_Id := N + 424;\n-   Name_Adjacent                       : constant Name_Id := N + 424;\n-   Name_Ceiling                        : constant Name_Id := N + 425;\n-   Name_Copy_Sign                      : constant Name_Id := N + 426;\n-   Name_Floor                          : constant Name_Id := N + 427;\n-   Name_Fraction                       : constant Name_Id := N + 428;\n-   Name_Image                          : constant Name_Id := N + 429;\n-   Name_Input                          : constant Name_Id := N + 430;\n-   Name_Machine                        : constant Name_Id := N + 431;\n-   Name_Max                            : constant Name_Id := N + 432;\n-   Name_Min                            : constant Name_Id := N + 433;\n-   Name_Model                          : constant Name_Id := N + 434;\n-   Name_Pred                           : constant Name_Id := N + 435;\n-   Name_Remainder                      : constant Name_Id := N + 436;\n-   Name_Rounding                       : constant Name_Id := N + 437;\n-   Name_Succ                           : constant Name_Id := N + 438;\n-   Name_Truncation                     : constant Name_Id := N + 439;\n-   Name_Value                          : constant Name_Id := N + 440;\n-   Name_Wide_Image                     : constant Name_Id := N + 441;\n-   Name_Wide_Value                     : constant Name_Id := N + 442;\n-   Last_Renamable_Function_Attribute   : constant Name_Id := N + 442;\n+   First_Renamable_Function_Attribute  : constant Name_Id := N + 427;\n+   Name_Adjacent                       : constant Name_Id := N + 427;\n+   Name_Ceiling                        : constant Name_Id := N + 428;\n+   Name_Copy_Sign                      : constant Name_Id := N + 429;\n+   Name_Floor                          : constant Name_Id := N + 430;\n+   Name_Fraction                       : constant Name_Id := N + 431;\n+   Name_Image                          : constant Name_Id := N + 432;\n+   Name_Input                          : constant Name_Id := N + 433;\n+   Name_Machine                        : constant Name_Id := N + 434;\n+   Name_Max                            : constant Name_Id := N + 435;\n+   Name_Min                            : constant Name_Id := N + 436;\n+   Name_Model                          : constant Name_Id := N + 437;\n+   Name_Pred                           : constant Name_Id := N + 438;\n+   Name_Remainder                      : constant Name_Id := N + 439;\n+   Name_Rounding                       : constant Name_Id := N + 440;\n+   Name_Succ                           : constant Name_Id := N + 441;\n+   Name_Truncation                     : constant Name_Id := N + 442;\n+   Name_Value                          : constant Name_Id := N + 443;\n+   Name_Wide_Image                     : constant Name_Id := N + 444;\n+   Name_Wide_Value                     : constant Name_Id := N + 445;\n+   Last_Renamable_Function_Attribute   : constant Name_Id := N + 445;\n \n    --  Attributes that designate procedures\n \n-   First_Procedure_Attribute           : constant Name_Id := N + 443;\n-   Name_Output                         : constant Name_Id := N + 443;\n-   Name_Read                           : constant Name_Id := N + 444;\n-   Name_Write                          : constant Name_Id := N + 445;\n-   Last_Procedure_Attribute            : constant Name_Id := N + 445;\n+   First_Procedure_Attribute           : constant Name_Id := N + 446;\n+   Name_Output                         : constant Name_Id := N + 446;\n+   Name_Read                           : constant Name_Id := N + 447;\n+   Name_Write                          : constant Name_Id := N + 448;\n+   Last_Procedure_Attribute            : constant Name_Id := N + 448;\n \n    --  Remaining attributes are ones that return entities\n \n-   First_Entity_Attribute_Name         : constant Name_Id := N + 446;\n-   Name_Elab_Body                      : constant Name_Id := N + 446; -- GNAT\n-   Name_Elab_Spec                      : constant Name_Id := N + 447; -- GNAT\n-   Name_Storage_Pool                   : constant Name_Id := N + 448;\n+   First_Entity_Attribute_Name         : constant Name_Id := N + 449;\n+   Name_Elab_Body                      : constant Name_Id := N + 449; -- GNAT\n+   Name_Elab_Spec                      : constant Name_Id := N + 450; -- GNAT\n+   Name_Storage_Pool                   : constant Name_Id := N + 451;\n \n    --  These attributes are the ones that return types\n \n-   First_Type_Attribute_Name           : constant Name_Id := N + 449;\n-   Name_Base                           : constant Name_Id := N + 449;\n-   Name_Class                          : constant Name_Id := N + 450;\n-   Last_Type_Attribute_Name            : constant Name_Id := N + 450;\n-   Last_Entity_Attribute_Name          : constant Name_Id := N + 450;\n-   Last_Attribute_Name                 : constant Name_Id := N + 450;\n+   First_Type_Attribute_Name           : constant Name_Id := N + 452;\n+   Name_Base                           : constant Name_Id := N + 452;\n+   Name_Class                          : constant Name_Id := N + 453;\n+   Last_Type_Attribute_Name            : constant Name_Id := N + 453;\n+   Last_Entity_Attribute_Name          : constant Name_Id := N + 453;\n+   Last_Attribute_Name                 : constant Name_Id := N + 453;\n \n    --  Names of recognized locking policy identifiers\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. C for Ceiling_Locking). If new policy names are added,\n    --  the first character must be distinct.\n \n-   First_Locking_Policy_Name           : constant Name_Id := N + 451;\n-   Name_Ceiling_Locking                : constant Name_Id := N + 451;\n-   Name_Inheritance_Locking            : constant Name_Id := N + 452;\n-   Last_Locking_Policy_Name            : constant Name_Id := N + 452;\n+   First_Locking_Policy_Name           : constant Name_Id := N + 454;\n+   Name_Ceiling_Locking                : constant Name_Id := N + 454;\n+   Name_Inheritance_Locking            : constant Name_Id := N + 455;\n+   Last_Locking_Policy_Name            : constant Name_Id := N + 455;\n \n    --  Names of recognized queuing policy identifiers.\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. F for FIFO_Queuing). If new policy names are added,\n    --  the first character must be distinct.\n \n-   First_Queuing_Policy_Name           : constant Name_Id := N + 453;\n-   Name_FIFO_Queuing                   : constant Name_Id := N + 453;\n-   Name_Priority_Queuing               : constant Name_Id := N + 454;\n-   Last_Queuing_Policy_Name            : constant Name_Id := N + 454;\n+   First_Queuing_Policy_Name           : constant Name_Id := N + 456;\n+   Name_FIFO_Queuing                   : constant Name_Id := N + 456;\n+   Name_Priority_Queuing               : constant Name_Id := N + 457;\n+   Last_Queuing_Policy_Name            : constant Name_Id := N + 457;\n \n    --  Names of recognized task dispatching policy identifiers\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. F for FIFO_WIthinn_Priorities). If new policy names\n    --  are added, the first character must be distinct.\n \n-   First_Task_Dispatching_Policy_Name  : constant Name_Id := N + 455;\n-   Name_FIFO_Within_Priorities         : constant Name_Id := N + 455;\n-   Last_Task_Dispatching_Policy_Name   : constant Name_Id := N + 455;\n+   First_Task_Dispatching_Policy_Name  : constant Name_Id := N + 458;\n+   Name_FIFO_Within_Priorities         : constant Name_Id := N + 458;\n+   Last_Task_Dispatching_Policy_Name   : constant Name_Id := N + 458;\n \n    --  Names of recognized checks for pragma Suppress\n \n-   First_Check_Name                    : constant Name_Id := N + 456;\n-   Name_Access_Check                   : constant Name_Id := N + 456;\n-   Name_Accessibility_Check            : constant Name_Id := N + 457;\n-   Name_Discriminant_Check             : constant Name_Id := N + 458;\n-   Name_Division_Check                 : constant Name_Id := N + 459;\n-   Name_Elaboration_Check              : constant Name_Id := N + 460;\n-   Name_Index_Check                    : constant Name_Id := N + 461;\n-   Name_Length_Check                   : constant Name_Id := N + 462;\n-   Name_Overflow_Check                 : constant Name_Id := N + 463;\n-   Name_Range_Check                    : constant Name_Id := N + 464;\n-   Name_Storage_Check                  : constant Name_Id := N + 465;\n-   Name_Tag_Check                      : constant Name_Id := N + 466;\n-   Name_All_Checks                     : constant Name_Id := N + 467;\n-   Last_Check_Name                     : constant Name_Id := N + 467;\n+   First_Check_Name                    : constant Name_Id := N + 459;\n+   Name_Access_Check                   : constant Name_Id := N + 459;\n+   Name_Accessibility_Check            : constant Name_Id := N + 460;\n+   Name_Discriminant_Check             : constant Name_Id := N + 461;\n+   Name_Division_Check                 : constant Name_Id := N + 462;\n+   Name_Elaboration_Check              : constant Name_Id := N + 463;\n+   Name_Index_Check                    : constant Name_Id := N + 464;\n+   Name_Length_Check                   : constant Name_Id := N + 465;\n+   Name_Overflow_Check                 : constant Name_Id := N + 466;\n+   Name_Range_Check                    : constant Name_Id := N + 467;\n+   Name_Storage_Check                  : constant Name_Id := N + 468;\n+   Name_Tag_Check                      : constant Name_Id := N + 469;\n+   Name_All_Checks                     : constant Name_Id := N + 470;\n+   Last_Check_Name                     : constant Name_Id := N + 470;\n \n    --  Names corresponding to reserved keywords, excluding those already\n    --  declared in the attribute list (Access, Delta, Digits, Range).\n \n-   Name_Abort                          : constant Name_Id := N + 468;\n-   Name_Abs                            : constant Name_Id := N + 469;\n-   Name_Accept                         : constant Name_Id := N + 470;\n-   Name_And                            : constant Name_Id := N + 471;\n-   Name_All                            : constant Name_Id := N + 472;\n-   Name_Array                          : constant Name_Id := N + 473;\n-   Name_At                             : constant Name_Id := N + 474;\n-   Name_Begin                          : constant Name_Id := N + 475;\n-   Name_Body                           : constant Name_Id := N + 476;\n-   Name_Case                           : constant Name_Id := N + 477;\n-   Name_Constant                       : constant Name_Id := N + 478;\n-   Name_Declare                        : constant Name_Id := N + 479;\n-   Name_Delay                          : constant Name_Id := N + 480;\n-   Name_Do                             : constant Name_Id := N + 481;\n-   Name_Else                           : constant Name_Id := N + 482;\n-   Name_Elsif                          : constant Name_Id := N + 483;\n-   Name_End                            : constant Name_Id := N + 484;\n-   Name_Entry                          : constant Name_Id := N + 485;\n-   Name_Exception                      : constant Name_Id := N + 486;\n-   Name_Exit                           : constant Name_Id := N + 487;\n-   Name_For                            : constant Name_Id := N + 488;\n-   Name_Function                       : constant Name_Id := N + 489;\n-   Name_Generic                        : constant Name_Id := N + 490;\n-   Name_Goto                           : constant Name_Id := N + 491;\n-   Name_If                             : constant Name_Id := N + 492;\n-   Name_In                             : constant Name_Id := N + 493;\n-   Name_Is                             : constant Name_Id := N + 494;\n-   Name_Limited                        : constant Name_Id := N + 495;\n-   Name_Loop                           : constant Name_Id := N + 496;\n-   Name_Mod                            : constant Name_Id := N + 497;\n-   Name_New                            : constant Name_Id := N + 498;\n-   Name_Not                            : constant Name_Id := N + 499;\n-   Name_Null                           : constant Name_Id := N + 500;\n-   Name_Of                             : constant Name_Id := N + 501;\n-   Name_Or                             : constant Name_Id := N + 502;\n-   Name_Others                         : constant Name_Id := N + 503;\n-   Name_Out                            : constant Name_Id := N + 504;\n-   Name_Package                        : constant Name_Id := N + 505;\n-   Name_Pragma                         : constant Name_Id := N + 506;\n-   Name_Private                        : constant Name_Id := N + 507;\n-   Name_Procedure                      : constant Name_Id := N + 508;\n-   Name_Raise                          : constant Name_Id := N + 509;\n-   Name_Record                         : constant Name_Id := N + 510;\n-   Name_Rem                            : constant Name_Id := N + 511;\n-   Name_Renames                        : constant Name_Id := N + 512;\n-   Name_Return                         : constant Name_Id := N + 513;\n-   Name_Reverse                        : constant Name_Id := N + 514;\n-   Name_Select                         : constant Name_Id := N + 515;\n-   Name_Separate                       : constant Name_Id := N + 516;\n-   Name_Subtype                        : constant Name_Id := N + 517;\n-   Name_Task                           : constant Name_Id := N + 518;\n-   Name_Terminate                      : constant Name_Id := N + 519;\n-   Name_Then                           : constant Name_Id := N + 520;\n-   Name_Type                           : constant Name_Id := N + 521;\n-   Name_Use                            : constant Name_Id := N + 522;\n-   Name_When                           : constant Name_Id := N + 523;\n-   Name_While                          : constant Name_Id := N + 524;\n-   Name_With                           : constant Name_Id := N + 525;\n-   Name_Xor                            : constant Name_Id := N + 526;\n+   Name_Abort                          : constant Name_Id := N + 471;\n+   Name_Abs                            : constant Name_Id := N + 472;\n+   Name_Accept                         : constant Name_Id := N + 473;\n+   Name_And                            : constant Name_Id := N + 474;\n+   Name_All                            : constant Name_Id := N + 475;\n+   Name_Array                          : constant Name_Id := N + 476;\n+   Name_At                             : constant Name_Id := N + 477;\n+   Name_Begin                          : constant Name_Id := N + 478;\n+   Name_Body                           : constant Name_Id := N + 479;\n+   Name_Case                           : constant Name_Id := N + 480;\n+   Name_Constant                       : constant Name_Id := N + 481;\n+   Name_Declare                        : constant Name_Id := N + 482;\n+   Name_Delay                          : constant Name_Id := N + 483;\n+   Name_Do                             : constant Name_Id := N + 484;\n+   Name_Else                           : constant Name_Id := N + 485;\n+   Name_Elsif                          : constant Name_Id := N + 486;\n+   Name_End                            : constant Name_Id := N + 487;\n+   Name_Entry                          : constant Name_Id := N + 488;\n+   Name_Exception                      : constant Name_Id := N + 489;\n+   Name_Exit                           : constant Name_Id := N + 490;\n+   Name_For                            : constant Name_Id := N + 491;\n+   Name_Function                       : constant Name_Id := N + 492;\n+   Name_Generic                        : constant Name_Id := N + 493;\n+   Name_Goto                           : constant Name_Id := N + 494;\n+   Name_If                             : constant Name_Id := N + 495;\n+   Name_In                             : constant Name_Id := N + 496;\n+   Name_Is                             : constant Name_Id := N + 497;\n+   Name_Limited                        : constant Name_Id := N + 498;\n+   Name_Loop                           : constant Name_Id := N + 499;\n+   Name_Mod                            : constant Name_Id := N + 500;\n+   Name_New                            : constant Name_Id := N + 501;\n+   Name_Not                            : constant Name_Id := N + 502;\n+   Name_Null                           : constant Name_Id := N + 503;\n+   Name_Of                             : constant Name_Id := N + 504;\n+   Name_Or                             : constant Name_Id := N + 505;\n+   Name_Others                         : constant Name_Id := N + 506;\n+   Name_Out                            : constant Name_Id := N + 507;\n+   Name_Package                        : constant Name_Id := N + 508;\n+   Name_Pragma                         : constant Name_Id := N + 509;\n+   Name_Private                        : constant Name_Id := N + 510;\n+   Name_Procedure                      : constant Name_Id := N + 511;\n+   Name_Raise                          : constant Name_Id := N + 512;\n+   Name_Record                         : constant Name_Id := N + 513;\n+   Name_Rem                            : constant Name_Id := N + 514;\n+   Name_Renames                        : constant Name_Id := N + 515;\n+   Name_Return                         : constant Name_Id := N + 516;\n+   Name_Reverse                        : constant Name_Id := N + 517;\n+   Name_Select                         : constant Name_Id := N + 518;\n+   Name_Separate                       : constant Name_Id := N + 519;\n+   Name_Subtype                        : constant Name_Id := N + 520;\n+   Name_Task                           : constant Name_Id := N + 521;\n+   Name_Terminate                      : constant Name_Id := N + 522;\n+   Name_Then                           : constant Name_Id := N + 523;\n+   Name_Type                           : constant Name_Id := N + 524;\n+   Name_Use                            : constant Name_Id := N + 525;\n+   Name_When                           : constant Name_Id := N + 526;\n+   Name_While                          : constant Name_Id := N + 527;\n+   Name_With                           : constant Name_Id := N + 528;\n+   Name_Xor                            : constant Name_Id := N + 529;\n \n    --  Names of intrinsic subprograms\n \n    --  Note: Asm is missing from this list, since Asm is a legitimate\n    --  convention name. So is To_Adress, which is a GNAT attribute.\n \n-   First_Intrinsic_Name                : constant Name_Id := N + 527;\n-   Name_Divide                         : constant Name_Id := N + 527;\n-   Name_Enclosing_Entity               : constant Name_Id := N + 528;\n-   Name_Exception_Information          : constant Name_Id := N + 529;\n-   Name_Exception_Message              : constant Name_Id := N + 530;\n-   Name_Exception_Name                 : constant Name_Id := N + 531;\n-   Name_File                           : constant Name_Id := N + 532;\n-   Name_Import_Address                 : constant Name_Id := N + 533;\n-   Name_Import_Largest_Value           : constant Name_Id := N + 534;\n-   Name_Import_Value                   : constant Name_Id := N + 535;\n-   Name_Is_Negative                    : constant Name_Id := N + 536;\n-   Name_Line                           : constant Name_Id := N + 537;\n-   Name_Rotate_Left                    : constant Name_Id := N + 538;\n-   Name_Rotate_Right                   : constant Name_Id := N + 539;\n-   Name_Shift_Left                     : constant Name_Id := N + 540;\n-   Name_Shift_Right                    : constant Name_Id := N + 541;\n-   Name_Shift_Right_Arithmetic         : constant Name_Id := N + 542;\n-   Name_Source_Location                : constant Name_Id := N + 543;\n-   Name_Unchecked_Conversion           : constant Name_Id := N + 544;\n-   Name_Unchecked_Deallocation         : constant Name_Id := N + 545;\n-   Name_To_Pointer                     : constant Name_Id := N + 546;\n-   Last_Intrinsic_Name                 : constant Name_Id := N + 546;\n+   First_Intrinsic_Name                : constant Name_Id := N + 530;\n+   Name_Divide                         : constant Name_Id := N + 530;\n+   Name_Enclosing_Entity               : constant Name_Id := N + 531;\n+   Name_Exception_Information          : constant Name_Id := N + 532;\n+   Name_Exception_Message              : constant Name_Id := N + 533;\n+   Name_Exception_Name                 : constant Name_Id := N + 534;\n+   Name_File                           : constant Name_Id := N + 535;\n+   Name_Import_Address                 : constant Name_Id := N + 536;\n+   Name_Import_Largest_Value           : constant Name_Id := N + 537;\n+   Name_Import_Value                   : constant Name_Id := N + 538;\n+   Name_Is_Negative                    : constant Name_Id := N + 539;\n+   Name_Line                           : constant Name_Id := N + 540;\n+   Name_Rotate_Left                    : constant Name_Id := N + 541;\n+   Name_Rotate_Right                   : constant Name_Id := N + 542;\n+   Name_Shift_Left                     : constant Name_Id := N + 543;\n+   Name_Shift_Right                    : constant Name_Id := N + 544;\n+   Name_Shift_Right_Arithmetic         : constant Name_Id := N + 545;\n+   Name_Source_Location                : constant Name_Id := N + 546;\n+   Name_Unchecked_Conversion           : constant Name_Id := N + 547;\n+   Name_Unchecked_Deallocation         : constant Name_Id := N + 548;\n+   Name_To_Pointer                     : constant Name_Id := N + 549;\n+   Last_Intrinsic_Name                 : constant Name_Id := N + 549;\n \n    --  Reserved words used only in Ada 95\n \n-   First_95_Reserved_Word              : constant Name_Id := N + 547;\n-   Name_Abstract                       : constant Name_Id := N + 547;\n-   Name_Aliased                        : constant Name_Id := N + 548;\n-   Name_Protected                      : constant Name_Id := N + 549;\n-   Name_Until                          : constant Name_Id := N + 550;\n-   Name_Requeue                        : constant Name_Id := N + 551;\n-   Name_Tagged                         : constant Name_Id := N + 552;\n-   Last_95_Reserved_Word               : constant Name_Id := N + 552;\n+   First_95_Reserved_Word              : constant Name_Id := N + 550;\n+   Name_Abstract                       : constant Name_Id := N + 550;\n+   Name_Aliased                        : constant Name_Id := N + 551;\n+   Name_Protected                      : constant Name_Id := N + 552;\n+   Name_Until                          : constant Name_Id := N + 553;\n+   Name_Requeue                        : constant Name_Id := N + 554;\n+   Name_Tagged                         : constant Name_Id := N + 555;\n+   Last_95_Reserved_Word               : constant Name_Id := N + 555;\n \n    subtype Ada_95_Reserved_Words is\n      Name_Id range First_95_Reserved_Word .. Last_95_Reserved_Word;\n \n    --  Miscellaneous names used in semantic checking\n \n-   Name_Raise_Exception                : constant Name_Id := N + 553;\n+   Name_Raise_Exception                : constant Name_Id := N + 556;\n \n    --  Additional reserved words in GNAT Project Files\n    --  Note that Name_External is already previously declared\n \n-   Name_Binder                         : constant Name_Id := N + 554;\n-   Name_Body_Suffix                    : constant Name_Id := N + 555;\n-   Name_Builder                        : constant Name_Id := N + 556;\n-   Name_Compiler                       : constant Name_Id := N + 557;\n-   Name_Cross_Reference                : constant Name_Id := N + 558;\n-   Name_Default_Switches               : constant Name_Id := N + 559;\n-   Name_Exec_Dir                       : constant Name_Id := N + 560;\n-   Name_Executable                     : constant Name_Id := N + 561;\n-   Name_Executable_Suffix              : constant Name_Id := N + 562;\n-   Name_Extends                        : constant Name_Id := N + 563;\n-   Name_Finder                         : constant Name_Id := N + 564;\n-   Name_Global_Configuration_Pragmas   : constant Name_Id := N + 565;\n-   Name_Gnatls                         : constant Name_Id := N + 566;\n-   Name_Gnatstub                       : constant Name_Id := N + 567;\n-   Name_Implementation                 : constant Name_Id := N + 568;\n-   Name_Implementation_Exceptions      : constant Name_Id := N + 569;\n-   Name_Implementation_Suffix          : constant Name_Id := N + 570;\n-   Name_Languages                      : constant Name_Id := N + 571;\n-   Name_Library_Dir                    : constant Name_Id := N + 572;\n-   Name_Library_Auto_Init              : constant Name_Id := N + 573;\n-   Name_Library_GCC                    : constant Name_Id := N + 574;\n-   Name_Library_Interface              : constant Name_Id := N + 575;\n-   Name_Library_Kind                   : constant Name_Id := N + 576;\n-   Name_Library_Name                   : constant Name_Id := N + 577;\n-   Name_Library_Options                : constant Name_Id := N + 578;\n-   Name_Library_Reference_Symbol_File  : constant Name_Id := N + 579;\n-   Name_Library_Src_Dir                : constant Name_Id := N + 580;\n-   Name_Library_Symbol_File            : constant Name_Id := N + 581;\n-   Name_Library_Symbol_Policy          : constant Name_Id := N + 582;\n-   Name_Library_Version                : constant Name_Id := N + 583;\n-   Name_Linker                         : constant Name_Id := N + 584;\n-   Name_Local_Configuration_Pragmas    : constant Name_Id := N + 585;\n-   Name_Locally_Removed_Files          : constant Name_Id := N + 586;\n-   Name_Naming                         : constant Name_Id := N + 587;\n-   Name_Object_Dir                     : constant Name_Id := N + 588;\n-   Name_Pretty_Printer                 : constant Name_Id := N + 589;\n-   Name_Project                        : constant Name_Id := N + 590;\n-   Name_Separate_Suffix                : constant Name_Id := N + 591;\n-   Name_Source_Dirs                    : constant Name_Id := N + 592;\n-   Name_Source_Files                   : constant Name_Id := N + 593;\n-   Name_Source_List_File               : constant Name_Id := N + 594;\n-   Name_Spec                           : constant Name_Id := N + 595;\n-   Name_Spec_Suffix                    : constant Name_Id := N + 596;\n-   Name_Specification                  : constant Name_Id := N + 597;\n-   Name_Specification_Exceptions       : constant Name_Id := N + 598;\n-   Name_Specification_Suffix           : constant Name_Id := N + 599;\n-   Name_Switches                       : constant Name_Id := N + 600;\n+   Name_Binder                         : constant Name_Id := N + 557;\n+   Name_Body_Suffix                    : constant Name_Id := N + 558;\n+   Name_Builder                        : constant Name_Id := N + 559;\n+   Name_Compiler                       : constant Name_Id := N + 560;\n+   Name_Cross_Reference                : constant Name_Id := N + 561;\n+   Name_Default_Switches               : constant Name_Id := N + 562;\n+   Name_Exec_Dir                       : constant Name_Id := N + 563;\n+   Name_Executable                     : constant Name_Id := N + 564;\n+   Name_Executable_Suffix              : constant Name_Id := N + 565;\n+   Name_Extends                        : constant Name_Id := N + 566;\n+   Name_Finder                         : constant Name_Id := N + 567;\n+   Name_Global_Configuration_Pragmas   : constant Name_Id := N + 568;\n+   Name_Gnatls                         : constant Name_Id := N + 569;\n+   Name_Gnatstub                       : constant Name_Id := N + 570;\n+   Name_Implementation                 : constant Name_Id := N + 571;\n+   Name_Implementation_Exceptions      : constant Name_Id := N + 572;\n+   Name_Implementation_Suffix          : constant Name_Id := N + 573;\n+   Name_Languages                      : constant Name_Id := N + 574;\n+   Name_Library_Dir                    : constant Name_Id := N + 575;\n+   Name_Library_Auto_Init              : constant Name_Id := N + 576;\n+   Name_Library_GCC                    : constant Name_Id := N + 577;\n+   Name_Library_Interface              : constant Name_Id := N + 578;\n+   Name_Library_Kind                   : constant Name_Id := N + 579;\n+   Name_Library_Name                   : constant Name_Id := N + 580;\n+   Name_Library_Options                : constant Name_Id := N + 581;\n+   Name_Library_Reference_Symbol_File  : constant Name_Id := N + 582;\n+   Name_Library_Src_Dir                : constant Name_Id := N + 583;\n+   Name_Library_Symbol_File            : constant Name_Id := N + 584;\n+   Name_Library_Symbol_Policy          : constant Name_Id := N + 585;\n+   Name_Library_Version                : constant Name_Id := N + 586;\n+   Name_Linker                         : constant Name_Id := N + 587;\n+   Name_Local_Configuration_Pragmas    : constant Name_Id := N + 588;\n+   Name_Locally_Removed_Files          : constant Name_Id := N + 589;\n+   Name_Naming                         : constant Name_Id := N + 590;\n+   Name_Object_Dir                     : constant Name_Id := N + 591;\n+   Name_Pretty_Printer                 : constant Name_Id := N + 592;\n+   Name_Project                        : constant Name_Id := N + 593;\n+   Name_Separate_Suffix                : constant Name_Id := N + 594;\n+   Name_Source_Dirs                    : constant Name_Id := N + 595;\n+   Name_Source_Files                   : constant Name_Id := N + 596;\n+   Name_Source_List_File               : constant Name_Id := N + 597;\n+   Name_Spec                           : constant Name_Id := N + 598;\n+   Name_Spec_Suffix                    : constant Name_Id := N + 599;\n+   Name_Specification                  : constant Name_Id := N + 600;\n+   Name_Specification_Exceptions       : constant Name_Id := N + 601;\n+   Name_Specification_Suffix           : constant Name_Id := N + 602;\n+   Name_Switches                       : constant Name_Id := N + 603;\n    --  Other miscellaneous names used in front end\n \n-   Name_Unaligned_Valid                : constant Name_Id := N + 601;\n+   Name_Unaligned_Valid                : constant Name_Id := N + 604;\n \n    --  Mark last defined name for consistency check in Snames body\n \n-   Last_Predefined_Name                : constant Name_Id := N + 601;\n+   Last_Predefined_Name                : constant Name_Id := N + 604;\n \n    subtype Any_Operator_Name is Name_Id range\n      First_Operator_Name .. Last_Operator_Name;"}]}